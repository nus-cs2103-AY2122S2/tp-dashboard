[{"path":"README.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"WJunHong"},"content":"[![CI Status](https://github.com/AY2122S2-CS2103T-T11-2/tp/workflows/Java%20CI/badge.svg)](https://github.com/AY2122S2-CS2103T-T11-2/tp/actions)","lastModifiedDate":"2022-03-04"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":3,"author":{"gitId":"WJunHong"},"content":"![Ui](docs/images/UI.png)","lastModifiedDate":"2022-03-31"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":5,"author":{"gitId":"janald99"},"content":"* This is **an ongoing project for CS2103T-T11-2 team**.\u003cbr\u003e","lastModifiedDate":"2022-02-25"},{"lineNumber":6,"author":{"gitId":"-"},"content":"  Example usages:","lastModifiedDate":"2020-05-23"},{"lineNumber":7,"author":{"gitId":"janald99"},"content":"  * managing clients for housing agents.","lastModifiedDate":"2022-02-25"},{"lineNumber":8,"author":{"gitId":"janald99"},"content":"* The project simulates an ongoing software project for a desktop application (called _AgentSee_) used for managing client details.","lastModifiedDate":"2022-02-25"},{"lineNumber":9,"author":{"gitId":"janald99"},"content":"  * It is **written in OOP fashion**.","lastModifiedDate":"2022-02-25"},{"lineNumber":10,"author":{"gitId":"-"},"content":"  * It comes with a **reasonable level of user and developer documentation**.","lastModifiedDate":"2020-05-23"},{"lineNumber":11,"author":{"gitId":"janald99"},"content":"* It is named `AgentSee` because it is meant to help housing agents manage their clients.","lastModifiedDate":"2022-02-25"},{"lineNumber":12,"author":{"gitId":"janald99"},"content":"* For the detailed documentation of this project, see the **[AgentSee Product Website](https://ay2122s2-cs2103t-t11-2.github.io/tp/)**.","lastModifiedDate":"2022-02-25"},{"lineNumber":13,"author":{"gitId":"janald99"},"content":"* This project is based on the AddressBook-Level3 project created by the [SE-EDU initiative](https://se-education.org).","lastModifiedDate":"2022-02-25"}],"authorContributionMap":{"janald99":7,"WJunHong":2,"-":4}},{"path":"build.gradle","fileType":"other","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"plugins {","lastModifiedDate":"2016-08-29"},{"lineNumber":2,"author":{"gitId":"-"},"content":"    id \u0027java\u0027","lastModifiedDate":"2017-12-05"},{"lineNumber":3,"author":{"gitId":"-"},"content":"    id \u0027checkstyle\u0027","lastModifiedDate":"2017-12-05"},{"lineNumber":4,"author":{"gitId":"-"},"content":"    id \u0027com.github.johnrengelman.shadow\u0027 version \u00274.0.4\u0027","lastModifiedDate":"2019-02-28"},{"lineNumber":5,"author":{"gitId":"-"},"content":"    id \u0027application\u0027","lastModifiedDate":"2016-12-08"},{"lineNumber":6,"author":{"gitId":"-"},"content":"    id \u0027jacoco\u0027","lastModifiedDate":"2020-08-07"},{"lineNumber":7,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-29"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-29"},{"lineNumber":9,"author":{"gitId":"-"},"content":"mainClassName \u003d \u0027seedu.address.Main\u0027","lastModifiedDate":"2019-02-08"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-08"},{"lineNumber":11,"author":{"gitId":"-"},"content":"sourceCompatibility \u003d JavaVersion.VERSION_11","lastModifiedDate":"2019-02-20"},{"lineNumber":12,"author":{"gitId":"-"},"content":"targetCompatibility \u003d JavaVersion.VERSION_11","lastModifiedDate":"2019-02-20"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":14,"author":{"gitId":"-"},"content":"repositories {","lastModifiedDate":"2016-08-08"},{"lineNumber":15,"author":{"gitId":"-"},"content":"    mavenCentral()","lastModifiedDate":"2016-08-08"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    maven { url \u0027https://oss.sonatype.org/content/repositories/snapshots/\u0027 }","lastModifiedDate":"2018-04-11"},{"lineNumber":17,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":19,"author":{"gitId":"-"},"content":"checkstyle {","lastModifiedDate":"2016-10-12"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    toolVersion \u003d \u00278.29\u0027","lastModifiedDate":"2020-05-27"},{"lineNumber":21,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-10-12"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-12"},{"lineNumber":23,"author":{"gitId":"-"},"content":"test {","lastModifiedDate":"2018-03-23"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    useJUnitPlatform()","lastModifiedDate":"2018-03-23"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    finalizedBy jacocoTestReport","lastModifiedDate":"2020-08-07"},{"lineNumber":26,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-08-07"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-08-07"},{"lineNumber":28,"author":{"gitId":"-"},"content":"task coverage(type: JacocoReport) {","lastModifiedDate":"2020-08-07"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    sourceDirectories.from files(sourceSets.main.allSource.srcDirs)","lastModifiedDate":"2020-08-07"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    classDirectories.from files(sourceSets.main.output)","lastModifiedDate":"2020-08-07"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    executionData.from files(jacocoTestReport.executionData)","lastModifiedDate":"2020-08-07"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    afterEvaluate {","lastModifiedDate":"2020-08-07"},{"lineNumber":33,"author":{"gitId":"-"},"content":"        classDirectories.from files(classDirectories.files.collect {","lastModifiedDate":"2020-08-07"},{"lineNumber":34,"author":{"gitId":"-"},"content":"            fileTree(dir: it, exclude: [\u0027**/*.jar\u0027])","lastModifiedDate":"2020-08-07"},{"lineNumber":35,"author":{"gitId":"-"},"content":"        })","lastModifiedDate":"2020-08-07"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2020-08-07"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    reports {","lastModifiedDate":"2020-08-07"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        html.enabled \u003d true","lastModifiedDate":"2020-08-07"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        xml.enabled \u003d true","lastModifiedDate":"2020-08-07"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2020-08-07"},{"lineNumber":41,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2018-03-23"},{"lineNumber":42,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-03-23"},{"lineNumber":43,"author":{"gitId":"-"},"content":"dependencies {","lastModifiedDate":"2016-08-08"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    String jUnitVersion \u003d \u00275.4.0\u0027","lastModifiedDate":"2019-02-10"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    String javaFxVersion \u003d \u002711\u0027","lastModifiedDate":"2019-02-08"},{"lineNumber":46,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-02-08"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027win\u0027","lastModifiedDate":"2019-02-19"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027mac\u0027","lastModifiedDate":"2019-02-19"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027linux\u0027","lastModifiedDate":"2019-02-19"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027win\u0027","lastModifiedDate":"2019-02-19"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027mac\u0027","lastModifiedDate":"2019-02-19"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027linux\u0027","lastModifiedDate":"2019-02-19"},{"lineNumber":53,"author":{"gitId":"-"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027win\u0027","lastModifiedDate":"2019-02-19"},{"lineNumber":54,"author":{"gitId":"-"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027mac\u0027","lastModifiedDate":"2019-02-19"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027linux\u0027","lastModifiedDate":"2019-02-19"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027win\u0027","lastModifiedDate":"2019-02-19"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027mac\u0027","lastModifiedDate":"2019-02-19"},{"lineNumber":58,"author":{"gitId":"-"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027linux\u0027","lastModifiedDate":"2019-02-19"},{"lineNumber":59,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-12-05"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    implementation group: \u0027com.fasterxml.jackson.core\u0027, name: \u0027jackson-databind\u0027, version: \u00272.7.0\u0027","lastModifiedDate":"2018-03-29"},{"lineNumber":61,"author":{"gitId":"-"},"content":"    implementation group: \u0027com.fasterxml.jackson.datatype\u0027, name: \u0027jackson-datatype-jsr310\u0027, version: \u00272.7.4\u0027","lastModifiedDate":"2018-03-29"},{"lineNumber":62,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-12-05"},{"lineNumber":63,"author":{"gitId":"-"},"content":"    testImplementation group: \u0027org.junit.jupiter\u0027, name: \u0027junit-jupiter-api\u0027, version: jUnitVersion","lastModifiedDate":"2018-03-23"},{"lineNumber":64,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-03-23"},{"lineNumber":65,"author":{"gitId":"-"},"content":"    testRuntimeOnly group: \u0027org.junit.jupiter\u0027, name: \u0027junit-jupiter-engine\u0027, version: jUnitVersion","lastModifiedDate":"2018-03-23"},{"lineNumber":66,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":67,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-29"},{"lineNumber":68,"author":{"gitId":"-"},"content":"shadowJar {","lastModifiedDate":"2016-08-29"},{"lineNumber":69,"author":{"gitId":"-"},"content":"    archiveName \u003d \u0027addressbook.jar\u0027","lastModifiedDate":"2018-04-11"},{"lineNumber":70,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-29"},{"lineNumber":71,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":72,"author":{"gitId":"janald99"},"content":"run {","lastModifiedDate":"2022-03-23"},{"lineNumber":73,"author":{"gitId":"janald99"},"content":"    enableAssertions \u003d true","lastModifiedDate":"2022-03-23"},{"lineNumber":74,"author":{"gitId":"janald99"},"content":"}","lastModifiedDate":"2022-03-23"},{"lineNumber":75,"author":{"gitId":"janald99"},"content":"","lastModifiedDate":"2022-03-23"},{"lineNumber":76,"author":{"gitId":"-"},"content":"defaultTasks \u0027clean\u0027, \u0027test\u0027","lastModifiedDate":"2020-05-23"}],"authorContributionMap":{"janald99":4,"-":72}},{"path":"docs/AboutUs.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"---","lastModifiedDate":"2020-05-23"},{"lineNumber":2,"author":{"gitId":"-"},"content":"layout: page","lastModifiedDate":"2020-05-23"},{"lineNumber":3,"author":{"gitId":"-"},"content":"title: About Us","lastModifiedDate":"2020-05-23"},{"lineNumber":4,"author":{"gitId":"-"},"content":"---","lastModifiedDate":"2020-05-23"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":6,"author":{"gitId":"-"},"content":"We are a team based in the [School of Computing, National University of Singapore](http://www.comp.nus.edu.sg).","lastModifiedDate":"2020-05-23"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":8,"author":{"gitId":"-"},"content":"You can reach us at the email `seer[at]comp.nus.edu.sg`","lastModifiedDate":"2020-06-17"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-06-17"},{"lineNumber":10,"author":{"gitId":"-"},"content":"## Project team","lastModifiedDate":"2020-06-07"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":12,"author":{"gitId":"Jacky142857"},"content":"### Bian Yuqi","lastModifiedDate":"2022-03-01"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":14,"author":{"gitId":"janald99"},"content":"\u003cimg src\u003d\"images/jacky142857.png\" width\u003d\"200px\"\u003e","lastModifiedDate":"2022-03-03"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":16,"author":{"gitId":"Jacky142857"},"content":"[[homepage](https://github.com/Jacky142857)]","lastModifiedDate":"2022-03-01"},{"lineNumber":17,"author":{"gitId":"Jacky142857"},"content":"[[portfolio](team/jacky142857.md)]","lastModifiedDate":"2022-03-01"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":19,"author":{"gitId":"Jacky142857"},"content":"* Role: Developer","lastModifiedDate":"2022-03-01"},{"lineNumber":20,"author":{"gitId":"Jacky142857"},"content":"* Responsibilities: Documentation and testing.","lastModifiedDate":"2022-03-01"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":22,"author":{"gitId":"chuashihong"},"content":"### Chua Shi Hong","lastModifiedDate":"2022-02-27"},{"lineNumber":23,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":24,"author":{"gitId":"chuashihong"},"content":"\u003cimg src\u003d\"images/chuashihong.png\" width\u003d\"200px\"\u003e","lastModifiedDate":"2022-02-27"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":26,"author":{"gitId":"chuashihong"},"content":"[[github](https://github.com/chuashihong)]","lastModifiedDate":"2022-02-27"},{"lineNumber":27,"author":{"gitId":"chuashihong"},"content":"[[portfolio](team/chuashihong.md)]","lastModifiedDate":"2022-02-27"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":29,"author":{"gitId":"chuashihong"},"content":"* Role: Developer","lastModifiedDate":"2022-02-27"},{"lineNumber":30,"author":{"gitId":"chuashihong"},"content":"* Responsibilities: Testing, UI","lastModifiedDate":"2022-02-27"},{"lineNumber":31,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":32,"author":{"gitId":"janald99"},"content":"### Ho Qi Yuan, Janald","lastModifiedDate":"2022-02-25"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":34,"author":{"gitId":"janald99"},"content":"\u003cimg src\u003d\"images/janald99.png\" width\u003d\"200px\"\u003e","lastModifiedDate":"2022-02-25"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":36,"author":{"gitId":"janald99"},"content":"[[github](http://github.com/janald99)] [[portfolio](team/janald99.md)]","lastModifiedDate":"2022-02-25"},{"lineNumber":37,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":38,"author":{"gitId":"-"},"content":"* Role: Developer","lastModifiedDate":"2020-05-23"},{"lineNumber":39,"author":{"gitId":"janald99"},"content":"* Responsibilities: Code Quality, Documentation","lastModifiedDate":"2022-02-25"},{"lineNumber":40,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":41,"author":{"gitId":"WJunHong"},"content":"### Wang Jun Hong","lastModifiedDate":"2022-02-25"},{"lineNumber":42,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":43,"author":{"gitId":"WJunHong"},"content":"\u003cimg src\u003d\"images/wjunhong.png\" width\u003d\"200px\"\u003e","lastModifiedDate":"2022-02-25"},{"lineNumber":44,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":45,"author":{"gitId":"WJunHong"},"content":"[[github](http://github.com/WJunHong)]","lastModifiedDate":"2022-02-25"},{"lineNumber":46,"author":{"gitId":"WJunHong"},"content":"[[portfolio](team/wjunhong.md)]","lastModifiedDate":"2022-02-25"},{"lineNumber":47,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":48,"author":{"gitId":"WJunHong"},"content":"* Role: Team Lead","lastModifiedDate":"2022-02-25"},{"lineNumber":49,"author":{"gitId":"WJunHong"},"content":"* Responsibilities: Ensure overall team coordination","lastModifiedDate":"2022-02-25"},{"lineNumber":50,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-03-01"},{"lineNumber":51,"author":{"gitId":"cwnm"},"content":"### Phua Jun Heng","lastModifiedDate":"2022-03-02"},{"lineNumber":52,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-03-02"},{"lineNumber":53,"author":{"gitId":"cwnm"},"content":"\u003cimg src\u003d\"images/cwnm.png\" width\u003d\"200px\"\u003e","lastModifiedDate":"2022-03-05"},{"lineNumber":54,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-03-02"},{"lineNumber":55,"author":{"gitId":"cwnm"},"content":"[[github](http://github.com/cwnm)] [[portfolio](team/cwnm.md)]","lastModifiedDate":"2022-03-02"},{"lineNumber":56,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-03-02"},{"lineNumber":57,"author":{"gitId":"-"},"content":"* Role: Developer","lastModifiedDate":"2022-03-02"},{"lineNumber":58,"author":{"gitId":"cwnm"},"content":"* Responsibilities: Deliverables and deadlines, Scheduling and tracking","lastModifiedDate":"2022-03-02"},{"lineNumber":59,"author":{"gitId":"cwnm"},"content":"","lastModifiedDate":"2022-03-02"}],"authorContributionMap":{"janald99":5,"WJunHong":6,"Jacky142857":5,"-":32,"cwnm":5,"chuashihong":6}},{"path":"docs/DeveloperGuide.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"---","lastModifiedDate":"2020-05-23"},{"lineNumber":2,"author":{"gitId":"-"},"content":"layout: page","lastModifiedDate":"2020-05-23"},{"lineNumber":3,"author":{"gitId":"-"},"content":"title: Developer Guide","lastModifiedDate":"2020-05-23"},{"lineNumber":4,"author":{"gitId":"-"},"content":"---","lastModifiedDate":"2020-05-23"},{"lineNumber":5,"author":{"gitId":"-"},"content":"* Table of Contents","lastModifiedDate":"2020-05-23"},{"lineNumber":6,"author":{"gitId":"-"},"content":"{:toc}","lastModifiedDate":"2020-05-23"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":8,"author":{"gitId":"-"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2020-05-23"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-30"},{"lineNumber":10,"author":{"gitId":"-"},"content":"## **Acknowledgements**","lastModifiedDate":"2021-07-30"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-30"},{"lineNumber":12,"author":{"gitId":"-"},"content":"* {list here sources of all reused/adapted ideas, code, documentation, and third-party libraries -- include links to the original source as well}","lastModifiedDate":"2021-07-30"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-30"},{"lineNumber":14,"author":{"gitId":"-"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2021-07-30"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":16,"author":{"gitId":"-"},"content":"## **Setting up, getting started**","lastModifiedDate":"2020-05-23"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":18,"author":{"gitId":"-"},"content":"Refer to the guide [_Setting up and getting started_](SettingUp.md).","lastModifiedDate":"2020-05-23"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":20,"author":{"gitId":"-"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2020-05-23"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":22,"author":{"gitId":"-"},"content":"## **Design**","lastModifiedDate":"2020-05-23"},{"lineNumber":23,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":24,"author":{"gitId":"-"},"content":"\u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-primary\"\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":26,"author":{"gitId":"-"},"content":":bulb: **Tip:** The `.puml` files used to create diagrams in this document can be found in the [diagrams](https://github.com/se-edu/addressbook-level3/tree/master/docs/diagrams/) folder. Refer to the [_PlantUML Tutorial_ at se-edu/guides](https://se-education.org/guides/tutorials/plantUml.html) to learn how to create and edit diagrams.","lastModifiedDate":"2021-07-31"},{"lineNumber":27,"author":{"gitId":"-"},"content":"\u003c/div\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":29,"author":{"gitId":"-"},"content":"### Architecture","lastModifiedDate":"2021-07-31"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":31,"author":{"gitId":"-"},"content":"\u003cimg src\u003d\"images/ArchitectureDiagram.png\" width\u003d\"280\" /\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":32,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":33,"author":{"gitId":"-"},"content":"The ***Architecture Diagram*** given above explains the high-level design of the App.","lastModifiedDate":"2021-07-31"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":35,"author":{"gitId":"-"},"content":"Given below is a quick overview of main components and how they interact with each other.","lastModifiedDate":"2021-07-31"},{"lineNumber":36,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":37,"author":{"gitId":"-"},"content":"**Main components of the architecture**","lastModifiedDate":"2021-07-31"},{"lineNumber":38,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":39,"author":{"gitId":"-"},"content":"**`Main`** has two classes called [`Main`](https://github.com/se-edu/addressbook-level3/tree/master/src/main/java/seedu/address/Main.java) and [`MainApp`](https://github.com/se-edu/addressbook-level3/tree/master/src/main/java/seedu/address/MainApp.java). It is responsible for,","lastModifiedDate":"2020-05-23"},{"lineNumber":40,"author":{"gitId":"-"},"content":"* At app launch: Initializes the components in the correct sequence, and connects them up with each other.","lastModifiedDate":"2020-05-23"},{"lineNumber":41,"author":{"gitId":"-"},"content":"* At shut down: Shuts down the components and invokes cleanup methods where necessary.","lastModifiedDate":"2020-05-23"},{"lineNumber":42,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":43,"author":{"gitId":"-"},"content":"[**`Commons`**](#common-classes) represents a collection of classes used by multiple other components.","lastModifiedDate":"2020-05-23"},{"lineNumber":44,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":45,"author":{"gitId":"-"},"content":"The rest of the App consists of four components.","lastModifiedDate":"2020-05-23"},{"lineNumber":46,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":47,"author":{"gitId":"-"},"content":"* [**`UI`**](#ui-component): The UI of the App.","lastModifiedDate":"2020-05-23"},{"lineNumber":48,"author":{"gitId":"-"},"content":"* [**`Logic`**](#logic-component): The command executor.","lastModifiedDate":"2020-05-23"},{"lineNumber":49,"author":{"gitId":"-"},"content":"* [**`Model`**](#model-component): Holds the data of the App in memory.","lastModifiedDate":"2020-05-23"},{"lineNumber":50,"author":{"gitId":"-"},"content":"* [**`Storage`**](#storage-component): Reads data from, and writes data to, the hard disk.","lastModifiedDate":"2020-05-23"},{"lineNumber":51,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":52,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":53,"author":{"gitId":"-"},"content":"**How the architecture components interact with each other**","lastModifiedDate":"2020-05-23"},{"lineNumber":54,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":55,"author":{"gitId":"-"},"content":"The *Sequence Diagram* below shows how the components interact with each other for the scenario where the user issues the command `delete 1`.","lastModifiedDate":"2020-05-23"},{"lineNumber":56,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":57,"author":{"gitId":"-"},"content":"\u003cimg src\u003d\"images/ArchitectureSequenceDiagram.png\" width\u003d\"574\" /\u003e","lastModifiedDate":"2020-06-07"},{"lineNumber":58,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":59,"author":{"gitId":"-"},"content":"Each of the four main components (also shown in the diagram above),","lastModifiedDate":"2021-07-31"},{"lineNumber":60,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":61,"author":{"gitId":"-"},"content":"* defines its *API* in an `interface` with the same name as the Component.","lastModifiedDate":"2021-07-31"},{"lineNumber":62,"author":{"gitId":"-"},"content":"* implements its functionality using a concrete `{Component Name}Manager` class (which follows the corresponding API `interface` mentioned in the previous point.","lastModifiedDate":"2021-07-31"},{"lineNumber":63,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":64,"author":{"gitId":"-"},"content":"For example, the `Logic` component defines its API in the `Logic.java` interface and implements its functionality using the `LogicManager.java` class which follows the `Logic` interface. Other components interact with a given component through its interface rather than the concrete class (reason: to prevent outside component\u0027s being coupled to the implementation of a component), as illustrated in the (partial) class diagram below.","lastModifiedDate":"2021-07-31"},{"lineNumber":65,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":66,"author":{"gitId":"-"},"content":"\u003cimg src\u003d\"images/ComponentManagers.png\" width\u003d\"300\" /\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":67,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":68,"author":{"gitId":"-"},"content":"The sections below give more details of each component.","lastModifiedDate":"2020-05-23"},{"lineNumber":69,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":70,"author":{"gitId":"-"},"content":"### UI component","lastModifiedDate":"2020-05-23"},{"lineNumber":71,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":72,"author":{"gitId":"-"},"content":"The **API** of this component is specified in [`Ui.java`](https://github.com/se-edu/addressbook-level3/tree/master/src/main/java/seedu/address/ui/Ui.java)","lastModifiedDate":"2021-07-31"},{"lineNumber":73,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":74,"author":{"gitId":"-"},"content":"![Structure of the UI Component](images/UiClassDiagram.png)","lastModifiedDate":"2021-07-31"},{"lineNumber":75,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":76,"author":{"gitId":"cwnm"},"content":"The UI consists of a `MainWindow` that is made up of parts e.g.`CommandBox`, `ResultDisplay`, `clientListPanel`, `StatusBarFooter` etc. All these, including the `MainWindow`, inherit from the abstract `UiPart` class which captures the commonalities between classes that represent parts of the visible GUI.","lastModifiedDate":"2022-03-04"},{"lineNumber":77,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":78,"author":{"gitId":"-"},"content":"The `UI` component uses the JavaFx UI framework. The layout of these UI parts are defined in matching `.fxml` files that are in the `src/main/resources/view` folder. For example, the layout of the [`MainWindow`](https://github.com/se-edu/addressbook-level3/tree/master/src/main/java/seedu/address/ui/MainWindow.java) is specified in [`MainWindow.fxml`](https://github.com/se-edu/addressbook-level3/tree/master/src/main/resources/view/MainWindow.fxml)","lastModifiedDate":"2021-07-31"},{"lineNumber":79,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":80,"author":{"gitId":"-"},"content":"The `UI` component,","lastModifiedDate":"2020-05-23"},{"lineNumber":81,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":82,"author":{"gitId":"-"},"content":"* executes user commands using the `Logic` component.","lastModifiedDate":"2021-07-31"},{"lineNumber":83,"author":{"gitId":"-"},"content":"* listens for changes to `Model` data so that the UI can be updated with the modified data.","lastModifiedDate":"2021-07-31"},{"lineNumber":84,"author":{"gitId":"-"},"content":"* keeps a reference to the `Logic` component, because the `UI` relies on the `Logic` to execute commands.","lastModifiedDate":"2021-07-31"},{"lineNumber":85,"author":{"gitId":"cwnm"},"content":"* depends on some classes in the `Model` component, as it displays `client` object residing in the `Model`.","lastModifiedDate":"2022-03-04"},{"lineNumber":86,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":87,"author":{"gitId":"-"},"content":"### Logic component","lastModifiedDate":"2020-05-23"},{"lineNumber":88,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":89,"author":{"gitId":"-"},"content":"**API** : [`Logic.java`](https://github.com/se-edu/addressbook-level3/tree/master/src/main/java/seedu/address/logic/Logic.java)","lastModifiedDate":"2021-07-31"},{"lineNumber":90,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":91,"author":{"gitId":"-"},"content":"Here\u0027s a (partial) class diagram of the `Logic` component:","lastModifiedDate":"2021-07-31"},{"lineNumber":92,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":93,"author":{"gitId":"-"},"content":"\u003cimg src\u003d\"images/LogicClassDiagram.png\" width\u003d\"550\"/\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":94,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":95,"author":{"gitId":"-"},"content":"How the `Logic` component works:","lastModifiedDate":"2021-07-31"},{"lineNumber":96,"author":{"gitId":"-"},"content":"1. When `Logic` is called upon to execute a command, it uses the `AddressBookParser` class to parse the user command.","lastModifiedDate":"2021-07-31"},{"lineNumber":97,"author":{"gitId":"-"},"content":"1. This results in a `Command` object (more precisely, an object of one of its subclasses e.g., `AddCommand`) which is executed by the `LogicManager`.","lastModifiedDate":"2021-07-31"},{"lineNumber":98,"author":{"gitId":"cwnm"},"content":"1. The command can communicate with the `Model` when it is executed (e.g. to add a client).","lastModifiedDate":"2022-03-04"},{"lineNumber":99,"author":{"gitId":"-"},"content":"1. The result of the command execution is encapsulated as a `CommandResult` object which is returned back from `Logic`.","lastModifiedDate":"2021-07-31"},{"lineNumber":100,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":101,"author":{"gitId":"-"},"content":"The Sequence Diagram below illustrates the interactions within the `Logic` component for the `execute(\"delete 1\")` API call.","lastModifiedDate":"2021-07-31"},{"lineNumber":102,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":103,"author":{"gitId":"-"},"content":"![Interactions Inside the Logic Component for the `delete 1` Command](images/DeleteSequenceDiagram.png)","lastModifiedDate":"2020-05-23"},{"lineNumber":104,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":105,"author":{"gitId":"-"},"content":"\u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-info\"\u003e:information_source: **Note:** The lifeline for `DeleteCommandParser` should end at the destroy marker (X) but due to a limitation of PlantUML, the lifeline reaches the end of diagram.","lastModifiedDate":"2020-05-23"},{"lineNumber":106,"author":{"gitId":"-"},"content":"\u003c/div\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":107,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":108,"author":{"gitId":"-"},"content":"Here are the other classes in `Logic` (omitted from the class diagram above) that are used for parsing a user command:","lastModifiedDate":"2021-07-31"},{"lineNumber":109,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":110,"author":{"gitId":"-"},"content":"\u003cimg src\u003d\"images/ParserClasses.png\" width\u003d\"600\"/\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":111,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":112,"author":{"gitId":"-"},"content":"How the parsing works:","lastModifiedDate":"2021-07-31"},{"lineNumber":113,"author":{"gitId":"-"},"content":"* When called upon to parse a user command, the `AddressBookParser` class creates an `XYZCommandParser` (`XYZ` is a placeholder for the specific command name e.g., `AddCommandParser`) which uses the other classes shown above to parse the user command and create a `XYZCommand` object (e.g., `AddCommand`) which the `AddressBookParser` returns back as a `Command` object.","lastModifiedDate":"2021-07-31"},{"lineNumber":114,"author":{"gitId":"-"},"content":"* All `XYZCommandParser` classes (e.g., `AddCommandParser`, `DeleteCommandParser`, ...) inherit from the `Parser` interface so that they can be treated similarly where possible e.g, during testing.","lastModifiedDate":"2021-07-31"},{"lineNumber":115,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":116,"author":{"gitId":"-"},"content":"### Model component","lastModifiedDate":"2021-07-31"},{"lineNumber":117,"author":{"gitId":"-"},"content":"**API** : [`Model.java`](https://github.com/se-edu/addressbook-level3/tree/master/src/main/java/seedu/address/model/Model.java)","lastModifiedDate":"2020-05-23"},{"lineNumber":118,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":119,"author":{"gitId":"-"},"content":"\u003cimg src\u003d\"images/ModelClassDiagram.png\" width\u003d\"450\" /\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":120,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":121,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":122,"author":{"gitId":"-"},"content":"The `Model` component,","lastModifiedDate":"2021-07-31"},{"lineNumber":123,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":124,"author":{"gitId":"janald99"},"content":"\u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-info\"\u003e:information_source: Note that the usage of the term `CLIENT` is abstract, and represents each Client entity: Buyer, Seller","lastModifiedDate":"2022-03-24"},{"lineNumber":125,"author":{"gitId":"janald99"},"content":"\u003c/div\u003e  ","lastModifiedDate":"2022-03-24"},{"lineNumber":126,"author":{"gitId":"janald99"},"content":"","lastModifiedDate":"2022-03-24"},{"lineNumber":127,"author":{"gitId":"janald99"},"content":"* stores the address book data i.e., all `CLIENT` objects (which are contained in a `UniqueCLIENTList` object).","lastModifiedDate":"2022-03-24"},{"lineNumber":128,"author":{"gitId":"janald99"},"content":"* stores the currently \u0027selected\u0027 `CLIENT` objects (e.g., results of a search query) as a separate _filtered_ list which is exposed to outsiders as an unmodifiable `ObservableList\u003cclient\u003e` that can be \u0027observed\u0027 e.g. the UI can be bound to this list so that the UI automatically updates when the data in the list change.","lastModifiedDate":"2022-03-24"},{"lineNumber":129,"author":{"gitId":"-"},"content":"* stores a `UserPref` object that represents the user’s preferences. This is exposed to the outside as a `ReadOnlyUserPref` objects.","lastModifiedDate":"2021-07-31"},{"lineNumber":130,"author":{"gitId":"-"},"content":"* does not depend on any of the other three components (as the `Model` represents data entities of the domain, they should make sense on their own without depending on other components)","lastModifiedDate":"2021-07-31"},{"lineNumber":131,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":132,"author":{"gitId":"janald99"},"content":"Let\u0027s take a look at the internal structure of the `CLIENT` entity:","lastModifiedDate":"2022-03-24"},{"lineNumber":133,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-03-24"},{"lineNumber":134,"author":{"gitId":"janald99"},"content":"\u003cimg src\u003d\"images/ClientClassDiagram.png\" width\u003d\"450\" /\u003e","lastModifiedDate":"2022-03-24"},{"lineNumber":135,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":136,"author":{"gitId":"janald99"},"content":"* all abstract `CLIENT` objects (Buyer or Seller) have a name and phone number.","lastModifiedDate":"2022-03-24"},{"lineNumber":137,"author":{"gitId":"janald99"},"content":"* `Buyer` has `PropertyToBuy` while `Seller` has `PropertyToSell`.","lastModifiedDate":"2022-03-24"},{"lineNumber":138,"author":{"gitId":"janald99"},"content":"","lastModifiedDate":"2022-03-24"},{"lineNumber":139,"author":{"gitId":"janald99"},"content":"Now, what PropertyToBuy and PropertyToSell classes encapsulate:","lastModifiedDate":"2022-03-24"},{"lineNumber":140,"author":{"gitId":"janald99"},"content":"","lastModifiedDate":"2022-03-24"},{"lineNumber":141,"author":{"gitId":"janald99"},"content":"\u003cimg src\u003d\"images/PropertyClassDiagram.png\" width\u003d\"450\" /\u003e","lastModifiedDate":"2022-03-24"},{"lineNumber":142,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":143,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-03-24"},{"lineNumber":144,"author":{"gitId":"janald99"},"content":"\u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-info\"\u003e:information_source: Note that We have decided to separate these 2 fields and NOT make them inherit an abstract `Property` class.","lastModifiedDate":"2022-03-24"},{"lineNumber":145,"author":{"gitId":"janald99"},"content":" This is because sellers know the exact property (and address of the property) that they are selling.","lastModifiedDate":"2022-03-24"},{"lineNumber":146,"author":{"gitId":"janald99"},"content":" We can hence extend the code base more flexibly in the future if we remove some fields from PropertyToBuy or add more fields to PropertyToSell.","lastModifiedDate":"2022-03-24"},{"lineNumber":147,"author":{"gitId":"janald99"},"content":"\u003c/div\u003e  ","lastModifiedDate":"2022-03-24"},{"lineNumber":148,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":149,"author":{"gitId":"-"},"content":"### Storage component","lastModifiedDate":"2020-05-23"},{"lineNumber":150,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":151,"author":{"gitId":"-"},"content":"**API** : [`Storage.java`](https://github.com/se-edu/addressbook-level3/tree/master/src/main/java/seedu/address/storage/Storage.java)","lastModifiedDate":"2020-05-23"},{"lineNumber":152,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":153,"author":{"gitId":"-"},"content":"\u003cimg src\u003d\"images/StorageClassDiagram.png\" width\u003d\"550\" /\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":154,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":155,"author":{"gitId":"-"},"content":"The `Storage` component,","lastModifiedDate":"2020-05-23"},{"lineNumber":156,"author":{"gitId":"-"},"content":"* can save both address book data and user preference data in json format, and read them back into corresponding objects.","lastModifiedDate":"2021-07-31"},{"lineNumber":157,"author":{"gitId":"-"},"content":"* inherits from both `AddressBookStorage` and `UserPrefStorage`, which means it can be treated as either one (if only the functionality of only one is needed).","lastModifiedDate":"2021-07-31"},{"lineNumber":158,"author":{"gitId":"-"},"content":"* depends on some classes in the `Model` component (because the `Storage` component\u0027s job is to save/retrieve objects that belong to the `Model`)","lastModifiedDate":"2021-07-21"},{"lineNumber":159,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":160,"author":{"gitId":"-"},"content":"### Common classes","lastModifiedDate":"2020-05-23"},{"lineNumber":161,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":162,"author":{"gitId":"-"},"content":"Classes used by multiple components are in the `seedu.addressbook.commons` package.","lastModifiedDate":"2020-05-23"},{"lineNumber":163,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":164,"author":{"gitId":"-"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2020-05-23"},{"lineNumber":165,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":166,"author":{"gitId":"-"},"content":"## **Implementation**","lastModifiedDate":"2020-05-23"},{"lineNumber":167,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":168,"author":{"gitId":"-"},"content":"This section describes some noteworthy details on how certain features are implemented.","lastModifiedDate":"2020-05-23"},{"lineNumber":169,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":170,"author":{"gitId":"janald99"},"content":"","lastModifiedDate":"2022-03-27"},{"lineNumber":171,"author":{"gitId":"janald99"},"content":"### Match feature","lastModifiedDate":"2022-03-24"},{"lineNumber":172,"author":{"gitId":"janald99"},"content":"","lastModifiedDate":"2022-03-24"},{"lineNumber":173,"author":{"gitId":"janald99"},"content":"#### Implementation","lastModifiedDate":"2022-03-24"},{"lineNumber":174,"author":{"gitId":"janald99"},"content":"","lastModifiedDate":"2022-03-24"},{"lineNumber":175,"author":{"gitId":"janald99"},"content":"We are currently implementing a Match feature. In implements the following operation:","lastModifiedDate":"2022-03-25"},{"lineNumber":176,"author":{"gitId":"janald99"},"content":"","lastModifiedDate":"2022-03-24"},{"lineNumber":177,"author":{"gitId":"janald99"},"content":"* `match` —  Matches a Buyer to a List of Seller.","lastModifiedDate":"2022-03-24"},{"lineNumber":178,"author":{"gitId":"janald99"},"content":"","lastModifiedDate":"2022-03-24"},{"lineNumber":179,"author":{"gitId":"janald99"},"content":"Format: `match buyer_index`","lastModifiedDate":"2022-03-24"},{"lineNumber":180,"author":{"gitId":"janald99"},"content":"* The fields are:","lastModifiedDate":"2022-03-24"},{"lineNumber":181,"author":{"gitId":"janald99"},"content":"    * `buyer_index` - index of the Buyer that the user is trying to match with Sellers.","lastModifiedDate":"2022-03-24"},{"lineNumber":182,"author":{"gitId":"janald99"},"content":"    ","lastModifiedDate":"2022-03-24"},{"lineNumber":183,"author":{"gitId":"janald99"},"content":"Example: `match 2`","lastModifiedDate":"2022-03-24"},{"lineNumber":184,"author":{"gitId":"janald99"},"content":"    ","lastModifiedDate":"2022-03-24"},{"lineNumber":185,"author":{"gitId":"janald99"},"content":"Result:","lastModifiedDate":"2022-03-24"},{"lineNumber":186,"author":{"gitId":"janald99"},"content":"* The list of sellers that match the buyer\u0027s demands are displayed in the UI.","lastModifiedDate":"2022-03-24"},{"lineNumber":187,"author":{"gitId":"janald99"},"content":"","lastModifiedDate":"2022-03-24"},{"lineNumber":188,"author":{"gitId":"janald99"},"content":"#### How match is going to be implemented","lastModifiedDate":"2022-03-24"},{"lineNumber":189,"author":{"gitId":"janald99"},"content":"","lastModifiedDate":"2022-03-24"},{"lineNumber":190,"author":{"gitId":"janald99"},"content":"* The match command will match a Buyer with Sellers whose `PropertyToSell` matches the demands of the `PropertyToBuy` of the buyer.","lastModifiedDate":"2022-03-24"},{"lineNumber":191,"author":{"gitId":"janald99"},"content":"","lastModifiedDate":"2022-03-24"},{"lineNumber":192,"author":{"gitId":"janald99"},"content":"* How does match filter the sellers (How does `PropertyToBuy` match with `PropertyToSell`:","lastModifiedDate":"2022-03-24"},{"lineNumber":193,"author":{"gitId":"janald99"},"content":"","lastModifiedDate":"2022-03-24"},{"lineNumber":194,"author":{"gitId":"janald99"},"content":"    -  If there exists a **price** where a buyer is willing to buy and seller is willing to sell for in their respective `buyRange` and `sellRange`, **AND**","lastModifiedDate":"2022-03-24"},{"lineNumber":195,"author":{"gitId":"janald99"},"content":"    - Their House are equal (i.e, the Location and HouseType of the house matches)","lastModifiedDate":"2022-03-24"},{"lineNumber":196,"author":{"gitId":"janald99"},"content":"","lastModifiedDate":"2022-03-24"},{"lineNumber":197,"author":{"gitId":"janald99"},"content":"* An example:","lastModifiedDate":"2022-03-24"},{"lineNumber":198,"author":{"gitId":"janald99"},"content":"    - buyer\u0027s `PropertyToBuy`(after `edit` or `add`) has `House`, and buyer is currently at *index 2* of UniqueBuyerList.","lastModifiedDate":"2022-03-24"},{"lineNumber":199,"author":{"gitId":"janald99"},"content":"        - `Name`: *Janald*","lastModifiedDate":"2022-03-24"},{"lineNumber":200,"author":{"gitId":"janald99"},"content":"    ","lastModifiedDate":"2022-03-24"},{"lineNumber":201,"author":{"gitId":"janald99"},"content":"        - PropertyToBuy: ","lastModifiedDate":"2022-03-24"},{"lineNumber":202,"author":{"gitId":"janald99"},"content":"            - `HouseType`: `BUNGALOW`,","lastModifiedDate":"2022-03-24"},{"lineNumber":203,"author":{"gitId":"janald99"},"content":"            - `Location`: `Serangoon` and ","lastModifiedDate":"2022-03-24"},{"lineNumber":204,"author":{"gitId":"janald99"},"content":"            - `PriceRange`:(50 000, 100 000) in dollars","lastModifiedDate":"2022-03-24"},{"lineNumber":205,"author":{"gitId":"janald99"},"content":"","lastModifiedDate":"2022-03-24"},{"lineNumber":206,"author":{"gitId":"janald99"},"content":"    - a certain seller has","lastModifiedDate":"2022-03-24"},{"lineNumber":207,"author":{"gitId":"janald99"},"content":"        - `Name`: *Junhong*","lastModifiedDate":"2022-03-24"},{"lineNumber":208,"author":{"gitId":"janald99"},"content":"        - `ProperyToSell`: ","lastModifiedDate":"2022-03-24"},{"lineNumber":209,"author":{"gitId":"janald99"},"content":"            - `House` with `HouseType`: `BUNGALOW` and `Location`: `Serangoon` as well","lastModifiedDate":"2022-03-24"},{"lineNumber":210,"author":{"gitId":"janald99"},"content":"            - His `PriceRange` that he is willing to sell the property for is (99 999, 200 000)","lastModifiedDate":"2022-03-24"},{"lineNumber":211,"author":{"gitId":"janald99"},"content":"      ","lastModifiedDate":"2022-03-24"},{"lineNumber":212,"author":{"gitId":"janald99"},"content":"    - In this case, the PropertyToBuy and PropertyToSell can match(same House, and 99 999 - 100 000 dollars is a matching price)","lastModifiedDate":"2022-03-24"},{"lineNumber":213,"author":{"gitId":"janald99"},"content":"    - `match 2` will display the list of sellers that match the buyer *Janald*. As a result, *Junhong* will be one of the sellers displayed.","lastModifiedDate":"2022-03-24"},{"lineNumber":214,"author":{"gitId":"janald99"},"content":"    ","lastModifiedDate":"2022-03-24"},{"lineNumber":215,"author":{"gitId":"janald99"},"content":"#### Why match should be implemented","lastModifiedDate":"2022-03-24"},{"lineNumber":216,"author":{"gitId":"janald99"},"content":"","lastModifiedDate":"2022-03-24"},{"lineNumber":217,"author":{"gitId":"janald99"},"content":"* Our AgentSee application helps housing agents to keep track of their clients in an efficient manner.","lastModifiedDate":"2022-03-24"},{"lineNumber":218,"author":{"gitId":"janald99"},"content":"","lastModifiedDate":"2022-03-24"},{"lineNumber":219,"author":{"gitId":"janald99"},"content":"* Since there are so many buyers and sellers to keep track of, it would be useful for agents to automate the matching of buyers to sellers.","lastModifiedDate":"2022-03-24"},{"lineNumber":220,"author":{"gitId":"janald99"},"content":"* The match feature will help agents filter and find a matching property that a buyer wants to buy and a seller wants to sell, which is of great convenience for agents to liase buyers with sellers.","lastModifiedDate":"2022-03-24"},{"lineNumber":221,"author":{"gitId":"janald99"},"content":"* What buyers look for when buying a Property is its `Location`, `HouseType`, and they have a `PriceRange` they are willing to pay for. Therefore, we are implementing `match` such that these conditions are met.","lastModifiedDate":"2022-03-24"},{"lineNumber":222,"author":{"gitId":"janald99"},"content":"","lastModifiedDate":"2022-03-24"},{"lineNumber":223,"author":{"gitId":"janald99"},"content":"#### \\[Proposed\\]  Alternatives considered","lastModifiedDate":"2022-03-24"},{"lineNumber":224,"author":{"gitId":"janald99"},"content":"","lastModifiedDate":"2022-03-24"},{"lineNumber":225,"author":{"gitId":"janald99"},"content":"* We can match buyers with other less strict conditions as well.","lastModifiedDate":"2022-03-24"},{"lineNumber":226,"author":{"gitId":"janald99"},"content":"* For example, we can match buyers and sellers with only match:","lastModifiedDate":"2022-03-24"},{"lineNumber":227,"author":{"gitId":"janald99"},"content":"    - HouseTypes only (example: `COLONIAL`, Since buyers may be looking only for a specific HouseType, regardless of Location)","lastModifiedDate":"2022-03-24"},{"lineNumber":228,"author":{"gitId":"janald99"},"content":"    - Location only (example: `Toa Payoh`, Since some buyers may like to buy a Property at a specific area, regardless of other conditions)","lastModifiedDate":"2022-03-24"},{"lineNumber":229,"author":{"gitId":"janald99"},"content":"    - PriceRange only (Since buyers may just be looking for properties in their buy range)","lastModifiedDate":"2022-03-24"},{"lineNumber":230,"author":{"gitId":"janald99"},"content":"","lastModifiedDate":"2022-03-24"},{"lineNumber":231,"author":{"gitId":"janald99"},"content":"* As such, we have a more flexible match feature which would be ideal for agents to match based on their dynamic client demands.","lastModifiedDate":"2022-03-24"},{"lineNumber":232,"author":{"gitId":"janald99"},"content":"","lastModifiedDate":"2022-03-24"},{"lineNumber":233,"author":{"gitId":"janald99"},"content":"### \\[Proposed\\] Bargain/Negotiate feature","lastModifiedDate":"2022-03-24"},{"lineNumber":234,"author":{"gitId":"janald99"},"content":"","lastModifiedDate":"2022-03-24"},{"lineNumber":235,"author":{"gitId":"janald99"},"content":"* An additional feature that could be implemented in the future.","lastModifiedDate":"2022-03-24"},{"lineNumber":236,"author":{"gitId":"janald99"},"content":"","lastModifiedDate":"2022-03-24"},{"lineNumber":237,"author":{"gitId":"WJunHong"},"content":"### Add Buyer feature","lastModifiedDate":"2022-03-25"},{"lineNumber":238,"author":{"gitId":"WJunHong"},"content":"The `addbuyer` command mechanism uses a similar interactions as shown in the [Logic Component](#logic-component). Mainly, it can be broken down into these steps:","lastModifiedDate":"2022-03-24"},{"lineNumber":239,"author":{"gitId":"WJunHong"},"content":"","lastModifiedDate":"2022-03-24"},{"lineNumber":240,"author":{"gitId":"WJunHong"},"content":"**Step 1:**","lastModifiedDate":"2022-03-24"},{"lineNumber":241,"author":{"gitId":"WJunHong"},"content":"","lastModifiedDate":"2022-03-24"},{"lineNumber":242,"author":{"gitId":"WJunHong"},"content":"The user types input E.g. `addbuyer n/David p/12345678` into the `CommandBox` (See [UI component](#ui-component) for more info on `CommandBox`)","lastModifiedDate":"2022-03-24"},{"lineNumber":243,"author":{"gitId":"WJunHong"},"content":"","lastModifiedDate":"2022-03-24"},{"lineNumber":244,"author":{"gitId":"WJunHong"},"content":"**Step 2:**","lastModifiedDate":"2022-03-24"},{"lineNumber":245,"author":{"gitId":"WJunHong"},"content":"","lastModifiedDate":"2022-03-24"},{"lineNumber":246,"author":{"gitId":"WJunHong"},"content":"The `execute(input)` method of `LogicManager`, a subclass of the Logic component, is called with the given input.","lastModifiedDate":"2022-03-24"},{"lineNumber":247,"author":{"gitId":"WJunHong"},"content":"An instance of the `AddressBookParser` will begin to parse the input into 2 main sections: the **command**","lastModifiedDate":"2022-03-24"},{"lineNumber":248,"author":{"gitId":"WJunHong"},"content":"and the **body** of the command.","lastModifiedDate":"2022-03-24"},{"lineNumber":249,"author":{"gitId":"WJunHong"},"content":"","lastModifiedDate":"2022-03-24"},{"lineNumber":250,"author":{"gitId":"WJunHong"},"content":"The main job of `AddressBookParser` at this step is to identify the `addbuyer` **command** which was supplied as the 1st word in the input string.","lastModifiedDate":"2022-03-24"},{"lineNumber":251,"author":{"gitId":"WJunHong"},"content":"","lastModifiedDate":"2022-03-24"},{"lineNumber":252,"author":{"gitId":"WJunHong"},"content":"After which, control is handed over to the `AddBuyerCommandParser` component by calling its `AddBuyerCommandParser#parse(body)` method to parse the **body** which was separated out.","lastModifiedDate":"2022-03-24"},{"lineNumber":253,"author":{"gitId":"WJunHong"},"content":"","lastModifiedDate":"2022-03-24"},{"lineNumber":254,"author":{"gitId":"WJunHong"},"content":"**Step 3:**","lastModifiedDate":"2022-03-24"},{"lineNumber":255,"author":{"gitId":"WJunHong"},"content":"","lastModifiedDate":"2022-03-24"},{"lineNumber":256,"author":{"gitId":"WJunHong"},"content":"`AddBuyerCommandParser#parse(body)` verifies if required fields for `addbuyer` are present.","lastModifiedDate":"2022-03-24"},{"lineNumber":257,"author":{"gitId":"WJunHong"},"content":"","lastModifiedDate":"2022-03-24"},{"lineNumber":258,"author":{"gitId":"WJunHong"},"content":"In our example, since `n/David p/12345678` was included, all required fields are present.","lastModifiedDate":"2022-03-24"},{"lineNumber":259,"author":{"gitId":"WJunHong"},"content":"","lastModifiedDate":"2022-03-24"},{"lineNumber":260,"author":{"gitId":"WJunHong"},"content":"At this step, the new `Buyer` will have been successfully created. A new `AddBuyerCommand` with the Buyer is returned to the `AddressBookParser` to the `LogicManager`","lastModifiedDate":"2022-03-24"},{"lineNumber":261,"author":{"gitId":"WJunHong"},"content":"","lastModifiedDate":"2022-03-24"},{"lineNumber":262,"author":{"gitId":"WJunHong"},"content":"![AddBuyerCommandObjectDiagram](images/AddBuyerCommandObjectDiagram.png)","lastModifiedDate":"2022-03-24"},{"lineNumber":263,"author":{"gitId":"WJunHong"},"content":"","lastModifiedDate":"2022-03-24"},{"lineNumber":264,"author":{"gitId":"WJunHong"},"content":"**Step 4:**","lastModifiedDate":"2022-03-24"},{"lineNumber":265,"author":{"gitId":"WJunHong"},"content":"","lastModifiedDate":"2022-03-24"},{"lineNumber":266,"author":{"gitId":"WJunHong"},"content":"The `LogicManager` component then calls `AddBuyerCommand#execute(model)`method of the new `AddBuyerCommand`instance containing the Buyer, with the `Model`component created from [Model component](#model-component).","lastModifiedDate":"2022-03-24"},{"lineNumber":267,"author":{"gitId":"WJunHong"},"content":"","lastModifiedDate":"2022-03-24"},{"lineNumber":268,"author":{"gitId":"WJunHong"},"content":"In this method, if the Buyer does not currently already reside in the application, he/she is added into the Model through the `Model#addBuyer(Buyer)` command and stored in the Model.","lastModifiedDate":"2022-03-24"},{"lineNumber":269,"author":{"gitId":"WJunHong"},"content":"","lastModifiedDate":"2022-03-24"},{"lineNumber":270,"author":{"gitId":"WJunHong"},"content":"(Refer to [Model component](#model-component) to see how Buyers are stored into the model)","lastModifiedDate":"2022-03-24"},{"lineNumber":271,"author":{"gitId":"WJunHong"},"content":"","lastModifiedDate":"2022-03-24"},{"lineNumber":272,"author":{"gitId":"WJunHong"},"content":"A new `CommandResult` representing the successful `addbuyer` command is initialized and returned.","lastModifiedDate":"2022-03-24"},{"lineNumber":273,"author":{"gitId":"WJunHong"},"content":"","lastModifiedDate":"2022-03-24"},{"lineNumber":274,"author":{"gitId":"WJunHong"},"content":"**Step 5:**","lastModifiedDate":"2022-03-24"},{"lineNumber":275,"author":{"gitId":"WJunHong"},"content":"","lastModifiedDate":"2022-03-24"},{"lineNumber":276,"author":{"gitId":"WJunHong"},"content":"`LogicManager` component will then attempt to update the storage with this new `Model` through the `Storage#saveBuyerAddressBook()` method.","lastModifiedDate":"2022-03-24"},{"lineNumber":277,"author":{"gitId":"WJunHong"},"content":"","lastModifiedDate":"2022-03-24"},{"lineNumber":278,"author":{"gitId":"WJunHong"},"content":"**Step 6:**","lastModifiedDate":"2022-03-24"},{"lineNumber":279,"author":{"gitId":"WJunHong"},"content":"","lastModifiedDate":"2022-03-24"},{"lineNumber":280,"author":{"gitId":"WJunHong"},"content":"Finally, the `CommandResult`is returned to be displayed by `UI` component (Refer to [Architecture](#architecture))","lastModifiedDate":"2022-03-24"},{"lineNumber":281,"author":{"gitId":"WJunHong"},"content":"","lastModifiedDate":"2022-03-24"},{"lineNumber":282,"author":{"gitId":"WJunHong"},"content":"The following Sequence Diagrams summarizes the various steps involved:","lastModifiedDate":"2022-03-24"},{"lineNumber":283,"author":{"gitId":"WJunHong"},"content":"","lastModifiedDate":"2022-03-24"},{"lineNumber":284,"author":{"gitId":"WJunHong"},"content":"![AddBuyerSequenceDiagram](images/AddBuyerSequenceDiagram.png)","lastModifiedDate":"2022-03-24"},{"lineNumber":285,"author":{"gitId":"WJunHong"},"content":"","lastModifiedDate":"2022-03-24"},{"lineNumber":286,"author":{"gitId":"WJunHong"},"content":"","lastModifiedDate":"2022-03-24"},{"lineNumber":287,"author":{"gitId":"janald99"},"content":"","lastModifiedDate":"2022-03-27"},{"lineNumber":288,"author":{"gitId":"chuashihong"},"content":"### 2. `editbuyer` / `For full details on implementation, check out this [link](https://github.com/AY2122S2-CS2103T-T11-2/tp/tree/master/src/main/java/seedu/address/logic)","lastModifiedDate":"2022-03-25"},{"lineNumber":289,"author":{"gitId":"chuashihong"},"content":"editseller` feature","lastModifiedDate":"2022-03-25"},{"lineNumber":290,"author":{"gitId":"chuashihong"},"content":"The `editbuyer` / `editseller` command mechanism uses a similar interactions as shown in the [Logic Component](). Mainly, it can be broken down into these steps:","lastModifiedDate":"2022-03-24"},{"lineNumber":291,"author":{"gitId":"chuashihong"},"content":"#### Syntax:","lastModifiedDate":"2022-03-24"},{"lineNumber":292,"author":{"gitId":"chuashihong"},"content":"```editbuyer [index] n/... p/... t/... prop/ h/... l/... pr/...```","lastModifiedDate":"2022-03-24"},{"lineNumber":293,"author":{"gitId":"chuashihong"},"content":"","lastModifiedDate":"2022-03-24"},{"lineNumber":294,"author":{"gitId":"chuashihong"},"content":"```editseller [index] n/... p/... t/... prop/ h/... l/... pr/...```","lastModifiedDate":"2022-03-24"},{"lineNumber":295,"author":{"gitId":"chuashihong"},"content":"","lastModifiedDate":"2022-03-24"},{"lineNumber":296,"author":{"gitId":"chuashihong"},"content":"Note: All the prefix (like n/, p/, ...) are \u003cb\u003eoptional\u003c/b\u003e, you could omit any of them but at least one prefix should be provided, and the \u003cb\u003eorder\u003c/b\u003e of prefix does not matter.","lastModifiedDate":"2022-03-24"},{"lineNumber":297,"author":{"gitId":"chuashihong"},"content":"","lastModifiedDate":"2022-03-24"},{"lineNumber":298,"author":{"gitId":"chuashihong"},"content":"Below are some detailed steps while executing `editbuyer` / `editseller` command: ","lastModifiedDate":"2022-03-24"},{"lineNumber":299,"author":{"gitId":"chuashihong"},"content":"","lastModifiedDate":"2022-03-24"},{"lineNumber":300,"author":{"gitId":"chuashihong"},"content":"**We use ```editbuyer``` command as an example, the other command\u0027s flow are similar to this command as well.**","lastModifiedDate":"2022-03-25"},{"lineNumber":301,"author":{"gitId":"chuashihong"},"content":"","lastModifiedDate":"2022-03-24"},{"lineNumber":302,"author":{"gitId":"chuashihong"},"content":"---","lastModifiedDate":"2022-03-24"},{"lineNumber":303,"author":{"gitId":"chuashihong"},"content":"","lastModifiedDate":"2022-03-24"},{"lineNumber":304,"author":{"gitId":"chuashihong"},"content":"**Step 1:**","lastModifiedDate":"2022-03-24"},{"lineNumber":305,"author":{"gitId":"chuashihong"},"content":"","lastModifiedDate":"2022-03-24"},{"lineNumber":306,"author":{"gitId":"chuashihong"},"content":"The user types input E.g. `editbuyer 1 n/Chua` into the `CommandBox`","lastModifiedDate":"2022-03-24"},{"lineNumber":307,"author":{"gitId":"chuashihong"},"content":"","lastModifiedDate":"2022-03-24"},{"lineNumber":308,"author":{"gitId":"chuashihong"},"content":"**Step 2:**","lastModifiedDate":"2022-03-24"},{"lineNumber":309,"author":{"gitId":"chuashihong"},"content":"","lastModifiedDate":"2022-03-24"},{"lineNumber":310,"author":{"gitId":"chuashihong"},"content":"Once the user hit Enter,  the  `LogicManager` calls `execute` that takes in everything user typed. ","lastModifiedDate":"2022-03-24"},{"lineNumber":311,"author":{"gitId":"chuashihong"},"content":"Then, `AddressBookParser` will investigate the user\u0027s input. It will takes the first keyword: `editbuyer` and ","lastModifiedDate":"2022-03-24"},{"lineNumber":312,"author":{"gitId":"chuashihong"},"content":"call the corresponding `EditBuyerCommandParser::parse` by providing the **arguments** (anything after than first word) from user input","lastModifiedDate":"2022-03-24"},{"lineNumber":313,"author":{"gitId":"chuashihong"},"content":"","lastModifiedDate":"2022-03-24"},{"lineNumber":314,"author":{"gitId":"chuashihong"},"content":"**Step 3:**","lastModifiedDate":"2022-03-24"},{"lineNumber":315,"author":{"gitId":"chuashihong"},"content":"","lastModifiedDate":"2022-03-24"},{"lineNumber":316,"author":{"gitId":"chuashihong"},"content":"`EditBuyerCommandParser` parse the argument provided and check the validity of the arguments. If any argument provided ","lastModifiedDate":"2022-03-24"},{"lineNumber":317,"author":{"gitId":"chuashihong"},"content":"is not valid, an error will be shown the command won\u0027t be executed.","lastModifiedDate":"2022-03-24"},{"lineNumber":318,"author":{"gitId":"chuashihong"},"content":"","lastModifiedDate":"2022-03-24"},{"lineNumber":319,"author":{"gitId":"chuashihong"},"content":"In our example, `1 n/Chua` was provided, the index and at least one require prefix are given, so it is a valid argument.","lastModifiedDate":"2022-03-24"},{"lineNumber":320,"author":{"gitId":"chuashihong"},"content":"","lastModifiedDate":"2022-03-24"},{"lineNumber":321,"author":{"gitId":"chuashihong"},"content":"**Step 4:**","lastModifiedDate":"2022-03-24"},{"lineNumber":322,"author":{"gitId":"chuashihong"},"content":"","lastModifiedDate":"2022-03-24"},{"lineNumber":323,"author":{"gitId":"chuashihong"},"content":"Now the `AddressBookParser` returns `EditBuyerCommand` as ``CommandResult``, the `LogicManager` then calls ","lastModifiedDate":"2022-03-24"},{"lineNumber":324,"author":{"gitId":"chuashihong"},"content":"`CommandResult::execute`.","lastModifiedDate":"2022-03-24"},{"lineNumber":325,"author":{"gitId":"chuashihong"},"content":"","lastModifiedDate":"2022-03-24"},{"lineNumber":326,"author":{"gitId":"chuashihong"},"content":"**Step 5:**","lastModifiedDate":"2022-03-24"},{"lineNumber":327,"author":{"gitId":"chuashihong"},"content":"","lastModifiedDate":"2022-03-24"},{"lineNumber":328,"author":{"gitId":"chuashihong"},"content":"Now the `EditBuyerCommand` will execute and do the work, that is updating the corresponding information from the given","lastModifiedDate":"2022-03-24"},{"lineNumber":329,"author":{"gitId":"chuashihong"},"content":"index. A `CommandResult` containing the successful execution result is returned.","lastModifiedDate":"2022-03-24"},{"lineNumber":330,"author":{"gitId":"chuashihong"},"content":"","lastModifiedDate":"2022-03-24"},{"lineNumber":331,"author":{"gitId":"chuashihong"},"content":"**Note:** The validity of the index will be check at this time, if the index is out of bound, the error will be shown ","lastModifiedDate":"2022-03-24"},{"lineNumber":332,"author":{"gitId":"chuashihong"},"content":"and the edit command will not be executed.","lastModifiedDate":"2022-03-24"},{"lineNumber":333,"author":{"gitId":"chuashihong"},"content":"","lastModifiedDate":"2022-03-24"},{"lineNumber":334,"author":{"gitId":"chuashihong"},"content":"**Step 6:**","lastModifiedDate":"2022-03-24"},{"lineNumber":335,"author":{"gitId":"chuashihong"},"content":"","lastModifiedDate":"2022-03-24"},{"lineNumber":336,"author":{"gitId":"chuashihong"},"content":"`LogicManager` component will then update the storage with the edited `Model` through the ","lastModifiedDate":"2022-03-24"},{"lineNumber":337,"author":{"gitId":"chuashihong"},"content":"`Storage#saveBuyerAddressBook()` method.","lastModifiedDate":"2022-03-24"},{"lineNumber":338,"author":{"gitId":"chuashihong"},"content":"","lastModifiedDate":"2022-03-24"},{"lineNumber":339,"author":{"gitId":"chuashihong"},"content":"**Step 7:**","lastModifiedDate":"2022-03-24"},{"lineNumber":340,"author":{"gitId":"chuashihong"},"content":"","lastModifiedDate":"2022-03-24"},{"lineNumber":341,"author":{"gitId":"chuashihong"},"content":"Finally, the `CommandResult` is returned to be displayed by `UI` component (Refer to [Architecture](#architecture))","lastModifiedDate":"2022-03-24"},{"lineNumber":342,"author":{"gitId":"chuashihong"},"content":"","lastModifiedDate":"2022-03-24"},{"lineNumber":343,"author":{"gitId":"chuashihong"},"content":"The Sequence Diagrams below summarizes the various steps involved:","lastModifiedDate":"2022-03-24"},{"lineNumber":344,"author":{"gitId":"chuashihong"},"content":"","lastModifiedDate":"2022-03-24"},{"lineNumber":345,"author":{"gitId":"chuashihong"},"content":"","lastModifiedDate":"2022-03-24"},{"lineNumber":346,"author":{"gitId":"chuashihong"},"content":"![EditBuyerCommandDiagram](diagrams/EditBuyerCommandDiagram.png)","lastModifiedDate":"2022-03-25"},{"lineNumber":347,"author":{"gitId":"chuashihong"},"content":"","lastModifiedDate":"2022-03-24"},{"lineNumber":348,"author":{"gitId":"chuashihong"},"content":"---","lastModifiedDate":"2022-03-24"},{"lineNumber":349,"author":{"gitId":"chuashihong"},"content":"","lastModifiedDate":"2022-03-24"},{"lineNumber":350,"author":{"gitId":"WJunHong"},"content":"### Add property for buyer feature","lastModifiedDate":"2022-03-25"},{"lineNumber":351,"author":{"gitId":"WJunHong"},"content":"The `add-ptb` command uses a similar mechanism as the `addbuyer` command mentioned [above](#add-buyer-feature), with the following differences:","lastModifiedDate":"2022-03-25"},{"lineNumber":352,"author":{"gitId":"WJunHong"},"content":"","lastModifiedDate":"2022-03-25"},{"lineNumber":353,"author":{"gitId":"WJunHong"},"content":"1. An index needs to be specified along with the necessary fields","lastModifiedDate":"2022-03-25"},{"lineNumber":354,"author":{"gitId":"WJunHong"},"content":"    E.g. `add-ptb 1 h/condo l/Serangoon pr/400000,900000`","lastModifiedDate":"2022-03-25"},{"lineNumber":355,"author":{"gitId":"WJunHong"},"content":"2. The Parser (`AddPropertyToBuyCommandParser`) checks if the position parsed in is valid (Greater than equal to 0 and Smaller than or equal to the size of the Buyer list).","lastModifiedDate":"2022-03-25"},{"lineNumber":356,"author":{"gitId":"WJunHong"},"content":"3. The updated buyer remains in the same position as before, while a new buyer is added to the end of the list","lastModifiedDate":"2022-03-25"},{"lineNumber":357,"author":{"gitId":"WJunHong"},"content":"","lastModifiedDate":"2022-03-25"},{"lineNumber":358,"author":{"gitId":"WJunHong"},"content":"**\\[Proposed\\]** Alternatives considered:","lastModifiedDate":"2022-03-25"},{"lineNumber":359,"author":{"gitId":"WJunHong"},"content":"","lastModifiedDate":"2022-03-25"},{"lineNumber":360,"author":{"gitId":"WJunHong"},"content":"- Given the time, the add property to buy feature can be integrated with the `addbuyer` command to allow users to add properties with the buyer,","lastModifiedDate":"2022-03-25"},{"lineNumber":361,"author":{"gitId":"WJunHong"},"content":"instead of doing it in 2 commands. ","lastModifiedDate":"2022-03-25"},{"lineNumber":362,"author":{"gitId":"WJunHong"},"content":"  - Pros:","lastModifiedDate":"2022-03-25"},{"lineNumber":363,"author":{"gitId":"WJunHong"},"content":"    - More flexibility for experienced users","lastModifiedDate":"2022-03-25"},{"lineNumber":364,"author":{"gitId":"WJunHong"},"content":"  - Cons:","lastModifiedDate":"2022-03-25"},{"lineNumber":365,"author":{"gitId":"WJunHong"},"content":"    - More code to implement and test","lastModifiedDate":"2022-03-25"},{"lineNumber":366,"author":{"gitId":"WJunHong"},"content":"- Allow for certain fields to be **optional** if a buyer is yet to give the user the information, but they still wish to add a property first","lastModifiedDate":"2022-03-25"},{"lineNumber":367,"author":{"gitId":"WJunHong"},"content":"  - Pros:","lastModifiedDate":"2022-03-25"},{"lineNumber":368,"author":{"gitId":"WJunHong"},"content":"    - More flexible design","lastModifiedDate":"2022-03-25"},{"lineNumber":369,"author":{"gitId":"WJunHong"},"content":"  - Cons:","lastModifiedDate":"2022-03-25"},{"lineNumber":370,"author":{"gitId":"WJunHong"},"content":"    - Hard to implement","lastModifiedDate":"2022-03-25"},{"lineNumber":371,"author":{"gitId":"WJunHong"},"content":"    - Error prone","lastModifiedDate":"2022-03-25"},{"lineNumber":372,"author":{"gitId":"WJunHong"},"content":"","lastModifiedDate":"2022-03-25"},{"lineNumber":373,"author":{"gitId":"WJunHong"},"content":"### \\[Proposed\\] Add Property to sell feature","lastModifiedDate":"2022-03-25"},{"lineNumber":374,"author":{"gitId":"WJunHong"},"content":"The `add-pts` command is very similar to the above command with only slight differences:","lastModifiedDate":"2022-03-25"},{"lineNumber":375,"author":{"gitId":"WJunHong"},"content":"1. An additional field is required: `address` of the seller\u0027s house","lastModifiedDate":"2022-03-25"},{"lineNumber":376,"author":{"gitId":"chuashihong"},"content":"","lastModifiedDate":"2022-03-24"},{"lineNumber":377,"author":{"gitId":"janald99"},"content":"","lastModifiedDate":"2022-03-24"},{"lineNumber":378,"author":{"gitId":"Jacky142857"},"content":"### `sort` feature","lastModifiedDate":"2022-03-25"},{"lineNumber":379,"author":{"gitId":"Jacky142857"},"content":"The `sort` command mechanism can be broken down into the following steps:","lastModifiedDate":"2022-03-25"},{"lineNumber":380,"author":{"gitId":"Jacky142857"},"content":"","lastModifiedDate":"2022-03-25"},{"lineNumber":381,"author":{"gitId":"Jacky142857"},"content":"**Step 1:**","lastModifiedDate":"2022-03-25"},{"lineNumber":382,"author":{"gitId":"Jacky142857"},"content":"The user types input E.g.  `sort` into the `CommandBox` (See [UI component](#ui-component) for more info on `CommandBox`)","lastModifiedDate":"2022-03-25"},{"lineNumber":383,"author":{"gitId":"Jacky142857"},"content":"","lastModifiedDate":"2022-03-25"},{"lineNumber":384,"author":{"gitId":"Jacky142857"},"content":"**Step 2:**","lastModifiedDate":"2022-03-25"},{"lineNumber":385,"author":{"gitId":"Jacky142857"},"content":"The `execute(input)` method of `LogicManager`, a subclass of the Logic component, is called with the given input.","lastModifiedDate":"2022-03-25"},{"lineNumber":386,"author":{"gitId":"Jacky142857"},"content":"","lastModifiedDate":"2022-03-25"},{"lineNumber":387,"author":{"gitId":"Jacky142857"},"content":"**Step 3:**","lastModifiedDate":"2022-03-25"},{"lineNumber":388,"author":{"gitId":"Jacky142857"},"content":"The `sortFilteredClientList()` method of `model` is being called","lastModifiedDate":"2022-03-25"},{"lineNumber":389,"author":{"gitId":"Jacky142857"},"content":"","lastModifiedDate":"2022-03-25"},{"lineNumber":390,"author":{"gitId":"Jacky142857"},"content":"**Step 4:**","lastModifiedDate":"2022-03-25"},{"lineNumber":391,"author":{"gitId":"Jacky142857"},"content":"The `Addressbook.sortPersons() ` method is being called.","lastModifiedDate":"2022-03-25"},{"lineNumber":392,"author":{"gitId":"Jacky142857"},"content":"","lastModifiedDate":"2022-03-25"},{"lineNumber":393,"author":{"gitId":"Jacky142857"},"content":"**Step 5:** ","lastModifiedDate":"2022-03-25"},{"lineNumber":394,"author":{"gitId":"Jacky142857"},"content":"The `UniqueClientList.sortPersons() ` method is being called.","lastModifiedDate":"2022-03-25"},{"lineNumber":395,"author":{"gitId":"Jacky142857"},"content":"","lastModifiedDate":"2022-03-25"},{"lineNumber":396,"author":{"gitId":"Jacky142857"},"content":"**Step 6:**","lastModifiedDate":"2022-03-25"},{"lineNumber":397,"author":{"gitId":"Jacky142857"},"content":"`UniqueClientList`\u0027s `internalList` is being modified permanently by the order of their names alphabetically.","lastModifiedDate":"2022-03-25"},{"lineNumber":398,"author":{"gitId":"Jacky142857"},"content":"","lastModifiedDate":"2022-03-25"},{"lineNumber":399,"author":{"gitId":"Jacky142857"},"content":"The following Sequence Diagrams summarizes the various steps involved:","lastModifiedDate":"2022-03-25"},{"lineNumber":400,"author":{"gitId":"Jacky142857"},"content":"","lastModifiedDate":"2022-03-25"},{"lineNumber":401,"author":{"gitId":"Jacky142857"},"content":"`To be added later`","lastModifiedDate":"2022-03-25"},{"lineNumber":402,"author":{"gitId":"Jacky142857"},"content":"","lastModifiedDate":"2022-03-25"},{"lineNumber":403,"author":{"gitId":"Jacky142857"},"content":"**Pros:**","lastModifiedDate":"2022-03-25"},{"lineNumber":404,"author":{"gitId":"Jacky142857"},"content":"It alters the internal list completely, so that the app \u0027saves\u0027 users last sorting option.","lastModifiedDate":"2022-03-25"},{"lineNumber":405,"author":{"gitId":"Jacky142857"},"content":"","lastModifiedDate":"2022-03-25"},{"lineNumber":406,"author":{"gitId":"Jacky142857"},"content":"**Cons:**","lastModifiedDate":"2022-03-25"},{"lineNumber":407,"author":{"gitId":"Jacky142857"},"content":"Some people might not want the sorted result to be saved. ","lastModifiedDate":"2022-03-25"},{"lineNumber":408,"author":{"gitId":"Jacky142857"},"content":"Currently we are exploring other options to sort the list besides modifying the structure of internal list directly.","lastModifiedDate":"2022-03-25"},{"lineNumber":409,"author":{"gitId":"janald99"},"content":"","lastModifiedDate":"2022-03-24"},{"lineNumber":410,"author":{"gitId":"-"},"content":"### \\[Proposed\\] Undo/redo feature","lastModifiedDate":"2020-06-07"},{"lineNumber":411,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":412,"author":{"gitId":"-"},"content":"#### Proposed Implementation","lastModifiedDate":"2020-05-23"},{"lineNumber":413,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":414,"author":{"gitId":"-"},"content":"The proposed undo/redo mechanism is facilitated by `VersionedAddressBook`. It extends `AddressBook` with an undo/redo history, stored internally as an `addressBookStateList` and `currentStatePointer`. Additionally, it implements the following operations:","lastModifiedDate":"2020-05-23"},{"lineNumber":415,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":416,"author":{"gitId":"-"},"content":"* `VersionedAddressBook#commit()` — Saves the current address book state in its history.","lastModifiedDate":"2020-05-23"},{"lineNumber":417,"author":{"gitId":"-"},"content":"* `VersionedAddressBook#undo()` — Restores the previous address book state from its history.","lastModifiedDate":"2020-05-23"},{"lineNumber":418,"author":{"gitId":"-"},"content":"* `VersionedAddressBook#redo()` — Restores a previously undone address book state from its history.","lastModifiedDate":"2020-05-23"},{"lineNumber":419,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":420,"author":{"gitId":"-"},"content":"These operations are exposed in the `Model` interface as `Model#commitAddressBook()`, `Model#undoAddressBook()` and `Model#redoAddressBook()` respectively.","lastModifiedDate":"2020-05-23"},{"lineNumber":421,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":422,"author":{"gitId":"-"},"content":"Given below is an example usage scenario and how the undo/redo mechanism behaves at each step.","lastModifiedDate":"2020-05-23"},{"lineNumber":423,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":424,"author":{"gitId":"-"},"content":"Step 1. The user launches the application for the first time. The `VersionedAddressBook` will be initialized with the initial address book state, and the `currentStatePointer` pointing to that single address book state.","lastModifiedDate":"2020-05-23"},{"lineNumber":425,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":426,"author":{"gitId":"-"},"content":"![UndoRedoState0](images/UndoRedoState0.png)","lastModifiedDate":"2020-05-23"},{"lineNumber":427,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":428,"author":{"gitId":"cwnm"},"content":"Step 2. The user executes `delete 5` command to delete the 5th client in the address book. The `delete` command calls `Model#commitAddressBook()`, causing the modified state of the address book after the `delete 5` command executes to be saved in the `addressBookStateList`, and the `currentStatePointer` is shifted to the newly inserted address book state.","lastModifiedDate":"2022-03-04"},{"lineNumber":429,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":430,"author":{"gitId":"-"},"content":"![UndoRedoState1](images/UndoRedoState1.png)","lastModifiedDate":"2020-05-23"},{"lineNumber":431,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":432,"author":{"gitId":"cwnm"},"content":"Step 3. The user executes `add n/David …​` to add a new client. The `add` command also calls `Model#commitAddressBook()`, causing another modified address book state to be saved into the `addressBookStateList`.","lastModifiedDate":"2022-03-04"},{"lineNumber":433,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":434,"author":{"gitId":"-"},"content":"![UndoRedoState2](images/UndoRedoState2.png)","lastModifiedDate":"2020-05-23"},{"lineNumber":435,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":436,"author":{"gitId":"-"},"content":"\u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-info\"\u003e:information_source: **Note:** If a command fails its execution, it will not call `Model#commitAddressBook()`, so the address book state will not be saved into the `addressBookStateList`.","lastModifiedDate":"2020-05-23"},{"lineNumber":437,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":438,"author":{"gitId":"-"},"content":"\u003c/div\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":439,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":440,"author":{"gitId":"cwnm"},"content":"Step 4. The user now decides that adding the client was a mistake, and decides to undo that action by executing the `undo` command. The `undo` command will call `Model#undoAddressBook()`, which will shift the `currentStatePointer` once to the left, pointing it to the previous address book state, and restores the address book to that state.","lastModifiedDate":"2022-03-04"},{"lineNumber":441,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":442,"author":{"gitId":"-"},"content":"![UndoRedoState3](images/UndoRedoState3.png)","lastModifiedDate":"2020-05-23"},{"lineNumber":443,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":444,"author":{"gitId":"-"},"content":"\u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-info\"\u003e:information_source: **Note:** If the `currentStatePointer` is at index 0, pointing to the initial AddressBook state, then there are no previous AddressBook states to restore. The `undo` command uses `Model#canUndoAddressBook()` to check if this is the case. If so, it will return an error to the user rather","lastModifiedDate":"2020-05-23"},{"lineNumber":445,"author":{"gitId":"-"},"content":"than attempting to perform the undo.","lastModifiedDate":"2020-05-23"},{"lineNumber":446,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":447,"author":{"gitId":"-"},"content":"\u003c/div\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":448,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":449,"author":{"gitId":"-"},"content":"The following sequence diagram shows how the undo operation works:","lastModifiedDate":"2020-05-23"},{"lineNumber":450,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":451,"author":{"gitId":"-"},"content":"![UndoSequenceDiagram](images/UndoSequenceDiagram.png)","lastModifiedDate":"2020-05-23"},{"lineNumber":452,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":453,"author":{"gitId":"-"},"content":"\u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-info\"\u003e:information_source: **Note:** The lifeline for `UndoCommand` should end at the destroy marker (X) but due to a limitation of PlantUML, the lifeline reaches the end of diagram.","lastModifiedDate":"2020-05-23"},{"lineNumber":454,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":455,"author":{"gitId":"-"},"content":"\u003c/div\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":456,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":457,"author":{"gitId":"-"},"content":"The `redo` command does the opposite — it calls `Model#redoAddressBook()`, which shifts the `currentStatePointer` once to the right, pointing to the previously undone state, and restores the address book to that state.","lastModifiedDate":"2020-05-23"},{"lineNumber":458,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":459,"author":{"gitId":"-"},"content":"\u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-info\"\u003e:information_source: **Note:** If the `currentStatePointer` is at index `addressBookStateList.size() - 1`, pointing to the latest address book state, then there are no undone AddressBook states to restore. The `redo` command uses `Model#canRedoAddressBook()` to check if this is the case. If so, it will return an error to the user rather than attempting to perform the redo.","lastModifiedDate":"2020-05-23"},{"lineNumber":460,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":461,"author":{"gitId":"-"},"content":"\u003c/div\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":462,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":463,"author":{"gitId":"-"},"content":"Step 5. The user then decides to execute the command `list`. Commands that do not modify the address book, such as `list`, will usually not call `Model#commitAddressBook()`, `Model#undoAddressBook()` or `Model#redoAddressBook()`. Thus, the `addressBookStateList` remains unchanged.","lastModifiedDate":"2020-05-23"},{"lineNumber":464,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":465,"author":{"gitId":"-"},"content":"![UndoRedoState4](images/UndoRedoState4.png)","lastModifiedDate":"2020-05-23"},{"lineNumber":466,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":467,"author":{"gitId":"-"},"content":"Step 6. The user executes `clear`, which calls `Model#commitAddressBook()`. Since the `currentStatePointer` is not pointing at the end of the `addressBookStateList`, all address book states after the `currentStatePointer` will be purged. Reason: It no longer makes sense to redo the `add n/David …​` command. This is the behavior that most modern desktop applications follow.","lastModifiedDate":"2020-05-23"},{"lineNumber":468,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":469,"author":{"gitId":"-"},"content":"![UndoRedoState5](images/UndoRedoState5.png)","lastModifiedDate":"2020-05-23"},{"lineNumber":470,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":471,"author":{"gitId":"-"},"content":"The following activity diagram summarizes what happens when a user executes a new command:","lastModifiedDate":"2020-05-23"},{"lineNumber":472,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":473,"author":{"gitId":"-"},"content":"\u003cimg src\u003d\"images/CommitActivityDiagram.png\" width\u003d\"250\" /\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":474,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":475,"author":{"gitId":"-"},"content":"#### Design considerations:","lastModifiedDate":"2021-07-31"},{"lineNumber":476,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":477,"author":{"gitId":"-"},"content":"**Aspect: How undo \u0026 redo executes:**","lastModifiedDate":"2021-07-31"},{"lineNumber":478,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":479,"author":{"gitId":"-"},"content":"* **Alternative 1 (current choice):** Saves the entire address book.","lastModifiedDate":"2020-05-23"},{"lineNumber":480,"author":{"gitId":"-"},"content":"    * Pros: Easy to implement.","lastModifiedDate":"2020-05-23"},{"lineNumber":481,"author":{"gitId":"-"},"content":"    * Cons: May have performance issues in terms of memory usage.","lastModifiedDate":"2020-05-23"},{"lineNumber":482,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":483,"author":{"gitId":"-"},"content":"* **Alternative 2:** Individual command knows how to undo/redo by","lastModifiedDate":"2020-05-23"},{"lineNumber":484,"author":{"gitId":"-"},"content":"  itself.","lastModifiedDate":"2020-05-23"},{"lineNumber":485,"author":{"gitId":"cwnm"},"content":"    * Pros: Will use less memory (e.g. for `delete`, just save the client being deleted).","lastModifiedDate":"2022-03-04"},{"lineNumber":486,"author":{"gitId":"-"},"content":"    * Cons: We must ensure that the implementation of each individual command are correct.","lastModifiedDate":"2020-05-23"},{"lineNumber":487,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":488,"author":{"gitId":"-"},"content":"_{more aspects and alternatives to be added}_","lastModifiedDate":"2020-05-23"},{"lineNumber":489,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":490,"author":{"gitId":"cwnm"},"content":"### \\[Proposed\\] Clear buyer list/Clear seller list","lastModifiedDate":"2022-03-25"},{"lineNumber":491,"author":{"gitId":"cwnm"},"content":"","lastModifiedDate":"2022-03-25"},{"lineNumber":492,"author":{"gitId":"cwnm"},"content":"#### Proposed Implementation","lastModifiedDate":"2022-03-25"},{"lineNumber":493,"author":{"gitId":"cwnm"},"content":"","lastModifiedDate":"2022-03-25"},{"lineNumber":494,"author":{"gitId":"cwnm"},"content":"We are currently implementing a clear buyer list and clear seller list function.","lastModifiedDate":"2022-03-25"},{"lineNumber":495,"author":{"gitId":"cwnm"},"content":"#### Syntax:","lastModifiedDate":"2022-03-25"},{"lineNumber":496,"author":{"gitId":"cwnm"},"content":"- `clearb` - clears the buyer list","lastModifiedDate":"2022-03-25"},{"lineNumber":497,"author":{"gitId":"cwnm"},"content":"- `clears` - clears the seller list","lastModifiedDate":"2022-03-25"},{"lineNumber":498,"author":{"gitId":"cwnm"},"content":"","lastModifiedDate":"2022-03-25"},{"lineNumber":499,"author":{"gitId":"cwnm"},"content":"#### Result:","lastModifiedDate":"2022-03-25"},{"lineNumber":500,"author":{"gitId":"cwnm"},"content":"- specified list is cleared without affecting the other list","lastModifiedDate":"2022-03-25"},{"lineNumber":501,"author":{"gitId":"cwnm"},"content":"","lastModifiedDate":"2022-03-25"},{"lineNumber":502,"author":{"gitId":"cwnm"},"content":"#### Implementation of clear buyer and clear seller","lastModifiedDate":"2022-03-25"},{"lineNumber":503,"author":{"gitId":"cwnm"},"content":"The contents of buyerlist or sellerlist in `BuyerAddressBook.java` or `SellerAddressBook.java` is cleared.","lastModifiedDate":"2022-03-25"},{"lineNumber":504,"author":{"gitId":"cwnm"},"content":"","lastModifiedDate":"2022-03-25"},{"lineNumber":505,"author":{"gitId":"cwnm"},"content":"#### Why is it implemented this way","lastModifiedDate":"2022-03-25"},{"lineNumber":506,"author":{"gitId":"cwnm"},"content":"The content of the uncleared list can be kept as such without reloading a fresh new book as seen in the AB3 command `clear`.","lastModifiedDate":"2022-03-25"},{"lineNumber":507,"author":{"gitId":"cwnm"},"content":"","lastModifiedDate":"2022-03-25"},{"lineNumber":508,"author":{"gitId":"cwnm"},"content":"#### Alternatives","lastModifiedDate":"2022-03-25"},{"lineNumber":509,"author":{"gitId":"cwnm"},"content":"A copy of the uncleared list is kept, next the content of the whole addressbook can be cleared by `clear`, followed by loading of the uncleared content.","lastModifiedDate":"2022-03-25"},{"lineNumber":510,"author":{"gitId":"cwnm"},"content":"","lastModifiedDate":"2022-03-25"},{"lineNumber":511,"author":{"gitId":"cwnm"},"content":"### Find buyer/Find seller","lastModifiedDate":"2022-03-25"},{"lineNumber":512,"author":{"gitId":"cwnm"},"content":"","lastModifiedDate":"2022-03-25"},{"lineNumber":513,"author":{"gitId":"cwnm"},"content":"#### Syntax:","lastModifiedDate":"2022-03-25"},{"lineNumber":514,"author":{"gitId":"cwnm"},"content":"- `findb /KEYWORD [MORE_KEYWORDS]`","lastModifiedDate":"2022-03-25"},{"lineNumber":515,"author":{"gitId":"cwnm"},"content":"- `finds D/KEYWORD [MORE_KEYWORDS]`","lastModifiedDate":"2022-03-25"},{"lineNumber":516,"author":{"gitId":"cwnm"},"content":"","lastModifiedDate":"2022-03-25"},{"lineNumber":517,"author":{"gitId":"cwnm"},"content":"Examples:","lastModifiedDate":"2022-03-25"},{"lineNumber":518,"author":{"gitId":"cwnm"},"content":"- `findb junhong junheng`","lastModifiedDate":"2022-03-25"},{"lineNumber":519,"author":{"gitId":"cwnm"},"content":"- `finds hdb 5room`","lastModifiedDate":"2022-03-25"},{"lineNumber":520,"author":{"gitId":"cwnm"},"content":"","lastModifiedDate":"2022-03-25"},{"lineNumber":521,"author":{"gitId":"cwnm"},"content":"#### Result:","lastModifiedDate":"2022-03-25"},{"lineNumber":522,"author":{"gitId":"cwnm"},"content":"returns a filtered list of sellers of buyers","lastModifiedDate":"2022-03-25"},{"lineNumber":523,"author":{"gitId":"cwnm"},"content":"","lastModifiedDate":"2022-03-25"},{"lineNumber":524,"author":{"gitId":"cwnm"},"content":"#### Implementation of find buyer and find seller","lastModifiedDate":"2022-03-25"},{"lineNumber":525,"author":{"gitId":"cwnm"},"content":"The finds and findb command calls `updateFilteredSellerList` of `model` and filters the list based on the keywords. The commands then calls `getFilteredSellerList` ","lastModifiedDate":"2022-03-25"},{"lineNumber":526,"author":{"gitId":"cwnm"},"content":"in order to return the filtered list of sellers.","lastModifiedDate":"2022-03-25"},{"lineNumber":527,"author":{"gitId":"cwnm"},"content":"","lastModifiedDate":"2022-03-25"},{"lineNumber":528,"author":{"gitId":"cwnm"},"content":"#### Why is it implemented this way","lastModifiedDate":"2022-03-25"},{"lineNumber":529,"author":{"gitId":"cwnm"},"content":"Having a seperate buyer and seller list means we need to seperate the find command into find buyer and find seller in order to filter the desired list. Having seperate address books helps in this regard as the version of `getFilteredClientList` can be used.","lastModifiedDate":"2022-03-25"},{"lineNumber":530,"author":{"gitId":"cwnm"},"content":"","lastModifiedDate":"2022-03-25"},{"lineNumber":531,"author":{"gitId":"-"},"content":"### \\[Proposed\\] Data archiving","lastModifiedDate":"2020-05-23"},{"lineNumber":532,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":533,"author":{"gitId":"-"},"content":"_{Explain here how the data archiving feature will be implemented}_","lastModifiedDate":"2020-05-23"},{"lineNumber":534,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":535,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":536,"author":{"gitId":"-"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2020-05-23"},{"lineNumber":537,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":538,"author":{"gitId":"-"},"content":"## **Documentation, logging, testing, configuration, dev-ops**","lastModifiedDate":"2020-06-07"},{"lineNumber":539,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":540,"author":{"gitId":"-"},"content":"* [Documentation guide](Documentation.md)","lastModifiedDate":"2020-06-07"},{"lineNumber":541,"author":{"gitId":"-"},"content":"* [Testing guide](Testing.md)","lastModifiedDate":"2020-06-07"},{"lineNumber":542,"author":{"gitId":"-"},"content":"* [Logging guide](Logging.md)","lastModifiedDate":"2020-06-07"},{"lineNumber":543,"author":{"gitId":"-"},"content":"* [Configuration guide](Configuration.md)","lastModifiedDate":"2020-06-07"},{"lineNumber":544,"author":{"gitId":"-"},"content":"* [DevOps guide](DevOps.md)","lastModifiedDate":"2020-06-07"},{"lineNumber":545,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":546,"author":{"gitId":"-"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2020-05-23"},{"lineNumber":547,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":548,"author":{"gitId":"-"},"content":"## **Appendix: Requirements**","lastModifiedDate":"2020-05-23"},{"lineNumber":549,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":550,"author":{"gitId":"-"},"content":"### Product scope","lastModifiedDate":"2020-05-23"},{"lineNumber":551,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":552,"author":{"gitId":"-"},"content":"**Target user profile**:","lastModifiedDate":"2020-05-23"},{"lineNumber":553,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":554,"author":{"gitId":"WJunHong"},"content":"* real estate agent","lastModifiedDate":"2022-02-25"},{"lineNumber":555,"author":{"gitId":"WJunHong"},"content":"* has a need to manage clients in an organized fashion","lastModifiedDate":"2022-02-25"},{"lineNumber":556,"author":{"gitId":"WJunHong"},"content":"* mainly uses desktop for work","lastModifiedDate":"2022-02-25"},{"lineNumber":557,"author":{"gitId":"-"},"content":"* prefers typing to mouse interactions","lastModifiedDate":"2020-05-26"},{"lineNumber":558,"author":{"gitId":"-"},"content":"* is reasonably comfortable using CLI apps","lastModifiedDate":"2020-05-23"},{"lineNumber":559,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":560,"author":{"gitId":"WJunHong"},"content":"**Value proposition**: Able to keep track of client\u0027s preferences, housing details and budget","lastModifiedDate":"2022-02-25"},{"lineNumber":561,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":562,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":563,"author":{"gitId":"-"},"content":"### User stories","lastModifiedDate":"2020-06-07"},{"lineNumber":564,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":565,"author":{"gitId":"-"},"content":"Priorities: High (must have) - `* * *`, Medium (nice to have) - `* *`, Low (unlikely to have) - `*`","lastModifiedDate":"2020-05-23"},{"lineNumber":566,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":567,"author":{"gitId":"-"},"content":"| Priority | As a …​                                    | I want to …​                     | So that I can…​                                                        |","lastModifiedDate":"2020-05-23"},{"lineNumber":568,"author":{"gitId":"-"},"content":"| -------- | ------------------------------------------ | ------------------------------ | ---------------------------------------------------------------------- |","lastModifiedDate":"2020-05-23"},{"lineNumber":569,"author":{"gitId":"-"},"content":"| `* * *`  | new user                                   | see usage instructions         | refer to instructions when I forget how to use the App                 |","lastModifiedDate":"2020-05-23"},{"lineNumber":570,"author":{"gitId":"cwnm"},"content":"| `* * *`  | user                                       | add a new client               |                                                                        |","lastModifiedDate":"2022-03-04"},{"lineNumber":571,"author":{"gitId":"cwnm"},"content":"| `* * *`  | user                                       | delete a client                | remove entries that I no longer need                                   |","lastModifiedDate":"2022-03-04"},{"lineNumber":572,"author":{"gitId":"cwnm"},"content":"| `* * *`  | user                                       | find a client by name          | locate details of clients without having to go through the entire list |","lastModifiedDate":"2022-03-04"},{"lineNumber":573,"author":{"gitId":"-"},"content":"| `* *`    | user                                       | hide private contact details   | minimize chance of someone else seeing them by accident                |","lastModifiedDate":"2020-05-23"},{"lineNumber":574,"author":{"gitId":"cwnm"},"content":"| `*`      | user with many clients in the address book | sort clients by name           | locate a client easily                                                 |","lastModifiedDate":"2022-03-04"},{"lineNumber":575,"author":{"gitId":"janald99"},"content":"| Priority | As a …​                             | I want to …​                                                                     | So that I can…​                         ","lastModifiedDate":"2022-03-25"},{"lineNumber":576,"author":{"gitId":"WJunHong"},"content":"| `* * *` | housing agent with many clients     | view client details fast                                                         | can deal with customers easily when they contact me |","lastModifiedDate":"2022-02-25"},{"lineNumber":577,"author":{"gitId":"WJunHong"},"content":"| `* * *` | housing agent                       | add a new client quickly with a quick description                                | update my client list efficiently                   |","lastModifiedDate":"2022-02-25"},{"lineNumber":578,"author":{"gitId":"WJunHong"},"content":"| `* * *` | housing agent                       | see relevant information about my clients                                        | understand their needs                              |","lastModifiedDate":"2022-02-25"},{"lineNumber":579,"author":{"gitId":"WJunHong"},"content":"| `* * *` | housing agent                       | edit my client data                                                              | stay in touch with their changing needs             |","lastModifiedDate":"2022-02-25"},{"lineNumber":580,"author":{"gitId":"WJunHong"},"content":"| `* * *` | housing agent                       | delete a client when their house has been sold or after they have bought a house | not mix up information in the future                |","lastModifiedDate":"2022-02-25"},{"lineNumber":581,"author":{"gitId":"WJunHong"},"content":"| `* * *` | housing agent                       | access some of my favourite clients quickly                                      | always focus on them                                |","lastModifiedDate":"2022-02-25"},{"lineNumber":582,"author":{"gitId":"WJunHong"},"content":"| `* * *` | housing agent                       | \"tag\" my clients with custom text                                                | remember every client easily                        |","lastModifiedDate":"2022-02-25"},{"lineNumber":583,"author":{"gitId":"WJunHong"},"content":"| `* * *` | housing agent with too many clients | be able to find a client by name                                                 | locate them easily and quickly                      |","lastModifiedDate":"2022-02-25"},{"lineNumber":584,"author":{"gitId":"WJunHong"},"content":"| `* *`  | housing agent                       | have access to my search history                                                 | look up my recently contacted clients               |","lastModifiedDate":"2022-02-25"},{"lineNumber":585,"author":{"gitId":"WJunHong"},"content":"| `* *`  | new user                            | have a quick guide to start me off                                               | learn how to use the application                    |","lastModifiedDate":"2022-02-25"},{"lineNumber":586,"author":{"gitId":"WJunHong"},"content":"| `* *`  | housing agent                       | check my important deadlines                                                     | avoid missing important meetings with my clients    |","lastModifiedDate":"2022-02-25"},{"lineNumber":587,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":588,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":589,"author":{"gitId":"-"},"content":"*{More to be added}*","lastModifiedDate":"2020-05-23"},{"lineNumber":590,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":591,"author":{"gitId":"-"},"content":"### Use cases","lastModifiedDate":"2020-06-07"},{"lineNumber":592,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":593,"author":{"gitId":"WJunHong"},"content":"(For all use cases below, the **System** is `AgentSee` and the **Actor** is the `user`, unless specified otherwise)","lastModifiedDate":"2022-02-25"},{"lineNumber":594,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":595,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":596,"author":{"gitId":"cwnm"},"content":"**Use case: Delete a client**","lastModifiedDate":"2022-03-04"},{"lineNumber":597,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":598,"author":{"gitId":"-"},"content":"**MSS**","lastModifiedDate":"2020-05-23"},{"lineNumber":599,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":600,"author":{"gitId":"cwnm"},"content":"1.  User requests to list clients","lastModifiedDate":"2022-03-04"},{"lineNumber":601,"author":{"gitId":"cwnm"},"content":"2.  AddressBook shows a list of clients","lastModifiedDate":"2022-03-04"},{"lineNumber":602,"author":{"gitId":"cwnm"},"content":"3.  User requests to delete a specific client in the list","lastModifiedDate":"2022-03-04"},{"lineNumber":603,"author":{"gitId":"cwnm"},"content":"4.  AddressBook deletes the client","lastModifiedDate":"2022-03-04"},{"lineNumber":604,"author":{"gitId":"janald99"},"content":"","lastModifiedDate":"2022-03-25"},{"lineNumber":605,"author":{"gitId":"WJunHong"},"content":"**Use case: Add a client**","lastModifiedDate":"2022-02-25"},{"lineNumber":606,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":607,"author":{"gitId":"-"},"content":"**MSS**","lastModifiedDate":"2020-05-23"},{"lineNumber":608,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":609,"author":{"gitId":"WJunHong"},"content":"1.  User types in client information","lastModifiedDate":"2022-02-25"},{"lineNumber":610,"author":{"gitId":"WJunHong"},"content":"2.  AddressBook adds the new client","lastModifiedDate":"2022-02-25"},{"lineNumber":611,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":612,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":613,"author":{"gitId":"-"},"content":"    Use case ends.","lastModifiedDate":"2020-05-23"},{"lineNumber":614,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":615,"author":{"gitId":"-"},"content":"**Extensions**","lastModifiedDate":"2020-05-23"},{"lineNumber":616,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":617,"author":{"gitId":"WJunHong"},"content":"* 1a. The wrong format is used.","lastModifiedDate":"2022-02-25"},{"lineNumber":618,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":619,"author":{"gitId":"WJunHong"},"content":"  * 1a1. System shows an error message.","lastModifiedDate":"2022-02-25"},{"lineNumber":620,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-02-25"},{"lineNumber":621,"author":{"gitId":"WJunHong"},"content":"    Use case resumes at step 1.","lastModifiedDate":"2022-02-25"},{"lineNumber":622,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-02-25"},{"lineNumber":623,"author":{"gitId":"WJunHong"},"content":"* 1b. A duplicate client is entered.","lastModifiedDate":"2022-02-25"},{"lineNumber":624,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-02-25"},{"lineNumber":625,"author":{"gitId":"WJunHong"},"content":"    * 1b. System shows an error message.","lastModifiedDate":"2022-02-25"},{"lineNumber":626,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":627,"author":{"gitId":"WJunHong"},"content":"      Use case resumes at step 1.","lastModifiedDate":"2022-02-25"},{"lineNumber":628,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":629,"author":{"gitId":"WJunHong"},"content":"*{More to be added}*","lastModifiedDate":"2022-02-25"},{"lineNumber":630,"author":{"gitId":"WJunHong"},"content":"","lastModifiedDate":"2022-02-25"},{"lineNumber":631,"author":{"gitId":"WJunHong"},"content":"**Use case: Edit a client**","lastModifiedDate":"2022-02-25"},{"lineNumber":632,"author":{"gitId":"WJunHong"},"content":"","lastModifiedDate":"2022-02-25"},{"lineNumber":633,"author":{"gitId":"WJunHong"},"content":"*{More to be added}*","lastModifiedDate":"2022-02-25"},{"lineNumber":634,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":635,"author":{"gitId":"WJunHong"},"content":"**Use case: Delete a client**","lastModifiedDate":"2022-02-25"},{"lineNumber":636,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":637,"author":{"gitId":"-"},"content":"*{More to be added}*","lastModifiedDate":"2020-05-23"},{"lineNumber":638,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":639,"author":{"gitId":"-"},"content":"### Non-Functional Requirements","lastModifiedDate":"2020-05-23"},{"lineNumber":640,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":641,"author":{"gitId":"cwnm"},"content":"","lastModifiedDate":"2022-03-04"},{"lineNumber":642,"author":{"gitId":"-"},"content":"1.  Should work on any _mainstream OS_ as long as it has Java `11` or above installed.","lastModifiedDate":"2020-05-23"},{"lineNumber":643,"author":{"gitId":"cwnm"},"content":"2.  Should be able to hold up to 1000 clients without a noticeable sluggishness in performance for typical usage.","lastModifiedDate":"2022-03-04"},{"lineNumber":644,"author":{"gitId":"-"},"content":"3.  A user with above average typing speed for regular English text (i.e. not code, not system admin commands) should be able to accomplish most of the tasks faster using commands than using the mouse.","lastModifiedDate":"2020-05-23"},{"lineNumber":645,"author":{"gitId":"janald99"},"content":"1.  Essential: Technical: Should work on any _mainstream OS_ as long as it has Java `11` or above installed.","lastModifiedDate":"2022-02-28"},{"lineNumber":646,"author":{"gitId":"janald99"},"content":"2.  Typical: Performance: Should be able to hold up to 1000 clients without a noticeable sluggishness in performance for typical usage.","lastModifiedDate":"2022-02-28"},{"lineNumber":647,"author":{"gitId":"janald99"},"content":"3.  Typical: A user with above average typing speed for regular English text (i.e. not code, not system admin commands) should be able to accomplish most of the tasks faster using commands than using the mouse.","lastModifiedDate":"2022-02-28"},{"lineNumber":648,"author":{"gitId":"janald99"},"content":"4.  Essential\" Technical: Should work on both 32-bit and 64-bit environments.","lastModifiedDate":"2022-02-28"},{"lineNumber":649,"author":{"gitId":"janald99"},"content":"5.  Novel: Quality: Should be usable by a novice who is not extremely tech savvy.","lastModifiedDate":"2022-02-28"},{"lineNumber":650,"author":{"gitId":"janald99"},"content":"6.  Typical: Scalability: Features and improvements should be easy to implement iteratively.","lastModifiedDate":"2022-02-28"},{"lineNumber":651,"author":{"gitId":"janald99"},"content":"6.  Typical: Constraints: Minimal mouse clicking to interact with Ui.","lastModifiedDate":"2022-02-28"},{"lineNumber":652,"author":{"gitId":"janald99"},"content":"7.  Essential: Process requirements: the project is expected to adhere to a schedule that delivers a feature set according to the module requirements.","lastModifiedDate":"2022-02-28"},{"lineNumber":653,"author":{"gitId":"janald99"},"content":"8.  Typical: Business/domain: Clients should be unique; they cannot have the exact same fields.","lastModifiedDate":"2022-02-28"},{"lineNumber":654,"author":{"gitId":"janald99"},"content":"9.  Notes about project scope: the product is not required to handle any sort of physical printing (e.g client list hardcopy).","lastModifiedDate":"2022-02-28"},{"lineNumber":655,"author":{"gitId":"janald99"},"content":"10. Typical: Disaster recovery: If user makes a mistake on his client list, he should be able to recover from the mistake quickly without too much stress.","lastModifiedDate":"2022-02-28"},{"lineNumber":656,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":657,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":658,"author":{"gitId":"-"},"content":"*{More to be added}*","lastModifiedDate":"2020-05-23"},{"lineNumber":659,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":660,"author":{"gitId":"-"},"content":"### Glossary","lastModifiedDate":"2020-05-23"},{"lineNumber":661,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":662,"author":{"gitId":"-"},"content":"* **Mainstream OS**: Windows, Linux, Unix, OS-X","lastModifiedDate":"2020-05-23"},{"lineNumber":663,"author":{"gitId":"-"},"content":"* **Private contact detail**: A contact detail that is not meant to be shared with others","lastModifiedDate":"2020-05-23"},{"lineNumber":664,"author":{"gitId":"janald99"},"content":"* **Real estate agent**: Agent who is the medium that manages clients, and is the target persona for our product.","lastModifiedDate":"2022-03-04"},{"lineNumber":665,"author":{"gitId":"janald99"},"content":"* **Client**: Seller who is looking to sell their property.","lastModifiedDate":"2022-03-04"},{"lineNumber":666,"author":{"gitId":"janald99"},"content":"* **Address**: Address of the Property that Sellers are trying to sell.","lastModifiedDate":"2022-02-28"},{"lineNumber":667,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":668,"author":{"gitId":"-"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2020-05-23"},{"lineNumber":669,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":670,"author":{"gitId":"-"},"content":"## **Appendix: Instructions for manual testing**","lastModifiedDate":"2020-05-23"},{"lineNumber":671,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":672,"author":{"gitId":"-"},"content":"Given below are instructions to test the app manually.","lastModifiedDate":"2020-05-23"},{"lineNumber":673,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":674,"author":{"gitId":"-"},"content":"\u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-info\"\u003e:information_source: **Note:** These instructions only provide a starting point for testers to work on;","lastModifiedDate":"2020-05-23"},{"lineNumber":675,"author":{"gitId":"-"},"content":"testers are expected to do more *exploratory* testing.","lastModifiedDate":"2020-05-23"},{"lineNumber":676,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":677,"author":{"gitId":"-"},"content":"\u003c/div\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":678,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":679,"author":{"gitId":"-"},"content":"### Launch and shutdown","lastModifiedDate":"2020-05-23"},{"lineNumber":680,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":681,"author":{"gitId":"-"},"content":"1. Initial launch","lastModifiedDate":"2020-05-23"},{"lineNumber":682,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":683,"author":{"gitId":"-"},"content":"   1. Download the jar file and copy into an empty folder","lastModifiedDate":"2020-05-23"},{"lineNumber":684,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":685,"author":{"gitId":"-"},"content":"   1. Double-click the jar file Expected: Shows the GUI with a set of sample contacts. The window size may not be optimum.","lastModifiedDate":"2020-05-23"},{"lineNumber":686,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":687,"author":{"gitId":"-"},"content":"1. Saving window preferences","lastModifiedDate":"2020-05-23"},{"lineNumber":688,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":689,"author":{"gitId":"-"},"content":"   1. Resize the window to an optimum size. Move the window to a different location. Close the window.","lastModifiedDate":"2020-05-23"},{"lineNumber":690,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":691,"author":{"gitId":"-"},"content":"   1. Re-launch the app by double-clicking the jar file.\u003cbr\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":692,"author":{"gitId":"-"},"content":"       Expected: The most recent window size and location is retained.","lastModifiedDate":"2020-05-23"},{"lineNumber":693,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":694,"author":{"gitId":"-"},"content":"1. _{ more test cases …​ }_","lastModifiedDate":"2020-05-23"},{"lineNumber":695,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":696,"author":{"gitId":"cwnm"},"content":"### Deleting a client","lastModifiedDate":"2022-03-04"},{"lineNumber":697,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":698,"author":{"gitId":"cwnm"},"content":"1. Deleting a client while all clients are being shown","lastModifiedDate":"2022-03-04"},{"lineNumber":699,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":700,"author":{"gitId":"cwnm"},"content":"   1. Prerequisites: List all clients using the `list` command. Multiple clients in the list.","lastModifiedDate":"2022-03-04"},{"lineNumber":701,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":702,"author":{"gitId":"-"},"content":"   1. Test case: `delete 1`\u003cbr\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":703,"author":{"gitId":"-"},"content":"      Expected: First contact is deleted from the list. Details of the deleted contact shown in the status message. Timestamp in the status bar is updated.","lastModifiedDate":"2020-05-23"},{"lineNumber":704,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":705,"author":{"gitId":"-"},"content":"   1. Test case: `delete 0`\u003cbr\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":706,"author":{"gitId":"cwnm"},"content":"      Expected: No client is deleted. Error details shown in the status message. Status bar remains the same.","lastModifiedDate":"2022-03-04"},{"lineNumber":707,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":708,"author":{"gitId":"-"},"content":"   1. Other incorrect delete commands to try: `delete`, `delete x`, `...` (where x is larger than the list size)\u003cbr\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":709,"author":{"gitId":"-"},"content":"      Expected: Similar to previous.","lastModifiedDate":"2020-05-23"},{"lineNumber":710,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":711,"author":{"gitId":"-"},"content":"1. _{ more test cases …​ }_","lastModifiedDate":"2020-05-23"},{"lineNumber":712,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":713,"author":{"gitId":"-"},"content":"### Saving data","lastModifiedDate":"2020-05-23"},{"lineNumber":714,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":715,"author":{"gitId":"-"},"content":"1. Dealing with missing/corrupted data files","lastModifiedDate":"2020-05-23"},{"lineNumber":716,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":717,"author":{"gitId":"-"},"content":"   1. _{explain how to simulate a missing/corrupted file, and the expected behavior}_","lastModifiedDate":"2020-05-23"},{"lineNumber":718,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":719,"author":{"gitId":"-"},"content":"1. _{ more test cases …​ }_","lastModifiedDate":"2020-05-23"}],"authorContributionMap":{"janald99":103,"WJunHong":107,"Jacky142857":31,"-":352,"cwnm":63,"chuashihong":63}},{"path":"docs/UserGuide.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"---","lastModifiedDate":"2020-05-23"},{"lineNumber":2,"author":{"gitId":"-"},"content":"layout: page","lastModifiedDate":"2020-05-23"},{"lineNumber":3,"author":{"gitId":"-"},"content":"title: User Guide","lastModifiedDate":"2020-05-23"},{"lineNumber":4,"author":{"gitId":"-"},"content":"---","lastModifiedDate":"2020-05-23"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":6,"author":{"gitId":"janald99"},"content":"AgentSee is a **desktop application for property agents to manage clients.** It is:","lastModifiedDate":"2022-03-30"},{"lineNumber":7,"author":{"gitId":"janald99"},"content":"* optimized for use via a Command Line Interface (CLI) while still having the benefits of a Graphical User Interface (GUI). ","lastModifiedDate":"2022-03-30"},{"lineNumber":8,"author":{"gitId":"janald99"},"content":"  - So if you can type fast, AgentSee can get your client management tasks done faster than traditional GUI apps!","lastModifiedDate":"2022-03-30"},{"lineNumber":9,"author":{"gitId":"janald99"},"content":"  ","lastModifiedDate":"2022-03-30"},{"lineNumber":10,"author":{"gitId":"janald99"},"content":"* Easy to use! The User Guide and the application is very easy to navigate!","lastModifiedDate":"2022-03-30"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-03-30"},{"lineNumber":12,"author":{"gitId":"janald99"},"content":"* ~~Cheap~~ FREE!","lastModifiedDate":"2022-03-30"},{"lineNumber":13,"author":{"gitId":"-"},"content":"* Table of Contents","lastModifiedDate":"2020-05-23"},{"lineNumber":14,"author":{"gitId":"-"},"content":"{:toc}","lastModifiedDate":"2020-05-23"},{"lineNumber":15,"author":{"gitId":"-"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2020-05-23"},{"lineNumber":16,"author":{"gitId":"-"},"content":"## Quick start","lastModifiedDate":"2020-05-23"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":18,"author":{"gitId":"WJunHong"},"content":"1. Ensure you have Java `11` or above installed in your Computer. If you do not have it installed, download it [here](https://www.oracle.com/java/technologies/downloads/#java11).","lastModifiedDate":"2022-03-29"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":20,"author":{"gitId":"WJunHong"},"content":"2. Download the latest application .jar file from our GitHub [here](https://github.com/AY2122S2-CS2103T-T11-2/tp/releases).","lastModifiedDate":"2022-03-29"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":22,"author":{"gitId":"WJunHong"},"content":"3. Copy the .jar file to any folder which you wish to store the AgentSee application in. It is recommended that the folder is **empty** before copying in the .jar file.","lastModifiedDate":"2022-03-29"},{"lineNumber":23,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":24,"author":{"gitId":"WJunHong"},"content":"4. Double-click the file to start the app. A GUI similar to the one below should appear in a few seconds. Note that sample data will be automatically added when running the .jar file for the first time.\u003cbr\u003e","lastModifiedDate":"2022-03-29"},{"lineNumber":25,"author":{"gitId":"janald99"},"content":"   ![Ui](images/UI.png)","lastModifiedDate":"2022-03-30"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":27,"author":{"gitId":"WJunHong"},"content":"5. Input a command in the command box and press Enter on your keyboard to execute it.","lastModifiedDate":"2022-03-29"},{"lineNumber":28,"author":{"gitId":"WJunHong"},"content":"   - E.g. `add-b n/David p/62353535` ","lastModifiedDate":"2022-03-29"},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":30,"author":{"gitId":"WJunHong"},"content":"6. Refer to the [Features](#features) section further below for full details of possible commands to input.","lastModifiedDate":"2022-03-29"},{"lineNumber":31,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":32,"author":{"gitId":"WJunHong"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2022-03-29"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":34,"author":{"gitId":"WJunHong"},"content":"## Features","lastModifiedDate":"2022-03-29"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":36,"author":{"gitId":"WJunHong"},"content":"The Features section will be split into 3 subsections for:","lastModifiedDate":"2022-03-29"},{"lineNumber":37,"author":{"gitId":"WJunHong"},"content":"1. General commands","lastModifiedDate":"2022-03-29"},{"lineNumber":38,"author":{"gitId":"WJunHong"},"content":"2. Buyer-specific commands","lastModifiedDate":"2022-03-29"},{"lineNumber":39,"author":{"gitId":"WJunHong"},"content":"3. Seller-specific commands","lastModifiedDate":"2022-03-29"},{"lineNumber":40,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":41,"author":{"gitId":"-"},"content":"\u003cdiv markdown\u003d\"block\" class\u003d\"alert alert-info\"\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":42,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":43,"author":{"gitId":"WJunHong"},"content":"**:information_source: Notes about the command format and terminology:**\u003cbr\u003e","lastModifiedDate":"2022-03-30"},{"lineNumber":44,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-03-30"},{"lineNumber":45,"author":{"gitId":"WJunHong"},"content":"* Buyer: Someone who is seeking to purchase property.","lastModifiedDate":"2022-03-30"},{"lineNumber":46,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-03-30"},{"lineNumber":47,"author":{"gitId":"WJunHong"},"content":"* Seller: Someone who is seeking to sell their property.","lastModifiedDate":"2022-03-31"},{"lineNumber":48,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":49,"author":{"gitId":"WJunHong"},"content":"* Leading zeros will be ignored in **index-based** inputs. E.g. `delete-b 1` and `delete-b 00001` are equivalent.","lastModifiedDate":"2022-04-06"},{"lineNumber":50,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-04-06"},{"lineNumber":51,"author":{"gitId":"WJunHong"},"content":"* Words in `UPPER_CASE` are inputs to be supplied by the user.\u003cbr\u003e","lastModifiedDate":"2022-03-29"},{"lineNumber":52,"author":{"gitId":"WJunHong"},"content":"  e.g. In `add-b n/NAME`, `NAME` is an input such as `add-b n/Chok Hoe`.","lastModifiedDate":"2022-03-30"},{"lineNumber":53,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-03-29"},{"lineNumber":54,"author":{"gitId":"WJunHong"},"content":"* Items in square brackets are optional inputs.\u003cbr\u003e","lastModifiedDate":"2022-03-29"},{"lineNumber":55,"author":{"gitId":"WJunHong"},"content":"  e.g In `n/NAME [t/TAG]`, the user can input `n/Chok Hoe t/funny` or simply `n/Chok Hoe`.","lastModifiedDate":"2022-03-29"},{"lineNumber":56,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":57,"author":{"gitId":"WJunHong"},"content":"* Inputs with `…`​ after them can be used more than once.\u003cbr\u003e","lastModifiedDate":"2022-03-29"},{"lineNumber":58,"author":{"gitId":"WJunHong"},"content":"  e.g. In `[t/TAG]…​`, the user can input `t/friend` or `t/friend t/family` etc.","lastModifiedDate":"2022-03-29"},{"lineNumber":59,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":60,"author":{"gitId":"WJunHong"},"content":"* Input can be in any order.\u003cbr\u003e","lastModifiedDate":"2022-03-29"},{"lineNumber":61,"author":{"gitId":"WJunHong"},"content":"  e.g. Even if the command specifies `n/NAME p/PHONE_NUMBER` in the documentation, `p/PHONE_NUMBER n/NAME` is also acceptable.","lastModifiedDate":"2022-03-29"},{"lineNumber":62,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":63,"author":{"gitId":"WJunHong"},"content":"* If an input is expected only once in the command, but you specified it multiple times, only the **last occurrence** of the input will be taken.\u003cbr\u003e","lastModifiedDate":"2022-04-06"},{"lineNumber":64,"author":{"gitId":"WJunHong"},"content":"  e.g. If you specify `add-b n/Chok Hoe p/12341234 p/56785678`, only `p/56785678` will be taken.","lastModifiedDate":"2022-03-30"},{"lineNumber":65,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":66,"author":{"gitId":"WJunHong"},"content":"* If an input type not specified for a command is used E.g. `pr/` in `add-b`, it will be treated as part of the preceding input. E.g. `add-b n/David pr/1,2 Gareth p/12345` will see `NAME` as `David pr/1,2 Gareth`, which is invalid.","lastModifiedDate":"2022-04-06"},{"lineNumber":67,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-04-06"},{"lineNumber":68,"author":{"gitId":"WJunHong"},"content":"* Respect the spacing used in **all** command formats. E.g. `add-b n/Chok Hoep/12345 p/123467` will treat `NAME` as `Chok Hoep/12345`, which is invalid.","lastModifiedDate":"2022-04-06"},{"lineNumber":69,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-04-06"},{"lineNumber":70,"author":{"gitId":"WJunHong"},"content":"* Additional input for single-word commands (such as `help`, `list-s`, `exit` and `clear-b`) will be ignored and the application will continue executing the command.\u003cbr\u003e","lastModifiedDate":"2022-04-06"},{"lineNumber":71,"author":{"gitId":"WJunHong"},"content":"  e.g. If the input specifies `help 123`, it will be interpreted as `help`.","lastModifiedDate":"2022-03-29"},{"lineNumber":72,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-02-04"},{"lineNumber":73,"author":{"gitId":"WJunHong"},"content":"* **Property** refers to different things dependent on whether it is used under a Buyer-specific or Seller-specific command.","lastModifiedDate":"2022-03-29"},{"lineNumber":74,"author":{"gitId":"WJunHong"},"content":"  * For Buyer-specific commands, it refers to the **general property they are looking to buy**. E.g. \"A HDB in Serangoon for $500,000 to $600,000\".","lastModifiedDate":"2022-03-29"},{"lineNumber":75,"author":{"gitId":"WJunHong"},"content":"  * For Seller-specific commands, it refers to the **exact property they are looking to sell**. E.g. \"A HDB at Blk 333, Kent Ridge Drive #03-3333 for $700,000 to $710,000\".","lastModifiedDate":"2022-03-29"},{"lineNumber":76,"author":{"gitId":"WJunHong"},"content":"  * Both property types include a **Location**, **Price range** and **House type**. E.g. In the 1st example, HDB is the house type, Serangoon is the location, and $500,000 to $600,000 (inclusive) is the price range.","lastModifiedDate":"2022-03-29"},{"lineNumber":77,"author":{"gitId":"WJunHong"},"content":"  * However, Seller-specific property has an **Address** defining the exact address their property is located. E.g. In the 2nd example, address is Blk 333, Kent Ridge Drive #03-3333.","lastModifiedDate":"2022-03-29"},{"lineNumber":78,"author":{"gitId":"WJunHong"},"content":"  * To learn more about **formatting** your property inputs see below. To see more **requirements** for inputs, refer to `add-ptb` and `add-pts` commands.","lastModifiedDate":"2022-04-06"},{"lineNumber":79,"author":{"gitId":"WJunHong"},"content":"* Formatting your Property inputs:","lastModifiedDate":"2022-04-06"},{"lineNumber":80,"author":{"gitId":"WJunHong"},"content":"  * **House type** can be inputted as any of the following (case-insensitive):","lastModifiedDate":"2022-04-06"},{"lineNumber":81,"author":{"gitId":"WJunHong"},"content":"    1. **Unspecified**: `unspecified` or `any`","lastModifiedDate":"2022-04-06"},{"lineNumber":82,"author":{"gitId":"WJunHong"},"content":"    2. **Apartment**: `apartment`","lastModifiedDate":"2022-04-06"},{"lineNumber":83,"author":{"gitId":"WJunHong"},"content":"    3. **Bungalow**: `bungalow`","lastModifiedDate":"2022-04-06"},{"lineNumber":84,"author":{"gitId":"WJunHong"},"content":"    4. **Condominium**: `condominium` or `condo`","lastModifiedDate":"2022-04-06"},{"lineNumber":85,"author":{"gitId":"WJunHong"},"content":"    5. **Colonia**: `colonia`","lastModifiedDate":"2022-04-06"},{"lineNumber":86,"author":{"gitId":"WJunHong"},"content":"    6. **HDB**: `hdb` or `hdb_flat`","lastModifiedDate":"2022-04-06"},{"lineNumber":87,"author":{"gitId":"WJunHong"},"content":"    7. **Semi-detached**: `semi-detached` or `semi-d` or `semidetached` or `semid`","lastModifiedDate":"2022-04-06"},{"lineNumber":88,"author":{"gitId":"WJunHong"},"content":"    8. **Mansion**: `mansion` ","lastModifiedDate":"2022-04-06"},{"lineNumber":89,"author":{"gitId":"WJunHong"},"content":"    - Any other house type is not accepted.","lastModifiedDate":"2022-04-06"},{"lineNumber":90,"author":{"gitId":"WJunHong"},"content":"  * **Location** \u0026 **Address** must be non-empty, and can contain **alphabets**, **numerics** and **special symbols**. E.g. `Kent Ridge 1/2`. ","lastModifiedDate":"2022-04-06"},{"lineNumber":91,"author":{"gitId":"WJunHong"},"content":"    * However, inputs like `l/Bishan h/hdb` will be treated as `l/Bishan` \u0026 `h/hdb` (see above).","lastModifiedDate":"2022-04-06"},{"lineNumber":92,"author":{"gitId":"WJunHong"},"content":"    * Typing `l/Bishanh/abcpr/0,2` is still acceptable and will treat `Bishanh/abcpr/0,2` as the location input.","lastModifiedDate":"2022-04-06"},{"lineNumber":93,"author":{"gitId":"WJunHong"},"content":"  * **Price range** must be in a `lower,upper` format. E.g. `1000,2000`","lastModifiedDate":"2022-04-06"},{"lineNumber":94,"author":{"gitId":"WJunHong"},"content":"* The **displayed seller list** \u0026 **displayed buyer list** are the sellers and buyers shown on the UI of the application respectively. They do not refer to the entire list of buyers \u0026 sellers.","lastModifiedDate":"2022-03-29"},{"lineNumber":95,"author":{"gitId":"WJunHong"},"content":"* If we do refer to the whole list of buyers or sellers, we will just use **buyer list** or **seller list** respectively.","lastModifiedDate":"2022-03-29"},{"lineNumber":96,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-02-03"},{"lineNumber":97,"author":{"gitId":"-"},"content":"\u003c/div\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":98,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":99,"author":{"gitId":"janald99"},"content":"### General commands","lastModifiedDate":"2022-03-30"},{"lineNumber":100,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-03-30"},{"lineNumber":101,"author":{"gitId":"janald99"},"content":"#### Help! `help`","lastModifiedDate":"2022-03-30"},{"lineNumber":102,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":103,"author":{"gitId":"WJunHong"},"content":"Function: Show a message explaining how to access the help page.","lastModifiedDate":"2022-03-30"},{"lineNumber":104,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":105,"author":{"gitId":"-"},"content":"![help message](images/helpMessage.png)","lastModifiedDate":"2020-05-23"},{"lineNumber":106,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":107,"author":{"gitId":"-"},"content":"Format: `help`","lastModifiedDate":"2020-05-23"},{"lineNumber":108,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":109,"author":{"gitId":"janald99"},"content":"#### Exiting. `exit`","lastModifiedDate":"2022-03-30"},{"lineNumber":110,"author":{"gitId":"WJunHong"},"content":"","lastModifiedDate":"2022-03-29"},{"lineNumber":111,"author":{"gitId":"janald99"},"content":"Function: Exit the program. Don\u0027t worry, we will save your data!","lastModifiedDate":"2022-03-30"},{"lineNumber":112,"author":{"gitId":"WJunHong"},"content":"","lastModifiedDate":"2022-03-29"},{"lineNumber":113,"author":{"gitId":"WJunHong"},"content":"Format: `exit`","lastModifiedDate":"2022-03-29"},{"lineNumber":114,"author":{"gitId":"WJunHong"},"content":"","lastModifiedDate":"2022-03-29"},{"lineNumber":115,"author":{"gitId":"WJunHong"},"content":"[back to start of section](#features)","lastModifiedDate":"2022-03-29"},{"lineNumber":116,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-03-29"},{"lineNumber":117,"author":{"gitId":"cwnm"},"content":"#### Clear. `clear-all`","lastModifiedDate":"2022-03-31"},{"lineNumber":118,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-03-31"},{"lineNumber":119,"author":{"gitId":"WJunHong"},"content":"Function: Clears both buyer and seller lists.","lastModifiedDate":"2022-03-31"},{"lineNumber":120,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-03-31"},{"lineNumber":121,"author":{"gitId":"cwnm"},"content":"\u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-primary\"\u003e","lastModifiedDate":"2022-03-31"},{"lineNumber":122,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-03-31"},{"lineNumber":123,"author":{"gitId":"cwnm"},"content":":bulb: **Caution:** This action **cannot be undone**! Be careful when changing a buyer\u0027s information.","lastModifiedDate":"2022-03-31"},{"lineNumber":124,"author":{"gitId":"-"},"content":"\u003c/div\u003e","lastModifiedDate":"2022-03-31"},{"lineNumber":125,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-03-31"},{"lineNumber":126,"author":{"gitId":"cwnm"},"content":"Format: `clear-all`","lastModifiedDate":"2022-03-31"},{"lineNumber":127,"author":{"gitId":"cwnm"},"content":"","lastModifiedDate":"2022-03-31"},{"lineNumber":128,"author":{"gitId":"janald99"},"content":"### Buyer-specific commands","lastModifiedDate":"2022-03-30"},{"lineNumber":129,"author":{"gitId":"janald99"},"content":"","lastModifiedDate":"2022-03-30"},{"lineNumber":130,"author":{"gitId":"janald99"},"content":"#### Listing buyers. `list-b`","lastModifiedDate":"2022-03-30"},{"lineNumber":131,"author":{"gitId":"WJunHong"},"content":"","lastModifiedDate":"2022-03-29"},{"lineNumber":132,"author":{"gitId":"janald99"},"content":"Function: Display the buyer list.","lastModifiedDate":"2022-03-30"},{"lineNumber":133,"author":{"gitId":"WJunHong"},"content":"","lastModifiedDate":"2022-03-29"},{"lineNumber":134,"author":{"gitId":"WJunHong"},"content":"Format: `list-b`","lastModifiedDate":"2022-03-29"},{"lineNumber":135,"author":{"gitId":"WJunHong"},"content":"","lastModifiedDate":"2022-03-29"},{"lineNumber":136,"author":{"gitId":"janald99"},"content":"#### Adding buyers. `add-b`","lastModifiedDate":"2022-03-30"},{"lineNumber":137,"author":{"gitId":"WJunHong"},"content":"","lastModifiedDate":"2022-03-29"},{"lineNumber":138,"author":{"gitId":"janald99"},"content":"Function: Add a buyer to the buyer list. This is essential for you to add a buyer\u0027s data.","lastModifiedDate":"2022-03-30"},{"lineNumber":139,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":140,"author":{"gitId":"WJunHong"},"content":"Format: `add-b n/NAME p/PHONE_NUMBER [t/TAG]...`","lastModifiedDate":"2022-03-30"},{"lineNumber":141,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":142,"author":{"gitId":"WJunHong"},"content":"* The order of inputs can be in any order.","lastModifiedDate":"2022-03-29"},{"lineNumber":143,"author":{"gitId":"WJunHong"},"content":"* The `NAME`, `PHONE_NUMBER` and `TAG` cannot be empty. E.g. `n/` or `n/` followed by only spaces or tabs.","lastModifiedDate":"2022-04-06"},{"lineNumber":144,"author":{"gitId":"WJunHong"},"content":"* `NAME` should only contain **alphanumeric** characters. E.g. `John 1` or `John 2` if you are using numbers to differentiate buyers with the same name.","lastModifiedDate":"2022-04-06"},{"lineNumber":145,"author":{"gitId":"WJunHong"},"content":"* `NAME` cannot be repeated for different buyers. E.g. `John` \u0026 `John`. However, we allow for different cases. E.g. `John` \u0026 `john`.","lastModifiedDate":"2022-04-06"},{"lineNumber":146,"author":{"gitId":"WJunHong"},"content":"* `PHONE_NUMBER` can only contain non-negative whole numbers E.g. `1234`, `0000` (zero) and must be at least 3 digits long E.g. `001` is accepted but `01` is not.","lastModifiedDate":"2022-04-06"},{"lineNumber":147,"author":{"gitId":"WJunHong"},"content":"* Multiple different buyers or sellers might have the same phone number. E.g. Buyer `John`, Buyer `Bob` and Seller `Jess` have phone number `62353535`. This is because the phone number might be a home number/office number which multiple clients can share.","lastModifiedDate":"2022-04-06"},{"lineNumber":148,"author":{"gitId":"WJunHong"},"content":"* When a buyer is initially added, they will default to having **no** Property. Use `add-ptb` to add a respective property.","lastModifiedDate":"2022-04-06"},{"lineNumber":149,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":150,"author":{"gitId":"-"},"content":"Examples:","lastModifiedDate":"2020-05-23"},{"lineNumber":151,"author":{"gitId":"WJunHong"},"content":"* `add-b n/Yu Qi p/98765432` adds a new buyer with name `Yu Qi` and phone number `98765432`","lastModifiedDate":"2022-03-30"},{"lineNumber":152,"author":{"gitId":"WJunHong"},"content":"* `add-b n/Janald p/12345678 t/friend t/criminal` adds a new buyer with name `Janald`, phone number of `12345678`, and tags of `friend` and `criminal`","lastModifiedDate":"2022-03-30"},{"lineNumber":153,"author":{"gitId":"WJunHong"},"content":"","lastModifiedDate":"2022-03-29"},{"lineNumber":154,"author":{"gitId":"janald99"},"content":"#### Adding a property to buy. `add-ptb`","lastModifiedDate":"2022-03-30"},{"lineNumber":155,"author":{"gitId":"WJunHong"},"content":"","lastModifiedDate":"2022-03-29"},{"lineNumber":156,"author":{"gitId":"WJunHong"},"content":"Function: Add a new property for the specified buyer. Add all the conditions of a property that your buyer is interested in!","lastModifiedDate":"2022-04-06"},{"lineNumber":157,"author":{"gitId":"WJunHong"},"content":"","lastModifiedDate":"2022-03-29"},{"lineNumber":158,"author":{"gitId":"WJunHong"},"content":"Format: `add-ptb INDEX l/LOCATION pr/PRICE_RANGE h/HOUSE_TYPE`","lastModifiedDate":"2022-03-29"},{"lineNumber":159,"author":{"gitId":"WJunHong"},"content":"","lastModifiedDate":"2022-03-29"},{"lineNumber":160,"author":{"gitId":"WJunHong"},"content":"* Adds a new property that the buyer at `INDEX` is hoping to buy. The index refers to the index number shown in the displayed buyer list. The index **must be a positive integer** 1, 2, 3, …​ within the size of the displayed buyer list.","lastModifiedDate":"2022-04-06"},{"lineNumber":161,"author":{"gitId":"WJunHong"},"content":"* The order of the inputs can be in any order.","lastModifiedDate":"2022-03-29"},{"lineNumber":162,"author":{"gitId":"WJunHong"},"content":"* The `PRICE_RANGE` must be a valid **non-negative integer** with `lower` being less than or equal to `upper`.","lastModifiedDate":"2022-04-06"},{"lineNumber":163,"author":{"gitId":"WJunHong"},"content":"* The `PRICE_RANGE` can include `0` since the buyer might want to try their luck and see if anyone is selling their property for free.","lastModifiedDate":"2022-04-06"},{"lineNumber":164,"author":{"gitId":"WJunHong"},"content":"* Do use appropriate `LOCATION` for your own utility. E.g. `Bishan` or `Marymount`. The application will not check if it is an actual location in Singapore or elsewhere.","lastModifiedDate":"2022-04-06"},{"lineNumber":165,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":166,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":167,"author":{"gitId":"WJunHong"},"content":"Examples:","lastModifiedDate":"2022-03-29"},{"lineNumber":168,"author":{"gitId":"WJunHong"},"content":"* `add-ptb 1 l/Bishan pr/400000,500000 h/hdb` means that 1st buyer in the displayed buyer list wishes to buy a HDB in Bishan for any price from $400,000 to $500,000. ","lastModifiedDate":"2022-03-29"},{"lineNumber":169,"author":{"gitId":"WJunHong"},"content":"","lastModifiedDate":"2022-03-29"},{"lineNumber":170,"author":{"gitId":"janald99"},"content":"#### Adding an appointment with buyer. `appt-b`","lastModifiedDate":"2022-03-30"},{"lineNumber":171,"author":{"gitId":"WJunHong"},"content":"","lastModifiedDate":"2022-03-17"},{"lineNumber":172,"author":{"gitId":"janald99"},"content":"Function: Create an appointment with a certain buyer. Now, you can keep track of your appointments with buyers!","lastModifiedDate":"2022-03-30"},{"lineNumber":173,"author":{"gitId":"WJunHong"},"content":"","lastModifiedDate":"2022-03-17"},{"lineNumber":174,"author":{"gitId":"WJunHong"},"content":"Format: `appt-b INDEX time/TIME`","lastModifiedDate":"2022-03-29"},{"lineNumber":175,"author":{"gitId":"WJunHong"},"content":"","lastModifiedDate":"2022-03-29"},{"lineNumber":176,"author":{"gitId":"WJunHong"},"content":"* Create an appointment with the buyer at the specified `INDEX`. The index refers to the index number shown in the displayed buyer list. The index **must be a positive integer** 1, 2, 3, …​ within the size of the displayed buyer list.","lastModifiedDate":"2022-04-06"},{"lineNumber":177,"author":{"gitId":"WJunHong"},"content":"* The input `TIME` is in a `yyyy-mm-dd-hh-mm` format of: the year, month, day of the month, hour and minute. Use the example below for reference.","lastModifiedDate":"2022-03-29"},{"lineNumber":178,"author":{"gitId":"WJunHong"},"content":"* The time entered must be a time in the future.","lastModifiedDate":"2022-03-29"},{"lineNumber":179,"author":{"gitId":"Jacky142857"},"content":"* To delete an appointment with a buyer, use the keyword `reset` after the `time/` prefix","lastModifiedDate":"2022-03-31"},{"lineNumber":180,"author":{"gitId":"WJunHong"},"content":"","lastModifiedDate":"2022-03-17"},{"lineNumber":181,"author":{"gitId":"WJunHong"},"content":"Examples:","lastModifiedDate":"2022-03-17"},{"lineNumber":182,"author":{"gitId":"WJunHong"},"content":"* `appt-b 1 time/2023-01-01-12-12` sets a new appointment for the 1st buyer on the displayed buyer list on 1st January 2023 and 12:12pm.","lastModifiedDate":"2022-03-29"},{"lineNumber":183,"author":{"gitId":"Jacky142857"},"content":"* `appt-b 1 time/reset` deletes the existing appointment with the 1st buyer in the list.","lastModifiedDate":"2022-03-31"},{"lineNumber":184,"author":{"gitId":"janald99"},"content":"#### Matching a buyer!","lastModifiedDate":"2022-03-31"},{"lineNumber":185,"author":{"gitId":"janald99"},"content":"","lastModifiedDate":"2022-03-30"},{"lineNumber":186,"author":{"gitId":"janald99"},"content":"Function: Display potential sellers by matching the demand of a buyer. Now, you can easily find properties that buyers are interested in!","lastModifiedDate":"2022-03-30"},{"lineNumber":187,"author":{"gitId":"janald99"},"content":"","lastModifiedDate":"2022-03-30"},{"lineNumber":188,"author":{"gitId":"janald99"},"content":"* Note: You can match a buyer only if his/her property has been added!","lastModifiedDate":"2022-04-06"},{"lineNumber":189,"author":{"gitId":"janald99"},"content":"* Want to match using just a certain criterion? Fret not! Below are the different match commands.","lastModifiedDate":"2022-04-06"},{"lineNumber":190,"author":{"gitId":"janald99"},"content":"","lastModifiedDate":"2022-03-31"},{"lineNumber":191,"author":{"gitId":"janald99"},"content":"###### Matching all fields of buyers to sellers. `match`","lastModifiedDate":"2022-03-31"},{"lineNumber":192,"author":{"gitId":"janald99"},"content":"","lastModifiedDate":"2022-03-31"},{"lineNumber":193,"author":{"gitId":"janald99"},"content":"Format: `match INDEX`","lastModifiedDate":"2022-03-30"},{"lineNumber":194,"author":{"gitId":"janald99"},"content":"","lastModifiedDate":"2022-03-30"},{"lineNumber":195,"author":{"gitId":"WJunHong"},"content":"* The index refers to the index number shown in the displayed buyer list. The index **must be a positive integer** 1, 2, 3, …​ within the size of the displayed buyer list.","lastModifiedDate":"2022-04-06"},{"lineNumber":196,"author":{"gitId":"janald99"},"content":"* A list of all sellers who have properties that are matching the buyer\u0027s property requirements will be displayed.","lastModifiedDate":"2022-03-30"},{"lineNumber":197,"author":{"gitId":"janald99"},"content":"* A seller will match to the buyer if:","lastModifiedDate":"2022-03-30"},{"lineNumber":198,"author":{"gitId":"janald99"},"content":"  * They have the same location \u0026 house type.","lastModifiedDate":"2022-03-30"},{"lineNumber":199,"author":{"gitId":"janald99"},"content":"  * If a price within the buyer\u0027s price range is within the seller\u0027s price range.","lastModifiedDate":"2022-03-30"},{"lineNumber":200,"author":{"gitId":"janald99"},"content":"* E.g. If a buyer has house type `HDB`, location `Bishan` and price range `400000,500000`, a seller with house type `HDB`, location `Bishan` and price range `490000,600000` will match as the buyer\u0027s price range has an **overlap** with the seller\u0027s.","lastModifiedDate":"2022-03-30"},{"lineNumber":201,"author":{"gitId":"janald99"},"content":"","lastModifiedDate":"2022-03-30"},{"lineNumber":202,"author":{"gitId":"-"},"content":"Examples:","lastModifiedDate":"2022-03-30"},{"lineNumber":203,"author":{"gitId":"janald99"},"content":"* `match 1` will match the 1st buyer in the displayed buyer list with all seller\u0027s with matching property criteria.","lastModifiedDate":"2022-03-30"},{"lineNumber":204,"author":{"gitId":"janald99"},"content":"","lastModifiedDate":"2022-03-30"},{"lineNumber":205,"author":{"gitId":"janald99"},"content":"###### Matching House Types of buyers to sellers. `match-h`","lastModifiedDate":"2022-03-31"},{"lineNumber":206,"author":{"gitId":"janald99"},"content":"","lastModifiedDate":"2022-03-31"},{"lineNumber":207,"author":{"gitId":"janald99"},"content":"Format: `match-h INDEX`","lastModifiedDate":"2022-03-31"},{"lineNumber":208,"author":{"gitId":"janald99"},"content":"","lastModifiedDate":"2022-03-31"},{"lineNumber":209,"author":{"gitId":"WJunHong"},"content":"* The index refers to the index number shown in the displayed buyer list. The index **must be a positive integer** 1, 2, 3, …​ within the size of the displayed buyer list.","lastModifiedDate":"2022-04-06"},{"lineNumber":210,"author":{"gitId":"janald99"},"content":"* A list of all sellers whose housetype matches the buyer\u0027s desired house type will be displayed.","lastModifiedDate":"2022-03-31"},{"lineNumber":211,"author":{"gitId":"janald99"},"content":"* A seller will match to the buyer if:","lastModifiedDate":"2022-03-31"},{"lineNumber":212,"author":{"gitId":"janald99"},"content":"  * They have the same house type.","lastModifiedDate":"2022-03-31"},{"lineNumber":213,"author":{"gitId":"janald99"},"content":"  * Buyer\u0027s house type is unspecified.","lastModifiedDate":"2022-03-31"},{"lineNumber":214,"author":{"gitId":"janald99"},"content":"* E.g. A buyer with house type `UNSPECIFIED` or `HDB_FLAT` will match with a seller with house type `HDB_FLAT`.","lastModifiedDate":"2022-03-31"},{"lineNumber":215,"author":{"gitId":"janald99"},"content":"","lastModifiedDate":"2022-03-31"},{"lineNumber":216,"author":{"gitId":"janald99"},"content":"Examples:","lastModifiedDate":"2022-03-31"},{"lineNumber":217,"author":{"gitId":"janald99"},"content":"* `match-h 1` will match the 1st buyer in the displayed buyer list with all seller\u0027s with matching property criteria.","lastModifiedDate":"2022-03-31"},{"lineNumber":218,"author":{"gitId":"janald99"},"content":"","lastModifiedDate":"2022-03-31"},{"lineNumber":219,"author":{"gitId":"janald99"},"content":"###### Matching Locations of buyers to sellers. `match-l`","lastModifiedDate":"2022-03-31"},{"lineNumber":220,"author":{"gitId":"janald99"},"content":"","lastModifiedDate":"2022-03-31"},{"lineNumber":221,"author":{"gitId":"janald99"},"content":"Format: `match-l INDEX`","lastModifiedDate":"2022-03-31"},{"lineNumber":222,"author":{"gitId":"janald99"},"content":"","lastModifiedDate":"2022-03-31"},{"lineNumber":223,"author":{"gitId":"WJunHong"},"content":"* The index refers to the index number shown in the displayed buyer list. The index **must be a positive integer** 1, 2, 3, …​ within the size of the displayed buyer list.","lastModifiedDate":"2022-04-06"},{"lineNumber":224,"author":{"gitId":"janald99"},"content":"* A list of all sellers whose location matches the buyer\u0027s desired location will be displayed.","lastModifiedDate":"2022-03-31"},{"lineNumber":225,"author":{"gitId":"janald99"},"content":"* A seller will match to the buyer if:","lastModifiedDate":"2022-03-31"},{"lineNumber":226,"author":{"gitId":"janald99"},"content":"  * They have the same house location","lastModifiedDate":"2022-03-31"},{"lineNumber":227,"author":{"gitId":"janald99"},"content":"* E.g. A buyer with house location `bishan` will match with a seller with house location `bishan`.","lastModifiedDate":"2022-03-31"},{"lineNumber":228,"author":{"gitId":"janald99"},"content":"","lastModifiedDate":"2022-03-31"},{"lineNumber":229,"author":{"gitId":"janald99"},"content":"Examples:","lastModifiedDate":"2022-03-31"},{"lineNumber":230,"author":{"gitId":"janald99"},"content":"* `match-l 1` will match the 1st buyer in the displayed buyer list with all seller\u0027s with matching property criteria.","lastModifiedDate":"2022-03-31"},{"lineNumber":231,"author":{"gitId":"janald99"},"content":"","lastModifiedDate":"2022-03-31"},{"lineNumber":232,"author":{"gitId":"janald99"},"content":"###### Matching Price Range of buyers to sellers. `match-pr`","lastModifiedDate":"2022-03-31"},{"lineNumber":233,"author":{"gitId":"janald99"},"content":"","lastModifiedDate":"2022-03-31"},{"lineNumber":234,"author":{"gitId":"janald99"},"content":"Format: `match-pr INDEX`","lastModifiedDate":"2022-03-31"},{"lineNumber":235,"author":{"gitId":"janald99"},"content":"","lastModifiedDate":"2022-03-31"},{"lineNumber":236,"author":{"gitId":"WJunHong"},"content":"* The index refers to the index number shown in the displayed buyer list. The index **must be a positive integer** 1, 2, 3, …​ within the size of the displayed buyer list.","lastModifiedDate":"2022-04-06"},{"lineNumber":237,"author":{"gitId":"janald99"},"content":"* A list of all sellers whose price range matches the buyer\u0027s desired price range will be displayed.","lastModifiedDate":"2022-03-31"},{"lineNumber":238,"author":{"gitId":"janald99"},"content":"* A seller will match to the buyer if:","lastModifiedDate":"2022-03-31"},{"lineNumber":239,"author":{"gitId":"janald99"},"content":"  * There is a price at which the buyer is willing to buy a property at, and the seller is willing to sell their property at.","lastModifiedDate":"2022-03-31"},{"lineNumber":240,"author":{"gitId":"janald99"},"content":"* E.g. A buyer with price range `20-100` will match with a seller with house price range `100-200`, because `100` is a matching price.","lastModifiedDate":"2022-03-31"},{"lineNumber":241,"author":{"gitId":"janald99"},"content":"* Price matches are inclusive, so if a price range is `100-200`, it includes the values `100` and `200` as well.","lastModifiedDate":"2022-03-31"},{"lineNumber":242,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-03-31"},{"lineNumber":243,"author":{"gitId":"janald99"},"content":"Examples:","lastModifiedDate":"2022-03-31"},{"lineNumber":244,"author":{"gitId":"janald99"},"content":"* `match-pr 1` will match the 1st buyer in the displayed buyer list with all seller\u0027s with matching property criteria.","lastModifiedDate":"2022-03-31"},{"lineNumber":245,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-03-31"},{"lineNumber":246,"author":{"gitId":"janald99"},"content":"#### Editing a buyer. `edit-b`","lastModifiedDate":"2022-03-30"},{"lineNumber":247,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-03-30"},{"lineNumber":248,"author":{"gitId":"janald99"},"content":"Function: Edit an existing buyer\u0027s information in the displayed buyer list.","lastModifiedDate":"2022-03-30"},{"lineNumber":249,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":250,"author":{"gitId":"janald99"},"content":"\u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-primary\"\u003e","lastModifiedDate":"2022-03-30"},{"lineNumber":251,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-03-30"},{"lineNumber":252,"author":{"gitId":"janald99"},"content":":bulb: **Caution:** This action **cannot be undone**! Be careful when changing a buyer\u0027s information.","lastModifiedDate":"2022-03-30"},{"lineNumber":253,"author":{"gitId":"janald99"},"content":"\u003c/div\u003e","lastModifiedDate":"2022-03-30"},{"lineNumber":254,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":255,"author":{"gitId":"WJunHong"},"content":"Format: `edit-b INDEX [n/NAME] [p/PHONE] [t/TAG]…​ [time/APPOINTMENT] [h/HOUSE_TYPE] [l/LOCATION] [pr/PRICE_RANGE]` ","lastModifiedDate":"2022-03-29"},{"lineNumber":256,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":257,"author":{"gitId":"WJunHong"},"content":"* Edit the buyer at the specified `INDEX`. The index refers to the index number shown in the displayed buyer list. The index **must be a positive integer** 1, 2, 3, …​ within the size of the displayed buyer list.","lastModifiedDate":"2022-04-06"},{"lineNumber":258,"author":{"gitId":"WJunHong"},"content":"* At least one of the optional inputs must be provided.","lastModifiedDate":"2022-03-29"},{"lineNumber":259,"author":{"gitId":"WJunHong"},"content":"* The order of the inputs can be in any order.","lastModifiedDate":"2022-03-29"},{"lineNumber":260,"author":{"gitId":"-"},"content":"* Existing values will be updated to the input values.","lastModifiedDate":"2022-03-29"},{"lineNumber":261,"author":{"gitId":"WJunHong"},"content":"* When editing tags, all the existing tags of the buyer will be **removed**, and replaced with the specified tags in the input. Hence, you can remove all the buyer’s tags by typing `t/` without specifying any tags after it.","lastModifiedDate":"2022-03-29"},{"lineNumber":262,"author":{"gitId":"WJunHong"},"content":"* The house-related inputs (`pr/`, `l/`, `h/`) cannot be edited until a Property is added (See how to add one here).","lastModifiedDate":"2022-03-29"},{"lineNumber":263,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-03-29"},{"lineNumber":264,"author":{"gitId":"-"},"content":"Examples:","lastModifiedDate":"2022-03-29"},{"lineNumber":265,"author":{"gitId":"WJunHong"},"content":"* `edit-b 1 n/Chua` Edits only the name of the 1st buyer in displayed buyer list to be `Chua`.","lastModifiedDate":"2022-03-30"},{"lineNumber":266,"author":{"gitId":"WJunHong"},"content":"* `edit-b 2 n/Betsy Crower t/` Edits the name of the 2nd buyer in displayed buyer list to be `Betsy Crower` and clears all existing tags.","lastModifiedDate":"2022-03-30"},{"lineNumber":267,"author":{"gitId":"Jacky142857"},"content":"","lastModifiedDate":"2022-03-04"},{"lineNumber":268,"author":{"gitId":"janald99"},"content":"#### Finding a buyer. `find-b`","lastModifiedDate":"2022-03-30"},{"lineNumber":269,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-03-04"},{"lineNumber":270,"author":{"gitId":"janald99"},"content":"Function: Find buyers whose selected **field** contain any of the given keywords. Use this so that you can find your buyer\u0027s information more easily!","lastModifiedDate":"2022-03-30"},{"lineNumber":271,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-03-04"},{"lineNumber":272,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-03-04"},{"lineNumber":273,"author":{"gitId":"WJunHong"},"content":"Format: `find-b field/KEYWORD1 [MORE_KEYWORDS]`","lastModifiedDate":"2022-03-29"},{"lineNumber":274,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-03-04"},{"lineNumber":275,"author":{"gitId":"janald99"},"content":"* The **fields** are:","lastModifiedDate":"2022-04-06"},{"lineNumber":276,"author":{"gitId":"WJunHong"},"content":"  * name `n/`","lastModifiedDate":"2022-03-29"},{"lineNumber":277,"author":{"gitId":"WJunHong"},"content":"  * phone `p/`","lastModifiedDate":"2022-03-29"},{"lineNumber":278,"author":{"gitId":"cwnm"},"content":"  * location `l/`","lastModifiedDate":"2022-03-31"},{"lineNumber":279,"author":{"gitId":"cwnm"},"content":"  * tags `t/`","lastModifiedDate":"2022-03-31"},{"lineNumber":280,"author":{"gitId":"cwnm"},"content":"  * house type `h/`","lastModifiedDate":"2022-03-31"},{"lineNumber":281,"author":{"gitId":"WJunHong"},"content":"* The search is **case-insensitive**. E.g `find-b n/hans` will match buyers with `Hans` and `HanS` in their name.","lastModifiedDate":"2022-03-29"},{"lineNumber":282,"author":{"gitId":"WJunHong"},"content":"* The **order** of the keywords does not matter. e.g. `find-b n/Hans Bo` is equivalent to `find-b n/Bo Hans`.","lastModifiedDate":"2022-03-29"},{"lineNumber":283,"author":{"gitId":"WJunHong"},"content":"* All partial words will be matched e.g. `Han` keyword will match `Hans` and `Han`.","lastModifiedDate":"2022-03-29"},{"lineNumber":284,"author":{"gitId":"WJunHong"},"content":"* However, if the keyword is larger than the item itself, it will not match e.g. `Hans` keyword will not match `Han` in name","lastModifiedDate":"2022-03-29"},{"lineNumber":285,"author":{"gitId":"WJunHong"},"content":"* Buyers matching at least one keyword will be returned (i.e. `OR` search).","lastModifiedDate":"2022-03-29"},{"lineNumber":286,"author":{"gitId":"-"},"content":"  e.g. `Hans Bo` will return `Hans Gruber`, `Bo Yang`","lastModifiedDate":"2022-03-29"},{"lineNumber":287,"author":{"gitId":"cwnm"},"content":"* find-b/s will shorten the current list to the filtered list. To show the full list again, type the corresponding list command i.e. list-b/s","lastModifiedDate":"2022-03-31"},{"lineNumber":288,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-03-04"},{"lineNumber":289,"author":{"gitId":"-"},"content":"Examples:","lastModifiedDate":"2022-03-04"},{"lineNumber":290,"author":{"gitId":"WJunHong"},"content":"* `find-b n/John` displays buyers whose names are `john` and `John Doe`.","lastModifiedDate":"2022-03-29"},{"lineNumber":291,"author":{"gitId":"Jacky142857"},"content":"","lastModifiedDate":"2022-03-04"},{"lineNumber":292,"author":{"gitId":"janald99"},"content":"#### Deleting a buyer. `delete-b`","lastModifiedDate":"2022-03-30"},{"lineNumber":293,"author":{"gitId":"Jacky142857"},"content":"","lastModifiedDate":"2022-03-04"},{"lineNumber":294,"author":{"gitId":"WJunHong"},"content":"Function: Delete the specified buyer from the displayed buyer list.","lastModifiedDate":"2022-03-30"},{"lineNumber":295,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-03-04"},{"lineNumber":296,"author":{"gitId":"janald99"},"content":"\u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-primary\"\u003e","lastModifiedDate":"2022-03-30"},{"lineNumber":297,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-03-30"},{"lineNumber":298,"author":{"gitId":"janald99"},"content":":bulb: **Caution:** This action **cannot be undone**!","lastModifiedDate":"2022-03-30"},{"lineNumber":299,"author":{"gitId":"janald99"},"content":"\u003c/div\u003e","lastModifiedDate":"2022-03-30"},{"lineNumber":300,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-03-30"},{"lineNumber":301,"author":{"gitId":"WJunHong"},"content":"Format: `delete-b INDEX`","lastModifiedDate":"2022-03-29"},{"lineNumber":302,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":303,"author":{"gitId":"WJunHong"},"content":"* Deletes the buyer at the specified `INDEX`. The index refers to the index number shown in the displayed buyer list. The index **must be a positive integer** 1, 2, 3, …​ within the size of the displayed buyer list.","lastModifiedDate":"2022-04-06"},{"lineNumber":304,"author":{"gitId":"WJunHong"},"content":"* The displayed list refers to the buyer list shown after a `list-b`, `sort-b` or `find-b` was previously executed.","lastModifiedDate":"2022-03-29"},{"lineNumber":305,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":306,"author":{"gitId":"-"},"content":"Examples:","lastModifiedDate":"2022-03-29"},{"lineNumber":307,"author":{"gitId":"WJunHong"},"content":"* `list-b` followed by `delete-b 2` deletes the 2nd buyer in the buyer list.","lastModifiedDate":"2022-03-30"},{"lineNumber":308,"author":{"gitId":"WJunHong"},"content":"* `find-b Betsy` followed by `delete-b 1` deletes the 1st buyer in the result of the `find-b` command.","lastModifiedDate":"2022-03-29"},{"lineNumber":309,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":310,"author":{"gitId":"janald99"},"content":"#### Clearing buyer list. `clear-b`","lastModifiedDate":"2022-03-30"},{"lineNumber":311,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-03-29"},{"lineNumber":312,"author":{"gitId":"WJunHong"},"content":"Function: Clear all buyers from the buyer list.","lastModifiedDate":"2022-03-30"},{"lineNumber":313,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-03-29"},{"lineNumber":314,"author":{"gitId":"janald99"},"content":"\u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-primary\"\u003e","lastModifiedDate":"2022-03-30"},{"lineNumber":315,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-03-30"},{"lineNumber":316,"author":{"gitId":"janald99"},"content":":bulb: **WARNING:** This action clears your entire list and it **cannot be undone**. Take extra caution before doing this!","lastModifiedDate":"2022-03-30"},{"lineNumber":317,"author":{"gitId":"janald99"},"content":"\u003c/div\u003e","lastModifiedDate":"2022-03-30"},{"lineNumber":318,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-03-30"},{"lineNumber":319,"author":{"gitId":"WJunHong"},"content":"Format: `clear-b`","lastModifiedDate":"2022-03-29"},{"lineNumber":320,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-03-29"},{"lineNumber":321,"author":{"gitId":"janald99"},"content":"#### Sorting buyers. `sort-b`","lastModifiedDate":"2022-04-06"},{"lineNumber":322,"author":{"gitId":"WJunHong"},"content":"","lastModifiedDate":"2022-03-29"},{"lineNumber":323,"author":{"gitId":"WJunHong"},"content":"Function: Sort all the buyers according to the orders specified.","lastModifiedDate":"2022-03-30"},{"lineNumber":324,"author":{"gitId":"WJunHong"},"content":"","lastModifiedDate":"2022-03-29"},{"lineNumber":325,"author":{"gitId":"Jacky142857"},"content":"Format: `sort-b by/COMPAREDITEM o/ORDER`","lastModifiedDate":"2022-04-07"},{"lineNumber":326,"author":{"gitId":"WJunHong"},"content":"","lastModifiedDate":"2022-03-29"},{"lineNumber":327,"author":{"gitId":"Jacky142857"},"content":"* The `COMPAREDITEM` are:","lastModifiedDate":"2022-03-31"},{"lineNumber":328,"author":{"gitId":"Jacky142857"},"content":"  * `time`","lastModifiedDate":"2022-03-31"},{"lineNumber":329,"author":{"gitId":"WJunHong"},"content":"  * `name`","lastModifiedDate":"2022-03-29"},{"lineNumber":330,"author":{"gitId":"WJunHong"},"content":"","lastModifiedDate":"2022-03-29"},{"lineNumber":331,"author":{"gitId":"Jacky142857"},"content":"* The `ORDER` are:","lastModifiedDate":"2022-03-31"},{"lineNumber":332,"author":{"gitId":"Jacky142857"},"content":"  * `asc`","lastModifiedDate":"2022-03-31"},{"lineNumber":333,"author":{"gitId":"Jacky142857"},"content":"  * `desc`","lastModifiedDate":"2022-03-31"},{"lineNumber":334,"author":{"gitId":"Jacky142857"},"content":"","lastModifiedDate":"2022-03-31"},{"lineNumber":335,"author":{"gitId":"Jacky142857"},"content":"* All entries are compulsory","lastModifiedDate":"2022-03-31"},{"lineNumber":336,"author":{"gitId":"Jacky142857"},"content":"* When there\u0027s no appointment with certain buyers, those buyers will be put at the bottom of the list, regardless of the sorting order, and only buyers with an appointment time will be sorted.","lastModifiedDate":"2022-03-31"},{"lineNumber":337,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":338,"author":{"gitId":"-"},"content":"Examples:","lastModifiedDate":"2020-05-23"},{"lineNumber":339,"author":{"gitId":"Jacky142857"},"content":"* `sort-b by/time o/asc`","lastModifiedDate":"2022-03-31"},{"lineNumber":340,"author":{"gitId":"Jacky142857"},"content":"* `sort-b by/name o/desc`","lastModifiedDate":"2022-03-31"},{"lineNumber":341,"author":{"gitId":"chuashihong"},"content":"","lastModifiedDate":"2022-03-24"},{"lineNumber":342,"author":{"gitId":"WJunHong"},"content":"[back to start of section](#features)","lastModifiedDate":"2022-03-29"},{"lineNumber":343,"author":{"gitId":"chuashihong"},"content":"","lastModifiedDate":"2022-03-24"},{"lineNumber":344,"author":{"gitId":"janald99"},"content":"### Seller-specific commands","lastModifiedDate":"2022-03-30"},{"lineNumber":345,"author":{"gitId":"chuashihong"},"content":"","lastModifiedDate":"2022-03-24"},{"lineNumber":346,"author":{"gitId":"janald99"},"content":"#### Listing sellers. `list-s`","lastModifiedDate":"2022-03-30"},{"lineNumber":347,"author":{"gitId":"janald99"},"content":"","lastModifiedDate":"2022-03-30"},{"lineNumber":348,"author":{"gitId":"janald99"},"content":"Function: Display the seller list.","lastModifiedDate":"2022-03-30"},{"lineNumber":349,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-03-24"},{"lineNumber":350,"author":{"gitId":"WJunHong"},"content":"Format: `list-s`","lastModifiedDate":"2022-03-29"},{"lineNumber":351,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-03-29"},{"lineNumber":352,"author":{"gitId":"janald99"},"content":"#### `add-s`","lastModifiedDate":"2022-03-30"},{"lineNumber":353,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-03-29"},{"lineNumber":354,"author":{"gitId":"janald99"},"content":"Function: Add a seller to the seller list. This is essential for you to add a seller\u0027s data.","lastModifiedDate":"2022-03-30"},{"lineNumber":355,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-03-29"},{"lineNumber":356,"author":{"gitId":"WJunHong"},"content":"Format: `add-s n/NAME p/PHONE_NUMBER [t/TAG]...`","lastModifiedDate":"2022-03-30"},{"lineNumber":357,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-03-29"},{"lineNumber":358,"author":{"gitId":"WJunHong"},"content":"* The order of inputs can be in any order.","lastModifiedDate":"2022-03-29"},{"lineNumber":359,"author":{"gitId":"WJunHong"},"content":"* The `NAME`, `PHONE_NUMBER` and `TAG` cannot be empty. E.g. `n/` or `n/` followed by only spaces or tabs.","lastModifiedDate":"2022-04-06"},{"lineNumber":360,"author":{"gitId":"WJunHong"},"content":"* `NAME` should only contain **alphanumeric** characters. E.g. `John 1` or `John 2` if you are using numbers to differentiate sellers with the same name.","lastModifiedDate":"2022-04-06"},{"lineNumber":361,"author":{"gitId":"WJunHong"},"content":"* `NAME` cannot be repeated for different sellers. E.g. `John` \u0026 `John`. However, we allow for different cases. E.g. `John` \u0026 `john`.","lastModifiedDate":"2022-04-06"},{"lineNumber":362,"author":{"gitId":"WJunHong"},"content":"* `PHONE_NUMBER` can only contain non-negative whole numbers E.g. `1234`, `0000` (zero) and must be at least 3 digits long E.g. `001` is accepted but `01` is not.","lastModifiedDate":"2022-04-06"},{"lineNumber":363,"author":{"gitId":"WJunHong"},"content":"* Multiple different buyers or sellers might have the same phone number. E.g. Buyer `John`, Buyer `Bob` and Seller `Jess` have phone number `62353535`. This is because the phone number might be a home number/office number which multiple clients can share.","lastModifiedDate":"2022-04-06"},{"lineNumber":364,"author":{"gitId":"WJunHong"},"content":"* When a seller is initially added, they will default to having **no** Property. Use `add-pts` to add a respective property.","lastModifiedDate":"2022-04-06"},{"lineNumber":365,"author":{"gitId":"chuashihong"},"content":"","lastModifiedDate":"2022-03-24"},{"lineNumber":366,"author":{"gitId":"chuashihong"},"content":"Examples:","lastModifiedDate":"2022-03-24"},{"lineNumber":367,"author":{"gitId":"WJunHong"},"content":"* `add-s n/Yu Qi p/98765432` adds a new seller with name `Yu Qi` and phone number `98765432`","lastModifiedDate":"2022-03-30"},{"lineNumber":368,"author":{"gitId":"WJunHong"},"content":"* `add-s n/Janald p/12345678 t/friend t/criminal` adds a new seller with name `Janald`, phone number of `12345678`, and tags of `friend` and `criminal`","lastModifiedDate":"2022-03-30"},{"lineNumber":369,"author":{"gitId":"WJunHong"},"content":"","lastModifiedDate":"2022-03-29"},{"lineNumber":370,"author":{"gitId":"janald99"},"content":"#### Adding a property to sell `add-pts`","lastModifiedDate":"2022-03-30"},{"lineNumber":371,"author":{"gitId":"WJunHong"},"content":"","lastModifiedDate":"2022-03-29"},{"lineNumber":372,"author":{"gitId":"WJunHong"},"content":"Function: Add a new property for the specified seller.","lastModifiedDate":"2022-03-30"},{"lineNumber":373,"author":{"gitId":"WJunHong"},"content":"","lastModifiedDate":"2022-03-29"},{"lineNumber":374,"author":{"gitId":"janald99"},"content":"\u003cdiv markdown\u003d\"block\" class\u003d\"alert alert-info\"\u003e","lastModifiedDate":"2022-03-30"},{"lineNumber":375,"author":{"gitId":"janald99"},"content":"","lastModifiedDate":"2022-03-30"},{"lineNumber":376,"author":{"gitId":"WJunHong"},"content":":information_source: Note: `add-ptb` and `add-pts` have different fields!\u003cbr\u003e","lastModifiedDate":"2022-03-31"},{"lineNumber":377,"author":{"gitId":"janald99"},"content":"","lastModifiedDate":"2022-03-30"},{"lineNumber":378,"author":{"gitId":"janald99"},"content":"* `add-pts` has an additional `a/ADDRESS` field.","lastModifiedDate":"2022-03-30"},{"lineNumber":379,"author":{"gitId":"janald99"},"content":"","lastModifiedDate":"2022-03-30"},{"lineNumber":380,"author":{"gitId":"janald99"},"content":"* A seller has the specific address of the property is selling while a buyer may not! ","lastModifiedDate":"2022-03-30"},{"lineNumber":381,"author":{"gitId":"janald99"},"content":"","lastModifiedDate":"2022-03-30"},{"lineNumber":382,"author":{"gitId":"janald99"},"content":"\u003c/div\u003e","lastModifiedDate":"2022-03-30"},{"lineNumber":383,"author":{"gitId":"janald99"},"content":"","lastModifiedDate":"2022-03-30"},{"lineNumber":384,"author":{"gitId":"WJunHong"},"content":"Format: `add-pts INDEX l/LOCATION pr/PRICE_RANGE h/HOUSE_TYPE a/ADDRESS`","lastModifiedDate":"2022-03-29"},{"lineNumber":385,"author":{"gitId":"WJunHong"},"content":"","lastModifiedDate":"2022-03-29"},{"lineNumber":386,"author":{"gitId":"WJunHong"},"content":"* Adds a new property that the seller at `INDEX` is hoping to sell. The index refers to the index number shown in the displayed seller list. The index **must be a positive integer** 1, 2, 3, …​ within the size of the displayed seller list.","lastModifiedDate":"2022-04-06"},{"lineNumber":387,"author":{"gitId":"WJunHong"},"content":"* The order of the inputs can be in any order.","lastModifiedDate":"2022-03-29"},{"lineNumber":388,"author":{"gitId":"WJunHong"},"content":"* The `PRICE_RANGE` must be a valid **non-negative integer** with `lower` being less than or equal to `upper`.","lastModifiedDate":"2022-04-06"},{"lineNumber":389,"author":{"gitId":"WJunHong"},"content":"* The `PRICE_RANGE` can include `0` since the seller might be generous and give their house away for free.","lastModifiedDate":"2022-04-06"},{"lineNumber":390,"author":{"gitId":"WJunHong"},"content":"* Do use appropriate `LOCATION` for your own utility. E.g. `Bishan` or `Marymount`. The application will not check if it is an actual location in Singapore or elsewhere.","lastModifiedDate":"2022-04-06"},{"lineNumber":391,"author":{"gitId":"WJunHong"},"content":"* Do use appropriate `ADDRESS` to maximize your own utility. E.g. `Blk 343, Ajax Ave 1121`. The application will not check if it is an actual location in Singapore or elsewhere.","lastModifiedDate":"2022-04-06"},{"lineNumber":392,"author":{"gitId":"WJunHong"},"content":"* The application will not check if the `LOCATION` actually contains a property with the given `ADDRESS`. It is up to your due diligence to ensure `ADDRESS` is at `LOCATION` stated.","lastModifiedDate":"2022-04-06"},{"lineNumber":393,"author":{"gitId":"WJunHong"},"content":"* It is possible for multiple different sellers to sell same `ADDRESS` properties. This is for cases that you are storing information about separate residents of the property.","lastModifiedDate":"2022-04-06"},{"lineNumber":394,"author":{"gitId":"WJunHong"},"content":"* Similarly, it is possible for sellers with the same `ADDRESS` to have different `LOCATION`, `PRICE_RANGE` \u0026 `HOUSE_TYPE` since they might each have their own perspectives of where each property resides, its type, or what its worth.","lastModifiedDate":"2022-04-06"},{"lineNumber":395,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":396,"author":{"gitId":"WJunHong"},"content":"  Examples:","lastModifiedDate":"2022-03-29"},{"lineNumber":397,"author":{"gitId":"WJunHong"},"content":"* `add-pts 1 l/Ajax pr/800000,900000 h/condo a/Ajax Ave 1, 02-100` means that 1st seller in the displayed seller list wishes to sell a condominium in Ajax at Ajax Ave 1, 02-100 for any price from $800,000 to $900,000.","lastModifiedDate":"2022-04-06"},{"lineNumber":398,"author":{"gitId":"cwnm"},"content":"","lastModifiedDate":"2022-03-04"},{"lineNumber":399,"author":{"gitId":"janald99"},"content":"#### Adding an appointment with seller. `appt-s`","lastModifiedDate":"2022-03-30"},{"lineNumber":400,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":401,"author":{"gitId":"janald99"},"content":"Function: Create an appointment with a certain seller. Now, you can keep track of your appointments with sellers!.","lastModifiedDate":"2022-03-30"},{"lineNumber":402,"author":{"gitId":"cwnm"},"content":"","lastModifiedDate":"2022-03-25"},{"lineNumber":403,"author":{"gitId":"WJunHong"},"content":"Format: `appt-s INDEX time/TIME`","lastModifiedDate":"2022-03-29"},{"lineNumber":404,"author":{"gitId":"cwnm"},"content":"","lastModifiedDate":"2022-03-25"},{"lineNumber":405,"author":{"gitId":"WJunHong"},"content":"* Create an appointment with the seller at the specified `INDEX`. The index refers to the index number shown in the displayed seller list. The index **must be a positive integer** 1, 2, 3, …​ within the size of the displayed seller list.","lastModifiedDate":"2022-04-06"},{"lineNumber":406,"author":{"gitId":"WJunHong"},"content":"* The input `TIME` is in a `yyyy-mm-dd-hh-mm` format of: the year, month, day of the month, hour and minute. Use the example below for reference.","lastModifiedDate":"2022-03-29"},{"lineNumber":407,"author":{"gitId":"WJunHong"},"content":"* The time entered must be a time in the future.","lastModifiedDate":"2022-03-29"},{"lineNumber":408,"author":{"gitId":"Jacky142857"},"content":"* * To delete an appointment with a seller, use the keyword `reset` after the `time/` prefix","lastModifiedDate":"2022-03-31"},{"lineNumber":409,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":410,"author":{"gitId":"WJunHong"},"content":"Examples:","lastModifiedDate":"2022-03-29"},{"lineNumber":411,"author":{"gitId":"WJunHong"},"content":"* `appt-s 1 time/2023-01-01-12-12` sets a new appointment for the 1st seller on the displayed seller list on 1st January 2023 and 12:12pm.","lastModifiedDate":"2022-03-29"},{"lineNumber":412,"author":{"gitId":"Jacky142857"},"content":"* `appt-s 1 time/reset` deletes the existing appointment with the 1st seller in the list.","lastModifiedDate":"2022-03-31"},{"lineNumber":413,"author":{"gitId":"janald99"},"content":"#### Editing a seller. `edit-s`","lastModifiedDate":"2022-03-30"},{"lineNumber":414,"author":{"gitId":"janald99"},"content":"","lastModifiedDate":"2022-03-30"},{"lineNumber":415,"author":{"gitId":"janald99"},"content":"Function: Edit an existing seller\u0027s information in the displayed seller list.","lastModifiedDate":"2022-03-30"},{"lineNumber":416,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":417,"author":{"gitId":"janald99"},"content":"\u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-primary\"\u003e","lastModifiedDate":"2022-03-30"},{"lineNumber":418,"author":{"gitId":"janald99"},"content":"","lastModifiedDate":"2022-03-30"},{"lineNumber":419,"author":{"gitId":"janald99"},"content":":bulb: **Caution:** This action **cannot be undone**! Be careful when changing your seller\u0027s information.","lastModifiedDate":"2022-03-30"},{"lineNumber":420,"author":{"gitId":"janald99"},"content":"\u003c/div\u003e","lastModifiedDate":"2022-03-30"},{"lineNumber":421,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":422,"author":{"gitId":"WJunHong"},"content":"Format: `edit-s INDEX [n/NAME] [p/PHONE] [t/TAG]…​ [time/APPOINTMENT] [h/HOUSE_TYPE] [l/LOCATION] [pr/PRICE_RANGE] [a/ADDRESS]`","lastModifiedDate":"2022-03-29"},{"lineNumber":423,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":424,"author":{"gitId":"WJunHong"},"content":"* Edit the seller at the specified `INDEX`. The index refers to the index number shown in the displayed seller list. The index **must be a positive integer** 1, 2, 3, …​ within the size of the displayed seller list.","lastModifiedDate":"2022-04-06"},{"lineNumber":425,"author":{"gitId":"WJunHong"},"content":"* At least one of the optional inputs must be provided.","lastModifiedDate":"2022-03-29"},{"lineNumber":426,"author":{"gitId":"WJunHong"},"content":"* The order of the inputs can be in any order.","lastModifiedDate":"2022-03-29"},{"lineNumber":427,"author":{"gitId":"WJunHong"},"content":"* Existing values will be updated to the input values.","lastModifiedDate":"2022-03-29"},{"lineNumber":428,"author":{"gitId":"WJunHong"},"content":"* When editing tags, all the existing tags of the buyer will be **removed**, and replaced with the specified tags in the input. Hence, you can remove all the buyer’s tags by typing `t/` without specifying any tags after it.","lastModifiedDate":"2022-03-29"},{"lineNumber":429,"author":{"gitId":"WJunHong"},"content":"* The house-related inputs (`pr/`, `l/`, `h/`, `a/`) cannot be edited until a Property is added (See how to add one here).","lastModifiedDate":"2022-03-29"},{"lineNumber":430,"author":{"gitId":"WJunHong"},"content":"","lastModifiedDate":"2022-03-29"},{"lineNumber":431,"author":{"gitId":"WJunHong"},"content":"Examples:","lastModifiedDate":"2022-03-29"},{"lineNumber":432,"author":{"gitId":"WJunHong"},"content":"* `edit-s 1 n/Chua` Edits only the name of the 1st seller on displayed seller list to be `Chua`.","lastModifiedDate":"2022-03-30"},{"lineNumber":433,"author":{"gitId":"WJunHong"},"content":"* `edit-s 2 n/Betsy Crower t/` Edits the name of the 2nd seller on displayed seller list to be `Betsy Crower` and clears all existing tags.","lastModifiedDate":"2022-03-30"},{"lineNumber":434,"author":{"gitId":"WJunHong"},"content":"","lastModifiedDate":"2022-03-29"},{"lineNumber":435,"author":{"gitId":"WJunHong"},"content":"","lastModifiedDate":"2022-03-29"},{"lineNumber":436,"author":{"gitId":"janald99"},"content":"#### Finding a seller. `find-s`","lastModifiedDate":"2022-03-30"},{"lineNumber":437,"author":{"gitId":"WJunHong"},"content":"","lastModifiedDate":"2022-03-29"},{"lineNumber":438,"author":{"gitId":"janald99"},"content":"Function: Find sellers whose selected **field** contain any of the given keywords. Use this so that you can find your seller\u0027s information more easily!","lastModifiedDate":"2022-03-30"},{"lineNumber":439,"author":{"gitId":"WJunHong"},"content":"","lastModifiedDate":"2022-03-29"},{"lineNumber":440,"author":{"gitId":"WJunHong"},"content":"Format: `find-s field/KEYWORD1 [MORE_KEYWORDS]`","lastModifiedDate":"2022-03-29"},{"lineNumber":441,"author":{"gitId":"WJunHong"},"content":"","lastModifiedDate":"2022-03-29"},{"lineNumber":442,"author":{"gitId":"WJunHong"},"content":"* The **fields**` are:","lastModifiedDate":"2022-03-29"},{"lineNumber":443,"author":{"gitId":"WJunHong"},"content":"  * name `n/`","lastModifiedDate":"2022-03-04"},{"lineNumber":444,"author":{"gitId":"WJunHong"},"content":"  * phone `p/`","lastModifiedDate":"2022-03-04"},{"lineNumber":445,"author":{"gitId":"cwnm"},"content":"  * location `l/`","lastModifiedDate":"2022-03-31"},{"lineNumber":446,"author":{"gitId":"cwnm"},"content":"  * tags `t/`","lastModifiedDate":"2022-03-31"},{"lineNumber":447,"author":{"gitId":"cwnm"},"content":"  * house type `h/`","lastModifiedDate":"2022-03-31"},{"lineNumber":448,"author":{"gitId":"WJunHong"},"content":"* The search is **case-insensitive**. E.g `find-s n/hans` will match buyers with `Hans` and `HanS` in their name.","lastModifiedDate":"2022-03-29"},{"lineNumber":449,"author":{"gitId":"WJunHong"},"content":"* The **order** of the keywords does not matter. e.g. `find-bs n/Hans Bo` is equivalent to `find-s n/Bo Hans`.","lastModifiedDate":"2022-03-29"},{"lineNumber":450,"author":{"gitId":"WJunHong"},"content":"* All partial words will be matched e.g. `Han` keyword will match `Hans` and `Han`.","lastModifiedDate":"2022-03-29"},{"lineNumber":451,"author":{"gitId":"WJunHong"},"content":"* However, if the keyword is larger than the item itself, it will not match e.g. `Hans` keyword will not match `Han` in name","lastModifiedDate":"2022-03-29"},{"lineNumber":452,"author":{"gitId":"WJunHong"},"content":"* Sellers matching at least one keyword will be returned (i.e. `OR` search).","lastModifiedDate":"2022-03-30"},{"lineNumber":453,"author":{"gitId":"-"},"content":"  e.g. `Hans Bo` will return `Hans Gruber`, `Bo Yang`","lastModifiedDate":"2020-05-23"},{"lineNumber":454,"author":{"gitId":"cwnm"},"content":"* * find-b/s will shorten the current list to the filtered list. To show the full list again, type the corresponding list command i.e. list-b/s","lastModifiedDate":"2022-03-31"},{"lineNumber":455,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":456,"author":{"gitId":"-"},"content":"Examples:","lastModifiedDate":"2020-05-23"},{"lineNumber":457,"author":{"gitId":"WJunHong"},"content":"* `find-s n/John` displays seller whose names are `john` and `John Doe`.","lastModifiedDate":"2022-03-30"},{"lineNumber":458,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":459,"author":{"gitId":"janald99"},"content":"#### Deleting a seller. `delete-s`","lastModifiedDate":"2022-03-30"},{"lineNumber":460,"author":{"gitId":"Jacky142857"},"content":"","lastModifiedDate":"2022-03-11"},{"lineNumber":461,"author":{"gitId":"WJunHong"},"content":"Function: Delete the specified seller from the displayed seller list.","lastModifiedDate":"2022-03-30"},{"lineNumber":462,"author":{"gitId":"Jacky142857"},"content":"","lastModifiedDate":"2022-03-11"},{"lineNumber":463,"author":{"gitId":"janald99"},"content":"\u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-primary\"\u003e","lastModifiedDate":"2022-03-30"},{"lineNumber":464,"author":{"gitId":"janald99"},"content":"","lastModifiedDate":"2022-03-30"},{"lineNumber":465,"author":{"gitId":"janald99"},"content":":bulb: **Caution:** This action **cannot be undone**!","lastModifiedDate":"2022-03-30"},{"lineNumber":466,"author":{"gitId":"janald99"},"content":"\u003c/div\u003e","lastModifiedDate":"2022-03-30"},{"lineNumber":467,"author":{"gitId":"janald99"},"content":"","lastModifiedDate":"2022-03-30"},{"lineNumber":468,"author":{"gitId":"WJunHong"},"content":"Format: `delete-s INDEX`","lastModifiedDate":"2022-03-29"},{"lineNumber":469,"author":{"gitId":"Jacky142857"},"content":"","lastModifiedDate":"2022-03-11"},{"lineNumber":470,"author":{"gitId":"WJunHong"},"content":"* Deletes the seller at the specified `INDEX`. The index refers to the index number shown in the displayed seller list. The index **must be a positive integer** 1, 2, 3, …​ within the size of the displayed seller list.","lastModifiedDate":"2022-04-06"},{"lineNumber":471,"author":{"gitId":"WJunHong"},"content":"* The displayed list refers to the seller list shown after a `list-b`, `sort-b` or `find-b` was previously executed.","lastModifiedDate":"2022-03-29"},{"lineNumber":472,"author":{"gitId":"Jacky142857"},"content":"","lastModifiedDate":"2022-03-11"},{"lineNumber":473,"author":{"gitId":"WJunHong"},"content":"Examples:","lastModifiedDate":"2022-03-29"},{"lineNumber":474,"author":{"gitId":"WJunHong"},"content":"* `list-s` followed by `delete-s 2` deletes the 2nd seller in the seller list.","lastModifiedDate":"2022-03-30"},{"lineNumber":475,"author":{"gitId":"WJunHong"},"content":"* `find-s Betsy` followed by `delete-s 1` deletes the 1st seller in the result of the `find-s` command.","lastModifiedDate":"2022-03-30"},{"lineNumber":476,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":477,"author":{"gitId":"janald99"},"content":"#### Clearing seller list. `clear-s`","lastModifiedDate":"2022-03-30"},{"lineNumber":478,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":479,"author":{"gitId":"WJunHong"},"content":"Function: Clear all sellers from the seller list.","lastModifiedDate":"2022-03-30"},{"lineNumber":480,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":481,"author":{"gitId":"janald99"},"content":"\u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-primary\"\u003e","lastModifiedDate":"2022-04-06"},{"lineNumber":482,"author":{"gitId":"janald99"},"content":"","lastModifiedDate":"2022-04-06"},{"lineNumber":483,"author":{"gitId":"janald99"},"content":":bulb: **WARNING:** This action clears your entire list and it **cannot be undone**. Take extra caution before doing this!","lastModifiedDate":"2022-04-06"},{"lineNumber":484,"author":{"gitId":"janald99"},"content":"\u003c/div\u003e","lastModifiedDate":"2022-04-06"},{"lineNumber":485,"author":{"gitId":"janald99"},"content":"","lastModifiedDate":"2022-04-06"},{"lineNumber":486,"author":{"gitId":"WJunHong"},"content":"Format: `clear-s`","lastModifiedDate":"2022-03-29"},{"lineNumber":487,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":488,"author":{"gitId":"janald99"},"content":"#### Sorting sellers. `sort-s`","lastModifiedDate":"2022-03-30"},{"lineNumber":489,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":490,"author":{"gitId":"WJunHong"},"content":"Function: Sort all the sellers according to the orders specified.","lastModifiedDate":"2022-03-30"},{"lineNumber":491,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":492,"author":{"gitId":"Jacky142857"},"content":"Format: `sort-s by/COMPAREDITEM o/ORDER`","lastModifiedDate":"2022-04-07"},{"lineNumber":493,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":494,"author":{"gitId":"Jacky142857"},"content":"* The `COMPAREDITEM` are:","lastModifiedDate":"2022-03-31"},{"lineNumber":495,"author":{"gitId":"Jacky142857"},"content":"  * `time`","lastModifiedDate":"2022-03-31"},{"lineNumber":496,"author":{"gitId":"WJunHong"},"content":"  * `name`","lastModifiedDate":"2022-03-29"},{"lineNumber":497,"author":{"gitId":"-"},"content":"  ","lastModifiedDate":"2020-05-23"},{"lineNumber":498,"author":{"gitId":"Jacky142857"},"content":"* The `ORDER` are:","lastModifiedDate":"2022-03-31"},{"lineNumber":499,"author":{"gitId":"Jacky142857"},"content":"  * `asc`","lastModifiedDate":"2022-03-31"},{"lineNumber":500,"author":{"gitId":"Jacky142857"},"content":"  * `desc`","lastModifiedDate":"2022-03-31"},{"lineNumber":501,"author":{"gitId":"Jacky142857"},"content":"","lastModifiedDate":"2022-03-31"},{"lineNumber":502,"author":{"gitId":"Jacky142857"},"content":"* All entries are compulsory","lastModifiedDate":"2022-03-31"},{"lineNumber":503,"author":{"gitId":"Jacky142857"},"content":"* When there\u0027s no appointment with certain sellers, those sellers","lastModifiedDate":"2022-03-31"},{"lineNumber":504,"author":{"gitId":"Jacky142857"},"content":"* will be put at the bottom of the list, regardless of the sorting order, and only sellers with an appointment time will be sorted.","lastModifiedDate":"2022-03-31"},{"lineNumber":505,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":506,"author":{"gitId":"WJunHong"},"content":"Examples:","lastModifiedDate":"2022-03-29"},{"lineNumber":507,"author":{"gitId":"Jacky142857"},"content":"* `sort-s by/time o/asc`","lastModifiedDate":"2022-03-31"},{"lineNumber":508,"author":{"gitId":"Jacky142857"},"content":"* `sort-s by/name o/desc`","lastModifiedDate":"2022-03-31"},{"lineNumber":509,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":510,"author":{"gitId":"WJunHong"},"content":"[back to start of section](#features)","lastModifiedDate":"2022-03-29"},{"lineNumber":511,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":512,"author":{"gitId":"WJunHong"},"content":"## Saving the data","lastModifiedDate":"2022-03-29"},{"lineNumber":513,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":514,"author":{"gitId":"WJunHong"},"content":"AgentSee data are saved in the hard disk automatically after any command that changes the data. There is no need to save manually.","lastModifiedDate":"2022-03-29"},{"lineNumber":515,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":516,"author":{"gitId":"janald99"},"content":"## Editing the data file (For experienced users)","lastModifiedDate":"2022-04-06"},{"lineNumber":517,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-02-04"},{"lineNumber":518,"author":{"gitId":"janald99"},"content":"AgentSee data is saved as a JSON file `[JAR file location]/data/buyeraddressbook.json` and `[JAR file location]/data/selleraddressbook.json`.","lastModifiedDate":"2022-04-06"},{"lineNumber":519,"author":{"gitId":"chuashihong"},"content":"Advanced users are welcome to update data directly by editing these data files.","lastModifiedDate":"2022-03-31"},{"lineNumber":520,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-02-04"},{"lineNumber":521,"author":{"gitId":"chuashihong"},"content":"\u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-warning\"\u003e","lastModifiedDate":"2022-03-31"},{"lineNumber":522,"author":{"gitId":"chuashihong"},"content":":exclamation: **Caution:**","lastModifiedDate":"2022-03-31"},{"lineNumber":523,"author":{"gitId":"chuashihong"},"content":"If your changes to the data file makes its format invalid, AgentSee will discard all data and start with an empty data file at the next run!","lastModifiedDate":"2022-03-31"},{"lineNumber":524,"author":{"gitId":"chuashihong"},"content":"So if you are afraid of losing all the data, please backup your data files somewhere else before attempting to edit the data file by yourself!","lastModifiedDate":"2022-03-31"},{"lineNumber":525,"author":{"gitId":"-"},"content":"\u003c/div\u003e","lastModifiedDate":"2021-02-04"},{"lineNumber":526,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-02-04"},{"lineNumber":527,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":528,"author":{"gitId":"chuashihong"},"content":"### JSON format of the data","lastModifiedDate":"2022-03-31"},{"lineNumber":529,"author":{"gitId":"chuashihong"},"content":"","lastModifiedDate":"2022-03-31"},{"lineNumber":530,"author":{"gitId":"chuashihong"},"content":"Below is the example of 2 buyers that are saved under `buyeraddressbook.json` :","lastModifiedDate":"2022-03-31"},{"lineNumber":531,"author":{"gitId":"chuashihong"},"content":"","lastModifiedDate":"2022-03-31"},{"lineNumber":532,"author":{"gitId":"chuashihong"},"content":"```","lastModifiedDate":"2022-03-31"},{"lineNumber":533,"author":{"gitId":"chuashihong"},"content":"{","lastModifiedDate":"2022-03-31"},{"lineNumber":534,"author":{"gitId":"chuashihong"},"content":"  \"buyers\" : [ {","lastModifiedDate":"2022-03-31"},{"lineNumber":535,"author":{"gitId":"chuashihong"},"content":"    \"name\" : \"Shi Hong\",","lastModifiedDate":"2022-03-31"},{"lineNumber":536,"author":{"gitId":"chuashihong"},"content":"    \"phone\" : \"12345678\",","lastModifiedDate":"2022-03-31"},{"lineNumber":537,"author":{"gitId":"chuashihong"},"content":"    \"appointment\" : \"2022-03-31-17-00\",","lastModifiedDate":"2022-03-31"},{"lineNumber":538,"author":{"gitId":"chuashihong"},"content":"    \"tagged\" : [ \"smart\" ],","lastModifiedDate":"2022-03-31"},{"lineNumber":539,"author":{"gitId":"chuashihong"},"content":"    \"propertyToBuy\" : {","lastModifiedDate":"2022-03-31"},{"lineNumber":540,"author":{"gitId":"chuashihong"},"content":"      \"house\" : {","lastModifiedDate":"2022-03-31"},{"lineNumber":541,"author":{"gitId":"chuashihong"},"content":"        \"houseType\" : \"Bungalow\",","lastModifiedDate":"2022-03-31"},{"lineNumber":542,"author":{"gitId":"chuashihong"},"content":"        \"location\" : \"Clementi\"","lastModifiedDate":"2022-03-31"},{"lineNumber":543,"author":{"gitId":"chuashihong"},"content":"      },","lastModifiedDate":"2022-03-31"},{"lineNumber":544,"author":{"gitId":"chuashihong"},"content":"      \"priceRange\" : {","lastModifiedDate":"2022-03-31"},{"lineNumber":545,"author":{"gitId":"chuashihong"},"content":"        \"lower\" : \"500000\",","lastModifiedDate":"2022-03-31"},{"lineNumber":546,"author":{"gitId":"chuashihong"},"content":"        \"upper\" : \"600000\"","lastModifiedDate":"2022-03-31"},{"lineNumber":547,"author":{"gitId":"chuashihong"},"content":"      }","lastModifiedDate":"2022-03-31"},{"lineNumber":548,"author":{"gitId":"chuashihong"},"content":"    }","lastModifiedDate":"2022-03-31"},{"lineNumber":549,"author":{"gitId":"chuashihong"},"content":"  }, {","lastModifiedDate":"2022-03-31"},{"lineNumber":550,"author":{"gitId":"chuashihong"},"content":"    \"name\" : \"Jun Hong\",","lastModifiedDate":"2022-03-31"},{"lineNumber":551,"author":{"gitId":"chuashihong"},"content":"    \"phone\" : \"87654321\",","lastModifiedDate":"2022-03-31"},{"lineNumber":552,"author":{"gitId":"chuashihong"},"content":"    \"appointment\" : \"\",","lastModifiedDate":"2022-03-31"},{"lineNumber":553,"author":{"gitId":"chuashihong"},"content":"    \"tagged\" : [ \"kind\" ],","lastModifiedDate":"2022-03-31"},{"lineNumber":554,"author":{"gitId":"chuashihong"},"content":"    \"propertyToBuy\" : null","lastModifiedDate":"2022-03-31"},{"lineNumber":555,"author":{"gitId":"chuashihong"},"content":"  }","lastModifiedDate":"2022-03-31"},{"lineNumber":556,"author":{"gitId":"chuashihong"},"content":"}","lastModifiedDate":"2022-03-31"},{"lineNumber":557,"author":{"gitId":"chuashihong"},"content":"```","lastModifiedDate":"2022-03-31"},{"lineNumber":558,"author":{"gitId":"chuashihong"},"content":"And here are the examples of 2 sellers, one has a property and one does not have a property yet.","lastModifiedDate":"2022-03-31"},{"lineNumber":559,"author":{"gitId":"chuashihong"},"content":"","lastModifiedDate":"2022-03-31"},{"lineNumber":560,"author":{"gitId":"chuashihong"},"content":"```","lastModifiedDate":"2022-03-31"},{"lineNumber":561,"author":{"gitId":"chuashihong"},"content":"{","lastModifiedDate":"2022-03-31"},{"lineNumber":562,"author":{"gitId":"chuashihong"},"content":"  \"sellers\" : [ {","lastModifiedDate":"2022-03-31"},{"lineNumber":563,"author":{"gitId":"chuashihong"},"content":"    \"name\" : \"chua\",","lastModifiedDate":"2022-03-31"},{"lineNumber":564,"author":{"gitId":"chuashihong"},"content":"    \"phone\" : \"1234\",","lastModifiedDate":"2022-03-31"},{"lineNumber":565,"author":{"gitId":"chuashihong"},"content":"    \"appointment\" : \"\",","lastModifiedDate":"2022-03-31"},{"lineNumber":566,"author":{"gitId":"chuashihong"},"content":"    \"tagged\" : [ \"tag1\", \"tag2\" ],","lastModifiedDate":"2022-03-31"},{"lineNumber":567,"author":{"gitId":"chuashihong"},"content":"    \"propertyToSell\" : {","lastModifiedDate":"2022-03-31"},{"lineNumber":568,"author":{"gitId":"chuashihong"},"content":"      \"house\" : {","lastModifiedDate":"2022-03-31"},{"lineNumber":569,"author":{"gitId":"chuashihong"},"content":"        \"houseType\" : \"Bungalow\",","lastModifiedDate":"2022-03-31"},{"lineNumber":570,"author":{"gitId":"chuashihong"},"content":"        \"location\" : \"Queens Town\"","lastModifiedDate":"2022-03-31"},{"lineNumber":571,"author":{"gitId":"chuashihong"},"content":"      },","lastModifiedDate":"2022-03-31"},{"lineNumber":572,"author":{"gitId":"chuashihong"},"content":"      \"priceRange\" : {","lastModifiedDate":"2022-03-31"},{"lineNumber":573,"author":{"gitId":"chuashihong"},"content":"        \"lower\" : \"24\",","lastModifiedDate":"2022-03-31"},{"lineNumber":574,"author":{"gitId":"chuashihong"},"content":"        \"upper\" : \"48\"","lastModifiedDate":"2022-03-31"},{"lineNumber":575,"author":{"gitId":"chuashihong"},"content":"      },","lastModifiedDate":"2022-03-31"},{"lineNumber":576,"author":{"gitId":"chuashihong"},"content":"      \"address\" : \"Utown\"","lastModifiedDate":"2022-03-31"},{"lineNumber":577,"author":{"gitId":"chuashihong"},"content":"    }","lastModifiedDate":"2022-03-31"},{"lineNumber":578,"author":{"gitId":"chuashihong"},"content":"  }, {","lastModifiedDate":"2022-03-31"},{"lineNumber":579,"author":{"gitId":"chuashihong"},"content":"    \"name\" : \"Ben Leong\",","lastModifiedDate":"2022-03-31"},{"lineNumber":580,"author":{"gitId":"chuashihong"},"content":"    \"phone\" : \"87654321\",","lastModifiedDate":"2022-03-31"},{"lineNumber":581,"author":{"gitId":"chuashihong"},"content":"    \"appointment\" : \"\",","lastModifiedDate":"2022-03-31"},{"lineNumber":582,"author":{"gitId":"chuashihong"},"content":"    \"tagged\" : [ \"friendly\" ],","lastModifiedDate":"2022-03-31"},{"lineNumber":583,"author":{"gitId":"chuashihong"},"content":"    \"propertyToSell\" : null","lastModifiedDate":"2022-03-31"},{"lineNumber":584,"author":{"gitId":"chuashihong"},"content":"  }","lastModifiedDate":"2022-03-31"},{"lineNumber":585,"author":{"gitId":"chuashihong"},"content":"}","lastModifiedDate":"2022-03-31"},{"lineNumber":586,"author":{"gitId":"chuashihong"},"content":"```","lastModifiedDate":"2022-03-31"},{"lineNumber":587,"author":{"gitId":"chuashihong"},"content":"","lastModifiedDate":"2022-03-31"},{"lineNumber":588,"author":{"gitId":"chuashihong"},"content":"### Some special format of the data","lastModifiedDate":"2022-03-31"},{"lineNumber":589,"author":{"gitId":"janald99"},"content":"#### Name and Phone","lastModifiedDate":"2022-04-07"},{"lineNumber":590,"author":{"gitId":"chuashihong"},"content":"- They cannot be an empty string: `\"\"` ,  otherwise, it will be seen as invalid format and the buyerbook\u0027s data will become empty!","lastModifiedDate":"2022-03-31"},{"lineNumber":591,"author":{"gitId":"chuashihong"},"content":"- `phone` be digits string and must have more than 3 digits.","lastModifiedDate":"2022-03-31"},{"lineNumber":592,"author":{"gitId":"janald99"},"content":"","lastModifiedDate":"2022-04-07"},{"lineNumber":593,"author":{"gitId":"janald99"},"content":"#### Appointment","lastModifiedDate":"2022-04-07"},{"lineNumber":594,"author":{"gitId":"chuashihong"},"content":"- The `appointment` field should be either `\"\"` or `\"Year-Month-Day-Hour-Minute\"` format, no other format is acceptable. `\"\"` is when the appoinment date is not specified yet","lastModifiedDate":"2022-03-31"},{"lineNumber":595,"author":{"gitId":"chuashihong"},"content":"- When specifying the Month and Day, the data should be specified in exactly 2 digits, i.e. you need to pad 0 for 1 digit date or month.","lastModifiedDate":"2022-03-31"},{"lineNumber":596,"author":{"gitId":"chuashihong"},"content":"","lastModifiedDate":"2022-03-31"},{"lineNumber":597,"author":{"gitId":"janald99"},"content":"#### Tag","lastModifiedDate":"2022-04-07"},{"lineNumber":598,"author":{"gitId":"chuashihong"},"content":"- empty tag should be `[]`","lastModifiedDate":"2022-03-31"},{"lineNumber":599,"author":{"gitId":"janald99"},"content":"#### PropertyToBuy","lastModifiedDate":"2022-04-07"},{"lineNumber":600,"author":{"gitId":"chuashihong"},"content":"- empty property must be `null`, not `\"null\"` or `\u0027null\u0027`","lastModifiedDate":"2022-03-31"},{"lineNumber":601,"author":{"gitId":"chuashihong"},"content":"- for the `housetype` under `house`, the housetype provided must be one of our [defined houseType](#house-type).","lastModifiedDate":"2022-03-31"},{"lineNumber":602,"author":{"gitId":"chuashihong"},"content":"Otherwise, all other value will be translated to `Unspecified` housetype!","lastModifiedDate":"2022-03-31"},{"lineNumber":603,"author":{"gitId":"chuashihong"},"content":"- Currently, the `housetype` cannot put `null` inside it, otherwise the program cannot run (We will solve it in v1.4!)","lastModifiedDate":"2022-03-31"},{"lineNumber":604,"author":{"gitId":"chuashihong"},"content":"- `pricerange` must be a digit string, and `lower` value must be less than or equal to `upper`","lastModifiedDate":"2022-03-31"},{"lineNumber":605,"author":{"gitId":"chuashihong"},"content":"","lastModifiedDate":"2022-03-31"},{"lineNumber":606,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-03-31"},{"lineNumber":607,"author":{"gitId":"-"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2020-05-23"},{"lineNumber":608,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":609,"author":{"gitId":"-"},"content":"## FAQ","lastModifiedDate":"2020-05-23"},{"lineNumber":610,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":611,"author":{"gitId":"-"},"content":"**Q**: How do I transfer my data to another Computer?\u003cbr\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":612,"author":{"gitId":"WJunHong"},"content":"**A**: Install the app in the other computer and overwrite the empty data file it creates with the file that contains the json data in your previous AgentSee home folder.","lastModifiedDate":"2022-03-29"},{"lineNumber":613,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":614,"author":{"gitId":"janald99"},"content":"**Q**: How do I edit a property to buy of a buyer or seller?\u003cbr\u003e","lastModifiedDate":"2022-03-30"},{"lineNumber":615,"author":{"gitId":"janald99"},"content":"**A**: You may use the `edit-b` or `edit-s` command to edit their fields respectively.","lastModifiedDate":"2022-03-30"},{"lineNumber":616,"author":{"gitId":"janald99"},"content":"","lastModifiedDate":"2022-03-30"},{"lineNumber":617,"author":{"gitId":"janald99"},"content":"**Q**: Will me data be saved if I exit the application?\u003cbr\u003e","lastModifiedDate":"2022-03-30"},{"lineNumber":618,"author":{"gitId":"janald99"},"content":"**A**: Don\u0027t worry! Your data will be automatically saved everytime it is updated. Feel free to type `exit` to exit the program.","lastModifiedDate":"2022-03-30"},{"lineNumber":619,"author":{"gitId":"janald99"},"content":"","lastModifiedDate":"2022-03-30"},{"lineNumber":620,"author":{"gitId":"WJunHong"},"content":"**Q**: Why does long text hide the labels and text?\u003cbr\u003e","lastModifiedDate":"2022-03-31"},{"lineNumber":621,"author":{"gitId":"WJunHong"},"content":"**A**: The text is hidden as it is too long. We will have plans in the future to restrict the length of text fields.","lastModifiedDate":"2022-03-31"},{"lineNumber":622,"author":{"gitId":"WJunHong"},"content":"","lastModifiedDate":"2022-03-31"},{"lineNumber":623,"author":{"gitId":"WJunHong"},"content":"**Q** Why does my house type on UI not match the one I just entered, even though it\u0027s correct? \u003cbr\u003e","lastModifiedDate":"2022-04-06"},{"lineNumber":624,"author":{"gitId":"WJunHong"},"content":"**A** Certain inputs like `MaNsIoN` are also accepted, but are not visually appealing, hence, we default each input for a house type to a certain displayed text.","lastModifiedDate":"2022-04-06"},{"lineNumber":625,"author":{"gitId":"WJunHong"},"content":"","lastModifiedDate":"2022-04-06"},{"lineNumber":626,"author":{"gitId":"WJunHong"},"content":"**Q** Why is `add-b n/goutham s/o karthik p/3456789` not accepted in `add-b` or `add-s`? \u003cbr\u003e","lastModifiedDate":"2022-04-06"},{"lineNumber":627,"author":{"gitId":"WJunHong"},"content":"**A** Your name contains non-alphanumeric characters `/`. Even if it is an actual name, it does not conform to our requirements.","lastModifiedDate":"2022-04-06"},{"lineNumber":628,"author":{"gitId":"WJunHong"},"content":"","lastModifiedDate":"2022-04-06"},{"lineNumber":629,"author":{"gitId":"WJunHong"},"content":"**Q** My phone number be ridiculously long `238223212393288...` even though it\u0027s not possible! \u003cbr\u003e","lastModifiedDate":"2022-04-06"},{"lineNumber":630,"author":{"gitId":"WJunHong"},"content":"**A** We do not set a hard limit to the length of your phone number since they can be of different lengths.","lastModifiedDate":"2022-04-06"},{"lineNumber":631,"author":{"gitId":"WJunHong"},"content":"","lastModifiedDate":"2022-04-06"},{"lineNumber":632,"author":{"gitId":"WJunHong"},"content":"**Q** Why have location and address, aren\u0027t they the same thing? \u003cbr\u003e","lastModifiedDate":"2022-04-06"},{"lineNumber":633,"author":{"gitId":"WJunHong"},"content":"**A** Location refers to the area/town/city the property can/does reside in. Address is the exact location. We decided to separate them as it allows you to more easily match properties where the exact address may not necessarily contain the location name. E.g. 36 College Ave E, North Tower can be considered to be in Clementi/Dover/NUS but does not contain the location name.","lastModifiedDate":"2022-04-06"},{"lineNumber":634,"author":{"gitId":"WJunHong"},"content":"","lastModifiedDate":"2022-04-06"},{"lineNumber":635,"author":{"gitId":"WJunHong"},"content":"**Q** How do I \"reset\" my property fields like location to \"No location\"? \u003cbr\u003e","lastModifiedDate":"2022-04-06"},{"lineNumber":636,"author":{"gitId":"WJunHong"},"content":"**A** Once you have added a property, you cannot remove a specific field, only edit it. Basically, we do not allow a property to have missing fields, except when the client is first added and all the fields are empty. We have plans in the future to allow users to remove a property completely.","lastModifiedDate":"2022-04-06"},{"lineNumber":637,"author":{"gitId":"WJunHong"},"content":"","lastModifiedDate":"2022-04-06"},{"lineNumber":638,"author":{"gitId":"WJunHong"},"content":"**Q** Why does typing `delete-b 0` and `delete-b 999999` return 2 different error messages even though they are both violating the same condition? \u003cbr\u003e","lastModifiedDate":"2022-04-06"},{"lineNumber":639,"author":{"gitId":"WJunHong"},"content":"**A** We check whether you have first inputted a positive integer first. If not, we will throw the error message seen in `delete-b 0`. If you have typed in a positive integer, but it was larger than the displayed list size, it will inform you to check the range again with the other error message.","lastModifiedDate":"2022-04-06"},{"lineNumber":640,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-04-06"},{"lineNumber":641,"author":{"gitId":"-"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2020-05-23"},{"lineNumber":642,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":643,"author":{"gitId":"-"},"content":"## Command summary","lastModifiedDate":"2020-05-23"},{"lineNumber":644,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":645,"author":{"gitId":"cwnm"},"content":"","lastModifiedDate":"2022-03-31"},{"lineNumber":646,"author":{"gitId":"cwnm"},"content":"| Action                          | Format, Examples                                                                                                                                                      |","lastModifiedDate":"2022-03-31"},{"lineNumber":647,"author":{"gitId":"cwnm"},"content":"|---------------------------------|-----------------------------------------------------------------------------------------------------------------------------------------------------------------------|","lastModifiedDate":"2022-03-31"},{"lineNumber":648,"author":{"gitId":"cwnm"},"content":"| **Help**                        | `help`                                                                                                                                                                |","lastModifiedDate":"2022-03-31"},{"lineNumber":649,"author":{"gitId":"cwnm"},"content":"| **Exit**                        | `exit`                                                                                                                                                                |","lastModifiedDate":"2022-03-31"},{"lineNumber":650,"author":{"gitId":"cwnm"},"content":"| **Match property**              | `match INDEX` \u003cbr\u003e e.g., `match 1`                                                                                                                                    |","lastModifiedDate":"2022-03-31"},{"lineNumber":651,"author":{"gitId":"cwnm"},"content":"| **List Buyers**                 | `list-b`                                                                                                                                                              |","lastModifiedDate":"2022-03-31"},{"lineNumber":652,"author":{"gitId":"cwnm"},"content":"| **Add Buyer**                   | `add-b n/NAME p/PHONE_NUMBER [t/TAG]…​` \u003cbr\u003e e.g., `add-b n/James Ho p/22224444`                                                                                      |","lastModifiedDate":"2022-03-31"},{"lineNumber":653,"author":{"gitId":"cwnm"},"content":"| **Add Buyer Property**          | `add-ptb l/LOCATION pr/PRICE_RANGE h/HOUSE_TYPE` \u003cbr\u003e e.g., `add-ptb l/Bishan pr/100000,200000 h/hdb`                                                                 |","lastModifiedDate":"2022-03-31"},{"lineNumber":654,"author":{"gitId":"cwnm"},"content":"| **Make Appointment for Buyer**  | `appt-b INDEX time/TIME` \u003cbr\u003e e.g., `appt-b 1 time/2022-10-10-12-12`                                                                                                  |","lastModifiedDate":"2022-03-31"},{"lineNumber":655,"author":{"gitId":"cwnm"},"content":"| **Edit Buyer**                  | `edit-b INDEX [n/NAME] [p/PHONE] [t/TAG]…​ [time/APPOINTMENT] [h/HOUSE_TYPE] [l/LOCATION] [pr/PRICE_RANGE]`  \u003cbr\u003e e.g., `edit-b 2 n/James Ho p/22224444 `             |","lastModifiedDate":"2022-03-31"},{"lineNumber":656,"author":{"gitId":"cwnm"},"content":"| **Find Buyer**                  | `find-b field/KEYWORD1 [MORE_KEYWORDS]` \u003cbr\u003e e.g., `find-b n/James Jake`                                                                                              |","lastModifiedDate":"2022-03-31"},{"lineNumber":657,"author":{"gitId":"cwnm"},"content":"| **Delete Buyer**                | `delete-b INDEX`\u003cbr\u003e e.g., `delete-b 3`                                                                                                                               |","lastModifiedDate":"2022-03-31"},{"lineNumber":658,"author":{"gitId":"cwnm"},"content":"| **Clear Buyers**                | `clear-b`                                                                                                                                                             |","lastModifiedDate":"2022-03-31"},{"lineNumber":659,"author":{"gitId":"cwnm"},"content":"| **Sort Buyers**                 | `sort-b [by/COMPAREDITEM] [o/ORDER]` \u003cbr\u003e e.g., `sort-b by/name o/desc`                                                                                               |","lastModifiedDate":"2022-03-31"},{"lineNumber":660,"author":{"gitId":"cwnm"},"content":"| **List Sellers**                | `list-s`                                                                                                                                                              |","lastModifiedDate":"2022-03-31"},{"lineNumber":661,"author":{"gitId":"cwnm"},"content":"| **Add Seller**                  | `add-s n/NAME p/PHONE_NUMBER [t/TAG]…​` \u003cbr\u003e e.g., `add-s n/James Ho p/22224444`                                                                                      |","lastModifiedDate":"2022-03-31"},{"lineNumber":662,"author":{"gitId":"cwnm"},"content":"| **Add Seller Property**         | `add-pts a/ADDRESS l/LOCATION pr/PRICE_RANGE h/HOUSE_TYPE` \u003cbr\u003e e.g., `add-pts a/Blk 343, Rika Ave 1 #09-1231 l/Bishan pr/100000,200000 h/hdb`                        |","lastModifiedDate":"2022-03-31"},{"lineNumber":663,"author":{"gitId":"cwnm"},"content":"| **Make Appointment for Seller** | `appt-s INDEX time/TIME` \u003cbr\u003e e.g., `appt-s 1 time/2022-10-10-12-12`                                                                                                  |","lastModifiedDate":"2022-03-31"},{"lineNumber":664,"author":{"gitId":"cwnm"},"content":"| **Edit Seller**                 | `edit-s INDEX [n/NAME] [p/PHONE] [t/TAG]…​ [time/APPOINTMENT] [h/HOUSE_TYPE] [l/LOCATION] [pr/PRICE_RANGE] [a/ADDRESS]`  \u003cbr\u003e e.g., `edit-s 2 n/James Ho p/22224444 ` |","lastModifiedDate":"2022-03-31"},{"lineNumber":665,"author":{"gitId":"cwnm"},"content":"| **Find Seller**                 | `find-s field/KEYWORD1 [MORE_KEYWORDS]` \u003cbr\u003e e.g., `find-s n/James Jake`                                                                                              |","lastModifiedDate":"2022-03-31"},{"lineNumber":666,"author":{"gitId":"cwnm"},"content":"| **Delete Seller**               | `delete-s INDEX`\u003cbr\u003e e.g., `delete-s 3`                                                                                                                               |","lastModifiedDate":"2022-03-31"},{"lineNumber":667,"author":{"gitId":"cwnm"},"content":"| **Clear Sellers**               | `clear-s`                                                                                                                                                             |","lastModifiedDate":"2022-03-31"},{"lineNumber":668,"author":{"gitId":"cwnm"},"content":"| **Sort Sellers**                | `sort-s [by/COMPAREDITEM] [o/ORDER]` \u003cbr\u003e e.g., `sort-s by/time o/asc`                                                                                                |","lastModifiedDate":"2022-03-31"},{"lineNumber":669,"author":{"gitId":"WJunHong"},"content":"","lastModifiedDate":"2022-03-29"},{"lineNumber":670,"author":{"gitId":"WJunHong"},"content":"","lastModifiedDate":"2022-03-29"},{"lineNumber":671,"author":{"gitId":"WJunHong"},"content":"[Back to top](#quick-start)","lastModifiedDate":"2022-03-29"}],"authorContributionMap":{"janald99":145,"WJunHong":236,"Jacky142857":34,"-":133,"cwnm":40,"chuashihong":83}},{"path":"docs/_sass/minima/_base.scss","fileType":"other","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"html {","lastModifiedDate":"2020-05-23"},{"lineNumber":2,"author":{"gitId":"-"},"content":"  font-size: $base-font-size;","lastModifiedDate":"2020-05-23"},{"lineNumber":3,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":5,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2020-05-23"},{"lineNumber":6,"author":{"gitId":"-"},"content":" * Reset some basic elements","lastModifiedDate":"2020-05-23"},{"lineNumber":7,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2020-05-23"},{"lineNumber":8,"author":{"gitId":"-"},"content":"body, h1, h2, h3, h4, h5, h6,","lastModifiedDate":"2020-05-23"},{"lineNumber":9,"author":{"gitId":"-"},"content":"p, blockquote, pre, hr,","lastModifiedDate":"2020-05-23"},{"lineNumber":10,"author":{"gitId":"-"},"content":"dl, dd, ol, ul, figure {","lastModifiedDate":"2020-05-23"},{"lineNumber":11,"author":{"gitId":"-"},"content":"  margin: 0;","lastModifiedDate":"2020-05-23"},{"lineNumber":12,"author":{"gitId":"-"},"content":"  padding: 0;","lastModifiedDate":"2020-05-23"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":14,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":18,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2020-05-23"},{"lineNumber":19,"author":{"gitId":"-"},"content":" * Basic styling","lastModifiedDate":"2020-05-23"},{"lineNumber":20,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2020-05-23"},{"lineNumber":21,"author":{"gitId":"-"},"content":"body {","lastModifiedDate":"2020-05-23"},{"lineNumber":22,"author":{"gitId":"-"},"content":"  font: $base-font-weight #{$base-font-size}/#{$base-line-height} $base-font-family;","lastModifiedDate":"2020-05-23"},{"lineNumber":23,"author":{"gitId":"-"},"content":"  color: $text-color;","lastModifiedDate":"2020-05-23"},{"lineNumber":24,"author":{"gitId":"-"},"content":"  background-color: $background-color;","lastModifiedDate":"2020-05-23"},{"lineNumber":25,"author":{"gitId":"-"},"content":"  -webkit-text-size-adjust: 100%;","lastModifiedDate":"2020-05-23"},{"lineNumber":26,"author":{"gitId":"-"},"content":"  -webkit-font-feature-settings: \"kern\" 1;","lastModifiedDate":"2020-05-23"},{"lineNumber":27,"author":{"gitId":"-"},"content":"     -moz-font-feature-settings: \"kern\" 1;","lastModifiedDate":"2020-05-23"},{"lineNumber":28,"author":{"gitId":"-"},"content":"       -o-font-feature-settings: \"kern\" 1;","lastModifiedDate":"2020-05-23"},{"lineNumber":29,"author":{"gitId":"-"},"content":"          font-feature-settings: \"kern\" 1;","lastModifiedDate":"2020-05-23"},{"lineNumber":30,"author":{"gitId":"-"},"content":"  font-kerning: normal;","lastModifiedDate":"2020-05-23"},{"lineNumber":31,"author":{"gitId":"-"},"content":"  display: flex;","lastModifiedDate":"2020-05-23"},{"lineNumber":32,"author":{"gitId":"-"},"content":"  min-height: 100vh;","lastModifiedDate":"2020-05-23"},{"lineNumber":33,"author":{"gitId":"-"},"content":"  flex-direction: column;","lastModifiedDate":"2020-05-23"},{"lineNumber":34,"author":{"gitId":"-"},"content":"  overflow-wrap: break-word;","lastModifiedDate":"2020-05-23"},{"lineNumber":35,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":36,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":37,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":38,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":39,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2020-05-23"},{"lineNumber":40,"author":{"gitId":"-"},"content":" * Set `margin-bottom` to maintain vertical rhythm","lastModifiedDate":"2020-05-23"},{"lineNumber":41,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2020-05-23"},{"lineNumber":42,"author":{"gitId":"-"},"content":"h1, h2, h3, h4, h5, h6,","lastModifiedDate":"2020-05-23"},{"lineNumber":43,"author":{"gitId":"-"},"content":"p, blockquote, pre,","lastModifiedDate":"2020-05-23"},{"lineNumber":44,"author":{"gitId":"-"},"content":"ul, ol, dl, figure,","lastModifiedDate":"2020-05-23"},{"lineNumber":45,"author":{"gitId":"-"},"content":"%vertical-rhythm {","lastModifiedDate":"2020-05-23"},{"lineNumber":46,"author":{"gitId":"-"},"content":"  margin-bottom: $spacing-unit / 2;","lastModifiedDate":"2020-05-23"},{"lineNumber":47,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":48,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":49,"author":{"gitId":"-"},"content":"hr {","lastModifiedDate":"2020-05-23"},{"lineNumber":50,"author":{"gitId":"-"},"content":"  margin-top: $spacing-unit;","lastModifiedDate":"2020-05-23"},{"lineNumber":51,"author":{"gitId":"-"},"content":"  margin-bottom: $spacing-unit;","lastModifiedDate":"2020-05-23"},{"lineNumber":52,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":53,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":54,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2020-05-23"},{"lineNumber":55,"author":{"gitId":"-"},"content":" * `main` element","lastModifiedDate":"2020-05-23"},{"lineNumber":56,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2020-05-23"},{"lineNumber":57,"author":{"gitId":"-"},"content":"main {","lastModifiedDate":"2020-05-23"},{"lineNumber":58,"author":{"gitId":"-"},"content":"  display: block; /* Default value of `display` of `main` element is \u0027inline\u0027 in IE 11. */","lastModifiedDate":"2020-05-23"},{"lineNumber":59,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":60,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":61,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":62,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":63,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2020-05-23"},{"lineNumber":64,"author":{"gitId":"-"},"content":" * Images","lastModifiedDate":"2020-05-23"},{"lineNumber":65,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2020-05-23"},{"lineNumber":66,"author":{"gitId":"-"},"content":"img {","lastModifiedDate":"2020-05-23"},{"lineNumber":67,"author":{"gitId":"-"},"content":"  max-width: 100%;","lastModifiedDate":"2020-05-23"},{"lineNumber":68,"author":{"gitId":"-"},"content":"  vertical-align: middle;","lastModifiedDate":"2020-05-23"},{"lineNumber":69,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":70,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":71,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":72,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":73,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2020-05-23"},{"lineNumber":74,"author":{"gitId":"-"},"content":" * Figures","lastModifiedDate":"2020-05-23"},{"lineNumber":75,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2020-05-23"},{"lineNumber":76,"author":{"gitId":"-"},"content":"figure \u003e img {","lastModifiedDate":"2020-05-23"},{"lineNumber":77,"author":{"gitId":"-"},"content":"  display: block;","lastModifiedDate":"2020-05-23"},{"lineNumber":78,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":79,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":80,"author":{"gitId":"-"},"content":"figcaption {","lastModifiedDate":"2020-05-23"},{"lineNumber":81,"author":{"gitId":"-"},"content":"  font-size: $small-font-size;","lastModifiedDate":"2020-05-23"},{"lineNumber":82,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":83,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":84,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":85,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":86,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2020-05-23"},{"lineNumber":87,"author":{"gitId":"-"},"content":" * Lists","lastModifiedDate":"2020-05-23"},{"lineNumber":88,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2020-05-23"},{"lineNumber":89,"author":{"gitId":"-"},"content":"ul, ol {","lastModifiedDate":"2020-05-23"},{"lineNumber":90,"author":{"gitId":"-"},"content":"  margin-left: $spacing-unit;","lastModifiedDate":"2020-05-23"},{"lineNumber":91,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":92,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":93,"author":{"gitId":"-"},"content":"li {","lastModifiedDate":"2020-05-23"},{"lineNumber":94,"author":{"gitId":"-"},"content":"  \u003e ul,","lastModifiedDate":"2020-05-23"},{"lineNumber":95,"author":{"gitId":"-"},"content":"  \u003e ol {","lastModifiedDate":"2020-05-23"},{"lineNumber":96,"author":{"gitId":"-"},"content":"    margin-bottom: 0;","lastModifiedDate":"2020-05-23"},{"lineNumber":97,"author":{"gitId":"-"},"content":"  }","lastModifiedDate":"2020-05-23"},{"lineNumber":98,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":99,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":100,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":101,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":102,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2020-05-23"},{"lineNumber":103,"author":{"gitId":"-"},"content":" * Headings","lastModifiedDate":"2020-05-23"},{"lineNumber":104,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2020-05-23"},{"lineNumber":105,"author":{"gitId":"-"},"content":"h1, h2, h3, h4, h5, h6 {","lastModifiedDate":"2020-05-23"},{"lineNumber":106,"author":{"gitId":"-"},"content":"  font-weight: $base-font-weight;","lastModifiedDate":"2020-05-23"},{"lineNumber":107,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":108,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":109,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":110,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":111,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2020-05-23"},{"lineNumber":112,"author":{"gitId":"-"},"content":" * Links","lastModifiedDate":"2020-05-23"},{"lineNumber":113,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2020-05-23"},{"lineNumber":114,"author":{"gitId":"-"},"content":"a {","lastModifiedDate":"2020-05-23"},{"lineNumber":115,"author":{"gitId":"-"},"content":"  color: $link-base-color;","lastModifiedDate":"2020-05-23"},{"lineNumber":116,"author":{"gitId":"-"},"content":"  text-decoration: none;","lastModifiedDate":"2020-05-23"},{"lineNumber":117,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":118,"author":{"gitId":"-"},"content":"  \u0026:visited {","lastModifiedDate":"2020-05-23"},{"lineNumber":119,"author":{"gitId":"-"},"content":"    color: $link-visited-color;","lastModifiedDate":"2020-05-23"},{"lineNumber":120,"author":{"gitId":"-"},"content":"  }","lastModifiedDate":"2020-05-23"},{"lineNumber":121,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":122,"author":{"gitId":"-"},"content":"  \u0026:hover {","lastModifiedDate":"2020-05-23"},{"lineNumber":123,"author":{"gitId":"-"},"content":"    color: $text-color;","lastModifiedDate":"2020-05-23"},{"lineNumber":124,"author":{"gitId":"-"},"content":"    text-decoration: underline;","lastModifiedDate":"2020-05-23"},{"lineNumber":125,"author":{"gitId":"-"},"content":"  }","lastModifiedDate":"2020-05-23"},{"lineNumber":126,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":127,"author":{"gitId":"-"},"content":"  .social-media-list \u0026:hover {","lastModifiedDate":"2020-05-23"},{"lineNumber":128,"author":{"gitId":"-"},"content":"    text-decoration: none;","lastModifiedDate":"2020-05-23"},{"lineNumber":129,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":130,"author":{"gitId":"-"},"content":"    .username {","lastModifiedDate":"2020-05-23"},{"lineNumber":131,"author":{"gitId":"-"},"content":"      text-decoration: underline;","lastModifiedDate":"2020-05-23"},{"lineNumber":132,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2020-05-23"},{"lineNumber":133,"author":{"gitId":"-"},"content":"  }","lastModifiedDate":"2020-05-23"},{"lineNumber":134,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":135,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":136,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":137,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2020-05-23"},{"lineNumber":138,"author":{"gitId":"-"},"content":" * Blockquotes","lastModifiedDate":"2020-05-23"},{"lineNumber":139,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2020-05-23"},{"lineNumber":140,"author":{"gitId":"-"},"content":"blockquote {","lastModifiedDate":"2020-05-23"},{"lineNumber":141,"author":{"gitId":"-"},"content":"  color: $brand-color;","lastModifiedDate":"2020-05-23"},{"lineNumber":142,"author":{"gitId":"-"},"content":"  border-left: 4px solid $brand-color-light;","lastModifiedDate":"2020-05-23"},{"lineNumber":143,"author":{"gitId":"-"},"content":"  padding-left: $spacing-unit / 2;","lastModifiedDate":"2020-05-23"},{"lineNumber":144,"author":{"gitId":"-"},"content":"  @include relative-font-size(1.125);","lastModifiedDate":"2020-05-23"},{"lineNumber":145,"author":{"gitId":"-"},"content":"  font-style: italic;","lastModifiedDate":"2020-05-23"},{"lineNumber":146,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":147,"author":{"gitId":"-"},"content":"  \u003e :last-child {","lastModifiedDate":"2020-05-23"},{"lineNumber":148,"author":{"gitId":"-"},"content":"    margin-bottom: 0;","lastModifiedDate":"2020-05-23"},{"lineNumber":149,"author":{"gitId":"-"},"content":"  }","lastModifiedDate":"2020-05-23"},{"lineNumber":150,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":151,"author":{"gitId":"-"},"content":"  i, em {","lastModifiedDate":"2020-05-23"},{"lineNumber":152,"author":{"gitId":"-"},"content":"    font-style: normal;","lastModifiedDate":"2020-05-23"},{"lineNumber":153,"author":{"gitId":"-"},"content":"  }","lastModifiedDate":"2020-05-23"},{"lineNumber":154,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":155,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":156,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":157,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":158,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2020-05-23"},{"lineNumber":159,"author":{"gitId":"-"},"content":" * Code formatting","lastModifiedDate":"2020-05-23"},{"lineNumber":160,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2020-05-23"},{"lineNumber":161,"author":{"gitId":"-"},"content":"pre,","lastModifiedDate":"2020-05-23"},{"lineNumber":162,"author":{"gitId":"-"},"content":"code {","lastModifiedDate":"2020-05-23"},{"lineNumber":163,"author":{"gitId":"-"},"content":"  font-family: $code-font-family;","lastModifiedDate":"2020-05-23"},{"lineNumber":164,"author":{"gitId":"-"},"content":"  font-size: 0.9375em;","lastModifiedDate":"2020-05-23"},{"lineNumber":165,"author":{"gitId":"-"},"content":"  border: 1px solid $brand-color-light;","lastModifiedDate":"2020-05-23"},{"lineNumber":166,"author":{"gitId":"-"},"content":"  border-radius: 3px;","lastModifiedDate":"2020-05-23"},{"lineNumber":167,"author":{"gitId":"-"},"content":"  background-color: $code-background-color;","lastModifiedDate":"2020-05-23"},{"lineNumber":168,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":169,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":170,"author":{"gitId":"-"},"content":"code {","lastModifiedDate":"2020-05-23"},{"lineNumber":171,"author":{"gitId":"-"},"content":"  padding: 1px 5px;","lastModifiedDate":"2020-05-23"},{"lineNumber":172,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":173,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":174,"author":{"gitId":"-"},"content":"pre {","lastModifiedDate":"2020-05-23"},{"lineNumber":175,"author":{"gitId":"-"},"content":"  padding: 8px 12px;","lastModifiedDate":"2020-05-23"},{"lineNumber":176,"author":{"gitId":"-"},"content":"  overflow-x: auto;","lastModifiedDate":"2020-05-23"},{"lineNumber":177,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":178,"author":{"gitId":"-"},"content":"  \u003e code {","lastModifiedDate":"2020-05-23"},{"lineNumber":179,"author":{"gitId":"-"},"content":"    border: 0;","lastModifiedDate":"2020-05-23"},{"lineNumber":180,"author":{"gitId":"-"},"content":"    padding-right: 0;","lastModifiedDate":"2020-05-23"},{"lineNumber":181,"author":{"gitId":"-"},"content":"    padding-left: 0;","lastModifiedDate":"2020-05-23"},{"lineNumber":182,"author":{"gitId":"-"},"content":"  }","lastModifiedDate":"2020-05-23"},{"lineNumber":183,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":184,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":185,"author":{"gitId":"-"},"content":".highlight {","lastModifiedDate":"2020-05-23"},{"lineNumber":186,"author":{"gitId":"-"},"content":"  border-radius: 3px;","lastModifiedDate":"2020-05-23"},{"lineNumber":187,"author":{"gitId":"-"},"content":"  background: $code-background-color;","lastModifiedDate":"2020-05-23"},{"lineNumber":188,"author":{"gitId":"-"},"content":"  @extend %vertical-rhythm;","lastModifiedDate":"2020-05-23"},{"lineNumber":189,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":190,"author":{"gitId":"-"},"content":"  .highlighter-rouge \u0026 {","lastModifiedDate":"2020-05-23"},{"lineNumber":191,"author":{"gitId":"-"},"content":"    background: $code-background-color;","lastModifiedDate":"2020-05-23"},{"lineNumber":192,"author":{"gitId":"-"},"content":"  }","lastModifiedDate":"2020-05-23"},{"lineNumber":193,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":194,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":195,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":196,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":197,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2020-05-23"},{"lineNumber":198,"author":{"gitId":"-"},"content":" * Wrapper","lastModifiedDate":"2020-05-23"},{"lineNumber":199,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2020-05-23"},{"lineNumber":200,"author":{"gitId":"-"},"content":".wrapper {","lastModifiedDate":"2020-05-23"},{"lineNumber":201,"author":{"gitId":"-"},"content":"  max-width: calc(#{$content-width} - (#{$spacing-unit}));","lastModifiedDate":"2020-05-23"},{"lineNumber":202,"author":{"gitId":"-"},"content":"  margin-right: auto;","lastModifiedDate":"2020-05-23"},{"lineNumber":203,"author":{"gitId":"-"},"content":"  margin-left: auto;","lastModifiedDate":"2020-05-23"},{"lineNumber":204,"author":{"gitId":"-"},"content":"  padding-right: $spacing-unit / 2;","lastModifiedDate":"2020-05-23"},{"lineNumber":205,"author":{"gitId":"-"},"content":"  padding-left: $spacing-unit / 2;","lastModifiedDate":"2020-05-23"},{"lineNumber":206,"author":{"gitId":"-"},"content":"  @extend %clearfix;","lastModifiedDate":"2020-05-23"},{"lineNumber":207,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":208,"author":{"gitId":"-"},"content":"  @media screen and (min-width: $on-large) {","lastModifiedDate":"2020-05-23"},{"lineNumber":209,"author":{"gitId":"-"},"content":"    max-width: calc(#{$content-width} - (#{$spacing-unit} * 2));","lastModifiedDate":"2020-05-23"},{"lineNumber":210,"author":{"gitId":"-"},"content":"    padding-right: $spacing-unit;","lastModifiedDate":"2020-05-23"},{"lineNumber":211,"author":{"gitId":"-"},"content":"    padding-left: $spacing-unit;","lastModifiedDate":"2020-05-23"},{"lineNumber":212,"author":{"gitId":"-"},"content":"  }","lastModifiedDate":"2020-05-23"},{"lineNumber":213,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":214,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":215,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":216,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":217,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2020-05-23"},{"lineNumber":218,"author":{"gitId":"-"},"content":" * Clearfix","lastModifiedDate":"2020-05-23"},{"lineNumber":219,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2020-05-23"},{"lineNumber":220,"author":{"gitId":"-"},"content":"%clearfix:after {","lastModifiedDate":"2020-05-23"},{"lineNumber":221,"author":{"gitId":"-"},"content":"  content: \"\";","lastModifiedDate":"2020-05-23"},{"lineNumber":222,"author":{"gitId":"-"},"content":"  display: table;","lastModifiedDate":"2020-05-23"},{"lineNumber":223,"author":{"gitId":"-"},"content":"  clear: both;","lastModifiedDate":"2020-05-23"},{"lineNumber":224,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":225,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":226,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":227,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":228,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2020-05-23"},{"lineNumber":229,"author":{"gitId":"-"},"content":" * Icons","lastModifiedDate":"2020-05-23"},{"lineNumber":230,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2020-05-23"},{"lineNumber":231,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":232,"author":{"gitId":"-"},"content":".orange {","lastModifiedDate":"2020-05-23"},{"lineNumber":233,"author":{"gitId":"-"},"content":"  color: #f66a0a;","lastModifiedDate":"2020-05-23"},{"lineNumber":234,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":235,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":236,"author":{"gitId":"-"},"content":".grey {","lastModifiedDate":"2020-05-23"},{"lineNumber":237,"author":{"gitId":"-"},"content":"  color: #828282;","lastModifiedDate":"2020-05-23"},{"lineNumber":238,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":239,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":240,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2020-05-23"},{"lineNumber":241,"author":{"gitId":"-"},"content":" * Tables","lastModifiedDate":"2020-05-23"},{"lineNumber":242,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2020-05-23"},{"lineNumber":243,"author":{"gitId":"-"},"content":"table {","lastModifiedDate":"2020-05-23"},{"lineNumber":244,"author":{"gitId":"-"},"content":"  margin-bottom: $spacing-unit;","lastModifiedDate":"2020-05-23"},{"lineNumber":245,"author":{"gitId":"-"},"content":"  width: 100%;","lastModifiedDate":"2020-05-23"},{"lineNumber":246,"author":{"gitId":"-"},"content":"  text-align: $table-text-align;","lastModifiedDate":"2020-05-23"},{"lineNumber":247,"author":{"gitId":"-"},"content":"  color: $table-text-color;","lastModifiedDate":"2020-05-23"},{"lineNumber":248,"author":{"gitId":"-"},"content":"  border-collapse: collapse;","lastModifiedDate":"2020-05-23"},{"lineNumber":249,"author":{"gitId":"-"},"content":"  border: 1px solid $table-border-color;","lastModifiedDate":"2020-05-23"},{"lineNumber":250,"author":{"gitId":"-"},"content":"  tr {","lastModifiedDate":"2020-05-23"},{"lineNumber":251,"author":{"gitId":"-"},"content":"    \u0026:nth-child(even) {","lastModifiedDate":"2020-05-23"},{"lineNumber":252,"author":{"gitId":"-"},"content":"      background-color: $table-zebra-color;","lastModifiedDate":"2020-05-23"},{"lineNumber":253,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2020-05-23"},{"lineNumber":254,"author":{"gitId":"-"},"content":"  }","lastModifiedDate":"2020-05-23"},{"lineNumber":255,"author":{"gitId":"-"},"content":"  th, td {","lastModifiedDate":"2020-05-23"},{"lineNumber":256,"author":{"gitId":"-"},"content":"    padding: ($spacing-unit / 3) ($spacing-unit / 2);","lastModifiedDate":"2020-05-23"},{"lineNumber":257,"author":{"gitId":"-"},"content":"  }","lastModifiedDate":"2020-05-23"},{"lineNumber":258,"author":{"gitId":"-"},"content":"  th {","lastModifiedDate":"2020-05-23"},{"lineNumber":259,"author":{"gitId":"-"},"content":"    background-color: $table-header-bg-color;","lastModifiedDate":"2020-05-23"},{"lineNumber":260,"author":{"gitId":"-"},"content":"    border: 1px solid $table-header-border;","lastModifiedDate":"2020-05-23"},{"lineNumber":261,"author":{"gitId":"-"},"content":"  }","lastModifiedDate":"2020-05-23"},{"lineNumber":262,"author":{"gitId":"-"},"content":"  td {","lastModifiedDate":"2020-05-23"},{"lineNumber":263,"author":{"gitId":"-"},"content":"    border: 1px solid $table-border-color;","lastModifiedDate":"2020-05-23"},{"lineNumber":264,"author":{"gitId":"-"},"content":"  }","lastModifiedDate":"2020-05-23"},{"lineNumber":265,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":266,"author":{"gitId":"-"},"content":"  @include media-query($on-laptop) {","lastModifiedDate":"2020-05-23"},{"lineNumber":267,"author":{"gitId":"-"},"content":"    display: block;","lastModifiedDate":"2020-05-23"},{"lineNumber":268,"author":{"gitId":"-"},"content":"    overflow-x: auto;","lastModifiedDate":"2020-05-23"},{"lineNumber":269,"author":{"gitId":"-"},"content":"    -webkit-overflow-scrolling: touch;","lastModifiedDate":"2020-05-23"},{"lineNumber":270,"author":{"gitId":"-"},"content":"            -ms-overflow-style: -ms-autohiding-scrollbar;","lastModifiedDate":"2020-05-23"},{"lineNumber":271,"author":{"gitId":"-"},"content":"  }","lastModifiedDate":"2020-05-23"},{"lineNumber":272,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":273,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-01-11"},{"lineNumber":274,"author":{"gitId":"-"},"content":"@media print {","lastModifiedDate":"2021-01-12"},{"lineNumber":275,"author":{"gitId":"-"},"content":"  /**","lastModifiedDate":"2021-01-11"},{"lineNumber":276,"author":{"gitId":"-"},"content":"  * Prevents page break from cutting through content when printing","lastModifiedDate":"2021-01-12"},{"lineNumber":277,"author":{"gitId":"-"},"content":"  */","lastModifiedDate":"2021-01-11"},{"lineNumber":278,"author":{"gitId":"-"},"content":"  body {","lastModifiedDate":"2021-01-11"},{"lineNumber":279,"author":{"gitId":"-"},"content":"    display: block;","lastModifiedDate":"2021-01-11"},{"lineNumber":280,"author":{"gitId":"-"},"content":"  }","lastModifiedDate":"2021-01-11"},{"lineNumber":281,"author":{"gitId":"-"},"content":"  /**","lastModifiedDate":"2021-01-12"},{"lineNumber":282,"author":{"gitId":"-"},"content":"  * Replaces the top navigation menu with the project name when printing","lastModifiedDate":"2021-01-12"},{"lineNumber":283,"author":{"gitId":"-"},"content":"  */","lastModifiedDate":"2021-01-12"},{"lineNumber":284,"author":{"gitId":"-"},"content":"  .site-header .wrapper {","lastModifiedDate":"2021-01-12"},{"lineNumber":285,"author":{"gitId":"-"},"content":"    display: none;","lastModifiedDate":"2021-01-12"},{"lineNumber":286,"author":{"gitId":"-"},"content":"  }","lastModifiedDate":"2021-01-12"},{"lineNumber":287,"author":{"gitId":"-"},"content":"  .site-header {","lastModifiedDate":"2021-01-12"},{"lineNumber":288,"author":{"gitId":"-"},"content":"    text-align: center;","lastModifiedDate":"2021-01-12"},{"lineNumber":289,"author":{"gitId":"-"},"content":"  }","lastModifiedDate":"2021-01-12"},{"lineNumber":290,"author":{"gitId":"-"},"content":"  .site-header:before {","lastModifiedDate":"2021-01-12"},{"lineNumber":291,"author":{"gitId":"WJunHong"},"content":"    content: \"AgentSee\";","lastModifiedDate":"2022-02-25"},{"lineNumber":292,"author":{"gitId":"-"},"content":"    font-size: 32px;","lastModifiedDate":"2021-01-12"},{"lineNumber":293,"author":{"gitId":"-"},"content":"  }","lastModifiedDate":"2021-01-11"},{"lineNumber":294,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2021-01-12"},{"lineNumber":295,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-01-12"}],"authorContributionMap":{"WJunHong":1,"-":294}},{"path":"docs/diagrams/AddBuyerCommandObjectDiagram.puml","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"WJunHong"},"content":"@startuml","lastModifiedDate":"2022-03-24"},{"lineNumber":2,"author":{"gitId":"WJunHong"},"content":"!include style.puml","lastModifiedDate":"2022-03-24"},{"lineNumber":3,"author":{"gitId":"WJunHong"},"content":"show members","lastModifiedDate":"2022-03-24"},{"lineNumber":4,"author":{"gitId":"WJunHong"},"content":"","lastModifiedDate":"2022-03-24"},{"lineNumber":5,"author":{"gitId":"WJunHong"},"content":"object Buyer","lastModifiedDate":"2022-03-24"},{"lineNumber":6,"author":{"gitId":"WJunHong"},"content":"object AddBuyerCommand","lastModifiedDate":"2022-03-24"},{"lineNumber":7,"author":{"gitId":"WJunHong"},"content":"object Name {","lastModifiedDate":"2022-03-24"},{"lineNumber":8,"author":{"gitId":"WJunHong"},"content":"    name \u003d \"David\"","lastModifiedDate":"2022-03-24"},{"lineNumber":9,"author":{"gitId":"WJunHong"},"content":"}","lastModifiedDate":"2022-03-24"},{"lineNumber":10,"author":{"gitId":"WJunHong"},"content":"object Phone {","lastModifiedDate":"2022-03-24"},{"lineNumber":11,"author":{"gitId":"WJunHong"},"content":"    phone \u003d \"12345678\"","lastModifiedDate":"2022-03-24"},{"lineNumber":12,"author":{"gitId":"WJunHong"},"content":"}","lastModifiedDate":"2022-03-24"},{"lineNumber":13,"author":{"gitId":"WJunHong"},"content":"object PropertyToBuy","lastModifiedDate":"2022-03-24"},{"lineNumber":14,"author":{"gitId":"WJunHong"},"content":"","lastModifiedDate":"2022-03-24"},{"lineNumber":15,"author":{"gitId":"WJunHong"},"content":"AddBuyerCommand --\u003e Buyer","lastModifiedDate":"2022-03-24"},{"lineNumber":16,"author":{"gitId":"WJunHong"},"content":"Buyer--\u003e Name","lastModifiedDate":"2022-03-24"},{"lineNumber":17,"author":{"gitId":"WJunHong"},"content":"Buyer --\u003e Phone","lastModifiedDate":"2022-03-24"},{"lineNumber":18,"author":{"gitId":"WJunHong"},"content":"Buyer --\u003e PropertyToBuy","lastModifiedDate":"2022-03-24"},{"lineNumber":19,"author":{"gitId":"WJunHong"},"content":"@enduml","lastModifiedDate":"2022-03-24"}],"authorContributionMap":{"WJunHong":19}},{"path":"docs/diagrams/AddBuyerSequenceDiagram.puml","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"WJunHong"},"content":"@startuml","lastModifiedDate":"2022-03-24"},{"lineNumber":2,"author":{"gitId":"WJunHong"},"content":"\u0027https://plantuml.com/sequence-diagram","lastModifiedDate":"2022-03-24"},{"lineNumber":3,"author":{"gitId":"WJunHong"},"content":"!include style.puml","lastModifiedDate":"2022-03-24"},{"lineNumber":4,"author":{"gitId":"WJunHong"},"content":"","lastModifiedDate":"2022-03-24"},{"lineNumber":5,"author":{"gitId":"WJunHong"},"content":"","lastModifiedDate":"2022-03-24"},{"lineNumber":6,"author":{"gitId":"WJunHong"},"content":"box Logic LOGIC_COLOR_T1","lastModifiedDate":"2022-03-24"},{"lineNumber":7,"author":{"gitId":"WJunHong"},"content":"participant \":LogicManager\" as LogicManager LOGIC_COLOR","lastModifiedDate":"2022-03-24"},{"lineNumber":8,"author":{"gitId":"WJunHong"},"content":"participant \":AddressBookParser\" as AddressBookParser LOGIC_COLOR","lastModifiedDate":"2022-03-24"},{"lineNumber":9,"author":{"gitId":"WJunHong"},"content":"participant \":AddBuyerCommandParser\" as AddBuyerCommandParser LOGIC_COLOR","lastModifiedDate":"2022-03-24"},{"lineNumber":10,"author":{"gitId":"WJunHong"},"content":"participant \"d:AddBuyerCommand\" as AddBuyerCommand LOGIC_COLOR","lastModifiedDate":"2022-03-24"},{"lineNumber":11,"author":{"gitId":"WJunHong"},"content":"participant \":CommandResult\" as CommandResult LOGIC_COLOR","lastModifiedDate":"2022-03-24"},{"lineNumber":12,"author":{"gitId":"WJunHong"},"content":"end box","lastModifiedDate":"2022-03-24"},{"lineNumber":13,"author":{"gitId":"WJunHong"},"content":"","lastModifiedDate":"2022-03-24"},{"lineNumber":14,"author":{"gitId":"WJunHong"},"content":"box Model MODEL_COLOR_T1","lastModifiedDate":"2022-03-24"},{"lineNumber":15,"author":{"gitId":"WJunHong"},"content":"participant \":Model\" as Model MODEL_COLOR","lastModifiedDate":"2022-03-24"},{"lineNumber":16,"author":{"gitId":"WJunHong"},"content":"end box","lastModifiedDate":"2022-03-24"},{"lineNumber":17,"author":{"gitId":"WJunHong"},"content":"","lastModifiedDate":"2022-03-24"},{"lineNumber":18,"author":{"gitId":"WJunHong"},"content":"box Storage STORAGE_COLOR_T1","lastModifiedDate":"2022-03-24"},{"lineNumber":19,"author":{"gitId":"WJunHong"},"content":"participant \":Storage\" as Storage STORAGE_COLOR_T2","lastModifiedDate":"2022-03-24"},{"lineNumber":20,"author":{"gitId":"WJunHong"},"content":"","lastModifiedDate":"2022-03-24"},{"lineNumber":21,"author":{"gitId":"WJunHong"},"content":"[-\u003e LogicManager : execute(\"delete 1\")","lastModifiedDate":"2022-03-24"},{"lineNumber":22,"author":{"gitId":"WJunHong"},"content":"activate LogicManager","lastModifiedDate":"2022-03-24"},{"lineNumber":23,"author":{"gitId":"WJunHong"},"content":"","lastModifiedDate":"2022-03-24"},{"lineNumber":24,"author":{"gitId":"WJunHong"},"content":"LogicManager -\u003e AddressBookParser : parseCommand(\"addbuyer n/David p/12345678\")","lastModifiedDate":"2022-03-24"},{"lineNumber":25,"author":{"gitId":"WJunHong"},"content":"activate AddressBookParser","lastModifiedDate":"2022-03-24"},{"lineNumber":26,"author":{"gitId":"WJunHong"},"content":"","lastModifiedDate":"2022-03-24"},{"lineNumber":27,"author":{"gitId":"WJunHong"},"content":"create AddBuyerCommandParser","lastModifiedDate":"2022-03-24"},{"lineNumber":28,"author":{"gitId":"WJunHong"},"content":"AddressBookParser -\u003e AddBuyerCommandParser","lastModifiedDate":"2022-03-24"},{"lineNumber":29,"author":{"gitId":"WJunHong"},"content":"activate AddBuyerCommandParser","lastModifiedDate":"2022-03-24"},{"lineNumber":30,"author":{"gitId":"WJunHong"},"content":"","lastModifiedDate":"2022-03-24"},{"lineNumber":31,"author":{"gitId":"WJunHong"},"content":"AddBuyerCommandParser --\u003e AddressBookParser","lastModifiedDate":"2022-03-24"},{"lineNumber":32,"author":{"gitId":"WJunHong"},"content":"deactivate AddBuyerCommandParser","lastModifiedDate":"2022-03-24"},{"lineNumber":33,"author":{"gitId":"WJunHong"},"content":"","lastModifiedDate":"2022-03-24"},{"lineNumber":34,"author":{"gitId":"WJunHong"},"content":"AddressBookParser -\u003e AddBuyerCommandParser : parse(\"n/David p/12345678\")","lastModifiedDate":"2022-03-24"},{"lineNumber":35,"author":{"gitId":"WJunHong"},"content":"activate AddBuyerCommandParser","lastModifiedDate":"2022-03-24"},{"lineNumber":36,"author":{"gitId":"WJunHong"},"content":"","lastModifiedDate":"2022-03-24"},{"lineNumber":37,"author":{"gitId":"WJunHong"},"content":"create AddBuyerCommand","lastModifiedDate":"2022-03-24"},{"lineNumber":38,"author":{"gitId":"WJunHong"},"content":"AddBuyerCommandParser -\u003e AddBuyerCommand","lastModifiedDate":"2022-03-24"},{"lineNumber":39,"author":{"gitId":"WJunHong"},"content":"activate AddBuyerCommand","lastModifiedDate":"2022-03-24"},{"lineNumber":40,"author":{"gitId":"WJunHong"},"content":"","lastModifiedDate":"2022-03-24"},{"lineNumber":41,"author":{"gitId":"WJunHong"},"content":"AddBuyerCommand --\u003e AddBuyerCommandParser","lastModifiedDate":"2022-03-24"},{"lineNumber":42,"author":{"gitId":"WJunHong"},"content":"deactivate AddBuyerCommand","lastModifiedDate":"2022-03-24"},{"lineNumber":43,"author":{"gitId":"WJunHong"},"content":"","lastModifiedDate":"2022-03-24"},{"lineNumber":44,"author":{"gitId":"WJunHong"},"content":"AddBuyerCommandParser --\u003e AddressBookParser","lastModifiedDate":"2022-03-24"},{"lineNumber":45,"author":{"gitId":"WJunHong"},"content":"deactivate AddBuyerCommandParser","lastModifiedDate":"2022-03-24"},{"lineNumber":46,"author":{"gitId":"WJunHong"},"content":"\u0027Hidden arrow to position the destroy marker below the end of the activation bar.","lastModifiedDate":"2022-03-24"},{"lineNumber":47,"author":{"gitId":"WJunHong"},"content":"AddBuyerCommandParser -[hidden]-\u003e AddressBookParser","lastModifiedDate":"2022-03-24"},{"lineNumber":48,"author":{"gitId":"WJunHong"},"content":"destroy AddBuyerCommandParser","lastModifiedDate":"2022-03-24"},{"lineNumber":49,"author":{"gitId":"WJunHong"},"content":"","lastModifiedDate":"2022-03-24"},{"lineNumber":50,"author":{"gitId":"WJunHong"},"content":"AddressBookParser --\u003e LogicManager","lastModifiedDate":"2022-03-24"},{"lineNumber":51,"author":{"gitId":"WJunHong"},"content":"deactivate AddressBookParser","lastModifiedDate":"2022-03-24"},{"lineNumber":52,"author":{"gitId":"WJunHong"},"content":"","lastModifiedDate":"2022-03-24"},{"lineNumber":53,"author":{"gitId":"WJunHong"},"content":"LogicManager -\u003e AddBuyerCommand : execute()","lastModifiedDate":"2022-03-24"},{"lineNumber":54,"author":{"gitId":"WJunHong"},"content":"activate AddBuyerCommand","lastModifiedDate":"2022-03-24"},{"lineNumber":55,"author":{"gitId":"WJunHong"},"content":"","lastModifiedDate":"2022-03-24"},{"lineNumber":56,"author":{"gitId":"WJunHong"},"content":"AddBuyerCommand -\u003e Model : addBuyer()","lastModifiedDate":"2022-03-24"},{"lineNumber":57,"author":{"gitId":"WJunHong"},"content":"activate Model","lastModifiedDate":"2022-03-24"},{"lineNumber":58,"author":{"gitId":"WJunHong"},"content":"","lastModifiedDate":"2022-03-24"},{"lineNumber":59,"author":{"gitId":"WJunHong"},"content":"Model --\u003e AddBuyerCommand","lastModifiedDate":"2022-03-24"},{"lineNumber":60,"author":{"gitId":"WJunHong"},"content":"deactivate Model","lastModifiedDate":"2022-03-24"},{"lineNumber":61,"author":{"gitId":"WJunHong"},"content":"","lastModifiedDate":"2022-03-24"},{"lineNumber":62,"author":{"gitId":"WJunHong"},"content":"","lastModifiedDate":"2022-03-24"},{"lineNumber":63,"author":{"gitId":"WJunHong"},"content":"","lastModifiedDate":"2022-03-24"},{"lineNumber":64,"author":{"gitId":"WJunHong"},"content":"create CommandResult","lastModifiedDate":"2022-03-24"},{"lineNumber":65,"author":{"gitId":"WJunHong"},"content":"AddBuyerCommand -\u003e CommandResult","lastModifiedDate":"2022-03-24"},{"lineNumber":66,"author":{"gitId":"WJunHong"},"content":"activate CommandResult","lastModifiedDate":"2022-03-24"},{"lineNumber":67,"author":{"gitId":"WJunHong"},"content":"","lastModifiedDate":"2022-03-24"},{"lineNumber":68,"author":{"gitId":"WJunHong"},"content":"CommandResult --\u003e AddBuyerCommand","lastModifiedDate":"2022-03-24"},{"lineNumber":69,"author":{"gitId":"WJunHong"},"content":"deactivate CommandResult","lastModifiedDate":"2022-03-24"},{"lineNumber":70,"author":{"gitId":"WJunHong"},"content":"","lastModifiedDate":"2022-03-24"},{"lineNumber":71,"author":{"gitId":"WJunHong"},"content":"AddBuyerCommand --\u003e LogicManager : result","lastModifiedDate":"2022-03-24"},{"lineNumber":72,"author":{"gitId":"WJunHong"},"content":"deactivate AddBuyerCommand","lastModifiedDate":"2022-03-24"},{"lineNumber":73,"author":{"gitId":"WJunHong"},"content":"","lastModifiedDate":"2022-03-24"},{"lineNumber":74,"author":{"gitId":"WJunHong"},"content":"LogicManager --\u003e Storage : saveBuyerAddressBook()","lastModifiedDate":"2022-03-24"},{"lineNumber":75,"author":{"gitId":"WJunHong"},"content":"activate Storage","lastModifiedDate":"2022-03-24"},{"lineNumber":76,"author":{"gitId":"WJunHong"},"content":"","lastModifiedDate":"2022-03-24"},{"lineNumber":77,"author":{"gitId":"WJunHong"},"content":"Storage --\u003e LogicManager","lastModifiedDate":"2022-03-24"},{"lineNumber":78,"author":{"gitId":"WJunHong"},"content":"deactivate Storage","lastModifiedDate":"2022-03-24"},{"lineNumber":79,"author":{"gitId":"WJunHong"},"content":"","lastModifiedDate":"2022-03-24"},{"lineNumber":80,"author":{"gitId":"WJunHong"},"content":"[\u003c--LogicManager : result","lastModifiedDate":"2022-03-24"},{"lineNumber":81,"author":{"gitId":"WJunHong"},"content":"deactivate LogicManager","lastModifiedDate":"2022-03-24"},{"lineNumber":82,"author":{"gitId":"WJunHong"},"content":"@enduml","lastModifiedDate":"2022-03-24"}],"authorContributionMap":{"WJunHong":82}},{"path":"docs/diagrams/ArchitectureSequenceDiagram.puml","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"@startuml","lastModifiedDate":"2019-07-03"},{"lineNumber":2,"author":{"gitId":"-"},"content":"!include style.puml","lastModifiedDate":"2019-07-03"},{"lineNumber":3,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":4,"author":{"gitId":"-"},"content":"Actor User as user USER_COLOR","lastModifiedDate":"2019-07-03"},{"lineNumber":5,"author":{"gitId":"-"},"content":"Participant \":UI\" as ui UI_COLOR","lastModifiedDate":"2019-07-03"},{"lineNumber":6,"author":{"gitId":"-"},"content":"Participant \":Logic\" as logic LOGIC_COLOR","lastModifiedDate":"2019-07-03"},{"lineNumber":7,"author":{"gitId":"-"},"content":"Participant \":Model\" as model MODEL_COLOR","lastModifiedDate":"2019-07-03"},{"lineNumber":8,"author":{"gitId":"-"},"content":"Participant \":Storage\" as storage STORAGE_COLOR","lastModifiedDate":"2019-07-03"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":10,"author":{"gitId":"-"},"content":"user -[USER_COLOR]\u003e ui : \"delete 1\"","lastModifiedDate":"2019-07-03"},{"lineNumber":11,"author":{"gitId":"-"},"content":"activate ui UI_COLOR","lastModifiedDate":"2019-07-03"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":13,"author":{"gitId":"-"},"content":"ui -[UI_COLOR]\u003e logic : execute(\"delete 1\")","lastModifiedDate":"2019-07-03"},{"lineNumber":14,"author":{"gitId":"-"},"content":"activate logic LOGIC_COLOR","lastModifiedDate":"2019-07-03"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":16,"author":{"gitId":"cwnm"},"content":"logic -[LOGIC_COLOR]\u003e model : deleteclient(p)","lastModifiedDate":"2022-03-04"},{"lineNumber":17,"author":{"gitId":"-"},"content":"activate model MODEL_COLOR","lastModifiedDate":"2019-07-03"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":19,"author":{"gitId":"-"},"content":"model -[MODEL_COLOR]-\u003e logic","lastModifiedDate":"2019-07-03"},{"lineNumber":20,"author":{"gitId":"-"},"content":"deactivate model","lastModifiedDate":"2019-07-03"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":22,"author":{"gitId":"-"},"content":"logic -[LOGIC_COLOR]\u003e storage : saveAddressBook(addressBook)","lastModifiedDate":"2019-07-03"},{"lineNumber":23,"author":{"gitId":"-"},"content":"activate storage STORAGE_COLOR","lastModifiedDate":"2019-07-03"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":25,"author":{"gitId":"-"},"content":"storage -[STORAGE_COLOR]\u003e storage : Save to file","lastModifiedDate":"2019-07-03"},{"lineNumber":26,"author":{"gitId":"-"},"content":"activate storage STORAGE_COLOR_T1","lastModifiedDate":"2019-07-03"},{"lineNumber":27,"author":{"gitId":"-"},"content":"storage --[STORAGE_COLOR]\u003e storage","lastModifiedDate":"2020-05-23"},{"lineNumber":28,"author":{"gitId":"-"},"content":"deactivate storage","lastModifiedDate":"2019-07-03"},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":30,"author":{"gitId":"-"},"content":"storage --[STORAGE_COLOR]\u003e logic","lastModifiedDate":"2019-07-03"},{"lineNumber":31,"author":{"gitId":"-"},"content":"deactivate storage","lastModifiedDate":"2019-07-03"},{"lineNumber":32,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":33,"author":{"gitId":"-"},"content":"logic --[LOGIC_COLOR]\u003e ui","lastModifiedDate":"2019-07-03"},{"lineNumber":34,"author":{"gitId":"-"},"content":"deactivate logic","lastModifiedDate":"2019-07-03"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":36,"author":{"gitId":"-"},"content":"ui--[UI_COLOR]\u003e user","lastModifiedDate":"2019-07-03"},{"lineNumber":37,"author":{"gitId":"-"},"content":"deactivate ui","lastModifiedDate":"2019-07-03"},{"lineNumber":38,"author":{"gitId":"-"},"content":"@enduml","lastModifiedDate":"2019-07-03"}],"authorContributionMap":{"-":37,"cwnm":1}},{"path":"docs/diagrams/BetterModelClassDiagram.puml","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"@startuml","lastModifiedDate":"2019-07-03"},{"lineNumber":2,"author":{"gitId":"-"},"content":"!include style.puml","lastModifiedDate":"2019-07-03"},{"lineNumber":3,"author":{"gitId":"-"},"content":"skinparam arrowThickness 1.1","lastModifiedDate":"2019-07-03"},{"lineNumber":4,"author":{"gitId":"-"},"content":"skinparam arrowColor MODEL_COLOR","lastModifiedDate":"2019-07-03"},{"lineNumber":5,"author":{"gitId":"-"},"content":"skinparam classBackgroundColor MODEL_COLOR","lastModifiedDate":"2019-07-03"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":7,"author":{"gitId":"cwnm"},"content":"AddressBook *-right-\u003e \"1\" UniqueclientList","lastModifiedDate":"2022-03-04"},{"lineNumber":8,"author":{"gitId":"-"},"content":"AddressBook *-right-\u003e \"1\" UniqueTagList","lastModifiedDate":"2019-07-30"},{"lineNumber":9,"author":{"gitId":"cwnm"},"content":"UniqueTagList -[hidden]down- UniqueclientList","lastModifiedDate":"2022-03-04"},{"lineNumber":10,"author":{"gitId":"cwnm"},"content":"UniqueTagList -[hidden]down- UniqueclientList","lastModifiedDate":"2022-03-04"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":12,"author":{"gitId":"-"},"content":"UniqueTagList *-right-\u003e \"*\" Tag","lastModifiedDate":"2019-07-03"},{"lineNumber":13,"author":{"gitId":"cwnm"},"content":"UniqueclientList -right-\u003e client","lastModifiedDate":"2022-03-04"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":15,"author":{"gitId":"cwnm"},"content":"client -up-\u003e \"*\" Tag","lastModifiedDate":"2022-03-04"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":17,"author":{"gitId":"cwnm"},"content":"client *--\u003e Name","lastModifiedDate":"2022-03-04"},{"lineNumber":18,"author":{"gitId":"cwnm"},"content":"client *--\u003e Phone","lastModifiedDate":"2022-03-04"},{"lineNumber":19,"author":{"gitId":"cwnm"},"content":"client *--\u003e Email","lastModifiedDate":"2022-03-04"},{"lineNumber":20,"author":{"gitId":"cwnm"},"content":"client *--\u003e Address","lastModifiedDate":"2022-03-04"},{"lineNumber":21,"author":{"gitId":"-"},"content":"@enduml","lastModifiedDate":"2019-07-03"}],"authorContributionMap":{"-":12,"cwnm":9}},{"path":"docs/diagrams/ClientClassDiagram.puml","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"janald99"},"content":"@startuml","lastModifiedDate":"2022-03-24"},{"lineNumber":2,"author":{"gitId":"janald99"},"content":"!include style.puml","lastModifiedDate":"2022-03-24"},{"lineNumber":3,"author":{"gitId":"janald99"},"content":"skinparam arrowThickness 1.1","lastModifiedDate":"2022-03-24"},{"lineNumber":4,"author":{"gitId":"janald99"},"content":"skinparam arrowColor MODEL_COLOR","lastModifiedDate":"2022-03-24"},{"lineNumber":5,"author":{"gitId":"janald99"},"content":"skinparam classBackgroundColor MODEL_COLOR","lastModifiedDate":"2022-03-24"},{"lineNumber":6,"author":{"gitId":"janald99"},"content":"","lastModifiedDate":"2022-03-24"},{"lineNumber":7,"author":{"gitId":"janald99"},"content":"Package Client \u003c\u003cRectangle\u003e\u003e{","lastModifiedDate":"2022-03-24"},{"lineNumber":8,"author":{"gitId":"janald99"},"content":"","lastModifiedDate":"2022-03-24"},{"lineNumber":9,"author":{"gitId":"janald99"},"content":"Class CLIENT #1616B0","lastModifiedDate":"2022-03-24"},{"lineNumber":10,"author":{"gitId":"janald99"},"content":"Class Buyer #9D0012","lastModifiedDate":"2022-03-24"},{"lineNumber":11,"author":{"gitId":"janald99"},"content":"Class Seller #9D0012","lastModifiedDate":"2022-03-24"},{"lineNumber":12,"author":{"gitId":"janald99"},"content":"","lastModifiedDate":"2022-03-24"},{"lineNumber":13,"author":{"gitId":"janald99"},"content":"Class Name #51000A","lastModifiedDate":"2022-03-24"},{"lineNumber":14,"author":{"gitId":"janald99"},"content":"Class Phone #51000A","lastModifiedDate":"2022-03-24"},{"lineNumber":15,"author":{"gitId":"janald99"},"content":"Class Tag #51000A","lastModifiedDate":"2022-03-24"},{"lineNumber":16,"author":{"gitId":"janald99"},"content":"","lastModifiedDate":"2022-03-24"},{"lineNumber":17,"author":{"gitId":"janald99"},"content":"Class PropertyToBuy #544400","lastModifiedDate":"2022-03-24"},{"lineNumber":18,"author":{"gitId":"janald99"},"content":"Class PropertyToSell #544400","lastModifiedDate":"2022-03-24"},{"lineNumber":19,"author":{"gitId":"janald99"},"content":"}","lastModifiedDate":"2022-03-24"},{"lineNumber":20,"author":{"gitId":"janald99"},"content":"","lastModifiedDate":"2022-03-24"},{"lineNumber":21,"author":{"gitId":"janald99"},"content":"Class HiddenOutside #FFFFFF","lastModifiedDate":"2022-03-24"},{"lineNumber":22,"author":{"gitId":"janald99"},"content":"HiddenOutside ..\u003e CLIENT","lastModifiedDate":"2022-03-24"},{"lineNumber":23,"author":{"gitId":"janald99"},"content":"","lastModifiedDate":"2022-03-24"},{"lineNumber":24,"author":{"gitId":"janald99"},"content":"Seller -left-|\u003e CLIENT","lastModifiedDate":"2022-03-24"},{"lineNumber":25,"author":{"gitId":"janald99"},"content":"Buyer -right-|\u003e CLIENT","lastModifiedDate":"2022-03-24"},{"lineNumber":26,"author":{"gitId":"janald99"},"content":"","lastModifiedDate":"2022-03-24"},{"lineNumber":27,"author":{"gitId":"janald99"},"content":"CLIENT *--\u003e \"1\" Name","lastModifiedDate":"2022-03-24"},{"lineNumber":28,"author":{"gitId":"janald99"},"content":"CLIENT *--\u003e \"1\" Phone","lastModifiedDate":"2022-03-24"},{"lineNumber":29,"author":{"gitId":"janald99"},"content":"CLIENT *--\u003e \"*\" Tag","lastModifiedDate":"2022-03-24"},{"lineNumber":30,"author":{"gitId":"janald99"},"content":"","lastModifiedDate":"2022-03-24"},{"lineNumber":31,"author":{"gitId":"janald99"},"content":"Buyer *--\u003e PropertyToBuy","lastModifiedDate":"2022-03-24"},{"lineNumber":32,"author":{"gitId":"janald99"},"content":"Seller *--\u003e PropertyToSell","lastModifiedDate":"2022-03-24"},{"lineNumber":33,"author":{"gitId":"janald99"},"content":"","lastModifiedDate":"2022-03-24"},{"lineNumber":34,"author":{"gitId":"janald99"},"content":"@enduml","lastModifiedDate":"2022-03-24"}],"authorContributionMap":{"janald99":34}},{"path":"docs/diagrams/DeleteSequenceDiagram.puml","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"@startuml","lastModifiedDate":"2019-07-03"},{"lineNumber":2,"author":{"gitId":"-"},"content":"!include style.puml","lastModifiedDate":"2019-07-03"},{"lineNumber":3,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":4,"author":{"gitId":"-"},"content":"box Logic LOGIC_COLOR_T1","lastModifiedDate":"2019-07-03"},{"lineNumber":5,"author":{"gitId":"-"},"content":"participant \":LogicManager\" as LogicManager LOGIC_COLOR","lastModifiedDate":"2019-07-03"},{"lineNumber":6,"author":{"gitId":"-"},"content":"participant \":AddressBookParser\" as AddressBookParser LOGIC_COLOR","lastModifiedDate":"2019-07-03"},{"lineNumber":7,"author":{"gitId":"-"},"content":"participant \":DeleteCommandParser\" as DeleteCommandParser LOGIC_COLOR","lastModifiedDate":"2019-07-03"},{"lineNumber":8,"author":{"gitId":"-"},"content":"participant \"d:DeleteCommand\" as DeleteCommand LOGIC_COLOR","lastModifiedDate":"2019-07-03"},{"lineNumber":9,"author":{"gitId":"-"},"content":"participant \":CommandResult\" as CommandResult LOGIC_COLOR","lastModifiedDate":"2019-07-03"},{"lineNumber":10,"author":{"gitId":"-"},"content":"end box","lastModifiedDate":"2019-07-03"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":12,"author":{"gitId":"-"},"content":"box Model MODEL_COLOR_T1","lastModifiedDate":"2019-07-03"},{"lineNumber":13,"author":{"gitId":"-"},"content":"participant \":Model\" as Model MODEL_COLOR","lastModifiedDate":"2019-07-03"},{"lineNumber":14,"author":{"gitId":"-"},"content":"end box","lastModifiedDate":"2019-07-03"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":16,"author":{"gitId":"-"},"content":"[-\u003e LogicManager : execute(\"delete 1\")","lastModifiedDate":"2019-07-03"},{"lineNumber":17,"author":{"gitId":"-"},"content":"activate LogicManager","lastModifiedDate":"2019-07-03"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":19,"author":{"gitId":"-"},"content":"LogicManager -\u003e AddressBookParser : parseCommand(\"delete 1\")","lastModifiedDate":"2019-07-03"},{"lineNumber":20,"author":{"gitId":"-"},"content":"activate AddressBookParser","lastModifiedDate":"2019-07-03"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":22,"author":{"gitId":"-"},"content":"create DeleteCommandParser","lastModifiedDate":"2019-07-03"},{"lineNumber":23,"author":{"gitId":"-"},"content":"AddressBookParser -\u003e DeleteCommandParser","lastModifiedDate":"2019-07-03"},{"lineNumber":24,"author":{"gitId":"-"},"content":"activate DeleteCommandParser","lastModifiedDate":"2019-07-03"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":26,"author":{"gitId":"-"},"content":"DeleteCommandParser --\u003e AddressBookParser","lastModifiedDate":"2019-07-03"},{"lineNumber":27,"author":{"gitId":"-"},"content":"deactivate DeleteCommandParser","lastModifiedDate":"2019-07-03"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":29,"author":{"gitId":"-"},"content":"AddressBookParser -\u003e DeleteCommandParser : parse(\"1\")","lastModifiedDate":"2019-07-03"},{"lineNumber":30,"author":{"gitId":"-"},"content":"activate DeleteCommandParser","lastModifiedDate":"2019-07-03"},{"lineNumber":31,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":32,"author":{"gitId":"-"},"content":"create DeleteCommand","lastModifiedDate":"2019-07-03"},{"lineNumber":33,"author":{"gitId":"-"},"content":"DeleteCommandParser -\u003e DeleteCommand","lastModifiedDate":"2019-07-03"},{"lineNumber":34,"author":{"gitId":"-"},"content":"activate DeleteCommand","lastModifiedDate":"2019-07-03"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":36,"author":{"gitId":"-"},"content":"DeleteCommand --\u003e DeleteCommandParser : d","lastModifiedDate":"2019-07-03"},{"lineNumber":37,"author":{"gitId":"-"},"content":"deactivate DeleteCommand","lastModifiedDate":"2019-07-03"},{"lineNumber":38,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":39,"author":{"gitId":"-"},"content":"DeleteCommandParser --\u003e AddressBookParser : d","lastModifiedDate":"2019-07-03"},{"lineNumber":40,"author":{"gitId":"-"},"content":"deactivate DeleteCommandParser","lastModifiedDate":"2019-07-03"},{"lineNumber":41,"author":{"gitId":"-"},"content":"\u0027Hidden arrow to position the destroy marker below the end of the activation bar.","lastModifiedDate":"2019-07-03"},{"lineNumber":42,"author":{"gitId":"-"},"content":"DeleteCommandParser -[hidden]-\u003e AddressBookParser","lastModifiedDate":"2019-07-03"},{"lineNumber":43,"author":{"gitId":"-"},"content":"destroy DeleteCommandParser","lastModifiedDate":"2019-07-03"},{"lineNumber":44,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":45,"author":{"gitId":"-"},"content":"AddressBookParser --\u003e LogicManager : d","lastModifiedDate":"2019-07-03"},{"lineNumber":46,"author":{"gitId":"-"},"content":"deactivate AddressBookParser","lastModifiedDate":"2019-07-03"},{"lineNumber":47,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":48,"author":{"gitId":"-"},"content":"LogicManager -\u003e DeleteCommand : execute()","lastModifiedDate":"2019-07-03"},{"lineNumber":49,"author":{"gitId":"-"},"content":"activate DeleteCommand","lastModifiedDate":"2019-07-03"},{"lineNumber":50,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":51,"author":{"gitId":"cwnm"},"content":"DeleteCommand -\u003e Model : deleteclient(1)","lastModifiedDate":"2022-03-04"},{"lineNumber":52,"author":{"gitId":"-"},"content":"activate Model","lastModifiedDate":"2019-07-03"},{"lineNumber":53,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":54,"author":{"gitId":"-"},"content":"Model --\u003e DeleteCommand","lastModifiedDate":"2019-07-03"},{"lineNumber":55,"author":{"gitId":"-"},"content":"deactivate Model","lastModifiedDate":"2019-07-03"},{"lineNumber":56,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":57,"author":{"gitId":"-"},"content":"create CommandResult","lastModifiedDate":"2019-07-03"},{"lineNumber":58,"author":{"gitId":"-"},"content":"DeleteCommand -\u003e CommandResult","lastModifiedDate":"2019-07-03"},{"lineNumber":59,"author":{"gitId":"-"},"content":"activate CommandResult","lastModifiedDate":"2019-07-03"},{"lineNumber":60,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":61,"author":{"gitId":"-"},"content":"CommandResult --\u003e DeleteCommand","lastModifiedDate":"2019-07-03"},{"lineNumber":62,"author":{"gitId":"-"},"content":"deactivate CommandResult","lastModifiedDate":"2019-07-03"},{"lineNumber":63,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":64,"author":{"gitId":"-"},"content":"DeleteCommand --\u003e LogicManager : result","lastModifiedDate":"2019-07-03"},{"lineNumber":65,"author":{"gitId":"-"},"content":"deactivate DeleteCommand","lastModifiedDate":"2019-07-03"},{"lineNumber":66,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":67,"author":{"gitId":"-"},"content":"[\u003c--LogicManager","lastModifiedDate":"2019-07-03"},{"lineNumber":68,"author":{"gitId":"-"},"content":"deactivate LogicManager","lastModifiedDate":"2019-07-03"},{"lineNumber":69,"author":{"gitId":"-"},"content":"@enduml","lastModifiedDate":"2019-07-03"}],"authorContributionMap":{"-":68,"cwnm":1}},{"path":"docs/diagrams/EditBuyerCommandDiagram.puml","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"chuashihong"},"content":"@startuml","lastModifiedDate":"2022-03-24"},{"lineNumber":2,"author":{"gitId":"chuashihong"},"content":"!include style.puml","lastModifiedDate":"2022-03-24"},{"lineNumber":3,"author":{"gitId":"chuashihong"},"content":"","lastModifiedDate":"2022-03-24"},{"lineNumber":4,"author":{"gitId":"chuashihong"},"content":"!define LOGIC_COLOR #3333C4","lastModifiedDate":"2022-03-24"},{"lineNumber":5,"author":{"gitId":"chuashihong"},"content":"!define LOGIC_COLOR_T1 #7777DB","lastModifiedDate":"2022-03-24"},{"lineNumber":6,"author":{"gitId":"chuashihong"},"content":"!define LOGIC_COLOR_T2 #5252CE","lastModifiedDate":"2022-03-24"},{"lineNumber":7,"author":{"gitId":"chuashihong"},"content":"!define LOGIC_COLOR_T3 #1616B0","lastModifiedDate":"2022-03-24"},{"lineNumber":8,"author":{"gitId":"chuashihong"},"content":"!define LOGIC_COLOR_T4 #101086","lastModifiedDate":"2022-03-24"},{"lineNumber":9,"author":{"gitId":"chuashihong"},"content":"","lastModifiedDate":"2022-03-24"},{"lineNumber":10,"author":{"gitId":"chuashihong"},"content":"box Logic LOGIC_COLOR_T1","lastModifiedDate":"2022-03-24"},{"lineNumber":11,"author":{"gitId":"chuashihong"},"content":"participant \":LogicManager\" as LogicManager LOGIC_COLOR","lastModifiedDate":"2022-03-24"},{"lineNumber":12,"author":{"gitId":"chuashihong"},"content":"participant \":AddressBookParser\" as AddressBookParser LOGIC_COLOR","lastModifiedDate":"2022-03-24"},{"lineNumber":13,"author":{"gitId":"chuashihong"},"content":"participant \":EditBuyerCommandParser\" as EditBuyerCommandParser LOGIC_COLOR","lastModifiedDate":"2022-03-24"},{"lineNumber":14,"author":{"gitId":"chuashihong"},"content":"participant \"EditBuyerCommand\" as EditBuyerCommand LOGIC_COLOR","lastModifiedDate":"2022-03-24"},{"lineNumber":15,"author":{"gitId":"chuashihong"},"content":"participant \":CommandResult\" as CommandResult LOGIC_COLOR","lastModifiedDate":"2022-03-24"},{"lineNumber":16,"author":{"gitId":"chuashihong"},"content":"end box","lastModifiedDate":"2022-03-24"},{"lineNumber":17,"author":{"gitId":"chuashihong"},"content":"","lastModifiedDate":"2022-03-24"},{"lineNumber":18,"author":{"gitId":"chuashihong"},"content":"box Model MODEL_COLOR_T2","lastModifiedDate":"2022-03-24"},{"lineNumber":19,"author":{"gitId":"chuashihong"},"content":"participant \":Model\" as Model MODEL_COLOR","lastModifiedDate":"2022-03-24"},{"lineNumber":20,"author":{"gitId":"chuashihong"},"content":"end box","lastModifiedDate":"2022-03-24"},{"lineNumber":21,"author":{"gitId":"chuashihong"},"content":"","lastModifiedDate":"2022-03-24"},{"lineNumber":22,"author":{"gitId":"chuashihong"},"content":"box Storage STORAGE_COLOR_T1","lastModifiedDate":"2022-03-24"},{"lineNumber":23,"author":{"gitId":"chuashihong"},"content":"participant \":Storage\" as Storage STORAGE_COLOR_T3","lastModifiedDate":"2022-03-24"},{"lineNumber":24,"author":{"gitId":"chuashihong"},"content":"","lastModifiedDate":"2022-03-24"},{"lineNumber":25,"author":{"gitId":"chuashihong"},"content":"","lastModifiedDate":"2022-03-24"},{"lineNumber":26,"author":{"gitId":"chuashihong"},"content":"[-\u003e LogicManager : execute(\"addbuyer 1 n/chua\")","lastModifiedDate":"2022-03-24"},{"lineNumber":27,"author":{"gitId":"chuashihong"},"content":"activate LogicManager","lastModifiedDate":"2022-03-24"},{"lineNumber":28,"author":{"gitId":"chuashihong"},"content":"","lastModifiedDate":"2022-03-24"},{"lineNumber":29,"author":{"gitId":"chuashihong"},"content":"LogicManager -\u003e AddressBookParser : parseCommand","lastModifiedDate":"2022-03-24"},{"lineNumber":30,"author":{"gitId":"chuashihong"},"content":"activate AddressBookParser","lastModifiedDate":"2022-03-24"},{"lineNumber":31,"author":{"gitId":"chuashihong"},"content":"","lastModifiedDate":"2022-03-24"},{"lineNumber":32,"author":{"gitId":"chuashihong"},"content":"create EditBuyerCommandParser","lastModifiedDate":"2022-03-24"},{"lineNumber":33,"author":{"gitId":"chuashihong"},"content":"AddressBookParser -\u003e EditBuyerCommandParser","lastModifiedDate":"2022-03-24"},{"lineNumber":34,"author":{"gitId":"chuashihong"},"content":"activate EditBuyerCommandParser","lastModifiedDate":"2022-03-24"},{"lineNumber":35,"author":{"gitId":"chuashihong"},"content":"","lastModifiedDate":"2022-03-24"},{"lineNumber":36,"author":{"gitId":"chuashihong"},"content":"EditBuyerCommandParser --\u003e AddressBookParser:","lastModifiedDate":"2022-03-24"},{"lineNumber":37,"author":{"gitId":"chuashihong"},"content":"deactivate EditBuyerCommandParser","lastModifiedDate":"2022-03-24"},{"lineNumber":38,"author":{"gitId":"chuashihong"},"content":"","lastModifiedDate":"2022-03-24"},{"lineNumber":39,"author":{"gitId":"chuashihong"},"content":"AddressBookParser -\u003e EditBuyerCommandParser : parse(\"addbuyer 1 n/chua\")","lastModifiedDate":"2022-03-24"},{"lineNumber":40,"author":{"gitId":"chuashihong"},"content":"activate EditBuyerCommandParser","lastModifiedDate":"2022-03-24"},{"lineNumber":41,"author":{"gitId":"chuashihong"},"content":"","lastModifiedDate":"2022-03-24"},{"lineNumber":42,"author":{"gitId":"chuashihong"},"content":"create EditBuyerCommand","lastModifiedDate":"2022-03-24"},{"lineNumber":43,"author":{"gitId":"chuashihong"},"content":"EditBuyerCommandParser -\u003e EditBuyerCommand :","lastModifiedDate":"2022-03-24"},{"lineNumber":44,"author":{"gitId":"chuashihong"},"content":"activate EditBuyerCommand","lastModifiedDate":"2022-03-24"},{"lineNumber":45,"author":{"gitId":"chuashihong"},"content":"","lastModifiedDate":"2022-03-24"},{"lineNumber":46,"author":{"gitId":"chuashihong"},"content":"EditBuyerCommand --\u003e EditBuyerCommandParser","lastModifiedDate":"2022-03-24"},{"lineNumber":47,"author":{"gitId":"chuashihong"},"content":"deactivate EditBuyerCommand","lastModifiedDate":"2022-03-24"},{"lineNumber":48,"author":{"gitId":"chuashihong"},"content":"","lastModifiedDate":"2022-03-24"},{"lineNumber":49,"author":{"gitId":"chuashihong"},"content":"EditBuyerCommandParser --\u003e AddressBookParser : :CommandResult","lastModifiedDate":"2022-03-24"},{"lineNumber":50,"author":{"gitId":"chuashihong"},"content":"deactivate EditBuyerCommandParser","lastModifiedDate":"2022-03-24"},{"lineNumber":51,"author":{"gitId":"chuashihong"},"content":"\u0027Hidden arrow to position the destroy marker below the end of the activation bar.","lastModifiedDate":"2022-03-24"},{"lineNumber":52,"author":{"gitId":"chuashihong"},"content":"EditBuyerCommandParser -[hidden]-\u003e AddressBookParser","lastModifiedDate":"2022-03-24"},{"lineNumber":53,"author":{"gitId":"chuashihong"},"content":"destroy EditBuyerCommandParser","lastModifiedDate":"2022-03-24"},{"lineNumber":54,"author":{"gitId":"chuashihong"},"content":"","lastModifiedDate":"2022-03-24"},{"lineNumber":55,"author":{"gitId":"chuashihong"},"content":"AddressBookParser --\u003e LogicManager ::CommandResult","lastModifiedDate":"2022-03-24"},{"lineNumber":56,"author":{"gitId":"chuashihong"},"content":"deactivate AddressBookParser","lastModifiedDate":"2022-03-24"},{"lineNumber":57,"author":{"gitId":"chuashihong"},"content":"","lastModifiedDate":"2022-03-24"},{"lineNumber":58,"author":{"gitId":"chuashihong"},"content":"LogicManager -\u003e EditBuyerCommand : CommandResult::execute","lastModifiedDate":"2022-03-24"},{"lineNumber":59,"author":{"gitId":"chuashihong"},"content":"activate EditBuyerCommand","lastModifiedDate":"2022-03-24"},{"lineNumber":60,"author":{"gitId":"chuashihong"},"content":"","lastModifiedDate":"2022-03-24"},{"lineNumber":61,"author":{"gitId":"chuashihong"},"content":"EditBuyerCommand -\u003e Model : setBuyer()","lastModifiedDate":"2022-03-24"},{"lineNumber":62,"author":{"gitId":"chuashihong"},"content":"activate Model","lastModifiedDate":"2022-03-24"},{"lineNumber":63,"author":{"gitId":"chuashihong"},"content":"","lastModifiedDate":"2022-03-24"},{"lineNumber":64,"author":{"gitId":"chuashihong"},"content":"Model --\u003e EditBuyerCommand","lastModifiedDate":"2022-03-24"},{"lineNumber":65,"author":{"gitId":"chuashihong"},"content":"deactivate Model","lastModifiedDate":"2022-03-24"},{"lineNumber":66,"author":{"gitId":"chuashihong"},"content":"","lastModifiedDate":"2022-03-24"},{"lineNumber":67,"author":{"gitId":"chuashihong"},"content":"EditBuyerCommand --\u003e LogicManager : CommandResult","lastModifiedDate":"2022-03-24"},{"lineNumber":68,"author":{"gitId":"chuashihong"},"content":"deactivate EditBuyerCommand","lastModifiedDate":"2022-03-24"},{"lineNumber":69,"author":{"gitId":"chuashihong"},"content":"","lastModifiedDate":"2022-03-24"},{"lineNumber":70,"author":{"gitId":"chuashihong"},"content":"LogicManager --\u003e Storage : saveBuyerAddressBook()","lastModifiedDate":"2022-03-24"},{"lineNumber":71,"author":{"gitId":"chuashihong"},"content":"activate Storage","lastModifiedDate":"2022-03-24"},{"lineNumber":72,"author":{"gitId":"chuashihong"},"content":"","lastModifiedDate":"2022-03-24"},{"lineNumber":73,"author":{"gitId":"chuashihong"},"content":"Storage --\u003e LogicManager","lastModifiedDate":"2022-03-24"},{"lineNumber":74,"author":{"gitId":"chuashihong"},"content":"deactivate Storage","lastModifiedDate":"2022-03-24"},{"lineNumber":75,"author":{"gitId":"chuashihong"},"content":"","lastModifiedDate":"2022-03-24"},{"lineNumber":76,"author":{"gitId":"chuashihong"},"content":"[\u003c--LogicManager : CommandResult","lastModifiedDate":"2022-03-24"},{"lineNumber":77,"author":{"gitId":"chuashihong"},"content":"deactivate LogicManager","lastModifiedDate":"2022-03-24"},{"lineNumber":78,"author":{"gitId":"chuashihong"},"content":"@enduml","lastModifiedDate":"2022-03-24"}],"authorContributionMap":{"chuashihong":78}},{"path":"docs/diagrams/ModelClassDiagram.puml","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"@startuml","lastModifiedDate":"2019-07-03"},{"lineNumber":2,"author":{"gitId":"-"},"content":"!include style.puml","lastModifiedDate":"2019-07-03"},{"lineNumber":3,"author":{"gitId":"-"},"content":"skinparam arrowThickness 1.1","lastModifiedDate":"2019-07-03"},{"lineNumber":4,"author":{"gitId":"-"},"content":"skinparam arrowColor MODEL_COLOR","lastModifiedDate":"2019-07-03"},{"lineNumber":5,"author":{"gitId":"-"},"content":"skinparam classBackgroundColor MODEL_COLOR","lastModifiedDate":"2019-07-03"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":7,"author":{"gitId":"-"},"content":"Package Model \u003c\u003cRectangle\u003e\u003e{","lastModifiedDate":"2019-07-03"},{"lineNumber":8,"author":{"gitId":"janald99"},"content":"Class \"\u003c\u003cinterface\u003e\u003e\\nReadOnlyCLIENTBook\" as ReadOnlyCLIENTBook","lastModifiedDate":"2022-03-24"},{"lineNumber":9,"author":{"gitId":"-"},"content":"Class \"\u003c\u003cinterface\u003e\u003e\\nReadOnlyUserPrefs\" as ReadOnlyUserPrefs","lastModifiedDate":"2022-01-03"},{"lineNumber":10,"author":{"gitId":"-"},"content":"Class \"\u003c\u003cinterface\u003e\u003e\\nModel\" as Model","lastModifiedDate":"2022-01-03"},{"lineNumber":11,"author":{"gitId":"janald99"},"content":"","lastModifiedDate":"2022-03-24"},{"lineNumber":12,"author":{"gitId":"janald99"},"content":"Class CLIENTBook #1616B0","lastModifiedDate":"2022-03-24"},{"lineNumber":13,"author":{"gitId":"-"},"content":"Class ModelManager","lastModifiedDate":"2019-07-03"},{"lineNumber":14,"author":{"gitId":"-"},"content":"Class UserPrefs","lastModifiedDate":"2019-07-03"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":16,"author":{"gitId":"janald99"},"content":"Class UniqueCLIENTList #1616B0","lastModifiedDate":"2022-03-24"},{"lineNumber":17,"author":{"gitId":"janald99"},"content":"Class CLIENT #1616B0","lastModifiedDate":"2022-03-24"},{"lineNumber":18,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2019-07-03"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":20,"author":{"gitId":"-"},"content":"Class HiddenOutside #FFFFFF","lastModifiedDate":"2019-07-03"},{"lineNumber":21,"author":{"gitId":"-"},"content":"HiddenOutside ..\u003e Model","lastModifiedDate":"2019-07-03"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":23,"author":{"gitId":"janald99"},"content":"CLIENTBook .up.|\u003e ReadOnlyCLIENTBook","lastModifiedDate":"2022-03-24"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":25,"author":{"gitId":"-"},"content":"ModelManager .up.|\u003e Model","lastModifiedDate":"2019-07-03"},{"lineNumber":26,"author":{"gitId":"-"},"content":"Model .right.\u003e ReadOnlyUserPrefs","lastModifiedDate":"2021-07-31"},{"lineNumber":27,"author":{"gitId":"janald99"},"content":"Model .left.\u003e ReadOnlyCLIENTBook","lastModifiedDate":"2022-03-24"},{"lineNumber":28,"author":{"gitId":"janald99"},"content":"ModelManager -left-\u003e \"2\" CLIENTBook","lastModifiedDate":"2022-03-24"},{"lineNumber":29,"author":{"gitId":"-"},"content":"ModelManager -right-\u003e \"1\" UserPrefs","lastModifiedDate":"2021-07-31"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":31,"author":{"gitId":"janald99"},"content":"UserPrefs .up.|\u003e ReadOnlyUserPrefs","lastModifiedDate":"2022-03-24"},{"lineNumber":32,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":33,"author":{"gitId":"janald99"},"content":"CLIENTBook *--\u003e \"1\" UniqueCLIENTList","lastModifiedDate":"2022-03-24"},{"lineNumber":34,"author":{"gitId":"janald99"},"content":"UniqueCLIENTList --\u003e \"~* all\" CLIENT","lastModifiedDate":"2022-03-24"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":36,"author":{"gitId":"janald99"},"content":"ModelManager --\u003e\"~* filtered\" CLIENT","lastModifiedDate":"2022-03-24"},{"lineNumber":37,"author":{"gitId":"-"},"content":"@enduml","lastModifiedDate":"2019-07-03"}],"authorContributionMap":{"janald99":12,"-":25}},{"path":"docs/diagrams/PropertyClassDiagram.puml","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"janald99"},"content":"@startuml","lastModifiedDate":"2022-03-24"},{"lineNumber":2,"author":{"gitId":"janald99"},"content":"\u0027https://plantuml.com/class-diagram","lastModifiedDate":"2022-03-24"},{"lineNumber":3,"author":{"gitId":"janald99"},"content":"","lastModifiedDate":"2022-03-24"},{"lineNumber":4,"author":{"gitId":"janald99"},"content":"","lastModifiedDate":"2022-03-24"},{"lineNumber":5,"author":{"gitId":"janald99"},"content":"Package Property \u003c\u003cRectangle\u003e\u003e{","lastModifiedDate":"2022-03-24"},{"lineNumber":6,"author":{"gitId":"janald99"},"content":"","lastModifiedDate":"2022-03-24"},{"lineNumber":7,"author":{"gitId":"janald99"},"content":"class PropertyToBuy","lastModifiedDate":"2022-03-24"},{"lineNumber":8,"author":{"gitId":"janald99"},"content":"class PropertyToSell","lastModifiedDate":"2022-03-24"},{"lineNumber":9,"author":{"gitId":"janald99"},"content":"","lastModifiedDate":"2022-03-24"},{"lineNumber":10,"author":{"gitId":"janald99"},"content":"class PriceRange{","lastModifiedDate":"2022-03-24"},{"lineNumber":11,"author":{"gitId":"janald99"},"content":"int low","lastModifiedDate":"2022-03-24"},{"lineNumber":12,"author":{"gitId":"janald99"},"content":"int high","lastModifiedDate":"2022-03-24"},{"lineNumber":13,"author":{"gitId":"janald99"},"content":"}","lastModifiedDate":"2022-03-24"},{"lineNumber":14,"author":{"gitId":"janald99"},"content":"","lastModifiedDate":"2022-03-24"},{"lineNumber":15,"author":{"gitId":"janald99"},"content":"class Address {","lastModifiedDate":"2022-03-24"},{"lineNumber":16,"author":{"gitId":"janald99"},"content":"String address","lastModifiedDate":"2022-03-24"},{"lineNumber":17,"author":{"gitId":"janald99"},"content":"}","lastModifiedDate":"2022-03-24"},{"lineNumber":18,"author":{"gitId":"janald99"},"content":"class House {","lastModifiedDate":"2022-03-24"},{"lineNumber":19,"author":{"gitId":"janald99"},"content":"HouseType houseType","lastModifiedDate":"2022-03-24"},{"lineNumber":20,"author":{"gitId":"janald99"},"content":"Location location","lastModifiedDate":"2022-03-24"},{"lineNumber":21,"author":{"gitId":"janald99"},"content":"}","lastModifiedDate":"2022-03-24"},{"lineNumber":22,"author":{"gitId":"janald99"},"content":"","lastModifiedDate":"2022-03-24"},{"lineNumber":23,"author":{"gitId":"janald99"},"content":"enum HouseType {","lastModifiedDate":"2022-03-24"},{"lineNumber":24,"author":{"gitId":"janald99"},"content":"ANY,","lastModifiedDate":"2022-03-24"},{"lineNumber":25,"author":{"gitId":"janald99"},"content":"APARTMENT,","lastModifiedDate":"2022-03-24"},{"lineNumber":26,"author":{"gitId":"janald99"},"content":"BUNGALOW,","lastModifiedDate":"2022-03-24"},{"lineNumber":27,"author":{"gitId":"janald99"},"content":"CONDOMINIUM,","lastModifiedDate":"2022-03-24"},{"lineNumber":28,"author":{"gitId":"janald99"},"content":"COLONIAL,","lastModifiedDate":"2022-03-24"},{"lineNumber":29,"author":{"gitId":"janald99"},"content":"HDB_FLAT,","lastModifiedDate":"2022-03-24"},{"lineNumber":30,"author":{"gitId":"janald99"},"content":"SEMIDETACHED,","lastModifiedDate":"2022-03-24"},{"lineNumber":31,"author":{"gitId":"janald99"},"content":"MANSION","lastModifiedDate":"2022-03-24"},{"lineNumber":32,"author":{"gitId":"janald99"},"content":"}","lastModifiedDate":"2022-03-24"},{"lineNumber":33,"author":{"gitId":"janald99"},"content":"","lastModifiedDate":"2022-03-24"},{"lineNumber":34,"author":{"gitId":"janald99"},"content":"","lastModifiedDate":"2022-03-24"},{"lineNumber":35,"author":{"gitId":"janald99"},"content":"}","lastModifiedDate":"2022-03-24"},{"lineNumber":36,"author":{"gitId":"janald99"},"content":"","lastModifiedDate":"2022-03-24"},{"lineNumber":37,"author":{"gitId":"janald99"},"content":"PropertyToBuy *--\u003e House","lastModifiedDate":"2022-03-24"},{"lineNumber":38,"author":{"gitId":"janald99"},"content":"PropertyToBuy *--\u003e PriceRange","lastModifiedDate":"2022-03-24"},{"lineNumber":39,"author":{"gitId":"janald99"},"content":"","lastModifiedDate":"2022-03-24"},{"lineNumber":40,"author":{"gitId":"janald99"},"content":"PropertyToSell *--\u003e House","lastModifiedDate":"2022-03-24"},{"lineNumber":41,"author":{"gitId":"janald99"},"content":"PropertyToSell *--\u003e PriceRange","lastModifiedDate":"2022-03-24"},{"lineNumber":42,"author":{"gitId":"janald99"},"content":"PropertyToSell *--\u003e Address","lastModifiedDate":"2022-03-24"},{"lineNumber":43,"author":{"gitId":"janald99"},"content":"","lastModifiedDate":"2022-03-24"},{"lineNumber":44,"author":{"gitId":"janald99"},"content":"","lastModifiedDate":"2022-03-24"},{"lineNumber":45,"author":{"gitId":"janald99"},"content":"@enduml","lastModifiedDate":"2022-03-24"}],"authorContributionMap":{"janald99":45}},{"path":"docs/diagrams/StorageClassDiagram.puml","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"@startuml","lastModifiedDate":"2019-07-03"},{"lineNumber":2,"author":{"gitId":"-"},"content":"!include style.puml","lastModifiedDate":"2019-07-03"},{"lineNumber":3,"author":{"gitId":"-"},"content":"skinparam arrowThickness 1.1","lastModifiedDate":"2019-07-03"},{"lineNumber":4,"author":{"gitId":"-"},"content":"skinparam arrowColor STORAGE_COLOR","lastModifiedDate":"2019-07-03"},{"lineNumber":5,"author":{"gitId":"-"},"content":"skinparam classBackgroundColor STORAGE_COLOR","lastModifiedDate":"2019-07-03"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":7,"author":{"gitId":"-"},"content":"package Storage{","lastModifiedDate":"2021-07-31"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":9,"author":{"gitId":"-"},"content":"package \"UserPrefs Storage\" #F4F6F6{","lastModifiedDate":"2021-07-31"},{"lineNumber":10,"author":{"gitId":"-"},"content":"Class \"\u003c\u003cinterface\u003e\u003e\\nUserPrefsStorage\" as UserPrefsStorage","lastModifiedDate":"2022-01-03"},{"lineNumber":11,"author":{"gitId":"-"},"content":"Class JsonUserPrefsStorage","lastModifiedDate":"2021-07-31"},{"lineNumber":12,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2021-07-31"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":14,"author":{"gitId":"-"},"content":"Class \"\u003c\u003cinterface\u003e\u003e\\nStorage\" as Storage","lastModifiedDate":"2022-01-03"},{"lineNumber":15,"author":{"gitId":"-"},"content":"Class StorageManager","lastModifiedDate":"2019-07-03"},{"lineNumber":16,"author":{"gitId":"Jacky142857"},"content":"Class JsonAdaptedTag","lastModifiedDate":"2022-03-25"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":18,"author":{"gitId":"-"},"content":"package \"AddressBook Storage\" #F4F6F6{","lastModifiedDate":"2021-07-31"},{"lineNumber":19,"author":{"gitId":"-"},"content":"Class \"\u003c\u003cinterface\u003e\u003e\\nAddressBookStorage\" as AddressBookStorage","lastModifiedDate":"2022-01-03"},{"lineNumber":20,"author":{"gitId":"-"},"content":"Class JsonAddressBookStorage","lastModifiedDate":"2019-07-03"},{"lineNumber":21,"author":{"gitId":"-"},"content":"Class JsonSerializableAddressBook","lastModifiedDate":"2021-07-31"},{"lineNumber":22,"author":{"gitId":"cwnm"},"content":"Class JsonAdaptedclient","lastModifiedDate":"2022-03-04"},{"lineNumber":23,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2021-07-31"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":25,"author":{"gitId":"Jacky142857"},"content":"package \"SellerAddressBook Storage\" #F4F6F6{","lastModifiedDate":"2022-03-25"},{"lineNumber":26,"author":{"gitId":"Jacky142857"},"content":"Class \"\u003c\u003cinterface\u003e\u003e\\nSellerAddressBookStorage\" as SellerAddressBookStorage","lastModifiedDate":"2022-03-25"},{"lineNumber":27,"author":{"gitId":"Jacky142857"},"content":"Class JsonSellerAddressBookStorage","lastModifiedDate":"2022-03-25"},{"lineNumber":28,"author":{"gitId":"Jacky142857"},"content":"Class JsonSerializableSellerAddressBook","lastModifiedDate":"2022-03-25"},{"lineNumber":29,"author":{"gitId":"Jacky142857"},"content":"Class JsonAdaptedSeller","lastModifiedDate":"2022-03-25"},{"lineNumber":30,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2021-07-31"},{"lineNumber":31,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":32,"author":{"gitId":"-"},"content":"Class HiddenOutside #FFFFFF","lastModifiedDate":"2021-07-31"},{"lineNumber":33,"author":{"gitId":"-"},"content":"HiddenOutside ..\u003e Storage","lastModifiedDate":"2021-07-31"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":35,"author":{"gitId":"-"},"content":"StorageManager .up.|\u003e Storage","lastModifiedDate":"2021-07-31"},{"lineNumber":36,"author":{"gitId":"-"},"content":"StorageManager -up-\u003e \"1\" UserPrefsStorage","lastModifiedDate":"2021-07-31"},{"lineNumber":37,"author":{"gitId":"-"},"content":"StorageManager -up-\u003e \"1\" AddressBookStorage","lastModifiedDate":"2021-07-31"},{"lineNumber":38,"author":{"gitId":"Jacky142857"},"content":"StorageManager -up-\u003e \"1\" SellerAddressBookStorage","lastModifiedDate":"2022-03-25"},{"lineNumber":39,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":40,"author":{"gitId":"Jacky142857"},"content":"Storage -right-|\u003e UserPrefsStorage","lastModifiedDate":"2022-03-25"},{"lineNumber":41,"author":{"gitId":"-"},"content":"Storage -right-|\u003e AddressBookStorage","lastModifiedDate":"2021-07-31"},{"lineNumber":42,"author":{"gitId":"Jacky142857"},"content":"Storage -left-|\u003e SellerAddressBookStorage","lastModifiedDate":"2022-03-25"},{"lineNumber":43,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":44,"author":{"gitId":"-"},"content":"JsonUserPrefsStorage .up.|\u003e UserPrefsStorage","lastModifiedDate":"2021-07-31"},{"lineNumber":45,"author":{"gitId":"-"},"content":"JsonAddressBookStorage .up.|\u003e AddressBookStorage","lastModifiedDate":"2021-07-31"},{"lineNumber":46,"author":{"gitId":"-"},"content":"JsonAddressBookStorage ..\u003e JsonSerializableAddressBook","lastModifiedDate":"2021-07-31"},{"lineNumber":47,"author":{"gitId":"cwnm"},"content":"JsonSerializableAddressBook --\u003e \"*\" JsonAdaptedclient","lastModifiedDate":"2022-03-04"},{"lineNumber":48,"author":{"gitId":"cwnm"},"content":"JsonAdaptedclient --\u003e \"*\" JsonAdaptedTag","lastModifiedDate":"2022-03-04"},{"lineNumber":49,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-03-31"},{"lineNumber":50,"author":{"gitId":"Jacky142857"},"content":"JsonSellerAddressBookStorage .up.|\u003e SellerAddressBookStorage","lastModifiedDate":"2022-03-25"},{"lineNumber":51,"author":{"gitId":"Jacky142857"},"content":"JsonSellerAddressBookStorage ..\u003e JsonSerializableSellerAddressBook","lastModifiedDate":"2022-03-25"},{"lineNumber":52,"author":{"gitId":"Jacky142857"},"content":"JsonSerializableSellerAddressBook --\u003e \"*\" JsonAdaptedSeller","lastModifiedDate":"2022-03-25"},{"lineNumber":53,"author":{"gitId":"Jacky142857"},"content":"JsonAdaptedSeller --\u003e \"*\" JsonAdaptedTag","lastModifiedDate":"2022-03-25"},{"lineNumber":54,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-03-25"},{"lineNumber":55,"author":{"gitId":"-"},"content":"@enduml","lastModifiedDate":"2019-07-03"}],"authorContributionMap":{"Jacky142857":13,"-":39,"cwnm":3}},{"path":"docs/diagrams/UiClassDiagram.puml","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"@startuml","lastModifiedDate":"2019-07-03"},{"lineNumber":2,"author":{"gitId":"-"},"content":"!include style.puml","lastModifiedDate":"2019-07-03"},{"lineNumber":3,"author":{"gitId":"-"},"content":"skinparam arrowThickness 1.1","lastModifiedDate":"2019-07-03"},{"lineNumber":4,"author":{"gitId":"-"},"content":"skinparam arrowColor UI_COLOR_T4","lastModifiedDate":"2019-07-03"},{"lineNumber":5,"author":{"gitId":"-"},"content":"skinparam classBackgroundColor UI_COLOR","lastModifiedDate":"2019-07-03"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":7,"author":{"gitId":"-"},"content":"package UI \u003c\u003cRectangle\u003e\u003e{","lastModifiedDate":"2019-07-03"},{"lineNumber":8,"author":{"gitId":"-"},"content":"Class \"\u003c\u003cinterface\u003e\u003e\\nUi\" as Ui","lastModifiedDate":"2022-01-03"},{"lineNumber":9,"author":{"gitId":"-"},"content":"Class \"{abstract}\\nUiPart\" as UiPart","lastModifiedDate":"2019-07-03"},{"lineNumber":10,"author":{"gitId":"-"},"content":"Class UiManager","lastModifiedDate":"2019-07-03"},{"lineNumber":11,"author":{"gitId":"-"},"content":"Class MainWindow","lastModifiedDate":"2019-07-03"},{"lineNumber":12,"author":{"gitId":"-"},"content":"Class HelpWindow","lastModifiedDate":"2019-07-03"},{"lineNumber":13,"author":{"gitId":"-"},"content":"Class ResultDisplay","lastModifiedDate":"2019-07-03"},{"lineNumber":14,"author":{"gitId":"Jacky142857"},"content":"Class BuyerListPanel","lastModifiedDate":"2022-03-25"},{"lineNumber":15,"author":{"gitId":"Jacky142857"},"content":"Class BuyerCard","lastModifiedDate":"2022-03-25"},{"lineNumber":16,"author":{"gitId":"-"},"content":"Class StatusBarFooter","lastModifiedDate":"2019-07-03"},{"lineNumber":17,"author":{"gitId":"-"},"content":"Class CommandBox","lastModifiedDate":"2019-07-03"},{"lineNumber":18,"author":{"gitId":"Jacky142857"},"content":"Class SellerListPanel","lastModifiedDate":"2022-03-25"},{"lineNumber":19,"author":{"gitId":"Jacky142857"},"content":"Class SellerCard","lastModifiedDate":"2022-03-25"},{"lineNumber":20,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2019-07-03"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":22,"author":{"gitId":"-"},"content":"package Model \u003c\u003cRectangle\u003e\u003e {","lastModifiedDate":"2019-07-03"},{"lineNumber":23,"author":{"gitId":"-"},"content":"Class HiddenModel #FFFFFF","lastModifiedDate":"2019-07-03"},{"lineNumber":24,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2019-07-03"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":26,"author":{"gitId":"-"},"content":"package Logic \u003c\u003cRectangle\u003e\u003e {","lastModifiedDate":"2019-07-03"},{"lineNumber":27,"author":{"gitId":"-"},"content":"Class HiddenLogic #FFFFFF","lastModifiedDate":"2019-07-03"},{"lineNumber":28,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2019-07-03"},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":30,"author":{"gitId":"-"},"content":"Class HiddenOutside #FFFFFF","lastModifiedDate":"2019-07-03"},{"lineNumber":31,"author":{"gitId":"-"},"content":"HiddenOutside ..\u003e Ui","lastModifiedDate":"2019-07-03"},{"lineNumber":32,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":33,"author":{"gitId":"-"},"content":"UiManager .left.|\u003e Ui","lastModifiedDate":"2019-07-03"},{"lineNumber":34,"author":{"gitId":"-"},"content":"UiManager -down-\u003e \"1\" MainWindow","lastModifiedDate":"2021-07-31"},{"lineNumber":35,"author":{"gitId":"-"},"content":"MainWindow *-down-\u003e  \"1\" CommandBox","lastModifiedDate":"2021-07-31"},{"lineNumber":36,"author":{"gitId":"-"},"content":"MainWindow *-down-\u003e \"1\" ResultDisplay","lastModifiedDate":"2021-07-31"},{"lineNumber":37,"author":{"gitId":"Jacky142857"},"content":"MainWindow *-down-\u003e \"1\" SellerListPanel","lastModifiedDate":"2022-03-25"},{"lineNumber":38,"author":{"gitId":"Jacky142857"},"content":"MainWindow *-down-\u003e \"1\" BuyerListPanel","lastModifiedDate":"2022-03-25"},{"lineNumber":39,"author":{"gitId":"-"},"content":"MainWindow *-down-\u003e \"1\" StatusBarFooter","lastModifiedDate":"2021-07-31"},{"lineNumber":40,"author":{"gitId":"-"},"content":"MainWindow --\u003e \"0..1\" HelpWindow","lastModifiedDate":"2021-07-31"},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":42,"author":{"gitId":"Jacky142857"},"content":"SellerListPanel -down-\u003e \"*\" SellerCard","lastModifiedDate":"2022-03-25"},{"lineNumber":43,"author":{"gitId":"Jacky142857"},"content":"BuyerListPanel -down-\u003e \"*\" BuyerCard","lastModifiedDate":"2022-03-25"},{"lineNumber":44,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":45,"author":{"gitId":"-"},"content":"MainWindow -left-|\u003e UiPart","lastModifiedDate":"2019-07-03"},{"lineNumber":46,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":47,"author":{"gitId":"-"},"content":"ResultDisplay --|\u003e UiPart","lastModifiedDate":"2019-07-03"},{"lineNumber":48,"author":{"gitId":"-"},"content":"CommandBox --|\u003e UiPart","lastModifiedDate":"2019-07-03"},{"lineNumber":49,"author":{"gitId":"Jacky142857"},"content":"SellerListPanel --|\u003e UiPart","lastModifiedDate":"2022-03-25"},{"lineNumber":50,"author":{"gitId":"Jacky142857"},"content":"SellerCard --|\u003e UiPart","lastModifiedDate":"2022-03-25"},{"lineNumber":51,"author":{"gitId":"Jacky142857"},"content":"BuyerListPanel --|\u003e UiPart","lastModifiedDate":"2022-03-25"},{"lineNumber":52,"author":{"gitId":"Jacky142857"},"content":"BuyerCard --|\u003e UiPart","lastModifiedDate":"2022-03-25"},{"lineNumber":53,"author":{"gitId":"-"},"content":"StatusBarFooter --|\u003e UiPart","lastModifiedDate":"2019-07-03"},{"lineNumber":54,"author":{"gitId":"-"},"content":"HelpWindow --|\u003e UiPart","lastModifiedDate":"2021-07-31"},{"lineNumber":55,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":56,"author":{"gitId":"Jacky142857"},"content":"BuyerCard ..\u003e Model","lastModifiedDate":"2022-03-25"},{"lineNumber":57,"author":{"gitId":"Jacky142857"},"content":"SellerCard ..\u003e Model","lastModifiedDate":"2022-03-25"},{"lineNumber":58,"author":{"gitId":"-"},"content":"UiManager -right-\u003e Logic","lastModifiedDate":"2019-07-03"},{"lineNumber":59,"author":{"gitId":"-"},"content":"MainWindow -left-\u003e Logic","lastModifiedDate":"2019-07-03"},{"lineNumber":60,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":61,"author":{"gitId":"Jacky142857"},"content":"SellerListPanel -[hidden]left- HelpWindow","lastModifiedDate":"2022-03-25"},{"lineNumber":62,"author":{"gitId":"Jacky142857"},"content":"BuyerListPanel -[hidden]left- HelpWindow","lastModifiedDate":"2022-03-25"},{"lineNumber":63,"author":{"gitId":"-"},"content":"HelpWindow -[hidden]left- CommandBox","lastModifiedDate":"2019-07-03"},{"lineNumber":64,"author":{"gitId":"-"},"content":"CommandBox -[hidden]left- ResultDisplay","lastModifiedDate":"2019-07-03"},{"lineNumber":65,"author":{"gitId":"-"},"content":"ResultDisplay -[hidden]left- StatusBarFooter","lastModifiedDate":"2019-07-30"},{"lineNumber":66,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":67,"author":{"gitId":"-"},"content":"MainWindow -[hidden]-|\u003e UiPart","lastModifiedDate":"2019-07-03"},{"lineNumber":68,"author":{"gitId":"-"},"content":"@enduml","lastModifiedDate":"2019-07-03"}],"authorContributionMap":{"Jacky142857":16,"-":52}},{"path":"docs/diagrams/tracing/LogicSequenceDiagram.puml","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"@startuml","lastModifiedDate":"2019-06-17"},{"lineNumber":2,"author":{"gitId":"-"},"content":"!include ../style.puml","lastModifiedDate":"2019-06-17"},{"lineNumber":3,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-06-17"},{"lineNumber":4,"author":{"gitId":"-"},"content":"Participant \":LogicManager\" as logic LOGIC_COLOR","lastModifiedDate":"2019-06-17"},{"lineNumber":5,"author":{"gitId":"-"},"content":"Participant \":AddressBookParser\" as abp LOGIC_COLOR","lastModifiedDate":"2019-06-17"},{"lineNumber":6,"author":{"gitId":"-"},"content":"Participant \":EditCommandParser\" as ecp LOGIC_COLOR","lastModifiedDate":"2019-06-17"},{"lineNumber":7,"author":{"gitId":"-"},"content":"Participant \"command:EditCommand\" as ec LOGIC_COLOR","lastModifiedDate":"2019-06-17"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-06-17"},{"lineNumber":9,"author":{"gitId":"-"},"content":"[-\u003e logic : execute","lastModifiedDate":"2019-06-17"},{"lineNumber":10,"author":{"gitId":"-"},"content":"activate logic","lastModifiedDate":"2019-06-17"},{"lineNumber":11,"author":{"gitId":"-"},"content":"logic -\u003e abp ++: parseCommand(commandText)","lastModifiedDate":"2019-06-17"},{"lineNumber":12,"author":{"gitId":"-"},"content":"create ecp","lastModifiedDate":"2019-06-17"},{"lineNumber":13,"author":{"gitId":"-"},"content":"abp -\u003e ecp","lastModifiedDate":"2019-06-17"},{"lineNumber":14,"author":{"gitId":"-"},"content":"abp -\u003e ecp ++: parse(arguments)","lastModifiedDate":"2019-06-17"},{"lineNumber":15,"author":{"gitId":"-"},"content":"create ec","lastModifiedDate":"2019-06-17"},{"lineNumber":16,"author":{"gitId":"cwnm"},"content":"ecp -\u003e ec ++: index, editclientDescriptor","lastModifiedDate":"2022-03-04"},{"lineNumber":17,"author":{"gitId":"-"},"content":"ec --\u003e ecp --","lastModifiedDate":"2019-06-17"},{"lineNumber":18,"author":{"gitId":"-"},"content":"ecp --\u003e abp --: command","lastModifiedDate":"2019-06-17"},{"lineNumber":19,"author":{"gitId":"-"},"content":"abp --\u003e logic --: command","lastModifiedDate":"2019-06-17"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-06-17"},{"lineNumber":21,"author":{"gitId":"-"},"content":"@enduml","lastModifiedDate":"2019-06-17"}],"authorContributionMap":{"-":20,"cwnm":1}},{"path":"docs/index.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"---","lastModifiedDate":"2020-05-23"},{"lineNumber":2,"author":{"gitId":"-"},"content":"layout: page","lastModifiedDate":"2020-05-23"},{"lineNumber":3,"author":{"gitId":"WJunHong"},"content":"title: AgentSee","lastModifiedDate":"2022-03-30"},{"lineNumber":4,"author":{"gitId":"-"},"content":"---","lastModifiedDate":"2020-05-23"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":6,"author":{"gitId":"WJunHong"},"content":"[![CI Status](https://github.com/AY2122S2-CS2103T-T11-2/tp/workflows/Java%20CI/badge.svg)](https://github.com/AY2122S2-CS2103T-T11-2/tp/actions)","lastModifiedDate":"2022-03-30"},{"lineNumber":7,"author":{"gitId":"WJunHong"},"content":"[![codecov](https://codecov.io/gh/AY2122S2-CS2103T-T11-2/tp/branch/master/graph/badge.svg)](https://codecov.io/gh/AY2122S2-CS2103T-T11-2/tp/branch/master)","lastModifiedDate":"2022-03-30"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":9,"author":{"gitId":"WJunHong"},"content":"![Ui](images/UI.png)","lastModifiedDate":"2022-03-30"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":11,"author":{"gitId":"WJunHong"},"content":"**AgentSee is a desktop app for property agents to manage clients.** While it has a GUI, most of the user interactions happen using a CLI (Command Line Interface).","lastModifiedDate":"2022-03-30"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":13,"author":{"gitId":"WJunHong"},"content":"* If you are interested in using AgentSee, head over to the [_Quick Start_ section of the **User Guide**](UserGuide.html#quick-start).","lastModifiedDate":"2022-03-30"},{"lineNumber":14,"author":{"gitId":"WJunHong"},"content":"* If you are interested about developing AgentSee, the [**Developer Guide**](DeveloperGuide.html) is a good place to start.","lastModifiedDate":"2022-03-30"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":17,"author":{"gitId":"-"},"content":"**Acknowledgements**","lastModifiedDate":"2020-05-23"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":19,"author":{"gitId":"-"},"content":"* Libraries used: [JavaFX](https://openjfx.io/), [Jackson](https://github.com/FasterXML/jackson), [JUnit5](https://github.com/junit-team/junit5)","lastModifiedDate":"2020-05-23"}],"authorContributionMap":{"WJunHong":7,"-":12}},{"path":"docs/team/chuashihong.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"chuashihong"},"content":"---","lastModifiedDate":"2022-02-27"},{"lineNumber":2,"author":{"gitId":"chuashihong"},"content":"layout: page","lastModifiedDate":"2022-02-27"},{"lineNumber":3,"author":{"gitId":"chuashihong"},"content":"title: Shi Hong\u0027s Project Portfolio Page","lastModifiedDate":"2022-02-27"},{"lineNumber":4,"author":{"gitId":"chuashihong"},"content":"---","lastModifiedDate":"2022-02-27"},{"lineNumber":5,"author":{"gitId":"chuashihong"},"content":"","lastModifiedDate":"2022-02-27"},{"lineNumber":6,"author":{"gitId":"janald99"},"content":"### Project: AgenSee","lastModifiedDate":"2022-03-05"},{"lineNumber":7,"author":{"gitId":"chuashihong"},"content":"","lastModifiedDate":"2022-02-27"},{"lineNumber":8,"author":{"gitId":"chuashihong"},"content":"Given below are my contributions to the project.","lastModifiedDate":"2022-02-27"},{"lineNumber":9,"author":{"gitId":"chuashihong"},"content":"","lastModifiedDate":"2022-02-27"},{"lineNumber":10,"author":{"gitId":"chuashihong"},"content":"# Overview","lastModifiedDate":"2022-04-08"},{"lineNumber":11,"author":{"gitId":"chuashihong"},"content":"","lastModifiedDate":"2022-04-08"},{"lineNumber":12,"author":{"gitId":"chuashihong"},"content":"### I have updated the storage system of our project, to make it able to store the correct info into the JSON format by creating many JSONAdapted classes. I have also make initial update to the UI of the project. I also made contribution in adding new features like `EditSellerCommand` and `DeleteSellerCommand` and added a lot of test cases in `EditSellerCommandTest`, `EditBuyerCommandTest`, and are in charge of removing unused classes. In order to maintain the code coverage, I have made a lot of changes to maintain the code quality for our team project.","lastModifiedDate":"2022-04-08"},{"lineNumber":13,"author":{"gitId":"chuashihong"},"content":"","lastModifiedDate":"2022-04-08"},{"lineNumber":14,"author":{"gitId":"chuashihong"},"content":"* **Code contributed**:","lastModifiedDate":"2022-03-17"},{"lineNumber":15,"author":{"gitId":"chuashihong"},"content":"    * ```House``` Class","lastModifiedDate":"2022-03-17"},{"lineNumber":16,"author":{"gitId":"chuashihong"},"content":"    * ```HouseType``` Enum Class","lastModifiedDate":"2022-03-17"},{"lineNumber":17,"author":{"gitId":"chuashihong"},"content":"    * ```PriceRange``` Class","lastModifiedDate":"2022-03-17"},{"lineNumber":18,"author":{"gitId":"chuashihong"},"content":"    * ```Location``` Class","lastModifiedDate":"2022-03-17"},{"lineNumber":19,"author":{"gitId":"chuashihong"},"content":"    * ```HouseTest``` Class","lastModifiedDate":"2022-03-17"},{"lineNumber":20,"author":{"gitId":"chuashihong"},"content":"    * ```PriceRangeTest``` Class","lastModifiedDate":"2022-03-17"},{"lineNumber":21,"author":{"gitId":"chuashihong"},"content":"    * ```EditSellerCommand``` Class and its Test cases","lastModifiedDate":"2022-04-08"},{"lineNumber":22,"author":{"gitId":"chuashihong"},"content":"    * ```JsonAdaptedBuyer``` Class and its Test cases","lastModifiedDate":"2022-04-08"},{"lineNumber":23,"author":{"gitId":"chuashihong"},"content":"    * ```JsonAdaptedSeller``` Class and its Test cases","lastModifiedDate":"2022-04-08"},{"lineNumber":24,"author":{"gitId":"chuashihong"},"content":"    * ```JsonAdaptedHouse``` Class and its Test cases","lastModifiedDate":"2022-04-08"},{"lineNumber":25,"author":{"gitId":"chuashihong"},"content":"    * ```JsonAdaptedPriceRange``` Class","lastModifiedDate":"2022-04-08"},{"lineNumber":26,"author":{"gitId":"chuashihong"},"content":"    * ```JsonAdaptedPropertyToBuy``` Class","lastModifiedDate":"2022-04-08"},{"lineNumber":27,"author":{"gitId":"chuashihong"},"content":"    * ```JsonAdaptedPropertyToSell``` Class","lastModifiedDate":"2022-04-08"},{"lineNumber":28,"author":{"gitId":"chuashihong"},"content":"    * ```JsonAdaptedBuyer``` Class","lastModifiedDate":"2022-04-08"},{"lineNumber":29,"author":{"gitId":"chuashihong"},"content":"    * ```JsonAdaptedSeller``` Class","lastModifiedDate":"2022-04-08"},{"lineNumber":30,"author":{"gitId":"chuashihong"},"content":"    * ...and a lot more in test cases Class","lastModifiedDate":"2022-04-08"},{"lineNumber":31,"author":{"gitId":"chuashihong"},"content":"","lastModifiedDate":"2022-02-27"},{"lineNumber":32,"author":{"gitId":"chuashihong"},"content":"* **Enhancement** :","lastModifiedDate":"2022-04-08"},{"lineNumber":33,"author":{"gitId":"chuashihong"},"content":"    * Improve code quality in the project by reviewing teammate\u0027s code and improve them for easier readability and less bug prone","lastModifiedDate":"2022-04-08"},{"lineNumber":34,"author":{"gitId":"chuashihong"},"content":"    * Make initial changes about FXML and FXML related classes to make sense in rendering information in UI","lastModifiedDate":"2022-04-08"},{"lineNumber":35,"author":{"gitId":"chuashihong"},"content":"    * Improve the Storage system of the project by adding a lot of JSON related classes","lastModifiedDate":"2022-04-08"},{"lineNumber":36,"author":{"gitId":"chuashihong"},"content":"    * Removing the unused classess and the old Addressbook classes.","lastModifiedDate":"2022-04-08"},{"lineNumber":37,"author":{"gitId":"chuashihong"},"content":"    * Add more test cases into the project to cover more code and minimize the bug possiblity","lastModifiedDate":"2022-04-08"},{"lineNumber":38,"author":{"gitId":"chuashihong"},"content":"","lastModifiedDate":"2022-02-27"},{"lineNumber":39,"author":{"gitId":"chuashihong"},"content":"* **Project management**:","lastModifiedDate":"2022-02-27"},{"lineNumber":40,"author":{"gitId":"chuashihong"},"content":"    * Fixed a bug on the project [\\#84](https://github.com/AY2122S2-CS2103T-T11-2/tp/pull/84)","lastModifiedDate":"2022-03-17"},{"lineNumber":41,"author":{"gitId":"chuashihong"},"content":"    * Give ideas to teammates while planning on the next iteration","lastModifiedDate":"2022-04-08"},{"lineNumber":42,"author":{"gitId":"chuashihong"},"content":"    * Actively discuss with teammates in order to maintain the consistency in our project","lastModifiedDate":"2022-04-08"},{"lineNumber":43,"author":{"gitId":"chuashihong"},"content":"    * Increase code coverage by adding more test cases.","lastModifiedDate":"2022-04-08"},{"lineNumber":44,"author":{"gitId":"chuashihong"},"content":"    * Add issues in the Github to keep track of the progress in out project.","lastModifiedDate":"2022-04-08"},{"lineNumber":45,"author":{"gitId":"chuashihong"},"content":"","lastModifiedDate":"2022-02-27"},{"lineNumber":46,"author":{"gitId":"chuashihong"},"content":"* **Documentation**:","lastModifiedDate":"2022-02-27"},{"lineNumber":47,"author":{"gitId":"chuashihong"},"content":"    * User Guide:","lastModifiedDate":"2022-02-27"},{"lineNumber":48,"author":{"gitId":"chuashihong"},"content":"        * Update documentation for the command `add`","lastModifiedDate":"2022-03-17"},{"lineNumber":49,"author":{"gitId":"chuashihong"},"content":"        * Update documentation for the file system, explain about the data structure of our JSON format in details","lastModifiedDate":"2022-04-08"},{"lineNumber":50,"author":{"gitId":"chuashihong"},"content":"        * Made some changes so that it is updated to our current version.","lastModifiedDate":"2022-04-08"},{"lineNumber":51,"author":{"gitId":"chuashihong"},"content":"    * Developer Guide:","lastModifiedDate":"2022-04-08"},{"lineNumber":52,"author":{"gitId":"chuashihong"},"content":"        * Add a documentation about `EditBuyer` and `EditSeller` command","lastModifiedDate":"2022-04-08"},{"lineNumber":53,"author":{"gitId":"chuashihong"},"content":"        * Add a detailed UML diagram about the sequence diagram of `EditBuyerCommand` and `EditSellerCommand` class","lastModifiedDate":"2022-04-08"},{"lineNumber":54,"author":{"gitId":"chuashihong"},"content":"        * Add a detailed explanation when executing `EditBuyer` and `EditSeller` command","lastModifiedDate":"2022-04-08"},{"lineNumber":55,"author":{"gitId":"chuashihong"},"content":"","lastModifiedDate":"2022-02-27"},{"lineNumber":56,"author":{"gitId":"chuashihong"},"content":"* **Community**:","lastModifiedDate":"2022-02-27"},{"lineNumber":57,"author":{"gitId":"chuashihong"},"content":"    * PRs reviewed (with non-trivial review comments): [\\#72](https://github.com/AY2122S2-CS2103T-T11-2/tp/pull/72), where I give some commands on the code and potential typo and give approval.","lastModifiedDate":"2022-03-18"},{"lineNumber":58,"author":{"gitId":"chuashihong"},"content":"    * Pull Request made:","lastModifiedDate":"2022-03-17"},{"lineNumber":59,"author":{"gitId":"chuashihong"},"content":"        * [Update AboutUs](https://github.com/AY2122S2-CS2103T-T11-2/tp/pull/24)","lastModifiedDate":"2022-03-17"},{"lineNumber":60,"author":{"gitId":"chuashihong"},"content":"        * [Add a new field \u0027description\u0027 and \u0027remark\u0027 ](https://github.com/AY2122S2-CS2103T-T11-2/tp/pull/71)","lastModifiedDate":"2022-03-17"},{"lineNumber":61,"author":{"gitId":"chuashihong"},"content":"        * [Bug fix](https://github.com/AY2122S2-CS2103T-T11-2/tp/pull/84)","lastModifiedDate":"2022-03-17"},{"lineNumber":62,"author":{"gitId":"chuashihong"},"content":"        * [Add House Class, HouseType \u003cEnum\u003e, Location, and PriceRange](https://github.com/AY2122S2-CS2103T-T11-2/tp/pull/87)","lastModifiedDate":"2022-03-17"},{"lineNumber":63,"author":{"gitId":"chuashihong"},"content":"    ","lastModifiedDate":"2022-04-08"}],"authorContributionMap":{"janald99":1,"chuashihong":62}},{"path":"docs/team/cwnm.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"cwnm"},"content":"---","lastModifiedDate":"2022-03-02"},{"lineNumber":2,"author":{"gitId":"cwnm"},"content":"layout: page","lastModifiedDate":"2022-03-02"},{"lineNumber":3,"author":{"gitId":"cwnm"},"content":"title: Jun Heng\u0027s Project Portfolio Page","lastModifiedDate":"2022-03-02"},{"lineNumber":4,"author":{"gitId":"cwnm"},"content":"---","lastModifiedDate":"2022-03-02"},{"lineNumber":5,"author":{"gitId":"cwnm"},"content":"","lastModifiedDate":"2022-03-02"},{"lineNumber":6,"author":{"gitId":"cwnm"},"content":"### Project: AgenSee","lastModifiedDate":"2022-03-02"},{"lineNumber":7,"author":{"gitId":"cwnm"},"content":"","lastModifiedDate":"2022-03-02"},{"lineNumber":8,"author":{"gitId":"cwnm"},"content":"Given below are my contributions to the project.","lastModifiedDate":"2022-03-02"},{"lineNumber":9,"author":{"gitId":"cwnm"},"content":"","lastModifiedDate":"2022-03-02"},{"lineNumber":10,"author":{"gitId":"cwnm"},"content":"* **New Feature**: Find Buyer and Seller command","lastModifiedDate":"2022-04-08"},{"lineNumber":11,"author":{"gitId":"cwnm"},"content":"    * An enhancement to the current buyer and seller command, including more fields such as house type and location","lastModifiedDate":"2022-04-08"},{"lineNumber":12,"author":{"gitId":"cwnm"},"content":"    * Split Find into both Buyer and Seller specific commands","lastModifiedDate":"2022-04-08"},{"lineNumber":13,"author":{"gitId":"cwnm"},"content":"","lastModifiedDate":"2022-04-08"},{"lineNumber":14,"author":{"gitId":"cwnm"},"content":"* **New Feature**: Clear buyer, seller and all command","lastModifiedDate":"2022-04-08"},{"lineNumber":15,"author":{"gitId":"cwnm"},"content":"    * An enhancement to the current clear command, clears either list, or both lists.","lastModifiedDate":"2022-04-08"},{"lineNumber":16,"author":{"gitId":"cwnm"},"content":"","lastModifiedDate":"2022-03-02"},{"lineNumber":17,"author":{"gitId":"cwnm"},"content":"* **New Feature**: List buyer, seller command","lastModifiedDate":"2022-04-08"},{"lineNumber":18,"author":{"gitId":"cwnm"},"content":"    * An enhancement to list command, can list each list seperately","lastModifiedDate":"2022-04-08"},{"lineNumber":19,"author":{"gitId":"cwnm"},"content":"","lastModifiedDate":"2022-03-02"},{"lineNumber":20,"author":{"gitId":"cwnm"},"content":"* **Code contributed**: [RepoSense link]()","lastModifiedDate":"2022-03-02"},{"lineNumber":21,"author":{"gitId":"cwnm"},"content":"    * `findBuyerCommand` class","lastModifiedDate":"2022-04-08"},{"lineNumber":22,"author":{"gitId":"cwnm"},"content":"    * `findSellerCommand` class","lastModifiedDate":"2022-04-08"},{"lineNumber":23,"author":{"gitId":"cwnm"},"content":"    * `findSellerCommandParser` class","lastModifiedDate":"2022-04-08"},{"lineNumber":24,"author":{"gitId":"cwnm"},"content":"    * `findBuyerCommandParser` class","lastModifiedDate":"2022-04-08"},{"lineNumber":25,"author":{"gitId":"cwnm"},"content":"    * Predicate class for buyer location, house type and name","lastModifiedDate":"2022-04-08"},{"lineNumber":26,"author":{"gitId":"cwnm"},"content":"    * Predicate class for seller location, house type and name","lastModifiedDate":"2022-04-08"},{"lineNumber":27,"author":{"gitId":"cwnm"},"content":"    * Addition of clear-b, clear-s and clear-all and the corresponding classes","lastModifiedDate":"2022-04-08"},{"lineNumber":28,"author":{"gitId":"cwnm"},"content":"    * Addition of list-b, list-s and the corresponding classes","lastModifiedDate":"2022-04-08"},{"lineNumber":29,"author":{"gitId":"cwnm"},"content":"    * Addition of intial seller class and initial AddSeller methods","lastModifiedDate":"2022-04-08"},{"lineNumber":30,"author":{"gitId":"cwnm"},"content":"    * Addition of intial version of edit-b ","lastModifiedDate":"2022-04-08"},{"lineNumber":31,"author":{"gitId":"cwnm"},"content":"    * Refractoring of the project from \"Person\" to \"Client\", including classes, files, variables and methods","lastModifiedDate":"2022-04-08"},{"lineNumber":32,"author":{"gitId":"cwnm"},"content":"    * Fixed FXML bugs that caused the JAR application to start with Nullpointerexception","lastModifiedDate":"2022-04-08"},{"lineNumber":33,"author":{"gitId":"cwnm"},"content":"    * Associated test cases for the classes","lastModifiedDate":"2022-04-08"},{"lineNumber":34,"author":{"gitId":"cwnm"},"content":"    * Edited files to conform to checkstyle","lastModifiedDate":"2022-04-08"},{"lineNumber":35,"author":{"gitId":"cwnm"},"content":"","lastModifiedDate":"2022-03-02"},{"lineNumber":36,"author":{"gitId":"cwnm"},"content":"* **Project management**:","lastModifiedDate":"2022-03-02"},{"lineNumber":37,"author":{"gitId":"cwnm"},"content":"    * Managed releases `v1.2` - `v1.3` (3 releases) on GitHub","lastModifiedDate":"2022-04-08"},{"lineNumber":38,"author":{"gitId":"cwnm"},"content":"    * Added a few issues","lastModifiedDate":"2022-04-08"},{"lineNumber":39,"author":{"gitId":"cwnm"},"content":"","lastModifiedDate":"2022-03-02"},{"lineNumber":40,"author":{"gitId":"cwnm"},"content":"* **Documentation**:","lastModifiedDate":"2022-03-02"},{"lineNumber":41,"author":{"gitId":"cwnm"},"content":"    * User Guide:","lastModifiedDate":"2022-03-02"},{"lineNumber":42,"author":{"gitId":"cwnm"},"content":"        * Added documentation for the features `find-b` and `find-s`","lastModifiedDate":"2022-04-08"},{"lineNumber":43,"author":{"gitId":"cwnm"},"content":"        * Added documentation for the features `clear-b` and `clear-s` and `clear-all`","lastModifiedDate":"2022-04-08"},{"lineNumber":44,"author":{"gitId":"cwnm"},"content":"        * Added documentation for the features `list-b` and `list-s`","lastModifiedDate":"2022-04-08"},{"lineNumber":45,"author":{"gitId":"cwnm"},"content":"    * Developer Guide:","lastModifiedDate":"2022-03-02"},{"lineNumber":46,"author":{"gitId":"cwnm"},"content":"        * Added implementation details of the `find-b` and `find-s` feature.","lastModifiedDate":"2022-04-08"},{"lineNumber":47,"author":{"gitId":"cwnm"},"content":"","lastModifiedDate":"2022-03-02"},{"lineNumber":48,"author":{"gitId":"cwnm"},"content":"* **Contributions to team tasks**:","lastModifiedDate":"2022-04-08"},{"lineNumber":49,"author":{"gitId":"cwnm"},"content":"    * Set up weekly meeting times accounting for our individual schedules","lastModifiedDate":"2022-04-08"},{"lineNumber":50,"author":{"gitId":"cwnm"},"content":"    * Set up meeting agenda for weekly meetings","lastModifiedDate":"2022-04-08"},{"lineNumber":51,"author":{"gitId":"cwnm"},"content":"    * Added weekly reminders for deadlines on tasks for that week, especially for time sensitive team tasks, this includes soft deadline such as code for demo","lastModifiedDate":"2022-04-08"},{"lineNumber":52,"author":{"gitId":"cwnm"},"content":"    * Built and released JAR for our team (v1.2, v1.3.trial, v1.3)","lastModifiedDate":"2022-04-08"},{"lineNumber":53,"author":{"gitId":"cwnm"},"content":"    * Submission of progress report","lastModifiedDate":"2022-04-08"},{"lineNumber":54,"author":{"gitId":"cwnm"},"content":"","lastModifiedDate":"2022-03-02"}],"authorContributionMap":{"cwnm":54}},{"path":"docs/team/jacky142857.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"Jacky142857"},"content":"---","lastModifiedDate":"2022-03-01"},{"lineNumber":2,"author":{"gitId":"Jacky142857"},"content":"layout: page","lastModifiedDate":"2022-03-01"},{"lineNumber":3,"author":{"gitId":"Jacky142857"},"content":"title: Bian Yuqi\u0027s Project Portfolio Page","lastModifiedDate":"2022-03-01"},{"lineNumber":4,"author":{"gitId":"Jacky142857"},"content":"---","lastModifiedDate":"2022-03-01"},{"lineNumber":5,"author":{"gitId":"Jacky142857"},"content":"","lastModifiedDate":"2022-03-01"},{"lineNumber":6,"author":{"gitId":"Jacky142857"},"content":"### Project: AgentSee","lastModifiedDate":"2022-03-01"},{"lineNumber":7,"author":{"gitId":"Jacky142857"},"content":"","lastModifiedDate":"2022-03-01"},{"lineNumber":8,"author":{"gitId":"Jacky142857"},"content":"AgentSee is a desktop application for property agents to efficiently manage their client information.","lastModifiedDate":"2022-03-01"},{"lineNumber":9,"author":{"gitId":"Jacky142857"},"content":"","lastModifiedDate":"2022-03-01"},{"lineNumber":10,"author":{"gitId":"Jacky142857"},"content":"Given below are my contributions to the project.","lastModifiedDate":"2022-03-01"},{"lineNumber":11,"author":{"gitId":"Jacky142857"},"content":"","lastModifiedDate":"2022-03-01"},{"lineNumber":12,"author":{"gitId":"Jacky142857"},"content":"* **Code contributed**:","lastModifiedDate":"2022-03-01"},{"lineNumber":13,"author":{"gitId":"Jacky142857"},"content":"    * `To be added soon`","lastModifiedDate":"2022-03-01"},{"lineNumber":14,"author":{"gitId":"Jacky142857"},"content":"","lastModifiedDate":"2022-03-01"},{"lineNumber":15,"author":{"gitId":"Jacky142857"},"content":"* **Enhancements implemented**:","lastModifiedDate":"2022-03-01"},{"lineNumber":16,"author":{"gitId":"Jacky142857"},"content":"    * `To be added soon`","lastModifiedDate":"2022-03-01"},{"lineNumber":17,"author":{"gitId":"Jacky142857"},"content":"","lastModifiedDate":"2022-03-01"},{"lineNumber":18,"author":{"gitId":"Jacky142857"},"content":"* **Contributions to the UG**:","lastModifiedDate":"2022-03-01"},{"lineNumber":19,"author":{"gitId":"Jacky142857"},"content":"    * `To be added soon`","lastModifiedDate":"2022-03-01"},{"lineNumber":20,"author":{"gitId":"Jacky142857"},"content":"","lastModifiedDate":"2022-03-01"},{"lineNumber":21,"author":{"gitId":"Jacky142857"},"content":"* **Contributions to the DG**:","lastModifiedDate":"2022-03-01"},{"lineNumber":22,"author":{"gitId":"Jacky142857"},"content":"    * `To be added soon`","lastModifiedDate":"2022-03-01"},{"lineNumber":23,"author":{"gitId":"Jacky142857"},"content":"","lastModifiedDate":"2022-03-01"},{"lineNumber":24,"author":{"gitId":"Jacky142857"},"content":"* **Contributions to team tasks**:","lastModifiedDate":"2022-03-01"},{"lineNumber":25,"author":{"gitId":"Jacky142857"},"content":"    * `To be added soon`","lastModifiedDate":"2022-03-01"},{"lineNumber":26,"author":{"gitId":"Jacky142857"},"content":"","lastModifiedDate":"2022-03-01"},{"lineNumber":27,"author":{"gitId":"Jacky142857"},"content":"* **Review contributions**:","lastModifiedDate":"2022-03-01"},{"lineNumber":28,"author":{"gitId":"Jacky142857"},"content":"    * `To be added soon`","lastModifiedDate":"2022-03-01"},{"lineNumber":29,"author":{"gitId":"Jacky142857"},"content":"","lastModifiedDate":"2022-03-01"},{"lineNumber":30,"author":{"gitId":"Jacky142857"},"content":"","lastModifiedDate":"2022-03-01"}],"authorContributionMap":{"Jacky142857":30}},{"path":"docs/team/janald99.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"janald99"},"content":"---","lastModifiedDate":"2022-02-25"},{"lineNumber":2,"author":{"gitId":"janald99"},"content":"layout: page","lastModifiedDate":"2022-02-25"},{"lineNumber":3,"author":{"gitId":"janald99"},"content":"title: Janald\u0027s Project Portfolio Page","lastModifiedDate":"2022-02-25"},{"lineNumber":4,"author":{"gitId":"janald99"},"content":"---","lastModifiedDate":"2022-02-25"},{"lineNumber":5,"author":{"gitId":"janald99"},"content":"","lastModifiedDate":"2022-02-25"},{"lineNumber":6,"author":{"gitId":"janald99"},"content":"### Project: AgenSee","lastModifiedDate":"2022-02-25"},{"lineNumber":7,"author":{"gitId":"janald99"},"content":"","lastModifiedDate":"2022-02-25"},{"lineNumber":8,"author":{"gitId":"janald99"},"content":"AgentSee is a desktop application for property agents to efficiently manage their client information.","lastModifiedDate":"2022-03-18"},{"lineNumber":9,"author":{"gitId":"janald99"},"content":"","lastModifiedDate":"2022-02-25"},{"lineNumber":10,"author":{"gitId":"janald99"},"content":"Given below are my contributions to the project. I mainly contributed to the addition of Property classes and what they compose of, and discovered the match feature.","lastModifiedDate":"2022-04-08"},{"lineNumber":11,"author":{"gitId":"janald99"},"content":"","lastModifiedDate":"2022-02-25"},{"lineNumber":12,"author":{"gitId":"janald99"},"content":"* **Code contributed**: [RepoSense link]()","lastModifiedDate":"2022-02-25"},{"lineNumber":13,"author":{"gitId":"janald99"},"content":"  * `PropertyToBuy` class","lastModifiedDate":"2022-03-18"},{"lineNumber":14,"author":{"gitId":"janald99"},"content":"  * `PropertyToSell` class","lastModifiedDate":"2022-03-18"},{"lineNumber":15,"author":{"gitId":"janald99"},"content":"  * `PriceRange` class","lastModifiedDate":"2022-03-18"},{"lineNumber":16,"author":{"gitId":"janald99"},"content":"  * `Location` class","lastModifiedDate":"2022-03-18"},{"lineNumber":17,"author":{"gitId":"janald99"},"content":"  * `Edit buyer` \u0026 `Edit Seller class` ","lastModifiedDate":"2022-04-06"},{"lineNumber":18,"author":{"gitId":"janald99"},"content":"  * `MatchCommand`, `MatchHouseTypeCommand`, `MatchLocationCommand`, `MatchPriceRangeCommand` \u0026 its associated Parser classes","lastModifiedDate":"2022-04-06"},{"lineNumber":19,"author":{"gitId":"janald99"},"content":"  * `AllFieldsMatchBuyerPredicate` class","lastModifiedDate":"2022-04-06"},{"lineNumber":20,"author":{"gitId":"janald99"},"content":"  * `HouseTypeMatchBuyerPredicate` class","lastModifiedDate":"2022-04-06"},{"lineNumber":21,"author":{"gitId":"janald99"},"content":"  * `LocationMatchBuyerPredicate` class","lastModifiedDate":"2022-04-06"},{"lineNumber":22,"author":{"gitId":"janald99"},"content":"  * `PriceRangeMatchBuyerPredicate` class","lastModifiedDate":"2022-04-06"},{"lineNumber":23,"author":{"gitId":"janald99"},"content":"  * The associated test cases for the classes","lastModifiedDate":"2022-04-06"},{"lineNumber":24,"author":{"gitId":"janald99"},"content":"  * Edited files to conform to checkstyle \u0026 add JavaDocs","lastModifiedDate":"2022-04-06"},{"lineNumber":25,"author":{"gitId":"janald99"},"content":"","lastModifiedDate":"2022-03-18"},{"lineNumber":26,"author":{"gitId":"janald99"},"content":"* **New Feature**: ","lastModifiedDate":"2022-04-06"},{"lineNumber":27,"author":{"gitId":"janald99"},"content":"","lastModifiedDate":"2022-02-25"},{"lineNumber":28,"author":{"gitId":"janald99"},"content":"Added the new match features:","lastModifiedDate":"2022-04-06"},{"lineNumber":29,"author":{"gitId":"janald99"},"content":"  * `match` command","lastModifiedDate":"2022-04-06"},{"lineNumber":30,"author":{"gitId":"janald99"},"content":"  * `match-h` command","lastModifiedDate":"2022-04-06"},{"lineNumber":31,"author":{"gitId":"janald99"},"content":"  * `match-l` command","lastModifiedDate":"2022-04-06"},{"lineNumber":32,"author":{"gitId":"janald99"},"content":"  * `match-pr` command","lastModifiedDate":"2022-04-06"},{"lineNumber":33,"author":{"gitId":"janald99"},"content":"  * What it does: allows matching of one buyer to potential sellers in the seller list, based on the following criteria:","lastModifiedDate":"2022-04-06"},{"lineNumber":34,"author":{"gitId":"janald99"},"content":"    * `match-pr`: A price that match the price range of a buyer willing to buy a property, and a seller willing to sell a property.","lastModifiedDate":"2022-04-06"},{"lineNumber":35,"author":{"gitId":"janald99"},"content":"    * `match-h`: The `House Type` of the property","lastModifiedDate":"2022-04-06"},{"lineNumber":36,"author":{"gitId":"janald99"},"content":"    * `match-l`: `Location` of the property","lastModifiedDate":"2022-04-06"},{"lineNumber":37,"author":{"gitId":"janald99"},"content":"    * `match`: All of the fields above are matched","lastModifiedDate":"2022-04-06"},{"lineNumber":38,"author":{"gitId":"janald99"},"content":"    ","lastModifiedDate":"2022-04-06"},{"lineNumber":39,"author":{"gitId":"janald99"},"content":"  * Justification: This feature allows buyers to match with sellers to find a potential property they want to buy, based on their demand such as houseType and willing priceRange. It is also convenient for them to filter such matching based on their preferred criteria.","lastModifiedDate":"2022-04-06"},{"lineNumber":40,"author":{"gitId":"janald99"},"content":"","lastModifiedDate":"2022-02-25"},{"lineNumber":41,"author":{"gitId":"janald99"},"content":"","lastModifiedDate":"2022-02-25"},{"lineNumber":42,"author":{"gitId":"janald99"},"content":"* **Documentation**:","lastModifiedDate":"2022-02-25"},{"lineNumber":43,"author":{"gitId":"janald99"},"content":"    * User Guide:","lastModifiedDate":"2022-02-25"},{"lineNumber":44,"author":{"gitId":"janald99"},"content":"        * Contributed to the skeleton of the user guide by gaining inspiration from the AB3 User Guide.","lastModifiedDate":"2022-03-18"},{"lineNumber":45,"author":{"gitId":"janald99"},"content":"        * Quick Start of the User Guide, including adding the UI prototype screenshot.","lastModifiedDate":"2022-03-18"},{"lineNumber":46,"author":{"gitId":"janald99"},"content":"        * Removed the unnecessary documentation from the AB3 code base.","lastModifiedDate":"2022-03-18"},{"lineNumber":47,"author":{"gitId":"janald99"},"content":"        * Adapted the language of the User Guide to be more user-friendly and informal.","lastModifiedDate":"2022-04-08"},{"lineNumber":48,"author":{"gitId":"janald99"},"content":"        * Added Warnings, Cautions and Notes which alerts readers some things they should be careful/aware of.","lastModifiedDate":"2022-04-06"},{"lineNumber":49,"author":{"gitId":"janald99"},"content":"        * Added the entire match section of the User Guide.","lastModifiedDate":"2022-04-08"},{"lineNumber":50,"author":{"gitId":"janald99"},"content":"        * Updated FAQ questions and answers.","lastModifiedDate":"2022-04-08"},{"lineNumber":51,"author":{"gitId":"janald99"},"content":"    * Developer Guide:","lastModifiedDate":"2022-02-25"},{"lineNumber":52,"author":{"gitId":"janald99"},"content":"        * Added the Glossary section to clarify ambiguous terms.","lastModifiedDate":"2022-03-18"},{"lineNumber":53,"author":{"gitId":"janald99"},"content":"        * Added the Non-functional requirements of our project.","lastModifiedDate":"2022-03-18"},{"lineNumber":54,"author":{"gitId":"janald99"},"content":"        * Removed the unnecessary documentation from the AB3 code base.","lastModifiedDate":"2022-03-18"},{"lineNumber":55,"author":{"gitId":"janald99"},"content":"        * Many minor adjustments to sentence structures, refactoring keywords, and replacing images.","lastModifiedDate":"2022-03-18"},{"lineNumber":56,"author":{"gitId":"janald99"},"content":"        * Added UML diagrams for the Model section such as for:","lastModifiedDate":"2022-04-06"},{"lineNumber":57,"author":{"gitId":"janald99"},"content":"          * [Model Class](https://github.com/AY2122S2-CS2103T-T11-2/tp/blob/master/docs/images/ModelClassDiagram.png)","lastModifiedDate":"2022-04-06"},{"lineNumber":58,"author":{"gitId":"janald99"},"content":"          * [Property Class](https://github.com/AY2122S2-CS2103T-T11-2/tp/blob/master/docs/images/PropertyClassDiagram.png)","lastModifiedDate":"2022-04-06"},{"lineNumber":59,"author":{"gitId":"janald99"},"content":"          * [Client Class](https://github.com/AY2122S2-CS2103T-T11-2/tp/blob/master/docs/images/ClientClassDiagram.png)","lastModifiedDate":"2022-04-06"},{"lineNumber":60,"author":{"gitId":"janald99"},"content":"          ","lastModifiedDate":"2022-03-18"},{"lineNumber":61,"author":{"gitId":"janald99"},"content":"* **Contributions to team tasks**:","lastModifiedDate":"2022-03-18"},{"lineNumber":62,"author":{"gitId":"janald99"},"content":"  * Plan the architecture of our project, by drawing visually and screen-sharing.","lastModifiedDate":"2022-03-18"},{"lineNumber":63,"author":{"gitId":"janald99"},"content":"  * Summarize the work distribution and agenda of each meeting.","lastModifiedDate":"2022-03-18"},{"lineNumber":64,"author":{"gitId":"janald99"},"content":"  * Set up issues on GitHub](https://github.com/AY2122S2-CS2103T-T11-2/tp/issues)","lastModifiedDate":"2022-03-18"},{"lineNumber":65,"author":{"gitId":"janald99"},"content":"  * Standardize language across code and documents.","lastModifiedDate":"2022-04-06"},{"lineNumber":66,"author":{"gitId":"janald99"},"content":"  * Added and refactored java docs.","lastModifiedDate":"2022-04-06"},{"lineNumber":67,"author":{"gitId":"janald99"},"content":"  * Adjust message displays.","lastModifiedDate":"2022-04-06"},{"lineNumber":68,"author":{"gitId":"janald99"},"content":"  * Added test cases to improve our test coverage, and discovered bugs along the way.","lastModifiedDate":"2022-04-08"},{"lineNumber":69,"author":{"gitId":"janald99"},"content":"  * Managed issues and pull requests on Github by opening new ones, and closing and reviewing existing ones.","lastModifiedDate":"2022-04-08"},{"lineNumber":70,"author":{"gitId":"janald99"},"content":"  * Several bug fixes, for example:","lastModifiedDate":"2022-04-08"},{"lineNumber":71,"author":{"gitId":"janald99"},"content":"    * [Issue #279](https://github.com/AY2122S2-CS2103T-T11-2/tp/issues/279) where sellers who had no property could be matched with buyers, leading to undesirable behaviors.","lastModifiedDate":"2022-04-08"},{"lineNumber":72,"author":{"gitId":"janald99"},"content":"    * [Issue #213](https://github.com/AY2122S2-CS2103T-T11-2/tp/issues/213) where index out of range had no exception thrown.","lastModifiedDate":"2022-04-08"},{"lineNumber":73,"author":{"gitId":"janald99"},"content":"","lastModifiedDate":"2022-03-18"},{"lineNumber":74,"author":{"gitId":"janald99"},"content":"* **Review contributions**:","lastModifiedDate":"2022-03-18"},{"lineNumber":75,"author":{"gitId":"janald99"},"content":"  * Reviewed many Pull Requests, and added comments to some of them.","lastModifiedDate":"2022-04-08"},{"lineNumber":76,"author":{"gitId":"janald99"},"content":"  * E.g: [PR #201](https://github.com/AY2122S2-CS2103T-T11-2/tp/pull/201) where I pointed out several typos and suggested ways to improve the user-friendliness and language of the user guide.","lastModifiedDate":"2022-04-08"}],"authorContributionMap":{"janald99":76}},{"path":"docs/team/wjunhong.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"WJunHong"},"content":"---","lastModifiedDate":"2022-02-25"},{"lineNumber":2,"author":{"gitId":"WJunHong"},"content":"layout: page","lastModifiedDate":"2022-02-25"},{"lineNumber":3,"author":{"gitId":"WJunHong"},"content":"title: Wang Jun Hong\u0027s Project Portfolio Page","lastModifiedDate":"2022-02-25"},{"lineNumber":4,"author":{"gitId":"WJunHong"},"content":"---","lastModifiedDate":"2022-02-25"},{"lineNumber":5,"author":{"gitId":"WJunHong"},"content":"","lastModifiedDate":"2022-02-25"},{"lineNumber":6,"author":{"gitId":"WJunHong"},"content":"### Project: AgentSee","lastModifiedDate":"2022-02-25"},{"lineNumber":7,"author":{"gitId":"WJunHong"},"content":"","lastModifiedDate":"2022-02-25"},{"lineNumber":8,"author":{"gitId":"WJunHong"},"content":"AgentSee is a desktop application for property agents to efficiently manage their client information.","lastModifiedDate":"2022-02-25"},{"lineNumber":9,"author":{"gitId":"WJunHong"},"content":"","lastModifiedDate":"2022-02-25"},{"lineNumber":10,"author":{"gitId":"WJunHong"},"content":"Given below are my contributions to the project.","lastModifiedDate":"2022-02-25"},{"lineNumber":11,"author":{"gitId":"WJunHong"},"content":"","lastModifiedDate":"2022-02-25"},{"lineNumber":12,"author":{"gitId":"WJunHong"},"content":"* **Code contributed**:","lastModifiedDate":"2022-02-25"},{"lineNumber":13,"author":{"gitId":"WJunHong"},"content":"    * `add-b` command","lastModifiedDate":"2022-03-31"},{"lineNumber":14,"author":{"gitId":"WJunHong"},"content":"    * `add-ptb` and `add-pts` commands","lastModifiedDate":"2022-03-31"},{"lineNumber":15,"author":{"gitId":"WJunHong"},"content":"    * `delete-b` command","lastModifiedDate":"2022-03-31"},{"lineNumber":16,"author":{"gitId":"WJunHong"},"content":"    * `add-ptb` and `add-pts` and `delete-b` parser \u0026 associated test classes","lastModifiedDate":"2022-03-31"},{"lineNumber":17,"author":{"gitId":"WJunHong"},"content":"    * `Buyer` class","lastModifiedDate":"2022-03-17"},{"lineNumber":18,"author":{"gitId":"WJunHong"},"content":"    * `AddBuyerCommandParser` class","lastModifiedDate":"2022-03-17"},{"lineNumber":19,"author":{"gitId":"WJunHong"},"content":"    * `BuyerTest` class","lastModifiedDate":"2022-03-17"},{"lineNumber":20,"author":{"gitId":"WJunHong"},"content":"    * `UniqueBuyerList` class","lastModifiedDate":"2022-03-17"},{"lineNumber":21,"author":{"gitId":"WJunHong"},"content":"    * `UniqueBuyerListTest` class","lastModifiedDate":"2022-03-17"},{"lineNumber":22,"author":{"gitId":"WJunHong"},"content":"    * `BuyerBuilder` \u0026 `TypicalBuyer` class","lastModifiedDate":"2022-03-17"},{"lineNumber":23,"author":{"gitId":"WJunHong"},"content":"    * `AddBuyerCommandTest` and `AddBuyerCommandIntegrationTest` class","lastModifiedDate":"2022-03-17"},{"lineNumber":24,"author":{"gitId":"WJunHong"},"content":"    * `BuyerAddressBookStorage` and other buyer related storage classes.","lastModifiedDate":"2022-03-31"},{"lineNumber":25,"author":{"gitId":"WJunHong"},"content":"    * `ReadOnlyBuyerAddressBook`, `BuyerAddressBook`","lastModifiedDate":"2022-04-06"},{"lineNumber":26,"author":{"gitId":"WJunHong"},"content":"    * FXML for UI updates","lastModifiedDate":"2022-03-31"},{"lineNumber":27,"author":{"gitId":"WJunHong"},"content":"    * `NullPropertyToBuy` (initial class before enhancements).","lastModifiedDate":"2022-03-31"},{"lineNumber":28,"author":{"gitId":"WJunHong"},"content":"","lastModifiedDate":"2022-02-25"},{"lineNumber":29,"author":{"gitId":"WJunHong"},"content":"* **Enhancements implemented**:","lastModifiedDate":"2022-02-25"},{"lineNumber":30,"author":{"gitId":"WJunHong"},"content":"  * Improved Find Command for v1.2 - Keywords need not exactly match the client name, and can simply be contained in them.","lastModifiedDate":"2022-03-31"},{"lineNumber":31,"author":{"gitId":"WJunHong"},"content":"  * The UI - Decent overhaul to the UI in terms of the organization of the fields, font sizes and icons.","lastModifiedDate":"2022-03-31"},{"lineNumber":32,"author":{"gitId":"WJunHong"},"content":"  * Improved the House Type - Created methods to query the enum using strings, and translate a set of possible strings to a specific enum.","lastModifiedDate":"2022-03-31"},{"lineNumber":33,"author":{"gitId":"WJunHong"},"content":"","lastModifiedDate":"2022-02-25"},{"lineNumber":34,"author":{"gitId":"WJunHong"},"content":"* **Contributions to the UG**:","lastModifiedDate":"2022-02-25"},{"lineNumber":35,"author":{"gitId":"WJunHong"},"content":"  * Added documentation features for `find` command in v1.1.","lastModifiedDate":"2022-03-31"},{"lineNumber":36,"author":{"gitId":"WJunHong"},"content":"  * Came up with screenshots shown on the User Guide","lastModifiedDate":"2022-02-25"},{"lineNumber":37,"author":{"gitId":"WJunHong"},"content":"  * Added `addbuyer` command to the list of commands in v1.2.","lastModifiedDate":"2022-03-31"},{"lineNumber":38,"author":{"gitId":"WJunHong"},"content":"  * Major overhaul of the UG to enforce consistency and enhance navigability for v1.3","lastModifiedDate":"2022-04-06"},{"lineNumber":39,"author":{"gitId":"WJunHong"},"content":"    * Change the introduction","lastModifiedDate":"2022-03-31"},{"lineNumber":40,"author":{"gitId":"WJunHong"},"content":"    * Added to the quick start","lastModifiedDate":"2022-03-31"},{"lineNumber":41,"author":{"gitId":"WJunHong"},"content":"    * Added to the important notes","lastModifiedDate":"2022-03-31"},{"lineNumber":42,"author":{"gitId":"WJunHong"},"content":"    * Reorganized and added most of the missing commands and their descriptions for both buyers and sellers","lastModifiedDate":"2022-03-31"},{"lineNumber":43,"author":{"gitId":"WJunHong"},"content":"    * Updated the summary table with all added commands","lastModifiedDate":"2022-03-31"},{"lineNumber":44,"author":{"gitId":"WJunHong"},"content":"  * Added elaborations for many issues raised in PE-D like:","lastModifiedDate":"2022-04-06"},{"lineNumber":45,"author":{"gitId":"WJunHong"},"content":"    * Why names cannot be identical","lastModifiedDate":"2022-04-06"},{"lineNumber":46,"author":{"gitId":"WJunHong"},"content":"    * Why phone numbers can be identical","lastModifiedDate":"2022-04-06"},{"lineNumber":47,"author":{"gitId":"WJunHong"},"content":"    * Location \u0026 address being not matching","lastModifiedDate":"2022-04-06"},{"lineNumber":48,"author":{"gitId":"WJunHong"},"content":"    * Price range problems","lastModifiedDate":"2022-04-06"},{"lineNumber":49,"author":{"gitId":"WJunHong"},"content":"    * Why text cuts off","lastModifiedDate":"2022-04-06"},{"lineNumber":50,"author":{"gitId":"WJunHong"},"content":"    * _many more_","lastModifiedDate":"2022-04-06"},{"lineNumber":51,"author":{"gitId":"WJunHong"},"content":"","lastModifiedDate":"2022-02-25"},{"lineNumber":52,"author":{"gitId":"WJunHong"},"content":"* **Contributions to the DG**:","lastModifiedDate":"2022-02-25"},{"lineNumber":53,"author":{"gitId":"WJunHong"},"content":"    * Added implementation details for `find` command","lastModifiedDate":"2022-02-25"},{"lineNumber":54,"author":{"gitId":"WJunHong"},"content":"    * Added User Stories and Use cases to Developer Guide","lastModifiedDate":"2022-02-25"},{"lineNumber":55,"author":{"gitId":"WJunHong"},"content":"","lastModifiedDate":"2022-02-25"},{"lineNumber":56,"author":{"gitId":"WJunHong"},"content":"* **Contributions to team tasks**:","lastModifiedDate":"2022-02-25"},{"lineNumber":57,"author":{"gitId":"WJunHong"},"content":"    * Set up initial GitHub organization and repository","lastModifiedDate":"2022-02-25"},{"lineNumber":58,"author":{"gitId":"WJunHong"},"content":"    * Set up milestone [#v1.1](https://github.com/AY2122S2-CS2103T-T11-2/tp/milestone/1)","lastModifiedDate":"2022-03-17"},{"lineNumber":59,"author":{"gitId":"WJunHong"},"content":"    * Set up milestone and some issues for [#v1.2](https://github.com/AY2122S2-CS2103T-T11-2/tp/milestone/2)","lastModifiedDate":"2022-03-17"},{"lineNumber":60,"author":{"gitId":"WJunHong"},"content":"    * Set up milestone and issues for [#v1.3](https://github.com/AY2122S2-CS2103T-T11-2/tp/milestone/3)","lastModifiedDate":"2022-03-17"},{"lineNumber":61,"author":{"gitId":"WJunHong"},"content":"    * Complete `addbuyer`, `add-pts`, `add-ptb`, UG update and UI update issues.","lastModifiedDate":"2022-03-31"},{"lineNumber":62,"author":{"gitId":"WJunHong"},"content":"    * Help to assign PE-D issues to respective teammates.","lastModifiedDate":"2022-04-06"},{"lineNumber":63,"author":{"gitId":"WJunHong"},"content":"    * Set up [#v1.4](https://github.com/AY2122S2-CS2103T-T11-2/tp/milestone/4)","lastModifiedDate":"2022-04-06"},{"lineNumber":64,"author":{"gitId":"WJunHong"},"content":"","lastModifiedDate":"2022-02-25"},{"lineNumber":65,"author":{"gitId":"WJunHong"},"content":"* **Review contributions**:","lastModifiedDate":"2022-02-25"},{"lineNumber":66,"author":{"gitId":"WJunHong"},"content":"  * Made review for multiple Pull Requests such as","lastModifiedDate":"2022-03-17"},{"lineNumber":67,"author":{"gitId":"WJunHong"},"content":"    * [#34](https://github.com/AY2122S2-CS2103T-T11-2/tp/pull/34) where I commented that there were some problems with import styling","lastModifiedDate":"2022-03-17"},{"lineNumber":68,"author":{"gitId":"WJunHong"},"content":"    * [#48](https://github.com/AY2122S2-CS2103T-T11-2/tp/pull/48) where I read through how sort command works and gave my approval","lastModifiedDate":"2022-03-17"},{"lineNumber":69,"author":{"gitId":"WJunHong"},"content":"    * [#87](https://github.com/AY2122S2-CS2103T-T11-2/tp/pull/87) where I commented on the missing javadoc descriptions","lastModifiedDate":"2022-03-17"},{"lineNumber":70,"author":{"gitId":"WJunHong"},"content":"    * [#266](https://github.com/AY2122S2-CS2103T-T11-2/tp/pull/266) where I recommended my teammate to use a more specific error message","lastModifiedDate":"2022-04-06"}],"authorContributionMap":{"WJunHong":70}},{"path":"docs/tutorials/AddRemark.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"---","lastModifiedDate":"2020-07-29"},{"lineNumber":2,"author":{"gitId":"-"},"content":"layout: page","lastModifiedDate":"2020-07-29"},{"lineNumber":3,"author":{"gitId":"-"},"content":"title: \"Tutorial: Adding a command\"","lastModifiedDate":"2020-07-29"},{"lineNumber":4,"author":{"gitId":"-"},"content":"---","lastModifiedDate":"2020-07-29"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":6,"author":{"gitId":"-"},"content":"Let\u0027s walk you through the implementation of a new command — `remark`.","lastModifiedDate":"2020-07-29"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":8,"author":{"gitId":"-"},"content":"This command allows users of the AddressBook application to add optional remarks to people in their address book and edit it if required. The command should have the following format:","lastModifiedDate":"2020-07-29"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":10,"author":{"gitId":"-"},"content":"`remark INDEX r/REMARK` (e.g., `remark 2 r/Likes baseball`)","lastModifiedDate":"2020-07-29"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":12,"author":{"gitId":"-"},"content":"We’ll assume that you have already set up the development environment as outlined in the Developer’s Guide.","lastModifiedDate":"2020-07-29"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":15,"author":{"gitId":"-"},"content":"## Create a new `remark` command","lastModifiedDate":"2020-07-29"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":17,"author":{"gitId":"-"},"content":"Looking in the `logic.command` package, you will notice that each existing command have their own class. All the commands inherit from the abstract class `Command` which means that they must override `execute()`. Each `Command` returns an instance of `CommandResult` upon success and `CommandResult#feedbackToUser` is printed to the `ResultDisplay`.","lastModifiedDate":"2020-07-29"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":19,"author":{"gitId":"-"},"content":"Let’s start by creating a new `RemarkCommand` class in the `src/main/java/seedu/address/logic/command` directory.","lastModifiedDate":"2020-07-29"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":21,"author":{"gitId":"-"},"content":"For now, let’s keep `RemarkCommand` as simple as possible and print some output. We accomplish that by returning a `CommandResult` with an accompanying message.","lastModifiedDate":"2020-07-29"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":23,"author":{"gitId":"-"},"content":"**`RemarkCommand.java`:**","lastModifiedDate":"2020-07-29"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":25,"author":{"gitId":"-"},"content":"``` java","lastModifiedDate":"2020-07-29"},{"lineNumber":26,"author":{"gitId":"-"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2020-07-29"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":28,"author":{"gitId":"-"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2020-07-29"},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":30,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2020-07-29"},{"lineNumber":31,"author":{"gitId":"cwnm"},"content":" * Changes the remark of an existing client in the address book.","lastModifiedDate":"2022-03-04"},{"lineNumber":32,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2020-07-29"},{"lineNumber":33,"author":{"gitId":"-"},"content":"public class RemarkCommand extends Command {","lastModifiedDate":"2020-07-29"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    public static final String COMMAND_WORD \u003d \"remark\";","lastModifiedDate":"2020-07-29"},{"lineNumber":36,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2020-07-29"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    public CommandResult execute(Model model) {","lastModifiedDate":"2020-07-29"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        return new CommandResult(\"Hello from remark\");","lastModifiedDate":"2020-07-29"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2020-07-29"},{"lineNumber":41,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-07-29"},{"lineNumber":42,"author":{"gitId":"-"},"content":"```","lastModifiedDate":"2020-07-29"},{"lineNumber":43,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":44,"author":{"gitId":"-"},"content":"### Hook `RemarkCommand` into the application","lastModifiedDate":"2020-07-29"},{"lineNumber":45,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":46,"author":{"gitId":"-"},"content":"Now that we have our `RemarkCommand` ready to be executed, we need to update `AddressBookParser#parseCommand()` to recognize the `remark` keyword. Add the new command to the `switch` block by creating a new `case` that returns a new instance of `RemarkCommand`.","lastModifiedDate":"2020-07-29"},{"lineNumber":47,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":48,"author":{"gitId":"-"},"content":"You can refer to the changes in this [diff](https://github.com/se-edu/addressbook-level3/commit/35eb7286f18a029d39cb7a29df8f172a001e4fd8#diff-399c284cb892c20b7c04a69116fcff6ccc0666c5230a1db8e4a9145def8fa4ee).","lastModifiedDate":"2022-01-02"},{"lineNumber":49,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":50,"author":{"gitId":"-"},"content":"### Run the application","lastModifiedDate":"2020-07-29"},{"lineNumber":51,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":52,"author":{"gitId":"-"},"content":"Run `Main#main` and try out your new `RemarkCommand`. If everything went well, you should see something like this:","lastModifiedDate":"2020-07-29"},{"lineNumber":53,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":54,"author":{"gitId":"-"},"content":"![Output displayed](../images/add-remark/RemarkHello.png)","lastModifiedDate":"2020-07-29"},{"lineNumber":55,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":56,"author":{"gitId":"-"},"content":"## Change `RemarkCommand` to throw an exception","lastModifiedDate":"2020-07-29"},{"lineNumber":57,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":58,"author":{"gitId":"-"},"content":"While we have successfully printed a message to `ResultDisplay`, the command does not do what it is supposed to do. Let’s change the command to throw a `CommandException` to accurately reflect that our command is still a work in progress.","lastModifiedDate":"2020-12-12"},{"lineNumber":59,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":60,"author":{"gitId":"-"},"content":"![The relationship between RemarkCommand and Command](../images/add-remark/CommandInterface.png)","lastModifiedDate":"2020-07-29"},{"lineNumber":61,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":62,"author":{"gitId":"-"},"content":"Following the convention in other commands, we add relevant messages as constants and use them.","lastModifiedDate":"2020-07-29"},{"lineNumber":63,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":64,"author":{"gitId":"-"},"content":"**`RemarkCommand.java`:**","lastModifiedDate":"2020-07-29"},{"lineNumber":65,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":66,"author":{"gitId":"-"},"content":"``` java","lastModifiedDate":"2020-07-29"},{"lineNumber":67,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_USAGE \u003d COMMAND_WORD","lastModifiedDate":"2021-08-01"},{"lineNumber":68,"author":{"gitId":"cwnm"},"content":"            + \": Edits the remark of the client identified \"","lastModifiedDate":"2022-03-04"},{"lineNumber":69,"author":{"gitId":"cwnm"},"content":"            + \"by the index number used in the last client listing. \"","lastModifiedDate":"2022-03-04"},{"lineNumber":70,"author":{"gitId":"-"},"content":"            + \"Existing remark will be overwritten by the input.\\n\"","lastModifiedDate":"2020-07-29"},{"lineNumber":71,"author":{"gitId":"-"},"content":"            + \"Parameters: INDEX (must be a positive integer) \"","lastModifiedDate":"2020-07-29"},{"lineNumber":72,"author":{"gitId":"-"},"content":"            + \"r/ [REMARK]\\n\"","lastModifiedDate":"2020-07-29"},{"lineNumber":73,"author":{"gitId":"-"},"content":"            + \"Example: \" + COMMAND_WORD + \" 1 \"","lastModifiedDate":"2020-07-29"},{"lineNumber":74,"author":{"gitId":"-"},"content":"            + \"r/ Likes to swim.\";","lastModifiedDate":"2020-07-29"},{"lineNumber":75,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":76,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_NOT_IMPLEMENTED_YET \u003d","lastModifiedDate":"2021-08-01"},{"lineNumber":77,"author":{"gitId":"-"},"content":"            \"Remark command not implemented yet\";","lastModifiedDate":"2021-08-01"},{"lineNumber":78,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":79,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2020-07-29"},{"lineNumber":80,"author":{"gitId":"-"},"content":"    public CommandResult execute(Model model) throws CommandException {","lastModifiedDate":"2020-07-29"},{"lineNumber":81,"author":{"gitId":"-"},"content":"        throw new CommandException(MESSAGE_NOT_IMPLEMENTED_YET);","lastModifiedDate":"2020-07-29"},{"lineNumber":82,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2020-07-29"},{"lineNumber":83,"author":{"gitId":"-"},"content":"```","lastModifiedDate":"2020-07-29"},{"lineNumber":84,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":85,"author":{"gitId":"-"},"content":"## Enhancing `RemarkCommand`","lastModifiedDate":"2020-07-29"},{"lineNumber":86,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":87,"author":{"gitId":"-"},"content":"Let’s change `RemarkCommand` to parse input from the user.","lastModifiedDate":"2020-07-29"},{"lineNumber":88,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":89,"author":{"gitId":"-"},"content":"### Make the command accept parameters","lastModifiedDate":"2020-07-29"},{"lineNumber":90,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":91,"author":{"gitId":"-"},"content":"We start by modifying the constructor of `RemarkCommand` to accept an `Index` and a `String`. While we are at it, let’s change the error message to echo the values. While this is not a replacement for tests, it is an obvious way to tell if our code is functioning as intended.","lastModifiedDate":"2020-07-29"},{"lineNumber":92,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":93,"author":{"gitId":"-"},"content":"``` java","lastModifiedDate":"2020-07-29"},{"lineNumber":94,"author":{"gitId":"-"},"content":"import static seedu.address.commons.util.CollectionUtil.requireAllNonNull;","lastModifiedDate":"2020-07-29"},{"lineNumber":95,"author":{"gitId":"-"},"content":"//...","lastModifiedDate":"2020-07-29"},{"lineNumber":96,"author":{"gitId":"-"},"content":"public class RemarkCommand extends Command {","lastModifiedDate":"2020-07-29"},{"lineNumber":97,"author":{"gitId":"-"},"content":"    //...","lastModifiedDate":"2020-07-29"},{"lineNumber":98,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_ARGUMENTS \u003d \"Index: %1$d, Remark: %2$s\";","lastModifiedDate":"2020-07-29"},{"lineNumber":99,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":100,"author":{"gitId":"-"},"content":"    private final Index index;","lastModifiedDate":"2020-07-29"},{"lineNumber":101,"author":{"gitId":"-"},"content":"    private final String remark;","lastModifiedDate":"2020-07-29"},{"lineNumber":102,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":103,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2020-07-29"},{"lineNumber":104,"author":{"gitId":"cwnm"},"content":"     * @param index of the client in the filtered client list to edit the remark","lastModifiedDate":"2022-03-04"},{"lineNumber":105,"author":{"gitId":"cwnm"},"content":"     * @param remark of the client to be updated to","lastModifiedDate":"2022-03-04"},{"lineNumber":106,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2020-07-29"},{"lineNumber":107,"author":{"gitId":"-"},"content":"    public RemarkCommand(Index index, String remark) {","lastModifiedDate":"2020-07-29"},{"lineNumber":108,"author":{"gitId":"-"},"content":"        requireAllNonNull(index, remark);","lastModifiedDate":"2020-07-29"},{"lineNumber":109,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":110,"author":{"gitId":"-"},"content":"        this.index \u003d index;","lastModifiedDate":"2020-07-29"},{"lineNumber":111,"author":{"gitId":"-"},"content":"        this.remark \u003d remark;","lastModifiedDate":"2020-07-29"},{"lineNumber":112,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2020-07-29"},{"lineNumber":113,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2020-07-29"},{"lineNumber":114,"author":{"gitId":"-"},"content":"    public CommandResult execute(Model model) throws CommandException {","lastModifiedDate":"2020-07-29"},{"lineNumber":115,"author":{"gitId":"-"},"content":"        throw new CommandException(","lastModifiedDate":"2021-08-01"},{"lineNumber":116,"author":{"gitId":"-"},"content":"                String.format(MESSAGE_ARGUMENTS, index.getOneBased(), remark));","lastModifiedDate":"2021-08-01"},{"lineNumber":117,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2020-07-29"},{"lineNumber":118,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":119,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2020-07-29"},{"lineNumber":120,"author":{"gitId":"-"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2020-07-29"},{"lineNumber":121,"author":{"gitId":"-"},"content":"        // short circuit if same object","lastModifiedDate":"2020-07-29"},{"lineNumber":122,"author":{"gitId":"-"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2020-07-29"},{"lineNumber":123,"author":{"gitId":"-"},"content":"            return true;","lastModifiedDate":"2020-07-29"},{"lineNumber":124,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2020-07-29"},{"lineNumber":125,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":126,"author":{"gitId":"-"},"content":"        // instanceof handles nulls","lastModifiedDate":"2020-07-29"},{"lineNumber":127,"author":{"gitId":"-"},"content":"        if (!(other instanceof RemarkCommand)) {","lastModifiedDate":"2020-07-29"},{"lineNumber":128,"author":{"gitId":"-"},"content":"            return false;","lastModifiedDate":"2020-07-29"},{"lineNumber":129,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2020-07-29"},{"lineNumber":130,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":131,"author":{"gitId":"-"},"content":"        // state check","lastModifiedDate":"2020-07-29"},{"lineNumber":132,"author":{"gitId":"-"},"content":"        RemarkCommand e \u003d (RemarkCommand) other;","lastModifiedDate":"2020-07-29"},{"lineNumber":133,"author":{"gitId":"-"},"content":"        return index.equals(e.index)","lastModifiedDate":"2020-07-29"},{"lineNumber":134,"author":{"gitId":"-"},"content":"                \u0026\u0026 remark.equals(e.remark);","lastModifiedDate":"2020-07-29"},{"lineNumber":135,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2020-07-29"},{"lineNumber":136,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-07-29"},{"lineNumber":137,"author":{"gitId":"-"},"content":"```","lastModifiedDate":"2020-07-29"},{"lineNumber":138,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":139,"author":{"gitId":"-"},"content":"Your code should look something like [this](https://github.com/se-edu/addressbook-level3/commit/dc6d5139d08f6403da0ec624ea32bd79a2ae0cbf#diff-a8e35af8f9c251525063fae36c9852922a7e7195763018eacec60f3a4d87c594) after you are done.","lastModifiedDate":"2022-01-02"},{"lineNumber":140,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":141,"author":{"gitId":"-"},"content":"### Parse user input","lastModifiedDate":"2020-07-29"},{"lineNumber":142,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":143,"author":{"gitId":"-"},"content":"Now let’s move on to writing a parser that will extract the index and remark from the input provided by the user.","lastModifiedDate":"2020-07-29"},{"lineNumber":144,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":145,"author":{"gitId":"-"},"content":"Create a `RemarkCommandParser` class in the `seedu.address.logic.parser` package. The class must extend the `Parser` interface.","lastModifiedDate":"2020-07-29"},{"lineNumber":146,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":147,"author":{"gitId":"-"},"content":"![The relationship between Parser and RemarkCommandParser](../images/add-remark/ParserInterface.png)","lastModifiedDate":"2020-07-29"},{"lineNumber":148,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":149,"author":{"gitId":"-"},"content":"Thankfully, `ArgumentTokenizer#tokenize()` makes it trivial to parse user input. Let’s take a look at the JavaDoc provided for the function to understand what it does.","lastModifiedDate":"2020-07-29"},{"lineNumber":150,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":151,"author":{"gitId":"-"},"content":"**`ArgumentTokenizer.java`:**","lastModifiedDate":"2020-07-29"},{"lineNumber":152,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":153,"author":{"gitId":"-"},"content":"``` java","lastModifiedDate":"2020-07-29"},{"lineNumber":154,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2020-07-29"},{"lineNumber":155,"author":{"gitId":"-"},"content":" * Tokenizes an arguments string and returns an {@code ArgumentMultimap}","lastModifiedDate":"2020-07-29"},{"lineNumber":156,"author":{"gitId":"-"},"content":" * object that maps prefixes to their respective argument values. Only the","lastModifiedDate":"2020-07-29"},{"lineNumber":157,"author":{"gitId":"-"},"content":" * given prefixes will be recognized in the arguments string.","lastModifiedDate":"2020-07-29"},{"lineNumber":158,"author":{"gitId":"-"},"content":" *","lastModifiedDate":"2020-07-29"},{"lineNumber":159,"author":{"gitId":"-"},"content":" * @param argsString Arguments string of the form:","lastModifiedDate":"2020-07-29"},{"lineNumber":160,"author":{"gitId":"-"},"content":" * {@code preamble \u003cprefix\u003evalue \u003cprefix\u003evalue ...}","lastModifiedDate":"2020-07-29"},{"lineNumber":161,"author":{"gitId":"-"},"content":" * @param prefixes   Prefixes to tokenize the arguments string with","lastModifiedDate":"2020-07-29"},{"lineNumber":162,"author":{"gitId":"-"},"content":" * @return           ArgumentMultimap object that maps prefixes to their","lastModifiedDate":"2020-07-29"},{"lineNumber":163,"author":{"gitId":"-"},"content":" * arguments","lastModifiedDate":"2020-07-29"},{"lineNumber":164,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2020-07-29"},{"lineNumber":165,"author":{"gitId":"-"},"content":"```","lastModifiedDate":"2020-07-29"},{"lineNumber":166,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":167,"author":{"gitId":"-"},"content":"We can tell `ArgumentTokenizer#tokenize()` to look out for our new prefix `r/` and it will return us an instance of `ArgumentMultimap`. Now let’s find out what we need to do in order to obtain the Index and String that we need. Let’s look through `ArgumentMultimap` :","lastModifiedDate":"2020-07-29"},{"lineNumber":168,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":169,"author":{"gitId":"-"},"content":"**`ArgumentMultimap.java`:**","lastModifiedDate":"2020-07-29"},{"lineNumber":170,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":171,"author":{"gitId":"-"},"content":"``` java","lastModifiedDate":"2020-07-29"},{"lineNumber":172,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2020-07-29"},{"lineNumber":173,"author":{"gitId":"-"},"content":" * Returns the last value of {@code prefix}.","lastModifiedDate":"2020-07-29"},{"lineNumber":174,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2020-07-29"},{"lineNumber":175,"author":{"gitId":"-"},"content":"public Optional\u003cString\u003e getValue(Prefix prefix) {","lastModifiedDate":"2020-07-29"},{"lineNumber":176,"author":{"gitId":"-"},"content":"    List\u003cString\u003e values \u003d getAllValues(prefix);","lastModifiedDate":"2020-07-29"},{"lineNumber":177,"author":{"gitId":"-"},"content":"    return values.isEmpty() ? Optional.empty() :","lastModifiedDate":"2020-07-29"},{"lineNumber":178,"author":{"gitId":"-"},"content":"        Optional.of(values.get(values.size() - 1));","lastModifiedDate":"2020-07-29"},{"lineNumber":179,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-07-29"},{"lineNumber":180,"author":{"gitId":"-"},"content":"```","lastModifiedDate":"2020-07-29"},{"lineNumber":181,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":182,"author":{"gitId":"-"},"content":"This appears to be what we need to get a String of the remark. But what about the Index? Let\u0027s take a quick peek at existing `Command` that uses an index to see how it is done.","lastModifiedDate":"2020-07-29"},{"lineNumber":183,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":184,"author":{"gitId":"-"},"content":"**`DeleteCommandParser.java`:**","lastModifiedDate":"2020-07-29"},{"lineNumber":185,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":186,"author":{"gitId":"-"},"content":"``` java","lastModifiedDate":"2020-07-29"},{"lineNumber":187,"author":{"gitId":"-"},"content":"Index index \u003d ParserUtil.parseIndex(args);","lastModifiedDate":"2020-07-29"},{"lineNumber":188,"author":{"gitId":"-"},"content":"return new DeleteCommand(index);","lastModifiedDate":"2020-07-29"},{"lineNumber":189,"author":{"gitId":"-"},"content":"```","lastModifiedDate":"2020-07-29"},{"lineNumber":190,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":191,"author":{"gitId":"-"},"content":"There appears to be another utility class that obtains an `Index` from the input provided by the user.","lastModifiedDate":"2020-07-29"},{"lineNumber":192,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":193,"author":{"gitId":"-"},"content":"Now that we have the know-how to extract the data that we need from the user’s input, we can parse the user command and create a new instance of `RemarkCommand`, as given below.","lastModifiedDate":"2020-07-29"},{"lineNumber":194,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":195,"author":{"gitId":"-"},"content":"**`RemarkCommandParser.java`:**","lastModifiedDate":"2020-07-29"},{"lineNumber":196,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":197,"author":{"gitId":"-"},"content":"``` java","lastModifiedDate":"2020-07-29"},{"lineNumber":198,"author":{"gitId":"-"},"content":"public RemarkCommand parse(String args) throws ParseException {","lastModifiedDate":"2020-07-29"},{"lineNumber":199,"author":{"gitId":"-"},"content":"    requireNonNull(args);","lastModifiedDate":"2020-07-29"},{"lineNumber":200,"author":{"gitId":"-"},"content":"    ArgumentMultimap argMultimap \u003d ArgumentTokenizer.tokenize(args,","lastModifiedDate":"2020-07-29"},{"lineNumber":201,"author":{"gitId":"-"},"content":"        PREFIX_REMARK);","lastModifiedDate":"2020-07-29"},{"lineNumber":202,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":203,"author":{"gitId":"-"},"content":"    Index index;","lastModifiedDate":"2020-07-29"},{"lineNumber":204,"author":{"gitId":"-"},"content":"    try {","lastModifiedDate":"2020-07-29"},{"lineNumber":205,"author":{"gitId":"-"},"content":"        index \u003d ParserUtil.parseIndex(argMultimap.getPreamble());","lastModifiedDate":"2020-07-29"},{"lineNumber":206,"author":{"gitId":"-"},"content":"    } catch (IllegalValueException ive) {","lastModifiedDate":"2020-07-29"},{"lineNumber":207,"author":{"gitId":"-"},"content":"        throw new ParseException(String.format(MESSAGE_INVALID_COMMAND_FORMAT,","lastModifiedDate":"2020-07-29"},{"lineNumber":208,"author":{"gitId":"-"},"content":"            RemarkCommand.MESSAGE_USAGE), ive);","lastModifiedDate":"2020-07-29"},{"lineNumber":209,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2020-07-29"},{"lineNumber":210,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":211,"author":{"gitId":"-"},"content":"    String remark \u003d argMultimap.getValue(PREFIX_REMARK).orElse(\"\");","lastModifiedDate":"2020-07-29"},{"lineNumber":212,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":213,"author":{"gitId":"-"},"content":"    return new RemarkCommand(index, remark);","lastModifiedDate":"2020-07-29"},{"lineNumber":214,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-07-29"},{"lineNumber":215,"author":{"gitId":"-"},"content":"```","lastModifiedDate":"2020-07-29"},{"lineNumber":216,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":217,"author":{"gitId":"-"},"content":"\u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-primary\"\u003e","lastModifiedDate":"2020-07-29"},{"lineNumber":218,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":219,"author":{"gitId":"-"},"content":":information_source: Don’t forget to update `AddressBookParser` to use our new `RemarkCommandParser`!","lastModifiedDate":"2020-07-29"},{"lineNumber":220,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":221,"author":{"gitId":"-"},"content":"\u003c/div\u003e","lastModifiedDate":"2020-07-29"},{"lineNumber":222,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":223,"author":{"gitId":"-"},"content":"If you are stuck, check out the sample","lastModifiedDate":"2020-07-29"},{"lineNumber":224,"author":{"gitId":"-"},"content":"[here](https://github.com/se-edu/addressbook-level3/commit/dc6d5139d08f6403da0ec624ea32bd79a2ae0cbf#diff-8bf239e8e9529369b577701303ddd96af93178b4ed6735f91c2d8488b20c6b4a).","lastModifiedDate":"2022-01-02"},{"lineNumber":225,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":226,"author":{"gitId":"-"},"content":"## Add `Remark` to the model","lastModifiedDate":"2020-07-29"},{"lineNumber":227,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":228,"author":{"gitId":"cwnm"},"content":"Now that we have all the information that we need, let’s lay the groundwork for propagating the remarks added into the in-memory storage of client data. We achieve that by working with the `client` model. Each field in a client is implemented as a separate class (e.g. a `Name` object represents the client’s name). That means we should add a `Remark` class so that we can use a `Remark` object to represent a remark given to a client.","lastModifiedDate":"2022-03-04"},{"lineNumber":229,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":230,"author":{"gitId":"-"},"content":"### Add a new `Remark` class","lastModifiedDate":"2020-07-29"},{"lineNumber":231,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":232,"author":{"gitId":"cwnm"},"content":"Create a new `Remark` in `seedu.address.model.client`. Since a `Remark` is a field that is similar to `Address`, we can reuse a significant bit of code.","lastModifiedDate":"2022-03-04"},{"lineNumber":233,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":234,"author":{"gitId":"-"},"content":"A copy-paste and search-replace later, you should have something like [this](https://github.com/se-edu/addressbook-level3/commit/4516e099699baa9e2d51801bd26f016d812dedcc#diff-41bb13c581e280c686198251ad6cc337cd5e27032772f06ed9bf7f1440995ece). Note how `Remark` has no constrains and thus does not require input","lastModifiedDate":"2022-01-02"},{"lineNumber":235,"author":{"gitId":"-"},"content":"validation.","lastModifiedDate":"2020-07-29"},{"lineNumber":236,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":237,"author":{"gitId":"-"},"content":"### Make use of `Remark`","lastModifiedDate":"2020-07-29"},{"lineNumber":238,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":239,"author":{"gitId":"-"},"content":"Let’s change `RemarkCommand` and `RemarkCommandParser` to use the new `Remark` class instead of plain `String`. These should be relatively simple changes.","lastModifiedDate":"2020-07-29"},{"lineNumber":240,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":241,"author":{"gitId":"-"},"content":"## Add a placeholder element for remark to the UI","lastModifiedDate":"2020-07-29"},{"lineNumber":242,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":243,"author":{"gitId":"cwnm"},"content":"Without getting too deep into `fxml`, let’s go on a 5 minute adventure to get some placeholder text to show up for each client.","lastModifiedDate":"2022-03-04"},{"lineNumber":244,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":245,"author":{"gitId":"cwnm"},"content":"Simply add the following to [`seedu.address.ui.clientCard`](https://github.com/se-edu/addressbook-level3/commit/850b78879582f38accb05dd20c245963c65ea599#diff-639834f1e05afe2276a86372adf0fe5f69314642c2d93cfa543d614ce5a76688).","lastModifiedDate":"2022-03-04"},{"lineNumber":246,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":247,"author":{"gitId":"cwnm"},"content":"**`clientCard.java`:**","lastModifiedDate":"2022-03-04"},{"lineNumber":248,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":249,"author":{"gitId":"-"},"content":"``` java","lastModifiedDate":"2020-07-29"},{"lineNumber":250,"author":{"gitId":"-"},"content":"@FXML","lastModifiedDate":"2020-07-29"},{"lineNumber":251,"author":{"gitId":"-"},"content":"private Label remark;","lastModifiedDate":"2020-07-29"},{"lineNumber":252,"author":{"gitId":"-"},"content":"```","lastModifiedDate":"2020-07-29"},{"lineNumber":253,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":254,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":255,"author":{"gitId":"-"},"content":"`@FXML` is an annotation that marks a private or protected field and makes it accessible to FXML. It might sound like Greek to you right now, don’t worry — we will get back to it later.","lastModifiedDate":"2020-07-29"},{"lineNumber":256,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":257,"author":{"gitId":"cwnm"},"content":"Then insert the following into [`main/resources/view/clientListCard.fxml`](https://github.com/se-edu/addressbook-level3/commit/850b78879582f38accb05dd20c245963c65ea599#diff-d44c4f51c24f6253c277a2bb9bc440b8064d9c15ad7cb7ceda280bca032efce9).","lastModifiedDate":"2022-03-04"},{"lineNumber":258,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":259,"author":{"gitId":"cwnm"},"content":"**`clientListCard.fxml`:**","lastModifiedDate":"2022-03-04"},{"lineNumber":260,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":261,"author":{"gitId":"-"},"content":"``` xml","lastModifiedDate":"2020-07-29"},{"lineNumber":262,"author":{"gitId":"-"},"content":"\u003cLabel fx:id\u003d\"remark\" styleClass\u003d\"cell_small_label\" text\u003d\"\\$remark\" /\u003e","lastModifiedDate":"2020-07-29"},{"lineNumber":263,"author":{"gitId":"-"},"content":"```","lastModifiedDate":"2020-07-29"},{"lineNumber":264,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":265,"author":{"gitId":"-"},"content":"That’s it! Fire up the application again and you should see something like this:","lastModifiedDate":"2020-07-29"},{"lineNumber":266,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":267,"author":{"gitId":"-"},"content":"![$remark shows up in each entry](../images/add-remark/$Remark.png)","lastModifiedDate":"2020-07-29"},{"lineNumber":268,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":269,"author":{"gitId":"cwnm"},"content":"## Modify `client` to support a `Remark` field","lastModifiedDate":"2022-03-04"},{"lineNumber":270,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":271,"author":{"gitId":"cwnm"},"content":"Since `clientCard` displays data from a `client`, we need to update `client` to get our `Remark` displayed!","lastModifiedDate":"2022-03-04"},{"lineNumber":272,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":273,"author":{"gitId":"cwnm"},"content":"### Modify `client`","lastModifiedDate":"2022-03-04"},{"lineNumber":274,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":275,"author":{"gitId":"cwnm"},"content":"We change the constructor of `client` to take a `Remark`. We will also need to define new fields and accessors accordingly to store our new addition.","lastModifiedDate":"2022-03-04"},{"lineNumber":276,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":277,"author":{"gitId":"cwnm"},"content":"### Update other usages of `client`","lastModifiedDate":"2022-03-04"},{"lineNumber":278,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":279,"author":{"gitId":"cwnm"},"content":"Unfortunately, a change to `client` will cause other commands to break, you will have to modify these commands to use the updated `client`!","lastModifiedDate":"2022-03-04"},{"lineNumber":280,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":281,"author":{"gitId":"-"},"content":"\u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-primary\"\u003e","lastModifiedDate":"2020-07-29"},{"lineNumber":282,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":283,"author":{"gitId":"cwnm"},"content":":bulb: Use the `Find Usages` feature in IntelliJ IDEA on the `client` class to find these commands.","lastModifiedDate":"2022-03-04"},{"lineNumber":284,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":285,"author":{"gitId":"-"},"content":"\u003c/div\u003e","lastModifiedDate":"2020-07-29"},{"lineNumber":286,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":287,"author":{"gitId":"-"},"content":"Refer to [this commit](https://github.com/se-edu/addressbook-level3/commit/ce998c37e65b92d35c91d28c7822cd139c2c0a5c) and check that you have got everything in order!","lastModifiedDate":"2020-07-29"},{"lineNumber":288,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":289,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":290,"author":{"gitId":"-"},"content":"## Updating Storage","lastModifiedDate":"2020-07-29"},{"lineNumber":291,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":292,"author":{"gitId":"cwnm"},"content":"AddressBook stores data by serializing `JsonAdaptedclient` into `json` with the help of an external library — Jackson. Let’s update `JsonAdaptedclient` to work with our new `client`!","lastModifiedDate":"2022-03-04"},{"lineNumber":293,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":294,"author":{"gitId":"-"},"content":"While the changes to code may be minimal, the test data will have to be updated as well.","lastModifiedDate":"2020-07-29"},{"lineNumber":295,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":296,"author":{"gitId":"-"},"content":"\u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-warning\"\u003e","lastModifiedDate":"2020-07-29"},{"lineNumber":297,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":298,"author":{"gitId":"-"},"content":":exclamation: You must delete AddressBook’s storage file located at `/data/addressbook.json` before running it! Not doing so will cause AddressBook to default to an empty address book!","lastModifiedDate":"2020-07-29"},{"lineNumber":299,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":300,"author":{"gitId":"-"},"content":"\u003c/div\u003e","lastModifiedDate":"2020-07-29"},{"lineNumber":301,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":302,"author":{"gitId":"-"},"content":"Check out [this commit](https://github.com/se-edu/addressbook-level3/commit/556cbd0e03ff224d7a68afba171ad2eb0ce56bbf)","lastModifiedDate":"2020-07-29"},{"lineNumber":303,"author":{"gitId":"-"},"content":"to see what the changes entail.","lastModifiedDate":"2020-07-29"},{"lineNumber":304,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":305,"author":{"gitId":"-"},"content":"## Finalizing the UI","lastModifiedDate":"2020-07-29"},{"lineNumber":306,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":307,"author":{"gitId":"cwnm"},"content":"Now that we have finalized the `client` class and its dependencies, we can now bind the `Remark` field to the UI.","lastModifiedDate":"2022-03-04"},{"lineNumber":308,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":309,"author":{"gitId":"-"},"content":"Just add [this one line of code!](https://github.com/se-edu/addressbook-level3/commit/5b98fee11b6b3f5749b6b943c4f3bd3aa049b692)","lastModifiedDate":"2020-07-29"},{"lineNumber":310,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":311,"author":{"gitId":"cwnm"},"content":"**`clientCard.java`:**","lastModifiedDate":"2022-03-04"},{"lineNumber":312,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":313,"author":{"gitId":"-"},"content":"``` java","lastModifiedDate":"2020-07-29"},{"lineNumber":314,"author":{"gitId":"cwnm"},"content":"public clientCard(client client, int displayedIndex) {","lastModifiedDate":"2022-03-04"},{"lineNumber":315,"author":{"gitId":"-"},"content":"    //...","lastModifiedDate":"2020-07-29"},{"lineNumber":316,"author":{"gitId":"cwnm"},"content":"    remark.setText(client.getRemark().value);","lastModifiedDate":"2022-03-04"},{"lineNumber":317,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-07-29"},{"lineNumber":318,"author":{"gitId":"-"},"content":"```","lastModifiedDate":"2020-07-29"},{"lineNumber":319,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":320,"author":{"gitId":"-"},"content":"![The remark label is bound properly!](../images/add-remark/RemarkBound.png)","lastModifiedDate":"2020-07-29"},{"lineNumber":321,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":322,"author":{"gitId":"-"},"content":"## Putting everything together","lastModifiedDate":"2020-07-29"},{"lineNumber":323,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":324,"author":{"gitId":"-"},"content":"After the previous step, we notice a peculiar regression — we went from displaying something to nothing at all. However, this is expected behavior as we are yet to update the `RemarkCommand` to make use of the code we\u0027ve been adding in the last few steps.","lastModifiedDate":"2020-07-29"},{"lineNumber":325,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":326,"author":{"gitId":"-"},"content":"### Update `RemarkCommand` and `RemarkCommandParser`","lastModifiedDate":"2020-07-29"},{"lineNumber":327,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":328,"author":{"gitId":"cwnm"},"content":"In this last step, we modify `RemarkCommand#execute()` to change the `Remark` of a `client`. Since all fields in a `client` are immutable, we create a new instance of a `client` with the values that we want and","lastModifiedDate":"2022-03-04"},{"lineNumber":329,"author":{"gitId":"cwnm"},"content":"save it with `Model#setclient()`.","lastModifiedDate":"2022-03-04"},{"lineNumber":330,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":331,"author":{"gitId":"-"},"content":"**`RemarkCommand.java`:**","lastModifiedDate":"2020-07-29"},{"lineNumber":332,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":333,"author":{"gitId":"-"},"content":"``` java","lastModifiedDate":"2020-07-29"},{"lineNumber":334,"author":{"gitId":"-"},"content":"//...","lastModifiedDate":"2020-07-29"},{"lineNumber":335,"author":{"gitId":"cwnm"},"content":"    public static final String MESSAGE_ADD_REMARK_SUCCESS \u003d \"Added remark to client: %1$s\";","lastModifiedDate":"2022-03-04"},{"lineNumber":336,"author":{"gitId":"cwnm"},"content":"    public static final String MESSAGE_DELETE_REMARK_SUCCESS \u003d \"Removed remark from client: %1$s\";","lastModifiedDate":"2022-03-04"},{"lineNumber":337,"author":{"gitId":"-"},"content":"//...","lastModifiedDate":"2020-07-29"},{"lineNumber":338,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2020-07-29"},{"lineNumber":339,"author":{"gitId":"-"},"content":"    public CommandResult execute(Model model) throws CommandException {","lastModifiedDate":"2020-07-29"},{"lineNumber":340,"author":{"gitId":"cwnm"},"content":"        List\u003cclient\u003e lastShownList \u003d model.getFilteredclientList();","lastModifiedDate":"2022-03-04"},{"lineNumber":341,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":342,"author":{"gitId":"-"},"content":"        if (index.getZeroBased() \u003e\u003d lastShownList.size()) {","lastModifiedDate":"2020-07-29"},{"lineNumber":343,"author":{"gitId":"cwnm"},"content":"            throw new CommandException(Messages.MESSAGE_INVALID_client_DISPLAYED_INDEX);","lastModifiedDate":"2022-03-04"},{"lineNumber":344,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2020-07-29"},{"lineNumber":345,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":346,"author":{"gitId":"cwnm"},"content":"        client clientToEdit \u003d lastShownList.get(index.getZeroBased());","lastModifiedDate":"2022-03-04"},{"lineNumber":347,"author":{"gitId":"cwnm"},"content":"        client editedClient \u003d new client(","lastModifiedDate":"2022-03-04"},{"lineNumber":348,"author":{"gitId":"cwnm"},"content":"                clientToEdit.getName(), clientToEdit.getPhone(), clientToEdit.getEmail(),","lastModifiedDate":"2022-03-04"},{"lineNumber":349,"author":{"gitId":"cwnm"},"content":"                clientToEdit.getAddress(), remark, clientToEdit.getTags());","lastModifiedDate":"2022-03-04"},{"lineNumber":350,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":351,"author":{"gitId":"cwnm"},"content":"        model.setclient(clientToEdit, editedClient);","lastModifiedDate":"2022-03-04"},{"lineNumber":352,"author":{"gitId":"cwnm"},"content":"        model.updateFilteredclientList(PREDICATE_SHOW_ALL_clientS);","lastModifiedDate":"2022-03-04"},{"lineNumber":353,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":354,"author":{"gitId":"cwnm"},"content":"        return new CommandResult(generateSuccessMessage(editedClient));","lastModifiedDate":"2022-03-04"},{"lineNumber":355,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2020-07-29"},{"lineNumber":356,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":357,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2020-07-29"},{"lineNumber":358,"author":{"gitId":"-"},"content":"     * Generates a command execution success message based on whether","lastModifiedDate":"2021-08-01"},{"lineNumber":359,"author":{"gitId":"-"},"content":"     * the remark is added to or removed from","lastModifiedDate":"2021-08-01"},{"lineNumber":360,"author":{"gitId":"cwnm"},"content":"     * {@code clientToEdit}.","lastModifiedDate":"2022-03-04"},{"lineNumber":361,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2020-07-29"},{"lineNumber":362,"author":{"gitId":"cwnm"},"content":"    private String generateSuccessMessage(client clientToEdit) {","lastModifiedDate":"2022-03-04"},{"lineNumber":363,"author":{"gitId":"-"},"content":"        String message \u003d !remark.value.isEmpty() ? MESSAGE_ADD_REMARK_SUCCESS : MESSAGE_DELETE_REMARK_SUCCESS;","lastModifiedDate":"2020-07-29"},{"lineNumber":364,"author":{"gitId":"cwnm"},"content":"        return String.format(message, clientToEdit);","lastModifiedDate":"2022-03-04"},{"lineNumber":365,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2020-07-29"},{"lineNumber":366,"author":{"gitId":"-"},"content":"```","lastModifiedDate":"2020-07-29"},{"lineNumber":367,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":368,"author":{"gitId":"-"},"content":"![Congratulations!](../images/add-remark/RemarkComplete.png)","lastModifiedDate":"2020-07-29"},{"lineNumber":369,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":370,"author":{"gitId":"-"},"content":"## Writing tests","lastModifiedDate":"2020-07-29"},{"lineNumber":371,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":372,"author":{"gitId":"-"},"content":"Tests are crucial to ensuring that bugs don’t slip into the codebase unnoticed. This is especially true for large code bases where a change might lead to unintended behavior.","lastModifiedDate":"2020-07-29"},{"lineNumber":373,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":374,"author":{"gitId":"-"},"content":"Let’s verify the correctness of our code by writing some tests!","lastModifiedDate":"2020-07-29"},{"lineNumber":375,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":376,"author":{"gitId":"-"},"content":"Of course you can simply add the test cases manually, like you\u0027ve been doing all along this tutorial. The result would be like the test cases in [here](https://github.com/se-edu/addressbook-level3/commit/fac8f3fd855d55831ca0cc73313b5943d49d4d6e#diff-ff58f7c10338b34f76645df49b71ecb2bafaf7611b20e7ff59ebc98475538a01). Alternatively, you can get the help of IntelliJ to generate the skeletons of the test cases, as explained in the next section.","lastModifiedDate":"2022-01-02"},{"lineNumber":377,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-08-01"},{"lineNumber":378,"author":{"gitId":"-"},"content":"### Automatically generating tests","lastModifiedDate":"2020-07-29"},{"lineNumber":379,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":380,"author":{"gitId":"-"},"content":"The goal is to write effective and efficient tests to ensure that `RemarkCommand#execute()` behaves as expected.","lastModifiedDate":"2020-07-29"},{"lineNumber":381,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":382,"author":{"gitId":"-"},"content":"The convention for test names is `methodName_testScenario_expectedResult`. An example would be","lastModifiedDate":"2020-07-29"},{"lineNumber":383,"author":{"gitId":"-"},"content":"`execute_filteredList_success`.","lastModifiedDate":"2020-07-29"},{"lineNumber":384,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":385,"author":{"gitId":"-"},"content":"Let’s create a test for `RemarkCommand#execute()` to test that adding a remark works. On `IntelliJ IDEA` you can bring up the context menu and choose to `Go To` \\\u003e `Test` or use the appropriate keyboard shortcut.","lastModifiedDate":"2020-07-29"},{"lineNumber":386,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":387,"author":{"gitId":"-"},"content":"![Using the context menu to jump to tests](../images/add-remark/ContextMenu.png)","lastModifiedDate":"2020-07-29"},{"lineNumber":388,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":389,"author":{"gitId":"-"},"content":"Then, create a test for the `execute` method.","lastModifiedDate":"2020-07-29"},{"lineNumber":390,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":391,"author":{"gitId":"-"},"content":"![Creating a test for `execute`.](../images/add-remark/CreateTest.png)","lastModifiedDate":"2020-07-29"},{"lineNumber":392,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":393,"author":{"gitId":"-"},"content":"Following convention, let’s change the name of the generated method to `execute_addRemarkUnfilteredList_success`.","lastModifiedDate":"2020-07-29"},{"lineNumber":394,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":395,"author":{"gitId":"-"},"content":"Let’s use the utility functions provided in `CommandTestUtil`. The functions ensure that commands produce the expected `CommandResult` and output the correct message. In this case, `CommandTestUtil#assertCommandSuccess` is the best fit as we are testing that a `RemarkCommand` will successfully add a `Remark`.","lastModifiedDate":"2020-07-29"},{"lineNumber":396,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":397,"author":{"gitId":"-"},"content":"You should end up with a test that looks something like [this](https://github.com/se-edu/addressbook-level3/commit/fac8f3fd855d55831ca0cc73313b5943d49d4d6e#diff-ff58f7c10338b34f76645df49b71ecb2bafaf7611b20e7ff59ebc98475538a01R36-R49).","lastModifiedDate":"2022-01-02"},{"lineNumber":398,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":399,"author":{"gitId":"-"},"content":"## Conclusion","lastModifiedDate":"2020-07-29"},{"lineNumber":400,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":401,"author":{"gitId":"-"},"content":"This concludes the tutorial for adding a new `Command` to AddressBook.","lastModifiedDate":"2020-07-29"}],"authorContributionMap":{"-":361,"cwnm":40}},{"path":"docs/tutorials/RemovingFields.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"---","lastModifiedDate":"2020-05-23"},{"lineNumber":2,"author":{"gitId":"-"},"content":"layout: page","lastModifiedDate":"2020-05-23"},{"lineNumber":3,"author":{"gitId":"-"},"content":"title: \"Tutorial: Removing Fields\"","lastModifiedDate":"2020-05-23"},{"lineNumber":4,"author":{"gitId":"-"},"content":"---","lastModifiedDate":"2020-05-23"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":6,"author":{"gitId":"-"},"content":"\u003e Perfection is achieved, not when there is nothing more to add, but when there is nothing left to take away.","lastModifiedDate":"2020-05-23"},{"lineNumber":7,"author":{"gitId":"-"},"content":"\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":8,"author":{"gitId":"-"},"content":"\u003e —  Antoine de Saint-Exupery","lastModifiedDate":"2020-05-23"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":10,"author":{"gitId":"-"},"content":"When working on an existing code base, you will most likely find that some features that are no longer necessary.","lastModifiedDate":"2021-08-01"},{"lineNumber":11,"author":{"gitId":"cwnm"},"content":"This tutorial aims to give you some practice on such a code \u0027removal\u0027 activity by removing the `address` field from `client` class.","lastModifiedDate":"2022-03-04"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-08-01"},{"lineNumber":13,"author":{"gitId":"-"},"content":"\u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-success\"\u003e","lastModifiedDate":"2021-08-01"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-08-01"},{"lineNumber":15,"author":{"gitId":"-"},"content":"**If you have done the [Add `remark` command tutorial](AddRemark.html)  already**, you should know where the code had to be updated to add the field `remark`. From that experience, you can deduce where the code needs to be changed to _remove_ that field too. The removing of the `address` field can be done similarly.","lastModifiedDate":"2021-08-01"},{"lineNumber":16,"author":{"gitId":"-"},"content":"\u003cbr\u003e","lastModifiedDate":"2021-08-01"},{"lineNumber":17,"author":{"gitId":"-"},"content":"\u003cbr\u003e","lastModifiedDate":"2021-08-01"},{"lineNumber":18,"author":{"gitId":"-"},"content":"However, if you have no such prior knowledge, removing a field can take a quite a bit of detective work. This tutorial takes you through that process. **At least have a read even if you don\u0027t actually do the steps yourself.**","lastModifiedDate":"2021-08-01"},{"lineNumber":19,"author":{"gitId":"-"},"content":"\u003c/div\u003e","lastModifiedDate":"2021-08-01"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":22,"author":{"gitId":"-"},"content":"* Table of Contents","lastModifiedDate":"2020-05-23"},{"lineNumber":23,"author":{"gitId":"-"},"content":"{:toc}","lastModifiedDate":"2020-05-23"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":25,"author":{"gitId":"-"},"content":"## Safely deleting `Address`","lastModifiedDate":"2020-05-23"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":27,"author":{"gitId":"-"},"content":"IntelliJ IDEA provides a refactoring tool that can identify *most* parts of a removal easily. Let’s try to use it as much as we can.","lastModifiedDate":"2021-08-01"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":29,"author":{"gitId":"-"},"content":"### Assisted refactoring","lastModifiedDate":"2020-05-23"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":31,"author":{"gitId":"cwnm"},"content":"The `address` field in `client` is actually an instance of the `seedu.address.model.client.Address` class. Since removing the `Address` class will break the application, we start by identifying `Address`\u0027s usages. This allows us to see code that depends on `Address` to function properly and edit them on a case-by-case basis. Right-click the `Address` class and select `Refactor` \\\u003e `Safe Delete` through the menu.","lastModifiedDate":"2022-03-04"},{"lineNumber":32,"author":{"gitId":"-"},"content":"* :bulb: To make things simpler, you can unselect the options `Search in comments and strings` and `Search for text occurrences`","lastModifiedDate":"2021-08-01"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":34,"author":{"gitId":"-"},"content":"![Usages detected](../images/remove/UnsafeDelete.png)","lastModifiedDate":"2020-05-23"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":36,"author":{"gitId":"-"},"content":"Choose to `View Usages` and you should be presented with a list of `Safe Delete Conflicts`. These conflicts describe locations in which the `Address` class is used.","lastModifiedDate":"2020-05-23"},{"lineNumber":37,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":38,"author":{"gitId":"-"},"content":"![List of conflicts](../images/remove/SafeDeleteConflicts.png)","lastModifiedDate":"2020-05-23"},{"lineNumber":39,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":40,"author":{"gitId":"cwnm"},"content":"Remove usages of `Address` by performing `Safe Delete`s on each entry i.e., double-click on the entry (which takes you to the code in concern, right-click on that entity, and choose `Refactor` -\u003e `Safe delete` as before). You will need to exercise discretion when removing usages of `Address`. Functions like `ParserUtil#parseAddress()` can be safely removed but its usages must be removed as well. Other usages like in `EditclientDescriptor` may require more careful inspection.","lastModifiedDate":"2022-03-04"},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":42,"author":{"gitId":"cwnm"},"content":"Let’s try removing references to `Address` in `EditclientDescriptor`.","lastModifiedDate":"2022-03-04"},{"lineNumber":43,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":44,"author":{"gitId":"cwnm"},"content":"1. Safe delete the field `address` in `EditclientDescriptor`.","lastModifiedDate":"2022-03-04"},{"lineNumber":45,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":46,"author":{"gitId":"-"},"content":"1. Select `Yes` when prompted to remove getters and setters.","lastModifiedDate":"2020-05-23"},{"lineNumber":47,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":48,"author":{"gitId":"-"},"content":"1. Select `View Usages` again.\u003cbr\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":49,"author":{"gitId":"-"},"content":"   ![UnsafeDeleteOnField](../images/remove/UnsafeDeleteOnField.png)","lastModifiedDate":"2020-05-23"},{"lineNumber":50,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":51,"author":{"gitId":"-"},"content":"1. Remove the usages of `address` and select `Do refactor` when you are done.","lastModifiedDate":"2020-05-23"},{"lineNumber":52,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":53,"author":{"gitId":"-"},"content":"   \u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-primary\"\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":54,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":55,"author":{"gitId":"cwnm"},"content":"   :bulb: **Tip:** Removing usages may result in errors. Exercise discretion and fix them. For example, removing the `address` field from the `client` class will require you to modify its constructor.","lastModifiedDate":"2022-03-04"},{"lineNumber":56,"author":{"gitId":"-"},"content":"   \u003c/div\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":57,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":58,"author":{"gitId":"-"},"content":"1. Repeat the steps for the remaining usages of `Address`","lastModifiedDate":"2020-05-23"},{"lineNumber":59,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":60,"author":{"gitId":"-"},"content":"After you are done, verify that the application still works by compiling and running it again.","lastModifiedDate":"2020-05-23"},{"lineNumber":61,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":62,"author":{"gitId":"-"},"content":"### Manual refactoring","lastModifiedDate":"2020-05-23"},{"lineNumber":63,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":64,"author":{"gitId":"-"},"content":"Unfortunately, there are usages of `Address` that IntelliJ IDEA cannot identify. You can find them by searching for instances of the word `address` in your code (`Edit` \\\u003e `Find` \\\u003e `Find in path`).","lastModifiedDate":"2020-05-23"},{"lineNumber":65,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":66,"author":{"gitId":"cwnm"},"content":"Places of interest to look out for would be resources used by the application. `main/resources` contains images and `fxml` files used by the application and `test/resources` contains test data. For example, there is a `$address` in each `clientCard` that has not been removed nor identified.","lastModifiedDate":"2022-03-04"},{"lineNumber":67,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":68,"author":{"gitId":"-"},"content":"![$address](../images/remove/$address.png)","lastModifiedDate":"2020-05-23"},{"lineNumber":69,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":70,"author":{"gitId":"cwnm"},"content":"A quick look at the `clientCard` class and its `fxml` file quickly reveals why it slipped past the automated refactoring.","lastModifiedDate":"2022-03-04"},{"lineNumber":71,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":72,"author":{"gitId":"cwnm"},"content":"**`clientCard.java`**","lastModifiedDate":"2022-03-04"},{"lineNumber":73,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":74,"author":{"gitId":"-"},"content":"``` java","lastModifiedDate":"2020-05-23"},{"lineNumber":75,"author":{"gitId":"-"},"content":"...","lastModifiedDate":"2020-05-23"},{"lineNumber":76,"author":{"gitId":"-"},"content":"@FXML","lastModifiedDate":"2020-05-23"},{"lineNumber":77,"author":{"gitId":"-"},"content":"private Label address;","lastModifiedDate":"2020-05-23"},{"lineNumber":78,"author":{"gitId":"-"},"content":"...","lastModifiedDate":"2020-05-23"},{"lineNumber":79,"author":{"gitId":"-"},"content":"```","lastModifiedDate":"2020-05-23"},{"lineNumber":80,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":81,"author":{"gitId":"cwnm"},"content":"**`clientCard.fxml`**","lastModifiedDate":"2022-03-04"},{"lineNumber":82,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":83,"author":{"gitId":"-"},"content":"``` xml","lastModifiedDate":"2020-05-23"},{"lineNumber":84,"author":{"gitId":"-"},"content":"...","lastModifiedDate":"2020-05-23"},{"lineNumber":85,"author":{"gitId":"-"},"content":"\u003cLabel fx:id\u003d\"phone\" styleClass\u003d\"cell_small_label\" text\u003d\"\\$phone\" /\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":86,"author":{"gitId":"-"},"content":"\u003cLabel fx:id\u003d\"address\" styleClass\u003d\"cell_small_label\" text\u003d\"\\$address\" /\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":87,"author":{"gitId":"-"},"content":"\u003cLabel fx:id\u003d\"email\" styleClass\u003d\"cell_small_label\" text\u003d\"\\$email\" /\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":88,"author":{"gitId":"-"},"content":"...","lastModifiedDate":"2020-05-23"},{"lineNumber":89,"author":{"gitId":"-"},"content":"```","lastModifiedDate":"2020-05-23"},{"lineNumber":90,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":91,"author":{"gitId":"-"},"content":"After removing the `Label`, we can proceed to formally test our code. If everything went well, you should have most of your tests pass. Fix any remaining errors until the tests all pass.","lastModifiedDate":"2020-05-23"},{"lineNumber":92,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":93,"author":{"gitId":"-"},"content":"## Tidying up","lastModifiedDate":"2020-05-23"},{"lineNumber":94,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":95,"author":{"gitId":"-"},"content":"At this point, your application is working as intended and all your tests are passing. What’s left to do is to clean up references to `Address` in test data and documentation.","lastModifiedDate":"2020-05-23"},{"lineNumber":96,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":97,"author":{"gitId":"-"},"content":"In `src/test/data/`, data meant for testing purposes are stored. While keeping the `address` field in the json files does not cause the tests to fail, it is not good practice to let cruft from old features accumulate.","lastModifiedDate":"2020-05-23"},{"lineNumber":98,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":99,"author":{"gitId":"cwnm"},"content":"**`invalidclientAddressBook.json`:**","lastModifiedDate":"2022-03-04"},{"lineNumber":100,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":101,"author":{"gitId":"-"},"content":"```json","lastModifiedDate":"2020-05-23"},{"lineNumber":102,"author":{"gitId":"-"},"content":"{","lastModifiedDate":"2020-05-23"},{"lineNumber":103,"author":{"gitId":"cwnm"},"content":"  \"clients\": [ {","lastModifiedDate":"2022-03-04"},{"lineNumber":104,"author":{"gitId":"cwnm"},"content":"    \"name\": \"client with invalid name field: Ha!ns Mu@ster\",","lastModifiedDate":"2022-03-04"},{"lineNumber":105,"author":{"gitId":"-"},"content":"    \"phone\": \"9482424\",","lastModifiedDate":"2020-05-23"},{"lineNumber":106,"author":{"gitId":"-"},"content":"    \"email\": \"hans@example.com\",","lastModifiedDate":"2020-05-23"},{"lineNumber":107,"author":{"gitId":"-"},"content":"    \"address\": \"4th street\"","lastModifiedDate":"2020-05-23"},{"lineNumber":108,"author":{"gitId":"-"},"content":"  } ]","lastModifiedDate":"2020-05-23"},{"lineNumber":109,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":110,"author":{"gitId":"-"},"content":"```","lastModifiedDate":"2020-05-23"},{"lineNumber":111,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":112,"author":{"gitId":"-"},"content":"You can go through each individual `json` file and manually remove the `address` field.","lastModifiedDate":"2020-05-23"}],"authorContributionMap":{"-":99,"cwnm":13}},{"path":"docs/tutorials/TracingCode.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"---","lastModifiedDate":"2020-05-23"},{"lineNumber":2,"author":{"gitId":"-"},"content":"layout: page","lastModifiedDate":"2020-05-23"},{"lineNumber":3,"author":{"gitId":"-"},"content":"title: \"Tutorial: Tracing code\"","lastModifiedDate":"2020-05-23"},{"lineNumber":4,"author":{"gitId":"-"},"content":"---","lastModifiedDate":"2020-05-23"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":6,"author":{"gitId":"-"},"content":"\u003e Indeed, the ratio of time spent reading versus writing is well over 10 to 1. We are constantly reading old code as part of the effort to write new code. …​\\[Therefore,\\] making it easy to read makes it easier to write.","lastModifiedDate":"2020-05-23"},{"lineNumber":7,"author":{"gitId":"-"},"content":"\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":8,"author":{"gitId":"-"},"content":"\u003e —  Robert C. Martin Clean Code: A Handbook of Agile Software Craftsmanship","lastModifiedDate":"2020-05-23"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":10,"author":{"gitId":"-"},"content":"When trying to understand an unfamiliar code base, one common strategy used is to trace some representative execution path through the code base. One easy way to trace an execution path is to use a debugger to step through the code. In this tutorial, you will be using the IntelliJ IDEA’s debugger to trace the execution path of a specific user command.","lastModifiedDate":"2020-05-23"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":12,"author":{"gitId":"-"},"content":"* Table of Contents","lastModifiedDate":"2020-05-23"},{"lineNumber":13,"author":{"gitId":"-"},"content":"{:toc}","lastModifiedDate":"2020-05-23"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":15,"author":{"gitId":"-"},"content":"## Before we start","lastModifiedDate":"2020-05-23"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":17,"author":{"gitId":"-"},"content":"Before we jump into the code, it is useful to get an idea of the overall structure and the high-level behavior of the application. This is provided in the \u0027Architecture\u0027 section of the developer guide. In particular, the architecture diagram (reproduced below), tells us that the App consists of several components.","lastModifiedDate":"2020-05-23"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":19,"author":{"gitId":"-"},"content":"![ArchitectureDiagram](../images/ArchitectureDiagram.png)","lastModifiedDate":"2020-05-23"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":21,"author":{"gitId":"-"},"content":"It also has a sequence diagram (reproduced below) that tells us how a command propagates through the App.","lastModifiedDate":"2020-05-23"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":23,"author":{"gitId":"-"},"content":"\u003cimg src\u003d\"../images/ArchitectureSequenceDiagram.png\" width\u003d\"550\" /\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":25,"author":{"gitId":"-"},"content":"Note how the diagram shows only the execution flows _between_ the main components. That is, it does not show details of the execution path *inside* each component. By hiding those details, the diagram aims to inform the reader about the overall execution path of a command without overwhelming the reader with too much details. In this tutorial, you aim to find those omitted details so that you get a more in-depth understanding of how the code works.","lastModifiedDate":"2021-07-31"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":27,"author":{"gitId":"-"},"content":"Before we proceed, ensure that you have done the following:","lastModifiedDate":"2020-05-23"},{"lineNumber":28,"author":{"gitId":"-"},"content":"1. Read the [*Architecture* section of the DG](../DeveloperGuide.md#architecture)","lastModifiedDate":"2020-05-23"},{"lineNumber":29,"author":{"gitId":"-"},"content":"1. Set up the project in Intellij IDEA","lastModifiedDate":"2020-05-23"},{"lineNumber":30,"author":{"gitId":"-"},"content":"1. Learn basic debugging features of Intellij IDEA","lastModifiedDate":"2020-05-23"},{"lineNumber":31,"author":{"gitId":"-"},"content":"   * If you are using a different IDE, we\u0027ll leave it to you to figure out the equivalent feature to use in your IDE.","lastModifiedDate":"2021-07-31"},{"lineNumber":32,"author":{"gitId":"-"},"content":"   * If you are not using an IDE, we\u0027ll let you figure out how to achieve the same using your coding toolchain.","lastModifiedDate":"2021-07-31"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":34,"author":{"gitId":"-"},"content":"## Setting a breakpoint","lastModifiedDate":"2020-05-23"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":36,"author":{"gitId":"-"},"content":"As you know, the first step of debugging is to put in a breakpoint where you want the debugger to pause the execution. For example, if you are trying to understand how the App starts up, you would put a breakpoint in the first statement of the `main` method.","lastModifiedDate":"2021-07-31"},{"lineNumber":37,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":38,"author":{"gitId":"-"},"content":"In our case, we would want to begin the tracing at the very point where the App start processing user input (i.e., somewhere in the UI component), and then trace through how the execution proceeds through the UI component. However, the execution path through a GUI is often somewhat obscure due to various *event-driven mechanisms* used by GUI frameworks, which happens to be the case here too. Therefore, let us put the breakpoint where the `UI` transfers control to the `Logic` component.","lastModifiedDate":"2021-07-31"},{"lineNumber":39,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":40,"author":{"gitId":"-"},"content":"\u003cimg src\u003d\"../images/ArchitectureSequenceDiagram.png\" width\u003d\"550\" /\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":42,"author":{"gitId":"-"},"content":"According to the sequence diagram you saw earlier (and repeated above for reference), the `UI` component yields control to the `Logic` component through a method named `execute`. Searching through the code base for an `execute()` method that belongs to the `Logic` component yields a promising candidate in `seedu.address.logic.Logic`.","lastModifiedDate":"2021-07-31"},{"lineNumber":43,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":44,"author":{"gitId":"-"},"content":"\u003cimg src\u003d\"../images/tracing/searchResultsForExecuteMethod.png\" /\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":45,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":46,"author":{"gitId":"-"},"content":"\u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-primary\"\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":47,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":48,"author":{"gitId":"-"},"content":":bulb: **Intellij Tip:** The [\u0027**Search Everywhere**\u0027 feature](https://www.jetbrains.com/help/idea/searching-everywhere.html) can be used here. In particular, the \u0027**Find Symbol**\u0027 (\u0027Symbol\u0027 here refers to methods, variables, classes etc.) variant of that feature is quite useful here as we are looking for a _method_ named `execute`, not simply the text `execute`.","lastModifiedDate":"2021-07-31"},{"lineNumber":49,"author":{"gitId":"-"},"content":"\u003c/div\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":50,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":51,"author":{"gitId":"-"},"content":"A quick look at the `seedu.address.logic.Logic` (an extract given below) confirms that this indeed might be what we’re looking for.","lastModifiedDate":"2021-07-31"},{"lineNumber":52,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":53,"author":{"gitId":"-"},"content":"```java","lastModifiedDate":"2021-07-31"},{"lineNumber":54,"author":{"gitId":"-"},"content":"public interface Logic {","lastModifiedDate":"2021-07-31"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2021-07-31"},{"lineNumber":56,"author":{"gitId":"-"},"content":"     * Executes the command and returns the result.","lastModifiedDate":"2021-07-31"},{"lineNumber":57,"author":{"gitId":"-"},"content":"     * @param commandText The command as entered by the user.","lastModifiedDate":"2021-07-31"},{"lineNumber":58,"author":{"gitId":"-"},"content":"     * @return the result of the command execution.","lastModifiedDate":"2021-07-31"},{"lineNumber":59,"author":{"gitId":"-"},"content":"     * @throws CommandException If an error occurs during command execution.","lastModifiedDate":"2021-07-31"},{"lineNumber":60,"author":{"gitId":"-"},"content":"     * @throws ParseException If an error occurs during parsing.","lastModifiedDate":"2021-07-31"},{"lineNumber":61,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2021-07-31"},{"lineNumber":62,"author":{"gitId":"-"},"content":"    CommandResult execute(String commandText) throws CommandException, ParseException;","lastModifiedDate":"2021-07-31"},{"lineNumber":63,"author":{"gitId":"cwnm"},"content":"","lastModifiedDate":"2022-03-04"},{"lineNumber":64,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2021-07-31"},{"lineNumber":65,"author":{"gitId":"-"},"content":"```","lastModifiedDate":"2021-07-31"},{"lineNumber":66,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":67,"author":{"gitId":"-"},"content":"But apparently, this is an interface, not a concrete implementation.","lastModifiedDate":"2021-07-31"},{"lineNumber":68,"author":{"gitId":"-"},"content":"That should be fine because the [Architecture section of the Developer Guide](../DeveloperGuide.html#architecture) tells us that components interact through interfaces. Here\u0027s the relevant diagram:","lastModifiedDate":"2021-07-31"},{"lineNumber":69,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":70,"author":{"gitId":"-"},"content":"\u003cimg src\u003d\"../images/ComponentManagers.png\" width\u003d\"300\" /\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":71,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":72,"author":{"gitId":"-"},"content":"Next, let\u0027s find out which statement(s) in the `UI` code is calling this method, thus transferring control from the `UI` to the `Logic`.","lastModifiedDate":"2021-07-31"},{"lineNumber":73,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":74,"author":{"gitId":"-"},"content":"\u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-primary\"\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":75,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":76,"author":{"gitId":"-"},"content":":bulb: **Intellij Tip:** The [\u0027**Find Usages**\u0027 feature](https://www.jetbrains.com/help/idea/find-highlight-usages.html#find-usages) can find from which parts of the code a class/method/variable is being used.","lastModifiedDate":"2021-07-31"},{"lineNumber":77,"author":{"gitId":"-"},"content":"\u003c/div\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":78,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":79,"author":{"gitId":"-"},"content":"![`Find Usages` tool window. `Edit` \\\u003e `Find` \\\u003e `Find Usages`.](../images/tracing/FindUsages.png)","lastModifiedDate":"2020-05-23"},{"lineNumber":80,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":81,"author":{"gitId":"-"},"content":"Bingo\\! `MainWindow#executeCommand()` seems to be exactly what we’re looking for\\!","lastModifiedDate":"2020-05-23"},{"lineNumber":82,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":83,"author":{"gitId":"-"},"content":"Now let’s set the breakpoint. First, double-click the item to reach the corresponding code. Once there, click on the left gutter to set a breakpoint, as shown below.","lastModifiedDate":"2020-05-23"},{"lineNumber":84,"author":{"gitId":"-"},"content":" ![LeftGutter](../images/tracing/LeftGutter.png)","lastModifiedDate":"2020-05-23"},{"lineNumber":85,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":86,"author":{"gitId":"-"},"content":"## Tracing the execution path","lastModifiedDate":"2020-05-23"},{"lineNumber":87,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":88,"author":{"gitId":"-"},"content":"Recall from the User Guide that the `edit` command has the format: `edit INDEX [n/NAME] [p/PHONE] [e/EMAIL] [a/ADDRESS] [t/TAG]…​` For this tutorial we will be issuing the command `edit 1 n/Alice Yeoh`.","lastModifiedDate":"2020-05-23"},{"lineNumber":89,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":90,"author":{"gitId":"-"},"content":"\u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-primary\"\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":91,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":92,"author":{"gitId":"-"},"content":":bulb: **Tip:** Over the course of the debugging session, you will encounter every major component in the application. Try to keep track of what happens inside the component and where the execution transfers to another component.","lastModifiedDate":"2021-07-31"},{"lineNumber":93,"author":{"gitId":"-"},"content":"\u003c/div\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":94,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":95,"author":{"gitId":"-"},"content":"1. To start the debugging session, simply `Run` \\\u003e `Debug Main`","lastModifiedDate":"2020-05-23"},{"lineNumber":96,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":97,"author":{"gitId":"-"},"content":"1. When the GUI appears, enter `edit 1 n/Alice Yeoh` into the command box and press `Enter`.","lastModifiedDate":"2021-07-31"},{"lineNumber":98,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":99,"author":{"gitId":"-"},"content":"1. The Debugger tool window should show up and show something like this:\u003cbr\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":100,"author":{"gitId":"-"},"content":"   ![DebuggerStep1](../images/tracing/DebuggerStep1.png)","lastModifiedDate":"2020-05-23"},{"lineNumber":101,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":102,"author":{"gitId":"-"},"content":"1. Use the _Show execution point_ feature to jump to the line of code that we stopped at:\u003cbr\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":103,"author":{"gitId":"-"},"content":"   ![ShowExecutionPoint](../images/tracing/ShowExecutionPoint.png)\u003cbr\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":104,"author":{"gitId":"-"},"content":"   `CommandResult commandResult \u003d logic.execute(commandText);` is the line that you end up at (i.e., the place where we put the breakpoint).","lastModifiedDate":"2021-07-31"},{"lineNumber":105,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":106,"author":{"gitId":"-"},"content":"1. We are interested in the `logic.execute(commandText)` portion of that line so let’s _Step in_ into that method call:\u003cbr\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":107,"author":{"gitId":"-"},"content":"    ![StepInto](../images/tracing/StepInto.png)","lastModifiedDate":"2020-05-23"},{"lineNumber":108,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":109,"author":{"gitId":"-"},"content":"1. We end up in `LogicManager#execute()` (not `Logic#execute` -- but this is expected because we know the `execute()` method in the `Logic` interface is actually implemented by the `LogicManager` class). Let’s take a look at the body of the method. Given below is the same code, with additional explanatory comments.","lastModifiedDate":"2021-07-31"},{"lineNumber":110,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":111,"author":{"gitId":"-"},"content":"   **LogicManager\\#execute().**","lastModifiedDate":"2020-05-23"},{"lineNumber":112,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":113,"author":{"gitId":"-"},"content":"   ``` java","lastModifiedDate":"2020-05-23"},{"lineNumber":114,"author":{"gitId":"-"},"content":"   @Override","lastModifiedDate":"2020-05-23"},{"lineNumber":115,"author":{"gitId":"-"},"content":"   public CommandResult execute(String commandText)","lastModifiedDate":"2020-05-23"},{"lineNumber":116,"author":{"gitId":"-"},"content":"           throws CommandException, ParseException {","lastModifiedDate":"2020-05-23"},{"lineNumber":117,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":118,"author":{"gitId":"-"},"content":"        //Logging, safe to ignore","lastModifiedDate":"2020-05-23"},{"lineNumber":119,"author":{"gitId":"-"},"content":"        logger.info(\"----------------[USER COMMAND][\" + commandText + \"]\");","lastModifiedDate":"2020-05-23"},{"lineNumber":120,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":121,"author":{"gitId":"-"},"content":"        CommandResult commandResult;","lastModifiedDate":"2020-05-23"},{"lineNumber":122,"author":{"gitId":"-"},"content":"        //Parse user input from String to a Command","lastModifiedDate":"2020-05-23"},{"lineNumber":123,"author":{"gitId":"-"},"content":"        Command command \u003d addressBookParser.parseCommand(commandText);","lastModifiedDate":"2020-05-23"},{"lineNumber":124,"author":{"gitId":"-"},"content":"        //Executes the Command and stores the result","lastModifiedDate":"2020-05-23"},{"lineNumber":125,"author":{"gitId":"-"},"content":"        commandResult \u003d command.execute(model);","lastModifiedDate":"2020-05-23"},{"lineNumber":126,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":127,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2020-05-23"},{"lineNumber":128,"author":{"gitId":"-"},"content":"            //We can deduce that the previous line of code modifies model in some way","lastModifiedDate":"2020-05-23"},{"lineNumber":129,"author":{"gitId":"-"},"content":"            // since it\u0027s being stored here.","lastModifiedDate":"2020-05-23"},{"lineNumber":130,"author":{"gitId":"-"},"content":"            storage.saveAddressBook(model.getAddressBook());","lastModifiedDate":"2020-05-23"},{"lineNumber":131,"author":{"gitId":"-"},"content":"        } catch (IOException ioe) {","lastModifiedDate":"2020-05-23"},{"lineNumber":132,"author":{"gitId":"-"},"content":"            throw new CommandException(FILE_OPS_ERROR_MESSAGE + ioe, ioe);","lastModifiedDate":"2020-05-23"},{"lineNumber":133,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2020-05-23"},{"lineNumber":134,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":135,"author":{"gitId":"-"},"content":"        return commandResult;","lastModifiedDate":"2020-05-23"},{"lineNumber":136,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2020-05-23"},{"lineNumber":137,"author":{"gitId":"-"},"content":"   ```","lastModifiedDate":"2020-05-23"},{"lineNumber":138,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":139,"author":{"gitId":"-"},"content":"1. `LogicManager#execute()` appears to delegate most of the heavy lifting to other components. Let’s take a closer look at each one.","lastModifiedDate":"2020-05-23"},{"lineNumber":140,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":141,"author":{"gitId":"-"},"content":"1. _Step over_ the logging code since it is of no interest to us now.","lastModifiedDate":"2021-07-31"},{"lineNumber":142,"author":{"gitId":"-"},"content":"   ![StepOver](../images/tracing/StepOver.png)","lastModifiedDate":"2021-07-31"},{"lineNumber":143,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":144,"author":{"gitId":"-"},"content":"1. _Step into_ the line where user input in parsed from a String to a Command, which should bring you to the `AddressBookParser#parseCommand()` method (partial code given below):","lastModifiedDate":"2021-07-31"},{"lineNumber":145,"author":{"gitId":"-"},"content":"   ``` java","lastModifiedDate":"2020-05-23"},{"lineNumber":146,"author":{"gitId":"-"},"content":"   public Command parseCommand(String userInput) throws ParseException {","lastModifiedDate":"2020-05-23"},{"lineNumber":147,"author":{"gitId":"-"},"content":"       ...","lastModifiedDate":"2020-05-23"},{"lineNumber":148,"author":{"gitId":"-"},"content":"       final String commandWord \u003d matcher.group(\"commandWord\");","lastModifiedDate":"2020-05-23"},{"lineNumber":149,"author":{"gitId":"-"},"content":"       final String arguments \u003d matcher.group(\"arguments\");","lastModifiedDate":"2020-05-23"},{"lineNumber":150,"author":{"gitId":"-"},"content":"       ...","lastModifiedDate":"2020-05-23"},{"lineNumber":151,"author":{"gitId":"-"},"content":"   ```","lastModifiedDate":"2020-05-23"},{"lineNumber":152,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":153,"author":{"gitId":"-"},"content":"1. _Step over_ the statements in that method until you reach the `switch` statement. The \u0027Variables\u0027 window now shows the value of both `commandWord` and `arguments`:\u003cbr\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":154,"author":{"gitId":"-"},"content":"    ![Variables](../images/tracing/Variables.png)","lastModifiedDate":"2020-05-23"},{"lineNumber":155,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":156,"author":{"gitId":"-"},"content":"1. We see that the value of `commandWord` is now `edit` but `arguments` is still not processed in any meaningful way.","lastModifiedDate":"2020-05-23"},{"lineNumber":157,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":158,"author":{"gitId":"-"},"content":"1. Stepping through the `switch` block, we end up at a call to `EditCommandParser().parse()` as expected (because the command we typed is an edit command).","lastModifiedDate":"2021-07-31"},{"lineNumber":159,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":160,"author":{"gitId":"-"},"content":"    ``` java","lastModifiedDate":"2020-05-23"},{"lineNumber":161,"author":{"gitId":"-"},"content":"    ...","lastModifiedDate":"2020-05-23"},{"lineNumber":162,"author":{"gitId":"-"},"content":"    case EditCommand.COMMAND_WORD:","lastModifiedDate":"2020-05-23"},{"lineNumber":163,"author":{"gitId":"-"},"content":"        return new EditCommandParser().parse(arguments);","lastModifiedDate":"2020-05-23"},{"lineNumber":164,"author":{"gitId":"-"},"content":"    ...","lastModifiedDate":"2020-05-23"},{"lineNumber":165,"author":{"gitId":"-"},"content":"    ```","lastModifiedDate":"2020-05-23"},{"lineNumber":166,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":167,"author":{"gitId":"-"},"content":"1. Let’s see what `EditCommandParser#parse()` does by stepping into it. You might have to click the \u0027step into\u0027 button multiple times here because there are two method calls in that statement: `EditCommandParser()` and `parse()`.","lastModifiedDate":"2021-07-31"},{"lineNumber":168,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":169,"author":{"gitId":"-"},"content":"   \u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-primary\"\u003e:bulb: **Intellij Tip:** Sometimes, you might end up stepping into functions that are not of interest. Simply use the `step out` button to get out of them!","lastModifiedDate":"2021-07-31"},{"lineNumber":170,"author":{"gitId":"-"},"content":"   \u003c/div\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":171,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":172,"author":{"gitId":"-"},"content":"1. Stepping through the method shows that it calls `ArgumentTokenizer#tokenize()` and `ParserUtil#parseIndex()` to obtain the arguments and index required.","lastModifiedDate":"2021-07-31"},{"lineNumber":173,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":174,"author":{"gitId":"cwnm"},"content":"1. The rest of the method seems to exhaustively check for the existence of each possible parameter of the `edit` command and store any possible changes in an `EditclientDescriptor`. Recall that we can verify the contents of `editclientDesciptor` through the \u0027Variables\u0027 window.\u003cbr\u003e","lastModifiedDate":"2022-03-04"},{"lineNumber":175,"author":{"gitId":"-"},"content":"   ![EditCommand](../images/tracing/EditCommand.png)","lastModifiedDate":"2020-05-23"},{"lineNumber":176,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":177,"author":{"gitId":"-"},"content":"1. As you just traced through some code involved in parsing a command, you can take a look at this class diagram to see where the various parsing-related classes you encountered fit into the design of the `Logic` component.","lastModifiedDate":"2021-07-31"},{"lineNumber":178,"author":{"gitId":"-"},"content":"   \u003cimg src\u003d\"../images/ParserClasses.png\" width\u003d\"600\"/\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":179,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":180,"author":{"gitId":"-"},"content":"1. Let’s continue stepping through until we return to `LogicManager#execute()`.","lastModifiedDate":"2020-05-23"},{"lineNumber":181,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":182,"author":{"gitId":"-"},"content":"    The sequence diagram below shows the details of the execution path through the Logic component. Does the execution path you traced in the code so far match the diagram?\u003cbr\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":183,"author":{"gitId":"-"},"content":"    ![Tracing an `edit` command through the Logic component](../images/tracing/LogicSequenceDiagram.png)","lastModifiedDate":"2020-05-23"},{"lineNumber":184,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":185,"author":{"gitId":"-"},"content":"1. Now, step over until you read the statement that calls the `execute()` method of the `EditCommand` object received, and step into that `execute()` method (partial code given below):","lastModifiedDate":"2021-07-31"},{"lineNumber":186,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":187,"author":{"gitId":"-"},"content":"   **`EditCommand#execute()`:**","lastModifiedDate":"2021-07-31"},{"lineNumber":188,"author":{"gitId":"-"},"content":"   ``` java","lastModifiedDate":"2020-05-23"},{"lineNumber":189,"author":{"gitId":"-"},"content":"   @Override","lastModifiedDate":"2020-05-23"},{"lineNumber":190,"author":{"gitId":"-"},"content":"   public CommandResult execute(Model model) throws CommandException {","lastModifiedDate":"2020-05-23"},{"lineNumber":191,"author":{"gitId":"-"},"content":"       ...","lastModifiedDate":"2020-05-23"},{"lineNumber":192,"author":{"gitId":"cwnm"},"content":"       client clientToEdit \u003d lastShownList.get(index.getZeroBased());","lastModifiedDate":"2022-03-04"},{"lineNumber":193,"author":{"gitId":"cwnm"},"content":"       client editedClient \u003d createEditedclient(clientToEdit, editclientDescriptor);","lastModifiedDate":"2022-03-04"},{"lineNumber":194,"author":{"gitId":"cwnm"},"content":"       if (!clientToEdit.isSameclient(editedClient) \u0026\u0026 model.hasclient(editedClient)) {","lastModifiedDate":"2022-03-04"},{"lineNumber":195,"author":{"gitId":"cwnm"},"content":"           throw new CommandException(MESSAGE_DUPLICATE_client);","lastModifiedDate":"2022-03-04"},{"lineNumber":196,"author":{"gitId":"-"},"content":"       }","lastModifiedDate":"2020-05-23"},{"lineNumber":197,"author":{"gitId":"cwnm"},"content":"       model.setclient(clientToEdit, editedClient);","lastModifiedDate":"2022-03-04"},{"lineNumber":198,"author":{"gitId":"cwnm"},"content":"       model.updateFilteredclientList(PREDICATE_SHOW_ALL_clientS);","lastModifiedDate":"2022-03-04"},{"lineNumber":199,"author":{"gitId":"cwnm"},"content":"       return new CommandResult(String.format(MESSAGE_EDIT_client_SUCCESS, editedClient));","lastModifiedDate":"2022-03-04"},{"lineNumber":200,"author":{"gitId":"-"},"content":"   }","lastModifiedDate":"2020-05-23"},{"lineNumber":201,"author":{"gitId":"-"},"content":"   ```","lastModifiedDate":"2020-05-23"},{"lineNumber":202,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":203,"author":{"gitId":"-"},"content":"1. As suspected, `command#execute()` does indeed make changes to the `model` object. Specifically,","lastModifiedDate":"2021-07-31"},{"lineNumber":204,"author":{"gitId":"cwnm"},"content":"   * it uses the `setclient()` method (defined in the interface `Model` and implemented in `ModelManager` as per the usual pattern) to update the client data.","lastModifiedDate":"2022-03-04"},{"lineNumber":205,"author":{"gitId":"cwnm"},"content":"   * it uses the `updateFilteredclientList` method to ask the `Model` to populate the \u0027filtered list\u0027 with _all_ clients.\u003cbr\u003e","lastModifiedDate":"2022-03-04"},{"lineNumber":206,"author":{"gitId":"cwnm"},"content":"     FYI, The \u0027filtered list\u0027 is the list of clients resulting from the most recent operation that will be shown to the user immediately after. For the `edit` command, we populate it with all the clients so that the user can see the edited client along with all other clients. If this was a `find` command, we would be setting that list to contain the search results instead.\u003cbr\u003e","lastModifiedDate":"2022-03-04"},{"lineNumber":207,"author":{"gitId":"cwnm"},"content":"     To provide some context, given below is the class diagram of the `Model` component. See if you can figure out where the \u0027filtered list\u0027 of clients is being tracked.","lastModifiedDate":"2022-03-04"},{"lineNumber":208,"author":{"gitId":"-"},"content":"     \u003cimg src\u003d\"../images/ModelClassDiagram.png\" width\u003d\"450\" /\u003e\u003cbr\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":209,"author":{"gitId":"-"},"content":"   * :bulb: This may be a good time to read through the [`Model` component section of the DG](../DeveloperGuide.html#model-component)","lastModifiedDate":"2021-07-31"},{"lineNumber":210,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":211,"author":{"gitId":"-"},"content":"1. As you step through the rest of the statements in the `EditCommand#execute()` method, you\u0027ll see that it creates a `CommandResult` object (containing information about the result of the execution) and returns it.\u003cbr\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":212,"author":{"gitId":"-"},"content":"   Advancing the debugger by one more step should take you back to the middle of the `LogicManager#execute()` method.\u003cbr\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":213,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":214,"author":{"gitId":"-"},"content":"1. Given that you have already seen quite a few classes in the `Logic` component in action, see if you can identify in this partial class diagram some of the classes you\u0027ve encountered so far, and see how they fit into the class structure of the `Logic` component:","lastModifiedDate":"2021-07-31"},{"lineNumber":215,"author":{"gitId":"-"},"content":"    \u003cimg src\u003d\"../images/LogicClassDiagram.png\" width\u003d\"550\"/\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":216,"author":{"gitId":"-"},"content":"   * :bulb: This may be a good time to read through the [`Logic` component section of the DG](../DeveloperGuide.html#logic-component)","lastModifiedDate":"2021-07-31"},{"lineNumber":217,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":218,"author":{"gitId":"-"},"content":"1. Similar to before, you can step over/into statements in the `LogicManager#execute()` method to examine how the control is transferred to the `Storage` component and what happens inside that component.","lastModifiedDate":"2021-07-31"},{"lineNumber":219,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":220,"author":{"gitId":"-"},"content":"   \u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-primary\"\u003e:bulb: **Intellij Tip:** When trying to step into a statement such as `storage.saveAddressBook(model.getAddressBook())` which contains multiple method calls, Intellij will let you choose (by clicking) which one you want to step into.","lastModifiedDate":"2021-07-31"},{"lineNumber":221,"author":{"gitId":"-"},"content":"   \u003c/div\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":222,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":223,"author":{"gitId":"-"},"content":"1.  As you step through the code inside the `Storage` component, you will eventually arrive at the `JsonAddressBook#saveAddressBook()` method which calls the `JsonSerializableAddressBook` constructor, to create an object that can be _serialized_ (i.e., stored in storage medium) in JSON format. That constructor is given below (with added line breaks for easier readability):","lastModifiedDate":"2021-07-31"},{"lineNumber":224,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":225,"author":{"gitId":"-"},"content":"    **`JsonSerializableAddressBook` constructor:**","lastModifiedDate":"2021-07-31"},{"lineNumber":226,"author":{"gitId":"-"},"content":"    ``` java","lastModifiedDate":"2020-05-23"},{"lineNumber":227,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2020-05-23"},{"lineNumber":228,"author":{"gitId":"-"},"content":"     * Converts a given {@code ReadOnlyAddressBook} into this class for Jackson use.","lastModifiedDate":"2020-05-23"},{"lineNumber":229,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2020-05-23"},{"lineNumber":230,"author":{"gitId":"-"},"content":"     * @param source future changes to this will not affect the created","lastModifiedDate":"2020-05-23"},{"lineNumber":231,"author":{"gitId":"-"},"content":"     * {@code JsonSerializableAddressBook}.","lastModifiedDate":"2020-05-23"},{"lineNumber":232,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2020-05-23"},{"lineNumber":233,"author":{"gitId":"-"},"content":"    public JsonSerializableAddressBook(ReadOnlyAddressBook source) {","lastModifiedDate":"2020-05-23"},{"lineNumber":234,"author":{"gitId":"cwnm"},"content":"        clients.addAll(","lastModifiedDate":"2022-03-04"},{"lineNumber":235,"author":{"gitId":"cwnm"},"content":"            source.getclientList()","lastModifiedDate":"2022-03-04"},{"lineNumber":236,"author":{"gitId":"-"},"content":"                  .stream()","lastModifiedDate":"2020-05-23"},{"lineNumber":237,"author":{"gitId":"cwnm"},"content":"                  .map(JsonAdaptedclient::new)","lastModifiedDate":"2022-03-04"},{"lineNumber":238,"author":{"gitId":"-"},"content":"                  .collect(Collectors.toList()));","lastModifiedDate":"2020-05-23"},{"lineNumber":239,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2020-05-23"},{"lineNumber":240,"author":{"gitId":"-"},"content":"    ```","lastModifiedDate":"2020-05-23"},{"lineNumber":241,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":242,"author":{"gitId":"cwnm"},"content":"1. It appears that a `JsonAdaptedclient` is created for each `client` and then added to the `JsonSerializableAddressBook`.","lastModifiedDate":"2022-03-04"},{"lineNumber":243,"author":{"gitId":"-"},"content":"   This is because regular Java objects need to go through an _adaptation_ for them to be suitable to be saved in JSON format.","lastModifiedDate":"2021-07-31"},{"lineNumber":244,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":245,"author":{"gitId":"-"},"content":"1. While you are stepping through the classes in the `Storage` component, here is the component\u0027s class diagram to help you understand how those classes fit into the structure of the component.\u003cbr\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":246,"author":{"gitId":"-"},"content":"   \u003cimg src\u003d\"../images/StorageClassDiagram.png\" width\u003d\"550\" /\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":247,"author":{"gitId":"-"},"content":"   * :bulb: This may be a good time to read through the [`Storage` component section of the DG](../DeveloperGuide.html#storage-component)","lastModifiedDate":"2021-07-31"},{"lineNumber":248,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":249,"author":{"gitId":"-"},"content":"1. We can continue to step through until you reach the end of the `LogicManager#execute()` method and return to the `MainWindow#executeCommand()` method (the place where we put the original breakpoint).","lastModifiedDate":"2021-07-31"},{"lineNumber":250,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":251,"author":{"gitId":"-"},"content":"1. Stepping into `resultDisplay.setFeedbackToUser(commandResult.getFeedbackToUser());`, we end up in:","lastModifiedDate":"2021-07-31"},{"lineNumber":252,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":253,"author":{"gitId":"-"},"content":"    **`ResultDisplay#setFeedbackToUser()`**","lastModifiedDate":"2021-07-31"},{"lineNumber":254,"author":{"gitId":"-"},"content":"    ``` java","lastModifiedDate":"2020-05-23"},{"lineNumber":255,"author":{"gitId":"-"},"content":"    public void setFeedbackToUser(String feedbackToUser) {","lastModifiedDate":"2020-05-23"},{"lineNumber":256,"author":{"gitId":"-"},"content":"        requireNonNull(feedbackToUser);","lastModifiedDate":"2020-05-23"},{"lineNumber":257,"author":{"gitId":"-"},"content":"        resultDisplay.setText(feedbackToUser);","lastModifiedDate":"2020-05-23"},{"lineNumber":258,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2020-05-23"},{"lineNumber":259,"author":{"gitId":"-"},"content":"    ```","lastModifiedDate":"2020-05-23"},{"lineNumber":260,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":261,"author":{"gitId":"-"},"content":"1. Finally, you can step through until you reach the end of`MainWindow#executeCommand()`.\u003cbr\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":262,"author":{"gitId":"-"},"content":"   :bulb: This may be a good time to read through the [`UI` component section of the DG](../DeveloperGuide.html#ui-component)","lastModifiedDate":"2021-07-31"},{"lineNumber":263,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":264,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":265,"author":{"gitId":"-"},"content":"## Conclusion","lastModifiedDate":"2020-05-23"},{"lineNumber":266,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":267,"author":{"gitId":"-"},"content":"In this tutorial, we traced a valid edit command from raw user input to the result being displayed to the user. From this tutorial, you learned more about how the various components work together to produce a response to a user command.","lastModifiedDate":"2021-07-31"},{"lineNumber":268,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":269,"author":{"gitId":"-"},"content":"Here are some quick questions you can try to answer based on your execution path tracing. In some cases, you can do further tracing for the given commands to find exactly what happens.","lastModifiedDate":"2021-07-31"},{"lineNumber":270,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":271,"author":{"gitId":"-"},"content":"1.  In this tutorial, we traced the \"happy path\" (i.e., no errors). What","lastModifiedDate":"2020-05-23"},{"lineNumber":272,"author":{"gitId":"-"},"content":"    do you think will happen if we traced the following commands","lastModifiedDate":"2020-05-23"},{"lineNumber":273,"author":{"gitId":"-"},"content":"    instead? What exceptions do you think will be thrown (if any), where","lastModifiedDate":"2020-05-23"},{"lineNumber":274,"author":{"gitId":"-"},"content":"    will the exceptions be thrown and where will they be handled?","lastModifiedDate":"2020-05-23"},{"lineNumber":275,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":276,"author":{"gitId":"-"},"content":"    1.  `redit 1 n/Alice Yu`","lastModifiedDate":"2020-05-23"},{"lineNumber":277,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":278,"author":{"gitId":"-"},"content":"    2.  `edit 0 n/Alice Yu`","lastModifiedDate":"2020-05-23"},{"lineNumber":279,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":280,"author":{"gitId":"-"},"content":"    3.  `edit 1 n/Alex Yeoh`","lastModifiedDate":"2020-05-23"},{"lineNumber":281,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":282,"author":{"gitId":"-"},"content":"    4.  `edit 1`","lastModifiedDate":"2020-05-23"},{"lineNumber":283,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":284,"author":{"gitId":"-"},"content":"    5.  `edit 1 n/アリス ユー`","lastModifiedDate":"2020-05-23"},{"lineNumber":285,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":286,"author":{"gitId":"-"},"content":"    6.  `edit 1 t/one t/two t/three t/one`","lastModifiedDate":"2020-05-23"},{"lineNumber":287,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":288,"author":{"gitId":"-"},"content":"2.  What components will you have to modify to perform the following","lastModifiedDate":"2020-05-23"},{"lineNumber":289,"author":{"gitId":"-"},"content":"    enhancements to the application?","lastModifiedDate":"2020-05-23"},{"lineNumber":290,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":291,"author":{"gitId":"-"},"content":"    1.  Make command words case-insensitive","lastModifiedDate":"2020-05-23"},{"lineNumber":292,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":293,"author":{"gitId":"-"},"content":"    2.  Allow `delete` to remove more than one index at a time","lastModifiedDate":"2020-05-23"},{"lineNumber":294,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":295,"author":{"gitId":"-"},"content":"    3.  Save the address book in the CSV format instead","lastModifiedDate":"2020-05-23"},{"lineNumber":296,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":297,"author":{"gitId":"-"},"content":"    4.  Add a new command","lastModifiedDate":"2020-05-23"},{"lineNumber":298,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":299,"author":{"gitId":"cwnm"},"content":"    5.  Add a new field to `client`","lastModifiedDate":"2022-03-04"},{"lineNumber":300,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":301,"author":{"gitId":"-"},"content":"    6.  Add a new entity to the address book","lastModifiedDate":"2020-05-23"}],"authorContributionMap":{"-":283,"cwnm":18}},{"path":"src/main/java/seedu/address/MainApp.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address;","lastModifiedDate":"2016-08-08"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.io.IOException;","lastModifiedDate":"2017-01-19"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-04-21"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.util.Optional;","lastModifiedDate":"2017-01-19"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.util.logging.Logger;","lastModifiedDate":"2017-01-19"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import javafx.application.Application;","lastModifiedDate":"2016-08-26"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import javafx.stage.Stage;","lastModifiedDate":"2016-08-26"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.Config;","lastModifiedDate":"2016-09-24"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.LogsCenter;","lastModifiedDate":"2016-09-24"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.Version;","lastModifiedDate":"2016-09-24"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import seedu.address.commons.exceptions.DataConversionException;","lastModifiedDate":"2016-09-24"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import seedu.address.commons.util.ConfigUtil;","lastModifiedDate":"2016-10-07"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import seedu.address.commons.util.StringUtil;","lastModifiedDate":"2016-09-24"},{"lineNumber":16,"author":{"gitId":"-"},"content":"import seedu.address.logic.Logic;","lastModifiedDate":"2016-09-25"},{"lineNumber":17,"author":{"gitId":"-"},"content":"import seedu.address.logic.LogicManager;","lastModifiedDate":"2016-09-24"},{"lineNumber":18,"author":{"gitId":"-"},"content":"import seedu.address.model.AddressBook;","lastModifiedDate":"2017-01-18"},{"lineNumber":19,"author":{"gitId":"WJunHong"},"content":"import seedu.address.model.BuyerAddressBook;","lastModifiedDate":"2022-03-23"},{"lineNumber":20,"author":{"gitId":"-"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2017-01-18"},{"lineNumber":21,"author":{"gitId":"-"},"content":"import seedu.address.model.ModelManager;","lastModifiedDate":"2017-01-18"},{"lineNumber":22,"author":{"gitId":"-"},"content":"import seedu.address.model.ReadOnlyAddressBook;","lastModifiedDate":"2017-01-18"},{"lineNumber":23,"author":{"gitId":"WJunHong"},"content":"import seedu.address.model.ReadOnlyBuyerAddressBook;","lastModifiedDate":"2022-03-23"},{"lineNumber":24,"author":{"gitId":"Jacky142857"},"content":"import seedu.address.model.ReadOnlySellerAddressBook;","lastModifiedDate":"2022-03-19"},{"lineNumber":25,"author":{"gitId":"-"},"content":"import seedu.address.model.ReadOnlyUserPrefs;","lastModifiedDate":"2018-12-06"},{"lineNumber":26,"author":{"gitId":"Jacky142857"},"content":"import seedu.address.model.SellerAddressBook;","lastModifiedDate":"2022-03-19"},{"lineNumber":27,"author":{"gitId":"-"},"content":"import seedu.address.model.UserPrefs;","lastModifiedDate":"2017-01-18"},{"lineNumber":28,"author":{"gitId":"-"},"content":"import seedu.address.model.util.SampleDataUtil;","lastModifiedDate":"2016-12-20"},{"lineNumber":29,"author":{"gitId":"-"},"content":"import seedu.address.storage.AddressBookStorage;","lastModifiedDate":"2017-02-25"},{"lineNumber":30,"author":{"gitId":"WJunHong"},"content":"import seedu.address.storage.BuyerAddressBookStorage;","lastModifiedDate":"2022-03-23"},{"lineNumber":31,"author":{"gitId":"-"},"content":"import seedu.address.storage.JsonAddressBookStorage;","lastModifiedDate":"2018-11-27"},{"lineNumber":32,"author":{"gitId":"WJunHong"},"content":"import seedu.address.storage.JsonBuyerAddressBookStorage;","lastModifiedDate":"2022-03-23"},{"lineNumber":33,"author":{"gitId":"Jacky142857"},"content":"import seedu.address.storage.JsonSellerAddressBookStorage;","lastModifiedDate":"2022-03-19"},{"lineNumber":34,"author":{"gitId":"-"},"content":"import seedu.address.storage.JsonUserPrefsStorage;","lastModifiedDate":"2017-02-25"},{"lineNumber":35,"author":{"gitId":"Jacky142857"},"content":"import seedu.address.storage.SellerAddressBookStorage;","lastModifiedDate":"2022-03-19"},{"lineNumber":36,"author":{"gitId":"-"},"content":"import seedu.address.storage.Storage;","lastModifiedDate":"2016-09-25"},{"lineNumber":37,"author":{"gitId":"-"},"content":"import seedu.address.storage.StorageManager;","lastModifiedDate":"2016-08-08"},{"lineNumber":38,"author":{"gitId":"-"},"content":"import seedu.address.storage.UserPrefsStorage;","lastModifiedDate":"2017-02-25"},{"lineNumber":39,"author":{"gitId":"-"},"content":"import seedu.address.ui.Ui;","lastModifiedDate":"2016-09-25"},{"lineNumber":40,"author":{"gitId":"-"},"content":"import seedu.address.ui.UiManager;","lastModifiedDate":"2016-09-24"},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":42,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-08"},{"lineNumber":43,"author":{"gitId":"-"},"content":" * Runs the application.","lastModifiedDate":"2019-02-08"},{"lineNumber":44,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-08"},{"lineNumber":45,"author":{"gitId":"-"},"content":"public class MainApp extends Application {","lastModifiedDate":"2016-08-08"},{"lineNumber":46,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":47,"author":{"gitId":"cwnm"},"content":"    public static final Version VERSION \u003d new Version(1, 2, 0, true);","lastModifiedDate":"2022-03-24"},{"lineNumber":48,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    private static final Logger logger \u003d LogsCenter.getLogger(MainApp.class);","lastModifiedDate":"2017-04-01"},{"lineNumber":50,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-04-01"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    protected Ui ui;","lastModifiedDate":"2016-09-25"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    protected Logic logic;","lastModifiedDate":"2016-09-25"},{"lineNumber":53,"author":{"gitId":"-"},"content":"    protected Storage storage;","lastModifiedDate":"2016-09-25"},{"lineNumber":54,"author":{"gitId":"-"},"content":"    protected Model model;","lastModifiedDate":"2016-09-25"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    protected Config config;","lastModifiedDate":"2016-08-08"},{"lineNumber":56,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-08"},{"lineNumber":58,"author":{"gitId":"-"},"content":"    public void init() throws Exception {","lastModifiedDate":"2016-08-08"},{"lineNumber":59,"author":{"gitId":"-"},"content":"        logger.info(\"\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d[ Initializing AddressBook ]\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\");","lastModifiedDate":"2016-09-29"},{"lineNumber":60,"author":{"gitId":"-"},"content":"        super.init();","lastModifiedDate":"2016-08-08"},{"lineNumber":61,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":62,"author":{"gitId":"-"},"content":"        AppParameters appParameters \u003d AppParameters.parse(getParameters());","lastModifiedDate":"2018-04-21"},{"lineNumber":63,"author":{"gitId":"-"},"content":"        config \u003d initConfig(appParameters.getConfigPath());","lastModifiedDate":"2018-04-21"},{"lineNumber":64,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-25"},{"lineNumber":65,"author":{"gitId":"-"},"content":"        UserPrefsStorage userPrefsStorage \u003d new JsonUserPrefsStorage(config.getUserPrefsFilePath());","lastModifiedDate":"2017-02-25"},{"lineNumber":66,"author":{"gitId":"-"},"content":"        UserPrefs userPrefs \u003d initPrefs(userPrefsStorage);","lastModifiedDate":"2018-12-06"},{"lineNumber":67,"author":{"gitId":"-"},"content":"        AddressBookStorage addressBookStorage \u003d new JsonAddressBookStorage(userPrefs.getAddressBookFilePath());","lastModifiedDate":"2018-11-27"},{"lineNumber":68,"author":{"gitId":"Jacky142857"},"content":"        SellerAddressBookStorage sellerAddressBookStorage \u003d","lastModifiedDate":"2022-03-19"},{"lineNumber":69,"author":{"gitId":"Jacky142857"},"content":"                new JsonSellerAddressBookStorage(userPrefs.getSellerAddressBookFilePath());","lastModifiedDate":"2022-03-19"},{"lineNumber":70,"author":{"gitId":"WJunHong"},"content":"        BuyerAddressBookStorage buyerAddressBookStorage \u003d","lastModifiedDate":"2022-03-23"},{"lineNumber":71,"author":{"gitId":"WJunHong"},"content":"                new JsonBuyerAddressBookStorage(userPrefs.getBuyerAddressBookFilePath());","lastModifiedDate":"2022-03-23"},{"lineNumber":72,"author":{"gitId":"WJunHong"},"content":"        storage \u003d new StorageManager(addressBookStorage, userPrefsStorage, sellerAddressBookStorage,","lastModifiedDate":"2022-03-23"},{"lineNumber":73,"author":{"gitId":"WJunHong"},"content":"                buyerAddressBookStorage);","lastModifiedDate":"2022-03-23"},{"lineNumber":74,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":75,"author":{"gitId":"-"},"content":"        initLogging(config);","lastModifiedDate":"2016-09-24"},{"lineNumber":76,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":77,"author":{"gitId":"-"},"content":"        model \u003d initModelManager(storage, userPrefs);","lastModifiedDate":"2016-09-25"},{"lineNumber":78,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":79,"author":{"gitId":"-"},"content":"        logic \u003d new LogicManager(model, storage);","lastModifiedDate":"2018-12-09"},{"lineNumber":80,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":81,"author":{"gitId":"-"},"content":"        ui \u003d new UiManager(logic);","lastModifiedDate":"2018-12-08"},{"lineNumber":82,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":83,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":84,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-08-16"},{"lineNumber":85,"author":{"gitId":"-"},"content":"     * Returns a {@code ModelManager} with the data from {@code storage}\u0027s address book and {@code userPrefs}. \u003cbr\u003e","lastModifiedDate":"2017-08-16"},{"lineNumber":86,"author":{"gitId":"-"},"content":"     * The data from the sample address book will be used instead if {@code storage}\u0027s address book is not found,","lastModifiedDate":"2017-08-16"},{"lineNumber":87,"author":{"gitId":"-"},"content":"     * or an empty address book will be used instead if errors occur when reading {@code storage}\u0027s address book.","lastModifiedDate":"2017-08-16"},{"lineNumber":88,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-08-16"},{"lineNumber":89,"author":{"gitId":"-"},"content":"    private Model initModelManager(Storage storage, ReadOnlyUserPrefs userPrefs) {","lastModifiedDate":"2018-12-06"},{"lineNumber":90,"author":{"gitId":"-"},"content":"        Optional\u003cReadOnlyAddressBook\u003e addressBookOptional;","lastModifiedDate":"2016-09-24"},{"lineNumber":91,"author":{"gitId":"Jacky142857"},"content":"        Optional\u003cReadOnlySellerAddressBook\u003e sellerAddressBookOptional;","lastModifiedDate":"2022-03-19"},{"lineNumber":92,"author":{"gitId":"WJunHong"},"content":"        Optional\u003cReadOnlyBuyerAddressBook\u003e buyerAddressBookOptional;","lastModifiedDate":"2022-03-23"},{"lineNumber":93,"author":{"gitId":"chuashihong"},"content":"        // Create dummy value for initialData","lastModifiedDate":"2022-03-30"},{"lineNumber":94,"author":{"gitId":"-"},"content":"        ReadOnlyAddressBook initialData;","lastModifiedDate":"2016-09-24"},{"lineNumber":95,"author":{"gitId":"Jacky142857"},"content":"        ReadOnlySellerAddressBook initialSellerData;","lastModifiedDate":"2022-03-19"},{"lineNumber":96,"author":{"gitId":"WJunHong"},"content":"        ReadOnlyBuyerAddressBook initialBuyerData;","lastModifiedDate":"2022-03-23"},{"lineNumber":97,"author":{"gitId":"chuashihong"},"content":"        //Dummy AddressBook (will be delete later)","lastModifiedDate":"2022-03-31"},{"lineNumber":98,"author":{"gitId":"chuashihong"},"content":"        initialData \u003d new AddressBook();","lastModifiedDate":"2022-03-31"},{"lineNumber":99,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2016-09-24"},{"lineNumber":100,"author":{"gitId":"WJunHong"},"content":"            buyerAddressBookOptional \u003d storage.readBuyerAddressBook();","lastModifiedDate":"2022-03-23"},{"lineNumber":101,"author":{"gitId":"WJunHong"},"content":"            if (!buyerAddressBookOptional.isPresent()) {","lastModifiedDate":"2022-03-23"},{"lineNumber":102,"author":{"gitId":"WJunHong"},"content":"                logger.info(\"Data file not found. Will be starting with a sample BuyerAddressBook\");","lastModifiedDate":"2022-03-23"},{"lineNumber":103,"author":{"gitId":"-"},"content":"            }","lastModifiedDate":"2022-03-23"},{"lineNumber":104,"author":{"gitId":"chuashihong"},"content":"","lastModifiedDate":"2022-03-31"},{"lineNumber":105,"author":{"gitId":"WJunHong"},"content":"            initialBuyerData \u003d buyerAddressBookOptional.orElseGet(SampleDataUtil::getSampleBuyerAddressBook);","lastModifiedDate":"2022-03-23"},{"lineNumber":106,"author":{"gitId":"-"},"content":"        } catch (DataConversionException e) {","lastModifiedDate":"2016-09-24"},{"lineNumber":107,"author":{"gitId":"chuashihong"},"content":"            logger.warning(\"Data file not in the correct format. Will be starting with an empty BuyerAddressBook\");","lastModifiedDate":"2022-03-31"},{"lineNumber":108,"author":{"gitId":"WJunHong"},"content":"            initialBuyerData \u003d new BuyerAddressBook();","lastModifiedDate":"2022-03-23"},{"lineNumber":109,"author":{"gitId":"-"},"content":"        } catch (IOException e) {","lastModifiedDate":"2016-10-01"},{"lineNumber":110,"author":{"gitId":"chuashihong"},"content":"            logger.warning(\"Problem while reading from the file. Will be starting with an empty BuyerAddressBook\");","lastModifiedDate":"2022-03-31"},{"lineNumber":111,"author":{"gitId":"WJunHong"},"content":"            initialBuyerData \u003d new BuyerAddressBook();","lastModifiedDate":"2022-03-23"},{"lineNumber":112,"author":{"gitId":"chuashihong"},"content":"        }","lastModifiedDate":"2022-03-31"},{"lineNumber":113,"author":{"gitId":"Jacky142857"},"content":"","lastModifiedDate":"2022-03-19"},{"lineNumber":114,"author":{"gitId":"chuashihong"},"content":"        try {","lastModifiedDate":"2022-03-31"},{"lineNumber":115,"author":{"gitId":"chuashihong"},"content":"            sellerAddressBookOptional \u003d storage.readSellerAddressBook();","lastModifiedDate":"2022-03-31"},{"lineNumber":116,"author":{"gitId":"chuashihong"},"content":"            if (!sellerAddressBookOptional.isPresent()) {","lastModifiedDate":"2022-03-31"},{"lineNumber":117,"author":{"gitId":"chuashihong"},"content":"                logger.info(\"Data file not found. Will be starting with a sample SellerAddressBook\");","lastModifiedDate":"2022-03-31"},{"lineNumber":118,"author":{"gitId":"chuashihong"},"content":"            }","lastModifiedDate":"2022-03-31"},{"lineNumber":119,"author":{"gitId":"chuashihong"},"content":"            initialSellerData \u003d sellerAddressBookOptional.orElseGet(SampleDataUtil::getSampleSellerAddressBook);","lastModifiedDate":"2022-03-31"},{"lineNumber":120,"author":{"gitId":"-"},"content":"        } catch (DataConversionException e) {","lastModifiedDate":"2022-03-31"},{"lineNumber":121,"author":{"gitId":"chuashihong"},"content":"            logger.warning(\"Data file not in the correct format. Will be starting with an empty SellerAddressBook\");","lastModifiedDate":"2022-03-31"},{"lineNumber":122,"author":{"gitId":"chuashihong"},"content":"            initialSellerData \u003d new SellerAddressBook();","lastModifiedDate":"2022-03-31"},{"lineNumber":123,"author":{"gitId":"-"},"content":"        } catch (IOException e) {","lastModifiedDate":"2022-03-31"},{"lineNumber":124,"author":{"gitId":"chuashihong"},"content":"            logger.warning(\"Problem while reading from the file. Will be starting with an empty SellerAddressBook\");","lastModifiedDate":"2022-03-31"},{"lineNumber":125,"author":{"gitId":"chuashihong"},"content":"            initialSellerData \u003d new SellerAddressBook();","lastModifiedDate":"2022-03-31"},{"lineNumber":126,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-08-08"},{"lineNumber":127,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":128,"author":{"gitId":"WJunHong"},"content":"        return new ModelManager(initialData, userPrefs, initialSellerData, initialBuyerData);","lastModifiedDate":"2022-03-23"},{"lineNumber":129,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":130,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":131,"author":{"gitId":"-"},"content":"    private void initLogging(Config config) {","lastModifiedDate":"2016-09-24"},{"lineNumber":132,"author":{"gitId":"-"},"content":"        LogsCenter.init(config);","lastModifiedDate":"2016-09-23"},{"lineNumber":133,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":134,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":135,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-08-16"},{"lineNumber":136,"author":{"gitId":"-"},"content":"     * Returns a {@code Config} using the file at {@code configFilePath}. \u003cbr\u003e","lastModifiedDate":"2017-08-16"},{"lineNumber":137,"author":{"gitId":"-"},"content":"     * The default file path {@code Config#DEFAULT_CONFIG_FILE} will be used instead","lastModifiedDate":"2017-08-16"},{"lineNumber":138,"author":{"gitId":"-"},"content":"     * if {@code configFilePath} is null.","lastModifiedDate":"2017-08-16"},{"lineNumber":139,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-08-16"},{"lineNumber":140,"author":{"gitId":"-"},"content":"    protected Config initConfig(Path configFilePath) {","lastModifiedDate":"2018-04-21"},{"lineNumber":141,"author":{"gitId":"-"},"content":"        Config initializedConfig;","lastModifiedDate":"2016-09-24"},{"lineNumber":142,"author":{"gitId":"-"},"content":"        Path configFilePathUsed;","lastModifiedDate":"2018-04-21"},{"lineNumber":143,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":144,"author":{"gitId":"-"},"content":"        configFilePathUsed \u003d Config.DEFAULT_CONFIG_FILE;","lastModifiedDate":"2016-09-24"},{"lineNumber":145,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":146,"author":{"gitId":"-"},"content":"        if (configFilePath !\u003d null) {","lastModifiedDate":"2016-09-24"},{"lineNumber":147,"author":{"gitId":"-"},"content":"            logger.info(\"Custom Config file specified \" + configFilePath);","lastModifiedDate":"2016-09-24"},{"lineNumber":148,"author":{"gitId":"-"},"content":"            configFilePathUsed \u003d configFilePath;","lastModifiedDate":"2016-09-24"},{"lineNumber":149,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-08-08"},{"lineNumber":150,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":151,"author":{"gitId":"-"},"content":"        logger.info(\"Using config file : \" + configFilePathUsed);","lastModifiedDate":"2016-09-24"},{"lineNumber":152,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":153,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2016-09-24"},{"lineNumber":154,"author":{"gitId":"-"},"content":"            Optional\u003cConfig\u003e configOptional \u003d ConfigUtil.readConfig(configFilePathUsed);","lastModifiedDate":"2016-09-24"},{"lineNumber":155,"author":{"gitId":"-"},"content":"            initializedConfig \u003d configOptional.orElse(new Config());","lastModifiedDate":"2016-09-24"},{"lineNumber":156,"author":{"gitId":"-"},"content":"        } catch (DataConversionException e) {","lastModifiedDate":"2016-09-24"},{"lineNumber":157,"author":{"gitId":"-"},"content":"            logger.warning(\"Config file at \" + configFilePathUsed + \" is not in the correct format. \"","lastModifiedDate":"2017-05-22"},{"lineNumber":158,"author":{"gitId":"-"},"content":"                    + \"Using default config properties\");","lastModifiedDate":"2017-05-22"},{"lineNumber":159,"author":{"gitId":"-"},"content":"            initializedConfig \u003d new Config();","lastModifiedDate":"2016-09-24"},{"lineNumber":160,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-09-24"},{"lineNumber":161,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":162,"author":{"gitId":"-"},"content":"        //Update config file in case it was missing to begin with or there are new/unused fields","lastModifiedDate":"2016-09-24"},{"lineNumber":163,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2016-09-24"},{"lineNumber":164,"author":{"gitId":"-"},"content":"            ConfigUtil.saveConfig(initializedConfig, configFilePathUsed);","lastModifiedDate":"2016-09-24"},{"lineNumber":165,"author":{"gitId":"-"},"content":"        } catch (IOException e) {","lastModifiedDate":"2016-09-24"},{"lineNumber":166,"author":{"gitId":"-"},"content":"            logger.warning(\"Failed to save config file : \" + StringUtil.getDetails(e));","lastModifiedDate":"2016-09-24"},{"lineNumber":167,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-09-24"},{"lineNumber":168,"author":{"gitId":"-"},"content":"        return initializedConfig;","lastModifiedDate":"2016-09-24"},{"lineNumber":169,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":170,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":171,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-08-16"},{"lineNumber":172,"author":{"gitId":"-"},"content":"     * Returns a {@code UserPrefs} using the file at {@code storage}\u0027s user prefs file path,","lastModifiedDate":"2017-08-16"},{"lineNumber":173,"author":{"gitId":"-"},"content":"     * or a new {@code UserPrefs} with default configuration if errors occur when","lastModifiedDate":"2017-08-16"},{"lineNumber":174,"author":{"gitId":"-"},"content":"     * reading from the file.","lastModifiedDate":"2017-08-16"},{"lineNumber":175,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-08-16"},{"lineNumber":176,"author":{"gitId":"-"},"content":"    protected UserPrefs initPrefs(UserPrefsStorage storage) {","lastModifiedDate":"2017-02-25"},{"lineNumber":177,"author":{"gitId":"-"},"content":"        Path prefsFilePath \u003d storage.getUserPrefsFilePath();","lastModifiedDate":"2018-04-21"},{"lineNumber":178,"author":{"gitId":"-"},"content":"        logger.info(\"Using prefs file : \" + prefsFilePath);","lastModifiedDate":"2016-09-24"},{"lineNumber":179,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":180,"author":{"gitId":"-"},"content":"        UserPrefs initializedPrefs;","lastModifiedDate":"2016-09-24"},{"lineNumber":181,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2016-09-24"},{"lineNumber":182,"author":{"gitId":"-"},"content":"            Optional\u003cUserPrefs\u003e prefsOptional \u003d storage.readUserPrefs();","lastModifiedDate":"2016-09-25"},{"lineNumber":183,"author":{"gitId":"-"},"content":"            initializedPrefs \u003d prefsOptional.orElse(new UserPrefs());","lastModifiedDate":"2016-09-24"},{"lineNumber":184,"author":{"gitId":"-"},"content":"        } catch (DataConversionException e) {","lastModifiedDate":"2016-09-24"},{"lineNumber":185,"author":{"gitId":"-"},"content":"            logger.warning(\"UserPrefs file at \" + prefsFilePath + \" is not in the correct format. \"","lastModifiedDate":"2017-05-22"},{"lineNumber":186,"author":{"gitId":"-"},"content":"                    + \"Using default user prefs\");","lastModifiedDate":"2017-05-22"},{"lineNumber":187,"author":{"gitId":"-"},"content":"            initializedPrefs \u003d new UserPrefs();","lastModifiedDate":"2016-09-24"},{"lineNumber":188,"author":{"gitId":"-"},"content":"        } catch (IOException e) {","lastModifiedDate":"2016-09-24"},{"lineNumber":189,"author":{"gitId":"-"},"content":"            logger.warning(\"Problem while reading from the file. Will be starting with an empty AddressBook\");","lastModifiedDate":"2016-10-12"},{"lineNumber":190,"author":{"gitId":"-"},"content":"            initializedPrefs \u003d new UserPrefs();","lastModifiedDate":"2016-09-24"},{"lineNumber":191,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-08-08"},{"lineNumber":192,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":193,"author":{"gitId":"-"},"content":"        //Update prefs file in case it was missing to begin with or there are new/unused fields","lastModifiedDate":"2016-09-24"},{"lineNumber":194,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2016-09-24"},{"lineNumber":195,"author":{"gitId":"-"},"content":"            storage.saveUserPrefs(initializedPrefs);","lastModifiedDate":"2016-09-25"},{"lineNumber":196,"author":{"gitId":"-"},"content":"        } catch (IOException e) {","lastModifiedDate":"2016-09-24"},{"lineNumber":197,"author":{"gitId":"-"},"content":"            logger.warning(\"Failed to save config file : \" + StringUtil.getDetails(e));","lastModifiedDate":"2016-09-24"},{"lineNumber":198,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-09-24"},{"lineNumber":199,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":200,"author":{"gitId":"-"},"content":"        return initializedPrefs;","lastModifiedDate":"2016-09-24"},{"lineNumber":201,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":202,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":203,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-08"},{"lineNumber":204,"author":{"gitId":"-"},"content":"    public void start(Stage primaryStage) {","lastModifiedDate":"2016-08-08"},{"lineNumber":205,"author":{"gitId":"-"},"content":"        logger.info(\"Starting AddressBook \" + MainApp.VERSION);","lastModifiedDate":"2016-09-29"},{"lineNumber":206,"author":{"gitId":"-"},"content":"        ui.start(primaryStage);","lastModifiedDate":"2016-09-25"},{"lineNumber":207,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":208,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":209,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-08"},{"lineNumber":210,"author":{"gitId":"-"},"content":"    public void stop() {","lastModifiedDate":"2016-08-08"},{"lineNumber":211,"author":{"gitId":"-"},"content":"        logger.info(\"\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d [ Stopping Address Book ] \u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\");","lastModifiedDate":"2016-09-29"},{"lineNumber":212,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2016-09-24"},{"lineNumber":213,"author":{"gitId":"-"},"content":"            storage.saveUserPrefs(model.getUserPrefs());","lastModifiedDate":"2018-12-06"},{"lineNumber":214,"author":{"gitId":"-"},"content":"        } catch (IOException e) {","lastModifiedDate":"2016-09-24"},{"lineNumber":215,"author":{"gitId":"-"},"content":"            logger.severe(\"Failed to save preferences \" + StringUtil.getDetails(e));","lastModifiedDate":"2016-09-24"},{"lineNumber":216,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-08-08"},{"lineNumber":217,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-26"},{"lineNumber":218,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"}],"authorContributionMap":{"WJunHong":17,"Jacky142857":9,"-":174,"cwnm":1,"chuashihong":17}},{"path":"src/main/java/seedu/address/commons/core/Messages.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.commons.core;","lastModifiedDate":"2016-09-23"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":3,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-24"},{"lineNumber":4,"author":{"gitId":"-"},"content":" * Container for user visible messages.","lastModifiedDate":"2016-08-24"},{"lineNumber":5,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-24"},{"lineNumber":6,"author":{"gitId":"-"},"content":"public class Messages {","lastModifiedDate":"2016-08-24"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":8,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_UNKNOWN_COMMAND \u003d \"Unknown command\";","lastModifiedDate":"2016-09-21"},{"lineNumber":9,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_INVALID_COMMAND_FORMAT \u003d \"Invalid command format! \\n%1$s\";","lastModifiedDate":"2016-08-24"},{"lineNumber":10,"author":{"gitId":"janald99"},"content":"","lastModifiedDate":"2022-04-06"},{"lineNumber":11,"author":{"gitId":"janald99"},"content":"    public static final String MESSAGE_INVALID_CLIENT_DISPLAYED_INDEX \u003d \"The client index provided is invalid\";","lastModifiedDate":"2022-04-06"},{"lineNumber":12,"author":{"gitId":"WJunHong"},"content":"    public static final String MESSAGE_INVALID_BUYER_DISPLAYED_INDEX \u003d \"Ensure index is positive integer \u0026 less than \"","lastModifiedDate":"2022-04-06"},{"lineNumber":13,"author":{"gitId":"WJunHong"},"content":"            + \"or equal to size of displayed buyer list \";","lastModifiedDate":"2022-04-06"},{"lineNumber":14,"author":{"gitId":"WJunHong"},"content":"    public static final String MESSAGE_INVALID_SELLER_DISPLAYED_INDEX \u003d \"Ensure index is positive integer \u0026 less than \"","lastModifiedDate":"2022-04-06"},{"lineNumber":15,"author":{"gitId":"WJunHong"},"content":"            + \"or equal to size of displayed seller list \";","lastModifiedDate":"2022-04-06"},{"lineNumber":16,"author":{"gitId":"janald99"},"content":"","lastModifiedDate":"2022-04-06"},{"lineNumber":17,"author":{"gitId":"cwnm"},"content":"    public static final String MESSAGE_CLIENTS_LISTED_OVERVIEW \u003d \"%1$d clients found!\";","lastModifiedDate":"2022-03-04"},{"lineNumber":18,"author":{"gitId":"cwnm"},"content":"    public static final String MESSAGE_BUYERS_LISTED_OVERVIEW \u003d \"%1$d buyers found!\";","lastModifiedDate":"2022-03-28"},{"lineNumber":19,"author":{"gitId":"cwnm"},"content":"    public static final String MESSAGE_SELLERS_LISTED_OVERVIEW \u003d \"%1$d sellers found!\";","lastModifiedDate":"2022-03-28"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-28"},{"lineNumber":21,"author":{"gitId":"janald99"},"content":"    public static final String MESSAGE_NO_PROPERTY_ADDED \u003d \"You can only match a buyer only after a property has \"","lastModifiedDate":"2022-04-06"},{"lineNumber":22,"author":{"gitId":"janald99"},"content":"            + \"been added!\\nUse: add-ptb to add a property first.\";","lastModifiedDate":"2022-04-06"},{"lineNumber":23,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-04-06"},{"lineNumber":24,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-24"}],"authorContributionMap":{"janald99":5,"WJunHong":4,"-":12,"cwnm":3}},{"path":"src/main/java/seedu/address/commons/util/ComparatorUtil.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"Jacky142857"},"content":"package seedu.address.commons.util;","lastModifiedDate":"2022-03-31"},{"lineNumber":2,"author":{"gitId":"Jacky142857"},"content":"","lastModifiedDate":"2022-03-31"},{"lineNumber":3,"author":{"gitId":"Jacky142857"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2022-03-31"},{"lineNumber":4,"author":{"gitId":"Jacky142857"},"content":"import java.util.Comparator;","lastModifiedDate":"2022-03-31"},{"lineNumber":5,"author":{"gitId":"Jacky142857"},"content":"","lastModifiedDate":"2022-03-31"},{"lineNumber":6,"author":{"gitId":"Jacky142857"},"content":"import seedu.address.model.client.Client;","lastModifiedDate":"2022-03-31"},{"lineNumber":7,"author":{"gitId":"Jacky142857"},"content":"","lastModifiedDate":"2022-03-31"},{"lineNumber":8,"author":{"gitId":"Jacky142857"},"content":"public class ComparatorUtil {","lastModifiedDate":"2022-03-31"},{"lineNumber":9,"author":{"gitId":"Jacky142857"},"content":"    public static final Comparator\u003cClient\u003e NAME_COMPARATOR_ASC \u003d","lastModifiedDate":"2022-03-31"},{"lineNumber":10,"author":{"gitId":"Jacky142857"},"content":"            Comparator.comparing(p -\u003e p.getName().fullName.toUpperCase());","lastModifiedDate":"2022-03-31"},{"lineNumber":11,"author":{"gitId":"Jacky142857"},"content":"    public static final Comparator\u003cClient\u003e NAME_COMPARATOR_DESC \u003d NAME_COMPARATOR_ASC.reversed();","lastModifiedDate":"2022-03-31"},{"lineNumber":12,"author":{"gitId":"Jacky142857"},"content":"    public static final Comparator\u003cClient\u003e TIME_COMPARATOR_ASC \u003d new Comparator\u003c\u003e() {","lastModifiedDate":"2022-03-31"},{"lineNumber":13,"author":{"gitId":"Jacky142857"},"content":"        @Override","lastModifiedDate":"2022-03-31"},{"lineNumber":14,"author":{"gitId":"Jacky142857"},"content":"        public int compare(Client c1, Client c2) {","lastModifiedDate":"2022-03-31"},{"lineNumber":15,"author":{"gitId":"Jacky142857"},"content":"            LocalDateTime firstTime \u003d c1.getAppointment().appointmentTime;","lastModifiedDate":"2022-03-31"},{"lineNumber":16,"author":{"gitId":"Jacky142857"},"content":"            LocalDateTime secondTime \u003d c2.getAppointment().appointmentTime;","lastModifiedDate":"2022-03-31"},{"lineNumber":17,"author":{"gitId":"Jacky142857"},"content":"            if (firstTime \u003d\u003d null \u0026\u0026 secondTime \u003d\u003d null) {","lastModifiedDate":"2022-03-31"},{"lineNumber":18,"author":{"gitId":"Jacky142857"},"content":"                return 0;","lastModifiedDate":"2022-03-31"},{"lineNumber":19,"author":{"gitId":"Jacky142857"},"content":"            } else if (firstTime \u003d\u003d null \u0026\u0026 secondTime !\u003d null) {","lastModifiedDate":"2022-03-31"},{"lineNumber":20,"author":{"gitId":"Jacky142857"},"content":"                return 1;","lastModifiedDate":"2022-03-31"},{"lineNumber":21,"author":{"gitId":"Jacky142857"},"content":"            } else if (firstTime !\u003d null \u0026 secondTime \u003d\u003d null) {","lastModifiedDate":"2022-03-31"},{"lineNumber":22,"author":{"gitId":"Jacky142857"},"content":"                return -1;","lastModifiedDate":"2022-03-31"},{"lineNumber":23,"author":{"gitId":"Jacky142857"},"content":"            } else if (c1.getAppointment().appointmentTime.isBefore(c2.getAppointment().appointmentTime)) {","lastModifiedDate":"2022-03-31"},{"lineNumber":24,"author":{"gitId":"Jacky142857"},"content":"                return -1;","lastModifiedDate":"2022-03-31"},{"lineNumber":25,"author":{"gitId":"Jacky142857"},"content":"            } else if (c1.getAppointment().appointmentTime.isAfter(c2.getAppointment().appointmentTime)) {","lastModifiedDate":"2022-03-31"},{"lineNumber":26,"author":{"gitId":"Jacky142857"},"content":"                return 1;","lastModifiedDate":"2022-03-31"},{"lineNumber":27,"author":{"gitId":"Jacky142857"},"content":"            } else {","lastModifiedDate":"2022-03-31"},{"lineNumber":28,"author":{"gitId":"Jacky142857"},"content":"                return 0;","lastModifiedDate":"2022-03-31"},{"lineNumber":29,"author":{"gitId":"Jacky142857"},"content":"            }","lastModifiedDate":"2022-03-31"},{"lineNumber":30,"author":{"gitId":"Jacky142857"},"content":"        }","lastModifiedDate":"2022-03-31"},{"lineNumber":31,"author":{"gitId":"Jacky142857"},"content":"    };","lastModifiedDate":"2022-03-31"},{"lineNumber":32,"author":{"gitId":"Jacky142857"},"content":"    public static final Comparator\u003cClient\u003e TIME_COMAPRATOR_DESC \u003d new Comparator\u003c\u003e() {","lastModifiedDate":"2022-03-31"},{"lineNumber":33,"author":{"gitId":"Jacky142857"},"content":"        @Override","lastModifiedDate":"2022-03-31"},{"lineNumber":34,"author":{"gitId":"Jacky142857"},"content":"        public int compare(Client c1, Client c2) {","lastModifiedDate":"2022-03-31"},{"lineNumber":35,"author":{"gitId":"Jacky142857"},"content":"            LocalDateTime firstTime \u003d c1.getAppointment().appointmentTime;","lastModifiedDate":"2022-03-31"},{"lineNumber":36,"author":{"gitId":"Jacky142857"},"content":"            LocalDateTime secondTime \u003d c2.getAppointment().appointmentTime;","lastModifiedDate":"2022-03-31"},{"lineNumber":37,"author":{"gitId":"Jacky142857"},"content":"            if (firstTime \u003d\u003d null \u0026\u0026 secondTime \u003d\u003d null) {","lastModifiedDate":"2022-03-31"},{"lineNumber":38,"author":{"gitId":"Jacky142857"},"content":"                return 0;","lastModifiedDate":"2022-03-31"},{"lineNumber":39,"author":{"gitId":"Jacky142857"},"content":"            } else if (firstTime \u003d\u003d null \u0026\u0026 secondTime !\u003d null) {","lastModifiedDate":"2022-03-31"},{"lineNumber":40,"author":{"gitId":"Jacky142857"},"content":"                return 1;","lastModifiedDate":"2022-03-31"},{"lineNumber":41,"author":{"gitId":"Jacky142857"},"content":"            } else if (firstTime !\u003d null \u0026 secondTime \u003d\u003d null) {","lastModifiedDate":"2022-03-31"},{"lineNumber":42,"author":{"gitId":"Jacky142857"},"content":"                return -1;","lastModifiedDate":"2022-03-31"},{"lineNumber":43,"author":{"gitId":"Jacky142857"},"content":"            } else if (c1.getAppointment().appointmentTime.isBefore(c2.getAppointment().appointmentTime)) {","lastModifiedDate":"2022-03-31"},{"lineNumber":44,"author":{"gitId":"Jacky142857"},"content":"                return 1;","lastModifiedDate":"2022-03-31"},{"lineNumber":45,"author":{"gitId":"Jacky142857"},"content":"            } else if (c1.getAppointment().appointmentTime.isAfter(c2.getAppointment().appointmentTime)) {","lastModifiedDate":"2022-03-31"},{"lineNumber":46,"author":{"gitId":"Jacky142857"},"content":"                return -1;","lastModifiedDate":"2022-03-31"},{"lineNumber":47,"author":{"gitId":"Jacky142857"},"content":"            } else {","lastModifiedDate":"2022-03-31"},{"lineNumber":48,"author":{"gitId":"Jacky142857"},"content":"                return 0;","lastModifiedDate":"2022-03-31"},{"lineNumber":49,"author":{"gitId":"Jacky142857"},"content":"            }","lastModifiedDate":"2022-03-31"},{"lineNumber":50,"author":{"gitId":"Jacky142857"},"content":"        }","lastModifiedDate":"2022-03-31"},{"lineNumber":51,"author":{"gitId":"Jacky142857"},"content":"    };","lastModifiedDate":"2022-03-31"},{"lineNumber":52,"author":{"gitId":"Jacky142857"},"content":"","lastModifiedDate":"2022-03-31"},{"lineNumber":53,"author":{"gitId":"Jacky142857"},"content":"}","lastModifiedDate":"2022-03-31"}],"authorContributionMap":{"Jacky142857":53}},{"path":"src/main/java/seedu/address/commons/util/StringUtil.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.commons.util;","lastModifiedDate":"2016-09-23"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":3,"author":{"gitId":"WJunHong"},"content":"","lastModifiedDate":"2022-02-26"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2022-02-26"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static seedu.address.commons.util.AppUtil.checkArgument;","lastModifiedDate":"2022-02-26"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-19"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import java.io.PrintWriter;","lastModifiedDate":"2022-03-02"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import java.io.StringWriter;","lastModifiedDate":"2022-03-02"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-03-02"},{"lineNumber":10,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-08"},{"lineNumber":11,"author":{"gitId":"-"},"content":" * Helper functions for handling strings.","lastModifiedDate":"2016-08-08"},{"lineNumber":12,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-08"},{"lineNumber":13,"author":{"gitId":"-"},"content":"public class StringUtil {","lastModifiedDate":"2016-08-08"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-13"},{"lineNumber":15,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-10-13"},{"lineNumber":16,"author":{"gitId":"-"},"content":"     * Returns true if the {@code sentence} contains the {@code word}.","lastModifiedDate":"2016-10-13"},{"lineNumber":17,"author":{"gitId":"WJunHong"},"content":"     *   Ignores case, and a partial word match is sufficient.","lastModifiedDate":"2022-02-26"},{"lineNumber":18,"author":{"gitId":"-"},"content":"     *   \u003cbr\u003eexamples:\u003cpre\u003e","lastModifiedDate":"2016-10-13"},{"lineNumber":19,"author":{"gitId":"-"},"content":"     *       containsWordIgnoreCase(\"ABc def\", \"abc\") \u003d\u003d true","lastModifiedDate":"2016-10-13"},{"lineNumber":20,"author":{"gitId":"-"},"content":"     *       containsWordIgnoreCase(\"ABc def\", \"DEF\") \u003d\u003d true","lastModifiedDate":"2016-10-13"},{"lineNumber":21,"author":{"gitId":"WJunHong"},"content":"     *       containsWordIgnoreCase(\"ABc def\", \"AB\") \u003d\u003d true","lastModifiedDate":"2022-02-26"},{"lineNumber":22,"author":{"gitId":"WJunHong"},"content":"     *       containsWordIgnoreCase(\"ABc def\", \"ABcd\") \u003d\u003d false // no words match","lastModifiedDate":"2022-02-26"},{"lineNumber":23,"author":{"gitId":"-"},"content":"     *       \u003c/pre\u003e","lastModifiedDate":"2016-10-13"},{"lineNumber":24,"author":{"gitId":"-"},"content":"     * @param sentence cannot be null","lastModifiedDate":"2016-10-13"},{"lineNumber":25,"author":{"gitId":"-"},"content":"     * @param word cannot be null, cannot be empty, must be a single word","lastModifiedDate":"2016-10-13"},{"lineNumber":26,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-10-13"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    public static boolean containsWordIgnoreCase(String sentence, String word) {","lastModifiedDate":"2016-10-13"},{"lineNumber":28,"author":{"gitId":"-"},"content":"        requireNonNull(sentence);","lastModifiedDate":"2017-05-15"},{"lineNumber":29,"author":{"gitId":"-"},"content":"        requireNonNull(word);","lastModifiedDate":"2017-05-15"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-13"},{"lineNumber":31,"author":{"gitId":"-"},"content":"        String preppedWord \u003d word.trim();","lastModifiedDate":"2016-10-13"},{"lineNumber":32,"author":{"gitId":"-"},"content":"        checkArgument(!preppedWord.isEmpty(), \"Word parameter cannot be empty\");","lastModifiedDate":"2017-05-15"},{"lineNumber":33,"author":{"gitId":"-"},"content":"        checkArgument(preppedWord.split(\"\\\\s+\").length \u003d\u003d 1, \"Word parameter should be a single word\");","lastModifiedDate":"2017-05-15"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-13"},{"lineNumber":35,"author":{"gitId":"WJunHong"},"content":"        String preppedSentence \u003d sentence.toLowerCase();","lastModifiedDate":"2022-02-26"},{"lineNumber":36,"author":{"gitId":"WJunHong"},"content":"        return preppedSentence.contains(preppedWord.toLowerCase());","lastModifiedDate":"2022-02-26"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":38,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-09-21"},{"lineNumber":40,"author":{"gitId":"-"},"content":"     * Returns a detailed message of the t, including the stack trace.","lastModifiedDate":"2016-09-21"},{"lineNumber":41,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-09-21"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    public static String getDetails(Throwable t) {","lastModifiedDate":"2016-09-21"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        requireNonNull(t);","lastModifiedDate":"2017-05-15"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        StringWriter sw \u003d new StringWriter();","lastModifiedDate":"2016-09-21"},{"lineNumber":45,"author":{"gitId":"-"},"content":"        t.printStackTrace(new PrintWriter(sw));","lastModifiedDate":"2016-09-21"},{"lineNumber":46,"author":{"gitId":"-"},"content":"        return t.getMessage() + \"\\n\" + sw.toString();","lastModifiedDate":"2016-09-21"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-21"},{"lineNumber":48,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-09-22"},{"lineNumber":50,"author":{"gitId":"-"},"content":"     * Returns true if {@code s} represents a non-zero unsigned integer","lastModifiedDate":"2017-06-02"},{"lineNumber":51,"author":{"gitId":"-"},"content":"     * e.g. 1, 2, 3, ..., {@code Integer.MAX_VALUE} \u003cbr\u003e","lastModifiedDate":"2017-06-02"},{"lineNumber":52,"author":{"gitId":"-"},"content":"     * Will return false for any other non-null string input","lastModifiedDate":"2017-06-02"},{"lineNumber":53,"author":{"gitId":"-"},"content":"     * e.g. empty string, \"-1\", \"0\", \"+1\", and \" 2 \" (untrimmed), \"3 0\" (contains whitespace), \"1 a\" (contains letters)","lastModifiedDate":"2017-06-02"},{"lineNumber":54,"author":{"gitId":"-"},"content":"     * @throws NullPointerException if {@code s} is null.","lastModifiedDate":"2017-06-02"},{"lineNumber":55,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-09-22"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    public static boolean isNonZeroUnsignedInteger(String s) {","lastModifiedDate":"2017-06-02"},{"lineNumber":57,"author":{"gitId":"-"},"content":"        requireNonNull(s);","lastModifiedDate":"2017-06-02"},{"lineNumber":58,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-02"},{"lineNumber":59,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2017-06-02"},{"lineNumber":60,"author":{"gitId":"-"},"content":"            int value \u003d Integer.parseInt(s);","lastModifiedDate":"2017-06-02"},{"lineNumber":61,"author":{"gitId":"-"},"content":"            return value \u003e 0 \u0026\u0026 !s.startsWith(\"+\"); // \"+1\" is successfully parsed by Integer#parseInt(String)","lastModifiedDate":"2017-06-02"},{"lineNumber":62,"author":{"gitId":"-"},"content":"        } catch (NumberFormatException nfe) {","lastModifiedDate":"2017-06-02"},{"lineNumber":63,"author":{"gitId":"-"},"content":"            return false;","lastModifiedDate":"2017-06-02"},{"lineNumber":64,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-06-02"},{"lineNumber":65,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-22"},{"lineNumber":66,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"}],"authorContributionMap":{"WJunHong":6,"-":60}},{"path":"src/main/java/seedu/address/logic/Logic.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic;","lastModifiedDate":"2016-09-25"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-11-27"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2016-09-25"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.GuiSettings;","lastModifiedDate":"2018-11-27"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.CommandResult;","lastModifiedDate":"2016-09-25"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.exceptions.CommandException;","lastModifiedDate":"2017-02-05"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import seedu.address.logic.parser.exceptions.ParseException;","lastModifiedDate":"2017-03-11"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import seedu.address.model.ReadOnlyAddressBook;","lastModifiedDate":"2018-12-03"},{"lineNumber":11,"author":{"gitId":"WJunHong"},"content":"import seedu.address.model.ReadOnlyBuyerAddressBook;","lastModifiedDate":"2022-03-23"},{"lineNumber":12,"author":{"gitId":"Jacky142857"},"content":"import seedu.address.model.ReadOnlySellerAddressBook;","lastModifiedDate":"2022-03-19"},{"lineNumber":13,"author":{"gitId":"WJunHong"},"content":"import seedu.address.model.buyer.Buyer;","lastModifiedDate":"2022-03-23"},{"lineNumber":14,"author":{"gitId":"cwnm"},"content":"import seedu.address.model.client.Client;","lastModifiedDate":"2022-03-04"},{"lineNumber":15,"author":{"gitId":"Jacky142857"},"content":"import seedu.address.model.seller.Seller;","lastModifiedDate":"2022-03-19"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":17,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-09-25"},{"lineNumber":18,"author":{"gitId":"-"},"content":" * API of the Logic component","lastModifiedDate":"2016-09-25"},{"lineNumber":19,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-09-25"},{"lineNumber":20,"author":{"gitId":"-"},"content":"public interface Logic {","lastModifiedDate":"2016-09-25"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-09-25"},{"lineNumber":22,"author":{"gitId":"-"},"content":"     * Executes the command and returns the result.","lastModifiedDate":"2016-09-25"},{"lineNumber":23,"author":{"gitId":"-"},"content":"     * @param commandText The command as entered by the user.","lastModifiedDate":"2016-09-25"},{"lineNumber":24,"author":{"gitId":"-"},"content":"     * @return the result of the command execution.","lastModifiedDate":"2016-09-25"},{"lineNumber":25,"author":{"gitId":"-"},"content":"     * @throws CommandException If an error occurs during command execution.","lastModifiedDate":"2017-02-05"},{"lineNumber":26,"author":{"gitId":"-"},"content":"     * @throws ParseException If an error occurs during parsing.","lastModifiedDate":"2017-03-11"},{"lineNumber":27,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-09-25"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    CommandResult execute(String commandText) throws CommandException, ParseException;","lastModifiedDate":"2017-03-11"},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-12-03"},{"lineNumber":31,"author":{"gitId":"-"},"content":"     * Returns the AddressBook.","lastModifiedDate":"2018-12-03"},{"lineNumber":32,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2018-12-03"},{"lineNumber":33,"author":{"gitId":"-"},"content":"     * @see seedu.address.model.Model#getAddressBook()","lastModifiedDate":"2018-12-03"},{"lineNumber":34,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-12-03"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    ReadOnlyAddressBook getAddressBook();","lastModifiedDate":"2018-12-03"},{"lineNumber":36,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-03"},{"lineNumber":37,"author":{"gitId":"cwnm"},"content":"    /** Returns an unmodifiable view of the filtered list of clients */","lastModifiedDate":"2022-03-04"},{"lineNumber":38,"author":{"gitId":"cwnm"},"content":"    ObservableList\u003cClient\u003e getFilteredclientList();","lastModifiedDate":"2022-03-04"},{"lineNumber":39,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-26"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-11-27"},{"lineNumber":41,"author":{"gitId":"-"},"content":"     * Returns the user prefs\u0027 address book file path.","lastModifiedDate":"2018-11-27"},{"lineNumber":42,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-11-27"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    Path getAddressBookFilePath();","lastModifiedDate":"2018-11-27"},{"lineNumber":44,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":45,"author":{"gitId":"Jacky142857"},"content":"    /**","lastModifiedDate":"2022-03-19"},{"lineNumber":46,"author":{"gitId":"Jacky142857"},"content":"     * Returns the SellerAddressBook.","lastModifiedDate":"2022-03-19"},{"lineNumber":47,"author":{"gitId":"Jacky142857"},"content":"     *","lastModifiedDate":"2022-03-19"},{"lineNumber":48,"author":{"gitId":"Jacky142857"},"content":"     * @see seedu.address.model.Model#getSellerAddressBook()","lastModifiedDate":"2022-03-19"},{"lineNumber":49,"author":{"gitId":"Jacky142857"},"content":"     */","lastModifiedDate":"2022-03-19"},{"lineNumber":50,"author":{"gitId":"Jacky142857"},"content":"    ReadOnlySellerAddressBook getSellerAddressBook();","lastModifiedDate":"2022-03-19"},{"lineNumber":51,"author":{"gitId":"Jacky142857"},"content":"","lastModifiedDate":"2022-03-19"},{"lineNumber":52,"author":{"gitId":"Jacky142857"},"content":"    /** Returns an unmodifiable view of the filtered list of sellers */","lastModifiedDate":"2022-03-19"},{"lineNumber":53,"author":{"gitId":"Jacky142857"},"content":"    ObservableList\u003cSeller\u003e getFilteredSellerList();","lastModifiedDate":"2022-03-19"},{"lineNumber":54,"author":{"gitId":"Jacky142857"},"content":"","lastModifiedDate":"2022-03-19"},{"lineNumber":55,"author":{"gitId":"Jacky142857"},"content":"    /**","lastModifiedDate":"2022-03-19"},{"lineNumber":56,"author":{"gitId":"Jacky142857"},"content":"     * Returns the user prefs\u0027 seller address book file path.","lastModifiedDate":"2022-03-19"},{"lineNumber":57,"author":{"gitId":"Jacky142857"},"content":"     */","lastModifiedDate":"2022-03-19"},{"lineNumber":58,"author":{"gitId":"Jacky142857"},"content":"    Path getSellerAddressBookFilePath();","lastModifiedDate":"2022-03-19"},{"lineNumber":59,"author":{"gitId":"Jacky142857"},"content":"","lastModifiedDate":"2022-03-19"},{"lineNumber":60,"author":{"gitId":"WJunHong"},"content":"    /**","lastModifiedDate":"2022-03-23"},{"lineNumber":61,"author":{"gitId":"WJunHong"},"content":"     * Returns the BuyerAddressBook.","lastModifiedDate":"2022-03-23"},{"lineNumber":62,"author":{"gitId":"WJunHong"},"content":"     *","lastModifiedDate":"2022-03-23"},{"lineNumber":63,"author":{"gitId":"WJunHong"},"content":"     * @see seedu.address.model.Model#getBuyerAddressBook()","lastModifiedDate":"2022-03-23"},{"lineNumber":64,"author":{"gitId":"WJunHong"},"content":"     */","lastModifiedDate":"2022-03-23"},{"lineNumber":65,"author":{"gitId":"WJunHong"},"content":"    ReadOnlyBuyerAddressBook getBuyerAddressBook();","lastModifiedDate":"2022-03-23"},{"lineNumber":66,"author":{"gitId":"Jacky142857"},"content":"","lastModifiedDate":"2022-03-19"},{"lineNumber":67,"author":{"gitId":"WJunHong"},"content":"    /** Returns an unmodifiable view of the filtered list of buyers */","lastModifiedDate":"2022-03-23"},{"lineNumber":68,"author":{"gitId":"WJunHong"},"content":"    ObservableList\u003cBuyer\u003e getFilteredBuyerList();","lastModifiedDate":"2022-03-23"},{"lineNumber":69,"author":{"gitId":"WJunHong"},"content":"","lastModifiedDate":"2022-03-23"},{"lineNumber":70,"author":{"gitId":"WJunHong"},"content":"    /**","lastModifiedDate":"2022-03-23"},{"lineNumber":71,"author":{"gitId":"WJunHong"},"content":"     * Returns the user prefs\u0027 buyers address book file path.","lastModifiedDate":"2022-03-23"},{"lineNumber":72,"author":{"gitId":"WJunHong"},"content":"     */","lastModifiedDate":"2022-03-23"},{"lineNumber":73,"author":{"gitId":"WJunHong"},"content":"    Path getBuyerAddressBookFilePath();","lastModifiedDate":"2022-03-23"},{"lineNumber":74,"author":{"gitId":"Jacky142857"},"content":"","lastModifiedDate":"2022-03-19"},{"lineNumber":75,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-11-27"},{"lineNumber":76,"author":{"gitId":"-"},"content":"     * Returns the user prefs\u0027 GUI settings.","lastModifiedDate":"2018-11-27"},{"lineNumber":77,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-11-27"},{"lineNumber":78,"author":{"gitId":"-"},"content":"    GuiSettings getGuiSettings();","lastModifiedDate":"2018-11-27"},{"lineNumber":79,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":80,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-11-27"},{"lineNumber":81,"author":{"gitId":"-"},"content":"     * Set the user prefs\u0027 GUI settings.","lastModifiedDate":"2018-11-27"},{"lineNumber":82,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-11-27"},{"lineNumber":83,"author":{"gitId":"-"},"content":"    void setGuiSettings(GuiSettings guiSettings);","lastModifiedDate":"2018-11-27"},{"lineNumber":84,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-09-25"}],"authorContributionMap":{"WJunHong":15,"Jacky142857":19,"-":47,"cwnm":3}},{"path":"src/main/java/seedu/address/logic/LogicManager.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic;","lastModifiedDate":"2016-09-21"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.io.IOException;","lastModifiedDate":"2018-12-09"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-11-27"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.util.logging.Logger;","lastModifiedDate":"2017-01-19"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2016-09-24"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.GuiSettings;","lastModifiedDate":"2018-11-27"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.LogsCenter;","lastModifiedDate":"2016-09-29"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.Command;","lastModifiedDate":"2016-09-22"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.CommandResult;","lastModifiedDate":"2016-09-22"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.exceptions.CommandException;","lastModifiedDate":"2017-02-05"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import seedu.address.logic.parser.AddressBookParser;","lastModifiedDate":"2017-07-07"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import seedu.address.logic.parser.exceptions.ParseException;","lastModifiedDate":"2017-03-11"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2016-09-25"},{"lineNumber":16,"author":{"gitId":"-"},"content":"import seedu.address.model.ReadOnlyAddressBook;","lastModifiedDate":"2018-12-03"},{"lineNumber":17,"author":{"gitId":"WJunHong"},"content":"import seedu.address.model.ReadOnlyBuyerAddressBook;","lastModifiedDate":"2022-03-23"},{"lineNumber":18,"author":{"gitId":"Jacky142857"},"content":"import seedu.address.model.ReadOnlySellerAddressBook;","lastModifiedDate":"2022-03-19"},{"lineNumber":19,"author":{"gitId":"WJunHong"},"content":"import seedu.address.model.buyer.Buyer;","lastModifiedDate":"2022-03-23"},{"lineNumber":20,"author":{"gitId":"cwnm"},"content":"import seedu.address.model.client.Client;","lastModifiedDate":"2022-03-04"},{"lineNumber":21,"author":{"gitId":"Jacky142857"},"content":"import seedu.address.model.seller.Seller;","lastModifiedDate":"2022-03-19"},{"lineNumber":22,"author":{"gitId":"-"},"content":"import seedu.address.storage.Storage;","lastModifiedDate":"2018-12-09"},{"lineNumber":23,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":24,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-09-21"},{"lineNumber":25,"author":{"gitId":"-"},"content":" * The main LogicManager of the app.","lastModifiedDate":"2016-09-22"},{"lineNumber":26,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-09-21"},{"lineNumber":27,"author":{"gitId":"-"},"content":"public class LogicManager implements Logic {","lastModifiedDate":"2018-12-09"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    public static final String FILE_OPS_ERROR_MESSAGE \u003d \"Could not save data to file: \";","lastModifiedDate":"2018-12-09"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    private final Logger logger \u003d LogsCenter.getLogger(LogicManager.class);","lastModifiedDate":"2016-09-29"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-28"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    private final Model model;","lastModifiedDate":"2016-09-25"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    private final Storage storage;","lastModifiedDate":"2018-12-09"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    private final AddressBookParser addressBookParser;","lastModifiedDate":"2017-07-07"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2020-05-27"},{"lineNumber":36,"author":{"gitId":"-"},"content":"     * Constructs a {@code LogicManager} with the given {@code Model} and {@code Storage}.","lastModifiedDate":"2020-05-27"},{"lineNumber":37,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2020-05-27"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    public LogicManager(Model model, Storage storage) {","lastModifiedDate":"2018-12-09"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        this.model \u003d model;","lastModifiedDate":"2016-09-25"},{"lineNumber":40,"author":{"gitId":"-"},"content":"        this.storage \u003d storage;","lastModifiedDate":"2018-12-09"},{"lineNumber":41,"author":{"gitId":"-"},"content":"        addressBookParser \u003d new AddressBookParser();","lastModifiedDate":"2018-01-25"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-21"},{"lineNumber":43,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-25"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    public CommandResult execute(String commandText) throws CommandException, ParseException {","lastModifiedDate":"2017-03-11"},{"lineNumber":46,"author":{"gitId":"-"},"content":"        logger.info(\"----------------[USER COMMAND][\" + commandText + \"]\");","lastModifiedDate":"2016-09-29"},{"lineNumber":47,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        CommandResult commandResult;","lastModifiedDate":"2018-12-09"},{"lineNumber":49,"author":{"gitId":"-"},"content":"        Command command \u003d addressBookParser.parseCommand(commandText);","lastModifiedDate":"2017-07-07"},{"lineNumber":50,"author":{"gitId":"-"},"content":"        commandResult \u003d command.execute(model);","lastModifiedDate":"2019-01-25"},{"lineNumber":51,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":52,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2018-12-09"},{"lineNumber":53,"author":{"gitId":"chuashihong"},"content":"            //storage.saveAddressBook(model.getAddressBook());","lastModifiedDate":"2022-03-30"},{"lineNumber":54,"author":{"gitId":"Jacky142857"},"content":"            storage.saveSellerAddressBook(model.getSellerAddressBook());","lastModifiedDate":"2022-03-19"},{"lineNumber":55,"author":{"gitId":"WJunHong"},"content":"            storage.saveBuyerAddressBook(model.getBuyerAddressBook());","lastModifiedDate":"2022-03-23"},{"lineNumber":56,"author":{"gitId":"-"},"content":"        } catch (IOException ioe) {","lastModifiedDate":"2018-12-09"},{"lineNumber":57,"author":{"gitId":"-"},"content":"            throw new CommandException(FILE_OPS_ERROR_MESSAGE + ioe, ioe);","lastModifiedDate":"2018-12-09"},{"lineNumber":58,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-12-09"},{"lineNumber":59,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":60,"author":{"gitId":"-"},"content":"        return commandResult;","lastModifiedDate":"2018-12-09"},{"lineNumber":61,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-21"},{"lineNumber":62,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":63,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2018-12-03"},{"lineNumber":64,"author":{"gitId":"-"},"content":"    public ReadOnlyAddressBook getAddressBook() {","lastModifiedDate":"2018-12-03"},{"lineNumber":65,"author":{"gitId":"-"},"content":"        return model.getAddressBook();","lastModifiedDate":"2018-12-03"},{"lineNumber":66,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-12-03"},{"lineNumber":67,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-03"},{"lineNumber":68,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-25"},{"lineNumber":69,"author":{"gitId":"cwnm"},"content":"    public ObservableList\u003cClient\u003e getFilteredclientList() {","lastModifiedDate":"2022-03-04"},{"lineNumber":70,"author":{"gitId":"cwnm"},"content":"        return model.getFilteredClientList();","lastModifiedDate":"2022-03-04"},{"lineNumber":71,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":72,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-29"},{"lineNumber":73,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2018-11-27"},{"lineNumber":74,"author":{"gitId":"-"},"content":"    public Path getAddressBookFilePath() {","lastModifiedDate":"2018-11-27"},{"lineNumber":75,"author":{"gitId":"-"},"content":"        return model.getAddressBookFilePath();","lastModifiedDate":"2018-11-27"},{"lineNumber":76,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":77,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":78,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2018-11-27"},{"lineNumber":79,"author":{"gitId":"-"},"content":"    public GuiSettings getGuiSettings() {","lastModifiedDate":"2018-11-27"},{"lineNumber":80,"author":{"gitId":"-"},"content":"        return model.getGuiSettings();","lastModifiedDate":"2018-11-27"},{"lineNumber":81,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":82,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":83,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2018-11-27"},{"lineNumber":84,"author":{"gitId":"-"},"content":"    public void setGuiSettings(GuiSettings guiSettings) {","lastModifiedDate":"2018-11-27"},{"lineNumber":85,"author":{"gitId":"-"},"content":"        model.setGuiSettings(guiSettings);","lastModifiedDate":"2018-11-27"},{"lineNumber":86,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":87,"author":{"gitId":"Jacky142857"},"content":"","lastModifiedDate":"2022-03-19"},{"lineNumber":88,"author":{"gitId":"Jacky142857"},"content":"    @Override","lastModifiedDate":"2022-03-19"},{"lineNumber":89,"author":{"gitId":"Jacky142857"},"content":"    public ReadOnlySellerAddressBook getSellerAddressBook() {","lastModifiedDate":"2022-03-19"},{"lineNumber":90,"author":{"gitId":"Jacky142857"},"content":"        return model.getSellerAddressBook();","lastModifiedDate":"2022-03-19"},{"lineNumber":91,"author":{"gitId":"Jacky142857"},"content":"    }","lastModifiedDate":"2022-03-19"},{"lineNumber":92,"author":{"gitId":"Jacky142857"},"content":"","lastModifiedDate":"2022-03-19"},{"lineNumber":93,"author":{"gitId":"Jacky142857"},"content":"    @Override","lastModifiedDate":"2022-03-19"},{"lineNumber":94,"author":{"gitId":"Jacky142857"},"content":"    public ObservableList\u003cSeller\u003e getFilteredSellerList() {","lastModifiedDate":"2022-03-19"},{"lineNumber":95,"author":{"gitId":"Jacky142857"},"content":"        return model.getFilteredSellerList();","lastModifiedDate":"2022-03-19"},{"lineNumber":96,"author":{"gitId":"Jacky142857"},"content":"    }","lastModifiedDate":"2022-03-19"},{"lineNumber":97,"author":{"gitId":"Jacky142857"},"content":"","lastModifiedDate":"2022-03-19"},{"lineNumber":98,"author":{"gitId":"Jacky142857"},"content":"    @Override","lastModifiedDate":"2022-03-19"},{"lineNumber":99,"author":{"gitId":"Jacky142857"},"content":"    public Path getSellerAddressBookFilePath() {","lastModifiedDate":"2022-03-19"},{"lineNumber":100,"author":{"gitId":"WJunHong"},"content":"        return model.getBuyerAddressBookFilePath();","lastModifiedDate":"2022-03-23"},{"lineNumber":101,"author":{"gitId":"WJunHong"},"content":"    }","lastModifiedDate":"2022-03-23"},{"lineNumber":102,"author":{"gitId":"WJunHong"},"content":"","lastModifiedDate":"2022-03-23"},{"lineNumber":103,"author":{"gitId":"WJunHong"},"content":"    @Override","lastModifiedDate":"2022-03-23"},{"lineNumber":104,"author":{"gitId":"WJunHong"},"content":"    public ReadOnlyBuyerAddressBook getBuyerAddressBook() {","lastModifiedDate":"2022-03-23"},{"lineNumber":105,"author":{"gitId":"WJunHong"},"content":"        return model.getBuyerAddressBook();","lastModifiedDate":"2022-03-23"},{"lineNumber":106,"author":{"gitId":"WJunHong"},"content":"    }","lastModifiedDate":"2022-03-23"},{"lineNumber":107,"author":{"gitId":"WJunHong"},"content":"","lastModifiedDate":"2022-03-23"},{"lineNumber":108,"author":{"gitId":"WJunHong"},"content":"    @Override","lastModifiedDate":"2022-03-23"},{"lineNumber":109,"author":{"gitId":"WJunHong"},"content":"    public ObservableList\u003cBuyer\u003e getFilteredBuyerList() {","lastModifiedDate":"2022-03-23"},{"lineNumber":110,"author":{"gitId":"WJunHong"},"content":"        return model.getFilteredBuyerList();","lastModifiedDate":"2022-03-23"},{"lineNumber":111,"author":{"gitId":"WJunHong"},"content":"    }","lastModifiedDate":"2022-03-23"},{"lineNumber":112,"author":{"gitId":"WJunHong"},"content":"","lastModifiedDate":"2022-03-23"},{"lineNumber":113,"author":{"gitId":"WJunHong"},"content":"    @Override","lastModifiedDate":"2022-03-23"},{"lineNumber":114,"author":{"gitId":"WJunHong"},"content":"    public Path getBuyerAddressBookFilePath() {","lastModifiedDate":"2022-03-23"},{"lineNumber":115,"author":{"gitId":"WJunHong"},"content":"        return model.getBuyerAddressBookFilePath();","lastModifiedDate":"2022-03-23"},{"lineNumber":116,"author":{"gitId":"Jacky142857"},"content":"    }","lastModifiedDate":"2022-03-19"},{"lineNumber":117,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-09-21"}],"authorContributionMap":{"WJunHong":19,"Jacky142857":17,"-":77,"cwnm":3,"chuashihong":1}},{"path":"src/main/java/seedu/address/logic/commands/AddBuyerCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"WJunHong"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2022-03-14"},{"lineNumber":2,"author":{"gitId":"WJunHong"},"content":"","lastModifiedDate":"2022-03-14"},{"lineNumber":3,"author":{"gitId":"WJunHong"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2022-03-14"},{"lineNumber":4,"author":{"gitId":"WJunHong"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_NAME;","lastModifiedDate":"2022-03-14"},{"lineNumber":5,"author":{"gitId":"WJunHong"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_PHONE;","lastModifiedDate":"2022-03-14"},{"lineNumber":6,"author":{"gitId":"WJunHong"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_TAG;","lastModifiedDate":"2022-03-14"},{"lineNumber":7,"author":{"gitId":"WJunHong"},"content":"","lastModifiedDate":"2022-03-14"},{"lineNumber":8,"author":{"gitId":"WJunHong"},"content":"import seedu.address.logic.commands.exceptions.CommandException;","lastModifiedDate":"2022-03-14"},{"lineNumber":9,"author":{"gitId":"WJunHong"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2022-03-14"},{"lineNumber":10,"author":{"gitId":"WJunHong"},"content":"import seedu.address.model.buyer.Buyer;","lastModifiedDate":"2022-03-14"},{"lineNumber":11,"author":{"gitId":"WJunHong"},"content":"","lastModifiedDate":"2022-03-14"},{"lineNumber":12,"author":{"gitId":"WJunHong"},"content":"public class AddBuyerCommand extends Command {","lastModifiedDate":"2022-03-14"},{"lineNumber":13,"author":{"gitId":"WJunHong"},"content":"","lastModifiedDate":"2022-03-14"},{"lineNumber":14,"author":{"gitId":"WJunHong"},"content":"    public static final String COMMAND_WORD \u003d \"add-b\";","lastModifiedDate":"2022-03-29"},{"lineNumber":15,"author":{"gitId":"WJunHong"},"content":"","lastModifiedDate":"2022-03-14"},{"lineNumber":16,"author":{"gitId":"WJunHong"},"content":"    public static final String MESSAGE_USAGE \u003d COMMAND_WORD + \": Add a new buyer. \"","lastModifiedDate":"2022-03-14"},{"lineNumber":17,"author":{"gitId":"WJunHong"},"content":"            + \"Parameters: \"","lastModifiedDate":"2022-03-14"},{"lineNumber":18,"author":{"gitId":"WJunHong"},"content":"            + PREFIX_NAME + \"NAME \"","lastModifiedDate":"2022-03-14"},{"lineNumber":19,"author":{"gitId":"WJunHong"},"content":"            + PREFIX_PHONE + \"PHONE \"","lastModifiedDate":"2022-03-14"},{"lineNumber":20,"author":{"gitId":"WJunHong"},"content":"            + \"[\" + PREFIX_TAG + \"TAG]...\\n\"","lastModifiedDate":"2022-03-14"},{"lineNumber":21,"author":{"gitId":"chuashihong"},"content":"            + \"Must include: n/ p/ , \u0027t/\u0027 is optional\\n\"","lastModifiedDate":"2022-03-23"},{"lineNumber":22,"author":{"gitId":"WJunHong"},"content":"            + \"Example: \" + COMMAND_WORD + \" \"","lastModifiedDate":"2022-03-14"},{"lineNumber":23,"author":{"gitId":"WJunHong"},"content":"            + PREFIX_NAME + \"John Doe \"","lastModifiedDate":"2022-03-14"},{"lineNumber":24,"author":{"gitId":"WJunHong"},"content":"            + PREFIX_PHONE + \"98765432 \"","lastModifiedDate":"2022-03-14"},{"lineNumber":25,"author":{"gitId":"WJunHong"},"content":"            + PREFIX_TAG + \"friends \"","lastModifiedDate":"2022-03-14"},{"lineNumber":26,"author":{"gitId":"WJunHong"},"content":"            + PREFIX_TAG + \"owesMoney\";","lastModifiedDate":"2022-03-14"},{"lineNumber":27,"author":{"gitId":"WJunHong"},"content":"","lastModifiedDate":"2022-03-14"},{"lineNumber":28,"author":{"gitId":"WJunHong"},"content":"    public static final String MESSAGE_SUCCESS \u003d \"New buyer added: %1$s\";","lastModifiedDate":"2022-03-14"},{"lineNumber":29,"author":{"gitId":"WJunHong"},"content":"    public static final String MESSAGE_DUPLICATE_CLIENT \u003d \"This buyer already exists\";","lastModifiedDate":"2022-03-14"},{"lineNumber":30,"author":{"gitId":"WJunHong"},"content":"","lastModifiedDate":"2022-03-14"},{"lineNumber":31,"author":{"gitId":"WJunHong"},"content":"    private final Buyer toAdd;","lastModifiedDate":"2022-03-14"},{"lineNumber":32,"author":{"gitId":"WJunHong"},"content":"","lastModifiedDate":"2022-03-14"},{"lineNumber":33,"author":{"gitId":"WJunHong"},"content":"    /**","lastModifiedDate":"2022-03-14"},{"lineNumber":34,"author":{"gitId":"WJunHong"},"content":"     * Creates an AddBuyerCommand to add the specified {@code buyer}","lastModifiedDate":"2022-03-14"},{"lineNumber":35,"author":{"gitId":"WJunHong"},"content":"     */","lastModifiedDate":"2022-03-14"},{"lineNumber":36,"author":{"gitId":"WJunHong"},"content":"    public AddBuyerCommand(Buyer buyer) {","lastModifiedDate":"2022-03-14"},{"lineNumber":37,"author":{"gitId":"WJunHong"},"content":"        requireNonNull(buyer);","lastModifiedDate":"2022-03-14"},{"lineNumber":38,"author":{"gitId":"WJunHong"},"content":"        toAdd \u003d buyer;","lastModifiedDate":"2022-03-14"},{"lineNumber":39,"author":{"gitId":"WJunHong"},"content":"    }","lastModifiedDate":"2022-03-14"},{"lineNumber":40,"author":{"gitId":"WJunHong"},"content":"","lastModifiedDate":"2022-03-14"},{"lineNumber":41,"author":{"gitId":"WJunHong"},"content":"    @Override","lastModifiedDate":"2022-03-14"},{"lineNumber":42,"author":{"gitId":"WJunHong"},"content":"    public CommandResult execute(Model model) throws CommandException {","lastModifiedDate":"2022-03-14"},{"lineNumber":43,"author":{"gitId":"WJunHong"},"content":"        requireNonNull(model);","lastModifiedDate":"2022-03-14"},{"lineNumber":44,"author":{"gitId":"WJunHong"},"content":"","lastModifiedDate":"2022-03-14"},{"lineNumber":45,"author":{"gitId":"WJunHong"},"content":"        if (model.hasBuyer(toAdd)) {","lastModifiedDate":"2022-03-16"},{"lineNumber":46,"author":{"gitId":"WJunHong"},"content":"            throw new CommandException(MESSAGE_DUPLICATE_CLIENT);","lastModifiedDate":"2022-03-14"},{"lineNumber":47,"author":{"gitId":"WJunHong"},"content":"        }","lastModifiedDate":"2022-03-14"},{"lineNumber":48,"author":{"gitId":"WJunHong"},"content":"","lastModifiedDate":"2022-03-14"},{"lineNumber":49,"author":{"gitId":"WJunHong"},"content":"        model.addBuyer(toAdd);","lastModifiedDate":"2022-03-16"},{"lineNumber":50,"author":{"gitId":"WJunHong"},"content":"        return new CommandResult(String.format(MESSAGE_SUCCESS, toAdd));","lastModifiedDate":"2022-03-14"},{"lineNumber":51,"author":{"gitId":"WJunHong"},"content":"    }","lastModifiedDate":"2022-03-14"},{"lineNumber":52,"author":{"gitId":"WJunHong"},"content":"","lastModifiedDate":"2022-03-14"},{"lineNumber":53,"author":{"gitId":"WJunHong"},"content":"    @Override","lastModifiedDate":"2022-03-14"},{"lineNumber":54,"author":{"gitId":"WJunHong"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2022-03-14"},{"lineNumber":55,"author":{"gitId":"WJunHong"},"content":"        return other \u003d\u003d this // short circuit if same object","lastModifiedDate":"2022-03-14"},{"lineNumber":56,"author":{"gitId":"WJunHong"},"content":"                || (other instanceof AddBuyerCommand // instanceof handles nulls","lastModifiedDate":"2022-03-16"},{"lineNumber":57,"author":{"gitId":"WJunHong"},"content":"                \u0026\u0026 toAdd.equals(((AddBuyerCommand) other).toAdd));","lastModifiedDate":"2022-03-16"},{"lineNumber":58,"author":{"gitId":"WJunHong"},"content":"    }","lastModifiedDate":"2022-03-14"},{"lineNumber":59,"author":{"gitId":"WJunHong"},"content":"}","lastModifiedDate":"2022-03-14"}],"authorContributionMap":{"WJunHong":58,"chuashihong":1}},{"path":"src/main/java/seedu/address/logic/commands/AddPropertyToBuyCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"WJunHong"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2022-03-24"},{"lineNumber":2,"author":{"gitId":"WJunHong"},"content":"","lastModifiedDate":"2022-03-24"},{"lineNumber":3,"author":{"gitId":"WJunHong"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2022-03-24"},{"lineNumber":4,"author":{"gitId":"WJunHong"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_HOUSE_TYPE;","lastModifiedDate":"2022-03-24"},{"lineNumber":5,"author":{"gitId":"WJunHong"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_LOCATION;","lastModifiedDate":"2022-03-24"},{"lineNumber":6,"author":{"gitId":"WJunHong"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_PRICE_RANGE;","lastModifiedDate":"2022-03-24"},{"lineNumber":7,"author":{"gitId":"WJunHong"},"content":"","lastModifiedDate":"2022-03-24"},{"lineNumber":8,"author":{"gitId":"WJunHong"},"content":"import java.util.List;","lastModifiedDate":"2022-03-24"},{"lineNumber":9,"author":{"gitId":"WJunHong"},"content":"import java.util.Set;","lastModifiedDate":"2022-03-24"},{"lineNumber":10,"author":{"gitId":"WJunHong"},"content":"","lastModifiedDate":"2022-03-24"},{"lineNumber":11,"author":{"gitId":"WJunHong"},"content":"import seedu.address.commons.core.Messages;","lastModifiedDate":"2022-03-24"},{"lineNumber":12,"author":{"gitId":"WJunHong"},"content":"import seedu.address.commons.core.index.Index;","lastModifiedDate":"2022-03-24"},{"lineNumber":13,"author":{"gitId":"WJunHong"},"content":"import seedu.address.logic.commands.exceptions.CommandException;","lastModifiedDate":"2022-03-24"},{"lineNumber":14,"author":{"gitId":"WJunHong"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2022-03-24"},{"lineNumber":15,"author":{"gitId":"WJunHong"},"content":"import seedu.address.model.buyer.Buyer;","lastModifiedDate":"2022-03-24"},{"lineNumber":16,"author":{"gitId":"WJunHong"},"content":"import seedu.address.model.client.Appointment;","lastModifiedDate":"2022-03-24"},{"lineNumber":17,"author":{"gitId":"WJunHong"},"content":"import seedu.address.model.client.Name;","lastModifiedDate":"2022-03-24"},{"lineNumber":18,"author":{"gitId":"WJunHong"},"content":"import seedu.address.model.client.Phone;","lastModifiedDate":"2022-03-24"},{"lineNumber":19,"author":{"gitId":"WJunHong"},"content":"import seedu.address.model.property.NullPropertyToBuy;","lastModifiedDate":"2022-03-28"},{"lineNumber":20,"author":{"gitId":"WJunHong"},"content":"import seedu.address.model.property.PropertyToBuy;","lastModifiedDate":"2022-03-24"},{"lineNumber":21,"author":{"gitId":"WJunHong"},"content":"import seedu.address.model.tag.Tag;","lastModifiedDate":"2022-03-24"},{"lineNumber":22,"author":{"gitId":"WJunHong"},"content":"","lastModifiedDate":"2022-03-24"},{"lineNumber":23,"author":{"gitId":"WJunHong"},"content":"public class AddPropertyToBuyCommand extends Command {","lastModifiedDate":"2022-03-24"},{"lineNumber":24,"author":{"gitId":"WJunHong"},"content":"","lastModifiedDate":"2022-03-24"},{"lineNumber":25,"author":{"gitId":"WJunHong"},"content":"    public static final String COMMAND_WORD \u003d \"add-ptb\";","lastModifiedDate":"2022-03-24"},{"lineNumber":26,"author":{"gitId":"WJunHong"},"content":"","lastModifiedDate":"2022-03-24"},{"lineNumber":27,"author":{"gitId":"WJunHong"},"content":"    public static final String MESSAGE_USAGE \u003d COMMAND_WORD + \": Add a new buyer\u0027s property. \"","lastModifiedDate":"2022-03-24"},{"lineNumber":28,"author":{"gitId":"WJunHong"},"content":"            + \"Parameters: \"","lastModifiedDate":"2022-03-24"},{"lineNumber":29,"author":{"gitId":"WJunHong"},"content":"            + \"INDEX \"","lastModifiedDate":"2022-03-24"},{"lineNumber":30,"author":{"gitId":"WJunHong"},"content":"            + PREFIX_HOUSE_TYPE + \"HOUSE TYPE \"","lastModifiedDate":"2022-03-24"},{"lineNumber":31,"author":{"gitId":"WJunHong"},"content":"            + PREFIX_LOCATION + \"LOCATION \"","lastModifiedDate":"2022-03-24"},{"lineNumber":32,"author":{"gitId":"WJunHong"},"content":"            + PREFIX_PRICE_RANGE + \"PRICE RANGE \"","lastModifiedDate":"2022-03-24"},{"lineNumber":33,"author":{"gitId":"janald99"},"content":"            + \"Must include: index h/ l/ pr/ \\n\"","lastModifiedDate":"2022-03-27"},{"lineNumber":34,"author":{"gitId":"WJunHong"},"content":"            + \"Ensure INDEX is positive integer \u0026 less than or equal to size of displayed buyer list \\n\"","lastModifiedDate":"2022-04-06"},{"lineNumber":35,"author":{"gitId":"janald99"},"content":"            + \"Example: \" + COMMAND_WORD + \" 2 \"","lastModifiedDate":"2022-03-27"},{"lineNumber":36,"author":{"gitId":"WJunHong"},"content":"            + PREFIX_HOUSE_TYPE + \"HDB \"","lastModifiedDate":"2022-03-24"},{"lineNumber":37,"author":{"gitId":"WJunHong"},"content":"            + PREFIX_LOCATION + \"Bishan \"","lastModifiedDate":"2022-03-24"},{"lineNumber":38,"author":{"gitId":"WJunHong"},"content":"            + PREFIX_PRICE_RANGE + \"400000,500000 \";","lastModifiedDate":"2022-03-24"},{"lineNumber":39,"author":{"gitId":"WJunHong"},"content":"","lastModifiedDate":"2022-03-24"},{"lineNumber":40,"author":{"gitId":"WJunHong"},"content":"    public static final String MESSAGE_SUCCESS \u003d \"New property added for buyer: %1$s\";","lastModifiedDate":"2022-03-24"},{"lineNumber":41,"author":{"gitId":"WJunHong"},"content":"    public static final String MESSAGE_DUPLICATE_PROPERTY \u003d \"The buyer already has a property, cannot add new one\";","lastModifiedDate":"2022-03-27"},{"lineNumber":42,"author":{"gitId":"WJunHong"},"content":"","lastModifiedDate":"2022-03-24"},{"lineNumber":43,"author":{"gitId":"WJunHong"},"content":"    private final Index index;","lastModifiedDate":"2022-03-24"},{"lineNumber":44,"author":{"gitId":"WJunHong"},"content":"    private final PropertyToBuy propertyToBuy;","lastModifiedDate":"2022-03-24"},{"lineNumber":45,"author":{"gitId":"WJunHong"},"content":"","lastModifiedDate":"2022-03-24"},{"lineNumber":46,"author":{"gitId":"WJunHong"},"content":"    /**","lastModifiedDate":"2022-03-24"},{"lineNumber":47,"author":{"gitId":"WJunHong"},"content":"     * Creates an AddBuyerCommand to add the specified {@code buyer}","lastModifiedDate":"2022-03-24"},{"lineNumber":48,"author":{"gitId":"WJunHong"},"content":"     */","lastModifiedDate":"2022-03-24"},{"lineNumber":49,"author":{"gitId":"WJunHong"},"content":"    public AddPropertyToBuyCommand(Index index, PropertyToBuy propertyToBuy) {","lastModifiedDate":"2022-03-24"},{"lineNumber":50,"author":{"gitId":"WJunHong"},"content":"        requireNonNull(propertyToBuy);","lastModifiedDate":"2022-03-24"},{"lineNumber":51,"author":{"gitId":"WJunHong"},"content":"        requireNonNull(index);","lastModifiedDate":"2022-03-24"},{"lineNumber":52,"author":{"gitId":"WJunHong"},"content":"","lastModifiedDate":"2022-03-24"},{"lineNumber":53,"author":{"gitId":"WJunHong"},"content":"        this.index \u003d index;","lastModifiedDate":"2022-03-24"},{"lineNumber":54,"author":{"gitId":"WJunHong"},"content":"        this.propertyToBuy \u003d propertyToBuy;","lastModifiedDate":"2022-03-24"},{"lineNumber":55,"author":{"gitId":"WJunHong"},"content":"    }","lastModifiedDate":"2022-03-24"},{"lineNumber":56,"author":{"gitId":"WJunHong"},"content":"","lastModifiedDate":"2022-03-24"},{"lineNumber":57,"author":{"gitId":"WJunHong"},"content":"    @Override","lastModifiedDate":"2022-03-24"},{"lineNumber":58,"author":{"gitId":"WJunHong"},"content":"    public CommandResult execute(Model model) throws CommandException {","lastModifiedDate":"2022-03-24"},{"lineNumber":59,"author":{"gitId":"WJunHong"},"content":"        requireNonNull(model);","lastModifiedDate":"2022-03-24"},{"lineNumber":60,"author":{"gitId":"WJunHong"},"content":"        List\u003cBuyer\u003e lastShownList \u003d model.getFilteredBuyerList();","lastModifiedDate":"2022-03-24"},{"lineNumber":61,"author":{"gitId":"WJunHong"},"content":"","lastModifiedDate":"2022-03-24"},{"lineNumber":62,"author":{"gitId":"WJunHong"},"content":"        if (index.getZeroBased() \u003e\u003d lastShownList.size()) {","lastModifiedDate":"2022-03-24"},{"lineNumber":63,"author":{"gitId":"WJunHong"},"content":"            throw new CommandException(Messages.MESSAGE_INVALID_BUYER_DISPLAYED_INDEX);","lastModifiedDate":"2022-04-06"},{"lineNumber":64,"author":{"gitId":"WJunHong"},"content":"        }","lastModifiedDate":"2022-03-24"},{"lineNumber":65,"author":{"gitId":"WJunHong"},"content":"","lastModifiedDate":"2022-03-24"},{"lineNumber":66,"author":{"gitId":"WJunHong"},"content":"        Buyer buyerToUpdate \u003d lastShownList.get(index.getZeroBased());","lastModifiedDate":"2022-03-24"},{"lineNumber":67,"author":{"gitId":"WJunHong"},"content":"","lastModifiedDate":"2022-03-24"},{"lineNumber":68,"author":{"gitId":"WJunHong"},"content":"        if (!buyerToUpdate.getPropertyToBuy().equals(NullPropertyToBuy.getNullPropertyToBuy())) {","lastModifiedDate":"2022-03-28"},{"lineNumber":69,"author":{"gitId":"WJunHong"},"content":"            throw new CommandException(MESSAGE_DUPLICATE_PROPERTY);","lastModifiedDate":"2022-03-24"},{"lineNumber":70,"author":{"gitId":"WJunHong"},"content":"        }","lastModifiedDate":"2022-03-24"},{"lineNumber":71,"author":{"gitId":"WJunHong"},"content":"        Buyer buyerWithProperty \u003d createPropertyForBuyer(buyerToUpdate, propertyToBuy);","lastModifiedDate":"2022-03-24"},{"lineNumber":72,"author":{"gitId":"WJunHong"},"content":"        model.setBuyer(buyerToUpdate, buyerWithProperty);","lastModifiedDate":"2022-03-24"},{"lineNumber":73,"author":{"gitId":"WJunHong"},"content":"        model.updateFilteredBuyerList(Model.PREDICATE_SHOW_ALL_BUYERS);","lastModifiedDate":"2022-03-24"},{"lineNumber":74,"author":{"gitId":"WJunHong"},"content":"","lastModifiedDate":"2022-03-24"},{"lineNumber":75,"author":{"gitId":"WJunHong"},"content":"        return new CommandResult(String.format(MESSAGE_SUCCESS, buyerWithProperty));","lastModifiedDate":"2022-03-24"},{"lineNumber":76,"author":{"gitId":"WJunHong"},"content":"    }","lastModifiedDate":"2022-03-24"},{"lineNumber":77,"author":{"gitId":"WJunHong"},"content":"","lastModifiedDate":"2022-03-24"},{"lineNumber":78,"author":{"gitId":"WJunHong"},"content":"    /**","lastModifiedDate":"2022-03-24"},{"lineNumber":79,"author":{"gitId":"WJunHong"},"content":"     * Creates a Buyer instance with the updated PropertyToBuy.","lastModifiedDate":"2022-03-24"},{"lineNumber":80,"author":{"gitId":"WJunHong"},"content":"     *","lastModifiedDate":"2022-03-24"},{"lineNumber":81,"author":{"gitId":"WJunHong"},"content":"     * @param buyer The original buyer.","lastModifiedDate":"2022-03-24"},{"lineNumber":82,"author":{"gitId":"WJunHong"},"content":"     * @param property The new PropertyToBuy.","lastModifiedDate":"2022-03-24"},{"lineNumber":83,"author":{"gitId":"WJunHong"},"content":"     * @return A new Buyer.","lastModifiedDate":"2022-03-24"},{"lineNumber":84,"author":{"gitId":"WJunHong"},"content":"     */","lastModifiedDate":"2022-03-24"},{"lineNumber":85,"author":{"gitId":"WJunHong"},"content":"    public Buyer createPropertyForBuyer(Buyer buyer, PropertyToBuy property) {","lastModifiedDate":"2022-03-24"},{"lineNumber":86,"author":{"gitId":"WJunHong"},"content":"        assert buyer !\u003d null;","lastModifiedDate":"2022-03-24"},{"lineNumber":87,"author":{"gitId":"WJunHong"},"content":"","lastModifiedDate":"2022-03-24"},{"lineNumber":88,"author":{"gitId":"WJunHong"},"content":"        Name buyerName \u003d buyer.getName();","lastModifiedDate":"2022-03-24"},{"lineNumber":89,"author":{"gitId":"WJunHong"},"content":"        Phone buyerPhone \u003d buyer.getPhone();","lastModifiedDate":"2022-03-24"},{"lineNumber":90,"author":{"gitId":"WJunHong"},"content":"        Set\u003cTag\u003e buyerTags \u003d buyer.getTags();","lastModifiedDate":"2022-03-24"},{"lineNumber":91,"author":{"gitId":"WJunHong"},"content":"        Appointment buyerAppointment \u003d buyer.getAppointment();","lastModifiedDate":"2022-03-24"},{"lineNumber":92,"author":{"gitId":"WJunHong"},"content":"","lastModifiedDate":"2022-03-24"},{"lineNumber":93,"author":{"gitId":"WJunHong"},"content":"        return new Buyer(buyerName, buyerPhone, buyerAppointment, buyerTags, property);","lastModifiedDate":"2022-03-24"},{"lineNumber":94,"author":{"gitId":"WJunHong"},"content":"    }","lastModifiedDate":"2022-03-24"},{"lineNumber":95,"author":{"gitId":"WJunHong"},"content":"","lastModifiedDate":"2022-03-24"},{"lineNumber":96,"author":{"gitId":"WJunHong"},"content":"    @Override","lastModifiedDate":"2022-03-24"},{"lineNumber":97,"author":{"gitId":"WJunHong"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2022-03-24"},{"lineNumber":98,"author":{"gitId":"WJunHong"},"content":"        return other \u003d\u003d this // short circuit if same object","lastModifiedDate":"2022-03-24"},{"lineNumber":99,"author":{"gitId":"WJunHong"},"content":"                || (other instanceof AddPropertyToBuyCommand // instanceof handles nulls","lastModifiedDate":"2022-03-24"},{"lineNumber":100,"author":{"gitId":"WJunHong"},"content":"                \u0026\u0026 propertyToBuy.equals(((AddPropertyToBuyCommand) other).propertyToBuy));","lastModifiedDate":"2022-03-24"},{"lineNumber":101,"author":{"gitId":"WJunHong"},"content":"    }","lastModifiedDate":"2022-03-24"},{"lineNumber":102,"author":{"gitId":"WJunHong"},"content":"}","lastModifiedDate":"2022-03-24"}],"authorContributionMap":{"janald99":2,"WJunHong":100}},{"path":"src/main/java/seedu/address/logic/commands/AddPropertyToSellCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"WJunHong"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2022-03-27"},{"lineNumber":2,"author":{"gitId":"WJunHong"},"content":"","lastModifiedDate":"2022-03-27"},{"lineNumber":3,"author":{"gitId":"WJunHong"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2022-03-27"},{"lineNumber":4,"author":{"gitId":"WJunHong"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_ADDRESS;","lastModifiedDate":"2022-03-27"},{"lineNumber":5,"author":{"gitId":"WJunHong"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_HOUSE_TYPE;","lastModifiedDate":"2022-03-27"},{"lineNumber":6,"author":{"gitId":"WJunHong"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_LOCATION;","lastModifiedDate":"2022-03-28"},{"lineNumber":7,"author":{"gitId":"WJunHong"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_PRICE_RANGE;","lastModifiedDate":"2022-03-27"},{"lineNumber":8,"author":{"gitId":"WJunHong"},"content":"","lastModifiedDate":"2022-03-27"},{"lineNumber":9,"author":{"gitId":"WJunHong"},"content":"import java.util.List;","lastModifiedDate":"2022-03-27"},{"lineNumber":10,"author":{"gitId":"WJunHong"},"content":"import java.util.Set;","lastModifiedDate":"2022-03-27"},{"lineNumber":11,"author":{"gitId":"WJunHong"},"content":"","lastModifiedDate":"2022-03-27"},{"lineNumber":12,"author":{"gitId":"WJunHong"},"content":"import seedu.address.commons.core.Messages;","lastModifiedDate":"2022-03-27"},{"lineNumber":13,"author":{"gitId":"WJunHong"},"content":"import seedu.address.commons.core.index.Index;","lastModifiedDate":"2022-03-27"},{"lineNumber":14,"author":{"gitId":"WJunHong"},"content":"import seedu.address.logic.commands.exceptions.CommandException;","lastModifiedDate":"2022-03-27"},{"lineNumber":15,"author":{"gitId":"WJunHong"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2022-03-27"},{"lineNumber":16,"author":{"gitId":"WJunHong"},"content":"import seedu.address.model.client.Appointment;","lastModifiedDate":"2022-03-27"},{"lineNumber":17,"author":{"gitId":"WJunHong"},"content":"import seedu.address.model.client.Name;","lastModifiedDate":"2022-03-27"},{"lineNumber":18,"author":{"gitId":"WJunHong"},"content":"import seedu.address.model.client.Phone;","lastModifiedDate":"2022-03-27"},{"lineNumber":19,"author":{"gitId":"WJunHong"},"content":"import seedu.address.model.property.NullPropertyToSell;","lastModifiedDate":"2022-03-28"},{"lineNumber":20,"author":{"gitId":"WJunHong"},"content":"import seedu.address.model.property.PropertyToSell;","lastModifiedDate":"2022-03-27"},{"lineNumber":21,"author":{"gitId":"WJunHong"},"content":"import seedu.address.model.seller.Seller;","lastModifiedDate":"2022-03-27"},{"lineNumber":22,"author":{"gitId":"WJunHong"},"content":"import seedu.address.model.tag.Tag;","lastModifiedDate":"2022-03-27"},{"lineNumber":23,"author":{"gitId":"WJunHong"},"content":"","lastModifiedDate":"2022-03-27"},{"lineNumber":24,"author":{"gitId":"WJunHong"},"content":"public class AddPropertyToSellCommand extends Command {","lastModifiedDate":"2022-03-27"},{"lineNumber":25,"author":{"gitId":"WJunHong"},"content":"","lastModifiedDate":"2022-03-27"},{"lineNumber":26,"author":{"gitId":"WJunHong"},"content":"    public static final String COMMAND_WORD \u003d \"add-pts\";","lastModifiedDate":"2022-03-27"},{"lineNumber":27,"author":{"gitId":"WJunHong"},"content":"","lastModifiedDate":"2022-03-27"},{"lineNumber":28,"author":{"gitId":"WJunHong"},"content":"    public static final String MESSAGE_USAGE \u003d COMMAND_WORD + \": Add a new seller\u0027s property. \"","lastModifiedDate":"2022-03-27"},{"lineNumber":29,"author":{"gitId":"WJunHong"},"content":"            + \"Parameters: \"","lastModifiedDate":"2022-03-27"},{"lineNumber":30,"author":{"gitId":"WJunHong"},"content":"            + \"INDEX \"","lastModifiedDate":"2022-03-27"},{"lineNumber":31,"author":{"gitId":"WJunHong"},"content":"            + PREFIX_HOUSE_TYPE + \"HOUSE TYPE \"","lastModifiedDate":"2022-03-27"},{"lineNumber":32,"author":{"gitId":"WJunHong"},"content":"            + PREFIX_ADDRESS + \"ADDRESS \"","lastModifiedDate":"2022-03-27"},{"lineNumber":33,"author":{"gitId":"WJunHong"},"content":"            + PREFIX_PRICE_RANGE + \"PRICE RANGE \"","lastModifiedDate":"2022-03-27"},{"lineNumber":34,"author":{"gitId":"WJunHong"},"content":"            + PREFIX_LOCATION + \"LOCATION\"","lastModifiedDate":"2022-03-27"},{"lineNumber":35,"author":{"gitId":"WJunHong"},"content":"            + \"Must include: index h/ a/ pr/ l/ \\n\"","lastModifiedDate":"2022-03-27"},{"lineNumber":36,"author":{"gitId":"WJunHong"},"content":"            + \"Ensure INDEX is positive integer \u0026 less than or equal to size of displayed seller list \\n\"","lastModifiedDate":"2022-04-06"},{"lineNumber":37,"author":{"gitId":"WJunHong"},"content":"            + \"Example: \" + COMMAND_WORD + \" 2 \"","lastModifiedDate":"2022-03-27"},{"lineNumber":38,"author":{"gitId":"WJunHong"},"content":"            + PREFIX_HOUSE_TYPE + \"HDB \"","lastModifiedDate":"2022-03-27"},{"lineNumber":39,"author":{"gitId":"WJunHong"},"content":"            + PREFIX_ADDRESS + \"Blk 123, Serangoon Ave 1 #09-369 \"","lastModifiedDate":"2022-03-27"},{"lineNumber":40,"author":{"gitId":"WJunHong"},"content":"            + PREFIX_PRICE_RANGE + \"400000,500000 \"","lastModifiedDate":"2022-03-27"},{"lineNumber":41,"author":{"gitId":"WJunHong"},"content":"            + PREFIX_LOCATION + \"Serangoon\";","lastModifiedDate":"2022-03-27"},{"lineNumber":42,"author":{"gitId":"WJunHong"},"content":"","lastModifiedDate":"2022-03-27"},{"lineNumber":43,"author":{"gitId":"WJunHong"},"content":"    public static final String MESSAGE_SUCCESS \u003d \"New property added for seller: %1$s\";","lastModifiedDate":"2022-03-27"},{"lineNumber":44,"author":{"gitId":"WJunHong"},"content":"    public static final String MESSAGE_DUPLICATE_PROPERTY \u003d \"The seller already has a property, cannot add new one\";","lastModifiedDate":"2022-03-27"},{"lineNumber":45,"author":{"gitId":"WJunHong"},"content":"","lastModifiedDate":"2022-03-27"},{"lineNumber":46,"author":{"gitId":"WJunHong"},"content":"    private final Index index;","lastModifiedDate":"2022-03-27"},{"lineNumber":47,"author":{"gitId":"WJunHong"},"content":"    private final PropertyToSell propertyToSell;","lastModifiedDate":"2022-03-27"},{"lineNumber":48,"author":{"gitId":"WJunHong"},"content":"","lastModifiedDate":"2022-03-27"},{"lineNumber":49,"author":{"gitId":"WJunHong"},"content":"    /**","lastModifiedDate":"2022-03-27"},{"lineNumber":50,"author":{"gitId":"WJunHong"},"content":"     * Creates an AddSellerCommand to add the specified {@code seller}","lastModifiedDate":"2022-03-27"},{"lineNumber":51,"author":{"gitId":"WJunHong"},"content":"     */","lastModifiedDate":"2022-03-27"},{"lineNumber":52,"author":{"gitId":"WJunHong"},"content":"    public AddPropertyToSellCommand(Index index, PropertyToSell propertyToSell) {","lastModifiedDate":"2022-03-27"},{"lineNumber":53,"author":{"gitId":"WJunHong"},"content":"        requireNonNull(propertyToSell);","lastModifiedDate":"2022-03-27"},{"lineNumber":54,"author":{"gitId":"WJunHong"},"content":"        requireNonNull(index);","lastModifiedDate":"2022-03-27"},{"lineNumber":55,"author":{"gitId":"WJunHong"},"content":"","lastModifiedDate":"2022-03-27"},{"lineNumber":56,"author":{"gitId":"WJunHong"},"content":"        this.index \u003d index;","lastModifiedDate":"2022-03-27"},{"lineNumber":57,"author":{"gitId":"WJunHong"},"content":"        this.propertyToSell \u003d propertyToSell;","lastModifiedDate":"2022-03-27"},{"lineNumber":58,"author":{"gitId":"WJunHong"},"content":"    }","lastModifiedDate":"2022-03-27"},{"lineNumber":59,"author":{"gitId":"WJunHong"},"content":"","lastModifiedDate":"2022-03-27"},{"lineNumber":60,"author":{"gitId":"WJunHong"},"content":"    @Override","lastModifiedDate":"2022-03-27"},{"lineNumber":61,"author":{"gitId":"WJunHong"},"content":"    public CommandResult execute(Model model) throws CommandException {","lastModifiedDate":"2022-03-27"},{"lineNumber":62,"author":{"gitId":"WJunHong"},"content":"        requireNonNull(model);","lastModifiedDate":"2022-03-27"},{"lineNumber":63,"author":{"gitId":"WJunHong"},"content":"        List\u003cSeller\u003e lastShownList \u003d model.getFilteredSellerList();","lastModifiedDate":"2022-03-27"},{"lineNumber":64,"author":{"gitId":"WJunHong"},"content":"","lastModifiedDate":"2022-03-27"},{"lineNumber":65,"author":{"gitId":"WJunHong"},"content":"        if (index.getZeroBased() \u003e\u003d lastShownList.size()) {","lastModifiedDate":"2022-03-27"},{"lineNumber":66,"author":{"gitId":"WJunHong"},"content":"            throw new CommandException(Messages.MESSAGE_INVALID_SELLER_DISPLAYED_INDEX);","lastModifiedDate":"2022-04-06"},{"lineNumber":67,"author":{"gitId":"WJunHong"},"content":"        }","lastModifiedDate":"2022-03-27"},{"lineNumber":68,"author":{"gitId":"WJunHong"},"content":"","lastModifiedDate":"2022-03-27"},{"lineNumber":69,"author":{"gitId":"WJunHong"},"content":"        Seller sellerToUpdate \u003d lastShownList.get(index.getZeroBased());","lastModifiedDate":"2022-03-27"},{"lineNumber":70,"author":{"gitId":"WJunHong"},"content":"","lastModifiedDate":"2022-03-27"},{"lineNumber":71,"author":{"gitId":"WJunHong"},"content":"        if (!sellerToUpdate.getPropertyToSell().equals(NullPropertyToSell.getNullPropertyToSell())) {","lastModifiedDate":"2022-03-27"},{"lineNumber":72,"author":{"gitId":"WJunHong"},"content":"            throw new CommandException(MESSAGE_DUPLICATE_PROPERTY);","lastModifiedDate":"2022-03-27"},{"lineNumber":73,"author":{"gitId":"WJunHong"},"content":"        }","lastModifiedDate":"2022-03-27"},{"lineNumber":74,"author":{"gitId":"WJunHong"},"content":"        Seller sellerWithProperty \u003d createPropertyForSeller(sellerToUpdate, propertyToSell);","lastModifiedDate":"2022-03-27"},{"lineNumber":75,"author":{"gitId":"WJunHong"},"content":"        model.setSeller(sellerToUpdate, sellerWithProperty);","lastModifiedDate":"2022-03-27"},{"lineNumber":76,"author":{"gitId":"WJunHong"},"content":"        model.updateFilteredSellerList(Model.PREDICATE_SHOW_ALL_SELLERS);","lastModifiedDate":"2022-03-27"},{"lineNumber":77,"author":{"gitId":"WJunHong"},"content":"","lastModifiedDate":"2022-03-27"},{"lineNumber":78,"author":{"gitId":"WJunHong"},"content":"        return new CommandResult(String.format(MESSAGE_SUCCESS, sellerWithProperty));","lastModifiedDate":"2022-03-27"},{"lineNumber":79,"author":{"gitId":"WJunHong"},"content":"    }","lastModifiedDate":"2022-03-27"},{"lineNumber":80,"author":{"gitId":"WJunHong"},"content":"","lastModifiedDate":"2022-03-27"},{"lineNumber":81,"author":{"gitId":"WJunHong"},"content":"    /**","lastModifiedDate":"2022-03-27"},{"lineNumber":82,"author":{"gitId":"WJunHong"},"content":"     * Creates a Seller instance with the updated PropertyToSell.","lastModifiedDate":"2022-03-27"},{"lineNumber":83,"author":{"gitId":"WJunHong"},"content":"     *","lastModifiedDate":"2022-03-27"},{"lineNumber":84,"author":{"gitId":"WJunHong"},"content":"     * @param seller The original seller.","lastModifiedDate":"2022-03-27"},{"lineNumber":85,"author":{"gitId":"WJunHong"},"content":"     * @param property The new PropertyToSell.","lastModifiedDate":"2022-03-27"},{"lineNumber":86,"author":{"gitId":"WJunHong"},"content":"     * @return A new Seller.","lastModifiedDate":"2022-03-27"},{"lineNumber":87,"author":{"gitId":"WJunHong"},"content":"     */","lastModifiedDate":"2022-03-27"},{"lineNumber":88,"author":{"gitId":"WJunHong"},"content":"    public Seller createPropertyForSeller(Seller seller, PropertyToSell property) {","lastModifiedDate":"2022-03-27"},{"lineNumber":89,"author":{"gitId":"WJunHong"},"content":"        assert seller !\u003d null;","lastModifiedDate":"2022-03-27"},{"lineNumber":90,"author":{"gitId":"WJunHong"},"content":"","lastModifiedDate":"2022-03-27"},{"lineNumber":91,"author":{"gitId":"WJunHong"},"content":"        Name sellerName \u003d seller.getName();","lastModifiedDate":"2022-03-27"},{"lineNumber":92,"author":{"gitId":"WJunHong"},"content":"        Phone sellerPhone \u003d seller.getPhone();","lastModifiedDate":"2022-03-27"},{"lineNumber":93,"author":{"gitId":"WJunHong"},"content":"        Set\u003cTag\u003e sellerTags \u003d seller.getTags();","lastModifiedDate":"2022-03-27"},{"lineNumber":94,"author":{"gitId":"WJunHong"},"content":"        Appointment sellerAppointment \u003d seller.getAppointment();","lastModifiedDate":"2022-03-27"},{"lineNumber":95,"author":{"gitId":"WJunHong"},"content":"","lastModifiedDate":"2022-03-27"},{"lineNumber":96,"author":{"gitId":"WJunHong"},"content":"        return new Seller(sellerName, sellerPhone, sellerAppointment, sellerTags, property);","lastModifiedDate":"2022-03-27"},{"lineNumber":97,"author":{"gitId":"WJunHong"},"content":"    }","lastModifiedDate":"2022-03-27"},{"lineNumber":98,"author":{"gitId":"WJunHong"},"content":"","lastModifiedDate":"2022-03-27"},{"lineNumber":99,"author":{"gitId":"WJunHong"},"content":"    @Override","lastModifiedDate":"2022-03-27"},{"lineNumber":100,"author":{"gitId":"WJunHong"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2022-03-27"},{"lineNumber":101,"author":{"gitId":"WJunHong"},"content":"        return other \u003d\u003d this // short circuit if same object","lastModifiedDate":"2022-03-27"},{"lineNumber":102,"author":{"gitId":"WJunHong"},"content":"                || (other instanceof AddPropertyToSellCommand // instanceof handles nulls","lastModifiedDate":"2022-03-27"},{"lineNumber":103,"author":{"gitId":"WJunHong"},"content":"                \u0026\u0026 propertyToSell.equals(((AddPropertyToSellCommand) other).propertyToSell));","lastModifiedDate":"2022-03-27"},{"lineNumber":104,"author":{"gitId":"WJunHong"},"content":"    }","lastModifiedDate":"2022-03-27"},{"lineNumber":105,"author":{"gitId":"WJunHong"},"content":"}","lastModifiedDate":"2022-03-27"}],"authorContributionMap":{"WJunHong":105}},{"path":"src/main/java/seedu/address/logic/commands/AddSellerCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2022-03-16"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-03-16"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2022-03-16"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_NAME;","lastModifiedDate":"2022-03-16"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_PHONE;","lastModifiedDate":"2022-03-16"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_TAG;","lastModifiedDate":"2022-03-16"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-03-16"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.exceptions.CommandException;","lastModifiedDate":"2022-03-16"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2022-03-16"},{"lineNumber":10,"author":{"gitId":"cwnm"},"content":"import seedu.address.model.seller.Seller;","lastModifiedDate":"2022-03-16"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-03-16"},{"lineNumber":12,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2022-03-16"},{"lineNumber":13,"author":{"gitId":"cwnm"},"content":" * Adds a client to the address book.","lastModifiedDate":"2022-03-16"},{"lineNumber":14,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2022-03-16"},{"lineNumber":15,"author":{"gitId":"cwnm"},"content":"public class AddSellerCommand extends Command {","lastModifiedDate":"2022-03-16"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-03-16"},{"lineNumber":17,"author":{"gitId":"WJunHong"},"content":"    public static final String COMMAND_WORD \u003d \"add-s\";","lastModifiedDate":"2022-03-29"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-03-16"},{"lineNumber":19,"author":{"gitId":"cwnm"},"content":"    public static final String MESSAGE_USAGE \u003d COMMAND_WORD + \": Adds a seller to the address book. \"","lastModifiedDate":"2022-03-17"},{"lineNumber":20,"author":{"gitId":"-"},"content":"            + \"Parameters: \"","lastModifiedDate":"2022-03-16"},{"lineNumber":21,"author":{"gitId":"-"},"content":"            + PREFIX_NAME + \"NAME \"","lastModifiedDate":"2022-03-16"},{"lineNumber":22,"author":{"gitId":"-"},"content":"            + PREFIX_PHONE + \"PHONE \"","lastModifiedDate":"2022-03-16"},{"lineNumber":23,"author":{"gitId":"-"},"content":"            + \"[\" + PREFIX_TAG + \"TAG]...\\n\"","lastModifiedDate":"2022-03-16"},{"lineNumber":24,"author":{"gitId":"chuashihong"},"content":"            + \"Must include: n/ p/ , \u0027t/\u0027 is optional\\n\"","lastModifiedDate":"2022-03-23"},{"lineNumber":25,"author":{"gitId":"-"},"content":"            + \"Example: \" + COMMAND_WORD + \" \"","lastModifiedDate":"2022-03-16"},{"lineNumber":26,"author":{"gitId":"-"},"content":"            + PREFIX_NAME + \"John Doe \"","lastModifiedDate":"2022-03-16"},{"lineNumber":27,"author":{"gitId":"-"},"content":"            + PREFIX_PHONE + \"98765432 \"","lastModifiedDate":"2022-03-16"},{"lineNumber":28,"author":{"gitId":"-"},"content":"            + PREFIX_TAG + \"friends \"","lastModifiedDate":"2022-03-16"},{"lineNumber":29,"author":{"gitId":"-"},"content":"            + PREFIX_TAG + \"owesMoney\";","lastModifiedDate":"2022-03-16"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-03-16"},{"lineNumber":31,"author":{"gitId":"cwnm"},"content":"    public static final String MESSAGE_SUCCESS \u003d \"New seller added: %1$s\";","lastModifiedDate":"2022-03-17"},{"lineNumber":32,"author":{"gitId":"cwnm"},"content":"    public static final String MESSAGE_DUPLICATE_CLIENT \u003d \"This seller already exists in the address book\";","lastModifiedDate":"2022-03-17"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-03-16"},{"lineNumber":34,"author":{"gitId":"cwnm"},"content":"    private final Seller toAdd;","lastModifiedDate":"2022-03-16"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-03-16"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2022-03-16"},{"lineNumber":37,"author":{"gitId":"cwnm"},"content":"     * Creates an AddCommand to add the specified {@code client}","lastModifiedDate":"2022-03-16"},{"lineNumber":38,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2022-03-16"},{"lineNumber":39,"author":{"gitId":"cwnm"},"content":"    public AddSellerCommand(Seller seller) {","lastModifiedDate":"2022-03-16"},{"lineNumber":40,"author":{"gitId":"cwnm"},"content":"        requireNonNull(seller);","lastModifiedDate":"2022-03-16"},{"lineNumber":41,"author":{"gitId":"cwnm"},"content":"        toAdd \u003d seller;","lastModifiedDate":"2022-03-16"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2022-03-16"},{"lineNumber":43,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-03-16"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2022-03-16"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    public CommandResult execute(Model model) throws CommandException {","lastModifiedDate":"2022-03-16"},{"lineNumber":46,"author":{"gitId":"-"},"content":"        requireNonNull(model);","lastModifiedDate":"2022-03-16"},{"lineNumber":47,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-03-16"},{"lineNumber":48,"author":{"gitId":"cwnm"},"content":"        if (model.hasSeller(toAdd)) {","lastModifiedDate":"2022-03-17"},{"lineNumber":49,"author":{"gitId":"cwnm"},"content":"            throw new CommandException(MESSAGE_DUPLICATE_CLIENT);","lastModifiedDate":"2022-03-16"},{"lineNumber":50,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2022-03-16"},{"lineNumber":51,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-03-16"},{"lineNumber":52,"author":{"gitId":"cwnm"},"content":"        model.addSeller(toAdd);","lastModifiedDate":"2022-03-17"},{"lineNumber":53,"author":{"gitId":"-"},"content":"        return new CommandResult(String.format(MESSAGE_SUCCESS, toAdd));","lastModifiedDate":"2022-03-16"},{"lineNumber":54,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2022-03-16"},{"lineNumber":55,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-03-16"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2022-03-16"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2022-03-16"},{"lineNumber":58,"author":{"gitId":"-"},"content":"        return other \u003d\u003d this // short circuit if same object","lastModifiedDate":"2022-03-16"},{"lineNumber":59,"author":{"gitId":"cwnm"},"content":"                || (other instanceof AddSellerCommand // instanceof handles nulls","lastModifiedDate":"2022-03-16"},{"lineNumber":60,"author":{"gitId":"cwnm"},"content":"                \u0026\u0026 toAdd.equals(((AddSellerCommand) other).toAdd));","lastModifiedDate":"2022-03-16"},{"lineNumber":61,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2022-03-16"},{"lineNumber":62,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2022-03-16"}],"authorContributionMap":{"WJunHong":1,"-":44,"cwnm":16,"chuashihong":1}},{"path":"src/main/java/seedu/address/logic/commands/AppointmentBuyerCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"Jacky142857"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2022-03-27"},{"lineNumber":2,"author":{"gitId":"Jacky142857"},"content":"","lastModifiedDate":"2022-03-27"},{"lineNumber":3,"author":{"gitId":"Jacky142857"},"content":"import static seedu.address.commons.util.CollectionUtil.requireAllNonNull;","lastModifiedDate":"2022-03-27"},{"lineNumber":4,"author":{"gitId":"Jacky142857"},"content":"import static seedu.address.model.Model.PREDICATE_SHOW_ALL_CLIENTS;","lastModifiedDate":"2022-03-27"},{"lineNumber":5,"author":{"gitId":"Jacky142857"},"content":"","lastModifiedDate":"2022-03-27"},{"lineNumber":6,"author":{"gitId":"Jacky142857"},"content":"import java.util.List;","lastModifiedDate":"2022-03-27"},{"lineNumber":7,"author":{"gitId":"Jacky142857"},"content":"","lastModifiedDate":"2022-03-27"},{"lineNumber":8,"author":{"gitId":"Jacky142857"},"content":"import seedu.address.commons.core.Messages;","lastModifiedDate":"2022-03-27"},{"lineNumber":9,"author":{"gitId":"Jacky142857"},"content":"import seedu.address.commons.core.index.Index;","lastModifiedDate":"2022-03-27"},{"lineNumber":10,"author":{"gitId":"Jacky142857"},"content":"import seedu.address.logic.commands.exceptions.CommandException;","lastModifiedDate":"2022-03-27"},{"lineNumber":11,"author":{"gitId":"Jacky142857"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2022-03-27"},{"lineNumber":12,"author":{"gitId":"Jacky142857"},"content":"import seedu.address.model.buyer.Buyer;","lastModifiedDate":"2022-03-27"},{"lineNumber":13,"author":{"gitId":"Jacky142857"},"content":"import seedu.address.model.client.Appointment;","lastModifiedDate":"2022-03-27"},{"lineNumber":14,"author":{"gitId":"Jacky142857"},"content":"","lastModifiedDate":"2022-03-27"},{"lineNumber":15,"author":{"gitId":"Jacky142857"},"content":"public class AppointmentBuyerCommand extends Command {","lastModifiedDate":"2022-03-27"},{"lineNumber":16,"author":{"gitId":"Jacky142857"},"content":"    public static final String COMMAND_WORD \u003d \"appt-b\";","lastModifiedDate":"2022-03-27"},{"lineNumber":17,"author":{"gitId":"Jacky142857"},"content":"    public static final String MESSAGE_EMPTY_INPUT_DATE \u003d \"Please enter the date following the Buyer index\\n\"","lastModifiedDate":"2022-03-27"},{"lineNumber":18,"author":{"gitId":"Jacky142857"},"content":"            + \" in the form of \u0027yyyy-MM-dd-HH-mm\u0027\";","lastModifiedDate":"2022-03-27"},{"lineNumber":19,"author":{"gitId":"Jacky142857"},"content":"    public static final String MESSAGE_ADD_APPOINTMENT_SUCCESS \u003d \"You have made an appointment with Buyer: %1$s\";","lastModifiedDate":"2022-03-27"},{"lineNumber":20,"author":{"gitId":"Jacky142857"},"content":"    public static final String MESSAGE_DELETE_APPOINTMENT_SUCCESS \u003d \"You have removed an appointment with Buyer: %1$s\";","lastModifiedDate":"2022-03-27"},{"lineNumber":21,"author":{"gitId":"Jacky142857"},"content":"    public static final String MESSAGE_USAGE \u003d COMMAND_WORD","lastModifiedDate":"2022-03-27"},{"lineNumber":22,"author":{"gitId":"Jacky142857"},"content":"            + \": The appointment time should be specified to minutes\\n\"","lastModifiedDate":"2022-03-27"},{"lineNumber":23,"author":{"gitId":"Jacky142857"},"content":"            + \"with the format \u0027yyyy-MM-dd-HH-mm\u0027\\n\"","lastModifiedDate":"2022-03-27"},{"lineNumber":24,"author":{"gitId":"Jacky142857"},"content":"            + \"Example:  \" + COMMAND_WORD + \" 1 \"","lastModifiedDate":"2022-03-27"},{"lineNumber":25,"author":{"gitId":"Jacky142857"},"content":"            + \"time/ 2022-05-04-14-00\";","lastModifiedDate":"2022-03-27"},{"lineNumber":26,"author":{"gitId":"Jacky142857"},"content":"    public static final String MESSAGE_TIME_IN_PAST \u003d \"The time you entered is in the past\\n\"","lastModifiedDate":"2022-03-27"},{"lineNumber":27,"author":{"gitId":"Jacky142857"},"content":"            + \"Please enter a time in the future\";","lastModifiedDate":"2022-03-27"},{"lineNumber":28,"author":{"gitId":"Jacky142857"},"content":"","lastModifiedDate":"2022-03-27"},{"lineNumber":29,"author":{"gitId":"Jacky142857"},"content":"    private final Index index;","lastModifiedDate":"2022-03-27"},{"lineNumber":30,"author":{"gitId":"Jacky142857"},"content":"    private final Appointment appointment;","lastModifiedDate":"2022-03-27"},{"lineNumber":31,"author":{"gitId":"Jacky142857"},"content":"","lastModifiedDate":"2022-03-27"},{"lineNumber":32,"author":{"gitId":"Jacky142857"},"content":"    /**","lastModifiedDate":"2022-03-27"},{"lineNumber":33,"author":{"gitId":"Jacky142857"},"content":"     * Creates an AppointmentCommand to make an appointment with","lastModifiedDate":"2022-03-27"},{"lineNumber":34,"author":{"gitId":"Jacky142857"},"content":"     * a specified {@code client}","lastModifiedDate":"2022-03-27"},{"lineNumber":35,"author":{"gitId":"Jacky142857"},"content":"     * @param index The person to arrange an appointment with.","lastModifiedDate":"2022-03-27"},{"lineNumber":36,"author":{"gitId":"Jacky142857"},"content":"     * @param appointment The detailed time of the appointment.","lastModifiedDate":"2022-03-27"},{"lineNumber":37,"author":{"gitId":"Jacky142857"},"content":"     */","lastModifiedDate":"2022-03-27"},{"lineNumber":38,"author":{"gitId":"Jacky142857"},"content":"    public AppointmentBuyerCommand(Index index, Appointment appointment) {","lastModifiedDate":"2022-03-27"},{"lineNumber":39,"author":{"gitId":"Jacky142857"},"content":"        requireAllNonNull(index, appointment);","lastModifiedDate":"2022-03-27"},{"lineNumber":40,"author":{"gitId":"Jacky142857"},"content":"        this.index \u003d index;","lastModifiedDate":"2022-03-27"},{"lineNumber":41,"author":{"gitId":"Jacky142857"},"content":"        this.appointment \u003d appointment;","lastModifiedDate":"2022-03-27"},{"lineNumber":42,"author":{"gitId":"Jacky142857"},"content":"    }","lastModifiedDate":"2022-03-27"},{"lineNumber":43,"author":{"gitId":"Jacky142857"},"content":"","lastModifiedDate":"2022-03-27"},{"lineNumber":44,"author":{"gitId":"Jacky142857"},"content":"    @Override","lastModifiedDate":"2022-03-27"},{"lineNumber":45,"author":{"gitId":"Jacky142857"},"content":"    public CommandResult execute(Model model) throws CommandException {","lastModifiedDate":"2022-03-27"},{"lineNumber":46,"author":{"gitId":"Jacky142857"},"content":"        List\u003cBuyer\u003e lastShownList \u003d model.getFilteredBuyerList();","lastModifiedDate":"2022-03-27"},{"lineNumber":47,"author":{"gitId":"Jacky142857"},"content":"","lastModifiedDate":"2022-03-27"},{"lineNumber":48,"author":{"gitId":"Jacky142857"},"content":"        if (index.getZeroBased() \u003e\u003d lastShownList.size()) {","lastModifiedDate":"2022-03-27"},{"lineNumber":49,"author":{"gitId":"Jacky142857"},"content":"            throw new CommandException(Messages.MESSAGE_INVALID_CLIENT_DISPLAYED_INDEX);","lastModifiedDate":"2022-03-27"},{"lineNumber":50,"author":{"gitId":"Jacky142857"},"content":"        }","lastModifiedDate":"2022-03-27"},{"lineNumber":51,"author":{"gitId":"Jacky142857"},"content":"","lastModifiedDate":"2022-03-27"},{"lineNumber":52,"author":{"gitId":"Jacky142857"},"content":"        Buyer buyerToEdit \u003d lastShownList.get(index.getZeroBased());","lastModifiedDate":"2022-03-27"},{"lineNumber":53,"author":{"gitId":"Jacky142857"},"content":"        Buyer editedBuyer \u003d new Buyer(","lastModifiedDate":"2022-03-27"},{"lineNumber":54,"author":{"gitId":"Jacky142857"},"content":"                buyerToEdit.getName(), buyerToEdit.getPhone(), appointment, buyerToEdit.getTags(),","lastModifiedDate":"2022-03-27"},{"lineNumber":55,"author":{"gitId":"Jacky142857"},"content":"                buyerToEdit.getPropertyToBuy()","lastModifiedDate":"2022-03-27"},{"lineNumber":56,"author":{"gitId":"Jacky142857"},"content":"        );","lastModifiedDate":"2022-03-27"},{"lineNumber":57,"author":{"gitId":"Jacky142857"},"content":"","lastModifiedDate":"2022-03-27"},{"lineNumber":58,"author":{"gitId":"Jacky142857"},"content":"        model.setBuyer(buyerToEdit, editedBuyer);","lastModifiedDate":"2022-03-27"},{"lineNumber":59,"author":{"gitId":"Jacky142857"},"content":"        model.updateFilteredClientList(PREDICATE_SHOW_ALL_CLIENTS);","lastModifiedDate":"2022-03-27"},{"lineNumber":60,"author":{"gitId":"Jacky142857"},"content":"","lastModifiedDate":"2022-03-27"},{"lineNumber":61,"author":{"gitId":"Jacky142857"},"content":"        return new CommandResult(generateSuccessMessage(editedBuyer));","lastModifiedDate":"2022-03-27"},{"lineNumber":62,"author":{"gitId":"Jacky142857"},"content":"    }","lastModifiedDate":"2022-03-27"},{"lineNumber":63,"author":{"gitId":"Jacky142857"},"content":"","lastModifiedDate":"2022-03-27"},{"lineNumber":64,"author":{"gitId":"Jacky142857"},"content":"    @Override","lastModifiedDate":"2022-03-27"},{"lineNumber":65,"author":{"gitId":"Jacky142857"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2022-03-27"},{"lineNumber":66,"author":{"gitId":"Jacky142857"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2022-03-27"},{"lineNumber":67,"author":{"gitId":"Jacky142857"},"content":"            return true;","lastModifiedDate":"2022-03-27"},{"lineNumber":68,"author":{"gitId":"Jacky142857"},"content":"        }","lastModifiedDate":"2022-03-27"},{"lineNumber":69,"author":{"gitId":"Jacky142857"},"content":"","lastModifiedDate":"2022-03-27"},{"lineNumber":70,"author":{"gitId":"Jacky142857"},"content":"        if (!(other instanceof AppointmentBuyerCommand)) {","lastModifiedDate":"2022-03-27"},{"lineNumber":71,"author":{"gitId":"Jacky142857"},"content":"            return false;","lastModifiedDate":"2022-03-27"},{"lineNumber":72,"author":{"gitId":"Jacky142857"},"content":"        }","lastModifiedDate":"2022-03-27"},{"lineNumber":73,"author":{"gitId":"Jacky142857"},"content":"","lastModifiedDate":"2022-03-27"},{"lineNumber":74,"author":{"gitId":"Jacky142857"},"content":"        AppointmentBuyerCommand a \u003d (AppointmentBuyerCommand) other;","lastModifiedDate":"2022-03-27"},{"lineNumber":75,"author":{"gitId":"Jacky142857"},"content":"        return index.equals(a.index)","lastModifiedDate":"2022-03-27"},{"lineNumber":76,"author":{"gitId":"Jacky142857"},"content":"                \u0026\u0026 appointment.equals(a.appointment);","lastModifiedDate":"2022-03-27"},{"lineNumber":77,"author":{"gitId":"Jacky142857"},"content":"    }","lastModifiedDate":"2022-03-27"},{"lineNumber":78,"author":{"gitId":"Jacky142857"},"content":"","lastModifiedDate":"2022-03-27"},{"lineNumber":79,"author":{"gitId":"Jacky142857"},"content":"    private String generateSuccessMessage(Buyer buyerToEdit) {","lastModifiedDate":"2022-03-27"},{"lineNumber":80,"author":{"gitId":"Jacky142857"},"content":"        String message \u003d !appointment.value.isEmpty()","lastModifiedDate":"2022-03-27"},{"lineNumber":81,"author":{"gitId":"Jacky142857"},"content":"                ? MESSAGE_ADD_APPOINTMENT_SUCCESS : MESSAGE_DELETE_APPOINTMENT_SUCCESS;","lastModifiedDate":"2022-03-27"},{"lineNumber":82,"author":{"gitId":"Jacky142857"},"content":"        return String.format(message, buyerToEdit);","lastModifiedDate":"2022-03-27"},{"lineNumber":83,"author":{"gitId":"Jacky142857"},"content":"    }","lastModifiedDate":"2022-03-27"},{"lineNumber":84,"author":{"gitId":"Jacky142857"},"content":"}","lastModifiedDate":"2022-03-27"}],"authorContributionMap":{"Jacky142857":84}},{"path":"src/main/java/seedu/address/logic/commands/AppointmentSellerCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"Jacky142857"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2022-03-27"},{"lineNumber":2,"author":{"gitId":"Jacky142857"},"content":"","lastModifiedDate":"2022-03-27"},{"lineNumber":3,"author":{"gitId":"Jacky142857"},"content":"import static seedu.address.commons.util.CollectionUtil.requireAllNonNull;","lastModifiedDate":"2022-03-27"},{"lineNumber":4,"author":{"gitId":"Jacky142857"},"content":"import static seedu.address.model.Model.PREDICATE_SHOW_ALL_CLIENTS;","lastModifiedDate":"2022-03-27"},{"lineNumber":5,"author":{"gitId":"Jacky142857"},"content":"","lastModifiedDate":"2022-03-27"},{"lineNumber":6,"author":{"gitId":"Jacky142857"},"content":"import java.util.List;","lastModifiedDate":"2022-03-27"},{"lineNumber":7,"author":{"gitId":"Jacky142857"},"content":"","lastModifiedDate":"2022-03-27"},{"lineNumber":8,"author":{"gitId":"Jacky142857"},"content":"import seedu.address.commons.core.Messages;","lastModifiedDate":"2022-03-27"},{"lineNumber":9,"author":{"gitId":"Jacky142857"},"content":"import seedu.address.commons.core.index.Index;","lastModifiedDate":"2022-03-27"},{"lineNumber":10,"author":{"gitId":"Jacky142857"},"content":"import seedu.address.logic.commands.exceptions.CommandException;","lastModifiedDate":"2022-03-27"},{"lineNumber":11,"author":{"gitId":"Jacky142857"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2022-03-27"},{"lineNumber":12,"author":{"gitId":"Jacky142857"},"content":"import seedu.address.model.client.Appointment;","lastModifiedDate":"2022-03-27"},{"lineNumber":13,"author":{"gitId":"Jacky142857"},"content":"import seedu.address.model.seller.Seller;","lastModifiedDate":"2022-03-27"},{"lineNumber":14,"author":{"gitId":"Jacky142857"},"content":"","lastModifiedDate":"2022-03-27"},{"lineNumber":15,"author":{"gitId":"Jacky142857"},"content":"public class AppointmentSellerCommand extends Command {","lastModifiedDate":"2022-03-27"},{"lineNumber":16,"author":{"gitId":"Jacky142857"},"content":"    public static final String COMMAND_WORD \u003d \"appt-s\";","lastModifiedDate":"2022-03-27"},{"lineNumber":17,"author":{"gitId":"Jacky142857"},"content":"    public static final String MESSAGE_EMPTY_INPUT_DATE \u003d \"Please enter the date following the seller index\\n\"","lastModifiedDate":"2022-03-27"},{"lineNumber":18,"author":{"gitId":"Jacky142857"},"content":"            + \" in the form of \u0027yyyy-MM-dd-HH-mm\u0027\";","lastModifiedDate":"2022-03-27"},{"lineNumber":19,"author":{"gitId":"Jacky142857"},"content":"    public static final String MESSAGE_ADD_APPOINTMENT_SUCCESS \u003d \"You have made an appointment with seller: %1$s\";","lastModifiedDate":"2022-03-27"},{"lineNumber":20,"author":{"gitId":"Jacky142857"},"content":"    public static final String MESSAGE_DELETE_APPOINTMENT_SUCCESS \u003d \"You have removed an appointment with seller: %1$s\";","lastModifiedDate":"2022-03-27"},{"lineNumber":21,"author":{"gitId":"Jacky142857"},"content":"    public static final String MESSAGE_USAGE \u003d COMMAND_WORD","lastModifiedDate":"2022-03-27"},{"lineNumber":22,"author":{"gitId":"Jacky142857"},"content":"            + \": The appointment time should be specified to minutes\\n\"","lastModifiedDate":"2022-03-27"},{"lineNumber":23,"author":{"gitId":"Jacky142857"},"content":"            + \"with the format \u0027yyyy-MM-dd-HH-mm\u0027\\n\"","lastModifiedDate":"2022-03-27"},{"lineNumber":24,"author":{"gitId":"Jacky142857"},"content":"            + \"Example:  \" + COMMAND_WORD + \" 1 \"","lastModifiedDate":"2022-03-27"},{"lineNumber":25,"author":{"gitId":"Jacky142857"},"content":"            + \"time/ 2022-05-04-14-00\";","lastModifiedDate":"2022-03-27"},{"lineNumber":26,"author":{"gitId":"Jacky142857"},"content":"    public static final String MESSAGE_TIME_IN_PAST \u003d \"The time you entered is in the past\\n\"","lastModifiedDate":"2022-03-27"},{"lineNumber":27,"author":{"gitId":"Jacky142857"},"content":"            + \"Please enter a time in the future\";","lastModifiedDate":"2022-03-27"},{"lineNumber":28,"author":{"gitId":"Jacky142857"},"content":"","lastModifiedDate":"2022-03-27"},{"lineNumber":29,"author":{"gitId":"Jacky142857"},"content":"    private final Index index;","lastModifiedDate":"2022-03-27"},{"lineNumber":30,"author":{"gitId":"Jacky142857"},"content":"    private final Appointment appointment;","lastModifiedDate":"2022-03-27"},{"lineNumber":31,"author":{"gitId":"Jacky142857"},"content":"","lastModifiedDate":"2022-03-27"},{"lineNumber":32,"author":{"gitId":"Jacky142857"},"content":"    /**","lastModifiedDate":"2022-03-27"},{"lineNumber":33,"author":{"gitId":"Jacky142857"},"content":"     * Creates an AppointmentCommand to make an appointment with","lastModifiedDate":"2022-03-27"},{"lineNumber":34,"author":{"gitId":"Jacky142857"},"content":"     * a specified {@code client}","lastModifiedDate":"2022-03-27"},{"lineNumber":35,"author":{"gitId":"Jacky142857"},"content":"     * @param index The person to arrange an appointment with.","lastModifiedDate":"2022-03-27"},{"lineNumber":36,"author":{"gitId":"Jacky142857"},"content":"     * @param appointment The detailed time of the appointment.","lastModifiedDate":"2022-03-27"},{"lineNumber":37,"author":{"gitId":"Jacky142857"},"content":"     */","lastModifiedDate":"2022-03-27"},{"lineNumber":38,"author":{"gitId":"Jacky142857"},"content":"    public AppointmentSellerCommand(Index index, Appointment appointment) {","lastModifiedDate":"2022-03-27"},{"lineNumber":39,"author":{"gitId":"Jacky142857"},"content":"        requireAllNonNull(index, appointment);","lastModifiedDate":"2022-03-27"},{"lineNumber":40,"author":{"gitId":"Jacky142857"},"content":"        this.index \u003d index;","lastModifiedDate":"2022-03-27"},{"lineNumber":41,"author":{"gitId":"Jacky142857"},"content":"        this.appointment \u003d appointment;","lastModifiedDate":"2022-03-27"},{"lineNumber":42,"author":{"gitId":"Jacky142857"},"content":"    }","lastModifiedDate":"2022-03-27"},{"lineNumber":43,"author":{"gitId":"Jacky142857"},"content":"","lastModifiedDate":"2022-03-27"},{"lineNumber":44,"author":{"gitId":"Jacky142857"},"content":"    @Override","lastModifiedDate":"2022-03-27"},{"lineNumber":45,"author":{"gitId":"Jacky142857"},"content":"    public CommandResult execute(Model model) throws CommandException {","lastModifiedDate":"2022-03-27"},{"lineNumber":46,"author":{"gitId":"Jacky142857"},"content":"        List\u003cSeller\u003e lastShownList \u003d model.getFilteredSellerList();","lastModifiedDate":"2022-03-27"},{"lineNumber":47,"author":{"gitId":"Jacky142857"},"content":"","lastModifiedDate":"2022-03-27"},{"lineNumber":48,"author":{"gitId":"Jacky142857"},"content":"        if (index.getZeroBased() \u003e\u003d lastShownList.size()) {","lastModifiedDate":"2022-03-27"},{"lineNumber":49,"author":{"gitId":"Jacky142857"},"content":"            throw new CommandException(Messages.MESSAGE_INVALID_CLIENT_DISPLAYED_INDEX);","lastModifiedDate":"2022-03-27"},{"lineNumber":50,"author":{"gitId":"Jacky142857"},"content":"        }","lastModifiedDate":"2022-03-27"},{"lineNumber":51,"author":{"gitId":"Jacky142857"},"content":"","lastModifiedDate":"2022-03-27"},{"lineNumber":52,"author":{"gitId":"Jacky142857"},"content":"        Seller sellerToEdit \u003d lastShownList.get(index.getZeroBased());","lastModifiedDate":"2022-03-27"},{"lineNumber":53,"author":{"gitId":"Jacky142857"},"content":"        Seller editedSeller \u003d new Seller(","lastModifiedDate":"2022-03-27"},{"lineNumber":54,"author":{"gitId":"Jacky142857"},"content":"                sellerToEdit.getName(), sellerToEdit.getPhone(), appointment, sellerToEdit.getTags(),","lastModifiedDate":"2022-03-27"},{"lineNumber":55,"author":{"gitId":"Jacky142857"},"content":"                sellerToEdit.getPropertyToSell()","lastModifiedDate":"2022-03-27"},{"lineNumber":56,"author":{"gitId":"Jacky142857"},"content":"        );","lastModifiedDate":"2022-03-27"},{"lineNumber":57,"author":{"gitId":"Jacky142857"},"content":"","lastModifiedDate":"2022-03-27"},{"lineNumber":58,"author":{"gitId":"Jacky142857"},"content":"        model.setSeller(sellerToEdit, editedSeller);","lastModifiedDate":"2022-03-27"},{"lineNumber":59,"author":{"gitId":"Jacky142857"},"content":"        model.updateFilteredClientList(PREDICATE_SHOW_ALL_CLIENTS);","lastModifiedDate":"2022-03-27"},{"lineNumber":60,"author":{"gitId":"Jacky142857"},"content":"","lastModifiedDate":"2022-03-27"},{"lineNumber":61,"author":{"gitId":"Jacky142857"},"content":"        return new CommandResult(generateSuccessMessage(editedSeller));","lastModifiedDate":"2022-03-27"},{"lineNumber":62,"author":{"gitId":"Jacky142857"},"content":"    }","lastModifiedDate":"2022-03-27"},{"lineNumber":63,"author":{"gitId":"Jacky142857"},"content":"","lastModifiedDate":"2022-03-27"},{"lineNumber":64,"author":{"gitId":"Jacky142857"},"content":"    @Override","lastModifiedDate":"2022-03-27"},{"lineNumber":65,"author":{"gitId":"Jacky142857"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2022-03-27"},{"lineNumber":66,"author":{"gitId":"Jacky142857"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2022-03-27"},{"lineNumber":67,"author":{"gitId":"Jacky142857"},"content":"            return true;","lastModifiedDate":"2022-03-27"},{"lineNumber":68,"author":{"gitId":"Jacky142857"},"content":"        }","lastModifiedDate":"2022-03-27"},{"lineNumber":69,"author":{"gitId":"Jacky142857"},"content":"","lastModifiedDate":"2022-03-27"},{"lineNumber":70,"author":{"gitId":"Jacky142857"},"content":"        if (!(other instanceof AppointmentSellerCommand)) {","lastModifiedDate":"2022-03-27"},{"lineNumber":71,"author":{"gitId":"Jacky142857"},"content":"            return false;","lastModifiedDate":"2022-03-27"},{"lineNumber":72,"author":{"gitId":"Jacky142857"},"content":"        }","lastModifiedDate":"2022-03-27"},{"lineNumber":73,"author":{"gitId":"Jacky142857"},"content":"","lastModifiedDate":"2022-03-27"},{"lineNumber":74,"author":{"gitId":"Jacky142857"},"content":"        AppointmentSellerCommand a \u003d (AppointmentSellerCommand) other;","lastModifiedDate":"2022-03-27"},{"lineNumber":75,"author":{"gitId":"Jacky142857"},"content":"        return index.equals(a.index)","lastModifiedDate":"2022-03-27"},{"lineNumber":76,"author":{"gitId":"Jacky142857"},"content":"                \u0026\u0026 appointment.equals(a.appointment);","lastModifiedDate":"2022-03-27"},{"lineNumber":77,"author":{"gitId":"Jacky142857"},"content":"    }","lastModifiedDate":"2022-03-27"},{"lineNumber":78,"author":{"gitId":"Jacky142857"},"content":"","lastModifiedDate":"2022-03-27"},{"lineNumber":79,"author":{"gitId":"Jacky142857"},"content":"    private String generateSuccessMessage(Seller sellerToEdit) {","lastModifiedDate":"2022-03-27"},{"lineNumber":80,"author":{"gitId":"Jacky142857"},"content":"        String message \u003d !appointment.value.isEmpty()","lastModifiedDate":"2022-03-27"},{"lineNumber":81,"author":{"gitId":"Jacky142857"},"content":"                ? MESSAGE_ADD_APPOINTMENT_SUCCESS : MESSAGE_DELETE_APPOINTMENT_SUCCESS;","lastModifiedDate":"2022-03-27"},{"lineNumber":82,"author":{"gitId":"Jacky142857"},"content":"        return String.format(message, sellerToEdit);","lastModifiedDate":"2022-03-27"},{"lineNumber":83,"author":{"gitId":"Jacky142857"},"content":"    }","lastModifiedDate":"2022-03-27"},{"lineNumber":84,"author":{"gitId":"Jacky142857"},"content":"}","lastModifiedDate":"2022-03-27"},{"lineNumber":85,"author":{"gitId":"Jacky142857"},"content":"","lastModifiedDate":"2022-03-27"}],"authorContributionMap":{"Jacky142857":85}},{"path":"src/main/java/seedu/address/logic/commands/ClearBuyerCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"cwnm"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2022-03-29"},{"lineNumber":2,"author":{"gitId":"cwnm"},"content":"","lastModifiedDate":"2022-03-29"},{"lineNumber":3,"author":{"gitId":"cwnm"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2022-03-29"},{"lineNumber":4,"author":{"gitId":"cwnm"},"content":"","lastModifiedDate":"2022-03-29"},{"lineNumber":5,"author":{"gitId":"cwnm"},"content":"import seedu.address.model.BuyerAddressBook;","lastModifiedDate":"2022-03-29"},{"lineNumber":6,"author":{"gitId":"cwnm"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2022-03-29"},{"lineNumber":7,"author":{"gitId":"cwnm"},"content":"","lastModifiedDate":"2022-03-29"},{"lineNumber":8,"author":{"gitId":"cwnm"},"content":"/**","lastModifiedDate":"2022-03-29"},{"lineNumber":9,"author":{"gitId":"cwnm"},"content":" * Clears the address book.","lastModifiedDate":"2022-03-29"},{"lineNumber":10,"author":{"gitId":"cwnm"},"content":" */","lastModifiedDate":"2022-03-29"},{"lineNumber":11,"author":{"gitId":"cwnm"},"content":"public class ClearBuyerCommand extends Command {","lastModifiedDate":"2022-03-29"},{"lineNumber":12,"author":{"gitId":"cwnm"},"content":"","lastModifiedDate":"2022-03-29"},{"lineNumber":13,"author":{"gitId":"cwnm"},"content":"    public static final String COMMAND_WORD \u003d \"clear-b\";","lastModifiedDate":"2022-03-29"},{"lineNumber":14,"author":{"gitId":"cwnm"},"content":"    public static final String MESSAGE_SUCCESS \u003d \"Buyer Address book has been cleared!\";","lastModifiedDate":"2022-03-29"},{"lineNumber":15,"author":{"gitId":"cwnm"},"content":"","lastModifiedDate":"2022-03-29"},{"lineNumber":16,"author":{"gitId":"cwnm"},"content":"","lastModifiedDate":"2022-03-29"},{"lineNumber":17,"author":{"gitId":"cwnm"},"content":"    @Override","lastModifiedDate":"2022-03-29"},{"lineNumber":18,"author":{"gitId":"cwnm"},"content":"    public CommandResult execute(Model model) {","lastModifiedDate":"2022-03-29"},{"lineNumber":19,"author":{"gitId":"cwnm"},"content":"        requireNonNull(model);","lastModifiedDate":"2022-03-29"},{"lineNumber":20,"author":{"gitId":"cwnm"},"content":"        model.setBuyerAddressBook(new BuyerAddressBook());","lastModifiedDate":"2022-03-29"},{"lineNumber":21,"author":{"gitId":"cwnm"},"content":"        return new CommandResult(MESSAGE_SUCCESS);","lastModifiedDate":"2022-03-29"},{"lineNumber":22,"author":{"gitId":"cwnm"},"content":"    }","lastModifiedDate":"2022-03-29"},{"lineNumber":23,"author":{"gitId":"cwnm"},"content":"}","lastModifiedDate":"2022-03-29"}],"authorContributionMap":{"cwnm":23}},{"path":"src/main/java/seedu/address/logic/commands/ClearCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2016-09-22"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2017-05-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-15"},{"lineNumber":5,"author":{"gitId":"cwnm"},"content":"import seedu.address.model.BuyerAddressBook;","lastModifiedDate":"2022-03-31"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2018-08-08"},{"lineNumber":7,"author":{"gitId":"cwnm"},"content":"import seedu.address.model.SellerAddressBook;","lastModifiedDate":"2022-03-31"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":9,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-24"},{"lineNumber":10,"author":{"gitId":"-"},"content":" * Clears the address book.","lastModifiedDate":"2016-08-24"},{"lineNumber":11,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-24"},{"lineNumber":12,"author":{"gitId":"-"},"content":"public class ClearCommand extends Command {","lastModifiedDate":"2018-04-19"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":14,"author":{"gitId":"cwnm"},"content":"    public static final String COMMAND_WORD \u003d \"clear-all\";","lastModifiedDate":"2022-03-31"},{"lineNumber":15,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_SUCCESS \u003d \"Address book has been cleared!\";","lastModifiedDate":"2016-08-24"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-24"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    public CommandResult execute(Model model) {","lastModifiedDate":"2019-01-25"},{"lineNumber":20,"author":{"gitId":"-"},"content":"        requireNonNull(model);","lastModifiedDate":"2017-05-15"},{"lineNumber":21,"author":{"gitId":"cwnm"},"content":"        model.setBuyerAddressBook(new BuyerAddressBook());","lastModifiedDate":"2022-03-31"},{"lineNumber":22,"author":{"gitId":"cwnm"},"content":"        model.setSellerAddressBook(new SellerAddressBook());","lastModifiedDate":"2022-03-31"},{"lineNumber":23,"author":{"gitId":"-"},"content":"        return new CommandResult(MESSAGE_SUCCESS);","lastModifiedDate":"2016-08-24"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":25,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-24"}],"authorContributionMap":{"-":20,"cwnm":5}},{"path":"src/main/java/seedu/address/logic/commands/ClearSellerCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"cwnm"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2022-03-29"},{"lineNumber":2,"author":{"gitId":"cwnm"},"content":"","lastModifiedDate":"2022-03-29"},{"lineNumber":3,"author":{"gitId":"cwnm"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2022-03-29"},{"lineNumber":4,"author":{"gitId":"cwnm"},"content":"","lastModifiedDate":"2022-03-29"},{"lineNumber":5,"author":{"gitId":"cwnm"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2022-03-29"},{"lineNumber":6,"author":{"gitId":"cwnm"},"content":"import seedu.address.model.SellerAddressBook;","lastModifiedDate":"2022-03-29"},{"lineNumber":7,"author":{"gitId":"cwnm"},"content":"","lastModifiedDate":"2022-03-29"},{"lineNumber":8,"author":{"gitId":"cwnm"},"content":"/**","lastModifiedDate":"2022-03-29"},{"lineNumber":9,"author":{"gitId":"cwnm"},"content":" * Clears the address book.","lastModifiedDate":"2022-03-29"},{"lineNumber":10,"author":{"gitId":"cwnm"},"content":" */","lastModifiedDate":"2022-03-29"},{"lineNumber":11,"author":{"gitId":"cwnm"},"content":"public class ClearSellerCommand extends Command {","lastModifiedDate":"2022-03-29"},{"lineNumber":12,"author":{"gitId":"cwnm"},"content":"","lastModifiedDate":"2022-03-29"},{"lineNumber":13,"author":{"gitId":"cwnm"},"content":"    public static final String COMMAND_WORD \u003d \"clear-s\";","lastModifiedDate":"2022-03-29"},{"lineNumber":14,"author":{"gitId":"cwnm"},"content":"    public static final String MESSAGE_SUCCESS \u003d \"Seller Address book has been cleared!\";","lastModifiedDate":"2022-03-29"},{"lineNumber":15,"author":{"gitId":"cwnm"},"content":"","lastModifiedDate":"2022-03-29"},{"lineNumber":16,"author":{"gitId":"cwnm"},"content":"","lastModifiedDate":"2022-03-29"},{"lineNumber":17,"author":{"gitId":"cwnm"},"content":"    @Override","lastModifiedDate":"2022-03-29"},{"lineNumber":18,"author":{"gitId":"cwnm"},"content":"    public CommandResult execute(Model model) {","lastModifiedDate":"2022-03-29"},{"lineNumber":19,"author":{"gitId":"cwnm"},"content":"        requireNonNull(model);","lastModifiedDate":"2022-03-29"},{"lineNumber":20,"author":{"gitId":"cwnm"},"content":"        model.setSellerAddressBook(new SellerAddressBook());","lastModifiedDate":"2022-03-29"},{"lineNumber":21,"author":{"gitId":"cwnm"},"content":"        return new CommandResult(MESSAGE_SUCCESS);","lastModifiedDate":"2022-03-29"},{"lineNumber":22,"author":{"gitId":"cwnm"},"content":"    }","lastModifiedDate":"2022-03-29"},{"lineNumber":23,"author":{"gitId":"cwnm"},"content":"}","lastModifiedDate":"2022-03-29"}],"authorContributionMap":{"cwnm":23}},{"path":"src/main/java/seedu/address/logic/commands/DeleteBuyerCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"WJunHong"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2022-03-28"},{"lineNumber":2,"author":{"gitId":"WJunHong"},"content":"","lastModifiedDate":"2022-03-28"},{"lineNumber":3,"author":{"gitId":"WJunHong"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2022-03-28"},{"lineNumber":4,"author":{"gitId":"WJunHong"},"content":"","lastModifiedDate":"2022-03-28"},{"lineNumber":5,"author":{"gitId":"WJunHong"},"content":"import java.util.List;","lastModifiedDate":"2022-03-28"},{"lineNumber":6,"author":{"gitId":"WJunHong"},"content":"","lastModifiedDate":"2022-03-28"},{"lineNumber":7,"author":{"gitId":"WJunHong"},"content":"import seedu.address.commons.core.Messages;","lastModifiedDate":"2022-03-28"},{"lineNumber":8,"author":{"gitId":"WJunHong"},"content":"import seedu.address.commons.core.index.Index;","lastModifiedDate":"2022-03-28"},{"lineNumber":9,"author":{"gitId":"WJunHong"},"content":"import seedu.address.logic.commands.exceptions.CommandException;","lastModifiedDate":"2022-03-28"},{"lineNumber":10,"author":{"gitId":"WJunHong"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2022-03-28"},{"lineNumber":11,"author":{"gitId":"WJunHong"},"content":"import seedu.address.model.buyer.Buyer;","lastModifiedDate":"2022-03-28"},{"lineNumber":12,"author":{"gitId":"WJunHong"},"content":"","lastModifiedDate":"2022-03-28"},{"lineNumber":13,"author":{"gitId":"WJunHong"},"content":"public class DeleteBuyerCommand extends Command {","lastModifiedDate":"2022-03-28"},{"lineNumber":14,"author":{"gitId":"WJunHong"},"content":"","lastModifiedDate":"2022-03-28"},{"lineNumber":15,"author":{"gitId":"WJunHong"},"content":"    public static final String COMMAND_WORD \u003d \"delete-b\";","lastModifiedDate":"2022-03-29"},{"lineNumber":16,"author":{"gitId":"WJunHong"},"content":"","lastModifiedDate":"2022-03-28"},{"lineNumber":17,"author":{"gitId":"WJunHong"},"content":"    public static final String MESSAGE_USAGE \u003d COMMAND_WORD","lastModifiedDate":"2022-03-28"},{"lineNumber":18,"author":{"gitId":"WJunHong"},"content":"            + \": Deletes the buyer identified by the index number used in the displayed buyer list.\\n\"","lastModifiedDate":"2022-03-28"},{"lineNumber":19,"author":{"gitId":"WJunHong"},"content":"            + \"Parameters: INDEX (must be a positive integer less than or equal to size of displayed buyer list)\\n\"","lastModifiedDate":"2022-04-06"},{"lineNumber":20,"author":{"gitId":"WJunHong"},"content":"            + \"Example: \" + COMMAND_WORD + \" 1\";","lastModifiedDate":"2022-03-28"},{"lineNumber":21,"author":{"gitId":"WJunHong"},"content":"","lastModifiedDate":"2022-03-28"},{"lineNumber":22,"author":{"gitId":"WJunHong"},"content":"    public static final String MESSAGE_DELETE_CLIENT_SUCCESS \u003d \"Deleted buyer: %1$s\";","lastModifiedDate":"2022-03-28"},{"lineNumber":23,"author":{"gitId":"WJunHong"},"content":"","lastModifiedDate":"2022-03-28"},{"lineNumber":24,"author":{"gitId":"WJunHong"},"content":"    private final Index targetIndex;","lastModifiedDate":"2022-03-28"},{"lineNumber":25,"author":{"gitId":"WJunHong"},"content":"","lastModifiedDate":"2022-03-28"},{"lineNumber":26,"author":{"gitId":"WJunHong"},"content":"    public DeleteBuyerCommand(Index targetIndex) {","lastModifiedDate":"2022-03-28"},{"lineNumber":27,"author":{"gitId":"WJunHong"},"content":"        this.targetIndex \u003d targetIndex;","lastModifiedDate":"2022-03-28"},{"lineNumber":28,"author":{"gitId":"WJunHong"},"content":"    }","lastModifiedDate":"2022-03-28"},{"lineNumber":29,"author":{"gitId":"WJunHong"},"content":"","lastModifiedDate":"2022-03-28"},{"lineNumber":30,"author":{"gitId":"WJunHong"},"content":"    @Override","lastModifiedDate":"2022-03-28"},{"lineNumber":31,"author":{"gitId":"WJunHong"},"content":"    public CommandResult execute(Model model) throws CommandException {","lastModifiedDate":"2022-03-28"},{"lineNumber":32,"author":{"gitId":"WJunHong"},"content":"        requireNonNull(model);","lastModifiedDate":"2022-03-28"},{"lineNumber":33,"author":{"gitId":"WJunHong"},"content":"        List\u003cBuyer\u003e lastShownList \u003d model.getFilteredBuyerList();","lastModifiedDate":"2022-03-28"},{"lineNumber":34,"author":{"gitId":"WJunHong"},"content":"","lastModifiedDate":"2022-03-28"},{"lineNumber":35,"author":{"gitId":"WJunHong"},"content":"        if (targetIndex.getZeroBased() \u003e\u003d lastShownList.size()) {","lastModifiedDate":"2022-03-28"},{"lineNumber":36,"author":{"gitId":"WJunHong"},"content":"            throw new CommandException(Messages.MESSAGE_INVALID_BUYER_DISPLAYED_INDEX);","lastModifiedDate":"2022-04-06"},{"lineNumber":37,"author":{"gitId":"WJunHong"},"content":"        }","lastModifiedDate":"2022-03-28"},{"lineNumber":38,"author":{"gitId":"WJunHong"},"content":"","lastModifiedDate":"2022-03-28"},{"lineNumber":39,"author":{"gitId":"WJunHong"},"content":"        Buyer buyerToDelete \u003d lastShownList.get(targetIndex.getZeroBased());","lastModifiedDate":"2022-03-28"},{"lineNumber":40,"author":{"gitId":"WJunHong"},"content":"        model.deleteBuyer(buyerToDelete);","lastModifiedDate":"2022-03-28"},{"lineNumber":41,"author":{"gitId":"WJunHong"},"content":"        return new CommandResult(String.format(MESSAGE_DELETE_CLIENT_SUCCESS, buyerToDelete));","lastModifiedDate":"2022-03-28"},{"lineNumber":42,"author":{"gitId":"WJunHong"},"content":"    }","lastModifiedDate":"2022-03-28"},{"lineNumber":43,"author":{"gitId":"WJunHong"},"content":"","lastModifiedDate":"2022-03-28"},{"lineNumber":44,"author":{"gitId":"WJunHong"},"content":"    @Override","lastModifiedDate":"2022-03-28"},{"lineNumber":45,"author":{"gitId":"WJunHong"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2022-03-28"},{"lineNumber":46,"author":{"gitId":"WJunHong"},"content":"        return other \u003d\u003d this // short circuit if same object","lastModifiedDate":"2022-03-28"},{"lineNumber":47,"author":{"gitId":"WJunHong"},"content":"                || (other instanceof DeleteBuyerCommand // instanceof handles nulls","lastModifiedDate":"2022-03-28"},{"lineNumber":48,"author":{"gitId":"WJunHong"},"content":"                \u0026\u0026 targetIndex.equals(((DeleteBuyerCommand) other).targetIndex)); // state check","lastModifiedDate":"2022-03-28"},{"lineNumber":49,"author":{"gitId":"WJunHong"},"content":"    }","lastModifiedDate":"2022-03-28"},{"lineNumber":50,"author":{"gitId":"WJunHong"},"content":"}","lastModifiedDate":"2022-03-28"}],"authorContributionMap":{"WJunHong":50}},{"path":"src/main/java/seedu/address/logic/commands/DeleteSellerCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"chuashihong"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2022-03-30"},{"lineNumber":2,"author":{"gitId":"chuashihong"},"content":"","lastModifiedDate":"2022-03-30"},{"lineNumber":3,"author":{"gitId":"chuashihong"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2022-03-30"},{"lineNumber":4,"author":{"gitId":"chuashihong"},"content":"","lastModifiedDate":"2022-03-30"},{"lineNumber":5,"author":{"gitId":"chuashihong"},"content":"import java.util.List;","lastModifiedDate":"2022-03-30"},{"lineNumber":6,"author":{"gitId":"chuashihong"},"content":"","lastModifiedDate":"2022-03-30"},{"lineNumber":7,"author":{"gitId":"chuashihong"},"content":"import seedu.address.commons.core.Messages;","lastModifiedDate":"2022-03-30"},{"lineNumber":8,"author":{"gitId":"chuashihong"},"content":"import seedu.address.commons.core.index.Index;","lastModifiedDate":"2022-03-30"},{"lineNumber":9,"author":{"gitId":"chuashihong"},"content":"import seedu.address.logic.commands.exceptions.CommandException;","lastModifiedDate":"2022-03-30"},{"lineNumber":10,"author":{"gitId":"chuashihong"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2022-03-30"},{"lineNumber":11,"author":{"gitId":"chuashihong"},"content":"import seedu.address.model.seller.Seller;","lastModifiedDate":"2022-03-30"},{"lineNumber":12,"author":{"gitId":"chuashihong"},"content":"","lastModifiedDate":"2022-03-30"},{"lineNumber":13,"author":{"gitId":"chuashihong"},"content":"public class DeleteSellerCommand extends Command {","lastModifiedDate":"2022-03-30"},{"lineNumber":14,"author":{"gitId":"chuashihong"},"content":"","lastModifiedDate":"2022-03-30"},{"lineNumber":15,"author":{"gitId":"chuashihong"},"content":"    public static final String COMMAND_WORD \u003d \"delete-s\";","lastModifiedDate":"2022-03-30"},{"lineNumber":16,"author":{"gitId":"chuashihong"},"content":"","lastModifiedDate":"2022-03-30"},{"lineNumber":17,"author":{"gitId":"chuashihong"},"content":"    public static final String MESSAGE_USAGE \u003d COMMAND_WORD","lastModifiedDate":"2022-03-30"},{"lineNumber":18,"author":{"gitId":"chuashihong"},"content":"            + \": Deletes the seller identified by the index number used in the displayed seller list.\\n\"","lastModifiedDate":"2022-03-30"},{"lineNumber":19,"author":{"gitId":"WJunHong"},"content":"            + \"Parameters: INDEX (must be a positive integer less than or equal to size of displayed seller list)\\n\"","lastModifiedDate":"2022-04-06"},{"lineNumber":20,"author":{"gitId":"chuashihong"},"content":"            + \"Example: \" + COMMAND_WORD + \" 1\";","lastModifiedDate":"2022-03-30"},{"lineNumber":21,"author":{"gitId":"chuashihong"},"content":"","lastModifiedDate":"2022-03-30"},{"lineNumber":22,"author":{"gitId":"chuashihong"},"content":"    public static final String MESSAGE_DELETE_SELLER_SUCCESS \u003d \"Deleted seller: %1$s\";","lastModifiedDate":"2022-03-30"},{"lineNumber":23,"author":{"gitId":"chuashihong"},"content":"","lastModifiedDate":"2022-03-30"},{"lineNumber":24,"author":{"gitId":"chuashihong"},"content":"    private final Index targetIndex;","lastModifiedDate":"2022-03-30"},{"lineNumber":25,"author":{"gitId":"chuashihong"},"content":"","lastModifiedDate":"2022-03-30"},{"lineNumber":26,"author":{"gitId":"chuashihong"},"content":"    public DeleteSellerCommand(Index targetIndex) {","lastModifiedDate":"2022-03-30"},{"lineNumber":27,"author":{"gitId":"chuashihong"},"content":"        this.targetIndex \u003d targetIndex;","lastModifiedDate":"2022-03-30"},{"lineNumber":28,"author":{"gitId":"chuashihong"},"content":"    }","lastModifiedDate":"2022-03-30"},{"lineNumber":29,"author":{"gitId":"chuashihong"},"content":"","lastModifiedDate":"2022-03-30"},{"lineNumber":30,"author":{"gitId":"chuashihong"},"content":"    @Override","lastModifiedDate":"2022-03-30"},{"lineNumber":31,"author":{"gitId":"chuashihong"},"content":"    public CommandResult execute(Model model) throws CommandException {","lastModifiedDate":"2022-03-30"},{"lineNumber":32,"author":{"gitId":"chuashihong"},"content":"        requireNonNull(model);","lastModifiedDate":"2022-03-30"},{"lineNumber":33,"author":{"gitId":"chuashihong"},"content":"        List\u003cSeller\u003e lastShownList \u003d model.getFilteredSellerList();","lastModifiedDate":"2022-03-30"},{"lineNumber":34,"author":{"gitId":"chuashihong"},"content":"","lastModifiedDate":"2022-03-30"},{"lineNumber":35,"author":{"gitId":"chuashihong"},"content":"        if (targetIndex.getZeroBased() \u003e\u003d lastShownList.size()) {","lastModifiedDate":"2022-03-30"},{"lineNumber":36,"author":{"gitId":"chuashihong"},"content":"            throw new CommandException(Messages.MESSAGE_INVALID_SELLER_DISPLAYED_INDEX);","lastModifiedDate":"2022-03-30"},{"lineNumber":37,"author":{"gitId":"chuashihong"},"content":"        }","lastModifiedDate":"2022-03-30"},{"lineNumber":38,"author":{"gitId":"chuashihong"},"content":"","lastModifiedDate":"2022-03-30"},{"lineNumber":39,"author":{"gitId":"chuashihong"},"content":"        Seller sellerToDelete \u003d lastShownList.get(targetIndex.getZeroBased());","lastModifiedDate":"2022-03-30"},{"lineNumber":40,"author":{"gitId":"chuashihong"},"content":"        model.deleteSeller(sellerToDelete);","lastModifiedDate":"2022-03-30"},{"lineNumber":41,"author":{"gitId":"chuashihong"},"content":"        return new CommandResult(String.format(MESSAGE_DELETE_SELLER_SUCCESS, sellerToDelete));","lastModifiedDate":"2022-03-30"},{"lineNumber":42,"author":{"gitId":"chuashihong"},"content":"    }","lastModifiedDate":"2022-03-30"},{"lineNumber":43,"author":{"gitId":"chuashihong"},"content":"","lastModifiedDate":"2022-03-30"},{"lineNumber":44,"author":{"gitId":"chuashihong"},"content":"    @Override","lastModifiedDate":"2022-03-30"},{"lineNumber":45,"author":{"gitId":"chuashihong"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2022-03-30"},{"lineNumber":46,"author":{"gitId":"chuashihong"},"content":"        return other \u003d\u003d this // short circuit if same object","lastModifiedDate":"2022-03-30"},{"lineNumber":47,"author":{"gitId":"chuashihong"},"content":"                || (other instanceof DeleteSellerCommand // instanceof handles nulls","lastModifiedDate":"2022-03-30"},{"lineNumber":48,"author":{"gitId":"chuashihong"},"content":"                \u0026\u0026 targetIndex.equals(((DeleteSellerCommand) other).targetIndex)); // state check","lastModifiedDate":"2022-03-30"},{"lineNumber":49,"author":{"gitId":"chuashihong"},"content":"    }","lastModifiedDate":"2022-03-30"},{"lineNumber":50,"author":{"gitId":"chuashihong"},"content":"}","lastModifiedDate":"2022-03-30"}],"authorContributionMap":{"WJunHong":1,"chuashihong":49}},{"path":"src/main/java/seedu/address/logic/commands/EditBuyerCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"cwnm"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2022-03-30"},{"lineNumber":2,"author":{"gitId":"cwnm"},"content":"","lastModifiedDate":"2022-03-30"},{"lineNumber":3,"author":{"gitId":"cwnm"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2022-03-30"},{"lineNumber":4,"author":{"gitId":"janald99"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_HOUSE_TYPE;","lastModifiedDate":"2022-03-31"},{"lineNumber":5,"author":{"gitId":"janald99"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_LOCATION;","lastModifiedDate":"2022-03-31"},{"lineNumber":6,"author":{"gitId":"cwnm"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_NAME;","lastModifiedDate":"2022-03-30"},{"lineNumber":7,"author":{"gitId":"cwnm"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_PHONE;","lastModifiedDate":"2022-03-30"},{"lineNumber":8,"author":{"gitId":"janald99"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_PRICE_RANGE;","lastModifiedDate":"2022-03-31"},{"lineNumber":9,"author":{"gitId":"cwnm"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_TAG;","lastModifiedDate":"2022-03-30"},{"lineNumber":10,"author":{"gitId":"cwnm"},"content":"import static seedu.address.model.Model.PREDICATE_SHOW_ALL_CLIENTS;","lastModifiedDate":"2022-03-30"},{"lineNumber":11,"author":{"gitId":"cwnm"},"content":"","lastModifiedDate":"2022-03-30"},{"lineNumber":12,"author":{"gitId":"cwnm"},"content":"import java.util.Collections;","lastModifiedDate":"2022-03-30"},{"lineNumber":13,"author":{"gitId":"cwnm"},"content":"import java.util.HashSet;","lastModifiedDate":"2022-03-30"},{"lineNumber":14,"author":{"gitId":"cwnm"},"content":"import java.util.List;","lastModifiedDate":"2022-03-30"},{"lineNumber":15,"author":{"gitId":"cwnm"},"content":"import java.util.Optional;","lastModifiedDate":"2022-03-30"},{"lineNumber":16,"author":{"gitId":"cwnm"},"content":"import java.util.Set;","lastModifiedDate":"2022-03-30"},{"lineNumber":17,"author":{"gitId":"cwnm"},"content":"","lastModifiedDate":"2022-03-30"},{"lineNumber":18,"author":{"gitId":"cwnm"},"content":"import seedu.address.commons.core.Messages;","lastModifiedDate":"2022-03-30"},{"lineNumber":19,"author":{"gitId":"cwnm"},"content":"import seedu.address.commons.core.index.Index;","lastModifiedDate":"2022-03-30"},{"lineNumber":20,"author":{"gitId":"cwnm"},"content":"import seedu.address.commons.util.CollectionUtil;","lastModifiedDate":"2022-03-30"},{"lineNumber":21,"author":{"gitId":"cwnm"},"content":"import seedu.address.logic.commands.exceptions.CommandException;","lastModifiedDate":"2022-03-30"},{"lineNumber":22,"author":{"gitId":"cwnm"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2022-03-30"},{"lineNumber":23,"author":{"gitId":"cwnm"},"content":"import seedu.address.model.buyer.Buyer;","lastModifiedDate":"2022-03-30"},{"lineNumber":24,"author":{"gitId":"cwnm"},"content":"import seedu.address.model.client.Appointment;","lastModifiedDate":"2022-03-30"},{"lineNumber":25,"author":{"gitId":"cwnm"},"content":"import seedu.address.model.client.Name;","lastModifiedDate":"2022-03-30"},{"lineNumber":26,"author":{"gitId":"cwnm"},"content":"import seedu.address.model.client.Phone;","lastModifiedDate":"2022-03-30"},{"lineNumber":27,"author":{"gitId":"janald99"},"content":"import seedu.address.model.property.HouseType;","lastModifiedDate":"2022-03-31"},{"lineNumber":28,"author":{"gitId":"janald99"},"content":"import seedu.address.model.property.Location;","lastModifiedDate":"2022-03-31"},{"lineNumber":29,"author":{"gitId":"janald99"},"content":"import seedu.address.model.property.NullPropertyToBuy;","lastModifiedDate":"2022-03-31"},{"lineNumber":30,"author":{"gitId":"janald99"},"content":"import seedu.address.model.property.PriceRange;","lastModifiedDate":"2022-03-31"},{"lineNumber":31,"author":{"gitId":"janald99"},"content":"import seedu.address.model.property.PropertyToBuy;","lastModifiedDate":"2022-03-31"},{"lineNumber":32,"author":{"gitId":"cwnm"},"content":"import seedu.address.model.tag.Tag;","lastModifiedDate":"2022-03-30"},{"lineNumber":33,"author":{"gitId":"cwnm"},"content":"","lastModifiedDate":"2022-03-30"},{"lineNumber":34,"author":{"gitId":"cwnm"},"content":"/**","lastModifiedDate":"2022-03-30"},{"lineNumber":35,"author":{"gitId":"cwnm"},"content":" * Edits the details of an existing client in the address book.","lastModifiedDate":"2022-03-30"},{"lineNumber":36,"author":{"gitId":"cwnm"},"content":" */","lastModifiedDate":"2022-03-30"},{"lineNumber":37,"author":{"gitId":"cwnm"},"content":"public class EditBuyerCommand extends Command {","lastModifiedDate":"2022-03-30"},{"lineNumber":38,"author":{"gitId":"cwnm"},"content":"","lastModifiedDate":"2022-03-30"},{"lineNumber":39,"author":{"gitId":"cwnm"},"content":"    public static final String COMMAND_WORD \u003d \"edit-b\";","lastModifiedDate":"2022-03-30"},{"lineNumber":40,"author":{"gitId":"cwnm"},"content":"","lastModifiedDate":"2022-03-30"},{"lineNumber":41,"author":{"gitId":"cwnm"},"content":"    public static final String MESSAGE_USAGE \u003d COMMAND_WORD + \": Edits the details of the buyer identified \"","lastModifiedDate":"2022-03-30"},{"lineNumber":42,"author":{"gitId":"cwnm"},"content":"            + \"by the index number used in the displayed buyer list. \"","lastModifiedDate":"2022-03-30"},{"lineNumber":43,"author":{"gitId":"cwnm"},"content":"            + \"Existing values will be overwritten by the input values.\\n\"","lastModifiedDate":"2022-03-30"},{"lineNumber":44,"author":{"gitId":"cwnm"},"content":"            + \"Parameters: INDEX (must be a positive integer) \"","lastModifiedDate":"2022-03-30"},{"lineNumber":45,"author":{"gitId":"cwnm"},"content":"            + \"[\" + PREFIX_NAME + \"NAME] \"","lastModifiedDate":"2022-03-30"},{"lineNumber":46,"author":{"gitId":"cwnm"},"content":"            + \"[\" + PREFIX_PHONE + \"PHONE] \"","lastModifiedDate":"2022-03-30"},{"lineNumber":47,"author":{"gitId":"janald99"},"content":"            + \"[\" + PREFIX_TAG + \"TAG] \"","lastModifiedDate":"2022-03-31"},{"lineNumber":48,"author":{"gitId":"janald99"},"content":"            + \"[\" + PREFIX_HOUSE_TYPE + \"HOUSETYPE] \"","lastModifiedDate":"2022-03-31"},{"lineNumber":49,"author":{"gitId":"janald99"},"content":"            + \"[\" + PREFIX_LOCATION + \"LOCATION] \"","lastModifiedDate":"2022-03-31"},{"lineNumber":50,"author":{"gitId":"janald99"},"content":"            + \"[\" + PREFIX_PRICE_RANGE + \"PRICERANGE]...\\n\"","lastModifiedDate":"2022-03-31"},{"lineNumber":51,"author":{"gitId":"cwnm"},"content":"            + \"Example: \" + COMMAND_WORD + \" 1 \"","lastModifiedDate":"2022-03-30"},{"lineNumber":52,"author":{"gitId":"janald99"},"content":"            + PREFIX_PHONE + \"91234567 \\n\"","lastModifiedDate":"2022-03-31"},{"lineNumber":53,"author":{"gitId":"janald99"},"content":"            + \"Note: You can only edit the property fields (\"","lastModifiedDate":"2022-03-31"},{"lineNumber":54,"author":{"gitId":"janald99"},"content":"            + PREFIX_HOUSE_TYPE + PREFIX_LOCATION + PREFIX_PRICE_RANGE + \") \"","lastModifiedDate":"2022-03-31"},{"lineNumber":55,"author":{"gitId":"janald99"},"content":"            + \"after a property has been added!\";","lastModifiedDate":"2022-03-31"},{"lineNumber":56,"author":{"gitId":"cwnm"},"content":"","lastModifiedDate":"2022-03-30"},{"lineNumber":57,"author":{"gitId":"cwnm"},"content":"    public static final String MESSAGE_EDIT_BUYER_SUCCESS \u003d \"Edited buyer: %1$s\";","lastModifiedDate":"2022-03-30"},{"lineNumber":58,"author":{"gitId":"cwnm"},"content":"    public static final String MESSAGE_NOT_EDITED \u003d \"At least one field to edit must be provided.\";","lastModifiedDate":"2022-03-30"},{"lineNumber":59,"author":{"gitId":"cwnm"},"content":"    public static final String MESSAGE_DUPLICATE_BUYER \u003d \"This buyer already exists in the address book.\";","lastModifiedDate":"2022-03-30"},{"lineNumber":60,"author":{"gitId":"janald99"},"content":"    public static final String MESSAGE_NO_PROPERTY_YET \u003d \"You cannot edit a property until you have added one!\\n\"","lastModifiedDate":"2022-03-31"},{"lineNumber":61,"author":{"gitId":"janald99"},"content":"        + \"Use \\\"add-ptb\\\" command to add a property first.\";","lastModifiedDate":"2022-03-31"},{"lineNumber":62,"author":{"gitId":"janald99"},"content":"","lastModifiedDate":"2022-03-31"},{"lineNumber":63,"author":{"gitId":"cwnm"},"content":"","lastModifiedDate":"2022-03-30"},{"lineNumber":64,"author":{"gitId":"cwnm"},"content":"    private final Index index;","lastModifiedDate":"2022-03-30"},{"lineNumber":65,"author":{"gitId":"cwnm"},"content":"    private final EditBuyerDescriptor editBuyerDescriptor;","lastModifiedDate":"2022-03-30"},{"lineNumber":66,"author":{"gitId":"cwnm"},"content":"","lastModifiedDate":"2022-03-30"},{"lineNumber":67,"author":{"gitId":"cwnm"},"content":"    /**","lastModifiedDate":"2022-03-30"},{"lineNumber":68,"author":{"gitId":"cwnm"},"content":"     * @param index of the client in the filtered client list to edit","lastModifiedDate":"2022-03-30"},{"lineNumber":69,"author":{"gitId":"cwnm"},"content":"     * @param editBuyerDescriptor details to edit the client with","lastModifiedDate":"2022-03-30"},{"lineNumber":70,"author":{"gitId":"cwnm"},"content":"     */","lastModifiedDate":"2022-03-30"},{"lineNumber":71,"author":{"gitId":"cwnm"},"content":"    public EditBuyerCommand(Index index, EditBuyerDescriptor editBuyerDescriptor) {","lastModifiedDate":"2022-03-30"},{"lineNumber":72,"author":{"gitId":"cwnm"},"content":"        requireNonNull(index);","lastModifiedDate":"2022-03-30"},{"lineNumber":73,"author":{"gitId":"cwnm"},"content":"        requireNonNull(editBuyerDescriptor);","lastModifiedDate":"2022-03-30"},{"lineNumber":74,"author":{"gitId":"cwnm"},"content":"","lastModifiedDate":"2022-03-30"},{"lineNumber":75,"author":{"gitId":"cwnm"},"content":"        this.index \u003d index;","lastModifiedDate":"2022-03-30"},{"lineNumber":76,"author":{"gitId":"cwnm"},"content":"        this.editBuyerDescriptor \u003d new EditBuyerDescriptor(editBuyerDescriptor);","lastModifiedDate":"2022-03-30"},{"lineNumber":77,"author":{"gitId":"cwnm"},"content":"    }","lastModifiedDate":"2022-03-30"},{"lineNumber":78,"author":{"gitId":"cwnm"},"content":"","lastModifiedDate":"2022-03-30"},{"lineNumber":79,"author":{"gitId":"cwnm"},"content":"    @Override","lastModifiedDate":"2022-03-30"},{"lineNumber":80,"author":{"gitId":"cwnm"},"content":"    public CommandResult execute(Model model) throws CommandException {","lastModifiedDate":"2022-03-30"},{"lineNumber":81,"author":{"gitId":"cwnm"},"content":"        requireNonNull(model);","lastModifiedDate":"2022-03-30"},{"lineNumber":82,"author":{"gitId":"cwnm"},"content":"        List\u003cBuyer\u003e lastShownList \u003d model.getFilteredBuyerList();","lastModifiedDate":"2022-03-30"},{"lineNumber":83,"author":{"gitId":"cwnm"},"content":"","lastModifiedDate":"2022-03-30"},{"lineNumber":84,"author":{"gitId":"cwnm"},"content":"        if (index.getZeroBased() \u003e\u003d lastShownList.size()) {","lastModifiedDate":"2022-03-30"},{"lineNumber":85,"author":{"gitId":"janald99"},"content":"            throw new CommandException(Messages.MESSAGE_INVALID_BUYER_DISPLAYED_INDEX);","lastModifiedDate":"2022-04-06"},{"lineNumber":86,"author":{"gitId":"cwnm"},"content":"        }","lastModifiedDate":"2022-03-30"},{"lineNumber":87,"author":{"gitId":"cwnm"},"content":"","lastModifiedDate":"2022-03-30"},{"lineNumber":88,"author":{"gitId":"cwnm"},"content":"        Buyer buyerToEdit \u003d lastShownList.get(index.getZeroBased());","lastModifiedDate":"2022-03-30"},{"lineNumber":89,"author":{"gitId":"cwnm"},"content":"        Buyer editedBuyer \u003d createEditedBuyer(buyerToEdit, editBuyerDescriptor);","lastModifiedDate":"2022-03-30"},{"lineNumber":90,"author":{"gitId":"cwnm"},"content":"","lastModifiedDate":"2022-03-30"},{"lineNumber":91,"author":{"gitId":"chuashihong"},"content":"        if (!buyerToEdit.isSameclient(editedBuyer) \u0026\u0026 model.hasBuyer(editedBuyer)) {","lastModifiedDate":"2022-04-08"},{"lineNumber":92,"author":{"gitId":"cwnm"},"content":"            throw new CommandException(MESSAGE_DUPLICATE_BUYER);","lastModifiedDate":"2022-03-30"},{"lineNumber":93,"author":{"gitId":"cwnm"},"content":"        }","lastModifiedDate":"2022-03-30"},{"lineNumber":94,"author":{"gitId":"cwnm"},"content":"","lastModifiedDate":"2022-03-30"},{"lineNumber":95,"author":{"gitId":"cwnm"},"content":"        model.setBuyer(buyerToEdit, editedBuyer);","lastModifiedDate":"2022-03-30"},{"lineNumber":96,"author":{"gitId":"cwnm"},"content":"        model.updateFilteredClientList(PREDICATE_SHOW_ALL_CLIENTS);","lastModifiedDate":"2022-03-30"},{"lineNumber":97,"author":{"gitId":"cwnm"},"content":"        return new CommandResult(String.format(MESSAGE_EDIT_BUYER_SUCCESS, editedBuyer));","lastModifiedDate":"2022-03-30"},{"lineNumber":98,"author":{"gitId":"cwnm"},"content":"    }","lastModifiedDate":"2022-03-30"},{"lineNumber":99,"author":{"gitId":"cwnm"},"content":"","lastModifiedDate":"2022-03-30"},{"lineNumber":100,"author":{"gitId":"cwnm"},"content":"    /**","lastModifiedDate":"2022-03-30"},{"lineNumber":101,"author":{"gitId":"cwnm"},"content":"     * Creates and returns a {@code client} with the details of {@code buyerToEdit}","lastModifiedDate":"2022-03-30"},{"lineNumber":102,"author":{"gitId":"cwnm"},"content":"     * edited with {@code editBuyerDescriptor}.","lastModifiedDate":"2022-03-30"},{"lineNumber":103,"author":{"gitId":"cwnm"},"content":"     */","lastModifiedDate":"2022-03-30"},{"lineNumber":104,"author":{"gitId":"janald99"},"content":"    private static Buyer createEditedBuyer(Buyer buyerToEdit, EditBuyerDescriptor editBuyerDescriptor)","lastModifiedDate":"2022-03-31"},{"lineNumber":105,"author":{"gitId":"janald99"},"content":"            throws CommandException {","lastModifiedDate":"2022-03-31"},{"lineNumber":106,"author":{"gitId":"janald99"},"content":"","lastModifiedDate":"2022-03-31"},{"lineNumber":107,"author":{"gitId":"cwnm"},"content":"        assert buyerToEdit !\u003d null;","lastModifiedDate":"2022-03-30"},{"lineNumber":108,"author":{"gitId":"cwnm"},"content":"","lastModifiedDate":"2022-03-30"},{"lineNumber":109,"author":{"gitId":"cwnm"},"content":"        //Todo: add property","lastModifiedDate":"2022-03-30"},{"lineNumber":110,"author":{"gitId":"cwnm"},"content":"        //PropertyToBuy updatedPropertyToBuy \u003d editBuyerDescriptor.getPropertyToBuy()","lastModifiedDate":"2022-03-30"},{"lineNumber":111,"author":{"gitId":"cwnm"},"content":"        //        .orElse(NullPropertyToBuy.getNullPropertyToBuy());","lastModifiedDate":"2022-03-30"},{"lineNumber":112,"author":{"gitId":"janald99"},"content":"        if (editBuyerDescriptor.isAnyPropertyFieldEdited()","lastModifiedDate":"2022-03-31"},{"lineNumber":113,"author":{"gitId":"janald99"},"content":"            \u0026\u0026 buyerToEdit.getPropertyToBuy() instanceof NullPropertyToBuy) {","lastModifiedDate":"2022-03-31"},{"lineNumber":114,"author":{"gitId":"janald99"},"content":"            throw new CommandException(MESSAGE_NO_PROPERTY_YET);","lastModifiedDate":"2022-03-31"},{"lineNumber":115,"author":{"gitId":"janald99"},"content":"        }","lastModifiedDate":"2022-03-31"},{"lineNumber":116,"author":{"gitId":"janald99"},"content":"","lastModifiedDate":"2022-03-31"},{"lineNumber":117,"author":{"gitId":"cwnm"},"content":"        //The Buyer already has a property just update it with new values","lastModifiedDate":"2022-03-30"},{"lineNumber":118,"author":{"gitId":"cwnm"},"content":"        HouseType updatedHouseType \u003d editBuyerDescriptor.getHouseType().orElse(","lastModifiedDate":"2022-03-30"},{"lineNumber":119,"author":{"gitId":"cwnm"},"content":"            buyerToEdit.getPropertyToBuy().getHouse().getHouseType());","lastModifiedDate":"2022-03-30"},{"lineNumber":120,"author":{"gitId":"cwnm"},"content":"        Location updatedLocation \u003d editBuyerDescriptor.getLocation().orElse(","lastModifiedDate":"2022-03-30"},{"lineNumber":121,"author":{"gitId":"cwnm"},"content":"            buyerToEdit.getPropertyToBuy().getHouse().getLocation());","lastModifiedDate":"2022-03-30"},{"lineNumber":122,"author":{"gitId":"cwnm"},"content":"        PriceRange updatedPriceRange \u003d editBuyerDescriptor.getPriceRange().orElse(","lastModifiedDate":"2022-03-30"},{"lineNumber":123,"author":{"gitId":"cwnm"},"content":"            buyerToEdit.getPropertyToBuy().getPriceRange());","lastModifiedDate":"2022-03-30"},{"lineNumber":124,"author":{"gitId":"cwnm"},"content":"        PropertyToBuy updatedPropertyToBuy \u003d buyerToEdit.getPropertyToBuy().updatePropertyToBuy(","lastModifiedDate":"2022-03-30"},{"lineNumber":125,"author":{"gitId":"cwnm"},"content":"            updatedHouseType,","lastModifiedDate":"2022-03-30"},{"lineNumber":126,"author":{"gitId":"cwnm"},"content":"            updatedLocation,","lastModifiedDate":"2022-03-30"},{"lineNumber":127,"author":{"gitId":"cwnm"},"content":"            updatedPriceRange","lastModifiedDate":"2022-03-30"},{"lineNumber":128,"author":{"gitId":"cwnm"},"content":"        );","lastModifiedDate":"2022-03-30"},{"lineNumber":129,"author":{"gitId":"cwnm"},"content":"","lastModifiedDate":"2022-03-30"},{"lineNumber":130,"author":{"gitId":"janald99"},"content":"        Name updatedName \u003d editBuyerDescriptor.getName().orElse(buyerToEdit.getName());","lastModifiedDate":"2022-03-31"},{"lineNumber":131,"author":{"gitId":"janald99"},"content":"        Phone updatedPhone \u003d editBuyerDescriptor.getPhone().orElse(buyerToEdit.getPhone());","lastModifiedDate":"2022-03-31"},{"lineNumber":132,"author":{"gitId":"janald99"},"content":"        Set\u003cTag\u003e updatedTags \u003d editBuyerDescriptor.getTags().orElse(buyerToEdit.getTags());","lastModifiedDate":"2022-03-31"},{"lineNumber":133,"author":{"gitId":"janald99"},"content":"        Appointment updatedAppointment \u003d editBuyerDescriptor.getAppointment().orElse(buyerToEdit.getAppointment());","lastModifiedDate":"2022-03-31"},{"lineNumber":134,"author":{"gitId":"janald99"},"content":"","lastModifiedDate":"2022-03-31"},{"lineNumber":135,"author":{"gitId":"janald99"},"content":"        return new Buyer(updatedName, updatedPhone, updatedAppointment, updatedTags, updatedPropertyToBuy);","lastModifiedDate":"2022-03-31"},{"lineNumber":136,"author":{"gitId":"cwnm"},"content":"","lastModifiedDate":"2022-03-30"},{"lineNumber":137,"author":{"gitId":"cwnm"},"content":"    }","lastModifiedDate":"2022-03-30"},{"lineNumber":138,"author":{"gitId":"cwnm"},"content":"","lastModifiedDate":"2022-03-30"},{"lineNumber":139,"author":{"gitId":"cwnm"},"content":"    @Override","lastModifiedDate":"2022-03-30"},{"lineNumber":140,"author":{"gitId":"cwnm"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2022-03-30"},{"lineNumber":141,"author":{"gitId":"cwnm"},"content":"        // short circuit if same object","lastModifiedDate":"2022-03-30"},{"lineNumber":142,"author":{"gitId":"cwnm"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2022-03-30"},{"lineNumber":143,"author":{"gitId":"cwnm"},"content":"            return true;","lastModifiedDate":"2022-03-30"},{"lineNumber":144,"author":{"gitId":"cwnm"},"content":"        }","lastModifiedDate":"2022-03-30"},{"lineNumber":145,"author":{"gitId":"cwnm"},"content":"","lastModifiedDate":"2022-03-30"},{"lineNumber":146,"author":{"gitId":"cwnm"},"content":"        // instanceof handles nulls","lastModifiedDate":"2022-03-30"},{"lineNumber":147,"author":{"gitId":"cwnm"},"content":"        if (!(other instanceof EditBuyerCommand)) {","lastModifiedDate":"2022-03-30"},{"lineNumber":148,"author":{"gitId":"cwnm"},"content":"            return false;","lastModifiedDate":"2022-03-30"},{"lineNumber":149,"author":{"gitId":"cwnm"},"content":"        }","lastModifiedDate":"2022-03-30"},{"lineNumber":150,"author":{"gitId":"cwnm"},"content":"","lastModifiedDate":"2022-03-30"},{"lineNumber":151,"author":{"gitId":"cwnm"},"content":"        // state check","lastModifiedDate":"2022-03-30"},{"lineNumber":152,"author":{"gitId":"cwnm"},"content":"        EditBuyerCommand e \u003d (EditBuyerCommand) other;","lastModifiedDate":"2022-03-30"},{"lineNumber":153,"author":{"gitId":"cwnm"},"content":"        return index.equals(e.index)","lastModifiedDate":"2022-03-30"},{"lineNumber":154,"author":{"gitId":"cwnm"},"content":"                \u0026\u0026 editBuyerDescriptor.equals(e.editBuyerDescriptor);","lastModifiedDate":"2022-03-30"},{"lineNumber":155,"author":{"gitId":"cwnm"},"content":"    }","lastModifiedDate":"2022-03-30"},{"lineNumber":156,"author":{"gitId":"cwnm"},"content":"","lastModifiedDate":"2022-03-30"},{"lineNumber":157,"author":{"gitId":"cwnm"},"content":"    /**","lastModifiedDate":"2022-03-30"},{"lineNumber":158,"author":{"gitId":"cwnm"},"content":"     * Stores the details to edit the client with. Each non-empty field value will replace the","lastModifiedDate":"2022-03-30"},{"lineNumber":159,"author":{"gitId":"cwnm"},"content":"     * corresponding field value of the client.","lastModifiedDate":"2022-03-30"},{"lineNumber":160,"author":{"gitId":"cwnm"},"content":"     */","lastModifiedDate":"2022-03-30"},{"lineNumber":161,"author":{"gitId":"cwnm"},"content":"    public static class EditBuyerDescriptor {","lastModifiedDate":"2022-03-30"},{"lineNumber":162,"author":{"gitId":"cwnm"},"content":"        private Name name;","lastModifiedDate":"2022-03-30"},{"lineNumber":163,"author":{"gitId":"cwnm"},"content":"        private Phone phone;","lastModifiedDate":"2022-03-30"},{"lineNumber":164,"author":{"gitId":"cwnm"},"content":"        private Set\u003cTag\u003e tags;","lastModifiedDate":"2022-03-30"},{"lineNumber":165,"author":{"gitId":"cwnm"},"content":"        private Appointment appointment;","lastModifiedDate":"2022-03-30"},{"lineNumber":166,"author":{"gitId":"chuashihong"},"content":"        private PropertyToBuy propertyToBuy;","lastModifiedDate":"2022-04-08"},{"lineNumber":167,"author":{"gitId":"cwnm"},"content":"        private HouseType houseType;","lastModifiedDate":"2022-03-30"},{"lineNumber":168,"author":{"gitId":"cwnm"},"content":"        private Location location;","lastModifiedDate":"2022-03-30"},{"lineNumber":169,"author":{"gitId":"cwnm"},"content":"        private PriceRange priceRange;","lastModifiedDate":"2022-03-30"},{"lineNumber":170,"author":{"gitId":"cwnm"},"content":"","lastModifiedDate":"2022-03-30"},{"lineNumber":171,"author":{"gitId":"cwnm"},"content":"        public EditBuyerDescriptor() {}","lastModifiedDate":"2022-03-30"},{"lineNumber":172,"author":{"gitId":"cwnm"},"content":"","lastModifiedDate":"2022-03-30"},{"lineNumber":173,"author":{"gitId":"cwnm"},"content":"        /**","lastModifiedDate":"2022-03-30"},{"lineNumber":174,"author":{"gitId":"cwnm"},"content":"         * Copy constructor.","lastModifiedDate":"2022-03-30"},{"lineNumber":175,"author":{"gitId":"cwnm"},"content":"         * A defensive copy of {@code tags} is used internally.","lastModifiedDate":"2022-03-30"},{"lineNumber":176,"author":{"gitId":"cwnm"},"content":"         */","lastModifiedDate":"2022-03-30"},{"lineNumber":177,"author":{"gitId":"cwnm"},"content":"        public EditBuyerDescriptor(EditBuyerDescriptor toCopy) {","lastModifiedDate":"2022-03-30"},{"lineNumber":178,"author":{"gitId":"cwnm"},"content":"            setName(toCopy.name);","lastModifiedDate":"2022-03-30"},{"lineNumber":179,"author":{"gitId":"cwnm"},"content":"            setPhone(toCopy.phone);","lastModifiedDate":"2022-03-30"},{"lineNumber":180,"author":{"gitId":"cwnm"},"content":"            setTags(toCopy.tags);","lastModifiedDate":"2022-03-30"},{"lineNumber":181,"author":{"gitId":"chuashihong"},"content":"            setAppointment(toCopy.appointment);","lastModifiedDate":"2022-04-08"},{"lineNumber":182,"author":{"gitId":"cwnm"},"content":"            setHouseType(toCopy.houseType);","lastModifiedDate":"2022-03-30"},{"lineNumber":183,"author":{"gitId":"cwnm"},"content":"            setLocation(toCopy.location);","lastModifiedDate":"2022-03-30"},{"lineNumber":184,"author":{"gitId":"cwnm"},"content":"            setPriceRange(toCopy.priceRange);","lastModifiedDate":"2022-03-30"},{"lineNumber":185,"author":{"gitId":"chuashihong"},"content":"            setPropertyToBuy(toCopy.propertyToBuy);","lastModifiedDate":"2022-04-08"},{"lineNumber":186,"author":{"gitId":"cwnm"},"content":"        }","lastModifiedDate":"2022-03-30"},{"lineNumber":187,"author":{"gitId":"cwnm"},"content":"","lastModifiedDate":"2022-03-30"},{"lineNumber":188,"author":{"gitId":"cwnm"},"content":"","lastModifiedDate":"2022-03-30"},{"lineNumber":189,"author":{"gitId":"cwnm"},"content":"        /**","lastModifiedDate":"2022-03-30"},{"lineNumber":190,"author":{"gitId":"cwnm"},"content":"         * Returns true if at least one field is edited.","lastModifiedDate":"2022-03-30"},{"lineNumber":191,"author":{"gitId":"cwnm"},"content":"         */","lastModifiedDate":"2022-03-30"},{"lineNumber":192,"author":{"gitId":"cwnm"},"content":"        public boolean isAnyFieldEdited() {","lastModifiedDate":"2022-03-30"},{"lineNumber":193,"author":{"gitId":"cwnm"},"content":"            return CollectionUtil.isAnyNonNull(name, phone, tags, houseType, location, priceRange);","lastModifiedDate":"2022-03-30"},{"lineNumber":194,"author":{"gitId":"cwnm"},"content":"        }","lastModifiedDate":"2022-03-30"},{"lineNumber":195,"author":{"gitId":"cwnm"},"content":"","lastModifiedDate":"2022-03-30"},{"lineNumber":196,"author":{"gitId":"janald99"},"content":"        /**","lastModifiedDate":"2022-03-31"},{"lineNumber":197,"author":{"gitId":"janald99"},"content":"         * Returns true if at least one Property field is edited.","lastModifiedDate":"2022-03-31"},{"lineNumber":198,"author":{"gitId":"janald99"},"content":"         */","lastModifiedDate":"2022-03-31"},{"lineNumber":199,"author":{"gitId":"janald99"},"content":"        public boolean isAnyPropertyFieldEdited() {","lastModifiedDate":"2022-03-31"},{"lineNumber":200,"author":{"gitId":"janald99"},"content":"            return CollectionUtil.isAnyNonNull(houseType, location, priceRange);","lastModifiedDate":"2022-03-31"},{"lineNumber":201,"author":{"gitId":"janald99"},"content":"        }","lastModifiedDate":"2022-03-31"},{"lineNumber":202,"author":{"gitId":"janald99"},"content":"","lastModifiedDate":"2022-03-31"},{"lineNumber":203,"author":{"gitId":"cwnm"},"content":"        public void setName(Name name) {","lastModifiedDate":"2022-03-30"},{"lineNumber":204,"author":{"gitId":"cwnm"},"content":"            this.name \u003d name;","lastModifiedDate":"2022-03-30"},{"lineNumber":205,"author":{"gitId":"cwnm"},"content":"        }","lastModifiedDate":"2022-03-30"},{"lineNumber":206,"author":{"gitId":"cwnm"},"content":"","lastModifiedDate":"2022-03-30"},{"lineNumber":207,"author":{"gitId":"cwnm"},"content":"        public Optional\u003cName\u003e getName() {","lastModifiedDate":"2022-03-30"},{"lineNumber":208,"author":{"gitId":"cwnm"},"content":"            return Optional.ofNullable(name);","lastModifiedDate":"2022-03-30"},{"lineNumber":209,"author":{"gitId":"cwnm"},"content":"        }","lastModifiedDate":"2022-03-30"},{"lineNumber":210,"author":{"gitId":"cwnm"},"content":"","lastModifiedDate":"2022-03-30"},{"lineNumber":211,"author":{"gitId":"cwnm"},"content":"        public void setPhone(Phone phone) {","lastModifiedDate":"2022-03-30"},{"lineNumber":212,"author":{"gitId":"cwnm"},"content":"            this.phone \u003d phone;","lastModifiedDate":"2022-03-30"},{"lineNumber":213,"author":{"gitId":"cwnm"},"content":"        }","lastModifiedDate":"2022-03-30"},{"lineNumber":214,"author":{"gitId":"cwnm"},"content":"","lastModifiedDate":"2022-03-30"},{"lineNumber":215,"author":{"gitId":"cwnm"},"content":"        public Optional\u003cPhone\u003e getPhone() {","lastModifiedDate":"2022-03-30"},{"lineNumber":216,"author":{"gitId":"cwnm"},"content":"            return Optional.ofNullable(phone);","lastModifiedDate":"2022-03-30"},{"lineNumber":217,"author":{"gitId":"cwnm"},"content":"        }","lastModifiedDate":"2022-03-30"},{"lineNumber":218,"author":{"gitId":"cwnm"},"content":"","lastModifiedDate":"2022-03-30"},{"lineNumber":219,"author":{"gitId":"cwnm"},"content":"        public void setAppointment(Appointment appointment) {","lastModifiedDate":"2022-03-30"},{"lineNumber":220,"author":{"gitId":"cwnm"},"content":"            this.appointment \u003d appointment;","lastModifiedDate":"2022-03-30"},{"lineNumber":221,"author":{"gitId":"cwnm"},"content":"        }","lastModifiedDate":"2022-03-30"},{"lineNumber":222,"author":{"gitId":"cwnm"},"content":"","lastModifiedDate":"2022-03-30"},{"lineNumber":223,"author":{"gitId":"cwnm"},"content":"        public Optional\u003cAppointment\u003e getAppointment() {","lastModifiedDate":"2022-03-30"},{"lineNumber":224,"author":{"gitId":"cwnm"},"content":"            return Optional.ofNullable(appointment);","lastModifiedDate":"2022-03-30"},{"lineNumber":225,"author":{"gitId":"cwnm"},"content":"        }","lastModifiedDate":"2022-03-30"},{"lineNumber":226,"author":{"gitId":"cwnm"},"content":"","lastModifiedDate":"2022-03-30"},{"lineNumber":227,"author":{"gitId":"cwnm"},"content":"        public void setHouseType(HouseType houseType) {","lastModifiedDate":"2022-03-30"},{"lineNumber":228,"author":{"gitId":"cwnm"},"content":"            this.houseType \u003d houseType;","lastModifiedDate":"2022-03-30"},{"lineNumber":229,"author":{"gitId":"cwnm"},"content":"        }","lastModifiedDate":"2022-03-30"},{"lineNumber":230,"author":{"gitId":"cwnm"},"content":"","lastModifiedDate":"2022-03-30"},{"lineNumber":231,"author":{"gitId":"cwnm"},"content":"        public Optional\u003cHouseType\u003e getHouseType() {","lastModifiedDate":"2022-03-30"},{"lineNumber":232,"author":{"gitId":"cwnm"},"content":"            return Optional.ofNullable(houseType);","lastModifiedDate":"2022-03-30"},{"lineNumber":233,"author":{"gitId":"cwnm"},"content":"        }","lastModifiedDate":"2022-03-30"},{"lineNumber":234,"author":{"gitId":"cwnm"},"content":"","lastModifiedDate":"2022-03-30"},{"lineNumber":235,"author":{"gitId":"cwnm"},"content":"        public void setLocation(Location location) {","lastModifiedDate":"2022-03-30"},{"lineNumber":236,"author":{"gitId":"cwnm"},"content":"            this.location \u003d location;","lastModifiedDate":"2022-03-30"},{"lineNumber":237,"author":{"gitId":"cwnm"},"content":"        }","lastModifiedDate":"2022-03-30"},{"lineNumber":238,"author":{"gitId":"cwnm"},"content":"","lastModifiedDate":"2022-03-30"},{"lineNumber":239,"author":{"gitId":"cwnm"},"content":"        public Optional\u003cLocation\u003e getLocation() {","lastModifiedDate":"2022-03-30"},{"lineNumber":240,"author":{"gitId":"cwnm"},"content":"            return Optional.ofNullable(location);","lastModifiedDate":"2022-03-30"},{"lineNumber":241,"author":{"gitId":"cwnm"},"content":"        }","lastModifiedDate":"2022-03-30"},{"lineNumber":242,"author":{"gitId":"cwnm"},"content":"","lastModifiedDate":"2022-03-30"},{"lineNumber":243,"author":{"gitId":"cwnm"},"content":"        public void setPriceRange(PriceRange priceRange) {","lastModifiedDate":"2022-03-30"},{"lineNumber":244,"author":{"gitId":"cwnm"},"content":"            this.priceRange \u003d priceRange;","lastModifiedDate":"2022-03-30"},{"lineNumber":245,"author":{"gitId":"cwnm"},"content":"        }","lastModifiedDate":"2022-03-30"},{"lineNumber":246,"author":{"gitId":"cwnm"},"content":"","lastModifiedDate":"2022-03-30"},{"lineNumber":247,"author":{"gitId":"cwnm"},"content":"        public Optional\u003cPriceRange\u003e getPriceRange() {","lastModifiedDate":"2022-03-30"},{"lineNumber":248,"author":{"gitId":"cwnm"},"content":"            return Optional.ofNullable(priceRange);","lastModifiedDate":"2022-03-30"},{"lineNumber":249,"author":{"gitId":"cwnm"},"content":"        }","lastModifiedDate":"2022-03-30"},{"lineNumber":250,"author":{"gitId":"cwnm"},"content":"","lastModifiedDate":"2022-03-30"},{"lineNumber":251,"author":{"gitId":"chuashihong"},"content":"        public void setPropertyToBuy(PropertyToBuy propertyToBuy) {","lastModifiedDate":"2022-04-08"},{"lineNumber":252,"author":{"gitId":"chuashihong"},"content":"            this.propertyToBuy \u003d propertyToBuy;","lastModifiedDate":"2022-04-08"},{"lineNumber":253,"author":{"gitId":"chuashihong"},"content":"        }","lastModifiedDate":"2022-04-08"},{"lineNumber":254,"author":{"gitId":"chuashihong"},"content":"","lastModifiedDate":"2022-04-08"},{"lineNumber":255,"author":{"gitId":"chuashihong"},"content":"        public Optional\u003cPropertyToBuy\u003e getPropertyToBuy() {","lastModifiedDate":"2022-04-08"},{"lineNumber":256,"author":{"gitId":"chuashihong"},"content":"            return Optional.ofNullable(propertyToBuy);","lastModifiedDate":"2022-04-08"},{"lineNumber":257,"author":{"gitId":"chuashihong"},"content":"        }","lastModifiedDate":"2022-04-08"},{"lineNumber":258,"author":{"gitId":"chuashihong"},"content":"","lastModifiedDate":"2022-04-08"},{"lineNumber":259,"author":{"gitId":"cwnm"},"content":"        /**","lastModifiedDate":"2022-03-30"},{"lineNumber":260,"author":{"gitId":"cwnm"},"content":"         * Sets {@code tags} to this object\u0027s {@code tags}.","lastModifiedDate":"2022-03-30"},{"lineNumber":261,"author":{"gitId":"cwnm"},"content":"         * A defensive copy of {@code tags} is used internally.","lastModifiedDate":"2022-03-30"},{"lineNumber":262,"author":{"gitId":"cwnm"},"content":"         */","lastModifiedDate":"2022-03-30"},{"lineNumber":263,"author":{"gitId":"cwnm"},"content":"        public void setTags(Set\u003cTag\u003e tags) {","lastModifiedDate":"2022-03-30"},{"lineNumber":264,"author":{"gitId":"cwnm"},"content":"            this.tags \u003d (tags !\u003d null) ? new HashSet\u003c\u003e(tags) : null;","lastModifiedDate":"2022-03-30"},{"lineNumber":265,"author":{"gitId":"cwnm"},"content":"        }","lastModifiedDate":"2022-03-30"},{"lineNumber":266,"author":{"gitId":"cwnm"},"content":"","lastModifiedDate":"2022-03-30"},{"lineNumber":267,"author":{"gitId":"cwnm"},"content":"        /**","lastModifiedDate":"2022-03-30"},{"lineNumber":268,"author":{"gitId":"cwnm"},"content":"         * Returns an unmodifiable tag set, which throws {@code UnsupportedOperationException}","lastModifiedDate":"2022-03-30"},{"lineNumber":269,"author":{"gitId":"cwnm"},"content":"         * if modification is attempted.","lastModifiedDate":"2022-03-30"},{"lineNumber":270,"author":{"gitId":"cwnm"},"content":"         * Returns {@code Optional#empty()} if {@code tags} is null.","lastModifiedDate":"2022-03-30"},{"lineNumber":271,"author":{"gitId":"cwnm"},"content":"         */","lastModifiedDate":"2022-03-30"},{"lineNumber":272,"author":{"gitId":"cwnm"},"content":"        public Optional\u003cSet\u003cTag\u003e\u003e getTags() {","lastModifiedDate":"2022-03-30"},{"lineNumber":273,"author":{"gitId":"cwnm"},"content":"            return (tags !\u003d null) ? Optional.of(Collections.unmodifiableSet(tags)) : Optional.empty();","lastModifiedDate":"2022-03-30"},{"lineNumber":274,"author":{"gitId":"cwnm"},"content":"        }","lastModifiedDate":"2022-03-30"},{"lineNumber":275,"author":{"gitId":"cwnm"},"content":"","lastModifiedDate":"2022-03-30"},{"lineNumber":276,"author":{"gitId":"cwnm"},"content":"","lastModifiedDate":"2022-03-30"},{"lineNumber":277,"author":{"gitId":"cwnm"},"content":"        @Override","lastModifiedDate":"2022-03-30"},{"lineNumber":278,"author":{"gitId":"cwnm"},"content":"        public boolean equals(Object other) {","lastModifiedDate":"2022-03-30"},{"lineNumber":279,"author":{"gitId":"cwnm"},"content":"            // short circuit if same object","lastModifiedDate":"2022-03-30"},{"lineNumber":280,"author":{"gitId":"cwnm"},"content":"            if (other \u003d\u003d this) {","lastModifiedDate":"2022-03-30"},{"lineNumber":281,"author":{"gitId":"cwnm"},"content":"                return true;","lastModifiedDate":"2022-03-30"},{"lineNumber":282,"author":{"gitId":"cwnm"},"content":"            }","lastModifiedDate":"2022-03-30"},{"lineNumber":283,"author":{"gitId":"cwnm"},"content":"","lastModifiedDate":"2022-03-30"},{"lineNumber":284,"author":{"gitId":"cwnm"},"content":"            // instanceof handles nulls","lastModifiedDate":"2022-03-30"},{"lineNumber":285,"author":{"gitId":"cwnm"},"content":"            if (!(other instanceof EditBuyerDescriptor)) {","lastModifiedDate":"2022-03-30"},{"lineNumber":286,"author":{"gitId":"cwnm"},"content":"                return false;","lastModifiedDate":"2022-03-30"},{"lineNumber":287,"author":{"gitId":"cwnm"},"content":"            }","lastModifiedDate":"2022-03-30"},{"lineNumber":288,"author":{"gitId":"cwnm"},"content":"","lastModifiedDate":"2022-03-30"},{"lineNumber":289,"author":{"gitId":"cwnm"},"content":"            // state check","lastModifiedDate":"2022-03-30"},{"lineNumber":290,"author":{"gitId":"cwnm"},"content":"            EditBuyerDescriptor e \u003d (EditBuyerDescriptor) other;","lastModifiedDate":"2022-03-30"},{"lineNumber":291,"author":{"gitId":"cwnm"},"content":"","lastModifiedDate":"2022-03-30"},{"lineNumber":292,"author":{"gitId":"cwnm"},"content":"            return getName().equals(e.getName())","lastModifiedDate":"2022-03-30"},{"lineNumber":293,"author":{"gitId":"cwnm"},"content":"                    \u0026\u0026 getPhone().equals(e.getPhone())","lastModifiedDate":"2022-03-30"},{"lineNumber":294,"author":{"gitId":"cwnm"},"content":"                    \u0026\u0026 getTags().equals(e.getTags())","lastModifiedDate":"2022-03-30"},{"lineNumber":295,"author":{"gitId":"chuashihong"},"content":"                    \u0026\u0026 getAppointment().equals(e.getAppointment())","lastModifiedDate":"2022-04-08"},{"lineNumber":296,"author":{"gitId":"cwnm"},"content":"                    \u0026\u0026 getHouseType().equals(e.getHouseType())","lastModifiedDate":"2022-03-30"},{"lineNumber":297,"author":{"gitId":"cwnm"},"content":"                    \u0026\u0026 getLocation().equals(e.getLocation())","lastModifiedDate":"2022-03-30"},{"lineNumber":298,"author":{"gitId":"cwnm"},"content":"                    \u0026\u0026 getPriceRange().equals(e.getPriceRange());","lastModifiedDate":"2022-03-30"},{"lineNumber":299,"author":{"gitId":"cwnm"},"content":"        }","lastModifiedDate":"2022-03-30"},{"lineNumber":300,"author":{"gitId":"cwnm"},"content":"    }","lastModifiedDate":"2022-03-30"},{"lineNumber":301,"author":{"gitId":"cwnm"},"content":"}","lastModifiedDate":"2022-03-30"}],"authorContributionMap":{"janald99":41,"cwnm":247,"chuashihong":13}},{"path":"src/main/java/seedu/address/logic/commands/EditSellerCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"chuashihong"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2022-03-28"},{"lineNumber":2,"author":{"gitId":"chuashihong"},"content":"","lastModifiedDate":"2022-03-28"},{"lineNumber":3,"author":{"gitId":"chuashihong"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2022-03-28"},{"lineNumber":4,"author":{"gitId":"janald99"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_ADDRESS;","lastModifiedDate":"2022-03-31"},{"lineNumber":5,"author":{"gitId":"janald99"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_HOUSE_TYPE;","lastModifiedDate":"2022-03-31"},{"lineNumber":6,"author":{"gitId":"janald99"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_LOCATION;","lastModifiedDate":"2022-03-31"},{"lineNumber":7,"author":{"gitId":"chuashihong"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_NAME;","lastModifiedDate":"2022-03-28"},{"lineNumber":8,"author":{"gitId":"chuashihong"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_PHONE;","lastModifiedDate":"2022-03-28"},{"lineNumber":9,"author":{"gitId":"janald99"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_PRICE_RANGE;","lastModifiedDate":"2022-03-31"},{"lineNumber":10,"author":{"gitId":"chuashihong"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_TAG;","lastModifiedDate":"2022-03-28"},{"lineNumber":11,"author":{"gitId":"chuashihong"},"content":"import static seedu.address.model.Model.PREDICATE_SHOW_ALL_SELLERS;","lastModifiedDate":"2022-04-08"},{"lineNumber":12,"author":{"gitId":"chuashihong"},"content":"","lastModifiedDate":"2022-03-28"},{"lineNumber":13,"author":{"gitId":"chuashihong"},"content":"import java.util.Collections;","lastModifiedDate":"2022-03-28"},{"lineNumber":14,"author":{"gitId":"chuashihong"},"content":"import java.util.HashSet;","lastModifiedDate":"2022-03-28"},{"lineNumber":15,"author":{"gitId":"chuashihong"},"content":"import java.util.List;","lastModifiedDate":"2022-03-28"},{"lineNumber":16,"author":{"gitId":"chuashihong"},"content":"import java.util.Optional;","lastModifiedDate":"2022-03-28"},{"lineNumber":17,"author":{"gitId":"chuashihong"},"content":"import java.util.Set;","lastModifiedDate":"2022-03-28"},{"lineNumber":18,"author":{"gitId":"chuashihong"},"content":"","lastModifiedDate":"2022-03-28"},{"lineNumber":19,"author":{"gitId":"chuashihong"},"content":"import seedu.address.commons.core.Messages;","lastModifiedDate":"2022-03-28"},{"lineNumber":20,"author":{"gitId":"chuashihong"},"content":"import seedu.address.commons.core.index.Index;","lastModifiedDate":"2022-03-28"},{"lineNumber":21,"author":{"gitId":"chuashihong"},"content":"import seedu.address.commons.util.CollectionUtil;","lastModifiedDate":"2022-03-28"},{"lineNumber":22,"author":{"gitId":"chuashihong"},"content":"import seedu.address.logic.commands.exceptions.CommandException;","lastModifiedDate":"2022-03-28"},{"lineNumber":23,"author":{"gitId":"chuashihong"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2022-03-28"},{"lineNumber":24,"author":{"gitId":"chuashihong"},"content":"import seedu.address.model.client.Appointment;","lastModifiedDate":"2022-03-28"},{"lineNumber":25,"author":{"gitId":"chuashihong"},"content":"import seedu.address.model.client.Name;","lastModifiedDate":"2022-03-28"},{"lineNumber":26,"author":{"gitId":"chuashihong"},"content":"import seedu.address.model.client.Phone;","lastModifiedDate":"2022-03-28"},{"lineNumber":27,"author":{"gitId":"chuashihong"},"content":"import seedu.address.model.property.Address;","lastModifiedDate":"2022-03-28"},{"lineNumber":28,"author":{"gitId":"chuashihong"},"content":"import seedu.address.model.property.HouseType;","lastModifiedDate":"2022-03-28"},{"lineNumber":29,"author":{"gitId":"chuashihong"},"content":"import seedu.address.model.property.Location;","lastModifiedDate":"2022-03-28"},{"lineNumber":30,"author":{"gitId":"chuashihong"},"content":"import seedu.address.model.property.NullPropertyToSell;","lastModifiedDate":"2022-03-28"},{"lineNumber":31,"author":{"gitId":"chuashihong"},"content":"import seedu.address.model.property.PriceRange;","lastModifiedDate":"2022-03-28"},{"lineNumber":32,"author":{"gitId":"chuashihong"},"content":"import seedu.address.model.property.PropertyToSell;","lastModifiedDate":"2022-03-28"},{"lineNumber":33,"author":{"gitId":"chuashihong"},"content":"import seedu.address.model.seller.Seller;","lastModifiedDate":"2022-03-28"},{"lineNumber":34,"author":{"gitId":"chuashihong"},"content":"import seedu.address.model.tag.Tag;","lastModifiedDate":"2022-03-28"},{"lineNumber":35,"author":{"gitId":"chuashihong"},"content":"","lastModifiedDate":"2022-03-28"},{"lineNumber":36,"author":{"gitId":"chuashihong"},"content":"/**","lastModifiedDate":"2022-03-28"},{"lineNumber":37,"author":{"gitId":"chuashihong"},"content":" * Edits the details of an existing client in the address book.","lastModifiedDate":"2022-03-28"},{"lineNumber":38,"author":{"gitId":"chuashihong"},"content":" */","lastModifiedDate":"2022-03-28"},{"lineNumber":39,"author":{"gitId":"chuashihong"},"content":"public class EditSellerCommand extends Command {","lastModifiedDate":"2022-03-28"},{"lineNumber":40,"author":{"gitId":"chuashihong"},"content":"","lastModifiedDate":"2022-03-28"},{"lineNumber":41,"author":{"gitId":"cwnm"},"content":"    public static final String COMMAND_WORD \u003d \"edit-s\";","lastModifiedDate":"2022-03-30"},{"lineNumber":42,"author":{"gitId":"chuashihong"},"content":"","lastModifiedDate":"2022-03-28"},{"lineNumber":43,"author":{"gitId":"chuashihong"},"content":"    public static final String MESSAGE_USAGE \u003d COMMAND_WORD + \": Edits the details of the seller identified \"","lastModifiedDate":"2022-03-28"},{"lineNumber":44,"author":{"gitId":"chuashihong"},"content":"            + \"by the index number used in the displayed seller list. \"","lastModifiedDate":"2022-03-28"},{"lineNumber":45,"author":{"gitId":"chuashihong"},"content":"            + \"Existing values will be overwritten by the input values.\\n\"","lastModifiedDate":"2022-03-28"},{"lineNumber":46,"author":{"gitId":"chuashihong"},"content":"            + \"Parameters: INDEX (must be a positive integer) \"","lastModifiedDate":"2022-03-28"},{"lineNumber":47,"author":{"gitId":"chuashihong"},"content":"            + \"[\" + PREFIX_NAME + \"NAME] \"","lastModifiedDate":"2022-03-28"},{"lineNumber":48,"author":{"gitId":"chuashihong"},"content":"            + \"[\" + PREFIX_PHONE + \"PHONE] \"","lastModifiedDate":"2022-03-28"},{"lineNumber":49,"author":{"gitId":"janald99"},"content":"            + \"[\" + PREFIX_TAG + \"TAG] \"","lastModifiedDate":"2022-03-31"},{"lineNumber":50,"author":{"gitId":"janald99"},"content":"            + \"[\" + PREFIX_HOUSE_TYPE + \"HOUSETYPE] \"","lastModifiedDate":"2022-03-31"},{"lineNumber":51,"author":{"gitId":"janald99"},"content":"            + \"[\" + PREFIX_LOCATION + \"LOCATION] \"","lastModifiedDate":"2022-03-31"},{"lineNumber":52,"author":{"gitId":"janald99"},"content":"            + \"[\" + PREFIX_ADDRESS + \"ADDRESS] \"","lastModifiedDate":"2022-03-31"},{"lineNumber":53,"author":{"gitId":"janald99"},"content":"            + \"[\" + PREFIX_PRICE_RANGE + \"PRICERANGE]...\\n\"","lastModifiedDate":"2022-03-31"},{"lineNumber":54,"author":{"gitId":"chuashihong"},"content":"            + \"Example: \" + COMMAND_WORD + \" 1 \"","lastModifiedDate":"2022-03-28"},{"lineNumber":55,"author":{"gitId":"janald99"},"content":"            + PREFIX_PHONE + \"91234567 \\n\"","lastModifiedDate":"2022-03-31"},{"lineNumber":56,"author":{"gitId":"janald99"},"content":"            + \"Note: You can only edit the property fields (\"","lastModifiedDate":"2022-03-31"},{"lineNumber":57,"author":{"gitId":"janald99"},"content":"            + PREFIX_HOUSE_TYPE + PREFIX_LOCATION + PREFIX_ADDRESS + PREFIX_PRICE_RANGE + \") \"","lastModifiedDate":"2022-03-31"},{"lineNumber":58,"author":{"gitId":"janald99"},"content":"            + \"after a property has been added!\";","lastModifiedDate":"2022-03-31"},{"lineNumber":59,"author":{"gitId":"chuashihong"},"content":"","lastModifiedDate":"2022-03-28"},{"lineNumber":60,"author":{"gitId":"chuashihong"},"content":"    public static final String MESSAGE_EDIT_SELLER_SUCCESS \u003d \"Edited seller: %1$s\";","lastModifiedDate":"2022-03-28"},{"lineNumber":61,"author":{"gitId":"chuashihong"},"content":"    public static final String MESSAGE_NOT_EDITED \u003d \"At least one field to edit must be provided.\";","lastModifiedDate":"2022-03-28"},{"lineNumber":62,"author":{"gitId":"chuashihong"},"content":"    public static final String MESSAGE_DUPLICATE_SELLER \u003d \"This seller already exists in the address book.\";","lastModifiedDate":"2022-03-28"},{"lineNumber":63,"author":{"gitId":"janald99"},"content":"    public static final String MESSAGE_NO_PROPERTY_YET \u003d \"You cannot edit a property until you have added one!\\n\"","lastModifiedDate":"2022-03-31"},{"lineNumber":64,"author":{"gitId":"janald99"},"content":"            + \"Use \\\"add-pts\\\" command to add a property first.\";","lastModifiedDate":"2022-03-31"},{"lineNumber":65,"author":{"gitId":"chuashihong"},"content":"","lastModifiedDate":"2022-03-28"},{"lineNumber":66,"author":{"gitId":"chuashihong"},"content":"    private final Index index;","lastModifiedDate":"2022-03-28"},{"lineNumber":67,"author":{"gitId":"chuashihong"},"content":"    private final EditSellerDescriptor editSellerDescriptor;","lastModifiedDate":"2022-03-28"},{"lineNumber":68,"author":{"gitId":"chuashihong"},"content":"","lastModifiedDate":"2022-03-28"},{"lineNumber":69,"author":{"gitId":"chuashihong"},"content":"    /**","lastModifiedDate":"2022-03-28"},{"lineNumber":70,"author":{"gitId":"chuashihong"},"content":"     * @param index of the client in the filtered client list to edit","lastModifiedDate":"2022-03-28"},{"lineNumber":71,"author":{"gitId":"chuashihong"},"content":"     * @param editSellerDescriptor details to edit the client with","lastModifiedDate":"2022-03-28"},{"lineNumber":72,"author":{"gitId":"chuashihong"},"content":"     */","lastModifiedDate":"2022-03-28"},{"lineNumber":73,"author":{"gitId":"chuashihong"},"content":"    public EditSellerCommand(Index index, EditSellerDescriptor editSellerDescriptor) {","lastModifiedDate":"2022-03-28"},{"lineNumber":74,"author":{"gitId":"chuashihong"},"content":"        requireNonNull(index);","lastModifiedDate":"2022-03-28"},{"lineNumber":75,"author":{"gitId":"chuashihong"},"content":"        requireNonNull(editSellerDescriptor);","lastModifiedDate":"2022-03-28"},{"lineNumber":76,"author":{"gitId":"chuashihong"},"content":"","lastModifiedDate":"2022-03-28"},{"lineNumber":77,"author":{"gitId":"chuashihong"},"content":"        this.index \u003d index;","lastModifiedDate":"2022-03-28"},{"lineNumber":78,"author":{"gitId":"chuashihong"},"content":"        this.editSellerDescriptor \u003d new EditSellerDescriptor(editSellerDescriptor);","lastModifiedDate":"2022-03-28"},{"lineNumber":79,"author":{"gitId":"chuashihong"},"content":"    }","lastModifiedDate":"2022-03-28"},{"lineNumber":80,"author":{"gitId":"chuashihong"},"content":"","lastModifiedDate":"2022-03-28"},{"lineNumber":81,"author":{"gitId":"chuashihong"},"content":"    @Override","lastModifiedDate":"2022-03-28"},{"lineNumber":82,"author":{"gitId":"chuashihong"},"content":"    public CommandResult execute(Model model) throws CommandException {","lastModifiedDate":"2022-03-28"},{"lineNumber":83,"author":{"gitId":"chuashihong"},"content":"        requireNonNull(model);","lastModifiedDate":"2022-03-28"},{"lineNumber":84,"author":{"gitId":"chuashihong"},"content":"        List\u003cSeller\u003e lastShownList \u003d model.getFilteredSellerList();","lastModifiedDate":"2022-03-28"},{"lineNumber":85,"author":{"gitId":"chuashihong"},"content":"","lastModifiedDate":"2022-03-28"},{"lineNumber":86,"author":{"gitId":"chuashihong"},"content":"        if (index.getZeroBased() \u003e\u003d lastShownList.size()) {","lastModifiedDate":"2022-03-28"},{"lineNumber":87,"author":{"gitId":"chuashihong"},"content":"            throw new CommandException(Messages.MESSAGE_INVALID_SELLER_DISPLAYED_INDEX);","lastModifiedDate":"2022-03-30"},{"lineNumber":88,"author":{"gitId":"chuashihong"},"content":"        }","lastModifiedDate":"2022-03-28"},{"lineNumber":89,"author":{"gitId":"chuashihong"},"content":"","lastModifiedDate":"2022-03-28"},{"lineNumber":90,"author":{"gitId":"chuashihong"},"content":"        Seller sellerToEdit \u003d lastShownList.get(index.getZeroBased());","lastModifiedDate":"2022-03-28"},{"lineNumber":91,"author":{"gitId":"chuashihong"},"content":"        Seller editedSeller \u003d createEditedSeller(sellerToEdit, editSellerDescriptor);","lastModifiedDate":"2022-03-28"},{"lineNumber":92,"author":{"gitId":"chuashihong"},"content":"","lastModifiedDate":"2022-03-28"},{"lineNumber":93,"author":{"gitId":"chuashihong"},"content":"        if (!sellerToEdit.isSameclient(editedSeller) \u0026\u0026 model.hasSeller(editedSeller)) {","lastModifiedDate":"2022-04-08"},{"lineNumber":94,"author":{"gitId":"chuashihong"},"content":"            throw new CommandException(MESSAGE_DUPLICATE_SELLER);","lastModifiedDate":"2022-03-28"},{"lineNumber":95,"author":{"gitId":"chuashihong"},"content":"        }","lastModifiedDate":"2022-03-28"},{"lineNumber":96,"author":{"gitId":"chuashihong"},"content":"","lastModifiedDate":"2022-03-28"},{"lineNumber":97,"author":{"gitId":"chuashihong"},"content":"        model.setSeller(sellerToEdit, editedSeller);","lastModifiedDate":"2022-03-28"},{"lineNumber":98,"author":{"gitId":"chuashihong"},"content":"        model.updateFilteredSellerList(PREDICATE_SHOW_ALL_SELLERS);","lastModifiedDate":"2022-04-08"},{"lineNumber":99,"author":{"gitId":"chuashihong"},"content":"        return new CommandResult(String.format(MESSAGE_EDIT_SELLER_SUCCESS, editedSeller));","lastModifiedDate":"2022-03-28"},{"lineNumber":100,"author":{"gitId":"chuashihong"},"content":"    }","lastModifiedDate":"2022-03-28"},{"lineNumber":101,"author":{"gitId":"chuashihong"},"content":"","lastModifiedDate":"2022-03-28"},{"lineNumber":102,"author":{"gitId":"chuashihong"},"content":"    /**","lastModifiedDate":"2022-03-28"},{"lineNumber":103,"author":{"gitId":"chuashihong"},"content":"     * Creates and returns a {@code client} with the details of {@code sellerToEdit}","lastModifiedDate":"2022-03-28"},{"lineNumber":104,"author":{"gitId":"chuashihong"},"content":"     * edited with {@code editSellerDescriptor}.","lastModifiedDate":"2022-03-28"},{"lineNumber":105,"author":{"gitId":"chuashihong"},"content":"     */","lastModifiedDate":"2022-03-28"},{"lineNumber":106,"author":{"gitId":"janald99"},"content":"    private static Seller createEditedSeller(Seller sellerToEdit, EditSellerDescriptor editSellerDescriptor)","lastModifiedDate":"2022-03-31"},{"lineNumber":107,"author":{"gitId":"janald99"},"content":"            throws CommandException {","lastModifiedDate":"2022-03-31"},{"lineNumber":108,"author":{"gitId":"chuashihong"},"content":"","lastModifiedDate":"2022-03-28"},{"lineNumber":109,"author":{"gitId":"janald99"},"content":"        assert sellerToEdit !\u003d null;","lastModifiedDate":"2022-03-31"},{"lineNumber":110,"author":{"gitId":"janald99"},"content":"","lastModifiedDate":"2022-03-31"},{"lineNumber":111,"author":{"gitId":"chuashihong"},"content":"        //Todo: add property","lastModifiedDate":"2022-03-28"},{"lineNumber":112,"author":{"gitId":"chuashihong"},"content":"        //PropertyToSell updatedPropertyToSell \u003d editSellerDescriptor.getPropertyToSell()","lastModifiedDate":"2022-03-28"},{"lineNumber":113,"author":{"gitId":"chuashihong"},"content":"        //        .orElse(NullPropertyToSell.getNullPropertyToSell());","lastModifiedDate":"2022-03-28"},{"lineNumber":114,"author":{"gitId":"janald99"},"content":"        if (editSellerDescriptor.isAnyPropertyFieldEdited()","lastModifiedDate":"2022-03-31"},{"lineNumber":115,"author":{"gitId":"janald99"},"content":"                \u0026\u0026 sellerToEdit.getPropertyToSell() instanceof NullPropertyToSell) {","lastModifiedDate":"2022-03-31"},{"lineNumber":116,"author":{"gitId":"janald99"},"content":"            throw new CommandException(MESSAGE_NO_PROPERTY_YET);","lastModifiedDate":"2022-03-31"},{"lineNumber":117,"author":{"gitId":"janald99"},"content":"        }","lastModifiedDate":"2022-03-31"},{"lineNumber":118,"author":{"gitId":"janald99"},"content":"","lastModifiedDate":"2022-03-31"},{"lineNumber":119,"author":{"gitId":"chuashihong"},"content":"        //The seller already has a property just update it with new values","lastModifiedDate":"2022-03-28"},{"lineNumber":120,"author":{"gitId":"chuashihong"},"content":"        Address updatedAddress \u003d editSellerDescriptor.getAddress().orElse(","lastModifiedDate":"2022-03-28"},{"lineNumber":121,"author":{"gitId":"janald99"},"content":"            sellerToEdit.getAddress());","lastModifiedDate":"2022-03-31"},{"lineNumber":122,"author":{"gitId":"chuashihong"},"content":"        HouseType updatedHouseType \u003d editSellerDescriptor.getHouseType().orElse(","lastModifiedDate":"2022-03-28"},{"lineNumber":123,"author":{"gitId":"chuashihong"},"content":"            sellerToEdit.getPropertyToSell().getHouse().getHouseType());","lastModifiedDate":"2022-03-28"},{"lineNumber":124,"author":{"gitId":"chuashihong"},"content":"        Location updatedLocation \u003d editSellerDescriptor.getLocation().orElse(","lastModifiedDate":"2022-03-28"},{"lineNumber":125,"author":{"gitId":"chuashihong"},"content":"            sellerToEdit.getPropertyToSell().getHouse().getLocation());","lastModifiedDate":"2022-03-28"},{"lineNumber":126,"author":{"gitId":"chuashihong"},"content":"        PriceRange updatedPriceRange \u003d editSellerDescriptor.getPriceRange().orElse(","lastModifiedDate":"2022-03-28"},{"lineNumber":127,"author":{"gitId":"chuashihong"},"content":"            sellerToEdit.getPropertyToSell().getPriceRange());","lastModifiedDate":"2022-03-28"},{"lineNumber":128,"author":{"gitId":"chuashihong"},"content":"        PropertyToSell updatedPropertyToSell \u003d sellerToEdit.getPropertyToSell().updatePropertyToSell(","lastModifiedDate":"2022-03-28"},{"lineNumber":129,"author":{"gitId":"chuashihong"},"content":"            updatedHouseType,","lastModifiedDate":"2022-03-28"},{"lineNumber":130,"author":{"gitId":"chuashihong"},"content":"            updatedLocation,","lastModifiedDate":"2022-03-28"},{"lineNumber":131,"author":{"gitId":"chuashihong"},"content":"            updatedPriceRange,","lastModifiedDate":"2022-03-28"},{"lineNumber":132,"author":{"gitId":"chuashihong"},"content":"            updatedAddress","lastModifiedDate":"2022-03-28"},{"lineNumber":133,"author":{"gitId":"chuashihong"},"content":"        );","lastModifiedDate":"2022-03-28"},{"lineNumber":134,"author":{"gitId":"chuashihong"},"content":"","lastModifiedDate":"2022-03-28"},{"lineNumber":135,"author":{"gitId":"janald99"},"content":"        Name updatedName \u003d editSellerDescriptor.getName().orElse(sellerToEdit.getName());","lastModifiedDate":"2022-03-31"},{"lineNumber":136,"author":{"gitId":"janald99"},"content":"        Phone updatedPhone \u003d editSellerDescriptor.getPhone().orElse(sellerToEdit.getPhone());","lastModifiedDate":"2022-03-31"},{"lineNumber":137,"author":{"gitId":"janald99"},"content":"        Set\u003cTag\u003e updatedTags \u003d editSellerDescriptor.getTags().orElse(sellerToEdit.getTags());","lastModifiedDate":"2022-03-31"},{"lineNumber":138,"author":{"gitId":"janald99"},"content":"        Appointment updatedAppointment \u003d editSellerDescriptor.getAppointment().orElse(sellerToEdit.getAppointment());","lastModifiedDate":"2022-03-31"},{"lineNumber":139,"author":{"gitId":"chuashihong"},"content":"","lastModifiedDate":"2022-03-28"},{"lineNumber":140,"author":{"gitId":"janald99"},"content":"        return new Seller(updatedName, updatedPhone, updatedAppointment, updatedTags, updatedPropertyToSell);","lastModifiedDate":"2022-03-31"},{"lineNumber":141,"author":{"gitId":"chuashihong"},"content":"    }","lastModifiedDate":"2022-03-28"},{"lineNumber":142,"author":{"gitId":"chuashihong"},"content":"","lastModifiedDate":"2022-03-28"},{"lineNumber":143,"author":{"gitId":"chuashihong"},"content":"    @Override","lastModifiedDate":"2022-03-28"},{"lineNumber":144,"author":{"gitId":"chuashihong"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2022-03-28"},{"lineNumber":145,"author":{"gitId":"chuashihong"},"content":"        // short circuit if same object","lastModifiedDate":"2022-03-28"},{"lineNumber":146,"author":{"gitId":"chuashihong"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2022-03-28"},{"lineNumber":147,"author":{"gitId":"chuashihong"},"content":"            return true;","lastModifiedDate":"2022-03-28"},{"lineNumber":148,"author":{"gitId":"chuashihong"},"content":"        }","lastModifiedDate":"2022-03-28"},{"lineNumber":149,"author":{"gitId":"chuashihong"},"content":"","lastModifiedDate":"2022-03-28"},{"lineNumber":150,"author":{"gitId":"chuashihong"},"content":"        // instanceof handles nulls","lastModifiedDate":"2022-03-28"},{"lineNumber":151,"author":{"gitId":"chuashihong"},"content":"        if (!(other instanceof EditSellerCommand)) {","lastModifiedDate":"2022-03-28"},{"lineNumber":152,"author":{"gitId":"chuashihong"},"content":"            return false;","lastModifiedDate":"2022-03-28"},{"lineNumber":153,"author":{"gitId":"chuashihong"},"content":"        }","lastModifiedDate":"2022-03-28"},{"lineNumber":154,"author":{"gitId":"chuashihong"},"content":"","lastModifiedDate":"2022-03-28"},{"lineNumber":155,"author":{"gitId":"chuashihong"},"content":"        // state check","lastModifiedDate":"2022-03-28"},{"lineNumber":156,"author":{"gitId":"chuashihong"},"content":"        EditSellerCommand e \u003d (EditSellerCommand) other;","lastModifiedDate":"2022-03-28"},{"lineNumber":157,"author":{"gitId":"chuashihong"},"content":"        return index.equals(e.index)","lastModifiedDate":"2022-03-28"},{"lineNumber":158,"author":{"gitId":"chuashihong"},"content":"                \u0026\u0026 editSellerDescriptor.equals(e.editSellerDescriptor);","lastModifiedDate":"2022-03-28"},{"lineNumber":159,"author":{"gitId":"chuashihong"},"content":"    }","lastModifiedDate":"2022-03-28"},{"lineNumber":160,"author":{"gitId":"chuashihong"},"content":"","lastModifiedDate":"2022-03-28"},{"lineNumber":161,"author":{"gitId":"chuashihong"},"content":"    /**","lastModifiedDate":"2022-03-28"},{"lineNumber":162,"author":{"gitId":"chuashihong"},"content":"     * Stores the details to edit the client with. Each non-empty field value will replace the","lastModifiedDate":"2022-03-28"},{"lineNumber":163,"author":{"gitId":"chuashihong"},"content":"     * corresponding field value of the client.","lastModifiedDate":"2022-03-28"},{"lineNumber":164,"author":{"gitId":"chuashihong"},"content":"     */","lastModifiedDate":"2022-03-28"},{"lineNumber":165,"author":{"gitId":"chuashihong"},"content":"    public static class EditSellerDescriptor {","lastModifiedDate":"2022-03-28"},{"lineNumber":166,"author":{"gitId":"chuashihong"},"content":"        private Name name;","lastModifiedDate":"2022-03-28"},{"lineNumber":167,"author":{"gitId":"chuashihong"},"content":"        private Phone phone;","lastModifiedDate":"2022-03-28"},{"lineNumber":168,"author":{"gitId":"chuashihong"},"content":"        private Set\u003cTag\u003e tags;","lastModifiedDate":"2022-03-28"},{"lineNumber":169,"author":{"gitId":"chuashihong"},"content":"        private Appointment appointment;","lastModifiedDate":"2022-03-28"},{"lineNumber":170,"author":{"gitId":"chuashihong"},"content":"        private PropertyToSell propertyToSell;","lastModifiedDate":"2022-04-08"},{"lineNumber":171,"author":{"gitId":"chuashihong"},"content":"        private Address address;","lastModifiedDate":"2022-03-28"},{"lineNumber":172,"author":{"gitId":"chuashihong"},"content":"        private HouseType houseType;","lastModifiedDate":"2022-03-28"},{"lineNumber":173,"author":{"gitId":"chuashihong"},"content":"        private Location location;","lastModifiedDate":"2022-03-28"},{"lineNumber":174,"author":{"gitId":"chuashihong"},"content":"        private PriceRange priceRange;","lastModifiedDate":"2022-03-28"},{"lineNumber":175,"author":{"gitId":"chuashihong"},"content":"","lastModifiedDate":"2022-03-28"},{"lineNumber":176,"author":{"gitId":"chuashihong"},"content":"        public EditSellerDescriptor() {}","lastModifiedDate":"2022-03-28"},{"lineNumber":177,"author":{"gitId":"chuashihong"},"content":"","lastModifiedDate":"2022-03-28"},{"lineNumber":178,"author":{"gitId":"chuashihong"},"content":"        /**","lastModifiedDate":"2022-03-28"},{"lineNumber":179,"author":{"gitId":"chuashihong"},"content":"         * Copy constructor.","lastModifiedDate":"2022-03-28"},{"lineNumber":180,"author":{"gitId":"chuashihong"},"content":"         * A defensive copy of {@code tags} is used internally.","lastModifiedDate":"2022-03-28"},{"lineNumber":181,"author":{"gitId":"chuashihong"},"content":"         */","lastModifiedDate":"2022-03-28"},{"lineNumber":182,"author":{"gitId":"chuashihong"},"content":"        public EditSellerDescriptor(EditSellerDescriptor toCopy) {","lastModifiedDate":"2022-03-28"},{"lineNumber":183,"author":{"gitId":"chuashihong"},"content":"            setName(toCopy.name);","lastModifiedDate":"2022-03-28"},{"lineNumber":184,"author":{"gitId":"chuashihong"},"content":"            setPhone(toCopy.phone);","lastModifiedDate":"2022-03-28"},{"lineNumber":185,"author":{"gitId":"chuashihong"},"content":"            setTags(toCopy.tags);","lastModifiedDate":"2022-03-28"},{"lineNumber":186,"author":{"gitId":"chuashihong"},"content":"            setAddress(toCopy.address);","lastModifiedDate":"2022-03-28"},{"lineNumber":187,"author":{"gitId":"chuashihong"},"content":"            setHouseType(toCopy.houseType);","lastModifiedDate":"2022-03-28"},{"lineNumber":188,"author":{"gitId":"chuashihong"},"content":"            setLocation(toCopy.location);","lastModifiedDate":"2022-03-28"},{"lineNumber":189,"author":{"gitId":"chuashihong"},"content":"            setPriceRange(toCopy.priceRange);","lastModifiedDate":"2022-03-28"},{"lineNumber":190,"author":{"gitId":"chuashihong"},"content":"            setPropertyToSell(toCopy.propertyToSell);","lastModifiedDate":"2022-04-08"},{"lineNumber":191,"author":{"gitId":"chuashihong"},"content":"        }","lastModifiedDate":"2022-03-28"},{"lineNumber":192,"author":{"gitId":"chuashihong"},"content":"","lastModifiedDate":"2022-03-28"},{"lineNumber":193,"author":{"gitId":"chuashihong"},"content":"","lastModifiedDate":"2022-03-28"},{"lineNumber":194,"author":{"gitId":"chuashihong"},"content":"        /**","lastModifiedDate":"2022-03-28"},{"lineNumber":195,"author":{"gitId":"chuashihong"},"content":"         * Returns true if at least one field is edited.","lastModifiedDate":"2022-03-28"},{"lineNumber":196,"author":{"gitId":"chuashihong"},"content":"         */","lastModifiedDate":"2022-03-28"},{"lineNumber":197,"author":{"gitId":"chuashihong"},"content":"        public boolean isAnyFieldEdited() {","lastModifiedDate":"2022-03-28"},{"lineNumber":198,"author":{"gitId":"chuashihong"},"content":"            return CollectionUtil.isAnyNonNull(name, phone, tags, address, houseType, location, priceRange);","lastModifiedDate":"2022-03-28"},{"lineNumber":199,"author":{"gitId":"chuashihong"},"content":"        }","lastModifiedDate":"2022-03-28"},{"lineNumber":200,"author":{"gitId":"chuashihong"},"content":"","lastModifiedDate":"2022-03-28"},{"lineNumber":201,"author":{"gitId":"janald99"},"content":"        /**","lastModifiedDate":"2022-03-31"},{"lineNumber":202,"author":{"gitId":"janald99"},"content":"         * Returns true if at least one Property field is edited.","lastModifiedDate":"2022-03-31"},{"lineNumber":203,"author":{"gitId":"janald99"},"content":"         */","lastModifiedDate":"2022-03-31"},{"lineNumber":204,"author":{"gitId":"janald99"},"content":"        public boolean isAnyPropertyFieldEdited() {","lastModifiedDate":"2022-03-31"},{"lineNumber":205,"author":{"gitId":"janald99"},"content":"            return CollectionUtil.isAnyNonNull(address, houseType, location, priceRange);","lastModifiedDate":"2022-03-31"},{"lineNumber":206,"author":{"gitId":"janald99"},"content":"        }","lastModifiedDate":"2022-03-31"},{"lineNumber":207,"author":{"gitId":"janald99"},"content":"","lastModifiedDate":"2022-03-31"},{"lineNumber":208,"author":{"gitId":"chuashihong"},"content":"        public void setName(Name name) {","lastModifiedDate":"2022-03-28"},{"lineNumber":209,"author":{"gitId":"chuashihong"},"content":"            this.name \u003d name;","lastModifiedDate":"2022-03-28"},{"lineNumber":210,"author":{"gitId":"chuashihong"},"content":"        }","lastModifiedDate":"2022-03-28"},{"lineNumber":211,"author":{"gitId":"chuashihong"},"content":"","lastModifiedDate":"2022-03-28"},{"lineNumber":212,"author":{"gitId":"chuashihong"},"content":"        public Optional\u003cName\u003e getName() {","lastModifiedDate":"2022-03-28"},{"lineNumber":213,"author":{"gitId":"chuashihong"},"content":"            return Optional.ofNullable(name);","lastModifiedDate":"2022-03-28"},{"lineNumber":214,"author":{"gitId":"chuashihong"},"content":"        }","lastModifiedDate":"2022-03-28"},{"lineNumber":215,"author":{"gitId":"chuashihong"},"content":"","lastModifiedDate":"2022-03-28"},{"lineNumber":216,"author":{"gitId":"chuashihong"},"content":"        public void setPhone(Phone phone) {","lastModifiedDate":"2022-03-28"},{"lineNumber":217,"author":{"gitId":"chuashihong"},"content":"            this.phone \u003d phone;","lastModifiedDate":"2022-03-28"},{"lineNumber":218,"author":{"gitId":"chuashihong"},"content":"        }","lastModifiedDate":"2022-03-28"},{"lineNumber":219,"author":{"gitId":"chuashihong"},"content":"","lastModifiedDate":"2022-03-28"},{"lineNumber":220,"author":{"gitId":"chuashihong"},"content":"        public Optional\u003cPhone\u003e getPhone() {","lastModifiedDate":"2022-03-28"},{"lineNumber":221,"author":{"gitId":"chuashihong"},"content":"            return Optional.ofNullable(phone);","lastModifiedDate":"2022-03-28"},{"lineNumber":222,"author":{"gitId":"chuashihong"},"content":"        }","lastModifiedDate":"2022-03-28"},{"lineNumber":223,"author":{"gitId":"chuashihong"},"content":"","lastModifiedDate":"2022-03-28"},{"lineNumber":224,"author":{"gitId":"chuashihong"},"content":"        public void setAppointment(Appointment appointment) {","lastModifiedDate":"2022-03-28"},{"lineNumber":225,"author":{"gitId":"chuashihong"},"content":"            this.appointment \u003d appointment;","lastModifiedDate":"2022-03-28"},{"lineNumber":226,"author":{"gitId":"chuashihong"},"content":"        }","lastModifiedDate":"2022-03-28"},{"lineNumber":227,"author":{"gitId":"chuashihong"},"content":"","lastModifiedDate":"2022-03-28"},{"lineNumber":228,"author":{"gitId":"chuashihong"},"content":"        public Optional\u003cAppointment\u003e getAppointment() {","lastModifiedDate":"2022-03-28"},{"lineNumber":229,"author":{"gitId":"chuashihong"},"content":"            return Optional.ofNullable(appointment);","lastModifiedDate":"2022-03-28"},{"lineNumber":230,"author":{"gitId":"chuashihong"},"content":"        }","lastModifiedDate":"2022-03-28"},{"lineNumber":231,"author":{"gitId":"chuashihong"},"content":"","lastModifiedDate":"2022-03-28"},{"lineNumber":232,"author":{"gitId":"chuashihong"},"content":"        public void setAddress(Address address) {","lastModifiedDate":"2022-03-28"},{"lineNumber":233,"author":{"gitId":"chuashihong"},"content":"            this.address \u003d address;","lastModifiedDate":"2022-03-28"},{"lineNumber":234,"author":{"gitId":"chuashihong"},"content":"        }","lastModifiedDate":"2022-03-28"},{"lineNumber":235,"author":{"gitId":"chuashihong"},"content":"","lastModifiedDate":"2022-03-28"},{"lineNumber":236,"author":{"gitId":"chuashihong"},"content":"        public Optional\u003cAddress\u003e getAddress() {","lastModifiedDate":"2022-03-28"},{"lineNumber":237,"author":{"gitId":"chuashihong"},"content":"            return Optional.ofNullable(address);","lastModifiedDate":"2022-03-28"},{"lineNumber":238,"author":{"gitId":"chuashihong"},"content":"        }","lastModifiedDate":"2022-03-28"},{"lineNumber":239,"author":{"gitId":"chuashihong"},"content":"","lastModifiedDate":"2022-03-28"},{"lineNumber":240,"author":{"gitId":"chuashihong"},"content":"        public void setHouseType(HouseType houseType) {","lastModifiedDate":"2022-03-28"},{"lineNumber":241,"author":{"gitId":"chuashihong"},"content":"            this.houseType \u003d houseType;","lastModifiedDate":"2022-03-28"},{"lineNumber":242,"author":{"gitId":"chuashihong"},"content":"        }","lastModifiedDate":"2022-03-28"},{"lineNumber":243,"author":{"gitId":"chuashihong"},"content":"","lastModifiedDate":"2022-03-28"},{"lineNumber":244,"author":{"gitId":"chuashihong"},"content":"        public Optional\u003cHouseType\u003e getHouseType() {","lastModifiedDate":"2022-03-28"},{"lineNumber":245,"author":{"gitId":"chuashihong"},"content":"            return Optional.ofNullable(houseType);","lastModifiedDate":"2022-03-28"},{"lineNumber":246,"author":{"gitId":"chuashihong"},"content":"        }","lastModifiedDate":"2022-03-28"},{"lineNumber":247,"author":{"gitId":"chuashihong"},"content":"","lastModifiedDate":"2022-03-28"},{"lineNumber":248,"author":{"gitId":"chuashihong"},"content":"        public void setLocation(Location location) {","lastModifiedDate":"2022-03-28"},{"lineNumber":249,"author":{"gitId":"chuashihong"},"content":"            this.location \u003d location;","lastModifiedDate":"2022-03-28"},{"lineNumber":250,"author":{"gitId":"chuashihong"},"content":"        }","lastModifiedDate":"2022-03-28"},{"lineNumber":251,"author":{"gitId":"chuashihong"},"content":"","lastModifiedDate":"2022-03-28"},{"lineNumber":252,"author":{"gitId":"chuashihong"},"content":"        public Optional\u003cLocation\u003e getLocation() {","lastModifiedDate":"2022-03-28"},{"lineNumber":253,"author":{"gitId":"chuashihong"},"content":"            return Optional.ofNullable(location);","lastModifiedDate":"2022-03-28"},{"lineNumber":254,"author":{"gitId":"chuashihong"},"content":"        }","lastModifiedDate":"2022-03-28"},{"lineNumber":255,"author":{"gitId":"chuashihong"},"content":"","lastModifiedDate":"2022-03-28"},{"lineNumber":256,"author":{"gitId":"chuashihong"},"content":"        public void setPriceRange(PriceRange priceRange) {","lastModifiedDate":"2022-03-28"},{"lineNumber":257,"author":{"gitId":"chuashihong"},"content":"            this.priceRange \u003d priceRange;","lastModifiedDate":"2022-03-28"},{"lineNumber":258,"author":{"gitId":"chuashihong"},"content":"        }","lastModifiedDate":"2022-03-28"},{"lineNumber":259,"author":{"gitId":"chuashihong"},"content":"","lastModifiedDate":"2022-03-28"},{"lineNumber":260,"author":{"gitId":"chuashihong"},"content":"        public Optional\u003cPriceRange\u003e getPriceRange() {","lastModifiedDate":"2022-03-28"},{"lineNumber":261,"author":{"gitId":"chuashihong"},"content":"            return Optional.ofNullable(priceRange);","lastModifiedDate":"2022-03-28"},{"lineNumber":262,"author":{"gitId":"chuashihong"},"content":"        }","lastModifiedDate":"2022-03-28"},{"lineNumber":263,"author":{"gitId":"chuashihong"},"content":"","lastModifiedDate":"2022-03-28"},{"lineNumber":264,"author":{"gitId":"chuashihong"},"content":"        public void setPropertyToSell(PropertyToSell propertyToSell) {","lastModifiedDate":"2022-04-08"},{"lineNumber":265,"author":{"gitId":"chuashihong"},"content":"            this.propertyToSell \u003d propertyToSell;","lastModifiedDate":"2022-04-08"},{"lineNumber":266,"author":{"gitId":"chuashihong"},"content":"        }","lastModifiedDate":"2022-04-08"},{"lineNumber":267,"author":{"gitId":"chuashihong"},"content":"","lastModifiedDate":"2022-04-08"},{"lineNumber":268,"author":{"gitId":"chuashihong"},"content":"        public Optional\u003cPropertyToSell\u003e getPropertyToSell() {","lastModifiedDate":"2022-04-08"},{"lineNumber":269,"author":{"gitId":"chuashihong"},"content":"            return Optional.ofNullable(propertyToSell);","lastModifiedDate":"2022-04-08"},{"lineNumber":270,"author":{"gitId":"chuashihong"},"content":"        }","lastModifiedDate":"2022-04-08"},{"lineNumber":271,"author":{"gitId":"chuashihong"},"content":"","lastModifiedDate":"2022-04-08"},{"lineNumber":272,"author":{"gitId":"chuashihong"},"content":"        /**","lastModifiedDate":"2022-03-28"},{"lineNumber":273,"author":{"gitId":"chuashihong"},"content":"         * Sets {@code tags} to this object\u0027s {@code tags}.","lastModifiedDate":"2022-03-28"},{"lineNumber":274,"author":{"gitId":"chuashihong"},"content":"         * A defensive copy of {@code tags} is used internally.","lastModifiedDate":"2022-03-28"},{"lineNumber":275,"author":{"gitId":"chuashihong"},"content":"         */","lastModifiedDate":"2022-03-28"},{"lineNumber":276,"author":{"gitId":"chuashihong"},"content":"        public void setTags(Set\u003cTag\u003e tags) {","lastModifiedDate":"2022-03-28"},{"lineNumber":277,"author":{"gitId":"chuashihong"},"content":"            this.tags \u003d (tags !\u003d null) ? new HashSet\u003c\u003e(tags) : null;","lastModifiedDate":"2022-03-28"},{"lineNumber":278,"author":{"gitId":"chuashihong"},"content":"        }","lastModifiedDate":"2022-03-28"},{"lineNumber":279,"author":{"gitId":"chuashihong"},"content":"","lastModifiedDate":"2022-03-28"},{"lineNumber":280,"author":{"gitId":"chuashihong"},"content":"        /**","lastModifiedDate":"2022-03-28"},{"lineNumber":281,"author":{"gitId":"chuashihong"},"content":"         * Returns an unmodifiable tag set, which throws {@code UnsupportedOperationException}","lastModifiedDate":"2022-03-28"},{"lineNumber":282,"author":{"gitId":"chuashihong"},"content":"         * if modification is attempted.","lastModifiedDate":"2022-03-28"},{"lineNumber":283,"author":{"gitId":"chuashihong"},"content":"         * Returns {@code Optional#empty()} if {@code tags} is null.","lastModifiedDate":"2022-03-28"},{"lineNumber":284,"author":{"gitId":"chuashihong"},"content":"         */","lastModifiedDate":"2022-03-28"},{"lineNumber":285,"author":{"gitId":"chuashihong"},"content":"        public Optional\u003cSet\u003cTag\u003e\u003e getTags() {","lastModifiedDate":"2022-03-28"},{"lineNumber":286,"author":{"gitId":"chuashihong"},"content":"            return (tags !\u003d null) ? Optional.of(Collections.unmodifiableSet(tags)) : Optional.empty();","lastModifiedDate":"2022-03-28"},{"lineNumber":287,"author":{"gitId":"chuashihong"},"content":"        }","lastModifiedDate":"2022-03-28"},{"lineNumber":288,"author":{"gitId":"chuashihong"},"content":"","lastModifiedDate":"2022-03-28"},{"lineNumber":289,"author":{"gitId":"chuashihong"},"content":"","lastModifiedDate":"2022-03-28"},{"lineNumber":290,"author":{"gitId":"chuashihong"},"content":"        @Override","lastModifiedDate":"2022-03-28"},{"lineNumber":291,"author":{"gitId":"chuashihong"},"content":"        public boolean equals(Object other) {","lastModifiedDate":"2022-03-28"},{"lineNumber":292,"author":{"gitId":"chuashihong"},"content":"            // short circuit if same object","lastModifiedDate":"2022-03-28"},{"lineNumber":293,"author":{"gitId":"chuashihong"},"content":"            if (other \u003d\u003d this) {","lastModifiedDate":"2022-03-28"},{"lineNumber":294,"author":{"gitId":"chuashihong"},"content":"                return true;","lastModifiedDate":"2022-03-28"},{"lineNumber":295,"author":{"gitId":"chuashihong"},"content":"            }","lastModifiedDate":"2022-03-28"},{"lineNumber":296,"author":{"gitId":"chuashihong"},"content":"","lastModifiedDate":"2022-03-28"},{"lineNumber":297,"author":{"gitId":"chuashihong"},"content":"            // instanceof handles nulls","lastModifiedDate":"2022-03-28"},{"lineNumber":298,"author":{"gitId":"chuashihong"},"content":"            if (!(other instanceof EditSellerDescriptor)) {","lastModifiedDate":"2022-03-28"},{"lineNumber":299,"author":{"gitId":"chuashihong"},"content":"                return false;","lastModifiedDate":"2022-03-28"},{"lineNumber":300,"author":{"gitId":"chuashihong"},"content":"            }","lastModifiedDate":"2022-03-28"},{"lineNumber":301,"author":{"gitId":"chuashihong"},"content":"","lastModifiedDate":"2022-03-28"},{"lineNumber":302,"author":{"gitId":"chuashihong"},"content":"            // state check","lastModifiedDate":"2022-03-28"},{"lineNumber":303,"author":{"gitId":"chuashihong"},"content":"            EditSellerDescriptor e \u003d (EditSellerDescriptor) other;","lastModifiedDate":"2022-03-28"},{"lineNumber":304,"author":{"gitId":"chuashihong"},"content":"","lastModifiedDate":"2022-03-28"},{"lineNumber":305,"author":{"gitId":"chuashihong"},"content":"            return getName().equals(e.getName())","lastModifiedDate":"2022-03-28"},{"lineNumber":306,"author":{"gitId":"chuashihong"},"content":"                    \u0026\u0026 getPhone().equals(e.getPhone())","lastModifiedDate":"2022-03-28"},{"lineNumber":307,"author":{"gitId":"chuashihong"},"content":"                    \u0026\u0026 getTags().equals(e.getTags())","lastModifiedDate":"2022-03-28"},{"lineNumber":308,"author":{"gitId":"chuashihong"},"content":"                    \u0026\u0026 getAddress().equals(e.getAddress())","lastModifiedDate":"2022-03-28"},{"lineNumber":309,"author":{"gitId":"chuashihong"},"content":"                    \u0026\u0026 getHouseType().equals(e.getHouseType())","lastModifiedDate":"2022-03-28"},{"lineNumber":310,"author":{"gitId":"chuashihong"},"content":"                    \u0026\u0026 getLocation().equals(e.getLocation())","lastModifiedDate":"2022-03-28"},{"lineNumber":311,"author":{"gitId":"chuashihong"},"content":"                    \u0026\u0026 getPriceRange().equals(e.getPriceRange());","lastModifiedDate":"2022-03-28"},{"lineNumber":312,"author":{"gitId":"chuashihong"},"content":"        }","lastModifiedDate":"2022-03-28"},{"lineNumber":313,"author":{"gitId":"chuashihong"},"content":"    }","lastModifiedDate":"2022-03-28"},{"lineNumber":314,"author":{"gitId":"chuashihong"},"content":"}","lastModifiedDate":"2022-03-28"}],"authorContributionMap":{"janald99":37,"cwnm":1,"chuashihong":276}},{"path":"src/main/java/seedu/address/logic/commands/ExitCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2016-09-22"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2018-08-08"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":5,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-09-22"},{"lineNumber":6,"author":{"gitId":"-"},"content":" * Terminates the program.","lastModifiedDate":"2016-09-22"},{"lineNumber":7,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-09-22"},{"lineNumber":8,"author":{"gitId":"-"},"content":"public class ExitCommand extends Command {","lastModifiedDate":"2016-09-22"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":10,"author":{"gitId":"-"},"content":"    public static final String COMMAND_WORD \u003d \"exit\";","lastModifiedDate":"2016-09-22"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_EXIT_ACKNOWLEDGEMENT \u003d \"Exiting Address Book as requested ...\";","lastModifiedDate":"2016-09-22"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":14,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-22"},{"lineNumber":15,"author":{"gitId":"-"},"content":"    public CommandResult execute(Model model) {","lastModifiedDate":"2019-01-25"},{"lineNumber":16,"author":{"gitId":"janald99"},"content":"        return new CommandResult(","lastModifiedDate":"2022-03-23"},{"lineNumber":17,"author":{"gitId":"janald99"},"content":"        MESSAGE_EXIT_ACKNOWLEDGEMENT, false, true);","lastModifiedDate":"2022-03-23"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-22"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":20,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-09-22"}],"authorContributionMap":{"janald99":2,"-":18}},{"path":"src/main/java/seedu/address/logic/commands/FindBuyerCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"cwnm"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2022-03-28"},{"lineNumber":2,"author":{"gitId":"cwnm"},"content":"","lastModifiedDate":"2022-03-28"},{"lineNumber":3,"author":{"gitId":"cwnm"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2022-03-28"},{"lineNumber":4,"author":{"gitId":"cwnm"},"content":"","lastModifiedDate":"2022-03-28"},{"lineNumber":5,"author":{"gitId":"cwnm"},"content":"import java.util.function.Predicate;","lastModifiedDate":"2022-03-28"},{"lineNumber":6,"author":{"gitId":"cwnm"},"content":"","lastModifiedDate":"2022-03-28"},{"lineNumber":7,"author":{"gitId":"cwnm"},"content":"import seedu.address.commons.core.Messages;","lastModifiedDate":"2022-03-28"},{"lineNumber":8,"author":{"gitId":"cwnm"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2022-03-28"},{"lineNumber":9,"author":{"gitId":"cwnm"},"content":"import seedu.address.model.buyer.Buyer;","lastModifiedDate":"2022-03-28"},{"lineNumber":10,"author":{"gitId":"cwnm"},"content":"import seedu.address.model.buyer.BuyerHouseTypeContainsKeywordsPredicate;","lastModifiedDate":"2022-03-28"},{"lineNumber":11,"author":{"gitId":"cwnm"},"content":"import seedu.address.model.buyer.BuyerLocationContainsKeywordsPredicate;","lastModifiedDate":"2022-03-30"},{"lineNumber":12,"author":{"gitId":"cwnm"},"content":"import seedu.address.model.buyer.BuyerNameContainsKeywordsPredicate;","lastModifiedDate":"2022-03-28"},{"lineNumber":13,"author":{"gitId":"cwnm"},"content":"import seedu.address.model.buyer.BuyerPhoneContainsKeywordsPredicate;","lastModifiedDate":"2022-03-28"},{"lineNumber":14,"author":{"gitId":"cwnm"},"content":"import seedu.address.model.buyer.BuyerTagsContainsKeywordsPredicate;","lastModifiedDate":"2022-03-28"},{"lineNumber":15,"author":{"gitId":"cwnm"},"content":"","lastModifiedDate":"2022-03-28"},{"lineNumber":16,"author":{"gitId":"cwnm"},"content":"/**","lastModifiedDate":"2022-03-28"},{"lineNumber":17,"author":{"gitId":"cwnm"},"content":" * Finds and lists all persons in address book whose name contains any of the argument keywords.","lastModifiedDate":"2022-03-28"},{"lineNumber":18,"author":{"gitId":"cwnm"},"content":" * Keyword matching is case insensitive.","lastModifiedDate":"2022-03-28"},{"lineNumber":19,"author":{"gitId":"cwnm"},"content":" */","lastModifiedDate":"2022-03-28"},{"lineNumber":20,"author":{"gitId":"cwnm"},"content":"public class FindBuyerCommand extends Command {","lastModifiedDate":"2022-03-28"},{"lineNumber":21,"author":{"gitId":"cwnm"},"content":"","lastModifiedDate":"2022-03-28"},{"lineNumber":22,"author":{"gitId":"cwnm"},"content":"    public static final String COMMAND_WORD \u003d \"find-b\";","lastModifiedDate":"2022-03-30"},{"lineNumber":23,"author":{"gitId":"cwnm"},"content":"","lastModifiedDate":"2022-03-28"},{"lineNumber":24,"author":{"gitId":"cwnm"},"content":"    public static final String MESSAGE_USAGE \u003d COMMAND_WORD + \": Finds all buyers whose specified field matches \"","lastModifiedDate":"2022-03-28"},{"lineNumber":25,"author":{"gitId":"cwnm"},"content":"            + \"the given keywords (case-insensitive) and displays them as a list with index numbers.\\n\"","lastModifiedDate":"2022-03-28"},{"lineNumber":26,"author":{"gitId":"cwnm"},"content":"            + \"Parameters: DELIMITER/KEYWORD [MORE_KEYWORDS]...\\n\"","lastModifiedDate":"2022-03-28"},{"lineNumber":27,"author":{"gitId":"cwnm"},"content":"            + \"Example: \" + COMMAND_WORD + \" n/alice bob charlie\";","lastModifiedDate":"2022-03-28"},{"lineNumber":28,"author":{"gitId":"cwnm"},"content":"","lastModifiedDate":"2022-03-28"},{"lineNumber":29,"author":{"gitId":"cwnm"},"content":"    private final Predicate\u003cBuyer\u003e predicateBuyer;","lastModifiedDate":"2022-03-28"},{"lineNumber":30,"author":{"gitId":"cwnm"},"content":"","lastModifiedDate":"2022-03-28"},{"lineNumber":31,"author":{"gitId":"cwnm"},"content":"    public FindBuyerCommand(BuyerNameContainsKeywordsPredicate predicate) {","lastModifiedDate":"2022-03-28"},{"lineNumber":32,"author":{"gitId":"cwnm"},"content":"        this.predicateBuyer \u003d predicate;","lastModifiedDate":"2022-03-28"},{"lineNumber":33,"author":{"gitId":"cwnm"},"content":"    }","lastModifiedDate":"2022-03-28"},{"lineNumber":34,"author":{"gitId":"cwnm"},"content":"","lastModifiedDate":"2022-03-28"},{"lineNumber":35,"author":{"gitId":"cwnm"},"content":"    public FindBuyerCommand(BuyerPhoneContainsKeywordsPredicate predicate) {","lastModifiedDate":"2022-03-28"},{"lineNumber":36,"author":{"gitId":"cwnm"},"content":"        this.predicateBuyer \u003d predicate;","lastModifiedDate":"2022-03-28"},{"lineNumber":37,"author":{"gitId":"cwnm"},"content":"    }","lastModifiedDate":"2022-03-28"},{"lineNumber":38,"author":{"gitId":"cwnm"},"content":"","lastModifiedDate":"2022-03-28"},{"lineNumber":39,"author":{"gitId":"cwnm"},"content":"    public FindBuyerCommand(BuyerTagsContainsKeywordsPredicate predicate) {","lastModifiedDate":"2022-03-28"},{"lineNumber":40,"author":{"gitId":"cwnm"},"content":"        this.predicateBuyer \u003d predicate;","lastModifiedDate":"2022-03-28"},{"lineNumber":41,"author":{"gitId":"cwnm"},"content":"    }","lastModifiedDate":"2022-03-28"},{"lineNumber":42,"author":{"gitId":"cwnm"},"content":"","lastModifiedDate":"2022-03-28"},{"lineNumber":43,"author":{"gitId":"cwnm"},"content":"    public FindBuyerCommand(BuyerHouseTypeContainsKeywordsPredicate predicate) {","lastModifiedDate":"2022-03-28"},{"lineNumber":44,"author":{"gitId":"cwnm"},"content":"        this.predicateBuyer \u003d predicate;","lastModifiedDate":"2022-03-28"},{"lineNumber":45,"author":{"gitId":"cwnm"},"content":"    }","lastModifiedDate":"2022-03-28"},{"lineNumber":46,"author":{"gitId":"cwnm"},"content":"","lastModifiedDate":"2022-03-28"},{"lineNumber":47,"author":{"gitId":"cwnm"},"content":"    public FindBuyerCommand(BuyerLocationContainsKeywordsPredicate predicate) {","lastModifiedDate":"2022-03-30"},{"lineNumber":48,"author":{"gitId":"cwnm"},"content":"        this.predicateBuyer \u003d predicate;","lastModifiedDate":"2022-03-30"},{"lineNumber":49,"author":{"gitId":"cwnm"},"content":"    }","lastModifiedDate":"2022-03-30"},{"lineNumber":50,"author":{"gitId":"cwnm"},"content":"","lastModifiedDate":"2022-03-30"},{"lineNumber":51,"author":{"gitId":"cwnm"},"content":"    @Override","lastModifiedDate":"2022-03-28"},{"lineNumber":52,"author":{"gitId":"cwnm"},"content":"    public CommandResult execute(Model model) {","lastModifiedDate":"2022-03-28"},{"lineNumber":53,"author":{"gitId":"cwnm"},"content":"        requireNonNull(model);","lastModifiedDate":"2022-03-28"},{"lineNumber":54,"author":{"gitId":"cwnm"},"content":"        model.updateFilteredBuyerList(predicateBuyer);","lastModifiedDate":"2022-03-28"},{"lineNumber":55,"author":{"gitId":"cwnm"},"content":"        return new CommandResult(","lastModifiedDate":"2022-03-28"},{"lineNumber":56,"author":{"gitId":"cwnm"},"content":"                String.format(Messages.MESSAGE_BUYERS_LISTED_OVERVIEW, model.getFilteredBuyerList().size()));","lastModifiedDate":"2022-03-28"},{"lineNumber":57,"author":{"gitId":"cwnm"},"content":"    }","lastModifiedDate":"2022-03-28"},{"lineNumber":58,"author":{"gitId":"cwnm"},"content":"","lastModifiedDate":"2022-03-28"},{"lineNumber":59,"author":{"gitId":"cwnm"},"content":"    @Override","lastModifiedDate":"2022-03-28"},{"lineNumber":60,"author":{"gitId":"cwnm"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2022-03-28"},{"lineNumber":61,"author":{"gitId":"cwnm"},"content":"        return other \u003d\u003d this // short circuit if same object","lastModifiedDate":"2022-03-28"},{"lineNumber":62,"author":{"gitId":"cwnm"},"content":"                || (other instanceof FindBuyerCommand // instanceof handles nulls","lastModifiedDate":"2022-03-28"},{"lineNumber":63,"author":{"gitId":"cwnm"},"content":"                \u0026\u0026 predicateBuyer.equals(((FindBuyerCommand) other).predicateBuyer)); // state check","lastModifiedDate":"2022-03-28"},{"lineNumber":64,"author":{"gitId":"cwnm"},"content":"    }","lastModifiedDate":"2022-03-28"},{"lineNumber":65,"author":{"gitId":"cwnm"},"content":"}","lastModifiedDate":"2022-03-28"}],"authorContributionMap":{"cwnm":65}},{"path":"src/main/java/seedu/address/logic/commands/FindSellerCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"cwnm"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2022-03-28"},{"lineNumber":2,"author":{"gitId":"cwnm"},"content":"","lastModifiedDate":"2022-03-28"},{"lineNumber":3,"author":{"gitId":"cwnm"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2022-03-28"},{"lineNumber":4,"author":{"gitId":"cwnm"},"content":"","lastModifiedDate":"2022-03-28"},{"lineNumber":5,"author":{"gitId":"cwnm"},"content":"import java.util.function.Predicate;","lastModifiedDate":"2022-03-28"},{"lineNumber":6,"author":{"gitId":"cwnm"},"content":"","lastModifiedDate":"2022-03-28"},{"lineNumber":7,"author":{"gitId":"cwnm"},"content":"import seedu.address.commons.core.Messages;","lastModifiedDate":"2022-03-28"},{"lineNumber":8,"author":{"gitId":"cwnm"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2022-03-28"},{"lineNumber":9,"author":{"gitId":"cwnm"},"content":"import seedu.address.model.seller.Seller;","lastModifiedDate":"2022-03-28"},{"lineNumber":10,"author":{"gitId":"cwnm"},"content":"import seedu.address.model.seller.SellerHouseTypeContainsKeywordsPredicate;","lastModifiedDate":"2022-03-28"},{"lineNumber":11,"author":{"gitId":"cwnm"},"content":"import seedu.address.model.seller.SellerLocationContainsKeywordsPredicate;","lastModifiedDate":"2022-03-30"},{"lineNumber":12,"author":{"gitId":"cwnm"},"content":"import seedu.address.model.seller.SellerNameContainsKeywordsPredicate;","lastModifiedDate":"2022-03-28"},{"lineNumber":13,"author":{"gitId":"cwnm"},"content":"import seedu.address.model.seller.SellerPhoneContainsKeywordsPredicate;","lastModifiedDate":"2022-03-28"},{"lineNumber":14,"author":{"gitId":"cwnm"},"content":"import seedu.address.model.seller.SellerTagsContainsKeywordsPredicate;","lastModifiedDate":"2022-03-28"},{"lineNumber":15,"author":{"gitId":"cwnm"},"content":"","lastModifiedDate":"2022-03-28"},{"lineNumber":16,"author":{"gitId":"cwnm"},"content":"/**","lastModifiedDate":"2022-03-28"},{"lineNumber":17,"author":{"gitId":"cwnm"},"content":" * Finds and lists all persons in address book whose name contains any of the argument keywords.","lastModifiedDate":"2022-03-28"},{"lineNumber":18,"author":{"gitId":"cwnm"},"content":" * Keyword matching is case insensitive.","lastModifiedDate":"2022-03-28"},{"lineNumber":19,"author":{"gitId":"cwnm"},"content":" */","lastModifiedDate":"2022-03-28"},{"lineNumber":20,"author":{"gitId":"cwnm"},"content":"public class FindSellerCommand extends Command {","lastModifiedDate":"2022-03-28"},{"lineNumber":21,"author":{"gitId":"cwnm"},"content":"","lastModifiedDate":"2022-03-28"},{"lineNumber":22,"author":{"gitId":"cwnm"},"content":"    public static final String COMMAND_WORD \u003d \"find-s\";","lastModifiedDate":"2022-03-30"},{"lineNumber":23,"author":{"gitId":"cwnm"},"content":"","lastModifiedDate":"2022-03-28"},{"lineNumber":24,"author":{"gitId":"cwnm"},"content":"    public static final String MESSAGE_USAGE \u003d COMMAND_WORD + \": Finds all sellers whose specified field matches \"","lastModifiedDate":"2022-03-28"},{"lineNumber":25,"author":{"gitId":"cwnm"},"content":"            + \"the given keywords (case-insensitive) and displays them as a list with index numbers.\\n\"","lastModifiedDate":"2022-03-28"},{"lineNumber":26,"author":{"gitId":"cwnm"},"content":"            + \"Parameters: DELIMITER/KEYWORD [MORE_KEYWORDS]...\\n\"","lastModifiedDate":"2022-03-28"},{"lineNumber":27,"author":{"gitId":"cwnm"},"content":"            + \"Example: \" + COMMAND_WORD + \" n/alice bob charlie\";","lastModifiedDate":"2022-03-28"},{"lineNumber":28,"author":{"gitId":"cwnm"},"content":"","lastModifiedDate":"2022-03-28"},{"lineNumber":29,"author":{"gitId":"cwnm"},"content":"    private final Predicate\u003cSeller\u003e predicateSeller;","lastModifiedDate":"2022-03-28"},{"lineNumber":30,"author":{"gitId":"cwnm"},"content":"","lastModifiedDate":"2022-03-28"},{"lineNumber":31,"author":{"gitId":"cwnm"},"content":"    public FindSellerCommand(SellerNameContainsKeywordsPredicate predicate) {","lastModifiedDate":"2022-03-28"},{"lineNumber":32,"author":{"gitId":"cwnm"},"content":"        this.predicateSeller \u003d predicate;","lastModifiedDate":"2022-03-28"},{"lineNumber":33,"author":{"gitId":"cwnm"},"content":"    }","lastModifiedDate":"2022-03-28"},{"lineNumber":34,"author":{"gitId":"cwnm"},"content":"","lastModifiedDate":"2022-03-28"},{"lineNumber":35,"author":{"gitId":"cwnm"},"content":"    public FindSellerCommand(SellerPhoneContainsKeywordsPredicate predicate) {","lastModifiedDate":"2022-03-28"},{"lineNumber":36,"author":{"gitId":"cwnm"},"content":"        this.predicateSeller \u003d predicate;","lastModifiedDate":"2022-03-28"},{"lineNumber":37,"author":{"gitId":"cwnm"},"content":"    }","lastModifiedDate":"2022-03-28"},{"lineNumber":38,"author":{"gitId":"cwnm"},"content":"","lastModifiedDate":"2022-03-28"},{"lineNumber":39,"author":{"gitId":"cwnm"},"content":"    public FindSellerCommand(SellerTagsContainsKeywordsPredicate predicate) {","lastModifiedDate":"2022-03-28"},{"lineNumber":40,"author":{"gitId":"cwnm"},"content":"        this.predicateSeller \u003d predicate;","lastModifiedDate":"2022-03-28"},{"lineNumber":41,"author":{"gitId":"cwnm"},"content":"    }","lastModifiedDate":"2022-03-28"},{"lineNumber":42,"author":{"gitId":"cwnm"},"content":"","lastModifiedDate":"2022-03-28"},{"lineNumber":43,"author":{"gitId":"cwnm"},"content":"    public FindSellerCommand(SellerHouseTypeContainsKeywordsPredicate predicate) {","lastModifiedDate":"2022-03-28"},{"lineNumber":44,"author":{"gitId":"cwnm"},"content":"        this.predicateSeller \u003d predicate;","lastModifiedDate":"2022-03-28"},{"lineNumber":45,"author":{"gitId":"cwnm"},"content":"    }","lastModifiedDate":"2022-03-28"},{"lineNumber":46,"author":{"gitId":"cwnm"},"content":"","lastModifiedDate":"2022-03-28"},{"lineNumber":47,"author":{"gitId":"cwnm"},"content":"    public FindSellerCommand(SellerLocationContainsKeywordsPredicate predicate) {","lastModifiedDate":"2022-03-30"},{"lineNumber":48,"author":{"gitId":"cwnm"},"content":"        this.predicateSeller \u003d predicate;","lastModifiedDate":"2022-03-30"},{"lineNumber":49,"author":{"gitId":"cwnm"},"content":"    }","lastModifiedDate":"2022-03-30"},{"lineNumber":50,"author":{"gitId":"cwnm"},"content":"","lastModifiedDate":"2022-03-30"},{"lineNumber":51,"author":{"gitId":"cwnm"},"content":"    @Override","lastModifiedDate":"2022-03-28"},{"lineNumber":52,"author":{"gitId":"cwnm"},"content":"    public CommandResult execute(Model model) {","lastModifiedDate":"2022-03-28"},{"lineNumber":53,"author":{"gitId":"cwnm"},"content":"        requireNonNull(model);","lastModifiedDate":"2022-03-28"},{"lineNumber":54,"author":{"gitId":"cwnm"},"content":"        model.updateFilteredSellerList(predicateSeller);","lastModifiedDate":"2022-03-28"},{"lineNumber":55,"author":{"gitId":"cwnm"},"content":"        return new CommandResult(","lastModifiedDate":"2022-03-28"},{"lineNumber":56,"author":{"gitId":"cwnm"},"content":"                String.format(Messages.MESSAGE_SELLERS_LISTED_OVERVIEW, model.getFilteredSellerList().size()));","lastModifiedDate":"2022-03-28"},{"lineNumber":57,"author":{"gitId":"cwnm"},"content":"    }","lastModifiedDate":"2022-03-28"},{"lineNumber":58,"author":{"gitId":"cwnm"},"content":"","lastModifiedDate":"2022-03-28"},{"lineNumber":59,"author":{"gitId":"cwnm"},"content":"    @Override","lastModifiedDate":"2022-03-28"},{"lineNumber":60,"author":{"gitId":"cwnm"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2022-03-28"},{"lineNumber":61,"author":{"gitId":"cwnm"},"content":"        return other \u003d\u003d this // short circuit if same object","lastModifiedDate":"2022-03-28"},{"lineNumber":62,"author":{"gitId":"cwnm"},"content":"                || (other instanceof FindSellerCommand // instanceof handles nulls","lastModifiedDate":"2022-03-28"},{"lineNumber":63,"author":{"gitId":"cwnm"},"content":"                \u0026\u0026 predicateSeller.equals(((FindSellerCommand) other).predicateSeller)); // state check","lastModifiedDate":"2022-03-28"},{"lineNumber":64,"author":{"gitId":"cwnm"},"content":"    }","lastModifiedDate":"2022-03-28"},{"lineNumber":65,"author":{"gitId":"cwnm"},"content":"}","lastModifiedDate":"2022-03-28"}],"authorContributionMap":{"cwnm":65}},{"path":"src/main/java/seedu/address/logic/commands/ListBuyerCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"cwnm"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2022-03-29"},{"lineNumber":2,"author":{"gitId":"cwnm"},"content":"","lastModifiedDate":"2022-03-29"},{"lineNumber":3,"author":{"gitId":"cwnm"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2022-03-29"},{"lineNumber":4,"author":{"gitId":"cwnm"},"content":"import static seedu.address.model.Model.PREDICATE_SHOW_ALL_BUYERS;","lastModifiedDate":"2022-03-29"},{"lineNumber":5,"author":{"gitId":"cwnm"},"content":"","lastModifiedDate":"2022-03-29"},{"lineNumber":6,"author":{"gitId":"cwnm"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2022-03-29"},{"lineNumber":7,"author":{"gitId":"cwnm"},"content":"","lastModifiedDate":"2022-03-29"},{"lineNumber":8,"author":{"gitId":"cwnm"},"content":"/**","lastModifiedDate":"2022-03-29"},{"lineNumber":9,"author":{"gitId":"cwnm"},"content":" * Lists all clients in the address book to the user.","lastModifiedDate":"2022-03-29"},{"lineNumber":10,"author":{"gitId":"cwnm"},"content":" */","lastModifiedDate":"2022-03-29"},{"lineNumber":11,"author":{"gitId":"cwnm"},"content":"public class ListBuyerCommand extends Command {","lastModifiedDate":"2022-03-29"},{"lineNumber":12,"author":{"gitId":"cwnm"},"content":"","lastModifiedDate":"2022-03-29"},{"lineNumber":13,"author":{"gitId":"cwnm"},"content":"    public static final String COMMAND_WORD \u003d \"list-b\";","lastModifiedDate":"2022-03-29"},{"lineNumber":14,"author":{"gitId":"cwnm"},"content":"","lastModifiedDate":"2022-03-29"},{"lineNumber":15,"author":{"gitId":"cwnm"},"content":"    public static final String MESSAGE_SUCCESS \u003d \"Listed all buyers\";","lastModifiedDate":"2022-03-29"},{"lineNumber":16,"author":{"gitId":"cwnm"},"content":"","lastModifiedDate":"2022-03-29"},{"lineNumber":17,"author":{"gitId":"cwnm"},"content":"","lastModifiedDate":"2022-03-29"},{"lineNumber":18,"author":{"gitId":"cwnm"},"content":"    @Override","lastModifiedDate":"2022-03-29"},{"lineNumber":19,"author":{"gitId":"cwnm"},"content":"    public CommandResult execute(Model model) {","lastModifiedDate":"2022-03-29"},{"lineNumber":20,"author":{"gitId":"cwnm"},"content":"        requireNonNull(model);","lastModifiedDate":"2022-03-29"},{"lineNumber":21,"author":{"gitId":"cwnm"},"content":"        model.updateFilteredBuyerList(PREDICATE_SHOW_ALL_BUYERS);","lastModifiedDate":"2022-03-29"},{"lineNumber":22,"author":{"gitId":"cwnm"},"content":"        return new CommandResult(MESSAGE_SUCCESS);","lastModifiedDate":"2022-03-29"},{"lineNumber":23,"author":{"gitId":"cwnm"},"content":"    }","lastModifiedDate":"2022-03-29"},{"lineNumber":24,"author":{"gitId":"cwnm"},"content":"}","lastModifiedDate":"2022-03-29"}],"authorContributionMap":{"cwnm":24}},{"path":"src/main/java/seedu/address/logic/commands/ListSellerCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"cwnm"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2022-03-29"},{"lineNumber":2,"author":{"gitId":"cwnm"},"content":"","lastModifiedDate":"2022-03-29"},{"lineNumber":3,"author":{"gitId":"cwnm"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2022-03-29"},{"lineNumber":4,"author":{"gitId":"cwnm"},"content":"import static seedu.address.model.Model.PREDICATE_SHOW_ALL_SELLERS;","lastModifiedDate":"2022-03-29"},{"lineNumber":5,"author":{"gitId":"cwnm"},"content":"","lastModifiedDate":"2022-03-29"},{"lineNumber":6,"author":{"gitId":"cwnm"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2022-03-29"},{"lineNumber":7,"author":{"gitId":"cwnm"},"content":"","lastModifiedDate":"2022-03-29"},{"lineNumber":8,"author":{"gitId":"cwnm"},"content":"/**","lastModifiedDate":"2022-03-29"},{"lineNumber":9,"author":{"gitId":"cwnm"},"content":" * Lists all clients in the address book to the user.","lastModifiedDate":"2022-03-29"},{"lineNumber":10,"author":{"gitId":"cwnm"},"content":" */","lastModifiedDate":"2022-03-29"},{"lineNumber":11,"author":{"gitId":"cwnm"},"content":"public class ListSellerCommand extends Command {","lastModifiedDate":"2022-03-29"},{"lineNumber":12,"author":{"gitId":"cwnm"},"content":"","lastModifiedDate":"2022-03-29"},{"lineNumber":13,"author":{"gitId":"cwnm"},"content":"    public static final String COMMAND_WORD \u003d \"list-s\";","lastModifiedDate":"2022-03-29"},{"lineNumber":14,"author":{"gitId":"cwnm"},"content":"","lastModifiedDate":"2022-03-29"},{"lineNumber":15,"author":{"gitId":"cwnm"},"content":"    public static final String MESSAGE_SUCCESS \u003d \"Listed all sellers\";","lastModifiedDate":"2022-03-29"},{"lineNumber":16,"author":{"gitId":"cwnm"},"content":"","lastModifiedDate":"2022-03-29"},{"lineNumber":17,"author":{"gitId":"cwnm"},"content":"","lastModifiedDate":"2022-03-29"},{"lineNumber":18,"author":{"gitId":"cwnm"},"content":"    @Override","lastModifiedDate":"2022-03-29"},{"lineNumber":19,"author":{"gitId":"cwnm"},"content":"    public CommandResult execute(Model model) {","lastModifiedDate":"2022-03-29"},{"lineNumber":20,"author":{"gitId":"cwnm"},"content":"        requireNonNull(model);","lastModifiedDate":"2022-03-29"},{"lineNumber":21,"author":{"gitId":"cwnm"},"content":"        model.updateFilteredSellerList(PREDICATE_SHOW_ALL_SELLERS);","lastModifiedDate":"2022-03-29"},{"lineNumber":22,"author":{"gitId":"cwnm"},"content":"        return new CommandResult(MESSAGE_SUCCESS);","lastModifiedDate":"2022-03-29"},{"lineNumber":23,"author":{"gitId":"cwnm"},"content":"    }","lastModifiedDate":"2022-03-29"},{"lineNumber":24,"author":{"gitId":"cwnm"},"content":"}","lastModifiedDate":"2022-03-29"}],"authorContributionMap":{"cwnm":24}},{"path":"src/main/java/seedu/address/logic/commands/MatchCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"janald99"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2022-03-25"},{"lineNumber":2,"author":{"gitId":"janald99"},"content":"","lastModifiedDate":"2022-03-25"},{"lineNumber":3,"author":{"gitId":"janald99"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2022-03-25"},{"lineNumber":4,"author":{"gitId":"janald99"},"content":"","lastModifiedDate":"2022-03-25"},{"lineNumber":5,"author":{"gitId":"janald99"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2022-03-25"},{"lineNumber":6,"author":{"gitId":"janald99"},"content":"import seedu.address.commons.core.Messages;","lastModifiedDate":"2022-03-25"},{"lineNumber":7,"author":{"gitId":"janald99"},"content":"import seedu.address.commons.core.index.Index;","lastModifiedDate":"2022-03-25"},{"lineNumber":8,"author":{"gitId":"janald99"},"content":"import seedu.address.logic.commands.exceptions.CommandException;","lastModifiedDate":"2022-03-25"},{"lineNumber":9,"author":{"gitId":"janald99"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2022-03-25"},{"lineNumber":10,"author":{"gitId":"janald99"},"content":"import seedu.address.model.buyer.Buyer;","lastModifiedDate":"2022-03-25"},{"lineNumber":11,"author":{"gitId":"janald99"},"content":"import seedu.address.model.property.NullPropertyToBuy;","lastModifiedDate":"2022-04-06"},{"lineNumber":12,"author":{"gitId":"janald99"},"content":"import seedu.address.model.seller.AllFieldsMatchBuyerPredicate;","lastModifiedDate":"2022-03-31"},{"lineNumber":13,"author":{"gitId":"janald99"},"content":"","lastModifiedDate":"2022-03-25"},{"lineNumber":14,"author":{"gitId":"janald99"},"content":"","lastModifiedDate":"2022-03-25"},{"lineNumber":15,"author":{"gitId":"janald99"},"content":"/**","lastModifiedDate":"2022-03-25"},{"lineNumber":16,"author":{"gitId":"janald99"},"content":" * Matches and finds all sellers in UniqueSellerList whose PropertyToSell matches with the Buyer\u0027s PropertyToBuy.","lastModifiedDate":"2022-03-25"},{"lineNumber":17,"author":{"gitId":"janald99"},"content":" */","lastModifiedDate":"2022-03-25"},{"lineNumber":18,"author":{"gitId":"janald99"},"content":"public class MatchCommand extends Command {","lastModifiedDate":"2022-03-25"},{"lineNumber":19,"author":{"gitId":"janald99"},"content":"","lastModifiedDate":"2022-03-25"},{"lineNumber":20,"author":{"gitId":"janald99"},"content":"    public static final String COMMAND_WORD \u003d \"match\";","lastModifiedDate":"2022-03-25"},{"lineNumber":21,"author":{"gitId":"janald99"},"content":"","lastModifiedDate":"2022-03-25"},{"lineNumber":22,"author":{"gitId":"janald99"},"content":"    public static final String MESSAGE_USAGE \u003d COMMAND_WORD + \": Finds all sellers whose specified fields matches \"","lastModifiedDate":"2022-03-25"},{"lineNumber":23,"author":{"gitId":"janald99"},"content":"        + \"the given buyer index and displays them as a list with index numbers.\\n\"","lastModifiedDate":"2022-03-25"},{"lineNumber":24,"author":{"gitId":"janald99"},"content":"        + \"Parameters: BUYER_INDEX...\\n\"","lastModifiedDate":"2022-03-25"},{"lineNumber":25,"author":{"gitId":"janald99"},"content":"        + \"Example: \" + COMMAND_WORD + \" 2\";","lastModifiedDate":"2022-03-25"},{"lineNumber":26,"author":{"gitId":"janald99"},"content":"","lastModifiedDate":"2022-03-25"},{"lineNumber":27,"author":{"gitId":"janald99"},"content":"    private final Index index;","lastModifiedDate":"2022-03-25"},{"lineNumber":28,"author":{"gitId":"janald99"},"content":"","lastModifiedDate":"2022-03-25"},{"lineNumber":29,"author":{"gitId":"janald99"},"content":"    public MatchCommand(Index index) {","lastModifiedDate":"2022-03-25"},{"lineNumber":30,"author":{"gitId":"janald99"},"content":"        this.index \u003d index;","lastModifiedDate":"2022-03-25"},{"lineNumber":31,"author":{"gitId":"janald99"},"content":"    }","lastModifiedDate":"2022-03-25"},{"lineNumber":32,"author":{"gitId":"janald99"},"content":"","lastModifiedDate":"2022-03-25"},{"lineNumber":33,"author":{"gitId":"janald99"},"content":"    @Override","lastModifiedDate":"2022-03-25"},{"lineNumber":34,"author":{"gitId":"janald99"},"content":"    public CommandResult execute(Model model) throws CommandException {","lastModifiedDate":"2022-03-25"},{"lineNumber":35,"author":{"gitId":"janald99"},"content":"        requireNonNull(model);","lastModifiedDate":"2022-03-25"},{"lineNumber":36,"author":{"gitId":"janald99"},"content":"        ObservableList\u003cBuyer\u003e buyerList \u003d model.getFilteredBuyerList();","lastModifiedDate":"2022-03-25"},{"lineNumber":37,"author":{"gitId":"janald99"},"content":"","lastModifiedDate":"2022-04-06"},{"lineNumber":38,"author":{"gitId":"janald99"},"content":"        if (index.getZeroBased() \u003e\u003d buyerList.size()) {","lastModifiedDate":"2022-04-06"},{"lineNumber":39,"author":{"gitId":"janald99"},"content":"            throw new CommandException(Messages.MESSAGE_INVALID_BUYER_DISPLAYED_INDEX);","lastModifiedDate":"2022-04-06"},{"lineNumber":40,"author":{"gitId":"janald99"},"content":"        }","lastModifiedDate":"2022-04-06"},{"lineNumber":41,"author":{"gitId":"janald99"},"content":"","lastModifiedDate":"2022-04-06"},{"lineNumber":42,"author":{"gitId":"janald99"},"content":"        Buyer buyer \u003d buyerList.get(index.getZeroBased());","lastModifiedDate":"2022-03-25"},{"lineNumber":43,"author":{"gitId":"janald99"},"content":"","lastModifiedDate":"2022-03-25"},{"lineNumber":44,"author":{"gitId":"janald99"},"content":"        if (buyer.getPropertyToBuy() instanceof NullPropertyToBuy) {","lastModifiedDate":"2022-04-06"},{"lineNumber":45,"author":{"gitId":"janald99"},"content":"            throw new CommandException(Messages.MESSAGE_NO_PROPERTY_ADDED);","lastModifiedDate":"2022-04-06"},{"lineNumber":46,"author":{"gitId":"janald99"},"content":"        }","lastModifiedDate":"2022-04-06"},{"lineNumber":47,"author":{"gitId":"janald99"},"content":"","lastModifiedDate":"2022-04-06"},{"lineNumber":48,"author":{"gitId":"janald99"},"content":"        model.updateFilteredSellerList(new AllFieldsMatchBuyerPredicate(buyer));","lastModifiedDate":"2022-03-31"},{"lineNumber":49,"author":{"gitId":"janald99"},"content":"","lastModifiedDate":"2022-03-25"},{"lineNumber":50,"author":{"gitId":"janald99"},"content":"        return new CommandResult(","lastModifiedDate":"2022-03-25"},{"lineNumber":51,"author":{"gitId":"janald99"},"content":"            String.format(Messages.MESSAGE_SELLERS_LISTED_OVERVIEW, model.getFilteredSellerList().size()));","lastModifiedDate":"2022-03-31"},{"lineNumber":52,"author":{"gitId":"janald99"},"content":"    }","lastModifiedDate":"2022-03-25"},{"lineNumber":53,"author":{"gitId":"janald99"},"content":"","lastModifiedDate":"2022-03-25"},{"lineNumber":54,"author":{"gitId":"janald99"},"content":"    @Override","lastModifiedDate":"2022-03-25"},{"lineNumber":55,"author":{"gitId":"janald99"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2022-03-25"},{"lineNumber":56,"author":{"gitId":"janald99"},"content":"        return other \u003d\u003d this // short circuit if same object","lastModifiedDate":"2022-03-25"},{"lineNumber":57,"author":{"gitId":"janald99"},"content":"            || (other instanceof MatchCommand // instanceof handles nulls","lastModifiedDate":"2022-03-25"},{"lineNumber":58,"author":{"gitId":"janald99"},"content":"            \u0026\u0026 index.equals(((MatchCommand) other).index)); // state check","lastModifiedDate":"2022-03-25"},{"lineNumber":59,"author":{"gitId":"janald99"},"content":"    }","lastModifiedDate":"2022-03-25"},{"lineNumber":60,"author":{"gitId":"janald99"},"content":"}","lastModifiedDate":"2022-03-25"}],"authorContributionMap":{"janald99":60}},{"path":"src/main/java/seedu/address/logic/commands/MatchHouseTypeCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"janald99"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2022-03-31"},{"lineNumber":2,"author":{"gitId":"janald99"},"content":"","lastModifiedDate":"2022-03-31"},{"lineNumber":3,"author":{"gitId":"janald99"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2022-03-31"},{"lineNumber":4,"author":{"gitId":"janald99"},"content":"","lastModifiedDate":"2022-03-31"},{"lineNumber":5,"author":{"gitId":"janald99"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2022-03-31"},{"lineNumber":6,"author":{"gitId":"janald99"},"content":"import seedu.address.commons.core.Messages;","lastModifiedDate":"2022-03-31"},{"lineNumber":7,"author":{"gitId":"janald99"},"content":"import seedu.address.commons.core.index.Index;","lastModifiedDate":"2022-03-31"},{"lineNumber":8,"author":{"gitId":"janald99"},"content":"import seedu.address.logic.commands.exceptions.CommandException;","lastModifiedDate":"2022-03-31"},{"lineNumber":9,"author":{"gitId":"janald99"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2022-03-31"},{"lineNumber":10,"author":{"gitId":"janald99"},"content":"import seedu.address.model.buyer.Buyer;","lastModifiedDate":"2022-03-31"},{"lineNumber":11,"author":{"gitId":"janald99"},"content":"import seedu.address.model.property.NullPropertyToBuy;","lastModifiedDate":"2022-04-06"},{"lineNumber":12,"author":{"gitId":"janald99"},"content":"import seedu.address.model.seller.HouseTypeMatchBuyerPredicate;","lastModifiedDate":"2022-03-31"},{"lineNumber":13,"author":{"gitId":"janald99"},"content":"","lastModifiedDate":"2022-03-31"},{"lineNumber":14,"author":{"gitId":"janald99"},"content":"/**","lastModifiedDate":"2022-03-31"},{"lineNumber":15,"author":{"gitId":"janald99"},"content":" * Matches and finds all sellers in UniqueSellerList whose PropertyToSell matches with the Buyer\u0027s HouseType.","lastModifiedDate":"2022-03-31"},{"lineNumber":16,"author":{"gitId":"janald99"},"content":" */","lastModifiedDate":"2022-03-31"},{"lineNumber":17,"author":{"gitId":"janald99"},"content":"public class MatchHouseTypeCommand extends Command {","lastModifiedDate":"2022-03-31"},{"lineNumber":18,"author":{"gitId":"janald99"},"content":"","lastModifiedDate":"2022-03-31"},{"lineNumber":19,"author":{"gitId":"janald99"},"content":"    public static final String COMMAND_WORD \u003d \"match-h\";","lastModifiedDate":"2022-03-31"},{"lineNumber":20,"author":{"gitId":"janald99"},"content":"","lastModifiedDate":"2022-03-31"},{"lineNumber":21,"author":{"gitId":"janald99"},"content":"    public static final String MESSAGE_USAGE \u003d COMMAND_WORD + \": Finds all sellers whose housetype matches \"","lastModifiedDate":"2022-03-31"},{"lineNumber":22,"author":{"gitId":"janald99"},"content":"        + \"the given buyer index and displays them as a list with index numbers.\\n\"","lastModifiedDate":"2022-03-31"},{"lineNumber":23,"author":{"gitId":"janald99"},"content":"        + \"Parameters: BUYER_INDEX...\\n\"","lastModifiedDate":"2022-03-31"},{"lineNumber":24,"author":{"gitId":"janald99"},"content":"        + \"Example: \" + COMMAND_WORD + \" 2\";","lastModifiedDate":"2022-03-31"},{"lineNumber":25,"author":{"gitId":"janald99"},"content":"","lastModifiedDate":"2022-03-31"},{"lineNumber":26,"author":{"gitId":"janald99"},"content":"    private final Index index;","lastModifiedDate":"2022-03-31"},{"lineNumber":27,"author":{"gitId":"janald99"},"content":"","lastModifiedDate":"2022-03-31"},{"lineNumber":28,"author":{"gitId":"janald99"},"content":"    public MatchHouseTypeCommand(Index index) {","lastModifiedDate":"2022-03-31"},{"lineNumber":29,"author":{"gitId":"janald99"},"content":"        this.index \u003d index;","lastModifiedDate":"2022-03-31"},{"lineNumber":30,"author":{"gitId":"janald99"},"content":"    }","lastModifiedDate":"2022-03-31"},{"lineNumber":31,"author":{"gitId":"janald99"},"content":"","lastModifiedDate":"2022-03-31"},{"lineNumber":32,"author":{"gitId":"janald99"},"content":"    @Override","lastModifiedDate":"2022-03-31"},{"lineNumber":33,"author":{"gitId":"janald99"},"content":"    public CommandResult execute(Model model) throws CommandException {","lastModifiedDate":"2022-03-31"},{"lineNumber":34,"author":{"gitId":"janald99"},"content":"        requireNonNull(model);","lastModifiedDate":"2022-03-31"},{"lineNumber":35,"author":{"gitId":"janald99"},"content":"        ObservableList\u003cBuyer\u003e buyerList \u003d model.getFilteredBuyerList();","lastModifiedDate":"2022-03-31"},{"lineNumber":36,"author":{"gitId":"janald99"},"content":"","lastModifiedDate":"2022-04-06"},{"lineNumber":37,"author":{"gitId":"janald99"},"content":"        if (index.getZeroBased() \u003e\u003d buyerList.size()) {","lastModifiedDate":"2022-04-06"},{"lineNumber":38,"author":{"gitId":"janald99"},"content":"            throw new CommandException(Messages.MESSAGE_INVALID_BUYER_DISPLAYED_INDEX);","lastModifiedDate":"2022-04-06"},{"lineNumber":39,"author":{"gitId":"janald99"},"content":"        }","lastModifiedDate":"2022-04-06"},{"lineNumber":40,"author":{"gitId":"janald99"},"content":"","lastModifiedDate":"2022-04-06"},{"lineNumber":41,"author":{"gitId":"janald99"},"content":"        Buyer buyer \u003d buyerList.get(index.getZeroBased());","lastModifiedDate":"2022-03-31"},{"lineNumber":42,"author":{"gitId":"janald99"},"content":"","lastModifiedDate":"2022-03-31"},{"lineNumber":43,"author":{"gitId":"janald99"},"content":"        if (buyer.getPropertyToBuy() instanceof NullPropertyToBuy) {","lastModifiedDate":"2022-04-06"},{"lineNumber":44,"author":{"gitId":"janald99"},"content":"            throw new CommandException(Messages.MESSAGE_NO_PROPERTY_ADDED);","lastModifiedDate":"2022-04-06"},{"lineNumber":45,"author":{"gitId":"janald99"},"content":"        }","lastModifiedDate":"2022-04-06"},{"lineNumber":46,"author":{"gitId":"janald99"},"content":"","lastModifiedDate":"2022-04-06"},{"lineNumber":47,"author":{"gitId":"janald99"},"content":"        model.updateFilteredSellerList(new HouseTypeMatchBuyerPredicate(buyer));","lastModifiedDate":"2022-03-31"},{"lineNumber":48,"author":{"gitId":"janald99"},"content":"","lastModifiedDate":"2022-03-31"},{"lineNumber":49,"author":{"gitId":"janald99"},"content":"        return new CommandResult(","lastModifiedDate":"2022-03-31"},{"lineNumber":50,"author":{"gitId":"janald99"},"content":"            String.format(Messages.MESSAGE_SELLERS_LISTED_OVERVIEW, model.getFilteredSellerList().size()));","lastModifiedDate":"2022-03-31"},{"lineNumber":51,"author":{"gitId":"janald99"},"content":"    }","lastModifiedDate":"2022-03-31"},{"lineNumber":52,"author":{"gitId":"janald99"},"content":"","lastModifiedDate":"2022-03-31"},{"lineNumber":53,"author":{"gitId":"janald99"},"content":"    @Override","lastModifiedDate":"2022-03-31"},{"lineNumber":54,"author":{"gitId":"janald99"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2022-03-31"},{"lineNumber":55,"author":{"gitId":"janald99"},"content":"        return other \u003d\u003d this // short circuit if same object","lastModifiedDate":"2022-03-31"},{"lineNumber":56,"author":{"gitId":"janald99"},"content":"            || (other instanceof MatchHouseTypeCommand // instanceof handles nulls","lastModifiedDate":"2022-03-31"},{"lineNumber":57,"author":{"gitId":"janald99"},"content":"            \u0026\u0026 index.equals(((MatchHouseTypeCommand) other).index)); // state check","lastModifiedDate":"2022-03-31"},{"lineNumber":58,"author":{"gitId":"janald99"},"content":"    }","lastModifiedDate":"2022-03-31"},{"lineNumber":59,"author":{"gitId":"janald99"},"content":"}","lastModifiedDate":"2022-03-31"}],"authorContributionMap":{"janald99":59}},{"path":"src/main/java/seedu/address/logic/commands/MatchLocationCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"janald99"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2022-03-31"},{"lineNumber":2,"author":{"gitId":"janald99"},"content":"","lastModifiedDate":"2022-03-31"},{"lineNumber":3,"author":{"gitId":"janald99"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2022-03-31"},{"lineNumber":4,"author":{"gitId":"janald99"},"content":"","lastModifiedDate":"2022-03-31"},{"lineNumber":5,"author":{"gitId":"janald99"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2022-03-31"},{"lineNumber":6,"author":{"gitId":"janald99"},"content":"import seedu.address.commons.core.Messages;","lastModifiedDate":"2022-03-31"},{"lineNumber":7,"author":{"gitId":"janald99"},"content":"import seedu.address.commons.core.index.Index;","lastModifiedDate":"2022-03-31"},{"lineNumber":8,"author":{"gitId":"janald99"},"content":"import seedu.address.logic.commands.exceptions.CommandException;","lastModifiedDate":"2022-03-31"},{"lineNumber":9,"author":{"gitId":"janald99"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2022-03-31"},{"lineNumber":10,"author":{"gitId":"janald99"},"content":"import seedu.address.model.buyer.Buyer;","lastModifiedDate":"2022-03-31"},{"lineNumber":11,"author":{"gitId":"janald99"},"content":"import seedu.address.model.property.NullPropertyToBuy;","lastModifiedDate":"2022-04-06"},{"lineNumber":12,"author":{"gitId":"janald99"},"content":"import seedu.address.model.seller.LocationMatchBuyerPredicate;","lastModifiedDate":"2022-03-31"},{"lineNumber":13,"author":{"gitId":"janald99"},"content":"","lastModifiedDate":"2022-03-31"},{"lineNumber":14,"author":{"gitId":"janald99"},"content":"/**","lastModifiedDate":"2022-03-31"},{"lineNumber":15,"author":{"gitId":"janald99"},"content":" * Matches and finds all sellers in UniqueSellerList whose PropertyToSell matches with the Buyer\u0027s Location.","lastModifiedDate":"2022-03-31"},{"lineNumber":16,"author":{"gitId":"janald99"},"content":" */","lastModifiedDate":"2022-03-31"},{"lineNumber":17,"author":{"gitId":"janald99"},"content":"public class MatchLocationCommand extends Command {","lastModifiedDate":"2022-03-31"},{"lineNumber":18,"author":{"gitId":"janald99"},"content":"","lastModifiedDate":"2022-03-31"},{"lineNumber":19,"author":{"gitId":"janald99"},"content":"    public static final String COMMAND_WORD \u003d \"match-l\";","lastModifiedDate":"2022-03-31"},{"lineNumber":20,"author":{"gitId":"janald99"},"content":"","lastModifiedDate":"2022-03-31"},{"lineNumber":21,"author":{"gitId":"janald99"},"content":"    public static final String MESSAGE_USAGE \u003d COMMAND_WORD + \": Finds all sellers whose location matches \"","lastModifiedDate":"2022-03-31"},{"lineNumber":22,"author":{"gitId":"janald99"},"content":"        + \"the given buyer index and displays them as a list with index numbers.\\n\"","lastModifiedDate":"2022-03-31"},{"lineNumber":23,"author":{"gitId":"janald99"},"content":"        + \"Parameters: BUYER_INDEX...\\n\"","lastModifiedDate":"2022-03-31"},{"lineNumber":24,"author":{"gitId":"janald99"},"content":"        + \"Example: \" + COMMAND_WORD + \" 2\";","lastModifiedDate":"2022-03-31"},{"lineNumber":25,"author":{"gitId":"janald99"},"content":"","lastModifiedDate":"2022-03-31"},{"lineNumber":26,"author":{"gitId":"janald99"},"content":"    private final Index index;","lastModifiedDate":"2022-03-31"},{"lineNumber":27,"author":{"gitId":"janald99"},"content":"","lastModifiedDate":"2022-03-31"},{"lineNumber":28,"author":{"gitId":"janald99"},"content":"    public MatchLocationCommand(Index index) {","lastModifiedDate":"2022-03-31"},{"lineNumber":29,"author":{"gitId":"janald99"},"content":"        this.index \u003d index;","lastModifiedDate":"2022-03-31"},{"lineNumber":30,"author":{"gitId":"janald99"},"content":"    }","lastModifiedDate":"2022-03-31"},{"lineNumber":31,"author":{"gitId":"janald99"},"content":"","lastModifiedDate":"2022-03-31"},{"lineNumber":32,"author":{"gitId":"janald99"},"content":"    @Override","lastModifiedDate":"2022-03-31"},{"lineNumber":33,"author":{"gitId":"janald99"},"content":"    public CommandResult execute(Model model) throws CommandException {","lastModifiedDate":"2022-03-31"},{"lineNumber":34,"author":{"gitId":"janald99"},"content":"        requireNonNull(model);","lastModifiedDate":"2022-03-31"},{"lineNumber":35,"author":{"gitId":"janald99"},"content":"        ObservableList\u003cBuyer\u003e buyerList \u003d model.getFilteredBuyerList();","lastModifiedDate":"2022-03-31"},{"lineNumber":36,"author":{"gitId":"janald99"},"content":"","lastModifiedDate":"2022-04-06"},{"lineNumber":37,"author":{"gitId":"janald99"},"content":"        if (index.getZeroBased() \u003e\u003d buyerList.size()) {","lastModifiedDate":"2022-04-06"},{"lineNumber":38,"author":{"gitId":"janald99"},"content":"            throw new CommandException(Messages.MESSAGE_INVALID_BUYER_DISPLAYED_INDEX);","lastModifiedDate":"2022-04-06"},{"lineNumber":39,"author":{"gitId":"janald99"},"content":"        }","lastModifiedDate":"2022-04-06"},{"lineNumber":40,"author":{"gitId":"janald99"},"content":"","lastModifiedDate":"2022-04-06"},{"lineNumber":41,"author":{"gitId":"janald99"},"content":"        Buyer buyer \u003d buyerList.get(index.getZeroBased());","lastModifiedDate":"2022-03-31"},{"lineNumber":42,"author":{"gitId":"janald99"},"content":"","lastModifiedDate":"2022-03-31"},{"lineNumber":43,"author":{"gitId":"janald99"},"content":"        if (buyer.getPropertyToBuy() instanceof NullPropertyToBuy) {","lastModifiedDate":"2022-04-06"},{"lineNumber":44,"author":{"gitId":"janald99"},"content":"            throw new CommandException(Messages.MESSAGE_NO_PROPERTY_ADDED);","lastModifiedDate":"2022-04-06"},{"lineNumber":45,"author":{"gitId":"janald99"},"content":"        }","lastModifiedDate":"2022-04-06"},{"lineNumber":46,"author":{"gitId":"janald99"},"content":"","lastModifiedDate":"2022-04-06"},{"lineNumber":47,"author":{"gitId":"janald99"},"content":"        model.updateFilteredSellerList(new LocationMatchBuyerPredicate(buyer));","lastModifiedDate":"2022-03-31"},{"lineNumber":48,"author":{"gitId":"janald99"},"content":"","lastModifiedDate":"2022-03-31"},{"lineNumber":49,"author":{"gitId":"janald99"},"content":"        return new CommandResult(","lastModifiedDate":"2022-03-31"},{"lineNumber":50,"author":{"gitId":"janald99"},"content":"            String.format(Messages.MESSAGE_SELLERS_LISTED_OVERVIEW, model.getFilteredSellerList().size()));","lastModifiedDate":"2022-03-31"},{"lineNumber":51,"author":{"gitId":"janald99"},"content":"    }","lastModifiedDate":"2022-03-31"},{"lineNumber":52,"author":{"gitId":"janald99"},"content":"","lastModifiedDate":"2022-03-31"},{"lineNumber":53,"author":{"gitId":"janald99"},"content":"    @Override","lastModifiedDate":"2022-03-31"},{"lineNumber":54,"author":{"gitId":"janald99"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2022-03-31"},{"lineNumber":55,"author":{"gitId":"janald99"},"content":"        return other \u003d\u003d this // short circuit if same object","lastModifiedDate":"2022-03-31"},{"lineNumber":56,"author":{"gitId":"janald99"},"content":"            || (other instanceof MatchLocationCommand // instanceof handles nulls","lastModifiedDate":"2022-03-31"},{"lineNumber":57,"author":{"gitId":"janald99"},"content":"            \u0026\u0026 index.equals(((MatchLocationCommand) other).index)); // state check","lastModifiedDate":"2022-03-31"},{"lineNumber":58,"author":{"gitId":"janald99"},"content":"    }","lastModifiedDate":"2022-03-31"},{"lineNumber":59,"author":{"gitId":"janald99"},"content":"","lastModifiedDate":"2022-03-31"},{"lineNumber":60,"author":{"gitId":"janald99"},"content":"}","lastModifiedDate":"2022-03-31"}],"authorContributionMap":{"janald99":60}},{"path":"src/main/java/seedu/address/logic/commands/MatchPriceRangeCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"janald99"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2022-03-31"},{"lineNumber":2,"author":{"gitId":"janald99"},"content":"","lastModifiedDate":"2022-03-31"},{"lineNumber":3,"author":{"gitId":"janald99"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2022-03-31"},{"lineNumber":4,"author":{"gitId":"janald99"},"content":"","lastModifiedDate":"2022-03-31"},{"lineNumber":5,"author":{"gitId":"janald99"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2022-03-31"},{"lineNumber":6,"author":{"gitId":"janald99"},"content":"import seedu.address.commons.core.Messages;","lastModifiedDate":"2022-03-31"},{"lineNumber":7,"author":{"gitId":"janald99"},"content":"import seedu.address.commons.core.index.Index;","lastModifiedDate":"2022-03-31"},{"lineNumber":8,"author":{"gitId":"janald99"},"content":"import seedu.address.logic.commands.exceptions.CommandException;","lastModifiedDate":"2022-03-31"},{"lineNumber":9,"author":{"gitId":"janald99"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2022-03-31"},{"lineNumber":10,"author":{"gitId":"janald99"},"content":"import seedu.address.model.buyer.Buyer;","lastModifiedDate":"2022-03-31"},{"lineNumber":11,"author":{"gitId":"janald99"},"content":"import seedu.address.model.property.NullPropertyToBuy;","lastModifiedDate":"2022-04-06"},{"lineNumber":12,"author":{"gitId":"janald99"},"content":"import seedu.address.model.seller.PriceRangeMatchBuyerPredicate;","lastModifiedDate":"2022-03-31"},{"lineNumber":13,"author":{"gitId":"janald99"},"content":"","lastModifiedDate":"2022-03-31"},{"lineNumber":14,"author":{"gitId":"janald99"},"content":"/**","lastModifiedDate":"2022-03-31"},{"lineNumber":15,"author":{"gitId":"janald99"},"content":" * Matches and finds all sellers in UniqueSellerList whose PropertyToSell matches with the Buyer\u0027s PriceRange.","lastModifiedDate":"2022-03-31"},{"lineNumber":16,"author":{"gitId":"janald99"},"content":" */","lastModifiedDate":"2022-03-31"},{"lineNumber":17,"author":{"gitId":"janald99"},"content":"public class MatchPriceRangeCommand extends Command {","lastModifiedDate":"2022-03-31"},{"lineNumber":18,"author":{"gitId":"janald99"},"content":"","lastModifiedDate":"2022-03-31"},{"lineNumber":19,"author":{"gitId":"janald99"},"content":"    public static final String COMMAND_WORD \u003d \"match-pr\";","lastModifiedDate":"2022-03-31"},{"lineNumber":20,"author":{"gitId":"janald99"},"content":"","lastModifiedDate":"2022-03-31"},{"lineNumber":21,"author":{"gitId":"janald99"},"content":"    public static final String MESSAGE_USAGE \u003d COMMAND_WORD + \": Finds all sellers whose price range matches \"","lastModifiedDate":"2022-03-31"},{"lineNumber":22,"author":{"gitId":"janald99"},"content":"        + \"the given buyer index and displays them as a list with index numbers.\\n\"","lastModifiedDate":"2022-03-31"},{"lineNumber":23,"author":{"gitId":"janald99"},"content":"        + \"Parameters: BUYER_INDEX...\\n\"","lastModifiedDate":"2022-03-31"},{"lineNumber":24,"author":{"gitId":"janald99"},"content":"        + \"Example: \" + COMMAND_WORD + \" 2\";","lastModifiedDate":"2022-03-31"},{"lineNumber":25,"author":{"gitId":"janald99"},"content":"","lastModifiedDate":"2022-03-31"},{"lineNumber":26,"author":{"gitId":"janald99"},"content":"    private final Index index;","lastModifiedDate":"2022-03-31"},{"lineNumber":27,"author":{"gitId":"janald99"},"content":"","lastModifiedDate":"2022-03-31"},{"lineNumber":28,"author":{"gitId":"janald99"},"content":"    public MatchPriceRangeCommand(Index index) {","lastModifiedDate":"2022-03-31"},{"lineNumber":29,"author":{"gitId":"janald99"},"content":"        this.index \u003d index;","lastModifiedDate":"2022-03-31"},{"lineNumber":30,"author":{"gitId":"janald99"},"content":"    }","lastModifiedDate":"2022-03-31"},{"lineNumber":31,"author":{"gitId":"janald99"},"content":"","lastModifiedDate":"2022-03-31"},{"lineNumber":32,"author":{"gitId":"janald99"},"content":"    @Override","lastModifiedDate":"2022-03-31"},{"lineNumber":33,"author":{"gitId":"janald99"},"content":"    public CommandResult execute(Model model) throws CommandException {","lastModifiedDate":"2022-03-31"},{"lineNumber":34,"author":{"gitId":"janald99"},"content":"        requireNonNull(model);","lastModifiedDate":"2022-03-31"},{"lineNumber":35,"author":{"gitId":"janald99"},"content":"        ObservableList\u003cBuyer\u003e buyerList \u003d model.getFilteredBuyerList();","lastModifiedDate":"2022-03-31"},{"lineNumber":36,"author":{"gitId":"janald99"},"content":"","lastModifiedDate":"2022-04-06"},{"lineNumber":37,"author":{"gitId":"janald99"},"content":"        if (index.getZeroBased() \u003e\u003d buyerList.size()) {","lastModifiedDate":"2022-04-06"},{"lineNumber":38,"author":{"gitId":"janald99"},"content":"            throw new CommandException(Messages.MESSAGE_INVALID_BUYER_DISPLAYED_INDEX);","lastModifiedDate":"2022-04-06"},{"lineNumber":39,"author":{"gitId":"janald99"},"content":"        }","lastModifiedDate":"2022-04-06"},{"lineNumber":40,"author":{"gitId":"janald99"},"content":"","lastModifiedDate":"2022-04-06"},{"lineNumber":41,"author":{"gitId":"janald99"},"content":"        Buyer buyer \u003d buyerList.get(index.getZeroBased());","lastModifiedDate":"2022-03-31"},{"lineNumber":42,"author":{"gitId":"janald99"},"content":"","lastModifiedDate":"2022-03-31"},{"lineNumber":43,"author":{"gitId":"janald99"},"content":"        if (buyer.getPropertyToBuy() instanceof NullPropertyToBuy) {","lastModifiedDate":"2022-04-06"},{"lineNumber":44,"author":{"gitId":"janald99"},"content":"            throw new CommandException(Messages.MESSAGE_NO_PROPERTY_ADDED);","lastModifiedDate":"2022-04-06"},{"lineNumber":45,"author":{"gitId":"janald99"},"content":"        }","lastModifiedDate":"2022-04-06"},{"lineNumber":46,"author":{"gitId":"janald99"},"content":"","lastModifiedDate":"2022-04-06"},{"lineNumber":47,"author":{"gitId":"janald99"},"content":"        model.updateFilteredSellerList(new PriceRangeMatchBuyerPredicate(buyer));","lastModifiedDate":"2022-03-31"},{"lineNumber":48,"author":{"gitId":"janald99"},"content":"","lastModifiedDate":"2022-03-31"},{"lineNumber":49,"author":{"gitId":"janald99"},"content":"        return new CommandResult(","lastModifiedDate":"2022-03-31"},{"lineNumber":50,"author":{"gitId":"janald99"},"content":"            String.format(Messages.MESSAGE_SELLERS_LISTED_OVERVIEW, model.getFilteredSellerList().size()));","lastModifiedDate":"2022-03-31"},{"lineNumber":51,"author":{"gitId":"janald99"},"content":"    }","lastModifiedDate":"2022-03-31"},{"lineNumber":52,"author":{"gitId":"janald99"},"content":"","lastModifiedDate":"2022-03-31"},{"lineNumber":53,"author":{"gitId":"janald99"},"content":"    @Override","lastModifiedDate":"2022-03-31"},{"lineNumber":54,"author":{"gitId":"janald99"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2022-03-31"},{"lineNumber":55,"author":{"gitId":"janald99"},"content":"        return other \u003d\u003d this // short circuit if same object","lastModifiedDate":"2022-03-31"},{"lineNumber":56,"author":{"gitId":"janald99"},"content":"            || (other instanceof MatchPriceRangeCommand// instanceof handles nulls","lastModifiedDate":"2022-03-31"},{"lineNumber":57,"author":{"gitId":"janald99"},"content":"            \u0026\u0026 index.equals(((MatchPriceRangeCommand) other).index)); // state check","lastModifiedDate":"2022-03-31"},{"lineNumber":58,"author":{"gitId":"janald99"},"content":"    }","lastModifiedDate":"2022-03-31"},{"lineNumber":59,"author":{"gitId":"janald99"},"content":"}","lastModifiedDate":"2022-03-31"}],"authorContributionMap":{"janald99":59}},{"path":"src/main/java/seedu/address/logic/commands/SortBuyerCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"Jacky142857"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2022-03-31"},{"lineNumber":2,"author":{"gitId":"Jacky142857"},"content":"","lastModifiedDate":"2022-03-31"},{"lineNumber":3,"author":{"gitId":"Jacky142857"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2022-03-31"},{"lineNumber":4,"author":{"gitId":"Jacky142857"},"content":"","lastModifiedDate":"2022-03-31"},{"lineNumber":5,"author":{"gitId":"Jacky142857"},"content":"/**","lastModifiedDate":"2022-03-31"},{"lineNumber":6,"author":{"gitId":"Jacky142857"},"content":" * A command class that deals with sorting command","lastModifiedDate":"2022-03-31"},{"lineNumber":7,"author":{"gitId":"Jacky142857"},"content":" * Buyers will be sorted by names alphabetically or by appointment time,","lastModifiedDate":"2022-03-31"},{"lineNumber":8,"author":{"gitId":"Jacky142857"},"content":" * in either ascending or descending order.","lastModifiedDate":"2022-03-31"},{"lineNumber":9,"author":{"gitId":"Jacky142857"},"content":" */","lastModifiedDate":"2022-03-31"},{"lineNumber":10,"author":{"gitId":"Jacky142857"},"content":"public class SortBuyerCommand extends Command {","lastModifiedDate":"2022-03-31"},{"lineNumber":11,"author":{"gitId":"Jacky142857"},"content":"    public static final String COMMAND_WORD \u003d \"sort-b\";","lastModifiedDate":"2022-03-31"},{"lineNumber":12,"author":{"gitId":"Jacky142857"},"content":"    public static final String MESSAGE_NOT_SORTABLE \u003d \"What you have entered cannot be sorted by AgentSee\";","lastModifiedDate":"2022-03-31"},{"lineNumber":13,"author":{"gitId":"Jacky142857"},"content":"    public static final String MESSAGE_INCORRECT_ORDER \u003d \"Please enter a correct order, e.g. asc/desc\";","lastModifiedDate":"2022-03-31"},{"lineNumber":14,"author":{"gitId":"Jacky142857"},"content":"    public static final String MESSAGE_MISSING_ARGUMENTS \u003d \"Please indicate what you want to sort.\\n\"","lastModifiedDate":"2022-03-31"},{"lineNumber":15,"author":{"gitId":"Jacky142857"},"content":"            + \" e.g. by/name or by/time\";","lastModifiedDate":"2022-03-31"},{"lineNumber":16,"author":{"gitId":"Jacky142857"},"content":"    public static final String MESSAGE_MISSING_ORDER \u003d \"Please indicate the sorting order, e.g. o/asc or o/desc\";","lastModifiedDate":"2022-03-31"},{"lineNumber":17,"author":{"gitId":"Jacky142857"},"content":"    public static final String MESSAGE_USAGE \u003d COMMAND_WORD + \"Sorts the buyer in the address book according to\\n\"","lastModifiedDate":"2022-03-31"},{"lineNumber":18,"author":{"gitId":"Jacky142857"},"content":"            + \"the predicate\\n\"","lastModifiedDate":"2022-03-31"},{"lineNumber":19,"author":{"gitId":"Jacky142857"},"content":"            + \"Example: \" + COMMAND_WORD + \"by/\"","lastModifiedDate":"2022-03-31"},{"lineNumber":20,"author":{"gitId":"Jacky142857"},"content":"            + \"name\";","lastModifiedDate":"2022-03-31"},{"lineNumber":21,"author":{"gitId":"Jacky142857"},"content":"","lastModifiedDate":"2022-03-31"},{"lineNumber":22,"author":{"gitId":"Jacky142857"},"content":"    private final String comparedItem;","lastModifiedDate":"2022-03-31"},{"lineNumber":23,"author":{"gitId":"Jacky142857"},"content":"    private final String order;","lastModifiedDate":"2022-03-31"},{"lineNumber":24,"author":{"gitId":"Jacky142857"},"content":"","lastModifiedDate":"2022-03-31"},{"lineNumber":25,"author":{"gitId":"Jacky142857"},"content":"    /**","lastModifiedDate":"2022-03-31"},{"lineNumber":26,"author":{"gitId":"Jacky142857"},"content":"     * Constructor for SortBuyerCommand","lastModifiedDate":"2022-03-31"},{"lineNumber":27,"author":{"gitId":"Jacky142857"},"content":"     * @param comparedItem item to be compared, time/name.","lastModifiedDate":"2022-03-31"},{"lineNumber":28,"author":{"gitId":"Jacky142857"},"content":"     * @param order whether it is in ascending or descending order.","lastModifiedDate":"2022-03-31"},{"lineNumber":29,"author":{"gitId":"Jacky142857"},"content":"     */","lastModifiedDate":"2022-03-31"},{"lineNumber":30,"author":{"gitId":"Jacky142857"},"content":"    public SortBuyerCommand(String comparedItem, String order) {","lastModifiedDate":"2022-03-31"},{"lineNumber":31,"author":{"gitId":"Jacky142857"},"content":"        this.comparedItem \u003d comparedItem;","lastModifiedDate":"2022-03-31"},{"lineNumber":32,"author":{"gitId":"Jacky142857"},"content":"        this.order \u003d order;","lastModifiedDate":"2022-03-31"},{"lineNumber":33,"author":{"gitId":"Jacky142857"},"content":"    }","lastModifiedDate":"2022-03-31"},{"lineNumber":34,"author":{"gitId":"Jacky142857"},"content":"","lastModifiedDate":"2022-03-31"},{"lineNumber":35,"author":{"gitId":"Jacky142857"},"content":"    @Override","lastModifiedDate":"2022-03-31"},{"lineNumber":36,"author":{"gitId":"Jacky142857"},"content":"    public CommandResult execute(Model model) {","lastModifiedDate":"2022-03-31"},{"lineNumber":37,"author":{"gitId":"Jacky142857"},"content":"        model.sortFilteredBuyerList(comparedItem, order);","lastModifiedDate":"2022-03-31"},{"lineNumber":38,"author":{"gitId":"Jacky142857"},"content":"        return new CommandResult(\"Buyers sorted by \" + comparedItem + \" \" + order);","lastModifiedDate":"2022-03-31"},{"lineNumber":39,"author":{"gitId":"Jacky142857"},"content":"    }","lastModifiedDate":"2022-03-31"},{"lineNumber":40,"author":{"gitId":"Jacky142857"},"content":"","lastModifiedDate":"2022-03-31"},{"lineNumber":41,"author":{"gitId":"Jacky142857"},"content":"    @Override","lastModifiedDate":"2022-03-31"},{"lineNumber":42,"author":{"gitId":"Jacky142857"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2022-03-31"},{"lineNumber":43,"author":{"gitId":"Jacky142857"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2022-03-31"},{"lineNumber":44,"author":{"gitId":"Jacky142857"},"content":"            return true;","lastModifiedDate":"2022-03-31"},{"lineNumber":45,"author":{"gitId":"Jacky142857"},"content":"        }","lastModifiedDate":"2022-03-31"},{"lineNumber":46,"author":{"gitId":"Jacky142857"},"content":"","lastModifiedDate":"2022-03-31"},{"lineNumber":47,"author":{"gitId":"Jacky142857"},"content":"        // instanceof handles nulls","lastModifiedDate":"2022-03-31"},{"lineNumber":48,"author":{"gitId":"Jacky142857"},"content":"        if (!(other instanceof SortBuyerCommand)) {","lastModifiedDate":"2022-03-31"},{"lineNumber":49,"author":{"gitId":"Jacky142857"},"content":"            return false;","lastModifiedDate":"2022-03-31"},{"lineNumber":50,"author":{"gitId":"Jacky142857"},"content":"        }","lastModifiedDate":"2022-03-31"},{"lineNumber":51,"author":{"gitId":"Jacky142857"},"content":"","lastModifiedDate":"2022-03-31"},{"lineNumber":52,"author":{"gitId":"Jacky142857"},"content":"        // state check","lastModifiedDate":"2022-03-31"},{"lineNumber":53,"author":{"gitId":"Jacky142857"},"content":"        SortBuyerCommand e \u003d (SortBuyerCommand) other;","lastModifiedDate":"2022-03-31"},{"lineNumber":54,"author":{"gitId":"Jacky142857"},"content":"        return comparedItem.equals(e.comparedItem)","lastModifiedDate":"2022-03-31"},{"lineNumber":55,"author":{"gitId":"Jacky142857"},"content":"                \u0026\u0026 order.equals(e.order);","lastModifiedDate":"2022-03-31"},{"lineNumber":56,"author":{"gitId":"Jacky142857"},"content":"    }","lastModifiedDate":"2022-03-31"},{"lineNumber":57,"author":{"gitId":"Jacky142857"},"content":"}","lastModifiedDate":"2022-03-31"}],"authorContributionMap":{"Jacky142857":57}},{"path":"src/main/java/seedu/address/logic/commands/SortSellerCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"Jacky142857"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2022-03-31"},{"lineNumber":2,"author":{"gitId":"Jacky142857"},"content":"","lastModifiedDate":"2022-03-31"},{"lineNumber":3,"author":{"gitId":"Jacky142857"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2022-03-31"},{"lineNumber":4,"author":{"gitId":"Jacky142857"},"content":"","lastModifiedDate":"2022-03-31"},{"lineNumber":5,"author":{"gitId":"Jacky142857"},"content":"/**","lastModifiedDate":"2022-03-31"},{"lineNumber":6,"author":{"gitId":"Jacky142857"},"content":" * A command class that deals with sorting command","lastModifiedDate":"2022-03-31"},{"lineNumber":7,"author":{"gitId":"Jacky142857"},"content":" * Buyers will be sorted by names alphabetically or by appointment time,","lastModifiedDate":"2022-03-31"},{"lineNumber":8,"author":{"gitId":"Jacky142857"},"content":" * in either ascending or descending order.","lastModifiedDate":"2022-03-31"},{"lineNumber":9,"author":{"gitId":"Jacky142857"},"content":" */","lastModifiedDate":"2022-03-31"},{"lineNumber":10,"author":{"gitId":"Jacky142857"},"content":"public class SortSellerCommand extends Command {","lastModifiedDate":"2022-03-31"},{"lineNumber":11,"author":{"gitId":"Jacky142857"},"content":"    public static final String COMMAND_WORD \u003d \"sort-s\";","lastModifiedDate":"2022-03-31"},{"lineNumber":12,"author":{"gitId":"Jacky142857"},"content":"    public static final String MESSAGE_NOT_SORTABLE \u003d \"What you have entered cannot be sorted by AgentSee\";","lastModifiedDate":"2022-03-31"},{"lineNumber":13,"author":{"gitId":"Jacky142857"},"content":"    public static final String MESSAGE_INCORRECT_ORDER \u003d \"Please enter a correct order, e.g. asc/desc\";","lastModifiedDate":"2022-03-31"},{"lineNumber":14,"author":{"gitId":"Jacky142857"},"content":"    public static final String MESSAGE_MISSING_ARGUMENTS \u003d \"Please indicate what you want to sort.\\n\"","lastModifiedDate":"2022-03-31"},{"lineNumber":15,"author":{"gitId":"Jacky142857"},"content":"            + \" e.g. by/name or by/time\";","lastModifiedDate":"2022-03-31"},{"lineNumber":16,"author":{"gitId":"Jacky142857"},"content":"    public static final String MESSAGE_MISSING_ORDER \u003d \"Please indicate the sorting order, e.g. o/asc or o/desc\";","lastModifiedDate":"2022-03-31"},{"lineNumber":17,"author":{"gitId":"Jacky142857"},"content":"    public static final String MESSAGE_USAGE \u003d COMMAND_WORD + \"Sorts the sellers in the address book according to\\n\"","lastModifiedDate":"2022-03-31"},{"lineNumber":18,"author":{"gitId":"Jacky142857"},"content":"            + \"the predicate\\n\"","lastModifiedDate":"2022-03-31"},{"lineNumber":19,"author":{"gitId":"Jacky142857"},"content":"            + \"Example: \" + COMMAND_WORD + \"by/\"","lastModifiedDate":"2022-03-31"},{"lineNumber":20,"author":{"gitId":"Jacky142857"},"content":"            + \"name\";","lastModifiedDate":"2022-03-31"},{"lineNumber":21,"author":{"gitId":"Jacky142857"},"content":"","lastModifiedDate":"2022-03-31"},{"lineNumber":22,"author":{"gitId":"Jacky142857"},"content":"    private final String comparedItem;","lastModifiedDate":"2022-03-31"},{"lineNumber":23,"author":{"gitId":"Jacky142857"},"content":"    private final String order;","lastModifiedDate":"2022-03-31"},{"lineNumber":24,"author":{"gitId":"Jacky142857"},"content":"","lastModifiedDate":"2022-03-31"},{"lineNumber":25,"author":{"gitId":"Jacky142857"},"content":"    /**","lastModifiedDate":"2022-03-31"},{"lineNumber":26,"author":{"gitId":"Jacky142857"},"content":"     * Constructor for SortSellerCommand","lastModifiedDate":"2022-03-31"},{"lineNumber":27,"author":{"gitId":"Jacky142857"},"content":"     * @param comparedItem item to be compared, time/name.","lastModifiedDate":"2022-03-31"},{"lineNumber":28,"author":{"gitId":"Jacky142857"},"content":"     * @param order whether it is in ascending or descending order.","lastModifiedDate":"2022-03-31"},{"lineNumber":29,"author":{"gitId":"Jacky142857"},"content":"     */","lastModifiedDate":"2022-03-31"},{"lineNumber":30,"author":{"gitId":"Jacky142857"},"content":"    public SortSellerCommand(String comparedItem, String order) {","lastModifiedDate":"2022-03-31"},{"lineNumber":31,"author":{"gitId":"Jacky142857"},"content":"        this.comparedItem \u003d comparedItem;","lastModifiedDate":"2022-03-31"},{"lineNumber":32,"author":{"gitId":"Jacky142857"},"content":"        this.order \u003d order;","lastModifiedDate":"2022-03-31"},{"lineNumber":33,"author":{"gitId":"Jacky142857"},"content":"    }","lastModifiedDate":"2022-03-31"},{"lineNumber":34,"author":{"gitId":"Jacky142857"},"content":"","lastModifiedDate":"2022-03-31"},{"lineNumber":35,"author":{"gitId":"Jacky142857"},"content":"    @Override","lastModifiedDate":"2022-03-31"},{"lineNumber":36,"author":{"gitId":"Jacky142857"},"content":"    public CommandResult execute(Model model) {","lastModifiedDate":"2022-03-31"},{"lineNumber":37,"author":{"gitId":"Jacky142857"},"content":"        model.sortFilteredSellerList(comparedItem, order);","lastModifiedDate":"2022-03-31"},{"lineNumber":38,"author":{"gitId":"Jacky142857"},"content":"        return new CommandResult(\"Sellers sorted by \" + comparedItem + \" \" + order);","lastModifiedDate":"2022-03-31"},{"lineNumber":39,"author":{"gitId":"Jacky142857"},"content":"    }","lastModifiedDate":"2022-03-31"},{"lineNumber":40,"author":{"gitId":"Jacky142857"},"content":"","lastModifiedDate":"2022-03-31"},{"lineNumber":41,"author":{"gitId":"Jacky142857"},"content":"    @Override","lastModifiedDate":"2022-03-31"},{"lineNumber":42,"author":{"gitId":"Jacky142857"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2022-03-31"},{"lineNumber":43,"author":{"gitId":"Jacky142857"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2022-03-31"},{"lineNumber":44,"author":{"gitId":"Jacky142857"},"content":"            return true;","lastModifiedDate":"2022-03-31"},{"lineNumber":45,"author":{"gitId":"Jacky142857"},"content":"        }","lastModifiedDate":"2022-03-31"},{"lineNumber":46,"author":{"gitId":"Jacky142857"},"content":"","lastModifiedDate":"2022-03-31"},{"lineNumber":47,"author":{"gitId":"Jacky142857"},"content":"        // instanceof handles nulls","lastModifiedDate":"2022-03-31"},{"lineNumber":48,"author":{"gitId":"Jacky142857"},"content":"        if (!(other instanceof SortSellerCommand)) {","lastModifiedDate":"2022-03-31"},{"lineNumber":49,"author":{"gitId":"Jacky142857"},"content":"            return false;","lastModifiedDate":"2022-03-31"},{"lineNumber":50,"author":{"gitId":"Jacky142857"},"content":"        }","lastModifiedDate":"2022-03-31"},{"lineNumber":51,"author":{"gitId":"Jacky142857"},"content":"","lastModifiedDate":"2022-03-31"},{"lineNumber":52,"author":{"gitId":"Jacky142857"},"content":"        // state check","lastModifiedDate":"2022-03-31"},{"lineNumber":53,"author":{"gitId":"Jacky142857"},"content":"        SortSellerCommand e \u003d (SortSellerCommand) other;","lastModifiedDate":"2022-03-31"},{"lineNumber":54,"author":{"gitId":"Jacky142857"},"content":"        return comparedItem.equals(e.comparedItem)","lastModifiedDate":"2022-03-31"},{"lineNumber":55,"author":{"gitId":"Jacky142857"},"content":"                \u0026\u0026 order.equals(e.order);","lastModifiedDate":"2022-03-31"},{"lineNumber":56,"author":{"gitId":"Jacky142857"},"content":"    }","lastModifiedDate":"2022-03-31"},{"lineNumber":57,"author":{"gitId":"Jacky142857"},"content":"}","lastModifiedDate":"2022-03-31"}],"authorContributionMap":{"Jacky142857":57}},{"path":"src/main/java/seedu/address/logic/parser/AddBuyerCommandParser.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"WJunHong"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2022-03-14"},{"lineNumber":2,"author":{"gitId":"WJunHong"},"content":"","lastModifiedDate":"2022-03-14"},{"lineNumber":3,"author":{"gitId":"WJunHong"},"content":"import static seedu.address.commons.core.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2022-03-14"},{"lineNumber":4,"author":{"gitId":"WJunHong"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_NAME;","lastModifiedDate":"2022-03-14"},{"lineNumber":5,"author":{"gitId":"WJunHong"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_PHONE;","lastModifiedDate":"2022-03-14"},{"lineNumber":6,"author":{"gitId":"WJunHong"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_TAG;","lastModifiedDate":"2022-03-14"},{"lineNumber":7,"author":{"gitId":"WJunHong"},"content":"","lastModifiedDate":"2022-03-14"},{"lineNumber":8,"author":{"gitId":"WJunHong"},"content":"import java.util.Set;","lastModifiedDate":"2022-03-14"},{"lineNumber":9,"author":{"gitId":"WJunHong"},"content":"import java.util.stream.Stream;","lastModifiedDate":"2022-03-14"},{"lineNumber":10,"author":{"gitId":"WJunHong"},"content":"","lastModifiedDate":"2022-03-14"},{"lineNumber":11,"author":{"gitId":"WJunHong"},"content":"import seedu.address.logic.commands.AddBuyerCommand;","lastModifiedDate":"2022-03-14"},{"lineNumber":12,"author":{"gitId":"WJunHong"},"content":"import seedu.address.logic.parser.exceptions.ParseException;","lastModifiedDate":"2022-03-14"},{"lineNumber":13,"author":{"gitId":"WJunHong"},"content":"import seedu.address.model.buyer.Buyer;","lastModifiedDate":"2022-03-16"},{"lineNumber":14,"author":{"gitId":"WJunHong"},"content":"import seedu.address.model.client.Appointment;","lastModifiedDate":"2022-03-14"},{"lineNumber":15,"author":{"gitId":"WJunHong"},"content":"import seedu.address.model.client.Name;","lastModifiedDate":"2022-03-14"},{"lineNumber":16,"author":{"gitId":"WJunHong"},"content":"import seedu.address.model.client.Phone;","lastModifiedDate":"2022-03-14"},{"lineNumber":17,"author":{"gitId":"WJunHong"},"content":"import seedu.address.model.property.NullPropertyToBuy;","lastModifiedDate":"2022-03-24"},{"lineNumber":18,"author":{"gitId":"WJunHong"},"content":"import seedu.address.model.property.PropertyToBuy;","lastModifiedDate":"2022-03-24"},{"lineNumber":19,"author":{"gitId":"WJunHong"},"content":"import seedu.address.model.tag.Tag;","lastModifiedDate":"2022-03-14"},{"lineNumber":20,"author":{"gitId":"WJunHong"},"content":"","lastModifiedDate":"2022-03-14"},{"lineNumber":21,"author":{"gitId":"WJunHong"},"content":"","lastModifiedDate":"2022-03-16"},{"lineNumber":22,"author":{"gitId":"WJunHong"},"content":"public class AddBuyerCommandParser implements Parser\u003cAddBuyerCommand\u003e {","lastModifiedDate":"2022-03-14"},{"lineNumber":23,"author":{"gitId":"WJunHong"},"content":"","lastModifiedDate":"2022-03-14"},{"lineNumber":24,"author":{"gitId":"WJunHong"},"content":"    /**","lastModifiedDate":"2022-03-16"},{"lineNumber":25,"author":{"gitId":"WJunHong"},"content":"     * Parses the arguments of the command into the various attributes of a buyer.","lastModifiedDate":"2022-03-16"},{"lineNumber":26,"author":{"gitId":"WJunHong"},"content":"     *","lastModifiedDate":"2022-03-16"},{"lineNumber":27,"author":{"gitId":"WJunHong"},"content":"     * @param args The arguments to be parsed.","lastModifiedDate":"2022-03-16"},{"lineNumber":28,"author":{"gitId":"WJunHong"},"content":"     * @return An AddBuyerCommand of the new Buyer to add.","lastModifiedDate":"2022-03-16"},{"lineNumber":29,"author":{"gitId":"WJunHong"},"content":"     * @throws ParseException If there are problems with argument passed in.","lastModifiedDate":"2022-03-16"},{"lineNumber":30,"author":{"gitId":"WJunHong"},"content":"     */","lastModifiedDate":"2022-03-16"},{"lineNumber":31,"author":{"gitId":"WJunHong"},"content":"    public AddBuyerCommand parse(String args) throws ParseException {","lastModifiedDate":"2022-03-14"},{"lineNumber":32,"author":{"gitId":"Jacky142857"},"content":"        ArgumentMultimap argMultimap \u003d ArgumentTokenizer.tokenize(args, PREFIX_NAME, PREFIX_PHONE, PREFIX_TAG);","lastModifiedDate":"2022-03-19"},{"lineNumber":33,"author":{"gitId":"Jacky142857"},"content":"        if (!arePrefixesPresent(argMultimap, PREFIX_NAME, PREFIX_PHONE)","lastModifiedDate":"2022-03-19"},{"lineNumber":34,"author":{"gitId":"WJunHong"},"content":"                || !argMultimap.getPreamble().isEmpty()) {","lastModifiedDate":"2022-03-14"},{"lineNumber":35,"author":{"gitId":"WJunHong"},"content":"            throw new ParseException(String.format(MESSAGE_INVALID_COMMAND_FORMAT, AddBuyerCommand.MESSAGE_USAGE));","lastModifiedDate":"2022-03-16"},{"lineNumber":36,"author":{"gitId":"WJunHong"},"content":"        }","lastModifiedDate":"2022-03-14"},{"lineNumber":37,"author":{"gitId":"WJunHong"},"content":"","lastModifiedDate":"2022-03-14"},{"lineNumber":38,"author":{"gitId":"WJunHong"},"content":"        Name name \u003d ParserUtil.parseName(argMultimap.getValue(PREFIX_NAME).get());","lastModifiedDate":"2022-03-14"},{"lineNumber":39,"author":{"gitId":"WJunHong"},"content":"        Phone phone \u003d ParserUtil.parsePhone(argMultimap.getValue(PREFIX_PHONE).get());","lastModifiedDate":"2022-03-14"},{"lineNumber":40,"author":{"gitId":"WJunHong"},"content":"        Set\u003cTag\u003e tagList \u003d ParserUtil.parseTags(argMultimap.getAllValues(PREFIX_TAG));","lastModifiedDate":"2022-03-14"},{"lineNumber":41,"author":{"gitId":"WJunHong"},"content":"        Appointment appointment \u003d new Appointment(\"\");","lastModifiedDate":"2022-03-14"},{"lineNumber":42,"author":{"gitId":"WJunHong"},"content":"        PropertyToBuy desiredProperty \u003d NullPropertyToBuy.getNullPropertyToBuy();","lastModifiedDate":"2022-03-24"},{"lineNumber":43,"author":{"gitId":"WJunHong"},"content":"","lastModifiedDate":"2022-03-14"},{"lineNumber":44,"author":{"gitId":"WJunHong"},"content":"        Buyer buyer \u003d new Buyer(name, phone, appointment, tagList, desiredProperty);","lastModifiedDate":"2022-03-24"},{"lineNumber":45,"author":{"gitId":"WJunHong"},"content":"        return new AddBuyerCommand(buyer);","lastModifiedDate":"2022-03-16"},{"lineNumber":46,"author":{"gitId":"WJunHong"},"content":"    }","lastModifiedDate":"2022-03-14"},{"lineNumber":47,"author":{"gitId":"WJunHong"},"content":"","lastModifiedDate":"2022-03-14"},{"lineNumber":48,"author":{"gitId":"WJunHong"},"content":"    private static boolean arePrefixesPresent(ArgumentMultimap argumentMultimap, Prefix... prefixes) {","lastModifiedDate":"2022-03-14"},{"lineNumber":49,"author":{"gitId":"WJunHong"},"content":"        return Stream.of(prefixes).allMatch(prefix -\u003e argumentMultimap.getValue(prefix).isPresent());","lastModifiedDate":"2022-03-14"},{"lineNumber":50,"author":{"gitId":"WJunHong"},"content":"    }","lastModifiedDate":"2022-03-14"},{"lineNumber":51,"author":{"gitId":"WJunHong"},"content":"}","lastModifiedDate":"2022-03-14"}],"authorContributionMap":{"WJunHong":49,"Jacky142857":2}},{"path":"src/main/java/seedu/address/logic/parser/AddPropertyToBuyCommandParser.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"WJunHong"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2022-03-24"},{"lineNumber":2,"author":{"gitId":"WJunHong"},"content":"","lastModifiedDate":"2022-03-24"},{"lineNumber":3,"author":{"gitId":"WJunHong"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2022-03-24"},{"lineNumber":4,"author":{"gitId":"WJunHong"},"content":"import static seedu.address.commons.core.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2022-03-24"},{"lineNumber":5,"author":{"gitId":"WJunHong"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_HOUSE_TYPE;","lastModifiedDate":"2022-03-24"},{"lineNumber":6,"author":{"gitId":"WJunHong"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_LOCATION;","lastModifiedDate":"2022-03-24"},{"lineNumber":7,"author":{"gitId":"WJunHong"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_PRICE_RANGE;","lastModifiedDate":"2022-03-24"},{"lineNumber":8,"author":{"gitId":"WJunHong"},"content":"","lastModifiedDate":"2022-03-24"},{"lineNumber":9,"author":{"gitId":"WJunHong"},"content":"import java.util.stream.Stream;","lastModifiedDate":"2022-03-24"},{"lineNumber":10,"author":{"gitId":"WJunHong"},"content":"","lastModifiedDate":"2022-03-24"},{"lineNumber":11,"author":{"gitId":"WJunHong"},"content":"import seedu.address.commons.core.index.Index;","lastModifiedDate":"2022-03-24"},{"lineNumber":12,"author":{"gitId":"WJunHong"},"content":"import seedu.address.commons.exceptions.IllegalValueException;","lastModifiedDate":"2022-03-24"},{"lineNumber":13,"author":{"gitId":"WJunHong"},"content":"import seedu.address.logic.commands.AddPropertyToBuyCommand;","lastModifiedDate":"2022-03-24"},{"lineNumber":14,"author":{"gitId":"WJunHong"},"content":"import seedu.address.logic.parser.exceptions.ParseException;","lastModifiedDate":"2022-03-24"},{"lineNumber":15,"author":{"gitId":"WJunHong"},"content":"import seedu.address.model.property.House;","lastModifiedDate":"2022-03-24"},{"lineNumber":16,"author":{"gitId":"WJunHong"},"content":"import seedu.address.model.property.HouseType;","lastModifiedDate":"2022-03-24"},{"lineNumber":17,"author":{"gitId":"chuashihong"},"content":"import seedu.address.model.property.Location;","lastModifiedDate":"2022-03-28"},{"lineNumber":18,"author":{"gitId":"WJunHong"},"content":"import seedu.address.model.property.PriceRange;","lastModifiedDate":"2022-03-24"},{"lineNumber":19,"author":{"gitId":"WJunHong"},"content":"import seedu.address.model.property.PropertyToBuy;","lastModifiedDate":"2022-03-24"},{"lineNumber":20,"author":{"gitId":"WJunHong"},"content":"","lastModifiedDate":"2022-03-24"},{"lineNumber":21,"author":{"gitId":"WJunHong"},"content":"public class AddPropertyToBuyCommandParser implements Parser\u003cAddPropertyToBuyCommand\u003e {","lastModifiedDate":"2022-03-24"},{"lineNumber":22,"author":{"gitId":"WJunHong"},"content":"","lastModifiedDate":"2022-03-27"},{"lineNumber":23,"author":{"gitId":"WJunHong"},"content":"    /**","lastModifiedDate":"2022-03-24"},{"lineNumber":24,"author":{"gitId":"WJunHong"},"content":"     * Parses the given {@code String} of arguments in the context of the {@code AddPropertyToBuyCommand}","lastModifiedDate":"2022-03-24"},{"lineNumber":25,"author":{"gitId":"WJunHong"},"content":"     * and returns a {@code AddPropertyToBuyCommand} object for execution.","lastModifiedDate":"2022-03-24"},{"lineNumber":26,"author":{"gitId":"WJunHong"},"content":"     */","lastModifiedDate":"2022-03-24"},{"lineNumber":27,"author":{"gitId":"WJunHong"},"content":"    public AddPropertyToBuyCommand parse(String args) throws ParseException {","lastModifiedDate":"2022-03-24"},{"lineNumber":28,"author":{"gitId":"WJunHong"},"content":"        requireNonNull(args);","lastModifiedDate":"2022-03-24"},{"lineNumber":29,"author":{"gitId":"WJunHong"},"content":"        ArgumentMultimap argMultimap \u003d ArgumentTokenizer.tokenize(args, PREFIX_HOUSE_TYPE, PREFIX_LOCATION,","lastModifiedDate":"2022-03-24"},{"lineNumber":30,"author":{"gitId":"WJunHong"},"content":"                PREFIX_PRICE_RANGE);","lastModifiedDate":"2022-03-24"},{"lineNumber":31,"author":{"gitId":"WJunHong"},"content":"","lastModifiedDate":"2022-03-24"},{"lineNumber":32,"author":{"gitId":"WJunHong"},"content":"        Index index;","lastModifiedDate":"2022-03-24"},{"lineNumber":33,"author":{"gitId":"WJunHong"},"content":"        try {","lastModifiedDate":"2022-03-24"},{"lineNumber":34,"author":{"gitId":"WJunHong"},"content":"            index \u003d ParserUtil.parseIndex(argMultimap.getPreamble());","lastModifiedDate":"2022-03-24"},{"lineNumber":35,"author":{"gitId":"WJunHong"},"content":"        } catch (IllegalValueException ive) {","lastModifiedDate":"2022-03-24"},{"lineNumber":36,"author":{"gitId":"WJunHong"},"content":"            throw new ParseException(String.format(MESSAGE_INVALID_COMMAND_FORMAT,","lastModifiedDate":"2022-03-24"},{"lineNumber":37,"author":{"gitId":"WJunHong"},"content":"                    AddPropertyToBuyCommand.MESSAGE_USAGE), ive);","lastModifiedDate":"2022-03-24"},{"lineNumber":38,"author":{"gitId":"WJunHong"},"content":"        }","lastModifiedDate":"2022-03-24"},{"lineNumber":39,"author":{"gitId":"WJunHong"},"content":"","lastModifiedDate":"2022-03-24"},{"lineNumber":40,"author":{"gitId":"WJunHong"},"content":"        if (!arePrefixesPresent(argMultimap, PREFIX_LOCATION, PREFIX_PRICE_RANGE, PREFIX_HOUSE_TYPE)) {","lastModifiedDate":"2022-03-24"},{"lineNumber":41,"author":{"gitId":"janald99"},"content":"            throw new ParseException(String.format(MESSAGE_INVALID_COMMAND_FORMAT,","lastModifiedDate":"2022-04-06"},{"lineNumber":42,"author":{"gitId":"janald99"},"content":"                AddPropertyToBuyCommand.MESSAGE_USAGE));","lastModifiedDate":"2022-04-06"},{"lineNumber":43,"author":{"gitId":"WJunHong"},"content":"        }","lastModifiedDate":"2022-03-24"},{"lineNumber":44,"author":{"gitId":"WJunHong"},"content":"        HouseType houseType \u003d ParserUtil.parseHouseType(argMultimap.getValue(PREFIX_HOUSE_TYPE).get());","lastModifiedDate":"2022-03-24"},{"lineNumber":45,"author":{"gitId":"chuashihong"},"content":"        Location location \u003d ParserUtil.parseLocation(argMultimap.getValue(PREFIX_LOCATION).get());","lastModifiedDate":"2022-03-28"},{"lineNumber":46,"author":{"gitId":"WJunHong"},"content":"        PriceRange priceRange \u003d ParserUtil.parsePriceRange(argMultimap.getValue(PREFIX_PRICE_RANGE).get());","lastModifiedDate":"2022-03-24"},{"lineNumber":47,"author":{"gitId":"janald99"},"content":"        PropertyToBuy propertyToBuy \u003d new PropertyToBuy(new House(houseType, location), priceRange);","lastModifiedDate":"2022-03-31"},{"lineNumber":48,"author":{"gitId":"WJunHong"},"content":"","lastModifiedDate":"2022-03-24"},{"lineNumber":49,"author":{"gitId":"WJunHong"},"content":"        return new AddPropertyToBuyCommand(index, propertyToBuy);","lastModifiedDate":"2022-03-24"},{"lineNumber":50,"author":{"gitId":"WJunHong"},"content":"    }","lastModifiedDate":"2022-03-24"},{"lineNumber":51,"author":{"gitId":"WJunHong"},"content":"","lastModifiedDate":"2022-03-24"},{"lineNumber":52,"author":{"gitId":"WJunHong"},"content":"    private static boolean arePrefixesPresent(ArgumentMultimap argumentMultimap, Prefix... prefixes) {","lastModifiedDate":"2022-03-24"},{"lineNumber":53,"author":{"gitId":"WJunHong"},"content":"        return Stream.of(prefixes).allMatch(prefix -\u003e argumentMultimap.getValue(prefix).isPresent());","lastModifiedDate":"2022-03-24"},{"lineNumber":54,"author":{"gitId":"WJunHong"},"content":"    }","lastModifiedDate":"2022-03-24"},{"lineNumber":55,"author":{"gitId":"WJunHong"},"content":"}","lastModifiedDate":"2022-03-24"}],"authorContributionMap":{"janald99":3,"WJunHong":50,"chuashihong":2}},{"path":"src/main/java/seedu/address/logic/parser/AddPropertyToSellCommandParser.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"WJunHong"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2022-03-27"},{"lineNumber":2,"author":{"gitId":"WJunHong"},"content":"","lastModifiedDate":"2022-03-27"},{"lineNumber":3,"author":{"gitId":"WJunHong"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2022-03-27"},{"lineNumber":4,"author":{"gitId":"WJunHong"},"content":"import static seedu.address.commons.core.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2022-03-27"},{"lineNumber":5,"author":{"gitId":"WJunHong"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_ADDRESS;","lastModifiedDate":"2022-03-27"},{"lineNumber":6,"author":{"gitId":"WJunHong"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_HOUSE_TYPE;","lastModifiedDate":"2022-03-27"},{"lineNumber":7,"author":{"gitId":"WJunHong"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_LOCATION;","lastModifiedDate":"2022-03-27"},{"lineNumber":8,"author":{"gitId":"WJunHong"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_PRICE_RANGE;","lastModifiedDate":"2022-03-27"},{"lineNumber":9,"author":{"gitId":"WJunHong"},"content":"","lastModifiedDate":"2022-03-27"},{"lineNumber":10,"author":{"gitId":"WJunHong"},"content":"import java.util.stream.Stream;","lastModifiedDate":"2022-03-27"},{"lineNumber":11,"author":{"gitId":"WJunHong"},"content":"","lastModifiedDate":"2022-03-27"},{"lineNumber":12,"author":{"gitId":"WJunHong"},"content":"import seedu.address.commons.core.index.Index;","lastModifiedDate":"2022-03-27"},{"lineNumber":13,"author":{"gitId":"WJunHong"},"content":"import seedu.address.commons.exceptions.IllegalValueException;","lastModifiedDate":"2022-03-27"},{"lineNumber":14,"author":{"gitId":"WJunHong"},"content":"import seedu.address.logic.commands.AddPropertyToSellCommand;","lastModifiedDate":"2022-03-27"},{"lineNumber":15,"author":{"gitId":"WJunHong"},"content":"import seedu.address.logic.parser.exceptions.ParseException;","lastModifiedDate":"2022-03-27"},{"lineNumber":16,"author":{"gitId":"WJunHong"},"content":"import seedu.address.model.property.Address;","lastModifiedDate":"2022-03-27"},{"lineNumber":17,"author":{"gitId":"WJunHong"},"content":"import seedu.address.model.property.House;","lastModifiedDate":"2022-03-27"},{"lineNumber":18,"author":{"gitId":"WJunHong"},"content":"import seedu.address.model.property.HouseType;","lastModifiedDate":"2022-03-27"},{"lineNumber":19,"author":{"gitId":"chuashihong"},"content":"import seedu.address.model.property.Location;","lastModifiedDate":"2022-03-28"},{"lineNumber":20,"author":{"gitId":"WJunHong"},"content":"import seedu.address.model.property.PriceRange;","lastModifiedDate":"2022-03-27"},{"lineNumber":21,"author":{"gitId":"WJunHong"},"content":"import seedu.address.model.property.PropertyToSell;","lastModifiedDate":"2022-03-27"},{"lineNumber":22,"author":{"gitId":"WJunHong"},"content":"","lastModifiedDate":"2022-03-27"},{"lineNumber":23,"author":{"gitId":"WJunHong"},"content":"public class AddPropertyToSellCommandParser implements Parser\u003cAddPropertyToSellCommand\u003e {","lastModifiedDate":"2022-03-27"},{"lineNumber":24,"author":{"gitId":"WJunHong"},"content":"","lastModifiedDate":"2022-03-27"},{"lineNumber":25,"author":{"gitId":"WJunHong"},"content":"    /**","lastModifiedDate":"2022-03-27"},{"lineNumber":26,"author":{"gitId":"WJunHong"},"content":"     * Parses the given {@code String} of arguments in the context of the {@code AddPropertyToSellCommand}","lastModifiedDate":"2022-03-27"},{"lineNumber":27,"author":{"gitId":"WJunHong"},"content":"     * and returns a {@code AddPropertyToSellCommand} object for execution.","lastModifiedDate":"2022-03-27"},{"lineNumber":28,"author":{"gitId":"WJunHong"},"content":"     */","lastModifiedDate":"2022-03-27"},{"lineNumber":29,"author":{"gitId":"WJunHong"},"content":"    public AddPropertyToSellCommand parse(String args) throws ParseException {","lastModifiedDate":"2022-03-27"},{"lineNumber":30,"author":{"gitId":"WJunHong"},"content":"        requireNonNull(args);","lastModifiedDate":"2022-03-27"},{"lineNumber":31,"author":{"gitId":"WJunHong"},"content":"        ArgumentMultimap argMultimap \u003d ArgumentTokenizer.tokenize(args, PREFIX_HOUSE_TYPE, PREFIX_ADDRESS,","lastModifiedDate":"2022-03-27"},{"lineNumber":32,"author":{"gitId":"WJunHong"},"content":"                PREFIX_PRICE_RANGE, PREFIX_LOCATION);","lastModifiedDate":"2022-03-27"},{"lineNumber":33,"author":{"gitId":"WJunHong"},"content":"","lastModifiedDate":"2022-03-27"},{"lineNumber":34,"author":{"gitId":"WJunHong"},"content":"        Index index;","lastModifiedDate":"2022-03-27"},{"lineNumber":35,"author":{"gitId":"WJunHong"},"content":"","lastModifiedDate":"2022-03-27"},{"lineNumber":36,"author":{"gitId":"WJunHong"},"content":"        try {","lastModifiedDate":"2022-03-27"},{"lineNumber":37,"author":{"gitId":"WJunHong"},"content":"            index \u003d ParserUtil.parseIndex(argMultimap.getPreamble());","lastModifiedDate":"2022-03-27"},{"lineNumber":38,"author":{"gitId":"WJunHong"},"content":"        } catch (IllegalValueException ive) {","lastModifiedDate":"2022-03-27"},{"lineNumber":39,"author":{"gitId":"WJunHong"},"content":"            throw new ParseException(String.format(MESSAGE_INVALID_COMMAND_FORMAT,","lastModifiedDate":"2022-03-27"},{"lineNumber":40,"author":{"gitId":"WJunHong"},"content":"                    AddPropertyToSellCommand.MESSAGE_USAGE), ive);","lastModifiedDate":"2022-03-27"},{"lineNumber":41,"author":{"gitId":"WJunHong"},"content":"        }","lastModifiedDate":"2022-03-27"},{"lineNumber":42,"author":{"gitId":"WJunHong"},"content":"","lastModifiedDate":"2022-03-27"},{"lineNumber":43,"author":{"gitId":"WJunHong"},"content":"        if (!arePrefixesPresent(argMultimap, PREFIX_ADDRESS, PREFIX_PRICE_RANGE, PREFIX_HOUSE_TYPE, PREFIX_LOCATION)) {","lastModifiedDate":"2022-03-27"},{"lineNumber":44,"author":{"gitId":"janald99"},"content":"            throw new ParseException(String.format(MESSAGE_INVALID_COMMAND_FORMAT,","lastModifiedDate":"2022-04-06"},{"lineNumber":45,"author":{"gitId":"janald99"},"content":"                AddPropertyToSellCommand.MESSAGE_USAGE));","lastModifiedDate":"2022-04-06"},{"lineNumber":46,"author":{"gitId":"WJunHong"},"content":"        }","lastModifiedDate":"2022-03-27"},{"lineNumber":47,"author":{"gitId":"WJunHong"},"content":"        HouseType houseType \u003d ParserUtil.parseHouseType(argMultimap.getValue(PREFIX_HOUSE_TYPE).get());","lastModifiedDate":"2022-03-27"},{"lineNumber":48,"author":{"gitId":"chuashihong"},"content":"        Location location \u003d ParserUtil.parseLocation(argMultimap.getValue(PREFIX_LOCATION).get());","lastModifiedDate":"2022-03-28"},{"lineNumber":49,"author":{"gitId":"WJunHong"},"content":"        Address address \u003d ParserUtil.parseAddress(argMultimap.getValue(PREFIX_ADDRESS).get());","lastModifiedDate":"2022-03-27"},{"lineNumber":50,"author":{"gitId":"WJunHong"},"content":"        PriceRange priceRange \u003d ParserUtil.parsePriceRange(argMultimap.getValue(PREFIX_PRICE_RANGE).get());","lastModifiedDate":"2022-03-27"},{"lineNumber":51,"author":{"gitId":"janald99"},"content":"        PropertyToSell propertyToSell \u003d new PropertyToSell(new House(houseType, location),","lastModifiedDate":"2022-03-31"},{"lineNumber":52,"author":{"gitId":"chuashihong"},"content":"                priceRange, address);","lastModifiedDate":"2022-03-28"},{"lineNumber":53,"author":{"gitId":"WJunHong"},"content":"","lastModifiedDate":"2022-03-27"},{"lineNumber":54,"author":{"gitId":"WJunHong"},"content":"        return new AddPropertyToSellCommand(index, propertyToSell);","lastModifiedDate":"2022-03-27"},{"lineNumber":55,"author":{"gitId":"WJunHong"},"content":"    }","lastModifiedDate":"2022-03-27"},{"lineNumber":56,"author":{"gitId":"WJunHong"},"content":"","lastModifiedDate":"2022-03-27"},{"lineNumber":57,"author":{"gitId":"WJunHong"},"content":"    private static boolean arePrefixesPresent(ArgumentMultimap argumentMultimap, Prefix... prefixes) {","lastModifiedDate":"2022-03-27"},{"lineNumber":58,"author":{"gitId":"WJunHong"},"content":"        return Stream.of(prefixes).allMatch(prefix -\u003e argumentMultimap.getValue(prefix).isPresent());","lastModifiedDate":"2022-03-27"},{"lineNumber":59,"author":{"gitId":"WJunHong"},"content":"    }","lastModifiedDate":"2022-03-27"},{"lineNumber":60,"author":{"gitId":"WJunHong"},"content":"}","lastModifiedDate":"2022-03-27"}],"authorContributionMap":{"janald99":3,"WJunHong":54,"chuashihong":3}},{"path":"src/main/java/seedu/address/logic/parser/AddSellerCommandParser.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2022-03-16"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-03-16"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static seedu.address.commons.core.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2022-03-16"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_NAME;","lastModifiedDate":"2022-03-16"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_PHONE;","lastModifiedDate":"2022-03-16"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_TAG;","lastModifiedDate":"2022-03-16"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-03-16"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import java.util.Set;","lastModifiedDate":"2022-03-16"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import java.util.stream.Stream;","lastModifiedDate":"2022-03-16"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-03-16"},{"lineNumber":11,"author":{"gitId":"cwnm"},"content":"import seedu.address.logic.commands.AddSellerCommand;","lastModifiedDate":"2022-03-16"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import seedu.address.logic.parser.exceptions.ParseException;","lastModifiedDate":"2022-03-16"},{"lineNumber":13,"author":{"gitId":"cwnm"},"content":"import seedu.address.model.client.Appointment;","lastModifiedDate":"2022-03-16"},{"lineNumber":14,"author":{"gitId":"cwnm"},"content":"import seedu.address.model.client.Name;","lastModifiedDate":"2022-03-16"},{"lineNumber":15,"author":{"gitId":"cwnm"},"content":"import seedu.address.model.client.Phone;","lastModifiedDate":"2022-03-16"},{"lineNumber":16,"author":{"gitId":"chuashihong"},"content":"import seedu.address.model.property.NullPropertyToSell;","lastModifiedDate":"2022-03-26"},{"lineNumber":17,"author":{"gitId":"chuashihong"},"content":"import seedu.address.model.property.PropertyToSell;","lastModifiedDate":"2022-03-26"},{"lineNumber":18,"author":{"gitId":"cwnm"},"content":"import seedu.address.model.seller.Seller;","lastModifiedDate":"2022-03-16"},{"lineNumber":19,"author":{"gitId":"-"},"content":"import seedu.address.model.tag.Tag;","lastModifiedDate":"2022-03-16"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-03-16"},{"lineNumber":21,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2022-03-16"},{"lineNumber":22,"author":{"gitId":"-"},"content":" * Parses input arguments and creates a new AddCommand object","lastModifiedDate":"2022-03-16"},{"lineNumber":23,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2022-03-16"},{"lineNumber":24,"author":{"gitId":"cwnm"},"content":"public class AddSellerCommandParser implements Parser\u003cAddSellerCommand\u003e {","lastModifiedDate":"2022-03-16"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-03-16"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2022-03-16"},{"lineNumber":27,"author":{"gitId":"-"},"content":"     * Parses the given {@code String} of arguments in the context of the AddCommand","lastModifiedDate":"2022-03-16"},{"lineNumber":28,"author":{"gitId":"-"},"content":"     * and returns an AddCommand object for execution.","lastModifiedDate":"2022-03-16"},{"lineNumber":29,"author":{"gitId":"-"},"content":"     * @throws ParseException if the user input does not conform the expected format","lastModifiedDate":"2022-03-16"},{"lineNumber":30,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2022-03-16"},{"lineNumber":31,"author":{"gitId":"cwnm"},"content":"    public AddSellerCommand parse(String args) throws ParseException {","lastModifiedDate":"2022-03-16"},{"lineNumber":32,"author":{"gitId":"-"},"content":"        ArgumentMultimap argMultimap \u003d","lastModifiedDate":"2022-03-16"},{"lineNumber":33,"author":{"gitId":"Jacky142857"},"content":"                ArgumentTokenizer.tokenize(args, PREFIX_NAME, PREFIX_PHONE, PREFIX_TAG);","lastModifiedDate":"2022-03-19"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-03-16"},{"lineNumber":35,"author":{"gitId":"Jacky142857"},"content":"        if (!arePrefixesPresent(argMultimap, PREFIX_NAME, PREFIX_PHONE)","lastModifiedDate":"2022-03-19"},{"lineNumber":36,"author":{"gitId":"-"},"content":"                || !argMultimap.getPreamble().isEmpty()) {","lastModifiedDate":"2022-03-16"},{"lineNumber":37,"author":{"gitId":"cwnm"},"content":"            throw new ParseException(String.format(MESSAGE_INVALID_COMMAND_FORMAT, AddSellerCommand.MESSAGE_USAGE));","lastModifiedDate":"2022-03-17"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2022-03-16"},{"lineNumber":39,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-03-16"},{"lineNumber":40,"author":{"gitId":"-"},"content":"        Name name \u003d ParserUtil.parseName(argMultimap.getValue(PREFIX_NAME).get());","lastModifiedDate":"2022-03-16"},{"lineNumber":41,"author":{"gitId":"-"},"content":"        Phone phone \u003d ParserUtil.parsePhone(argMultimap.getValue(PREFIX_PHONE).get());","lastModifiedDate":"2022-03-16"},{"lineNumber":42,"author":{"gitId":"-"},"content":"        Set\u003cTag\u003e tagList \u003d ParserUtil.parseTags(argMultimap.getAllValues(PREFIX_TAG));","lastModifiedDate":"2022-03-16"},{"lineNumber":43,"author":{"gitId":"cwnm"},"content":"        Appointment appointment \u003d new Appointment(\"\");","lastModifiedDate":"2022-03-16"},{"lineNumber":44,"author":{"gitId":"chuashihong"},"content":"        //Todo: improve in future (for add command enhancement)","lastModifiedDate":"2022-03-26"},{"lineNumber":45,"author":{"gitId":"chuashihong"},"content":"        PropertyToSell propertyToSell \u003d NullPropertyToSell.getNullPropertyToSell();","lastModifiedDate":"2022-03-26"},{"lineNumber":46,"author":{"gitId":"chuashihong"},"content":"        Seller seller \u003d new Seller(name, phone, appointment, tagList, propertyToSell);","lastModifiedDate":"2022-03-26"},{"lineNumber":47,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-03-16"},{"lineNumber":48,"author":{"gitId":"cwnm"},"content":"        return new AddSellerCommand(seller);","lastModifiedDate":"2022-03-16"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2022-03-16"},{"lineNumber":50,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-03-16"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2022-03-16"},{"lineNumber":52,"author":{"gitId":"-"},"content":"     * Returns true if none of the prefixes contains empty {@code Optional} values in the given","lastModifiedDate":"2022-03-16"},{"lineNumber":53,"author":{"gitId":"-"},"content":"     * {@code ArgumentMultimap}.","lastModifiedDate":"2022-03-16"},{"lineNumber":54,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2022-03-16"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    private static boolean arePrefixesPresent(ArgumentMultimap argumentMultimap, Prefix... prefixes) {","lastModifiedDate":"2022-03-16"},{"lineNumber":56,"author":{"gitId":"-"},"content":"        return Stream.of(prefixes).allMatch(prefix -\u003e argumentMultimap.getValue(prefix).isPresent());","lastModifiedDate":"2022-03-16"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2022-03-16"},{"lineNumber":58,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-03-16"},{"lineNumber":59,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2022-03-16"}],"authorContributionMap":{"Jacky142857":2,"-":42,"cwnm":10,"chuashihong":5}},{"path":"src/main/java/seedu/address/logic/parser/AddressBookParser.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2016-09-22"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static seedu.address.commons.core.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2017-01-19"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static seedu.address.commons.core.Messages.MESSAGE_UNKNOWN_COMMAND;","lastModifiedDate":"2017-01-19"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.util.regex.Matcher;","lastModifiedDate":"2017-01-19"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import java.util.regex.Pattern;","lastModifiedDate":"2017-01-19"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":9,"author":{"gitId":"WJunHong"},"content":"import seedu.address.logic.commands.AddBuyerCommand;","lastModifiedDate":"2022-03-14"},{"lineNumber":10,"author":{"gitId":"WJunHong"},"content":"import seedu.address.logic.commands.AddPropertyToBuyCommand;","lastModifiedDate":"2022-03-24"},{"lineNumber":11,"author":{"gitId":"WJunHong"},"content":"import seedu.address.logic.commands.AddPropertyToSellCommand;","lastModifiedDate":"2022-03-27"},{"lineNumber":12,"author":{"gitId":"cwnm"},"content":"import seedu.address.logic.commands.AddSellerCommand;","lastModifiedDate":"2022-03-17"},{"lineNumber":13,"author":{"gitId":"Jacky142857"},"content":"import seedu.address.logic.commands.AppointmentBuyerCommand;","lastModifiedDate":"2022-03-27"},{"lineNumber":14,"author":{"gitId":"Jacky142857"},"content":"import seedu.address.logic.commands.AppointmentSellerCommand;","lastModifiedDate":"2022-03-27"},{"lineNumber":15,"author":{"gitId":"cwnm"},"content":"import seedu.address.logic.commands.ClearBuyerCommand;","lastModifiedDate":"2022-03-29"},{"lineNumber":16,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.ClearCommand;","lastModifiedDate":"2022-03-31"},{"lineNumber":17,"author":{"gitId":"cwnm"},"content":"import seedu.address.logic.commands.ClearSellerCommand;","lastModifiedDate":"2022-03-29"},{"lineNumber":18,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.Command;","lastModifiedDate":"2017-01-18"},{"lineNumber":19,"author":{"gitId":"WJunHong"},"content":"import seedu.address.logic.commands.DeleteBuyerCommand;","lastModifiedDate":"2022-03-28"},{"lineNumber":20,"author":{"gitId":"chuashihong"},"content":"import seedu.address.logic.commands.DeleteSellerCommand;","lastModifiedDate":"2022-03-30"},{"lineNumber":21,"author":{"gitId":"cwnm"},"content":"import seedu.address.logic.commands.EditBuyerCommand;","lastModifiedDate":"2022-03-30"},{"lineNumber":22,"author":{"gitId":"chuashihong"},"content":"import seedu.address.logic.commands.EditSellerCommand;","lastModifiedDate":"2022-03-28"},{"lineNumber":23,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.ExitCommand;","lastModifiedDate":"2017-01-18"},{"lineNumber":24,"author":{"gitId":"cwnm"},"content":"import seedu.address.logic.commands.FindBuyerCommand;","lastModifiedDate":"2022-03-28"},{"lineNumber":25,"author":{"gitId":"cwnm"},"content":"import seedu.address.logic.commands.FindSellerCommand;","lastModifiedDate":"2022-03-28"},{"lineNumber":26,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.HelpCommand;","lastModifiedDate":"2017-01-18"},{"lineNumber":27,"author":{"gitId":"cwnm"},"content":"import seedu.address.logic.commands.ListBuyerCommand;","lastModifiedDate":"2022-03-29"},{"lineNumber":28,"author":{"gitId":"cwnm"},"content":"import seedu.address.logic.commands.ListSellerCommand;","lastModifiedDate":"2022-03-29"},{"lineNumber":29,"author":{"gitId":"janald99"},"content":"import seedu.address.logic.commands.MatchCommand;","lastModifiedDate":"2022-03-27"},{"lineNumber":30,"author":{"gitId":"janald99"},"content":"import seedu.address.logic.commands.MatchHouseTypeCommand;","lastModifiedDate":"2022-03-31"},{"lineNumber":31,"author":{"gitId":"janald99"},"content":"import seedu.address.logic.commands.MatchLocationCommand;","lastModifiedDate":"2022-03-31"},{"lineNumber":32,"author":{"gitId":"janald99"},"content":"import seedu.address.logic.commands.MatchPriceRangeCommand;","lastModifiedDate":"2022-03-31"},{"lineNumber":33,"author":{"gitId":"Jacky142857"},"content":"import seedu.address.logic.commands.SortBuyerCommand;","lastModifiedDate":"2022-03-31"},{"lineNumber":34,"author":{"gitId":"Jacky142857"},"content":"import seedu.address.logic.commands.SortSellerCommand;","lastModifiedDate":"2022-03-31"},{"lineNumber":35,"author":{"gitId":"-"},"content":"import seedu.address.logic.parser.exceptions.ParseException;","lastModifiedDate":"2017-03-11"},{"lineNumber":36,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":37,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-24"},{"lineNumber":38,"author":{"gitId":"-"},"content":" * Parses user input.","lastModifiedDate":"2016-08-24"},{"lineNumber":39,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-24"},{"lineNumber":40,"author":{"gitId":"-"},"content":"public class AddressBookParser {","lastModifiedDate":"2017-07-07"},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-24"},{"lineNumber":43,"author":{"gitId":"-"},"content":"     * Used for initial separation of command word and args.","lastModifiedDate":"2016-08-24"},{"lineNumber":44,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-24"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    private static final Pattern BASIC_COMMAND_FORMAT \u003d Pattern.compile(\"(?\u003ccommandWord\u003e\\\\S+)(?\u003carguments\u003e.*)\");","lastModifiedDate":"2016-09-22"},{"lineNumber":46,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-24"},{"lineNumber":48,"author":{"gitId":"-"},"content":"     * Parses user input into command for execution.","lastModifiedDate":"2016-08-24"},{"lineNumber":49,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2016-08-24"},{"lineNumber":50,"author":{"gitId":"-"},"content":"     * @param userInput full user input string","lastModifiedDate":"2016-08-24"},{"lineNumber":51,"author":{"gitId":"-"},"content":"     * @return the command based on the user input","lastModifiedDate":"2016-08-24"},{"lineNumber":52,"author":{"gitId":"-"},"content":"     * @throws ParseException if the user input does not conform the expected format","lastModifiedDate":"2017-03-11"},{"lineNumber":53,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-24"},{"lineNumber":54,"author":{"gitId":"-"},"content":"    public Command parseCommand(String userInput) throws ParseException {","lastModifiedDate":"2017-03-11"},{"lineNumber":55,"author":{"gitId":"-"},"content":"        final Matcher matcher \u003d BASIC_COMMAND_FORMAT.matcher(userInput.trim());","lastModifiedDate":"2016-08-24"},{"lineNumber":56,"author":{"gitId":"-"},"content":"        if (!matcher.matches()) {","lastModifiedDate":"2016-08-24"},{"lineNumber":57,"author":{"gitId":"-"},"content":"            throw new ParseException(String.format(MESSAGE_INVALID_COMMAND_FORMAT, HelpCommand.MESSAGE_USAGE));","lastModifiedDate":"2017-03-11"},{"lineNumber":58,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-08-24"},{"lineNumber":59,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":60,"author":{"gitId":"-"},"content":"        final String commandWord \u003d matcher.group(\"commandWord\");","lastModifiedDate":"2016-08-24"},{"lineNumber":61,"author":{"gitId":"-"},"content":"        final String arguments \u003d matcher.group(\"arguments\");","lastModifiedDate":"2016-08-24"},{"lineNumber":62,"author":{"gitId":"-"},"content":"        switch (commandWord) {","lastModifiedDate":"2016-08-24"},{"lineNumber":63,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":64,"author":{"gitId":"chuashihong"},"content":"        case AddBuyerCommand.COMMAND_WORD:","lastModifiedDate":"2022-03-30"},{"lineNumber":65,"author":{"gitId":"chuashihong"},"content":"            return new AddBuyerCommandParser().parse(arguments);","lastModifiedDate":"2022-03-30"},{"lineNumber":66,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":67,"author":{"gitId":"cwnm"},"content":"        case AddSellerCommand.COMMAND_WORD:","lastModifiedDate":"2022-03-17"},{"lineNumber":68,"author":{"gitId":"cwnm"},"content":"            return new AddSellerCommandParser().parse(arguments);","lastModifiedDate":"2022-03-17"},{"lineNumber":69,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-03-17"},{"lineNumber":70,"author":{"gitId":"cwnm"},"content":"        case EditBuyerCommand.COMMAND_WORD:","lastModifiedDate":"2022-03-30"},{"lineNumber":71,"author":{"gitId":"cwnm"},"content":"            return new EditBuyerCommandParser().parse(arguments);","lastModifiedDate":"2022-03-30"},{"lineNumber":72,"author":{"gitId":"cwnm"},"content":"","lastModifiedDate":"2022-03-30"},{"lineNumber":73,"author":{"gitId":"chuashihong"},"content":"        case EditSellerCommand.COMMAND_WORD:","lastModifiedDate":"2022-03-28"},{"lineNumber":74,"author":{"gitId":"chuashihong"},"content":"            return new EditSellerCommandParser().parse(arguments);","lastModifiedDate":"2022-03-28"},{"lineNumber":75,"author":{"gitId":"chuashihong"},"content":"","lastModifiedDate":"2022-03-23"},{"lineNumber":76,"author":{"gitId":"WJunHong"},"content":"        case DeleteBuyerCommand.COMMAND_WORD:","lastModifiedDate":"2022-03-28"},{"lineNumber":77,"author":{"gitId":"WJunHong"},"content":"            return new DeleteBuyerCommandParser().parse(arguments);","lastModifiedDate":"2022-03-28"},{"lineNumber":78,"author":{"gitId":"WJunHong"},"content":"","lastModifiedDate":"2022-03-28"},{"lineNumber":79,"author":{"gitId":"chuashihong"},"content":"        case DeleteSellerCommand.COMMAND_WORD:","lastModifiedDate":"2022-03-30"},{"lineNumber":80,"author":{"gitId":"chuashihong"},"content":"            return new DeleteSellerCommandParser().parse(arguments);","lastModifiedDate":"2022-03-30"},{"lineNumber":81,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-03-31"},{"lineNumber":82,"author":{"gitId":"-"},"content":"        case ClearCommand.COMMAND_WORD:","lastModifiedDate":"2022-03-31"},{"lineNumber":83,"author":{"gitId":"-"},"content":"            return new ClearCommand();","lastModifiedDate":"2022-03-31"},{"lineNumber":84,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":85,"author":{"gitId":"cwnm"},"content":"        case ClearBuyerCommand.COMMAND_WORD:","lastModifiedDate":"2022-03-29"},{"lineNumber":86,"author":{"gitId":"cwnm"},"content":"            return new ClearBuyerCommand();","lastModifiedDate":"2022-03-29"},{"lineNumber":87,"author":{"gitId":"cwnm"},"content":"","lastModifiedDate":"2022-03-29"},{"lineNumber":88,"author":{"gitId":"cwnm"},"content":"        case ClearSellerCommand.COMMAND_WORD:","lastModifiedDate":"2022-03-29"},{"lineNumber":89,"author":{"gitId":"cwnm"},"content":"            return new ClearSellerCommand();","lastModifiedDate":"2022-03-29"},{"lineNumber":90,"author":{"gitId":"cwnm"},"content":"","lastModifiedDate":"2022-03-29"},{"lineNumber":91,"author":{"gitId":"cwnm"},"content":"        case FindSellerCommand.COMMAND_WORD:","lastModifiedDate":"2022-03-28"},{"lineNumber":92,"author":{"gitId":"cwnm"},"content":"            return new FindSellerCommandParser().parse(arguments);","lastModifiedDate":"2022-03-28"},{"lineNumber":93,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-03-28"},{"lineNumber":94,"author":{"gitId":"cwnm"},"content":"        case FindBuyerCommand.COMMAND_WORD:","lastModifiedDate":"2022-03-28"},{"lineNumber":95,"author":{"gitId":"cwnm"},"content":"            return new FindBuyerCommandParser().parse(arguments);","lastModifiedDate":"2022-03-28"},{"lineNumber":96,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":97,"author":{"gitId":"cwnm"},"content":"        case ListBuyerCommand.COMMAND_WORD:","lastModifiedDate":"2022-03-29"},{"lineNumber":98,"author":{"gitId":"cwnm"},"content":"            return new ListBuyerCommand();","lastModifiedDate":"2022-03-29"},{"lineNumber":99,"author":{"gitId":"cwnm"},"content":"","lastModifiedDate":"2022-03-29"},{"lineNumber":100,"author":{"gitId":"cwnm"},"content":"        case ListSellerCommand.COMMAND_WORD:","lastModifiedDate":"2022-03-29"},{"lineNumber":101,"author":{"gitId":"cwnm"},"content":"            return new ListSellerCommand();","lastModifiedDate":"2022-03-29"},{"lineNumber":102,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-03-29"},{"lineNumber":103,"author":{"gitId":"-"},"content":"        case ExitCommand.COMMAND_WORD:","lastModifiedDate":"2016-08-24"},{"lineNumber":104,"author":{"gitId":"-"},"content":"            return new ExitCommand();","lastModifiedDate":"2016-08-24"},{"lineNumber":105,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":106,"author":{"gitId":"-"},"content":"        case HelpCommand.COMMAND_WORD:","lastModifiedDate":"2016-08-26"},{"lineNumber":107,"author":{"gitId":"-"},"content":"            return new HelpCommand();","lastModifiedDate":"2016-08-24"},{"lineNumber":108,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-14"},{"lineNumber":109,"author":{"gitId":"Jacky142857"},"content":"        case SortBuyerCommand.COMMAND_WORD:","lastModifiedDate":"2022-03-31"},{"lineNumber":110,"author":{"gitId":"Jacky142857"},"content":"            return new SortBuyerCommandParser().parse(arguments);","lastModifiedDate":"2022-03-31"},{"lineNumber":111,"author":{"gitId":"Jacky142857"},"content":"","lastModifiedDate":"2022-03-31"},{"lineNumber":112,"author":{"gitId":"Jacky142857"},"content":"        case SortSellerCommand.COMMAND_WORD:","lastModifiedDate":"2022-03-31"},{"lineNumber":113,"author":{"gitId":"Jacky142857"},"content":"            return new SortSellerCommandParser().parse(arguments);","lastModifiedDate":"2022-03-31"},{"lineNumber":114,"author":{"gitId":"Jacky142857"},"content":"","lastModifiedDate":"2022-03-31"},{"lineNumber":115,"author":{"gitId":"Jacky142857"},"content":"        case AppointmentBuyerCommand.COMMAND_WORD:","lastModifiedDate":"2022-03-27"},{"lineNumber":116,"author":{"gitId":"Jacky142857"},"content":"            return new AppointmentBuyerCommandParser().parse(arguments);","lastModifiedDate":"2022-03-27"},{"lineNumber":117,"author":{"gitId":"Jacky142857"},"content":"","lastModifiedDate":"2022-03-27"},{"lineNumber":118,"author":{"gitId":"Jacky142857"},"content":"        case AppointmentSellerCommand.COMMAND_WORD:","lastModifiedDate":"2022-03-27"},{"lineNumber":119,"author":{"gitId":"Jacky142857"},"content":"            return new AppointmentSellerCommandParser().parse(arguments);","lastModifiedDate":"2022-03-27"},{"lineNumber":120,"author":{"gitId":"Jacky142857"},"content":"","lastModifiedDate":"2022-03-11"},{"lineNumber":121,"author":{"gitId":"WJunHong"},"content":"        case AddPropertyToBuyCommand.COMMAND_WORD:","lastModifiedDate":"2022-03-24"},{"lineNumber":122,"author":{"gitId":"WJunHong"},"content":"            return new AddPropertyToBuyCommandParser().parse(arguments);","lastModifiedDate":"2022-03-24"},{"lineNumber":123,"author":{"gitId":"WJunHong"},"content":"","lastModifiedDate":"2022-03-24"},{"lineNumber":124,"author":{"gitId":"WJunHong"},"content":"        case AddPropertyToSellCommand.COMMAND_WORD:","lastModifiedDate":"2022-03-27"},{"lineNumber":125,"author":{"gitId":"WJunHong"},"content":"            return new AddPropertyToSellCommandParser().parse(arguments);","lastModifiedDate":"2022-03-27"},{"lineNumber":126,"author":{"gitId":"WJunHong"},"content":"","lastModifiedDate":"2022-03-27"},{"lineNumber":127,"author":{"gitId":"janald99"},"content":"        case MatchCommand.COMMAND_WORD:","lastModifiedDate":"2022-03-27"},{"lineNumber":128,"author":{"gitId":"janald99"},"content":"            return new MatchCommandParser().parse(arguments);","lastModifiedDate":"2022-03-27"},{"lineNumber":129,"author":{"gitId":"janald99"},"content":"","lastModifiedDate":"2022-03-27"},{"lineNumber":130,"author":{"gitId":"janald99"},"content":"        case MatchHouseTypeCommand.COMMAND_WORD:","lastModifiedDate":"2022-03-31"},{"lineNumber":131,"author":{"gitId":"janald99"},"content":"            return new MatchHouseTypeCommandParser().parse(arguments);","lastModifiedDate":"2022-03-31"},{"lineNumber":132,"author":{"gitId":"janald99"},"content":"","lastModifiedDate":"2022-03-31"},{"lineNumber":133,"author":{"gitId":"janald99"},"content":"        case MatchLocationCommand.COMMAND_WORD:","lastModifiedDate":"2022-03-31"},{"lineNumber":134,"author":{"gitId":"janald99"},"content":"            return new MatchLocationCommandParser().parse(arguments);","lastModifiedDate":"2022-03-31"},{"lineNumber":135,"author":{"gitId":"janald99"},"content":"","lastModifiedDate":"2022-03-31"},{"lineNumber":136,"author":{"gitId":"janald99"},"content":"        case MatchPriceRangeCommand.COMMAND_WORD:","lastModifiedDate":"2022-03-31"},{"lineNumber":137,"author":{"gitId":"janald99"},"content":"            return new MatchPriceRangeCommandParser().parse(arguments);","lastModifiedDate":"2022-03-31"},{"lineNumber":138,"author":{"gitId":"janald99"},"content":"","lastModifiedDate":"2022-03-31"},{"lineNumber":139,"author":{"gitId":"-"},"content":"        default:","lastModifiedDate":"2016-08-26"},{"lineNumber":140,"author":{"gitId":"-"},"content":"            throw new ParseException(MESSAGE_UNKNOWN_COMMAND);","lastModifiedDate":"2017-03-11"},{"lineNumber":141,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-08-24"},{"lineNumber":142,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":143,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":144,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-24"}],"authorContributionMap":{"janald99":16,"WJunHong":13,"Jacky142857":16,"-":62,"cwnm":28,"chuashihong":9}},{"path":"src/main/java/seedu/address/logic/parser/AppointmentBuyerCommandParser.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"Jacky142857"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2022-03-27"},{"lineNumber":2,"author":{"gitId":"Jacky142857"},"content":"","lastModifiedDate":"2022-03-27"},{"lineNumber":3,"author":{"gitId":"Jacky142857"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2022-03-27"},{"lineNumber":4,"author":{"gitId":"Jacky142857"},"content":"import static seedu.address.commons.core.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2022-03-27"},{"lineNumber":5,"author":{"gitId":"Jacky142857"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_APPOINTMENT;","lastModifiedDate":"2022-03-27"},{"lineNumber":6,"author":{"gitId":"Jacky142857"},"content":"","lastModifiedDate":"2022-03-27"},{"lineNumber":7,"author":{"gitId":"Jacky142857"},"content":"import seedu.address.commons.core.index.Index;","lastModifiedDate":"2022-03-27"},{"lineNumber":8,"author":{"gitId":"Jacky142857"},"content":"import seedu.address.commons.exceptions.IllegalValueException;","lastModifiedDate":"2022-03-27"},{"lineNumber":9,"author":{"gitId":"Jacky142857"},"content":"import seedu.address.logic.commands.AppointmentBuyerCommand;","lastModifiedDate":"2022-03-27"},{"lineNumber":10,"author":{"gitId":"Jacky142857"},"content":"import seedu.address.logic.parser.exceptions.ParseException;","lastModifiedDate":"2022-03-27"},{"lineNumber":11,"author":{"gitId":"Jacky142857"},"content":"import seedu.address.model.client.Appointment;","lastModifiedDate":"2022-03-27"},{"lineNumber":12,"author":{"gitId":"Jacky142857"},"content":"","lastModifiedDate":"2022-03-27"},{"lineNumber":13,"author":{"gitId":"Jacky142857"},"content":"public class AppointmentBuyerCommandParser implements Parser\u003cAppointmentBuyerCommand\u003e {","lastModifiedDate":"2022-03-27"},{"lineNumber":14,"author":{"gitId":"Jacky142857"},"content":"    /**","lastModifiedDate":"2022-03-27"},{"lineNumber":15,"author":{"gitId":"Jacky142857"},"content":"     * Parses the given {@code String} of arguments in the context of the {@code AppointmentCommand}","lastModifiedDate":"2022-03-27"},{"lineNumber":16,"author":{"gitId":"Jacky142857"},"content":"     * and returns a {@code AppointmentCommand} object for execution.","lastModifiedDate":"2022-03-27"},{"lineNumber":17,"author":{"gitId":"Jacky142857"},"content":"     */","lastModifiedDate":"2022-03-27"},{"lineNumber":18,"author":{"gitId":"Jacky142857"},"content":"    public AppointmentBuyerCommand parse(String args) throws ParseException {","lastModifiedDate":"2022-03-27"},{"lineNumber":19,"author":{"gitId":"Jacky142857"},"content":"        requireNonNull(args);","lastModifiedDate":"2022-03-27"},{"lineNumber":20,"author":{"gitId":"Jacky142857"},"content":"        ArgumentMultimap argMultimap \u003d ArgumentTokenizer.tokenize(args, PREFIX_APPOINTMENT);","lastModifiedDate":"2022-03-27"},{"lineNumber":21,"author":{"gitId":"Jacky142857"},"content":"","lastModifiedDate":"2022-03-27"},{"lineNumber":22,"author":{"gitId":"Jacky142857"},"content":"        Index index;","lastModifiedDate":"2022-03-27"},{"lineNumber":23,"author":{"gitId":"Jacky142857"},"content":"        try {","lastModifiedDate":"2022-03-27"},{"lineNumber":24,"author":{"gitId":"Jacky142857"},"content":"            index \u003d ParserUtil.parseIndex(argMultimap.getPreamble());","lastModifiedDate":"2022-03-27"},{"lineNumber":25,"author":{"gitId":"Jacky142857"},"content":"        } catch (IllegalValueException ive) {","lastModifiedDate":"2022-03-27"},{"lineNumber":26,"author":{"gitId":"Jacky142857"},"content":"            throw new ParseException(String.format(MESSAGE_INVALID_COMMAND_FORMAT,","lastModifiedDate":"2022-03-27"},{"lineNumber":27,"author":{"gitId":"Jacky142857"},"content":"                    AppointmentBuyerCommand.MESSAGE_USAGE), ive);","lastModifiedDate":"2022-03-27"},{"lineNumber":28,"author":{"gitId":"Jacky142857"},"content":"        }","lastModifiedDate":"2022-03-27"},{"lineNumber":29,"author":{"gitId":"Jacky142857"},"content":"","lastModifiedDate":"2022-03-27"},{"lineNumber":30,"author":{"gitId":"Jacky142857"},"content":"        if (!argMultimap.getValue(PREFIX_APPOINTMENT).isPresent()) {","lastModifiedDate":"2022-03-27"},{"lineNumber":31,"author":{"gitId":"Jacky142857"},"content":"            throw new ParseException(AppointmentBuyerCommand.MESSAGE_EMPTY_INPUT_DATE);","lastModifiedDate":"2022-03-27"},{"lineNumber":32,"author":{"gitId":"Jacky142857"},"content":"        }","lastModifiedDate":"2022-03-27"},{"lineNumber":33,"author":{"gitId":"Jacky142857"},"content":"","lastModifiedDate":"2022-03-27"},{"lineNumber":34,"author":{"gitId":"Jacky142857"},"content":"        Appointment appointment \u003d ParserUtil.parseAppointment(argMultimap.getValue(PREFIX_APPOINTMENT).get());","lastModifiedDate":"2022-03-27"},{"lineNumber":35,"author":{"gitId":"Jacky142857"},"content":"        if (appointment.appointmentTime \u003d\u003d null) {","lastModifiedDate":"2022-03-31"},{"lineNumber":36,"author":{"gitId":"Jacky142857"},"content":"            return new AppointmentBuyerCommand(index, appointment);","lastModifiedDate":"2022-03-31"},{"lineNumber":37,"author":{"gitId":"Jacky142857"},"content":"        }","lastModifiedDate":"2022-03-31"},{"lineNumber":38,"author":{"gitId":"Jacky142857"},"content":"        if (!appointment.isLaterThanCurrentTime()) {","lastModifiedDate":"2022-03-27"},{"lineNumber":39,"author":{"gitId":"Jacky142857"},"content":"            throw new ParseException(AppointmentBuyerCommand.MESSAGE_TIME_IN_PAST);","lastModifiedDate":"2022-03-27"},{"lineNumber":40,"author":{"gitId":"Jacky142857"},"content":"        }","lastModifiedDate":"2022-03-27"},{"lineNumber":41,"author":{"gitId":"Jacky142857"},"content":"        return new AppointmentBuyerCommand(index, appointment);","lastModifiedDate":"2022-03-27"},{"lineNumber":42,"author":{"gitId":"Jacky142857"},"content":"    }","lastModifiedDate":"2022-03-27"},{"lineNumber":43,"author":{"gitId":"Jacky142857"},"content":"}","lastModifiedDate":"2022-03-27"}],"authorContributionMap":{"Jacky142857":43}},{"path":"src/main/java/seedu/address/logic/parser/AppointmentSellerCommandParser.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"Jacky142857"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2022-03-27"},{"lineNumber":2,"author":{"gitId":"Jacky142857"},"content":"","lastModifiedDate":"2022-03-27"},{"lineNumber":3,"author":{"gitId":"Jacky142857"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2022-03-27"},{"lineNumber":4,"author":{"gitId":"Jacky142857"},"content":"import static seedu.address.commons.core.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2022-03-27"},{"lineNumber":5,"author":{"gitId":"Jacky142857"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_APPOINTMENT;","lastModifiedDate":"2022-03-27"},{"lineNumber":6,"author":{"gitId":"Jacky142857"},"content":"","lastModifiedDate":"2022-03-27"},{"lineNumber":7,"author":{"gitId":"Jacky142857"},"content":"import seedu.address.commons.core.index.Index;","lastModifiedDate":"2022-03-27"},{"lineNumber":8,"author":{"gitId":"Jacky142857"},"content":"import seedu.address.commons.exceptions.IllegalValueException;","lastModifiedDate":"2022-03-27"},{"lineNumber":9,"author":{"gitId":"Jacky142857"},"content":"import seedu.address.logic.commands.AppointmentSellerCommand;","lastModifiedDate":"2022-03-27"},{"lineNumber":10,"author":{"gitId":"Jacky142857"},"content":"import seedu.address.logic.parser.exceptions.ParseException;","lastModifiedDate":"2022-03-27"},{"lineNumber":11,"author":{"gitId":"Jacky142857"},"content":"import seedu.address.model.client.Appointment;","lastModifiedDate":"2022-03-27"},{"lineNumber":12,"author":{"gitId":"Jacky142857"},"content":"","lastModifiedDate":"2022-03-27"},{"lineNumber":13,"author":{"gitId":"Jacky142857"},"content":"public class AppointmentSellerCommandParser implements Parser\u003cAppointmentSellerCommand\u003e {","lastModifiedDate":"2022-03-27"},{"lineNumber":14,"author":{"gitId":"Jacky142857"},"content":"    /**","lastModifiedDate":"2022-03-27"},{"lineNumber":15,"author":{"gitId":"Jacky142857"},"content":"     * Parses the given {@code String} of arguments in the context of the {@code AppointmentCommand}","lastModifiedDate":"2022-03-27"},{"lineNumber":16,"author":{"gitId":"Jacky142857"},"content":"     * and returns a {@code AppointmentCommand} object for execution.","lastModifiedDate":"2022-03-27"},{"lineNumber":17,"author":{"gitId":"Jacky142857"},"content":"     */","lastModifiedDate":"2022-03-27"},{"lineNumber":18,"author":{"gitId":"Jacky142857"},"content":"    public AppointmentSellerCommand parse(String args) throws ParseException {","lastModifiedDate":"2022-03-27"},{"lineNumber":19,"author":{"gitId":"Jacky142857"},"content":"        requireNonNull(args);","lastModifiedDate":"2022-03-27"},{"lineNumber":20,"author":{"gitId":"Jacky142857"},"content":"        ArgumentMultimap argMultimap \u003d ArgumentTokenizer.tokenize(args, PREFIX_APPOINTMENT);","lastModifiedDate":"2022-03-27"},{"lineNumber":21,"author":{"gitId":"Jacky142857"},"content":"","lastModifiedDate":"2022-03-27"},{"lineNumber":22,"author":{"gitId":"Jacky142857"},"content":"        Index index;","lastModifiedDate":"2022-03-27"},{"lineNumber":23,"author":{"gitId":"Jacky142857"},"content":"        try {","lastModifiedDate":"2022-03-27"},{"lineNumber":24,"author":{"gitId":"Jacky142857"},"content":"            index \u003d ParserUtil.parseIndex(argMultimap.getPreamble());","lastModifiedDate":"2022-03-27"},{"lineNumber":25,"author":{"gitId":"Jacky142857"},"content":"        } catch (IllegalValueException ive) {","lastModifiedDate":"2022-03-27"},{"lineNumber":26,"author":{"gitId":"Jacky142857"},"content":"            throw new ParseException(String.format(MESSAGE_INVALID_COMMAND_FORMAT,","lastModifiedDate":"2022-03-27"},{"lineNumber":27,"author":{"gitId":"Jacky142857"},"content":"                    AppointmentSellerCommand.MESSAGE_USAGE), ive);","lastModifiedDate":"2022-03-27"},{"lineNumber":28,"author":{"gitId":"Jacky142857"},"content":"        }","lastModifiedDate":"2022-03-27"},{"lineNumber":29,"author":{"gitId":"Jacky142857"},"content":"","lastModifiedDate":"2022-03-27"},{"lineNumber":30,"author":{"gitId":"Jacky142857"},"content":"        if (!argMultimap.getValue(PREFIX_APPOINTMENT).isPresent()) {","lastModifiedDate":"2022-03-27"},{"lineNumber":31,"author":{"gitId":"Jacky142857"},"content":"            throw new ParseException(AppointmentSellerCommand.MESSAGE_EMPTY_INPUT_DATE);","lastModifiedDate":"2022-03-27"},{"lineNumber":32,"author":{"gitId":"Jacky142857"},"content":"        }","lastModifiedDate":"2022-03-27"},{"lineNumber":33,"author":{"gitId":"Jacky142857"},"content":"","lastModifiedDate":"2022-03-27"},{"lineNumber":34,"author":{"gitId":"Jacky142857"},"content":"        Appointment appointment \u003d ParserUtil.parseAppointment(argMultimap.getValue(PREFIX_APPOINTMENT).get());","lastModifiedDate":"2022-03-27"},{"lineNumber":35,"author":{"gitId":"Jacky142857"},"content":"        if (appointment.appointmentTime \u003d\u003d null) {","lastModifiedDate":"2022-03-31"},{"lineNumber":36,"author":{"gitId":"Jacky142857"},"content":"            return new AppointmentSellerCommand(index, appointment);","lastModifiedDate":"2022-03-31"},{"lineNumber":37,"author":{"gitId":"Jacky142857"},"content":"        }","lastModifiedDate":"2022-03-31"},{"lineNumber":38,"author":{"gitId":"Jacky142857"},"content":"        if (!appointment.isLaterThanCurrentTime()) {","lastModifiedDate":"2022-03-27"},{"lineNumber":39,"author":{"gitId":"Jacky142857"},"content":"            throw new ParseException(AppointmentSellerCommand.MESSAGE_TIME_IN_PAST);","lastModifiedDate":"2022-03-27"},{"lineNumber":40,"author":{"gitId":"Jacky142857"},"content":"        }","lastModifiedDate":"2022-03-27"},{"lineNumber":41,"author":{"gitId":"Jacky142857"},"content":"        return new AppointmentSellerCommand(index, appointment);","lastModifiedDate":"2022-03-27"},{"lineNumber":42,"author":{"gitId":"Jacky142857"},"content":"    }","lastModifiedDate":"2022-03-27"},{"lineNumber":43,"author":{"gitId":"Jacky142857"},"content":"}","lastModifiedDate":"2022-03-27"}],"authorContributionMap":{"Jacky142857":43}},{"path":"src/main/java/seedu/address/logic/parser/CliSyntax.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2017-02-11"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-11"},{"lineNumber":3,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-02-11"},{"lineNumber":4,"author":{"gitId":"-"},"content":" * Contains Command Line Interface (CLI) syntax definitions common to multiple commands","lastModifiedDate":"2017-02-11"},{"lineNumber":5,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-02-11"},{"lineNumber":6,"author":{"gitId":"-"},"content":"public class CliSyntax {","lastModifiedDate":"2017-02-11"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-11"},{"lineNumber":8,"author":{"gitId":"-"},"content":"    /* Prefix definitions */","lastModifiedDate":"2017-02-11"},{"lineNumber":9,"author":{"gitId":"-"},"content":"    public static final Prefix PREFIX_NAME \u003d new Prefix(\"n/\");","lastModifiedDate":"2017-06-06"},{"lineNumber":10,"author":{"gitId":"-"},"content":"    public static final Prefix PREFIX_PHONE \u003d new Prefix(\"p/\");","lastModifiedDate":"2017-02-11"},{"lineNumber":11,"author":{"gitId":"-"},"content":"    public static final Prefix PREFIX_TAG \u003d new Prefix(\"t/\");","lastModifiedDate":"2017-02-11"},{"lineNumber":12,"author":{"gitId":"Jacky142857"},"content":"    public static final Prefix PREFIX_APPOINTMENT \u003d new Prefix(\"time/\");","lastModifiedDate":"2022-03-11"},{"lineNumber":13,"author":{"gitId":"WJunHong"},"content":"    public static final Prefix PREFIX_HOUSE_TYPE \u003d new Prefix(\"h/\");","lastModifiedDate":"2022-03-24"},{"lineNumber":14,"author":{"gitId":"WJunHong"},"content":"    public static final Prefix PREFIX_LOCATION \u003d new Prefix(\"l/\");","lastModifiedDate":"2022-03-24"},{"lineNumber":15,"author":{"gitId":"WJunHong"},"content":"    public static final Prefix PREFIX_PRICE_RANGE \u003d new Prefix(\"pr/\");","lastModifiedDate":"2022-03-24"},{"lineNumber":16,"author":{"gitId":"WJunHong"},"content":"    public static final Prefix PREFIX_ADDRESS \u003d new Prefix(\"a/\");","lastModifiedDate":"2022-03-27"},{"lineNumber":17,"author":{"gitId":"Jacky142857"},"content":"    public static final Prefix PREFIX_ORDER \u003d new Prefix(\"o/\");","lastModifiedDate":"2022-03-31"},{"lineNumber":18,"author":{"gitId":"Jacky142857"},"content":"    public static final Prefix PREFIX_COMPARE \u003d new Prefix(\"by/\");","lastModifiedDate":"2022-03-31"},{"lineNumber":19,"author":{"gitId":"Jacky142857"},"content":"    public static final Prefix PREFIX_CANCEL \u003d new Prefix(\"cancel\");","lastModifiedDate":"2022-03-31"},{"lineNumber":20,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-02-11"}],"authorContributionMap":{"WJunHong":4,"Jacky142857":4,"-":12}},{"path":"src/main/java/seedu/address/logic/parser/DeleteBuyerCommandParser.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2022-03-28"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-03-28"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static seedu.address.commons.core.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2022-03-28"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-03-28"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.index.Index;","lastModifiedDate":"2022-03-28"},{"lineNumber":6,"author":{"gitId":"WJunHong"},"content":"import seedu.address.logic.commands.DeleteBuyerCommand;","lastModifiedDate":"2022-03-28"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import seedu.address.logic.parser.exceptions.ParseException;","lastModifiedDate":"2022-03-28"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-03-28"},{"lineNumber":9,"author":{"gitId":"WJunHong"},"content":"public class DeleteBuyerCommandParser implements Parser\u003cDeleteBuyerCommand\u003e {","lastModifiedDate":"2022-03-29"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-03-28"},{"lineNumber":11,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2022-03-28"},{"lineNumber":12,"author":{"gitId":"WJunHong"},"content":"     * Parses the given {@code String} of arguments in the context of the DeleteBuyerCommand","lastModifiedDate":"2022-03-28"},{"lineNumber":13,"author":{"gitId":"WJunHong"},"content":"     * and returns a DeleteBuyerCommand object for execution.","lastModifiedDate":"2022-03-28"},{"lineNumber":14,"author":{"gitId":"-"},"content":"     * @throws ParseException if the user input does not conform the expected format","lastModifiedDate":"2022-03-28"},{"lineNumber":15,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2022-03-28"},{"lineNumber":16,"author":{"gitId":"WJunHong"},"content":"    public DeleteBuyerCommand parse(String args) throws ParseException {","lastModifiedDate":"2022-03-28"},{"lineNumber":17,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2022-03-28"},{"lineNumber":18,"author":{"gitId":"-"},"content":"            Index index \u003d ParserUtil.parseIndex(args);","lastModifiedDate":"2022-03-28"},{"lineNumber":19,"author":{"gitId":"WJunHong"},"content":"            return new DeleteBuyerCommand(index);","lastModifiedDate":"2022-03-28"},{"lineNumber":20,"author":{"gitId":"-"},"content":"        } catch (ParseException pe) {","lastModifiedDate":"2022-03-28"},{"lineNumber":21,"author":{"gitId":"-"},"content":"            throw new ParseException(","lastModifiedDate":"2022-03-28"},{"lineNumber":22,"author":{"gitId":"WJunHong"},"content":"                    String.format(MESSAGE_INVALID_COMMAND_FORMAT, DeleteBuyerCommand.MESSAGE_USAGE), pe);","lastModifiedDate":"2022-03-28"},{"lineNumber":23,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2022-03-28"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2022-03-28"},{"lineNumber":25,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2022-03-28"}],"authorContributionMap":{"WJunHong":7,"-":18}},{"path":"src/main/java/seedu/address/logic/parser/DeleteSellerCommandParser.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"chuashihong"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2022-03-30"},{"lineNumber":2,"author":{"gitId":"chuashihong"},"content":"","lastModifiedDate":"2022-03-30"},{"lineNumber":3,"author":{"gitId":"chuashihong"},"content":"import static seedu.address.commons.core.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2022-03-30"},{"lineNumber":4,"author":{"gitId":"chuashihong"},"content":"","lastModifiedDate":"2022-03-30"},{"lineNumber":5,"author":{"gitId":"chuashihong"},"content":"import seedu.address.commons.core.index.Index;","lastModifiedDate":"2022-03-30"},{"lineNumber":6,"author":{"gitId":"chuashihong"},"content":"import seedu.address.logic.commands.DeleteSellerCommand;","lastModifiedDate":"2022-03-30"},{"lineNumber":7,"author":{"gitId":"chuashihong"},"content":"import seedu.address.logic.parser.exceptions.ParseException;","lastModifiedDate":"2022-03-30"},{"lineNumber":8,"author":{"gitId":"chuashihong"},"content":"","lastModifiedDate":"2022-03-30"},{"lineNumber":9,"author":{"gitId":"chuashihong"},"content":"public class DeleteSellerCommandParser implements Parser\u003cDeleteSellerCommand\u003e {","lastModifiedDate":"2022-03-30"},{"lineNumber":10,"author":{"gitId":"chuashihong"},"content":"","lastModifiedDate":"2022-03-30"},{"lineNumber":11,"author":{"gitId":"chuashihong"},"content":"    /**","lastModifiedDate":"2022-03-30"},{"lineNumber":12,"author":{"gitId":"chuashihong"},"content":"     * Parses the given {@code String} of arguments in the context of the DeleteBuyerCommand","lastModifiedDate":"2022-03-30"},{"lineNumber":13,"author":{"gitId":"chuashihong"},"content":"     * and returns a DeleteBuyerCommand object for execution.","lastModifiedDate":"2022-03-30"},{"lineNumber":14,"author":{"gitId":"chuashihong"},"content":"     * @throws ParseException if the user input does not conform the expected format","lastModifiedDate":"2022-03-30"},{"lineNumber":15,"author":{"gitId":"chuashihong"},"content":"     */","lastModifiedDate":"2022-03-30"},{"lineNumber":16,"author":{"gitId":"chuashihong"},"content":"    public DeleteSellerCommand parse(String args) throws ParseException {","lastModifiedDate":"2022-03-30"},{"lineNumber":17,"author":{"gitId":"chuashihong"},"content":"        try {","lastModifiedDate":"2022-03-30"},{"lineNumber":18,"author":{"gitId":"chuashihong"},"content":"            Index index \u003d ParserUtil.parseIndex(args);","lastModifiedDate":"2022-03-30"},{"lineNumber":19,"author":{"gitId":"chuashihong"},"content":"            return new DeleteSellerCommand(index);","lastModifiedDate":"2022-03-30"},{"lineNumber":20,"author":{"gitId":"chuashihong"},"content":"        } catch (ParseException pe) {","lastModifiedDate":"2022-03-30"},{"lineNumber":21,"author":{"gitId":"chuashihong"},"content":"            throw new ParseException(","lastModifiedDate":"2022-03-30"},{"lineNumber":22,"author":{"gitId":"chuashihong"},"content":"                    String.format(MESSAGE_INVALID_COMMAND_FORMAT, DeleteSellerCommand.MESSAGE_USAGE), pe);","lastModifiedDate":"2022-03-30"},{"lineNumber":23,"author":{"gitId":"chuashihong"},"content":"        }","lastModifiedDate":"2022-03-30"},{"lineNumber":24,"author":{"gitId":"chuashihong"},"content":"    }","lastModifiedDate":"2022-03-30"},{"lineNumber":25,"author":{"gitId":"chuashihong"},"content":"}","lastModifiedDate":"2022-03-30"}],"authorContributionMap":{"chuashihong":25}},{"path":"src/main/java/seedu/address/logic/parser/EditBuyerCommandParser.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"cwnm"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2022-03-30"},{"lineNumber":2,"author":{"gitId":"cwnm"},"content":"","lastModifiedDate":"2022-03-30"},{"lineNumber":3,"author":{"gitId":"cwnm"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2022-03-30"},{"lineNumber":4,"author":{"gitId":"cwnm"},"content":"import static seedu.address.commons.core.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2022-03-30"},{"lineNumber":5,"author":{"gitId":"cwnm"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_APPOINTMENT;","lastModifiedDate":"2022-03-30"},{"lineNumber":6,"author":{"gitId":"cwnm"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_HOUSE_TYPE;","lastModifiedDate":"2022-03-30"},{"lineNumber":7,"author":{"gitId":"cwnm"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_LOCATION;","lastModifiedDate":"2022-03-30"},{"lineNumber":8,"author":{"gitId":"cwnm"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_NAME;","lastModifiedDate":"2022-03-30"},{"lineNumber":9,"author":{"gitId":"cwnm"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_PHONE;","lastModifiedDate":"2022-03-30"},{"lineNumber":10,"author":{"gitId":"cwnm"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_PRICE_RANGE;","lastModifiedDate":"2022-03-30"},{"lineNumber":11,"author":{"gitId":"cwnm"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_TAG;","lastModifiedDate":"2022-03-30"},{"lineNumber":12,"author":{"gitId":"cwnm"},"content":"","lastModifiedDate":"2022-03-30"},{"lineNumber":13,"author":{"gitId":"cwnm"},"content":"import java.util.Collection;","lastModifiedDate":"2022-03-30"},{"lineNumber":14,"author":{"gitId":"cwnm"},"content":"import java.util.Collections;","lastModifiedDate":"2022-03-30"},{"lineNumber":15,"author":{"gitId":"cwnm"},"content":"import java.util.Optional;","lastModifiedDate":"2022-03-30"},{"lineNumber":16,"author":{"gitId":"cwnm"},"content":"import java.util.Set;","lastModifiedDate":"2022-03-30"},{"lineNumber":17,"author":{"gitId":"cwnm"},"content":"","lastModifiedDate":"2022-03-30"},{"lineNumber":18,"author":{"gitId":"cwnm"},"content":"import seedu.address.commons.core.index.Index;","lastModifiedDate":"2022-03-30"},{"lineNumber":19,"author":{"gitId":"cwnm"},"content":"import seedu.address.logic.commands.EditBuyerCommand;","lastModifiedDate":"2022-03-30"},{"lineNumber":20,"author":{"gitId":"cwnm"},"content":"import seedu.address.logic.commands.EditBuyerCommand.EditBuyerDescriptor;","lastModifiedDate":"2022-03-30"},{"lineNumber":21,"author":{"gitId":"cwnm"},"content":"import seedu.address.logic.parser.exceptions.ParseException;","lastModifiedDate":"2022-03-30"},{"lineNumber":22,"author":{"gitId":"cwnm"},"content":"import seedu.address.model.tag.Tag;","lastModifiedDate":"2022-03-30"},{"lineNumber":23,"author":{"gitId":"cwnm"},"content":"","lastModifiedDate":"2022-03-30"},{"lineNumber":24,"author":{"gitId":"cwnm"},"content":"/**","lastModifiedDate":"2022-03-30"},{"lineNumber":25,"author":{"gitId":"cwnm"},"content":" * Parses input arguments and creates a new EditCommand object","lastModifiedDate":"2022-03-30"},{"lineNumber":26,"author":{"gitId":"cwnm"},"content":" */","lastModifiedDate":"2022-03-30"},{"lineNumber":27,"author":{"gitId":"cwnm"},"content":"public class EditBuyerCommandParser implements Parser\u003cEditBuyerCommand\u003e {","lastModifiedDate":"2022-03-30"},{"lineNumber":28,"author":{"gitId":"cwnm"},"content":"","lastModifiedDate":"2022-03-30"},{"lineNumber":29,"author":{"gitId":"cwnm"},"content":"    /**","lastModifiedDate":"2022-03-30"},{"lineNumber":30,"author":{"gitId":"cwnm"},"content":"     * Parses the given {@code String} of arguments in the context of the EditCommand","lastModifiedDate":"2022-03-30"},{"lineNumber":31,"author":{"gitId":"cwnm"},"content":"     * and returns an EditCommand object for execution.","lastModifiedDate":"2022-03-30"},{"lineNumber":32,"author":{"gitId":"cwnm"},"content":"     * @throws ParseException if the user input does not conform the expected format","lastModifiedDate":"2022-03-30"},{"lineNumber":33,"author":{"gitId":"cwnm"},"content":"     */","lastModifiedDate":"2022-03-30"},{"lineNumber":34,"author":{"gitId":"cwnm"},"content":"    public EditBuyerCommand parse(String args) throws ParseException {","lastModifiedDate":"2022-03-30"},{"lineNumber":35,"author":{"gitId":"cwnm"},"content":"        requireNonNull(args);","lastModifiedDate":"2022-03-30"},{"lineNumber":36,"author":{"gitId":"cwnm"},"content":"        ArgumentMultimap argMultimap \u003d","lastModifiedDate":"2022-03-30"},{"lineNumber":37,"author":{"gitId":"cwnm"},"content":"                ArgumentTokenizer.tokenize(args, PREFIX_NAME, PREFIX_PHONE, PREFIX_TAG,","lastModifiedDate":"2022-03-30"},{"lineNumber":38,"author":{"gitId":"cwnm"},"content":"                        PREFIX_APPOINTMENT, PREFIX_HOUSE_TYPE, PREFIX_LOCATION, PREFIX_PRICE_RANGE);","lastModifiedDate":"2022-03-30"},{"lineNumber":39,"author":{"gitId":"cwnm"},"content":"","lastModifiedDate":"2022-03-30"},{"lineNumber":40,"author":{"gitId":"cwnm"},"content":"        Index index;","lastModifiedDate":"2022-03-30"},{"lineNumber":41,"author":{"gitId":"cwnm"},"content":"","lastModifiedDate":"2022-03-30"},{"lineNumber":42,"author":{"gitId":"cwnm"},"content":"        try {","lastModifiedDate":"2022-03-30"},{"lineNumber":43,"author":{"gitId":"cwnm"},"content":"            index \u003d ParserUtil.parseIndex(argMultimap.getPreamble());","lastModifiedDate":"2022-03-30"},{"lineNumber":44,"author":{"gitId":"cwnm"},"content":"        } catch (ParseException pe) {","lastModifiedDate":"2022-03-30"},{"lineNumber":45,"author":{"gitId":"cwnm"},"content":"            throw new ParseException(String.format(MESSAGE_INVALID_COMMAND_FORMAT,","lastModifiedDate":"2022-03-30"},{"lineNumber":46,"author":{"gitId":"cwnm"},"content":"                    EditBuyerCommand.MESSAGE_USAGE), pe);","lastModifiedDate":"2022-03-30"},{"lineNumber":47,"author":{"gitId":"cwnm"},"content":"        }","lastModifiedDate":"2022-03-30"},{"lineNumber":48,"author":{"gitId":"cwnm"},"content":"","lastModifiedDate":"2022-03-30"},{"lineNumber":49,"author":{"gitId":"cwnm"},"content":"        EditBuyerDescriptor editBuyerDescriptor \u003d new EditBuyerDescriptor();","lastModifiedDate":"2022-03-30"},{"lineNumber":50,"author":{"gitId":"cwnm"},"content":"        if (argMultimap.getValue(PREFIX_NAME).isPresent()) {","lastModifiedDate":"2022-03-30"},{"lineNumber":51,"author":{"gitId":"cwnm"},"content":"            editBuyerDescriptor.setName(ParserUtil.parseName(argMultimap.getValue(PREFIX_NAME).get()));","lastModifiedDate":"2022-03-30"},{"lineNumber":52,"author":{"gitId":"cwnm"},"content":"        }","lastModifiedDate":"2022-03-30"},{"lineNumber":53,"author":{"gitId":"cwnm"},"content":"        if (argMultimap.getValue(PREFIX_PHONE).isPresent()) {","lastModifiedDate":"2022-03-30"},{"lineNumber":54,"author":{"gitId":"cwnm"},"content":"            editBuyerDescriptor.setPhone(ParserUtil.parsePhone(argMultimap.getValue(PREFIX_PHONE).get()));","lastModifiedDate":"2022-03-30"},{"lineNumber":55,"author":{"gitId":"cwnm"},"content":"        }","lastModifiedDate":"2022-03-30"},{"lineNumber":56,"author":{"gitId":"cwnm"},"content":"        //for tags","lastModifiedDate":"2022-03-30"},{"lineNumber":57,"author":{"gitId":"cwnm"},"content":"        parseTagsForEdit(argMultimap.getAllValues(PREFIX_TAG)).ifPresent(editBuyerDescriptor::setTags);","lastModifiedDate":"2022-03-30"},{"lineNumber":58,"author":{"gitId":"cwnm"},"content":"        //for Property","lastModifiedDate":"2022-03-30"},{"lineNumber":59,"author":{"gitId":"cwnm"},"content":"        if (argMultimap.getValue(PREFIX_HOUSE_TYPE).isPresent()) {","lastModifiedDate":"2022-03-30"},{"lineNumber":60,"author":{"gitId":"cwnm"},"content":"            editBuyerDescriptor.setHouseType(ParserUtil.parseHouseType(argMultimap.getValue(PREFIX_HOUSE_TYPE).get()));","lastModifiedDate":"2022-03-30"},{"lineNumber":61,"author":{"gitId":"cwnm"},"content":"        }","lastModifiedDate":"2022-03-30"},{"lineNumber":62,"author":{"gitId":"cwnm"},"content":"        if (argMultimap.getValue(PREFIX_LOCATION).isPresent()) {","lastModifiedDate":"2022-03-30"},{"lineNumber":63,"author":{"gitId":"cwnm"},"content":"            editBuyerDescriptor.setLocation(ParserUtil.parseLocation(argMultimap.getValue(PREFIX_LOCATION).get()));","lastModifiedDate":"2022-03-30"},{"lineNumber":64,"author":{"gitId":"cwnm"},"content":"        }","lastModifiedDate":"2022-03-30"},{"lineNumber":65,"author":{"gitId":"cwnm"},"content":"        if (argMultimap.getValue(PREFIX_PRICE_RANGE).isPresent()) {","lastModifiedDate":"2022-03-30"},{"lineNumber":66,"author":{"gitId":"cwnm"},"content":"            editBuyerDescriptor.setPriceRange(ParserUtil.parsePriceRange(","lastModifiedDate":"2022-03-30"},{"lineNumber":67,"author":{"gitId":"cwnm"},"content":"                    argMultimap.getValue(PREFIX_PRICE_RANGE).get()));","lastModifiedDate":"2022-03-30"},{"lineNumber":68,"author":{"gitId":"cwnm"},"content":"        }","lastModifiedDate":"2022-03-30"},{"lineNumber":69,"author":{"gitId":"cwnm"},"content":"","lastModifiedDate":"2022-03-30"},{"lineNumber":70,"author":{"gitId":"cwnm"},"content":"        if (!editBuyerDescriptor.isAnyFieldEdited()) {","lastModifiedDate":"2022-03-30"},{"lineNumber":71,"author":{"gitId":"cwnm"},"content":"            throw new ParseException(EditBuyerCommand.MESSAGE_NOT_EDITED);","lastModifiedDate":"2022-03-30"},{"lineNumber":72,"author":{"gitId":"cwnm"},"content":"        }","lastModifiedDate":"2022-03-30"},{"lineNumber":73,"author":{"gitId":"cwnm"},"content":"","lastModifiedDate":"2022-03-30"},{"lineNumber":74,"author":{"gitId":"cwnm"},"content":"        return new EditBuyerCommand(index, editBuyerDescriptor);","lastModifiedDate":"2022-03-30"},{"lineNumber":75,"author":{"gitId":"cwnm"},"content":"    }","lastModifiedDate":"2022-03-30"},{"lineNumber":76,"author":{"gitId":"cwnm"},"content":"","lastModifiedDate":"2022-03-30"},{"lineNumber":77,"author":{"gitId":"cwnm"},"content":"    /**","lastModifiedDate":"2022-03-30"},{"lineNumber":78,"author":{"gitId":"cwnm"},"content":"     * Parses {@code Collection\u003cString\u003e tags} into a {@code Set\u003cTag\u003e} if {@code tags} is non-empty.","lastModifiedDate":"2022-03-30"},{"lineNumber":79,"author":{"gitId":"cwnm"},"content":"     * If {@code tags} contain only one element which is an empty string, it will be parsed into a","lastModifiedDate":"2022-03-30"},{"lineNumber":80,"author":{"gitId":"cwnm"},"content":"     * {@code Set\u003cTag\u003e} containing zero tags.","lastModifiedDate":"2022-03-30"},{"lineNumber":81,"author":{"gitId":"cwnm"},"content":"     */","lastModifiedDate":"2022-03-30"},{"lineNumber":82,"author":{"gitId":"cwnm"},"content":"    private Optional\u003cSet\u003cTag\u003e\u003e parseTagsForEdit(Collection\u003cString\u003e tags) throws ParseException {","lastModifiedDate":"2022-03-30"},{"lineNumber":83,"author":{"gitId":"cwnm"},"content":"        assert tags !\u003d null;","lastModifiedDate":"2022-03-30"},{"lineNumber":84,"author":{"gitId":"cwnm"},"content":"","lastModifiedDate":"2022-03-30"},{"lineNumber":85,"author":{"gitId":"cwnm"},"content":"        if (tags.isEmpty()) {","lastModifiedDate":"2022-03-30"},{"lineNumber":86,"author":{"gitId":"cwnm"},"content":"            return Optional.empty();","lastModifiedDate":"2022-03-30"},{"lineNumber":87,"author":{"gitId":"cwnm"},"content":"        }","lastModifiedDate":"2022-03-30"},{"lineNumber":88,"author":{"gitId":"cwnm"},"content":"        Collection\u003cString\u003e tagSet \u003d tags.size() \u003d\u003d 1 \u0026\u0026 tags.contains(\"\") ? Collections.emptySet() : tags;","lastModifiedDate":"2022-03-30"},{"lineNumber":89,"author":{"gitId":"cwnm"},"content":"        return Optional.of(ParserUtil.parseTags(tagSet));","lastModifiedDate":"2022-03-30"},{"lineNumber":90,"author":{"gitId":"cwnm"},"content":"    }","lastModifiedDate":"2022-03-30"},{"lineNumber":91,"author":{"gitId":"cwnm"},"content":"","lastModifiedDate":"2022-03-30"},{"lineNumber":92,"author":{"gitId":"cwnm"},"content":"}","lastModifiedDate":"2022-03-30"}],"authorContributionMap":{"cwnm":92}},{"path":"src/main/java/seedu/address/logic/parser/EditSellerCommandParser.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2022-03-28"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-03-28"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2022-03-28"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static seedu.address.commons.core.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2022-03-28"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_ADDRESS;","lastModifiedDate":"2022-03-31"},{"lineNumber":6,"author":{"gitId":"chuashihong"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_APPOINTMENT;","lastModifiedDate":"2022-03-28"},{"lineNumber":7,"author":{"gitId":"chuashihong"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_HOUSE_TYPE;","lastModifiedDate":"2022-03-28"},{"lineNumber":8,"author":{"gitId":"chuashihong"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_LOCATION;","lastModifiedDate":"2022-03-28"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_NAME;","lastModifiedDate":"2022-03-28"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_PHONE;","lastModifiedDate":"2022-03-28"},{"lineNumber":11,"author":{"gitId":"chuashihong"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_PRICE_RANGE;","lastModifiedDate":"2022-03-28"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_TAG;","lastModifiedDate":"2022-03-28"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-03-28"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import java.util.Collection;","lastModifiedDate":"2022-03-28"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import java.util.Collections;","lastModifiedDate":"2022-03-28"},{"lineNumber":16,"author":{"gitId":"-"},"content":"import java.util.Optional;","lastModifiedDate":"2022-03-28"},{"lineNumber":17,"author":{"gitId":"-"},"content":"import java.util.Set;","lastModifiedDate":"2022-03-28"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-03-28"},{"lineNumber":19,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.index.Index;","lastModifiedDate":"2022-03-28"},{"lineNumber":20,"author":{"gitId":"chuashihong"},"content":"import seedu.address.logic.commands.EditSellerCommand;","lastModifiedDate":"2022-03-28"},{"lineNumber":21,"author":{"gitId":"chuashihong"},"content":"import seedu.address.logic.commands.EditSellerCommand.EditSellerDescriptor;","lastModifiedDate":"2022-03-28"},{"lineNumber":22,"author":{"gitId":"-"},"content":"import seedu.address.logic.parser.exceptions.ParseException;","lastModifiedDate":"2022-03-28"},{"lineNumber":23,"author":{"gitId":"-"},"content":"import seedu.address.model.tag.Tag;","lastModifiedDate":"2022-03-28"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-03-28"},{"lineNumber":25,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2022-03-28"},{"lineNumber":26,"author":{"gitId":"-"},"content":" * Parses input arguments and creates a new EditCommand object","lastModifiedDate":"2022-03-28"},{"lineNumber":27,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2022-03-28"},{"lineNumber":28,"author":{"gitId":"chuashihong"},"content":"public class EditSellerCommandParser implements Parser\u003cEditSellerCommand\u003e {","lastModifiedDate":"2022-03-28"},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-03-28"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2022-03-28"},{"lineNumber":31,"author":{"gitId":"-"},"content":"     * Parses the given {@code String} of arguments in the context of the EditCommand","lastModifiedDate":"2022-03-28"},{"lineNumber":32,"author":{"gitId":"-"},"content":"     * and returns an EditCommand object for execution.","lastModifiedDate":"2022-03-28"},{"lineNumber":33,"author":{"gitId":"-"},"content":"     * @throws ParseException if the user input does not conform the expected format","lastModifiedDate":"2022-03-28"},{"lineNumber":34,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2022-03-28"},{"lineNumber":35,"author":{"gitId":"chuashihong"},"content":"    public EditSellerCommand parse(String args) throws ParseException {","lastModifiedDate":"2022-03-28"},{"lineNumber":36,"author":{"gitId":"-"},"content":"        requireNonNull(args);","lastModifiedDate":"2022-03-28"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        ArgumentMultimap argMultimap \u003d","lastModifiedDate":"2022-03-28"},{"lineNumber":38,"author":{"gitId":"chuashihong"},"content":"                ArgumentTokenizer.tokenize(args, PREFIX_NAME, PREFIX_PHONE, PREFIX_TAG,","lastModifiedDate":"2022-03-28"},{"lineNumber":39,"author":{"gitId":"janald99"},"content":"                        PREFIX_APPOINTMENT, PREFIX_HOUSE_TYPE, PREFIX_LOCATION, PREFIX_ADDRESS, PREFIX_PRICE_RANGE);","lastModifiedDate":"2022-03-31"},{"lineNumber":40,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-03-28"},{"lineNumber":41,"author":{"gitId":"-"},"content":"        Index index;","lastModifiedDate":"2022-03-28"},{"lineNumber":42,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-03-28"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2022-03-28"},{"lineNumber":44,"author":{"gitId":"-"},"content":"            index \u003d ParserUtil.parseIndex(argMultimap.getPreamble());","lastModifiedDate":"2022-03-28"},{"lineNumber":45,"author":{"gitId":"-"},"content":"        } catch (ParseException pe) {","lastModifiedDate":"2022-03-28"},{"lineNumber":46,"author":{"gitId":"chuashihong"},"content":"            throw new ParseException(String.format(MESSAGE_INVALID_COMMAND_FORMAT,","lastModifiedDate":"2022-03-28"},{"lineNumber":47,"author":{"gitId":"chuashihong"},"content":"                    EditSellerCommand.MESSAGE_USAGE), pe);","lastModifiedDate":"2022-03-28"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2022-03-28"},{"lineNumber":49,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-03-28"},{"lineNumber":50,"author":{"gitId":"chuashihong"},"content":"        EditSellerDescriptor editSellerDescriptor \u003d new EditSellerDescriptor();","lastModifiedDate":"2022-03-28"},{"lineNumber":51,"author":{"gitId":"-"},"content":"        if (argMultimap.getValue(PREFIX_NAME).isPresent()) {","lastModifiedDate":"2022-03-28"},{"lineNumber":52,"author":{"gitId":"chuashihong"},"content":"            editSellerDescriptor.setName(ParserUtil.parseName(argMultimap.getValue(PREFIX_NAME).get()));","lastModifiedDate":"2022-03-28"},{"lineNumber":53,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2022-03-28"},{"lineNumber":54,"author":{"gitId":"-"},"content":"        if (argMultimap.getValue(PREFIX_PHONE).isPresent()) {","lastModifiedDate":"2022-03-28"},{"lineNumber":55,"author":{"gitId":"chuashihong"},"content":"            editSellerDescriptor.setPhone(ParserUtil.parsePhone(argMultimap.getValue(PREFIX_PHONE).get()));","lastModifiedDate":"2022-03-28"},{"lineNumber":56,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2022-03-28"},{"lineNumber":57,"author":{"gitId":"chuashihong"},"content":"        //for tags","lastModifiedDate":"2022-03-28"},{"lineNumber":58,"author":{"gitId":"chuashihong"},"content":"        parseTagsForEdit(argMultimap.getAllValues(PREFIX_TAG)).ifPresent(editSellerDescriptor::setTags);","lastModifiedDate":"2022-03-28"},{"lineNumber":59,"author":{"gitId":"chuashihong"},"content":"        //for Property","lastModifiedDate":"2022-03-28"},{"lineNumber":60,"author":{"gitId":"chuashihong"},"content":"        if (argMultimap.getValue(PREFIX_HOUSE_TYPE).isPresent()) {","lastModifiedDate":"2022-03-28"},{"lineNumber":61,"author":{"gitId":"chuashihong"},"content":"            editSellerDescriptor.setHouseType(ParserUtil.parseHouseType(argMultimap.getValue(PREFIX_HOUSE_TYPE).get()));","lastModifiedDate":"2022-03-28"},{"lineNumber":62,"author":{"gitId":"chuashihong"},"content":"        }","lastModifiedDate":"2022-03-28"},{"lineNumber":63,"author":{"gitId":"chuashihong"},"content":"        if (argMultimap.getValue(PREFIX_LOCATION).isPresent()) {","lastModifiedDate":"2022-03-28"},{"lineNumber":64,"author":{"gitId":"chuashihong"},"content":"            editSellerDescriptor.setLocation(ParserUtil.parseLocation(argMultimap.getValue(PREFIX_LOCATION).get()));","lastModifiedDate":"2022-03-28"},{"lineNumber":65,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2022-03-28"},{"lineNumber":66,"author":{"gitId":"-"},"content":"        if (argMultimap.getValue(PREFIX_ADDRESS).isPresent()) {","lastModifiedDate":"2022-03-31"},{"lineNumber":67,"author":{"gitId":"janald99"},"content":"            editSellerDescriptor.setAddress(ParserUtil.parseAddress(argMultimap.getValue(PREFIX_ADDRESS).get()));","lastModifiedDate":"2022-03-31"},{"lineNumber":68,"author":{"gitId":"janald99"},"content":"        }","lastModifiedDate":"2022-03-31"},{"lineNumber":69,"author":{"gitId":"chuashihong"},"content":"        if (argMultimap.getValue(PREFIX_PRICE_RANGE).isPresent()) {","lastModifiedDate":"2022-03-28"},{"lineNumber":70,"author":{"gitId":"chuashihong"},"content":"            editSellerDescriptor.setPriceRange(ParserUtil.parsePriceRange(","lastModifiedDate":"2022-03-28"},{"lineNumber":71,"author":{"gitId":"chuashihong"},"content":"                    argMultimap.getValue(PREFIX_PRICE_RANGE).get()));","lastModifiedDate":"2022-03-28"},{"lineNumber":72,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2022-03-28"},{"lineNumber":73,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-03-28"},{"lineNumber":74,"author":{"gitId":"chuashihong"},"content":"        if (!editSellerDescriptor.isAnyFieldEdited()) {","lastModifiedDate":"2022-03-28"},{"lineNumber":75,"author":{"gitId":"chuashihong"},"content":"            throw new ParseException(EditSellerCommand.MESSAGE_NOT_EDITED);","lastModifiedDate":"2022-03-28"},{"lineNumber":76,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2022-03-28"},{"lineNumber":77,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-03-28"},{"lineNumber":78,"author":{"gitId":"chuashihong"},"content":"        return new EditSellerCommand(index, editSellerDescriptor);","lastModifiedDate":"2022-03-28"},{"lineNumber":79,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2022-03-28"},{"lineNumber":80,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-03-28"},{"lineNumber":81,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2022-03-28"},{"lineNumber":82,"author":{"gitId":"-"},"content":"     * Parses {@code Collection\u003cString\u003e tags} into a {@code Set\u003cTag\u003e} if {@code tags} is non-empty.","lastModifiedDate":"2022-03-28"},{"lineNumber":83,"author":{"gitId":"-"},"content":"     * If {@code tags} contain only one element which is an empty string, it will be parsed into a","lastModifiedDate":"2022-03-28"},{"lineNumber":84,"author":{"gitId":"-"},"content":"     * {@code Set\u003cTag\u003e} containing zero tags.","lastModifiedDate":"2022-03-28"},{"lineNumber":85,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2022-03-28"},{"lineNumber":86,"author":{"gitId":"-"},"content":"    private Optional\u003cSet\u003cTag\u003e\u003e parseTagsForEdit(Collection\u003cString\u003e tags) throws ParseException {","lastModifiedDate":"2022-03-28"},{"lineNumber":87,"author":{"gitId":"-"},"content":"        assert tags !\u003d null;","lastModifiedDate":"2022-03-28"},{"lineNumber":88,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-03-28"},{"lineNumber":89,"author":{"gitId":"-"},"content":"        if (tags.isEmpty()) {","lastModifiedDate":"2022-03-28"},{"lineNumber":90,"author":{"gitId":"-"},"content":"            return Optional.empty();","lastModifiedDate":"2022-03-28"},{"lineNumber":91,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2022-03-28"},{"lineNumber":92,"author":{"gitId":"-"},"content":"        Collection\u003cString\u003e tagSet \u003d tags.size() \u003d\u003d 1 \u0026\u0026 tags.contains(\"\") ? Collections.emptySet() : tags;","lastModifiedDate":"2022-03-28"},{"lineNumber":93,"author":{"gitId":"-"},"content":"        return Optional.of(ParserUtil.parseTags(tagSet));","lastModifiedDate":"2022-03-28"},{"lineNumber":94,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2022-03-28"},{"lineNumber":95,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-03-28"},{"lineNumber":96,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2022-03-28"}],"authorContributionMap":{"janald99":3,"-":65,"chuashihong":28}},{"path":"src/main/java/seedu/address/logic/parser/FindBuyerCommandParser.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"cwnm"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2022-03-28"},{"lineNumber":2,"author":{"gitId":"cwnm"},"content":"","lastModifiedDate":"2022-03-28"},{"lineNumber":3,"author":{"gitId":"cwnm"},"content":"import static seedu.address.commons.core.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2022-03-28"},{"lineNumber":4,"author":{"gitId":"cwnm"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_HOUSE_TYPE;","lastModifiedDate":"2022-03-28"},{"lineNumber":5,"author":{"gitId":"cwnm"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_LOCATION;","lastModifiedDate":"2022-03-30"},{"lineNumber":6,"author":{"gitId":"cwnm"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_NAME;","lastModifiedDate":"2022-03-28"},{"lineNumber":7,"author":{"gitId":"cwnm"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_PHONE;","lastModifiedDate":"2022-03-28"},{"lineNumber":8,"author":{"gitId":"cwnm"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_TAG;","lastModifiedDate":"2022-03-28"},{"lineNumber":9,"author":{"gitId":"cwnm"},"content":"","lastModifiedDate":"2022-03-28"},{"lineNumber":10,"author":{"gitId":"cwnm"},"content":"import java.util.Arrays;","lastModifiedDate":"2022-03-28"},{"lineNumber":11,"author":{"gitId":"cwnm"},"content":"","lastModifiedDate":"2022-03-28"},{"lineNumber":12,"author":{"gitId":"cwnm"},"content":"import seedu.address.logic.commands.FindBuyerCommand;","lastModifiedDate":"2022-03-28"},{"lineNumber":13,"author":{"gitId":"cwnm"},"content":"import seedu.address.logic.parser.exceptions.ParseException;","lastModifiedDate":"2022-03-28"},{"lineNumber":14,"author":{"gitId":"cwnm"},"content":"import seedu.address.model.buyer.BuyerHouseTypeContainsKeywordsPredicate;","lastModifiedDate":"2022-03-28"},{"lineNumber":15,"author":{"gitId":"cwnm"},"content":"import seedu.address.model.buyer.BuyerLocationContainsKeywordsPredicate;","lastModifiedDate":"2022-03-30"},{"lineNumber":16,"author":{"gitId":"cwnm"},"content":"import seedu.address.model.buyer.BuyerNameContainsKeywordsPredicate;","lastModifiedDate":"2022-03-28"},{"lineNumber":17,"author":{"gitId":"cwnm"},"content":"import seedu.address.model.buyer.BuyerPhoneContainsKeywordsPredicate;","lastModifiedDate":"2022-03-28"},{"lineNumber":18,"author":{"gitId":"cwnm"},"content":"import seedu.address.model.buyer.BuyerTagsContainsKeywordsPredicate;","lastModifiedDate":"2022-03-28"},{"lineNumber":19,"author":{"gitId":"cwnm"},"content":"","lastModifiedDate":"2022-03-28"},{"lineNumber":20,"author":{"gitId":"cwnm"},"content":"public class FindBuyerCommandParser implements Parser\u003cFindBuyerCommand\u003e {","lastModifiedDate":"2022-03-28"},{"lineNumber":21,"author":{"gitId":"cwnm"},"content":"","lastModifiedDate":"2022-03-28"},{"lineNumber":22,"author":{"gitId":"cwnm"},"content":"    private static final String PREFIX_DELIMITER \u003d \"/\";","lastModifiedDate":"2022-03-28"},{"lineNumber":23,"author":{"gitId":"cwnm"},"content":"","lastModifiedDate":"2022-03-28"},{"lineNumber":24,"author":{"gitId":"cwnm"},"content":"    /**","lastModifiedDate":"2022-03-28"},{"lineNumber":25,"author":{"gitId":"cwnm"},"content":"     * Parses the given {@code String} of arguments in the context of the FindCommand","lastModifiedDate":"2022-03-28"},{"lineNumber":26,"author":{"gitId":"cwnm"},"content":"     * and returns a FindCommand object for execution.","lastModifiedDate":"2022-03-28"},{"lineNumber":27,"author":{"gitId":"cwnm"},"content":"     * @throws ParseException if the user input does not conform the expected format","lastModifiedDate":"2022-03-28"},{"lineNumber":28,"author":{"gitId":"cwnm"},"content":"     */","lastModifiedDate":"2022-03-28"},{"lineNumber":29,"author":{"gitId":"cwnm"},"content":"    public FindBuyerCommand parse(String args) throws ParseException {","lastModifiedDate":"2022-03-28"},{"lineNumber":30,"author":{"gitId":"cwnm"},"content":"        String trimmedArgs \u003d args.trim();","lastModifiedDate":"2022-03-28"},{"lineNumber":31,"author":{"gitId":"cwnm"},"content":"        if (trimmedArgs.isEmpty()) {","lastModifiedDate":"2022-03-28"},{"lineNumber":32,"author":{"gitId":"cwnm"},"content":"            throw new ParseException(","lastModifiedDate":"2022-03-28"},{"lineNumber":33,"author":{"gitId":"cwnm"},"content":"                    String.format(MESSAGE_INVALID_COMMAND_FORMAT, FindBuyerCommand.MESSAGE_USAGE));","lastModifiedDate":"2022-03-28"},{"lineNumber":34,"author":{"gitId":"cwnm"},"content":"        }","lastModifiedDate":"2022-03-28"},{"lineNumber":35,"author":{"gitId":"cwnm"},"content":"","lastModifiedDate":"2022-03-28"},{"lineNumber":36,"author":{"gitId":"cwnm"},"content":"        String[] keywords \u003d trimmedArgs.split(\"\\\\s+\");","lastModifiedDate":"2022-03-28"},{"lineNumber":37,"author":{"gitId":"cwnm"},"content":"","lastModifiedDate":"2022-03-28"},{"lineNumber":38,"author":{"gitId":"cwnm"},"content":"        String firstArg \u003d keywords[0];","lastModifiedDate":"2022-03-28"},{"lineNumber":39,"author":{"gitId":"cwnm"},"content":"        if (firstArg.length() \u003c 3) {","lastModifiedDate":"2022-03-28"},{"lineNumber":40,"author":{"gitId":"cwnm"},"content":"            throw new ParseException(","lastModifiedDate":"2022-03-28"},{"lineNumber":41,"author":{"gitId":"cwnm"},"content":"                    String.format(MESSAGE_INVALID_COMMAND_FORMAT, FindBuyerCommand.MESSAGE_USAGE));","lastModifiedDate":"2022-03-28"},{"lineNumber":42,"author":{"gitId":"cwnm"},"content":"        }","lastModifiedDate":"2022-03-28"},{"lineNumber":43,"author":{"gitId":"cwnm"},"content":"        int delimiterIndex \u003d firstArg.indexOf(PREFIX_DELIMITER);","lastModifiedDate":"2022-03-28"},{"lineNumber":44,"author":{"gitId":"cwnm"},"content":"        if (delimiterIndex !\u003d 1) {","lastModifiedDate":"2022-03-28"},{"lineNumber":45,"author":{"gitId":"cwnm"},"content":"            throw new ParseException(","lastModifiedDate":"2022-03-28"},{"lineNumber":46,"author":{"gitId":"cwnm"},"content":"                    String.format(MESSAGE_INVALID_COMMAND_FORMAT, FindBuyerCommand.MESSAGE_USAGE));","lastModifiedDate":"2022-03-28"},{"lineNumber":47,"author":{"gitId":"cwnm"},"content":"        }","lastModifiedDate":"2022-03-28"},{"lineNumber":48,"author":{"gitId":"cwnm"},"content":"        String prefix \u003d firstArg.substring(0, 2);","lastModifiedDate":"2022-03-28"},{"lineNumber":49,"author":{"gitId":"cwnm"},"content":"        if (checkPrefix(prefix, PREFIX_NAME, PREFIX_PHONE, PREFIX_TAG, PREFIX_HOUSE_TYPE, PREFIX_LOCATION)) {","lastModifiedDate":"2022-03-30"},{"lineNumber":50,"author":{"gitId":"cwnm"},"content":"            throw new ParseException(","lastModifiedDate":"2022-03-28"},{"lineNumber":51,"author":{"gitId":"cwnm"},"content":"                    String.format(MESSAGE_INVALID_COMMAND_FORMAT, FindBuyerCommand.MESSAGE_USAGE));","lastModifiedDate":"2022-03-28"},{"lineNumber":52,"author":{"gitId":"cwnm"},"content":"        }","lastModifiedDate":"2022-03-28"},{"lineNumber":53,"author":{"gitId":"cwnm"},"content":"        keywords[0] \u003d firstArg.substring(2);","lastModifiedDate":"2022-03-28"},{"lineNumber":54,"author":{"gitId":"cwnm"},"content":"        return findWithPrefix(prefix, keywords);","lastModifiedDate":"2022-03-28"},{"lineNumber":55,"author":{"gitId":"cwnm"},"content":"    }","lastModifiedDate":"2022-03-28"},{"lineNumber":56,"author":{"gitId":"cwnm"},"content":"","lastModifiedDate":"2022-03-28"},{"lineNumber":57,"author":{"gitId":"cwnm"},"content":"    public boolean checkPrefix(String p, Prefix... knownPrefixes) {","lastModifiedDate":"2022-03-28"},{"lineNumber":58,"author":{"gitId":"cwnm"},"content":"        return Arrays.stream(knownPrefixes).noneMatch(s -\u003e s.toString().equals(p));","lastModifiedDate":"2022-03-28"},{"lineNumber":59,"author":{"gitId":"cwnm"},"content":"    }","lastModifiedDate":"2022-03-28"},{"lineNumber":60,"author":{"gitId":"cwnm"},"content":"","lastModifiedDate":"2022-03-28"},{"lineNumber":61,"author":{"gitId":"cwnm"},"content":"    /**","lastModifiedDate":"2022-03-28"},{"lineNumber":62,"author":{"gitId":"cwnm"},"content":"     * Executes the respective FindCommands with different signatures, depending on the prefix arguments.","lastModifiedDate":"2022-03-28"},{"lineNumber":63,"author":{"gitId":"cwnm"},"content":"     *","lastModifiedDate":"2022-03-28"},{"lineNumber":64,"author":{"gitId":"cwnm"},"content":"     * @param prefix The prefix that the user inputs, to find a Buyer.","lastModifiedDate":"2022-03-28"},{"lineNumber":65,"author":{"gitId":"cwnm"},"content":"     * @param keywords Keywords that come after the prefix.","lastModifiedDate":"2022-03-28"},{"lineNumber":66,"author":{"gitId":"cwnm"},"content":"     * @return The desired FindCommand, with the correct signature.","lastModifiedDate":"2022-03-28"},{"lineNumber":67,"author":{"gitId":"cwnm"},"content":"     * @throws ParseException ParseException thrown if no valid prefix provided.","lastModifiedDate":"2022-03-28"},{"lineNumber":68,"author":{"gitId":"cwnm"},"content":"     */","lastModifiedDate":"2022-03-28"},{"lineNumber":69,"author":{"gitId":"cwnm"},"content":"    public FindBuyerCommand findWithPrefix(String prefix, String[] keywords) throws ParseException {","lastModifiedDate":"2022-03-28"},{"lineNumber":70,"author":{"gitId":"cwnm"},"content":"        switch(prefix) {","lastModifiedDate":"2022-03-28"},{"lineNumber":71,"author":{"gitId":"cwnm"},"content":"        case \"n/\":","lastModifiedDate":"2022-03-28"},{"lineNumber":72,"author":{"gitId":"cwnm"},"content":"            return new FindBuyerCommand(new BuyerNameContainsKeywordsPredicate(Arrays.asList(keywords)));","lastModifiedDate":"2022-03-28"},{"lineNumber":73,"author":{"gitId":"cwnm"},"content":"            // Fallthrough","lastModifiedDate":"2022-03-28"},{"lineNumber":74,"author":{"gitId":"cwnm"},"content":"        case \"p/\":","lastModifiedDate":"2022-03-28"},{"lineNumber":75,"author":{"gitId":"cwnm"},"content":"            System.out.println(\"print\");","lastModifiedDate":"2022-03-28"},{"lineNumber":76,"author":{"gitId":"cwnm"},"content":"            return new FindBuyerCommand(new BuyerPhoneContainsKeywordsPredicate(Arrays.asList(keywords)));","lastModifiedDate":"2022-03-28"},{"lineNumber":77,"author":{"gitId":"cwnm"},"content":"            // Fallthrough","lastModifiedDate":"2022-03-28"},{"lineNumber":78,"author":{"gitId":"cwnm"},"content":"        case \"t/\":","lastModifiedDate":"2022-03-28"},{"lineNumber":79,"author":{"gitId":"cwnm"},"content":"            return new FindBuyerCommand(new BuyerTagsContainsKeywordsPredicate(Arrays.asList(keywords)));","lastModifiedDate":"2022-03-28"},{"lineNumber":80,"author":{"gitId":"cwnm"},"content":"            // Fallthrough","lastModifiedDate":"2022-03-28"},{"lineNumber":81,"author":{"gitId":"cwnm"},"content":"        case \"h/\":","lastModifiedDate":"2022-03-28"},{"lineNumber":82,"author":{"gitId":"cwnm"},"content":"            return new FindBuyerCommand(new BuyerHouseTypeContainsKeywordsPredicate(Arrays.asList(keywords)));","lastModifiedDate":"2022-03-28"},{"lineNumber":83,"author":{"gitId":"cwnm"},"content":"            // Fallthrough","lastModifiedDate":"2022-03-28"},{"lineNumber":84,"author":{"gitId":"cwnm"},"content":"        case \"l/\":","lastModifiedDate":"2022-03-30"},{"lineNumber":85,"author":{"gitId":"cwnm"},"content":"            return new FindBuyerCommand(new BuyerLocationContainsKeywordsPredicate(Arrays.asList(keywords)));","lastModifiedDate":"2022-03-30"},{"lineNumber":86,"author":{"gitId":"cwnm"},"content":"            // Fallthrough","lastModifiedDate":"2022-03-30"},{"lineNumber":87,"author":{"gitId":"cwnm"},"content":"        default:","lastModifiedDate":"2022-03-28"},{"lineNumber":88,"author":{"gitId":"cwnm"},"content":"            throw new ParseException(","lastModifiedDate":"2022-03-28"},{"lineNumber":89,"author":{"gitId":"cwnm"},"content":"                    String.format(MESSAGE_INVALID_COMMAND_FORMAT, FindBuyerCommand.MESSAGE_USAGE));","lastModifiedDate":"2022-03-28"},{"lineNumber":90,"author":{"gitId":"cwnm"},"content":"        }","lastModifiedDate":"2022-03-28"},{"lineNumber":91,"author":{"gitId":"cwnm"},"content":"    }","lastModifiedDate":"2022-03-28"},{"lineNumber":92,"author":{"gitId":"cwnm"},"content":"}","lastModifiedDate":"2022-03-28"}],"authorContributionMap":{"cwnm":92}},{"path":"src/main/java/seedu/address/logic/parser/FindSellerCommandParser.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"cwnm"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2022-03-28"},{"lineNumber":2,"author":{"gitId":"cwnm"},"content":"","lastModifiedDate":"2022-03-28"},{"lineNumber":3,"author":{"gitId":"cwnm"},"content":"import static seedu.address.commons.core.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2022-03-28"},{"lineNumber":4,"author":{"gitId":"cwnm"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_HOUSE_TYPE;","lastModifiedDate":"2022-03-28"},{"lineNumber":5,"author":{"gitId":"cwnm"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_LOCATION;","lastModifiedDate":"2022-03-30"},{"lineNumber":6,"author":{"gitId":"cwnm"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_NAME;","lastModifiedDate":"2022-03-28"},{"lineNumber":7,"author":{"gitId":"cwnm"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_PHONE;","lastModifiedDate":"2022-03-28"},{"lineNumber":8,"author":{"gitId":"cwnm"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_TAG;","lastModifiedDate":"2022-03-28"},{"lineNumber":9,"author":{"gitId":"cwnm"},"content":"","lastModifiedDate":"2022-03-28"},{"lineNumber":10,"author":{"gitId":"cwnm"},"content":"import java.util.Arrays;","lastModifiedDate":"2022-03-28"},{"lineNumber":11,"author":{"gitId":"cwnm"},"content":"","lastModifiedDate":"2022-03-28"},{"lineNumber":12,"author":{"gitId":"cwnm"},"content":"import seedu.address.logic.commands.FindSellerCommand;","lastModifiedDate":"2022-03-28"},{"lineNumber":13,"author":{"gitId":"cwnm"},"content":"import seedu.address.logic.parser.exceptions.ParseException;","lastModifiedDate":"2022-03-28"},{"lineNumber":14,"author":{"gitId":"cwnm"},"content":"import seedu.address.model.seller.SellerHouseTypeContainsKeywordsPredicate;","lastModifiedDate":"2022-03-28"},{"lineNumber":15,"author":{"gitId":"cwnm"},"content":"import seedu.address.model.seller.SellerLocationContainsKeywordsPredicate;","lastModifiedDate":"2022-03-30"},{"lineNumber":16,"author":{"gitId":"cwnm"},"content":"import seedu.address.model.seller.SellerNameContainsKeywordsPredicate;","lastModifiedDate":"2022-03-28"},{"lineNumber":17,"author":{"gitId":"cwnm"},"content":"import seedu.address.model.seller.SellerPhoneContainsKeywordsPredicate;","lastModifiedDate":"2022-03-28"},{"lineNumber":18,"author":{"gitId":"cwnm"},"content":"import seedu.address.model.seller.SellerTagsContainsKeywordsPredicate;","lastModifiedDate":"2022-03-28"},{"lineNumber":19,"author":{"gitId":"cwnm"},"content":"","lastModifiedDate":"2022-03-28"},{"lineNumber":20,"author":{"gitId":"cwnm"},"content":"/**","lastModifiedDate":"2022-03-28"},{"lineNumber":21,"author":{"gitId":"cwnm"},"content":" * Parses input arguments and creates a new FindCommand object","lastModifiedDate":"2022-03-28"},{"lineNumber":22,"author":{"gitId":"cwnm"},"content":" */","lastModifiedDate":"2022-03-28"},{"lineNumber":23,"author":{"gitId":"cwnm"},"content":"public class FindSellerCommandParser implements Parser\u003cFindSellerCommand\u003e {","lastModifiedDate":"2022-03-28"},{"lineNumber":24,"author":{"gitId":"cwnm"},"content":"","lastModifiedDate":"2022-03-28"},{"lineNumber":25,"author":{"gitId":"cwnm"},"content":"    private static final String PREFIX_DELIMITER \u003d \"/\";","lastModifiedDate":"2022-03-28"},{"lineNumber":26,"author":{"gitId":"cwnm"},"content":"","lastModifiedDate":"2022-03-28"},{"lineNumber":27,"author":{"gitId":"cwnm"},"content":"    /**","lastModifiedDate":"2022-03-28"},{"lineNumber":28,"author":{"gitId":"cwnm"},"content":"     * Parses the given {@code String} of arguments in the context of the FindCommand","lastModifiedDate":"2022-03-28"},{"lineNumber":29,"author":{"gitId":"cwnm"},"content":"     * and returns a FindCommand object for execution.","lastModifiedDate":"2022-03-28"},{"lineNumber":30,"author":{"gitId":"cwnm"},"content":"     * @throws ParseException if the user input does not conform the expected format","lastModifiedDate":"2022-03-28"},{"lineNumber":31,"author":{"gitId":"cwnm"},"content":"     */","lastModifiedDate":"2022-03-28"},{"lineNumber":32,"author":{"gitId":"cwnm"},"content":"    public FindSellerCommand parse(String args) throws ParseException {","lastModifiedDate":"2022-03-28"},{"lineNumber":33,"author":{"gitId":"cwnm"},"content":"        String trimmedArgs \u003d args.trim();","lastModifiedDate":"2022-03-28"},{"lineNumber":34,"author":{"gitId":"cwnm"},"content":"        if (trimmedArgs.isEmpty()) {","lastModifiedDate":"2022-03-28"},{"lineNumber":35,"author":{"gitId":"cwnm"},"content":"            throw new ParseException(","lastModifiedDate":"2022-03-28"},{"lineNumber":36,"author":{"gitId":"cwnm"},"content":"                    String.format(MESSAGE_INVALID_COMMAND_FORMAT, FindSellerCommand.MESSAGE_USAGE));","lastModifiedDate":"2022-03-28"},{"lineNumber":37,"author":{"gitId":"cwnm"},"content":"        }","lastModifiedDate":"2022-03-28"},{"lineNumber":38,"author":{"gitId":"cwnm"},"content":"","lastModifiedDate":"2022-03-28"},{"lineNumber":39,"author":{"gitId":"cwnm"},"content":"        String[] keywords \u003d trimmedArgs.split(\"\\\\s+\");","lastModifiedDate":"2022-03-28"},{"lineNumber":40,"author":{"gitId":"cwnm"},"content":"","lastModifiedDate":"2022-03-28"},{"lineNumber":41,"author":{"gitId":"cwnm"},"content":"        String firstArg \u003d keywords[0];","lastModifiedDate":"2022-03-28"},{"lineNumber":42,"author":{"gitId":"cwnm"},"content":"        if (firstArg.length() \u003c 3) {","lastModifiedDate":"2022-03-28"},{"lineNumber":43,"author":{"gitId":"cwnm"},"content":"            throw new ParseException(","lastModifiedDate":"2022-03-28"},{"lineNumber":44,"author":{"gitId":"cwnm"},"content":"                    String.format(MESSAGE_INVALID_COMMAND_FORMAT, FindSellerCommand.MESSAGE_USAGE));","lastModifiedDate":"2022-03-28"},{"lineNumber":45,"author":{"gitId":"cwnm"},"content":"        }","lastModifiedDate":"2022-03-28"},{"lineNumber":46,"author":{"gitId":"cwnm"},"content":"        int delimiterIndex \u003d firstArg.indexOf(PREFIX_DELIMITER);","lastModifiedDate":"2022-03-28"},{"lineNumber":47,"author":{"gitId":"cwnm"},"content":"        if (delimiterIndex !\u003d 1) {","lastModifiedDate":"2022-03-28"},{"lineNumber":48,"author":{"gitId":"cwnm"},"content":"            throw new ParseException(","lastModifiedDate":"2022-03-28"},{"lineNumber":49,"author":{"gitId":"cwnm"},"content":"                    String.format(MESSAGE_INVALID_COMMAND_FORMAT, FindSellerCommand.MESSAGE_USAGE));","lastModifiedDate":"2022-03-28"},{"lineNumber":50,"author":{"gitId":"cwnm"},"content":"        }","lastModifiedDate":"2022-03-28"},{"lineNumber":51,"author":{"gitId":"cwnm"},"content":"        String prefix \u003d firstArg.substring(0, 2);","lastModifiedDate":"2022-03-28"},{"lineNumber":52,"author":{"gitId":"cwnm"},"content":"        if (checkPrefix(prefix, PREFIX_NAME, PREFIX_PHONE, PREFIX_HOUSE_TYPE, PREFIX_TAG, PREFIX_LOCATION)) {","lastModifiedDate":"2022-03-30"},{"lineNumber":53,"author":{"gitId":"cwnm"},"content":"            throw new ParseException(","lastModifiedDate":"2022-03-28"},{"lineNumber":54,"author":{"gitId":"cwnm"},"content":"                    String.format(MESSAGE_INVALID_COMMAND_FORMAT, FindSellerCommand.MESSAGE_USAGE));","lastModifiedDate":"2022-03-28"},{"lineNumber":55,"author":{"gitId":"cwnm"},"content":"        }","lastModifiedDate":"2022-03-28"},{"lineNumber":56,"author":{"gitId":"cwnm"},"content":"        keywords[0] \u003d firstArg.substring(2);","lastModifiedDate":"2022-03-28"},{"lineNumber":57,"author":{"gitId":"cwnm"},"content":"        return findWithPrefix(prefix, keywords);","lastModifiedDate":"2022-03-28"},{"lineNumber":58,"author":{"gitId":"cwnm"},"content":"    }","lastModifiedDate":"2022-03-28"},{"lineNumber":59,"author":{"gitId":"cwnm"},"content":"","lastModifiedDate":"2022-03-28"},{"lineNumber":60,"author":{"gitId":"cwnm"},"content":"    public boolean checkPrefix(String p, Prefix ... knownPrefixes) {","lastModifiedDate":"2022-03-28"},{"lineNumber":61,"author":{"gitId":"cwnm"},"content":"        return Arrays.stream(knownPrefixes).noneMatch(s -\u003e s.toString().equals(p));","lastModifiedDate":"2022-03-28"},{"lineNumber":62,"author":{"gitId":"cwnm"},"content":"    }","lastModifiedDate":"2022-03-28"},{"lineNumber":63,"author":{"gitId":"cwnm"},"content":"","lastModifiedDate":"2022-03-28"},{"lineNumber":64,"author":{"gitId":"cwnm"},"content":"    /**","lastModifiedDate":"2022-03-28"},{"lineNumber":65,"author":{"gitId":"cwnm"},"content":"     * Executes the respective FindCommands with different signatures, depending on the prefix arguments.","lastModifiedDate":"2022-03-28"},{"lineNumber":66,"author":{"gitId":"cwnm"},"content":"     *","lastModifiedDate":"2022-03-28"},{"lineNumber":67,"author":{"gitId":"cwnm"},"content":"     * @param prefix The prefix that the user inputs, to find a Seller.","lastModifiedDate":"2022-03-28"},{"lineNumber":68,"author":{"gitId":"cwnm"},"content":"     * @param keywords Keywords that come after the prefix.","lastModifiedDate":"2022-03-28"},{"lineNumber":69,"author":{"gitId":"cwnm"},"content":"     * @return The desired FindCommand, with the correct signature.","lastModifiedDate":"2022-03-28"},{"lineNumber":70,"author":{"gitId":"cwnm"},"content":"     * @throws ParseException ParseException thrown if no valid prefix provided.","lastModifiedDate":"2022-03-28"},{"lineNumber":71,"author":{"gitId":"cwnm"},"content":"     */","lastModifiedDate":"2022-03-28"},{"lineNumber":72,"author":{"gitId":"cwnm"},"content":"    public FindSellerCommand findWithPrefix(String prefix, String[] keywords) throws ParseException {","lastModifiedDate":"2022-03-28"},{"lineNumber":73,"author":{"gitId":"cwnm"},"content":"        switch(prefix) {","lastModifiedDate":"2022-03-28"},{"lineNumber":74,"author":{"gitId":"cwnm"},"content":"        case \"n/\":","lastModifiedDate":"2022-03-28"},{"lineNumber":75,"author":{"gitId":"cwnm"},"content":"            return new FindSellerCommand(new SellerNameContainsKeywordsPredicate(Arrays.asList(keywords)));","lastModifiedDate":"2022-03-28"},{"lineNumber":76,"author":{"gitId":"cwnm"},"content":"            // Fallthrough","lastModifiedDate":"2022-03-28"},{"lineNumber":77,"author":{"gitId":"cwnm"},"content":"        case \"p/\":","lastModifiedDate":"2022-03-28"},{"lineNumber":78,"author":{"gitId":"cwnm"},"content":"            return new FindSellerCommand(new SellerPhoneContainsKeywordsPredicate(Arrays.asList(keywords)));","lastModifiedDate":"2022-03-28"},{"lineNumber":79,"author":{"gitId":"cwnm"},"content":"            // Fallthrough","lastModifiedDate":"2022-03-28"},{"lineNumber":80,"author":{"gitId":"cwnm"},"content":"        case \"t/\":","lastModifiedDate":"2022-03-28"},{"lineNumber":81,"author":{"gitId":"cwnm"},"content":"            return new FindSellerCommand(new SellerTagsContainsKeywordsPredicate(Arrays.asList(keywords)));","lastModifiedDate":"2022-03-28"},{"lineNumber":82,"author":{"gitId":"cwnm"},"content":"            // Fallthrough","lastModifiedDate":"2022-03-28"},{"lineNumber":83,"author":{"gitId":"cwnm"},"content":"        case \"h/\":","lastModifiedDate":"2022-03-28"},{"lineNumber":84,"author":{"gitId":"cwnm"},"content":"            return new FindSellerCommand(new SellerHouseTypeContainsKeywordsPredicate(Arrays.asList(keywords)));","lastModifiedDate":"2022-03-28"},{"lineNumber":85,"author":{"gitId":"cwnm"},"content":"            // Fallthrough","lastModifiedDate":"2022-03-28"},{"lineNumber":86,"author":{"gitId":"cwnm"},"content":"        case \"l/\":","lastModifiedDate":"2022-03-30"},{"lineNumber":87,"author":{"gitId":"cwnm"},"content":"            return new FindSellerCommand(new SellerLocationContainsKeywordsPredicate(Arrays.asList(keywords)));","lastModifiedDate":"2022-03-30"},{"lineNumber":88,"author":{"gitId":"cwnm"},"content":"            // Fallthrough","lastModifiedDate":"2022-03-30"},{"lineNumber":89,"author":{"gitId":"cwnm"},"content":"        default:","lastModifiedDate":"2022-03-28"},{"lineNumber":90,"author":{"gitId":"cwnm"},"content":"            throw new ParseException(","lastModifiedDate":"2022-03-28"},{"lineNumber":91,"author":{"gitId":"cwnm"},"content":"                    String.format(MESSAGE_INVALID_COMMAND_FORMAT, FindSellerCommand.MESSAGE_USAGE));","lastModifiedDate":"2022-03-28"},{"lineNumber":92,"author":{"gitId":"cwnm"},"content":"        }","lastModifiedDate":"2022-03-28"},{"lineNumber":93,"author":{"gitId":"cwnm"},"content":"    }","lastModifiedDate":"2022-03-28"},{"lineNumber":94,"author":{"gitId":"cwnm"},"content":"}","lastModifiedDate":"2022-03-28"}],"authorContributionMap":{"cwnm":94}},{"path":"src/main/java/seedu/address/logic/parser/MatchCommandParser.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"janald99"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2022-03-25"},{"lineNumber":2,"author":{"gitId":"janald99"},"content":"","lastModifiedDate":"2022-03-25"},{"lineNumber":3,"author":{"gitId":"janald99"},"content":"import static seedu.address.commons.core.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2022-03-27"},{"lineNumber":4,"author":{"gitId":"janald99"},"content":"","lastModifiedDate":"2022-03-27"},{"lineNumber":5,"author":{"gitId":"janald99"},"content":"import seedu.address.commons.core.index.Index;","lastModifiedDate":"2022-03-25"},{"lineNumber":6,"author":{"gitId":"janald99"},"content":"import seedu.address.logic.commands.MatchCommand;","lastModifiedDate":"2022-03-25"},{"lineNumber":7,"author":{"gitId":"janald99"},"content":"import seedu.address.logic.parser.exceptions.ParseException;","lastModifiedDate":"2022-03-25"},{"lineNumber":8,"author":{"gitId":"janald99"},"content":"","lastModifiedDate":"2022-03-25"},{"lineNumber":9,"author":{"gitId":"janald99"},"content":"","lastModifiedDate":"2022-03-25"},{"lineNumber":10,"author":{"gitId":"janald99"},"content":"/**","lastModifiedDate":"2022-03-25"},{"lineNumber":11,"author":{"gitId":"janald99"},"content":" * Parses input arguments and creates a new MatchCommand object","lastModifiedDate":"2022-03-25"},{"lineNumber":12,"author":{"gitId":"janald99"},"content":" */","lastModifiedDate":"2022-03-25"},{"lineNumber":13,"author":{"gitId":"janald99"},"content":"public class MatchCommandParser implements Parser\u003cMatchCommand\u003e {","lastModifiedDate":"2022-03-25"},{"lineNumber":14,"author":{"gitId":"janald99"},"content":"    /**","lastModifiedDate":"2022-03-25"},{"lineNumber":15,"author":{"gitId":"janald99"},"content":"     * Parses {@code userInput} into a command and returns it.","lastModifiedDate":"2022-03-25"},{"lineNumber":16,"author":{"gitId":"janald99"},"content":"     *","lastModifiedDate":"2022-03-25"},{"lineNumber":17,"author":{"gitId":"janald99"},"content":"     * @param userInput full user input string","lastModifiedDate":"2022-03-31"},{"lineNumber":18,"author":{"gitId":"janald99"},"content":"     * @throws ParseException if {@code userInput} does not conform the expected format","lastModifiedDate":"2022-03-25"},{"lineNumber":19,"author":{"gitId":"janald99"},"content":"     */","lastModifiedDate":"2022-03-25"},{"lineNumber":20,"author":{"gitId":"janald99"},"content":"    @Override","lastModifiedDate":"2022-03-25"},{"lineNumber":21,"author":{"gitId":"janald99"},"content":"    public MatchCommand parse(String userInput) throws ParseException {","lastModifiedDate":"2022-03-25"},{"lineNumber":22,"author":{"gitId":"janald99"},"content":"        try {","lastModifiedDate":"2022-03-25"},{"lineNumber":23,"author":{"gitId":"janald99"},"content":"            Index index \u003d ParserUtil.parseIndex(userInput);","lastModifiedDate":"2022-03-25"},{"lineNumber":24,"author":{"gitId":"janald99"},"content":"            return new MatchCommand(index);","lastModifiedDate":"2022-03-25"},{"lineNumber":25,"author":{"gitId":"janald99"},"content":"        } catch (ParseException pe) {","lastModifiedDate":"2022-03-25"},{"lineNumber":26,"author":{"gitId":"janald99"},"content":"            throw new ParseException(","lastModifiedDate":"2022-03-25"},{"lineNumber":27,"author":{"gitId":"janald99"},"content":"                String.format(MESSAGE_INVALID_COMMAND_FORMAT, MatchCommand.MESSAGE_USAGE), pe);","lastModifiedDate":"2022-03-25"},{"lineNumber":28,"author":{"gitId":"janald99"},"content":"        }","lastModifiedDate":"2022-03-25"},{"lineNumber":29,"author":{"gitId":"janald99"},"content":"    }","lastModifiedDate":"2022-03-25"},{"lineNumber":30,"author":{"gitId":"janald99"},"content":"}","lastModifiedDate":"2022-03-25"}],"authorContributionMap":{"janald99":30}},{"path":"src/main/java/seedu/address/logic/parser/MatchHouseTypeCommandParser.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"janald99"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2022-03-31"},{"lineNumber":2,"author":{"gitId":"janald99"},"content":"","lastModifiedDate":"2022-03-31"},{"lineNumber":3,"author":{"gitId":"janald99"},"content":"import static seedu.address.commons.core.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2022-03-31"},{"lineNumber":4,"author":{"gitId":"janald99"},"content":"","lastModifiedDate":"2022-03-31"},{"lineNumber":5,"author":{"gitId":"janald99"},"content":"import seedu.address.commons.core.index.Index;","lastModifiedDate":"2022-03-31"},{"lineNumber":6,"author":{"gitId":"janald99"},"content":"import seedu.address.logic.commands.MatchHouseTypeCommand;","lastModifiedDate":"2022-03-31"},{"lineNumber":7,"author":{"gitId":"janald99"},"content":"import seedu.address.logic.parser.exceptions.ParseException;","lastModifiedDate":"2022-03-31"},{"lineNumber":8,"author":{"gitId":"janald99"},"content":"","lastModifiedDate":"2022-03-31"},{"lineNumber":9,"author":{"gitId":"janald99"},"content":"public class MatchHouseTypeCommandParser implements Parser\u003cMatchHouseTypeCommand\u003e {","lastModifiedDate":"2022-03-31"},{"lineNumber":10,"author":{"gitId":"janald99"},"content":"","lastModifiedDate":"2022-03-31"},{"lineNumber":11,"author":{"gitId":"janald99"},"content":"    /**","lastModifiedDate":"2022-03-31"},{"lineNumber":12,"author":{"gitId":"janald99"},"content":"     * Parses {@code userInput} into a command and returns it.","lastModifiedDate":"2022-03-31"},{"lineNumber":13,"author":{"gitId":"janald99"},"content":"     *","lastModifiedDate":"2022-03-31"},{"lineNumber":14,"author":{"gitId":"janald99"},"content":"     * @param userInput full user input string","lastModifiedDate":"2022-03-31"},{"lineNumber":15,"author":{"gitId":"janald99"},"content":"     * @throws ParseException if {@code userInput} does not conform the expected format","lastModifiedDate":"2022-03-31"},{"lineNumber":16,"author":{"gitId":"janald99"},"content":"     */","lastModifiedDate":"2022-03-31"},{"lineNumber":17,"author":{"gitId":"janald99"},"content":"    @Override","lastModifiedDate":"2022-03-31"},{"lineNumber":18,"author":{"gitId":"janald99"},"content":"    public MatchHouseTypeCommand parse(String userInput) throws ParseException {","lastModifiedDate":"2022-03-31"},{"lineNumber":19,"author":{"gitId":"janald99"},"content":"        try {","lastModifiedDate":"2022-03-31"},{"lineNumber":20,"author":{"gitId":"janald99"},"content":"            Index index \u003d ParserUtil.parseIndex(userInput);","lastModifiedDate":"2022-03-31"},{"lineNumber":21,"author":{"gitId":"janald99"},"content":"            return new MatchHouseTypeCommand(index);","lastModifiedDate":"2022-03-31"},{"lineNumber":22,"author":{"gitId":"janald99"},"content":"        } catch (ParseException pe) {","lastModifiedDate":"2022-03-31"},{"lineNumber":23,"author":{"gitId":"janald99"},"content":"            throw new ParseException(","lastModifiedDate":"2022-03-31"},{"lineNumber":24,"author":{"gitId":"janald99"},"content":"            String.format(MESSAGE_INVALID_COMMAND_FORMAT, MatchHouseTypeCommand.MESSAGE_USAGE), pe);","lastModifiedDate":"2022-03-31"},{"lineNumber":25,"author":{"gitId":"janald99"},"content":"        }","lastModifiedDate":"2022-03-31"},{"lineNumber":26,"author":{"gitId":"janald99"},"content":"    }","lastModifiedDate":"2022-03-31"},{"lineNumber":27,"author":{"gitId":"janald99"},"content":"}","lastModifiedDate":"2022-03-31"}],"authorContributionMap":{"janald99":27}},{"path":"src/main/java/seedu/address/logic/parser/MatchLocationCommandParser.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"janald99"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2022-03-31"},{"lineNumber":2,"author":{"gitId":"janald99"},"content":"","lastModifiedDate":"2022-03-31"},{"lineNumber":3,"author":{"gitId":"janald99"},"content":"import static seedu.address.commons.core.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2022-03-31"},{"lineNumber":4,"author":{"gitId":"janald99"},"content":"","lastModifiedDate":"2022-03-31"},{"lineNumber":5,"author":{"gitId":"janald99"},"content":"import seedu.address.commons.core.index.Index;","lastModifiedDate":"2022-03-31"},{"lineNumber":6,"author":{"gitId":"janald99"},"content":"import seedu.address.logic.commands.MatchLocationCommand;","lastModifiedDate":"2022-03-31"},{"lineNumber":7,"author":{"gitId":"janald99"},"content":"import seedu.address.logic.parser.exceptions.ParseException;","lastModifiedDate":"2022-03-31"},{"lineNumber":8,"author":{"gitId":"janald99"},"content":"","lastModifiedDate":"2022-03-31"},{"lineNumber":9,"author":{"gitId":"janald99"},"content":"public class MatchLocationCommandParser implements Parser\u003cMatchLocationCommand\u003e {","lastModifiedDate":"2022-03-31"},{"lineNumber":10,"author":{"gitId":"janald99"},"content":"","lastModifiedDate":"2022-03-31"},{"lineNumber":11,"author":{"gitId":"janald99"},"content":"    /**","lastModifiedDate":"2022-03-31"},{"lineNumber":12,"author":{"gitId":"janald99"},"content":"     * Parses {@code userInput} into a command and returns it.","lastModifiedDate":"2022-03-31"},{"lineNumber":13,"author":{"gitId":"janald99"},"content":"     *","lastModifiedDate":"2022-03-31"},{"lineNumber":14,"author":{"gitId":"janald99"},"content":"     * @param userInput full user input string","lastModifiedDate":"2022-03-31"},{"lineNumber":15,"author":{"gitId":"janald99"},"content":"     * @throws ParseException if {@code userInput} does not conform the expected format","lastModifiedDate":"2022-03-31"},{"lineNumber":16,"author":{"gitId":"janald99"},"content":"     */","lastModifiedDate":"2022-03-31"},{"lineNumber":17,"author":{"gitId":"janald99"},"content":"    @Override","lastModifiedDate":"2022-03-31"},{"lineNumber":18,"author":{"gitId":"janald99"},"content":"    public MatchLocationCommand parse(String userInput) throws ParseException {","lastModifiedDate":"2022-03-31"},{"lineNumber":19,"author":{"gitId":"janald99"},"content":"        try {","lastModifiedDate":"2022-03-31"},{"lineNumber":20,"author":{"gitId":"janald99"},"content":"            Index index \u003d ParserUtil.parseIndex(userInput);","lastModifiedDate":"2022-03-31"},{"lineNumber":21,"author":{"gitId":"janald99"},"content":"            return new MatchLocationCommand(index);","lastModifiedDate":"2022-03-31"},{"lineNumber":22,"author":{"gitId":"janald99"},"content":"        } catch (ParseException pe) {","lastModifiedDate":"2022-03-31"},{"lineNumber":23,"author":{"gitId":"janald99"},"content":"            throw new ParseException(","lastModifiedDate":"2022-03-31"},{"lineNumber":24,"author":{"gitId":"janald99"},"content":"                String.format(MESSAGE_INVALID_COMMAND_FORMAT, MatchLocationCommand.MESSAGE_USAGE), pe);","lastModifiedDate":"2022-03-31"},{"lineNumber":25,"author":{"gitId":"janald99"},"content":"        }","lastModifiedDate":"2022-03-31"},{"lineNumber":26,"author":{"gitId":"janald99"},"content":"    }","lastModifiedDate":"2022-03-31"},{"lineNumber":27,"author":{"gitId":"janald99"},"content":"}","lastModifiedDate":"2022-03-31"}],"authorContributionMap":{"janald99":27}},{"path":"src/main/java/seedu/address/logic/parser/MatchPriceRangeCommandParser.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"janald99"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2022-03-31"},{"lineNumber":2,"author":{"gitId":"janald99"},"content":"","lastModifiedDate":"2022-03-31"},{"lineNumber":3,"author":{"gitId":"janald99"},"content":"import static seedu.address.commons.core.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2022-03-31"},{"lineNumber":4,"author":{"gitId":"janald99"},"content":"","lastModifiedDate":"2022-03-31"},{"lineNumber":5,"author":{"gitId":"janald99"},"content":"import seedu.address.commons.core.index.Index;","lastModifiedDate":"2022-03-31"},{"lineNumber":6,"author":{"gitId":"janald99"},"content":"import seedu.address.logic.commands.MatchPriceRangeCommand;","lastModifiedDate":"2022-03-31"},{"lineNumber":7,"author":{"gitId":"janald99"},"content":"import seedu.address.logic.parser.exceptions.ParseException;","lastModifiedDate":"2022-03-31"},{"lineNumber":8,"author":{"gitId":"janald99"},"content":"","lastModifiedDate":"2022-03-31"},{"lineNumber":9,"author":{"gitId":"janald99"},"content":"public class MatchPriceRangeCommandParser implements Parser\u003cMatchPriceRangeCommand\u003e {","lastModifiedDate":"2022-03-31"},{"lineNumber":10,"author":{"gitId":"janald99"},"content":"    /**","lastModifiedDate":"2022-03-31"},{"lineNumber":11,"author":{"gitId":"janald99"},"content":"     * Parses {@code userInput} into a command and returns it.","lastModifiedDate":"2022-03-31"},{"lineNumber":12,"author":{"gitId":"janald99"},"content":"     *","lastModifiedDate":"2022-03-31"},{"lineNumber":13,"author":{"gitId":"janald99"},"content":"     * @param userInput full user input string","lastModifiedDate":"2022-03-31"},{"lineNumber":14,"author":{"gitId":"janald99"},"content":"     * @throws ParseException if {@code userInput} does not conform the expected format","lastModifiedDate":"2022-03-31"},{"lineNumber":15,"author":{"gitId":"janald99"},"content":"     */","lastModifiedDate":"2022-03-31"},{"lineNumber":16,"author":{"gitId":"janald99"},"content":"    @Override","lastModifiedDate":"2022-03-31"},{"lineNumber":17,"author":{"gitId":"janald99"},"content":"    public MatchPriceRangeCommand parse(String userInput) throws ParseException {","lastModifiedDate":"2022-03-31"},{"lineNumber":18,"author":{"gitId":"janald99"},"content":"        try {","lastModifiedDate":"2022-03-31"},{"lineNumber":19,"author":{"gitId":"janald99"},"content":"            Index index \u003d ParserUtil.parseIndex(userInput);","lastModifiedDate":"2022-03-31"},{"lineNumber":20,"author":{"gitId":"janald99"},"content":"            return new MatchPriceRangeCommand(index);","lastModifiedDate":"2022-03-31"},{"lineNumber":21,"author":{"gitId":"janald99"},"content":"        } catch (ParseException pe) {","lastModifiedDate":"2022-03-31"},{"lineNumber":22,"author":{"gitId":"janald99"},"content":"            throw new ParseException(","lastModifiedDate":"2022-03-31"},{"lineNumber":23,"author":{"gitId":"janald99"},"content":"                String.format(MESSAGE_INVALID_COMMAND_FORMAT, MatchPriceRangeCommand.MESSAGE_USAGE), pe);","lastModifiedDate":"2022-03-31"},{"lineNumber":24,"author":{"gitId":"janald99"},"content":"        }","lastModifiedDate":"2022-03-31"},{"lineNumber":25,"author":{"gitId":"janald99"},"content":"    }","lastModifiedDate":"2022-03-31"},{"lineNumber":26,"author":{"gitId":"janald99"},"content":"}","lastModifiedDate":"2022-03-31"}],"authorContributionMap":{"janald99":26}},{"path":"src/main/java/seedu/address/logic/parser/ParserUtil.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2017-02-11"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-11"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2017-05-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.util.Collection;","lastModifiedDate":"2017-02-11"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.util.HashSet;","lastModifiedDate":"2017-02-11"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import java.util.Set;","lastModifiedDate":"2017-02-11"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-11"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.index.Index;","lastModifiedDate":"2017-05-25"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import seedu.address.commons.util.StringUtil;","lastModifiedDate":"2017-02-11"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import seedu.address.logic.parser.exceptions.ParseException;","lastModifiedDate":"2018-07-10"},{"lineNumber":12,"author":{"gitId":"Jacky142857"},"content":"import seedu.address.model.client.Appointment;","lastModifiedDate":"2022-03-11"},{"lineNumber":13,"author":{"gitId":"cwnm"},"content":"import seedu.address.model.client.Name;","lastModifiedDate":"2022-03-04"},{"lineNumber":14,"author":{"gitId":"cwnm"},"content":"import seedu.address.model.client.Phone;","lastModifiedDate":"2022-03-04"},{"lineNumber":15,"author":{"gitId":"WJunHong"},"content":"import seedu.address.model.property.Address;","lastModifiedDate":"2022-03-27"},{"lineNumber":16,"author":{"gitId":"WJunHong"},"content":"import seedu.address.model.property.HouseType;","lastModifiedDate":"2022-03-24"},{"lineNumber":17,"author":{"gitId":"WJunHong"},"content":"import seedu.address.model.property.Location;","lastModifiedDate":"2022-03-24"},{"lineNumber":18,"author":{"gitId":"WJunHong"},"content":"import seedu.address.model.property.PriceRange;","lastModifiedDate":"2022-03-24"},{"lineNumber":19,"author":{"gitId":"-"},"content":"import seedu.address.model.tag.Tag;","lastModifiedDate":"2017-02-11"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-11"},{"lineNumber":21,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-02-11"},{"lineNumber":22,"author":{"gitId":"-"},"content":" * Contains utility methods used for parsing strings in the various *Parser classes.","lastModifiedDate":"2017-07-18"},{"lineNumber":23,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-02-11"},{"lineNumber":24,"author":{"gitId":"-"},"content":"public class ParserUtil {","lastModifiedDate":"2017-02-11"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-11"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_INVALID_INDEX \u003d \"Index is not a non-zero unsigned integer.\";","lastModifiedDate":"2017-06-02"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-02"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-02-11"},{"lineNumber":29,"author":{"gitId":"-"},"content":"     * Parses {@code oneBasedIndex} into an {@code Index} and returns it. Leading and trailing whitespaces will be","lastModifiedDate":"2017-05-25"},{"lineNumber":30,"author":{"gitId":"-"},"content":"     * trimmed.","lastModifiedDate":"2017-05-25"},{"lineNumber":31,"author":{"gitId":"-"},"content":"     * @throws ParseException if the specified index is invalid (not non-zero unsigned integer).","lastModifiedDate":"2018-07-10"},{"lineNumber":32,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-02-11"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    public static Index parseIndex(String oneBasedIndex) throws ParseException {","lastModifiedDate":"2018-07-10"},{"lineNumber":34,"author":{"gitId":"-"},"content":"        String trimmedIndex \u003d oneBasedIndex.trim();","lastModifiedDate":"2017-05-25"},{"lineNumber":35,"author":{"gitId":"-"},"content":"        if (!StringUtil.isNonZeroUnsignedInteger(trimmedIndex)) {","lastModifiedDate":"2017-06-02"},{"lineNumber":36,"author":{"gitId":"-"},"content":"            throw new ParseException(MESSAGE_INVALID_INDEX);","lastModifiedDate":"2018-07-10"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-02-11"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        return Index.fromOneBased(Integer.parseInt(trimmedIndex));","lastModifiedDate":"2017-05-25"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-02-11"},{"lineNumber":40,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-11"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-05-29"},{"lineNumber":42,"author":{"gitId":"-"},"content":"     * Parses a {@code String name} into a {@code Name}.","lastModifiedDate":"2017-05-29"},{"lineNumber":43,"author":{"gitId":"-"},"content":"     * Leading and trailing whitespaces will be trimmed.","lastModifiedDate":"2017-05-29"},{"lineNumber":44,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2017-05-29"},{"lineNumber":45,"author":{"gitId":"-"},"content":"     * @throws ParseException if the given {@code name} is invalid.","lastModifiedDate":"2018-07-10"},{"lineNumber":46,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-05-29"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    public static Name parseName(String name) throws ParseException {","lastModifiedDate":"2018-07-10"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        requireNonNull(name);","lastModifiedDate":"2017-05-29"},{"lineNumber":49,"author":{"gitId":"-"},"content":"        String trimmedName \u003d name.trim();","lastModifiedDate":"2017-05-29"},{"lineNumber":50,"author":{"gitId":"-"},"content":"        if (!Name.isValidName(trimmedName)) {","lastModifiedDate":"2017-05-30"},{"lineNumber":51,"author":{"gitId":"-"},"content":"            throw new ParseException(Name.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2018-09-22"},{"lineNumber":52,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-30"},{"lineNumber":53,"author":{"gitId":"-"},"content":"        return new Name(trimmedName);","lastModifiedDate":"2017-05-29"},{"lineNumber":54,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-29"},{"lineNumber":55,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-29"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-05-30"},{"lineNumber":57,"author":{"gitId":"-"},"content":"     * Parses a {@code String phone} into a {@code Phone}.","lastModifiedDate":"2017-05-30"},{"lineNumber":58,"author":{"gitId":"-"},"content":"     * Leading and trailing whitespaces will be trimmed.","lastModifiedDate":"2017-05-30"},{"lineNumber":59,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2017-05-30"},{"lineNumber":60,"author":{"gitId":"-"},"content":"     * @throws ParseException if the given {@code phone} is invalid.","lastModifiedDate":"2018-07-10"},{"lineNumber":61,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-05-30"},{"lineNumber":62,"author":{"gitId":"-"},"content":"    public static Phone parsePhone(String phone) throws ParseException {","lastModifiedDate":"2018-07-10"},{"lineNumber":63,"author":{"gitId":"-"},"content":"        requireNonNull(phone);","lastModifiedDate":"2017-05-30"},{"lineNumber":64,"author":{"gitId":"-"},"content":"        String trimmedPhone \u003d phone.trim();","lastModifiedDate":"2017-05-30"},{"lineNumber":65,"author":{"gitId":"-"},"content":"        if (!Phone.isValidPhone(trimmedPhone)) {","lastModifiedDate":"2017-05-30"},{"lineNumber":66,"author":{"gitId":"-"},"content":"            throw new ParseException(Phone.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2018-09-22"},{"lineNumber":67,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-30"},{"lineNumber":68,"author":{"gitId":"-"},"content":"        return new Phone(trimmedPhone);","lastModifiedDate":"2017-05-30"},{"lineNumber":69,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-30"},{"lineNumber":70,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-30"},{"lineNumber":71,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2022-03-11"},{"lineNumber":72,"author":{"gitId":"Jacky142857"},"content":"     * Parses a {@code String appointment} into an {@code Appointment}.","lastModifiedDate":"2022-03-11"},{"lineNumber":73,"author":{"gitId":"Jacky142857"},"content":"     * Leading and trailing whitespaces will be trimmed.","lastModifiedDate":"2022-03-11"},{"lineNumber":74,"author":{"gitId":"Jacky142857"},"content":"     *","lastModifiedDate":"2022-03-11"},{"lineNumber":75,"author":{"gitId":"Jacky142857"},"content":"     * @throws ParseException if the given {@code appointment} is invalid.","lastModifiedDate":"2022-03-11"},{"lineNumber":76,"author":{"gitId":"Jacky142857"},"content":"     */","lastModifiedDate":"2022-03-11"},{"lineNumber":77,"author":{"gitId":"Jacky142857"},"content":"    public static Appointment parseAppointment(String appointment) throws ParseException {","lastModifiedDate":"2022-03-11"},{"lineNumber":78,"author":{"gitId":"Jacky142857"},"content":"        requireNonNull(appointment);","lastModifiedDate":"2022-03-11"},{"lineNumber":79,"author":{"gitId":"Jacky142857"},"content":"        String trimmedAppointment \u003d appointment.trim();","lastModifiedDate":"2022-03-11"},{"lineNumber":80,"author":{"gitId":"Jacky142857"},"content":"        if (trimmedAppointment.equals(\"reset\")) {","lastModifiedDate":"2022-03-31"},{"lineNumber":81,"author":{"gitId":"Jacky142857"},"content":"            return new Appointment(\"\");","lastModifiedDate":"2022-03-31"},{"lineNumber":82,"author":{"gitId":"Jacky142857"},"content":"        } else if (appointment.equals(\"\") || !Appointment.isValidAppointment(trimmedAppointment)) {","lastModifiedDate":"2022-04-07"},{"lineNumber":83,"author":{"gitId":"Jacky142857"},"content":"            throw new ParseException(Appointment.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2022-03-11"},{"lineNumber":84,"author":{"gitId":"Jacky142857"},"content":"        } else {","lastModifiedDate":"2022-03-31"},{"lineNumber":85,"author":{"gitId":"Jacky142857"},"content":"            return new Appointment(trimmedAppointment);","lastModifiedDate":"2022-03-11"},{"lineNumber":86,"author":{"gitId":"Jacky142857"},"content":"        }","lastModifiedDate":"2022-03-11"},{"lineNumber":87,"author":{"gitId":"Jacky142857"},"content":"    }","lastModifiedDate":"2022-03-31"},{"lineNumber":88,"author":{"gitId":"Jacky142857"},"content":"","lastModifiedDate":"2022-03-11"},{"lineNumber":89,"author":{"gitId":"WJunHong"},"content":"    /**","lastModifiedDate":"2022-03-24"},{"lineNumber":90,"author":{"gitId":"WJunHong"},"content":"     * Parses a {@code String Location} into an {@code Location}.","lastModifiedDate":"2022-03-24"},{"lineNumber":91,"author":{"gitId":"WJunHong"},"content":"     * Leading and trailing whitespaces will be trimmed.","lastModifiedDate":"2022-03-24"},{"lineNumber":92,"author":{"gitId":"WJunHong"},"content":"     *","lastModifiedDate":"2022-03-24"},{"lineNumber":93,"author":{"gitId":"WJunHong"},"content":"     * @throws ParseException if the given {@code appointment} is invalid.","lastModifiedDate":"2022-03-24"},{"lineNumber":94,"author":{"gitId":"WJunHong"},"content":"     */","lastModifiedDate":"2022-03-24"},{"lineNumber":95,"author":{"gitId":"chuashihong"},"content":"    public static Location parseLocation(String location) throws ParseException {","lastModifiedDate":"2022-03-28"},{"lineNumber":96,"author":{"gitId":"WJunHong"},"content":"        requireNonNull(location);","lastModifiedDate":"2022-03-24"},{"lineNumber":97,"author":{"gitId":"WJunHong"},"content":"        String trimmedLocation \u003d location.trim();","lastModifiedDate":"2022-03-24"},{"lineNumber":98,"author":{"gitId":"WJunHong"},"content":"        if (!Location.isValidLocation(trimmedLocation)) {","lastModifiedDate":"2022-03-24"},{"lineNumber":99,"author":{"gitId":"WJunHong"},"content":"            throw new ParseException(Location.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2022-03-24"},{"lineNumber":100,"author":{"gitId":"WJunHong"},"content":"        }","lastModifiedDate":"2022-03-24"},{"lineNumber":101,"author":{"gitId":"chuashihong"},"content":"        return new Location(trimmedLocation);","lastModifiedDate":"2022-03-28"},{"lineNumber":102,"author":{"gitId":"WJunHong"},"content":"    }","lastModifiedDate":"2022-03-24"},{"lineNumber":103,"author":{"gitId":"WJunHong"},"content":"","lastModifiedDate":"2022-03-24"},{"lineNumber":104,"author":{"gitId":"WJunHong"},"content":"    /**","lastModifiedDate":"2022-03-27"},{"lineNumber":105,"author":{"gitId":"WJunHong"},"content":"     * Parses a {@code String address} into a {@code address}.","lastModifiedDate":"2022-03-27"},{"lineNumber":106,"author":{"gitId":"-"},"content":"     * Leading and trailing whitespaces will be trimmed.","lastModifiedDate":"2022-03-27"},{"lineNumber":107,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2022-03-27"},{"lineNumber":108,"author":{"gitId":"-"},"content":"     * @throws ParseException if the given {@code address} is invalid.","lastModifiedDate":"2022-03-27"},{"lineNumber":109,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2022-03-27"},{"lineNumber":110,"author":{"gitId":"-"},"content":"    public static Address parseAddress(String address) throws ParseException {","lastModifiedDate":"2022-03-27"},{"lineNumber":111,"author":{"gitId":"-"},"content":"        requireNonNull(address);","lastModifiedDate":"2022-03-27"},{"lineNumber":112,"author":{"gitId":"-"},"content":"        String trimmedAddress \u003d address.trim();","lastModifiedDate":"2022-03-27"},{"lineNumber":113,"author":{"gitId":"-"},"content":"        if (!Address.isValidAddress(trimmedAddress)) {","lastModifiedDate":"2022-03-27"},{"lineNumber":114,"author":{"gitId":"-"},"content":"            throw new ParseException(Address.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2022-03-27"},{"lineNumber":115,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2022-03-27"},{"lineNumber":116,"author":{"gitId":"-"},"content":"        return new Address(trimmedAddress);","lastModifiedDate":"2022-03-27"},{"lineNumber":117,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2022-03-27"},{"lineNumber":118,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-03-27"},{"lineNumber":119,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2022-03-24"},{"lineNumber":120,"author":{"gitId":"WJunHong"},"content":"     * Parses a {@code String priceRange} into an {@code PriceRange}.","lastModifiedDate":"2022-03-24"},{"lineNumber":121,"author":{"gitId":"WJunHong"},"content":"     * Leading and trailing whitespaces will be trimmed.","lastModifiedDate":"2022-03-24"},{"lineNumber":122,"author":{"gitId":"WJunHong"},"content":"     *","lastModifiedDate":"2022-03-24"},{"lineNumber":123,"author":{"gitId":"WJunHong"},"content":"     * @throws ParseException if the given {@code appointment} is invalid.","lastModifiedDate":"2022-03-24"},{"lineNumber":124,"author":{"gitId":"WJunHong"},"content":"     */","lastModifiedDate":"2022-03-24"},{"lineNumber":125,"author":{"gitId":"WJunHong"},"content":"    public static PriceRange parsePriceRange(String priceRange) throws ParseException {","lastModifiedDate":"2022-03-24"},{"lineNumber":126,"author":{"gitId":"WJunHong"},"content":"        requireNonNull(priceRange);","lastModifiedDate":"2022-03-24"},{"lineNumber":127,"author":{"gitId":"WJunHong"},"content":"        String trimmedPriceRange \u003d priceRange.trim();","lastModifiedDate":"2022-03-24"},{"lineNumber":128,"author":{"gitId":"WJunHong"},"content":"        if (!PriceRange.isValidPriceRange(trimmedPriceRange)) {","lastModifiedDate":"2022-03-24"},{"lineNumber":129,"author":{"gitId":"WJunHong"},"content":"            throw new ParseException(PriceRange.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2022-03-24"},{"lineNumber":130,"author":{"gitId":"WJunHong"},"content":"        }","lastModifiedDate":"2022-03-24"},{"lineNumber":131,"author":{"gitId":"WJunHong"},"content":"        return new PriceRange(trimmedPriceRange);","lastModifiedDate":"2022-03-24"},{"lineNumber":132,"author":{"gitId":"WJunHong"},"content":"    }","lastModifiedDate":"2022-03-24"},{"lineNumber":133,"author":{"gitId":"WJunHong"},"content":"","lastModifiedDate":"2022-03-24"},{"lineNumber":134,"author":{"gitId":"WJunHong"},"content":"    /**","lastModifiedDate":"2022-03-24"},{"lineNumber":135,"author":{"gitId":"WJunHong"},"content":"     * Parses a {@code String houseType} into an {@code HouseType}.","lastModifiedDate":"2022-03-24"},{"lineNumber":136,"author":{"gitId":"-"},"content":"     * Leading and trailing whitespaces will be trimmed.","lastModifiedDate":"2022-03-24"},{"lineNumber":137,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2022-03-24"},{"lineNumber":138,"author":{"gitId":"WJunHong"},"content":"     * @throws ParseException if the given {@code houseType} is invalid.","lastModifiedDate":"2022-03-24"},{"lineNumber":139,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2022-03-24"},{"lineNumber":140,"author":{"gitId":"WJunHong"},"content":"    public static HouseType parseHouseType(String houseType) throws ParseException {","lastModifiedDate":"2022-03-24"},{"lineNumber":141,"author":{"gitId":"WJunHong"},"content":"        requireNonNull(houseType);","lastModifiedDate":"2022-03-24"},{"lineNumber":142,"author":{"gitId":"WJunHong"},"content":"        String trimmedHouseType \u003d houseType.trim();","lastModifiedDate":"2022-03-27"},{"lineNumber":143,"author":{"gitId":"WJunHong"},"content":"        if (!HouseType.isValidHouseType(trimmedHouseType)) {","lastModifiedDate":"2022-03-27"},{"lineNumber":144,"author":{"gitId":"WJunHong"},"content":"            throw new ParseException(HouseType.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2022-03-24"},{"lineNumber":145,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2022-03-24"},{"lineNumber":146,"author":{"gitId":"WJunHong"},"content":"        return HouseType.getHouseType(houseType);","lastModifiedDate":"2022-03-24"},{"lineNumber":147,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2022-03-24"},{"lineNumber":148,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-03-24"},{"lineNumber":149,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-05-30"},{"lineNumber":150,"author":{"gitId":"-"},"content":"     * Parses a {@code String tag} into a {@code Tag}.","lastModifiedDate":"2017-05-30"},{"lineNumber":151,"author":{"gitId":"-"},"content":"     * Leading and trailing whitespaces will be trimmed.","lastModifiedDate":"2017-05-30"},{"lineNumber":152,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2017-05-30"},{"lineNumber":153,"author":{"gitId":"-"},"content":"     * @throws ParseException if the given {@code tag} is invalid.","lastModifiedDate":"2018-07-10"},{"lineNumber":154,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-05-30"},{"lineNumber":155,"author":{"gitId":"-"},"content":"    public static Tag parseTag(String tag) throws ParseException {","lastModifiedDate":"2018-07-10"},{"lineNumber":156,"author":{"gitId":"-"},"content":"        requireNonNull(tag);","lastModifiedDate":"2017-05-30"},{"lineNumber":157,"author":{"gitId":"-"},"content":"        String trimmedTag \u003d tag.trim();","lastModifiedDate":"2017-05-30"},{"lineNumber":158,"author":{"gitId":"-"},"content":"        if (!Tag.isValidTagName(trimmedTag)) {","lastModifiedDate":"2017-05-30"},{"lineNumber":159,"author":{"gitId":"-"},"content":"            throw new ParseException(Tag.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2018-09-22"},{"lineNumber":160,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-30"},{"lineNumber":161,"author":{"gitId":"-"},"content":"        return new Tag(trimmedTag);","lastModifiedDate":"2017-05-30"},{"lineNumber":162,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-30"},{"lineNumber":163,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-30"},{"lineNumber":164,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-02-11"},{"lineNumber":165,"author":{"gitId":"-"},"content":"     * Parses {@code Collection\u003cString\u003e tags} into a {@code Set\u003cTag\u003e}.","lastModifiedDate":"2017-03-07"},{"lineNumber":166,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-02-11"},{"lineNumber":167,"author":{"gitId":"-"},"content":"    public static Set\u003cTag\u003e parseTags(Collection\u003cString\u003e tags) throws ParseException {","lastModifiedDate":"2018-07-10"},{"lineNumber":168,"author":{"gitId":"-"},"content":"        requireNonNull(tags);","lastModifiedDate":"2017-05-15"},{"lineNumber":169,"author":{"gitId":"-"},"content":"        final Set\u003cTag\u003e tagSet \u003d new HashSet\u003c\u003e();","lastModifiedDate":"2017-02-11"},{"lineNumber":170,"author":{"gitId":"-"},"content":"        for (String tagName : tags) {","lastModifiedDate":"2017-02-11"},{"lineNumber":171,"author":{"gitId":"-"},"content":"            tagSet.add(parseTag(tagName));","lastModifiedDate":"2017-05-30"},{"lineNumber":172,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-02-11"},{"lineNumber":173,"author":{"gitId":"-"},"content":"        return tagSet;","lastModifiedDate":"2017-03-07"},{"lineNumber":174,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-02-11"},{"lineNumber":175,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-02-11"}],"authorContributionMap":{"WJunHong":42,"Jacky142857":18,"-":111,"cwnm":2,"chuashihong":2}},{"path":"src/main/java/seedu/address/logic/parser/SortBuyerCommandParser.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"Jacky142857"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2022-03-31"},{"lineNumber":2,"author":{"gitId":"Jacky142857"},"content":"","lastModifiedDate":"2022-03-31"},{"lineNumber":3,"author":{"gitId":"Jacky142857"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2022-03-31"},{"lineNumber":4,"author":{"gitId":"Jacky142857"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_COMPARE;","lastModifiedDate":"2022-03-31"},{"lineNumber":5,"author":{"gitId":"Jacky142857"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_ORDER;","lastModifiedDate":"2022-03-31"},{"lineNumber":6,"author":{"gitId":"Jacky142857"},"content":"","lastModifiedDate":"2022-03-31"},{"lineNumber":7,"author":{"gitId":"Jacky142857"},"content":"import java.util.NoSuchElementException;","lastModifiedDate":"2022-03-31"},{"lineNumber":8,"author":{"gitId":"Jacky142857"},"content":"","lastModifiedDate":"2022-03-31"},{"lineNumber":9,"author":{"gitId":"Jacky142857"},"content":"import seedu.address.logic.commands.SortBuyerCommand;","lastModifiedDate":"2022-03-31"},{"lineNumber":10,"author":{"gitId":"Jacky142857"},"content":"import seedu.address.logic.parser.exceptions.ParseException;","lastModifiedDate":"2022-03-31"},{"lineNumber":11,"author":{"gitId":"Jacky142857"},"content":"","lastModifiedDate":"2022-03-31"},{"lineNumber":12,"author":{"gitId":"Jacky142857"},"content":"","lastModifiedDate":"2022-03-31"},{"lineNumber":13,"author":{"gitId":"Jacky142857"},"content":"","lastModifiedDate":"2022-03-31"},{"lineNumber":14,"author":{"gitId":"Jacky142857"},"content":"","lastModifiedDate":"2022-03-31"},{"lineNumber":15,"author":{"gitId":"Jacky142857"},"content":"public class SortBuyerCommandParser implements Parser\u003cSortBuyerCommand\u003e {","lastModifiedDate":"2022-03-31"},{"lineNumber":16,"author":{"gitId":"Jacky142857"},"content":"    @Override","lastModifiedDate":"2022-03-31"},{"lineNumber":17,"author":{"gitId":"Jacky142857"},"content":"    public SortBuyerCommand parse(String args) throws ParseException {","lastModifiedDate":"2022-03-31"},{"lineNumber":18,"author":{"gitId":"Jacky142857"},"content":"        requireNonNull(args);","lastModifiedDate":"2022-03-31"},{"lineNumber":19,"author":{"gitId":"Jacky142857"},"content":"        ArgumentMultimap argMultimap \u003d ArgumentTokenizer.tokenize(args, PREFIX_COMPARE, PREFIX_ORDER);","lastModifiedDate":"2022-03-31"},{"lineNumber":20,"author":{"gitId":"Jacky142857"},"content":"        String comparedItem \u003d \"\";","lastModifiedDate":"2022-03-31"},{"lineNumber":21,"author":{"gitId":"Jacky142857"},"content":"        String order \u003d \"\";","lastModifiedDate":"2022-03-31"},{"lineNumber":22,"author":{"gitId":"Jacky142857"},"content":"        try {","lastModifiedDate":"2022-03-31"},{"lineNumber":23,"author":{"gitId":"Jacky142857"},"content":"            comparedItem \u003d argMultimap.getValue(PREFIX_COMPARE).get();","lastModifiedDate":"2022-03-31"},{"lineNumber":24,"author":{"gitId":"Jacky142857"},"content":"        } catch (NoSuchElementException e) {","lastModifiedDate":"2022-03-31"},{"lineNumber":25,"author":{"gitId":"Jacky142857"},"content":"            throw new ParseException(SortBuyerCommand.MESSAGE_MISSING_ARGUMENTS);","lastModifiedDate":"2022-03-31"},{"lineNumber":26,"author":{"gitId":"Jacky142857"},"content":"        }","lastModifiedDate":"2022-03-31"},{"lineNumber":27,"author":{"gitId":"Jacky142857"},"content":"        if (comparedItem.equals(\"\")) {","lastModifiedDate":"2022-03-31"},{"lineNumber":28,"author":{"gitId":"Jacky142857"},"content":"            throw new ParseException(SortBuyerCommand.MESSAGE_MISSING_ARGUMENTS);","lastModifiedDate":"2022-03-31"},{"lineNumber":29,"author":{"gitId":"Jacky142857"},"content":"        }","lastModifiedDate":"2022-03-31"},{"lineNumber":30,"author":{"gitId":"Jacky142857"},"content":"        if (!comparedItem.equals(\"name\") \u0026\u0026 !comparedItem.equals(\"time\")) {","lastModifiedDate":"2022-03-31"},{"lineNumber":31,"author":{"gitId":"Jacky142857"},"content":"            throw new ParseException(SortBuyerCommand.MESSAGE_NOT_SORTABLE);","lastModifiedDate":"2022-03-31"},{"lineNumber":32,"author":{"gitId":"Jacky142857"},"content":"        }","lastModifiedDate":"2022-03-31"},{"lineNumber":33,"author":{"gitId":"Jacky142857"},"content":"        try {","lastModifiedDate":"2022-03-31"},{"lineNumber":34,"author":{"gitId":"Jacky142857"},"content":"            order \u003d argMultimap.getValue(PREFIX_ORDER).get();","lastModifiedDate":"2022-03-31"},{"lineNumber":35,"author":{"gitId":"Jacky142857"},"content":"        } catch (NoSuchElementException e) {","lastModifiedDate":"2022-03-31"},{"lineNumber":36,"author":{"gitId":"Jacky142857"},"content":"            throw new ParseException(SortBuyerCommand.MESSAGE_MISSING_ORDER);","lastModifiedDate":"2022-03-31"},{"lineNumber":37,"author":{"gitId":"Jacky142857"},"content":"        }","lastModifiedDate":"2022-03-31"},{"lineNumber":38,"author":{"gitId":"Jacky142857"},"content":"","lastModifiedDate":"2022-03-31"},{"lineNumber":39,"author":{"gitId":"Jacky142857"},"content":"        if (order.equals(\"\")) {","lastModifiedDate":"2022-03-31"},{"lineNumber":40,"author":{"gitId":"Jacky142857"},"content":"            throw new ParseException(SortBuyerCommand.MESSAGE_MISSING_ARGUMENTS);","lastModifiedDate":"2022-03-31"},{"lineNumber":41,"author":{"gitId":"Jacky142857"},"content":"        }","lastModifiedDate":"2022-03-31"},{"lineNumber":42,"author":{"gitId":"Jacky142857"},"content":"","lastModifiedDate":"2022-03-31"},{"lineNumber":43,"author":{"gitId":"Jacky142857"},"content":"        if (!order.equals(\"asc\") \u0026\u0026 !order.equals(\"desc\")) {","lastModifiedDate":"2022-03-31"},{"lineNumber":44,"author":{"gitId":"Jacky142857"},"content":"            throw new ParseException(SortBuyerCommand.MESSAGE_INCORRECT_ORDER);","lastModifiedDate":"2022-03-31"},{"lineNumber":45,"author":{"gitId":"Jacky142857"},"content":"        }","lastModifiedDate":"2022-03-31"},{"lineNumber":46,"author":{"gitId":"Jacky142857"},"content":"        return new SortBuyerCommand(comparedItem, order);","lastModifiedDate":"2022-03-31"},{"lineNumber":47,"author":{"gitId":"Jacky142857"},"content":"    }","lastModifiedDate":"2022-03-31"},{"lineNumber":48,"author":{"gitId":"Jacky142857"},"content":"}","lastModifiedDate":"2022-03-31"}],"authorContributionMap":{"Jacky142857":48}},{"path":"src/main/java/seedu/address/logic/parser/SortSellerCommandParser.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"Jacky142857"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2022-03-31"},{"lineNumber":2,"author":{"gitId":"Jacky142857"},"content":"","lastModifiedDate":"2022-03-31"},{"lineNumber":3,"author":{"gitId":"Jacky142857"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2022-03-31"},{"lineNumber":4,"author":{"gitId":"Jacky142857"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_COMPARE;","lastModifiedDate":"2022-03-31"},{"lineNumber":5,"author":{"gitId":"Jacky142857"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_ORDER;","lastModifiedDate":"2022-03-31"},{"lineNumber":6,"author":{"gitId":"Jacky142857"},"content":"","lastModifiedDate":"2022-03-31"},{"lineNumber":7,"author":{"gitId":"Jacky142857"},"content":"import java.util.NoSuchElementException;","lastModifiedDate":"2022-03-31"},{"lineNumber":8,"author":{"gitId":"Jacky142857"},"content":"","lastModifiedDate":"2022-03-31"},{"lineNumber":9,"author":{"gitId":"Jacky142857"},"content":"import seedu.address.logic.commands.SortSellerCommand;","lastModifiedDate":"2022-03-31"},{"lineNumber":10,"author":{"gitId":"Jacky142857"},"content":"import seedu.address.logic.parser.exceptions.ParseException;","lastModifiedDate":"2022-03-31"},{"lineNumber":11,"author":{"gitId":"Jacky142857"},"content":"","lastModifiedDate":"2022-03-31"},{"lineNumber":12,"author":{"gitId":"Jacky142857"},"content":"","lastModifiedDate":"2022-03-31"},{"lineNumber":13,"author":{"gitId":"Jacky142857"},"content":"","lastModifiedDate":"2022-03-31"},{"lineNumber":14,"author":{"gitId":"Jacky142857"},"content":"","lastModifiedDate":"2022-03-31"},{"lineNumber":15,"author":{"gitId":"Jacky142857"},"content":"public class SortSellerCommandParser implements Parser\u003cSortSellerCommand\u003e {","lastModifiedDate":"2022-03-31"},{"lineNumber":16,"author":{"gitId":"Jacky142857"},"content":"    @Override","lastModifiedDate":"2022-03-31"},{"lineNumber":17,"author":{"gitId":"Jacky142857"},"content":"    public SortSellerCommand parse(String args) throws ParseException {","lastModifiedDate":"2022-03-31"},{"lineNumber":18,"author":{"gitId":"Jacky142857"},"content":"        requireNonNull(args);","lastModifiedDate":"2022-03-31"},{"lineNumber":19,"author":{"gitId":"Jacky142857"},"content":"        ArgumentMultimap argMultimap \u003d ArgumentTokenizer.tokenize(args, PREFIX_COMPARE, PREFIX_ORDER);","lastModifiedDate":"2022-03-31"},{"lineNumber":20,"author":{"gitId":"Jacky142857"},"content":"        String comparedItem \u003d \"\";","lastModifiedDate":"2022-03-31"},{"lineNumber":21,"author":{"gitId":"Jacky142857"},"content":"        String order \u003d \"\";","lastModifiedDate":"2022-03-31"},{"lineNumber":22,"author":{"gitId":"Jacky142857"},"content":"        try {","lastModifiedDate":"2022-03-31"},{"lineNumber":23,"author":{"gitId":"Jacky142857"},"content":"            comparedItem \u003d argMultimap.getValue(PREFIX_COMPARE).get();","lastModifiedDate":"2022-03-31"},{"lineNumber":24,"author":{"gitId":"Jacky142857"},"content":"        } catch (NoSuchElementException e) {","lastModifiedDate":"2022-03-31"},{"lineNumber":25,"author":{"gitId":"Jacky142857"},"content":"            throw new ParseException(SortSellerCommand.MESSAGE_MISSING_ARGUMENTS);","lastModifiedDate":"2022-03-31"},{"lineNumber":26,"author":{"gitId":"Jacky142857"},"content":"        }","lastModifiedDate":"2022-03-31"},{"lineNumber":27,"author":{"gitId":"Jacky142857"},"content":"        if (comparedItem.equals(\"\")) {","lastModifiedDate":"2022-03-31"},{"lineNumber":28,"author":{"gitId":"Jacky142857"},"content":"            throw new ParseException(SortSellerCommand.MESSAGE_MISSING_ARGUMENTS);","lastModifiedDate":"2022-03-31"},{"lineNumber":29,"author":{"gitId":"Jacky142857"},"content":"        }","lastModifiedDate":"2022-03-31"},{"lineNumber":30,"author":{"gitId":"Jacky142857"},"content":"        if (!comparedItem.equals(\"name\") \u0026\u0026 !comparedItem.equals(\"time\")) {","lastModifiedDate":"2022-03-31"},{"lineNumber":31,"author":{"gitId":"Jacky142857"},"content":"            throw new ParseException(SortSellerCommand.MESSAGE_NOT_SORTABLE);","lastModifiedDate":"2022-03-31"},{"lineNumber":32,"author":{"gitId":"Jacky142857"},"content":"        }","lastModifiedDate":"2022-03-31"},{"lineNumber":33,"author":{"gitId":"Jacky142857"},"content":"        try {","lastModifiedDate":"2022-03-31"},{"lineNumber":34,"author":{"gitId":"Jacky142857"},"content":"            order \u003d argMultimap.getValue(PREFIX_ORDER).get();","lastModifiedDate":"2022-03-31"},{"lineNumber":35,"author":{"gitId":"Jacky142857"},"content":"        } catch (NoSuchElementException e) {","lastModifiedDate":"2022-03-31"},{"lineNumber":36,"author":{"gitId":"Jacky142857"},"content":"            throw new ParseException(SortSellerCommand.MESSAGE_MISSING_ORDER);","lastModifiedDate":"2022-03-31"},{"lineNumber":37,"author":{"gitId":"Jacky142857"},"content":"        }","lastModifiedDate":"2022-03-31"},{"lineNumber":38,"author":{"gitId":"Jacky142857"},"content":"","lastModifiedDate":"2022-03-31"},{"lineNumber":39,"author":{"gitId":"Jacky142857"},"content":"        if (order.equals(\"\")) {","lastModifiedDate":"2022-03-31"},{"lineNumber":40,"author":{"gitId":"Jacky142857"},"content":"            throw new ParseException(SortSellerCommand.MESSAGE_MISSING_ARGUMENTS);","lastModifiedDate":"2022-03-31"},{"lineNumber":41,"author":{"gitId":"Jacky142857"},"content":"        }","lastModifiedDate":"2022-03-31"},{"lineNumber":42,"author":{"gitId":"Jacky142857"},"content":"","lastModifiedDate":"2022-03-31"},{"lineNumber":43,"author":{"gitId":"Jacky142857"},"content":"        if (!order.equals(\"asc\") \u0026\u0026 !order.equals(\"desc\")) {","lastModifiedDate":"2022-03-31"},{"lineNumber":44,"author":{"gitId":"Jacky142857"},"content":"            throw new ParseException(SortSellerCommand.MESSAGE_INCORRECT_ORDER);","lastModifiedDate":"2022-03-31"},{"lineNumber":45,"author":{"gitId":"Jacky142857"},"content":"        }","lastModifiedDate":"2022-03-31"},{"lineNumber":46,"author":{"gitId":"Jacky142857"},"content":"        return new SortSellerCommand(comparedItem, order);","lastModifiedDate":"2022-03-31"},{"lineNumber":47,"author":{"gitId":"Jacky142857"},"content":"    }","lastModifiedDate":"2022-03-31"},{"lineNumber":48,"author":{"gitId":"Jacky142857"},"content":"}","lastModifiedDate":"2022-03-31"}],"authorContributionMap":{"Jacky142857":48}},{"path":"src/main/java/seedu/address/model/AddressBook.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.model;","lastModifiedDate":"2016-09-21"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2017-05-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.util.List;","lastModifiedDate":"2017-01-19"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2017-01-19"},{"lineNumber":8,"author":{"gitId":"WJunHong"},"content":"import seedu.address.model.buyer.Buyer;","lastModifiedDate":"2022-03-16"},{"lineNumber":9,"author":{"gitId":"cwnm"},"content":"import seedu.address.model.client.Client;","lastModifiedDate":"2022-03-04"},{"lineNumber":10,"author":{"gitId":"cwnm"},"content":"import seedu.address.model.client.UniqueClientList;","lastModifiedDate":"2022-03-04"},{"lineNumber":11,"author":{"gitId":"cwnm"},"content":"import seedu.address.model.seller.Seller;","lastModifiedDate":"2022-03-17"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":13,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-08"},{"lineNumber":14,"author":{"gitId":"-"},"content":" * Wraps all data at the address-book level","lastModifiedDate":"2016-08-08"},{"lineNumber":15,"author":{"gitId":"cwnm"},"content":" * Duplicates are not allowed (by .isSameclient comparison)","lastModifiedDate":"2022-03-04"},{"lineNumber":16,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-08"},{"lineNumber":17,"author":{"gitId":"-"},"content":"public class AddressBook implements ReadOnlyAddressBook {","lastModifiedDate":"2016-08-08"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":19,"author":{"gitId":"cwnm"},"content":"    private final UniqueClientList clients;","lastModifiedDate":"2022-03-04"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":21,"author":{"gitId":"WJunHong"},"content":"    // private final UniqueBuyerList buyers;","lastModifiedDate":"2022-03-16"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-03-16"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    /*","lastModifiedDate":"2016-10-19"},{"lineNumber":24,"author":{"gitId":"-"},"content":"     * The \u0027unusual\u0027 code block below is a non-static initialization block, sometimes used to avoid duplication","lastModifiedDate":"2019-05-11"},{"lineNumber":25,"author":{"gitId":"-"},"content":"     * between constructors. See https://docs.oracle.com/javase/tutorial/java/javaOO/initial.html","lastModifiedDate":"2016-10-19"},{"lineNumber":26,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2016-10-19"},{"lineNumber":27,"author":{"gitId":"-"},"content":"     * Note that non-static init blocks are not recommended to use. There are other ways to avoid duplication","lastModifiedDate":"2016-10-19"},{"lineNumber":28,"author":{"gitId":"-"},"content":"     *   among constructors.","lastModifiedDate":"2016-10-19"},{"lineNumber":29,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-10-19"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    {","lastModifiedDate":"2016-08-08"},{"lineNumber":31,"author":{"gitId":"cwnm"},"content":"        clients \u003d new UniqueClientList();","lastModifiedDate":"2022-03-04"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    public AddressBook() {}","lastModifiedDate":"2016-08-08"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-08"},{"lineNumber":37,"author":{"gitId":"cwnm"},"content":"     * Creates an AddressBook using the clients in the {@code toBeCopied}","lastModifiedDate":"2022-03-04"},{"lineNumber":38,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-08"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    public AddressBook(ReadOnlyAddressBook toBeCopied) {","lastModifiedDate":"2016-08-08"},{"lineNumber":40,"author":{"gitId":"-"},"content":"        this();","lastModifiedDate":"2016-12-24"},{"lineNumber":41,"author":{"gitId":"-"},"content":"        resetData(toBeCopied);","lastModifiedDate":"2016-12-24"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-22"},{"lineNumber":43,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    //// list overwrite operations","lastModifiedDate":"2016-08-08"},{"lineNumber":45,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-08-07"},{"lineNumber":47,"author":{"gitId":"cwnm"},"content":"     * Replaces the contents of the client list with {@code clients}.","lastModifiedDate":"2022-03-04"},{"lineNumber":48,"author":{"gitId":"cwnm"},"content":"     * {@code clients} must not contain duplicate clients.","lastModifiedDate":"2022-03-04"},{"lineNumber":49,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-08-07"},{"lineNumber":50,"author":{"gitId":"cwnm"},"content":"    public void setclients(List\u003cClient\u003e clients) {","lastModifiedDate":"2022-03-04"},{"lineNumber":51,"author":{"gitId":"cwnm"},"content":"        this.clients.setclients(clients);","lastModifiedDate":"2022-03-04"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":53,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":54,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-08-16"},{"lineNumber":55,"author":{"gitId":"-"},"content":"     * Resets the existing data of this {@code AddressBook} with {@code newData}.","lastModifiedDate":"2017-08-16"},{"lineNumber":56,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-08-16"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    public void resetData(ReadOnlyAddressBook newData) {","lastModifiedDate":"2016-08-08"},{"lineNumber":58,"author":{"gitId":"-"},"content":"        requireNonNull(newData);","lastModifiedDate":"2017-05-15"},{"lineNumber":59,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-12-20"},{"lineNumber":60,"author":{"gitId":"cwnm"},"content":"        setclients(newData.getclientList());","lastModifiedDate":"2022-03-04"},{"lineNumber":61,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":62,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":63,"author":{"gitId":"cwnm"},"content":"    //// client-level operations","lastModifiedDate":"2022-03-04"},{"lineNumber":64,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":65,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-08-06"},{"lineNumber":66,"author":{"gitId":"cwnm"},"content":"     * Returns true if a client with the same identity as {@code client} exists in the address book.","lastModifiedDate":"2022-03-04"},{"lineNumber":67,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-08-06"},{"lineNumber":68,"author":{"gitId":"cwnm"},"content":"    public boolean hasclient(Client client) {","lastModifiedDate":"2022-03-04"},{"lineNumber":69,"author":{"gitId":"cwnm"},"content":"        requireNonNull(client);","lastModifiedDate":"2022-03-04"},{"lineNumber":70,"author":{"gitId":"cwnm"},"content":"        return clients.contains(client);","lastModifiedDate":"2022-03-04"},{"lineNumber":71,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-06"},{"lineNumber":72,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-06"},{"lineNumber":73,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-09-21"},{"lineNumber":74,"author":{"gitId":"cwnm"},"content":"     * Adds a client to the address book.","lastModifiedDate":"2022-03-04"},{"lineNumber":75,"author":{"gitId":"cwnm"},"content":"     * The client must not already exist in the address book.","lastModifiedDate":"2022-03-04"},{"lineNumber":76,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-09-21"},{"lineNumber":77,"author":{"gitId":"cwnm"},"content":"    public void addclient(Client p) {","lastModifiedDate":"2022-03-04"},{"lineNumber":78,"author":{"gitId":"cwnm"},"content":"        clients.add(p);","lastModifiedDate":"2022-03-04"},{"lineNumber":79,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":80,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":81,"author":{"gitId":"WJunHong"},"content":"    //\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d AddBuyer \u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d//","lastModifiedDate":"2022-03-16"},{"lineNumber":82,"author":{"gitId":"WJunHong"},"content":"","lastModifiedDate":"2022-03-16"},{"lineNumber":83,"author":{"gitId":"WJunHong"},"content":"    /**","lastModifiedDate":"2022-03-16"},{"lineNumber":84,"author":{"gitId":"WJunHong"},"content":"     * Checks if the client list contains the buyer.","lastModifiedDate":"2022-03-16"},{"lineNumber":85,"author":{"gitId":"WJunHong"},"content":"     *","lastModifiedDate":"2022-03-16"},{"lineNumber":86,"author":{"gitId":"WJunHong"},"content":"     * @param buyer The buyer.","lastModifiedDate":"2022-03-16"},{"lineNumber":87,"author":{"gitId":"WJunHong"},"content":"     * @return Whether buyer is already in list.","lastModifiedDate":"2022-03-16"},{"lineNumber":88,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2022-03-16"},{"lineNumber":89,"author":{"gitId":"WJunHong"},"content":"    public boolean hasBuyer(Buyer buyer) {","lastModifiedDate":"2022-03-16"},{"lineNumber":90,"author":{"gitId":"WJunHong"},"content":"        requireNonNull(buyer);","lastModifiedDate":"2022-03-16"},{"lineNumber":91,"author":{"gitId":"WJunHong"},"content":"        return clients.contains(buyer);","lastModifiedDate":"2022-03-16"},{"lineNumber":92,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2022-03-16"},{"lineNumber":93,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-03-16"},{"lineNumber":94,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2022-03-16"},{"lineNumber":95,"author":{"gitId":"WJunHong"},"content":"     * Adds a new buyer to the client list.","lastModifiedDate":"2022-03-16"},{"lineNumber":96,"author":{"gitId":"WJunHong"},"content":"     *","lastModifiedDate":"2022-03-16"},{"lineNumber":97,"author":{"gitId":"WJunHong"},"content":"     * @param buyer The buyer.","lastModifiedDate":"2022-03-16"},{"lineNumber":98,"author":{"gitId":"WJunHong"},"content":"     */","lastModifiedDate":"2022-03-16"},{"lineNumber":99,"author":{"gitId":"WJunHong"},"content":"    public void addBuyer(Buyer buyer) {","lastModifiedDate":"2022-03-16"},{"lineNumber":100,"author":{"gitId":"WJunHong"},"content":"        clients.add(buyer);","lastModifiedDate":"2022-03-16"},{"lineNumber":101,"author":{"gitId":"WJunHong"},"content":"    }","lastModifiedDate":"2022-03-16"},{"lineNumber":102,"author":{"gitId":"WJunHong"},"content":"","lastModifiedDate":"2022-03-16"},{"lineNumber":103,"author":{"gitId":"cwnm"},"content":"    //\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d AddSeller \u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d//","lastModifiedDate":"2022-03-17"},{"lineNumber":104,"author":{"gitId":"cwnm"},"content":"","lastModifiedDate":"2022-03-17"},{"lineNumber":105,"author":{"gitId":"cwnm"},"content":"    /**","lastModifiedDate":"2022-03-17"},{"lineNumber":106,"author":{"gitId":"cwnm"},"content":"     * Checks if the client list contains the seller.","lastModifiedDate":"2022-03-17"},{"lineNumber":107,"author":{"gitId":"cwnm"},"content":"     *","lastModifiedDate":"2022-03-17"},{"lineNumber":108,"author":{"gitId":"cwnm"},"content":"     * @param seller The seller.","lastModifiedDate":"2022-03-17"},{"lineNumber":109,"author":{"gitId":"cwnm"},"content":"     * @return Whether seller is already in list.","lastModifiedDate":"2022-03-17"},{"lineNumber":110,"author":{"gitId":"cwnm"},"content":"     */","lastModifiedDate":"2022-03-17"},{"lineNumber":111,"author":{"gitId":"cwnm"},"content":"    public boolean hasSeller(Seller seller) {","lastModifiedDate":"2022-03-17"},{"lineNumber":112,"author":{"gitId":"cwnm"},"content":"        requireNonNull(seller);","lastModifiedDate":"2022-03-17"},{"lineNumber":113,"author":{"gitId":"cwnm"},"content":"        return clients.contains(seller);","lastModifiedDate":"2022-03-17"},{"lineNumber":114,"author":{"gitId":"cwnm"},"content":"    }","lastModifiedDate":"2022-03-17"},{"lineNumber":115,"author":{"gitId":"cwnm"},"content":"","lastModifiedDate":"2022-03-17"},{"lineNumber":116,"author":{"gitId":"cwnm"},"content":"    /**","lastModifiedDate":"2022-03-17"},{"lineNumber":117,"author":{"gitId":"cwnm"},"content":"     * Adds a new seller to the client list.","lastModifiedDate":"2022-03-17"},{"lineNumber":118,"author":{"gitId":"cwnm"},"content":"     *","lastModifiedDate":"2022-03-17"},{"lineNumber":119,"author":{"gitId":"cwnm"},"content":"     * @param seller The seller.","lastModifiedDate":"2022-03-17"},{"lineNumber":120,"author":{"gitId":"cwnm"},"content":"     */","lastModifiedDate":"2022-03-17"},{"lineNumber":121,"author":{"gitId":"cwnm"},"content":"    public void addSeller(Seller seller) {","lastModifiedDate":"2022-03-17"},{"lineNumber":122,"author":{"gitId":"cwnm"},"content":"        clients.add(seller);","lastModifiedDate":"2022-03-17"},{"lineNumber":123,"author":{"gitId":"cwnm"},"content":"    }","lastModifiedDate":"2022-03-17"},{"lineNumber":124,"author":{"gitId":"cwnm"},"content":"","lastModifiedDate":"2022-03-17"},{"lineNumber":125,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-12-13"},{"lineNumber":126,"author":{"gitId":"cwnm"},"content":"     * Replaces the given client {@code target} in the list with {@code editedclient}.","lastModifiedDate":"2022-03-04"},{"lineNumber":127,"author":{"gitId":"-"},"content":"     * {@code target} must exist in the address book.","lastModifiedDate":"2018-08-07"},{"lineNumber":128,"author":{"gitId":"cwnm"},"content":"     * The client identity of {@code editedclient} must not be the same as another existing client in the address book.","lastModifiedDate":"2022-03-04"},{"lineNumber":129,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-12-13"},{"lineNumber":130,"author":{"gitId":"cwnm"},"content":"    public void setclient(Client target, Client editedClient) {","lastModifiedDate":"2022-03-04"},{"lineNumber":131,"author":{"gitId":"cwnm"},"content":"        requireNonNull(editedClient);","lastModifiedDate":"2022-03-04"},{"lineNumber":132,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-13"},{"lineNumber":133,"author":{"gitId":"cwnm"},"content":"        clients.setclient(target, editedClient);","lastModifiedDate":"2022-03-04"},{"lineNumber":134,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-21"},{"lineNumber":135,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":136,"author":{"gitId":"Jacky142857"},"content":"    public void sortPersons() {","lastModifiedDate":"2022-03-02"},{"lineNumber":137,"author":{"gitId":"cwnm"},"content":"        clients.sortPersons();","lastModifiedDate":"2022-03-04"},{"lineNumber":138,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2022-03-02"},{"lineNumber":139,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-03-02"},{"lineNumber":140,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-08-16"},{"lineNumber":141,"author":{"gitId":"-"},"content":"     * Removes {@code key} from this {@code AddressBook}.","lastModifiedDate":"2017-08-16"},{"lineNumber":142,"author":{"gitId":"-"},"content":"     * {@code key} must exist in the address book.","lastModifiedDate":"2018-08-07"},{"lineNumber":143,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-08-16"},{"lineNumber":144,"author":{"gitId":"cwnm"},"content":"    public void removeclient(Client key) {","lastModifiedDate":"2022-03-04"},{"lineNumber":145,"author":{"gitId":"cwnm"},"content":"        clients.remove(key);","lastModifiedDate":"2022-03-04"},{"lineNumber":146,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":147,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":148,"author":{"gitId":"-"},"content":"    //// util methods","lastModifiedDate":"2016-08-08"},{"lineNumber":149,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":150,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-08"},{"lineNumber":151,"author":{"gitId":"-"},"content":"    public String toString() {","lastModifiedDate":"2016-08-08"},{"lineNumber":152,"author":{"gitId":"cwnm"},"content":"        return clients.asUnmodifiableObservableList().size() + \" clients\";","lastModifiedDate":"2022-03-04"},{"lineNumber":153,"author":{"gitId":"-"},"content":"        // TODO: refine later","lastModifiedDate":"2016-08-08"},{"lineNumber":154,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":155,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":156,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-08"},{"lineNumber":157,"author":{"gitId":"cwnm"},"content":"    public ObservableList\u003cClient\u003e getclientList() {","lastModifiedDate":"2022-03-04"},{"lineNumber":158,"author":{"gitId":"cwnm"},"content":"        return clients.asUnmodifiableObservableList();","lastModifiedDate":"2022-03-04"},{"lineNumber":159,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-01"},{"lineNumber":160,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-01"},{"lineNumber":161,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-21"},{"lineNumber":162,"author":{"gitId":"-"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2016-09-21"},{"lineNumber":163,"author":{"gitId":"-"},"content":"        return other \u003d\u003d this // short circuit if same object","lastModifiedDate":"2016-09-21"},{"lineNumber":164,"author":{"gitId":"-"},"content":"                || (other instanceof AddressBook // instanceof handles nulls","lastModifiedDate":"2016-09-21"},{"lineNumber":165,"author":{"gitId":"cwnm"},"content":"                \u0026\u0026 clients.equals(((AddressBook) other).clients));","lastModifiedDate":"2022-03-04"},{"lineNumber":166,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-21"},{"lineNumber":167,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":168,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-21"},{"lineNumber":169,"author":{"gitId":"-"},"content":"    public int hashCode() {","lastModifiedDate":"2016-09-21"},{"lineNumber":170,"author":{"gitId":"cwnm"},"content":"        return clients.hashCode();","lastModifiedDate":"2022-03-04"},{"lineNumber":171,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-21"},{"lineNumber":172,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"}],"authorContributionMap":{"WJunHong":20,"Jacky142857":1,"-":95,"cwnm":56}},{"path":"src/main/java/seedu/address/model/BuyerAddressBook.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"WJunHong"},"content":"package seedu.address.model;","lastModifiedDate":"2022-03-23"},{"lineNumber":2,"author":{"gitId":"WJunHong"},"content":"","lastModifiedDate":"2022-03-23"},{"lineNumber":3,"author":{"gitId":"WJunHong"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2022-03-23"},{"lineNumber":4,"author":{"gitId":"WJunHong"},"content":"","lastModifiedDate":"2022-03-23"},{"lineNumber":5,"author":{"gitId":"WJunHong"},"content":"import java.util.List;","lastModifiedDate":"2022-03-23"},{"lineNumber":6,"author":{"gitId":"WJunHong"},"content":"","lastModifiedDate":"2022-03-23"},{"lineNumber":7,"author":{"gitId":"WJunHong"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2022-03-23"},{"lineNumber":8,"author":{"gitId":"WJunHong"},"content":"import seedu.address.model.buyer.Buyer;","lastModifiedDate":"2022-03-23"},{"lineNumber":9,"author":{"gitId":"WJunHong"},"content":"import seedu.address.model.buyer.UniqueBuyerList;","lastModifiedDate":"2022-03-23"},{"lineNumber":10,"author":{"gitId":"WJunHong"},"content":"","lastModifiedDate":"2022-03-23"},{"lineNumber":11,"author":{"gitId":"WJunHong"},"content":"","lastModifiedDate":"2022-03-23"},{"lineNumber":12,"author":{"gitId":"WJunHong"},"content":"public class BuyerAddressBook implements ReadOnlyBuyerAddressBook {","lastModifiedDate":"2022-03-23"},{"lineNumber":13,"author":{"gitId":"WJunHong"},"content":"","lastModifiedDate":"2022-03-23"},{"lineNumber":14,"author":{"gitId":"WJunHong"},"content":"    private final UniqueBuyerList buyers;","lastModifiedDate":"2022-03-23"},{"lineNumber":15,"author":{"gitId":"WJunHong"},"content":"","lastModifiedDate":"2022-03-23"},{"lineNumber":16,"author":{"gitId":"WJunHong"},"content":"    /*","lastModifiedDate":"2022-03-23"},{"lineNumber":17,"author":{"gitId":"WJunHong"},"content":"     * The \u0027unusual\u0027 code block below is a non-static initialization block, sometimes used to avoid duplication","lastModifiedDate":"2022-03-23"},{"lineNumber":18,"author":{"gitId":"WJunHong"},"content":"     * between constructors. See https://docs.oracle.com/javase/tutorial/java/javaOO/initial.html","lastModifiedDate":"2022-03-23"},{"lineNumber":19,"author":{"gitId":"WJunHong"},"content":"     *","lastModifiedDate":"2022-03-23"},{"lineNumber":20,"author":{"gitId":"WJunHong"},"content":"     * Note that non-static init blocks are not recommended to use. There are other ways to avoid duplication","lastModifiedDate":"2022-03-23"},{"lineNumber":21,"author":{"gitId":"WJunHong"},"content":"     *   among constructors.","lastModifiedDate":"2022-03-23"},{"lineNumber":22,"author":{"gitId":"WJunHong"},"content":"     */","lastModifiedDate":"2022-03-23"},{"lineNumber":23,"author":{"gitId":"WJunHong"},"content":"    {","lastModifiedDate":"2022-03-23"},{"lineNumber":24,"author":{"gitId":"WJunHong"},"content":"        buyers \u003d new UniqueBuyerList();","lastModifiedDate":"2022-03-23"},{"lineNumber":25,"author":{"gitId":"WJunHong"},"content":"    }","lastModifiedDate":"2022-03-23"},{"lineNumber":26,"author":{"gitId":"WJunHong"},"content":"","lastModifiedDate":"2022-03-23"},{"lineNumber":27,"author":{"gitId":"WJunHong"},"content":"    public BuyerAddressBook() {}","lastModifiedDate":"2022-03-23"},{"lineNumber":28,"author":{"gitId":"WJunHong"},"content":"","lastModifiedDate":"2022-03-23"},{"lineNumber":29,"author":{"gitId":"WJunHong"},"content":"    /**","lastModifiedDate":"2022-03-23"},{"lineNumber":30,"author":{"gitId":"WJunHong"},"content":"     * Creates an AddressBook using the buyers in the {@code toBeCopied}","lastModifiedDate":"2022-03-23"},{"lineNumber":31,"author":{"gitId":"WJunHong"},"content":"     */","lastModifiedDate":"2022-03-23"},{"lineNumber":32,"author":{"gitId":"WJunHong"},"content":"    public BuyerAddressBook(ReadOnlyBuyerAddressBook toBeCopied) {","lastModifiedDate":"2022-03-23"},{"lineNumber":33,"author":{"gitId":"WJunHong"},"content":"        this();","lastModifiedDate":"2022-03-23"},{"lineNumber":34,"author":{"gitId":"WJunHong"},"content":"        resetData(toBeCopied);","lastModifiedDate":"2022-03-23"},{"lineNumber":35,"author":{"gitId":"WJunHong"},"content":"    }","lastModifiedDate":"2022-03-23"},{"lineNumber":36,"author":{"gitId":"WJunHong"},"content":"","lastModifiedDate":"2022-03-23"},{"lineNumber":37,"author":{"gitId":"WJunHong"},"content":"    //// list overwrite operations","lastModifiedDate":"2022-03-23"},{"lineNumber":38,"author":{"gitId":"WJunHong"},"content":"","lastModifiedDate":"2022-03-23"},{"lineNumber":39,"author":{"gitId":"WJunHong"},"content":"    /**","lastModifiedDate":"2022-03-23"},{"lineNumber":40,"author":{"gitId":"WJunHong"},"content":"     * Replaces the contents of the buyer list with {@code buyers}.","lastModifiedDate":"2022-03-23"},{"lineNumber":41,"author":{"gitId":"WJunHong"},"content":"     * {@code sellers} must not contain duplicate buyers.","lastModifiedDate":"2022-03-23"},{"lineNumber":42,"author":{"gitId":"WJunHong"},"content":"     */","lastModifiedDate":"2022-03-23"},{"lineNumber":43,"author":{"gitId":"WJunHong"},"content":"    public void setBuyers(List\u003cBuyer\u003e buyers) {","lastModifiedDate":"2022-03-23"},{"lineNumber":44,"author":{"gitId":"WJunHong"},"content":"        this.buyers.setBuyers(buyers);","lastModifiedDate":"2022-03-23"},{"lineNumber":45,"author":{"gitId":"WJunHong"},"content":"    }","lastModifiedDate":"2022-03-23"},{"lineNumber":46,"author":{"gitId":"WJunHong"},"content":"","lastModifiedDate":"2022-03-23"},{"lineNumber":47,"author":{"gitId":"WJunHong"},"content":"    /**","lastModifiedDate":"2022-03-23"},{"lineNumber":48,"author":{"gitId":"WJunHong"},"content":"     * Resets the existing data of this {@code SellerAddressBook} with {@code newData}.","lastModifiedDate":"2022-03-23"},{"lineNumber":49,"author":{"gitId":"WJunHong"},"content":"     */","lastModifiedDate":"2022-03-23"},{"lineNumber":50,"author":{"gitId":"WJunHong"},"content":"    public void resetData(ReadOnlyBuyerAddressBook newData) {","lastModifiedDate":"2022-03-23"},{"lineNumber":51,"author":{"gitId":"WJunHong"},"content":"        requireNonNull(newData);","lastModifiedDate":"2022-03-23"},{"lineNumber":52,"author":{"gitId":"WJunHong"},"content":"        setBuyers(newData.getBuyerList());","lastModifiedDate":"2022-03-23"},{"lineNumber":53,"author":{"gitId":"WJunHong"},"content":"    }","lastModifiedDate":"2022-03-23"},{"lineNumber":54,"author":{"gitId":"WJunHong"},"content":"","lastModifiedDate":"2022-03-23"},{"lineNumber":55,"author":{"gitId":"WJunHong"},"content":"    /**","lastModifiedDate":"2022-03-23"},{"lineNumber":56,"author":{"gitId":"WJunHong"},"content":"     * Checks if the buyer list contains the buyer.","lastModifiedDate":"2022-03-23"},{"lineNumber":57,"author":{"gitId":"WJunHong"},"content":"     *","lastModifiedDate":"2022-03-23"},{"lineNumber":58,"author":{"gitId":"WJunHong"},"content":"     * @param buyer The buyer.","lastModifiedDate":"2022-03-23"},{"lineNumber":59,"author":{"gitId":"WJunHong"},"content":"     * @return Whether buyer is already in list.","lastModifiedDate":"2022-03-23"},{"lineNumber":60,"author":{"gitId":"WJunHong"},"content":"     */","lastModifiedDate":"2022-03-23"},{"lineNumber":61,"author":{"gitId":"WJunHong"},"content":"    public boolean hasBuyer(Buyer buyer) {","lastModifiedDate":"2022-03-23"},{"lineNumber":62,"author":{"gitId":"WJunHong"},"content":"        requireNonNull(buyer);","lastModifiedDate":"2022-03-23"},{"lineNumber":63,"author":{"gitId":"WJunHong"},"content":"        return buyers.contains(buyer);","lastModifiedDate":"2022-03-23"},{"lineNumber":64,"author":{"gitId":"WJunHong"},"content":"    }","lastModifiedDate":"2022-03-23"},{"lineNumber":65,"author":{"gitId":"WJunHong"},"content":"","lastModifiedDate":"2022-03-23"},{"lineNumber":66,"author":{"gitId":"WJunHong"},"content":"    /**","lastModifiedDate":"2022-03-23"},{"lineNumber":67,"author":{"gitId":"WJunHong"},"content":"     * Adds a new buyer to the buyers list.","lastModifiedDate":"2022-03-23"},{"lineNumber":68,"author":{"gitId":"WJunHong"},"content":"     *","lastModifiedDate":"2022-03-23"},{"lineNumber":69,"author":{"gitId":"WJunHong"},"content":"     * @param buyer The buyer.","lastModifiedDate":"2022-03-23"},{"lineNumber":70,"author":{"gitId":"WJunHong"},"content":"     */","lastModifiedDate":"2022-03-23"},{"lineNumber":71,"author":{"gitId":"WJunHong"},"content":"    public void addBuyer(Buyer buyer) {","lastModifiedDate":"2022-03-23"},{"lineNumber":72,"author":{"gitId":"WJunHong"},"content":"        buyers.add(buyer);","lastModifiedDate":"2022-03-23"},{"lineNumber":73,"author":{"gitId":"WJunHong"},"content":"    }","lastModifiedDate":"2022-03-23"},{"lineNumber":74,"author":{"gitId":"WJunHong"},"content":"","lastModifiedDate":"2022-03-23"},{"lineNumber":75,"author":{"gitId":"WJunHong"},"content":"    /**","lastModifiedDate":"2022-03-23"},{"lineNumber":76,"author":{"gitId":"WJunHong"},"content":"     * Replaces the given buyers {@code target} in the list with {@code editedBuyers}.","lastModifiedDate":"2022-03-23"},{"lineNumber":77,"author":{"gitId":"WJunHong"},"content":"     * {@code target} must exist in the address book.","lastModifiedDate":"2022-03-23"},{"lineNumber":78,"author":{"gitId":"WJunHong"},"content":"     * The buyer identity of {@code editedBuyers} must not be the same as another existing buyer in the address book.","lastModifiedDate":"2022-03-23"},{"lineNumber":79,"author":{"gitId":"WJunHong"},"content":"     */","lastModifiedDate":"2022-03-23"},{"lineNumber":80,"author":{"gitId":"WJunHong"},"content":"    public void setBuyer(Buyer target, Buyer editedBuyer) {","lastModifiedDate":"2022-03-23"},{"lineNumber":81,"author":{"gitId":"WJunHong"},"content":"        requireNonNull(editedBuyer);","lastModifiedDate":"2022-03-23"},{"lineNumber":82,"author":{"gitId":"WJunHong"},"content":"        buyers.setBuyer(target, editedBuyer);","lastModifiedDate":"2022-03-23"},{"lineNumber":83,"author":{"gitId":"WJunHong"},"content":"    }","lastModifiedDate":"2022-03-23"},{"lineNumber":84,"author":{"gitId":"WJunHong"},"content":"","lastModifiedDate":"2022-03-23"},{"lineNumber":85,"author":{"gitId":"Jacky142857"},"content":"    public void sortBuyers(String comparedItem, String order) {","lastModifiedDate":"2022-03-31"},{"lineNumber":86,"author":{"gitId":"Jacky142857"},"content":"        buyers.sortBuyers(comparedItem, order);","lastModifiedDate":"2022-03-31"},{"lineNumber":87,"author":{"gitId":"WJunHong"},"content":"    }","lastModifiedDate":"2022-03-23"},{"lineNumber":88,"author":{"gitId":"WJunHong"},"content":"","lastModifiedDate":"2022-03-23"},{"lineNumber":89,"author":{"gitId":"WJunHong"},"content":"    /**","lastModifiedDate":"2022-03-23"},{"lineNumber":90,"author":{"gitId":"WJunHong"},"content":"     * Removes {@code key} from this {@code AddressBook}.","lastModifiedDate":"2022-03-23"},{"lineNumber":91,"author":{"gitId":"WJunHong"},"content":"     * {@code key} must exist in the address book.","lastModifiedDate":"2022-03-23"},{"lineNumber":92,"author":{"gitId":"WJunHong"},"content":"     */","lastModifiedDate":"2022-03-23"},{"lineNumber":93,"author":{"gitId":"WJunHong"},"content":"    public void removeBuyer(Buyer key) {","lastModifiedDate":"2022-03-23"},{"lineNumber":94,"author":{"gitId":"WJunHong"},"content":"        buyers.remove(key);","lastModifiedDate":"2022-03-23"},{"lineNumber":95,"author":{"gitId":"WJunHong"},"content":"    }","lastModifiedDate":"2022-03-23"},{"lineNumber":96,"author":{"gitId":"WJunHong"},"content":"","lastModifiedDate":"2022-03-23"},{"lineNumber":97,"author":{"gitId":"WJunHong"},"content":"    //// util methods","lastModifiedDate":"2022-03-23"},{"lineNumber":98,"author":{"gitId":"WJunHong"},"content":"","lastModifiedDate":"2022-03-23"},{"lineNumber":99,"author":{"gitId":"WJunHong"},"content":"    @Override","lastModifiedDate":"2022-03-23"},{"lineNumber":100,"author":{"gitId":"WJunHong"},"content":"    public String toString() {","lastModifiedDate":"2022-03-23"},{"lineNumber":101,"author":{"gitId":"WJunHong"},"content":"        return buyers.asUnmodifiableObservableList().size() + \" buyers\";","lastModifiedDate":"2022-03-23"},{"lineNumber":102,"author":{"gitId":"WJunHong"},"content":"        // TODO: refine later","lastModifiedDate":"2022-03-23"},{"lineNumber":103,"author":{"gitId":"WJunHong"},"content":"    }","lastModifiedDate":"2022-03-23"},{"lineNumber":104,"author":{"gitId":"WJunHong"},"content":"","lastModifiedDate":"2022-03-23"},{"lineNumber":105,"author":{"gitId":"WJunHong"},"content":"    @Override","lastModifiedDate":"2022-03-23"},{"lineNumber":106,"author":{"gitId":"WJunHong"},"content":"    public ObservableList\u003cBuyer\u003e getBuyerList() {","lastModifiedDate":"2022-03-23"},{"lineNumber":107,"author":{"gitId":"WJunHong"},"content":"        return buyers.asUnmodifiableObservableList();","lastModifiedDate":"2022-03-23"},{"lineNumber":108,"author":{"gitId":"WJunHong"},"content":"    }","lastModifiedDate":"2022-03-23"},{"lineNumber":109,"author":{"gitId":"WJunHong"},"content":"","lastModifiedDate":"2022-03-23"},{"lineNumber":110,"author":{"gitId":"WJunHong"},"content":"    @Override","lastModifiedDate":"2022-03-23"},{"lineNumber":111,"author":{"gitId":"WJunHong"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2022-03-23"},{"lineNumber":112,"author":{"gitId":"WJunHong"},"content":"        return other \u003d\u003d this // short circuit if same object","lastModifiedDate":"2022-03-23"},{"lineNumber":113,"author":{"gitId":"chuashihong"},"content":"                || (other instanceof BuyerAddressBook // instanceof handles nulls","lastModifiedDate":"2022-04-07"},{"lineNumber":114,"author":{"gitId":"WJunHong"},"content":"                \u0026\u0026 buyers.equals(((BuyerAddressBook) other).buyers));","lastModifiedDate":"2022-03-23"},{"lineNumber":115,"author":{"gitId":"WJunHong"},"content":"    }","lastModifiedDate":"2022-03-23"},{"lineNumber":116,"author":{"gitId":"WJunHong"},"content":"","lastModifiedDate":"2022-03-23"},{"lineNumber":117,"author":{"gitId":"WJunHong"},"content":"    @Override","lastModifiedDate":"2022-03-23"},{"lineNumber":118,"author":{"gitId":"WJunHong"},"content":"    public int hashCode() {","lastModifiedDate":"2022-03-23"},{"lineNumber":119,"author":{"gitId":"WJunHong"},"content":"        return buyers.hashCode();","lastModifiedDate":"2022-03-23"},{"lineNumber":120,"author":{"gitId":"WJunHong"},"content":"    }","lastModifiedDate":"2022-03-23"},{"lineNumber":121,"author":{"gitId":"WJunHong"},"content":"}","lastModifiedDate":"2022-03-23"}],"authorContributionMap":{"WJunHong":118,"Jacky142857":2,"chuashihong":1}},{"path":"src/main/java/seedu/address/model/Model.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.model;","lastModifiedDate":"2016-09-25"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-11-27"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import java.util.function.Predicate;","lastModifiedDate":"2017-06-12"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2017-09-01"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.GuiSettings;","lastModifiedDate":"2018-11-27"},{"lineNumber":8,"author":{"gitId":"WJunHong"},"content":"import seedu.address.model.buyer.Buyer;","lastModifiedDate":"2022-03-16"},{"lineNumber":9,"author":{"gitId":"cwnm"},"content":"import seedu.address.model.client.Client;","lastModifiedDate":"2022-03-04"},{"lineNumber":10,"author":{"gitId":"cwnm"},"content":"import seedu.address.model.seller.Seller;","lastModifiedDate":"2022-03-17"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":12,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-09-25"},{"lineNumber":13,"author":{"gitId":"-"},"content":" * The API of the Model component.","lastModifiedDate":"2016-09-25"},{"lineNumber":14,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-09-25"},{"lineNumber":15,"author":{"gitId":"-"},"content":"public interface Model {","lastModifiedDate":"2016-09-25"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    /** {@code Predicate} that always evaluate to true */","lastModifiedDate":"2017-08-05"},{"lineNumber":17,"author":{"gitId":"cwnm"},"content":"    Predicate\u003cClient\u003e PREDICATE_SHOW_ALL_CLIENTS \u003d unused -\u003e true;","lastModifiedDate":"2022-03-04"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-08-05"},{"lineNumber":19,"author":{"gitId":"Jacky142857"},"content":"    Predicate\u003cSeller\u003e PREDICATE_SHOW_ALL_SELLERS \u003d unused -\u003e true;","lastModifiedDate":"2022-03-19"},{"lineNumber":20,"author":{"gitId":"Jacky142857"},"content":"","lastModifiedDate":"2022-03-19"},{"lineNumber":21,"author":{"gitId":"WJunHong"},"content":"    Predicate\u003cBuyer\u003e PREDICATE_SHOW_ALL_BUYERS \u003d unused -\u003e true;","lastModifiedDate":"2022-03-23"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-03-23"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-11-27"},{"lineNumber":24,"author":{"gitId":"-"},"content":"     * Replaces user prefs data with the data in {@code userPrefs}.","lastModifiedDate":"2018-12-06"},{"lineNumber":25,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-11-27"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    void setUserPrefs(ReadOnlyUserPrefs userPrefs);","lastModifiedDate":"2018-12-06"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-11-27"},{"lineNumber":29,"author":{"gitId":"-"},"content":"     * Returns the user prefs.","lastModifiedDate":"2018-11-27"},{"lineNumber":30,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-11-27"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    ReadOnlyUserPrefs getUserPrefs();","lastModifiedDate":"2018-11-27"},{"lineNumber":32,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-11-27"},{"lineNumber":34,"author":{"gitId":"-"},"content":"     * Returns the user prefs\u0027 GUI settings.","lastModifiedDate":"2018-11-27"},{"lineNumber":35,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-11-27"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    GuiSettings getGuiSettings();","lastModifiedDate":"2018-11-27"},{"lineNumber":37,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-11-27"},{"lineNumber":39,"author":{"gitId":"-"},"content":"     * Sets the user prefs\u0027 GUI settings.","lastModifiedDate":"2018-11-27"},{"lineNumber":40,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-11-27"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    void setGuiSettings(GuiSettings guiSettings);","lastModifiedDate":"2018-11-27"},{"lineNumber":42,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-11-27"},{"lineNumber":44,"author":{"gitId":"-"},"content":"     * Returns the user prefs\u0027 address book file path.","lastModifiedDate":"2018-11-27"},{"lineNumber":45,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-11-27"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    Path getAddressBookFilePath();","lastModifiedDate":"2018-11-27"},{"lineNumber":47,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-11-27"},{"lineNumber":49,"author":{"gitId":"-"},"content":"     * Sets the user prefs\u0027 address book file path.","lastModifiedDate":"2018-11-27"},{"lineNumber":50,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-11-27"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    void setAddressBookFilePath(Path addressBookFilePath);","lastModifiedDate":"2018-11-27"},{"lineNumber":52,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":53,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-11-27"},{"lineNumber":54,"author":{"gitId":"-"},"content":"     * Replaces address book data with the data in {@code addressBook}.","lastModifiedDate":"2018-11-27"},{"lineNumber":55,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-11-27"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    void setAddressBook(ReadOnlyAddressBook addressBook);","lastModifiedDate":"2018-11-27"},{"lineNumber":57,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":58,"author":{"gitId":"-"},"content":"    /** Returns the AddressBook */","lastModifiedDate":"2016-09-25"},{"lineNumber":59,"author":{"gitId":"-"},"content":"    ReadOnlyAddressBook getAddressBook();","lastModifiedDate":"2016-09-25"},{"lineNumber":60,"author":{"gitId":"WJunHong"},"content":"    //\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003dAddress Book methods for seller\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d//","lastModifiedDate":"2022-03-23"},{"lineNumber":61,"author":{"gitId":"Jacky142857"},"content":"    /**","lastModifiedDate":"2022-03-19"},{"lineNumber":62,"author":{"gitId":"Jacky142857"},"content":"     * Returns the user prefs\u0027 seller address book file path.","lastModifiedDate":"2022-03-19"},{"lineNumber":63,"author":{"gitId":"Jacky142857"},"content":"     */","lastModifiedDate":"2022-03-19"},{"lineNumber":64,"author":{"gitId":"Jacky142857"},"content":"    Path getSellerAddressBookFilePath();","lastModifiedDate":"2022-03-19"},{"lineNumber":65,"author":{"gitId":"Jacky142857"},"content":"","lastModifiedDate":"2022-03-19"},{"lineNumber":66,"author":{"gitId":"Jacky142857"},"content":"    void sortFilteredSellerList(String comparator, String order);","lastModifiedDate":"2022-03-31"},{"lineNumber":67,"author":{"gitId":"Jacky142857"},"content":"","lastModifiedDate":"2022-03-31"},{"lineNumber":68,"author":{"gitId":"Jacky142857"},"content":"    /**","lastModifiedDate":"2022-03-19"},{"lineNumber":69,"author":{"gitId":"Jacky142857"},"content":"     * Sets the user prefs\u0027 address book file path.","lastModifiedDate":"2022-03-19"},{"lineNumber":70,"author":{"gitId":"Jacky142857"},"content":"     */","lastModifiedDate":"2022-03-19"},{"lineNumber":71,"author":{"gitId":"Jacky142857"},"content":"    void setSellerAddressBookFilePath(Path sellerAddressBookFilePath);","lastModifiedDate":"2022-03-19"},{"lineNumber":72,"author":{"gitId":"Jacky142857"},"content":"","lastModifiedDate":"2022-03-19"},{"lineNumber":73,"author":{"gitId":"Jacky142857"},"content":"    /**","lastModifiedDate":"2022-03-19"},{"lineNumber":74,"author":{"gitId":"Jacky142857"},"content":"     * Replaces address book data with the data in {@code addressBook}.","lastModifiedDate":"2022-03-19"},{"lineNumber":75,"author":{"gitId":"Jacky142857"},"content":"     */","lastModifiedDate":"2022-03-19"},{"lineNumber":76,"author":{"gitId":"Jacky142857"},"content":"    void setSellerAddressBook(ReadOnlySellerAddressBook sellerAddressBook);","lastModifiedDate":"2022-03-19"},{"lineNumber":77,"author":{"gitId":"Jacky142857"},"content":"","lastModifiedDate":"2022-03-19"},{"lineNumber":78,"author":{"gitId":"Jacky142857"},"content":"    /** Returns the AddressBook */","lastModifiedDate":"2022-03-19"},{"lineNumber":79,"author":{"gitId":"Jacky142857"},"content":"    ReadOnlySellerAddressBook getSellerAddressBook();","lastModifiedDate":"2022-03-19"},{"lineNumber":80,"author":{"gitId":"Jacky142857"},"content":"","lastModifiedDate":"2022-03-19"},{"lineNumber":81,"author":{"gitId":"WJunHong"},"content":"    //\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003dAddress Book methods for buyer\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d//","lastModifiedDate":"2022-03-23"},{"lineNumber":82,"author":{"gitId":"WJunHong"},"content":"    /**","lastModifiedDate":"2022-03-23"},{"lineNumber":83,"author":{"gitId":"WJunHong"},"content":"     * Returns the user prefs\u0027 seller address book file path.","lastModifiedDate":"2022-03-23"},{"lineNumber":84,"author":{"gitId":"WJunHong"},"content":"     */","lastModifiedDate":"2022-03-23"},{"lineNumber":85,"author":{"gitId":"WJunHong"},"content":"    Path getBuyerAddressBookFilePath();","lastModifiedDate":"2022-03-23"},{"lineNumber":86,"author":{"gitId":"WJunHong"},"content":"","lastModifiedDate":"2022-03-23"},{"lineNumber":87,"author":{"gitId":"WJunHong"},"content":"    /**","lastModifiedDate":"2022-03-23"},{"lineNumber":88,"author":{"gitId":"WJunHong"},"content":"     * Sets the user prefs\u0027 address book file path.","lastModifiedDate":"2022-03-23"},{"lineNumber":89,"author":{"gitId":"WJunHong"},"content":"     */","lastModifiedDate":"2022-03-23"},{"lineNumber":90,"author":{"gitId":"chuashihong"},"content":"    void setBuyerAddressBookFilePath(Path buyerAddressBookFilePath);","lastModifiedDate":"2022-03-24"},{"lineNumber":91,"author":{"gitId":"WJunHong"},"content":"","lastModifiedDate":"2022-03-23"},{"lineNumber":92,"author":{"gitId":"WJunHong"},"content":"    /**","lastModifiedDate":"2022-03-23"},{"lineNumber":93,"author":{"gitId":"WJunHong"},"content":"     * Replaces address book data with the data in {@code addressBook}.","lastModifiedDate":"2022-03-23"},{"lineNumber":94,"author":{"gitId":"WJunHong"},"content":"     */","lastModifiedDate":"2022-03-23"},{"lineNumber":95,"author":{"gitId":"WJunHong"},"content":"    void setBuyerAddressBook(ReadOnlyBuyerAddressBook buyerAddressBook);","lastModifiedDate":"2022-03-23"},{"lineNumber":96,"author":{"gitId":"WJunHong"},"content":"","lastModifiedDate":"2022-03-23"},{"lineNumber":97,"author":{"gitId":"WJunHong"},"content":"    /** Returns the AddressBook */","lastModifiedDate":"2022-03-23"},{"lineNumber":98,"author":{"gitId":"WJunHong"},"content":"    ReadOnlyBuyerAddressBook getBuyerAddressBook();","lastModifiedDate":"2022-03-23"},{"lineNumber":99,"author":{"gitId":"WJunHong"},"content":"","lastModifiedDate":"2022-03-23"},{"lineNumber":100,"author":{"gitId":"Jacky142857"},"content":"    void sortFilteredBuyerList(String comparedItem, String order);","lastModifiedDate":"2022-03-31"},{"lineNumber":101,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-03-31"},{"lineNumber":102,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-08-06"},{"lineNumber":103,"author":{"gitId":"-"},"content":"     * Returns true if a person with the same identity as {@code person} exists in the address book.","lastModifiedDate":"2018-08-06"},{"lineNumber":104,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-08-06"},{"lineNumber":105,"author":{"gitId":"cwnm"},"content":"    boolean hasClient(Client client);","lastModifiedDate":"2022-03-04"},{"lineNumber":106,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-06"},{"lineNumber":107,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-08-07"},{"lineNumber":108,"author":{"gitId":"-"},"content":"     * Deletes the given person.","lastModifiedDate":"2018-08-07"},{"lineNumber":109,"author":{"gitId":"-"},"content":"     * The person must exist in the address book.","lastModifiedDate":"2018-08-07"},{"lineNumber":110,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-08-07"},{"lineNumber":111,"author":{"gitId":"cwnm"},"content":"    void deleteClient(Client target);","lastModifiedDate":"2022-03-04"},{"lineNumber":112,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":113,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-08-07"},{"lineNumber":114,"author":{"gitId":"-"},"content":"     * Adds the given person.","lastModifiedDate":"2018-08-07"},{"lineNumber":115,"author":{"gitId":"-"},"content":"     * {@code person} must not already exist in the address book.","lastModifiedDate":"2018-08-07"},{"lineNumber":116,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-08-07"},{"lineNumber":117,"author":{"gitId":"cwnm"},"content":"    void addClient(Client client);","lastModifiedDate":"2022-03-04"},{"lineNumber":118,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":119,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-12-13"},{"lineNumber":120,"author":{"gitId":"-"},"content":"     * Replaces the given person {@code target} with {@code editedPerson}.","lastModifiedDate":"2017-06-07"},{"lineNumber":121,"author":{"gitId":"-"},"content":"     * {@code target} must exist in the address book.","lastModifiedDate":"2018-08-07"},{"lineNumber":122,"author":{"gitId":"-"},"content":"     * The person identity of {@code editedPerson} must not be the same as another existing person in the address book.","lastModifiedDate":"2018-08-07"},{"lineNumber":123,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-12-13"},{"lineNumber":124,"author":{"gitId":"cwnm"},"content":"    void setClient(Client target, Client editedClient);","lastModifiedDate":"2022-03-04"},{"lineNumber":125,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-13"},{"lineNumber":126,"author":{"gitId":"-"},"content":"    /** Returns an unmodifiable view of the filtered person list */","lastModifiedDate":"2017-09-01"},{"lineNumber":127,"author":{"gitId":"cwnm"},"content":"    ObservableList\u003cClient\u003e getFilteredClientList();","lastModifiedDate":"2022-03-04"},{"lineNumber":128,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":129,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-08-05"},{"lineNumber":130,"author":{"gitId":"-"},"content":"     * Updates the filter of the filtered person list to filter by the given {@code predicate}.","lastModifiedDate":"2017-08-05"},{"lineNumber":131,"author":{"gitId":"-"},"content":"     * @throws NullPointerException if {@code predicate} is null.","lastModifiedDate":"2017-08-05"},{"lineNumber":132,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-08-05"},{"lineNumber":133,"author":{"gitId":"cwnm"},"content":"","lastModifiedDate":"2022-03-04"},{"lineNumber":134,"author":{"gitId":"cwnm"},"content":"    void updateFilteredClientList(Predicate\u003cClient\u003e predicate);","lastModifiedDate":"2022-03-04"},{"lineNumber":135,"author":{"gitId":"cwnm"},"content":"","lastModifiedDate":"2022-03-04"},{"lineNumber":136,"author":{"gitId":"WJunHong"},"content":"    //\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d For addbuyer\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d//","lastModifiedDate":"2022-03-16"},{"lineNumber":137,"author":{"gitId":"WJunHong"},"content":"","lastModifiedDate":"2022-03-16"},{"lineNumber":138,"author":{"gitId":"WJunHong"},"content":"    /**","lastModifiedDate":"2022-03-16"},{"lineNumber":139,"author":{"gitId":"WJunHong"},"content":"     * Checks if the same buyer already exists in AgentSee.","lastModifiedDate":"2022-03-16"},{"lineNumber":140,"author":{"gitId":"WJunHong"},"content":"     *","lastModifiedDate":"2022-03-16"},{"lineNumber":141,"author":{"gitId":"WJunHong"},"content":"     * @param buyer The buyer to be checked.","lastModifiedDate":"2022-03-16"},{"lineNumber":142,"author":{"gitId":"WJunHong"},"content":"     * @return Whether buyer exists in AgentSee.","lastModifiedDate":"2022-03-16"},{"lineNumber":143,"author":{"gitId":"WJunHong"},"content":"     */","lastModifiedDate":"2022-03-16"},{"lineNumber":144,"author":{"gitId":"WJunHong"},"content":"    boolean hasBuyer(Buyer buyer);","lastModifiedDate":"2022-03-16"},{"lineNumber":145,"author":{"gitId":"WJunHong"},"content":"","lastModifiedDate":"2022-03-16"},{"lineNumber":146,"author":{"gitId":"WJunHong"},"content":"    /**","lastModifiedDate":"2022-03-16"},{"lineNumber":147,"author":{"gitId":"WJunHong"},"content":"     * Adds a new buyer to AgentSee.","lastModifiedDate":"2022-03-16"},{"lineNumber":148,"author":{"gitId":"WJunHong"},"content":"     *","lastModifiedDate":"2022-03-16"},{"lineNumber":149,"author":{"gitId":"WJunHong"},"content":"     * @param buyer The buyer to be added.","lastModifiedDate":"2022-03-16"},{"lineNumber":150,"author":{"gitId":"WJunHong"},"content":"     */","lastModifiedDate":"2022-03-16"},{"lineNumber":151,"author":{"gitId":"WJunHong"},"content":"    void addBuyer(Buyer buyer);","lastModifiedDate":"2022-03-16"},{"lineNumber":152,"author":{"gitId":"WJunHong"},"content":"","lastModifiedDate":"2022-03-16"},{"lineNumber":153,"author":{"gitId":"WJunHong"},"content":"    /**","lastModifiedDate":"2022-03-23"},{"lineNumber":154,"author":{"gitId":"WJunHong"},"content":"     * Deletes the given buyer.","lastModifiedDate":"2022-03-23"},{"lineNumber":155,"author":{"gitId":"WJunHong"},"content":"     * The buyer must exist in the address book.","lastModifiedDate":"2022-03-23"},{"lineNumber":156,"author":{"gitId":"WJunHong"},"content":"     */","lastModifiedDate":"2022-03-23"},{"lineNumber":157,"author":{"gitId":"WJunHong"},"content":"    void deleteBuyer(Buyer target);","lastModifiedDate":"2022-03-23"},{"lineNumber":158,"author":{"gitId":"WJunHong"},"content":"","lastModifiedDate":"2022-03-23"},{"lineNumber":159,"author":{"gitId":"WJunHong"},"content":"    /**","lastModifiedDate":"2022-03-23"},{"lineNumber":160,"author":{"gitId":"WJunHong"},"content":"     * Replaces the given buyer {@code target} with {@code editedBuyer}.","lastModifiedDate":"2022-03-23"},{"lineNumber":161,"author":{"gitId":"WJunHong"},"content":"     * {@code target} must exist in the address book.","lastModifiedDate":"2022-03-23"},{"lineNumber":162,"author":{"gitId":"WJunHong"},"content":"     * The person identity of {@code editedBuyer} must not be the same as another existing buyer in the address book.","lastModifiedDate":"2022-03-23"},{"lineNumber":163,"author":{"gitId":"WJunHong"},"content":"     */","lastModifiedDate":"2022-03-23"},{"lineNumber":164,"author":{"gitId":"WJunHong"},"content":"    void setBuyer(Buyer target, Buyer editedBuyer);","lastModifiedDate":"2022-03-23"},{"lineNumber":165,"author":{"gitId":"WJunHong"},"content":"","lastModifiedDate":"2022-03-23"},{"lineNumber":166,"author":{"gitId":"WJunHong"},"content":"    /** Returns an unmodifiable view of the filtered buyer list */","lastModifiedDate":"2022-03-23"},{"lineNumber":167,"author":{"gitId":"WJunHong"},"content":"    ObservableList\u003cBuyer\u003e getFilteredBuyerList();","lastModifiedDate":"2022-03-23"},{"lineNumber":168,"author":{"gitId":"WJunHong"},"content":"","lastModifiedDate":"2022-03-23"},{"lineNumber":169,"author":{"gitId":"WJunHong"},"content":"    /**","lastModifiedDate":"2022-03-23"},{"lineNumber":170,"author":{"gitId":"WJunHong"},"content":"     * Updates the filter of the filtered person list to filter by the given {@code predicate}.","lastModifiedDate":"2022-03-23"},{"lineNumber":171,"author":{"gitId":"WJunHong"},"content":"     * @throws NullPointerException if {@code predicate} is null.","lastModifiedDate":"2022-03-23"},{"lineNumber":172,"author":{"gitId":"WJunHong"},"content":"     */","lastModifiedDate":"2022-03-23"},{"lineNumber":173,"author":{"gitId":"WJunHong"},"content":"","lastModifiedDate":"2022-03-23"},{"lineNumber":174,"author":{"gitId":"WJunHong"},"content":"    void updateFilteredBuyerList(Predicate\u003cBuyer\u003e predicate);","lastModifiedDate":"2022-03-23"},{"lineNumber":175,"author":{"gitId":"WJunHong"},"content":"","lastModifiedDate":"2022-03-23"},{"lineNumber":176,"author":{"gitId":"cwnm"},"content":"    //\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d For addseller\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d//","lastModifiedDate":"2022-03-17"},{"lineNumber":177,"author":{"gitId":"cwnm"},"content":"","lastModifiedDate":"2022-03-17"},{"lineNumber":178,"author":{"gitId":"cwnm"},"content":"    /**","lastModifiedDate":"2022-03-17"},{"lineNumber":179,"author":{"gitId":"cwnm"},"content":"     * Checks if the same buyer already exists in AgentSee.","lastModifiedDate":"2022-03-17"},{"lineNumber":180,"author":{"gitId":"cwnm"},"content":"     *","lastModifiedDate":"2022-03-17"},{"lineNumber":181,"author":{"gitId":"cwnm"},"content":"     * @param seller The buyer to be checked.","lastModifiedDate":"2022-03-17"},{"lineNumber":182,"author":{"gitId":"cwnm"},"content":"     * @return Whether buyer exists in AgentSee.","lastModifiedDate":"2022-03-17"},{"lineNumber":183,"author":{"gitId":"cwnm"},"content":"     */","lastModifiedDate":"2022-03-17"},{"lineNumber":184,"author":{"gitId":"cwnm"},"content":"    boolean hasSeller(Seller seller);","lastModifiedDate":"2022-03-17"},{"lineNumber":185,"author":{"gitId":"cwnm"},"content":"","lastModifiedDate":"2022-03-17"},{"lineNumber":186,"author":{"gitId":"cwnm"},"content":"    /**","lastModifiedDate":"2022-03-17"},{"lineNumber":187,"author":{"gitId":"cwnm"},"content":"     * Adds a new buyer to AgentSee.","lastModifiedDate":"2022-03-17"},{"lineNumber":188,"author":{"gitId":"cwnm"},"content":"     *","lastModifiedDate":"2022-03-17"},{"lineNumber":189,"author":{"gitId":"cwnm"},"content":"     * @param seller The buyer to be added.","lastModifiedDate":"2022-03-17"},{"lineNumber":190,"author":{"gitId":"cwnm"},"content":"     */","lastModifiedDate":"2022-03-17"},{"lineNumber":191,"author":{"gitId":"cwnm"},"content":"    void addSeller(Seller seller);","lastModifiedDate":"2022-03-17"},{"lineNumber":192,"author":{"gitId":"cwnm"},"content":"","lastModifiedDate":"2022-03-17"},{"lineNumber":193,"author":{"gitId":"Jacky142857"},"content":"    /**","lastModifiedDate":"2022-03-19"},{"lineNumber":194,"author":{"gitId":"Jacky142857"},"content":"     * Deletes the given person.","lastModifiedDate":"2022-03-19"},{"lineNumber":195,"author":{"gitId":"Jacky142857"},"content":"     * The person must exist in the address book.","lastModifiedDate":"2022-03-19"},{"lineNumber":196,"author":{"gitId":"Jacky142857"},"content":"     */","lastModifiedDate":"2022-03-19"},{"lineNumber":197,"author":{"gitId":"Jacky142857"},"content":"    void deleteSeller(Seller target);","lastModifiedDate":"2022-03-19"},{"lineNumber":198,"author":{"gitId":"Jacky142857"},"content":"","lastModifiedDate":"2022-03-19"},{"lineNumber":199,"author":{"gitId":"Jacky142857"},"content":"    /**","lastModifiedDate":"2022-03-19"},{"lineNumber":200,"author":{"gitId":"Jacky142857"},"content":"     * Replaces the given person {@code target} with {@code editedPerson}.","lastModifiedDate":"2022-03-19"},{"lineNumber":201,"author":{"gitId":"Jacky142857"},"content":"     * {@code target} must exist in the address book.","lastModifiedDate":"2022-03-19"},{"lineNumber":202,"author":{"gitId":"Jacky142857"},"content":"     * The person identity of {@code editedPerson} must not be the same as another existing person in the address book.","lastModifiedDate":"2022-03-19"},{"lineNumber":203,"author":{"gitId":"Jacky142857"},"content":"     */","lastModifiedDate":"2022-03-19"},{"lineNumber":204,"author":{"gitId":"Jacky142857"},"content":"    void setSeller(Seller target, Seller editedSeller);","lastModifiedDate":"2022-03-19"},{"lineNumber":205,"author":{"gitId":"Jacky142857"},"content":"","lastModifiedDate":"2022-03-19"},{"lineNumber":206,"author":{"gitId":"Jacky142857"},"content":"    /** Returns an unmodifiable view of the filtered seller list */","lastModifiedDate":"2022-03-19"},{"lineNumber":207,"author":{"gitId":"Jacky142857"},"content":"    ObservableList\u003cSeller\u003e getFilteredSellerList();","lastModifiedDate":"2022-03-19"},{"lineNumber":208,"author":{"gitId":"Jacky142857"},"content":"","lastModifiedDate":"2022-03-19"},{"lineNumber":209,"author":{"gitId":"Jacky142857"},"content":"    /**","lastModifiedDate":"2022-03-19"},{"lineNumber":210,"author":{"gitId":"Jacky142857"},"content":"     * Updates the filter of the filtered person list to filter by the given {@code predicate}.","lastModifiedDate":"2022-03-19"},{"lineNumber":211,"author":{"gitId":"Jacky142857"},"content":"     * @throws NullPointerException if {@code predicate} is null.","lastModifiedDate":"2022-03-19"},{"lineNumber":212,"author":{"gitId":"Jacky142857"},"content":"     */","lastModifiedDate":"2022-03-19"},{"lineNumber":213,"author":{"gitId":"Jacky142857"},"content":"","lastModifiedDate":"2022-03-19"},{"lineNumber":214,"author":{"gitId":"Jacky142857"},"content":"    void updateFilteredSellerList(Predicate\u003cSeller\u003e predicate);","lastModifiedDate":"2022-03-19"},{"lineNumber":215,"author":{"gitId":"Jacky142857"},"content":"","lastModifiedDate":"2022-03-19"},{"lineNumber":216,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-09-25"}],"authorContributionMap":{"WJunHong":61,"Jacky142857":46,"-":80,"cwnm":28,"chuashihong":1}},{"path":"src/main/java/seedu/address/model/ModelManager.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.model;","lastModifiedDate":"2016-08-08"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2017-08-05"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static seedu.address.commons.util.CollectionUtil.requireAllNonNull;","lastModifiedDate":"2017-05-19"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-15"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-11-27"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import java.util.function.Predicate;","lastModifiedDate":"2017-06-12"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import java.util.logging.Logger;","lastModifiedDate":"2017-01-19"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2017-09-01"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import javafx.collections.transformation.FilteredList;","lastModifiedDate":"2016-08-26"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.GuiSettings;","lastModifiedDate":"2018-11-27"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.LogsCenter;","lastModifiedDate":"2016-09-23"},{"lineNumber":14,"author":{"gitId":"WJunHong"},"content":"import seedu.address.model.buyer.Buyer;","lastModifiedDate":"2022-03-16"},{"lineNumber":15,"author":{"gitId":"cwnm"},"content":"import seedu.address.model.client.Client;","lastModifiedDate":"2022-03-04"},{"lineNumber":16,"author":{"gitId":"cwnm"},"content":"import seedu.address.model.seller.Seller;","lastModifiedDate":"2022-03-17"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":18,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-08"},{"lineNumber":19,"author":{"gitId":"-"},"content":" * Represents the in-memory model of the address book data.","lastModifiedDate":"2016-08-08"},{"lineNumber":20,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-08"},{"lineNumber":21,"author":{"gitId":"-"},"content":"public class ModelManager implements Model {","lastModifiedDate":"2018-12-09"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    private static final Logger logger \u003d LogsCenter.getLogger(ModelManager.class);","lastModifiedDate":"2016-09-23"},{"lineNumber":23,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    private final AddressBook addressBook;","lastModifiedDate":"2019-01-25"},{"lineNumber":25,"author":{"gitId":"Jacky142857"},"content":"    private final SellerAddressBook sellerAddressBook;","lastModifiedDate":"2022-03-19"},{"lineNumber":26,"author":{"gitId":"WJunHong"},"content":"    private final BuyerAddressBook buyerAddressBook;","lastModifiedDate":"2022-03-23"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    private final UserPrefs userPrefs;","lastModifiedDate":"2018-12-06"},{"lineNumber":28,"author":{"gitId":"cwnm"},"content":"    private final FilteredList\u003cClient\u003e filteredClients;","lastModifiedDate":"2022-03-04"},{"lineNumber":29,"author":{"gitId":"Jacky142857"},"content":"    private final FilteredList\u003cSeller\u003e filteredSellers;","lastModifiedDate":"2022-03-19"},{"lineNumber":30,"author":{"gitId":"WJunHong"},"content":"    private final FilteredList\u003cBuyer\u003e filteredBuyers;","lastModifiedDate":"2022-03-23"},{"lineNumber":31,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-03-02"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-08"},{"lineNumber":33,"author":{"gitId":"-"},"content":"     * Initializes a ModelManager with the given addressBook and userPrefs.","lastModifiedDate":"2016-12-24"},{"lineNumber":34,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-08"},{"lineNumber":35,"author":{"gitId":"Jacky142857"},"content":"    public ModelManager(ReadOnlyAddressBook addressBook,","lastModifiedDate":"2022-03-19"},{"lineNumber":36,"author":{"gitId":"WJunHong"},"content":"                        ReadOnlyUserPrefs userPrefs, ReadOnlySellerAddressBook sellerAddressBook,","lastModifiedDate":"2022-03-23"},{"lineNumber":37,"author":{"gitId":"WJunHong"},"content":"                        ReadOnlyBuyerAddressBook buyerAddressBook) {","lastModifiedDate":"2022-03-23"},{"lineNumber":38,"author":{"gitId":"Jacky142857"},"content":"        requireAllNonNull(addressBook, userPrefs, sellerAddressBook);","lastModifiedDate":"2022-03-19"},{"lineNumber":39,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":40,"author":{"gitId":"Jacky142857"},"content":"        logger.fine(\"Initializing with address book: \" + addressBook + \" and user prefs \" + userPrefs","lastModifiedDate":"2022-03-19"},{"lineNumber":41,"author":{"gitId":"Jacky142857"},"content":"                + \" and seller address book: \" + sellerAddressBook);","lastModifiedDate":"2022-03-19"},{"lineNumber":42,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        this.addressBook \u003d new AddressBook(addressBook);","lastModifiedDate":"2019-01-25"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        this.userPrefs \u003d new UserPrefs(userPrefs);","lastModifiedDate":"2018-12-06"},{"lineNumber":45,"author":{"gitId":"Jacky142857"},"content":"        this.sellerAddressBook \u003d new SellerAddressBook(sellerAddressBook);","lastModifiedDate":"2022-03-19"},{"lineNumber":46,"author":{"gitId":"WJunHong"},"content":"        this.buyerAddressBook \u003d new BuyerAddressBook(buyerAddressBook);","lastModifiedDate":"2022-03-23"},{"lineNumber":47,"author":{"gitId":"cwnm"},"content":"        filteredClients \u003d new FilteredList\u003c\u003e(this.addressBook.getclientList());","lastModifiedDate":"2022-03-04"},{"lineNumber":48,"author":{"gitId":"Jacky142857"},"content":"        filteredSellers \u003d new FilteredList\u003c\u003e(this.sellerAddressBook.getSellerList());","lastModifiedDate":"2022-03-19"},{"lineNumber":49,"author":{"gitId":"WJunHong"},"content":"        filteredBuyers \u003d new FilteredList\u003c\u003e(this.buyerAddressBook.getBuyerList());","lastModifiedDate":"2022-03-23"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":51,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    public ModelManager() {","lastModifiedDate":"2016-09-22"},{"lineNumber":53,"author":{"gitId":"WJunHong"},"content":"        this(new AddressBook(), new UserPrefs(), new SellerAddressBook(), new BuyerAddressBook());","lastModifiedDate":"2022-03-23"},{"lineNumber":54,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":55,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    //\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d UserPrefs \u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d","lastModifiedDate":"2018-11-27"},{"lineNumber":57,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":58,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2018-11-27"},{"lineNumber":59,"author":{"gitId":"-"},"content":"    public void setUserPrefs(ReadOnlyUserPrefs userPrefs) {","lastModifiedDate":"2018-12-06"},{"lineNumber":60,"author":{"gitId":"-"},"content":"        requireNonNull(userPrefs);","lastModifiedDate":"2018-11-27"},{"lineNumber":61,"author":{"gitId":"-"},"content":"        this.userPrefs.resetData(userPrefs);","lastModifiedDate":"2018-12-06"},{"lineNumber":62,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":63,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":64,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2018-11-27"},{"lineNumber":65,"author":{"gitId":"-"},"content":"    public ReadOnlyUserPrefs getUserPrefs() {","lastModifiedDate":"2018-11-27"},{"lineNumber":66,"author":{"gitId":"-"},"content":"        return userPrefs;","lastModifiedDate":"2018-11-27"},{"lineNumber":67,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":68,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":69,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2018-11-27"},{"lineNumber":70,"author":{"gitId":"-"},"content":"    public GuiSettings getGuiSettings() {","lastModifiedDate":"2018-11-27"},{"lineNumber":71,"author":{"gitId":"-"},"content":"        return userPrefs.getGuiSettings();","lastModifiedDate":"2018-11-27"},{"lineNumber":72,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":73,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":74,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2018-11-27"},{"lineNumber":75,"author":{"gitId":"-"},"content":"    public void setGuiSettings(GuiSettings guiSettings) {","lastModifiedDate":"2018-11-27"},{"lineNumber":76,"author":{"gitId":"-"},"content":"        requireNonNull(guiSettings);","lastModifiedDate":"2018-11-27"},{"lineNumber":77,"author":{"gitId":"-"},"content":"        userPrefs.setGuiSettings(guiSettings);","lastModifiedDate":"2018-11-27"},{"lineNumber":78,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":79,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":80,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2018-11-27"},{"lineNumber":81,"author":{"gitId":"-"},"content":"    public Path getAddressBookFilePath() {","lastModifiedDate":"2018-11-27"},{"lineNumber":82,"author":{"gitId":"-"},"content":"        return userPrefs.getAddressBookFilePath();","lastModifiedDate":"2018-11-27"},{"lineNumber":83,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":84,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":85,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2018-11-27"},{"lineNumber":86,"author":{"gitId":"-"},"content":"    public void setAddressBookFilePath(Path addressBookFilePath) {","lastModifiedDate":"2018-11-27"},{"lineNumber":87,"author":{"gitId":"-"},"content":"        requireNonNull(addressBookFilePath);","lastModifiedDate":"2018-11-27"},{"lineNumber":88,"author":{"gitId":"-"},"content":"        userPrefs.setAddressBookFilePath(addressBookFilePath);","lastModifiedDate":"2018-11-27"},{"lineNumber":89,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":90,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":91,"author":{"gitId":"Jacky142857"},"content":"    @Override","lastModifiedDate":"2022-03-19"},{"lineNumber":92,"author":{"gitId":"Jacky142857"},"content":"    public Path getSellerAddressBookFilePath() {","lastModifiedDate":"2022-03-19"},{"lineNumber":93,"author":{"gitId":"Jacky142857"},"content":"        return userPrefs.getSellerAddressBookFilePath();","lastModifiedDate":"2022-03-19"},{"lineNumber":94,"author":{"gitId":"Jacky142857"},"content":"    }","lastModifiedDate":"2022-03-19"},{"lineNumber":95,"author":{"gitId":"Jacky142857"},"content":"","lastModifiedDate":"2022-03-19"},{"lineNumber":96,"author":{"gitId":"Jacky142857"},"content":"    @Override","lastModifiedDate":"2022-03-19"},{"lineNumber":97,"author":{"gitId":"Jacky142857"},"content":"    public void setSellerAddressBookFilePath(Path sellerAddressBookFilePath) {","lastModifiedDate":"2022-03-19"},{"lineNumber":98,"author":{"gitId":"Jacky142857"},"content":"        requireNonNull(sellerAddressBookFilePath);","lastModifiedDate":"2022-03-19"},{"lineNumber":99,"author":{"gitId":"Jacky142857"},"content":"        userPrefs.setSellerAddressBookFilePath(sellerAddressBookFilePath);","lastModifiedDate":"2022-03-19"},{"lineNumber":100,"author":{"gitId":"Jacky142857"},"content":"    }","lastModifiedDate":"2022-03-19"},{"lineNumber":101,"author":{"gitId":"Jacky142857"},"content":"","lastModifiedDate":"2022-03-19"},{"lineNumber":102,"author":{"gitId":"WJunHong"},"content":"    @Override","lastModifiedDate":"2022-03-23"},{"lineNumber":103,"author":{"gitId":"WJunHong"},"content":"    public Path getBuyerAddressBookFilePath() {","lastModifiedDate":"2022-03-23"},{"lineNumber":104,"author":{"gitId":"WJunHong"},"content":"        return userPrefs.getBuyerAddressBookFilePath();","lastModifiedDate":"2022-03-23"},{"lineNumber":105,"author":{"gitId":"WJunHong"},"content":"    }","lastModifiedDate":"2022-03-23"},{"lineNumber":106,"author":{"gitId":"WJunHong"},"content":"","lastModifiedDate":"2022-03-23"},{"lineNumber":107,"author":{"gitId":"WJunHong"},"content":"    @Override","lastModifiedDate":"2022-03-23"},{"lineNumber":108,"author":{"gitId":"WJunHong"},"content":"    public void setBuyerAddressBookFilePath(Path buyerAddressBookFilePath) {","lastModifiedDate":"2022-03-23"},{"lineNumber":109,"author":{"gitId":"WJunHong"},"content":"        requireNonNull(buyerAddressBookFilePath);","lastModifiedDate":"2022-03-23"},{"lineNumber":110,"author":{"gitId":"WJunHong"},"content":"        userPrefs.setBuyerAddressBookFilePath(buyerAddressBookFilePath);","lastModifiedDate":"2022-03-23"},{"lineNumber":111,"author":{"gitId":"WJunHong"},"content":"    }","lastModifiedDate":"2022-03-23"},{"lineNumber":112,"author":{"gitId":"WJunHong"},"content":"","lastModifiedDate":"2022-03-23"},{"lineNumber":113,"author":{"gitId":"-"},"content":"    //\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d AddressBook \u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d","lastModifiedDate":"2018-11-27"},{"lineNumber":114,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":115,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-25"},{"lineNumber":116,"author":{"gitId":"-"},"content":"    public void setAddressBook(ReadOnlyAddressBook addressBook) {","lastModifiedDate":"2018-11-27"},{"lineNumber":117,"author":{"gitId":"-"},"content":"        this.addressBook.resetData(addressBook);","lastModifiedDate":"2019-01-25"},{"lineNumber":118,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":119,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":120,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-25"},{"lineNumber":121,"author":{"gitId":"-"},"content":"    public ReadOnlyAddressBook getAddressBook() {","lastModifiedDate":"2016-09-21"},{"lineNumber":122,"author":{"gitId":"-"},"content":"        return addressBook;","lastModifiedDate":"2019-01-25"},{"lineNumber":123,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-21"},{"lineNumber":124,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":125,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2018-08-06"},{"lineNumber":126,"author":{"gitId":"cwnm"},"content":"    public boolean hasClient(Client client) {","lastModifiedDate":"2022-03-04"},{"lineNumber":127,"author":{"gitId":"cwnm"},"content":"        requireNonNull(client);","lastModifiedDate":"2022-03-04"},{"lineNumber":128,"author":{"gitId":"cwnm"},"content":"        return addressBook.hasclient(client);","lastModifiedDate":"2022-03-04"},{"lineNumber":129,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-06"},{"lineNumber":130,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-06"},{"lineNumber":131,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-25"},{"lineNumber":132,"author":{"gitId":"cwnm"},"content":"    public void deleteClient(Client target) {","lastModifiedDate":"2022-03-04"},{"lineNumber":133,"author":{"gitId":"cwnm"},"content":"        addressBook.removeclient(target);","lastModifiedDate":"2022-03-04"},{"lineNumber":134,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":135,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":136,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-25"},{"lineNumber":137,"author":{"gitId":"cwnm"},"content":"    public void addClient(Client client) {","lastModifiedDate":"2022-03-04"},{"lineNumber":138,"author":{"gitId":"cwnm"},"content":"        addressBook.addclient(client);","lastModifiedDate":"2022-03-04"},{"lineNumber":139,"author":{"gitId":"cwnm"},"content":"        updateFilteredClientList(PREDICATE_SHOW_ALL_CLIENTS);","lastModifiedDate":"2022-03-04"},{"lineNumber":140,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-26"},{"lineNumber":141,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-26"},{"lineNumber":142,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-12-13"},{"lineNumber":143,"author":{"gitId":"cwnm"},"content":"    public void setClient(Client target, Client editedClient) {","lastModifiedDate":"2022-03-04"},{"lineNumber":144,"author":{"gitId":"cwnm"},"content":"        requireAllNonNull(target, editedClient);","lastModifiedDate":"2022-03-04"},{"lineNumber":145,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-13"},{"lineNumber":146,"author":{"gitId":"cwnm"},"content":"        addressBook.setclient(target, editedClient);","lastModifiedDate":"2022-03-04"},{"lineNumber":147,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-13"},{"lineNumber":148,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-13"},{"lineNumber":149,"author":{"gitId":"WJunHong"},"content":"    //\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d For addbuyer\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d//","lastModifiedDate":"2022-03-16"},{"lineNumber":150,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2022-03-16"},{"lineNumber":151,"author":{"gitId":"WJunHong"},"content":"    public void addBuyer(Buyer buyer) {","lastModifiedDate":"2022-03-16"},{"lineNumber":152,"author":{"gitId":"WJunHong"},"content":"        buyerAddressBook.addBuyer(buyer);","lastModifiedDate":"2022-03-24"},{"lineNumber":153,"author":{"gitId":"WJunHong"},"content":"        updateFilteredBuyerList(PREDICATE_SHOW_ALL_BUYERS);","lastModifiedDate":"2022-03-24"},{"lineNumber":154,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2022-03-16"},{"lineNumber":155,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-03-16"},{"lineNumber":156,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2022-03-16"},{"lineNumber":157,"author":{"gitId":"WJunHong"},"content":"    public boolean hasBuyer(Buyer buyer) {","lastModifiedDate":"2022-03-16"},{"lineNumber":158,"author":{"gitId":"WJunHong"},"content":"        requireNonNull(buyer);","lastModifiedDate":"2022-03-16"},{"lineNumber":159,"author":{"gitId":"WJunHong"},"content":"        return buyerAddressBook.hasBuyer(buyer);","lastModifiedDate":"2022-03-24"},{"lineNumber":160,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2022-03-16"},{"lineNumber":161,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-03-16"},{"lineNumber":162,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2022-03-23"},{"lineNumber":163,"author":{"gitId":"WJunHong"},"content":"    public void deleteBuyer(Buyer target) {","lastModifiedDate":"2022-03-23"},{"lineNumber":164,"author":{"gitId":"WJunHong"},"content":"        buyerAddressBook.removeBuyer(target);","lastModifiedDate":"2022-03-23"},{"lineNumber":165,"author":{"gitId":"WJunHong"},"content":"    }","lastModifiedDate":"2022-03-23"},{"lineNumber":166,"author":{"gitId":"WJunHong"},"content":"","lastModifiedDate":"2022-03-23"},{"lineNumber":167,"author":{"gitId":"WJunHong"},"content":"    @Override","lastModifiedDate":"2022-03-23"},{"lineNumber":168,"author":{"gitId":"WJunHong"},"content":"    public void setBuyer(Buyer target, Buyer editedBuyer) {","lastModifiedDate":"2022-03-23"},{"lineNumber":169,"author":{"gitId":"WJunHong"},"content":"        requireAllNonNull(target, editedBuyer);","lastModifiedDate":"2022-03-23"},{"lineNumber":170,"author":{"gitId":"WJunHong"},"content":"        buyerAddressBook.setBuyer(target, editedBuyer);","lastModifiedDate":"2022-03-23"},{"lineNumber":171,"author":{"gitId":"WJunHong"},"content":"    }","lastModifiedDate":"2022-03-23"},{"lineNumber":172,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-03-23"},{"lineNumber":173,"author":{"gitId":"WJunHong"},"content":"    @Override","lastModifiedDate":"2022-03-23"},{"lineNumber":174,"author":{"gitId":"WJunHong"},"content":"    public ObservableList\u003cBuyer\u003e getFilteredBuyerList() {","lastModifiedDate":"2022-03-23"},{"lineNumber":175,"author":{"gitId":"WJunHong"},"content":"        return filteredBuyers;","lastModifiedDate":"2022-03-23"},{"lineNumber":176,"author":{"gitId":"WJunHong"},"content":"    }","lastModifiedDate":"2022-03-23"},{"lineNumber":177,"author":{"gitId":"WJunHong"},"content":"","lastModifiedDate":"2022-03-23"},{"lineNumber":178,"author":{"gitId":"WJunHong"},"content":"    @Override","lastModifiedDate":"2022-03-23"},{"lineNumber":179,"author":{"gitId":"WJunHong"},"content":"    public void updateFilteredBuyerList(Predicate\u003cBuyer\u003e predicate) {","lastModifiedDate":"2022-03-23"},{"lineNumber":180,"author":{"gitId":"WJunHong"},"content":"        requireNonNull(predicate);","lastModifiedDate":"2022-03-23"},{"lineNumber":181,"author":{"gitId":"WJunHong"},"content":"        filteredBuyers.setPredicate(predicate);","lastModifiedDate":"2022-03-23"},{"lineNumber":182,"author":{"gitId":"WJunHong"},"content":"    }","lastModifiedDate":"2022-03-23"},{"lineNumber":183,"author":{"gitId":"WJunHong"},"content":"","lastModifiedDate":"2022-03-23"},{"lineNumber":184,"author":{"gitId":"WJunHong"},"content":"    @Override","lastModifiedDate":"2022-03-23"},{"lineNumber":185,"author":{"gitId":"WJunHong"},"content":"    public void setBuyerAddressBook(ReadOnlyBuyerAddressBook buyerAddressBook) {","lastModifiedDate":"2022-03-23"},{"lineNumber":186,"author":{"gitId":"WJunHong"},"content":"        this.buyerAddressBook.resetData(buyerAddressBook);","lastModifiedDate":"2022-03-23"},{"lineNumber":187,"author":{"gitId":"WJunHong"},"content":"    }","lastModifiedDate":"2022-03-23"},{"lineNumber":188,"author":{"gitId":"WJunHong"},"content":"","lastModifiedDate":"2022-03-23"},{"lineNumber":189,"author":{"gitId":"WJunHong"},"content":"    @Override","lastModifiedDate":"2022-03-23"},{"lineNumber":190,"author":{"gitId":"WJunHong"},"content":"    public ReadOnlyBuyerAddressBook getBuyerAddressBook() {","lastModifiedDate":"2022-03-23"},{"lineNumber":191,"author":{"gitId":"WJunHong"},"content":"        return buyerAddressBook;","lastModifiedDate":"2022-03-23"},{"lineNumber":192,"author":{"gitId":"WJunHong"},"content":"    }","lastModifiedDate":"2022-03-23"},{"lineNumber":193,"author":{"gitId":"Jacky142857"},"content":"","lastModifiedDate":"2022-03-31"},{"lineNumber":194,"author":{"gitId":"Jacky142857"},"content":"    @Override","lastModifiedDate":"2022-03-31"},{"lineNumber":195,"author":{"gitId":"Jacky142857"},"content":"    public void sortFilteredBuyerList(String comparator, String order) {","lastModifiedDate":"2022-03-31"},{"lineNumber":196,"author":{"gitId":"Jacky142857"},"content":"        buyerAddressBook.sortBuyers(comparator, order);","lastModifiedDate":"2022-03-31"},{"lineNumber":197,"author":{"gitId":"Jacky142857"},"content":"    }","lastModifiedDate":"2022-03-31"},{"lineNumber":198,"author":{"gitId":"cwnm"},"content":"    //\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d For addseller\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d//","lastModifiedDate":"2022-03-17"},{"lineNumber":199,"author":{"gitId":"cwnm"},"content":"    @Override","lastModifiedDate":"2022-03-17"},{"lineNumber":200,"author":{"gitId":"cwnm"},"content":"    public void addSeller(Seller seller) {","lastModifiedDate":"2022-03-17"},{"lineNumber":201,"author":{"gitId":"Jacky142857"},"content":"        sellerAddressBook.addSeller(seller);","lastModifiedDate":"2022-03-19"},{"lineNumber":202,"author":{"gitId":"Jacky142857"},"content":"        updateFilteredSellerList(PREDICATE_SHOW_ALL_SELLERS);","lastModifiedDate":"2022-03-19"},{"lineNumber":203,"author":{"gitId":"cwnm"},"content":"    }","lastModifiedDate":"2022-03-17"},{"lineNumber":204,"author":{"gitId":"cwnm"},"content":"","lastModifiedDate":"2022-03-17"},{"lineNumber":205,"author":{"gitId":"cwnm"},"content":"    @Override","lastModifiedDate":"2022-03-17"},{"lineNumber":206,"author":{"gitId":"cwnm"},"content":"    public boolean hasSeller(Seller seller) {","lastModifiedDate":"2022-03-17"},{"lineNumber":207,"author":{"gitId":"cwnm"},"content":"        requireNonNull(seller);","lastModifiedDate":"2022-03-17"},{"lineNumber":208,"author":{"gitId":"Jacky142857"},"content":"        return sellerAddressBook.hasSeller(seller);","lastModifiedDate":"2022-03-19"},{"lineNumber":209,"author":{"gitId":"Jacky142857"},"content":"    }","lastModifiedDate":"2022-03-19"},{"lineNumber":210,"author":{"gitId":"Jacky142857"},"content":"","lastModifiedDate":"2022-03-19"},{"lineNumber":211,"author":{"gitId":"Jacky142857"},"content":"    @Override","lastModifiedDate":"2022-03-19"},{"lineNumber":212,"author":{"gitId":"Jacky142857"},"content":"    public void deleteSeller(Seller target) {","lastModifiedDate":"2022-03-19"},{"lineNumber":213,"author":{"gitId":"Jacky142857"},"content":"        sellerAddressBook.removeSeller(target);","lastModifiedDate":"2022-03-19"},{"lineNumber":214,"author":{"gitId":"Jacky142857"},"content":"    }","lastModifiedDate":"2022-03-19"},{"lineNumber":215,"author":{"gitId":"Jacky142857"},"content":"","lastModifiedDate":"2022-03-19"},{"lineNumber":216,"author":{"gitId":"Jacky142857"},"content":"    @Override","lastModifiedDate":"2022-03-19"},{"lineNumber":217,"author":{"gitId":"Jacky142857"},"content":"    public void setSeller(Seller target, Seller editedSeller) {","lastModifiedDate":"2022-03-19"},{"lineNumber":218,"author":{"gitId":"Jacky142857"},"content":"        requireAllNonNull(target, editedSeller);","lastModifiedDate":"2022-03-19"},{"lineNumber":219,"author":{"gitId":"Jacky142857"},"content":"        sellerAddressBook.setSeller(target, editedSeller);","lastModifiedDate":"2022-03-19"},{"lineNumber":220,"author":{"gitId":"Jacky142857"},"content":"    }","lastModifiedDate":"2022-03-19"},{"lineNumber":221,"author":{"gitId":"Jacky142857"},"content":"","lastModifiedDate":"2022-03-19"},{"lineNumber":222,"author":{"gitId":"Jacky142857"},"content":"    @Override","lastModifiedDate":"2022-03-19"},{"lineNumber":223,"author":{"gitId":"Jacky142857"},"content":"    public ObservableList\u003cSeller\u003e getFilteredSellerList() {","lastModifiedDate":"2022-03-19"},{"lineNumber":224,"author":{"gitId":"Jacky142857"},"content":"        return filteredSellers;","lastModifiedDate":"2022-03-19"},{"lineNumber":225,"author":{"gitId":"Jacky142857"},"content":"    }","lastModifiedDate":"2022-03-19"},{"lineNumber":226,"author":{"gitId":"Jacky142857"},"content":"","lastModifiedDate":"2022-03-19"},{"lineNumber":227,"author":{"gitId":"Jacky142857"},"content":"    @Override","lastModifiedDate":"2022-03-19"},{"lineNumber":228,"author":{"gitId":"Jacky142857"},"content":"    public void updateFilteredSellerList(Predicate\u003cSeller\u003e predicate) {","lastModifiedDate":"2022-03-19"},{"lineNumber":229,"author":{"gitId":"Jacky142857"},"content":"        requireNonNull(predicate);","lastModifiedDate":"2022-03-19"},{"lineNumber":230,"author":{"gitId":"Jacky142857"},"content":"        filteredSellers.setPredicate(predicate);","lastModifiedDate":"2022-03-19"},{"lineNumber":231,"author":{"gitId":"Jacky142857"},"content":"    }","lastModifiedDate":"2022-03-19"},{"lineNumber":232,"author":{"gitId":"Jacky142857"},"content":"","lastModifiedDate":"2022-03-19"},{"lineNumber":233,"author":{"gitId":"Jacky142857"},"content":"    @Override","lastModifiedDate":"2022-03-19"},{"lineNumber":234,"author":{"gitId":"Jacky142857"},"content":"    public void setSellerAddressBook(ReadOnlySellerAddressBook sellerAddressBook) {","lastModifiedDate":"2022-03-19"},{"lineNumber":235,"author":{"gitId":"Jacky142857"},"content":"        this.sellerAddressBook.resetData(sellerAddressBook);","lastModifiedDate":"2022-03-19"},{"lineNumber":236,"author":{"gitId":"Jacky142857"},"content":"    }","lastModifiedDate":"2022-03-19"},{"lineNumber":237,"author":{"gitId":"Jacky142857"},"content":"","lastModifiedDate":"2022-03-19"},{"lineNumber":238,"author":{"gitId":"Jacky142857"},"content":"    @Override","lastModifiedDate":"2022-03-19"},{"lineNumber":239,"author":{"gitId":"Jacky142857"},"content":"    public ReadOnlySellerAddressBook getSellerAddressBook() {","lastModifiedDate":"2022-03-19"},{"lineNumber":240,"author":{"gitId":"Jacky142857"},"content":"        return sellerAddressBook;","lastModifiedDate":"2022-03-19"},{"lineNumber":241,"author":{"gitId":"cwnm"},"content":"    }","lastModifiedDate":"2022-03-17"},{"lineNumber":242,"author":{"gitId":"cwnm"},"content":"","lastModifiedDate":"2022-03-17"},{"lineNumber":243,"author":{"gitId":"Jacky142857"},"content":"    @Override","lastModifiedDate":"2022-03-31"},{"lineNumber":244,"author":{"gitId":"Jacky142857"},"content":"    public void sortFilteredSellerList(String comparator, String order) {","lastModifiedDate":"2022-03-31"},{"lineNumber":245,"author":{"gitId":"Jacky142857"},"content":"        sellerAddressBook.sortSellers(comparator, order);","lastModifiedDate":"2022-03-31"},{"lineNumber":246,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2022-03-31"},{"lineNumber":247,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-03-31"},{"lineNumber":248,"author":{"gitId":"cwnm"},"content":"    //\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d Filtered client List Accessors \u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d","lastModifiedDate":"2022-03-04"},{"lineNumber":249,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":250,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-05-19"},{"lineNumber":251,"author":{"gitId":"cwnm"},"content":"     * Returns an unmodifiable view of the list of {@code client} backed by the internal list of","lastModifiedDate":"2022-03-04"},{"lineNumber":252,"author":{"gitId":"-"},"content":"     * {@code versionedAddressBook}","lastModifiedDate":"2018-06-11"},{"lineNumber":253,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-05-19"},{"lineNumber":254,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-25"},{"lineNumber":255,"author":{"gitId":"cwnm"},"content":"    public ObservableList\u003cClient\u003e getFilteredClientList() {","lastModifiedDate":"2022-03-04"},{"lineNumber":256,"author":{"gitId":"cwnm"},"content":"        return filteredClients;","lastModifiedDate":"2022-03-04"},{"lineNumber":257,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-22"},{"lineNumber":258,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":259,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-25"},{"lineNumber":260,"author":{"gitId":"cwnm"},"content":"    public void updateFilteredClientList(Predicate\u003cClient\u003e predicate) {","lastModifiedDate":"2022-03-04"},{"lineNumber":261,"author":{"gitId":"-"},"content":"        requireNonNull(predicate);","lastModifiedDate":"2017-08-05"},{"lineNumber":262,"author":{"gitId":"cwnm"},"content":"        filteredClients.setPredicate(predicate);","lastModifiedDate":"2022-03-04"},{"lineNumber":263,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-22"},{"lineNumber":264,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":265,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2017-05-31"},{"lineNumber":266,"author":{"gitId":"-"},"content":"    public boolean equals(Object obj) {","lastModifiedDate":"2017-05-31"},{"lineNumber":267,"author":{"gitId":"-"},"content":"        // short circuit if same object","lastModifiedDate":"2017-05-31"},{"lineNumber":268,"author":{"gitId":"-"},"content":"        if (obj \u003d\u003d this) {","lastModifiedDate":"2017-05-31"},{"lineNumber":269,"author":{"gitId":"-"},"content":"            return true;","lastModifiedDate":"2017-05-31"},{"lineNumber":270,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-31"},{"lineNumber":271,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-31"},{"lineNumber":272,"author":{"gitId":"-"},"content":"        // instanceof handles nulls","lastModifiedDate":"2017-05-31"},{"lineNumber":273,"author":{"gitId":"-"},"content":"        if (!(obj instanceof ModelManager)) {","lastModifiedDate":"2017-05-31"},{"lineNumber":274,"author":{"gitId":"-"},"content":"            return false;","lastModifiedDate":"2017-05-31"},{"lineNumber":275,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-31"},{"lineNumber":276,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-31"},{"lineNumber":277,"author":{"gitId":"-"},"content":"        // state check","lastModifiedDate":"2017-05-31"},{"lineNumber":278,"author":{"gitId":"Jacky142857"},"content":"        // add buyer and seller later","lastModifiedDate":"2022-03-19"},{"lineNumber":279,"author":{"gitId":"-"},"content":"        ModelManager other \u003d (ModelManager) obj;","lastModifiedDate":"2017-05-31"},{"lineNumber":280,"author":{"gitId":"-"},"content":"        return addressBook.equals(other.addressBook)","lastModifiedDate":"2019-01-25"},{"lineNumber":281,"author":{"gitId":"-"},"content":"                \u0026\u0026 userPrefs.equals(other.userPrefs)","lastModifiedDate":"2018-11-27"},{"lineNumber":282,"author":{"gitId":"cwnm"},"content":"                \u0026\u0026 filteredClients.equals(other.filteredClients);","lastModifiedDate":"2022-03-04"},{"lineNumber":283,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-31"},{"lineNumber":284,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-31"},{"lineNumber":285,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"}],"authorContributionMap":{"WJunHong":55,"Jacky142857":63,"-":135,"cwnm":32}},{"path":"src/main/java/seedu/address/model/ReadOnlyAddressBook.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.model;","lastModifiedDate":"2016-09-21"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2017-01-19"},{"lineNumber":4,"author":{"gitId":"cwnm"},"content":"import seedu.address.model.client.Client;","lastModifiedDate":"2022-03-04"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":6,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-08"},{"lineNumber":7,"author":{"gitId":"-"},"content":" * Unmodifiable view of an address book","lastModifiedDate":"2016-08-08"},{"lineNumber":8,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-08"},{"lineNumber":9,"author":{"gitId":"-"},"content":"public interface ReadOnlyAddressBook {","lastModifiedDate":"2019-01-25"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":11,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-08"},{"lineNumber":12,"author":{"gitId":"cwnm"},"content":"     * Returns an unmodifiable view of the clients list.","lastModifiedDate":"2022-03-04"},{"lineNumber":13,"author":{"gitId":"cwnm"},"content":"     * This list will not contain any duplicate clients.","lastModifiedDate":"2022-03-04"},{"lineNumber":14,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-08"},{"lineNumber":15,"author":{"gitId":"cwnm"},"content":"    ObservableList\u003cClient\u003e getclientList();","lastModifiedDate":"2022-03-04"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":17,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"}],"authorContributionMap":{"-":13,"cwnm":4}},{"path":"src/main/java/seedu/address/model/ReadOnlyBuyerAddressBook.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"WJunHong"},"content":"package seedu.address.model;","lastModifiedDate":"2022-03-23"},{"lineNumber":2,"author":{"gitId":"WJunHong"},"content":"","lastModifiedDate":"2022-03-23"},{"lineNumber":3,"author":{"gitId":"WJunHong"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2022-03-23"},{"lineNumber":4,"author":{"gitId":"WJunHong"},"content":"import seedu.address.model.buyer.Buyer;","lastModifiedDate":"2022-03-23"},{"lineNumber":5,"author":{"gitId":"WJunHong"},"content":"","lastModifiedDate":"2022-03-23"},{"lineNumber":6,"author":{"gitId":"WJunHong"},"content":"public interface ReadOnlyBuyerAddressBook {","lastModifiedDate":"2022-03-23"},{"lineNumber":7,"author":{"gitId":"WJunHong"},"content":"    /**","lastModifiedDate":"2022-03-23"},{"lineNumber":8,"author":{"gitId":"WJunHong"},"content":"     * Returns an unmodifiable view of the clients list.","lastModifiedDate":"2022-03-23"},{"lineNumber":9,"author":{"gitId":"WJunHong"},"content":"     * This list will not contain any duplicate clients.","lastModifiedDate":"2022-03-23"},{"lineNumber":10,"author":{"gitId":"WJunHong"},"content":"     */","lastModifiedDate":"2022-03-23"},{"lineNumber":11,"author":{"gitId":"WJunHong"},"content":"    ObservableList\u003cBuyer\u003e getBuyerList();","lastModifiedDate":"2022-03-23"},{"lineNumber":12,"author":{"gitId":"WJunHong"},"content":"}","lastModifiedDate":"2022-03-23"}],"authorContributionMap":{"WJunHong":12}},{"path":"src/main/java/seedu/address/model/ReadOnlySellerAddressBook.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"Jacky142857"},"content":"package seedu.address.model;","lastModifiedDate":"2022-03-19"},{"lineNumber":2,"author":{"gitId":"Jacky142857"},"content":"","lastModifiedDate":"2022-03-19"},{"lineNumber":3,"author":{"gitId":"Jacky142857"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2022-03-19"},{"lineNumber":4,"author":{"gitId":"Jacky142857"},"content":"import seedu.address.model.seller.Seller;","lastModifiedDate":"2022-03-19"},{"lineNumber":5,"author":{"gitId":"Jacky142857"},"content":"","lastModifiedDate":"2022-03-19"},{"lineNumber":6,"author":{"gitId":"Jacky142857"},"content":"public interface ReadOnlySellerAddressBook {","lastModifiedDate":"2022-03-19"},{"lineNumber":7,"author":{"gitId":"Jacky142857"},"content":"    /**","lastModifiedDate":"2022-03-19"},{"lineNumber":8,"author":{"gitId":"Jacky142857"},"content":"     * Returns an unmodifiable view of the clients list.","lastModifiedDate":"2022-03-19"},{"lineNumber":9,"author":{"gitId":"Jacky142857"},"content":"     * This list will not contain any duplicate clients.","lastModifiedDate":"2022-03-19"},{"lineNumber":10,"author":{"gitId":"Jacky142857"},"content":"     */","lastModifiedDate":"2022-03-19"},{"lineNumber":11,"author":{"gitId":"Jacky142857"},"content":"    ObservableList\u003cSeller\u003e getSellerList();","lastModifiedDate":"2022-03-19"},{"lineNumber":12,"author":{"gitId":"Jacky142857"},"content":"","lastModifiedDate":"2022-03-19"},{"lineNumber":13,"author":{"gitId":"Jacky142857"},"content":"}","lastModifiedDate":"2022-03-19"}],"authorContributionMap":{"Jacky142857":13}},{"path":"src/main/java/seedu/address/model/ReadOnlyUserPrefs.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.model;","lastModifiedDate":"2018-11-27"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-11-27"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.GuiSettings;","lastModifiedDate":"2018-11-27"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":7,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2018-11-27"},{"lineNumber":8,"author":{"gitId":"-"},"content":" * Unmodifiable view of user prefs.","lastModifiedDate":"2018-11-27"},{"lineNumber":9,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2018-11-27"},{"lineNumber":10,"author":{"gitId":"-"},"content":"public interface ReadOnlyUserPrefs {","lastModifiedDate":"2018-11-27"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    GuiSettings getGuiSettings();","lastModifiedDate":"2018-11-27"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":14,"author":{"gitId":"-"},"content":"    Path getAddressBookFilePath();","lastModifiedDate":"2018-11-27"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":16,"author":{"gitId":"Jacky142857"},"content":"    Path getSellerAddressBookFilePath();","lastModifiedDate":"2022-03-19"},{"lineNumber":17,"author":{"gitId":"Jacky142857"},"content":"","lastModifiedDate":"2022-03-19"},{"lineNumber":18,"author":{"gitId":"WJunHong"},"content":"    Path getBuyerAddressBookFilePath();","lastModifiedDate":"2022-03-23"},{"lineNumber":19,"author":{"gitId":"WJunHong"},"content":"","lastModifiedDate":"2022-03-23"},{"lineNumber":20,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2018-11-27"}],"authorContributionMap":{"WJunHong":2,"Jacky142857":2,"-":16}},{"path":"src/main/java/seedu/address/model/SellerAddressBook.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"Jacky142857"},"content":"package seedu.address.model;","lastModifiedDate":"2022-03-19"},{"lineNumber":2,"author":{"gitId":"Jacky142857"},"content":"","lastModifiedDate":"2022-03-19"},{"lineNumber":3,"author":{"gitId":"Jacky142857"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2022-03-19"},{"lineNumber":4,"author":{"gitId":"Jacky142857"},"content":"","lastModifiedDate":"2022-03-19"},{"lineNumber":5,"author":{"gitId":"Jacky142857"},"content":"import java.util.List;","lastModifiedDate":"2022-03-19"},{"lineNumber":6,"author":{"gitId":"Jacky142857"},"content":"","lastModifiedDate":"2022-03-19"},{"lineNumber":7,"author":{"gitId":"Jacky142857"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2022-03-19"},{"lineNumber":8,"author":{"gitId":"Jacky142857"},"content":"import seedu.address.model.seller.Seller;","lastModifiedDate":"2022-03-19"},{"lineNumber":9,"author":{"gitId":"Jacky142857"},"content":"import seedu.address.model.seller.UniqueSellerList;","lastModifiedDate":"2022-03-19"},{"lineNumber":10,"author":{"gitId":"Jacky142857"},"content":"","lastModifiedDate":"2022-03-19"},{"lineNumber":11,"author":{"gitId":"Jacky142857"},"content":"/**","lastModifiedDate":"2022-03-19"},{"lineNumber":12,"author":{"gitId":"Jacky142857"},"content":" * Wraps all data at the address-book level","lastModifiedDate":"2022-03-19"},{"lineNumber":13,"author":{"gitId":"Jacky142857"},"content":" * Duplicates are not allowed (by .isSameSeller comparison)","lastModifiedDate":"2022-03-19"},{"lineNumber":14,"author":{"gitId":"Jacky142857"},"content":" */","lastModifiedDate":"2022-03-19"},{"lineNumber":15,"author":{"gitId":"Jacky142857"},"content":"public class SellerAddressBook implements ReadOnlySellerAddressBook {","lastModifiedDate":"2022-03-19"},{"lineNumber":16,"author":{"gitId":"Jacky142857"},"content":"","lastModifiedDate":"2022-03-19"},{"lineNumber":17,"author":{"gitId":"Jacky142857"},"content":"    private final UniqueSellerList sellers;","lastModifiedDate":"2022-03-19"},{"lineNumber":18,"author":{"gitId":"Jacky142857"},"content":"","lastModifiedDate":"2022-03-19"},{"lineNumber":19,"author":{"gitId":"Jacky142857"},"content":"    /*","lastModifiedDate":"2022-03-19"},{"lineNumber":20,"author":{"gitId":"Jacky142857"},"content":"     * The \u0027unusual\u0027 code block below is a non-static initialization block, sometimes used to avoid duplication","lastModifiedDate":"2022-03-19"},{"lineNumber":21,"author":{"gitId":"Jacky142857"},"content":"     * between constructors. See https://docs.oracle.com/javase/tutorial/java/javaOO/initial.html","lastModifiedDate":"2022-03-19"},{"lineNumber":22,"author":{"gitId":"Jacky142857"},"content":"     *","lastModifiedDate":"2022-03-19"},{"lineNumber":23,"author":{"gitId":"Jacky142857"},"content":"     * Note that non-static init blocks are not recommended to use. There are other ways to avoid duplication","lastModifiedDate":"2022-03-19"},{"lineNumber":24,"author":{"gitId":"Jacky142857"},"content":"     *   among constructors.","lastModifiedDate":"2022-03-19"},{"lineNumber":25,"author":{"gitId":"Jacky142857"},"content":"     */","lastModifiedDate":"2022-03-19"},{"lineNumber":26,"author":{"gitId":"Jacky142857"},"content":"    {","lastModifiedDate":"2022-03-19"},{"lineNumber":27,"author":{"gitId":"Jacky142857"},"content":"        sellers \u003d new UniqueSellerList();","lastModifiedDate":"2022-03-19"},{"lineNumber":28,"author":{"gitId":"Jacky142857"},"content":"    }","lastModifiedDate":"2022-03-19"},{"lineNumber":29,"author":{"gitId":"Jacky142857"},"content":"","lastModifiedDate":"2022-03-19"},{"lineNumber":30,"author":{"gitId":"Jacky142857"},"content":"    public SellerAddressBook() {}","lastModifiedDate":"2022-03-19"},{"lineNumber":31,"author":{"gitId":"Jacky142857"},"content":"","lastModifiedDate":"2022-03-19"},{"lineNumber":32,"author":{"gitId":"Jacky142857"},"content":"    /**","lastModifiedDate":"2022-03-19"},{"lineNumber":33,"author":{"gitId":"Jacky142857"},"content":"     * Creates an AddressBook using the clients in the {@code toBeCopied}","lastModifiedDate":"2022-03-19"},{"lineNumber":34,"author":{"gitId":"Jacky142857"},"content":"     */","lastModifiedDate":"2022-03-19"},{"lineNumber":35,"author":{"gitId":"Jacky142857"},"content":"    public SellerAddressBook(ReadOnlySellerAddressBook toBeCopied) {","lastModifiedDate":"2022-03-19"},{"lineNumber":36,"author":{"gitId":"Jacky142857"},"content":"        this();","lastModifiedDate":"2022-03-19"},{"lineNumber":37,"author":{"gitId":"Jacky142857"},"content":"        resetData(toBeCopied);","lastModifiedDate":"2022-03-19"},{"lineNumber":38,"author":{"gitId":"Jacky142857"},"content":"    }","lastModifiedDate":"2022-03-19"},{"lineNumber":39,"author":{"gitId":"Jacky142857"},"content":"","lastModifiedDate":"2022-03-19"},{"lineNumber":40,"author":{"gitId":"Jacky142857"},"content":"    //// list overwrite operations","lastModifiedDate":"2022-03-19"},{"lineNumber":41,"author":{"gitId":"Jacky142857"},"content":"","lastModifiedDate":"2022-03-19"},{"lineNumber":42,"author":{"gitId":"Jacky142857"},"content":"    /**","lastModifiedDate":"2022-03-19"},{"lineNumber":43,"author":{"gitId":"Jacky142857"},"content":"     * Replaces the contents of the seller list with {@code sellers}.","lastModifiedDate":"2022-03-19"},{"lineNumber":44,"author":{"gitId":"Jacky142857"},"content":"     * {@code sellers} must not contain duplicate sellers.","lastModifiedDate":"2022-03-19"},{"lineNumber":45,"author":{"gitId":"Jacky142857"},"content":"     */","lastModifiedDate":"2022-03-19"},{"lineNumber":46,"author":{"gitId":"Jacky142857"},"content":"    public void setSellers(List\u003cSeller\u003e sellers) {","lastModifiedDate":"2022-03-19"},{"lineNumber":47,"author":{"gitId":"Jacky142857"},"content":"        this.sellers.setSellers(sellers);","lastModifiedDate":"2022-03-19"},{"lineNumber":48,"author":{"gitId":"Jacky142857"},"content":"    }","lastModifiedDate":"2022-03-19"},{"lineNumber":49,"author":{"gitId":"Jacky142857"},"content":"","lastModifiedDate":"2022-03-19"},{"lineNumber":50,"author":{"gitId":"Jacky142857"},"content":"    /**","lastModifiedDate":"2022-03-19"},{"lineNumber":51,"author":{"gitId":"Jacky142857"},"content":"     * Resets the existing data of this {@code SellerAddressBook} with {@code newData}.","lastModifiedDate":"2022-03-19"},{"lineNumber":52,"author":{"gitId":"Jacky142857"},"content":"     */","lastModifiedDate":"2022-03-19"},{"lineNumber":53,"author":{"gitId":"Jacky142857"},"content":"    public void resetData(ReadOnlySellerAddressBook newData) {","lastModifiedDate":"2022-03-19"},{"lineNumber":54,"author":{"gitId":"Jacky142857"},"content":"        requireNonNull(newData);","lastModifiedDate":"2022-03-19"},{"lineNumber":55,"author":{"gitId":"Jacky142857"},"content":"","lastModifiedDate":"2022-03-19"},{"lineNumber":56,"author":{"gitId":"Jacky142857"},"content":"        setSellers(newData.getSellerList());","lastModifiedDate":"2022-03-19"},{"lineNumber":57,"author":{"gitId":"Jacky142857"},"content":"    }","lastModifiedDate":"2022-03-19"},{"lineNumber":58,"author":{"gitId":"Jacky142857"},"content":"","lastModifiedDate":"2022-03-19"},{"lineNumber":59,"author":{"gitId":"Jacky142857"},"content":"    /**","lastModifiedDate":"2022-03-19"},{"lineNumber":60,"author":{"gitId":"Jacky142857"},"content":"     * Checks if the seller list contains the seller.","lastModifiedDate":"2022-03-19"},{"lineNumber":61,"author":{"gitId":"Jacky142857"},"content":"     *","lastModifiedDate":"2022-03-19"},{"lineNumber":62,"author":{"gitId":"Jacky142857"},"content":"     * @param seller The seller.","lastModifiedDate":"2022-03-19"},{"lineNumber":63,"author":{"gitId":"Jacky142857"},"content":"     * @return Whether seller is already in list.","lastModifiedDate":"2022-03-19"},{"lineNumber":64,"author":{"gitId":"Jacky142857"},"content":"     */","lastModifiedDate":"2022-03-19"},{"lineNumber":65,"author":{"gitId":"Jacky142857"},"content":"    public boolean hasSeller(Seller seller) {","lastModifiedDate":"2022-03-19"},{"lineNumber":66,"author":{"gitId":"Jacky142857"},"content":"        requireNonNull(seller);","lastModifiedDate":"2022-03-19"},{"lineNumber":67,"author":{"gitId":"Jacky142857"},"content":"        return sellers.contains(seller);","lastModifiedDate":"2022-03-19"},{"lineNumber":68,"author":{"gitId":"Jacky142857"},"content":"    }","lastModifiedDate":"2022-03-19"},{"lineNumber":69,"author":{"gitId":"Jacky142857"},"content":"","lastModifiedDate":"2022-03-19"},{"lineNumber":70,"author":{"gitId":"Jacky142857"},"content":"    /**","lastModifiedDate":"2022-03-19"},{"lineNumber":71,"author":{"gitId":"Jacky142857"},"content":"     * Adds a new seller to the client list.","lastModifiedDate":"2022-03-19"},{"lineNumber":72,"author":{"gitId":"Jacky142857"},"content":"     *","lastModifiedDate":"2022-03-19"},{"lineNumber":73,"author":{"gitId":"Jacky142857"},"content":"     * @param seller The seller.","lastModifiedDate":"2022-03-19"},{"lineNumber":74,"author":{"gitId":"Jacky142857"},"content":"     */","lastModifiedDate":"2022-03-19"},{"lineNumber":75,"author":{"gitId":"Jacky142857"},"content":"    public void addSeller(Seller seller) {","lastModifiedDate":"2022-03-19"},{"lineNumber":76,"author":{"gitId":"Jacky142857"},"content":"        sellers.add(seller);","lastModifiedDate":"2022-03-19"},{"lineNumber":77,"author":{"gitId":"Jacky142857"},"content":"    }","lastModifiedDate":"2022-03-19"},{"lineNumber":78,"author":{"gitId":"Jacky142857"},"content":"","lastModifiedDate":"2022-03-19"},{"lineNumber":79,"author":{"gitId":"Jacky142857"},"content":"    /**","lastModifiedDate":"2022-03-19"},{"lineNumber":80,"author":{"gitId":"Jacky142857"},"content":"     * Replaces the given client {@code target} in the list with {@code editedclient}.","lastModifiedDate":"2022-03-19"},{"lineNumber":81,"author":{"gitId":"Jacky142857"},"content":"     * {@code target} must exist in the address book.","lastModifiedDate":"2022-03-19"},{"lineNumber":82,"author":{"gitId":"Jacky142857"},"content":"     * The client identity of {@code editedclient} must not be the same as another existing client in the address book.","lastModifiedDate":"2022-03-19"},{"lineNumber":83,"author":{"gitId":"Jacky142857"},"content":"     */","lastModifiedDate":"2022-03-19"},{"lineNumber":84,"author":{"gitId":"Jacky142857"},"content":"    public void setSeller(Seller target, Seller editedSeller) {","lastModifiedDate":"2022-03-19"},{"lineNumber":85,"author":{"gitId":"Jacky142857"},"content":"        requireNonNull(editedSeller);","lastModifiedDate":"2022-03-19"},{"lineNumber":86,"author":{"gitId":"Jacky142857"},"content":"","lastModifiedDate":"2022-03-19"},{"lineNumber":87,"author":{"gitId":"Jacky142857"},"content":"        sellers.setSeller(target, editedSeller);","lastModifiedDate":"2022-03-19"},{"lineNumber":88,"author":{"gitId":"Jacky142857"},"content":"    }","lastModifiedDate":"2022-03-19"},{"lineNumber":89,"author":{"gitId":"Jacky142857"},"content":"","lastModifiedDate":"2022-03-19"},{"lineNumber":90,"author":{"gitId":"Jacky142857"},"content":"    /**","lastModifiedDate":"2022-03-19"},{"lineNumber":91,"author":{"gitId":"Jacky142857"},"content":"     * Removes {@code key} from this {@code AddressBook}.","lastModifiedDate":"2022-03-19"},{"lineNumber":92,"author":{"gitId":"Jacky142857"},"content":"     * {@code key} must exist in the address book.","lastModifiedDate":"2022-03-19"},{"lineNumber":93,"author":{"gitId":"Jacky142857"},"content":"     */","lastModifiedDate":"2022-03-19"},{"lineNumber":94,"author":{"gitId":"Jacky142857"},"content":"    public void removeSeller(Seller key) {","lastModifiedDate":"2022-03-19"},{"lineNumber":95,"author":{"gitId":"Jacky142857"},"content":"        sellers.remove(key);","lastModifiedDate":"2022-03-19"},{"lineNumber":96,"author":{"gitId":"Jacky142857"},"content":"    }","lastModifiedDate":"2022-03-19"},{"lineNumber":97,"author":{"gitId":"Jacky142857"},"content":"","lastModifiedDate":"2022-03-19"},{"lineNumber":98,"author":{"gitId":"Jacky142857"},"content":"    //// util methods","lastModifiedDate":"2022-03-19"},{"lineNumber":99,"author":{"gitId":"Jacky142857"},"content":"","lastModifiedDate":"2022-03-19"},{"lineNumber":100,"author":{"gitId":"Jacky142857"},"content":"    @Override","lastModifiedDate":"2022-03-19"},{"lineNumber":101,"author":{"gitId":"Jacky142857"},"content":"    public String toString() {","lastModifiedDate":"2022-03-19"},{"lineNumber":102,"author":{"gitId":"Jacky142857"},"content":"        return sellers.asUnmodifiableObservableList().size() + \" sellers\";","lastModifiedDate":"2022-03-19"},{"lineNumber":103,"author":{"gitId":"Jacky142857"},"content":"        // TODO: refine later","lastModifiedDate":"2022-03-19"},{"lineNumber":104,"author":{"gitId":"Jacky142857"},"content":"    }","lastModifiedDate":"2022-03-19"},{"lineNumber":105,"author":{"gitId":"Jacky142857"},"content":"","lastModifiedDate":"2022-03-19"},{"lineNumber":106,"author":{"gitId":"Jacky142857"},"content":"    @Override","lastModifiedDate":"2022-03-19"},{"lineNumber":107,"author":{"gitId":"Jacky142857"},"content":"    public ObservableList\u003cSeller\u003e getSellerList() {","lastModifiedDate":"2022-03-19"},{"lineNumber":108,"author":{"gitId":"Jacky142857"},"content":"        return sellers.asUnmodifiableObservableList();","lastModifiedDate":"2022-03-19"},{"lineNumber":109,"author":{"gitId":"Jacky142857"},"content":"    }","lastModifiedDate":"2022-03-19"},{"lineNumber":110,"author":{"gitId":"Jacky142857"},"content":"","lastModifiedDate":"2022-03-19"},{"lineNumber":111,"author":{"gitId":"Jacky142857"},"content":"    @Override","lastModifiedDate":"2022-03-19"},{"lineNumber":112,"author":{"gitId":"Jacky142857"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2022-03-19"},{"lineNumber":113,"author":{"gitId":"Jacky142857"},"content":"        return other \u003d\u003d this // short circuit if same object","lastModifiedDate":"2022-03-19"},{"lineNumber":114,"author":{"gitId":"chuashihong"},"content":"                || (other instanceof SellerAddressBook // instanceof handles nulls","lastModifiedDate":"2022-04-07"},{"lineNumber":115,"author":{"gitId":"Jacky142857"},"content":"                \u0026\u0026 sellers.equals(((SellerAddressBook) other).sellers));","lastModifiedDate":"2022-03-19"},{"lineNumber":116,"author":{"gitId":"Jacky142857"},"content":"    }","lastModifiedDate":"2022-03-19"},{"lineNumber":117,"author":{"gitId":"Jacky142857"},"content":"","lastModifiedDate":"2022-03-19"},{"lineNumber":118,"author":{"gitId":"Jacky142857"},"content":"    @Override","lastModifiedDate":"2022-03-19"},{"lineNumber":119,"author":{"gitId":"Jacky142857"},"content":"    public int hashCode() {","lastModifiedDate":"2022-03-19"},{"lineNumber":120,"author":{"gitId":"Jacky142857"},"content":"        return sellers.hashCode();","lastModifiedDate":"2022-03-19"},{"lineNumber":121,"author":{"gitId":"Jacky142857"},"content":"    }","lastModifiedDate":"2022-03-19"},{"lineNumber":122,"author":{"gitId":"Jacky142857"},"content":"","lastModifiedDate":"2022-03-31"},{"lineNumber":123,"author":{"gitId":"Jacky142857"},"content":"    public void sortSellers(String comparedItem, String order) {","lastModifiedDate":"2022-03-31"},{"lineNumber":124,"author":{"gitId":"Jacky142857"},"content":"        sellers.sortSellers(comparedItem, order);","lastModifiedDate":"2022-03-31"},{"lineNumber":125,"author":{"gitId":"Jacky142857"},"content":"    }","lastModifiedDate":"2022-03-31"},{"lineNumber":126,"author":{"gitId":"Jacky142857"},"content":"}","lastModifiedDate":"2022-03-19"}],"authorContributionMap":{"Jacky142857":125,"chuashihong":1}},{"path":"src/main/java/seedu/address/model/UserPrefs.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.model;","lastModifiedDate":"2016-08-08"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2018-11-27"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-04-21"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.nio.file.Paths;","lastModifiedDate":"2018-04-21"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import java.util.Objects;","lastModifiedDate":"2016-09-24"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.GuiSettings;","lastModifiedDate":"2017-01-19"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":11,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-08"},{"lineNumber":12,"author":{"gitId":"-"},"content":" * Represents User\u0027s preferences.","lastModifiedDate":"2016-08-08"},{"lineNumber":13,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-08"},{"lineNumber":14,"author":{"gitId":"-"},"content":"public class UserPrefs implements ReadOnlyUserPrefs {","lastModifiedDate":"2018-11-27"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    private GuiSettings guiSettings \u003d new GuiSettings();","lastModifiedDate":"2018-11-27"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    private Path addressBookFilePath \u003d Paths.get(\"data\" , \"addressbook.json\");","lastModifiedDate":"2022-03-17"},{"lineNumber":18,"author":{"gitId":"Jacky142857"},"content":"    private Path sellerAddressBookFilePath \u003d Paths.get(\"data\" , \"selleraddressbook.json\");","lastModifiedDate":"2022-03-19"},{"lineNumber":19,"author":{"gitId":"WJunHong"},"content":"    private Path buyerAddressBookFilePath \u003d Paths.get(\"data\", \"buyeraddressbook.json\");","lastModifiedDate":"2022-03-23"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-12-06"},{"lineNumber":22,"author":{"gitId":"-"},"content":"     * Creates a {@code UserPrefs} with default values.","lastModifiedDate":"2018-12-06"},{"lineNumber":23,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-12-06"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    public UserPrefs() {}","lastModifiedDate":"2018-12-06"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-06"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-12-06"},{"lineNumber":27,"author":{"gitId":"-"},"content":"     * Creates a {@code UserPrefs} with the prefs in {@code userPrefs}.","lastModifiedDate":"2018-12-06"},{"lineNumber":28,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-12-06"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    public UserPrefs(ReadOnlyUserPrefs userPrefs) {","lastModifiedDate":"2018-12-06"},{"lineNumber":30,"author":{"gitId":"-"},"content":"        this();","lastModifiedDate":"2018-12-06"},{"lineNumber":31,"author":{"gitId":"-"},"content":"        resetData(userPrefs);","lastModifiedDate":"2018-12-06"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-12-06"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-06"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-12-06"},{"lineNumber":35,"author":{"gitId":"-"},"content":"     * Resets the existing data of this {@code UserPrefs} with {@code newUserPrefs}.","lastModifiedDate":"2018-12-06"},{"lineNumber":36,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-12-06"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    public void resetData(ReadOnlyUserPrefs newUserPrefs) {","lastModifiedDate":"2018-12-06"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        requireNonNull(newUserPrefs);","lastModifiedDate":"2018-12-06"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        setGuiSettings(newUserPrefs.getGuiSettings());","lastModifiedDate":"2018-12-06"},{"lineNumber":40,"author":{"gitId":"-"},"content":"        setAddressBookFilePath(newUserPrefs.getAddressBookFilePath());","lastModifiedDate":"2018-12-06"},{"lineNumber":41,"author":{"gitId":"Jacky142857"},"content":"        setSellerAddressBookFilePath(newUserPrefs.getSellerAddressBookFilePath());","lastModifiedDate":"2022-03-19"},{"lineNumber":42,"author":{"gitId":"WJunHong"},"content":"        setBuyerAddressBookFilePath(newUserPrefs.getBuyerAddressBookFilePath());","lastModifiedDate":"2022-03-23"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-12-06"},{"lineNumber":44,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-06"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    public GuiSettings getGuiSettings() {","lastModifiedDate":"2016-08-08"},{"lineNumber":46,"author":{"gitId":"-"},"content":"        return guiSettings;","lastModifiedDate":"2018-11-27"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":48,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    public void setGuiSettings(GuiSettings guiSettings) {","lastModifiedDate":"2018-08-13"},{"lineNumber":50,"author":{"gitId":"-"},"content":"        requireNonNull(guiSettings);","lastModifiedDate":"2018-11-27"},{"lineNumber":51,"author":{"gitId":"-"},"content":"        this.guiSettings \u003d guiSettings;","lastModifiedDate":"2016-08-08"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":53,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":54,"author":{"gitId":"-"},"content":"    public Path getAddressBookFilePath() {","lastModifiedDate":"2018-04-21"},{"lineNumber":55,"author":{"gitId":"-"},"content":"        return addressBookFilePath;","lastModifiedDate":"2017-02-25"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-02-25"},{"lineNumber":57,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-25"},{"lineNumber":58,"author":{"gitId":"-"},"content":"    public void setAddressBookFilePath(Path addressBookFilePath) {","lastModifiedDate":"2018-04-21"},{"lineNumber":59,"author":{"gitId":"-"},"content":"        requireNonNull(addressBookFilePath);","lastModifiedDate":"2018-11-27"},{"lineNumber":60,"author":{"gitId":"-"},"content":"        this.addressBookFilePath \u003d addressBookFilePath;","lastModifiedDate":"2017-02-25"},{"lineNumber":61,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-02-25"},{"lineNumber":62,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-25"},{"lineNumber":63,"author":{"gitId":"Jacky142857"},"content":"    public Path getSellerAddressBookFilePath() {","lastModifiedDate":"2022-03-19"},{"lineNumber":64,"author":{"gitId":"Jacky142857"},"content":"        return sellerAddressBookFilePath;","lastModifiedDate":"2022-03-19"},{"lineNumber":65,"author":{"gitId":"Jacky142857"},"content":"    }","lastModifiedDate":"2022-03-19"},{"lineNumber":66,"author":{"gitId":"Jacky142857"},"content":"","lastModifiedDate":"2022-03-19"},{"lineNumber":67,"author":{"gitId":"Jacky142857"},"content":"    public void setSellerAddressBookFilePath(Path sellerAddressBookFilePath) {","lastModifiedDate":"2022-03-19"},{"lineNumber":68,"author":{"gitId":"Jacky142857"},"content":"        requireNonNull(sellerAddressBookFilePath);","lastModifiedDate":"2022-03-19"},{"lineNumber":69,"author":{"gitId":"Jacky142857"},"content":"        this.sellerAddressBookFilePath \u003d sellerAddressBookFilePath;","lastModifiedDate":"2022-03-19"},{"lineNumber":70,"author":{"gitId":"Jacky142857"},"content":"    }","lastModifiedDate":"2022-03-19"},{"lineNumber":71,"author":{"gitId":"Jacky142857"},"content":"","lastModifiedDate":"2022-03-19"},{"lineNumber":72,"author":{"gitId":"WJunHong"},"content":"    public Path getBuyerAddressBookFilePath() {","lastModifiedDate":"2022-03-23"},{"lineNumber":73,"author":{"gitId":"WJunHong"},"content":"        return buyerAddressBookFilePath;","lastModifiedDate":"2022-03-23"},{"lineNumber":74,"author":{"gitId":"WJunHong"},"content":"    }","lastModifiedDate":"2022-03-23"},{"lineNumber":75,"author":{"gitId":"WJunHong"},"content":"","lastModifiedDate":"2022-03-23"},{"lineNumber":76,"author":{"gitId":"WJunHong"},"content":"    public void setBuyerAddressBookFilePath(Path buyerAddressBookFilePath) {","lastModifiedDate":"2022-03-23"},{"lineNumber":77,"author":{"gitId":"WJunHong"},"content":"        requireNonNull(buyerAddressBookFilePath);","lastModifiedDate":"2022-03-23"},{"lineNumber":78,"author":{"gitId":"WJunHong"},"content":"        this.buyerAddressBookFilePath \u003d buyerAddressBookFilePath;","lastModifiedDate":"2022-03-23"},{"lineNumber":79,"author":{"gitId":"WJunHong"},"content":"    }","lastModifiedDate":"2022-03-23"},{"lineNumber":80,"author":{"gitId":"WJunHong"},"content":"","lastModifiedDate":"2022-03-23"},{"lineNumber":81,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-24"},{"lineNumber":82,"author":{"gitId":"-"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2016-09-24"},{"lineNumber":83,"author":{"gitId":"-"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2016-09-24"},{"lineNumber":84,"author":{"gitId":"-"},"content":"            return true;","lastModifiedDate":"2016-09-24"},{"lineNumber":85,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-09-24"},{"lineNumber":86,"author":{"gitId":"-"},"content":"        if (!(other instanceof UserPrefs)) { //this handles null as well.","lastModifiedDate":"2016-09-24"},{"lineNumber":87,"author":{"gitId":"-"},"content":"            return false;","lastModifiedDate":"2016-09-24"},{"lineNumber":88,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-09-24"},{"lineNumber":89,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":90,"author":{"gitId":"-"},"content":"        UserPrefs o \u003d (UserPrefs) other;","lastModifiedDate":"2016-09-24"},{"lineNumber":91,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":92,"author":{"gitId":"-"},"content":"        return guiSettings.equals(o.guiSettings)","lastModifiedDate":"2018-11-27"},{"lineNumber":93,"author":{"gitId":"-"},"content":"                \u0026\u0026 addressBookFilePath.equals(o.addressBookFilePath);","lastModifiedDate":"2018-11-27"},{"lineNumber":94,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":95,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":96,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-24"},{"lineNumber":97,"author":{"gitId":"-"},"content":"    public int hashCode() {","lastModifiedDate":"2016-09-24"},{"lineNumber":98,"author":{"gitId":"-"},"content":"        return Objects.hash(guiSettings, addressBookFilePath);","lastModifiedDate":"2018-08-09"},{"lineNumber":99,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":100,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":101,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-24"},{"lineNumber":102,"author":{"gitId":"-"},"content":"    public String toString() {","lastModifiedDate":"2016-09-24"},{"lineNumber":103,"author":{"gitId":"-"},"content":"        StringBuilder sb \u003d new StringBuilder();","lastModifiedDate":"2017-02-25"},{"lineNumber":104,"author":{"gitId":"-"},"content":"        sb.append(\"Gui Settings : \" + guiSettings);","lastModifiedDate":"2018-11-27"},{"lineNumber":105,"author":{"gitId":"-"},"content":"        sb.append(\"\\nLocal data file location : \" + addressBookFilePath);","lastModifiedDate":"2017-02-25"},{"lineNumber":106,"author":{"gitId":"-"},"content":"        return sb.toString();","lastModifiedDate":"2017-02-25"},{"lineNumber":107,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":108,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":109,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"}],"authorContributionMap":{"WJunHong":11,"Jacky142857":11,"-":87}},{"path":"src/main/java/seedu/address/model/buyer/Buyer.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"WJunHong"},"content":"package seedu.address.model.buyer;","lastModifiedDate":"2022-03-14"},{"lineNumber":2,"author":{"gitId":"WJunHong"},"content":"","lastModifiedDate":"2022-03-14"},{"lineNumber":3,"author":{"gitId":"WJunHong"},"content":"import java.util.Set;","lastModifiedDate":"2022-03-16"},{"lineNumber":4,"author":{"gitId":"WJunHong"},"content":"","lastModifiedDate":"2022-03-14"},{"lineNumber":5,"author":{"gitId":"WJunHong"},"content":"import seedu.address.model.client.Appointment;","lastModifiedDate":"2022-03-14"},{"lineNumber":6,"author":{"gitId":"WJunHong"},"content":"import seedu.address.model.client.Client;","lastModifiedDate":"2022-03-14"},{"lineNumber":7,"author":{"gitId":"WJunHong"},"content":"import seedu.address.model.client.Name;","lastModifiedDate":"2022-03-14"},{"lineNumber":8,"author":{"gitId":"WJunHong"},"content":"import seedu.address.model.client.Phone;","lastModifiedDate":"2022-03-14"},{"lineNumber":9,"author":{"gitId":"WJunHong"},"content":"import seedu.address.model.property.PropertyToBuy;","lastModifiedDate":"2022-03-16"},{"lineNumber":10,"author":{"gitId":"WJunHong"},"content":"import seedu.address.model.tag.Tag;","lastModifiedDate":"2022-03-14"},{"lineNumber":11,"author":{"gitId":"WJunHong"},"content":"","lastModifiedDate":"2022-03-14"},{"lineNumber":12,"author":{"gitId":"WJunHong"},"content":"/**","lastModifiedDate":"2022-03-14"},{"lineNumber":13,"author":{"gitId":"WJunHong"},"content":" * Represents a client who is buying houses.","lastModifiedDate":"2022-03-14"},{"lineNumber":14,"author":{"gitId":"WJunHong"},"content":" * Guarantees: details are present and not null, field values are validated, immutable.","lastModifiedDate":"2022-03-14"},{"lineNumber":15,"author":{"gitId":"WJunHong"},"content":" */","lastModifiedDate":"2022-03-14"},{"lineNumber":16,"author":{"gitId":"WJunHong"},"content":"public class Buyer extends Client {","lastModifiedDate":"2022-03-14"},{"lineNumber":17,"author":{"gitId":"WJunHong"},"content":"","lastModifiedDate":"2022-03-14"},{"lineNumber":18,"author":{"gitId":"WJunHong"},"content":"    // Data fields","lastModifiedDate":"2022-03-14"},{"lineNumber":19,"author":{"gitId":"chuashihong"},"content":"    private final PropertyToBuy propertyToBuy;","lastModifiedDate":"2022-03-26"},{"lineNumber":20,"author":{"gitId":"WJunHong"},"content":"","lastModifiedDate":"2022-03-14"},{"lineNumber":21,"author":{"gitId":"WJunHong"},"content":"    /**","lastModifiedDate":"2022-03-14"},{"lineNumber":22,"author":{"gitId":"WJunHong"},"content":"     * Constructor of Buyer class.","lastModifiedDate":"2022-03-14"},{"lineNumber":23,"author":{"gitId":"WJunHong"},"content":"     */","lastModifiedDate":"2022-03-14"},{"lineNumber":24,"author":{"gitId":"Jacky142857"},"content":"    public Buyer(Name name, Phone phone, Appointment appointment, Set\u003cTag\u003e tags,","lastModifiedDate":"2022-03-19"},{"lineNumber":25,"author":{"gitId":"chuashihong"},"content":"                 PropertyToBuy propertyToBuy) {","lastModifiedDate":"2022-03-26"},{"lineNumber":26,"author":{"gitId":"Jacky142857"},"content":"        super(name, phone, appointment, tags);","lastModifiedDate":"2022-03-19"},{"lineNumber":27,"author":{"gitId":"chuashihong"},"content":"        this.propertyToBuy \u003d propertyToBuy;","lastModifiedDate":"2022-03-26"},{"lineNumber":28,"author":{"gitId":"WJunHong"},"content":"    }","lastModifiedDate":"2022-03-14"},{"lineNumber":29,"author":{"gitId":"WJunHong"},"content":"","lastModifiedDate":"2022-03-14"},{"lineNumber":30,"author":{"gitId":"WJunHong"},"content":"","lastModifiedDate":"2022-03-23"},{"lineNumber":31,"author":{"gitId":"WJunHong"},"content":"    /**","lastModifiedDate":"2022-03-14"},{"lineNumber":32,"author":{"gitId":"WJunHong"},"content":"     * Returns the property the client wants to buy","lastModifiedDate":"2022-03-23"},{"lineNumber":33,"author":{"gitId":"WJunHong"},"content":"     *","lastModifiedDate":"2022-03-14"},{"lineNumber":34,"author":{"gitId":"WJunHong"},"content":"     * @return PropertyToBuy.","lastModifiedDate":"2022-03-23"},{"lineNumber":35,"author":{"gitId":"WJunHong"},"content":"     */","lastModifiedDate":"2022-03-14"},{"lineNumber":36,"author":{"gitId":"chuashihong"},"content":"    public PropertyToBuy getPropertyToBuy() {","lastModifiedDate":"2022-03-26"},{"lineNumber":37,"author":{"gitId":"chuashihong"},"content":"        return propertyToBuy;","lastModifiedDate":"2022-03-26"},{"lineNumber":38,"author":{"gitId":"WJunHong"},"content":"    }","lastModifiedDate":"2022-03-14"},{"lineNumber":39,"author":{"gitId":"WJunHong"},"content":"","lastModifiedDate":"2022-03-16"},{"lineNumber":40,"author":{"gitId":"WJunHong"},"content":"    @Override","lastModifiedDate":"2022-03-16"},{"lineNumber":41,"author":{"gitId":"WJunHong"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2022-03-16"},{"lineNumber":42,"author":{"gitId":"WJunHong"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2022-03-16"},{"lineNumber":43,"author":{"gitId":"WJunHong"},"content":"            return true;","lastModifiedDate":"2022-03-16"},{"lineNumber":44,"author":{"gitId":"WJunHong"},"content":"        }","lastModifiedDate":"2022-03-16"},{"lineNumber":45,"author":{"gitId":"WJunHong"},"content":"","lastModifiedDate":"2022-03-16"},{"lineNumber":46,"author":{"gitId":"WJunHong"},"content":"        if (!(other instanceof Buyer)) {","lastModifiedDate":"2022-03-16"},{"lineNumber":47,"author":{"gitId":"WJunHong"},"content":"            return false;","lastModifiedDate":"2022-03-16"},{"lineNumber":48,"author":{"gitId":"WJunHong"},"content":"        }","lastModifiedDate":"2022-03-16"},{"lineNumber":49,"author":{"gitId":"WJunHong"},"content":"","lastModifiedDate":"2022-03-16"},{"lineNumber":50,"author":{"gitId":"WJunHong"},"content":"        Buyer otherBuyer \u003d (Buyer) other;","lastModifiedDate":"2022-03-16"},{"lineNumber":51,"author":{"gitId":"WJunHong"},"content":"        return otherBuyer.getName().equals(getName())","lastModifiedDate":"2022-03-16"},{"lineNumber":52,"author":{"gitId":"WJunHong"},"content":"                \u0026\u0026 otherBuyer.getPhone().equals(getPhone())","lastModifiedDate":"2022-03-16"},{"lineNumber":53,"author":{"gitId":"WJunHong"},"content":"                \u0026\u0026 otherBuyer.getTags().equals(getTags())","lastModifiedDate":"2022-03-16"},{"lineNumber":54,"author":{"gitId":"chuashihong"},"content":"                \u0026\u0026 otherBuyer.getPropertyToBuy().equals(getPropertyToBuy());","lastModifiedDate":"2022-03-26"},{"lineNumber":55,"author":{"gitId":"WJunHong"},"content":"    }","lastModifiedDate":"2022-03-16"},{"lineNumber":56,"author":{"gitId":"WJunHong"},"content":"","lastModifiedDate":"2022-03-16"},{"lineNumber":57,"author":{"gitId":"janald99"},"content":"    @Override","lastModifiedDate":"2022-04-07"},{"lineNumber":58,"author":{"gitId":"janald99"},"content":"    public String toString() {","lastModifiedDate":"2022-04-07"},{"lineNumber":59,"author":{"gitId":"janald99"},"content":"        final StringBuilder builder \u003d new StringBuilder();","lastModifiedDate":"2022-04-07"},{"lineNumber":60,"author":{"gitId":"janald99"},"content":"        builder.append(getName())","lastModifiedDate":"2022-04-07"},{"lineNumber":61,"author":{"gitId":"janald99"},"content":"            .append(\"\\nPhone: \")","lastModifiedDate":"2022-04-07"},{"lineNumber":62,"author":{"gitId":"janald99"},"content":"            .append(getPhone())","lastModifiedDate":"2022-04-07"},{"lineNumber":63,"author":{"gitId":"janald99"},"content":"            .append(\"\\n\")","lastModifiedDate":"2022-04-07"},{"lineNumber":64,"author":{"gitId":"janald99"},"content":"            .append(getPropertyToBuy())","lastModifiedDate":"2022-04-07"},{"lineNumber":65,"author":{"gitId":"janald99"},"content":"            .append(\"\\nAppointment: \")","lastModifiedDate":"2022-04-07"},{"lineNumber":66,"author":{"gitId":"janald99"},"content":"            .append(getAppointment());","lastModifiedDate":"2022-04-07"},{"lineNumber":67,"author":{"gitId":"janald99"},"content":"","lastModifiedDate":"2022-04-07"},{"lineNumber":68,"author":{"gitId":"janald99"},"content":"        Set\u003cTag\u003e tags \u003d getTags();","lastModifiedDate":"2022-04-07"},{"lineNumber":69,"author":{"gitId":"janald99"},"content":"        if (!tags.isEmpty()) {","lastModifiedDate":"2022-04-07"},{"lineNumber":70,"author":{"gitId":"janald99"},"content":"            builder.append(\"; Tags: \");","lastModifiedDate":"2022-04-07"},{"lineNumber":71,"author":{"gitId":"janald99"},"content":"            tags.forEach(builder::append);","lastModifiedDate":"2022-04-07"},{"lineNumber":72,"author":{"gitId":"janald99"},"content":"        }","lastModifiedDate":"2022-04-07"},{"lineNumber":73,"author":{"gitId":"janald99"},"content":"        return builder.toString();","lastModifiedDate":"2022-04-07"},{"lineNumber":74,"author":{"gitId":"janald99"},"content":"    }","lastModifiedDate":"2022-04-07"},{"lineNumber":75,"author":{"gitId":"janald99"},"content":"","lastModifiedDate":"2022-04-07"},{"lineNumber":76,"author":{"gitId":"WJunHong"},"content":"}","lastModifiedDate":"2022-03-14"}],"authorContributionMap":{"janald99":19,"WJunHong":49,"Jacky142857":2,"chuashihong":6}},{"path":"src/main/java/seedu/address/model/buyer/BuyerHouseTypeContainsKeywordsPredicate.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"cwnm"},"content":"package seedu.address.model.buyer;","lastModifiedDate":"2022-03-28"},{"lineNumber":2,"author":{"gitId":"cwnm"},"content":"","lastModifiedDate":"2022-03-28"},{"lineNumber":3,"author":{"gitId":"cwnm"},"content":"import java.util.List;","lastModifiedDate":"2022-03-28"},{"lineNumber":4,"author":{"gitId":"cwnm"},"content":"import java.util.function.Predicate;","lastModifiedDate":"2022-03-28"},{"lineNumber":5,"author":{"gitId":"cwnm"},"content":"","lastModifiedDate":"2022-03-28"},{"lineNumber":6,"author":{"gitId":"cwnm"},"content":"import seedu.address.commons.util.StringUtil;","lastModifiedDate":"2022-03-28"},{"lineNumber":7,"author":{"gitId":"cwnm"},"content":"","lastModifiedDate":"2022-03-28"},{"lineNumber":8,"author":{"gitId":"cwnm"},"content":"/**","lastModifiedDate":"2022-03-28"},{"lineNumber":9,"author":{"gitId":"cwnm"},"content":" * Tests that a {@code Buyer}\u0027s {@code Housetype} matches any of the keywords given.","lastModifiedDate":"2022-03-28"},{"lineNumber":10,"author":{"gitId":"cwnm"},"content":" */","lastModifiedDate":"2022-03-28"},{"lineNumber":11,"author":{"gitId":"cwnm"},"content":"public class BuyerHouseTypeContainsKeywordsPredicate implements Predicate\u003cBuyer\u003e {","lastModifiedDate":"2022-03-28"},{"lineNumber":12,"author":{"gitId":"cwnm"},"content":"    private final List\u003cString\u003e keywords;","lastModifiedDate":"2022-03-28"},{"lineNumber":13,"author":{"gitId":"cwnm"},"content":"","lastModifiedDate":"2022-03-28"},{"lineNumber":14,"author":{"gitId":"cwnm"},"content":"    public BuyerHouseTypeContainsKeywordsPredicate(List\u003cString\u003e keywords) {","lastModifiedDate":"2022-03-28"},{"lineNumber":15,"author":{"gitId":"cwnm"},"content":"        this.keywords \u003d keywords;","lastModifiedDate":"2022-03-28"},{"lineNumber":16,"author":{"gitId":"cwnm"},"content":"    }","lastModifiedDate":"2022-03-28"},{"lineNumber":17,"author":{"gitId":"cwnm"},"content":"","lastModifiedDate":"2022-03-28"},{"lineNumber":18,"author":{"gitId":"cwnm"},"content":"    @Override","lastModifiedDate":"2022-03-28"},{"lineNumber":19,"author":{"gitId":"cwnm"},"content":"    public boolean test(Buyer buyer) {","lastModifiedDate":"2022-03-28"},{"lineNumber":20,"author":{"gitId":"cwnm"},"content":"        return keywords.stream()","lastModifiedDate":"2022-03-28"},{"lineNumber":21,"author":{"gitId":"cwnm"},"content":"                .anyMatch(keyword -\u003e StringUtil.containsWordIgnoreCase(","lastModifiedDate":"2022-03-28"},{"lineNumber":22,"author":{"gitId":"cwnm"},"content":"                        buyer.getPropertyToBuy().getHouse().getHouseType().toString(), keyword));","lastModifiedDate":"2022-03-28"},{"lineNumber":23,"author":{"gitId":"cwnm"},"content":"    }","lastModifiedDate":"2022-03-28"},{"lineNumber":24,"author":{"gitId":"cwnm"},"content":"","lastModifiedDate":"2022-03-28"},{"lineNumber":25,"author":{"gitId":"cwnm"},"content":"    @Override","lastModifiedDate":"2022-03-28"},{"lineNumber":26,"author":{"gitId":"cwnm"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2022-03-28"},{"lineNumber":27,"author":{"gitId":"cwnm"},"content":"        return other \u003d\u003d this // short circuit if same object","lastModifiedDate":"2022-03-28"},{"lineNumber":28,"author":{"gitId":"cwnm"},"content":"                || (other instanceof BuyerHouseTypeContainsKeywordsPredicate // instanceof handles nulls","lastModifiedDate":"2022-03-28"},{"lineNumber":29,"author":{"gitId":"cwnm"},"content":"                \u0026\u0026 keywords.equals(((BuyerHouseTypeContainsKeywordsPredicate) other).keywords)); // state check","lastModifiedDate":"2022-03-28"},{"lineNumber":30,"author":{"gitId":"cwnm"},"content":"    }","lastModifiedDate":"2022-03-28"},{"lineNumber":31,"author":{"gitId":"cwnm"},"content":"","lastModifiedDate":"2022-03-28"},{"lineNumber":32,"author":{"gitId":"cwnm"},"content":"}","lastModifiedDate":"2022-03-28"}],"authorContributionMap":{"cwnm":32}},{"path":"src/main/java/seedu/address/model/buyer/BuyerLocationContainsKeywordsPredicate.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"cwnm"},"content":"package seedu.address.model.buyer;","lastModifiedDate":"2022-03-30"},{"lineNumber":2,"author":{"gitId":"cwnm"},"content":"","lastModifiedDate":"2022-03-30"},{"lineNumber":3,"author":{"gitId":"cwnm"},"content":"import java.util.List;","lastModifiedDate":"2022-03-30"},{"lineNumber":4,"author":{"gitId":"cwnm"},"content":"import java.util.function.Predicate;","lastModifiedDate":"2022-03-30"},{"lineNumber":5,"author":{"gitId":"cwnm"},"content":"","lastModifiedDate":"2022-03-30"},{"lineNumber":6,"author":{"gitId":"cwnm"},"content":"import seedu.address.commons.util.StringUtil;","lastModifiedDate":"2022-03-30"},{"lineNumber":7,"author":{"gitId":"cwnm"},"content":"","lastModifiedDate":"2022-03-30"},{"lineNumber":8,"author":{"gitId":"cwnm"},"content":"/**","lastModifiedDate":"2022-03-30"},{"lineNumber":9,"author":{"gitId":"cwnm"},"content":" * Tests that a {@code Buyer}\u0027s {@code Location} matches any of the keywords given.","lastModifiedDate":"2022-03-30"},{"lineNumber":10,"author":{"gitId":"cwnm"},"content":" */","lastModifiedDate":"2022-03-30"},{"lineNumber":11,"author":{"gitId":"cwnm"},"content":"public class BuyerLocationContainsKeywordsPredicate implements Predicate\u003cBuyer\u003e {","lastModifiedDate":"2022-03-30"},{"lineNumber":12,"author":{"gitId":"cwnm"},"content":"    private final List\u003cString\u003e keywords;","lastModifiedDate":"2022-03-30"},{"lineNumber":13,"author":{"gitId":"cwnm"},"content":"","lastModifiedDate":"2022-03-30"},{"lineNumber":14,"author":{"gitId":"cwnm"},"content":"    public BuyerLocationContainsKeywordsPredicate(List\u003cString\u003e keywords) {","lastModifiedDate":"2022-03-30"},{"lineNumber":15,"author":{"gitId":"cwnm"},"content":"        this.keywords \u003d keywords;","lastModifiedDate":"2022-03-30"},{"lineNumber":16,"author":{"gitId":"cwnm"},"content":"    }","lastModifiedDate":"2022-03-30"},{"lineNumber":17,"author":{"gitId":"cwnm"},"content":"","lastModifiedDate":"2022-03-30"},{"lineNumber":18,"author":{"gitId":"cwnm"},"content":"    @Override","lastModifiedDate":"2022-03-30"},{"lineNumber":19,"author":{"gitId":"cwnm"},"content":"    public boolean test(Buyer buyer) {","lastModifiedDate":"2022-03-30"},{"lineNumber":20,"author":{"gitId":"cwnm"},"content":"        return keywords.stream()","lastModifiedDate":"2022-03-30"},{"lineNumber":21,"author":{"gitId":"cwnm"},"content":"                .anyMatch(keyword -\u003e StringUtil.containsWordIgnoreCase(","lastModifiedDate":"2022-03-30"},{"lineNumber":22,"author":{"gitId":"cwnm"},"content":"                        buyer.getPropertyToBuy().getHouse().getLocation().toString(), keyword));","lastModifiedDate":"2022-03-30"},{"lineNumber":23,"author":{"gitId":"cwnm"},"content":"    }","lastModifiedDate":"2022-03-30"},{"lineNumber":24,"author":{"gitId":"cwnm"},"content":"","lastModifiedDate":"2022-03-30"},{"lineNumber":25,"author":{"gitId":"cwnm"},"content":"    @Override","lastModifiedDate":"2022-03-30"},{"lineNumber":26,"author":{"gitId":"cwnm"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2022-03-30"},{"lineNumber":27,"author":{"gitId":"cwnm"},"content":"        return other \u003d\u003d this // short circuit if same object","lastModifiedDate":"2022-03-30"},{"lineNumber":28,"author":{"gitId":"cwnm"},"content":"                || (other instanceof BuyerLocationContainsKeywordsPredicate // instanceof handles nulls","lastModifiedDate":"2022-03-30"},{"lineNumber":29,"author":{"gitId":"cwnm"},"content":"                \u0026\u0026 keywords.equals(((BuyerLocationContainsKeywordsPredicate) other).keywords)); // state check","lastModifiedDate":"2022-03-30"},{"lineNumber":30,"author":{"gitId":"cwnm"},"content":"    }","lastModifiedDate":"2022-03-30"},{"lineNumber":31,"author":{"gitId":"cwnm"},"content":"","lastModifiedDate":"2022-03-30"},{"lineNumber":32,"author":{"gitId":"cwnm"},"content":"}","lastModifiedDate":"2022-03-30"}],"authorContributionMap":{"cwnm":32}},{"path":"src/main/java/seedu/address/model/buyer/BuyerNameContainsKeywordsPredicate.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"cwnm"},"content":"package seedu.address.model.buyer;","lastModifiedDate":"2022-03-28"},{"lineNumber":2,"author":{"gitId":"cwnm"},"content":"","lastModifiedDate":"2022-03-28"},{"lineNumber":3,"author":{"gitId":"cwnm"},"content":"import java.util.List;","lastModifiedDate":"2022-03-28"},{"lineNumber":4,"author":{"gitId":"cwnm"},"content":"import java.util.function.Predicate;","lastModifiedDate":"2022-03-28"},{"lineNumber":5,"author":{"gitId":"cwnm"},"content":"","lastModifiedDate":"2022-03-28"},{"lineNumber":6,"author":{"gitId":"cwnm"},"content":"import seedu.address.commons.util.StringUtil;","lastModifiedDate":"2022-03-28"},{"lineNumber":7,"author":{"gitId":"cwnm"},"content":"","lastModifiedDate":"2022-03-28"},{"lineNumber":8,"author":{"gitId":"cwnm"},"content":"/**","lastModifiedDate":"2022-03-28"},{"lineNumber":9,"author":{"gitId":"cwnm"},"content":" * Tests that a {@code Buyer}\u0027s {@code Name} matches any of the keywords given.","lastModifiedDate":"2022-03-28"},{"lineNumber":10,"author":{"gitId":"cwnm"},"content":" */","lastModifiedDate":"2022-03-28"},{"lineNumber":11,"author":{"gitId":"cwnm"},"content":"public class BuyerNameContainsKeywordsPredicate implements Predicate\u003cBuyer\u003e {","lastModifiedDate":"2022-03-28"},{"lineNumber":12,"author":{"gitId":"cwnm"},"content":"    private final List\u003cString\u003e keywords;","lastModifiedDate":"2022-03-28"},{"lineNumber":13,"author":{"gitId":"cwnm"},"content":"","lastModifiedDate":"2022-03-28"},{"lineNumber":14,"author":{"gitId":"cwnm"},"content":"    public BuyerNameContainsKeywordsPredicate(List\u003cString\u003e keywords) {","lastModifiedDate":"2022-03-28"},{"lineNumber":15,"author":{"gitId":"cwnm"},"content":"        this.keywords \u003d keywords;","lastModifiedDate":"2022-03-28"},{"lineNumber":16,"author":{"gitId":"cwnm"},"content":"    }","lastModifiedDate":"2022-03-28"},{"lineNumber":17,"author":{"gitId":"cwnm"},"content":"","lastModifiedDate":"2022-03-28"},{"lineNumber":18,"author":{"gitId":"cwnm"},"content":"    @Override","lastModifiedDate":"2022-03-28"},{"lineNumber":19,"author":{"gitId":"cwnm"},"content":"    public boolean test(Buyer buyer) {","lastModifiedDate":"2022-03-28"},{"lineNumber":20,"author":{"gitId":"cwnm"},"content":"        return keywords.stream()","lastModifiedDate":"2022-03-28"},{"lineNumber":21,"author":{"gitId":"cwnm"},"content":"                .anyMatch(keyword -\u003e StringUtil.containsWordIgnoreCase(buyer.getName().fullName, keyword));","lastModifiedDate":"2022-03-28"},{"lineNumber":22,"author":{"gitId":"cwnm"},"content":"    }","lastModifiedDate":"2022-03-28"},{"lineNumber":23,"author":{"gitId":"cwnm"},"content":"","lastModifiedDate":"2022-03-28"},{"lineNumber":24,"author":{"gitId":"cwnm"},"content":"    @Override","lastModifiedDate":"2022-03-28"},{"lineNumber":25,"author":{"gitId":"cwnm"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2022-03-28"},{"lineNumber":26,"author":{"gitId":"cwnm"},"content":"        return other \u003d\u003d this // short circuit if same object","lastModifiedDate":"2022-03-28"},{"lineNumber":27,"author":{"gitId":"cwnm"},"content":"                || (other instanceof BuyerNameContainsKeywordsPredicate // instanceof handles nulls","lastModifiedDate":"2022-03-28"},{"lineNumber":28,"author":{"gitId":"cwnm"},"content":"                \u0026\u0026 keywords.equals(((BuyerNameContainsKeywordsPredicate) other).keywords)); // state check","lastModifiedDate":"2022-03-28"},{"lineNumber":29,"author":{"gitId":"cwnm"},"content":"    }","lastModifiedDate":"2022-03-28"},{"lineNumber":30,"author":{"gitId":"cwnm"},"content":"","lastModifiedDate":"2022-03-28"},{"lineNumber":31,"author":{"gitId":"cwnm"},"content":"}","lastModifiedDate":"2022-03-28"}],"authorContributionMap":{"cwnm":31}},{"path":"src/main/java/seedu/address/model/buyer/BuyerPhoneContainsKeywordsPredicate.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"cwnm"},"content":"package seedu.address.model.buyer;","lastModifiedDate":"2022-03-28"},{"lineNumber":2,"author":{"gitId":"cwnm"},"content":"","lastModifiedDate":"2022-03-28"},{"lineNumber":3,"author":{"gitId":"cwnm"},"content":"import java.util.List;","lastModifiedDate":"2022-03-28"},{"lineNumber":4,"author":{"gitId":"cwnm"},"content":"import java.util.function.Predicate;","lastModifiedDate":"2022-03-28"},{"lineNumber":5,"author":{"gitId":"cwnm"},"content":"","lastModifiedDate":"2022-03-28"},{"lineNumber":6,"author":{"gitId":"cwnm"},"content":"import seedu.address.commons.util.StringUtil;","lastModifiedDate":"2022-03-28"},{"lineNumber":7,"author":{"gitId":"cwnm"},"content":"","lastModifiedDate":"2022-03-28"},{"lineNumber":8,"author":{"gitId":"cwnm"},"content":"/**","lastModifiedDate":"2022-03-28"},{"lineNumber":9,"author":{"gitId":"cwnm"},"content":" * Tests that a {@code Buyer}\u0027s {@code Phone} matches any of the keywords given.","lastModifiedDate":"2022-03-28"},{"lineNumber":10,"author":{"gitId":"cwnm"},"content":" */","lastModifiedDate":"2022-03-28"},{"lineNumber":11,"author":{"gitId":"cwnm"},"content":"public class BuyerPhoneContainsKeywordsPredicate implements Predicate\u003cBuyer\u003e {","lastModifiedDate":"2022-03-28"},{"lineNumber":12,"author":{"gitId":"cwnm"},"content":"    private final List\u003cString\u003e keywords;","lastModifiedDate":"2022-03-28"},{"lineNumber":13,"author":{"gitId":"cwnm"},"content":"","lastModifiedDate":"2022-03-28"},{"lineNumber":14,"author":{"gitId":"cwnm"},"content":"    public BuyerPhoneContainsKeywordsPredicate(List\u003cString\u003e keywords) {","lastModifiedDate":"2022-03-28"},{"lineNumber":15,"author":{"gitId":"cwnm"},"content":"        this.keywords \u003d keywords;","lastModifiedDate":"2022-03-28"},{"lineNumber":16,"author":{"gitId":"cwnm"},"content":"    }","lastModifiedDate":"2022-03-28"},{"lineNumber":17,"author":{"gitId":"cwnm"},"content":"","lastModifiedDate":"2022-03-28"},{"lineNumber":18,"author":{"gitId":"cwnm"},"content":"    @Override","lastModifiedDate":"2022-03-28"},{"lineNumber":19,"author":{"gitId":"cwnm"},"content":"    public boolean test(Buyer buyer) {","lastModifiedDate":"2022-03-28"},{"lineNumber":20,"author":{"gitId":"cwnm"},"content":"        return keywords.stream()","lastModifiedDate":"2022-03-28"},{"lineNumber":21,"author":{"gitId":"cwnm"},"content":"                .anyMatch(keyword -\u003e StringUtil.containsWordIgnoreCase(buyer.getPhone().value, keyword));","lastModifiedDate":"2022-03-28"},{"lineNumber":22,"author":{"gitId":"cwnm"},"content":"    }","lastModifiedDate":"2022-03-28"},{"lineNumber":23,"author":{"gitId":"cwnm"},"content":"","lastModifiedDate":"2022-03-28"},{"lineNumber":24,"author":{"gitId":"cwnm"},"content":"    @Override","lastModifiedDate":"2022-03-28"},{"lineNumber":25,"author":{"gitId":"cwnm"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2022-03-28"},{"lineNumber":26,"author":{"gitId":"cwnm"},"content":"        return other \u003d\u003d this // short circuit if same object","lastModifiedDate":"2022-03-28"},{"lineNumber":27,"author":{"gitId":"cwnm"},"content":"                || (other instanceof BuyerPhoneContainsKeywordsPredicate // instanceof handles nulls","lastModifiedDate":"2022-03-28"},{"lineNumber":28,"author":{"gitId":"cwnm"},"content":"                \u0026\u0026 keywords.equals(((BuyerPhoneContainsKeywordsPredicate) other).keywords)); // state check","lastModifiedDate":"2022-03-28"},{"lineNumber":29,"author":{"gitId":"cwnm"},"content":"    }","lastModifiedDate":"2022-03-28"},{"lineNumber":30,"author":{"gitId":"cwnm"},"content":"","lastModifiedDate":"2022-03-28"},{"lineNumber":31,"author":{"gitId":"cwnm"},"content":"}","lastModifiedDate":"2022-03-28"},{"lineNumber":32,"author":{"gitId":"cwnm"},"content":"","lastModifiedDate":"2022-03-28"}],"authorContributionMap":{"cwnm":32}},{"path":"src/main/java/seedu/address/model/buyer/BuyerTagsContainsKeywordsPredicate.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"cwnm"},"content":"package seedu.address.model.buyer;","lastModifiedDate":"2022-03-28"},{"lineNumber":2,"author":{"gitId":"cwnm"},"content":"","lastModifiedDate":"2022-03-28"},{"lineNumber":3,"author":{"gitId":"cwnm"},"content":"import java.util.List;","lastModifiedDate":"2022-03-28"},{"lineNumber":4,"author":{"gitId":"cwnm"},"content":"import java.util.function.Predicate;","lastModifiedDate":"2022-03-28"},{"lineNumber":5,"author":{"gitId":"cwnm"},"content":"","lastModifiedDate":"2022-03-28"},{"lineNumber":6,"author":{"gitId":"cwnm"},"content":"import seedu.address.commons.util.StringUtil;","lastModifiedDate":"2022-03-28"},{"lineNumber":7,"author":{"gitId":"cwnm"},"content":"","lastModifiedDate":"2022-03-28"},{"lineNumber":8,"author":{"gitId":"cwnm"},"content":"/**","lastModifiedDate":"2022-03-28"},{"lineNumber":9,"author":{"gitId":"cwnm"},"content":" * Tests that a {@code Buyer}\u0027s {@code Name} matches any of the keywords given.","lastModifiedDate":"2022-03-28"},{"lineNumber":10,"author":{"gitId":"cwnm"},"content":" */","lastModifiedDate":"2022-03-28"},{"lineNumber":11,"author":{"gitId":"cwnm"},"content":"public class BuyerTagsContainsKeywordsPredicate implements Predicate\u003cBuyer\u003e {","lastModifiedDate":"2022-03-28"},{"lineNumber":12,"author":{"gitId":"cwnm"},"content":"    private final List\u003cString\u003e keywords;","lastModifiedDate":"2022-03-28"},{"lineNumber":13,"author":{"gitId":"cwnm"},"content":"","lastModifiedDate":"2022-03-28"},{"lineNumber":14,"author":{"gitId":"cwnm"},"content":"    public BuyerTagsContainsKeywordsPredicate(List\u003cString\u003e keywords) {","lastModifiedDate":"2022-03-28"},{"lineNumber":15,"author":{"gitId":"cwnm"},"content":"        this.keywords \u003d keywords;","lastModifiedDate":"2022-03-28"},{"lineNumber":16,"author":{"gitId":"cwnm"},"content":"    }","lastModifiedDate":"2022-03-28"},{"lineNumber":17,"author":{"gitId":"cwnm"},"content":"","lastModifiedDate":"2022-03-28"},{"lineNumber":18,"author":{"gitId":"cwnm"},"content":"    @Override","lastModifiedDate":"2022-03-28"},{"lineNumber":19,"author":{"gitId":"cwnm"},"content":"    public boolean test(Buyer buyer) {","lastModifiedDate":"2022-03-28"},{"lineNumber":20,"author":{"gitId":"cwnm"},"content":"        return keywords.stream()","lastModifiedDate":"2022-03-28"},{"lineNumber":21,"author":{"gitId":"cwnm"},"content":"                .anyMatch(keyword -\u003e StringUtil.containsWordIgnoreCase(buyer.getTags().toString(), keyword));","lastModifiedDate":"2022-03-28"},{"lineNumber":22,"author":{"gitId":"cwnm"},"content":"    }","lastModifiedDate":"2022-03-28"},{"lineNumber":23,"author":{"gitId":"cwnm"},"content":"","lastModifiedDate":"2022-03-28"},{"lineNumber":24,"author":{"gitId":"cwnm"},"content":"    @Override","lastModifiedDate":"2022-03-28"},{"lineNumber":25,"author":{"gitId":"cwnm"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2022-03-28"},{"lineNumber":26,"author":{"gitId":"cwnm"},"content":"        return other \u003d\u003d this // short circuit if same object","lastModifiedDate":"2022-03-28"},{"lineNumber":27,"author":{"gitId":"cwnm"},"content":"                || (other instanceof BuyerTagsContainsKeywordsPredicate // instanceof handles nulls","lastModifiedDate":"2022-03-28"},{"lineNumber":28,"author":{"gitId":"cwnm"},"content":"                \u0026\u0026 keywords.equals(((BuyerTagsContainsKeywordsPredicate) other).keywords)); // state check","lastModifiedDate":"2022-03-28"},{"lineNumber":29,"author":{"gitId":"cwnm"},"content":"    }","lastModifiedDate":"2022-03-28"},{"lineNumber":30,"author":{"gitId":"cwnm"},"content":"","lastModifiedDate":"2022-03-28"},{"lineNumber":31,"author":{"gitId":"cwnm"},"content":"}","lastModifiedDate":"2022-03-28"}],"authorContributionMap":{"cwnm":31}},{"path":"src/main/java/seedu/address/model/buyer/UniqueBuyerList.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"WJunHong"},"content":"package seedu.address.model.buyer;","lastModifiedDate":"2022-03-16"},{"lineNumber":2,"author":{"gitId":"WJunHong"},"content":"","lastModifiedDate":"2022-03-16"},{"lineNumber":3,"author":{"gitId":"WJunHong"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2022-03-16"},{"lineNumber":4,"author":{"gitId":"WJunHong"},"content":"import static seedu.address.commons.util.CollectionUtil.requireAllNonNull;","lastModifiedDate":"2022-03-16"},{"lineNumber":5,"author":{"gitId":"WJunHong"},"content":"","lastModifiedDate":"2022-03-16"},{"lineNumber":6,"author":{"gitId":"WJunHong"},"content":"import java.util.Iterator;","lastModifiedDate":"2022-03-16"},{"lineNumber":7,"author":{"gitId":"WJunHong"},"content":"import java.util.List;","lastModifiedDate":"2022-03-16"},{"lineNumber":8,"author":{"gitId":"WJunHong"},"content":"","lastModifiedDate":"2022-03-16"},{"lineNumber":9,"author":{"gitId":"WJunHong"},"content":"import javafx.collections.FXCollections;","lastModifiedDate":"2022-03-16"},{"lineNumber":10,"author":{"gitId":"WJunHong"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2022-03-16"},{"lineNumber":11,"author":{"gitId":"Jacky142857"},"content":"import seedu.address.commons.util.ComparatorUtil;","lastModifiedDate":"2022-03-31"},{"lineNumber":12,"author":{"gitId":"WJunHong"},"content":"import seedu.address.model.client.Client;","lastModifiedDate":"2022-03-16"},{"lineNumber":13,"author":{"gitId":"WJunHong"},"content":"import seedu.address.model.client.exceptions.ClientNotFoundException;","lastModifiedDate":"2022-03-16"},{"lineNumber":14,"author":{"gitId":"WJunHong"},"content":"import seedu.address.model.client.exceptions.DuplicateClientException;","lastModifiedDate":"2022-03-16"},{"lineNumber":15,"author":{"gitId":"WJunHong"},"content":"","lastModifiedDate":"2022-03-16"},{"lineNumber":16,"author":{"gitId":"WJunHong"},"content":"/**","lastModifiedDate":"2022-03-16"},{"lineNumber":17,"author":{"gitId":"WJunHong"},"content":" * A list of clients that enforces uniqueness between its elements and does not allow nulls.","lastModifiedDate":"2022-03-16"},{"lineNumber":18,"author":{"gitId":"WJunHong"},"content":" * A client is considered unique by comparing using {@code client#isSameclient(client)}. As such, adding and updating of","lastModifiedDate":"2022-03-16"},{"lineNumber":19,"author":{"gitId":"WJunHong"},"content":" * clients uses client#isSameclient(client) for equality so as to ensure that the client being added or updated is","lastModifiedDate":"2022-03-16"},{"lineNumber":20,"author":{"gitId":"WJunHong"},"content":" * unique in terms of identity in the UniqueclientList. However, the removal of a client uses client#equals(Object) so","lastModifiedDate":"2022-03-16"},{"lineNumber":21,"author":{"gitId":"WJunHong"},"content":" * as to ensure that the client with exactly the same fields will be removed.","lastModifiedDate":"2022-03-16"},{"lineNumber":22,"author":{"gitId":"WJunHong"},"content":" *","lastModifiedDate":"2022-03-16"},{"lineNumber":23,"author":{"gitId":"WJunHong"},"content":" * Supports a minimal set of list operations.","lastModifiedDate":"2022-03-16"},{"lineNumber":24,"author":{"gitId":"WJunHong"},"content":" *","lastModifiedDate":"2022-03-16"},{"lineNumber":25,"author":{"gitId":"WJunHong"},"content":" * @see Client#isSameclient(Client)","lastModifiedDate":"2022-03-16"},{"lineNumber":26,"author":{"gitId":"WJunHong"},"content":" */","lastModifiedDate":"2022-03-16"},{"lineNumber":27,"author":{"gitId":"WJunHong"},"content":"public class UniqueBuyerList implements Iterable\u003cBuyer\u003e {","lastModifiedDate":"2022-03-16"},{"lineNumber":28,"author":{"gitId":"WJunHong"},"content":"","lastModifiedDate":"2022-03-16"},{"lineNumber":29,"author":{"gitId":"WJunHong"},"content":"    private final ObservableList\u003cBuyer\u003e internalList \u003d FXCollections.observableArrayList();","lastModifiedDate":"2022-03-16"},{"lineNumber":30,"author":{"gitId":"WJunHong"},"content":"    private final ObservableList\u003cBuyer\u003e internalUnmodifiableList \u003d","lastModifiedDate":"2022-03-16"},{"lineNumber":31,"author":{"gitId":"WJunHong"},"content":"            FXCollections.unmodifiableObservableList(internalList);","lastModifiedDate":"2022-03-16"},{"lineNumber":32,"author":{"gitId":"WJunHong"},"content":"","lastModifiedDate":"2022-03-16"},{"lineNumber":33,"author":{"gitId":"WJunHong"},"content":"    /**","lastModifiedDate":"2022-03-16"},{"lineNumber":34,"author":{"gitId":"WJunHong"},"content":"     * Returns true if the list contains an equivalent client as the given argument.","lastModifiedDate":"2022-03-16"},{"lineNumber":35,"author":{"gitId":"WJunHong"},"content":"     */","lastModifiedDate":"2022-03-16"},{"lineNumber":36,"author":{"gitId":"WJunHong"},"content":"    public boolean contains(Client toCheck) {","lastModifiedDate":"2022-03-16"},{"lineNumber":37,"author":{"gitId":"WJunHong"},"content":"        requireNonNull(toCheck);","lastModifiedDate":"2022-03-16"},{"lineNumber":38,"author":{"gitId":"WJunHong"},"content":"        return internalList.stream().anyMatch(toCheck::isSameclient);","lastModifiedDate":"2022-03-16"},{"lineNumber":39,"author":{"gitId":"WJunHong"},"content":"    }","lastModifiedDate":"2022-03-16"},{"lineNumber":40,"author":{"gitId":"WJunHong"},"content":"","lastModifiedDate":"2022-03-16"},{"lineNumber":41,"author":{"gitId":"WJunHong"},"content":"    /**","lastModifiedDate":"2022-03-16"},{"lineNumber":42,"author":{"gitId":"WJunHong"},"content":"     * Adds a client to the list.","lastModifiedDate":"2022-03-16"},{"lineNumber":43,"author":{"gitId":"WJunHong"},"content":"     * The client must not already exist in the list.","lastModifiedDate":"2022-03-16"},{"lineNumber":44,"author":{"gitId":"WJunHong"},"content":"     */","lastModifiedDate":"2022-03-16"},{"lineNumber":45,"author":{"gitId":"WJunHong"},"content":"    public void add(Buyer toAdd) {","lastModifiedDate":"2022-03-16"},{"lineNumber":46,"author":{"gitId":"WJunHong"},"content":"        requireNonNull(toAdd);","lastModifiedDate":"2022-03-16"},{"lineNumber":47,"author":{"gitId":"WJunHong"},"content":"        if (contains(toAdd)) {","lastModifiedDate":"2022-03-16"},{"lineNumber":48,"author":{"gitId":"WJunHong"},"content":"            throw new DuplicateClientException();","lastModifiedDate":"2022-03-16"},{"lineNumber":49,"author":{"gitId":"WJunHong"},"content":"        }","lastModifiedDate":"2022-03-16"},{"lineNumber":50,"author":{"gitId":"WJunHong"},"content":"        internalList.add(toAdd);","lastModifiedDate":"2022-03-16"},{"lineNumber":51,"author":{"gitId":"WJunHong"},"content":"    }","lastModifiedDate":"2022-03-16"},{"lineNumber":52,"author":{"gitId":"WJunHong"},"content":"","lastModifiedDate":"2022-03-16"},{"lineNumber":53,"author":{"gitId":"WJunHong"},"content":"    /**","lastModifiedDate":"2022-03-16"},{"lineNumber":54,"author":{"gitId":"WJunHong"},"content":"     * Replaces the client {@code target} in the list with {@code editedclient}.","lastModifiedDate":"2022-03-16"},{"lineNumber":55,"author":{"gitId":"WJunHong"},"content":"     * {@code target} must exist in the list.","lastModifiedDate":"2022-03-16"},{"lineNumber":56,"author":{"gitId":"WJunHong"},"content":"     * The client identity of {@code editedclient} must not be the same as another existing client in the list.","lastModifiedDate":"2022-03-16"},{"lineNumber":57,"author":{"gitId":"WJunHong"},"content":"     */","lastModifiedDate":"2022-03-16"},{"lineNumber":58,"author":{"gitId":"WJunHong"},"content":"    public void setBuyer(Buyer target, Buyer editedClient) {","lastModifiedDate":"2022-03-16"},{"lineNumber":59,"author":{"gitId":"WJunHong"},"content":"        requireAllNonNull(target, editedClient);","lastModifiedDate":"2022-03-16"},{"lineNumber":60,"author":{"gitId":"WJunHong"},"content":"","lastModifiedDate":"2022-03-16"},{"lineNumber":61,"author":{"gitId":"WJunHong"},"content":"        int index \u003d internalList.indexOf(target);","lastModifiedDate":"2022-03-16"},{"lineNumber":62,"author":{"gitId":"WJunHong"},"content":"        if (index \u003d\u003d -1) {","lastModifiedDate":"2022-03-16"},{"lineNumber":63,"author":{"gitId":"WJunHong"},"content":"            throw new ClientNotFoundException();","lastModifiedDate":"2022-03-16"},{"lineNumber":64,"author":{"gitId":"WJunHong"},"content":"        }","lastModifiedDate":"2022-03-16"},{"lineNumber":65,"author":{"gitId":"WJunHong"},"content":"","lastModifiedDate":"2022-03-16"},{"lineNumber":66,"author":{"gitId":"WJunHong"},"content":"        if (!target.isSameclient(editedClient) \u0026\u0026 contains(editedClient)) {","lastModifiedDate":"2022-03-16"},{"lineNumber":67,"author":{"gitId":"WJunHong"},"content":"            throw new DuplicateClientException();","lastModifiedDate":"2022-03-16"},{"lineNumber":68,"author":{"gitId":"WJunHong"},"content":"        }","lastModifiedDate":"2022-03-16"},{"lineNumber":69,"author":{"gitId":"WJunHong"},"content":"","lastModifiedDate":"2022-03-16"},{"lineNumber":70,"author":{"gitId":"WJunHong"},"content":"        internalList.set(index, editedClient);","lastModifiedDate":"2022-03-16"},{"lineNumber":71,"author":{"gitId":"WJunHong"},"content":"    }","lastModifiedDate":"2022-03-16"},{"lineNumber":72,"author":{"gitId":"WJunHong"},"content":"","lastModifiedDate":"2022-03-16"},{"lineNumber":73,"author":{"gitId":"WJunHong"},"content":"    /**","lastModifiedDate":"2022-03-16"},{"lineNumber":74,"author":{"gitId":"WJunHong"},"content":"     * Removes the equivalent client from the list.","lastModifiedDate":"2022-03-16"},{"lineNumber":75,"author":{"gitId":"WJunHong"},"content":"     * The client must exist in the list.","lastModifiedDate":"2022-03-16"},{"lineNumber":76,"author":{"gitId":"WJunHong"},"content":"     */","lastModifiedDate":"2022-03-16"},{"lineNumber":77,"author":{"gitId":"WJunHong"},"content":"    public void remove(Buyer toRemove) {","lastModifiedDate":"2022-03-16"},{"lineNumber":78,"author":{"gitId":"WJunHong"},"content":"        requireNonNull(toRemove);","lastModifiedDate":"2022-03-16"},{"lineNumber":79,"author":{"gitId":"WJunHong"},"content":"        if (!internalList.remove(toRemove)) {","lastModifiedDate":"2022-03-16"},{"lineNumber":80,"author":{"gitId":"WJunHong"},"content":"            throw new ClientNotFoundException();","lastModifiedDate":"2022-03-16"},{"lineNumber":81,"author":{"gitId":"WJunHong"},"content":"        }","lastModifiedDate":"2022-03-16"},{"lineNumber":82,"author":{"gitId":"WJunHong"},"content":"    }","lastModifiedDate":"2022-03-16"},{"lineNumber":83,"author":{"gitId":"WJunHong"},"content":"","lastModifiedDate":"2022-03-16"},{"lineNumber":84,"author":{"gitId":"WJunHong"},"content":"    public void setBuyers(UniqueBuyerList replacement) {","lastModifiedDate":"2022-03-16"},{"lineNumber":85,"author":{"gitId":"WJunHong"},"content":"        requireNonNull(replacement);","lastModifiedDate":"2022-03-16"},{"lineNumber":86,"author":{"gitId":"WJunHong"},"content":"        internalList.setAll(replacement.internalList);","lastModifiedDate":"2022-03-16"},{"lineNumber":87,"author":{"gitId":"WJunHong"},"content":"    }","lastModifiedDate":"2022-03-16"},{"lineNumber":88,"author":{"gitId":"WJunHong"},"content":"","lastModifiedDate":"2022-03-16"},{"lineNumber":89,"author":{"gitId":"WJunHong"},"content":"    /**","lastModifiedDate":"2022-03-16"},{"lineNumber":90,"author":{"gitId":"WJunHong"},"content":"     * Replaces the contents of this list with {@code clients}.","lastModifiedDate":"2022-03-16"},{"lineNumber":91,"author":{"gitId":"WJunHong"},"content":"     * {@code clients} must not contain duplicate clients.","lastModifiedDate":"2022-03-16"},{"lineNumber":92,"author":{"gitId":"WJunHong"},"content":"     */","lastModifiedDate":"2022-03-16"},{"lineNumber":93,"author":{"gitId":"WJunHong"},"content":"    public void setBuyers(List\u003cBuyer\u003e buyers) {","lastModifiedDate":"2022-03-16"},{"lineNumber":94,"author":{"gitId":"WJunHong"},"content":"        requireAllNonNull(buyers);","lastModifiedDate":"2022-03-16"},{"lineNumber":95,"author":{"gitId":"WJunHong"},"content":"        if (!clientsAreUnique(buyers)) {","lastModifiedDate":"2022-03-16"},{"lineNumber":96,"author":{"gitId":"WJunHong"},"content":"            throw new DuplicateClientException();","lastModifiedDate":"2022-03-16"},{"lineNumber":97,"author":{"gitId":"WJunHong"},"content":"        }","lastModifiedDate":"2022-03-16"},{"lineNumber":98,"author":{"gitId":"WJunHong"},"content":"","lastModifiedDate":"2022-03-16"},{"lineNumber":99,"author":{"gitId":"WJunHong"},"content":"        internalList.setAll(buyers);","lastModifiedDate":"2022-03-16"},{"lineNumber":100,"author":{"gitId":"WJunHong"},"content":"    }","lastModifiedDate":"2022-03-16"},{"lineNumber":101,"author":{"gitId":"WJunHong"},"content":"","lastModifiedDate":"2022-03-16"},{"lineNumber":102,"author":{"gitId":"Jacky142857"},"content":"    /**","lastModifiedDate":"2022-03-31"},{"lineNumber":103,"author":{"gitId":"Jacky142857"},"content":"     * Sorts the buyer according to {@code comparator} and in {@code order} order.","lastModifiedDate":"2022-03-31"},{"lineNumber":104,"author":{"gitId":"Jacky142857"},"content":"     */","lastModifiedDate":"2022-03-31"},{"lineNumber":105,"author":{"gitId":"Jacky142857"},"content":"    public void sortBuyers(String comparator, String order) {","lastModifiedDate":"2022-03-31"},{"lineNumber":106,"author":{"gitId":"Jacky142857"},"content":"        if (comparator.equals(\"name\")) {","lastModifiedDate":"2022-03-31"},{"lineNumber":107,"author":{"gitId":"Jacky142857"},"content":"            if (order.equals(\"asc\")) {","lastModifiedDate":"2022-03-31"},{"lineNumber":108,"author":{"gitId":"Jacky142857"},"content":"                internalList.sort(ComparatorUtil.NAME_COMPARATOR_ASC);","lastModifiedDate":"2022-03-31"},{"lineNumber":109,"author":{"gitId":"Jacky142857"},"content":"            } else {","lastModifiedDate":"2022-03-31"},{"lineNumber":110,"author":{"gitId":"Jacky142857"},"content":"                internalList.sort(ComparatorUtil.NAME_COMPARATOR_DESC);","lastModifiedDate":"2022-03-31"},{"lineNumber":111,"author":{"gitId":"Jacky142857"},"content":"            }","lastModifiedDate":"2022-03-31"},{"lineNumber":112,"author":{"gitId":"Jacky142857"},"content":"        } else {","lastModifiedDate":"2022-03-31"},{"lineNumber":113,"author":{"gitId":"Jacky142857"},"content":"            if (order.equals(\"asc\")) {","lastModifiedDate":"2022-03-31"},{"lineNumber":114,"author":{"gitId":"Jacky142857"},"content":"                internalList.sort(ComparatorUtil.TIME_COMPARATOR_ASC);","lastModifiedDate":"2022-03-31"},{"lineNumber":115,"author":{"gitId":"Jacky142857"},"content":"            } else {","lastModifiedDate":"2022-03-31"},{"lineNumber":116,"author":{"gitId":"Jacky142857"},"content":"                internalList.sort(ComparatorUtil.TIME_COMAPRATOR_DESC);","lastModifiedDate":"2022-03-31"},{"lineNumber":117,"author":{"gitId":"Jacky142857"},"content":"            }","lastModifiedDate":"2022-03-31"},{"lineNumber":118,"author":{"gitId":"Jacky142857"},"content":"        }","lastModifiedDate":"2022-03-31"},{"lineNumber":119,"author":{"gitId":"WJunHong"},"content":"    }","lastModifiedDate":"2022-03-16"},{"lineNumber":120,"author":{"gitId":"WJunHong"},"content":"","lastModifiedDate":"2022-03-16"},{"lineNumber":121,"author":{"gitId":"WJunHong"},"content":"    /**","lastModifiedDate":"2022-03-16"},{"lineNumber":122,"author":{"gitId":"WJunHong"},"content":"     * Returns the backing list as an unmodifiable {@code ObservableList}.","lastModifiedDate":"2022-03-16"},{"lineNumber":123,"author":{"gitId":"WJunHong"},"content":"     */","lastModifiedDate":"2022-03-16"},{"lineNumber":124,"author":{"gitId":"WJunHong"},"content":"    public ObservableList\u003cBuyer\u003e asUnmodifiableObservableList() {","lastModifiedDate":"2022-03-16"},{"lineNumber":125,"author":{"gitId":"WJunHong"},"content":"        return internalUnmodifiableList;","lastModifiedDate":"2022-03-16"},{"lineNumber":126,"author":{"gitId":"WJunHong"},"content":"    }","lastModifiedDate":"2022-03-16"},{"lineNumber":127,"author":{"gitId":"WJunHong"},"content":"","lastModifiedDate":"2022-03-16"},{"lineNumber":128,"author":{"gitId":"WJunHong"},"content":"    @Override","lastModifiedDate":"2022-03-16"},{"lineNumber":129,"author":{"gitId":"WJunHong"},"content":"    public Iterator\u003cBuyer\u003e iterator() {","lastModifiedDate":"2022-03-16"},{"lineNumber":130,"author":{"gitId":"WJunHong"},"content":"        return internalList.iterator();","lastModifiedDate":"2022-03-16"},{"lineNumber":131,"author":{"gitId":"WJunHong"},"content":"    }","lastModifiedDate":"2022-03-16"},{"lineNumber":132,"author":{"gitId":"WJunHong"},"content":"","lastModifiedDate":"2022-03-16"},{"lineNumber":133,"author":{"gitId":"WJunHong"},"content":"    @Override","lastModifiedDate":"2022-03-16"},{"lineNumber":134,"author":{"gitId":"WJunHong"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2022-03-16"},{"lineNumber":135,"author":{"gitId":"WJunHong"},"content":"        return other \u003d\u003d this // short circuit if same object","lastModifiedDate":"2022-03-16"},{"lineNumber":136,"author":{"gitId":"WJunHong"},"content":"                || (other instanceof UniqueBuyerList // instanceof handles nulls","lastModifiedDate":"2022-04-07"},{"lineNumber":137,"author":{"gitId":"WJunHong"},"content":"                \u0026\u0026 internalList.equals(((UniqueBuyerList) other).internalList));","lastModifiedDate":"2022-03-16"},{"lineNumber":138,"author":{"gitId":"WJunHong"},"content":"    }","lastModifiedDate":"2022-03-16"},{"lineNumber":139,"author":{"gitId":"WJunHong"},"content":"","lastModifiedDate":"2022-03-16"},{"lineNumber":140,"author":{"gitId":"WJunHong"},"content":"    @Override","lastModifiedDate":"2022-03-16"},{"lineNumber":141,"author":{"gitId":"WJunHong"},"content":"    public int hashCode() {","lastModifiedDate":"2022-03-16"},{"lineNumber":142,"author":{"gitId":"WJunHong"},"content":"        return internalList.hashCode();","lastModifiedDate":"2022-03-16"},{"lineNumber":143,"author":{"gitId":"WJunHong"},"content":"    }","lastModifiedDate":"2022-03-16"},{"lineNumber":144,"author":{"gitId":"WJunHong"},"content":"","lastModifiedDate":"2022-03-16"},{"lineNumber":145,"author":{"gitId":"WJunHong"},"content":"    /**","lastModifiedDate":"2022-03-16"},{"lineNumber":146,"author":{"gitId":"WJunHong"},"content":"     * Returns true if {@code clients} contains only unique clients.","lastModifiedDate":"2022-03-16"},{"lineNumber":147,"author":{"gitId":"WJunHong"},"content":"     */","lastModifiedDate":"2022-03-16"},{"lineNumber":148,"author":{"gitId":"WJunHong"},"content":"    private boolean clientsAreUnique(List\u003cBuyer\u003e buyers) {","lastModifiedDate":"2022-03-16"},{"lineNumber":149,"author":{"gitId":"WJunHong"},"content":"        for (int i \u003d 0; i \u003c buyers.size() - 1; i++) {","lastModifiedDate":"2022-03-16"},{"lineNumber":150,"author":{"gitId":"WJunHong"},"content":"            for (int j \u003d i + 1; j \u003c buyers.size(); j++) {","lastModifiedDate":"2022-03-16"},{"lineNumber":151,"author":{"gitId":"WJunHong"},"content":"                if (buyers.get(i).isSameclient(buyers.get(j))) {","lastModifiedDate":"2022-03-16"},{"lineNumber":152,"author":{"gitId":"WJunHong"},"content":"                    return false;","lastModifiedDate":"2022-03-16"},{"lineNumber":153,"author":{"gitId":"WJunHong"},"content":"                }","lastModifiedDate":"2022-03-16"},{"lineNumber":154,"author":{"gitId":"WJunHong"},"content":"            }","lastModifiedDate":"2022-03-16"},{"lineNumber":155,"author":{"gitId":"WJunHong"},"content":"        }","lastModifiedDate":"2022-03-16"},{"lineNumber":156,"author":{"gitId":"WJunHong"},"content":"        return true;","lastModifiedDate":"2022-03-16"},{"lineNumber":157,"author":{"gitId":"WJunHong"},"content":"    }","lastModifiedDate":"2022-03-16"},{"lineNumber":158,"author":{"gitId":"WJunHong"},"content":"}","lastModifiedDate":"2022-03-16"}],"authorContributionMap":{"WJunHong":140,"Jacky142857":18}},{"path":"src/main/java/seedu/address/model/client/Appointment.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"Jacky142857"},"content":"package seedu.address.model.client;","lastModifiedDate":"2022-03-11"},{"lineNumber":2,"author":{"gitId":"Jacky142857"},"content":"","lastModifiedDate":"2022-03-11"},{"lineNumber":3,"author":{"gitId":"Jacky142857"},"content":"","lastModifiedDate":"2022-03-11"},{"lineNumber":4,"author":{"gitId":"Jacky142857"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2022-03-11"},{"lineNumber":5,"author":{"gitId":"Jacky142857"},"content":"import static seedu.address.commons.util.AppUtil.checkArgument;","lastModifiedDate":"2022-03-11"},{"lineNumber":6,"author":{"gitId":"Jacky142857"},"content":"","lastModifiedDate":"2022-03-11"},{"lineNumber":7,"author":{"gitId":"Jacky142857"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2022-03-11"},{"lineNumber":8,"author":{"gitId":"Jacky142857"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2022-03-11"},{"lineNumber":9,"author":{"gitId":"Jacky142857"},"content":"import java.time.format.DateTimeParseException;","lastModifiedDate":"2022-03-11"},{"lineNumber":10,"author":{"gitId":"Jacky142857"},"content":"import java.util.Locale;","lastModifiedDate":"2022-03-11"},{"lineNumber":11,"author":{"gitId":"Jacky142857"},"content":"","lastModifiedDate":"2022-03-11"},{"lineNumber":12,"author":{"gitId":"Jacky142857"},"content":"public class Appointment {","lastModifiedDate":"2022-03-11"},{"lineNumber":13,"author":{"gitId":"Jacky142857"},"content":"    public static final String MESSAGE_CONSTRAINTS \u003d","lastModifiedDate":"2022-03-11"},{"lineNumber":14,"author":{"gitId":"Jacky142857"},"content":"            \"Appointment should be in the form of\"","lastModifiedDate":"2022-03-11"},{"lineNumber":15,"author":{"gitId":"Jacky142857"},"content":"                    + \" \u0027yyyy-MM-dd-HH-hh\u0027.\\nIt can\u0027t be empty when using appointment command\";","lastModifiedDate":"2022-03-18"},{"lineNumber":16,"author":{"gitId":"Jacky142857"},"content":"","lastModifiedDate":"2022-03-11"},{"lineNumber":17,"author":{"gitId":"Jacky142857"},"content":"    public static final String EMPTY_APPOINTMENT \u003d \"\";","lastModifiedDate":"2022-03-11"},{"lineNumber":18,"author":{"gitId":"Jacky142857"},"content":"    public static final DateTimeFormatter FORMATTER \u003d DateTimeFormatter.ofPattern(\"yyyy-MM-dd-HH-mm\");","lastModifiedDate":"2022-03-11"},{"lineNumber":19,"author":{"gitId":"Jacky142857"},"content":"    public final String value;","lastModifiedDate":"2022-03-11"},{"lineNumber":20,"author":{"gitId":"Jacky142857"},"content":"    public final LocalDateTime appointmentTime;","lastModifiedDate":"2022-03-11"},{"lineNumber":21,"author":{"gitId":"Jacky142857"},"content":"","lastModifiedDate":"2022-03-11"},{"lineNumber":22,"author":{"gitId":"Jacky142857"},"content":"","lastModifiedDate":"2022-03-11"},{"lineNumber":23,"author":{"gitId":"Jacky142857"},"content":"    /**","lastModifiedDate":"2022-03-11"},{"lineNumber":24,"author":{"gitId":"Jacky142857"},"content":"     * Takes in a string of time of appointment, check for whether it is valid","lastModifiedDate":"2022-03-11"},{"lineNumber":25,"author":{"gitId":"Jacky142857"},"content":"     * and initializes the value variable.","lastModifiedDate":"2022-03-11"},{"lineNumber":26,"author":{"gitId":"Jacky142857"},"content":"     * @param time string of time of appointment","lastModifiedDate":"2022-03-11"},{"lineNumber":27,"author":{"gitId":"Jacky142857"},"content":"     */","lastModifiedDate":"2022-03-11"},{"lineNumber":28,"author":{"gitId":"Jacky142857"},"content":"    public Appointment(String time) {","lastModifiedDate":"2022-03-11"},{"lineNumber":29,"author":{"gitId":"Jacky142857"},"content":"        requireNonNull(time);","lastModifiedDate":"2022-03-11"},{"lineNumber":30,"author":{"gitId":"Jacky142857"},"content":"        checkArgument(isValidAppointment(time), MESSAGE_CONSTRAINTS);","lastModifiedDate":"2022-03-11"},{"lineNumber":31,"author":{"gitId":"WJunHong"},"content":"        if (time.equals(\"\")) {","lastModifiedDate":"2022-03-29"},{"lineNumber":32,"author":{"gitId":"Jacky142857"},"content":"            appointmentTime \u003d null;","lastModifiedDate":"2022-03-11"},{"lineNumber":33,"author":{"gitId":"Jacky142857"},"content":"        } else {","lastModifiedDate":"2022-03-11"},{"lineNumber":34,"author":{"gitId":"Jacky142857"},"content":"            appointmentTime \u003d LocalDateTime.parse(time, FORMATTER);","lastModifiedDate":"2022-03-11"},{"lineNumber":35,"author":{"gitId":"Jacky142857"},"content":"        }","lastModifiedDate":"2022-03-11"},{"lineNumber":36,"author":{"gitId":"Jacky142857"},"content":"        value \u003d time;","lastModifiedDate":"2022-03-11"},{"lineNumber":37,"author":{"gitId":"Jacky142857"},"content":"    }","lastModifiedDate":"2022-03-11"},{"lineNumber":38,"author":{"gitId":"Jacky142857"},"content":"","lastModifiedDate":"2022-03-11"},{"lineNumber":39,"author":{"gitId":"Jacky142857"},"content":"    /**","lastModifiedDate":"2022-03-11"},{"lineNumber":40,"author":{"gitId":"Jacky142857"},"content":"     * Checks whether the input String is of the correct format.","lastModifiedDate":"2022-03-11"},{"lineNumber":41,"author":{"gitId":"Jacky142857"},"content":"     */","lastModifiedDate":"2022-03-11"},{"lineNumber":42,"author":{"gitId":"Jacky142857"},"content":"    public static boolean isValidAppointment(String time) {","lastModifiedDate":"2022-03-11"},{"lineNumber":43,"author":{"gitId":"WJunHong"},"content":"        if (time.equals(EMPTY_APPOINTMENT)) {","lastModifiedDate":"2022-03-29"},{"lineNumber":44,"author":{"gitId":"Jacky142857"},"content":"            return true;","lastModifiedDate":"2022-03-11"},{"lineNumber":45,"author":{"gitId":"Jacky142857"},"content":"        }","lastModifiedDate":"2022-03-11"},{"lineNumber":46,"author":{"gitId":"Jacky142857"},"content":"        try {","lastModifiedDate":"2022-03-11"},{"lineNumber":47,"author":{"gitId":"Jacky142857"},"content":"            LocalDateTime parsedTime \u003d LocalDateTime.parse(time, FORMATTER);","lastModifiedDate":"2022-03-11"},{"lineNumber":48,"author":{"gitId":"Jacky142857"},"content":"        } catch (DateTimeParseException e) {","lastModifiedDate":"2022-03-11"},{"lineNumber":49,"author":{"gitId":"Jacky142857"},"content":"            return false;","lastModifiedDate":"2022-03-11"},{"lineNumber":50,"author":{"gitId":"Jacky142857"},"content":"        }","lastModifiedDate":"2022-03-11"},{"lineNumber":51,"author":{"gitId":"Jacky142857"},"content":"","lastModifiedDate":"2022-04-07"},{"lineNumber":52,"author":{"gitId":"Jacky142857"},"content":"        //Handles February, they are guaranteed to be parsed as int as they passed the above parse test","lastModifiedDate":"2022-04-07"},{"lineNumber":53,"author":{"gitId":"Jacky142857"},"content":"        String[] timeArr \u003d time.split(\"-\");","lastModifiedDate":"2022-04-07"},{"lineNumber":54,"author":{"gitId":"Jacky142857"},"content":"        int year \u003d Integer.parseInt(timeArr[0]);","lastModifiedDate":"2022-04-07"},{"lineNumber":55,"author":{"gitId":"Jacky142857"},"content":"        int month \u003d Integer.parseInt(timeArr[1]);","lastModifiedDate":"2022-04-07"},{"lineNumber":56,"author":{"gitId":"Jacky142857"},"content":"        int day \u003d Integer.parseInt(timeArr[2]);","lastModifiedDate":"2022-04-07"},{"lineNumber":57,"author":{"gitId":"Jacky142857"},"content":"        return isValidDate(year, month, day);","lastModifiedDate":"2022-04-07"},{"lineNumber":58,"author":{"gitId":"Jacky142857"},"content":"    }","lastModifiedDate":"2022-04-07"},{"lineNumber":59,"author":{"gitId":"Jacky142857"},"content":"","lastModifiedDate":"2022-04-07"},{"lineNumber":60,"author":{"gitId":"Jacky142857"},"content":"    /**","lastModifiedDate":"2022-04-07"},{"lineNumber":61,"author":{"gitId":"Jacky142857"},"content":"     * Checks whether the input year is a leap year","lastModifiedDate":"2022-04-07"},{"lineNumber":62,"author":{"gitId":"Jacky142857"},"content":"     */","lastModifiedDate":"2022-04-07"},{"lineNumber":63,"author":{"gitId":"Jacky142857"},"content":"    private static boolean isLeapYear(int year) {","lastModifiedDate":"2022-04-07"},{"lineNumber":64,"author":{"gitId":"Jacky142857"},"content":"        if (((year % 4 \u003d\u003d 0) \u0026\u0026 (year % 100 !\u003d 0)) || (year % 400 \u003d\u003d 0)) {","lastModifiedDate":"2022-04-07"},{"lineNumber":65,"author":{"gitId":"Jacky142857"},"content":"            return true;","lastModifiedDate":"2022-03-11"},{"lineNumber":66,"author":{"gitId":"Jacky142857"},"content":"        } else {","lastModifiedDate":"2022-04-07"},{"lineNumber":67,"author":{"gitId":"Jacky142857"},"content":"            return false;","lastModifiedDate":"2022-04-07"},{"lineNumber":68,"author":{"gitId":"Jacky142857"},"content":"        }","lastModifiedDate":"2022-04-07"},{"lineNumber":69,"author":{"gitId":"Jacky142857"},"content":"    }","lastModifiedDate":"2022-04-07"},{"lineNumber":70,"author":{"gitId":"Jacky142857"},"content":"","lastModifiedDate":"2022-04-07"},{"lineNumber":71,"author":{"gitId":"Jacky142857"},"content":"    /**","lastModifiedDate":"2022-04-07"},{"lineNumber":72,"author":{"gitId":"Jacky142857"},"content":"     * Checks whether the input date is a valid date","lastModifiedDate":"2022-04-07"},{"lineNumber":73,"author":{"gitId":"Jacky142857"},"content":"     */","lastModifiedDate":"2022-04-07"},{"lineNumber":74,"author":{"gitId":"Jacky142857"},"content":"","lastModifiedDate":"2022-04-07"},{"lineNumber":75,"author":{"gitId":"Jacky142857"},"content":"    private static boolean isValidDate(int year, int month, int day) {","lastModifiedDate":"2022-04-07"},{"lineNumber":76,"author":{"gitId":"Jacky142857"},"content":"        if (month \u003d\u003d 2 \u0026\u0026 isLeapYear(year)) {","lastModifiedDate":"2022-04-07"},{"lineNumber":77,"author":{"gitId":"Jacky142857"},"content":"            return 1 \u003c\u003d day \u0026\u0026 day \u003c\u003d 29;","lastModifiedDate":"2022-04-07"},{"lineNumber":78,"author":{"gitId":"Jacky142857"},"content":"        } else if (month \u003d\u003d 2 \u0026\u0026 !isLeapYear(year)) {","lastModifiedDate":"2022-04-07"},{"lineNumber":79,"author":{"gitId":"Jacky142857"},"content":"            return 1 \u003c\u003d day \u0026\u0026 day \u003c\u003d 28;","lastModifiedDate":"2022-04-07"},{"lineNumber":80,"author":{"gitId":"Jacky142857"},"content":"        } else if ((month \u003d\u003d 1) || (month \u003d\u003d 3) || (month \u003d\u003d 5) || (month \u003d\u003d 7)","lastModifiedDate":"2022-04-07"},{"lineNumber":81,"author":{"gitId":"Jacky142857"},"content":"            || (month \u003d\u003d 8) || (month \u003d\u003d 10) || (month \u003d\u003d 12)) {","lastModifiedDate":"2022-04-07"},{"lineNumber":82,"author":{"gitId":"Jacky142857"},"content":"            return 1 \u003c\u003d day \u0026\u0026 day \u003c\u003d 31;","lastModifiedDate":"2022-04-07"},{"lineNumber":83,"author":{"gitId":"Jacky142857"},"content":"        } else {","lastModifiedDate":"2022-04-07"},{"lineNumber":84,"author":{"gitId":"Jacky142857"},"content":"            return 1 \u003c\u003d day \u0026\u0026 day \u003c\u003d 30;","lastModifiedDate":"2022-04-07"},{"lineNumber":85,"author":{"gitId":"Jacky142857"},"content":"        }","lastModifiedDate":"2022-04-07"},{"lineNumber":86,"author":{"gitId":"Jacky142857"},"content":"    }","lastModifiedDate":"2022-03-11"},{"lineNumber":87,"author":{"gitId":"Jacky142857"},"content":"","lastModifiedDate":"2022-03-11"},{"lineNumber":88,"author":{"gitId":"Jacky142857"},"content":"    /**","lastModifiedDate":"2022-03-11"},{"lineNumber":89,"author":{"gitId":"Jacky142857"},"content":"     * Returns an easy-to-read String of the appointment time","lastModifiedDate":"2022-03-11"},{"lineNumber":90,"author":{"gitId":"Jacky142857"},"content":"     */","lastModifiedDate":"2022-03-11"},{"lineNumber":91,"author":{"gitId":"Jacky142857"},"content":"    public String getAppointmentDetail() {","lastModifiedDate":"2022-03-19"},{"lineNumber":92,"author":{"gitId":"Jacky142857"},"content":"        if (appointmentTime \u003d\u003d null) {","lastModifiedDate":"2022-03-11"},{"lineNumber":93,"author":{"gitId":"Jacky142857"},"content":"            return \"No appointment with the person\";","lastModifiedDate":"2022-03-19"},{"lineNumber":94,"author":{"gitId":"Jacky142857"},"content":"        } else {","lastModifiedDate":"2022-03-11"},{"lineNumber":95,"author":{"gitId":"Jacky142857"},"content":"            String pattern \u003d \"hh:mm a\";","lastModifiedDate":"2022-03-11"},{"lineNumber":96,"author":{"gitId":"Jacky142857"},"content":"            DateTimeFormatter timeFormatter \u003d DateTimeFormatter.ofPattern(pattern);","lastModifiedDate":"2022-03-11"},{"lineNumber":97,"author":{"gitId":"Jacky142857"},"content":"","lastModifiedDate":"2022-03-11"},{"lineNumber":98,"author":{"gitId":"Jacky142857"},"content":"            return \"Appointment on \" + appointmentTime.format(timeFormatter.withLocale(Locale.ENGLISH)) + \" \"","lastModifiedDate":"2022-03-11"},{"lineNumber":99,"author":{"gitId":"Jacky142857"},"content":"                    + appointmentTime.getMonth() + \" \" + appointmentTime.getDayOfMonth() + \" \"","lastModifiedDate":"2022-03-11"},{"lineNumber":100,"author":{"gitId":"Jacky142857"},"content":"                    + appointmentTime.getYear();","lastModifiedDate":"2022-03-11"},{"lineNumber":101,"author":{"gitId":"Jacky142857"},"content":"        }","lastModifiedDate":"2022-03-11"},{"lineNumber":102,"author":{"gitId":"Jacky142857"},"content":"    }","lastModifiedDate":"2022-03-11"},{"lineNumber":103,"author":{"gitId":"Jacky142857"},"content":"","lastModifiedDate":"2022-03-11"},{"lineNumber":104,"author":{"gitId":"Jacky142857"},"content":"    /**","lastModifiedDate":"2022-03-11"},{"lineNumber":105,"author":{"gitId":"Jacky142857"},"content":"     * Returns the appointmentTime object, of the type LocalDateTime, it could be possibly be null.","lastModifiedDate":"2022-03-11"},{"lineNumber":106,"author":{"gitId":"Jacky142857"},"content":"     * @return","lastModifiedDate":"2022-03-11"},{"lineNumber":107,"author":{"gitId":"Jacky142857"},"content":"     */","lastModifiedDate":"2022-03-11"},{"lineNumber":108,"author":{"gitId":"Jacky142857"},"content":"    public LocalDateTime getAppointmentTime() {","lastModifiedDate":"2022-03-11"},{"lineNumber":109,"author":{"gitId":"Jacky142857"},"content":"        return appointmentTime;","lastModifiedDate":"2022-03-11"},{"lineNumber":110,"author":{"gitId":"Jacky142857"},"content":"    }","lastModifiedDate":"2022-03-11"},{"lineNumber":111,"author":{"gitId":"Jacky142857"},"content":"","lastModifiedDate":"2022-03-11"},{"lineNumber":112,"author":{"gitId":"Jacky142857"},"content":"    public boolean isLaterThanCurrentTime() {","lastModifiedDate":"2022-03-27"},{"lineNumber":113,"author":{"gitId":"Jacky142857"},"content":"        return appointmentTime.isAfter(LocalDateTime.now());","lastModifiedDate":"2022-03-27"},{"lineNumber":114,"author":{"gitId":"Jacky142857"},"content":"    }","lastModifiedDate":"2022-03-27"},{"lineNumber":115,"author":{"gitId":"Jacky142857"},"content":"","lastModifiedDate":"2022-03-27"},{"lineNumber":116,"author":{"gitId":"Jacky142857"},"content":"    @Override","lastModifiedDate":"2022-03-11"},{"lineNumber":117,"author":{"gitId":"Jacky142857"},"content":"    public String toString() {","lastModifiedDate":"2022-03-11"},{"lineNumber":118,"author":{"gitId":"Jacky142857"},"content":"        return value;","lastModifiedDate":"2022-03-11"},{"lineNumber":119,"author":{"gitId":"Jacky142857"},"content":"    }","lastModifiedDate":"2022-03-11"},{"lineNumber":120,"author":{"gitId":"Jacky142857"},"content":"","lastModifiedDate":"2022-03-11"},{"lineNumber":121,"author":{"gitId":"Jacky142857"},"content":"    @Override","lastModifiedDate":"2022-03-11"},{"lineNumber":122,"author":{"gitId":"Jacky142857"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2022-03-11"},{"lineNumber":123,"author":{"gitId":"Jacky142857"},"content":"        return other \u003d\u003d this // short circuit if same object","lastModifiedDate":"2022-03-11"},{"lineNumber":124,"author":{"gitId":"Jacky142857"},"content":"                || (other instanceof Appointment // instanceof handles nulls","lastModifiedDate":"2022-03-11"},{"lineNumber":125,"author":{"gitId":"Jacky142857"},"content":"                \u0026\u0026 value.equals(((Appointment) other).value)); // state check","lastModifiedDate":"2022-03-11"},{"lineNumber":126,"author":{"gitId":"Jacky142857"},"content":"    }","lastModifiedDate":"2022-03-11"},{"lineNumber":127,"author":{"gitId":"Jacky142857"},"content":"","lastModifiedDate":"2022-03-11"},{"lineNumber":128,"author":{"gitId":"Jacky142857"},"content":"    @Override","lastModifiedDate":"2022-03-11"},{"lineNumber":129,"author":{"gitId":"Jacky142857"},"content":"    public int hashCode() {","lastModifiedDate":"2022-03-11"},{"lineNumber":130,"author":{"gitId":"Jacky142857"},"content":"        return value.hashCode();","lastModifiedDate":"2022-03-11"},{"lineNumber":131,"author":{"gitId":"Jacky142857"},"content":"    }","lastModifiedDate":"2022-03-11"},{"lineNumber":132,"author":{"gitId":"Jacky142857"},"content":"","lastModifiedDate":"2022-03-11"},{"lineNumber":133,"author":{"gitId":"Jacky142857"},"content":"}","lastModifiedDate":"2022-03-11"}],"authorContributionMap":{"WJunHong":2,"Jacky142857":131}},{"path":"src/main/java/seedu/address/model/client/Client.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"cwnm"},"content":"package seedu.address.model.client;","lastModifiedDate":"2022-03-04"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static seedu.address.commons.util.CollectionUtil.requireAllNonNull;","lastModifiedDate":"2017-05-19"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.util.Collections;","lastModifiedDate":"2017-03-07"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.util.HashSet;","lastModifiedDate":"2018-03-26"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import java.util.Objects;","lastModifiedDate":"2017-01-19"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import java.util.Set;","lastModifiedDate":"2017-03-07"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import seedu.address.model.tag.Tag;","lastModifiedDate":"2017-03-07"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":12,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-24"},{"lineNumber":13,"author":{"gitId":"WJunHong"},"content":" * Represents a client of the user.","lastModifiedDate":"2022-03-14"},{"lineNumber":14,"author":{"gitId":"-"},"content":" * Guarantees: details are present and not null, field values are validated, immutable.","lastModifiedDate":"2017-12-20"},{"lineNumber":15,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-24"},{"lineNumber":16,"author":{"gitId":"cwnm"},"content":"public class Client {","lastModifiedDate":"2022-03-04"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    // Identity fields","lastModifiedDate":"2018-04-19"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    private final Name name;","lastModifiedDate":"2017-12-20"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    private final Phone phone;","lastModifiedDate":"2017-12-20"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    // Data fields","lastModifiedDate":"2018-04-19"},{"lineNumber":23,"author":{"gitId":"Jacky142857"},"content":"    private final Appointment appointment;","lastModifiedDate":"2022-03-11"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    private final Set\u003cTag\u003e tags \u003d new HashSet\u003c\u003e();","lastModifiedDate":"2018-03-26"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-24"},{"lineNumber":27,"author":{"gitId":"-"},"content":"     * Every field must be present and not null.","lastModifiedDate":"2016-08-24"},{"lineNumber":28,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-24"},{"lineNumber":29,"author":{"gitId":"Jacky142857"},"content":"    public Client(Name name, Phone phone, Appointment appointment, Set\u003cTag\u003e tags) {","lastModifiedDate":"2022-03-19"},{"lineNumber":30,"author":{"gitId":"Jacky142857"},"content":"        requireAllNonNull(name, phone, tags); //////","lastModifiedDate":"2022-03-19"},{"lineNumber":31,"author":{"gitId":"-"},"content":"        this.name \u003d name;","lastModifiedDate":"2017-12-20"},{"lineNumber":32,"author":{"gitId":"-"},"content":"        this.phone \u003d phone;","lastModifiedDate":"2017-12-20"},{"lineNumber":33,"author":{"gitId":"-"},"content":"        this.tags.addAll(tags);","lastModifiedDate":"2018-03-26"},{"lineNumber":34,"author":{"gitId":"Jacky142857"},"content":"        this.appointment \u003d appointment;","lastModifiedDate":"2022-03-11"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":36,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    public Name getName() {","lastModifiedDate":"2017-07-12"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        return name;","lastModifiedDate":"2017-12-20"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":40,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    public Phone getPhone() {","lastModifiedDate":"2017-07-12"},{"lineNumber":42,"author":{"gitId":"-"},"content":"        return phone;","lastModifiedDate":"2017-12-20"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":44,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":45,"author":{"gitId":"Jacky142857"},"content":"    public Appointment getAppointment() {","lastModifiedDate":"2022-03-11"},{"lineNumber":46,"author":{"gitId":"Jacky142857"},"content":"        return appointment;","lastModifiedDate":"2022-03-11"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2022-03-11"},{"lineNumber":48,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-03-11"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-03-07"},{"lineNumber":50,"author":{"gitId":"-"},"content":"     * Returns an immutable tag set, which throws {@code UnsupportedOperationException}","lastModifiedDate":"2017-03-07"},{"lineNumber":51,"author":{"gitId":"-"},"content":"     * if modification is attempted.","lastModifiedDate":"2017-03-07"},{"lineNumber":52,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-03-07"},{"lineNumber":53,"author":{"gitId":"-"},"content":"    public Set\u003cTag\u003e getTags() {","lastModifiedDate":"2017-03-07"},{"lineNumber":54,"author":{"gitId":"-"},"content":"        return Collections.unmodifiableSet(tags);","lastModifiedDate":"2018-03-26"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-21"},{"lineNumber":56,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-04-19"},{"lineNumber":58,"author":{"gitId":"cwnm"},"content":"     * Returns true if both clients have the same name.","lastModifiedDate":"2022-03-04"},{"lineNumber":59,"author":{"gitId":"cwnm"},"content":"     * This defines a weaker notion of equality between two clients.","lastModifiedDate":"2022-03-04"},{"lineNumber":60,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-04-19"},{"lineNumber":61,"author":{"gitId":"cwnm"},"content":"    public boolean isSameclient(Client otherClient) {","lastModifiedDate":"2022-03-04"},{"lineNumber":62,"author":{"gitId":"cwnm"},"content":"        if (otherClient \u003d\u003d this) {","lastModifiedDate":"2022-03-04"},{"lineNumber":63,"author":{"gitId":"-"},"content":"            return true;","lastModifiedDate":"2018-04-19"},{"lineNumber":64,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-04-19"},{"lineNumber":65,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":66,"author":{"gitId":"cwnm"},"content":"        return otherClient !\u003d null","lastModifiedDate":"2022-03-04"},{"lineNumber":67,"author":{"gitId":"cwnm"},"content":"                \u0026\u0026 otherClient.getName().equals(getName());","lastModifiedDate":"2022-03-04"},{"lineNumber":68,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-04-19"},{"lineNumber":69,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":70,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-04-19"},{"lineNumber":71,"author":{"gitId":"cwnm"},"content":"     * Returns true if both clients have the same identity and data fields.","lastModifiedDate":"2022-03-04"},{"lineNumber":72,"author":{"gitId":"cwnm"},"content":"     * This defines a stronger notion of equality between two clients.","lastModifiedDate":"2022-03-04"},{"lineNumber":73,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-04-19"},{"lineNumber":74,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-24"},{"lineNumber":75,"author":{"gitId":"-"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2016-08-24"},{"lineNumber":76,"author":{"gitId":"-"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2018-01-10"},{"lineNumber":77,"author":{"gitId":"-"},"content":"            return true;","lastModifiedDate":"2018-01-10"},{"lineNumber":78,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-01-10"},{"lineNumber":79,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-01-10"},{"lineNumber":80,"author":{"gitId":"cwnm"},"content":"        if (!(other instanceof Client)) {","lastModifiedDate":"2022-03-04"},{"lineNumber":81,"author":{"gitId":"-"},"content":"            return false;","lastModifiedDate":"2018-01-10"},{"lineNumber":82,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-01-10"},{"lineNumber":83,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-01-10"},{"lineNumber":84,"author":{"gitId":"cwnm"},"content":"        Client otherClient \u003d (Client) other;","lastModifiedDate":"2022-03-04"},{"lineNumber":85,"author":{"gitId":"cwnm"},"content":"        return otherClient.getName().equals(getName())","lastModifiedDate":"2022-03-04"},{"lineNumber":86,"author":{"gitId":"cwnm"},"content":"                \u0026\u0026 otherClient.getPhone().equals(getPhone())","lastModifiedDate":"2022-03-04"},{"lineNumber":87,"author":{"gitId":"cwnm"},"content":"                \u0026\u0026 otherClient.getTags().equals(getTags());","lastModifiedDate":"2022-03-04"},{"lineNumber":88,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":89,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":90,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-24"},{"lineNumber":91,"author":{"gitId":"-"},"content":"    public int hashCode() {","lastModifiedDate":"2016-08-24"},{"lineNumber":92,"author":{"gitId":"-"},"content":"        // use this method for custom fields hashing instead of implementing your own","lastModifiedDate":"2016-08-24"},{"lineNumber":93,"author":{"gitId":"Jacky142857"},"content":"        return Objects.hash(name, phone, appointment, tags);","lastModifiedDate":"2022-03-19"},{"lineNumber":94,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":95,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":96,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-24"},{"lineNumber":97,"author":{"gitId":"-"},"content":"    public String toString() {","lastModifiedDate":"2016-08-24"},{"lineNumber":98,"author":{"gitId":"-"},"content":"        final StringBuilder builder \u003d new StringBuilder();","lastModifiedDate":"2018-01-10"},{"lineNumber":99,"author":{"gitId":"-"},"content":"        builder.append(getName())","lastModifiedDate":"2018-01-10"},{"lineNumber":100,"author":{"gitId":"-"},"content":"                .append(\"; Phone: \")","lastModifiedDate":"2020-12-11"},{"lineNumber":101,"author":{"gitId":"-"},"content":"                .append(getPhone())","lastModifiedDate":"2018-01-10"},{"lineNumber":102,"author":{"gitId":"Jacky142857"},"content":"                .append(\"; Appointment: \")","lastModifiedDate":"2022-03-11"},{"lineNumber":103,"author":{"gitId":"Jacky142857"},"content":"                .append(getAppointment());","lastModifiedDate":"2022-03-11"},{"lineNumber":104,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-12-11"},{"lineNumber":105,"author":{"gitId":"-"},"content":"        Set\u003cTag\u003e tags \u003d getTags();","lastModifiedDate":"2020-12-11"},{"lineNumber":106,"author":{"gitId":"-"},"content":"        if (!tags.isEmpty()) {","lastModifiedDate":"2020-12-11"},{"lineNumber":107,"author":{"gitId":"-"},"content":"            builder.append(\"; Tags: \");","lastModifiedDate":"2020-12-11"},{"lineNumber":108,"author":{"gitId":"-"},"content":"            tags.forEach(builder::append);","lastModifiedDate":"2020-12-11"},{"lineNumber":109,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2020-12-11"},{"lineNumber":110,"author":{"gitId":"-"},"content":"        return builder.toString();","lastModifiedDate":"2018-01-10"},{"lineNumber":111,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":112,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":113,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-24"}],"authorContributionMap":{"WJunHong":1,"Jacky142857":9,"cwnm":15,"-":88}},{"path":"src/main/java/seedu/address/model/client/Name.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"cwnm"},"content":"package seedu.address.model.client;","lastModifiedDate":"2022-03-04"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2017-05-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static seedu.address.commons.util.AppUtil.checkArgument;","lastModifiedDate":"2017-05-30"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":6,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-24"},{"lineNumber":7,"author":{"gitId":"cwnm"},"content":" * Represents a client\u0027s name in the address book.","lastModifiedDate":"2022-03-04"},{"lineNumber":8,"author":{"gitId":"-"},"content":" * Guarantees: immutable; is valid as declared in {@link #isValidName(String)}","lastModifiedDate":"2016-08-24"},{"lineNumber":9,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-24"},{"lineNumber":10,"author":{"gitId":"-"},"content":"public class Name {","lastModifiedDate":"2016-08-24"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_CONSTRAINTS \u003d","lastModifiedDate":"2018-09-22"},{"lineNumber":13,"author":{"gitId":"-"},"content":"            \"Names should only contain alphanumeric characters and spaces, and it should not be blank\";","lastModifiedDate":"2018-04-04"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-16"},{"lineNumber":15,"author":{"gitId":"-"},"content":"    /*","lastModifiedDate":"2017-01-16"},{"lineNumber":16,"author":{"gitId":"-"},"content":"     * The first character of the address must not be a whitespace,","lastModifiedDate":"2017-01-16"},{"lineNumber":17,"author":{"gitId":"-"},"content":"     * otherwise \" \" (a blank string) becomes a valid input.","lastModifiedDate":"2017-01-16"},{"lineNumber":18,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-01-16"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    public static final String VALIDATION_REGEX \u003d \"[\\\\p{Alnum}][\\\\p{Alnum} ]*\";","lastModifiedDate":"2018-09-22"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    public final String fullName;","lastModifiedDate":"2016-08-24"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-24"},{"lineNumber":24,"author":{"gitId":"-"},"content":"     * Constructs a {@code Name}.","lastModifiedDate":"2017-05-30"},{"lineNumber":25,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2016-08-24"},{"lineNumber":26,"author":{"gitId":"-"},"content":"     * @param name A valid name.","lastModifiedDate":"2017-05-30"},{"lineNumber":27,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-24"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    public Name(String name) {","lastModifiedDate":"2017-05-30"},{"lineNumber":29,"author":{"gitId":"-"},"content":"        requireNonNull(name);","lastModifiedDate":"2017-05-15"},{"lineNumber":30,"author":{"gitId":"-"},"content":"        checkArgument(isValidName(name), MESSAGE_CONSTRAINTS);","lastModifiedDate":"2018-09-22"},{"lineNumber":31,"author":{"gitId":"-"},"content":"        fullName \u003d name;","lastModifiedDate":"2018-08-14"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-24"},{"lineNumber":35,"author":{"gitId":"-"},"content":"     * Returns true if a given string is a valid name.","lastModifiedDate":"2018-04-05"},{"lineNumber":36,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-24"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    public static boolean isValidName(String test) {","lastModifiedDate":"2016-08-24"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        return test.matches(VALIDATION_REGEX);","lastModifiedDate":"2018-09-22"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":40,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-24"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    public String toString() {","lastModifiedDate":"2016-08-24"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        return fullName;","lastModifiedDate":"2016-08-24"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":46,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-24"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2016-08-24"},{"lineNumber":49,"author":{"gitId":"-"},"content":"        return other \u003d\u003d this // short circuit if same object","lastModifiedDate":"2016-08-24"},{"lineNumber":50,"author":{"gitId":"-"},"content":"                || (other instanceof Name // instanceof handles nulls","lastModifiedDate":"2016-08-24"},{"lineNumber":51,"author":{"gitId":"-"},"content":"                \u0026\u0026 fullName.equals(((Name) other).fullName)); // state check","lastModifiedDate":"2018-08-14"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":53,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":54,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-24"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    public int hashCode() {","lastModifiedDate":"2016-08-24"},{"lineNumber":56,"author":{"gitId":"-"},"content":"        return fullName.hashCode();","lastModifiedDate":"2016-08-24"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":58,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":59,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-24"}],"authorContributionMap":{"cwnm":2,"-":57}},{"path":"src/main/java/seedu/address/model/client/NameContainsKeywordsPredicate.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"cwnm"},"content":"package seedu.address.model.client;","lastModifiedDate":"2022-03-04"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.util.List;","lastModifiedDate":"2017-06-12"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import java.util.function.Predicate;","lastModifiedDate":"2017-06-12"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import seedu.address.commons.util.StringUtil;","lastModifiedDate":"2017-06-12"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":8,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-06-12"},{"lineNumber":9,"author":{"gitId":"cwnm"},"content":" * Tests that a {@code Client}\u0027s {@code Name} matches any of the keywords given.","lastModifiedDate":"2022-03-28"},{"lineNumber":10,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-06-12"},{"lineNumber":11,"author":{"gitId":"cwnm"},"content":"public class NameContainsKeywordsPredicate implements Predicate\u003cClient\u003e {","lastModifiedDate":"2022-03-04"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    private final List\u003cString\u003e keywords;","lastModifiedDate":"2017-06-12"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":14,"author":{"gitId":"-"},"content":"    public NameContainsKeywordsPredicate(List\u003cString\u003e keywords) {","lastModifiedDate":"2017-06-12"},{"lineNumber":15,"author":{"gitId":"-"},"content":"        this.keywords \u003d keywords;","lastModifiedDate":"2017-06-12"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-12"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2017-06-12"},{"lineNumber":19,"author":{"gitId":"cwnm"},"content":"    public boolean test(Client client) {","lastModifiedDate":"2022-03-04"},{"lineNumber":20,"author":{"gitId":"-"},"content":"        return keywords.stream()","lastModifiedDate":"2017-06-12"},{"lineNumber":21,"author":{"gitId":"cwnm"},"content":"                .anyMatch(keyword -\u003e StringUtil.containsWordIgnoreCase(client.getName().fullName, keyword));","lastModifiedDate":"2022-03-04"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-12"},{"lineNumber":23,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2017-06-12"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2017-06-12"},{"lineNumber":26,"author":{"gitId":"-"},"content":"        return other \u003d\u003d this // short circuit if same object","lastModifiedDate":"2017-06-12"},{"lineNumber":27,"author":{"gitId":"-"},"content":"                || (other instanceof NameContainsKeywordsPredicate // instanceof handles nulls","lastModifiedDate":"2017-06-12"},{"lineNumber":28,"author":{"gitId":"-"},"content":"                \u0026\u0026 keywords.equals(((NameContainsKeywordsPredicate) other).keywords)); // state check","lastModifiedDate":"2018-08-14"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-12"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":31,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-06-12"}],"authorContributionMap":{"cwnm":5,"-":26}},{"path":"src/main/java/seedu/address/model/client/Phone.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"cwnm"},"content":"package seedu.address.model.client;","lastModifiedDate":"2022-03-04"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2017-05-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static seedu.address.commons.util.AppUtil.checkArgument;","lastModifiedDate":"2017-05-30"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":6,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-24"},{"lineNumber":7,"author":{"gitId":"cwnm"},"content":" * Represents a client\u0027s phone number in the address book.","lastModifiedDate":"2022-03-04"},{"lineNumber":8,"author":{"gitId":"-"},"content":" * Guarantees: immutable; is valid as declared in {@link #isValidPhone(String)}","lastModifiedDate":"2016-08-24"},{"lineNumber":9,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-24"},{"lineNumber":10,"author":{"gitId":"-"},"content":"public class Phone {","lastModifiedDate":"2016-09-21"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_CONSTRAINTS \u003d","lastModifiedDate":"2018-09-22"},{"lineNumber":14,"author":{"gitId":"-"},"content":"            \"Phone numbers should only contain numbers, and it should be at least 3 digits long\";","lastModifiedDate":"2018-04-04"},{"lineNumber":15,"author":{"gitId":"-"},"content":"    public static final String VALIDATION_REGEX \u003d \"\\\\d{3,}\";","lastModifiedDate":"2018-09-22"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    public final String value;","lastModifiedDate":"2016-08-24"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-24"},{"lineNumber":19,"author":{"gitId":"-"},"content":"     * Constructs a {@code Phone}.","lastModifiedDate":"2017-05-30"},{"lineNumber":20,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2016-08-24"},{"lineNumber":21,"author":{"gitId":"-"},"content":"     * @param phone A valid phone number.","lastModifiedDate":"2017-05-30"},{"lineNumber":22,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-24"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    public Phone(String phone) {","lastModifiedDate":"2017-05-30"},{"lineNumber":24,"author":{"gitId":"-"},"content":"        requireNonNull(phone);","lastModifiedDate":"2017-05-15"},{"lineNumber":25,"author":{"gitId":"-"},"content":"        checkArgument(isValidPhone(phone), MESSAGE_CONSTRAINTS);","lastModifiedDate":"2018-09-22"},{"lineNumber":26,"author":{"gitId":"-"},"content":"        value \u003d phone;","lastModifiedDate":"2018-08-14"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-24"},{"lineNumber":30,"author":{"gitId":"-"},"content":"     * Returns true if a given string is a valid phone number.","lastModifiedDate":"2018-04-05"},{"lineNumber":31,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-24"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    public static boolean isValidPhone(String test) {","lastModifiedDate":"2016-08-24"},{"lineNumber":33,"author":{"gitId":"-"},"content":"        return test.matches(VALIDATION_REGEX);","lastModifiedDate":"2018-09-22"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-24"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    public String toString() {","lastModifiedDate":"2016-08-24"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        return value;","lastModifiedDate":"2016-08-24"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":40,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-24"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2016-08-24"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        return other \u003d\u003d this // short circuit if same object","lastModifiedDate":"2016-08-24"},{"lineNumber":44,"author":{"gitId":"-"},"content":"                || (other instanceof Phone // instanceof handles nulls","lastModifiedDate":"2016-08-24"},{"lineNumber":45,"author":{"gitId":"-"},"content":"                \u0026\u0026 value.equals(((Phone) other).value)); // state check","lastModifiedDate":"2018-08-14"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":47,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-24"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    public int hashCode() {","lastModifiedDate":"2016-08-24"},{"lineNumber":50,"author":{"gitId":"-"},"content":"        return value.hashCode();","lastModifiedDate":"2016-08-24"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":52,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":53,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-24"}],"authorContributionMap":{"cwnm":2,"-":51}},{"path":"src/main/java/seedu/address/model/client/PhoneContainsKeywordsPredicate.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"cwnm"},"content":"package seedu.address.model.client;","lastModifiedDate":"2022-03-04"},{"lineNumber":2,"author":{"gitId":"WJunHong"},"content":"","lastModifiedDate":"2022-02-27"},{"lineNumber":3,"author":{"gitId":"WJunHong"},"content":"import java.util.List;","lastModifiedDate":"2022-02-27"},{"lineNumber":4,"author":{"gitId":"WJunHong"},"content":"import java.util.function.Predicate;","lastModifiedDate":"2022-02-27"},{"lineNumber":5,"author":{"gitId":"WJunHong"},"content":"","lastModifiedDate":"2022-02-27"},{"lineNumber":6,"author":{"gitId":"janald99"},"content":"import seedu.address.commons.util.StringUtil;","lastModifiedDate":"2022-03-02"},{"lineNumber":7,"author":{"gitId":"janald99"},"content":"","lastModifiedDate":"2022-03-02"},{"lineNumber":8,"author":{"gitId":"WJunHong"},"content":"/**","lastModifiedDate":"2022-02-27"},{"lineNumber":9,"author":{"gitId":"janald99"},"content":" * Tests that a {@code Client}\u0027s {@code Phone} matches any of the keywords given.","lastModifiedDate":"2022-03-25"},{"lineNumber":10,"author":{"gitId":"WJunHong"},"content":" */","lastModifiedDate":"2022-02-27"},{"lineNumber":11,"author":{"gitId":"cwnm"},"content":"public class PhoneContainsKeywordsPredicate implements Predicate\u003cClient\u003e {","lastModifiedDate":"2022-03-04"},{"lineNumber":12,"author":{"gitId":"WJunHong"},"content":"    private final List\u003cString\u003e keywords;","lastModifiedDate":"2022-02-27"},{"lineNumber":13,"author":{"gitId":"WJunHong"},"content":"","lastModifiedDate":"2022-02-27"},{"lineNumber":14,"author":{"gitId":"WJunHong"},"content":"    public PhoneContainsKeywordsPredicate(List\u003cString\u003e keywords) {","lastModifiedDate":"2022-02-27"},{"lineNumber":15,"author":{"gitId":"WJunHong"},"content":"        this.keywords \u003d keywords;","lastModifiedDate":"2022-02-27"},{"lineNumber":16,"author":{"gitId":"WJunHong"},"content":"    }","lastModifiedDate":"2022-02-27"},{"lineNumber":17,"author":{"gitId":"WJunHong"},"content":"","lastModifiedDate":"2022-02-27"},{"lineNumber":18,"author":{"gitId":"WJunHong"},"content":"    @Override","lastModifiedDate":"2022-02-27"},{"lineNumber":19,"author":{"gitId":"cwnm"},"content":"    public boolean test(Client client) {","lastModifiedDate":"2022-03-04"},{"lineNumber":20,"author":{"gitId":"WJunHong"},"content":"        return keywords.stream()","lastModifiedDate":"2022-02-27"},{"lineNumber":21,"author":{"gitId":"cwnm"},"content":"                .anyMatch(keyword -\u003e StringUtil.containsWordIgnoreCase(client.getPhone().value, keyword));","lastModifiedDate":"2022-03-04"},{"lineNumber":22,"author":{"gitId":"WJunHong"},"content":"    }","lastModifiedDate":"2022-02-27"},{"lineNumber":23,"author":{"gitId":"WJunHong"},"content":"","lastModifiedDate":"2022-02-27"},{"lineNumber":24,"author":{"gitId":"WJunHong"},"content":"    @Override","lastModifiedDate":"2022-02-27"},{"lineNumber":25,"author":{"gitId":"WJunHong"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2022-02-27"},{"lineNumber":26,"author":{"gitId":"WJunHong"},"content":"        return other \u003d\u003d this // short circuit if same object","lastModifiedDate":"2022-02-27"},{"lineNumber":27,"author":{"gitId":"WJunHong"},"content":"                || (other instanceof PhoneContainsKeywordsPredicate // instanceof handles nulls","lastModifiedDate":"2022-02-27"},{"lineNumber":28,"author":{"gitId":"WJunHong"},"content":"                \u0026\u0026 keywords.equals(((PhoneContainsKeywordsPredicate) other).keywords)); // state check","lastModifiedDate":"2022-02-27"},{"lineNumber":29,"author":{"gitId":"WJunHong"},"content":"    }","lastModifiedDate":"2022-02-27"},{"lineNumber":30,"author":{"gitId":"WJunHong"},"content":"","lastModifiedDate":"2022-02-27"},{"lineNumber":31,"author":{"gitId":"WJunHong"},"content":"}","lastModifiedDate":"2022-02-27"},{"lineNumber":32,"author":{"gitId":"WJunHong"},"content":"","lastModifiedDate":"2022-02-27"}],"authorContributionMap":{"janald99":3,"WJunHong":25,"cwnm":4}},{"path":"src/main/java/seedu/address/model/client/UniqueClientList.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"cwnm"},"content":"package seedu.address.model.client;","lastModifiedDate":"2022-03-04"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2017-05-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static seedu.address.commons.util.CollectionUtil.requireAllNonNull;","lastModifiedDate":"2018-01-10"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-15"},{"lineNumber":6,"author":{"gitId":"Jacky142857"},"content":"import java.util.Comparator;","lastModifiedDate":"2022-03-02"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import java.util.Iterator;","lastModifiedDate":"2017-01-19"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import java.util.List;","lastModifiedDate":"2017-01-19"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import javafx.collections.FXCollections;","lastModifiedDate":"2016-08-24"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2016-08-24"},{"lineNumber":12,"author":{"gitId":"cwnm"},"content":"import seedu.address.model.client.exceptions.ClientNotFoundException;","lastModifiedDate":"2022-03-04"},{"lineNumber":13,"author":{"gitId":"cwnm"},"content":"import seedu.address.model.client.exceptions.DuplicateClientException;","lastModifiedDate":"2022-03-04"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":15,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-24"},{"lineNumber":16,"author":{"gitId":"cwnm"},"content":" * A list of clients that enforces uniqueness between its elements and does not allow nulls.","lastModifiedDate":"2022-03-04"},{"lineNumber":17,"author":{"gitId":"cwnm"},"content":" * A client is considered unique by comparing using {@code client#isSameclient(client)}. As such, adding and updating of","lastModifiedDate":"2022-03-04"},{"lineNumber":18,"author":{"gitId":"cwnm"},"content":" * clients uses client#isSameclient(client) for equality so as to ensure that the client being added or updated is","lastModifiedDate":"2022-03-04"},{"lineNumber":19,"author":{"gitId":"cwnm"},"content":" * unique in terms of identity in the UniqueclientList. However, the removal of a client uses client#equals(Object) so","lastModifiedDate":"2022-03-04"},{"lineNumber":20,"author":{"gitId":"cwnm"},"content":" * as to ensure that the client with exactly the same fields will be removed.","lastModifiedDate":"2022-03-04"},{"lineNumber":21,"author":{"gitId":"-"},"content":" *","lastModifiedDate":"2016-08-24"},{"lineNumber":22,"author":{"gitId":"-"},"content":" * Supports a minimal set of list operations.","lastModifiedDate":"2016-09-22"},{"lineNumber":23,"author":{"gitId":"-"},"content":" *","lastModifiedDate":"2016-08-24"},{"lineNumber":24,"author":{"gitId":"cwnm"},"content":" * @see Client#isSameclient(Client)","lastModifiedDate":"2022-03-04"},{"lineNumber":25,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-24"},{"lineNumber":26,"author":{"gitId":"cwnm"},"content":"public class UniqueClientList implements Iterable\u003cClient\u003e {","lastModifiedDate":"2022-03-04"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":28,"author":{"gitId":"cwnm"},"content":"    private final ObservableList\u003cClient\u003e internalList \u003d FXCollections.observableArrayList();","lastModifiedDate":"2022-03-04"},{"lineNumber":29,"author":{"gitId":"cwnm"},"content":"    private final ObservableList\u003cClient\u003e internalUnmodifiableList \u003d","lastModifiedDate":"2022-03-04"},{"lineNumber":30,"author":{"gitId":"-"},"content":"            FXCollections.unmodifiableObservableList(internalList);","lastModifiedDate":"2018-12-09"},{"lineNumber":31,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-19"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-24"},{"lineNumber":33,"author":{"gitId":"cwnm"},"content":"     * Returns true if the list contains an equivalent client as the given argument.","lastModifiedDate":"2022-03-04"},{"lineNumber":34,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-24"},{"lineNumber":35,"author":{"gitId":"cwnm"},"content":"    public boolean contains(Client toCheck) {","lastModifiedDate":"2022-03-04"},{"lineNumber":36,"author":{"gitId":"-"},"content":"        requireNonNull(toCheck);","lastModifiedDate":"2017-05-15"},{"lineNumber":37,"author":{"gitId":"cwnm"},"content":"        return internalList.stream().anyMatch(toCheck::isSameclient);","lastModifiedDate":"2022-03-04"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":39,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-24"},{"lineNumber":41,"author":{"gitId":"cwnm"},"content":"     * Adds a client to the list.","lastModifiedDate":"2022-03-04"},{"lineNumber":42,"author":{"gitId":"cwnm"},"content":"     * The client must not already exist in the list.","lastModifiedDate":"2022-03-04"},{"lineNumber":43,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-24"},{"lineNumber":44,"author":{"gitId":"cwnm"},"content":"    public void add(Client toAdd) {","lastModifiedDate":"2022-03-04"},{"lineNumber":45,"author":{"gitId":"-"},"content":"        requireNonNull(toAdd);","lastModifiedDate":"2017-05-15"},{"lineNumber":46,"author":{"gitId":"-"},"content":"        if (contains(toAdd)) {","lastModifiedDate":"2016-08-24"},{"lineNumber":47,"author":{"gitId":"cwnm"},"content":"            throw new DuplicateClientException();","lastModifiedDate":"2022-03-04"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-08-24"},{"lineNumber":49,"author":{"gitId":"-"},"content":"        internalList.add(toAdd);","lastModifiedDate":"2018-01-10"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":51,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-12-13"},{"lineNumber":53,"author":{"gitId":"cwnm"},"content":"     * Replaces the client {@code target} in the list with {@code editedclient}.","lastModifiedDate":"2022-03-04"},{"lineNumber":54,"author":{"gitId":"-"},"content":"     * {@code target} must exist in the list.","lastModifiedDate":"2018-08-07"},{"lineNumber":55,"author":{"gitId":"cwnm"},"content":"     * The client identity of {@code editedclient} must not be the same as another existing client in the list.","lastModifiedDate":"2022-03-04"},{"lineNumber":56,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-12-13"},{"lineNumber":57,"author":{"gitId":"cwnm"},"content":"    public void setclient(Client target, Client editedClient) {","lastModifiedDate":"2022-03-04"},{"lineNumber":58,"author":{"gitId":"cwnm"},"content":"        requireAllNonNull(target, editedClient);","lastModifiedDate":"2022-03-04"},{"lineNumber":59,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-13"},{"lineNumber":60,"author":{"gitId":"-"},"content":"        int index \u003d internalList.indexOf(target);","lastModifiedDate":"2017-06-07"},{"lineNumber":61,"author":{"gitId":"-"},"content":"        if (index \u003d\u003d -1) {","lastModifiedDate":"2017-06-07"},{"lineNumber":62,"author":{"gitId":"cwnm"},"content":"            throw new ClientNotFoundException();","lastModifiedDate":"2022-03-04"},{"lineNumber":63,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-06-07"},{"lineNumber":64,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-07"},{"lineNumber":65,"author":{"gitId":"cwnm"},"content":"        if (!target.isSameclient(editedClient) \u0026\u0026 contains(editedClient)) {","lastModifiedDate":"2022-03-04"},{"lineNumber":66,"author":{"gitId":"cwnm"},"content":"            throw new DuplicateClientException();","lastModifiedDate":"2022-03-04"},{"lineNumber":67,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-12-13"},{"lineNumber":68,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-13"},{"lineNumber":69,"author":{"gitId":"cwnm"},"content":"        internalList.set(index, editedClient);","lastModifiedDate":"2022-03-04"},{"lineNumber":70,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-13"},{"lineNumber":71,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-13"},{"lineNumber":72,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-24"},{"lineNumber":73,"author":{"gitId":"cwnm"},"content":"     * Removes the equivalent client from the list.","lastModifiedDate":"2022-03-04"},{"lineNumber":74,"author":{"gitId":"cwnm"},"content":"     * The client must exist in the list.","lastModifiedDate":"2022-03-04"},{"lineNumber":75,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-24"},{"lineNumber":76,"author":{"gitId":"cwnm"},"content":"    public void remove(Client toRemove) {","lastModifiedDate":"2022-03-04"},{"lineNumber":77,"author":{"gitId":"-"},"content":"        requireNonNull(toRemove);","lastModifiedDate":"2017-05-15"},{"lineNumber":78,"author":{"gitId":"-"},"content":"        if (!internalList.remove(toRemove)) {","lastModifiedDate":"2018-02-28"},{"lineNumber":79,"author":{"gitId":"cwnm"},"content":"            throw new ClientNotFoundException();","lastModifiedDate":"2022-03-04"},{"lineNumber":80,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-08-24"},{"lineNumber":81,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":82,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":83,"author":{"gitId":"cwnm"},"content":"    public void setclients(UniqueClientList replacement) {","lastModifiedDate":"2022-03-04"},{"lineNumber":84,"author":{"gitId":"-"},"content":"        requireNonNull(replacement);","lastModifiedDate":"2018-08-08"},{"lineNumber":85,"author":{"gitId":"-"},"content":"        internalList.setAll(replacement.internalList);","lastModifiedDate":"2018-08-14"},{"lineNumber":86,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-10-19"},{"lineNumber":87,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-19"},{"lineNumber":88,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-08-07"},{"lineNumber":89,"author":{"gitId":"cwnm"},"content":"     * Replaces the contents of this list with {@code clients}.","lastModifiedDate":"2022-03-04"},{"lineNumber":90,"author":{"gitId":"cwnm"},"content":"     * {@code clients} must not contain duplicate clients.","lastModifiedDate":"2022-03-04"},{"lineNumber":91,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-08-07"},{"lineNumber":92,"author":{"gitId":"cwnm"},"content":"    public void setclients(List\u003cClient\u003e clients) {","lastModifiedDate":"2022-03-04"},{"lineNumber":93,"author":{"gitId":"cwnm"},"content":"        requireAllNonNull(clients);","lastModifiedDate":"2022-03-04"},{"lineNumber":94,"author":{"gitId":"cwnm"},"content":"        if (!clientsAreUnique(clients)) {","lastModifiedDate":"2022-03-04"},{"lineNumber":95,"author":{"gitId":"cwnm"},"content":"            throw new DuplicateClientException();","lastModifiedDate":"2022-03-04"},{"lineNumber":96,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-12-24"},{"lineNumber":97,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-01-21"},{"lineNumber":98,"author":{"gitId":"cwnm"},"content":"        internalList.setAll(clients);","lastModifiedDate":"2022-03-04"},{"lineNumber":99,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-24"},{"lineNumber":100,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-24"},{"lineNumber":101,"author":{"gitId":"Jacky142857"},"content":"    public void sortPersons() {","lastModifiedDate":"2022-03-02"},{"lineNumber":102,"author":{"gitId":"Jacky142857"},"content":"        internalList.sort(Comparator.comparing(p -\u003e p.getName().fullName));","lastModifiedDate":"2022-03-02"},{"lineNumber":103,"author":{"gitId":"Jacky142857"},"content":"    }","lastModifiedDate":"2022-03-02"},{"lineNumber":104,"author":{"gitId":"Jacky142857"},"content":"","lastModifiedDate":"2022-03-02"},{"lineNumber":105,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-09-01"},{"lineNumber":106,"author":{"gitId":"-"},"content":"     * Returns the backing list as an unmodifiable {@code ObservableList}.","lastModifiedDate":"2017-09-01"},{"lineNumber":107,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-09-01"},{"lineNumber":108,"author":{"gitId":"cwnm"},"content":"    public ObservableList\u003cClient\u003e asUnmodifiableObservableList() {","lastModifiedDate":"2022-03-04"},{"lineNumber":109,"author":{"gitId":"-"},"content":"        return internalUnmodifiableList;","lastModifiedDate":"2018-12-09"},{"lineNumber":110,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-22"},{"lineNumber":111,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":112,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-24"},{"lineNumber":113,"author":{"gitId":"cwnm"},"content":"    public Iterator\u003cClient\u003e iterator() {","lastModifiedDate":"2022-03-04"},{"lineNumber":114,"author":{"gitId":"-"},"content":"        return internalList.iterator();","lastModifiedDate":"2016-08-24"},{"lineNumber":115,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":116,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":117,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-21"},{"lineNumber":118,"author":{"gitId":"-"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2016-09-21"},{"lineNumber":119,"author":{"gitId":"-"},"content":"        return other \u003d\u003d this // short circuit if same object","lastModifiedDate":"2016-09-21"},{"lineNumber":120,"author":{"gitId":"cwnm"},"content":"                || (other instanceof UniqueClientList // instanceof handles nulls","lastModifiedDate":"2022-03-04"},{"lineNumber":121,"author":{"gitId":"cwnm"},"content":"                        \u0026\u0026 internalList.equals(((UniqueClientList) other).internalList));","lastModifiedDate":"2022-03-04"},{"lineNumber":122,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-21"},{"lineNumber":123,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":124,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-21"},{"lineNumber":125,"author":{"gitId":"-"},"content":"    public int hashCode() {","lastModifiedDate":"2016-09-21"},{"lineNumber":126,"author":{"gitId":"-"},"content":"        return internalList.hashCode();","lastModifiedDate":"2016-09-21"},{"lineNumber":127,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-21"},{"lineNumber":128,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":129,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-04-19"},{"lineNumber":130,"author":{"gitId":"cwnm"},"content":"     * Returns true if {@code clients} contains only unique clients.","lastModifiedDate":"2022-03-04"},{"lineNumber":131,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-04-19"},{"lineNumber":132,"author":{"gitId":"cwnm"},"content":"    private boolean clientsAreUnique(List\u003cClient\u003e clients) {","lastModifiedDate":"2022-03-04"},{"lineNumber":133,"author":{"gitId":"cwnm"},"content":"        for (int i \u003d 0; i \u003c clients.size() - 1; i++) {","lastModifiedDate":"2022-03-04"},{"lineNumber":134,"author":{"gitId":"cwnm"},"content":"            for (int j \u003d i + 1; j \u003c clients.size(); j++) {","lastModifiedDate":"2022-03-04"},{"lineNumber":135,"author":{"gitId":"cwnm"},"content":"                if (clients.get(i).isSameclient(clients.get(j))) {","lastModifiedDate":"2022-03-04"},{"lineNumber":136,"author":{"gitId":"-"},"content":"                    return false;","lastModifiedDate":"2018-04-19"},{"lineNumber":137,"author":{"gitId":"-"},"content":"                }","lastModifiedDate":"2018-04-19"},{"lineNumber":138,"author":{"gitId":"-"},"content":"            }","lastModifiedDate":"2018-04-19"},{"lineNumber":139,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-04-19"},{"lineNumber":140,"author":{"gitId":"-"},"content":"        return true;","lastModifiedDate":"2018-04-19"},{"lineNumber":141,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-04-19"},{"lineNumber":142,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-24"}],"authorContributionMap":{"Jacky142857":5,"cwnm":48,"-":89}},{"path":"src/main/java/seedu/address/model/client/exceptions/ClientNotFoundException.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"cwnm"},"content":"package seedu.address.model.client.exceptions;","lastModifiedDate":"2022-03-04"},{"lineNumber":2,"author":{"gitId":"cwnm"},"content":"","lastModifiedDate":"2022-03-04"},{"lineNumber":3,"author":{"gitId":"cwnm"},"content":"/**","lastModifiedDate":"2022-03-04"},{"lineNumber":4,"author":{"gitId":"cwnm"},"content":" * Signals that the operation is unable to find the specified client.","lastModifiedDate":"2022-03-04"},{"lineNumber":5,"author":{"gitId":"cwnm"},"content":" */","lastModifiedDate":"2022-03-04"},{"lineNumber":6,"author":{"gitId":"cwnm"},"content":"public class ClientNotFoundException extends RuntimeException {}","lastModifiedDate":"2022-03-04"}],"authorContributionMap":{"cwnm":6}},{"path":"src/main/java/seedu/address/model/client/exceptions/DuplicateClientException.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"cwnm"},"content":"package seedu.address.model.client.exceptions;","lastModifiedDate":"2022-03-04"},{"lineNumber":2,"author":{"gitId":"cwnm"},"content":"","lastModifiedDate":"2022-03-04"},{"lineNumber":3,"author":{"gitId":"cwnm"},"content":"/**","lastModifiedDate":"2022-03-04"},{"lineNumber":4,"author":{"gitId":"cwnm"},"content":" * Signals that the operation will result in duplicate clients (clients are considered duplicates if they have the same","lastModifiedDate":"2022-03-04"},{"lineNumber":5,"author":{"gitId":"cwnm"},"content":" * identity).","lastModifiedDate":"2022-03-04"},{"lineNumber":6,"author":{"gitId":"cwnm"},"content":" */","lastModifiedDate":"2022-03-04"},{"lineNumber":7,"author":{"gitId":"cwnm"},"content":"public class DuplicateClientException extends RuntimeException {","lastModifiedDate":"2022-03-04"},{"lineNumber":8,"author":{"gitId":"cwnm"},"content":"    public DuplicateClientException() {","lastModifiedDate":"2022-03-04"},{"lineNumber":9,"author":{"gitId":"cwnm"},"content":"        super(\"Operation would result in duplicate clients\");","lastModifiedDate":"2022-03-04"},{"lineNumber":10,"author":{"gitId":"cwnm"},"content":"    }","lastModifiedDate":"2022-03-04"},{"lineNumber":11,"author":{"gitId":"cwnm"},"content":"}","lastModifiedDate":"2022-03-04"}],"authorContributionMap":{"cwnm":11}},{"path":"src/main/java/seedu/address/model/property/Address.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"WJunHong"},"content":"package seedu.address.model.property;","lastModifiedDate":"2022-03-27"},{"lineNumber":2,"author":{"gitId":"WJunHong"},"content":"","lastModifiedDate":"2022-03-27"},{"lineNumber":3,"author":{"gitId":"WJunHong"},"content":"import java.util.Objects;","lastModifiedDate":"2022-03-27"},{"lineNumber":4,"author":{"gitId":"WJunHong"},"content":"","lastModifiedDate":"2022-03-27"},{"lineNumber":5,"author":{"gitId":"WJunHong"},"content":"public class Address {","lastModifiedDate":"2022-03-27"},{"lineNumber":6,"author":{"gitId":"WJunHong"},"content":"","lastModifiedDate":"2022-03-27"},{"lineNumber":7,"author":{"gitId":"WJunHong"},"content":"    public static final String MESSAGE_CONSTRAINTS \u003d \"Address should not be empty\";","lastModifiedDate":"2022-03-27"},{"lineNumber":8,"author":{"gitId":"WJunHong"},"content":"","lastModifiedDate":"2022-03-27"},{"lineNumber":9,"author":{"gitId":"WJunHong"},"content":"    private String address;","lastModifiedDate":"2022-03-27"},{"lineNumber":10,"author":{"gitId":"WJunHong"},"content":"","lastModifiedDate":"2022-03-27"},{"lineNumber":11,"author":{"gitId":"WJunHong"},"content":"    public Address(String address) {","lastModifiedDate":"2022-03-27"},{"lineNumber":12,"author":{"gitId":"WJunHong"},"content":"        this.address \u003d address;","lastModifiedDate":"2022-03-27"},{"lineNumber":13,"author":{"gitId":"WJunHong"},"content":"    }","lastModifiedDate":"2022-03-27"},{"lineNumber":14,"author":{"gitId":"WJunHong"},"content":"","lastModifiedDate":"2022-03-27"},{"lineNumber":15,"author":{"gitId":"WJunHong"},"content":"    @Override","lastModifiedDate":"2022-03-27"},{"lineNumber":16,"author":{"gitId":"WJunHong"},"content":"    public int hashCode() {","lastModifiedDate":"2022-03-27"},{"lineNumber":17,"author":{"gitId":"WJunHong"},"content":"        return Objects.hash(address);","lastModifiedDate":"2022-03-27"},{"lineNumber":18,"author":{"gitId":"WJunHong"},"content":"    }","lastModifiedDate":"2022-03-27"},{"lineNumber":19,"author":{"gitId":"WJunHong"},"content":"","lastModifiedDate":"2022-03-27"},{"lineNumber":20,"author":{"gitId":"WJunHong"},"content":"    @Override","lastModifiedDate":"2022-03-27"},{"lineNumber":21,"author":{"gitId":"WJunHong"},"content":"    public String toString() {","lastModifiedDate":"2022-03-27"},{"lineNumber":22,"author":{"gitId":"WJunHong"},"content":"        return address;","lastModifiedDate":"2022-03-27"},{"lineNumber":23,"author":{"gitId":"WJunHong"},"content":"    }","lastModifiedDate":"2022-03-27"},{"lineNumber":24,"author":{"gitId":"WJunHong"},"content":"","lastModifiedDate":"2022-03-27"},{"lineNumber":25,"author":{"gitId":"WJunHong"},"content":"    @Override","lastModifiedDate":"2022-03-27"},{"lineNumber":26,"author":{"gitId":"WJunHong"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2022-03-27"},{"lineNumber":27,"author":{"gitId":"WJunHong"},"content":"        return other \u003d\u003d this // short circuit if same object","lastModifiedDate":"2022-03-27"},{"lineNumber":28,"author":{"gitId":"WJunHong"},"content":"                || (other instanceof Address // instanceof handles nulls","lastModifiedDate":"2022-03-27"},{"lineNumber":29,"author":{"gitId":"WJunHong"},"content":"                \u0026\u0026 address.equals(((Address) other).address)); // state check","lastModifiedDate":"2022-03-27"},{"lineNumber":30,"author":{"gitId":"WJunHong"},"content":"    }","lastModifiedDate":"2022-03-27"},{"lineNumber":31,"author":{"gitId":"WJunHong"},"content":"","lastModifiedDate":"2022-03-27"},{"lineNumber":32,"author":{"gitId":"WJunHong"},"content":"    /**","lastModifiedDate":"2022-03-27"},{"lineNumber":33,"author":{"gitId":"WJunHong"},"content":"     * Checks if the location string is empty or not.","lastModifiedDate":"2022-03-27"},{"lineNumber":34,"author":{"gitId":"WJunHong"},"content":"     *","lastModifiedDate":"2022-03-27"},{"lineNumber":35,"author":{"gitId":"WJunHong"},"content":"     * @param address The string.","lastModifiedDate":"2022-03-27"},{"lineNumber":36,"author":{"gitId":"WJunHong"},"content":"     * @return False if string is empty, True otherwise.","lastModifiedDate":"2022-03-27"},{"lineNumber":37,"author":{"gitId":"WJunHong"},"content":"     */","lastModifiedDate":"2022-03-27"},{"lineNumber":38,"author":{"gitId":"WJunHong"},"content":"    public static boolean isValidAddress(String address) {","lastModifiedDate":"2022-03-27"},{"lineNumber":39,"author":{"gitId":"WJunHong"},"content":"        return !address.isEmpty();","lastModifiedDate":"2022-03-27"},{"lineNumber":40,"author":{"gitId":"WJunHong"},"content":"    }","lastModifiedDate":"2022-03-27"},{"lineNumber":41,"author":{"gitId":"WJunHong"},"content":"}","lastModifiedDate":"2022-03-27"}],"authorContributionMap":{"WJunHong":41}},{"path":"src/main/java/seedu/address/model/property/House.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"janald99"},"content":"package seedu.address.model.property;","lastModifiedDate":"2022-03-16"},{"lineNumber":2,"author":{"gitId":"janald99"},"content":"","lastModifiedDate":"2022-03-16"},{"lineNumber":3,"author":{"gitId":"janald99"},"content":"import java.util.Objects;","lastModifiedDate":"2022-03-16"},{"lineNumber":4,"author":{"gitId":"chuashihong"},"content":"","lastModifiedDate":"2022-03-15"},{"lineNumber":5,"author":{"gitId":"chuashihong"},"content":"public class House {","lastModifiedDate":"2022-03-15"},{"lineNumber":6,"author":{"gitId":"chuashihong"},"content":"","lastModifiedDate":"2022-03-15"},{"lineNumber":7,"author":{"gitId":"chuashihong"},"content":"    //identifiers of a house","lastModifiedDate":"2022-03-15"},{"lineNumber":8,"author":{"gitId":"janald99"},"content":"    private HouseType houseType;","lastModifiedDate":"2022-03-16"},{"lineNumber":9,"author":{"gitId":"chuashihong"},"content":"    private Location location;","lastModifiedDate":"2022-03-15"},{"lineNumber":10,"author":{"gitId":"chuashihong"},"content":"","lastModifiedDate":"2022-03-15"},{"lineNumber":11,"author":{"gitId":"chuashihong"},"content":"    /**","lastModifiedDate":"2022-03-15"},{"lineNumber":12,"author":{"gitId":"chuashihong"},"content":"     * Constructor","lastModifiedDate":"2022-03-15"},{"lineNumber":13,"author":{"gitId":"janald99"},"content":"     * @param houseType the HouseType of a house.","lastModifiedDate":"2022-03-16"},{"lineNumber":14,"author":{"gitId":"janald99"},"content":"     * @param location the location of a house.","lastModifiedDate":"2022-03-16"},{"lineNumber":15,"author":{"gitId":"chuashihong"},"content":"     */","lastModifiedDate":"2022-03-15"},{"lineNumber":16,"author":{"gitId":"janald99"},"content":"    public House(HouseType houseType, Location location) {","lastModifiedDate":"2022-03-31"},{"lineNumber":17,"author":{"gitId":"janald99"},"content":"        this.houseType \u003d houseType;","lastModifiedDate":"2022-03-16"},{"lineNumber":18,"author":{"gitId":"janald99"},"content":"        this.location \u003d location;","lastModifiedDate":"2022-03-31"},{"lineNumber":19,"author":{"gitId":"janald99"},"content":"    }","lastModifiedDate":"2022-03-16"},{"lineNumber":20,"author":{"gitId":"janald99"},"content":"","lastModifiedDate":"2022-03-16"},{"lineNumber":21,"author":{"gitId":"janald99"},"content":"","lastModifiedDate":"2022-03-16"},{"lineNumber":22,"author":{"gitId":"janald99"},"content":"    public HouseType getHouseType() {","lastModifiedDate":"2022-03-16"},{"lineNumber":23,"author":{"gitId":"janald99"},"content":"        return houseType;","lastModifiedDate":"2022-03-16"},{"lineNumber":24,"author":{"gitId":"janald99"},"content":"    }","lastModifiedDate":"2022-03-16"},{"lineNumber":25,"author":{"gitId":"janald99"},"content":"","lastModifiedDate":"2022-03-16"},{"lineNumber":26,"author":{"gitId":"chuashihong"},"content":"    public String getHouseTypeToString() {","lastModifiedDate":"2022-03-24"},{"lineNumber":27,"author":{"gitId":"chuashihong"},"content":"        return houseType.toString();","lastModifiedDate":"2022-03-24"},{"lineNumber":28,"author":{"gitId":"chuashihong"},"content":"    }","lastModifiedDate":"2022-03-24"},{"lineNumber":29,"author":{"gitId":"chuashihong"},"content":"","lastModifiedDate":"2022-03-24"},{"lineNumber":30,"author":{"gitId":"janald99"},"content":"    public Location getLocation() {","lastModifiedDate":"2022-03-16"},{"lineNumber":31,"author":{"gitId":"janald99"},"content":"        return location;","lastModifiedDate":"2022-03-16"},{"lineNumber":32,"author":{"gitId":"chuashihong"},"content":"    }","lastModifiedDate":"2022-03-15"},{"lineNumber":33,"author":{"gitId":"chuashihong"},"content":"","lastModifiedDate":"2022-03-15"},{"lineNumber":34,"author":{"gitId":"chuashihong"},"content":"    public String getLocationToString() {","lastModifiedDate":"2022-03-24"},{"lineNumber":35,"author":{"gitId":"chuashihong"},"content":"        return location.toString();","lastModifiedDate":"2022-03-24"},{"lineNumber":36,"author":{"gitId":"chuashihong"},"content":"    }","lastModifiedDate":"2022-03-24"},{"lineNumber":37,"author":{"gitId":"chuashihong"},"content":"","lastModifiedDate":"2022-03-24"},{"lineNumber":38,"author":{"gitId":"chuashihong"},"content":"    /**","lastModifiedDate":"2022-03-15"},{"lineNumber":39,"author":{"gitId":"janald99"},"content":"     * Updates the location of a house.","lastModifiedDate":"2022-03-16"},{"lineNumber":40,"author":{"gitId":"janald99"},"content":"     *","lastModifiedDate":"2022-03-16"},{"lineNumber":41,"author":{"gitId":"janald99"},"content":"     * @param location the location of a house.","lastModifiedDate":"2022-03-16"},{"lineNumber":42,"author":{"gitId":"chuashihong"},"content":"     */","lastModifiedDate":"2022-03-15"},{"lineNumber":43,"author":{"gitId":"janald99"},"content":"    public void updateLocation(String location) {","lastModifiedDate":"2022-03-16"},{"lineNumber":44,"author":{"gitId":"janald99"},"content":"        this.location \u003d new Location(location);","lastModifiedDate":"2022-03-16"},{"lineNumber":45,"author":{"gitId":"chuashihong"},"content":"    }","lastModifiedDate":"2022-03-15"},{"lineNumber":46,"author":{"gitId":"chuashihong"},"content":"","lastModifiedDate":"2022-03-15"},{"lineNumber":47,"author":{"gitId":"chuashihong"},"content":"    @Override","lastModifiedDate":"2022-03-15"},{"lineNumber":48,"author":{"gitId":"chuashihong"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2022-03-15"},{"lineNumber":49,"author":{"gitId":"chuashihong"},"content":"        return other \u003d\u003d this // short circuit if same object","lastModifiedDate":"2022-03-15"},{"lineNumber":50,"author":{"gitId":"chuashihong"},"content":"                || (other instanceof House // instanceof handles nulls","lastModifiedDate":"2022-03-15"},{"lineNumber":51,"author":{"gitId":"janald99"},"content":"                \u0026\u0026 houseType.equals(((House) other).houseType)","lastModifiedDate":"2022-03-16"},{"lineNumber":52,"author":{"gitId":"chuashihong"},"content":"                \u0026\u0026 location.equals(((House) other).location)); // state check","lastModifiedDate":"2022-03-15"},{"lineNumber":53,"author":{"gitId":"chuashihong"},"content":"    }","lastModifiedDate":"2022-03-15"},{"lineNumber":54,"author":{"gitId":"chuashihong"},"content":"","lastModifiedDate":"2022-03-15"},{"lineNumber":55,"author":{"gitId":"chuashihong"},"content":"    @Override","lastModifiedDate":"2022-03-15"},{"lineNumber":56,"author":{"gitId":"chuashihong"},"content":"    public int hashCode() {","lastModifiedDate":"2022-03-15"},{"lineNumber":57,"author":{"gitId":"janald99"},"content":"        return Objects.hash(houseType, location);","lastModifiedDate":"2022-03-16"},{"lineNumber":58,"author":{"gitId":"chuashihong"},"content":"    }","lastModifiedDate":"2022-03-15"},{"lineNumber":59,"author":{"gitId":"chuashihong"},"content":"","lastModifiedDate":"2022-03-15"},{"lineNumber":60,"author":{"gitId":"janald99"},"content":"    @Override","lastModifiedDate":"2022-04-07"},{"lineNumber":61,"author":{"gitId":"janald99"},"content":"    public String toString() {","lastModifiedDate":"2022-04-07"},{"lineNumber":62,"author":{"gitId":"janald99"},"content":"        return \"HouseType: \" + getHouseTypeToString() + \"\\n\" + \"Location: \" + getLocationToString();","lastModifiedDate":"2022-04-07"},{"lineNumber":63,"author":{"gitId":"janald99"},"content":"    }","lastModifiedDate":"2022-04-07"},{"lineNumber":64,"author":{"gitId":"janald99"},"content":"","lastModifiedDate":"2022-04-07"},{"lineNumber":65,"author":{"gitId":"chuashihong"},"content":"}","lastModifiedDate":"2022-03-15"}],"authorContributionMap":{"janald99":30,"chuashihong":35}},{"path":"src/main/java/seedu/address/model/property/HouseType.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"janald99"},"content":"package seedu.address.model.property;","lastModifiedDate":"2022-03-16"},{"lineNumber":2,"author":{"gitId":"chuashihong"},"content":"","lastModifiedDate":"2022-03-15"},{"lineNumber":3,"author":{"gitId":"WJunHong"},"content":"import java.util.HashMap;","lastModifiedDate":"2022-03-24"},{"lineNumber":4,"author":{"gitId":"WJunHong"},"content":"","lastModifiedDate":"2022-03-24"},{"lineNumber":5,"author":{"gitId":"chuashihong"},"content":"/**","lastModifiedDate":"2022-03-15"},{"lineNumber":6,"author":{"gitId":"chuashihong"},"content":" * All types of houses are listed here","lastModifiedDate":"2022-03-15"},{"lineNumber":7,"author":{"gitId":"chuashihong"},"content":" */","lastModifiedDate":"2022-03-15"},{"lineNumber":8,"author":{"gitId":"chuashihong"},"content":"public enum HouseType {","lastModifiedDate":"2022-03-15"},{"lineNumber":9,"author":{"gitId":"janald99"},"content":"    UNSPECIFIED(\"unspecified\", \"any\") {","lastModifiedDate":"2022-04-07"},{"lineNumber":10,"author":{"gitId":"chuashihong"},"content":"        @Override","lastModifiedDate":"2022-03-24"},{"lineNumber":11,"author":{"gitId":"chuashihong"},"content":"        public String toString() {","lastModifiedDate":"2022-03-24"},{"lineNumber":12,"author":{"gitId":"janald99"},"content":"            return \"Unspecified\";","lastModifiedDate":"2022-03-31"},{"lineNumber":13,"author":{"gitId":"chuashihong"},"content":"        }","lastModifiedDate":"2022-03-15"},{"lineNumber":14,"author":{"gitId":"chuashihong"},"content":"    },","lastModifiedDate":"2022-03-24"},{"lineNumber":15,"author":{"gitId":"WJunHong"},"content":"    APARTMENT(\"apartment\") {","lastModifiedDate":"2022-03-24"},{"lineNumber":16,"author":{"gitId":"chuashihong"},"content":"        @Override","lastModifiedDate":"2022-03-24"},{"lineNumber":17,"author":{"gitId":"chuashihong"},"content":"        public String toString() {","lastModifiedDate":"2022-03-24"},{"lineNumber":18,"author":{"gitId":"chuashihong"},"content":"            return \"Apartment\";","lastModifiedDate":"2022-03-24"},{"lineNumber":19,"author":{"gitId":"chuashihong"},"content":"        }","lastModifiedDate":"2022-03-24"},{"lineNumber":20,"author":{"gitId":"chuashihong"},"content":"    },","lastModifiedDate":"2022-03-24"},{"lineNumber":21,"author":{"gitId":"WJunHong"},"content":"    BUNGALOW(\"bungalow\") {","lastModifiedDate":"2022-03-24"},{"lineNumber":22,"author":{"gitId":"chuashihong"},"content":"        @Override","lastModifiedDate":"2022-03-24"},{"lineNumber":23,"author":{"gitId":"chuashihong"},"content":"        public String toString() {","lastModifiedDate":"2022-03-24"},{"lineNumber":24,"author":{"gitId":"chuashihong"},"content":"            return \"Bungalow\";","lastModifiedDate":"2022-03-24"},{"lineNumber":25,"author":{"gitId":"chuashihong"},"content":"        }","lastModifiedDate":"2022-03-24"},{"lineNumber":26,"author":{"gitId":"chuashihong"},"content":"    },","lastModifiedDate":"2022-03-24"},{"lineNumber":27,"author":{"gitId":"WJunHong"},"content":"    CONDOMINIUM(\"condominium\", \"condo\") {","lastModifiedDate":"2022-03-24"},{"lineNumber":28,"author":{"gitId":"chuashihong"},"content":"        @Override","lastModifiedDate":"2022-03-24"},{"lineNumber":29,"author":{"gitId":"chuashihong"},"content":"        public String toString() {","lastModifiedDate":"2022-03-24"},{"lineNumber":30,"author":{"gitId":"janald99"},"content":"            return \"Condominium\";","lastModifiedDate":"2022-03-27"},{"lineNumber":31,"author":{"gitId":"chuashihong"},"content":"        }","lastModifiedDate":"2022-03-24"},{"lineNumber":32,"author":{"gitId":"chuashihong"},"content":"    },","lastModifiedDate":"2022-03-24"},{"lineNumber":33,"author":{"gitId":"WJunHong"},"content":"    COLONIA(\"colonia\") {","lastModifiedDate":"2022-03-24"},{"lineNumber":34,"author":{"gitId":"chuashihong"},"content":"        @Override","lastModifiedDate":"2022-03-24"},{"lineNumber":35,"author":{"gitId":"chuashihong"},"content":"        public String toString() {","lastModifiedDate":"2022-03-24"},{"lineNumber":36,"author":{"gitId":"chuashihong"},"content":"            return \"Colonia\";","lastModifiedDate":"2022-03-24"},{"lineNumber":37,"author":{"gitId":"chuashihong"},"content":"        }","lastModifiedDate":"2022-03-24"},{"lineNumber":38,"author":{"gitId":"chuashihong"},"content":"    },","lastModifiedDate":"2022-03-24"},{"lineNumber":39,"author":{"gitId":"WJunHong"},"content":"    HDB_FLAT(\"hdb\", \"hdb_flat\") {","lastModifiedDate":"2022-03-27"},{"lineNumber":40,"author":{"gitId":"chuashihong"},"content":"        @Override","lastModifiedDate":"2022-03-24"},{"lineNumber":41,"author":{"gitId":"chuashihong"},"content":"        public String toString() {","lastModifiedDate":"2022-03-24"},{"lineNumber":42,"author":{"gitId":"WJunHong"},"content":"            return \"HDB\";","lastModifiedDate":"2022-03-28"},{"lineNumber":43,"author":{"gitId":"chuashihong"},"content":"        }","lastModifiedDate":"2022-03-24"},{"lineNumber":44,"author":{"gitId":"chuashihong"},"content":"    },","lastModifiedDate":"2022-03-24"},{"lineNumber":45,"author":{"gitId":"WJunHong"},"content":"    SEMIDETACHED(\"semidetached\", \"semid\", \"semi-detached\", \"semi-d\") {","lastModifiedDate":"2022-03-24"},{"lineNumber":46,"author":{"gitId":"chuashihong"},"content":"        @Override","lastModifiedDate":"2022-03-24"},{"lineNumber":47,"author":{"gitId":"chuashihong"},"content":"        public String toString() {","lastModifiedDate":"2022-03-24"},{"lineNumber":48,"author":{"gitId":"janald99"},"content":"            return \"SemiDetached\";","lastModifiedDate":"2022-03-27"},{"lineNumber":49,"author":{"gitId":"chuashihong"},"content":"        }","lastModifiedDate":"2022-03-24"},{"lineNumber":50,"author":{"gitId":"chuashihong"},"content":"    },","lastModifiedDate":"2022-03-24"},{"lineNumber":51,"author":{"gitId":"WJunHong"},"content":"    MANSION(\"mansion\") {","lastModifiedDate":"2022-03-24"},{"lineNumber":52,"author":{"gitId":"chuashihong"},"content":"        @Override","lastModifiedDate":"2022-03-24"},{"lineNumber":53,"author":{"gitId":"chuashihong"},"content":"        public String toString() {","lastModifiedDate":"2022-03-24"},{"lineNumber":54,"author":{"gitId":"chuashihong"},"content":"            return \"Mansion\";","lastModifiedDate":"2022-03-24"},{"lineNumber":55,"author":{"gitId":"chuashihong"},"content":"        }","lastModifiedDate":"2022-03-24"},{"lineNumber":56,"author":{"gitId":"chuashihong"},"content":"    },","lastModifiedDate":"2022-03-24"},{"lineNumber":57,"author":{"gitId":"WJunHong"},"content":"    NULLHOUSETYPE(\"nullhouse\") {","lastModifiedDate":"2022-03-27"},{"lineNumber":58,"author":{"gitId":"chuashihong"},"content":"        @Override","lastModifiedDate":"2022-03-24"},{"lineNumber":59,"author":{"gitId":"chuashihong"},"content":"        public String toString() {","lastModifiedDate":"2022-03-24"},{"lineNumber":60,"author":{"gitId":"janald99"},"content":"            return \"-\";","lastModifiedDate":"2022-04-07"},{"lineNumber":61,"author":{"gitId":"chuashihong"},"content":"        }","lastModifiedDate":"2022-03-24"},{"lineNumber":62,"author":{"gitId":"WJunHong"},"content":"    };","lastModifiedDate":"2022-03-24"},{"lineNumber":63,"author":{"gitId":"WJunHong"},"content":"","lastModifiedDate":"2022-03-24"},{"lineNumber":64,"author":{"gitId":"WJunHong"},"content":"    public static final String MESSAGE_CONSTRAINTS \u003d \"Only the following house types are available: \"","lastModifiedDate":"2022-03-24"},{"lineNumber":65,"author":{"gitId":"janald99"},"content":"            + HouseType.UNSPECIFIED + \"\\n\"","lastModifiedDate":"2022-04-06"},{"lineNumber":66,"author":{"gitId":"janald99"},"content":"            + HouseType.APARTMENT + \"\\n\"","lastModifiedDate":"2022-04-06"},{"lineNumber":67,"author":{"gitId":"janald99"},"content":"            + HouseType.BUNGALOW + \"\\n\"","lastModifiedDate":"2022-04-06"},{"lineNumber":68,"author":{"gitId":"janald99"},"content":"            + HouseType.COLONIA + \"\\n\"","lastModifiedDate":"2022-04-06"},{"lineNumber":69,"author":{"gitId":"janald99"},"content":"            + HouseType.CONDOMINIUM + \"\\n\"","lastModifiedDate":"2022-04-06"},{"lineNumber":70,"author":{"gitId":"janald99"},"content":"            + HouseType.HDB_FLAT + \"\\n\"","lastModifiedDate":"2022-04-06"},{"lineNumber":71,"author":{"gitId":"janald99"},"content":"            + HouseType.MANSION + \"\\n\"","lastModifiedDate":"2022-04-06"},{"lineNumber":72,"author":{"gitId":"WJunHong"},"content":"            + HouseType.SEMIDETACHED;","lastModifiedDate":"2022-03-24"},{"lineNumber":73,"author":{"gitId":"WJunHong"},"content":"","lastModifiedDate":"2022-03-24"},{"lineNumber":74,"author":{"gitId":"WJunHong"},"content":"    /**","lastModifiedDate":"2022-03-24"},{"lineNumber":75,"author":{"gitId":"WJunHong"},"content":"     * A HashMap to map a possible string interpretation of the HouseType to the actual HouseType.","lastModifiedDate":"2022-03-24"},{"lineNumber":76,"author":{"gitId":"WJunHong"},"content":"     */","lastModifiedDate":"2022-03-24"},{"lineNumber":77,"author":{"gitId":"WJunHong"},"content":"    private final HashMap\u003cString, HouseType\u003e houseMappings \u003d new HashMap\u003c\u003e();","lastModifiedDate":"2022-03-24"},{"lineNumber":78,"author":{"gitId":"WJunHong"},"content":"","lastModifiedDate":"2022-03-24"},{"lineNumber":79,"author":{"gitId":"WJunHong"},"content":"    /**","lastModifiedDate":"2022-03-24"},{"lineNumber":80,"author":{"gitId":"WJunHong"},"content":"     * Constructor of the enum.","lastModifiedDate":"2022-03-24"},{"lineNumber":81,"author":{"gitId":"WJunHong"},"content":"     *","lastModifiedDate":"2022-03-24"},{"lineNumber":82,"author":{"gitId":"WJunHong"},"content":"     * @param houseTypes The set of possible HouseType interpretations.","lastModifiedDate":"2022-03-24"},{"lineNumber":83,"author":{"gitId":"WJunHong"},"content":"     */","lastModifiedDate":"2022-03-24"},{"lineNumber":84,"author":{"gitId":"WJunHong"},"content":"    HouseType(String... houseTypes) {","lastModifiedDate":"2022-03-24"},{"lineNumber":85,"author":{"gitId":"WJunHong"},"content":"        for (String s : houseTypes) {","lastModifiedDate":"2022-03-24"},{"lineNumber":86,"author":{"gitId":"WJunHong"},"content":"            houseMappings.put(s, this);","lastModifiedDate":"2022-03-24"},{"lineNumber":87,"author":{"gitId":"WJunHong"},"content":"        }","lastModifiedDate":"2022-03-24"},{"lineNumber":88,"author":{"gitId":"WJunHong"},"content":"    }","lastModifiedDate":"2022-03-24"},{"lineNumber":89,"author":{"gitId":"WJunHong"},"content":"","lastModifiedDate":"2022-03-24"},{"lineNumber":90,"author":{"gitId":"WJunHong"},"content":"    /**","lastModifiedDate":"2022-03-24"},{"lineNumber":91,"author":{"gitId":"WJunHong"},"content":"     * Checks if the given string matches any of the HouseTypes.","lastModifiedDate":"2022-03-24"},{"lineNumber":92,"author":{"gitId":"WJunHong"},"content":"     *","lastModifiedDate":"2022-03-24"},{"lineNumber":93,"author":{"gitId":"WJunHong"},"content":"     * @param house The string.","lastModifiedDate":"2022-03-24"},{"lineNumber":94,"author":{"gitId":"WJunHong"},"content":"     * @return True if it matches, False otherwise.","lastModifiedDate":"2022-03-24"},{"lineNumber":95,"author":{"gitId":"WJunHong"},"content":"     */","lastModifiedDate":"2022-03-24"},{"lineNumber":96,"author":{"gitId":"WJunHong"},"content":"    public static boolean isValidHouseType(String house) {","lastModifiedDate":"2022-03-24"},{"lineNumber":97,"author":{"gitId":"WJunHong"},"content":"        for (HouseType h : HouseType.values()) {","lastModifiedDate":"2022-03-24"},{"lineNumber":98,"author":{"gitId":"WJunHong"},"content":"            // Prevent people from adding a null house type when calling add-ptb or add-pts","lastModifiedDate":"2022-03-27"},{"lineNumber":99,"author":{"gitId":"WJunHong"},"content":"            if (h \u003d\u003d HouseType.NULLHOUSETYPE) {","lastModifiedDate":"2022-03-27"},{"lineNumber":100,"author":{"gitId":"WJunHong"},"content":"                continue;","lastModifiedDate":"2022-03-27"},{"lineNumber":101,"author":{"gitId":"WJunHong"},"content":"            }","lastModifiedDate":"2022-03-27"},{"lineNumber":102,"author":{"gitId":"WJunHong"},"content":"            HouseType houseType \u003d h.houseMappings.get(house.toLowerCase());","lastModifiedDate":"2022-03-24"},{"lineNumber":103,"author":{"gitId":"WJunHong"},"content":"            if (houseType !\u003d null) {","lastModifiedDate":"2022-03-24"},{"lineNumber":104,"author":{"gitId":"WJunHong"},"content":"                return true;","lastModifiedDate":"2022-03-24"},{"lineNumber":105,"author":{"gitId":"WJunHong"},"content":"            }","lastModifiedDate":"2022-03-24"},{"lineNumber":106,"author":{"gitId":"WJunHong"},"content":"        }","lastModifiedDate":"2022-03-24"},{"lineNumber":107,"author":{"gitId":"WJunHong"},"content":"        return false;","lastModifiedDate":"2022-03-24"},{"lineNumber":108,"author":{"gitId":"WJunHong"},"content":"    }","lastModifiedDate":"2022-03-24"},{"lineNumber":109,"author":{"gitId":"WJunHong"},"content":"","lastModifiedDate":"2022-03-24"},{"lineNumber":110,"author":{"gitId":"WJunHong"},"content":"    /**","lastModifiedDate":"2022-03-24"},{"lineNumber":111,"author":{"gitId":"WJunHong"},"content":"     * Retrieves the HouseType from a given string.","lastModifiedDate":"2022-03-24"},{"lineNumber":112,"author":{"gitId":"WJunHong"},"content":"     *","lastModifiedDate":"2022-03-24"},{"lineNumber":113,"author":{"gitId":"WJunHong"},"content":"     * @param house The string.","lastModifiedDate":"2022-03-24"},{"lineNumber":114,"author":{"gitId":"WJunHong"},"content":"     * @return A HouseType.","lastModifiedDate":"2022-03-24"},{"lineNumber":115,"author":{"gitId":"WJunHong"},"content":"     */","lastModifiedDate":"2022-03-24"},{"lineNumber":116,"author":{"gitId":"WJunHong"},"content":"    public static HouseType getHouseType(String house) {","lastModifiedDate":"2022-03-24"},{"lineNumber":117,"author":{"gitId":"WJunHong"},"content":"        for (HouseType h : HouseType.values()) {","lastModifiedDate":"2022-03-24"},{"lineNumber":118,"author":{"gitId":"WJunHong"},"content":"            // Prevent accessing NULLHOUSETYPE enum","lastModifiedDate":"2022-03-28"},{"lineNumber":119,"author":{"gitId":"WJunHong"},"content":"            if (h \u003d\u003d HouseType.NULLHOUSETYPE) {","lastModifiedDate":"2022-03-28"},{"lineNumber":120,"author":{"gitId":"WJunHong"},"content":"                continue;","lastModifiedDate":"2022-03-28"},{"lineNumber":121,"author":{"gitId":"WJunHong"},"content":"            }","lastModifiedDate":"2022-03-28"},{"lineNumber":122,"author":{"gitId":"WJunHong"},"content":"            HouseType houseType \u003d h.houseMappings.get(house.toLowerCase());","lastModifiedDate":"2022-03-24"},{"lineNumber":123,"author":{"gitId":"WJunHong"},"content":"            if (houseType !\u003d null) {","lastModifiedDate":"2022-03-24"},{"lineNumber":124,"author":{"gitId":"WJunHong"},"content":"                return houseType;","lastModifiedDate":"2022-03-24"},{"lineNumber":125,"author":{"gitId":"chuashihong"},"content":"            }","lastModifiedDate":"2022-03-24"},{"lineNumber":126,"author":{"gitId":"chuashihong"},"content":"        }","lastModifiedDate":"2022-03-24"},{"lineNumber":127,"author":{"gitId":"janald99"},"content":"        return HouseType.UNSPECIFIED;","lastModifiedDate":"2022-03-31"},{"lineNumber":128,"author":{"gitId":"WJunHong"},"content":"    }","lastModifiedDate":"2022-03-24"},{"lineNumber":129,"author":{"gitId":"WJunHong"},"content":"}","lastModifiedDate":"2022-03-24"},{"lineNumber":130,"author":{"gitId":"WJunHong"},"content":"","lastModifiedDate":"2022-03-24"},{"lineNumber":131,"author":{"gitId":"chuashihong"},"content":"","lastModifiedDate":"2022-03-24"}],"authorContributionMap":{"janald99":14,"WJunHong":70,"chuashihong":47}},{"path":"src/main/java/seedu/address/model/property/Location.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"janald99"},"content":"package seedu.address.model.property;","lastModifiedDate":"2022-03-16"},{"lineNumber":2,"author":{"gitId":"chuashihong"},"content":"","lastModifiedDate":"2022-03-15"},{"lineNumber":3,"author":{"gitId":"chuashihong"},"content":"import java.util.Objects;","lastModifiedDate":"2022-03-15"},{"lineNumber":4,"author":{"gitId":"chuashihong"},"content":"","lastModifiedDate":"2022-03-15"},{"lineNumber":5,"author":{"gitId":"chuashihong"},"content":"/**","lastModifiedDate":"2022-03-15"},{"lineNumber":6,"author":{"gitId":"janald99"},"content":" * Location is an area in Singapore in the map, for example Serangoon, Kovan, Kent Ridge, etc.","lastModifiedDate":"2022-03-16"},{"lineNumber":7,"author":{"gitId":"chuashihong"},"content":" */","lastModifiedDate":"2022-03-15"},{"lineNumber":8,"author":{"gitId":"chuashihong"},"content":"public class Location {","lastModifiedDate":"2022-03-15"},{"lineNumber":9,"author":{"gitId":"chuashihong"},"content":"","lastModifiedDate":"2022-03-15"},{"lineNumber":10,"author":{"gitId":"WJunHong"},"content":"    public static final String MESSAGE_CONSTRAINTS \u003d \"Location should not be empty\";","lastModifiedDate":"2022-03-24"},{"lineNumber":11,"author":{"gitId":"WJunHong"},"content":"","lastModifiedDate":"2022-03-24"},{"lineNumber":12,"author":{"gitId":"WJunHong"},"content":"    private String location;","lastModifiedDate":"2022-03-24"},{"lineNumber":13,"author":{"gitId":"WJunHong"},"content":"","lastModifiedDate":"2022-03-24"},{"lineNumber":14,"author":{"gitId":"janald99"},"content":"    public Location(String location) {","lastModifiedDate":"2022-03-16"},{"lineNumber":15,"author":{"gitId":"janald99"},"content":"        this.location \u003d location.toLowerCase();","lastModifiedDate":"2022-03-31"},{"lineNumber":16,"author":{"gitId":"chuashihong"},"content":"    }","lastModifiedDate":"2022-03-15"},{"lineNumber":17,"author":{"gitId":"chuashihong"},"content":"","lastModifiedDate":"2022-03-15"},{"lineNumber":18,"author":{"gitId":"chuashihong"},"content":"    @Override","lastModifiedDate":"2022-03-15"},{"lineNumber":19,"author":{"gitId":"janald99"},"content":"    public int hashCode() {","lastModifiedDate":"2022-03-16"},{"lineNumber":20,"author":{"gitId":"janald99"},"content":"        return Objects.hash(location);","lastModifiedDate":"2022-03-16"},{"lineNumber":21,"author":{"gitId":"chuashihong"},"content":"    }","lastModifiedDate":"2022-03-15"},{"lineNumber":22,"author":{"gitId":"chuashihong"},"content":"","lastModifiedDate":"2022-03-15"},{"lineNumber":23,"author":{"gitId":"chuashihong"},"content":"    @Override","lastModifiedDate":"2022-03-15"},{"lineNumber":24,"author":{"gitId":"janald99"},"content":"    public String toString() {","lastModifiedDate":"2022-03-16"},{"lineNumber":25,"author":{"gitId":"janald99"},"content":"        return location;","lastModifiedDate":"2022-03-16"},{"lineNumber":26,"author":{"gitId":"chuashihong"},"content":"    }","lastModifiedDate":"2022-03-15"},{"lineNumber":27,"author":{"gitId":"chuashihong"},"content":"","lastModifiedDate":"2022-03-15"},{"lineNumber":28,"author":{"gitId":"chuashihong"},"content":"    @Override","lastModifiedDate":"2022-03-15"},{"lineNumber":29,"author":{"gitId":"janald99"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2022-03-16"},{"lineNumber":30,"author":{"gitId":"janald99"},"content":"        return other \u003d\u003d this // short circuit if same object","lastModifiedDate":"2022-03-16"},{"lineNumber":31,"author":{"gitId":"janald99"},"content":"            || (other instanceof Location // instanceof handles nulls","lastModifiedDate":"2022-03-16"},{"lineNumber":32,"author":{"gitId":"janald99"},"content":"            \u0026\u0026 location.equals(((Location) other).location)); // state check","lastModifiedDate":"2022-03-16"},{"lineNumber":33,"author":{"gitId":"chuashihong"},"content":"    }","lastModifiedDate":"2022-03-15"},{"lineNumber":34,"author":{"gitId":"WJunHong"},"content":"","lastModifiedDate":"2022-03-24"},{"lineNumber":35,"author":{"gitId":"WJunHong"},"content":"    /**","lastModifiedDate":"2022-03-24"},{"lineNumber":36,"author":{"gitId":"WJunHong"},"content":"     * Checks if the location string is empty or not.","lastModifiedDate":"2022-03-24"},{"lineNumber":37,"author":{"gitId":"WJunHong"},"content":"     *","lastModifiedDate":"2022-03-24"},{"lineNumber":38,"author":{"gitId":"WJunHong"},"content":"     * @param location The string.","lastModifiedDate":"2022-03-24"},{"lineNumber":39,"author":{"gitId":"WJunHong"},"content":"     * @return False if string is empty, True otherwise.","lastModifiedDate":"2022-03-24"},{"lineNumber":40,"author":{"gitId":"WJunHong"},"content":"     */","lastModifiedDate":"2022-03-24"},{"lineNumber":41,"author":{"gitId":"WJunHong"},"content":"    public static boolean isValidLocation(String location) {","lastModifiedDate":"2022-03-24"},{"lineNumber":42,"author":{"gitId":"WJunHong"},"content":"        return !location.isEmpty();","lastModifiedDate":"2022-03-24"},{"lineNumber":43,"author":{"gitId":"WJunHong"},"content":"    }","lastModifiedDate":"2022-03-24"},{"lineNumber":44,"author":{"gitId":"chuashihong"},"content":"}","lastModifiedDate":"2022-03-15"}],"authorContributionMap":{"janald99":12,"WJunHong":14,"chuashihong":18}},{"path":"src/main/java/seedu/address/model/property/NullPropertyToBuy.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"WJunHong"},"content":"package seedu.address.model.property;","lastModifiedDate":"2022-03-24"},{"lineNumber":2,"author":{"gitId":"WJunHong"},"content":"","lastModifiedDate":"2022-03-24"},{"lineNumber":3,"author":{"gitId":"WJunHong"},"content":"/**","lastModifiedDate":"2022-03-24"},{"lineNumber":4,"author":{"gitId":"WJunHong"},"content":" * Represents a PropertyToBuy instance which has not been assigned any values yet.","lastModifiedDate":"2022-03-24"},{"lineNumber":5,"author":{"gitId":"WJunHong"},"content":" * Exists when the user first creates a Buyer, or if he decides to remove the property later on.","lastModifiedDate":"2022-03-24"},{"lineNumber":6,"author":{"gitId":"WJunHong"},"content":" */","lastModifiedDate":"2022-03-24"},{"lineNumber":7,"author":{"gitId":"WJunHong"},"content":"public class NullPropertyToBuy extends PropertyToBuy {","lastModifiedDate":"2022-03-24"},{"lineNumber":8,"author":{"gitId":"WJunHong"},"content":"","lastModifiedDate":"2022-03-24"},{"lineNumber":9,"author":{"gitId":"chuashihong"},"content":"    private static final NullPropertyToBuy nullPropertyToBuy \u003d","lastModifiedDate":"2022-03-24"},{"lineNumber":10,"author":{"gitId":"janald99"},"content":"            new NullPropertyToBuy(new House(HouseType.NULLHOUSETYPE, new Location(\"-\")),","lastModifiedDate":"2022-04-07"},{"lineNumber":11,"author":{"gitId":"chuashihong"},"content":"                    new PriceRange(0, 0));","lastModifiedDate":"2022-03-24"},{"lineNumber":12,"author":{"gitId":"chuashihong"},"content":"","lastModifiedDate":"2022-03-24"},{"lineNumber":13,"author":{"gitId":"chuashihong"},"content":"    public NullPropertyToBuy(House house, PriceRange priceRange) {","lastModifiedDate":"2022-03-24"},{"lineNumber":14,"author":{"gitId":"chuashihong"},"content":"        super(house, priceRange);","lastModifiedDate":"2022-03-24"},{"lineNumber":15,"author":{"gitId":"WJunHong"},"content":"    }","lastModifiedDate":"2022-03-24"},{"lineNumber":16,"author":{"gitId":"WJunHong"},"content":"","lastModifiedDate":"2022-03-24"},{"lineNumber":17,"author":{"gitId":"chuashihong"},"content":"    public static NullPropertyToBuy getNullPropertyToBuy() {","lastModifiedDate":"2022-03-24"},{"lineNumber":18,"author":{"gitId":"chuashihong"},"content":"        return nullPropertyToBuy;","lastModifiedDate":"2022-03-24"},{"lineNumber":19,"author":{"gitId":"chuashihong"},"content":"    }","lastModifiedDate":"2022-03-24"},{"lineNumber":20,"author":{"gitId":"chuashihong"},"content":"","lastModifiedDate":"2022-03-24"},{"lineNumber":21,"author":{"gitId":"chuashihong"},"content":"    @Override","lastModifiedDate":"2022-04-07"},{"lineNumber":22,"author":{"gitId":"chuashihong"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2022-04-07"},{"lineNumber":23,"author":{"gitId":"chuashihong"},"content":"        if (other instanceof NullPropertyToBuy) {","lastModifiedDate":"2022-04-07"},{"lineNumber":24,"author":{"gitId":"chuashihong"},"content":"            return true;","lastModifiedDate":"2022-04-07"},{"lineNumber":25,"author":{"gitId":"chuashihong"},"content":"        } else {","lastModifiedDate":"2022-04-07"},{"lineNumber":26,"author":{"gitId":"chuashihong"},"content":"            return false;","lastModifiedDate":"2022-04-07"},{"lineNumber":27,"author":{"gitId":"chuashihong"},"content":"        }","lastModifiedDate":"2022-04-07"},{"lineNumber":28,"author":{"gitId":"chuashihong"},"content":"    }","lastModifiedDate":"2022-04-07"},{"lineNumber":29,"author":{"gitId":"WJunHong"},"content":"}","lastModifiedDate":"2022-03-24"}],"authorContributionMap":{"janald99":1,"WJunHong":11,"chuashihong":17}},{"path":"src/main/java/seedu/address/model/property/NullPropertyToSell.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"chuashihong"},"content":"package seedu.address.model.property;","lastModifiedDate":"2022-03-26"},{"lineNumber":2,"author":{"gitId":"chuashihong"},"content":"","lastModifiedDate":"2022-03-26"},{"lineNumber":3,"author":{"gitId":"chuashihong"},"content":"/**","lastModifiedDate":"2022-03-26"},{"lineNumber":4,"author":{"gitId":"chuashihong"},"content":" * Represents a PropertyToBuy instance which has not been assigned any values yet.","lastModifiedDate":"2022-03-26"},{"lineNumber":5,"author":{"gitId":"chuashihong"},"content":" * Exists when the user first creates a Buyer, or if he decides to remove the property later on.","lastModifiedDate":"2022-03-26"},{"lineNumber":6,"author":{"gitId":"chuashihong"},"content":" */","lastModifiedDate":"2022-03-26"},{"lineNumber":7,"author":{"gitId":"chuashihong"},"content":"public class NullPropertyToSell extends PropertyToSell {","lastModifiedDate":"2022-03-26"},{"lineNumber":8,"author":{"gitId":"chuashihong"},"content":"","lastModifiedDate":"2022-03-26"},{"lineNumber":9,"author":{"gitId":"chuashihong"},"content":"    private static final NullPropertyToSell nullPropertyToSell \u003d","lastModifiedDate":"2022-03-26"},{"lineNumber":10,"author":{"gitId":"janald99"},"content":"            new NullPropertyToSell(new House(HouseType.NULLHOUSETYPE, new Location(\"-\")),","lastModifiedDate":"2022-04-07"},{"lineNumber":11,"author":{"gitId":"janald99"},"content":"                    new PriceRange(0, 0), new Address(\"-\"));","lastModifiedDate":"2022-04-07"},{"lineNumber":12,"author":{"gitId":"chuashihong"},"content":"","lastModifiedDate":"2022-03-26"},{"lineNumber":13,"author":{"gitId":"WJunHong"},"content":"    public NullPropertyToSell(House house, PriceRange priceRange, Address address) {","lastModifiedDate":"2022-03-27"},{"lineNumber":14,"author":{"gitId":"chuashihong"},"content":"        super(house, priceRange, address);","lastModifiedDate":"2022-03-26"},{"lineNumber":15,"author":{"gitId":"chuashihong"},"content":"    }","lastModifiedDate":"2022-03-26"},{"lineNumber":16,"author":{"gitId":"chuashihong"},"content":"","lastModifiedDate":"2022-03-26"},{"lineNumber":17,"author":{"gitId":"chuashihong"},"content":"    public static NullPropertyToSell getNullPropertyToSell() {","lastModifiedDate":"2022-03-26"},{"lineNumber":18,"author":{"gitId":"chuashihong"},"content":"        return nullPropertyToSell;","lastModifiedDate":"2022-03-26"},{"lineNumber":19,"author":{"gitId":"chuashihong"},"content":"    }","lastModifiedDate":"2022-03-26"},{"lineNumber":20,"author":{"gitId":"chuashihong"},"content":"","lastModifiedDate":"2022-03-26"},{"lineNumber":21,"author":{"gitId":"chuashihong"},"content":"    @Override","lastModifiedDate":"2022-04-07"},{"lineNumber":22,"author":{"gitId":"chuashihong"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2022-04-07"},{"lineNumber":23,"author":{"gitId":"chuashihong"},"content":"        if (other instanceof NullPropertyToSell) {","lastModifiedDate":"2022-04-07"},{"lineNumber":24,"author":{"gitId":"chuashihong"},"content":"            return true;","lastModifiedDate":"2022-04-07"},{"lineNumber":25,"author":{"gitId":"chuashihong"},"content":"        } else {","lastModifiedDate":"2022-04-07"},{"lineNumber":26,"author":{"gitId":"chuashihong"},"content":"            return false;","lastModifiedDate":"2022-04-07"},{"lineNumber":27,"author":{"gitId":"chuashihong"},"content":"        }","lastModifiedDate":"2022-04-07"},{"lineNumber":28,"author":{"gitId":"chuashihong"},"content":"    }","lastModifiedDate":"2022-04-07"},{"lineNumber":29,"author":{"gitId":"chuashihong"},"content":"}","lastModifiedDate":"2022-03-26"}],"authorContributionMap":{"janald99":2,"WJunHong":1,"chuashihong":26}},{"path":"src/main/java/seedu/address/model/property/PriceRange.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"janald99"},"content":"package seedu.address.model.property;","lastModifiedDate":"2022-03-16"},{"lineNumber":2,"author":{"gitId":"janald99"},"content":"","lastModifiedDate":"2022-03-16"},{"lineNumber":3,"author":{"gitId":"janald99"},"content":"","lastModifiedDate":"2022-03-23"},{"lineNumber":4,"author":{"gitId":"janald99"},"content":"import static seedu.address.commons.util.AppUtil.checkArgument;","lastModifiedDate":"2022-03-23"},{"lineNumber":5,"author":{"gitId":"chuashihong"},"content":"","lastModifiedDate":"2022-03-15"},{"lineNumber":6,"author":{"gitId":"chuashihong"},"content":"/**","lastModifiedDate":"2022-03-15"},{"lineNumber":7,"author":{"gitId":"janald99"},"content":" * Price range of a property, which includes the lower and upper bound that a buyer is willing to buy at or a seller","lastModifiedDate":"2022-03-16"},{"lineNumber":8,"author":{"gitId":"janald99"},"content":" * is willing to sell at.","lastModifiedDate":"2022-03-16"},{"lineNumber":9,"author":{"gitId":"janald99"},"content":" *","lastModifiedDate":"2022-03-16"},{"lineNumber":10,"author":{"gitId":"chuashihong"},"content":" */","lastModifiedDate":"2022-03-15"},{"lineNumber":11,"author":{"gitId":"chuashihong"},"content":"public class PriceRange {","lastModifiedDate":"2022-03-15"},{"lineNumber":12,"author":{"gitId":"janald99"},"content":"","lastModifiedDate":"2022-03-16"},{"lineNumber":13,"author":{"gitId":"janald99"},"content":"    public static final String MESSAGE_CONSTRAINTS \u003d","lastModifiedDate":"2022-03-23"},{"lineNumber":14,"author":{"gitId":"WJunHong"},"content":"        \"PriceRange: lower should be lower than upper(inclusive), all values should be non-negative integers\";","lastModifiedDate":"2022-04-06"},{"lineNumber":15,"author":{"gitId":"janald99"},"content":"","lastModifiedDate":"2022-03-23"},{"lineNumber":16,"author":{"gitId":"janald99"},"content":"    /**","lastModifiedDate":"2022-03-16"},{"lineNumber":17,"author":{"gitId":"janald99"},"content":"     * The lower and upper bounds are inclusive, meaning the lower bound includes the lower and higher value itself,","lastModifiedDate":"2022-03-16"},{"lineNumber":18,"author":{"gitId":"janald99"},"content":"     * respectively.","lastModifiedDate":"2022-03-16"},{"lineNumber":19,"author":{"gitId":"janald99"},"content":"     */","lastModifiedDate":"2022-03-16"},{"lineNumber":20,"author":{"gitId":"chuashihong"},"content":"    private final int lower;","lastModifiedDate":"2022-03-24"},{"lineNumber":21,"author":{"gitId":"chuashihong"},"content":"    private final int upper;","lastModifiedDate":"2022-03-24"},{"lineNumber":22,"author":{"gitId":"chuashihong"},"content":"","lastModifiedDate":"2022-03-15"},{"lineNumber":23,"author":{"gitId":"chuashihong"},"content":"    /**","lastModifiedDate":"2022-03-15"},{"lineNumber":24,"author":{"gitId":"chuashihong"},"content":"     * Constructor","lastModifiedDate":"2022-03-15"},{"lineNumber":25,"author":{"gitId":"janald99"},"content":"     * @param lower lower bound of the PriceRange, inclusive.","lastModifiedDate":"2022-03-16"},{"lineNumber":26,"author":{"gitId":"janald99"},"content":"     * @param upper upper bound of the PriceRange, inclusive.","lastModifiedDate":"2022-03-16"},{"lineNumber":27,"author":{"gitId":"chuashihong"},"content":"     */","lastModifiedDate":"2022-03-15"},{"lineNumber":28,"author":{"gitId":"janald99"},"content":"    public PriceRange(int lower, int upper) {","lastModifiedDate":"2022-03-23"},{"lineNumber":29,"author":{"gitId":"janald99"},"content":"        checkArgument(isValidPriceRange(lower, upper), MESSAGE_CONSTRAINTS);","lastModifiedDate":"2022-03-23"},{"lineNumber":30,"author":{"gitId":"janald99"},"content":"","lastModifiedDate":"2022-03-23"},{"lineNumber":31,"author":{"gitId":"chuashihong"},"content":"        this.lower \u003d lower;","lastModifiedDate":"2022-03-15"},{"lineNumber":32,"author":{"gitId":"chuashihong"},"content":"        this.upper \u003d upper;","lastModifiedDate":"2022-03-15"},{"lineNumber":33,"author":{"gitId":"chuashihong"},"content":"    }","lastModifiedDate":"2022-03-15"},{"lineNumber":34,"author":{"gitId":"chuashihong"},"content":"","lastModifiedDate":"2022-03-15"},{"lineNumber":35,"author":{"gitId":"WJunHong"},"content":"    /**","lastModifiedDate":"2022-03-24"},{"lineNumber":36,"author":{"gitId":"WJunHong"},"content":"     * Constructor of the class during parsing.","lastModifiedDate":"2022-03-24"},{"lineNumber":37,"author":{"gitId":"WJunHong"},"content":"     *","lastModifiedDate":"2022-03-24"},{"lineNumber":38,"author":{"gitId":"WJunHong"},"content":"     * @param priceRange The string to be converted to int price ranges.","lastModifiedDate":"2022-03-24"},{"lineNumber":39,"author":{"gitId":"WJunHong"},"content":"     */","lastModifiedDate":"2022-03-24"},{"lineNumber":40,"author":{"gitId":"WJunHong"},"content":"    public PriceRange(String priceRange) {","lastModifiedDate":"2022-03-24"},{"lineNumber":41,"author":{"gitId":"WJunHong"},"content":"        int[] bounds \u003d getValuesFromString(priceRange);","lastModifiedDate":"2022-03-24"},{"lineNumber":42,"author":{"gitId":"WJunHong"},"content":"        this.lower \u003d bounds[0];","lastModifiedDate":"2022-03-24"},{"lineNumber":43,"author":{"gitId":"WJunHong"},"content":"        this.upper \u003d bounds[1];","lastModifiedDate":"2022-03-24"},{"lineNumber":44,"author":{"gitId":"WJunHong"},"content":"    }","lastModifiedDate":"2022-03-24"},{"lineNumber":45,"author":{"gitId":"WJunHong"},"content":"","lastModifiedDate":"2022-03-24"},{"lineNumber":46,"author":{"gitId":"WJunHong"},"content":"    /**","lastModifiedDate":"2022-03-24"},{"lineNumber":47,"author":{"gitId":"WJunHong"},"content":"     * Retrieves the numerical values from the String priceRange.","lastModifiedDate":"2022-03-24"},{"lineNumber":48,"author":{"gitId":"WJunHong"},"content":"     *","lastModifiedDate":"2022-03-24"},{"lineNumber":49,"author":{"gitId":"WJunHong"},"content":"     * @param priceRange The string.","lastModifiedDate":"2022-03-24"},{"lineNumber":50,"author":{"gitId":"WJunHong"},"content":"     * @return An int[] containing lower and upper bounds.","lastModifiedDate":"2022-03-24"},{"lineNumber":51,"author":{"gitId":"WJunHong"},"content":"     */","lastModifiedDate":"2022-03-24"},{"lineNumber":52,"author":{"gitId":"WJunHong"},"content":"    private int[] getValuesFromString(String priceRange) {","lastModifiedDate":"2022-03-24"},{"lineNumber":53,"author":{"gitId":"WJunHong"},"content":"        String[] values \u003d priceRange.split(\",\");","lastModifiedDate":"2022-03-24"},{"lineNumber":54,"author":{"gitId":"WJunHong"},"content":"        values[0] \u003d values[0].trim();","lastModifiedDate":"2022-03-24"},{"lineNumber":55,"author":{"gitId":"WJunHong"},"content":"        values[1] \u003d values[1].trim();","lastModifiedDate":"2022-03-24"},{"lineNumber":56,"author":{"gitId":"WJunHong"},"content":"        int lower \u003d Integer.parseInt(values[0]);","lastModifiedDate":"2022-03-24"},{"lineNumber":57,"author":{"gitId":"WJunHong"},"content":"        int upper \u003d Integer.parseInt(values[1]);","lastModifiedDate":"2022-03-24"},{"lineNumber":58,"author":{"gitId":"WJunHong"},"content":"        return new int[] {lower, upper};","lastModifiedDate":"2022-03-24"},{"lineNumber":59,"author":{"gitId":"WJunHong"},"content":"    }","lastModifiedDate":"2022-03-24"},{"lineNumber":60,"author":{"gitId":"WJunHong"},"content":"","lastModifiedDate":"2022-03-24"},{"lineNumber":61,"author":{"gitId":"WJunHong"},"content":"    /**","lastModifiedDate":"2022-03-24"},{"lineNumber":62,"author":{"gitId":"WJunHong"},"content":"     * Checks if the given string can be converted to a numerical price range.","lastModifiedDate":"2022-03-24"},{"lineNumber":63,"author":{"gitId":"WJunHong"},"content":"     *","lastModifiedDate":"2022-03-24"},{"lineNumber":64,"author":{"gitId":"WJunHong"},"content":"     * @param priceRange The string.","lastModifiedDate":"2022-03-24"},{"lineNumber":65,"author":{"gitId":"WJunHong"},"content":"     * @return True if it can be converted, False otherwise.","lastModifiedDate":"2022-03-24"},{"lineNumber":66,"author":{"gitId":"WJunHong"},"content":"     */","lastModifiedDate":"2022-03-24"},{"lineNumber":67,"author":{"gitId":"WJunHong"},"content":"    public static boolean isValidPriceRange(String priceRange) {","lastModifiedDate":"2022-03-24"},{"lineNumber":68,"author":{"gitId":"WJunHong"},"content":"        try {","lastModifiedDate":"2022-03-24"},{"lineNumber":69,"author":{"gitId":"WJunHong"},"content":"            String[] numbers \u003d priceRange.split(\",\");","lastModifiedDate":"2022-03-24"},{"lineNumber":70,"author":{"gitId":"WJunHong"},"content":"            if (numbers.length !\u003d 2) {","lastModifiedDate":"2022-03-24"},{"lineNumber":71,"author":{"gitId":"WJunHong"},"content":"                return false;","lastModifiedDate":"2022-03-24"},{"lineNumber":72,"author":{"gitId":"WJunHong"},"content":"            }","lastModifiedDate":"2022-03-24"},{"lineNumber":73,"author":{"gitId":"WJunHong"},"content":"            numbers[0] \u003d numbers[0].trim();","lastModifiedDate":"2022-03-24"},{"lineNumber":74,"author":{"gitId":"WJunHong"},"content":"            numbers[1] \u003d numbers[1].trim();","lastModifiedDate":"2022-03-24"},{"lineNumber":75,"author":{"gitId":"WJunHong"},"content":"            int lower \u003d Integer.parseInt(numbers[0]);","lastModifiedDate":"2022-03-24"},{"lineNumber":76,"author":{"gitId":"WJunHong"},"content":"            int upper \u003d Integer.parseInt(numbers[1]);","lastModifiedDate":"2022-03-24"},{"lineNumber":77,"author":{"gitId":"WJunHong"},"content":"            return isValidPriceRange(lower, upper);","lastModifiedDate":"2022-03-24"},{"lineNumber":78,"author":{"gitId":"WJunHong"},"content":"        } catch (NumberFormatException e) {","lastModifiedDate":"2022-03-24"},{"lineNumber":79,"author":{"gitId":"WJunHong"},"content":"            return false;","lastModifiedDate":"2022-03-24"},{"lineNumber":80,"author":{"gitId":"WJunHong"},"content":"        }","lastModifiedDate":"2022-03-24"},{"lineNumber":81,"author":{"gitId":"WJunHong"},"content":"    }","lastModifiedDate":"2022-03-24"},{"lineNumber":82,"author":{"gitId":"WJunHong"},"content":"","lastModifiedDate":"2022-03-24"},{"lineNumber":83,"author":{"gitId":"janald99"},"content":"    /**","lastModifiedDate":"2022-03-23"},{"lineNumber":84,"author":{"gitId":"janald99"},"content":"     * Checks if a Price Range, given a lower and upper bound, is valid.","lastModifiedDate":"2022-03-23"},{"lineNumber":85,"author":{"gitId":"janald99"},"content":"     * @param lower lower bound of range.","lastModifiedDate":"2022-03-23"},{"lineNumber":86,"author":{"gitId":"janald99"},"content":"     * @param upper upper bound of range.","lastModifiedDate":"2022-03-23"},{"lineNumber":87,"author":{"gitId":"janald99"},"content":"     * @return True if PriceRange is valid, False otherwise.","lastModifiedDate":"2022-03-23"},{"lineNumber":88,"author":{"gitId":"janald99"},"content":"     */","lastModifiedDate":"2022-03-23"},{"lineNumber":89,"author":{"gitId":"janald99"},"content":"    public static boolean isValidPriceRange(int lower, int upper) {","lastModifiedDate":"2022-03-23"},{"lineNumber":90,"author":{"gitId":"WJunHong"},"content":"        //valid as long as positive and lower is lower than upper","lastModifiedDate":"2022-03-24"},{"lineNumber":91,"author":{"gitId":"WJunHong"},"content":"        return lower \u003e\u003d 0 \u0026\u0026 upper \u003e\u003d 0 \u0026\u0026 lower \u003c\u003d upper;","lastModifiedDate":"2022-03-24"},{"lineNumber":92,"author":{"gitId":"janald99"},"content":"    }","lastModifiedDate":"2022-03-23"},{"lineNumber":93,"author":{"gitId":"janald99"},"content":"","lastModifiedDate":"2022-03-23"},{"lineNumber":94,"author":{"gitId":"janald99"},"content":"    public int getLower() {","lastModifiedDate":"2022-03-16"},{"lineNumber":95,"author":{"gitId":"janald99"},"content":"        return this.lower;","lastModifiedDate":"2022-03-16"},{"lineNumber":96,"author":{"gitId":"janald99"},"content":"    }","lastModifiedDate":"2022-03-16"},{"lineNumber":97,"author":{"gitId":"janald99"},"content":"","lastModifiedDate":"2022-03-16"},{"lineNumber":98,"author":{"gitId":"chuashihong"},"content":"    public String getLowerToString() {","lastModifiedDate":"2022-03-24"},{"lineNumber":99,"author":{"gitId":"chuashihong"},"content":"        return Integer.toString(this.lower);","lastModifiedDate":"2022-03-24"},{"lineNumber":100,"author":{"gitId":"chuashihong"},"content":"    }","lastModifiedDate":"2022-03-24"},{"lineNumber":101,"author":{"gitId":"chuashihong"},"content":"","lastModifiedDate":"2022-03-24"},{"lineNumber":102,"author":{"gitId":"janald99"},"content":"    public int getUpper() {","lastModifiedDate":"2022-03-16"},{"lineNumber":103,"author":{"gitId":"janald99"},"content":"        return this.upper;","lastModifiedDate":"2022-03-16"},{"lineNumber":104,"author":{"gitId":"janald99"},"content":"    }","lastModifiedDate":"2022-03-16"},{"lineNumber":105,"author":{"gitId":"janald99"},"content":"","lastModifiedDate":"2022-03-16"},{"lineNumber":106,"author":{"gitId":"chuashihong"},"content":"    public String getUpperToString() {","lastModifiedDate":"2022-03-24"},{"lineNumber":107,"author":{"gitId":"chuashihong"},"content":"        return Integer.toString(this.upper);","lastModifiedDate":"2022-03-24"},{"lineNumber":108,"author":{"gitId":"chuashihong"},"content":"    }","lastModifiedDate":"2022-03-24"},{"lineNumber":109,"author":{"gitId":"chuashihong"},"content":"","lastModifiedDate":"2022-03-24"},{"lineNumber":110,"author":{"gitId":"janald99"},"content":"    /**","lastModifiedDate":"2022-03-16"},{"lineNumber":111,"author":{"gitId":"janald99"},"content":"     * Checks whether a value is within a PriceRange.","lastModifiedDate":"2022-03-16"},{"lineNumber":112,"author":{"gitId":"janald99"},"content":"     *","lastModifiedDate":"2022-03-16"},{"lineNumber":113,"author":{"gitId":"janald99"},"content":"     * @param value value to be checked if within the price range.","lastModifiedDate":"2022-03-16"},{"lineNumber":114,"author":{"gitId":"janald99"},"content":"     * @param priceRange the priceRange.","lastModifiedDate":"2022-03-16"},{"lineNumber":115,"author":{"gitId":"janald99"},"content":"     * @return True if the value falls within the PriceRange, false otherwise.","lastModifiedDate":"2022-03-16"},{"lineNumber":116,"author":{"gitId":"chuashihong"},"content":"     */","lastModifiedDate":"2022-03-15"},{"lineNumber":117,"author":{"gitId":"janald99"},"content":"    public static boolean isWithinRange(int value, PriceRange priceRange) {","lastModifiedDate":"2022-03-16"},{"lineNumber":118,"author":{"gitId":"janald99"},"content":"        return value \u003e\u003d priceRange.lower \u0026\u0026 value \u003c\u003d priceRange.upper;","lastModifiedDate":"2022-03-16"},{"lineNumber":119,"author":{"gitId":"janald99"},"content":"    }","lastModifiedDate":"2022-03-16"},{"lineNumber":120,"author":{"gitId":"janald99"},"content":"","lastModifiedDate":"2022-03-16"},{"lineNumber":121,"author":{"gitId":"janald99"},"content":"    /**","lastModifiedDate":"2022-03-16"},{"lineNumber":122,"author":{"gitId":"janald99"},"content":"     * Checks whether a Price Range is within another PriceRange, meaning whether any value in the toBuy priceRange","lastModifiedDate":"2022-03-16"},{"lineNumber":123,"author":{"gitId":"janald99"},"content":"     * is within the toSell PriceRange.","lastModifiedDate":"2022-03-16"},{"lineNumber":124,"author":{"gitId":"janald99"},"content":"     * @param buyRange the priceRange a buyer is willing to buy a Property for.","lastModifiedDate":"2022-03-16"},{"lineNumber":125,"author":{"gitId":"janald99"},"content":"     * @param sellRange the priceRange a seller is willing to sell a Property for.","lastModifiedDate":"2022-03-16"},{"lineNumber":126,"author":{"gitId":"chuashihong"},"content":"     * @return True if the price in the buyRange can match one in the sellRange, false otherwise.","lastModifiedDate":"2022-03-24"},{"lineNumber":127,"author":{"gitId":"janald99"},"content":"     */","lastModifiedDate":"2022-03-16"},{"lineNumber":128,"author":{"gitId":"janald99"},"content":"    public static boolean canMatchPrice(PriceRange buyRange, PriceRange sellRange) {","lastModifiedDate":"2022-03-16"},{"lineNumber":129,"author":{"gitId":"janald99"},"content":"        // [50, 100] , [99, 200] should match.","lastModifiedDate":"2022-03-16"},{"lineNumber":130,"author":{"gitId":"janald99"},"content":"        // [100, 200] . [40, 99] should NOT match.","lastModifiedDate":"2022-03-16"},{"lineNumber":131,"author":{"gitId":"janald99"},"content":"        // [50, 60], [10, 100] should match.","lastModifiedDate":"2022-03-16"},{"lineNumber":132,"author":{"gitId":"janald99"},"content":"        // [10,100], [20, 40] should match, and vice versa.","lastModifiedDate":"2022-03-27"},{"lineNumber":133,"author":{"gitId":"janald99"},"content":"        return isWithinRange(buyRange.getLower(), sellRange) || isWithinRange(buyRange.getUpper(), sellRange)","lastModifiedDate":"2022-03-27"},{"lineNumber":134,"author":{"gitId":"janald99"},"content":"            || isWithinRange(sellRange.getLower(), buyRange) || isWithinRange(sellRange.getLower(), buyRange);","lastModifiedDate":"2022-03-27"},{"lineNumber":135,"author":{"gitId":"chuashihong"},"content":"    }","lastModifiedDate":"2022-03-15"},{"lineNumber":136,"author":{"gitId":"chuashihong"},"content":"","lastModifiedDate":"2022-03-15"},{"lineNumber":137,"author":{"gitId":"chuashihong"},"content":"    @Override","lastModifiedDate":"2022-03-15"},{"lineNumber":138,"author":{"gitId":"chuashihong"},"content":"    public String toString() {","lastModifiedDate":"2022-03-15"},{"lineNumber":139,"author":{"gitId":"chuashihong"},"content":"        return \"[\"","lastModifiedDate":"2022-03-15"},{"lineNumber":140,"author":{"gitId":"chuashihong"},"content":"                + lower","lastModifiedDate":"2022-03-15"},{"lineNumber":141,"author":{"gitId":"chuashihong"},"content":"                + \u0027,\u0027","lastModifiedDate":"2022-03-15"},{"lineNumber":142,"author":{"gitId":"chuashihong"},"content":"                + upper","lastModifiedDate":"2022-03-15"},{"lineNumber":143,"author":{"gitId":"chuashihong"},"content":"                + \u0027]\u0027;","lastModifiedDate":"2022-03-15"},{"lineNumber":144,"author":{"gitId":"chuashihong"},"content":"    }","lastModifiedDate":"2022-03-15"},{"lineNumber":145,"author":{"gitId":"janald99"},"content":"","lastModifiedDate":"2022-03-16"},{"lineNumber":146,"author":{"gitId":"janald99"},"content":"    @Override","lastModifiedDate":"2022-03-16"},{"lineNumber":147,"author":{"gitId":"janald99"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2022-03-16"},{"lineNumber":148,"author":{"gitId":"janald99"},"content":"        return other \u003d\u003d this // short circuit if same object","lastModifiedDate":"2022-03-16"},{"lineNumber":149,"author":{"gitId":"janald99"},"content":"            || (other instanceof PriceRange // instanceof handles nulls","lastModifiedDate":"2022-03-16"},{"lineNumber":150,"author":{"gitId":"janald99"},"content":"            \u0026\u0026 lower \u003d\u003d ((PriceRange) other).lower","lastModifiedDate":"2022-03-16"},{"lineNumber":151,"author":{"gitId":"janald99"},"content":"            \u0026\u0026 upper \u003d\u003d ((PriceRange) other).upper); // state check","lastModifiedDate":"2022-03-16"},{"lineNumber":152,"author":{"gitId":"janald99"},"content":"    }","lastModifiedDate":"2022-03-16"},{"lineNumber":153,"author":{"gitId":"chuashihong"},"content":"}","lastModifiedDate":"2022-03-15"}],"authorContributionMap":{"janald99":67,"WJunHong":51,"chuashihong":35}},{"path":"src/main/java/seedu/address/model/property/PropertyToBuy.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"janald99"},"content":"package seedu.address.model.property;","lastModifiedDate":"2022-03-16"},{"lineNumber":2,"author":{"gitId":"janald99"},"content":"","lastModifiedDate":"2022-03-16"},{"lineNumber":3,"author":{"gitId":"janald99"},"content":"","lastModifiedDate":"2022-03-16"},{"lineNumber":4,"author":{"gitId":"janald99"},"content":"/**","lastModifiedDate":"2022-03-16"},{"lineNumber":5,"author":{"gitId":"janald99"},"content":" * A demand indicating the property a buyer wants to buy a house for, and the PriceRange it is willing to buy for.","lastModifiedDate":"2022-03-16"},{"lineNumber":6,"author":{"gitId":"janald99"},"content":" * Note that a buyer is not looking for a specific address, unlike the seller who knows the specific address of the","lastModifiedDate":"2022-03-16"},{"lineNumber":7,"author":{"gitId":"janald99"},"content":" * house it is selling.","lastModifiedDate":"2022-03-16"},{"lineNumber":8,"author":{"gitId":"janald99"},"content":" */","lastModifiedDate":"2022-03-16"},{"lineNumber":9,"author":{"gitId":"janald99"},"content":"public class PropertyToBuy {","lastModifiedDate":"2022-03-16"},{"lineNumber":10,"author":{"gitId":"janald99"},"content":"","lastModifiedDate":"2022-03-16"},{"lineNumber":11,"author":{"gitId":"janald99"},"content":"    /**","lastModifiedDate":"2022-03-16"},{"lineNumber":12,"author":{"gitId":"janald99"},"content":"     * The House a buyer is interested in buying.","lastModifiedDate":"2022-03-16"},{"lineNumber":13,"author":{"gitId":"janald99"},"content":"     */","lastModifiedDate":"2022-03-16"},{"lineNumber":14,"author":{"gitId":"janald99"},"content":"    private House house;","lastModifiedDate":"2022-03-16"},{"lineNumber":15,"author":{"gitId":"janald99"},"content":"","lastModifiedDate":"2022-03-16"},{"lineNumber":16,"author":{"gitId":"janald99"},"content":"    /**","lastModifiedDate":"2022-03-16"},{"lineNumber":17,"author":{"gitId":"janald99"},"content":"     * The PriceRange a buyer is willing to pay to buy the House.","lastModifiedDate":"2022-03-16"},{"lineNumber":18,"author":{"gitId":"janald99"},"content":"     */","lastModifiedDate":"2022-03-16"},{"lineNumber":19,"author":{"gitId":"chuashihong"},"content":"    private PriceRange priceRange;","lastModifiedDate":"2022-03-24"},{"lineNumber":20,"author":{"gitId":"janald99"},"content":"","lastModifiedDate":"2022-03-16"},{"lineNumber":21,"author":{"gitId":"janald99"},"content":"    /**","lastModifiedDate":"2022-03-16"},{"lineNumber":22,"author":{"gitId":"janald99"},"content":"     * Constructs a PropertyToBuy of the buyer.","lastModifiedDate":"2022-03-16"},{"lineNumber":23,"author":{"gitId":"janald99"},"content":"     * @param house the house that a buyer wants to buy.","lastModifiedDate":"2022-03-16"},{"lineNumber":24,"author":{"gitId":"chuashihong"},"content":"     * @param priceRange the PriceRange that a buyer is willing to pay.","lastModifiedDate":"2022-03-24"},{"lineNumber":25,"author":{"gitId":"janald99"},"content":"     */","lastModifiedDate":"2022-03-16"},{"lineNumber":26,"author":{"gitId":"chuashihong"},"content":"    public PropertyToBuy(House house, PriceRange priceRange) {","lastModifiedDate":"2022-03-24"},{"lineNumber":27,"author":{"gitId":"janald99"},"content":"        this.house \u003d house;","lastModifiedDate":"2022-03-16"},{"lineNumber":28,"author":{"gitId":"chuashihong"},"content":"        this.priceRange \u003d priceRange;","lastModifiedDate":"2022-03-24"},{"lineNumber":29,"author":{"gitId":"janald99"},"content":"    }","lastModifiedDate":"2022-03-16"},{"lineNumber":30,"author":{"gitId":"janald99"},"content":"","lastModifiedDate":"2022-03-16"},{"lineNumber":31,"author":{"gitId":"cwnm"},"content":"    /**","lastModifiedDate":"2022-03-30"},{"lineNumber":32,"author":{"gitId":"cwnm"},"content":"     * Update the PropertyToBuy information by calling this method, this method will be used","lastModifiedDate":"2022-03-30"},{"lineNumber":33,"author":{"gitId":"cwnm"},"content":"     * in {@code EditBuyerCommand} class.","lastModifiedDate":"2022-03-30"},{"lineNumber":34,"author":{"gitId":"cwnm"},"content":"     * @param houseType","lastModifiedDate":"2022-03-30"},{"lineNumber":35,"author":{"gitId":"cwnm"},"content":"     * @param location","lastModifiedDate":"2022-03-30"},{"lineNumber":36,"author":{"gitId":"cwnm"},"content":"     * @param priceRange","lastModifiedDate":"2022-03-30"},{"lineNumber":37,"author":{"gitId":"cwnm"},"content":"     * @return a new updated PropertyToBuy","lastModifiedDate":"2022-03-30"},{"lineNumber":38,"author":{"gitId":"cwnm"},"content":"     */","lastModifiedDate":"2022-03-30"},{"lineNumber":39,"author":{"gitId":"cwnm"},"content":"    public PropertyToBuy updatePropertyToBuy(HouseType houseType, Location location,","lastModifiedDate":"2022-03-30"},{"lineNumber":40,"author":{"gitId":"cwnm"},"content":"                                               PriceRange priceRange) {","lastModifiedDate":"2022-03-30"},{"lineNumber":41,"author":{"gitId":"cwnm"},"content":"        //Todo: need to implement updateHouseType for House class","lastModifiedDate":"2022-03-30"},{"lineNumber":42,"author":{"gitId":"cwnm"},"content":"        //this.house.updateHouseType(houseType);","lastModifiedDate":"2022-03-30"},{"lineNumber":43,"author":{"gitId":"cwnm"},"content":"        //this.house.updateLocation(location);","lastModifiedDate":"2022-03-30"},{"lineNumber":44,"author":{"gitId":"janald99"},"content":"        this.house \u003d new House(houseType, location);","lastModifiedDate":"2022-03-31"},{"lineNumber":45,"author":{"gitId":"cwnm"},"content":"        this.priceRange \u003d priceRange;","lastModifiedDate":"2022-03-30"},{"lineNumber":46,"author":{"gitId":"cwnm"},"content":"        return this;","lastModifiedDate":"2022-03-30"},{"lineNumber":47,"author":{"gitId":"cwnm"},"content":"    }","lastModifiedDate":"2022-03-30"},{"lineNumber":48,"author":{"gitId":"cwnm"},"content":"","lastModifiedDate":"2022-03-30"},{"lineNumber":49,"author":{"gitId":"janald99"},"content":"    public House getHouse() {","lastModifiedDate":"2022-03-16"},{"lineNumber":50,"author":{"gitId":"janald99"},"content":"        return this.house;","lastModifiedDate":"2022-03-16"},{"lineNumber":51,"author":{"gitId":"janald99"},"content":"    }","lastModifiedDate":"2022-03-16"},{"lineNumber":52,"author":{"gitId":"janald99"},"content":"","lastModifiedDate":"2022-03-16"},{"lineNumber":53,"author":{"gitId":"chuashihong"},"content":"    public PriceRange getPriceRange() {","lastModifiedDate":"2022-03-24"},{"lineNumber":54,"author":{"gitId":"chuashihong"},"content":"        return this.priceRange;","lastModifiedDate":"2022-03-24"},{"lineNumber":55,"author":{"gitId":"janald99"},"content":"    }","lastModifiedDate":"2022-03-16"},{"lineNumber":56,"author":{"gitId":"janald99"},"content":"","lastModifiedDate":"2022-03-16"},{"lineNumber":57,"author":{"gitId":"janald99"},"content":"    @Override","lastModifiedDate":"2022-03-16"},{"lineNumber":58,"author":{"gitId":"janald99"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2022-03-16"},{"lineNumber":59,"author":{"gitId":"janald99"},"content":"        return other \u003d\u003d this // short circuit if same object","lastModifiedDate":"2022-03-16"},{"lineNumber":60,"author":{"gitId":"janald99"},"content":"            || (other instanceof PropertyToBuy // instanceof handles nulls","lastModifiedDate":"2022-03-16"},{"lineNumber":61,"author":{"gitId":"janald99"},"content":"            \u0026\u0026 house.equals(((PropertyToBuy) other).house)","lastModifiedDate":"2022-03-16"},{"lineNumber":62,"author":{"gitId":"chuashihong"},"content":"            \u0026\u0026 priceRange.equals(((PropertyToBuy) other).priceRange)); // state check","lastModifiedDate":"2022-03-24"},{"lineNumber":63,"author":{"gitId":"janald99"},"content":"    }","lastModifiedDate":"2022-03-16"},{"lineNumber":64,"author":{"gitId":"janald99"},"content":"","lastModifiedDate":"2022-04-07"},{"lineNumber":65,"author":{"gitId":"janald99"},"content":"    @Override","lastModifiedDate":"2022-04-07"},{"lineNumber":66,"author":{"gitId":"janald99"},"content":"    public String toString() {","lastModifiedDate":"2022-04-07"},{"lineNumber":67,"author":{"gitId":"janald99"},"content":"        return getHouse().toString() + \"\\n\" + \"Price Range: \" + getPriceRange().toString();","lastModifiedDate":"2022-04-07"},{"lineNumber":68,"author":{"gitId":"janald99"},"content":"    }","lastModifiedDate":"2022-04-07"},{"lineNumber":69,"author":{"gitId":"janald99"},"content":"}","lastModifiedDate":"2022-03-16"}],"authorContributionMap":{"janald99":45,"cwnm":17,"chuashihong":7}},{"path":"src/main/java/seedu/address/model/property/PropertyToSell.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"janald99"},"content":"package seedu.address.model.property;","lastModifiedDate":"2022-03-16"},{"lineNumber":2,"author":{"gitId":"janald99"},"content":"","lastModifiedDate":"2022-03-16"},{"lineNumber":3,"author":{"gitId":"janald99"},"content":"/**","lastModifiedDate":"2022-03-16"},{"lineNumber":4,"author":{"gitId":"janald99"},"content":" * A demand indicating the property a seller wants to sell a house for, and the PriceRange it is willing to sell for.","lastModifiedDate":"2022-03-16"},{"lineNumber":5,"author":{"gitId":"janald99"},"content":" */","lastModifiedDate":"2022-03-16"},{"lineNumber":6,"author":{"gitId":"janald99"},"content":"public class PropertyToSell {","lastModifiedDate":"2022-03-16"},{"lineNumber":7,"author":{"gitId":"janald99"},"content":"","lastModifiedDate":"2022-03-16"},{"lineNumber":8,"author":{"gitId":"janald99"},"content":"    /**","lastModifiedDate":"2022-03-16"},{"lineNumber":9,"author":{"gitId":"janald99"},"content":"     * The House a seller is selling.","lastModifiedDate":"2022-03-16"},{"lineNumber":10,"author":{"gitId":"janald99"},"content":"     */","lastModifiedDate":"2022-03-16"},{"lineNumber":11,"author":{"gitId":"janald99"},"content":"    private House house;","lastModifiedDate":"2022-03-16"},{"lineNumber":12,"author":{"gitId":"janald99"},"content":"","lastModifiedDate":"2022-03-16"},{"lineNumber":13,"author":{"gitId":"janald99"},"content":"    /**","lastModifiedDate":"2022-03-16"},{"lineNumber":14,"author":{"gitId":"janald99"},"content":"     * The PriceRange a buyer is willing to receive to sell the House.","lastModifiedDate":"2022-03-16"},{"lineNumber":15,"author":{"gitId":"janald99"},"content":"     */","lastModifiedDate":"2022-03-16"},{"lineNumber":16,"author":{"gitId":"chuashihong"},"content":"    private PriceRange priceRange;","lastModifiedDate":"2022-03-26"},{"lineNumber":17,"author":{"gitId":"janald99"},"content":"","lastModifiedDate":"2022-03-16"},{"lineNumber":18,"author":{"gitId":"janald99"},"content":"    /**","lastModifiedDate":"2022-03-16"},{"lineNumber":19,"author":{"gitId":"janald99"},"content":"     * The exact address of this house.","lastModifiedDate":"2022-03-16"},{"lineNumber":20,"author":{"gitId":"janald99"},"content":"     */","lastModifiedDate":"2022-03-16"},{"lineNumber":21,"author":{"gitId":"WJunHong"},"content":"    private Address address;","lastModifiedDate":"2022-03-27"},{"lineNumber":22,"author":{"gitId":"janald99"},"content":"","lastModifiedDate":"2022-03-16"},{"lineNumber":23,"author":{"gitId":"janald99"},"content":"    /**","lastModifiedDate":"2022-03-16"},{"lineNumber":24,"author":{"gitId":"janald99"},"content":"     * Constructs a PropertyToSell for the seller.","lastModifiedDate":"2022-03-16"},{"lineNumber":25,"author":{"gitId":"janald99"},"content":"     * @param house the house that the seller is selling.","lastModifiedDate":"2022-03-16"},{"lineNumber":26,"author":{"gitId":"chuashihong"},"content":"     * @param priceRange the PriceRange that a seller is willing to sell the property for.","lastModifiedDate":"2022-03-26"},{"lineNumber":27,"author":{"gitId":"janald99"},"content":"     * @param address the exact address of the property the seller is selling.","lastModifiedDate":"2022-03-16"},{"lineNumber":28,"author":{"gitId":"janald99"},"content":"     */","lastModifiedDate":"2022-03-16"},{"lineNumber":29,"author":{"gitId":"WJunHong"},"content":"    public PropertyToSell(House house, PriceRange priceRange, Address address) {","lastModifiedDate":"2022-03-27"},{"lineNumber":30,"author":{"gitId":"janald99"},"content":"        this.house \u003d house;","lastModifiedDate":"2022-03-16"},{"lineNumber":31,"author":{"gitId":"chuashihong"},"content":"        this.priceRange \u003d priceRange;","lastModifiedDate":"2022-03-26"},{"lineNumber":32,"author":{"gitId":"janald99"},"content":"        this.address \u003d address;","lastModifiedDate":"2022-03-16"},{"lineNumber":33,"author":{"gitId":"janald99"},"content":"    }","lastModifiedDate":"2022-03-16"},{"lineNumber":34,"author":{"gitId":"janald99"},"content":"","lastModifiedDate":"2022-03-16"},{"lineNumber":35,"author":{"gitId":"chuashihong"},"content":"    /**","lastModifiedDate":"2022-03-28"},{"lineNumber":36,"author":{"gitId":"chuashihong"},"content":"     * Update the PropertyToSell information by calling this method, this method will be used","lastModifiedDate":"2022-03-28"},{"lineNumber":37,"author":{"gitId":"chuashihong"},"content":"     * in {@code EditSellerCommand} class.","lastModifiedDate":"2022-03-28"},{"lineNumber":38,"author":{"gitId":"chuashihong"},"content":"     * @param houseType","lastModifiedDate":"2022-03-28"},{"lineNumber":39,"author":{"gitId":"chuashihong"},"content":"     * @param location","lastModifiedDate":"2022-03-28"},{"lineNumber":40,"author":{"gitId":"chuashihong"},"content":"     * @param priceRange","lastModifiedDate":"2022-03-28"},{"lineNumber":41,"author":{"gitId":"chuashihong"},"content":"     * @param address","lastModifiedDate":"2022-03-28"},{"lineNumber":42,"author":{"gitId":"chuashihong"},"content":"     * @return a new updated PropertyToSell","lastModifiedDate":"2022-03-28"},{"lineNumber":43,"author":{"gitId":"chuashihong"},"content":"     */","lastModifiedDate":"2022-03-28"},{"lineNumber":44,"author":{"gitId":"chuashihong"},"content":"    public PropertyToSell updatePropertyToSell(HouseType houseType, Location location,","lastModifiedDate":"2022-03-28"},{"lineNumber":45,"author":{"gitId":"chuashihong"},"content":"                                               PriceRange priceRange, Address address) {","lastModifiedDate":"2022-03-28"},{"lineNumber":46,"author":{"gitId":"chuashihong"},"content":"        //Todo: need to implement updateHouseType for House class","lastModifiedDate":"2022-03-28"},{"lineNumber":47,"author":{"gitId":"chuashihong"},"content":"        //this.house.updateHouseType(houseType);","lastModifiedDate":"2022-03-28"},{"lineNumber":48,"author":{"gitId":"chuashihong"},"content":"        //this.house.updateLocation(location);","lastModifiedDate":"2022-03-28"},{"lineNumber":49,"author":{"gitId":"janald99"},"content":"        this.house \u003d new House(houseType, location);","lastModifiedDate":"2022-03-31"},{"lineNumber":50,"author":{"gitId":"chuashihong"},"content":"        this.priceRange \u003d priceRange;","lastModifiedDate":"2022-03-28"},{"lineNumber":51,"author":{"gitId":"chuashihong"},"content":"        this.address \u003d address;","lastModifiedDate":"2022-03-28"},{"lineNumber":52,"author":{"gitId":"chuashihong"},"content":"        return this;","lastModifiedDate":"2022-03-28"},{"lineNumber":53,"author":{"gitId":"chuashihong"},"content":"    }","lastModifiedDate":"2022-03-28"},{"lineNumber":54,"author":{"gitId":"chuashihong"},"content":"","lastModifiedDate":"2022-03-28"},{"lineNumber":55,"author":{"gitId":"janald99"},"content":"    public House getHouse() {","lastModifiedDate":"2022-03-16"},{"lineNumber":56,"author":{"gitId":"janald99"},"content":"        return this.house;","lastModifiedDate":"2022-03-16"},{"lineNumber":57,"author":{"gitId":"janald99"},"content":"    }","lastModifiedDate":"2022-03-16"},{"lineNumber":58,"author":{"gitId":"janald99"},"content":"","lastModifiedDate":"2022-03-16"},{"lineNumber":59,"author":{"gitId":"chuashihong"},"content":"    public PriceRange getPriceRange() {","lastModifiedDate":"2022-03-26"},{"lineNumber":60,"author":{"gitId":"chuashihong"},"content":"        return this.priceRange;","lastModifiedDate":"2022-03-26"},{"lineNumber":61,"author":{"gitId":"janald99"},"content":"    }","lastModifiedDate":"2022-03-16"},{"lineNumber":62,"author":{"gitId":"janald99"},"content":"","lastModifiedDate":"2022-03-16"},{"lineNumber":63,"author":{"gitId":"WJunHong"},"content":"    public Address getAddress() {","lastModifiedDate":"2022-03-27"},{"lineNumber":64,"author":{"gitId":"janald99"},"content":"        return this.address;","lastModifiedDate":"2022-03-16"},{"lineNumber":65,"author":{"gitId":"janald99"},"content":"    }","lastModifiedDate":"2022-03-16"},{"lineNumber":66,"author":{"gitId":"janald99"},"content":"","lastModifiedDate":"2022-03-16"},{"lineNumber":67,"author":{"gitId":"janald99"},"content":"    @Override","lastModifiedDate":"2022-03-16"},{"lineNumber":68,"author":{"gitId":"janald99"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2022-03-16"},{"lineNumber":69,"author":{"gitId":"janald99"},"content":"        return other \u003d\u003d this // short circuit if same object","lastModifiedDate":"2022-03-16"},{"lineNumber":70,"author":{"gitId":"janald99"},"content":"            || (other instanceof PropertyToSell // instanceof handles nulls","lastModifiedDate":"2022-03-16"},{"lineNumber":71,"author":{"gitId":"janald99"},"content":"            \u0026\u0026 house.equals(((PropertyToSell) other).house)","lastModifiedDate":"2022-03-16"},{"lineNumber":72,"author":{"gitId":"chuashihong"},"content":"            \u0026\u0026 priceRange.equals(((PropertyToSell) other).priceRange)","lastModifiedDate":"2022-03-26"},{"lineNumber":73,"author":{"gitId":"janald99"},"content":"            \u0026\u0026 address.equals((((PropertyToSell) other).address))); // state check","lastModifiedDate":"2022-03-16"},{"lineNumber":74,"author":{"gitId":"janald99"},"content":"    }","lastModifiedDate":"2022-03-16"},{"lineNumber":75,"author":{"gitId":"janald99"},"content":"","lastModifiedDate":"2022-04-07"},{"lineNumber":76,"author":{"gitId":"janald99"},"content":"    @Override","lastModifiedDate":"2022-04-07"},{"lineNumber":77,"author":{"gitId":"janald99"},"content":"    public String toString() {","lastModifiedDate":"2022-04-07"},{"lineNumber":78,"author":{"gitId":"janald99"},"content":"        return getHouse().toString() + \"\\n\" + \"Price Range: \" + getPriceRange().toString() + \"\\n\" + \"Address: \"","lastModifiedDate":"2022-04-07"},{"lineNumber":79,"author":{"gitId":"janald99"},"content":"                + getAddress().toString();","lastModifiedDate":"2022-04-07"},{"lineNumber":80,"author":{"gitId":"janald99"},"content":"    }","lastModifiedDate":"2022-04-07"},{"lineNumber":81,"author":{"gitId":"janald99"},"content":"}","lastModifiedDate":"2022-03-16"}],"authorContributionMap":{"janald99":53,"WJunHong":3,"chuashihong":25}},{"path":"src/main/java/seedu/address/model/seller/AllFieldsMatchBuyerPredicate.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"janald99"},"content":"package seedu.address.model.seller;","lastModifiedDate":"2022-03-25"},{"lineNumber":2,"author":{"gitId":"janald99"},"content":"","lastModifiedDate":"2022-03-25"},{"lineNumber":3,"author":{"gitId":"janald99"},"content":"import java.util.function.Predicate;","lastModifiedDate":"2022-03-27"},{"lineNumber":4,"author":{"gitId":"janald99"},"content":"","lastModifiedDate":"2022-03-25"},{"lineNumber":5,"author":{"gitId":"janald99"},"content":"import seedu.address.model.buyer.Buyer;","lastModifiedDate":"2022-03-25"},{"lineNumber":6,"author":{"gitId":"janald99"},"content":"import seedu.address.model.property.House;","lastModifiedDate":"2022-04-06"},{"lineNumber":7,"author":{"gitId":"janald99"},"content":"import seedu.address.model.property.HouseType;","lastModifiedDate":"2022-04-06"},{"lineNumber":8,"author":{"gitId":"janald99"},"content":"import seedu.address.model.property.NullPropertyToSell;","lastModifiedDate":"2022-04-07"},{"lineNumber":9,"author":{"gitId":"janald99"},"content":"import seedu.address.model.property.PriceRange;","lastModifiedDate":"2022-04-06"},{"lineNumber":10,"author":{"gitId":"janald99"},"content":"import seedu.address.model.property.PropertyToBuy;","lastModifiedDate":"2022-04-06"},{"lineNumber":11,"author":{"gitId":"janald99"},"content":"import seedu.address.model.property.PropertyToSell;","lastModifiedDate":"2022-04-06"},{"lineNumber":12,"author":{"gitId":"janald99"},"content":"","lastModifiedDate":"2022-04-06"},{"lineNumber":13,"author":{"gitId":"janald99"},"content":"","lastModifiedDate":"2022-03-25"},{"lineNumber":14,"author":{"gitId":"janald99"},"content":"/**","lastModifiedDate":"2022-03-25"},{"lineNumber":15,"author":{"gitId":"janald99"},"content":" * Tests that a {@code Seller}\u0027s {@code PropertyToSell} matches the demand","lastModifiedDate":"2022-03-25"},{"lineNumber":16,"author":{"gitId":"janald99"},"content":" *  of a given {@code Buyer}\u0027s {@code PropertyToBuy}.","lastModifiedDate":"2022-03-25"},{"lineNumber":17,"author":{"gitId":"janald99"},"content":" */","lastModifiedDate":"2022-03-25"},{"lineNumber":18,"author":{"gitId":"janald99"},"content":"public class AllFieldsMatchBuyerPredicate implements Predicate\u003cSeller\u003e {","lastModifiedDate":"2022-03-31"},{"lineNumber":19,"author":{"gitId":"janald99"},"content":"","lastModifiedDate":"2022-03-25"},{"lineNumber":20,"author":{"gitId":"janald99"},"content":"    /**","lastModifiedDate":"2022-03-25"},{"lineNumber":21,"author":{"gitId":"janald99"},"content":"     * Index of Buyer in UniqueBuyerList to match with.","lastModifiedDate":"2022-03-25"},{"lineNumber":22,"author":{"gitId":"janald99"},"content":"     */","lastModifiedDate":"2022-03-25"},{"lineNumber":23,"author":{"gitId":"janald99"},"content":"    private final Buyer buyer;","lastModifiedDate":"2022-03-25"},{"lineNumber":24,"author":{"gitId":"janald99"},"content":"","lastModifiedDate":"2022-03-25"},{"lineNumber":25,"author":{"gitId":"janald99"},"content":"    public AllFieldsMatchBuyerPredicate(Buyer buyer) {","lastModifiedDate":"2022-03-31"},{"lineNumber":26,"author":{"gitId":"janald99"},"content":"        this.buyer \u003d buyer;","lastModifiedDate":"2022-03-25"},{"lineNumber":27,"author":{"gitId":"janald99"},"content":"    }","lastModifiedDate":"2022-03-25"},{"lineNumber":28,"author":{"gitId":"janald99"},"content":"","lastModifiedDate":"2022-03-25"},{"lineNumber":29,"author":{"gitId":"janald99"},"content":"    /**","lastModifiedDate":"2022-03-25"},{"lineNumber":30,"author":{"gitId":"janald99"},"content":"     * Tests whether the Buyer (provided by the index), matches with a Seller.","lastModifiedDate":"2022-03-25"},{"lineNumber":31,"author":{"gitId":"janald99"},"content":"     * @param seller the seller we are matching the Buyer with.","lastModifiedDate":"2022-03-25"},{"lineNumber":32,"author":{"gitId":"janald99"},"content":"     * @return True if {@code Seller}\u0027s {@code PropertyToSell} matches the demand","lastModifiedDate":"2022-03-25"},{"lineNumber":33,"author":{"gitId":"janald99"},"content":"     * of the {@code Buyer}\u0027s {@code PropertyToBuy}.","lastModifiedDate":"2022-03-25"},{"lineNumber":34,"author":{"gitId":"janald99"},"content":"     */","lastModifiedDate":"2022-03-25"},{"lineNumber":35,"author":{"gitId":"janald99"},"content":"    @Override","lastModifiedDate":"2022-03-25"},{"lineNumber":36,"author":{"gitId":"janald99"},"content":"    public boolean test(Seller seller) {","lastModifiedDate":"2022-03-25"},{"lineNumber":37,"author":{"gitId":"janald99"},"content":"","lastModifiedDate":"2022-04-06"},{"lineNumber":38,"author":{"gitId":"janald99"},"content":"        PropertyToBuy propertyToBuy \u003d getPropertyToBuy();","lastModifiedDate":"2022-03-25"},{"lineNumber":39,"author":{"gitId":"janald99"},"content":"","lastModifiedDate":"2022-04-06"},{"lineNumber":40,"author":{"gitId":"janald99"},"content":"        PropertyToSell propertyToSell \u003d getPropertyToSell(seller);","lastModifiedDate":"2022-03-25"},{"lineNumber":41,"author":{"gitId":"janald99"},"content":"","lastModifiedDate":"2022-03-25"},{"lineNumber":42,"author":{"gitId":"janald99"},"content":"        PriceRange buyRange \u003d getBuyRange(propertyToBuy);","lastModifiedDate":"2022-03-25"},{"lineNumber":43,"author":{"gitId":"janald99"},"content":"        PriceRange sellRange \u003d getSellRange(propertyToSell);","lastModifiedDate":"2022-03-25"},{"lineNumber":44,"author":{"gitId":"janald99"},"content":"","lastModifiedDate":"2022-03-25"},{"lineNumber":45,"author":{"gitId":"janald99"},"content":"        boolean isMatchedPrices \u003d PriceRange.canMatchPrice(buyRange, sellRange);","lastModifiedDate":"2022-03-25"},{"lineNumber":46,"author":{"gitId":"janald99"},"content":"","lastModifiedDate":"2022-03-25"},{"lineNumber":47,"author":{"gitId":"janald99"},"content":"        House houseToBuy \u003d propertyToBuy.getHouse();","lastModifiedDate":"2022-03-31"},{"lineNumber":48,"author":{"gitId":"janald99"},"content":"        House houseToSell \u003d propertyToSell.getHouse();","lastModifiedDate":"2022-03-31"},{"lineNumber":49,"author":{"gitId":"janald99"},"content":"","lastModifiedDate":"2022-03-25"},{"lineNumber":50,"author":{"gitId":"janald99"},"content":"        //either the houses are exactly the same or, buyer house type is unspecified and the location matches.","lastModifiedDate":"2022-04-06"},{"lineNumber":51,"author":{"gitId":"janald99"},"content":"        boolean isMatchedHouse \u003d houseToBuy.equals(houseToSell)","lastModifiedDate":"2022-04-06"},{"lineNumber":52,"author":{"gitId":"janald99"},"content":"                || (houseToBuy.getHouseType().equals(HouseType.UNSPECIFIED)","lastModifiedDate":"2022-04-06"},{"lineNumber":53,"author":{"gitId":"janald99"},"content":"                        \u0026\u0026 houseToBuy.getLocation().equals(houseToSell.getLocation()));","lastModifiedDate":"2022-04-06"},{"lineNumber":54,"author":{"gitId":"janald99"},"content":"","lastModifiedDate":"2022-04-06"},{"lineNumber":55,"author":{"gitId":"janald99"},"content":"        boolean isNotNullProperty \u003d !(propertyToSell instanceof NullPropertyToSell);","lastModifiedDate":"2022-04-07"},{"lineNumber":56,"author":{"gitId":"janald99"},"content":"","lastModifiedDate":"2022-04-07"},{"lineNumber":57,"author":{"gitId":"janald99"},"content":"        return isMatchedPrices \u0026\u0026 isMatchedHouse \u0026\u0026 isNotNullProperty;","lastModifiedDate":"2022-04-07"},{"lineNumber":58,"author":{"gitId":"janald99"},"content":"    }","lastModifiedDate":"2022-03-25"},{"lineNumber":59,"author":{"gitId":"janald99"},"content":"","lastModifiedDate":"2022-03-25"},{"lineNumber":60,"author":{"gitId":"janald99"},"content":"    public PropertyToBuy getPropertyToBuy() {","lastModifiedDate":"2022-03-25"},{"lineNumber":61,"author":{"gitId":"janald99"},"content":"        return buyer.getPropertyToBuy();","lastModifiedDate":"2022-03-27"},{"lineNumber":62,"author":{"gitId":"janald99"},"content":"    }","lastModifiedDate":"2022-03-25"},{"lineNumber":63,"author":{"gitId":"janald99"},"content":"","lastModifiedDate":"2022-03-25"},{"lineNumber":64,"author":{"gitId":"janald99"},"content":"    public PropertyToSell getPropertyToSell(Seller seller) {","lastModifiedDate":"2022-03-25"},{"lineNumber":65,"author":{"gitId":"janald99"},"content":"        return seller.getPropertyToSell();","lastModifiedDate":"2022-03-25"},{"lineNumber":66,"author":{"gitId":"janald99"},"content":"    }","lastModifiedDate":"2022-03-25"},{"lineNumber":67,"author":{"gitId":"janald99"},"content":"","lastModifiedDate":"2022-03-25"},{"lineNumber":68,"author":{"gitId":"janald99"},"content":"    public PriceRange getBuyRange(PropertyToBuy property) {","lastModifiedDate":"2022-03-25"},{"lineNumber":69,"author":{"gitId":"janald99"},"content":"        return property.getPriceRange();","lastModifiedDate":"2022-03-25"},{"lineNumber":70,"author":{"gitId":"janald99"},"content":"    }","lastModifiedDate":"2022-03-25"},{"lineNumber":71,"author":{"gitId":"janald99"},"content":"","lastModifiedDate":"2022-03-25"},{"lineNumber":72,"author":{"gitId":"janald99"},"content":"    public PriceRange getSellRange(PropertyToSell property) {","lastModifiedDate":"2022-03-25"},{"lineNumber":73,"author":{"gitId":"janald99"},"content":"        return property.getPriceRange();","lastModifiedDate":"2022-03-25"},{"lineNumber":74,"author":{"gitId":"janald99"},"content":"    }","lastModifiedDate":"2022-03-25"},{"lineNumber":75,"author":{"gitId":"janald99"},"content":"","lastModifiedDate":"2022-03-25"},{"lineNumber":76,"author":{"gitId":"janald99"},"content":"}","lastModifiedDate":"2022-03-25"}],"authorContributionMap":{"janald99":76}},{"path":"src/main/java/seedu/address/model/seller/HouseTypeMatchBuyerPredicate.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"janald99"},"content":"package seedu.address.model.seller;","lastModifiedDate":"2022-03-31"},{"lineNumber":2,"author":{"gitId":"janald99"},"content":"","lastModifiedDate":"2022-03-31"},{"lineNumber":3,"author":{"gitId":"janald99"},"content":"import java.util.function.Predicate;","lastModifiedDate":"2022-03-31"},{"lineNumber":4,"author":{"gitId":"janald99"},"content":"","lastModifiedDate":"2022-03-31"},{"lineNumber":5,"author":{"gitId":"janald99"},"content":"import seedu.address.model.buyer.Buyer;","lastModifiedDate":"2022-03-31"},{"lineNumber":6,"author":{"gitId":"janald99"},"content":"import seedu.address.model.property.House;","lastModifiedDate":"2022-03-31"},{"lineNumber":7,"author":{"gitId":"janald99"},"content":"import seedu.address.model.property.HouseType;","lastModifiedDate":"2022-03-31"},{"lineNumber":8,"author":{"gitId":"janald99"},"content":"import seedu.address.model.property.NullPropertyToSell;","lastModifiedDate":"2022-04-07"},{"lineNumber":9,"author":{"gitId":"janald99"},"content":"import seedu.address.model.property.PropertyToBuy;","lastModifiedDate":"2022-03-31"},{"lineNumber":10,"author":{"gitId":"janald99"},"content":"import seedu.address.model.property.PropertyToSell;","lastModifiedDate":"2022-03-31"},{"lineNumber":11,"author":{"gitId":"janald99"},"content":"","lastModifiedDate":"2022-03-31"},{"lineNumber":12,"author":{"gitId":"janald99"},"content":"","lastModifiedDate":"2022-03-31"},{"lineNumber":13,"author":{"gitId":"janald99"},"content":"/**","lastModifiedDate":"2022-03-31"},{"lineNumber":14,"author":{"gitId":"janald99"},"content":" * Tests that a {@code Seller}\u0027s {@code HouseType} matches the demand","lastModifiedDate":"2022-03-31"},{"lineNumber":15,"author":{"gitId":"janald99"},"content":" *  of a given {@code Buyer}\u0027s {@code HouseType}.","lastModifiedDate":"2022-03-31"},{"lineNumber":16,"author":{"gitId":"janald99"},"content":" */","lastModifiedDate":"2022-03-31"},{"lineNumber":17,"author":{"gitId":"janald99"},"content":"public class HouseTypeMatchBuyerPredicate implements Predicate\u003cSeller\u003e {","lastModifiedDate":"2022-03-31"},{"lineNumber":18,"author":{"gitId":"janald99"},"content":"","lastModifiedDate":"2022-03-31"},{"lineNumber":19,"author":{"gitId":"janald99"},"content":"    /**","lastModifiedDate":"2022-03-31"},{"lineNumber":20,"author":{"gitId":"janald99"},"content":"     * Index of Buyer in UniqueBuyerList to match with.","lastModifiedDate":"2022-03-31"},{"lineNumber":21,"author":{"gitId":"janald99"},"content":"     */","lastModifiedDate":"2022-03-31"},{"lineNumber":22,"author":{"gitId":"janald99"},"content":"    private final Buyer buyer;","lastModifiedDate":"2022-03-31"},{"lineNumber":23,"author":{"gitId":"janald99"},"content":"","lastModifiedDate":"2022-03-31"},{"lineNumber":24,"author":{"gitId":"janald99"},"content":"    public HouseTypeMatchBuyerPredicate(Buyer buyer) {","lastModifiedDate":"2022-03-31"},{"lineNumber":25,"author":{"gitId":"janald99"},"content":"        this.buyer \u003d buyer;","lastModifiedDate":"2022-03-31"},{"lineNumber":26,"author":{"gitId":"janald99"},"content":"    }","lastModifiedDate":"2022-03-31"},{"lineNumber":27,"author":{"gitId":"janald99"},"content":"","lastModifiedDate":"2022-03-31"},{"lineNumber":28,"author":{"gitId":"janald99"},"content":"    /**","lastModifiedDate":"2022-03-31"},{"lineNumber":29,"author":{"gitId":"janald99"},"content":"     * Tests whether the Buyer (provided by the index) matches with a Seller by the HouseType.","lastModifiedDate":"2022-03-31"},{"lineNumber":30,"author":{"gitId":"janald99"},"content":"     *","lastModifiedDate":"2022-03-31"},{"lineNumber":31,"author":{"gitId":"janald99"},"content":"     * @param seller the seller we are matching the Buyer with.","lastModifiedDate":"2022-03-31"},{"lineNumber":32,"author":{"gitId":"janald99"},"content":"     * @return True if {@code Seller}\u0027s {@code PropertyToSell HouseType} is the same as","lastModifiedDate":"2022-03-31"},{"lineNumber":33,"author":{"gitId":"janald99"},"content":"     * that of the {@code Buyer}, or","lastModifiedDate":"2022-03-31"},{"lineNumber":34,"author":{"gitId":"janald99"},"content":"     * the {@code Buyer}\u0027s {@code PropertyToBuy} has an unspecified house type.","lastModifiedDate":"2022-03-31"},{"lineNumber":35,"author":{"gitId":"janald99"},"content":"     */","lastModifiedDate":"2022-03-31"},{"lineNumber":36,"author":{"gitId":"janald99"},"content":"    @Override","lastModifiedDate":"2022-03-31"},{"lineNumber":37,"author":{"gitId":"janald99"},"content":"    public boolean test(Seller seller) {","lastModifiedDate":"2022-03-31"},{"lineNumber":38,"author":{"gitId":"janald99"},"content":"        PropertyToBuy propertyToBuy \u003d getPropertyToBuy();","lastModifiedDate":"2022-03-31"},{"lineNumber":39,"author":{"gitId":"janald99"},"content":"        PropertyToSell propertyToSell \u003d getPropertyToSell(seller);","lastModifiedDate":"2022-03-31"},{"lineNumber":40,"author":{"gitId":"janald99"},"content":"","lastModifiedDate":"2022-03-31"},{"lineNumber":41,"author":{"gitId":"janald99"},"content":"        House houseToBuy \u003d propertyToBuy.getHouse();","lastModifiedDate":"2022-03-31"},{"lineNumber":42,"author":{"gitId":"janald99"},"content":"        House houseToSell \u003d propertyToSell.getHouse();","lastModifiedDate":"2022-03-31"},{"lineNumber":43,"author":{"gitId":"janald99"},"content":"","lastModifiedDate":"2022-03-31"},{"lineNumber":44,"author":{"gitId":"janald99"},"content":"        HouseType buyType \u003d houseToBuy.getHouseType();","lastModifiedDate":"2022-03-31"},{"lineNumber":45,"author":{"gitId":"janald99"},"content":"        HouseType sellType \u003d houseToSell.getHouseType();","lastModifiedDate":"2022-03-31"},{"lineNumber":46,"author":{"gitId":"janald99"},"content":"","lastModifiedDate":"2022-03-31"},{"lineNumber":47,"author":{"gitId":"janald99"},"content":"        boolean isNotNullProperty \u003d !(propertyToSell instanceof NullPropertyToSell);","lastModifiedDate":"2022-04-07"},{"lineNumber":48,"author":{"gitId":"janald99"},"content":"","lastModifiedDate":"2022-04-07"},{"lineNumber":49,"author":{"gitId":"janald99"},"content":"        return (buyType.equals(sellType) || buyType.equals(HouseType.UNSPECIFIED)) \u0026\u0026 isNotNullProperty;","lastModifiedDate":"2022-04-07"},{"lineNumber":50,"author":{"gitId":"janald99"},"content":"    }","lastModifiedDate":"2022-03-31"},{"lineNumber":51,"author":{"gitId":"janald99"},"content":"","lastModifiedDate":"2022-03-31"},{"lineNumber":52,"author":{"gitId":"janald99"},"content":"    public PropertyToBuy getPropertyToBuy() {","lastModifiedDate":"2022-03-31"},{"lineNumber":53,"author":{"gitId":"janald99"},"content":"        return buyer.getPropertyToBuy();","lastModifiedDate":"2022-03-31"},{"lineNumber":54,"author":{"gitId":"janald99"},"content":"    }","lastModifiedDate":"2022-03-31"},{"lineNumber":55,"author":{"gitId":"janald99"},"content":"","lastModifiedDate":"2022-03-31"},{"lineNumber":56,"author":{"gitId":"janald99"},"content":"    public PropertyToSell getPropertyToSell(Seller seller) {","lastModifiedDate":"2022-03-31"},{"lineNumber":57,"author":{"gitId":"janald99"},"content":"        return seller.getPropertyToSell();","lastModifiedDate":"2022-03-31"},{"lineNumber":58,"author":{"gitId":"janald99"},"content":"    }","lastModifiedDate":"2022-03-31"},{"lineNumber":59,"author":{"gitId":"janald99"},"content":"","lastModifiedDate":"2022-03-31"},{"lineNumber":60,"author":{"gitId":"janald99"},"content":"}","lastModifiedDate":"2022-03-31"}],"authorContributionMap":{"janald99":60}},{"path":"src/main/java/seedu/address/model/seller/LocationMatchBuyerPredicate.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"janald99"},"content":"package seedu.address.model.seller;","lastModifiedDate":"2022-03-31"},{"lineNumber":2,"author":{"gitId":"janald99"},"content":"","lastModifiedDate":"2022-03-31"},{"lineNumber":3,"author":{"gitId":"janald99"},"content":"import java.util.function.Predicate;","lastModifiedDate":"2022-03-31"},{"lineNumber":4,"author":{"gitId":"janald99"},"content":"","lastModifiedDate":"2022-03-31"},{"lineNumber":5,"author":{"gitId":"janald99"},"content":"import seedu.address.model.buyer.Buyer;","lastModifiedDate":"2022-03-31"},{"lineNumber":6,"author":{"gitId":"janald99"},"content":"import seedu.address.model.property.House;","lastModifiedDate":"2022-03-31"},{"lineNumber":7,"author":{"gitId":"janald99"},"content":"import seedu.address.model.property.Location;","lastModifiedDate":"2022-03-31"},{"lineNumber":8,"author":{"gitId":"janald99"},"content":"import seedu.address.model.property.NullPropertyToSell;","lastModifiedDate":"2022-04-07"},{"lineNumber":9,"author":{"gitId":"janald99"},"content":"import seedu.address.model.property.PropertyToBuy;","lastModifiedDate":"2022-03-31"},{"lineNumber":10,"author":{"gitId":"janald99"},"content":"import seedu.address.model.property.PropertyToSell;","lastModifiedDate":"2022-03-31"},{"lineNumber":11,"author":{"gitId":"janald99"},"content":"","lastModifiedDate":"2022-03-31"},{"lineNumber":12,"author":{"gitId":"janald99"},"content":"/**","lastModifiedDate":"2022-03-31"},{"lineNumber":13,"author":{"gitId":"janald99"},"content":" * Tests that a {@code Seller}\u0027s {@code Location} matches the demand","lastModifiedDate":"2022-03-31"},{"lineNumber":14,"author":{"gitId":"janald99"},"content":" *  of a given {@code Buyer}\u0027s {@code Location}.","lastModifiedDate":"2022-03-31"},{"lineNumber":15,"author":{"gitId":"janald99"},"content":" */","lastModifiedDate":"2022-03-31"},{"lineNumber":16,"author":{"gitId":"janald99"},"content":"public class LocationMatchBuyerPredicate implements Predicate\u003cSeller\u003e {","lastModifiedDate":"2022-03-31"},{"lineNumber":17,"author":{"gitId":"janald99"},"content":"","lastModifiedDate":"2022-03-31"},{"lineNumber":18,"author":{"gitId":"janald99"},"content":"    /**","lastModifiedDate":"2022-03-31"},{"lineNumber":19,"author":{"gitId":"janald99"},"content":"     * Index of Buyer in UniqueBuyerList to match with.","lastModifiedDate":"2022-03-31"},{"lineNumber":20,"author":{"gitId":"janald99"},"content":"     */","lastModifiedDate":"2022-03-31"},{"lineNumber":21,"author":{"gitId":"janald99"},"content":"    private final Buyer buyer;","lastModifiedDate":"2022-03-31"},{"lineNumber":22,"author":{"gitId":"janald99"},"content":"","lastModifiedDate":"2022-03-31"},{"lineNumber":23,"author":{"gitId":"janald99"},"content":"    public LocationMatchBuyerPredicate(Buyer buyer) {","lastModifiedDate":"2022-03-31"},{"lineNumber":24,"author":{"gitId":"janald99"},"content":"        this.buyer \u003d buyer;","lastModifiedDate":"2022-03-31"},{"lineNumber":25,"author":{"gitId":"janald99"},"content":"    }","lastModifiedDate":"2022-03-31"},{"lineNumber":26,"author":{"gitId":"janald99"},"content":"","lastModifiedDate":"2022-03-31"},{"lineNumber":27,"author":{"gitId":"janald99"},"content":"    /**","lastModifiedDate":"2022-03-31"},{"lineNumber":28,"author":{"gitId":"janald99"},"content":"     * Tests whether the Buyer (provided by the index) matches with a Seller by the Location.","lastModifiedDate":"2022-03-31"},{"lineNumber":29,"author":{"gitId":"janald99"},"content":"     *","lastModifiedDate":"2022-03-31"},{"lineNumber":30,"author":{"gitId":"janald99"},"content":"     * @param seller the seller we are matching the Buyer with.","lastModifiedDate":"2022-03-31"},{"lineNumber":31,"author":{"gitId":"janald99"},"content":"     * @return True if {@code Seller}\u0027s {@code PropertyToSell Location} is the same as","lastModifiedDate":"2022-03-31"},{"lineNumber":32,"author":{"gitId":"janald99"},"content":"     * that of the {@code Buyer}.","lastModifiedDate":"2022-03-31"},{"lineNumber":33,"author":{"gitId":"janald99"},"content":"     */","lastModifiedDate":"2022-03-31"},{"lineNumber":34,"author":{"gitId":"janald99"},"content":"    @Override","lastModifiedDate":"2022-03-31"},{"lineNumber":35,"author":{"gitId":"janald99"},"content":"    public boolean test(Seller seller) {","lastModifiedDate":"2022-03-31"},{"lineNumber":36,"author":{"gitId":"janald99"},"content":"        PropertyToBuy propertyToBuy \u003d getPropertyToBuy();","lastModifiedDate":"2022-03-31"},{"lineNumber":37,"author":{"gitId":"janald99"},"content":"        PropertyToSell propertyToSell \u003d getPropertyToSell(seller);","lastModifiedDate":"2022-03-31"},{"lineNumber":38,"author":{"gitId":"janald99"},"content":"","lastModifiedDate":"2022-03-31"},{"lineNumber":39,"author":{"gitId":"janald99"},"content":"        House houseToBuy \u003d propertyToBuy.getHouse();","lastModifiedDate":"2022-03-31"},{"lineNumber":40,"author":{"gitId":"janald99"},"content":"        House houseToSell \u003d propertyToSell.getHouse();","lastModifiedDate":"2022-03-31"},{"lineNumber":41,"author":{"gitId":"janald99"},"content":"","lastModifiedDate":"2022-03-31"},{"lineNumber":42,"author":{"gitId":"janald99"},"content":"        Location buyLocation \u003d houseToBuy.getLocation();","lastModifiedDate":"2022-03-31"},{"lineNumber":43,"author":{"gitId":"janald99"},"content":"        Location sellLocation \u003d houseToSell.getLocation();","lastModifiedDate":"2022-03-31"},{"lineNumber":44,"author":{"gitId":"janald99"},"content":"","lastModifiedDate":"2022-03-31"},{"lineNumber":45,"author":{"gitId":"janald99"},"content":"        boolean isNotNullProperty \u003d !(propertyToSell instanceof NullPropertyToSell);","lastModifiedDate":"2022-04-07"},{"lineNumber":46,"author":{"gitId":"janald99"},"content":"","lastModifiedDate":"2022-04-07"},{"lineNumber":47,"author":{"gitId":"janald99"},"content":"        return buyLocation.equals(sellLocation) \u0026\u0026 isNotNullProperty;","lastModifiedDate":"2022-04-07"},{"lineNumber":48,"author":{"gitId":"janald99"},"content":"    }","lastModifiedDate":"2022-03-31"},{"lineNumber":49,"author":{"gitId":"janald99"},"content":"","lastModifiedDate":"2022-03-31"},{"lineNumber":50,"author":{"gitId":"janald99"},"content":"    public PropertyToBuy getPropertyToBuy() {","lastModifiedDate":"2022-03-31"},{"lineNumber":51,"author":{"gitId":"janald99"},"content":"        return buyer.getPropertyToBuy();","lastModifiedDate":"2022-03-31"},{"lineNumber":52,"author":{"gitId":"janald99"},"content":"    }","lastModifiedDate":"2022-03-31"},{"lineNumber":53,"author":{"gitId":"janald99"},"content":"","lastModifiedDate":"2022-03-31"},{"lineNumber":54,"author":{"gitId":"janald99"},"content":"    public PropertyToSell getPropertyToSell(Seller seller) {","lastModifiedDate":"2022-03-31"},{"lineNumber":55,"author":{"gitId":"janald99"},"content":"        return seller.getPropertyToSell();","lastModifiedDate":"2022-03-31"},{"lineNumber":56,"author":{"gitId":"janald99"},"content":"    }","lastModifiedDate":"2022-03-31"},{"lineNumber":57,"author":{"gitId":"janald99"},"content":"}","lastModifiedDate":"2022-03-31"}],"authorContributionMap":{"janald99":57}},{"path":"src/main/java/seedu/address/model/seller/PriceRangeMatchBuyerPredicate.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"janald99"},"content":"package seedu.address.model.seller;","lastModifiedDate":"2022-03-31"},{"lineNumber":2,"author":{"gitId":"janald99"},"content":"","lastModifiedDate":"2022-03-31"},{"lineNumber":3,"author":{"gitId":"janald99"},"content":"import java.util.function.Predicate;","lastModifiedDate":"2022-03-31"},{"lineNumber":4,"author":{"gitId":"janald99"},"content":"","lastModifiedDate":"2022-03-31"},{"lineNumber":5,"author":{"gitId":"janald99"},"content":"import seedu.address.model.buyer.Buyer;","lastModifiedDate":"2022-03-31"},{"lineNumber":6,"author":{"gitId":"janald99"},"content":"import seedu.address.model.property.NullPropertyToSell;","lastModifiedDate":"2022-04-07"},{"lineNumber":7,"author":{"gitId":"janald99"},"content":"import seedu.address.model.property.PriceRange;","lastModifiedDate":"2022-03-31"},{"lineNumber":8,"author":{"gitId":"janald99"},"content":"import seedu.address.model.property.PropertyToBuy;","lastModifiedDate":"2022-03-31"},{"lineNumber":9,"author":{"gitId":"janald99"},"content":"import seedu.address.model.property.PropertyToSell;","lastModifiedDate":"2022-03-31"},{"lineNumber":10,"author":{"gitId":"janald99"},"content":"","lastModifiedDate":"2022-03-31"},{"lineNumber":11,"author":{"gitId":"janald99"},"content":"/**","lastModifiedDate":"2022-03-31"},{"lineNumber":12,"author":{"gitId":"janald99"},"content":" * Tests that a {@code Seller}\u0027s {@code PriceRange} matches the demand","lastModifiedDate":"2022-03-31"},{"lineNumber":13,"author":{"gitId":"janald99"},"content":" *  of a given {@code Buyer}\u0027s {@code PriceRange}.","lastModifiedDate":"2022-03-31"},{"lineNumber":14,"author":{"gitId":"janald99"},"content":" */","lastModifiedDate":"2022-03-31"},{"lineNumber":15,"author":{"gitId":"janald99"},"content":"public class PriceRangeMatchBuyerPredicate implements Predicate\u003cSeller\u003e {","lastModifiedDate":"2022-03-31"},{"lineNumber":16,"author":{"gitId":"janald99"},"content":"    /**","lastModifiedDate":"2022-03-31"},{"lineNumber":17,"author":{"gitId":"janald99"},"content":"     * Index of Buyer in UniqueBuyerList to match with.","lastModifiedDate":"2022-03-31"},{"lineNumber":18,"author":{"gitId":"janald99"},"content":"     */","lastModifiedDate":"2022-03-31"},{"lineNumber":19,"author":{"gitId":"janald99"},"content":"    private final Buyer buyer;","lastModifiedDate":"2022-03-31"},{"lineNumber":20,"author":{"gitId":"janald99"},"content":"","lastModifiedDate":"2022-03-31"},{"lineNumber":21,"author":{"gitId":"janald99"},"content":"    public PriceRangeMatchBuyerPredicate(Buyer buyer) {","lastModifiedDate":"2022-03-31"},{"lineNumber":22,"author":{"gitId":"janald99"},"content":"        this.buyer \u003d buyer;","lastModifiedDate":"2022-03-31"},{"lineNumber":23,"author":{"gitId":"janald99"},"content":"    }","lastModifiedDate":"2022-03-31"},{"lineNumber":24,"author":{"gitId":"janald99"},"content":"","lastModifiedDate":"2022-03-31"},{"lineNumber":25,"author":{"gitId":"janald99"},"content":"    /**","lastModifiedDate":"2022-03-31"},{"lineNumber":26,"author":{"gitId":"janald99"},"content":"     * Tests whether the Buyer (provided by the index) matches with a Seller by the PriceRange.","lastModifiedDate":"2022-03-31"},{"lineNumber":27,"author":{"gitId":"janald99"},"content":"     *","lastModifiedDate":"2022-03-31"},{"lineNumber":28,"author":{"gitId":"janald99"},"content":"     * @param seller the seller we are matching the Buyer with.","lastModifiedDate":"2022-03-31"},{"lineNumber":29,"author":{"gitId":"janald99"},"content":"     * @return True if {@code Seller}\u0027s {@code PropertyToSell PriceRange} has a price that can match","lastModifiedDate":"2022-03-31"},{"lineNumber":30,"author":{"gitId":"janald99"},"content":"     * that of the {@code Buyer}.","lastModifiedDate":"2022-03-31"},{"lineNumber":31,"author":{"gitId":"janald99"},"content":"     */","lastModifiedDate":"2022-03-31"},{"lineNumber":32,"author":{"gitId":"janald99"},"content":"    @Override","lastModifiedDate":"2022-03-31"},{"lineNumber":33,"author":{"gitId":"janald99"},"content":"    public boolean test(Seller seller) {","lastModifiedDate":"2022-03-31"},{"lineNumber":34,"author":{"gitId":"janald99"},"content":"        PropertyToBuy propertyToBuy \u003d getPropertyToBuy();","lastModifiedDate":"2022-03-31"},{"lineNumber":35,"author":{"gitId":"janald99"},"content":"        PropertyToSell propertyToSell \u003d getPropertyToSell(seller);","lastModifiedDate":"2022-03-31"},{"lineNumber":36,"author":{"gitId":"janald99"},"content":"","lastModifiedDate":"2022-03-31"},{"lineNumber":37,"author":{"gitId":"janald99"},"content":"        PriceRange buyRange \u003d propertyToBuy.getPriceRange();","lastModifiedDate":"2022-03-31"},{"lineNumber":38,"author":{"gitId":"janald99"},"content":"        PriceRange sellRange \u003d propertyToSell.getPriceRange();","lastModifiedDate":"2022-03-31"},{"lineNumber":39,"author":{"gitId":"janald99"},"content":"","lastModifiedDate":"2022-03-31"},{"lineNumber":40,"author":{"gitId":"janald99"},"content":"        boolean isNotNullProperty \u003d !(propertyToSell instanceof NullPropertyToSell);","lastModifiedDate":"2022-04-07"},{"lineNumber":41,"author":{"gitId":"janald99"},"content":"","lastModifiedDate":"2022-04-07"},{"lineNumber":42,"author":{"gitId":"janald99"},"content":"        return PriceRange.canMatchPrice(buyRange, sellRange) \u0026\u0026 isNotNullProperty;","lastModifiedDate":"2022-04-07"},{"lineNumber":43,"author":{"gitId":"janald99"},"content":"    }","lastModifiedDate":"2022-03-31"},{"lineNumber":44,"author":{"gitId":"janald99"},"content":"","lastModifiedDate":"2022-03-31"},{"lineNumber":45,"author":{"gitId":"janald99"},"content":"    public PropertyToBuy getPropertyToBuy() {","lastModifiedDate":"2022-03-31"},{"lineNumber":46,"author":{"gitId":"janald99"},"content":"        return buyer.getPropertyToBuy();","lastModifiedDate":"2022-03-31"},{"lineNumber":47,"author":{"gitId":"janald99"},"content":"    }","lastModifiedDate":"2022-03-31"},{"lineNumber":48,"author":{"gitId":"janald99"},"content":"","lastModifiedDate":"2022-03-31"},{"lineNumber":49,"author":{"gitId":"janald99"},"content":"    public PropertyToSell getPropertyToSell(Seller seller) {","lastModifiedDate":"2022-03-31"},{"lineNumber":50,"author":{"gitId":"janald99"},"content":"        return seller.getPropertyToSell();","lastModifiedDate":"2022-03-31"},{"lineNumber":51,"author":{"gitId":"janald99"},"content":"    }","lastModifiedDate":"2022-03-31"},{"lineNumber":52,"author":{"gitId":"janald99"},"content":"}","lastModifiedDate":"2022-03-31"}],"authorContributionMap":{"janald99":52}},{"path":"src/main/java/seedu/address/model/seller/Seller.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"cwnm"},"content":"package seedu.address.model.seller;","lastModifiedDate":"2022-03-16"},{"lineNumber":2,"author":{"gitId":"cwnm"},"content":"","lastModifiedDate":"2022-03-16"},{"lineNumber":3,"author":{"gitId":"cwnm"},"content":"import java.util.Set;","lastModifiedDate":"2022-03-16"},{"lineNumber":4,"author":{"gitId":"cwnm"},"content":"","lastModifiedDate":"2022-03-16"},{"lineNumber":5,"author":{"gitId":"cwnm"},"content":"import seedu.address.model.client.Appointment;","lastModifiedDate":"2022-03-16"},{"lineNumber":6,"author":{"gitId":"cwnm"},"content":"import seedu.address.model.client.Client;","lastModifiedDate":"2022-03-16"},{"lineNumber":7,"author":{"gitId":"cwnm"},"content":"import seedu.address.model.client.Name;","lastModifiedDate":"2022-03-16"},{"lineNumber":8,"author":{"gitId":"cwnm"},"content":"import seedu.address.model.client.Phone;","lastModifiedDate":"2022-03-16"},{"lineNumber":9,"author":{"gitId":"janald99"},"content":"import seedu.address.model.property.Address;","lastModifiedDate":"2022-03-31"},{"lineNumber":10,"author":{"gitId":"chuashihong"},"content":"import seedu.address.model.property.PropertyToSell;","lastModifiedDate":"2022-03-26"},{"lineNumber":11,"author":{"gitId":"cwnm"},"content":"import seedu.address.model.tag.Tag;","lastModifiedDate":"2022-03-16"},{"lineNumber":12,"author":{"gitId":"cwnm"},"content":"","lastModifiedDate":"2022-03-16"},{"lineNumber":13,"author":{"gitId":"cwnm"},"content":"/**","lastModifiedDate":"2022-03-16"},{"lineNumber":14,"author":{"gitId":"cwnm"},"content":" * Represents a client who is selling houses.","lastModifiedDate":"2022-03-16"},{"lineNumber":15,"author":{"gitId":"cwnm"},"content":" * Guarantees: details are present and not null, field values are validated, immutable.","lastModifiedDate":"2022-03-16"},{"lineNumber":16,"author":{"gitId":"cwnm"},"content":" */","lastModifiedDate":"2022-03-16"},{"lineNumber":17,"author":{"gitId":"cwnm"},"content":"public class Seller extends Client {","lastModifiedDate":"2022-03-16"},{"lineNumber":18,"author":{"gitId":"chuashihong"},"content":"","lastModifiedDate":"2022-03-26"},{"lineNumber":19,"author":{"gitId":"chuashihong"},"content":"    //Data fields","lastModifiedDate":"2022-03-26"},{"lineNumber":20,"author":{"gitId":"chuashihong"},"content":"    private final PropertyToSell propertyToSell;","lastModifiedDate":"2022-03-26"},{"lineNumber":21,"author":{"gitId":"chuashihong"},"content":"","lastModifiedDate":"2022-03-26"},{"lineNumber":22,"author":{"gitId":"cwnm"},"content":"    /**","lastModifiedDate":"2022-03-16"},{"lineNumber":23,"author":{"gitId":"cwnm"},"content":"     * Constructor of Seller class.","lastModifiedDate":"2022-03-16"},{"lineNumber":24,"author":{"gitId":"cwnm"},"content":"     */","lastModifiedDate":"2022-03-16"},{"lineNumber":25,"author":{"gitId":"chuashihong"},"content":"    public Seller(Name name, Phone phone, Appointment appointment, Set\u003cTag\u003e tags, PropertyToSell propertyToSell) {","lastModifiedDate":"2022-03-26"},{"lineNumber":26,"author":{"gitId":"Jacky142857"},"content":"        super(name, phone, appointment, tags);","lastModifiedDate":"2022-03-19"},{"lineNumber":27,"author":{"gitId":"chuashihong"},"content":"        this.propertyToSell \u003d propertyToSell;","lastModifiedDate":"2022-03-26"},{"lineNumber":28,"author":{"gitId":"chuashihong"},"content":"    }","lastModifiedDate":"2022-03-26"},{"lineNumber":29,"author":{"gitId":"chuashihong"},"content":"","lastModifiedDate":"2022-03-26"},{"lineNumber":30,"author":{"gitId":"chuashihong"},"content":"","lastModifiedDate":"2022-03-26"},{"lineNumber":31,"author":{"gitId":"chuashihong"},"content":"    /**","lastModifiedDate":"2022-03-26"},{"lineNumber":32,"author":{"gitId":"chuashihong"},"content":"     * Returns the property the seller wants to sell","lastModifiedDate":"2022-03-26"},{"lineNumber":33,"author":{"gitId":"chuashihong"},"content":"     *","lastModifiedDate":"2022-03-26"},{"lineNumber":34,"author":{"gitId":"chuashihong"},"content":"     * @return PropertyToSell.","lastModifiedDate":"2022-03-26"},{"lineNumber":35,"author":{"gitId":"chuashihong"},"content":"     */","lastModifiedDate":"2022-03-26"},{"lineNumber":36,"author":{"gitId":"chuashihong"},"content":"    public PropertyToSell getPropertyToSell() {","lastModifiedDate":"2022-03-26"},{"lineNumber":37,"author":{"gitId":"chuashihong"},"content":"        return propertyToSell;","lastModifiedDate":"2022-03-26"},{"lineNumber":38,"author":{"gitId":"cwnm"},"content":"    }","lastModifiedDate":"2022-03-16"},{"lineNumber":39,"author":{"gitId":"cwnm"},"content":"","lastModifiedDate":"2022-03-17"},{"lineNumber":40,"author":{"gitId":"janald99"},"content":"    /**","lastModifiedDate":"2022-03-31"},{"lineNumber":41,"author":{"gitId":"janald99"},"content":"     * Gets the address of the seller\u0027s PropertyToSell.","lastModifiedDate":"2022-03-31"},{"lineNumber":42,"author":{"gitId":"janald99"},"content":"     * The difference between PropertyToBuy and PropertyToSell is the address field.","lastModifiedDate":"2022-03-31"},{"lineNumber":43,"author":{"gitId":"janald99"},"content":"     * @return","lastModifiedDate":"2022-03-31"},{"lineNumber":44,"author":{"gitId":"janald99"},"content":"     */","lastModifiedDate":"2022-03-31"},{"lineNumber":45,"author":{"gitId":"janald99"},"content":"    public Address getAddress() {","lastModifiedDate":"2022-03-31"},{"lineNumber":46,"author":{"gitId":"janald99"},"content":"        return propertyToSell.getAddress();","lastModifiedDate":"2022-03-31"},{"lineNumber":47,"author":{"gitId":"janald99"},"content":"    }","lastModifiedDate":"2022-03-31"},{"lineNumber":48,"author":{"gitId":"chuashihong"},"content":"","lastModifiedDate":"2022-03-26"},{"lineNumber":49,"author":{"gitId":"cwnm"},"content":"    @Override","lastModifiedDate":"2022-03-17"},{"lineNumber":50,"author":{"gitId":"cwnm"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2022-03-17"},{"lineNumber":51,"author":{"gitId":"cwnm"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2022-03-17"},{"lineNumber":52,"author":{"gitId":"cwnm"},"content":"            return true;","lastModifiedDate":"2022-03-17"},{"lineNumber":53,"author":{"gitId":"cwnm"},"content":"        }","lastModifiedDate":"2022-03-17"},{"lineNumber":54,"author":{"gitId":"cwnm"},"content":"","lastModifiedDate":"2022-03-17"},{"lineNumber":55,"author":{"gitId":"cwnm"},"content":"        if (!(other instanceof Seller)) {","lastModifiedDate":"2022-03-17"},{"lineNumber":56,"author":{"gitId":"cwnm"},"content":"            return false;","lastModifiedDate":"2022-03-17"},{"lineNumber":57,"author":{"gitId":"cwnm"},"content":"        }","lastModifiedDate":"2022-03-17"},{"lineNumber":58,"author":{"gitId":"cwnm"},"content":"","lastModifiedDate":"2022-03-17"},{"lineNumber":59,"author":{"gitId":"cwnm"},"content":"        Seller otherSeller \u003d (Seller) other;","lastModifiedDate":"2022-03-17"},{"lineNumber":60,"author":{"gitId":"cwnm"},"content":"        return otherSeller.getName().equals(getName())","lastModifiedDate":"2022-03-17"},{"lineNumber":61,"author":{"gitId":"cwnm"},"content":"                \u0026\u0026 otherSeller.getPhone().equals(getPhone())","lastModifiedDate":"2022-03-17"},{"lineNumber":62,"author":{"gitId":"Jacky142857"},"content":"                \u0026\u0026 otherSeller.getTags().equals(getTags());","lastModifiedDate":"2022-03-19"},{"lineNumber":63,"author":{"gitId":"cwnm"},"content":"    }","lastModifiedDate":"2022-03-17"},{"lineNumber":64,"author":{"gitId":"chuashihong"},"content":"","lastModifiedDate":"2022-03-28"},{"lineNumber":65,"author":{"gitId":"janald99"},"content":"    @Override","lastModifiedDate":"2022-04-07"},{"lineNumber":66,"author":{"gitId":"janald99"},"content":"    public String toString() {","lastModifiedDate":"2022-04-07"},{"lineNumber":67,"author":{"gitId":"janald99"},"content":"        final StringBuilder builder \u003d new StringBuilder();","lastModifiedDate":"2022-04-07"},{"lineNumber":68,"author":{"gitId":"janald99"},"content":"        builder.append(getName())","lastModifiedDate":"2022-04-07"},{"lineNumber":69,"author":{"gitId":"janald99"},"content":"            .append(\"\\nPhone: \")","lastModifiedDate":"2022-04-07"},{"lineNumber":70,"author":{"gitId":"janald99"},"content":"            .append(getPhone())","lastModifiedDate":"2022-04-07"},{"lineNumber":71,"author":{"gitId":"janald99"},"content":"            .append(\"\\n\")","lastModifiedDate":"2022-04-07"},{"lineNumber":72,"author":{"gitId":"janald99"},"content":"            .append(getPropertyToSell())","lastModifiedDate":"2022-04-07"},{"lineNumber":73,"author":{"gitId":"janald99"},"content":"            .append(\"\\nAppointment: \")","lastModifiedDate":"2022-04-07"},{"lineNumber":74,"author":{"gitId":"janald99"},"content":"            .append(getAppointment());","lastModifiedDate":"2022-04-07"},{"lineNumber":75,"author":{"gitId":"janald99"},"content":"","lastModifiedDate":"2022-04-07"},{"lineNumber":76,"author":{"gitId":"janald99"},"content":"        Set\u003cTag\u003e tags \u003d getTags();","lastModifiedDate":"2022-04-07"},{"lineNumber":77,"author":{"gitId":"janald99"},"content":"        if (!tags.isEmpty()) {","lastModifiedDate":"2022-04-07"},{"lineNumber":78,"author":{"gitId":"janald99"},"content":"            builder.append(\"; Tags: \");","lastModifiedDate":"2022-04-07"},{"lineNumber":79,"author":{"gitId":"janald99"},"content":"            tags.forEach(builder::append);","lastModifiedDate":"2022-04-07"},{"lineNumber":80,"author":{"gitId":"janald99"},"content":"        }","lastModifiedDate":"2022-04-07"},{"lineNumber":81,"author":{"gitId":"janald99"},"content":"        return builder.toString();","lastModifiedDate":"2022-04-07"},{"lineNumber":82,"author":{"gitId":"janald99"},"content":"    }","lastModifiedDate":"2022-04-07"},{"lineNumber":83,"author":{"gitId":"cwnm"},"content":"}","lastModifiedDate":"2022-03-16"}],"authorContributionMap":{"janald99":27,"Jacky142857":2,"cwnm":35,"chuashihong":19}},{"path":"src/main/java/seedu/address/model/seller/SellerHouseTypeContainsKeywordsPredicate.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"cwnm"},"content":"package seedu.address.model.seller;","lastModifiedDate":"2022-03-28"},{"lineNumber":2,"author":{"gitId":"cwnm"},"content":"","lastModifiedDate":"2022-03-28"},{"lineNumber":3,"author":{"gitId":"cwnm"},"content":"import java.util.List;","lastModifiedDate":"2022-03-28"},{"lineNumber":4,"author":{"gitId":"cwnm"},"content":"import java.util.function.Predicate;","lastModifiedDate":"2022-03-28"},{"lineNumber":5,"author":{"gitId":"cwnm"},"content":"","lastModifiedDate":"2022-03-28"},{"lineNumber":6,"author":{"gitId":"cwnm"},"content":"import seedu.address.commons.util.StringUtil;","lastModifiedDate":"2022-03-28"},{"lineNumber":7,"author":{"gitId":"cwnm"},"content":"","lastModifiedDate":"2022-03-28"},{"lineNumber":8,"author":{"gitId":"cwnm"},"content":"/**","lastModifiedDate":"2022-03-28"},{"lineNumber":9,"author":{"gitId":"cwnm"},"content":" * Tests that a {@code Seller}\u0027s {@code Housetype} matches any of the keywords given.","lastModifiedDate":"2022-03-28"},{"lineNumber":10,"author":{"gitId":"cwnm"},"content":" */","lastModifiedDate":"2022-03-28"},{"lineNumber":11,"author":{"gitId":"cwnm"},"content":"public class SellerHouseTypeContainsKeywordsPredicate implements Predicate\u003cSeller\u003e {","lastModifiedDate":"2022-03-28"},{"lineNumber":12,"author":{"gitId":"cwnm"},"content":"    private final List\u003cString\u003e keywords;","lastModifiedDate":"2022-03-28"},{"lineNumber":13,"author":{"gitId":"cwnm"},"content":"","lastModifiedDate":"2022-03-28"},{"lineNumber":14,"author":{"gitId":"cwnm"},"content":"    public SellerHouseTypeContainsKeywordsPredicate(List\u003cString\u003e keywords) {","lastModifiedDate":"2022-03-28"},{"lineNumber":15,"author":{"gitId":"cwnm"},"content":"        this.keywords \u003d keywords;","lastModifiedDate":"2022-03-28"},{"lineNumber":16,"author":{"gitId":"cwnm"},"content":"    }","lastModifiedDate":"2022-03-28"},{"lineNumber":17,"author":{"gitId":"cwnm"},"content":"","lastModifiedDate":"2022-03-28"},{"lineNumber":18,"author":{"gitId":"cwnm"},"content":"    @Override","lastModifiedDate":"2022-03-28"},{"lineNumber":19,"author":{"gitId":"cwnm"},"content":"    public boolean test(Seller seller) {","lastModifiedDate":"2022-03-28"},{"lineNumber":20,"author":{"gitId":"cwnm"},"content":"        return keywords.stream()","lastModifiedDate":"2022-03-28"},{"lineNumber":21,"author":{"gitId":"cwnm"},"content":"                .anyMatch(keyword -\u003e StringUtil.containsWordIgnoreCase(","lastModifiedDate":"2022-03-28"},{"lineNumber":22,"author":{"gitId":"cwnm"},"content":"                        seller.getPropertyToSell().getHouse().getHouseType().toString(), keyword));","lastModifiedDate":"2022-03-28"},{"lineNumber":23,"author":{"gitId":"cwnm"},"content":"    }","lastModifiedDate":"2022-03-28"},{"lineNumber":24,"author":{"gitId":"cwnm"},"content":"","lastModifiedDate":"2022-03-28"},{"lineNumber":25,"author":{"gitId":"cwnm"},"content":"    @Override","lastModifiedDate":"2022-03-28"},{"lineNumber":26,"author":{"gitId":"cwnm"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2022-03-28"},{"lineNumber":27,"author":{"gitId":"cwnm"},"content":"        return other \u003d\u003d this // short circuit if same object","lastModifiedDate":"2022-03-28"},{"lineNumber":28,"author":{"gitId":"cwnm"},"content":"                || (other instanceof SellerHouseTypeContainsKeywordsPredicate // instanceof handles nulls","lastModifiedDate":"2022-03-28"},{"lineNumber":29,"author":{"gitId":"cwnm"},"content":"                \u0026\u0026 keywords.equals(((SellerHouseTypeContainsKeywordsPredicate) other).keywords)); // state check","lastModifiedDate":"2022-03-28"},{"lineNumber":30,"author":{"gitId":"cwnm"},"content":"    }","lastModifiedDate":"2022-03-28"},{"lineNumber":31,"author":{"gitId":"cwnm"},"content":"","lastModifiedDate":"2022-03-28"},{"lineNumber":32,"author":{"gitId":"cwnm"},"content":"}","lastModifiedDate":"2022-03-28"}],"authorContributionMap":{"cwnm":32}},{"path":"src/main/java/seedu/address/model/seller/SellerLocationContainsKeywordsPredicate.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"cwnm"},"content":"package seedu.address.model.seller;","lastModifiedDate":"2022-03-30"},{"lineNumber":2,"author":{"gitId":"cwnm"},"content":"","lastModifiedDate":"2022-03-30"},{"lineNumber":3,"author":{"gitId":"cwnm"},"content":"import java.util.List;","lastModifiedDate":"2022-03-30"},{"lineNumber":4,"author":{"gitId":"cwnm"},"content":"import java.util.function.Predicate;","lastModifiedDate":"2022-03-30"},{"lineNumber":5,"author":{"gitId":"cwnm"},"content":"","lastModifiedDate":"2022-03-30"},{"lineNumber":6,"author":{"gitId":"cwnm"},"content":"import seedu.address.commons.util.StringUtil;","lastModifiedDate":"2022-03-30"},{"lineNumber":7,"author":{"gitId":"cwnm"},"content":"","lastModifiedDate":"2022-03-30"},{"lineNumber":8,"author":{"gitId":"cwnm"},"content":"/**","lastModifiedDate":"2022-03-30"},{"lineNumber":9,"author":{"gitId":"cwnm"},"content":" * Tests that a {@code Seller}\u0027s {@code Location} matches any of the keywords given.","lastModifiedDate":"2022-03-30"},{"lineNumber":10,"author":{"gitId":"cwnm"},"content":" */","lastModifiedDate":"2022-03-30"},{"lineNumber":11,"author":{"gitId":"cwnm"},"content":"public class SellerLocationContainsKeywordsPredicate implements Predicate\u003cSeller\u003e {","lastModifiedDate":"2022-03-30"},{"lineNumber":12,"author":{"gitId":"cwnm"},"content":"    private final List\u003cString\u003e keywords;","lastModifiedDate":"2022-03-30"},{"lineNumber":13,"author":{"gitId":"cwnm"},"content":"","lastModifiedDate":"2022-03-30"},{"lineNumber":14,"author":{"gitId":"cwnm"},"content":"    public SellerLocationContainsKeywordsPredicate(List\u003cString\u003e keywords) {","lastModifiedDate":"2022-03-30"},{"lineNumber":15,"author":{"gitId":"cwnm"},"content":"        this.keywords \u003d keywords;","lastModifiedDate":"2022-03-30"},{"lineNumber":16,"author":{"gitId":"cwnm"},"content":"    }","lastModifiedDate":"2022-03-30"},{"lineNumber":17,"author":{"gitId":"cwnm"},"content":"","lastModifiedDate":"2022-03-30"},{"lineNumber":18,"author":{"gitId":"cwnm"},"content":"    @Override","lastModifiedDate":"2022-03-30"},{"lineNumber":19,"author":{"gitId":"cwnm"},"content":"    public boolean test(Seller seller) {","lastModifiedDate":"2022-03-30"},{"lineNumber":20,"author":{"gitId":"cwnm"},"content":"        return keywords.stream()","lastModifiedDate":"2022-03-30"},{"lineNumber":21,"author":{"gitId":"cwnm"},"content":"                .anyMatch(keyword -\u003e StringUtil.containsWordIgnoreCase(","lastModifiedDate":"2022-03-30"},{"lineNumber":22,"author":{"gitId":"cwnm"},"content":"                        seller.getPropertyToSell().getHouse().getLocation().toString(), keyword));","lastModifiedDate":"2022-03-30"},{"lineNumber":23,"author":{"gitId":"cwnm"},"content":"    }","lastModifiedDate":"2022-03-30"},{"lineNumber":24,"author":{"gitId":"cwnm"},"content":"","lastModifiedDate":"2022-03-30"},{"lineNumber":25,"author":{"gitId":"cwnm"},"content":"    @Override","lastModifiedDate":"2022-03-30"},{"lineNumber":26,"author":{"gitId":"cwnm"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2022-03-30"},{"lineNumber":27,"author":{"gitId":"cwnm"},"content":"        return other \u003d\u003d this // short circuit if same object","lastModifiedDate":"2022-03-30"},{"lineNumber":28,"author":{"gitId":"cwnm"},"content":"                || (other instanceof SellerLocationContainsKeywordsPredicate // instanceof handles nulls","lastModifiedDate":"2022-03-30"},{"lineNumber":29,"author":{"gitId":"cwnm"},"content":"                \u0026\u0026 keywords.equals(((SellerLocationContainsKeywordsPredicate) other).keywords)); // state check","lastModifiedDate":"2022-03-30"},{"lineNumber":30,"author":{"gitId":"cwnm"},"content":"    }","lastModifiedDate":"2022-03-30"},{"lineNumber":31,"author":{"gitId":"cwnm"},"content":"","lastModifiedDate":"2022-03-30"},{"lineNumber":32,"author":{"gitId":"cwnm"},"content":"}","lastModifiedDate":"2022-03-30"}],"authorContributionMap":{"cwnm":32}},{"path":"src/main/java/seedu/address/model/seller/SellerNameContainsKeywordsPredicate.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"cwnm"},"content":"package seedu.address.model.seller;","lastModifiedDate":"2022-03-28"},{"lineNumber":2,"author":{"gitId":"cwnm"},"content":"","lastModifiedDate":"2022-03-28"},{"lineNumber":3,"author":{"gitId":"cwnm"},"content":"import java.util.List;","lastModifiedDate":"2022-03-28"},{"lineNumber":4,"author":{"gitId":"cwnm"},"content":"import java.util.function.Predicate;","lastModifiedDate":"2022-03-28"},{"lineNumber":5,"author":{"gitId":"cwnm"},"content":"","lastModifiedDate":"2022-03-28"},{"lineNumber":6,"author":{"gitId":"cwnm"},"content":"import seedu.address.commons.util.StringUtil;","lastModifiedDate":"2022-03-28"},{"lineNumber":7,"author":{"gitId":"cwnm"},"content":"","lastModifiedDate":"2022-03-28"},{"lineNumber":8,"author":{"gitId":"cwnm"},"content":"/**","lastModifiedDate":"2022-03-28"},{"lineNumber":9,"author":{"gitId":"cwnm"},"content":" * Tests that a {@code Seller}\u0027s {@code Name} matches any of the keywords given.","lastModifiedDate":"2022-03-28"},{"lineNumber":10,"author":{"gitId":"cwnm"},"content":" */","lastModifiedDate":"2022-03-28"},{"lineNumber":11,"author":{"gitId":"cwnm"},"content":"public class SellerNameContainsKeywordsPredicate implements Predicate\u003cSeller\u003e {","lastModifiedDate":"2022-03-28"},{"lineNumber":12,"author":{"gitId":"cwnm"},"content":"    private final List\u003cString\u003e keywords;","lastModifiedDate":"2022-03-28"},{"lineNumber":13,"author":{"gitId":"cwnm"},"content":"","lastModifiedDate":"2022-03-28"},{"lineNumber":14,"author":{"gitId":"cwnm"},"content":"    public SellerNameContainsKeywordsPredicate(List\u003cString\u003e keywords) {","lastModifiedDate":"2022-03-28"},{"lineNumber":15,"author":{"gitId":"cwnm"},"content":"        this.keywords \u003d keywords;","lastModifiedDate":"2022-03-28"},{"lineNumber":16,"author":{"gitId":"cwnm"},"content":"    }","lastModifiedDate":"2022-03-28"},{"lineNumber":17,"author":{"gitId":"cwnm"},"content":"","lastModifiedDate":"2022-03-28"},{"lineNumber":18,"author":{"gitId":"cwnm"},"content":"    @Override","lastModifiedDate":"2022-03-28"},{"lineNumber":19,"author":{"gitId":"cwnm"},"content":"    public boolean test(Seller seller) {","lastModifiedDate":"2022-03-28"},{"lineNumber":20,"author":{"gitId":"cwnm"},"content":"        return keywords.stream()","lastModifiedDate":"2022-03-28"},{"lineNumber":21,"author":{"gitId":"cwnm"},"content":"                .anyMatch(keyword -\u003e StringUtil.containsWordIgnoreCase(seller.getName().fullName, keyword));","lastModifiedDate":"2022-03-28"},{"lineNumber":22,"author":{"gitId":"cwnm"},"content":"    }","lastModifiedDate":"2022-03-28"},{"lineNumber":23,"author":{"gitId":"cwnm"},"content":"","lastModifiedDate":"2022-03-28"},{"lineNumber":24,"author":{"gitId":"cwnm"},"content":"    @Override","lastModifiedDate":"2022-03-28"},{"lineNumber":25,"author":{"gitId":"cwnm"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2022-03-28"},{"lineNumber":26,"author":{"gitId":"cwnm"},"content":"        return other \u003d\u003d this // short circuit if same object","lastModifiedDate":"2022-03-28"},{"lineNumber":27,"author":{"gitId":"cwnm"},"content":"                || (other instanceof SellerNameContainsKeywordsPredicate // instanceof handles nulls","lastModifiedDate":"2022-03-28"},{"lineNumber":28,"author":{"gitId":"cwnm"},"content":"                \u0026\u0026 keywords.equals(((SellerNameContainsKeywordsPredicate) other).keywords)); // state check","lastModifiedDate":"2022-03-28"},{"lineNumber":29,"author":{"gitId":"cwnm"},"content":"    }","lastModifiedDate":"2022-03-28"},{"lineNumber":30,"author":{"gitId":"cwnm"},"content":"","lastModifiedDate":"2022-03-28"},{"lineNumber":31,"author":{"gitId":"cwnm"},"content":"}","lastModifiedDate":"2022-03-28"}],"authorContributionMap":{"cwnm":31}},{"path":"src/main/java/seedu/address/model/seller/SellerPhoneContainsKeywordsPredicate.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"cwnm"},"content":"package seedu.address.model.seller;","lastModifiedDate":"2022-03-28"},{"lineNumber":2,"author":{"gitId":"cwnm"},"content":"","lastModifiedDate":"2022-03-28"},{"lineNumber":3,"author":{"gitId":"cwnm"},"content":"import java.util.List;","lastModifiedDate":"2022-03-28"},{"lineNumber":4,"author":{"gitId":"cwnm"},"content":"import java.util.function.Predicate;","lastModifiedDate":"2022-03-28"},{"lineNumber":5,"author":{"gitId":"cwnm"},"content":"","lastModifiedDate":"2022-03-28"},{"lineNumber":6,"author":{"gitId":"cwnm"},"content":"import seedu.address.commons.util.StringUtil;","lastModifiedDate":"2022-03-28"},{"lineNumber":7,"author":{"gitId":"cwnm"},"content":"","lastModifiedDate":"2022-03-28"},{"lineNumber":8,"author":{"gitId":"cwnm"},"content":"/**","lastModifiedDate":"2022-03-28"},{"lineNumber":9,"author":{"gitId":"cwnm"},"content":" * Tests that a {@code Seller}\u0027s {@code Phone} matches any of the keywords given.","lastModifiedDate":"2022-03-28"},{"lineNumber":10,"author":{"gitId":"cwnm"},"content":" */","lastModifiedDate":"2022-03-28"},{"lineNumber":11,"author":{"gitId":"cwnm"},"content":"public class SellerPhoneContainsKeywordsPredicate implements Predicate\u003cSeller\u003e {","lastModifiedDate":"2022-03-28"},{"lineNumber":12,"author":{"gitId":"cwnm"},"content":"    private final List\u003cString\u003e keywords;","lastModifiedDate":"2022-03-28"},{"lineNumber":13,"author":{"gitId":"cwnm"},"content":"","lastModifiedDate":"2022-03-28"},{"lineNumber":14,"author":{"gitId":"cwnm"},"content":"    public SellerPhoneContainsKeywordsPredicate(List\u003cString\u003e keywords) {","lastModifiedDate":"2022-03-28"},{"lineNumber":15,"author":{"gitId":"cwnm"},"content":"        this.keywords \u003d keywords;","lastModifiedDate":"2022-03-28"},{"lineNumber":16,"author":{"gitId":"cwnm"},"content":"    }","lastModifiedDate":"2022-03-28"},{"lineNumber":17,"author":{"gitId":"cwnm"},"content":"","lastModifiedDate":"2022-03-28"},{"lineNumber":18,"author":{"gitId":"cwnm"},"content":"    @Override","lastModifiedDate":"2022-03-28"},{"lineNumber":19,"author":{"gitId":"cwnm"},"content":"    public boolean test(Seller seller) {","lastModifiedDate":"2022-03-28"},{"lineNumber":20,"author":{"gitId":"cwnm"},"content":"        return keywords.stream()","lastModifiedDate":"2022-03-28"},{"lineNumber":21,"author":{"gitId":"cwnm"},"content":"                .anyMatch(keyword -\u003e StringUtil.containsWordIgnoreCase(seller.getPhone().value, keyword));","lastModifiedDate":"2022-03-28"},{"lineNumber":22,"author":{"gitId":"cwnm"},"content":"    }","lastModifiedDate":"2022-03-28"},{"lineNumber":23,"author":{"gitId":"cwnm"},"content":"","lastModifiedDate":"2022-03-28"},{"lineNumber":24,"author":{"gitId":"cwnm"},"content":"    @Override","lastModifiedDate":"2022-03-28"},{"lineNumber":25,"author":{"gitId":"cwnm"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2022-03-28"},{"lineNumber":26,"author":{"gitId":"cwnm"},"content":"        return other \u003d\u003d this // short circuit if same object","lastModifiedDate":"2022-03-28"},{"lineNumber":27,"author":{"gitId":"cwnm"},"content":"                || (other instanceof SellerPhoneContainsKeywordsPredicate // instanceof handles nulls","lastModifiedDate":"2022-03-28"},{"lineNumber":28,"author":{"gitId":"cwnm"},"content":"                \u0026\u0026 keywords.equals(((SellerPhoneContainsKeywordsPredicate) other).keywords)); // state check","lastModifiedDate":"2022-03-28"},{"lineNumber":29,"author":{"gitId":"cwnm"},"content":"    }","lastModifiedDate":"2022-03-28"},{"lineNumber":30,"author":{"gitId":"cwnm"},"content":"","lastModifiedDate":"2022-03-28"},{"lineNumber":31,"author":{"gitId":"cwnm"},"content":"}","lastModifiedDate":"2022-03-28"},{"lineNumber":32,"author":{"gitId":"cwnm"},"content":"","lastModifiedDate":"2022-03-28"}],"authorContributionMap":{"cwnm":32}},{"path":"src/main/java/seedu/address/model/seller/SellerTagsContainsKeywordsPredicate.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"cwnm"},"content":"package seedu.address.model.seller;","lastModifiedDate":"2022-03-28"},{"lineNumber":2,"author":{"gitId":"cwnm"},"content":"","lastModifiedDate":"2022-03-28"},{"lineNumber":3,"author":{"gitId":"cwnm"},"content":"import java.util.List;","lastModifiedDate":"2022-03-28"},{"lineNumber":4,"author":{"gitId":"cwnm"},"content":"import java.util.function.Predicate;","lastModifiedDate":"2022-03-28"},{"lineNumber":5,"author":{"gitId":"cwnm"},"content":"","lastModifiedDate":"2022-03-28"},{"lineNumber":6,"author":{"gitId":"cwnm"},"content":"import seedu.address.commons.util.StringUtil;","lastModifiedDate":"2022-03-28"},{"lineNumber":7,"author":{"gitId":"cwnm"},"content":"","lastModifiedDate":"2022-03-28"},{"lineNumber":8,"author":{"gitId":"cwnm"},"content":"/**","lastModifiedDate":"2022-03-28"},{"lineNumber":9,"author":{"gitId":"cwnm"},"content":" * Tests that a {@code Seller}\u0027s {@code Name} matches any of the keywords given.","lastModifiedDate":"2022-03-28"},{"lineNumber":10,"author":{"gitId":"cwnm"},"content":" */","lastModifiedDate":"2022-03-28"},{"lineNumber":11,"author":{"gitId":"cwnm"},"content":"public class SellerTagsContainsKeywordsPredicate implements Predicate\u003cSeller\u003e {","lastModifiedDate":"2022-03-28"},{"lineNumber":12,"author":{"gitId":"cwnm"},"content":"    private final List\u003cString\u003e keywords;","lastModifiedDate":"2022-03-28"},{"lineNumber":13,"author":{"gitId":"cwnm"},"content":"","lastModifiedDate":"2022-03-28"},{"lineNumber":14,"author":{"gitId":"cwnm"},"content":"    public SellerTagsContainsKeywordsPredicate(List\u003cString\u003e keywords) {","lastModifiedDate":"2022-03-28"},{"lineNumber":15,"author":{"gitId":"cwnm"},"content":"        this.keywords \u003d keywords;","lastModifiedDate":"2022-03-28"},{"lineNumber":16,"author":{"gitId":"cwnm"},"content":"    }","lastModifiedDate":"2022-03-28"},{"lineNumber":17,"author":{"gitId":"cwnm"},"content":"","lastModifiedDate":"2022-03-28"},{"lineNumber":18,"author":{"gitId":"cwnm"},"content":"    @Override","lastModifiedDate":"2022-03-28"},{"lineNumber":19,"author":{"gitId":"cwnm"},"content":"    public boolean test(Seller seller) {","lastModifiedDate":"2022-03-28"},{"lineNumber":20,"author":{"gitId":"cwnm"},"content":"        return keywords.stream()","lastModifiedDate":"2022-03-28"},{"lineNumber":21,"author":{"gitId":"cwnm"},"content":"                .anyMatch(keyword -\u003e StringUtil.containsWordIgnoreCase(seller.getTags().toString(), keyword));","lastModifiedDate":"2022-03-28"},{"lineNumber":22,"author":{"gitId":"cwnm"},"content":"    }","lastModifiedDate":"2022-03-28"},{"lineNumber":23,"author":{"gitId":"cwnm"},"content":"","lastModifiedDate":"2022-03-28"},{"lineNumber":24,"author":{"gitId":"cwnm"},"content":"    @Override","lastModifiedDate":"2022-03-28"},{"lineNumber":25,"author":{"gitId":"cwnm"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2022-03-28"},{"lineNumber":26,"author":{"gitId":"cwnm"},"content":"        return other \u003d\u003d this // short circuit if same object","lastModifiedDate":"2022-03-28"},{"lineNumber":27,"author":{"gitId":"cwnm"},"content":"                || (other instanceof SellerTagsContainsKeywordsPredicate // instanceof handles nulls","lastModifiedDate":"2022-03-28"},{"lineNumber":28,"author":{"gitId":"cwnm"},"content":"                \u0026\u0026 keywords.equals(((SellerTagsContainsKeywordsPredicate) other).keywords)); // state check","lastModifiedDate":"2022-03-28"},{"lineNumber":29,"author":{"gitId":"cwnm"},"content":"    }","lastModifiedDate":"2022-03-28"},{"lineNumber":30,"author":{"gitId":"cwnm"},"content":"","lastModifiedDate":"2022-03-28"},{"lineNumber":31,"author":{"gitId":"cwnm"},"content":"}","lastModifiedDate":"2022-03-28"}],"authorContributionMap":{"cwnm":31}},{"path":"src/main/java/seedu/address/model/seller/UniqueSellerList.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"cwnm"},"content":"package seedu.address.model.seller;","lastModifiedDate":"2022-03-16"},{"lineNumber":2,"author":{"gitId":"cwnm"},"content":"","lastModifiedDate":"2022-03-16"},{"lineNumber":3,"author":{"gitId":"cwnm"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2022-03-16"},{"lineNumber":4,"author":{"gitId":"cwnm"},"content":"import static seedu.address.commons.util.CollectionUtil.requireAllNonNull;","lastModifiedDate":"2022-03-16"},{"lineNumber":5,"author":{"gitId":"cwnm"},"content":"","lastModifiedDate":"2022-03-16"},{"lineNumber":6,"author":{"gitId":"cwnm"},"content":"import java.util.Comparator;","lastModifiedDate":"2022-03-16"},{"lineNumber":7,"author":{"gitId":"cwnm"},"content":"import java.util.Iterator;","lastModifiedDate":"2022-03-16"},{"lineNumber":8,"author":{"gitId":"cwnm"},"content":"import java.util.List;","lastModifiedDate":"2022-03-16"},{"lineNumber":9,"author":{"gitId":"cwnm"},"content":"","lastModifiedDate":"2022-03-16"},{"lineNumber":10,"author":{"gitId":"cwnm"},"content":"import javafx.collections.FXCollections;","lastModifiedDate":"2022-03-16"},{"lineNumber":11,"author":{"gitId":"cwnm"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2022-03-16"},{"lineNumber":12,"author":{"gitId":"Jacky142857"},"content":"import seedu.address.commons.util.ComparatorUtil;","lastModifiedDate":"2022-03-31"},{"lineNumber":13,"author":{"gitId":"cwnm"},"content":"import seedu.address.model.client.Client;","lastModifiedDate":"2022-03-16"},{"lineNumber":14,"author":{"gitId":"cwnm"},"content":"import seedu.address.model.client.exceptions.ClientNotFoundException;","lastModifiedDate":"2022-03-16"},{"lineNumber":15,"author":{"gitId":"cwnm"},"content":"import seedu.address.model.client.exceptions.DuplicateClientException;","lastModifiedDate":"2022-03-16"},{"lineNumber":16,"author":{"gitId":"cwnm"},"content":"","lastModifiedDate":"2022-03-16"},{"lineNumber":17,"author":{"gitId":"cwnm"},"content":"/**","lastModifiedDate":"2022-03-16"},{"lineNumber":18,"author":{"gitId":"cwnm"},"content":" * A list of clients that enforces uniqueness between its elements and does not allow nulls.","lastModifiedDate":"2022-03-16"},{"lineNumber":19,"author":{"gitId":"cwnm"},"content":" * A client is considered unique by comparing using {@code client#isSameclient(client)}. As such, adding and updating of","lastModifiedDate":"2022-03-16"},{"lineNumber":20,"author":{"gitId":"cwnm"},"content":" * clients uses client#isSameclient(client) for equality so as to ensure that the client being added or updated is","lastModifiedDate":"2022-03-16"},{"lineNumber":21,"author":{"gitId":"cwnm"},"content":" * unique in terms of identity in the UniqueclientList. However, the removal of a client uses client#equals(Object) so","lastModifiedDate":"2022-03-16"},{"lineNumber":22,"author":{"gitId":"cwnm"},"content":" * as to ensure that the client with exactly the same fields will be removed.","lastModifiedDate":"2022-03-16"},{"lineNumber":23,"author":{"gitId":"cwnm"},"content":" *","lastModifiedDate":"2022-03-16"},{"lineNumber":24,"author":{"gitId":"cwnm"},"content":" * Supports a minimal set of list operations.","lastModifiedDate":"2022-03-16"},{"lineNumber":25,"author":{"gitId":"cwnm"},"content":" *","lastModifiedDate":"2022-03-16"},{"lineNumber":26,"author":{"gitId":"cwnm"},"content":" * @see Client#isSameclient(Client)","lastModifiedDate":"2022-03-16"},{"lineNumber":27,"author":{"gitId":"cwnm"},"content":" */","lastModifiedDate":"2022-03-16"},{"lineNumber":28,"author":{"gitId":"cwnm"},"content":"public class UniqueSellerList implements Iterable\u003cSeller\u003e {","lastModifiedDate":"2022-03-16"},{"lineNumber":29,"author":{"gitId":"cwnm"},"content":"","lastModifiedDate":"2022-03-16"},{"lineNumber":30,"author":{"gitId":"cwnm"},"content":"    private final ObservableList\u003cSeller\u003e internalList \u003d FXCollections.observableArrayList();","lastModifiedDate":"2022-03-16"},{"lineNumber":31,"author":{"gitId":"cwnm"},"content":"    private final ObservableList\u003cSeller\u003e internalUnmodifiableList \u003d","lastModifiedDate":"2022-03-16"},{"lineNumber":32,"author":{"gitId":"cwnm"},"content":"            FXCollections.unmodifiableObservableList(internalList);","lastModifiedDate":"2022-03-16"},{"lineNumber":33,"author":{"gitId":"cwnm"},"content":"","lastModifiedDate":"2022-03-16"},{"lineNumber":34,"author":{"gitId":"cwnm"},"content":"    /**","lastModifiedDate":"2022-03-16"},{"lineNumber":35,"author":{"gitId":"cwnm"},"content":"     * Returns true if the list contains an equivalent client as the given argument.","lastModifiedDate":"2022-03-16"},{"lineNumber":36,"author":{"gitId":"cwnm"},"content":"     */","lastModifiedDate":"2022-03-16"},{"lineNumber":37,"author":{"gitId":"cwnm"},"content":"    public boolean contains(Client toCheck) {","lastModifiedDate":"2022-03-16"},{"lineNumber":38,"author":{"gitId":"cwnm"},"content":"        requireNonNull(toCheck);","lastModifiedDate":"2022-03-16"},{"lineNumber":39,"author":{"gitId":"cwnm"},"content":"        return internalList.stream().anyMatch(toCheck::isSameclient);","lastModifiedDate":"2022-03-16"},{"lineNumber":40,"author":{"gitId":"cwnm"},"content":"    }","lastModifiedDate":"2022-03-16"},{"lineNumber":41,"author":{"gitId":"cwnm"},"content":"","lastModifiedDate":"2022-03-16"},{"lineNumber":42,"author":{"gitId":"cwnm"},"content":"    /**","lastModifiedDate":"2022-03-16"},{"lineNumber":43,"author":{"gitId":"cwnm"},"content":"     * Adds a client to the list.","lastModifiedDate":"2022-03-16"},{"lineNumber":44,"author":{"gitId":"cwnm"},"content":"     * The client must not already exist in the list.","lastModifiedDate":"2022-03-16"},{"lineNumber":45,"author":{"gitId":"cwnm"},"content":"     */","lastModifiedDate":"2022-03-16"},{"lineNumber":46,"author":{"gitId":"cwnm"},"content":"    public void add(Seller toAdd) {","lastModifiedDate":"2022-03-16"},{"lineNumber":47,"author":{"gitId":"cwnm"},"content":"        requireNonNull(toAdd);","lastModifiedDate":"2022-03-16"},{"lineNumber":48,"author":{"gitId":"cwnm"},"content":"        if (contains(toAdd)) {","lastModifiedDate":"2022-03-16"},{"lineNumber":49,"author":{"gitId":"cwnm"},"content":"            throw new DuplicateClientException();","lastModifiedDate":"2022-03-16"},{"lineNumber":50,"author":{"gitId":"cwnm"},"content":"        }","lastModifiedDate":"2022-03-16"},{"lineNumber":51,"author":{"gitId":"cwnm"},"content":"        internalList.add(toAdd);","lastModifiedDate":"2022-03-16"},{"lineNumber":52,"author":{"gitId":"cwnm"},"content":"    }","lastModifiedDate":"2022-03-16"},{"lineNumber":53,"author":{"gitId":"cwnm"},"content":"","lastModifiedDate":"2022-03-16"},{"lineNumber":54,"author":{"gitId":"cwnm"},"content":"    /**","lastModifiedDate":"2022-03-16"},{"lineNumber":55,"author":{"gitId":"cwnm"},"content":"     * Replaces the client {@code target} in the list with {@code editedclient}.","lastModifiedDate":"2022-03-16"},{"lineNumber":56,"author":{"gitId":"cwnm"},"content":"     * {@code target} must exist in the list.","lastModifiedDate":"2022-03-16"},{"lineNumber":57,"author":{"gitId":"cwnm"},"content":"     * The client identity of {@code editedclient} must not be the same as another existing client in the list.","lastModifiedDate":"2022-03-16"},{"lineNumber":58,"author":{"gitId":"cwnm"},"content":"     */","lastModifiedDate":"2022-03-16"},{"lineNumber":59,"author":{"gitId":"cwnm"},"content":"    public void setSeller(Seller target, Seller editedClient) {","lastModifiedDate":"2022-03-16"},{"lineNumber":60,"author":{"gitId":"cwnm"},"content":"        requireAllNonNull(target, editedClient);","lastModifiedDate":"2022-03-16"},{"lineNumber":61,"author":{"gitId":"cwnm"},"content":"","lastModifiedDate":"2022-03-16"},{"lineNumber":62,"author":{"gitId":"cwnm"},"content":"        int index \u003d internalList.indexOf(target);","lastModifiedDate":"2022-03-16"},{"lineNumber":63,"author":{"gitId":"cwnm"},"content":"        if (index \u003d\u003d -1) {","lastModifiedDate":"2022-03-16"},{"lineNumber":64,"author":{"gitId":"cwnm"},"content":"            throw new ClientNotFoundException();","lastModifiedDate":"2022-03-16"},{"lineNumber":65,"author":{"gitId":"cwnm"},"content":"        }","lastModifiedDate":"2022-03-16"},{"lineNumber":66,"author":{"gitId":"cwnm"},"content":"","lastModifiedDate":"2022-03-16"},{"lineNumber":67,"author":{"gitId":"cwnm"},"content":"        if (!target.isSameclient(editedClient) \u0026\u0026 contains(editedClient)) {","lastModifiedDate":"2022-03-16"},{"lineNumber":68,"author":{"gitId":"cwnm"},"content":"            throw new DuplicateClientException();","lastModifiedDate":"2022-03-16"},{"lineNumber":69,"author":{"gitId":"cwnm"},"content":"        }","lastModifiedDate":"2022-03-16"},{"lineNumber":70,"author":{"gitId":"cwnm"},"content":"","lastModifiedDate":"2022-03-16"},{"lineNumber":71,"author":{"gitId":"cwnm"},"content":"        internalList.set(index, editedClient);","lastModifiedDate":"2022-03-16"},{"lineNumber":72,"author":{"gitId":"cwnm"},"content":"    }","lastModifiedDate":"2022-03-16"},{"lineNumber":73,"author":{"gitId":"cwnm"},"content":"","lastModifiedDate":"2022-03-16"},{"lineNumber":74,"author":{"gitId":"cwnm"},"content":"    /**","lastModifiedDate":"2022-03-16"},{"lineNumber":75,"author":{"gitId":"cwnm"},"content":"     * Removes the equivalent client from the list.","lastModifiedDate":"2022-03-16"},{"lineNumber":76,"author":{"gitId":"cwnm"},"content":"     * The client must exist in the list.","lastModifiedDate":"2022-03-16"},{"lineNumber":77,"author":{"gitId":"cwnm"},"content":"     */","lastModifiedDate":"2022-03-16"},{"lineNumber":78,"author":{"gitId":"cwnm"},"content":"    public void remove(Seller toRemove) {","lastModifiedDate":"2022-03-16"},{"lineNumber":79,"author":{"gitId":"cwnm"},"content":"        requireNonNull(toRemove);","lastModifiedDate":"2022-03-16"},{"lineNumber":80,"author":{"gitId":"cwnm"},"content":"        if (!internalList.remove(toRemove)) {","lastModifiedDate":"2022-03-16"},{"lineNumber":81,"author":{"gitId":"cwnm"},"content":"            throw new ClientNotFoundException();","lastModifiedDate":"2022-03-16"},{"lineNumber":82,"author":{"gitId":"cwnm"},"content":"        }","lastModifiedDate":"2022-03-16"},{"lineNumber":83,"author":{"gitId":"cwnm"},"content":"    }","lastModifiedDate":"2022-03-16"},{"lineNumber":84,"author":{"gitId":"cwnm"},"content":"","lastModifiedDate":"2022-03-16"},{"lineNumber":85,"author":{"gitId":"cwnm"},"content":"    public void setSellers(UniqueSellerList replacement) {","lastModifiedDate":"2022-03-16"},{"lineNumber":86,"author":{"gitId":"cwnm"},"content":"        requireNonNull(replacement);","lastModifiedDate":"2022-03-16"},{"lineNumber":87,"author":{"gitId":"cwnm"},"content":"        internalList.setAll(replacement.internalList);","lastModifiedDate":"2022-03-16"},{"lineNumber":88,"author":{"gitId":"cwnm"},"content":"    }","lastModifiedDate":"2022-03-16"},{"lineNumber":89,"author":{"gitId":"cwnm"},"content":"","lastModifiedDate":"2022-03-16"},{"lineNumber":90,"author":{"gitId":"cwnm"},"content":"    /**","lastModifiedDate":"2022-03-16"},{"lineNumber":91,"author":{"gitId":"cwnm"},"content":"     * Replaces the contents of this list with {@code clients}.","lastModifiedDate":"2022-03-16"},{"lineNumber":92,"author":{"gitId":"cwnm"},"content":"     * {@code clients} must not contain duplicate clients.","lastModifiedDate":"2022-03-16"},{"lineNumber":93,"author":{"gitId":"cwnm"},"content":"     */","lastModifiedDate":"2022-03-16"},{"lineNumber":94,"author":{"gitId":"cwnm"},"content":"    public void setSellers(List\u003cSeller\u003e sellers) {","lastModifiedDate":"2022-03-16"},{"lineNumber":95,"author":{"gitId":"cwnm"},"content":"        requireAllNonNull(sellers);","lastModifiedDate":"2022-03-16"},{"lineNumber":96,"author":{"gitId":"cwnm"},"content":"        if (!clientsAreUnique(sellers)) {","lastModifiedDate":"2022-03-16"},{"lineNumber":97,"author":{"gitId":"cwnm"},"content":"            throw new DuplicateClientException();","lastModifiedDate":"2022-03-16"},{"lineNumber":98,"author":{"gitId":"cwnm"},"content":"        }","lastModifiedDate":"2022-03-16"},{"lineNumber":99,"author":{"gitId":"cwnm"},"content":"","lastModifiedDate":"2022-03-16"},{"lineNumber":100,"author":{"gitId":"cwnm"},"content":"        internalList.setAll(sellers);","lastModifiedDate":"2022-03-16"},{"lineNumber":101,"author":{"gitId":"cwnm"},"content":"    }","lastModifiedDate":"2022-03-16"},{"lineNumber":102,"author":{"gitId":"cwnm"},"content":"","lastModifiedDate":"2022-03-16"},{"lineNumber":103,"author":{"gitId":"cwnm"},"content":"    public void sortPersons() {","lastModifiedDate":"2022-03-16"},{"lineNumber":104,"author":{"gitId":"cwnm"},"content":"        internalList.sort(Comparator.comparing(p -\u003e p.getName().fullName));","lastModifiedDate":"2022-03-16"},{"lineNumber":105,"author":{"gitId":"cwnm"},"content":"    }","lastModifiedDate":"2022-03-16"},{"lineNumber":106,"author":{"gitId":"cwnm"},"content":"","lastModifiedDate":"2022-03-16"},{"lineNumber":107,"author":{"gitId":"cwnm"},"content":"    /**","lastModifiedDate":"2022-03-16"},{"lineNumber":108,"author":{"gitId":"cwnm"},"content":"     * Returns the backing list as an unmodifiable {@code ObservableList}.","lastModifiedDate":"2022-03-16"},{"lineNumber":109,"author":{"gitId":"cwnm"},"content":"     */","lastModifiedDate":"2022-03-16"},{"lineNumber":110,"author":{"gitId":"cwnm"},"content":"    public ObservableList\u003cSeller\u003e asUnmodifiableObservableList() {","lastModifiedDate":"2022-03-16"},{"lineNumber":111,"author":{"gitId":"cwnm"},"content":"        return internalUnmodifiableList;","lastModifiedDate":"2022-03-16"},{"lineNumber":112,"author":{"gitId":"cwnm"},"content":"    }","lastModifiedDate":"2022-03-16"},{"lineNumber":113,"author":{"gitId":"cwnm"},"content":"","lastModifiedDate":"2022-03-16"},{"lineNumber":114,"author":{"gitId":"cwnm"},"content":"    @Override","lastModifiedDate":"2022-03-16"},{"lineNumber":115,"author":{"gitId":"cwnm"},"content":"    public Iterator\u003cSeller\u003e iterator() {","lastModifiedDate":"2022-03-16"},{"lineNumber":116,"author":{"gitId":"cwnm"},"content":"        return internalList.iterator();","lastModifiedDate":"2022-03-16"},{"lineNumber":117,"author":{"gitId":"cwnm"},"content":"    }","lastModifiedDate":"2022-03-16"},{"lineNumber":118,"author":{"gitId":"cwnm"},"content":"","lastModifiedDate":"2022-03-16"},{"lineNumber":119,"author":{"gitId":"cwnm"},"content":"    @Override","lastModifiedDate":"2022-03-16"},{"lineNumber":120,"author":{"gitId":"cwnm"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2022-03-16"},{"lineNumber":121,"author":{"gitId":"cwnm"},"content":"        return other \u003d\u003d this // short circuit if same object","lastModifiedDate":"2022-03-16"},{"lineNumber":122,"author":{"gitId":"chuashihong"},"content":"                || (other instanceof UniqueSellerList // instanceof handles nulls","lastModifiedDate":"2022-04-07"},{"lineNumber":123,"author":{"gitId":"cwnm"},"content":"                \u0026\u0026 internalList.equals(((UniqueSellerList) other).internalList));","lastModifiedDate":"2022-03-16"},{"lineNumber":124,"author":{"gitId":"cwnm"},"content":"    }","lastModifiedDate":"2022-03-16"},{"lineNumber":125,"author":{"gitId":"cwnm"},"content":"","lastModifiedDate":"2022-03-16"},{"lineNumber":126,"author":{"gitId":"cwnm"},"content":"    @Override","lastModifiedDate":"2022-03-16"},{"lineNumber":127,"author":{"gitId":"cwnm"},"content":"    public int hashCode() {","lastModifiedDate":"2022-03-16"},{"lineNumber":128,"author":{"gitId":"cwnm"},"content":"        return internalList.hashCode();","lastModifiedDate":"2022-03-16"},{"lineNumber":129,"author":{"gitId":"cwnm"},"content":"    }","lastModifiedDate":"2022-03-16"},{"lineNumber":130,"author":{"gitId":"cwnm"},"content":"","lastModifiedDate":"2022-03-16"},{"lineNumber":131,"author":{"gitId":"cwnm"},"content":"    /**","lastModifiedDate":"2022-03-16"},{"lineNumber":132,"author":{"gitId":"cwnm"},"content":"     * Returns true if {@code clients} contains only unique clients.","lastModifiedDate":"2022-03-16"},{"lineNumber":133,"author":{"gitId":"cwnm"},"content":"     */","lastModifiedDate":"2022-03-16"},{"lineNumber":134,"author":{"gitId":"cwnm"},"content":"    private boolean clientsAreUnique(List\u003cSeller\u003e sellers) {","lastModifiedDate":"2022-03-16"},{"lineNumber":135,"author":{"gitId":"cwnm"},"content":"        for (int i \u003d 0; i \u003c sellers.size() - 1; i++) {","lastModifiedDate":"2022-03-16"},{"lineNumber":136,"author":{"gitId":"cwnm"},"content":"            for (int j \u003d i + 1; j \u003c sellers.size(); j++) {","lastModifiedDate":"2022-03-16"},{"lineNumber":137,"author":{"gitId":"cwnm"},"content":"                if (sellers.get(i).isSameclient(sellers.get(j))) {","lastModifiedDate":"2022-03-16"},{"lineNumber":138,"author":{"gitId":"cwnm"},"content":"                    return false;","lastModifiedDate":"2022-03-16"},{"lineNumber":139,"author":{"gitId":"cwnm"},"content":"                }","lastModifiedDate":"2022-03-16"},{"lineNumber":140,"author":{"gitId":"cwnm"},"content":"            }","lastModifiedDate":"2022-03-16"},{"lineNumber":141,"author":{"gitId":"cwnm"},"content":"        }","lastModifiedDate":"2022-03-16"},{"lineNumber":142,"author":{"gitId":"cwnm"},"content":"        return true;","lastModifiedDate":"2022-03-16"},{"lineNumber":143,"author":{"gitId":"cwnm"},"content":"    }","lastModifiedDate":"2022-03-16"},{"lineNumber":144,"author":{"gitId":"Jacky142857"},"content":"","lastModifiedDate":"2022-03-31"},{"lineNumber":145,"author":{"gitId":"Jacky142857"},"content":"    /**","lastModifiedDate":"2022-03-31"},{"lineNumber":146,"author":{"gitId":"Jacky142857"},"content":"     * Sorts the sellers in according to the field {@code comparedItem} and in the {@order} order.","lastModifiedDate":"2022-03-31"},{"lineNumber":147,"author":{"gitId":"Jacky142857"},"content":"     */","lastModifiedDate":"2022-03-31"},{"lineNumber":148,"author":{"gitId":"Jacky142857"},"content":"    public void sortSellers(String comparedItem, String order) {","lastModifiedDate":"2022-03-31"},{"lineNumber":149,"author":{"gitId":"Jacky142857"},"content":"        if (comparedItem.equals(\"name\")) {","lastModifiedDate":"2022-03-31"},{"lineNumber":150,"author":{"gitId":"Jacky142857"},"content":"            if (order.equals(\"asc\")) {","lastModifiedDate":"2022-03-31"},{"lineNumber":151,"author":{"gitId":"Jacky142857"},"content":"                internalList.sort(ComparatorUtil.NAME_COMPARATOR_ASC);","lastModifiedDate":"2022-03-31"},{"lineNumber":152,"author":{"gitId":"Jacky142857"},"content":"            } else {","lastModifiedDate":"2022-03-31"},{"lineNumber":153,"author":{"gitId":"Jacky142857"},"content":"                internalList.sort(ComparatorUtil.NAME_COMPARATOR_DESC);","lastModifiedDate":"2022-03-31"},{"lineNumber":154,"author":{"gitId":"Jacky142857"},"content":"            }","lastModifiedDate":"2022-03-31"},{"lineNumber":155,"author":{"gitId":"Jacky142857"},"content":"        } else {","lastModifiedDate":"2022-03-31"},{"lineNumber":156,"author":{"gitId":"Jacky142857"},"content":"            if (order.equals(\"asc\")) {","lastModifiedDate":"2022-03-31"},{"lineNumber":157,"author":{"gitId":"Jacky142857"},"content":"                internalList.sort(ComparatorUtil.TIME_COMPARATOR_ASC);","lastModifiedDate":"2022-03-31"},{"lineNumber":158,"author":{"gitId":"Jacky142857"},"content":"            } else {","lastModifiedDate":"2022-03-31"},{"lineNumber":159,"author":{"gitId":"Jacky142857"},"content":"                internalList.sort(ComparatorUtil.TIME_COMAPRATOR_DESC);","lastModifiedDate":"2022-03-31"},{"lineNumber":160,"author":{"gitId":"Jacky142857"},"content":"            }","lastModifiedDate":"2022-03-31"},{"lineNumber":161,"author":{"gitId":"Jacky142857"},"content":"        }","lastModifiedDate":"2022-03-31"},{"lineNumber":162,"author":{"gitId":"Jacky142857"},"content":"    }","lastModifiedDate":"2022-03-31"},{"lineNumber":163,"author":{"gitId":"cwnm"},"content":"}","lastModifiedDate":"2022-03-16"}],"authorContributionMap":{"Jacky142857":20,"cwnm":142,"chuashihong":1}},{"path":"src/main/java/seedu/address/model/tag/Tag.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.model.tag;","lastModifiedDate":"2016-09-21"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2017-05-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static seedu.address.commons.util.AppUtil.checkArgument;","lastModifiedDate":"2017-05-30"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":6,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-24"},{"lineNumber":7,"author":{"gitId":"-"},"content":" * Represents a Tag in the address book.","lastModifiedDate":"2016-08-24"},{"lineNumber":8,"author":{"gitId":"-"},"content":" * Guarantees: immutable; name is valid as declared in {@link #isValidTagName(String)}","lastModifiedDate":"2016-08-24"},{"lineNumber":9,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-24"},{"lineNumber":10,"author":{"gitId":"-"},"content":"public class Tag {","lastModifiedDate":"2016-08-24"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":12,"author":{"gitId":"janald99"},"content":"    public static final String MESSAGE_CONSTRAINTS \u003d \"Tags names should be alphanumeric, and cannot contain spacing\";","lastModifiedDate":"2022-04-07"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    public static final String VALIDATION_REGEX \u003d \"\\\\p{Alnum}+\";","lastModifiedDate":"2018-09-22"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":15,"author":{"gitId":"-"},"content":"    public final String tagName;","lastModifiedDate":"2016-10-19"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-24"},{"lineNumber":18,"author":{"gitId":"-"},"content":"     * Constructs a {@code Tag}.","lastModifiedDate":"2017-05-30"},{"lineNumber":19,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2016-08-24"},{"lineNumber":20,"author":{"gitId":"-"},"content":"     * @param tagName A valid tag name.","lastModifiedDate":"2017-05-30"},{"lineNumber":21,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-24"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    public Tag(String tagName) {","lastModifiedDate":"2017-05-30"},{"lineNumber":23,"author":{"gitId":"-"},"content":"        requireNonNull(tagName);","lastModifiedDate":"2017-05-30"},{"lineNumber":24,"author":{"gitId":"-"},"content":"        checkArgument(isValidTagName(tagName), MESSAGE_CONSTRAINTS);","lastModifiedDate":"2018-09-22"},{"lineNumber":25,"author":{"gitId":"-"},"content":"        this.tagName \u003d tagName;","lastModifiedDate":"2017-05-30"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-24"},{"lineNumber":29,"author":{"gitId":"-"},"content":"     * Returns true if a given string is a valid tag name.","lastModifiedDate":"2016-09-22"},{"lineNumber":30,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-24"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    public static boolean isValidTagName(String test) {","lastModifiedDate":"2016-08-24"},{"lineNumber":32,"author":{"gitId":"-"},"content":"        return test.matches(VALIDATION_REGEX);","lastModifiedDate":"2018-09-22"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-24"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2016-08-24"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        return other \u003d\u003d this // short circuit if same object","lastModifiedDate":"2016-08-24"},{"lineNumber":38,"author":{"gitId":"-"},"content":"                || (other instanceof Tag // instanceof handles nulls","lastModifiedDate":"2016-08-24"},{"lineNumber":39,"author":{"gitId":"-"},"content":"                \u0026\u0026 tagName.equals(((Tag) other).tagName)); // state check","lastModifiedDate":"2018-08-14"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-24"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    public int hashCode() {","lastModifiedDate":"2016-08-24"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        return tagName.hashCode();","lastModifiedDate":"2016-08-24"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":46,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-24"},{"lineNumber":48,"author":{"gitId":"-"},"content":"     * Format state as text for viewing.","lastModifiedDate":"2016-08-24"},{"lineNumber":49,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-24"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    public String toString() {","lastModifiedDate":"2016-08-24"},{"lineNumber":51,"author":{"gitId":"-"},"content":"        return \u0027[\u0027 + tagName + \u0027]\u0027;","lastModifiedDate":"2016-08-24"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":53,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":54,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-24"}],"authorContributionMap":{"janald99":1,"-":53}},{"path":"src/main/java/seedu/address/model/util/SampleDataUtil.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.model.util;","lastModifiedDate":"2016-12-20"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-20"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.util.Arrays;","lastModifiedDate":"2018-01-21"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import java.util.Set;","lastModifiedDate":"2017-03-14"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.util.stream.Collectors;","lastModifiedDate":"2018-01-21"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-14"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import seedu.address.model.AddressBook;","lastModifiedDate":"2016-12-20"},{"lineNumber":8,"author":{"gitId":"WJunHong"},"content":"import seedu.address.model.BuyerAddressBook;","lastModifiedDate":"2022-03-23"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import seedu.address.model.ReadOnlyAddressBook;","lastModifiedDate":"2016-12-20"},{"lineNumber":10,"author":{"gitId":"WJunHong"},"content":"import seedu.address.model.ReadOnlyBuyerAddressBook;","lastModifiedDate":"2022-03-23"},{"lineNumber":11,"author":{"gitId":"Jacky142857"},"content":"import seedu.address.model.ReadOnlySellerAddressBook;","lastModifiedDate":"2022-03-19"},{"lineNumber":12,"author":{"gitId":"Jacky142857"},"content":"import seedu.address.model.SellerAddressBook;","lastModifiedDate":"2022-03-19"},{"lineNumber":13,"author":{"gitId":"WJunHong"},"content":"import seedu.address.model.buyer.Buyer;","lastModifiedDate":"2022-03-23"},{"lineNumber":14,"author":{"gitId":"Jacky142857"},"content":"import seedu.address.model.client.Appointment;","lastModifiedDate":"2022-03-11"},{"lineNumber":15,"author":{"gitId":"cwnm"},"content":"import seedu.address.model.client.Client;","lastModifiedDate":"2022-03-04"},{"lineNumber":16,"author":{"gitId":"cwnm"},"content":"import seedu.address.model.client.Name;","lastModifiedDate":"2022-03-04"},{"lineNumber":17,"author":{"gitId":"cwnm"},"content":"import seedu.address.model.client.Phone;","lastModifiedDate":"2022-03-04"},{"lineNumber":18,"author":{"gitId":"chuashihong"},"content":"import seedu.address.model.property.NullPropertyToBuy;","lastModifiedDate":"2022-03-24"},{"lineNumber":19,"author":{"gitId":"chuashihong"},"content":"import seedu.address.model.property.NullPropertyToSell;","lastModifiedDate":"2022-03-26"},{"lineNumber":20,"author":{"gitId":"WJunHong"},"content":"import seedu.address.model.property.PropertyToBuy;","lastModifiedDate":"2022-03-23"},{"lineNumber":21,"author":{"gitId":"chuashihong"},"content":"import seedu.address.model.property.PropertyToSell;","lastModifiedDate":"2022-03-26"},{"lineNumber":22,"author":{"gitId":"Jacky142857"},"content":"import seedu.address.model.seller.Seller;","lastModifiedDate":"2022-03-19"},{"lineNumber":23,"author":{"gitId":"-"},"content":"import seedu.address.model.tag.Tag;","lastModifiedDate":"2017-03-14"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-20"},{"lineNumber":25,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-08-16"},{"lineNumber":26,"author":{"gitId":"-"},"content":" * Contains utility methods for populating {@code AddressBook} with sample data.","lastModifiedDate":"2017-08-16"},{"lineNumber":27,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-08-16"},{"lineNumber":28,"author":{"gitId":"-"},"content":"public class SampleDataUtil {","lastModifiedDate":"2016-12-20"},{"lineNumber":29,"author":{"gitId":"Jacky142857"},"content":"","lastModifiedDate":"2022-03-11"},{"lineNumber":30,"author":{"gitId":"Jacky142857"},"content":"    public static final Appointment NO_APPOINTMENT \u003d new Appointment(\"\");","lastModifiedDate":"2022-03-11"},{"lineNumber":31,"author":{"gitId":"chuashihong"},"content":"    public static final PropertyToBuy NULL_PROPERTY_TO_BUY \u003d NullPropertyToBuy.getNullPropertyToBuy();","lastModifiedDate":"2022-03-26"},{"lineNumber":32,"author":{"gitId":"chuashihong"},"content":"    public static final PropertyToSell NULL_PROPERTY_TO_SELL \u003d NullPropertyToSell.getNullPropertyToSell();","lastModifiedDate":"2022-03-26"},{"lineNumber":33,"author":{"gitId":"Jacky142857"},"content":"","lastModifiedDate":"2022-03-11"},{"lineNumber":34,"author":{"gitId":"cwnm"},"content":"    public static Client[] getSampleclients() {","lastModifiedDate":"2022-03-04"},{"lineNumber":35,"author":{"gitId":"cwnm"},"content":"        return new Client[] {","lastModifiedDate":"2022-03-04"},{"lineNumber":36,"author":{"gitId":"Jacky142857"},"content":"            new Client(new Name(\"Alex Yeoh\"), new Phone(\"87438807\"),","lastModifiedDate":"2022-03-19"},{"lineNumber":37,"author":{"gitId":"Jacky142857"},"content":"                NO_APPOINTMENT, getTagSet(\"friends\")),","lastModifiedDate":"2022-03-19"},{"lineNumber":38,"author":{"gitId":"Jacky142857"},"content":"            new Client(new Name(\"Bernice Yu\"), new Phone(\"99272758\"), NO_APPOINTMENT,","lastModifiedDate":"2022-03-19"},{"lineNumber":39,"author":{"gitId":"-"},"content":"                getTagSet(\"colleagues\", \"friends\")),","lastModifiedDate":"2017-03-14"},{"lineNumber":40,"author":{"gitId":"Jacky142857"},"content":"            new Client(new Name(\"Charlotte Oliveiro\"), new Phone(\"93210283\"), NO_APPOINTMENT,","lastModifiedDate":"2022-03-19"},{"lineNumber":41,"author":{"gitId":"-"},"content":"                getTagSet(\"neighbours\")),","lastModifiedDate":"2017-03-14"},{"lineNumber":42,"author":{"gitId":"Jacky142857"},"content":"            new Client(new Name(\"David Li\"), new Phone(\"91031282\"), NO_APPOINTMENT,","lastModifiedDate":"2022-03-19"},{"lineNumber":43,"author":{"gitId":"-"},"content":"                getTagSet(\"family\")),","lastModifiedDate":"2017-03-14"},{"lineNumber":44,"author":{"gitId":"Jacky142857"},"content":"            new Client(new Name(\"Irfan Ibrahim\"), new Phone(\"92492021\"), NO_APPOINTMENT,","lastModifiedDate":"2022-03-19"},{"lineNumber":45,"author":{"gitId":"-"},"content":"                getTagSet(\"classmates\")),","lastModifiedDate":"2017-03-14"},{"lineNumber":46,"author":{"gitId":"Jacky142857"},"content":"            new Client(new Name(\"Roy Balakrishnan\"), new Phone(\"92624417\"), NO_APPOINTMENT,","lastModifiedDate":"2022-03-19"},{"lineNumber":47,"author":{"gitId":"-"},"content":"                getTagSet(\"colleagues\"))","lastModifiedDate":"2017-03-14"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        };","lastModifiedDate":"2016-12-20"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-20"},{"lineNumber":50,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-20"},{"lineNumber":51,"author":{"gitId":"Jacky142857"},"content":"    public static Seller[] getSampleSellers() {","lastModifiedDate":"2022-03-19"},{"lineNumber":52,"author":{"gitId":"Jacky142857"},"content":"        return new Seller[] {","lastModifiedDate":"2022-03-19"},{"lineNumber":53,"author":{"gitId":"WJunHong"},"content":"            new Seller(new Name(\"Chok Hoe\"), new Phone(\"12345678\"),","lastModifiedDate":"2022-03-28"},{"lineNumber":54,"author":{"gitId":"WJunHong"},"content":"            NO_APPOINTMENT, getTagSet(\"fav\"), NULL_PROPERTY_TO_SELL),","lastModifiedDate":"2022-03-28"},{"lineNumber":55,"author":{"gitId":"WJunHong"},"content":"            new Seller(new Name(\"Yong Ler\"), new Phone(\"12345678\"),","lastModifiedDate":"2022-03-28"},{"lineNumber":56,"author":{"gitId":"WJunHong"},"content":"                    NO_APPOINTMENT, getTagSet(\"friendly\"), NULL_PROPERTY_TO_SELL),","lastModifiedDate":"2022-03-28"},{"lineNumber":57,"author":{"gitId":"WJunHong"},"content":"            new Seller(new Name(\"Jacky\"), new Phone(\"12345678\"),","lastModifiedDate":"2022-03-28"},{"lineNumber":58,"author":{"gitId":"WJunHong"},"content":"                    NO_APPOINTMENT, getTagSet(\"funny\"), NULL_PROPERTY_TO_SELL),","lastModifiedDate":"2022-03-28"},{"lineNumber":59,"author":{"gitId":"WJunHong"},"content":"            new Seller(new Name(\"Ian\"), new Phone(\"12345678\"),","lastModifiedDate":"2022-03-28"},{"lineNumber":60,"author":{"gitId":"WJunHong"},"content":"                    NO_APPOINTMENT, getTagSet(\"talkative\"), NULL_PROPERTY_TO_SELL),","lastModifiedDate":"2022-03-28"},{"lineNumber":61,"author":{"gitId":"WJunHong"},"content":"            new Seller(new Name(\"Joey\"), new Phone(\"12345678\"),","lastModifiedDate":"2022-03-28"},{"lineNumber":62,"author":{"gitId":"WJunHong"},"content":"                    NO_APPOINTMENT, getTagSet(\"chef\"), NULL_PROPERTY_TO_SELL),","lastModifiedDate":"2022-03-28"},{"lineNumber":63,"author":{"gitId":"WJunHong"},"content":"            new Seller(new Name(\"Justin\"), new Phone(\"12345678\"),","lastModifiedDate":"2022-03-28"},{"lineNumber":64,"author":{"gitId":"WJunHong"},"content":"                    NO_APPOINTMENT, getTagSet(\"negotiator\"), NULL_PROPERTY_TO_SELL),","lastModifiedDate":"2022-03-28"},{"lineNumber":65,"author":{"gitId":"WJunHong"},"content":"            new Seller(new Name(\"Chee Kean\"), new Phone(\"12345678\"),","lastModifiedDate":"2022-03-28"},{"lineNumber":66,"author":{"gitId":"WJunHong"},"content":"                    NO_APPOINTMENT, getTagSet(\"Inquisitive\"), NULL_PROPERTY_TO_SELL)","lastModifiedDate":"2022-03-28"},{"lineNumber":67,"author":{"gitId":"Jacky142857"},"content":"        };","lastModifiedDate":"2022-03-19"},{"lineNumber":68,"author":{"gitId":"Jacky142857"},"content":"    }","lastModifiedDate":"2022-03-19"},{"lineNumber":69,"author":{"gitId":"Jacky142857"},"content":"","lastModifiedDate":"2022-03-19"},{"lineNumber":70,"author":{"gitId":"WJunHong"},"content":"    public static Buyer[] getSampleBuyers() {","lastModifiedDate":"2022-03-23"},{"lineNumber":71,"author":{"gitId":"WJunHong"},"content":"        return new Buyer[] {","lastModifiedDate":"2022-03-23"},{"lineNumber":72,"author":{"gitId":"WJunHong"},"content":"            new Buyer(new Name(\"Shi Hong\"), new Phone(\"12345678\"),","lastModifiedDate":"2022-03-28"},{"lineNumber":73,"author":{"gitId":"WJunHong"},"content":"            NO_APPOINTMENT, getTagSet(\"smart\"), NULL_PROPERTY_TO_BUY),","lastModifiedDate":"2022-03-28"},{"lineNumber":74,"author":{"gitId":"WJunHong"},"content":"            new Buyer(new Name(\"Oviya\"), new Phone(\"12345678\"),","lastModifiedDate":"2022-03-28"},{"lineNumber":75,"author":{"gitId":"WJunHong"},"content":"                    NO_APPOINTMENT, getTagSet(\"kind\"), NULL_PROPERTY_TO_BUY),","lastModifiedDate":"2022-03-28"},{"lineNumber":76,"author":{"gitId":"WJunHong"},"content":"            new Buyer(new Name(\"Zhongfu\"), new Phone(\"12345678\"),","lastModifiedDate":"2022-03-28"},{"lineNumber":77,"author":{"gitId":"WJunHong"},"content":"                    NO_APPOINTMENT, getTagSet(\"cool\"), NULL_PROPERTY_TO_BUY),","lastModifiedDate":"2022-03-28"},{"lineNumber":78,"author":{"gitId":"WJunHong"},"content":"            new Buyer(new Name(\"Janald\"), new Phone(\"21345678\"),","lastModifiedDate":"2022-03-28"},{"lineNumber":79,"author":{"gitId":"WJunHong"},"content":"                    NO_APPOINTMENT, getTagSet(\"cat\"), NULL_PROPERTY_TO_BUY),","lastModifiedDate":"2022-03-28"},{"lineNumber":80,"author":{"gitId":"WJunHong"},"content":"            new Buyer(new Name(\"Jun Hong\"), new Phone(\"12345678\"),","lastModifiedDate":"2022-03-28"},{"lineNumber":81,"author":{"gitId":"WJunHong"},"content":"                    NO_APPOINTMENT, getTagSet(\"rich\"), NULL_PROPERTY_TO_BUY),","lastModifiedDate":"2022-03-28"},{"lineNumber":82,"author":{"gitId":"WJunHong"},"content":"            new Buyer(new Name(\"Jun Heng\"), new Phone(\"12345678\"),","lastModifiedDate":"2022-03-28"},{"lineNumber":83,"author":{"gitId":"WJunHong"},"content":"                    NO_APPOINTMENT, getTagSet(\"big\"), NULL_PROPERTY_TO_BUY),","lastModifiedDate":"2022-03-28"},{"lineNumber":84,"author":{"gitId":"WJunHong"},"content":"            new Buyer(new Name(\"Dara\"), new Phone(\"12345678\"),","lastModifiedDate":"2022-03-28"},{"lineNumber":85,"author":{"gitId":"WJunHong"},"content":"                    NO_APPOINTMENT, getTagSet(\"fav\"), NULL_PROPERTY_TO_BUY)","lastModifiedDate":"2022-03-28"},{"lineNumber":86,"author":{"gitId":"WJunHong"},"content":"        };","lastModifiedDate":"2022-03-23"},{"lineNumber":87,"author":{"gitId":"WJunHong"},"content":"    }","lastModifiedDate":"2022-03-23"},{"lineNumber":88,"author":{"gitId":"WJunHong"},"content":"","lastModifiedDate":"2022-03-23"},{"lineNumber":89,"author":{"gitId":"-"},"content":"    public static ReadOnlyAddressBook getSampleAddressBook() {","lastModifiedDate":"2016-12-20"},{"lineNumber":90,"author":{"gitId":"-"},"content":"        AddressBook sampleAb \u003d new AddressBook();","lastModifiedDate":"2017-04-07"},{"lineNumber":91,"author":{"gitId":"cwnm"},"content":"        for (Client sampleClient : getSampleclients()) {","lastModifiedDate":"2022-03-04"},{"lineNumber":92,"author":{"gitId":"cwnm"},"content":"            sampleAb.addclient(sampleClient);","lastModifiedDate":"2022-03-04"},{"lineNumber":93,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-12-20"},{"lineNumber":94,"author":{"gitId":"-"},"content":"        return sampleAb;","lastModifiedDate":"2017-04-07"},{"lineNumber":95,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-20"},{"lineNumber":96,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-14"},{"lineNumber":97,"author":{"gitId":"Jacky142857"},"content":"    public static ReadOnlySellerAddressBook getSampleSellerAddressBook() {","lastModifiedDate":"2022-03-19"},{"lineNumber":98,"author":{"gitId":"Jacky142857"},"content":"        SellerAddressBook sampleSab \u003d new SellerAddressBook();","lastModifiedDate":"2022-03-19"},{"lineNumber":99,"author":{"gitId":"Jacky142857"},"content":"        for (Seller sampleSeller : getSampleSellers()) {","lastModifiedDate":"2022-03-19"},{"lineNumber":100,"author":{"gitId":"Jacky142857"},"content":"            sampleSab.addSeller(sampleSeller);","lastModifiedDate":"2022-03-19"},{"lineNumber":101,"author":{"gitId":"Jacky142857"},"content":"        }","lastModifiedDate":"2022-03-19"},{"lineNumber":102,"author":{"gitId":"Jacky142857"},"content":"        return sampleSab;","lastModifiedDate":"2022-03-19"},{"lineNumber":103,"author":{"gitId":"Jacky142857"},"content":"    }","lastModifiedDate":"2022-03-19"},{"lineNumber":104,"author":{"gitId":"Jacky142857"},"content":"","lastModifiedDate":"2022-03-19"},{"lineNumber":105,"author":{"gitId":"WJunHong"},"content":"    public static ReadOnlyBuyerAddressBook getSampleBuyerAddressBook() {","lastModifiedDate":"2022-03-23"},{"lineNumber":106,"author":{"gitId":"WJunHong"},"content":"        BuyerAddressBook sampleSab \u003d new BuyerAddressBook();","lastModifiedDate":"2022-03-23"},{"lineNumber":107,"author":{"gitId":"WJunHong"},"content":"        for (Buyer sampleBuyer : getSampleBuyers()) {","lastModifiedDate":"2022-03-23"},{"lineNumber":108,"author":{"gitId":"WJunHong"},"content":"            sampleSab.addBuyer(sampleBuyer);","lastModifiedDate":"2022-03-23"},{"lineNumber":109,"author":{"gitId":"WJunHong"},"content":"        }","lastModifiedDate":"2022-03-23"},{"lineNumber":110,"author":{"gitId":"WJunHong"},"content":"        return sampleSab;","lastModifiedDate":"2022-03-23"},{"lineNumber":111,"author":{"gitId":"WJunHong"},"content":"    }","lastModifiedDate":"2022-03-23"},{"lineNumber":112,"author":{"gitId":"WJunHong"},"content":"","lastModifiedDate":"2022-03-23"},{"lineNumber":113,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-03-14"},{"lineNumber":114,"author":{"gitId":"-"},"content":"     * Returns a tag set containing the list of strings given.","lastModifiedDate":"2017-03-14"},{"lineNumber":115,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-03-14"},{"lineNumber":116,"author":{"gitId":"-"},"content":"    public static Set\u003cTag\u003e getTagSet(String... strings) {","lastModifiedDate":"2017-05-30"},{"lineNumber":117,"author":{"gitId":"-"},"content":"        return Arrays.stream(strings)","lastModifiedDate":"2018-01-21"},{"lineNumber":118,"author":{"gitId":"-"},"content":"                .map(Tag::new)","lastModifiedDate":"2018-01-21"},{"lineNumber":119,"author":{"gitId":"-"},"content":"                .collect(Collectors.toSet());","lastModifiedDate":"2018-01-21"},{"lineNumber":120,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-03-14"},{"lineNumber":121,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-14"},{"lineNumber":122,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-12-20"}],"authorContributionMap":{"WJunHong":45,"Jacky142857":27,"-":38,"cwnm":7,"chuashihong":5}},{"path":"src/main/java/seedu/address/storage/BuyerAddressBookStorage.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"WJunHong"},"content":"package seedu.address.storage;","lastModifiedDate":"2022-03-23"},{"lineNumber":2,"author":{"gitId":"WJunHong"},"content":"","lastModifiedDate":"2022-03-23"},{"lineNumber":3,"author":{"gitId":"WJunHong"},"content":"import java.io.IOException;","lastModifiedDate":"2022-03-23"},{"lineNumber":4,"author":{"gitId":"WJunHong"},"content":"import java.nio.file.Path;","lastModifiedDate":"2022-03-23"},{"lineNumber":5,"author":{"gitId":"WJunHong"},"content":"import java.util.Optional;","lastModifiedDate":"2022-03-23"},{"lineNumber":6,"author":{"gitId":"WJunHong"},"content":"","lastModifiedDate":"2022-03-23"},{"lineNumber":7,"author":{"gitId":"WJunHong"},"content":"import seedu.address.commons.exceptions.DataConversionException;","lastModifiedDate":"2022-03-23"},{"lineNumber":8,"author":{"gitId":"WJunHong"},"content":"import seedu.address.model.ReadOnlyBuyerAddressBook;","lastModifiedDate":"2022-03-23"},{"lineNumber":9,"author":{"gitId":"WJunHong"},"content":"","lastModifiedDate":"2022-03-23"},{"lineNumber":10,"author":{"gitId":"WJunHong"},"content":"public interface BuyerAddressBookStorage {","lastModifiedDate":"2022-03-23"},{"lineNumber":11,"author":{"gitId":"WJunHong"},"content":"","lastModifiedDate":"2022-03-23"},{"lineNumber":12,"author":{"gitId":"WJunHong"},"content":"    /**","lastModifiedDate":"2022-03-23"},{"lineNumber":13,"author":{"gitId":"WJunHong"},"content":"     * Returns the file path of the data file.","lastModifiedDate":"2022-03-23"},{"lineNumber":14,"author":{"gitId":"WJunHong"},"content":"     */","lastModifiedDate":"2022-03-23"},{"lineNumber":15,"author":{"gitId":"WJunHong"},"content":"    Path getBuyerAddressBookFilePath();","lastModifiedDate":"2022-03-23"},{"lineNumber":16,"author":{"gitId":"WJunHong"},"content":"","lastModifiedDate":"2022-03-23"},{"lineNumber":17,"author":{"gitId":"WJunHong"},"content":"    /**","lastModifiedDate":"2022-03-23"},{"lineNumber":18,"author":{"gitId":"WJunHong"},"content":"     * Returns BuyerAddressBook data as a {@link ReadOnlyBuyerAddressBook}.","lastModifiedDate":"2022-03-23"},{"lineNumber":19,"author":{"gitId":"WJunHong"},"content":"     *   Returns {@code Optional.empty()} if storage file is not found.","lastModifiedDate":"2022-03-23"},{"lineNumber":20,"author":{"gitId":"WJunHong"},"content":"     * @throws DataConversionException if the data in storage is not in the expected format.","lastModifiedDate":"2022-03-23"},{"lineNumber":21,"author":{"gitId":"WJunHong"},"content":"     * @throws IOException if there was any problem when reading from the storage.","lastModifiedDate":"2022-03-23"},{"lineNumber":22,"author":{"gitId":"WJunHong"},"content":"     */","lastModifiedDate":"2022-03-23"},{"lineNumber":23,"author":{"gitId":"WJunHong"},"content":"    Optional\u003cReadOnlyBuyerAddressBook\u003e readBuyerAddressBook() throws DataConversionException, IOException;","lastModifiedDate":"2022-03-23"},{"lineNumber":24,"author":{"gitId":"WJunHong"},"content":"","lastModifiedDate":"2022-03-23"},{"lineNumber":25,"author":{"gitId":"WJunHong"},"content":"    /**","lastModifiedDate":"2022-03-23"},{"lineNumber":26,"author":{"gitId":"WJunHong"},"content":"     * @see #getBuyerAddressBookFilePath()","lastModifiedDate":"2022-03-23"},{"lineNumber":27,"author":{"gitId":"WJunHong"},"content":"     */","lastModifiedDate":"2022-03-23"},{"lineNumber":28,"author":{"gitId":"WJunHong"},"content":"    Optional\u003cReadOnlyBuyerAddressBook\u003e readBuyerAddressBook(Path filePath)","lastModifiedDate":"2022-03-23"},{"lineNumber":29,"author":{"gitId":"WJunHong"},"content":"            throws DataConversionException, IOException;","lastModifiedDate":"2022-03-23"},{"lineNumber":30,"author":{"gitId":"WJunHong"},"content":"","lastModifiedDate":"2022-03-23"},{"lineNumber":31,"author":{"gitId":"WJunHong"},"content":"    /**","lastModifiedDate":"2022-03-23"},{"lineNumber":32,"author":{"gitId":"WJunHong"},"content":"     * Saves the given {@link ReadOnlyBuyerAddressBook} to the storage.","lastModifiedDate":"2022-03-23"},{"lineNumber":33,"author":{"gitId":"WJunHong"},"content":"     * @param addressBook cannot be null.","lastModifiedDate":"2022-03-23"},{"lineNumber":34,"author":{"gitId":"WJunHong"},"content":"     * @throws IOException if there was any problem writing to the file.","lastModifiedDate":"2022-03-23"},{"lineNumber":35,"author":{"gitId":"WJunHong"},"content":"     */","lastModifiedDate":"2022-03-23"},{"lineNumber":36,"author":{"gitId":"WJunHong"},"content":"    void saveBuyerAddressBook(ReadOnlyBuyerAddressBook addressBook) throws IOException;","lastModifiedDate":"2022-03-23"},{"lineNumber":37,"author":{"gitId":"WJunHong"},"content":"","lastModifiedDate":"2022-03-23"},{"lineNumber":38,"author":{"gitId":"WJunHong"},"content":"    /**","lastModifiedDate":"2022-03-23"},{"lineNumber":39,"author":{"gitId":"WJunHong"},"content":"     * @see #saveBuyerAddressBook(ReadOnlyBuyerAddressBook)","lastModifiedDate":"2022-03-23"},{"lineNumber":40,"author":{"gitId":"WJunHong"},"content":"     */","lastModifiedDate":"2022-03-23"},{"lineNumber":41,"author":{"gitId":"WJunHong"},"content":"    void saveBuyerAddressBook(ReadOnlyBuyerAddressBook addressBook, Path filePath) throws IOException;","lastModifiedDate":"2022-03-23"},{"lineNumber":42,"author":{"gitId":"WJunHong"},"content":"}","lastModifiedDate":"2022-03-23"}],"authorContributionMap":{"WJunHong":42}},{"path":"src/main/java/seedu/address/storage/JsonAdaptedBuyer.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"WJunHong"},"content":"package seedu.address.storage;","lastModifiedDate":"2022-03-23"},{"lineNumber":2,"author":{"gitId":"WJunHong"},"content":"","lastModifiedDate":"2022-03-23"},{"lineNumber":3,"author":{"gitId":"WJunHong"},"content":"import java.util.ArrayList;","lastModifiedDate":"2022-03-23"},{"lineNumber":4,"author":{"gitId":"WJunHong"},"content":"import java.util.HashSet;","lastModifiedDate":"2022-03-23"},{"lineNumber":5,"author":{"gitId":"WJunHong"},"content":"import java.util.List;","lastModifiedDate":"2022-03-23"},{"lineNumber":6,"author":{"gitId":"WJunHong"},"content":"import java.util.Set;","lastModifiedDate":"2022-03-23"},{"lineNumber":7,"author":{"gitId":"WJunHong"},"content":"import java.util.stream.Collectors;","lastModifiedDate":"2022-03-23"},{"lineNumber":8,"author":{"gitId":"WJunHong"},"content":"","lastModifiedDate":"2022-03-23"},{"lineNumber":9,"author":{"gitId":"WJunHong"},"content":"import com.fasterxml.jackson.annotation.JsonCreator;","lastModifiedDate":"2022-03-23"},{"lineNumber":10,"author":{"gitId":"WJunHong"},"content":"import com.fasterxml.jackson.annotation.JsonProperty;","lastModifiedDate":"2022-03-23"},{"lineNumber":11,"author":{"gitId":"WJunHong"},"content":"","lastModifiedDate":"2022-03-23"},{"lineNumber":12,"author":{"gitId":"WJunHong"},"content":"import seedu.address.commons.exceptions.IllegalValueException;","lastModifiedDate":"2022-03-23"},{"lineNumber":13,"author":{"gitId":"WJunHong"},"content":"import seedu.address.model.buyer.Buyer;","lastModifiedDate":"2022-03-23"},{"lineNumber":14,"author":{"gitId":"WJunHong"},"content":"import seedu.address.model.client.Appointment;","lastModifiedDate":"2022-03-23"},{"lineNumber":15,"author":{"gitId":"WJunHong"},"content":"import seedu.address.model.client.Name;","lastModifiedDate":"2022-03-23"},{"lineNumber":16,"author":{"gitId":"WJunHong"},"content":"import seedu.address.model.client.Phone;","lastModifiedDate":"2022-03-23"},{"lineNumber":17,"author":{"gitId":"chuashihong"},"content":"import seedu.address.model.property.NullPropertyToBuy;","lastModifiedDate":"2022-03-24"},{"lineNumber":18,"author":{"gitId":"WJunHong"},"content":"import seedu.address.model.property.PropertyToBuy;","lastModifiedDate":"2022-03-23"},{"lineNumber":19,"author":{"gitId":"WJunHong"},"content":"import seedu.address.model.tag.Tag;","lastModifiedDate":"2022-03-23"},{"lineNumber":20,"author":{"gitId":"WJunHong"},"content":"","lastModifiedDate":"2022-03-23"},{"lineNumber":21,"author":{"gitId":"WJunHong"},"content":"public class JsonAdaptedBuyer {","lastModifiedDate":"2022-03-23"},{"lineNumber":22,"author":{"gitId":"WJunHong"},"content":"","lastModifiedDate":"2022-03-23"},{"lineNumber":23,"author":{"gitId":"WJunHong"},"content":"    public static final String MISSING_FIELD_MESSAGE_FORMAT \u003d \"buyer\u0027s %s field is missing!\";","lastModifiedDate":"2022-03-23"},{"lineNumber":24,"author":{"gitId":"WJunHong"},"content":"","lastModifiedDate":"2022-03-23"},{"lineNumber":25,"author":{"gitId":"WJunHong"},"content":"    private final String name;","lastModifiedDate":"2022-03-23"},{"lineNumber":26,"author":{"gitId":"WJunHong"},"content":"    private final String phone;","lastModifiedDate":"2022-03-23"},{"lineNumber":27,"author":{"gitId":"WJunHong"},"content":"    private final String appointment;","lastModifiedDate":"2022-03-23"},{"lineNumber":28,"author":{"gitId":"WJunHong"},"content":"    private final List\u003cJsonAdaptedTag\u003e tagged \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2022-03-23"},{"lineNumber":29,"author":{"gitId":"chuashihong"},"content":"    private final JsonAdaptedPropertyToBuy propertyToBuy;","lastModifiedDate":"2022-03-24"},{"lineNumber":30,"author":{"gitId":"WJunHong"},"content":"","lastModifiedDate":"2022-03-23"},{"lineNumber":31,"author":{"gitId":"WJunHong"},"content":"    /**","lastModifiedDate":"2022-03-23"},{"lineNumber":32,"author":{"gitId":"WJunHong"},"content":"     * Constructs a {@code JsonAdaptedclient} with the given client details.","lastModifiedDate":"2022-03-23"},{"lineNumber":33,"author":{"gitId":"WJunHong"},"content":"     */","lastModifiedDate":"2022-03-23"},{"lineNumber":34,"author":{"gitId":"WJunHong"},"content":"    @JsonCreator","lastModifiedDate":"2022-03-23"},{"lineNumber":35,"author":{"gitId":"WJunHong"},"content":"    public JsonAdaptedBuyer(@JsonProperty(\"name\") String name,","lastModifiedDate":"2022-03-23"},{"lineNumber":36,"author":{"gitId":"chuashihong"},"content":"                            @JsonProperty(\"phone\") String phone,","lastModifiedDate":"2022-03-24"},{"lineNumber":37,"author":{"gitId":"chuashihong"},"content":"                            @JsonProperty(\"appointment\") String appointment,","lastModifiedDate":"2022-03-24"},{"lineNumber":38,"author":{"gitId":"WJunHong"},"content":"                            @JsonProperty(\"tagged\") List\u003cJsonAdaptedTag\u003e tagged,","lastModifiedDate":"2022-03-23"},{"lineNumber":39,"author":{"gitId":"chuashihong"},"content":"                            @JsonProperty(\"propertyToBuy\") JsonAdaptedPropertyToBuy propertyToBuy) {","lastModifiedDate":"2022-03-26"},{"lineNumber":40,"author":{"gitId":"WJunHong"},"content":"        this.name \u003d name;","lastModifiedDate":"2022-03-23"},{"lineNumber":41,"author":{"gitId":"WJunHong"},"content":"        this.phone \u003d phone;","lastModifiedDate":"2022-03-23"},{"lineNumber":42,"author":{"gitId":"WJunHong"},"content":"        if (tagged !\u003d null) {","lastModifiedDate":"2022-03-23"},{"lineNumber":43,"author":{"gitId":"WJunHong"},"content":"            this.tagged.addAll(tagged);","lastModifiedDate":"2022-03-23"},{"lineNumber":44,"author":{"gitId":"WJunHong"},"content":"        }","lastModifiedDate":"2022-03-23"},{"lineNumber":45,"author":{"gitId":"WJunHong"},"content":"        this.appointment \u003d appointment;","lastModifiedDate":"2022-03-23"},{"lineNumber":46,"author":{"gitId":"chuashihong"},"content":"        this.propertyToBuy \u003d propertyToBuy;","lastModifiedDate":"2022-03-24"},{"lineNumber":47,"author":{"gitId":"WJunHong"},"content":"    }","lastModifiedDate":"2022-03-23"},{"lineNumber":48,"author":{"gitId":"WJunHong"},"content":"","lastModifiedDate":"2022-03-23"},{"lineNumber":49,"author":{"gitId":"WJunHong"},"content":"    /**","lastModifiedDate":"2022-03-23"},{"lineNumber":50,"author":{"gitId":"WJunHong"},"content":"     * Converts a given {@code client} into this class for Jackson use.","lastModifiedDate":"2022-03-23"},{"lineNumber":51,"author":{"gitId":"WJunHong"},"content":"     */","lastModifiedDate":"2022-03-23"},{"lineNumber":52,"author":{"gitId":"WJunHong"},"content":"    public JsonAdaptedBuyer(Buyer source) {","lastModifiedDate":"2022-03-23"},{"lineNumber":53,"author":{"gitId":"WJunHong"},"content":"        name \u003d source.getName().fullName;","lastModifiedDate":"2022-03-23"},{"lineNumber":54,"author":{"gitId":"WJunHong"},"content":"        phone \u003d source.getPhone().value;","lastModifiedDate":"2022-03-23"},{"lineNumber":55,"author":{"gitId":"WJunHong"},"content":"        tagged.addAll(source.getTags().stream()","lastModifiedDate":"2022-03-23"},{"lineNumber":56,"author":{"gitId":"WJunHong"},"content":"                .map(JsonAdaptedTag::new)","lastModifiedDate":"2022-03-23"},{"lineNumber":57,"author":{"gitId":"WJunHong"},"content":"                .collect(Collectors.toList()));","lastModifiedDate":"2022-03-23"},{"lineNumber":58,"author":{"gitId":"WJunHong"},"content":"        appointment \u003d source.getAppointment().value;","lastModifiedDate":"2022-03-23"},{"lineNumber":59,"author":{"gitId":"chuashihong"},"content":"        if (source.getPropertyToBuy() instanceof NullPropertyToBuy) {","lastModifiedDate":"2022-03-28"},{"lineNumber":60,"author":{"gitId":"chuashihong"},"content":"            propertyToBuy \u003d null;","lastModifiedDate":"2022-03-28"},{"lineNumber":61,"author":{"gitId":"chuashihong"},"content":"        } else {","lastModifiedDate":"2022-03-28"},{"lineNumber":62,"author":{"gitId":"chuashihong"},"content":"            propertyToBuy \u003d new JsonAdaptedPropertyToBuy(source.getPropertyToBuy());","lastModifiedDate":"2022-03-26"},{"lineNumber":63,"author":{"gitId":"WJunHong"},"content":"        }","lastModifiedDate":"2022-03-23"},{"lineNumber":64,"author":{"gitId":"chuashihong"},"content":"    }","lastModifiedDate":"2022-03-28"},{"lineNumber":65,"author":{"gitId":"WJunHong"},"content":"","lastModifiedDate":"2022-03-23"},{"lineNumber":66,"author":{"gitId":"WJunHong"},"content":"    /**","lastModifiedDate":"2022-03-23"},{"lineNumber":67,"author":{"gitId":"WJunHong"},"content":"     * Converts this Jackson-friendly adapted person object into the model\u0027s {@code Buyer} object.","lastModifiedDate":"2022-03-23"},{"lineNumber":68,"author":{"gitId":"WJunHong"},"content":"     *","lastModifiedDate":"2022-03-23"},{"lineNumber":69,"author":{"gitId":"WJunHong"},"content":"     * @throws IllegalValueException if there were any data constraints violated in the adapted person.","lastModifiedDate":"2022-03-23"},{"lineNumber":70,"author":{"gitId":"WJunHong"},"content":"     */","lastModifiedDate":"2022-03-23"},{"lineNumber":71,"author":{"gitId":"WJunHong"},"content":"    public Buyer toModelType() throws IllegalValueException {","lastModifiedDate":"2022-03-23"},{"lineNumber":72,"author":{"gitId":"WJunHong"},"content":"        final List\u003cTag\u003e buyerTags \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2022-03-23"},{"lineNumber":73,"author":{"gitId":"WJunHong"},"content":"        for (JsonAdaptedTag tag : tagged) {","lastModifiedDate":"2022-03-23"},{"lineNumber":74,"author":{"gitId":"WJunHong"},"content":"            buyerTags.add(tag.toModelType());","lastModifiedDate":"2022-03-23"},{"lineNumber":75,"author":{"gitId":"WJunHong"},"content":"        }","lastModifiedDate":"2022-03-23"},{"lineNumber":76,"author":{"gitId":"WJunHong"},"content":"","lastModifiedDate":"2022-03-23"},{"lineNumber":77,"author":{"gitId":"WJunHong"},"content":"        if (name \u003d\u003d null) {","lastModifiedDate":"2022-03-23"},{"lineNumber":78,"author":{"gitId":"WJunHong"},"content":"            throw new IllegalValueException(String.format(MISSING_FIELD_MESSAGE_FORMAT, Name.class.getSimpleName()));","lastModifiedDate":"2022-03-23"},{"lineNumber":79,"author":{"gitId":"WJunHong"},"content":"        }","lastModifiedDate":"2022-03-23"},{"lineNumber":80,"author":{"gitId":"WJunHong"},"content":"        if (!Name.isValidName(name)) {","lastModifiedDate":"2022-03-23"},{"lineNumber":81,"author":{"gitId":"WJunHong"},"content":"            throw new IllegalValueException(Name.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2022-03-23"},{"lineNumber":82,"author":{"gitId":"WJunHong"},"content":"        }","lastModifiedDate":"2022-03-23"},{"lineNumber":83,"author":{"gitId":"WJunHong"},"content":"        final Name modelName \u003d new Name(name);","lastModifiedDate":"2022-03-23"},{"lineNumber":84,"author":{"gitId":"WJunHong"},"content":"","lastModifiedDate":"2022-03-23"},{"lineNumber":85,"author":{"gitId":"WJunHong"},"content":"        if (phone \u003d\u003d null) {","lastModifiedDate":"2022-03-23"},{"lineNumber":86,"author":{"gitId":"WJunHong"},"content":"            throw new IllegalValueException(String.format(MISSING_FIELD_MESSAGE_FORMAT, Phone.class.getSimpleName()));","lastModifiedDate":"2022-03-23"},{"lineNumber":87,"author":{"gitId":"WJunHong"},"content":"        }","lastModifiedDate":"2022-03-23"},{"lineNumber":88,"author":{"gitId":"WJunHong"},"content":"        if (!Phone.isValidPhone(phone)) {","lastModifiedDate":"2022-03-23"},{"lineNumber":89,"author":{"gitId":"WJunHong"},"content":"            throw new IllegalValueException(Phone.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2022-03-23"},{"lineNumber":90,"author":{"gitId":"WJunHong"},"content":"        }","lastModifiedDate":"2022-03-23"},{"lineNumber":91,"author":{"gitId":"WJunHong"},"content":"        final Phone modelPhone \u003d new Phone(phone);","lastModifiedDate":"2022-03-23"},{"lineNumber":92,"author":{"gitId":"WJunHong"},"content":"","lastModifiedDate":"2022-03-23"},{"lineNumber":93,"author":{"gitId":"WJunHong"},"content":"        if (appointment \u003d\u003d null) {","lastModifiedDate":"2022-03-23"},{"lineNumber":94,"author":{"gitId":"WJunHong"},"content":"            throw new IllegalValueException(String.format(MISSING_FIELD_MESSAGE_FORMAT,","lastModifiedDate":"2022-03-23"},{"lineNumber":95,"author":{"gitId":"WJunHong"},"content":"                    Appointment.class.getSimpleName()));","lastModifiedDate":"2022-03-23"},{"lineNumber":96,"author":{"gitId":"WJunHong"},"content":"        }","lastModifiedDate":"2022-03-23"},{"lineNumber":97,"author":{"gitId":"WJunHong"},"content":"","lastModifiedDate":"2022-03-23"},{"lineNumber":98,"author":{"gitId":"WJunHong"},"content":"        final Appointment modelAppointment \u003d new Appointment(appointment);","lastModifiedDate":"2022-03-23"},{"lineNumber":99,"author":{"gitId":"WJunHong"},"content":"","lastModifiedDate":"2022-03-23"},{"lineNumber":100,"author":{"gitId":"WJunHong"},"content":"        final Set\u003cTag\u003e modelTags \u003d new HashSet\u003c\u003e(buyerTags);","lastModifiedDate":"2022-03-23"},{"lineNumber":101,"author":{"gitId":"chuashihong"},"content":"","lastModifiedDate":"2022-03-24"},{"lineNumber":102,"author":{"gitId":"chuashihong"},"content":"        final PropertyToBuy modelDesiredProperty \u003d propertyToBuy \u003d\u003d null","lastModifiedDate":"2022-03-24"},{"lineNumber":103,"author":{"gitId":"chuashihong"},"content":"                ? NullPropertyToBuy.getNullPropertyToBuy() : new PropertyToBuy(propertyToBuy.getHouse(),","lastModifiedDate":"2022-03-24"},{"lineNumber":104,"author":{"gitId":"chuashihong"},"content":"                propertyToBuy.getPriceRange());","lastModifiedDate":"2022-03-24"},{"lineNumber":105,"author":{"gitId":"WJunHong"},"content":"        return new Buyer(modelName, modelPhone, modelAppointment, modelTags, modelDesiredProperty);","lastModifiedDate":"2022-03-23"},{"lineNumber":106,"author":{"gitId":"WJunHong"},"content":"    }","lastModifiedDate":"2022-03-23"},{"lineNumber":107,"author":{"gitId":"WJunHong"},"content":"}","lastModifiedDate":"2022-03-23"}],"authorContributionMap":{"WJunHong":92,"chuashihong":15}},{"path":"src/main/java/seedu/address/storage/JsonAdaptedClient.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.storage;","lastModifiedDate":"2018-08-13"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.util.ArrayList;","lastModifiedDate":"2018-08-13"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import java.util.HashSet;","lastModifiedDate":"2018-08-13"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.util.List;","lastModifiedDate":"2018-08-13"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.util.Set;","lastModifiedDate":"2018-08-13"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import java.util.stream.Collectors;","lastModifiedDate":"2018-08-13"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import com.fasterxml.jackson.annotation.JsonCreator;","lastModifiedDate":"2018-08-13"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import com.fasterxml.jackson.annotation.JsonProperty;","lastModifiedDate":"2018-08-13"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import seedu.address.commons.exceptions.IllegalValueException;","lastModifiedDate":"2018-08-13"},{"lineNumber":13,"author":{"gitId":"Jacky142857"},"content":"import seedu.address.model.client.Appointment;","lastModifiedDate":"2022-03-11"},{"lineNumber":14,"author":{"gitId":"cwnm"},"content":"import seedu.address.model.client.Client;","lastModifiedDate":"2022-03-04"},{"lineNumber":15,"author":{"gitId":"cwnm"},"content":"import seedu.address.model.client.Name;","lastModifiedDate":"2022-03-04"},{"lineNumber":16,"author":{"gitId":"cwnm"},"content":"import seedu.address.model.client.Phone;","lastModifiedDate":"2022-03-04"},{"lineNumber":17,"author":{"gitId":"-"},"content":"import seedu.address.model.tag.Tag;","lastModifiedDate":"2018-08-13"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":19,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2018-08-13"},{"lineNumber":20,"author":{"gitId":"cwnm"},"content":" * Jackson-friendly version of {@link Client}.","lastModifiedDate":"2022-03-04"},{"lineNumber":21,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2018-08-13"},{"lineNumber":22,"author":{"gitId":"cwnm"},"content":"class JsonAdaptedClient {","lastModifiedDate":"2022-03-04"},{"lineNumber":23,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":24,"author":{"gitId":"cwnm"},"content":"    public static final String MISSING_FIELD_MESSAGE_FORMAT \u003d \"client\u0027s %s field is missing!\";","lastModifiedDate":"2022-03-04"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    private final String name;","lastModifiedDate":"2018-08-13"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    private final String phone;","lastModifiedDate":"2018-08-13"},{"lineNumber":28,"author":{"gitId":"Jacky142857"},"content":"    private final String appointment;","lastModifiedDate":"2022-03-11"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    private final List\u003cJsonAdaptedTag\u003e tagged \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2018-08-13"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-08-13"},{"lineNumber":32,"author":{"gitId":"cwnm"},"content":"     * Constructs a {@code JsonAdaptedclient} with the given client details.","lastModifiedDate":"2022-03-04"},{"lineNumber":33,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-08-13"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    @JsonCreator","lastModifiedDate":"2018-08-13"},{"lineNumber":35,"author":{"gitId":"Jacky142857"},"content":"    public JsonAdaptedClient(@JsonProperty(\"name\") String name,","lastModifiedDate":"2022-03-19"},{"lineNumber":36,"author":{"gitId":"Jacky142857"},"content":"            @JsonProperty(\"phone\") String phone, @JsonProperty(\"appointment\") String appointment,","lastModifiedDate":"2022-03-19"},{"lineNumber":37,"author":{"gitId":"-"},"content":"            @JsonProperty(\"tagged\") List\u003cJsonAdaptedTag\u003e tagged) {","lastModifiedDate":"2022-03-11"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        this.name \u003d name;","lastModifiedDate":"2018-08-13"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        this.phone \u003d phone;","lastModifiedDate":"2018-08-13"},{"lineNumber":40,"author":{"gitId":"-"},"content":"        if (tagged !\u003d null) {","lastModifiedDate":"2018-08-13"},{"lineNumber":41,"author":{"gitId":"-"},"content":"            this.tagged.addAll(tagged);","lastModifiedDate":"2018-08-13"},{"lineNumber":42,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-08-13"},{"lineNumber":43,"author":{"gitId":"Jacky142857"},"content":"        this.appointment \u003d appointment;","lastModifiedDate":"2022-03-11"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":45,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-08-13"},{"lineNumber":47,"author":{"gitId":"cwnm"},"content":"     * Converts a given {@code client} into this class for Jackson use.","lastModifiedDate":"2022-03-04"},{"lineNumber":48,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-08-13"},{"lineNumber":49,"author":{"gitId":"cwnm"},"content":"    public JsonAdaptedClient(Client source) {","lastModifiedDate":"2022-03-04"},{"lineNumber":50,"author":{"gitId":"-"},"content":"        name \u003d source.getName().fullName;","lastModifiedDate":"2018-08-13"},{"lineNumber":51,"author":{"gitId":"-"},"content":"        phone \u003d source.getPhone().value;","lastModifiedDate":"2018-08-13"},{"lineNumber":52,"author":{"gitId":"-"},"content":"        tagged.addAll(source.getTags().stream()","lastModifiedDate":"2018-08-13"},{"lineNumber":53,"author":{"gitId":"-"},"content":"                .map(JsonAdaptedTag::new)","lastModifiedDate":"2018-08-13"},{"lineNumber":54,"author":{"gitId":"-"},"content":"                .collect(Collectors.toList()));","lastModifiedDate":"2018-08-13"},{"lineNumber":55,"author":{"gitId":"Jacky142857"},"content":"        appointment \u003d source.getAppointment().value;","lastModifiedDate":"2022-03-11"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":57,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":58,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-08-13"},{"lineNumber":59,"author":{"gitId":"-"},"content":"     * Converts this Jackson-friendly adapted person object into the model\u0027s {@code Person} object.","lastModifiedDate":"2018-08-13"},{"lineNumber":60,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2018-08-13"},{"lineNumber":61,"author":{"gitId":"-"},"content":"     * @throws IllegalValueException if there were any data constraints violated in the adapted person.","lastModifiedDate":"2018-08-13"},{"lineNumber":62,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-08-13"},{"lineNumber":63,"author":{"gitId":"cwnm"},"content":"    public Client toModelType() throws IllegalValueException {","lastModifiedDate":"2022-03-04"},{"lineNumber":64,"author":{"gitId":"cwnm"},"content":"        final List\u003cTag\u003e clientTags \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2022-03-04"},{"lineNumber":65,"author":{"gitId":"-"},"content":"        for (JsonAdaptedTag tag : tagged) {","lastModifiedDate":"2018-08-13"},{"lineNumber":66,"author":{"gitId":"cwnm"},"content":"            clientTags.add(tag.toModelType());","lastModifiedDate":"2022-03-04"},{"lineNumber":67,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-08-13"},{"lineNumber":68,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":69,"author":{"gitId":"-"},"content":"        if (name \u003d\u003d null) {","lastModifiedDate":"2018-08-13"},{"lineNumber":70,"author":{"gitId":"-"},"content":"            throw new IllegalValueException(String.format(MISSING_FIELD_MESSAGE_FORMAT, Name.class.getSimpleName()));","lastModifiedDate":"2018-08-13"},{"lineNumber":71,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-08-13"},{"lineNumber":72,"author":{"gitId":"-"},"content":"        if (!Name.isValidName(name)) {","lastModifiedDate":"2018-08-13"},{"lineNumber":73,"author":{"gitId":"-"},"content":"            throw new IllegalValueException(Name.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2018-08-13"},{"lineNumber":74,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-08-13"},{"lineNumber":75,"author":{"gitId":"-"},"content":"        final Name modelName \u003d new Name(name);","lastModifiedDate":"2018-08-13"},{"lineNumber":76,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":77,"author":{"gitId":"-"},"content":"        if (phone \u003d\u003d null) {","lastModifiedDate":"2018-08-13"},{"lineNumber":78,"author":{"gitId":"-"},"content":"            throw new IllegalValueException(String.format(MISSING_FIELD_MESSAGE_FORMAT, Phone.class.getSimpleName()));","lastModifiedDate":"2018-08-13"},{"lineNumber":79,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-08-13"},{"lineNumber":80,"author":{"gitId":"-"},"content":"        if (!Phone.isValidPhone(phone)) {","lastModifiedDate":"2018-08-13"},{"lineNumber":81,"author":{"gitId":"-"},"content":"            throw new IllegalValueException(Phone.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2018-08-13"},{"lineNumber":82,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-08-13"},{"lineNumber":83,"author":{"gitId":"-"},"content":"        final Phone modelPhone \u003d new Phone(phone);","lastModifiedDate":"2018-08-13"},{"lineNumber":84,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":85,"author":{"gitId":"Jacky142857"},"content":"        if (appointment \u003d\u003d null) {","lastModifiedDate":"2022-03-11"},{"lineNumber":86,"author":{"gitId":"Jacky142857"},"content":"            throw new IllegalValueException(String.format(MISSING_FIELD_MESSAGE_FORMAT,","lastModifiedDate":"2022-03-11"},{"lineNumber":87,"author":{"gitId":"Jacky142857"},"content":"                    Appointment.class.getSimpleName()));","lastModifiedDate":"2022-03-11"},{"lineNumber":88,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2022-03-11"},{"lineNumber":89,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-03-11"},{"lineNumber":90,"author":{"gitId":"Jacky142857"},"content":"        final Appointment modelAppointment \u003d new Appointment(appointment);","lastModifiedDate":"2022-03-11"},{"lineNumber":91,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-03-11"},{"lineNumber":92,"author":{"gitId":"cwnm"},"content":"        final Set\u003cTag\u003e modelTags \u003d new HashSet\u003c\u003e(clientTags);","lastModifiedDate":"2022-03-04"},{"lineNumber":93,"author":{"gitId":"Jacky142857"},"content":"        return new Client(modelName, modelPhone, modelAppointment, modelTags);","lastModifiedDate":"2022-03-19"},{"lineNumber":94,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":95,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":96,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2018-08-13"}],"authorContributionMap":{"Jacky142857":11,"-":72,"cwnm":13}},{"path":"src/main/java/seedu/address/storage/JsonAdaptedHouse.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"chuashihong"},"content":"package seedu.address.storage;","lastModifiedDate":"2022-03-25"},{"lineNumber":2,"author":{"gitId":"chuashihong"},"content":"","lastModifiedDate":"2022-03-25"},{"lineNumber":3,"author":{"gitId":"chuashihong"},"content":"import com.fasterxml.jackson.annotation.JsonCreator;","lastModifiedDate":"2022-03-25"},{"lineNumber":4,"author":{"gitId":"chuashihong"},"content":"import com.fasterxml.jackson.annotation.JsonProperty;","lastModifiedDate":"2022-03-25"},{"lineNumber":5,"author":{"gitId":"chuashihong"},"content":"","lastModifiedDate":"2022-03-25"},{"lineNumber":6,"author":{"gitId":"chuashihong"},"content":"import seedu.address.commons.exceptions.IllegalValueException;","lastModifiedDate":"2022-03-25"},{"lineNumber":7,"author":{"gitId":"chuashihong"},"content":"import seedu.address.model.property.House;","lastModifiedDate":"2022-03-25"},{"lineNumber":8,"author":{"gitId":"chuashihong"},"content":"import seedu.address.model.property.HouseType;","lastModifiedDate":"2022-03-25"},{"lineNumber":9,"author":{"gitId":"janald99"},"content":"import seedu.address.model.property.Location;","lastModifiedDate":"2022-03-31"},{"lineNumber":10,"author":{"gitId":"chuashihong"},"content":"","lastModifiedDate":"2022-03-25"},{"lineNumber":11,"author":{"gitId":"chuashihong"},"content":"public class JsonAdaptedHouse {","lastModifiedDate":"2022-03-25"},{"lineNumber":12,"author":{"gitId":"chuashihong"},"content":"","lastModifiedDate":"2022-03-25"},{"lineNumber":13,"author":{"gitId":"chuashihong"},"content":"    private final String houseType;","lastModifiedDate":"2022-03-25"},{"lineNumber":14,"author":{"gitId":"chuashihong"},"content":"    private final String location;","lastModifiedDate":"2022-03-25"},{"lineNumber":15,"author":{"gitId":"chuashihong"},"content":"","lastModifiedDate":"2022-03-25"},{"lineNumber":16,"author":{"gitId":"chuashihong"},"content":"    /**","lastModifiedDate":"2022-03-25"},{"lineNumber":17,"author":{"gitId":"chuashihong"},"content":"     * Constructs a {@code JsonAdaptedHouse} with the given house details.","lastModifiedDate":"2022-03-25"},{"lineNumber":18,"author":{"gitId":"chuashihong"},"content":"     */","lastModifiedDate":"2022-03-25"},{"lineNumber":19,"author":{"gitId":"chuashihong"},"content":"    @JsonCreator","lastModifiedDate":"2022-03-25"},{"lineNumber":20,"author":{"gitId":"chuashihong"},"content":"    public JsonAdaptedHouse(@JsonProperty(\"houseType\") String houseType,","lastModifiedDate":"2022-03-26"},{"lineNumber":21,"author":{"gitId":"chuashihong"},"content":"                            @JsonProperty(\"location\") String location) {","lastModifiedDate":"2022-03-25"},{"lineNumber":22,"author":{"gitId":"chuashihong"},"content":"        this.houseType \u003d houseType;","lastModifiedDate":"2022-03-25"},{"lineNumber":23,"author":{"gitId":"chuashihong"},"content":"        this.location \u003d location;","lastModifiedDate":"2022-03-25"},{"lineNumber":24,"author":{"gitId":"chuashihong"},"content":"    }","lastModifiedDate":"2022-03-25"},{"lineNumber":25,"author":{"gitId":"chuashihong"},"content":"","lastModifiedDate":"2022-03-25"},{"lineNumber":26,"author":{"gitId":"chuashihong"},"content":"    /**","lastModifiedDate":"2022-03-25"},{"lineNumber":27,"author":{"gitId":"chuashihong"},"content":"     * Converts a given {@code House} into this class for Jackson use.","lastModifiedDate":"2022-03-25"},{"lineNumber":28,"author":{"gitId":"chuashihong"},"content":"     */","lastModifiedDate":"2022-03-25"},{"lineNumber":29,"author":{"gitId":"chuashihong"},"content":"    public JsonAdaptedHouse(House source) {","lastModifiedDate":"2022-03-25"},{"lineNumber":30,"author":{"gitId":"chuashihong"},"content":"        this.houseType \u003d source.getHouseTypeToString();","lastModifiedDate":"2022-03-25"},{"lineNumber":31,"author":{"gitId":"chuashihong"},"content":"        this.location \u003d source.getLocationToString();","lastModifiedDate":"2022-03-25"},{"lineNumber":32,"author":{"gitId":"chuashihong"},"content":"    }","lastModifiedDate":"2022-03-25"},{"lineNumber":33,"author":{"gitId":"chuashihong"},"content":"","lastModifiedDate":"2022-03-25"},{"lineNumber":34,"author":{"gitId":"chuashihong"},"content":"    /**","lastModifiedDate":"2022-03-25"},{"lineNumber":35,"author":{"gitId":"chuashihong"},"content":"     * Converts this Jackson-friendly adapted tag object into the model\u0027s {@code House} object.","lastModifiedDate":"2022-03-25"},{"lineNumber":36,"author":{"gitId":"chuashihong"},"content":"     *","lastModifiedDate":"2022-03-25"},{"lineNumber":37,"author":{"gitId":"chuashihong"},"content":"     * @throws IllegalValueException if there were any data constraints violated in the adapted house.","lastModifiedDate":"2022-03-25"},{"lineNumber":38,"author":{"gitId":"chuashihong"},"content":"     */","lastModifiedDate":"2022-03-25"},{"lineNumber":39,"author":{"gitId":"chuashihong"},"content":"    public House toModelType() throws IllegalValueException {","lastModifiedDate":"2022-03-25"},{"lineNumber":40,"author":{"gitId":"chuashihong"},"content":"        if (houseType.equals(\"-\")) {","lastModifiedDate":"2022-04-08"},{"lineNumber":41,"author":{"gitId":"chuashihong"},"content":"            return new House(HouseType.NULLHOUSETYPE, new Location(location));","lastModifiedDate":"2022-04-08"},{"lineNumber":42,"author":{"gitId":"chuashihong"},"content":"        } else {","lastModifiedDate":"2022-04-08"},{"lineNumber":43,"author":{"gitId":"janald99"},"content":"            return new House(HouseType.getHouseType(houseType), new Location(location));","lastModifiedDate":"2022-03-31"},{"lineNumber":44,"author":{"gitId":"chuashihong"},"content":"        }","lastModifiedDate":"2022-03-25"},{"lineNumber":45,"author":{"gitId":"chuashihong"},"content":"    }","lastModifiedDate":"2022-03-25"},{"lineNumber":46,"author":{"gitId":"chuashihong"},"content":"}","lastModifiedDate":"2022-04-08"}],"authorContributionMap":{"janald99":2,"chuashihong":44}},{"path":"src/main/java/seedu/address/storage/JsonAdaptedPriceRange.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"chuashihong"},"content":"package seedu.address.storage;","lastModifiedDate":"2022-03-25"},{"lineNumber":2,"author":{"gitId":"chuashihong"},"content":"","lastModifiedDate":"2022-03-25"},{"lineNumber":3,"author":{"gitId":"chuashihong"},"content":"import com.fasterxml.jackson.annotation.JsonCreator;","lastModifiedDate":"2022-03-25"},{"lineNumber":4,"author":{"gitId":"chuashihong"},"content":"import com.fasterxml.jackson.annotation.JsonProperty;","lastModifiedDate":"2022-03-25"},{"lineNumber":5,"author":{"gitId":"chuashihong"},"content":"","lastModifiedDate":"2022-03-25"},{"lineNumber":6,"author":{"gitId":"chuashihong"},"content":"import seedu.address.commons.exceptions.IllegalValueException;","lastModifiedDate":"2022-03-25"},{"lineNumber":7,"author":{"gitId":"chuashihong"},"content":"import seedu.address.model.property.PriceRange;","lastModifiedDate":"2022-03-25"},{"lineNumber":8,"author":{"gitId":"chuashihong"},"content":"","lastModifiedDate":"2022-03-25"},{"lineNumber":9,"author":{"gitId":"chuashihong"},"content":"public class JsonAdaptedPriceRange {","lastModifiedDate":"2022-03-25"},{"lineNumber":10,"author":{"gitId":"chuashihong"},"content":"","lastModifiedDate":"2022-03-25"},{"lineNumber":11,"author":{"gitId":"chuashihong"},"content":"    private final String lower;","lastModifiedDate":"2022-03-25"},{"lineNumber":12,"author":{"gitId":"chuashihong"},"content":"    private final String upper;","lastModifiedDate":"2022-03-25"},{"lineNumber":13,"author":{"gitId":"chuashihong"},"content":"","lastModifiedDate":"2022-03-25"},{"lineNumber":14,"author":{"gitId":"chuashihong"},"content":"    /**","lastModifiedDate":"2022-03-25"},{"lineNumber":15,"author":{"gitId":"chuashihong"},"content":"     * Constructs a {@code JsonAdaptedPriceRange} with the given house details.","lastModifiedDate":"2022-03-25"},{"lineNumber":16,"author":{"gitId":"chuashihong"},"content":"     */","lastModifiedDate":"2022-03-25"},{"lineNumber":17,"author":{"gitId":"chuashihong"},"content":"    @JsonCreator","lastModifiedDate":"2022-03-25"},{"lineNumber":18,"author":{"gitId":"chuashihong"},"content":"    public JsonAdaptedPriceRange(@JsonProperty(\"lower\") String lower,","lastModifiedDate":"2022-03-25"},{"lineNumber":19,"author":{"gitId":"chuashihong"},"content":"                                 @JsonProperty(\"upper\") String upper) {","lastModifiedDate":"2022-03-25"},{"lineNumber":20,"author":{"gitId":"chuashihong"},"content":"        this.lower \u003d lower;","lastModifiedDate":"2022-03-25"},{"lineNumber":21,"author":{"gitId":"chuashihong"},"content":"        this.upper \u003d upper;","lastModifiedDate":"2022-03-25"},{"lineNumber":22,"author":{"gitId":"chuashihong"},"content":"    }","lastModifiedDate":"2022-03-25"},{"lineNumber":23,"author":{"gitId":"chuashihong"},"content":"","lastModifiedDate":"2022-03-25"},{"lineNumber":24,"author":{"gitId":"chuashihong"},"content":"    /**","lastModifiedDate":"2022-03-25"},{"lineNumber":25,"author":{"gitId":"chuashihong"},"content":"     * Converts a given {@code PriceRange} into this class for Jackson use.","lastModifiedDate":"2022-03-25"},{"lineNumber":26,"author":{"gitId":"chuashihong"},"content":"     */","lastModifiedDate":"2022-03-25"},{"lineNumber":27,"author":{"gitId":"chuashihong"},"content":"    public JsonAdaptedPriceRange(PriceRange source) {","lastModifiedDate":"2022-03-25"},{"lineNumber":28,"author":{"gitId":"chuashihong"},"content":"        this.lower \u003d source.getLowerToString();","lastModifiedDate":"2022-03-25"},{"lineNumber":29,"author":{"gitId":"chuashihong"},"content":"        this.upper \u003d source.getUpperToString();","lastModifiedDate":"2022-03-25"},{"lineNumber":30,"author":{"gitId":"chuashihong"},"content":"    }","lastModifiedDate":"2022-03-25"},{"lineNumber":31,"author":{"gitId":"chuashihong"},"content":"","lastModifiedDate":"2022-03-25"},{"lineNumber":32,"author":{"gitId":"chuashihong"},"content":"    /**","lastModifiedDate":"2022-03-25"},{"lineNumber":33,"author":{"gitId":"chuashihong"},"content":"     * Converts this Jackson-friendly adapted tag object into the model\u0027s {@code PriceRange} object.","lastModifiedDate":"2022-03-25"},{"lineNumber":34,"author":{"gitId":"chuashihong"},"content":"     *","lastModifiedDate":"2022-03-25"},{"lineNumber":35,"author":{"gitId":"chuashihong"},"content":"     * @throws IllegalValueException if there were any data constraints violated in the adapted house.","lastModifiedDate":"2022-03-25"},{"lineNumber":36,"author":{"gitId":"chuashihong"},"content":"     */","lastModifiedDate":"2022-03-25"},{"lineNumber":37,"author":{"gitId":"chuashihong"},"content":"    public PriceRange toModelType() throws IllegalValueException {","lastModifiedDate":"2022-03-25"},{"lineNumber":38,"author":{"gitId":"chuashihong"},"content":"        return new PriceRange(Integer.parseInt(lower), Integer.parseInt(upper));","lastModifiedDate":"2022-03-25"},{"lineNumber":39,"author":{"gitId":"chuashihong"},"content":"    }","lastModifiedDate":"2022-03-25"},{"lineNumber":40,"author":{"gitId":"chuashihong"},"content":"}","lastModifiedDate":"2022-03-25"}],"authorContributionMap":{"chuashihong":40}},{"path":"src/main/java/seedu/address/storage/JsonAdaptedPropertyToBuy.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"chuashihong"},"content":"package seedu.address.storage;","lastModifiedDate":"2022-03-24"},{"lineNumber":2,"author":{"gitId":"chuashihong"},"content":"","lastModifiedDate":"2022-03-24"},{"lineNumber":3,"author":{"gitId":"chuashihong"},"content":"import com.fasterxml.jackson.annotation.JsonCreator;","lastModifiedDate":"2022-03-24"},{"lineNumber":4,"author":{"gitId":"chuashihong"},"content":"import com.fasterxml.jackson.annotation.JsonProperty;","lastModifiedDate":"2022-03-25"},{"lineNumber":5,"author":{"gitId":"chuashihong"},"content":"","lastModifiedDate":"2022-03-24"},{"lineNumber":6,"author":{"gitId":"chuashihong"},"content":"import seedu.address.commons.exceptions.IllegalValueException;","lastModifiedDate":"2022-03-24"},{"lineNumber":7,"author":{"gitId":"chuashihong"},"content":"import seedu.address.model.property.House;","lastModifiedDate":"2022-03-24"},{"lineNumber":8,"author":{"gitId":"chuashihong"},"content":"import seedu.address.model.property.PriceRange;","lastModifiedDate":"2022-03-24"},{"lineNumber":9,"author":{"gitId":"chuashihong"},"content":"import seedu.address.model.property.PropertyToBuy;","lastModifiedDate":"2022-03-24"},{"lineNumber":10,"author":{"gitId":"chuashihong"},"content":"","lastModifiedDate":"2022-03-24"},{"lineNumber":11,"author":{"gitId":"chuashihong"},"content":"/**","lastModifiedDate":"2022-03-24"},{"lineNumber":12,"author":{"gitId":"chuashihong"},"content":" * Jackson-friendly version of {@link PropertyToBuy}.","lastModifiedDate":"2022-03-24"},{"lineNumber":13,"author":{"gitId":"chuashihong"},"content":" */","lastModifiedDate":"2022-03-24"},{"lineNumber":14,"author":{"gitId":"chuashihong"},"content":"class JsonAdaptedPropertyToBuy {","lastModifiedDate":"2022-03-24"},{"lineNumber":15,"author":{"gitId":"chuashihong"},"content":"","lastModifiedDate":"2022-03-24"},{"lineNumber":16,"author":{"gitId":"chuashihong"},"content":"    private final JsonAdaptedHouse house;","lastModifiedDate":"2022-03-25"},{"lineNumber":17,"author":{"gitId":"chuashihong"},"content":"    private final JsonAdaptedPriceRange priceRange;","lastModifiedDate":"2022-03-25"},{"lineNumber":18,"author":{"gitId":"chuashihong"},"content":"","lastModifiedDate":"2022-03-24"},{"lineNumber":19,"author":{"gitId":"chuashihong"},"content":"    /**","lastModifiedDate":"2022-03-24"},{"lineNumber":20,"author":{"gitId":"chuashihong"},"content":"     * Constructs a {@code JsonAdaptedPropertyToBuy} with the given property details.","lastModifiedDate":"2022-03-25"},{"lineNumber":21,"author":{"gitId":"chuashihong"},"content":"     */","lastModifiedDate":"2022-03-24"},{"lineNumber":22,"author":{"gitId":"chuashihong"},"content":"    @JsonCreator","lastModifiedDate":"2022-03-24"},{"lineNumber":23,"author":{"gitId":"chuashihong"},"content":"    public JsonAdaptedPropertyToBuy(@JsonProperty(\"house\") JsonAdaptedHouse house,","lastModifiedDate":"2022-03-25"},{"lineNumber":24,"author":{"gitId":"chuashihong"},"content":"                                    @JsonProperty(\"pricerange\") JsonAdaptedPriceRange priceRange) {","lastModifiedDate":"2022-03-25"},{"lineNumber":25,"author":{"gitId":"chuashihong"},"content":"        this.house \u003d house;","lastModifiedDate":"2022-03-24"},{"lineNumber":26,"author":{"gitId":"chuashihong"},"content":"        this.priceRange \u003d priceRange;","lastModifiedDate":"2022-03-24"},{"lineNumber":27,"author":{"gitId":"chuashihong"},"content":"    }","lastModifiedDate":"2022-03-24"},{"lineNumber":28,"author":{"gitId":"chuashihong"},"content":"","lastModifiedDate":"2022-03-24"},{"lineNumber":29,"author":{"gitId":"chuashihong"},"content":"    /**","lastModifiedDate":"2022-03-24"},{"lineNumber":30,"author":{"gitId":"chuashihong"},"content":"     * Converts a given {@code PropertyToBuy} into this class for Jackson use.","lastModifiedDate":"2022-03-24"},{"lineNumber":31,"author":{"gitId":"chuashihong"},"content":"     */","lastModifiedDate":"2022-03-24"},{"lineNumber":32,"author":{"gitId":"chuashihong"},"content":"    public JsonAdaptedPropertyToBuy(PropertyToBuy source) {","lastModifiedDate":"2022-03-24"},{"lineNumber":33,"author":{"gitId":"chuashihong"},"content":"        this.house \u003d new JsonAdaptedHouse(source.getHouse());","lastModifiedDate":"2022-03-25"},{"lineNumber":34,"author":{"gitId":"chuashihong"},"content":"        this.priceRange \u003d new JsonAdaptedPriceRange(source.getPriceRange());","lastModifiedDate":"2022-03-25"},{"lineNumber":35,"author":{"gitId":"chuashihong"},"content":"    }","lastModifiedDate":"2022-03-24"},{"lineNumber":36,"author":{"gitId":"chuashihong"},"content":"","lastModifiedDate":"2022-03-24"},{"lineNumber":37,"author":{"gitId":"chuashihong"},"content":"    public House getHouse() throws IllegalValueException {","lastModifiedDate":"2022-03-25"},{"lineNumber":38,"author":{"gitId":"chuashihong"},"content":"        return house.toModelType();","lastModifiedDate":"2022-03-25"},{"lineNumber":39,"author":{"gitId":"chuashihong"},"content":"    }","lastModifiedDate":"2022-03-24"},{"lineNumber":40,"author":{"gitId":"chuashihong"},"content":"","lastModifiedDate":"2022-03-24"},{"lineNumber":41,"author":{"gitId":"chuashihong"},"content":"    public PriceRange getPriceRange() throws IllegalValueException {","lastModifiedDate":"2022-03-25"},{"lineNumber":42,"author":{"gitId":"chuashihong"},"content":"        return priceRange.toModelType();","lastModifiedDate":"2022-03-25"},{"lineNumber":43,"author":{"gitId":"chuashihong"},"content":"    }","lastModifiedDate":"2022-03-24"},{"lineNumber":44,"author":{"gitId":"chuashihong"},"content":"","lastModifiedDate":"2022-03-24"},{"lineNumber":45,"author":{"gitId":"chuashihong"},"content":"    /**","lastModifiedDate":"2022-03-24"},{"lineNumber":46,"author":{"gitId":"chuashihong"},"content":"     * Converts this Jackson-friendly adapted tag object into the model\u0027s {@code PropertyToBuy} object.","lastModifiedDate":"2022-03-25"},{"lineNumber":47,"author":{"gitId":"chuashihong"},"content":"     *","lastModifiedDate":"2022-03-24"},{"lineNumber":48,"author":{"gitId":"chuashihong"},"content":"     * @throws IllegalValueException if there were any data constraints violated in the adapted tag.","lastModifiedDate":"2022-03-24"},{"lineNumber":49,"author":{"gitId":"chuashihong"},"content":"     */","lastModifiedDate":"2022-03-24"},{"lineNumber":50,"author":{"gitId":"chuashihong"},"content":"    public PropertyToBuy toModelType() throws IllegalValueException {","lastModifiedDate":"2022-03-24"},{"lineNumber":51,"author":{"gitId":"chuashihong"},"content":"        return new PropertyToBuy(house.toModelType(), priceRange.toModelType());","lastModifiedDate":"2022-03-25"},{"lineNumber":52,"author":{"gitId":"chuashihong"},"content":"    }","lastModifiedDate":"2022-03-24"},{"lineNumber":53,"author":{"gitId":"chuashihong"},"content":"","lastModifiedDate":"2022-03-24"},{"lineNumber":54,"author":{"gitId":"chuashihong"},"content":"","lastModifiedDate":"2022-03-24"},{"lineNumber":55,"author":{"gitId":"chuashihong"},"content":"}","lastModifiedDate":"2022-03-24"}],"authorContributionMap":{"chuashihong":55}},{"path":"src/main/java/seedu/address/storage/JsonAdaptedPropertyToSell.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"chuashihong"},"content":"package seedu.address.storage;","lastModifiedDate":"2022-03-26"},{"lineNumber":2,"author":{"gitId":"chuashihong"},"content":"","lastModifiedDate":"2022-03-26"},{"lineNumber":3,"author":{"gitId":"chuashihong"},"content":"import com.fasterxml.jackson.annotation.JsonCreator;","lastModifiedDate":"2022-03-26"},{"lineNumber":4,"author":{"gitId":"chuashihong"},"content":"import com.fasterxml.jackson.annotation.JsonProperty;","lastModifiedDate":"2022-03-26"},{"lineNumber":5,"author":{"gitId":"WJunHong"},"content":"","lastModifiedDate":"2022-03-28"},{"lineNumber":6,"author":{"gitId":"chuashihong"},"content":"import seedu.address.commons.exceptions.IllegalValueException;","lastModifiedDate":"2022-03-26"},{"lineNumber":7,"author":{"gitId":"WJunHong"},"content":"import seedu.address.model.property.Address;","lastModifiedDate":"2022-03-27"},{"lineNumber":8,"author":{"gitId":"chuashihong"},"content":"import seedu.address.model.property.House;","lastModifiedDate":"2022-03-26"},{"lineNumber":9,"author":{"gitId":"chuashihong"},"content":"import seedu.address.model.property.PriceRange;","lastModifiedDate":"2022-03-26"},{"lineNumber":10,"author":{"gitId":"chuashihong"},"content":"import seedu.address.model.property.PropertyToSell;","lastModifiedDate":"2022-03-26"},{"lineNumber":11,"author":{"gitId":"chuashihong"},"content":"","lastModifiedDate":"2022-03-26"},{"lineNumber":12,"author":{"gitId":"chuashihong"},"content":"/**","lastModifiedDate":"2022-03-26"},{"lineNumber":13,"author":{"gitId":"chuashihong"},"content":" * Jackson-friendly version of {@link PropertyToSell}.","lastModifiedDate":"2022-03-26"},{"lineNumber":14,"author":{"gitId":"chuashihong"},"content":" */","lastModifiedDate":"2022-03-26"},{"lineNumber":15,"author":{"gitId":"chuashihong"},"content":"class JsonAdaptedPropertyToSell {","lastModifiedDate":"2022-03-26"},{"lineNumber":16,"author":{"gitId":"chuashihong"},"content":"","lastModifiedDate":"2022-03-26"},{"lineNumber":17,"author":{"gitId":"chuashihong"},"content":"    private final JsonAdaptedHouse house;","lastModifiedDate":"2022-03-26"},{"lineNumber":18,"author":{"gitId":"chuashihong"},"content":"    private final JsonAdaptedPriceRange priceRange;","lastModifiedDate":"2022-03-26"},{"lineNumber":19,"author":{"gitId":"chuashihong"},"content":"    private final String address;","lastModifiedDate":"2022-03-26"},{"lineNumber":20,"author":{"gitId":"chuashihong"},"content":"","lastModifiedDate":"2022-03-26"},{"lineNumber":21,"author":{"gitId":"chuashihong"},"content":"    /**","lastModifiedDate":"2022-03-26"},{"lineNumber":22,"author":{"gitId":"chuashihong"},"content":"     * Constructs a {@code JsonAdaptedPropertyToBuy} with the given property details.","lastModifiedDate":"2022-03-26"},{"lineNumber":23,"author":{"gitId":"chuashihong"},"content":"     */","lastModifiedDate":"2022-03-26"},{"lineNumber":24,"author":{"gitId":"chuashihong"},"content":"    @JsonCreator","lastModifiedDate":"2022-03-26"},{"lineNumber":25,"author":{"gitId":"chuashihong"},"content":"    public JsonAdaptedPropertyToSell(@JsonProperty(\"house\") JsonAdaptedHouse house,","lastModifiedDate":"2022-03-26"},{"lineNumber":26,"author":{"gitId":"chuashihong"},"content":"                                     @JsonProperty(\"priceRange\") JsonAdaptedPriceRange priceRange,","lastModifiedDate":"2022-03-26"},{"lineNumber":27,"author":{"gitId":"chuashihong"},"content":"                                     @JsonProperty(\"address\") String address) {","lastModifiedDate":"2022-03-26"},{"lineNumber":28,"author":{"gitId":"chuashihong"},"content":"        this.house \u003d house;","lastModifiedDate":"2022-03-26"},{"lineNumber":29,"author":{"gitId":"chuashihong"},"content":"        this.priceRange \u003d priceRange;","lastModifiedDate":"2022-03-26"},{"lineNumber":30,"author":{"gitId":"chuashihong"},"content":"        this.address \u003d address;","lastModifiedDate":"2022-03-26"},{"lineNumber":31,"author":{"gitId":"chuashihong"},"content":"    }","lastModifiedDate":"2022-03-26"},{"lineNumber":32,"author":{"gitId":"chuashihong"},"content":"","lastModifiedDate":"2022-03-26"},{"lineNumber":33,"author":{"gitId":"chuashihong"},"content":"    /**","lastModifiedDate":"2022-03-26"},{"lineNumber":34,"author":{"gitId":"chuashihong"},"content":"     * Converts a given {@code PropertyToSell} into this class for Jackson use.","lastModifiedDate":"2022-03-26"},{"lineNumber":35,"author":{"gitId":"chuashihong"},"content":"     */","lastModifiedDate":"2022-03-26"},{"lineNumber":36,"author":{"gitId":"chuashihong"},"content":"    public JsonAdaptedPropertyToSell(PropertyToSell source) {","lastModifiedDate":"2022-03-26"},{"lineNumber":37,"author":{"gitId":"chuashihong"},"content":"        this.house \u003d new JsonAdaptedHouse(source.getHouse());","lastModifiedDate":"2022-03-26"},{"lineNumber":38,"author":{"gitId":"chuashihong"},"content":"        this.priceRange \u003d new JsonAdaptedPriceRange(source.getPriceRange());","lastModifiedDate":"2022-03-26"},{"lineNumber":39,"author":{"gitId":"WJunHong"},"content":"        this.address \u003d source.getAddress().toString();","lastModifiedDate":"2022-03-27"},{"lineNumber":40,"author":{"gitId":"chuashihong"},"content":"    }","lastModifiedDate":"2022-03-26"},{"lineNumber":41,"author":{"gitId":"chuashihong"},"content":"","lastModifiedDate":"2022-03-26"},{"lineNumber":42,"author":{"gitId":"chuashihong"},"content":"","lastModifiedDate":"2022-03-27"},{"lineNumber":43,"author":{"gitId":"chuashihong"},"content":"    public House getHouse() throws IllegalValueException {","lastModifiedDate":"2022-03-26"},{"lineNumber":44,"author":{"gitId":"chuashihong"},"content":"        return house.toModelType();","lastModifiedDate":"2022-03-26"},{"lineNumber":45,"author":{"gitId":"chuashihong"},"content":"    }","lastModifiedDate":"2022-03-26"},{"lineNumber":46,"author":{"gitId":"chuashihong"},"content":"","lastModifiedDate":"2022-03-26"},{"lineNumber":47,"author":{"gitId":"chuashihong"},"content":"    public PriceRange getPriceRange() throws IllegalValueException {","lastModifiedDate":"2022-03-26"},{"lineNumber":48,"author":{"gitId":"chuashihong"},"content":"        return priceRange.toModelType();","lastModifiedDate":"2022-03-26"},{"lineNumber":49,"author":{"gitId":"chuashihong"},"content":"    }","lastModifiedDate":"2022-03-26"},{"lineNumber":50,"author":{"gitId":"chuashihong"},"content":"","lastModifiedDate":"2022-03-26"},{"lineNumber":51,"author":{"gitId":"WJunHong"},"content":"    public Address getAddress() {","lastModifiedDate":"2022-03-27"},{"lineNumber":52,"author":{"gitId":"WJunHong"},"content":"        return new Address(address);","lastModifiedDate":"2022-03-27"},{"lineNumber":53,"author":{"gitId":"chuashihong"},"content":"    }","lastModifiedDate":"2022-03-26"},{"lineNumber":54,"author":{"gitId":"chuashihong"},"content":"","lastModifiedDate":"2022-03-26"},{"lineNumber":55,"author":{"gitId":"chuashihong"},"content":"    /**","lastModifiedDate":"2022-03-26"},{"lineNumber":56,"author":{"gitId":"chuashihong"},"content":"     * Converts this Jackson-friendly adapted tag object into the model\u0027s {@code PropertyToSell} object.","lastModifiedDate":"2022-03-26"},{"lineNumber":57,"author":{"gitId":"chuashihong"},"content":"     *","lastModifiedDate":"2022-03-26"},{"lineNumber":58,"author":{"gitId":"chuashihong"},"content":"     * @throws IllegalValueException if there were any data constraints violated in the adapted tag.","lastModifiedDate":"2022-03-26"},{"lineNumber":59,"author":{"gitId":"chuashihong"},"content":"     */","lastModifiedDate":"2022-03-26"},{"lineNumber":60,"author":{"gitId":"chuashihong"},"content":"    public PropertyToSell toModelType() throws IllegalValueException {","lastModifiedDate":"2022-03-26"},{"lineNumber":61,"author":{"gitId":"WJunHong"},"content":"        return new PropertyToSell(house.toModelType(), priceRange.toModelType(), getAddress());","lastModifiedDate":"2022-03-27"},{"lineNumber":62,"author":{"gitId":"chuashihong"},"content":"    }","lastModifiedDate":"2022-03-26"},{"lineNumber":63,"author":{"gitId":"chuashihong"},"content":"}","lastModifiedDate":"2022-03-26"}],"authorContributionMap":{"WJunHong":6,"chuashihong":57}},{"path":"src/main/java/seedu/address/storage/JsonAdaptedSeller.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"Jacky142857"},"content":"package seedu.address.storage;","lastModifiedDate":"2022-03-19"},{"lineNumber":2,"author":{"gitId":"Jacky142857"},"content":"","lastModifiedDate":"2022-03-19"},{"lineNumber":3,"author":{"gitId":"Jacky142857"},"content":"import java.util.ArrayList;","lastModifiedDate":"2022-03-19"},{"lineNumber":4,"author":{"gitId":"Jacky142857"},"content":"import java.util.HashSet;","lastModifiedDate":"2022-03-19"},{"lineNumber":5,"author":{"gitId":"Jacky142857"},"content":"import java.util.List;","lastModifiedDate":"2022-03-19"},{"lineNumber":6,"author":{"gitId":"Jacky142857"},"content":"import java.util.Set;","lastModifiedDate":"2022-03-19"},{"lineNumber":7,"author":{"gitId":"Jacky142857"},"content":"import java.util.stream.Collectors;","lastModifiedDate":"2022-03-19"},{"lineNumber":8,"author":{"gitId":"Jacky142857"},"content":"","lastModifiedDate":"2022-03-19"},{"lineNumber":9,"author":{"gitId":"Jacky142857"},"content":"import com.fasterxml.jackson.annotation.JsonCreator;","lastModifiedDate":"2022-03-19"},{"lineNumber":10,"author":{"gitId":"Jacky142857"},"content":"import com.fasterxml.jackson.annotation.JsonProperty;","lastModifiedDate":"2022-03-19"},{"lineNumber":11,"author":{"gitId":"Jacky142857"},"content":"","lastModifiedDate":"2022-03-19"},{"lineNumber":12,"author":{"gitId":"Jacky142857"},"content":"import seedu.address.commons.exceptions.IllegalValueException;","lastModifiedDate":"2022-03-19"},{"lineNumber":13,"author":{"gitId":"Jacky142857"},"content":"import seedu.address.model.client.Appointment;","lastModifiedDate":"2022-03-19"},{"lineNumber":14,"author":{"gitId":"Jacky142857"},"content":"import seedu.address.model.client.Name;","lastModifiedDate":"2022-03-19"},{"lineNumber":15,"author":{"gitId":"Jacky142857"},"content":"import seedu.address.model.client.Phone;","lastModifiedDate":"2022-03-19"},{"lineNumber":16,"author":{"gitId":"chuashihong"},"content":"import seedu.address.model.property.NullPropertyToSell;","lastModifiedDate":"2022-03-26"},{"lineNumber":17,"author":{"gitId":"chuashihong"},"content":"import seedu.address.model.property.PropertyToSell;","lastModifiedDate":"2022-03-26"},{"lineNumber":18,"author":{"gitId":"Jacky142857"},"content":"import seedu.address.model.seller.Seller;","lastModifiedDate":"2022-03-19"},{"lineNumber":19,"author":{"gitId":"Jacky142857"},"content":"import seedu.address.model.tag.Tag;","lastModifiedDate":"2022-03-19"},{"lineNumber":20,"author":{"gitId":"Jacky142857"},"content":"","lastModifiedDate":"2022-03-19"},{"lineNumber":21,"author":{"gitId":"chuashihong"},"content":"public class JsonAdaptedSeller {","lastModifiedDate":"2022-03-26"},{"lineNumber":22,"author":{"gitId":"Jacky142857"},"content":"","lastModifiedDate":"2022-03-19"},{"lineNumber":23,"author":{"gitId":"Jacky142857"},"content":"    public static final String MISSING_FIELD_MESSAGE_FORMAT \u003d \"seller\u0027s %s field is missing!\";","lastModifiedDate":"2022-03-19"},{"lineNumber":24,"author":{"gitId":"Jacky142857"},"content":"","lastModifiedDate":"2022-03-19"},{"lineNumber":25,"author":{"gitId":"Jacky142857"},"content":"    private final String name;","lastModifiedDate":"2022-03-19"},{"lineNumber":26,"author":{"gitId":"Jacky142857"},"content":"    private final String phone;","lastModifiedDate":"2022-03-19"},{"lineNumber":27,"author":{"gitId":"Jacky142857"},"content":"    private final String appointment;","lastModifiedDate":"2022-03-19"},{"lineNumber":28,"author":{"gitId":"Jacky142857"},"content":"    private final List\u003cJsonAdaptedTag\u003e tagged \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2022-03-19"},{"lineNumber":29,"author":{"gitId":"chuashihong"},"content":"    private final JsonAdaptedPropertyToSell propertyToSell;","lastModifiedDate":"2022-03-26"},{"lineNumber":30,"author":{"gitId":"Jacky142857"},"content":"","lastModifiedDate":"2022-03-19"},{"lineNumber":31,"author":{"gitId":"Jacky142857"},"content":"    /**","lastModifiedDate":"2022-03-19"},{"lineNumber":32,"author":{"gitId":"Jacky142857"},"content":"     * Constructs a {@code JsonAdaptedclient} with the given client details.","lastModifiedDate":"2022-03-19"},{"lineNumber":33,"author":{"gitId":"Jacky142857"},"content":"     */","lastModifiedDate":"2022-03-19"},{"lineNumber":34,"author":{"gitId":"Jacky142857"},"content":"    @JsonCreator","lastModifiedDate":"2022-03-19"},{"lineNumber":35,"author":{"gitId":"Jacky142857"},"content":"    public JsonAdaptedSeller(@JsonProperty(\"name\") String name,","lastModifiedDate":"2022-03-19"},{"lineNumber":36,"author":{"gitId":"chuashihong"},"content":"                            @JsonProperty(\"phone\") String phone,","lastModifiedDate":"2022-03-24"},{"lineNumber":37,"author":{"gitId":"chuashihong"},"content":"                            @JsonProperty(\"appointment\") String appointment,","lastModifiedDate":"2022-03-24"},{"lineNumber":38,"author":{"gitId":"chuashihong"},"content":"                            @JsonProperty(\"tagged\") List\u003cJsonAdaptedTag\u003e tagged,","lastModifiedDate":"2022-03-26"},{"lineNumber":39,"author":{"gitId":"chuashihong"},"content":"                            @JsonProperty(\"propertyToSell\") JsonAdaptedPropertyToSell propertyToSell) {","lastModifiedDate":"2022-03-26"},{"lineNumber":40,"author":{"gitId":"Jacky142857"},"content":"        this.name \u003d name;","lastModifiedDate":"2022-03-19"},{"lineNumber":41,"author":{"gitId":"Jacky142857"},"content":"        this.phone \u003d phone;","lastModifiedDate":"2022-03-19"},{"lineNumber":42,"author":{"gitId":"Jacky142857"},"content":"        if (tagged !\u003d null) {","lastModifiedDate":"2022-03-19"},{"lineNumber":43,"author":{"gitId":"Jacky142857"},"content":"            this.tagged.addAll(tagged);","lastModifiedDate":"2022-03-19"},{"lineNumber":44,"author":{"gitId":"Jacky142857"},"content":"        }","lastModifiedDate":"2022-03-19"},{"lineNumber":45,"author":{"gitId":"Jacky142857"},"content":"        this.appointment \u003d appointment;","lastModifiedDate":"2022-03-19"},{"lineNumber":46,"author":{"gitId":"chuashihong"},"content":"        this.propertyToSell \u003d propertyToSell;","lastModifiedDate":"2022-03-26"},{"lineNumber":47,"author":{"gitId":"Jacky142857"},"content":"    }","lastModifiedDate":"2022-03-19"},{"lineNumber":48,"author":{"gitId":"Jacky142857"},"content":"","lastModifiedDate":"2022-03-19"},{"lineNumber":49,"author":{"gitId":"Jacky142857"},"content":"    /**","lastModifiedDate":"2022-03-19"},{"lineNumber":50,"author":{"gitId":"Jacky142857"},"content":"     * Converts a given {@code client} into this class for Jackson use.","lastModifiedDate":"2022-03-19"},{"lineNumber":51,"author":{"gitId":"Jacky142857"},"content":"     */","lastModifiedDate":"2022-03-19"},{"lineNumber":52,"author":{"gitId":"Jacky142857"},"content":"    public JsonAdaptedSeller(Seller source) {","lastModifiedDate":"2022-03-19"},{"lineNumber":53,"author":{"gitId":"Jacky142857"},"content":"        name \u003d source.getName().fullName;","lastModifiedDate":"2022-03-19"},{"lineNumber":54,"author":{"gitId":"Jacky142857"},"content":"        phone \u003d source.getPhone().value;","lastModifiedDate":"2022-03-19"},{"lineNumber":55,"author":{"gitId":"Jacky142857"},"content":"        tagged.addAll(source.getTags().stream()","lastModifiedDate":"2022-03-19"},{"lineNumber":56,"author":{"gitId":"Jacky142857"},"content":"                .map(JsonAdaptedTag::new)","lastModifiedDate":"2022-03-19"},{"lineNumber":57,"author":{"gitId":"Jacky142857"},"content":"                .collect(Collectors.toList()));","lastModifiedDate":"2022-03-19"},{"lineNumber":58,"author":{"gitId":"Jacky142857"},"content":"        appointment \u003d source.getAppointment().value;","lastModifiedDate":"2022-03-19"},{"lineNumber":59,"author":{"gitId":"chuashihong"},"content":"        if (source.getPropertyToSell() instanceof NullPropertyToSell) {","lastModifiedDate":"2022-03-28"},{"lineNumber":60,"author":{"gitId":"chuashihong"},"content":"            propertyToSell \u003d null;","lastModifiedDate":"2022-03-28"},{"lineNumber":61,"author":{"gitId":"chuashihong"},"content":"        } else {","lastModifiedDate":"2022-03-28"},{"lineNumber":62,"author":{"gitId":"chuashihong"},"content":"            propertyToSell \u003d new JsonAdaptedPropertyToSell(source.getPropertyToSell());","lastModifiedDate":"2022-03-26"},{"lineNumber":63,"author":{"gitId":"Jacky142857"},"content":"        }","lastModifiedDate":"2022-03-19"},{"lineNumber":64,"author":{"gitId":"chuashihong"},"content":"    }","lastModifiedDate":"2022-03-28"},{"lineNumber":65,"author":{"gitId":"Jacky142857"},"content":"","lastModifiedDate":"2022-03-19"},{"lineNumber":66,"author":{"gitId":"Jacky142857"},"content":"    /**","lastModifiedDate":"2022-03-19"},{"lineNumber":67,"author":{"gitId":"WJunHong"},"content":"     * Converts this Jackson-friendly adapted person object into the model\u0027s {@code Seller} object.","lastModifiedDate":"2022-03-27"},{"lineNumber":68,"author":{"gitId":"Jacky142857"},"content":"     *","lastModifiedDate":"2022-03-19"},{"lineNumber":69,"author":{"gitId":"Jacky142857"},"content":"     * @throws IllegalValueException if there were any data constraints violated in the adapted person.","lastModifiedDate":"2022-03-19"},{"lineNumber":70,"author":{"gitId":"Jacky142857"},"content":"     */","lastModifiedDate":"2022-03-19"},{"lineNumber":71,"author":{"gitId":"Jacky142857"},"content":"    public Seller toModelType() throws IllegalValueException {","lastModifiedDate":"2022-03-19"},{"lineNumber":72,"author":{"gitId":"chuashihong"},"content":"        final List\u003cTag\u003e buyerTags \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2022-03-26"},{"lineNumber":73,"author":{"gitId":"Jacky142857"},"content":"        for (JsonAdaptedTag tag : tagged) {","lastModifiedDate":"2022-03-19"},{"lineNumber":74,"author":{"gitId":"chuashihong"},"content":"            buyerTags.add(tag.toModelType());","lastModifiedDate":"2022-03-26"},{"lineNumber":75,"author":{"gitId":"Jacky142857"},"content":"        }","lastModifiedDate":"2022-03-19"},{"lineNumber":76,"author":{"gitId":"Jacky142857"},"content":"","lastModifiedDate":"2022-03-19"},{"lineNumber":77,"author":{"gitId":"Jacky142857"},"content":"        if (name \u003d\u003d null) {","lastModifiedDate":"2022-03-19"},{"lineNumber":78,"author":{"gitId":"Jacky142857"},"content":"            throw new IllegalValueException(String.format(MISSING_FIELD_MESSAGE_FORMAT, Name.class.getSimpleName()));","lastModifiedDate":"2022-03-19"},{"lineNumber":79,"author":{"gitId":"Jacky142857"},"content":"        }","lastModifiedDate":"2022-03-19"},{"lineNumber":80,"author":{"gitId":"Jacky142857"},"content":"        if (!Name.isValidName(name)) {","lastModifiedDate":"2022-03-19"},{"lineNumber":81,"author":{"gitId":"Jacky142857"},"content":"            throw new IllegalValueException(Name.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2022-03-19"},{"lineNumber":82,"author":{"gitId":"Jacky142857"},"content":"        }","lastModifiedDate":"2022-03-19"},{"lineNumber":83,"author":{"gitId":"Jacky142857"},"content":"        final Name modelName \u003d new Name(name);","lastModifiedDate":"2022-03-19"},{"lineNumber":84,"author":{"gitId":"Jacky142857"},"content":"","lastModifiedDate":"2022-03-19"},{"lineNumber":85,"author":{"gitId":"Jacky142857"},"content":"        if (phone \u003d\u003d null) {","lastModifiedDate":"2022-03-19"},{"lineNumber":86,"author":{"gitId":"Jacky142857"},"content":"            throw new IllegalValueException(String.format(MISSING_FIELD_MESSAGE_FORMAT, Phone.class.getSimpleName()));","lastModifiedDate":"2022-03-19"},{"lineNumber":87,"author":{"gitId":"Jacky142857"},"content":"        }","lastModifiedDate":"2022-03-19"},{"lineNumber":88,"author":{"gitId":"Jacky142857"},"content":"        if (!Phone.isValidPhone(phone)) {","lastModifiedDate":"2022-03-19"},{"lineNumber":89,"author":{"gitId":"Jacky142857"},"content":"            throw new IllegalValueException(Phone.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2022-03-19"},{"lineNumber":90,"author":{"gitId":"Jacky142857"},"content":"        }","lastModifiedDate":"2022-03-19"},{"lineNumber":91,"author":{"gitId":"Jacky142857"},"content":"        final Phone modelPhone \u003d new Phone(phone);","lastModifiedDate":"2022-03-19"},{"lineNumber":92,"author":{"gitId":"Jacky142857"},"content":"","lastModifiedDate":"2022-03-19"},{"lineNumber":93,"author":{"gitId":"Jacky142857"},"content":"        if (appointment \u003d\u003d null) {","lastModifiedDate":"2022-03-19"},{"lineNumber":94,"author":{"gitId":"Jacky142857"},"content":"            throw new IllegalValueException(String.format(MISSING_FIELD_MESSAGE_FORMAT,","lastModifiedDate":"2022-03-19"},{"lineNumber":95,"author":{"gitId":"Jacky142857"},"content":"                    Appointment.class.getSimpleName()));","lastModifiedDate":"2022-03-19"},{"lineNumber":96,"author":{"gitId":"Jacky142857"},"content":"        }","lastModifiedDate":"2022-03-19"},{"lineNumber":97,"author":{"gitId":"Jacky142857"},"content":"","lastModifiedDate":"2022-03-19"},{"lineNumber":98,"author":{"gitId":"Jacky142857"},"content":"        final Appointment modelAppointment \u003d new Appointment(appointment);","lastModifiedDate":"2022-03-19"},{"lineNumber":99,"author":{"gitId":"Jacky142857"},"content":"","lastModifiedDate":"2022-03-19"},{"lineNumber":100,"author":{"gitId":"chuashihong"},"content":"        final Set\u003cTag\u003e modelTags \u003d new HashSet\u003c\u003e(buyerTags);","lastModifiedDate":"2022-03-26"},{"lineNumber":101,"author":{"gitId":"Jacky142857"},"content":"","lastModifiedDate":"2022-03-19"},{"lineNumber":102,"author":{"gitId":"WJunHong"},"content":"        final PropertyToSell modelPropertyToSell \u003d this.propertyToSell \u003d\u003d null","lastModifiedDate":"2022-03-27"},{"lineNumber":103,"author":{"gitId":"chuashihong"},"content":"                ? NullPropertyToSell.getNullPropertyToSell() : new PropertyToSell(this.propertyToSell.getHouse(),","lastModifiedDate":"2022-03-26"},{"lineNumber":104,"author":{"gitId":"chuashihong"},"content":"                this.propertyToSell.getPriceRange(), this.propertyToSell.getAddress());","lastModifiedDate":"2022-03-26"},{"lineNumber":105,"author":{"gitId":"WJunHong"},"content":"        return new Seller(modelName, modelPhone, modelAppointment, modelTags, modelPropertyToSell);","lastModifiedDate":"2022-03-27"},{"lineNumber":106,"author":{"gitId":"chuashihong"},"content":"    }","lastModifiedDate":"2022-03-26"},{"lineNumber":107,"author":{"gitId":"Jacky142857"},"content":"}","lastModifiedDate":"2022-03-19"}],"authorContributionMap":{"WJunHong":3,"Jacky142857":84,"chuashihong":20}},{"path":"src/main/java/seedu/address/storage/JsonBuyerAddressBookStorage.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"WJunHong"},"content":"package seedu.address.storage;","lastModifiedDate":"2022-03-23"},{"lineNumber":2,"author":{"gitId":"WJunHong"},"content":"","lastModifiedDate":"2022-03-23"},{"lineNumber":3,"author":{"gitId":"WJunHong"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2022-03-23"},{"lineNumber":4,"author":{"gitId":"WJunHong"},"content":"","lastModifiedDate":"2022-03-23"},{"lineNumber":5,"author":{"gitId":"WJunHong"},"content":"import java.io.IOException;","lastModifiedDate":"2022-03-23"},{"lineNumber":6,"author":{"gitId":"WJunHong"},"content":"import java.nio.file.Path;","lastModifiedDate":"2022-03-23"},{"lineNumber":7,"author":{"gitId":"WJunHong"},"content":"import java.util.Optional;","lastModifiedDate":"2022-03-23"},{"lineNumber":8,"author":{"gitId":"WJunHong"},"content":"import java.util.logging.Logger;","lastModifiedDate":"2022-03-23"},{"lineNumber":9,"author":{"gitId":"WJunHong"},"content":"","lastModifiedDate":"2022-03-23"},{"lineNumber":10,"author":{"gitId":"WJunHong"},"content":"import seedu.address.commons.core.LogsCenter;","lastModifiedDate":"2022-03-23"},{"lineNumber":11,"author":{"gitId":"WJunHong"},"content":"import seedu.address.commons.exceptions.DataConversionException;","lastModifiedDate":"2022-03-23"},{"lineNumber":12,"author":{"gitId":"WJunHong"},"content":"import seedu.address.commons.exceptions.IllegalValueException;","lastModifiedDate":"2022-03-23"},{"lineNumber":13,"author":{"gitId":"WJunHong"},"content":"import seedu.address.commons.util.FileUtil;","lastModifiedDate":"2022-03-23"},{"lineNumber":14,"author":{"gitId":"WJunHong"},"content":"import seedu.address.commons.util.JsonUtil;","lastModifiedDate":"2022-03-23"},{"lineNumber":15,"author":{"gitId":"WJunHong"},"content":"import seedu.address.model.ReadOnlyBuyerAddressBook;","lastModifiedDate":"2022-03-23"},{"lineNumber":16,"author":{"gitId":"WJunHong"},"content":"","lastModifiedDate":"2022-03-23"},{"lineNumber":17,"author":{"gitId":"WJunHong"},"content":"public class JsonBuyerAddressBookStorage implements BuyerAddressBookStorage {","lastModifiedDate":"2022-03-23"},{"lineNumber":18,"author":{"gitId":"WJunHong"},"content":"","lastModifiedDate":"2022-03-23"},{"lineNumber":19,"author":{"gitId":"WJunHong"},"content":"    private static final Logger logger \u003d LogsCenter.getLogger(JsonBuyerAddressBookStorage.class);","lastModifiedDate":"2022-03-23"},{"lineNumber":20,"author":{"gitId":"WJunHong"},"content":"","lastModifiedDate":"2022-03-23"},{"lineNumber":21,"author":{"gitId":"WJunHong"},"content":"    private Path filePath;","lastModifiedDate":"2022-03-23"},{"lineNumber":22,"author":{"gitId":"WJunHong"},"content":"","lastModifiedDate":"2022-03-23"},{"lineNumber":23,"author":{"gitId":"WJunHong"},"content":"    public JsonBuyerAddressBookStorage(Path filePath) {","lastModifiedDate":"2022-03-23"},{"lineNumber":24,"author":{"gitId":"WJunHong"},"content":"        this.filePath \u003d filePath;","lastModifiedDate":"2022-03-23"},{"lineNumber":25,"author":{"gitId":"WJunHong"},"content":"    }","lastModifiedDate":"2022-03-23"},{"lineNumber":26,"author":{"gitId":"WJunHong"},"content":"","lastModifiedDate":"2022-03-23"},{"lineNumber":27,"author":{"gitId":"WJunHong"},"content":"    public Path getBuyerAddressBookFilePath() {","lastModifiedDate":"2022-03-23"},{"lineNumber":28,"author":{"gitId":"WJunHong"},"content":"        return filePath;","lastModifiedDate":"2022-03-23"},{"lineNumber":29,"author":{"gitId":"WJunHong"},"content":"    }","lastModifiedDate":"2022-03-23"},{"lineNumber":30,"author":{"gitId":"WJunHong"},"content":"","lastModifiedDate":"2022-03-23"},{"lineNumber":31,"author":{"gitId":"WJunHong"},"content":"    @Override","lastModifiedDate":"2022-03-23"},{"lineNumber":32,"author":{"gitId":"WJunHong"},"content":"    public Optional\u003cReadOnlyBuyerAddressBook\u003e readBuyerAddressBook() throws DataConversionException {","lastModifiedDate":"2022-03-23"},{"lineNumber":33,"author":{"gitId":"WJunHong"},"content":"        return readBuyerAddressBook(filePath);","lastModifiedDate":"2022-03-23"},{"lineNumber":34,"author":{"gitId":"WJunHong"},"content":"    }","lastModifiedDate":"2022-03-23"},{"lineNumber":35,"author":{"gitId":"WJunHong"},"content":"","lastModifiedDate":"2022-03-23"},{"lineNumber":36,"author":{"gitId":"WJunHong"},"content":"    /**","lastModifiedDate":"2022-03-23"},{"lineNumber":37,"author":{"gitId":"WJunHong"},"content":"     * Similar to {@link #readBuyerAddressBook()}.","lastModifiedDate":"2022-03-23"},{"lineNumber":38,"author":{"gitId":"WJunHong"},"content":"     *","lastModifiedDate":"2022-03-23"},{"lineNumber":39,"author":{"gitId":"WJunHong"},"content":"     * @param filePath location of the data. Cannot be null.","lastModifiedDate":"2022-03-23"},{"lineNumber":40,"author":{"gitId":"WJunHong"},"content":"     * @throws DataConversionException if the file is not in the correct format.","lastModifiedDate":"2022-03-23"},{"lineNumber":41,"author":{"gitId":"WJunHong"},"content":"     */","lastModifiedDate":"2022-03-23"},{"lineNumber":42,"author":{"gitId":"WJunHong"},"content":"    public Optional\u003cReadOnlyBuyerAddressBook\u003e readBuyerAddressBook(Path filePath) throws DataConversionException {","lastModifiedDate":"2022-03-23"},{"lineNumber":43,"author":{"gitId":"WJunHong"},"content":"        requireNonNull(filePath);","lastModifiedDate":"2022-03-23"},{"lineNumber":44,"author":{"gitId":"WJunHong"},"content":"","lastModifiedDate":"2022-03-23"},{"lineNumber":45,"author":{"gitId":"WJunHong"},"content":"        Optional\u003cJsonSerializableBuyerAddressBook\u003e jsonBuyerAddressBook \u003d JsonUtil.readJsonFile(","lastModifiedDate":"2022-03-23"},{"lineNumber":46,"author":{"gitId":"WJunHong"},"content":"                filePath, JsonSerializableBuyerAddressBook.class);","lastModifiedDate":"2022-03-23"},{"lineNumber":47,"author":{"gitId":"WJunHong"},"content":"        if (!jsonBuyerAddressBook.isPresent()) {","lastModifiedDate":"2022-03-23"},{"lineNumber":48,"author":{"gitId":"WJunHong"},"content":"            return Optional.empty();","lastModifiedDate":"2022-03-23"},{"lineNumber":49,"author":{"gitId":"WJunHong"},"content":"        }","lastModifiedDate":"2022-03-23"},{"lineNumber":50,"author":{"gitId":"WJunHong"},"content":"","lastModifiedDate":"2022-03-23"},{"lineNumber":51,"author":{"gitId":"WJunHong"},"content":"        try {","lastModifiedDate":"2022-03-23"},{"lineNumber":52,"author":{"gitId":"WJunHong"},"content":"            return Optional.of(jsonBuyerAddressBook.get().toModelType());","lastModifiedDate":"2022-03-23"},{"lineNumber":53,"author":{"gitId":"WJunHong"},"content":"        } catch (IllegalValueException ive) {","lastModifiedDate":"2022-03-23"},{"lineNumber":54,"author":{"gitId":"WJunHong"},"content":"            logger.info(\"Illegal values found in \" + filePath + \": \" + ive.getMessage());","lastModifiedDate":"2022-03-23"},{"lineNumber":55,"author":{"gitId":"WJunHong"},"content":"            throw new DataConversionException(ive);","lastModifiedDate":"2022-03-23"},{"lineNumber":56,"author":{"gitId":"WJunHong"},"content":"        }","lastModifiedDate":"2022-03-23"},{"lineNumber":57,"author":{"gitId":"WJunHong"},"content":"    }","lastModifiedDate":"2022-03-23"},{"lineNumber":58,"author":{"gitId":"WJunHong"},"content":"","lastModifiedDate":"2022-03-23"},{"lineNumber":59,"author":{"gitId":"WJunHong"},"content":"    @Override","lastModifiedDate":"2022-03-23"},{"lineNumber":60,"author":{"gitId":"WJunHong"},"content":"    public void saveBuyerAddressBook(ReadOnlyBuyerAddressBook addressBook) throws IOException {","lastModifiedDate":"2022-03-23"},{"lineNumber":61,"author":{"gitId":"WJunHong"},"content":"        saveBuyerAddressBook(addressBook, filePath);","lastModifiedDate":"2022-03-23"},{"lineNumber":62,"author":{"gitId":"WJunHong"},"content":"    }","lastModifiedDate":"2022-03-23"},{"lineNumber":63,"author":{"gitId":"WJunHong"},"content":"","lastModifiedDate":"2022-03-23"},{"lineNumber":64,"author":{"gitId":"WJunHong"},"content":"    /**","lastModifiedDate":"2022-03-23"},{"lineNumber":65,"author":{"gitId":"WJunHong"},"content":"     * Similar to {@link #saveBuyerAddressBook(ReadOnlyBuyerAddressBook)}.","lastModifiedDate":"2022-03-23"},{"lineNumber":66,"author":{"gitId":"WJunHong"},"content":"     *","lastModifiedDate":"2022-03-23"},{"lineNumber":67,"author":{"gitId":"WJunHong"},"content":"     * @param filePath location of the data. Cannot be null.","lastModifiedDate":"2022-03-23"},{"lineNumber":68,"author":{"gitId":"WJunHong"},"content":"     */","lastModifiedDate":"2022-03-23"},{"lineNumber":69,"author":{"gitId":"WJunHong"},"content":"    public void saveBuyerAddressBook(ReadOnlyBuyerAddressBook buyerAddressBook, Path filePath) throws IOException {","lastModifiedDate":"2022-03-23"},{"lineNumber":70,"author":{"gitId":"WJunHong"},"content":"        requireNonNull(buyerAddressBook);","lastModifiedDate":"2022-03-23"},{"lineNumber":71,"author":{"gitId":"WJunHong"},"content":"        requireNonNull(filePath);","lastModifiedDate":"2022-03-23"},{"lineNumber":72,"author":{"gitId":"WJunHong"},"content":"","lastModifiedDate":"2022-03-23"},{"lineNumber":73,"author":{"gitId":"WJunHong"},"content":"        FileUtil.createIfMissing(filePath);","lastModifiedDate":"2022-03-23"},{"lineNumber":74,"author":{"gitId":"WJunHong"},"content":"        JsonUtil.saveJsonFile(new JsonSerializableBuyerAddressBook(buyerAddressBook), filePath);","lastModifiedDate":"2022-03-23"},{"lineNumber":75,"author":{"gitId":"WJunHong"},"content":"    }","lastModifiedDate":"2022-03-23"},{"lineNumber":76,"author":{"gitId":"WJunHong"},"content":"","lastModifiedDate":"2022-03-23"},{"lineNumber":77,"author":{"gitId":"WJunHong"},"content":"}","lastModifiedDate":"2022-03-23"}],"authorContributionMap":{"WJunHong":77}},{"path":"src/main/java/seedu/address/storage/JsonSellerAddressBookStorage.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"Jacky142857"},"content":"package seedu.address.storage;","lastModifiedDate":"2022-03-19"},{"lineNumber":2,"author":{"gitId":"Jacky142857"},"content":"","lastModifiedDate":"2022-03-19"},{"lineNumber":3,"author":{"gitId":"Jacky142857"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2022-03-19"},{"lineNumber":4,"author":{"gitId":"Jacky142857"},"content":"","lastModifiedDate":"2022-03-19"},{"lineNumber":5,"author":{"gitId":"Jacky142857"},"content":"import java.io.IOException;","lastModifiedDate":"2022-03-19"},{"lineNumber":6,"author":{"gitId":"Jacky142857"},"content":"import java.nio.file.Path;","lastModifiedDate":"2022-03-19"},{"lineNumber":7,"author":{"gitId":"Jacky142857"},"content":"import java.util.Optional;","lastModifiedDate":"2022-03-19"},{"lineNumber":8,"author":{"gitId":"Jacky142857"},"content":"import java.util.logging.Logger;","lastModifiedDate":"2022-03-19"},{"lineNumber":9,"author":{"gitId":"Jacky142857"},"content":"","lastModifiedDate":"2022-03-19"},{"lineNumber":10,"author":{"gitId":"Jacky142857"},"content":"import seedu.address.commons.core.LogsCenter;","lastModifiedDate":"2022-03-19"},{"lineNumber":11,"author":{"gitId":"Jacky142857"},"content":"import seedu.address.commons.exceptions.DataConversionException;","lastModifiedDate":"2022-03-19"},{"lineNumber":12,"author":{"gitId":"Jacky142857"},"content":"import seedu.address.commons.exceptions.IllegalValueException;","lastModifiedDate":"2022-03-19"},{"lineNumber":13,"author":{"gitId":"Jacky142857"},"content":"import seedu.address.commons.util.FileUtil;","lastModifiedDate":"2022-03-19"},{"lineNumber":14,"author":{"gitId":"Jacky142857"},"content":"import seedu.address.commons.util.JsonUtil;","lastModifiedDate":"2022-03-19"},{"lineNumber":15,"author":{"gitId":"Jacky142857"},"content":"import seedu.address.model.ReadOnlySellerAddressBook;","lastModifiedDate":"2022-03-19"},{"lineNumber":16,"author":{"gitId":"Jacky142857"},"content":"","lastModifiedDate":"2022-03-19"},{"lineNumber":17,"author":{"gitId":"Jacky142857"},"content":"/**","lastModifiedDate":"2022-03-19"},{"lineNumber":18,"author":{"gitId":"Jacky142857"},"content":" * A class to access AddressBook data stored as a json file on the hard disk.","lastModifiedDate":"2022-03-19"},{"lineNumber":19,"author":{"gitId":"Jacky142857"},"content":" */","lastModifiedDate":"2022-03-19"},{"lineNumber":20,"author":{"gitId":"Jacky142857"},"content":"public class JsonSellerAddressBookStorage implements SellerAddressBookStorage {","lastModifiedDate":"2022-03-19"},{"lineNumber":21,"author":{"gitId":"Jacky142857"},"content":"","lastModifiedDate":"2022-03-19"},{"lineNumber":22,"author":{"gitId":"Jacky142857"},"content":"    private static final Logger logger \u003d LogsCenter.getLogger(JsonSellerAddressBookStorage.class);","lastModifiedDate":"2022-03-19"},{"lineNumber":23,"author":{"gitId":"Jacky142857"},"content":"","lastModifiedDate":"2022-03-19"},{"lineNumber":24,"author":{"gitId":"Jacky142857"},"content":"    private Path filePath;","lastModifiedDate":"2022-03-19"},{"lineNumber":25,"author":{"gitId":"Jacky142857"},"content":"","lastModifiedDate":"2022-03-19"},{"lineNumber":26,"author":{"gitId":"Jacky142857"},"content":"    public JsonSellerAddressBookStorage(Path filePath) {","lastModifiedDate":"2022-03-19"},{"lineNumber":27,"author":{"gitId":"Jacky142857"},"content":"        this.filePath \u003d filePath;","lastModifiedDate":"2022-03-19"},{"lineNumber":28,"author":{"gitId":"Jacky142857"},"content":"    }","lastModifiedDate":"2022-03-19"},{"lineNumber":29,"author":{"gitId":"Jacky142857"},"content":"","lastModifiedDate":"2022-03-19"},{"lineNumber":30,"author":{"gitId":"Jacky142857"},"content":"    public Path getSellerAddressBookFilePath() {","lastModifiedDate":"2022-03-19"},{"lineNumber":31,"author":{"gitId":"Jacky142857"},"content":"        return filePath;","lastModifiedDate":"2022-03-19"},{"lineNumber":32,"author":{"gitId":"Jacky142857"},"content":"    }","lastModifiedDate":"2022-03-19"},{"lineNumber":33,"author":{"gitId":"Jacky142857"},"content":"","lastModifiedDate":"2022-03-19"},{"lineNumber":34,"author":{"gitId":"Jacky142857"},"content":"    @Override","lastModifiedDate":"2022-03-19"},{"lineNumber":35,"author":{"gitId":"Jacky142857"},"content":"    public Optional\u003cReadOnlySellerAddressBook\u003e readSellerAddressBook() throws DataConversionException {","lastModifiedDate":"2022-03-19"},{"lineNumber":36,"author":{"gitId":"Jacky142857"},"content":"        return readSellerAddressBook(filePath);","lastModifiedDate":"2022-03-19"},{"lineNumber":37,"author":{"gitId":"Jacky142857"},"content":"    }","lastModifiedDate":"2022-03-19"},{"lineNumber":38,"author":{"gitId":"Jacky142857"},"content":"","lastModifiedDate":"2022-03-19"},{"lineNumber":39,"author":{"gitId":"Jacky142857"},"content":"    /**","lastModifiedDate":"2022-03-19"},{"lineNumber":40,"author":{"gitId":"Jacky142857"},"content":"     * Similar to {@link #readSellerAddressBook()}.","lastModifiedDate":"2022-03-19"},{"lineNumber":41,"author":{"gitId":"Jacky142857"},"content":"     *","lastModifiedDate":"2022-03-19"},{"lineNumber":42,"author":{"gitId":"Jacky142857"},"content":"     * @param filePath location of the data. Cannot be null.","lastModifiedDate":"2022-03-19"},{"lineNumber":43,"author":{"gitId":"Jacky142857"},"content":"     * @throws DataConversionException if the file is not in the correct format.","lastModifiedDate":"2022-03-19"},{"lineNumber":44,"author":{"gitId":"Jacky142857"},"content":"     */","lastModifiedDate":"2022-03-19"},{"lineNumber":45,"author":{"gitId":"Jacky142857"},"content":"    public Optional\u003cReadOnlySellerAddressBook\u003e readSellerAddressBook(Path filePath) throws DataConversionException {","lastModifiedDate":"2022-03-19"},{"lineNumber":46,"author":{"gitId":"Jacky142857"},"content":"        requireNonNull(filePath);","lastModifiedDate":"2022-03-19"},{"lineNumber":47,"author":{"gitId":"Jacky142857"},"content":"","lastModifiedDate":"2022-03-19"},{"lineNumber":48,"author":{"gitId":"Jacky142857"},"content":"        Optional\u003cJsonSerializableSellerAddressBook\u003e jsonSellerAddressBook \u003d JsonUtil.readJsonFile(","lastModifiedDate":"2022-03-19"},{"lineNumber":49,"author":{"gitId":"Jacky142857"},"content":"                filePath, JsonSerializableSellerAddressBook.class);","lastModifiedDate":"2022-03-19"},{"lineNumber":50,"author":{"gitId":"Jacky142857"},"content":"        if (!jsonSellerAddressBook.isPresent()) {","lastModifiedDate":"2022-03-19"},{"lineNumber":51,"author":{"gitId":"Jacky142857"},"content":"            return Optional.empty();","lastModifiedDate":"2022-03-19"},{"lineNumber":52,"author":{"gitId":"Jacky142857"},"content":"        }","lastModifiedDate":"2022-03-19"},{"lineNumber":53,"author":{"gitId":"Jacky142857"},"content":"","lastModifiedDate":"2022-03-19"},{"lineNumber":54,"author":{"gitId":"Jacky142857"},"content":"        try {","lastModifiedDate":"2022-03-19"},{"lineNumber":55,"author":{"gitId":"Jacky142857"},"content":"            return Optional.of(jsonSellerAddressBook.get().toModelType());","lastModifiedDate":"2022-03-19"},{"lineNumber":56,"author":{"gitId":"Jacky142857"},"content":"        } catch (IllegalValueException ive) {","lastModifiedDate":"2022-03-19"},{"lineNumber":57,"author":{"gitId":"Jacky142857"},"content":"            logger.info(\"Illegal values found in \" + filePath + \": \" + ive.getMessage());","lastModifiedDate":"2022-03-19"},{"lineNumber":58,"author":{"gitId":"Jacky142857"},"content":"            throw new DataConversionException(ive);","lastModifiedDate":"2022-03-19"},{"lineNumber":59,"author":{"gitId":"Jacky142857"},"content":"        }","lastModifiedDate":"2022-03-19"},{"lineNumber":60,"author":{"gitId":"Jacky142857"},"content":"    }","lastModifiedDate":"2022-03-19"},{"lineNumber":61,"author":{"gitId":"Jacky142857"},"content":"","lastModifiedDate":"2022-03-19"},{"lineNumber":62,"author":{"gitId":"Jacky142857"},"content":"    @Override","lastModifiedDate":"2022-03-19"},{"lineNumber":63,"author":{"gitId":"Jacky142857"},"content":"    public void saveSellerAddressBook(ReadOnlySellerAddressBook addressBook) throws IOException {","lastModifiedDate":"2022-03-19"},{"lineNumber":64,"author":{"gitId":"Jacky142857"},"content":"        saveSellerAddressBook(addressBook, filePath);","lastModifiedDate":"2022-03-19"},{"lineNumber":65,"author":{"gitId":"Jacky142857"},"content":"    }","lastModifiedDate":"2022-03-19"},{"lineNumber":66,"author":{"gitId":"Jacky142857"},"content":"","lastModifiedDate":"2022-03-19"},{"lineNumber":67,"author":{"gitId":"Jacky142857"},"content":"    /**","lastModifiedDate":"2022-03-19"},{"lineNumber":68,"author":{"gitId":"Jacky142857"},"content":"     * Similar to {@link #saveSellerAddressBook(ReadOnlySellerAddressBook)}.","lastModifiedDate":"2022-03-19"},{"lineNumber":69,"author":{"gitId":"Jacky142857"},"content":"     *","lastModifiedDate":"2022-03-19"},{"lineNumber":70,"author":{"gitId":"Jacky142857"},"content":"     * @param filePath location of the data. Cannot be null.","lastModifiedDate":"2022-03-19"},{"lineNumber":71,"author":{"gitId":"Jacky142857"},"content":"     */","lastModifiedDate":"2022-03-19"},{"lineNumber":72,"author":{"gitId":"Jacky142857"},"content":"    public void saveSellerAddressBook(ReadOnlySellerAddressBook sellerAddressBook, Path filePath) throws IOException {","lastModifiedDate":"2022-03-19"},{"lineNumber":73,"author":{"gitId":"Jacky142857"},"content":"        requireNonNull(sellerAddressBook);","lastModifiedDate":"2022-03-19"},{"lineNumber":74,"author":{"gitId":"Jacky142857"},"content":"        requireNonNull(filePath);","lastModifiedDate":"2022-03-19"},{"lineNumber":75,"author":{"gitId":"Jacky142857"},"content":"","lastModifiedDate":"2022-03-19"},{"lineNumber":76,"author":{"gitId":"Jacky142857"},"content":"        FileUtil.createIfMissing(filePath);","lastModifiedDate":"2022-03-19"},{"lineNumber":77,"author":{"gitId":"Jacky142857"},"content":"        JsonUtil.saveJsonFile(new JsonSerializableSellerAddressBook(sellerAddressBook), filePath);","lastModifiedDate":"2022-03-19"},{"lineNumber":78,"author":{"gitId":"Jacky142857"},"content":"    }","lastModifiedDate":"2022-03-19"},{"lineNumber":79,"author":{"gitId":"Jacky142857"},"content":"","lastModifiedDate":"2022-03-19"},{"lineNumber":80,"author":{"gitId":"Jacky142857"},"content":"}","lastModifiedDate":"2022-03-19"}],"authorContributionMap":{"Jacky142857":80}},{"path":"src/main/java/seedu/address/storage/JsonSerializableAddressBook.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.storage;","lastModifiedDate":"2018-08-13"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.util.ArrayList;","lastModifiedDate":"2018-08-13"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import java.util.List;","lastModifiedDate":"2018-08-13"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.util.stream.Collectors;","lastModifiedDate":"2018-08-13"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import com.fasterxml.jackson.annotation.JsonCreator;","lastModifiedDate":"2018-08-13"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import com.fasterxml.jackson.annotation.JsonProperty;","lastModifiedDate":"2018-08-13"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import com.fasterxml.jackson.annotation.JsonRootName;","lastModifiedDate":"2018-08-13"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import seedu.address.commons.exceptions.IllegalValueException;","lastModifiedDate":"2018-08-13"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import seedu.address.model.AddressBook;","lastModifiedDate":"2018-08-13"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import seedu.address.model.ReadOnlyAddressBook;","lastModifiedDate":"2018-08-13"},{"lineNumber":14,"author":{"gitId":"cwnm"},"content":"import seedu.address.model.client.Client;","lastModifiedDate":"2022-03-04"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":16,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2018-08-13"},{"lineNumber":17,"author":{"gitId":"-"},"content":" * An Immutable AddressBook that is serializable to JSON format.","lastModifiedDate":"2018-08-13"},{"lineNumber":18,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2018-08-13"},{"lineNumber":19,"author":{"gitId":"-"},"content":"@JsonRootName(value \u003d \"addressbook\")","lastModifiedDate":"2018-08-13"},{"lineNumber":20,"author":{"gitId":"-"},"content":"class JsonSerializableAddressBook {","lastModifiedDate":"2018-12-03"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":22,"author":{"gitId":"cwnm"},"content":"    public static final String MESSAGE_DUPLICATE_CLIENT \u003d \"clients list contains duplicate client(s).\";","lastModifiedDate":"2022-03-04"},{"lineNumber":23,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":24,"author":{"gitId":"cwnm"},"content":"    private final List\u003cJsonAdaptedClient\u003e clients \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2022-03-04"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-08-13"},{"lineNumber":27,"author":{"gitId":"cwnm"},"content":"     * Constructs a {@code JsonSerializableAddressBook} with the given clients.","lastModifiedDate":"2022-03-04"},{"lineNumber":28,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-08-13"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    @JsonCreator","lastModifiedDate":"2018-08-13"},{"lineNumber":30,"author":{"gitId":"cwnm"},"content":"    public JsonSerializableAddressBook(@JsonProperty(\"clients\") List\u003cJsonAdaptedClient\u003e clients) {","lastModifiedDate":"2022-03-04"},{"lineNumber":31,"author":{"gitId":"cwnm"},"content":"        this.clients.addAll(clients);","lastModifiedDate":"2022-03-04"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-08-13"},{"lineNumber":35,"author":{"gitId":"-"},"content":"     * Converts a given {@code ReadOnlyAddressBook} into this class for Jackson use.","lastModifiedDate":"2018-08-13"},{"lineNumber":36,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2018-08-13"},{"lineNumber":37,"author":{"gitId":"-"},"content":"     * @param source future changes to this will not affect the created {@code JsonSerializableAddressBook}.","lastModifiedDate":"2018-08-13"},{"lineNumber":38,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-08-13"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    public JsonSerializableAddressBook(ReadOnlyAddressBook source) {","lastModifiedDate":"2018-08-13"},{"lineNumber":40,"author":{"gitId":"cwnm"},"content":"        clients.addAll(source.getclientList().stream().map(JsonAdaptedClient::new).collect(Collectors.toList()));","lastModifiedDate":"2022-03-04"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":42,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-08-13"},{"lineNumber":44,"author":{"gitId":"-"},"content":"     * Converts this address book into the model\u0027s {@code AddressBook} object.","lastModifiedDate":"2018-08-13"},{"lineNumber":45,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2018-08-13"},{"lineNumber":46,"author":{"gitId":"-"},"content":"     * @throws IllegalValueException if there were any data constraints violated.","lastModifiedDate":"2018-08-13"},{"lineNumber":47,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-08-13"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    public AddressBook toModelType() throws IllegalValueException {","lastModifiedDate":"2018-08-13"},{"lineNumber":49,"author":{"gitId":"-"},"content":"        AddressBook addressBook \u003d new AddressBook();","lastModifiedDate":"2018-08-13"},{"lineNumber":50,"author":{"gitId":"cwnm"},"content":"        for (JsonAdaptedClient jsonAdaptedclient : clients) {","lastModifiedDate":"2022-03-04"},{"lineNumber":51,"author":{"gitId":"cwnm"},"content":"            Client client \u003d jsonAdaptedclient.toModelType();","lastModifiedDate":"2022-03-04"},{"lineNumber":52,"author":{"gitId":"cwnm"},"content":"            if (addressBook.hasclient(client)) {","lastModifiedDate":"2022-03-04"},{"lineNumber":53,"author":{"gitId":"cwnm"},"content":"                throw new IllegalValueException(MESSAGE_DUPLICATE_CLIENT);","lastModifiedDate":"2022-03-04"},{"lineNumber":54,"author":{"gitId":"-"},"content":"            }","lastModifiedDate":"2018-08-13"},{"lineNumber":55,"author":{"gitId":"cwnm"},"content":"            addressBook.addclient(client);","lastModifiedDate":"2022-03-04"},{"lineNumber":56,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-08-13"},{"lineNumber":57,"author":{"gitId":"-"},"content":"        return addressBook;","lastModifiedDate":"2018-08-13"},{"lineNumber":58,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":59,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":60,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2018-08-13"}],"authorContributionMap":{"-":48,"cwnm":12}},{"path":"src/main/java/seedu/address/storage/JsonSerializableBuyerAddressBook.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"WJunHong"},"content":"package seedu.address.storage;","lastModifiedDate":"2022-03-23"},{"lineNumber":2,"author":{"gitId":"WJunHong"},"content":"","lastModifiedDate":"2022-03-23"},{"lineNumber":3,"author":{"gitId":"WJunHong"},"content":"import java.util.ArrayList;","lastModifiedDate":"2022-03-23"},{"lineNumber":4,"author":{"gitId":"WJunHong"},"content":"import java.util.List;","lastModifiedDate":"2022-03-23"},{"lineNumber":5,"author":{"gitId":"WJunHong"},"content":"import java.util.stream.Collectors;","lastModifiedDate":"2022-03-23"},{"lineNumber":6,"author":{"gitId":"WJunHong"},"content":"","lastModifiedDate":"2022-03-23"},{"lineNumber":7,"author":{"gitId":"WJunHong"},"content":"import com.fasterxml.jackson.annotation.JsonCreator;","lastModifiedDate":"2022-03-23"},{"lineNumber":8,"author":{"gitId":"WJunHong"},"content":"import com.fasterxml.jackson.annotation.JsonProperty;","lastModifiedDate":"2022-03-23"},{"lineNumber":9,"author":{"gitId":"WJunHong"},"content":"import com.fasterxml.jackson.annotation.JsonRootName;","lastModifiedDate":"2022-03-23"},{"lineNumber":10,"author":{"gitId":"WJunHong"},"content":"","lastModifiedDate":"2022-03-23"},{"lineNumber":11,"author":{"gitId":"WJunHong"},"content":"import seedu.address.commons.exceptions.IllegalValueException;","lastModifiedDate":"2022-03-23"},{"lineNumber":12,"author":{"gitId":"WJunHong"},"content":"import seedu.address.model.BuyerAddressBook;","lastModifiedDate":"2022-03-23"},{"lineNumber":13,"author":{"gitId":"WJunHong"},"content":"import seedu.address.model.ReadOnlyBuyerAddressBook;","lastModifiedDate":"2022-03-23"},{"lineNumber":14,"author":{"gitId":"WJunHong"},"content":"import seedu.address.model.buyer.Buyer;","lastModifiedDate":"2022-03-23"},{"lineNumber":15,"author":{"gitId":"WJunHong"},"content":"","lastModifiedDate":"2022-03-23"},{"lineNumber":16,"author":{"gitId":"WJunHong"},"content":"/**","lastModifiedDate":"2022-03-23"},{"lineNumber":17,"author":{"gitId":"WJunHong"},"content":" * An Immutable AddressBook that is serializable to JSON format.","lastModifiedDate":"2022-03-23"},{"lineNumber":18,"author":{"gitId":"WJunHong"},"content":" */","lastModifiedDate":"2022-03-23"},{"lineNumber":19,"author":{"gitId":"WJunHong"},"content":"@JsonRootName(value \u003d \"buyerAddressbook\")","lastModifiedDate":"2022-03-23"},{"lineNumber":20,"author":{"gitId":"WJunHong"},"content":"public class JsonSerializableBuyerAddressBook {","lastModifiedDate":"2022-03-23"},{"lineNumber":21,"author":{"gitId":"WJunHong"},"content":"","lastModifiedDate":"2022-03-23"},{"lineNumber":22,"author":{"gitId":"WJunHong"},"content":"    public static final String MESSAGE_DUPLICATE_BUYER \u003d \"buyer list contains duplicate buyer(s).\";","lastModifiedDate":"2022-03-23"},{"lineNumber":23,"author":{"gitId":"WJunHong"},"content":"","lastModifiedDate":"2022-03-23"},{"lineNumber":24,"author":{"gitId":"WJunHong"},"content":"    private final List\u003cJsonAdaptedBuyer\u003e buyers \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2022-03-23"},{"lineNumber":25,"author":{"gitId":"WJunHong"},"content":"","lastModifiedDate":"2022-03-23"},{"lineNumber":26,"author":{"gitId":"WJunHong"},"content":"    /**","lastModifiedDate":"2022-03-23"},{"lineNumber":27,"author":{"gitId":"WJunHong"},"content":"     * Constructs a {@code JsonSerializableAddressBook} with the given clients.","lastModifiedDate":"2022-03-23"},{"lineNumber":28,"author":{"gitId":"WJunHong"},"content":"     */","lastModifiedDate":"2022-03-23"},{"lineNumber":29,"author":{"gitId":"WJunHong"},"content":"    @JsonCreator","lastModifiedDate":"2022-03-23"},{"lineNumber":30,"author":{"gitId":"WJunHong"},"content":"    public JsonSerializableBuyerAddressBook(@JsonProperty(\"buyers\") List\u003cJsonAdaptedBuyer\u003e buyers) {","lastModifiedDate":"2022-03-23"},{"lineNumber":31,"author":{"gitId":"WJunHong"},"content":"        this.buyers.addAll(buyers);","lastModifiedDate":"2022-03-23"},{"lineNumber":32,"author":{"gitId":"WJunHong"},"content":"    }","lastModifiedDate":"2022-03-23"},{"lineNumber":33,"author":{"gitId":"WJunHong"},"content":"","lastModifiedDate":"2022-03-23"},{"lineNumber":34,"author":{"gitId":"WJunHong"},"content":"    /**","lastModifiedDate":"2022-03-23"},{"lineNumber":35,"author":{"gitId":"WJunHong"},"content":"     * Converts a given {@code ReadOnlyAddressBook} into this class for Jackson use.","lastModifiedDate":"2022-03-23"},{"lineNumber":36,"author":{"gitId":"WJunHong"},"content":"     *","lastModifiedDate":"2022-03-23"},{"lineNumber":37,"author":{"gitId":"WJunHong"},"content":"     * @param source future changes to this will not affect the created {@code JsonSerializableBuyerAddressBook}.","lastModifiedDate":"2022-03-23"},{"lineNumber":38,"author":{"gitId":"WJunHong"},"content":"     */","lastModifiedDate":"2022-03-23"},{"lineNumber":39,"author":{"gitId":"WJunHong"},"content":"    public JsonSerializableBuyerAddressBook(ReadOnlyBuyerAddressBook source) {","lastModifiedDate":"2022-03-23"},{"lineNumber":40,"author":{"gitId":"WJunHong"},"content":"        buyers.addAll(source.getBuyerList().stream().map(JsonAdaptedBuyer::new).collect(Collectors.toList()));","lastModifiedDate":"2022-03-23"},{"lineNumber":41,"author":{"gitId":"WJunHong"},"content":"    }","lastModifiedDate":"2022-03-23"},{"lineNumber":42,"author":{"gitId":"WJunHong"},"content":"","lastModifiedDate":"2022-03-23"},{"lineNumber":43,"author":{"gitId":"WJunHong"},"content":"    /**","lastModifiedDate":"2022-03-23"},{"lineNumber":44,"author":{"gitId":"WJunHong"},"content":"     * Converts this address book into the model\u0027s {@code AddressBook} object.","lastModifiedDate":"2022-03-23"},{"lineNumber":45,"author":{"gitId":"WJunHong"},"content":"     *","lastModifiedDate":"2022-03-23"},{"lineNumber":46,"author":{"gitId":"WJunHong"},"content":"     * @throws IllegalValueException if there were any data constraints violated.","lastModifiedDate":"2022-03-23"},{"lineNumber":47,"author":{"gitId":"WJunHong"},"content":"     */","lastModifiedDate":"2022-03-23"},{"lineNumber":48,"author":{"gitId":"WJunHong"},"content":"    public BuyerAddressBook toModelType() throws IllegalValueException {","lastModifiedDate":"2022-03-23"},{"lineNumber":49,"author":{"gitId":"WJunHong"},"content":"        BuyerAddressBook addressBook \u003d new BuyerAddressBook();","lastModifiedDate":"2022-03-23"},{"lineNumber":50,"author":{"gitId":"WJunHong"},"content":"        for (JsonAdaptedBuyer jsonAdaptedBuyer : buyers) {","lastModifiedDate":"2022-03-23"},{"lineNumber":51,"author":{"gitId":"WJunHong"},"content":"            Buyer buyer \u003d jsonAdaptedBuyer.toModelType();","lastModifiedDate":"2022-03-23"},{"lineNumber":52,"author":{"gitId":"WJunHong"},"content":"            if (addressBook.hasBuyer(buyer)) {","lastModifiedDate":"2022-03-23"},{"lineNumber":53,"author":{"gitId":"WJunHong"},"content":"                throw new IllegalValueException(MESSAGE_DUPLICATE_BUYER);","lastModifiedDate":"2022-03-23"},{"lineNumber":54,"author":{"gitId":"WJunHong"},"content":"            }","lastModifiedDate":"2022-03-23"},{"lineNumber":55,"author":{"gitId":"WJunHong"},"content":"            addressBook.addBuyer(buyer);","lastModifiedDate":"2022-03-23"},{"lineNumber":56,"author":{"gitId":"WJunHong"},"content":"        }","lastModifiedDate":"2022-03-23"},{"lineNumber":57,"author":{"gitId":"WJunHong"},"content":"        return addressBook;","lastModifiedDate":"2022-03-23"},{"lineNumber":58,"author":{"gitId":"WJunHong"},"content":"    }","lastModifiedDate":"2022-03-23"},{"lineNumber":59,"author":{"gitId":"WJunHong"},"content":"","lastModifiedDate":"2022-03-23"},{"lineNumber":60,"author":{"gitId":"WJunHong"},"content":"}","lastModifiedDate":"2022-03-23"}],"authorContributionMap":{"WJunHong":60}},{"path":"src/main/java/seedu/address/storage/JsonSerializableSellerAddressBook.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"Jacky142857"},"content":"package seedu.address.storage;","lastModifiedDate":"2022-03-19"},{"lineNumber":2,"author":{"gitId":"Jacky142857"},"content":"","lastModifiedDate":"2022-03-19"},{"lineNumber":3,"author":{"gitId":"Jacky142857"},"content":"import java.util.ArrayList;","lastModifiedDate":"2022-03-19"},{"lineNumber":4,"author":{"gitId":"Jacky142857"},"content":"import java.util.List;","lastModifiedDate":"2022-03-19"},{"lineNumber":5,"author":{"gitId":"Jacky142857"},"content":"import java.util.stream.Collectors;","lastModifiedDate":"2022-03-19"},{"lineNumber":6,"author":{"gitId":"Jacky142857"},"content":"","lastModifiedDate":"2022-03-19"},{"lineNumber":7,"author":{"gitId":"Jacky142857"},"content":"import com.fasterxml.jackson.annotation.JsonCreator;","lastModifiedDate":"2022-03-19"},{"lineNumber":8,"author":{"gitId":"Jacky142857"},"content":"import com.fasterxml.jackson.annotation.JsonProperty;","lastModifiedDate":"2022-03-19"},{"lineNumber":9,"author":{"gitId":"Jacky142857"},"content":"import com.fasterxml.jackson.annotation.JsonRootName;","lastModifiedDate":"2022-03-19"},{"lineNumber":10,"author":{"gitId":"Jacky142857"},"content":"","lastModifiedDate":"2022-03-19"},{"lineNumber":11,"author":{"gitId":"Jacky142857"},"content":"import seedu.address.commons.exceptions.IllegalValueException;","lastModifiedDate":"2022-03-19"},{"lineNumber":12,"author":{"gitId":"Jacky142857"},"content":"import seedu.address.model.ReadOnlySellerAddressBook;","lastModifiedDate":"2022-03-19"},{"lineNumber":13,"author":{"gitId":"Jacky142857"},"content":"import seedu.address.model.SellerAddressBook;","lastModifiedDate":"2022-03-19"},{"lineNumber":14,"author":{"gitId":"Jacky142857"},"content":"import seedu.address.model.seller.Seller;","lastModifiedDate":"2022-03-19"},{"lineNumber":15,"author":{"gitId":"Jacky142857"},"content":"","lastModifiedDate":"2022-03-19"},{"lineNumber":16,"author":{"gitId":"Jacky142857"},"content":"/**","lastModifiedDate":"2022-03-19"},{"lineNumber":17,"author":{"gitId":"Jacky142857"},"content":" * An Immutable AddressBook that is serializable to JSON format.","lastModifiedDate":"2022-03-19"},{"lineNumber":18,"author":{"gitId":"Jacky142857"},"content":" */","lastModifiedDate":"2022-03-19"},{"lineNumber":19,"author":{"gitId":"Jacky142857"},"content":"@JsonRootName(value \u003d \"sellerAddressbook\")","lastModifiedDate":"2022-03-19"},{"lineNumber":20,"author":{"gitId":"Jacky142857"},"content":"class JsonSerializableSellerAddressBook {","lastModifiedDate":"2022-03-19"},{"lineNumber":21,"author":{"gitId":"Jacky142857"},"content":"","lastModifiedDate":"2022-03-19"},{"lineNumber":22,"author":{"gitId":"Jacky142857"},"content":"    public static final String MESSAGE_DUPLICATE_SELLER \u003d \"seller list contains duplicate seller(s).\";","lastModifiedDate":"2022-03-19"},{"lineNumber":23,"author":{"gitId":"Jacky142857"},"content":"","lastModifiedDate":"2022-03-19"},{"lineNumber":24,"author":{"gitId":"Jacky142857"},"content":"    private final List\u003cJsonAdaptedSeller\u003e sellers \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2022-03-19"},{"lineNumber":25,"author":{"gitId":"Jacky142857"},"content":"","lastModifiedDate":"2022-03-19"},{"lineNumber":26,"author":{"gitId":"Jacky142857"},"content":"    /**","lastModifiedDate":"2022-03-19"},{"lineNumber":27,"author":{"gitId":"chuashihong"},"content":"     * Constructs a {@code JsonSerializableAddressBook} with the given sellers.","lastModifiedDate":"2022-03-26"},{"lineNumber":28,"author":{"gitId":"Jacky142857"},"content":"     */","lastModifiedDate":"2022-03-19"},{"lineNumber":29,"author":{"gitId":"Jacky142857"},"content":"    @JsonCreator","lastModifiedDate":"2022-03-19"},{"lineNumber":30,"author":{"gitId":"Jacky142857"},"content":"    public JsonSerializableSellerAddressBook(@JsonProperty(\"sellers\") List\u003cJsonAdaptedSeller\u003e sellers) {","lastModifiedDate":"2022-03-19"},{"lineNumber":31,"author":{"gitId":"Jacky142857"},"content":"        this.sellers.addAll(sellers);","lastModifiedDate":"2022-03-19"},{"lineNumber":32,"author":{"gitId":"Jacky142857"},"content":"    }","lastModifiedDate":"2022-03-19"},{"lineNumber":33,"author":{"gitId":"Jacky142857"},"content":"","lastModifiedDate":"2022-03-19"},{"lineNumber":34,"author":{"gitId":"Jacky142857"},"content":"    /**","lastModifiedDate":"2022-03-19"},{"lineNumber":35,"author":{"gitId":"Jacky142857"},"content":"     * Converts a given {@code ReadOnlyAddressBook} into this class for Jackson use.","lastModifiedDate":"2022-03-19"},{"lineNumber":36,"author":{"gitId":"Jacky142857"},"content":"     *","lastModifiedDate":"2022-03-19"},{"lineNumber":37,"author":{"gitId":"Jacky142857"},"content":"     * @param source future changes to this will not affect the created {@code JsonSerializableSellerAddressBook}.","lastModifiedDate":"2022-03-19"},{"lineNumber":38,"author":{"gitId":"Jacky142857"},"content":"     */","lastModifiedDate":"2022-03-19"},{"lineNumber":39,"author":{"gitId":"Jacky142857"},"content":"    public JsonSerializableSellerAddressBook(ReadOnlySellerAddressBook source) {","lastModifiedDate":"2022-03-19"},{"lineNumber":40,"author":{"gitId":"Jacky142857"},"content":"        sellers.addAll(source.getSellerList().stream().map(JsonAdaptedSeller::new).collect(Collectors.toList()));","lastModifiedDate":"2022-03-19"},{"lineNumber":41,"author":{"gitId":"Jacky142857"},"content":"    }","lastModifiedDate":"2022-03-19"},{"lineNumber":42,"author":{"gitId":"Jacky142857"},"content":"","lastModifiedDate":"2022-03-19"},{"lineNumber":43,"author":{"gitId":"Jacky142857"},"content":"    /**","lastModifiedDate":"2022-03-19"},{"lineNumber":44,"author":{"gitId":"Jacky142857"},"content":"     * Converts this address book into the model\u0027s {@code AddressBook} object.","lastModifiedDate":"2022-03-19"},{"lineNumber":45,"author":{"gitId":"Jacky142857"},"content":"     *","lastModifiedDate":"2022-03-19"},{"lineNumber":46,"author":{"gitId":"Jacky142857"},"content":"     * @throws IllegalValueException if there were any data constraints violated.","lastModifiedDate":"2022-03-19"},{"lineNumber":47,"author":{"gitId":"Jacky142857"},"content":"     */","lastModifiedDate":"2022-03-19"},{"lineNumber":48,"author":{"gitId":"Jacky142857"},"content":"    public SellerAddressBook toModelType() throws IllegalValueException {","lastModifiedDate":"2022-03-19"},{"lineNumber":49,"author":{"gitId":"Jacky142857"},"content":"        SellerAddressBook addressBook \u003d new SellerAddressBook();","lastModifiedDate":"2022-03-19"},{"lineNumber":50,"author":{"gitId":"Jacky142857"},"content":"        for (JsonAdaptedSeller jsonAdaptedSeller : sellers) {","lastModifiedDate":"2022-03-19"},{"lineNumber":51,"author":{"gitId":"Jacky142857"},"content":"            Seller seller \u003d jsonAdaptedSeller.toModelType();","lastModifiedDate":"2022-03-19"},{"lineNumber":52,"author":{"gitId":"Jacky142857"},"content":"            if (addressBook.hasSeller(seller)) {","lastModifiedDate":"2022-03-19"},{"lineNumber":53,"author":{"gitId":"Jacky142857"},"content":"                throw new IllegalValueException(MESSAGE_DUPLICATE_SELLER);","lastModifiedDate":"2022-03-19"},{"lineNumber":54,"author":{"gitId":"Jacky142857"},"content":"            }","lastModifiedDate":"2022-03-19"},{"lineNumber":55,"author":{"gitId":"Jacky142857"},"content":"            addressBook.addSeller(seller);","lastModifiedDate":"2022-03-19"},{"lineNumber":56,"author":{"gitId":"Jacky142857"},"content":"        }","lastModifiedDate":"2022-03-19"},{"lineNumber":57,"author":{"gitId":"Jacky142857"},"content":"        return addressBook;","lastModifiedDate":"2022-03-19"},{"lineNumber":58,"author":{"gitId":"Jacky142857"},"content":"    }","lastModifiedDate":"2022-03-19"},{"lineNumber":59,"author":{"gitId":"Jacky142857"},"content":"","lastModifiedDate":"2022-03-19"},{"lineNumber":60,"author":{"gitId":"Jacky142857"},"content":"}","lastModifiedDate":"2022-03-19"},{"lineNumber":61,"author":{"gitId":"Jacky142857"},"content":"","lastModifiedDate":"2022-03-19"}],"authorContributionMap":{"Jacky142857":60,"chuashihong":1}},{"path":"src/main/java/seedu/address/storage/SellerAddressBookStorage.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"Jacky142857"},"content":"package seedu.address.storage;","lastModifiedDate":"2022-03-19"},{"lineNumber":2,"author":{"gitId":"Jacky142857"},"content":"","lastModifiedDate":"2022-03-19"},{"lineNumber":3,"author":{"gitId":"Jacky142857"},"content":"import java.io.IOException;","lastModifiedDate":"2022-03-19"},{"lineNumber":4,"author":{"gitId":"Jacky142857"},"content":"import java.nio.file.Path;","lastModifiedDate":"2022-03-19"},{"lineNumber":5,"author":{"gitId":"Jacky142857"},"content":"import java.util.Optional;","lastModifiedDate":"2022-03-19"},{"lineNumber":6,"author":{"gitId":"Jacky142857"},"content":"","lastModifiedDate":"2022-03-19"},{"lineNumber":7,"author":{"gitId":"Jacky142857"},"content":"import seedu.address.commons.exceptions.DataConversionException;","lastModifiedDate":"2022-03-19"},{"lineNumber":8,"author":{"gitId":"Jacky142857"},"content":"import seedu.address.model.ReadOnlySellerAddressBook;","lastModifiedDate":"2022-03-19"},{"lineNumber":9,"author":{"gitId":"Jacky142857"},"content":"","lastModifiedDate":"2022-03-19"},{"lineNumber":10,"author":{"gitId":"Jacky142857"},"content":"/**","lastModifiedDate":"2022-03-19"},{"lineNumber":11,"author":{"gitId":"Jacky142857"},"content":" * Represents a storage for {@link seedu.address.model.AddressBook}.","lastModifiedDate":"2022-03-19"},{"lineNumber":12,"author":{"gitId":"Jacky142857"},"content":" */","lastModifiedDate":"2022-03-19"},{"lineNumber":13,"author":{"gitId":"Jacky142857"},"content":"public interface SellerAddressBookStorage {","lastModifiedDate":"2022-03-19"},{"lineNumber":14,"author":{"gitId":"Jacky142857"},"content":"","lastModifiedDate":"2022-03-19"},{"lineNumber":15,"author":{"gitId":"Jacky142857"},"content":"    /**","lastModifiedDate":"2022-03-19"},{"lineNumber":16,"author":{"gitId":"Jacky142857"},"content":"     * Returns the file path of the data file.","lastModifiedDate":"2022-03-19"},{"lineNumber":17,"author":{"gitId":"Jacky142857"},"content":"     */","lastModifiedDate":"2022-03-19"},{"lineNumber":18,"author":{"gitId":"Jacky142857"},"content":"    Path getSellerAddressBookFilePath();","lastModifiedDate":"2022-03-19"},{"lineNumber":19,"author":{"gitId":"Jacky142857"},"content":"","lastModifiedDate":"2022-03-19"},{"lineNumber":20,"author":{"gitId":"Jacky142857"},"content":"    /**","lastModifiedDate":"2022-03-19"},{"lineNumber":21,"author":{"gitId":"Jacky142857"},"content":"     * Returns SellerAddressBook data as a {@link ReadOnlySellerAddressBook}.","lastModifiedDate":"2022-03-19"},{"lineNumber":22,"author":{"gitId":"Jacky142857"},"content":"     *   Returns {@code Optional.empty()} if storage file is not found.","lastModifiedDate":"2022-03-19"},{"lineNumber":23,"author":{"gitId":"Jacky142857"},"content":"     * @throws DataConversionException if the data in storage is not in the expected format.","lastModifiedDate":"2022-03-19"},{"lineNumber":24,"author":{"gitId":"Jacky142857"},"content":"     * @throws IOException if there was any problem when reading from the storage.","lastModifiedDate":"2022-03-19"},{"lineNumber":25,"author":{"gitId":"Jacky142857"},"content":"     */","lastModifiedDate":"2022-03-19"},{"lineNumber":26,"author":{"gitId":"Jacky142857"},"content":"    Optional\u003cReadOnlySellerAddressBook\u003e readSellerAddressBook() throws DataConversionException, IOException;","lastModifiedDate":"2022-03-19"},{"lineNumber":27,"author":{"gitId":"Jacky142857"},"content":"","lastModifiedDate":"2022-03-19"},{"lineNumber":28,"author":{"gitId":"Jacky142857"},"content":"    /**","lastModifiedDate":"2022-03-19"},{"lineNumber":29,"author":{"gitId":"Jacky142857"},"content":"     * @see #getSellerAddressBookFilePath()","lastModifiedDate":"2022-03-19"},{"lineNumber":30,"author":{"gitId":"Jacky142857"},"content":"     */","lastModifiedDate":"2022-03-19"},{"lineNumber":31,"author":{"gitId":"Jacky142857"},"content":"    Optional\u003cReadOnlySellerAddressBook\u003e readSellerAddressBook(Path filePath)","lastModifiedDate":"2022-03-19"},{"lineNumber":32,"author":{"gitId":"Jacky142857"},"content":"            throws DataConversionException, IOException;","lastModifiedDate":"2022-03-19"},{"lineNumber":33,"author":{"gitId":"Jacky142857"},"content":"","lastModifiedDate":"2022-03-19"},{"lineNumber":34,"author":{"gitId":"Jacky142857"},"content":"    /**","lastModifiedDate":"2022-03-19"},{"lineNumber":35,"author":{"gitId":"Jacky142857"},"content":"     * Saves the given {@link ReadOnlySellerAddressBook} to the storage.","lastModifiedDate":"2022-03-19"},{"lineNumber":36,"author":{"gitId":"Jacky142857"},"content":"     * @param addressBook cannot be null.","lastModifiedDate":"2022-03-19"},{"lineNumber":37,"author":{"gitId":"Jacky142857"},"content":"     * @throws IOException if there was any problem writing to the file.","lastModifiedDate":"2022-03-19"},{"lineNumber":38,"author":{"gitId":"Jacky142857"},"content":"     */","lastModifiedDate":"2022-03-19"},{"lineNumber":39,"author":{"gitId":"Jacky142857"},"content":"    void saveSellerAddressBook(ReadOnlySellerAddressBook addressBook) throws IOException;","lastModifiedDate":"2022-03-19"},{"lineNumber":40,"author":{"gitId":"Jacky142857"},"content":"","lastModifiedDate":"2022-03-19"},{"lineNumber":41,"author":{"gitId":"Jacky142857"},"content":"    /**","lastModifiedDate":"2022-03-19"},{"lineNumber":42,"author":{"gitId":"Jacky142857"},"content":"     * @see #saveSellerAddressBook(ReadOnlySellerAddressBook)","lastModifiedDate":"2022-03-19"},{"lineNumber":43,"author":{"gitId":"Jacky142857"},"content":"     */","lastModifiedDate":"2022-03-19"},{"lineNumber":44,"author":{"gitId":"Jacky142857"},"content":"    void saveSellerAddressBook(ReadOnlySellerAddressBook addressBook, Path filePath) throws IOException;","lastModifiedDate":"2022-03-19"},{"lineNumber":45,"author":{"gitId":"Jacky142857"},"content":"","lastModifiedDate":"2022-03-19"},{"lineNumber":46,"author":{"gitId":"Jacky142857"},"content":"}","lastModifiedDate":"2022-03-19"}],"authorContributionMap":{"Jacky142857":46}},{"path":"src/main/java/seedu/address/storage/Storage.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.storage;","lastModifiedDate":"2016-09-25"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.io.IOException;","lastModifiedDate":"2017-01-19"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-04-21"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.util.Optional;","lastModifiedDate":"2017-01-19"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import seedu.address.commons.exceptions.DataConversionException;","lastModifiedDate":"2016-09-25"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import seedu.address.model.ReadOnlyAddressBook;","lastModifiedDate":"2016-09-25"},{"lineNumber":9,"author":{"gitId":"WJunHong"},"content":"import seedu.address.model.ReadOnlyBuyerAddressBook;","lastModifiedDate":"2022-03-23"},{"lineNumber":10,"author":{"gitId":"Jacky142857"},"content":"import seedu.address.model.ReadOnlySellerAddressBook;","lastModifiedDate":"2022-03-19"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import seedu.address.model.ReadOnlyUserPrefs;","lastModifiedDate":"2018-11-27"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import seedu.address.model.UserPrefs;","lastModifiedDate":"2016-09-25"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":14,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-09-25"},{"lineNumber":15,"author":{"gitId":"-"},"content":" * API of the Storage component","lastModifiedDate":"2016-09-25"},{"lineNumber":16,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-09-25"},{"lineNumber":17,"author":{"gitId":"WJunHong"},"content":"public interface Storage extends AddressBookStorage, SellerAddressBookStorage,","lastModifiedDate":"2022-03-23"},{"lineNumber":18,"author":{"gitId":"WJunHong"},"content":"        BuyerAddressBookStorage, UserPrefsStorage {","lastModifiedDate":"2022-03-23"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-25"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    Optional\u003cUserPrefs\u003e readUserPrefs() throws DataConversionException, IOException;","lastModifiedDate":"2016-09-25"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-25"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    void saveUserPrefs(ReadOnlyUserPrefs userPrefs) throws IOException;","lastModifiedDate":"2018-11-27"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-25"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    Path getAddressBookFilePath();","lastModifiedDate":"2018-04-21"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-25"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    Optional\u003cReadOnlyAddressBook\u003e readAddressBook() throws DataConversionException, IOException;","lastModifiedDate":"2016-10-01"},{"lineNumber":31,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-25"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    void saveAddressBook(ReadOnlyAddressBook addressBook) throws IOException;","lastModifiedDate":"2016-09-25"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-26"},{"lineNumber":35,"author":{"gitId":"Jacky142857"},"content":"    @Override","lastModifiedDate":"2022-03-19"},{"lineNumber":36,"author":{"gitId":"Jacky142857"},"content":"    Path getSellerAddressBookFilePath();","lastModifiedDate":"2022-03-19"},{"lineNumber":37,"author":{"gitId":"Jacky142857"},"content":"","lastModifiedDate":"2022-03-19"},{"lineNumber":38,"author":{"gitId":"Jacky142857"},"content":"    @Override","lastModifiedDate":"2022-03-19"},{"lineNumber":39,"author":{"gitId":"Jacky142857"},"content":"    Optional\u003cReadOnlySellerAddressBook\u003e readSellerAddressBook() throws DataConversionException, IOException;","lastModifiedDate":"2022-03-19"},{"lineNumber":40,"author":{"gitId":"Jacky142857"},"content":"","lastModifiedDate":"2022-03-19"},{"lineNumber":41,"author":{"gitId":"Jacky142857"},"content":"    @Override","lastModifiedDate":"2022-03-19"},{"lineNumber":42,"author":{"gitId":"Jacky142857"},"content":"    void saveSellerAddressBook(ReadOnlySellerAddressBook addressBook) throws IOException;","lastModifiedDate":"2022-03-19"},{"lineNumber":43,"author":{"gitId":"WJunHong"},"content":"","lastModifiedDate":"2022-03-23"},{"lineNumber":44,"author":{"gitId":"WJunHong"},"content":"    @Override","lastModifiedDate":"2022-03-23"},{"lineNumber":45,"author":{"gitId":"WJunHong"},"content":"    Path getBuyerAddressBookFilePath();","lastModifiedDate":"2022-03-23"},{"lineNumber":46,"author":{"gitId":"WJunHong"},"content":"","lastModifiedDate":"2022-03-23"},{"lineNumber":47,"author":{"gitId":"WJunHong"},"content":"    @Override","lastModifiedDate":"2022-03-23"},{"lineNumber":48,"author":{"gitId":"WJunHong"},"content":"    Optional\u003cReadOnlyBuyerAddressBook\u003e readBuyerAddressBook() throws DataConversionException, IOException;","lastModifiedDate":"2022-03-23"},{"lineNumber":49,"author":{"gitId":"WJunHong"},"content":"","lastModifiedDate":"2022-03-23"},{"lineNumber":50,"author":{"gitId":"WJunHong"},"content":"    @Override","lastModifiedDate":"2022-03-23"},{"lineNumber":51,"author":{"gitId":"WJunHong"},"content":"    void saveBuyerAddressBook(ReadOnlyBuyerAddressBook addressBook) throws IOException;","lastModifiedDate":"2022-03-23"},{"lineNumber":52,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-09-25"}],"authorContributionMap":{"WJunHong":12,"Jacky142857":9,"-":31}},{"path":"src/main/java/seedu/address/storage/StorageManager.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.storage;","lastModifiedDate":"2016-08-08"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.io.IOException;","lastModifiedDate":"2017-01-19"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-04-21"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.util.Optional;","lastModifiedDate":"2017-01-19"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.util.logging.Logger;","lastModifiedDate":"2017-01-19"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.LogsCenter;","lastModifiedDate":"2016-09-23"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import seedu.address.commons.exceptions.DataConversionException;","lastModifiedDate":"2016-09-24"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import seedu.address.model.ReadOnlyAddressBook;","lastModifiedDate":"2016-09-24"},{"lineNumber":11,"author":{"gitId":"WJunHong"},"content":"import seedu.address.model.ReadOnlyBuyerAddressBook;","lastModifiedDate":"2022-03-23"},{"lineNumber":12,"author":{"gitId":"Jacky142857"},"content":"import seedu.address.model.ReadOnlySellerAddressBook;","lastModifiedDate":"2022-03-19"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import seedu.address.model.ReadOnlyUserPrefs;","lastModifiedDate":"2018-11-27"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import seedu.address.model.UserPrefs;","lastModifiedDate":"2016-09-24"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":16,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-08"},{"lineNumber":17,"author":{"gitId":"-"},"content":" * Manages storage of AddressBook data in local storage.","lastModifiedDate":"2016-09-24"},{"lineNumber":18,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-08"},{"lineNumber":19,"author":{"gitId":"-"},"content":"public class StorageManager implements Storage {","lastModifiedDate":"2018-12-09"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    private static final Logger logger \u003d LogsCenter.getLogger(StorageManager.class);","lastModifiedDate":"2016-09-23"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    private AddressBookStorage addressBookStorage;","lastModifiedDate":"2016-10-01"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    private UserPrefsStorage userPrefsStorage;","lastModifiedDate":"2016-10-01"},{"lineNumber":24,"author":{"gitId":"Jacky142857"},"content":"    private SellerAddressBookStorage sellerAddressBookStorage;","lastModifiedDate":"2022-03-19"},{"lineNumber":25,"author":{"gitId":"WJunHong"},"content":"    private BuyerAddressBookStorage buyerAddressBookStorage;","lastModifiedDate":"2022-03-23"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2020-05-27"},{"lineNumber":28,"author":{"gitId":"-"},"content":"     * Creates a {@code StorageManager} with the given {@code AddressBookStorage} and {@code UserPrefStorage}.","lastModifiedDate":"2020-05-27"},{"lineNumber":29,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2020-05-27"},{"lineNumber":30,"author":{"gitId":"Jacky142857"},"content":"    public StorageManager(AddressBookStorage addressBookStorage,","lastModifiedDate":"2022-03-19"},{"lineNumber":31,"author":{"gitId":"WJunHong"},"content":"                          UserPrefsStorage userPrefsStorage, SellerAddressBookStorage sellerAddressBookStorage,","lastModifiedDate":"2022-03-23"},{"lineNumber":32,"author":{"gitId":"WJunHong"},"content":"                          BuyerAddressBookStorage buyerAddressBookStorage) {","lastModifiedDate":"2022-03-23"},{"lineNumber":33,"author":{"gitId":"-"},"content":"        this.addressBookStorage \u003d addressBookStorage;","lastModifiedDate":"2016-10-01"},{"lineNumber":34,"author":{"gitId":"-"},"content":"        this.userPrefsStorage \u003d userPrefsStorage;","lastModifiedDate":"2016-10-01"},{"lineNumber":35,"author":{"gitId":"Jacky142857"},"content":"        this.sellerAddressBookStorage \u003d sellerAddressBookStorage;","lastModifiedDate":"2022-03-19"},{"lineNumber":36,"author":{"gitId":"WJunHong"},"content":"        this.buyerAddressBookStorage \u003d buyerAddressBookStorage;","lastModifiedDate":"2022-03-23"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-10-01"},{"lineNumber":38,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-01"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    // \u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d UserPrefs methods \u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d","lastModifiedDate":"2016-09-24"},{"lineNumber":40,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2017-02-15"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    public Path getUserPrefsFilePath() {","lastModifiedDate":"2018-04-21"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        return userPrefsStorage.getUserPrefsFilePath();","lastModifiedDate":"2017-02-15"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-02-15"},{"lineNumber":45,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-15"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-24"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    public Optional\u003cUserPrefs\u003e readUserPrefs() throws DataConversionException, IOException {","lastModifiedDate":"2016-09-24"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        return userPrefsStorage.readUserPrefs();","lastModifiedDate":"2016-10-01"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":50,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-24"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    public void saveUserPrefs(ReadOnlyUserPrefs userPrefs) throws IOException {","lastModifiedDate":"2018-11-27"},{"lineNumber":53,"author":{"gitId":"-"},"content":"        userPrefsStorage.saveUserPrefs(userPrefs);","lastModifiedDate":"2016-10-01"},{"lineNumber":54,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":55,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":56,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    // \u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d AddressBook methods \u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d","lastModifiedDate":"2016-09-24"},{"lineNumber":58,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":59,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-24"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    public Path getAddressBookFilePath() {","lastModifiedDate":"2018-04-21"},{"lineNumber":61,"author":{"gitId":"-"},"content":"        return addressBookStorage.getAddressBookFilePath();","lastModifiedDate":"2016-09-24"},{"lineNumber":62,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":63,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":64,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-24"},{"lineNumber":65,"author":{"gitId":"-"},"content":"    public Optional\u003cReadOnlyAddressBook\u003e readAddressBook() throws DataConversionException, IOException {","lastModifiedDate":"2016-10-01"},{"lineNumber":66,"author":{"gitId":"-"},"content":"        return readAddressBook(addressBookStorage.getAddressBookFilePath());","lastModifiedDate":"2016-10-01"},{"lineNumber":67,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-10-01"},{"lineNumber":68,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":69,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-10-01"},{"lineNumber":70,"author":{"gitId":"-"},"content":"    public Optional\u003cReadOnlyAddressBook\u003e readAddressBook(Path filePath) throws DataConversionException, IOException {","lastModifiedDate":"2018-04-21"},{"lineNumber":71,"author":{"gitId":"-"},"content":"        logger.fine(\"Attempting to read data from file: \" + filePath);","lastModifiedDate":"2016-10-01"},{"lineNumber":72,"author":{"gitId":"-"},"content":"        return addressBookStorage.readAddressBook(filePath);","lastModifiedDate":"2016-10-01"},{"lineNumber":73,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":74,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":75,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-24"},{"lineNumber":76,"author":{"gitId":"-"},"content":"    public void saveAddressBook(ReadOnlyAddressBook addressBook) throws IOException {","lastModifiedDate":"2016-09-24"},{"lineNumber":77,"author":{"gitId":"-"},"content":"        saveAddressBook(addressBook, addressBookStorage.getAddressBookFilePath());","lastModifiedDate":"2016-10-01"},{"lineNumber":78,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-10-01"},{"lineNumber":79,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-01"},{"lineNumber":80,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-10-01"},{"lineNumber":81,"author":{"gitId":"-"},"content":"    public void saveAddressBook(ReadOnlyAddressBook addressBook, Path filePath) throws IOException {","lastModifiedDate":"2018-04-21"},{"lineNumber":82,"author":{"gitId":"-"},"content":"        logger.fine(\"Attempting to write to data file: \" + filePath);","lastModifiedDate":"2016-10-01"},{"lineNumber":83,"author":{"gitId":"-"},"content":"        addressBookStorage.saveAddressBook(addressBook, filePath);","lastModifiedDate":"2016-10-01"},{"lineNumber":84,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":85,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":86,"author":{"gitId":"Jacky142857"},"content":"    // \u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d SellerAddressBook methods \u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d","lastModifiedDate":"2022-03-19"},{"lineNumber":87,"author":{"gitId":"Jacky142857"},"content":"","lastModifiedDate":"2022-03-19"},{"lineNumber":88,"author":{"gitId":"Jacky142857"},"content":"    @Override","lastModifiedDate":"2022-03-19"},{"lineNumber":89,"author":{"gitId":"Jacky142857"},"content":"    public Optional\u003cReadOnlySellerAddressBook\u003e readSellerAddressBook() throws DataConversionException, IOException {","lastModifiedDate":"2022-03-19"},{"lineNumber":90,"author":{"gitId":"Jacky142857"},"content":"        return readSellerAddressBook(sellerAddressBookStorage.getSellerAddressBookFilePath());","lastModifiedDate":"2022-03-19"},{"lineNumber":91,"author":{"gitId":"Jacky142857"},"content":"    }","lastModifiedDate":"2022-03-19"},{"lineNumber":92,"author":{"gitId":"Jacky142857"},"content":"","lastModifiedDate":"2022-03-19"},{"lineNumber":93,"author":{"gitId":"Jacky142857"},"content":"    @Override","lastModifiedDate":"2022-03-19"},{"lineNumber":94,"author":{"gitId":"Jacky142857"},"content":"    public Optional\u003cReadOnlySellerAddressBook\u003e readSellerAddressBook(Path filePath)","lastModifiedDate":"2022-03-19"},{"lineNumber":95,"author":{"gitId":"Jacky142857"},"content":"            throws DataConversionException, IOException {","lastModifiedDate":"2022-03-19"},{"lineNumber":96,"author":{"gitId":"chuashihong"},"content":"        logger.fine(\"Attempting to read seller data from file: \" + filePath);","lastModifiedDate":"2022-03-25"},{"lineNumber":97,"author":{"gitId":"Jacky142857"},"content":"        return sellerAddressBookStorage.readSellerAddressBook(filePath);","lastModifiedDate":"2022-03-19"},{"lineNumber":98,"author":{"gitId":"Jacky142857"},"content":"    }","lastModifiedDate":"2022-03-19"},{"lineNumber":99,"author":{"gitId":"Jacky142857"},"content":"","lastModifiedDate":"2022-03-19"},{"lineNumber":100,"author":{"gitId":"Jacky142857"},"content":"    @Override","lastModifiedDate":"2022-03-19"},{"lineNumber":101,"author":{"gitId":"Jacky142857"},"content":"    public Path getSellerAddressBookFilePath() {","lastModifiedDate":"2022-03-19"},{"lineNumber":102,"author":{"gitId":"Jacky142857"},"content":"        return sellerAddressBookStorage.getSellerAddressBookFilePath();","lastModifiedDate":"2022-03-19"},{"lineNumber":103,"author":{"gitId":"Jacky142857"},"content":"    }","lastModifiedDate":"2022-03-19"},{"lineNumber":104,"author":{"gitId":"Jacky142857"},"content":"","lastModifiedDate":"2022-03-19"},{"lineNumber":105,"author":{"gitId":"Jacky142857"},"content":"    @Override","lastModifiedDate":"2022-03-19"},{"lineNumber":106,"author":{"gitId":"Jacky142857"},"content":"    public void saveSellerAddressBook(ReadOnlySellerAddressBook addressBook, Path filePath) throws IOException {","lastModifiedDate":"2022-03-19"},{"lineNumber":107,"author":{"gitId":"chuashihong"},"content":"        logger.fine(\"Attempting to write to seller data file: \" + filePath);","lastModifiedDate":"2022-03-25"},{"lineNumber":108,"author":{"gitId":"Jacky142857"},"content":"        sellerAddressBookStorage.saveSellerAddressBook(addressBook, filePath);","lastModifiedDate":"2022-03-19"},{"lineNumber":109,"author":{"gitId":"Jacky142857"},"content":"    }","lastModifiedDate":"2022-03-19"},{"lineNumber":110,"author":{"gitId":"Jacky142857"},"content":"","lastModifiedDate":"2022-03-19"},{"lineNumber":111,"author":{"gitId":"Jacky142857"},"content":"    @Override","lastModifiedDate":"2022-03-19"},{"lineNumber":112,"author":{"gitId":"Jacky142857"},"content":"    public void saveSellerAddressBook(ReadOnlySellerAddressBook addressBook) throws IOException {","lastModifiedDate":"2022-03-19"},{"lineNumber":113,"author":{"gitId":"Jacky142857"},"content":"        saveSellerAddressBook(addressBook, sellerAddressBookStorage.getSellerAddressBookFilePath());","lastModifiedDate":"2022-03-19"},{"lineNumber":114,"author":{"gitId":"Jacky142857"},"content":"    }","lastModifiedDate":"2022-03-19"},{"lineNumber":115,"author":{"gitId":"Jacky142857"},"content":"","lastModifiedDate":"2022-03-19"},{"lineNumber":116,"author":{"gitId":"WJunHong"},"content":"    // \u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d BuyerAddressBook methods \u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d","lastModifiedDate":"2022-03-23"},{"lineNumber":117,"author":{"gitId":"WJunHong"},"content":"","lastModifiedDate":"2022-03-23"},{"lineNumber":118,"author":{"gitId":"WJunHong"},"content":"    @Override","lastModifiedDate":"2022-03-23"},{"lineNumber":119,"author":{"gitId":"WJunHong"},"content":"    public Optional\u003cReadOnlyBuyerAddressBook\u003e readBuyerAddressBook() throws DataConversionException, IOException {","lastModifiedDate":"2022-03-23"},{"lineNumber":120,"author":{"gitId":"WJunHong"},"content":"        return readBuyerAddressBook(buyerAddressBookStorage.getBuyerAddressBookFilePath());","lastModifiedDate":"2022-03-23"},{"lineNumber":121,"author":{"gitId":"WJunHong"},"content":"    }","lastModifiedDate":"2022-03-23"},{"lineNumber":122,"author":{"gitId":"WJunHong"},"content":"","lastModifiedDate":"2022-03-23"},{"lineNumber":123,"author":{"gitId":"WJunHong"},"content":"    @Override","lastModifiedDate":"2022-03-23"},{"lineNumber":124,"author":{"gitId":"WJunHong"},"content":"    public Optional\u003cReadOnlyBuyerAddressBook\u003e readBuyerAddressBook(Path filePath)","lastModifiedDate":"2022-03-23"},{"lineNumber":125,"author":{"gitId":"WJunHong"},"content":"            throws DataConversionException, IOException {","lastModifiedDate":"2022-03-23"},{"lineNumber":126,"author":{"gitId":"chuashihong"},"content":"        logger.fine(\"Attempting to read buyer data from file: \" + filePath);","lastModifiedDate":"2022-03-25"},{"lineNumber":127,"author":{"gitId":"WJunHong"},"content":"        return buyerAddressBookStorage.readBuyerAddressBook(filePath);","lastModifiedDate":"2022-03-23"},{"lineNumber":128,"author":{"gitId":"WJunHong"},"content":"    }","lastModifiedDate":"2022-03-23"},{"lineNumber":129,"author":{"gitId":"WJunHong"},"content":"","lastModifiedDate":"2022-03-23"},{"lineNumber":130,"author":{"gitId":"WJunHong"},"content":"    @Override","lastModifiedDate":"2022-03-23"},{"lineNumber":131,"author":{"gitId":"WJunHong"},"content":"    public Path getBuyerAddressBookFilePath() {","lastModifiedDate":"2022-03-23"},{"lineNumber":132,"author":{"gitId":"WJunHong"},"content":"        return buyerAddressBookStorage.getBuyerAddressBookFilePath();","lastModifiedDate":"2022-03-23"},{"lineNumber":133,"author":{"gitId":"WJunHong"},"content":"    }","lastModifiedDate":"2022-03-23"},{"lineNumber":134,"author":{"gitId":"WJunHong"},"content":"","lastModifiedDate":"2022-03-23"},{"lineNumber":135,"author":{"gitId":"WJunHong"},"content":"    @Override","lastModifiedDate":"2022-03-23"},{"lineNumber":136,"author":{"gitId":"WJunHong"},"content":"    public void saveBuyerAddressBook(ReadOnlyBuyerAddressBook addressBook, Path filePath) throws IOException {","lastModifiedDate":"2022-03-23"},{"lineNumber":137,"author":{"gitId":"chuashihong"},"content":"        logger.fine(\"Attempting to write to buyer data file: \" + filePath);","lastModifiedDate":"2022-03-25"},{"lineNumber":138,"author":{"gitId":"WJunHong"},"content":"        buyerAddressBookStorage.saveBuyerAddressBook(addressBook, filePath);","lastModifiedDate":"2022-03-23"},{"lineNumber":139,"author":{"gitId":"WJunHong"},"content":"    }","lastModifiedDate":"2022-03-23"},{"lineNumber":140,"author":{"gitId":"WJunHong"},"content":"","lastModifiedDate":"2022-03-23"},{"lineNumber":141,"author":{"gitId":"WJunHong"},"content":"    @Override","lastModifiedDate":"2022-03-23"},{"lineNumber":142,"author":{"gitId":"WJunHong"},"content":"    public void saveBuyerAddressBook(ReadOnlyBuyerAddressBook addressBook) throws IOException {","lastModifiedDate":"2022-03-23"},{"lineNumber":143,"author":{"gitId":"WJunHong"},"content":"        saveBuyerAddressBook(addressBook, buyerAddressBookStorage.getBuyerAddressBookFilePath());","lastModifiedDate":"2022-03-23"},{"lineNumber":144,"author":{"gitId":"WJunHong"},"content":"    }","lastModifiedDate":"2022-03-23"},{"lineNumber":145,"author":{"gitId":"Jacky142857"},"content":"","lastModifiedDate":"2022-03-19"},{"lineNumber":146,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"}],"authorContributionMap":{"WJunHong":32,"Jacky142857":33,"-":77,"chuashihong":4}},{"path":"src/main/java/seedu/address/ui/BuyerCard.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.ui;","lastModifiedDate":"2016-09-22"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.util.Comparator;","lastModifiedDate":"2019-01-02"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-01-02"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import javafx.fxml.FXML;","lastModifiedDate":"2016-09-21"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import javafx.scene.control.Label;","lastModifiedDate":"2016-09-21"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import javafx.scene.layout.FlowPane;","lastModifiedDate":"2016-12-18"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import javafx.scene.layout.HBox;","lastModifiedDate":"2016-09-21"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import javafx.scene.layout.Region;","lastModifiedDate":"2016-12-24"},{"lineNumber":10,"author":{"gitId":"WJunHong"},"content":"import seedu.address.model.buyer.Buyer;","lastModifiedDate":"2022-03-24"},{"lineNumber":11,"author":{"gitId":"cwnm"},"content":"import seedu.address.model.client.Client;","lastModifiedDate":"2022-03-04"},{"lineNumber":12,"author":{"gitId":"chuashihong"},"content":"import seedu.address.model.property.NullPropertyToBuy;","lastModifiedDate":"2022-03-24"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":14,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-08-16"},{"lineNumber":15,"author":{"gitId":"cwnm"},"content":" * An UI component that displays information of a {@code client}.","lastModifiedDate":"2022-03-04"},{"lineNumber":16,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-08-16"},{"lineNumber":17,"author":{"gitId":"chuashihong"},"content":"public class BuyerCard extends UiPart\u003cRegion\u003e {","lastModifiedDate":"2022-03-27"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":19,"author":{"gitId":"chuashihong"},"content":"    private static final String FXML \u003d \"BuyerListCard.fxml\";","lastModifiedDate":"2022-03-27"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-03-25"},{"lineNumber":22,"author":{"gitId":"-"},"content":"     * Note: Certain keywords such as \"location\" and \"resources\" are reserved keywords in JavaFX.","lastModifiedDate":"2017-03-25"},{"lineNumber":23,"author":{"gitId":"-"},"content":"     * As a consequence, UI elements\u0027 variable names cannot be set to such keywords","lastModifiedDate":"2017-03-25"},{"lineNumber":24,"author":{"gitId":"-"},"content":"     * or an exception will be thrown by JavaFX during runtime.","lastModifiedDate":"2017-03-25"},{"lineNumber":25,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2017-03-25"},{"lineNumber":26,"author":{"gitId":"-"},"content":"     * @see \u003ca href\u003d\"https://github.com/se-edu/addressbook-level4/issues/336\"\u003eThe issue on AddressBook level 4\u003c/a\u003e","lastModifiedDate":"2017-03-25"},{"lineNumber":27,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-03-25"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-25"},{"lineNumber":29,"author":{"gitId":"cwnm"},"content":"    public final Client client;","lastModifiedDate":"2022-03-04"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-12"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-09-21"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    private HBox cardPane;","lastModifiedDate":"2016-09-21"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-09-21"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    private Label name;","lastModifiedDate":"2016-09-21"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-09-21"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    private Label id;","lastModifiedDate":"2016-09-21"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-09-21"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    private Label phone;","lastModifiedDate":"2016-09-21"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-09-21"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    private FlowPane tags;","lastModifiedDate":"2016-12-18"},{"lineNumber":41,"author":{"gitId":"Jacky142857"},"content":"    @FXML","lastModifiedDate":"2022-03-11"},{"lineNumber":42,"author":{"gitId":"Jacky142857"},"content":"    private Label appointment;","lastModifiedDate":"2022-03-11"},{"lineNumber":43,"author":{"gitId":"WJunHong"},"content":"    @FXML","lastModifiedDate":"2022-03-24"},{"lineNumber":44,"author":{"gitId":"WJunHong"},"content":"    private Label propertyType;","lastModifiedDate":"2022-03-24"},{"lineNumber":45,"author":{"gitId":"WJunHong"},"content":"    @FXML","lastModifiedDate":"2022-03-24"},{"lineNumber":46,"author":{"gitId":"WJunHong"},"content":"    private Label propertyLocation;","lastModifiedDate":"2022-03-24"},{"lineNumber":47,"author":{"gitId":"WJunHong"},"content":"    @FXML","lastModifiedDate":"2022-03-24"},{"lineNumber":48,"author":{"gitId":"chuashihong"},"content":"    private Label propertyLowerPrice;","lastModifiedDate":"2022-03-25"},{"lineNumber":49,"author":{"gitId":"chuashihong"},"content":"    @FXML","lastModifiedDate":"2022-03-25"},{"lineNumber":50,"author":{"gitId":"chuashihong"},"content":"    private Label propertyUpperPrice;","lastModifiedDate":"2022-03-25"},{"lineNumber":51,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2020-05-27"},{"lineNumber":53,"author":{"gitId":"-"},"content":"     * Creates a {@code PersonCode} with the given {@code Person} and index to display.","lastModifiedDate":"2020-05-27"},{"lineNumber":54,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2020-05-27"},{"lineNumber":55,"author":{"gitId":"chuashihong"},"content":"    public BuyerCard(Buyer buyer, int displayedIndex) {","lastModifiedDate":"2022-03-27"},{"lineNumber":56,"author":{"gitId":"-"},"content":"        super(FXML);","lastModifiedDate":"2016-12-24"},{"lineNumber":57,"author":{"gitId":"chuashihong"},"content":"        this.client \u003d buyer;","lastModifiedDate":"2022-03-27"},{"lineNumber":58,"author":{"gitId":"-"},"content":"        id.setText(displayedIndex + \". \");","lastModifiedDate":"2016-09-21"},{"lineNumber":59,"author":{"gitId":"chuashihong"},"content":"        name.setText(buyer.getName().fullName);","lastModifiedDate":"2022-03-27"},{"lineNumber":60,"author":{"gitId":"chuashihong"},"content":"        phone.setText(buyer.getPhone().value);","lastModifiedDate":"2022-03-27"},{"lineNumber":61,"author":{"gitId":"chuashihong"},"content":"        appointment.setText(buyer.getAppointment().getAppointmentDetail());","lastModifiedDate":"2022-03-27"},{"lineNumber":62,"author":{"gitId":"chuashihong"},"content":"        buyer.getTags().stream()","lastModifiedDate":"2022-03-27"},{"lineNumber":63,"author":{"gitId":"-"},"content":"                .sorted(Comparator.comparing(tag -\u003e tag.tagName))","lastModifiedDate":"2019-01-02"},{"lineNumber":64,"author":{"gitId":"-"},"content":"                .forEach(tag -\u003e tags.getChildren().add(new Label(tag.tagName)));","lastModifiedDate":"2019-01-02"},{"lineNumber":65,"author":{"gitId":"chuashihong"},"content":"        String houseType \u003d buyer.getPropertyToBuy().getHouse().getHouseTypeToString();","lastModifiedDate":"2022-03-27"},{"lineNumber":66,"author":{"gitId":"chuashihong"},"content":"        String houseLocation \u003d buyer.getPropertyToBuy().getHouse().getLocationToString();","lastModifiedDate":"2022-03-27"},{"lineNumber":67,"author":{"gitId":"chuashihong"},"content":"        String houseLowerPrice \u003d buyer.getPropertyToBuy().getPriceRange().getLowerToString();","lastModifiedDate":"2022-03-27"},{"lineNumber":68,"author":{"gitId":"chuashihong"},"content":"        String houseUpperPrice \u003d buyer.getPropertyToBuy().getPriceRange().getUpperToString();","lastModifiedDate":"2022-03-27"},{"lineNumber":69,"author":{"gitId":"chuashihong"},"content":"        if (buyer.getPropertyToBuy() instanceof NullPropertyToBuy) {","lastModifiedDate":"2022-03-28"},{"lineNumber":70,"author":{"gitId":"janald99"},"content":"            propertyType.setText(\"no property added yet\");","lastModifiedDate":"2022-04-06"},{"lineNumber":71,"author":{"gitId":"janald99"},"content":"            propertyLocation.setText(\"-\");","lastModifiedDate":"2022-04-06"},{"lineNumber":72,"author":{"gitId":"WJunHong"},"content":"            propertyLowerPrice.setText(\"\");","lastModifiedDate":"2022-03-28"},{"lineNumber":73,"author":{"gitId":"chuashihong"},"content":"        } else {","lastModifiedDate":"2022-03-27"},{"lineNumber":74,"author":{"gitId":"chuashihong"},"content":"            propertyType.setText(houseType);","lastModifiedDate":"2022-03-27"},{"lineNumber":75,"author":{"gitId":"chuashihong"},"content":"            propertyLocation.setText(houseLocation);","lastModifiedDate":"2022-03-27"},{"lineNumber":76,"author":{"gitId":"chuashihong"},"content":"            propertyLowerPrice.setText(houseLowerPrice);","lastModifiedDate":"2022-03-27"},{"lineNumber":77,"author":{"gitId":"chuashihong"},"content":"            propertyUpperPrice.setText(houseUpperPrice);","lastModifiedDate":"2022-03-27"},{"lineNumber":78,"author":{"gitId":"chuashihong"},"content":"        }","lastModifiedDate":"2022-03-27"},{"lineNumber":79,"author":{"gitId":"chuashihong"},"content":"","lastModifiedDate":"2022-03-27"},{"lineNumber":80,"author":{"gitId":"chuashihong"},"content":"    }","lastModifiedDate":"2022-03-24"},{"lineNumber":81,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-14"},{"lineNumber":82,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2017-07-14"},{"lineNumber":83,"author":{"gitId":"-"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2017-07-14"},{"lineNumber":84,"author":{"gitId":"-"},"content":"        // short circuit if same object","lastModifiedDate":"2017-07-14"},{"lineNumber":85,"author":{"gitId":"-"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2017-07-14"},{"lineNumber":86,"author":{"gitId":"-"},"content":"            return true;","lastModifiedDate":"2017-07-14"},{"lineNumber":87,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-07-14"},{"lineNumber":88,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-14"},{"lineNumber":89,"author":{"gitId":"-"},"content":"        // instanceof handles nulls","lastModifiedDate":"2017-07-14"},{"lineNumber":90,"author":{"gitId":"chuashihong"},"content":"        if (!(other instanceof BuyerCard)) {","lastModifiedDate":"2022-03-27"},{"lineNumber":91,"author":{"gitId":"-"},"content":"            return false;","lastModifiedDate":"2017-07-14"},{"lineNumber":92,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-07-14"},{"lineNumber":93,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-14"},{"lineNumber":94,"author":{"gitId":"-"},"content":"        // state check","lastModifiedDate":"2017-07-14"},{"lineNumber":95,"author":{"gitId":"chuashihong"},"content":"        BuyerCard card \u003d (BuyerCard) other;","lastModifiedDate":"2022-03-27"},{"lineNumber":96,"author":{"gitId":"-"},"content":"        return id.getText().equals(card.id.getText())","lastModifiedDate":"2017-07-14"},{"lineNumber":97,"author":{"gitId":"cwnm"},"content":"                \u0026\u0026 client.equals(card.client);","lastModifiedDate":"2022-03-04"},{"lineNumber":98,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-07-14"},{"lineNumber":99,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-09-21"}],"authorContributionMap":{"janald99":2,"WJunHong":7,"Jacky142857":2,"-":57,"cwnm":4,"chuashihong":27}},{"path":"src/main/java/seedu/address/ui/ClientListPanel.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.ui;","lastModifiedDate":"2016-09-22"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.util.logging.Logger;","lastModifiedDate":"2017-01-19"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2016-08-25"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import javafx.fxml.FXML;","lastModifiedDate":"2016-08-25"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import javafx.scene.control.ListCell;","lastModifiedDate":"2016-09-21"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import javafx.scene.control.ListView;","lastModifiedDate":"2016-08-25"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import javafx.scene.layout.Region;","lastModifiedDate":"2016-12-24"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.LogsCenter;","lastModifiedDate":"2017-01-19"},{"lineNumber":11,"author":{"gitId":"WJunHong"},"content":"import seedu.address.model.buyer.Buyer;","lastModifiedDate":"2022-03-24"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":13,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-18"},{"lineNumber":14,"author":{"gitId":"cwnm"},"content":" * Panel containing the list of clients.","lastModifiedDate":"2022-03-04"},{"lineNumber":15,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-18"},{"lineNumber":16,"author":{"gitId":"cwnm"},"content":"public class ClientListPanel extends UiPart\u003cRegion\u003e {","lastModifiedDate":"2022-03-04"},{"lineNumber":17,"author":{"gitId":"cwnm"},"content":"    private static final String FXML \u003d \"ClientListPanel.fxml\";","lastModifiedDate":"2022-03-24"},{"lineNumber":18,"author":{"gitId":"cwnm"},"content":"    private final Logger logger \u003d LogsCenter.getLogger(ClientListPanel.class);","lastModifiedDate":"2022-03-04"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-08-18"},{"lineNumber":21,"author":{"gitId":"WJunHong"},"content":"    private ListView\u003cBuyer\u003e clientListView;","lastModifiedDate":"2022-03-24"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2020-05-27"},{"lineNumber":24,"author":{"gitId":"cwnm"},"content":"     * Creates a {@code clientListPanel} with the given {@code ObservableList}.","lastModifiedDate":"2022-03-04"},{"lineNumber":25,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2020-05-27"},{"lineNumber":26,"author":{"gitId":"WJunHong"},"content":"    public ClientListPanel(ObservableList\u003cBuyer\u003e clientList) {","lastModifiedDate":"2022-03-24"},{"lineNumber":27,"author":{"gitId":"-"},"content":"        super(FXML);","lastModifiedDate":"2016-12-24"},{"lineNumber":28,"author":{"gitId":"cwnm"},"content":"        clientListView.setItems(clientList);","lastModifiedDate":"2022-03-04"},{"lineNumber":29,"author":{"gitId":"cwnm"},"content":"        clientListView.setCellFactory(listView -\u003e new ClientListViewCell());","lastModifiedDate":"2022-03-04"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-16"},{"lineNumber":31,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-16"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-08-16"},{"lineNumber":33,"author":{"gitId":"cwnm"},"content":"     * Custom {@code ListCell} that displays the graphics of a {@code client} using a {@code clientCard}.","lastModifiedDate":"2022-03-04"},{"lineNumber":34,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-08-16"},{"lineNumber":35,"author":{"gitId":"WJunHong"},"content":"    class ClientListViewCell extends ListCell\u003cBuyer\u003e {","lastModifiedDate":"2022-03-24"},{"lineNumber":36,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2016-09-21"},{"lineNumber":37,"author":{"gitId":"WJunHong"},"content":"        protected void updateItem(Buyer client, boolean empty) {","lastModifiedDate":"2022-03-24"},{"lineNumber":38,"author":{"gitId":"cwnm"},"content":"            super.updateItem(client, empty);","lastModifiedDate":"2022-03-04"},{"lineNumber":39,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":40,"author":{"gitId":"cwnm"},"content":"            if (empty || client \u003d\u003d null) {","lastModifiedDate":"2022-03-04"},{"lineNumber":41,"author":{"gitId":"-"},"content":"                setGraphic(null);","lastModifiedDate":"2016-09-21"},{"lineNumber":42,"author":{"gitId":"-"},"content":"                setText(null);","lastModifiedDate":"2016-09-21"},{"lineNumber":43,"author":{"gitId":"-"},"content":"            } else {","lastModifiedDate":"2016-09-21"},{"lineNumber":44,"author":{"gitId":"chuashihong"},"content":"                setGraphic(new BuyerCard(client, getIndex() + 1).getRoot());","lastModifiedDate":"2022-03-27"},{"lineNumber":45,"author":{"gitId":"-"},"content":"            }","lastModifiedDate":"2016-09-21"},{"lineNumber":46,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-09-21"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-21"},{"lineNumber":48,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":49,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-18"}],"authorContributionMap":{"WJunHong":5,"-":33,"cwnm":10,"chuashihong":1}},{"path":"src/main/java/seedu/address/ui/HelpWindow.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.ui;","lastModifiedDate":"2016-09-22"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.util.logging.Logger;","lastModifiedDate":"2017-01-19"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import javafx.fxml.FXML;","lastModifiedDate":"2016-12-24"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import javafx.scene.control.Button;","lastModifiedDate":"2019-08-19"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import javafx.scene.control.Label;","lastModifiedDate":"2019-08-19"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import javafx.scene.input.Clipboard;","lastModifiedDate":"2019-08-19"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import javafx.scene.input.ClipboardContent;","lastModifiedDate":"2019-08-19"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import javafx.stage.Stage;","lastModifiedDate":"2016-08-18"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.LogsCenter;","lastModifiedDate":"2016-09-23"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-09"},{"lineNumber":13,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-18"},{"lineNumber":14,"author":{"gitId":"-"},"content":" * Controller for a help page","lastModifiedDate":"2016-08-18"},{"lineNumber":15,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-18"},{"lineNumber":16,"author":{"gitId":"-"},"content":"public class HelpWindow extends UiPart\u003cStage\u003e {","lastModifiedDate":"2017-12-01"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":18,"author":{"gitId":"janald99"},"content":"    public static final String USERGUIDE_URL \u003d \"https://ay2122s2-cs2103t-t11-2.github.io/tp/UserGuide.html\";","lastModifiedDate":"2022-03-18"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    public static final String HELP_MESSAGE \u003d \"Refer to the user guide: \" + USERGUIDE_URL;","lastModifiedDate":"2019-08-19"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-03"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    private static final Logger logger \u003d LogsCenter.getLogger(HelpWindow.class);","lastModifiedDate":"2016-09-23"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    private static final String FXML \u003d \"HelpWindow.fxml\";","lastModifiedDate":"2016-09-20"},{"lineNumber":23,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-12-24"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    private Button copyButton;","lastModifiedDate":"2019-08-19"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-08-19"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2019-08-19"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    private Label helpMessage;","lastModifiedDate":"2019-08-19"},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-12-01"},{"lineNumber":31,"author":{"gitId":"-"},"content":"     * Creates a new HelpWindow.","lastModifiedDate":"2017-12-01"},{"lineNumber":32,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2017-12-01"},{"lineNumber":33,"author":{"gitId":"-"},"content":"     * @param root Stage to use as the root of the HelpWindow.","lastModifiedDate":"2017-12-01"},{"lineNumber":34,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-12-01"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    public HelpWindow(Stage root) {","lastModifiedDate":"2017-12-01"},{"lineNumber":36,"author":{"gitId":"-"},"content":"        super(FXML, root);","lastModifiedDate":"2017-12-01"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        helpMessage.setText(HELP_MESSAGE);","lastModifiedDate":"2019-08-19"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-18"},{"lineNumber":39,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-12-01"},{"lineNumber":41,"author":{"gitId":"-"},"content":"     * Creates a new HelpWindow.","lastModifiedDate":"2017-12-01"},{"lineNumber":42,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-12-01"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    public HelpWindow() {","lastModifiedDate":"2017-12-01"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        this(new Stage());","lastModifiedDate":"2017-12-01"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-12-01"},{"lineNumber":46,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-12-01"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-08-16"},{"lineNumber":48,"author":{"gitId":"-"},"content":"     * Shows the help window.","lastModifiedDate":"2017-08-16"},{"lineNumber":49,"author":{"gitId":"-"},"content":"     * @throws IllegalStateException","lastModifiedDate":"2017-08-16"},{"lineNumber":50,"author":{"gitId":"-"},"content":"     * \u003cul\u003e","lastModifiedDate":"2017-08-16"},{"lineNumber":51,"author":{"gitId":"-"},"content":"     *     \u003cli\u003e","lastModifiedDate":"2017-08-16"},{"lineNumber":52,"author":{"gitId":"-"},"content":"     *         if this method is called on a thread other than the JavaFX Application Thread.","lastModifiedDate":"2017-08-16"},{"lineNumber":53,"author":{"gitId":"-"},"content":"     *     \u003c/li\u003e","lastModifiedDate":"2017-08-16"},{"lineNumber":54,"author":{"gitId":"-"},"content":"     *     \u003cli\u003e","lastModifiedDate":"2017-08-16"},{"lineNumber":55,"author":{"gitId":"-"},"content":"     *         if this method is called during animation or layout processing.","lastModifiedDate":"2017-08-16"},{"lineNumber":56,"author":{"gitId":"-"},"content":"     *     \u003c/li\u003e","lastModifiedDate":"2017-08-16"},{"lineNumber":57,"author":{"gitId":"-"},"content":"     *     \u003cli\u003e","lastModifiedDate":"2017-08-16"},{"lineNumber":58,"author":{"gitId":"-"},"content":"     *         if this method is called on the primary stage.","lastModifiedDate":"2017-08-16"},{"lineNumber":59,"author":{"gitId":"-"},"content":"     *     \u003c/li\u003e","lastModifiedDate":"2017-08-16"},{"lineNumber":60,"author":{"gitId":"-"},"content":"     *     \u003cli\u003e","lastModifiedDate":"2017-08-16"},{"lineNumber":61,"author":{"gitId":"-"},"content":"     *         if {@code dialogStage} is already showing.","lastModifiedDate":"2017-08-16"},{"lineNumber":62,"author":{"gitId":"-"},"content":"     *     \u003c/li\u003e","lastModifiedDate":"2017-08-16"},{"lineNumber":63,"author":{"gitId":"-"},"content":"     * \u003c/ul\u003e","lastModifiedDate":"2017-08-16"},{"lineNumber":64,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-08-16"},{"lineNumber":65,"author":{"gitId":"-"},"content":"    public void show() {","lastModifiedDate":"2016-08-18"},{"lineNumber":66,"author":{"gitId":"-"},"content":"        logger.fine(\"Showing help page about the application.\");","lastModifiedDate":"2016-12-24"},{"lineNumber":67,"author":{"gitId":"-"},"content":"        getRoot().show();","lastModifiedDate":"2018-02-13"},{"lineNumber":68,"author":{"gitId":"-"},"content":"        getRoot().centerOnScreen();","lastModifiedDate":"2019-08-19"},{"lineNumber":69,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-18"},{"lineNumber":70,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-03-15"},{"lineNumber":71,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-03-15"},{"lineNumber":72,"author":{"gitId":"-"},"content":"     * Returns true if the help window is currently being shown.","lastModifiedDate":"2018-03-15"},{"lineNumber":73,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-03-15"},{"lineNumber":74,"author":{"gitId":"-"},"content":"    public boolean isShowing() {","lastModifiedDate":"2018-03-15"},{"lineNumber":75,"author":{"gitId":"-"},"content":"        return getRoot().isShowing();","lastModifiedDate":"2018-03-15"},{"lineNumber":76,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-03-15"},{"lineNumber":77,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-03-15"},{"lineNumber":78,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-12-08"},{"lineNumber":79,"author":{"gitId":"-"},"content":"     * Hides the help window.","lastModifiedDate":"2018-12-08"},{"lineNumber":80,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-12-08"},{"lineNumber":81,"author":{"gitId":"-"},"content":"    public void hide() {","lastModifiedDate":"2018-12-08"},{"lineNumber":82,"author":{"gitId":"-"},"content":"        getRoot().hide();","lastModifiedDate":"2018-12-08"},{"lineNumber":83,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-12-08"},{"lineNumber":84,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-08"},{"lineNumber":85,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-03-15"},{"lineNumber":86,"author":{"gitId":"-"},"content":"     * Focuses on the help window.","lastModifiedDate":"2018-03-15"},{"lineNumber":87,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-03-15"},{"lineNumber":88,"author":{"gitId":"-"},"content":"    public void focus() {","lastModifiedDate":"2018-03-15"},{"lineNumber":89,"author":{"gitId":"-"},"content":"        getRoot().requestFocus();","lastModifiedDate":"2018-03-15"},{"lineNumber":90,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-03-15"},{"lineNumber":91,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-08-19"},{"lineNumber":92,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2019-08-19"},{"lineNumber":93,"author":{"gitId":"-"},"content":"     * Copies the URL to the user guide to the clipboard.","lastModifiedDate":"2019-08-19"},{"lineNumber":94,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2019-08-19"},{"lineNumber":95,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2019-08-19"},{"lineNumber":96,"author":{"gitId":"-"},"content":"    private void copyUrl() {","lastModifiedDate":"2019-08-19"},{"lineNumber":97,"author":{"gitId":"-"},"content":"        final Clipboard clipboard \u003d Clipboard.getSystemClipboard();","lastModifiedDate":"2019-08-19"},{"lineNumber":98,"author":{"gitId":"-"},"content":"        final ClipboardContent url \u003d new ClipboardContent();","lastModifiedDate":"2019-08-19"},{"lineNumber":99,"author":{"gitId":"-"},"content":"        url.putString(USERGUIDE_URL);","lastModifiedDate":"2019-08-19"},{"lineNumber":100,"author":{"gitId":"-"},"content":"        clipboard.setContent(url);","lastModifiedDate":"2019-08-19"},{"lineNumber":101,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2019-08-19"},{"lineNumber":102,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-18"}],"authorContributionMap":{"janald99":1,"-":101}},{"path":"src/main/java/seedu/address/ui/ListSelectionTab.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"Jacky142857"},"content":"package seedu.address.ui;","lastModifiedDate":"2022-03-17"},{"lineNumber":2,"author":{"gitId":"Jacky142857"},"content":"","lastModifiedDate":"2022-03-17"},{"lineNumber":3,"author":{"gitId":"Jacky142857"},"content":"import javafx.scene.layout.Region;","lastModifiedDate":"2022-03-17"},{"lineNumber":4,"author":{"gitId":"Jacky142857"},"content":"","lastModifiedDate":"2022-03-17"},{"lineNumber":5,"author":{"gitId":"Jacky142857"},"content":"public class ListSelectionTab extends UiPart\u003cRegion\u003e {","lastModifiedDate":"2022-03-17"},{"lineNumber":6,"author":{"gitId":"Jacky142857"},"content":"    private static final String FXML \u003d \"ListSelectionTab.fxml\";","lastModifiedDate":"2022-03-17"},{"lineNumber":7,"author":{"gitId":"Jacky142857"},"content":"","lastModifiedDate":"2022-03-17"},{"lineNumber":8,"author":{"gitId":"Jacky142857"},"content":"    public ListSelectionTab() {","lastModifiedDate":"2022-03-17"},{"lineNumber":9,"author":{"gitId":"Jacky142857"},"content":"        super(FXML);","lastModifiedDate":"2022-03-17"},{"lineNumber":10,"author":{"gitId":"Jacky142857"},"content":"    }","lastModifiedDate":"2022-03-17"},{"lineNumber":11,"author":{"gitId":"Jacky142857"},"content":"","lastModifiedDate":"2022-03-17"},{"lineNumber":12,"author":{"gitId":"Jacky142857"},"content":"}","lastModifiedDate":"2022-03-17"}],"authorContributionMap":{"Jacky142857":12}},{"path":"src/main/java/seedu/address/ui/MainWindow.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.ui;","lastModifiedDate":"2016-09-22"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.util.logging.Logger;","lastModifiedDate":"2017-06-16"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-16"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import javafx.event.ActionEvent;","lastModifiedDate":"2016-12-18"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import javafx.fxml.FXML;","lastModifiedDate":"2016-08-26"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import javafx.scene.control.MenuItem;","lastModifiedDate":"2016-08-26"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import javafx.scene.control.TextInputControl;","lastModifiedDate":"2016-12-18"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import javafx.scene.input.KeyCombination;","lastModifiedDate":"2016-08-26"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import javafx.scene.input.KeyEvent;","lastModifiedDate":"2016-12-18"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import javafx.scene.layout.StackPane;","lastModifiedDate":"2017-05-09"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import javafx.stage.Stage;","lastModifiedDate":"2016-08-18"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.GuiSettings;","lastModifiedDate":"2016-09-28"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.LogsCenter;","lastModifiedDate":"2017-06-16"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import seedu.address.logic.Logic;","lastModifiedDate":"2016-09-25"},{"lineNumber":16,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.CommandResult;","lastModifiedDate":"2018-12-09"},{"lineNumber":17,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.exceptions.CommandException;","lastModifiedDate":"2018-12-09"},{"lineNumber":18,"author":{"gitId":"-"},"content":"import seedu.address.logic.parser.exceptions.ParseException;","lastModifiedDate":"2018-12-09"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-09"},{"lineNumber":20,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-18"},{"lineNumber":21,"author":{"gitId":"-"},"content":" * The Main Window. Provides the basic application layout containing","lastModifiedDate":"2016-08-18"},{"lineNumber":22,"author":{"gitId":"-"},"content":" * a menu bar and space where other JavaFX elements can be placed.","lastModifiedDate":"2016-08-18"},{"lineNumber":23,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-18"},{"lineNumber":24,"author":{"gitId":"-"},"content":"public class MainWindow extends UiPart\u003cStage\u003e {","lastModifiedDate":"2017-11-29"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-28"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    private static final String FXML \u003d \"MainWindow.fxml\";","lastModifiedDate":"2016-08-18"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    private final Logger logger \u003d LogsCenter.getLogger(getClass());","lastModifiedDate":"2018-08-14"},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-16"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    private Stage primaryStage;","lastModifiedDate":"2016-12-02"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    private Logic logic;","lastModifiedDate":"2016-09-25"},{"lineNumber":32,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    // Independent Ui parts residing in this Ui container","lastModifiedDate":"2016-08-18"},{"lineNumber":34,"author":{"gitId":"cwnm"},"content":"    private ClientListPanel clientListPanel;","lastModifiedDate":"2022-03-04"},{"lineNumber":35,"author":{"gitId":"Jacky142857"},"content":"    private SellerListPanel sellerListPanel;","lastModifiedDate":"2022-03-19"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    private ResultDisplay resultDisplay;","lastModifiedDate":"2018-12-09"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    private HelpWindow helpWindow;","lastModifiedDate":"2018-03-15"},{"lineNumber":38,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-09-21"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    private StackPane commandBoxPlaceholder;","lastModifiedDate":"2017-05-09"},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-08-18"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    private MenuItem helpMenuItem;","lastModifiedDate":"2016-08-18"},{"lineNumber":44,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-09-21"},{"lineNumber":46,"author":{"gitId":"cwnm"},"content":"    private StackPane clientListPanelPlaceholder;","lastModifiedDate":"2022-03-04"},{"lineNumber":47,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-09-21"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    private StackPane resultDisplayPlaceholder;","lastModifiedDate":"2017-05-09"},{"lineNumber":50,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-09-21"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    private StackPane statusbarPlaceholder;","lastModifiedDate":"2017-05-09"},{"lineNumber":53,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":54,"author":{"gitId":"Jacky142857"},"content":"    @FXML","lastModifiedDate":"2022-03-17"},{"lineNumber":55,"author":{"gitId":"Jacky142857"},"content":"    private StackPane tabHolder;","lastModifiedDate":"2022-03-17"},{"lineNumber":56,"author":{"gitId":"Jacky142857"},"content":"","lastModifiedDate":"2022-03-17"},{"lineNumber":57,"author":{"gitId":"Jacky142857"},"content":"    @FXML","lastModifiedDate":"2022-03-19"},{"lineNumber":58,"author":{"gitId":"Jacky142857"},"content":"    private StackPane sellerListPanelPlaceholder;","lastModifiedDate":"2022-03-19"},{"lineNumber":59,"author":{"gitId":"Jacky142857"},"content":"","lastModifiedDate":"2022-03-19"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2020-05-27"},{"lineNumber":61,"author":{"gitId":"-"},"content":"     * Creates a {@code MainWindow} with the given {@code Stage} and {@code Logic}.","lastModifiedDate":"2020-05-27"},{"lineNumber":62,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2020-05-27"},{"lineNumber":63,"author":{"gitId":"-"},"content":"    public MainWindow(Stage primaryStage, Logic logic) {","lastModifiedDate":"2018-12-08"},{"lineNumber":64,"author":{"gitId":"-"},"content":"        super(FXML, primaryStage);","lastModifiedDate":"2017-11-29"},{"lineNumber":65,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":66,"author":{"gitId":"-"},"content":"        // Set dependencies","lastModifiedDate":"2016-09-21"},{"lineNumber":67,"author":{"gitId":"-"},"content":"        this.primaryStage \u003d primaryStage;","lastModifiedDate":"2016-12-02"},{"lineNumber":68,"author":{"gitId":"-"},"content":"        this.logic \u003d logic;","lastModifiedDate":"2016-09-25"},{"lineNumber":69,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":70,"author":{"gitId":"-"},"content":"        // Configure the UI","lastModifiedDate":"2016-09-21"},{"lineNumber":71,"author":{"gitId":"-"},"content":"        setWindowDefaultSize(logic.getGuiSettings());","lastModifiedDate":"2018-11-27"},{"lineNumber":72,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":73,"author":{"gitId":"-"},"content":"        setAccelerators();","lastModifiedDate":"2016-09-21"},{"lineNumber":74,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-03-15"},{"lineNumber":75,"author":{"gitId":"-"},"content":"        helpWindow \u003d new HelpWindow();","lastModifiedDate":"2018-03-15"},{"lineNumber":76,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-18"},{"lineNumber":77,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":78,"author":{"gitId":"-"},"content":"    public Stage getPrimaryStage() {","lastModifiedDate":"2016-12-24"},{"lineNumber":79,"author":{"gitId":"-"},"content":"        return primaryStage;","lastModifiedDate":"2016-12-24"},{"lineNumber":80,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-24"},{"lineNumber":81,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-24"},{"lineNumber":82,"author":{"gitId":"-"},"content":"    private void setAccelerators() {","lastModifiedDate":"2016-09-21"},{"lineNumber":83,"author":{"gitId":"-"},"content":"        setAccelerator(helpMenuItem, KeyCombination.valueOf(\"F1\"));","lastModifiedDate":"2016-12-18"},{"lineNumber":84,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-18"},{"lineNumber":85,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-18"},{"lineNumber":86,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-12-18"},{"lineNumber":87,"author":{"gitId":"-"},"content":"     * Sets the accelerator of a MenuItem.","lastModifiedDate":"2016-12-18"},{"lineNumber":88,"author":{"gitId":"-"},"content":"     * @param keyCombination the KeyCombination value of the accelerator","lastModifiedDate":"2016-12-18"},{"lineNumber":89,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-12-18"},{"lineNumber":90,"author":{"gitId":"-"},"content":"    private void setAccelerator(MenuItem menuItem, KeyCombination keyCombination) {","lastModifiedDate":"2016-12-18"},{"lineNumber":91,"author":{"gitId":"-"},"content":"        menuItem.setAccelerator(keyCombination);","lastModifiedDate":"2016-12-18"},{"lineNumber":92,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-18"},{"lineNumber":93,"author":{"gitId":"-"},"content":"        /*","lastModifiedDate":"2016-12-18"},{"lineNumber":94,"author":{"gitId":"-"},"content":"         * TODO: the code below can be removed once the bug reported here","lastModifiedDate":"2016-12-18"},{"lineNumber":95,"author":{"gitId":"-"},"content":"         * https://bugs.openjdk.java.net/browse/JDK-8131666","lastModifiedDate":"2016-12-18"},{"lineNumber":96,"author":{"gitId":"-"},"content":"         * is fixed in later version of SDK.","lastModifiedDate":"2016-12-18"},{"lineNumber":97,"author":{"gitId":"-"},"content":"         *","lastModifiedDate":"2016-12-18"},{"lineNumber":98,"author":{"gitId":"-"},"content":"         * According to the bug report, TextInputControl (TextField, TextArea) will","lastModifiedDate":"2016-12-18"},{"lineNumber":99,"author":{"gitId":"-"},"content":"         * consume function-key events. Because CommandBox contains a TextField, and","lastModifiedDate":"2016-12-18"},{"lineNumber":100,"author":{"gitId":"-"},"content":"         * ResultDisplay contains a TextArea, thus some accelerators (e.g F1) will","lastModifiedDate":"2016-12-18"},{"lineNumber":101,"author":{"gitId":"-"},"content":"         * not work when the focus is in them because the key event is consumed by","lastModifiedDate":"2016-12-18"},{"lineNumber":102,"author":{"gitId":"-"},"content":"         * the TextInputControl(s).","lastModifiedDate":"2016-12-18"},{"lineNumber":103,"author":{"gitId":"-"},"content":"         *","lastModifiedDate":"2016-12-18"},{"lineNumber":104,"author":{"gitId":"-"},"content":"         * For now, we add following event filter to capture such key events and open","lastModifiedDate":"2016-12-18"},{"lineNumber":105,"author":{"gitId":"-"},"content":"         * help window purposely so to support accelerators even when focus is","lastModifiedDate":"2016-12-18"},{"lineNumber":106,"author":{"gitId":"-"},"content":"         * in CommandBox or ResultDisplay.","lastModifiedDate":"2016-12-18"},{"lineNumber":107,"author":{"gitId":"-"},"content":"         */","lastModifiedDate":"2016-12-18"},{"lineNumber":108,"author":{"gitId":"-"},"content":"        getRoot().addEventFilter(KeyEvent.KEY_PRESSED, event -\u003e {","lastModifiedDate":"2016-12-24"},{"lineNumber":109,"author":{"gitId":"-"},"content":"            if (event.getTarget() instanceof TextInputControl \u0026\u0026 keyCombination.match(event)) {","lastModifiedDate":"2016-12-18"},{"lineNumber":110,"author":{"gitId":"-"},"content":"                menuItem.getOnAction().handle(new ActionEvent());","lastModifiedDate":"2016-12-18"},{"lineNumber":111,"author":{"gitId":"-"},"content":"                event.consume();","lastModifiedDate":"2016-12-18"},{"lineNumber":112,"author":{"gitId":"-"},"content":"            }","lastModifiedDate":"2016-12-18"},{"lineNumber":113,"author":{"gitId":"-"},"content":"        });","lastModifiedDate":"2016-12-18"},{"lineNumber":114,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-21"},{"lineNumber":115,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":116,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-08-16"},{"lineNumber":117,"author":{"gitId":"-"},"content":"     * Fills up all the placeholders of this window.","lastModifiedDate":"2017-08-16"},{"lineNumber":118,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-08-16"},{"lineNumber":119,"author":{"gitId":"-"},"content":"    void fillInnerParts() {","lastModifiedDate":"2016-09-21"},{"lineNumber":120,"author":{"gitId":"WJunHong"},"content":"        clientListPanel \u003d new ClientListPanel(logic.getFilteredBuyerList());","lastModifiedDate":"2022-03-24"},{"lineNumber":121,"author":{"gitId":"cwnm"},"content":"        clientListPanelPlaceholder.getChildren().add(clientListPanel.getRoot());","lastModifiedDate":"2022-03-04"},{"lineNumber":122,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-14"},{"lineNumber":123,"author":{"gitId":"Jacky142857"},"content":"        sellerListPanel \u003d new SellerListPanel(logic.getFilteredSellerList());","lastModifiedDate":"2022-03-19"},{"lineNumber":124,"author":{"gitId":"Jacky142857"},"content":"        sellerListPanelPlaceholder.getChildren().add(sellerListPanel.getRoot());","lastModifiedDate":"2022-03-19"},{"lineNumber":125,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-03-19"},{"lineNumber":126,"author":{"gitId":"-"},"content":"        resultDisplay \u003d new ResultDisplay();","lastModifiedDate":"2018-12-09"},{"lineNumber":127,"author":{"gitId":"-"},"content":"        resultDisplayPlaceholder.getChildren().add(resultDisplay.getRoot());","lastModifiedDate":"2017-06-14"},{"lineNumber":128,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-14"},{"lineNumber":129,"author":{"gitId":"-"},"content":"        StatusBarFooter statusBarFooter \u003d new StatusBarFooter(logic.getAddressBookFilePath());","lastModifiedDate":"2019-01-25"},{"lineNumber":130,"author":{"gitId":"-"},"content":"        statusbarPlaceholder.getChildren().add(statusBarFooter.getRoot());","lastModifiedDate":"2017-06-14"},{"lineNumber":131,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-14"},{"lineNumber":132,"author":{"gitId":"-"},"content":"        CommandBox commandBox \u003d new CommandBox(this::executeCommand);","lastModifiedDate":"2019-01-25"},{"lineNumber":133,"author":{"gitId":"-"},"content":"        commandBoxPlaceholder.getChildren().add(commandBox.getRoot());","lastModifiedDate":"2017-06-14"},{"lineNumber":134,"author":{"gitId":"Jacky142857"},"content":"","lastModifiedDate":"2022-03-17"},{"lineNumber":135,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-18"},{"lineNumber":136,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":137,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-18"},{"lineNumber":138,"author":{"gitId":"-"},"content":"     * Sets the default size based on {@code guiSettings}.","lastModifiedDate":"2018-11-27"},{"lineNumber":139,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-18"},{"lineNumber":140,"author":{"gitId":"-"},"content":"    private void setWindowDefaultSize(GuiSettings guiSettings) {","lastModifiedDate":"2018-11-27"},{"lineNumber":141,"author":{"gitId":"-"},"content":"        primaryStage.setHeight(guiSettings.getWindowHeight());","lastModifiedDate":"2018-11-27"},{"lineNumber":142,"author":{"gitId":"-"},"content":"        primaryStage.setWidth(guiSettings.getWindowWidth());","lastModifiedDate":"2018-11-27"},{"lineNumber":143,"author":{"gitId":"-"},"content":"        if (guiSettings.getWindowCoordinates() !\u003d null) {","lastModifiedDate":"2018-11-27"},{"lineNumber":144,"author":{"gitId":"-"},"content":"            primaryStage.setX(guiSettings.getWindowCoordinates().getX());","lastModifiedDate":"2018-11-27"},{"lineNumber":145,"author":{"gitId":"-"},"content":"            primaryStage.setY(guiSettings.getWindowCoordinates().getY());","lastModifiedDate":"2018-11-27"},{"lineNumber":146,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-08-18"},{"lineNumber":147,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-18"},{"lineNumber":148,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":149,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-08-16"},{"lineNumber":150,"author":{"gitId":"-"},"content":"     * Opens the help window or focuses on it if it\u0027s already opened.","lastModifiedDate":"2018-03-15"},{"lineNumber":151,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-08-16"},{"lineNumber":152,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-08-18"},{"lineNumber":153,"author":{"gitId":"-"},"content":"    public void handleHelp() {","lastModifiedDate":"2016-08-31"},{"lineNumber":154,"author":{"gitId":"-"},"content":"        if (!helpWindow.isShowing()) {","lastModifiedDate":"2018-03-15"},{"lineNumber":155,"author":{"gitId":"-"},"content":"            helpWindow.show();","lastModifiedDate":"2016-08-18"},{"lineNumber":156,"author":{"gitId":"-"},"content":"        } else {","lastModifiedDate":"2018-03-15"},{"lineNumber":157,"author":{"gitId":"-"},"content":"            helpWindow.focus();","lastModifiedDate":"2018-03-15"},{"lineNumber":158,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-03-15"},{"lineNumber":159,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-18"},{"lineNumber":160,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":161,"author":{"gitId":"-"},"content":"    void show() {","lastModifiedDate":"2016-10-15"},{"lineNumber":162,"author":{"gitId":"-"},"content":"        primaryStage.show();","lastModifiedDate":"2016-08-18"},{"lineNumber":163,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-18"},{"lineNumber":164,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":165,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-18"},{"lineNumber":166,"author":{"gitId":"-"},"content":"     * Closes the application.","lastModifiedDate":"2016-08-18"},{"lineNumber":167,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-18"},{"lineNumber":168,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-08-18"},{"lineNumber":169,"author":{"gitId":"-"},"content":"    private void handleExit() {","lastModifiedDate":"2016-08-18"},{"lineNumber":170,"author":{"gitId":"-"},"content":"        GuiSettings guiSettings \u003d new GuiSettings(primaryStage.getWidth(), primaryStage.getHeight(),","lastModifiedDate":"2018-12-08"},{"lineNumber":171,"author":{"gitId":"-"},"content":"                (int) primaryStage.getX(), (int) primaryStage.getY());","lastModifiedDate":"2018-12-08"},{"lineNumber":172,"author":{"gitId":"-"},"content":"        logic.setGuiSettings(guiSettings);","lastModifiedDate":"2018-12-08"},{"lineNumber":173,"author":{"gitId":"-"},"content":"        helpWindow.hide();","lastModifiedDate":"2018-12-08"},{"lineNumber":174,"author":{"gitId":"-"},"content":"        primaryStage.hide();","lastModifiedDate":"2018-12-08"},{"lineNumber":175,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-18"},{"lineNumber":176,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-25"},{"lineNumber":177,"author":{"gitId":"cwnm"},"content":"    public ClientListPanel getclientListPanel() {","lastModifiedDate":"2022-03-04"},{"lineNumber":178,"author":{"gitId":"cwnm"},"content":"        return clientListPanel;","lastModifiedDate":"2022-03-04"},{"lineNumber":179,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-25"},{"lineNumber":180,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":181,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-12-09"},{"lineNumber":182,"author":{"gitId":"-"},"content":"     * Executes the command and returns the result.","lastModifiedDate":"2018-12-09"},{"lineNumber":183,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2018-12-09"},{"lineNumber":184,"author":{"gitId":"-"},"content":"     * @see seedu.address.logic.Logic#execute(String)","lastModifiedDate":"2018-12-09"},{"lineNumber":185,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-12-09"},{"lineNumber":186,"author":{"gitId":"-"},"content":"    private CommandResult executeCommand(String commandText) throws CommandException, ParseException {","lastModifiedDate":"2018-12-09"},{"lineNumber":187,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2018-12-09"},{"lineNumber":188,"author":{"gitId":"-"},"content":"            CommandResult commandResult \u003d logic.execute(commandText);","lastModifiedDate":"2018-12-09"},{"lineNumber":189,"author":{"gitId":"-"},"content":"            logger.info(\"Result: \" + commandResult.getFeedbackToUser());","lastModifiedDate":"2018-12-09"},{"lineNumber":190,"author":{"gitId":"-"},"content":"            resultDisplay.setFeedbackToUser(commandResult.getFeedbackToUser());","lastModifiedDate":"2018-12-09"},{"lineNumber":191,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":192,"author":{"gitId":"-"},"content":"            if (commandResult.isShowHelp()) {","lastModifiedDate":"2018-12-09"},{"lineNumber":193,"author":{"gitId":"-"},"content":"                handleHelp();","lastModifiedDate":"2018-12-09"},{"lineNumber":194,"author":{"gitId":"-"},"content":"            }","lastModifiedDate":"2018-12-09"},{"lineNumber":195,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":196,"author":{"gitId":"-"},"content":"            if (commandResult.isExit()) {","lastModifiedDate":"2018-12-09"},{"lineNumber":197,"author":{"gitId":"-"},"content":"                handleExit();","lastModifiedDate":"2018-12-09"},{"lineNumber":198,"author":{"gitId":"-"},"content":"            }","lastModifiedDate":"2018-12-09"},{"lineNumber":199,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":200,"author":{"gitId":"-"},"content":"            return commandResult;","lastModifiedDate":"2018-12-09"},{"lineNumber":201,"author":{"gitId":"-"},"content":"        } catch (CommandException | ParseException e) {","lastModifiedDate":"2018-12-09"},{"lineNumber":202,"author":{"gitId":"-"},"content":"            logger.info(\"Invalid command: \" + commandText);","lastModifiedDate":"2018-12-09"},{"lineNumber":203,"author":{"gitId":"-"},"content":"            resultDisplay.setFeedbackToUser(e.getMessage());","lastModifiedDate":"2018-12-09"},{"lineNumber":204,"author":{"gitId":"-"},"content":"            throw e;","lastModifiedDate":"2018-12-09"},{"lineNumber":205,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-12-09"},{"lineNumber":206,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-12-09"},{"lineNumber":207,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-18"},{"lineNumber":208,"author":{"gitId":"Jacky142857"},"content":"","lastModifiedDate":"2022-03-19"}],"authorContributionMap":{"WJunHong":1,"Jacky142857":11,"-":191,"cwnm":5}},{"path":"src/main/java/seedu/address/ui/PropertyToSellList.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"chuashihong"},"content":"//package seedu.address.ui;","lastModifiedDate":"2022-03-24"},{"lineNumber":2,"author":{"gitId":"chuashihong"},"content":"//","lastModifiedDate":"2022-03-24"},{"lineNumber":3,"author":{"gitId":"chuashihong"},"content":"//import java.util.Comparator;","lastModifiedDate":"2022-03-24"},{"lineNumber":4,"author":{"gitId":"chuashihong"},"content":"//","lastModifiedDate":"2022-03-24"},{"lineNumber":5,"author":{"gitId":"chuashihong"},"content":"//import javafx.fxml.FXML;","lastModifiedDate":"2022-03-24"},{"lineNumber":6,"author":{"gitId":"chuashihong"},"content":"//import javafx.scene.control.Label;","lastModifiedDate":"2022-03-24"},{"lineNumber":7,"author":{"gitId":"chuashihong"},"content":"//import javafx.scene.layout.FlowPane;","lastModifiedDate":"2022-03-24"},{"lineNumber":8,"author":{"gitId":"chuashihong"},"content":"//import javafx.scene.layout.HBox;","lastModifiedDate":"2022-03-24"},{"lineNumber":9,"author":{"gitId":"chuashihong"},"content":"//import javafx.scene.layout.Region;","lastModifiedDate":"2022-03-24"},{"lineNumber":10,"author":{"gitId":"chuashihong"},"content":"//import seedu.address.model.client.Client;","lastModifiedDate":"2022-03-24"},{"lineNumber":11,"author":{"gitId":"chuashihong"},"content":"//import seedu.address.model.property.PropertyToSell;","lastModifiedDate":"2022-03-24"},{"lineNumber":12,"author":{"gitId":"chuashihong"},"content":"//","lastModifiedDate":"2022-03-24"},{"lineNumber":13,"author":{"gitId":"chuashihong"},"content":"///**","lastModifiedDate":"2022-03-24"},{"lineNumber":14,"author":{"gitId":"chuashihong"},"content":"// * An UI component that displays information of a {@code client}.","lastModifiedDate":"2022-03-24"},{"lineNumber":15,"author":{"gitId":"chuashihong"},"content":"// */","lastModifiedDate":"2022-03-24"},{"lineNumber":16,"author":{"gitId":"chuashihong"},"content":"//public class PropertyToSellList extends UiPart\u003cRegion\u003e {","lastModifiedDate":"2022-03-24"},{"lineNumber":17,"author":{"gitId":"chuashihong"},"content":"//","lastModifiedDate":"2022-03-24"},{"lineNumber":18,"author":{"gitId":"chuashihong"},"content":"//    private static final String FXML \u003d \"clientListCard.fxml\";","lastModifiedDate":"2022-03-24"},{"lineNumber":19,"author":{"gitId":"chuashihong"},"content":"//","lastModifiedDate":"2022-03-24"},{"lineNumber":20,"author":{"gitId":"chuashihong"},"content":"//    /**","lastModifiedDate":"2022-03-24"},{"lineNumber":21,"author":{"gitId":"chuashihong"},"content":"//     * Note: Certain keywords such as \"location\" and \"resources\" are reserved keywords in JavaFX.","lastModifiedDate":"2022-03-24"},{"lineNumber":22,"author":{"gitId":"chuashihong"},"content":"//     * As a consequence, UI elements\u0027 variable names cannot be set to such keywords","lastModifiedDate":"2022-03-24"},{"lineNumber":23,"author":{"gitId":"chuashihong"},"content":"//     * or an exception will be thrown by JavaFX during runtime.","lastModifiedDate":"2022-03-24"},{"lineNumber":24,"author":{"gitId":"chuashihong"},"content":"//     *","lastModifiedDate":"2022-03-24"},{"lineNumber":25,"author":{"gitId":"chuashihong"},"content":"//     * @see \u003ca href\u003d\"https://github.com/se-edu/addressbook-level4/issues/336\"\u003eThe issue on AddressBook level 4\u003c/a\u003e","lastModifiedDate":"2022-03-24"},{"lineNumber":26,"author":{"gitId":"chuashihong"},"content":"//     */","lastModifiedDate":"2022-03-24"},{"lineNumber":27,"author":{"gitId":"chuashihong"},"content":"//","lastModifiedDate":"2022-03-24"},{"lineNumber":28,"author":{"gitId":"chuashihong"},"content":"//    public final Client client;","lastModifiedDate":"2022-03-24"},{"lineNumber":29,"author":{"gitId":"chuashihong"},"content":"//","lastModifiedDate":"2022-03-24"},{"lineNumber":30,"author":{"gitId":"chuashihong"},"content":"//    @FXML","lastModifiedDate":"2022-03-24"},{"lineNumber":31,"author":{"gitId":"chuashihong"},"content":"//    private Label houseType;","lastModifiedDate":"2022-03-24"},{"lineNumber":32,"author":{"gitId":"chuashihong"},"content":"//    @FXML","lastModifiedDate":"2022-03-24"},{"lineNumber":33,"author":{"gitId":"chuashihong"},"content":"//    private Label price;","lastModifiedDate":"2022-03-24"},{"lineNumber":34,"author":{"gitId":"chuashihong"},"content":"//    @FXML","lastModifiedDate":"2022-03-24"},{"lineNumber":35,"author":{"gitId":"chuashihong"},"content":"//    private Label location;","lastModifiedDate":"2022-03-24"},{"lineNumber":36,"author":{"gitId":"chuashihong"},"content":"//    @FXML","lastModifiedDate":"2022-03-24"},{"lineNumber":37,"author":{"gitId":"chuashihong"},"content":"//    private FlowPane tags;","lastModifiedDate":"2022-03-24"},{"lineNumber":38,"author":{"gitId":"chuashihong"},"content":"//    @FXML","lastModifiedDate":"2022-03-24"},{"lineNumber":39,"author":{"gitId":"chuashihong"},"content":"//    private Label appointment;","lastModifiedDate":"2022-03-24"},{"lineNumber":40,"author":{"gitId":"chuashihong"},"content":"//","lastModifiedDate":"2022-03-24"},{"lineNumber":41,"author":{"gitId":"chuashihong"},"content":"//    /**","lastModifiedDate":"2022-03-24"},{"lineNumber":42,"author":{"gitId":"chuashihong"},"content":"//     * Creates a {@code PropertyToSellList} with the given {@code Property} and index to display.","lastModifiedDate":"2022-03-24"},{"lineNumber":43,"author":{"gitId":"chuashihong"},"content":"//     */","lastModifiedDate":"2022-03-24"},{"lineNumber":44,"author":{"gitId":"chuashihong"},"content":"//    public PropertyToSellList(PropertyToSell propertyToSell) {","lastModifiedDate":"2022-03-24"},{"lineNumber":45,"author":{"gitId":"chuashihong"},"content":"//        super(FXML);","lastModifiedDate":"2022-03-24"},{"lineNumber":46,"author":{"gitId":"chuashihong"},"content":"//        this.client \u003d client;","lastModifiedDate":"2022-03-24"},{"lineNumber":47,"author":{"gitId":"chuashihong"},"content":"//        id.setText(displayedIndex + \". \");","lastModifiedDate":"2022-03-24"},{"lineNumber":48,"author":{"gitId":"chuashihong"},"content":"//        name.setText(client.getName().fullName);","lastModifiedDate":"2022-03-24"},{"lineNumber":49,"author":{"gitId":"chuashihong"},"content":"//        phone.setText(client.getPhone().value);","lastModifiedDate":"2022-03-24"},{"lineNumber":50,"author":{"gitId":"chuashihong"},"content":"//        appointment.setText(client.getAppointment().getAppointmentDetail());","lastModifiedDate":"2022-03-24"},{"lineNumber":51,"author":{"gitId":"chuashihong"},"content":"//        client.getTags().stream()","lastModifiedDate":"2022-03-24"},{"lineNumber":52,"author":{"gitId":"chuashihong"},"content":"//                .sorted(Comparator.comparing(tag -\u003e tag.tagName))","lastModifiedDate":"2022-03-24"},{"lineNumber":53,"author":{"gitId":"chuashihong"},"content":"//                .forEach(tag -\u003e tags.getChildren().add(new Label(tag.tagName)));","lastModifiedDate":"2022-03-24"},{"lineNumber":54,"author":{"gitId":"chuashihong"},"content":"//    }","lastModifiedDate":"2022-03-24"},{"lineNumber":55,"author":{"gitId":"chuashihong"},"content":"//","lastModifiedDate":"2022-03-24"},{"lineNumber":56,"author":{"gitId":"chuashihong"},"content":"//    @Override","lastModifiedDate":"2022-03-24"},{"lineNumber":57,"author":{"gitId":"chuashihong"},"content":"//    public boolean equals(Object other) {","lastModifiedDate":"2022-03-24"},{"lineNumber":58,"author":{"gitId":"chuashihong"},"content":"//        // short circuit if same object","lastModifiedDate":"2022-03-24"},{"lineNumber":59,"author":{"gitId":"chuashihong"},"content":"//        if (other \u003d\u003d this) {","lastModifiedDate":"2022-03-24"},{"lineNumber":60,"author":{"gitId":"chuashihong"},"content":"//            return true;","lastModifiedDate":"2022-03-24"},{"lineNumber":61,"author":{"gitId":"chuashihong"},"content":"//        }","lastModifiedDate":"2022-03-24"},{"lineNumber":62,"author":{"gitId":"chuashihong"},"content":"//","lastModifiedDate":"2022-03-24"},{"lineNumber":63,"author":{"gitId":"chuashihong"},"content":"//        // instanceof handles nulls","lastModifiedDate":"2022-03-24"},{"lineNumber":64,"author":{"gitId":"chuashihong"},"content":"//        if (!(other instanceof BuyerCard)) {","lastModifiedDate":"2022-03-27"},{"lineNumber":65,"author":{"gitId":"chuashihong"},"content":"//            return false;","lastModifiedDate":"2022-03-24"},{"lineNumber":66,"author":{"gitId":"chuashihong"},"content":"//        }","lastModifiedDate":"2022-03-24"},{"lineNumber":67,"author":{"gitId":"chuashihong"},"content":"//","lastModifiedDate":"2022-03-24"},{"lineNumber":68,"author":{"gitId":"chuashihong"},"content":"//        // state check","lastModifiedDate":"2022-03-24"},{"lineNumber":69,"author":{"gitId":"chuashihong"},"content":"//        BuyerCard card \u003d (BuyerCard) other;","lastModifiedDate":"2022-03-27"},{"lineNumber":70,"author":{"gitId":"chuashihong"},"content":"//        return id.getText().equals(card.id.getText())","lastModifiedDate":"2022-03-24"},{"lineNumber":71,"author":{"gitId":"chuashihong"},"content":"//                \u0026\u0026 client.equals(card.client);","lastModifiedDate":"2022-03-24"},{"lineNumber":72,"author":{"gitId":"chuashihong"},"content":"//    }","lastModifiedDate":"2022-03-24"},{"lineNumber":73,"author":{"gitId":"chuashihong"},"content":"//}","lastModifiedDate":"2022-03-24"}],"authorContributionMap":{"chuashihong":73}},{"path":"src/main/java/seedu/address/ui/SellerCard.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"Jacky142857"},"content":"package seedu.address.ui;","lastModifiedDate":"2022-03-19"},{"lineNumber":2,"author":{"gitId":"Jacky142857"},"content":"","lastModifiedDate":"2022-03-19"},{"lineNumber":3,"author":{"gitId":"Jacky142857"},"content":"import java.util.Comparator;","lastModifiedDate":"2022-03-19"},{"lineNumber":4,"author":{"gitId":"Jacky142857"},"content":"","lastModifiedDate":"2022-03-19"},{"lineNumber":5,"author":{"gitId":"Jacky142857"},"content":"import javafx.fxml.FXML;","lastModifiedDate":"2022-03-19"},{"lineNumber":6,"author":{"gitId":"Jacky142857"},"content":"import javafx.scene.control.Label;","lastModifiedDate":"2022-03-19"},{"lineNumber":7,"author":{"gitId":"Jacky142857"},"content":"import javafx.scene.layout.FlowPane;","lastModifiedDate":"2022-03-19"},{"lineNumber":8,"author":{"gitId":"Jacky142857"},"content":"import javafx.scene.layout.HBox;","lastModifiedDate":"2022-03-19"},{"lineNumber":9,"author":{"gitId":"Jacky142857"},"content":"import javafx.scene.layout.Region;","lastModifiedDate":"2022-03-19"},{"lineNumber":10,"author":{"gitId":"chuashihong"},"content":"import seedu.address.model.property.NullPropertyToSell;","lastModifiedDate":"2022-03-26"},{"lineNumber":11,"author":{"gitId":"Jacky142857"},"content":"import seedu.address.model.seller.Seller;","lastModifiedDate":"2022-03-19"},{"lineNumber":12,"author":{"gitId":"Jacky142857"},"content":"","lastModifiedDate":"2022-03-19"},{"lineNumber":13,"author":{"gitId":"Jacky142857"},"content":"/**","lastModifiedDate":"2022-03-19"},{"lineNumber":14,"author":{"gitId":"Jacky142857"},"content":" * An UI component that displays information of a {@code client}.","lastModifiedDate":"2022-03-19"},{"lineNumber":15,"author":{"gitId":"Jacky142857"},"content":" */","lastModifiedDate":"2022-03-19"},{"lineNumber":16,"author":{"gitId":"Jacky142857"},"content":"public class SellerCard extends UiPart\u003cRegion\u003e {","lastModifiedDate":"2022-03-19"},{"lineNumber":17,"author":{"gitId":"Jacky142857"},"content":"","lastModifiedDate":"2022-03-19"},{"lineNumber":18,"author":{"gitId":"cwnm"},"content":"    private static final String FXML \u003d \"SellerListCard.fxml\";","lastModifiedDate":"2022-04-01"},{"lineNumber":19,"author":{"gitId":"Jacky142857"},"content":"","lastModifiedDate":"2022-03-19"},{"lineNumber":20,"author":{"gitId":"Jacky142857"},"content":"    /**","lastModifiedDate":"2022-03-19"},{"lineNumber":21,"author":{"gitId":"Jacky142857"},"content":"     * Note: Certain keywords such as \"location\" and \"resources\" are reserved keywords in JavaFX.","lastModifiedDate":"2022-03-19"},{"lineNumber":22,"author":{"gitId":"Jacky142857"},"content":"     * As a consequence, UI elements\u0027 variable names cannot be set to such keywords","lastModifiedDate":"2022-03-19"},{"lineNumber":23,"author":{"gitId":"Jacky142857"},"content":"     * or an exception will be thrown by JavaFX during runtime.","lastModifiedDate":"2022-03-19"},{"lineNumber":24,"author":{"gitId":"Jacky142857"},"content":"     *","lastModifiedDate":"2022-03-19"},{"lineNumber":25,"author":{"gitId":"Jacky142857"},"content":"     * @see \u003ca href\u003d\"https://github.com/se-edu/addressbook-level4/issues/336\"\u003eThe issue on AddressBook level 4\u003c/a\u003e","lastModifiedDate":"2022-03-19"},{"lineNumber":26,"author":{"gitId":"Jacky142857"},"content":"     */","lastModifiedDate":"2022-03-19"},{"lineNumber":27,"author":{"gitId":"Jacky142857"},"content":"","lastModifiedDate":"2022-03-19"},{"lineNumber":28,"author":{"gitId":"Jacky142857"},"content":"    public final Seller seller;","lastModifiedDate":"2022-03-19"},{"lineNumber":29,"author":{"gitId":"Jacky142857"},"content":"","lastModifiedDate":"2022-03-19"},{"lineNumber":30,"author":{"gitId":"Jacky142857"},"content":"    @FXML","lastModifiedDate":"2022-03-19"},{"lineNumber":31,"author":{"gitId":"Jacky142857"},"content":"    private HBox cardPane;","lastModifiedDate":"2022-03-19"},{"lineNumber":32,"author":{"gitId":"Jacky142857"},"content":"    @FXML","lastModifiedDate":"2022-03-19"},{"lineNumber":33,"author":{"gitId":"Jacky142857"},"content":"    private Label name;","lastModifiedDate":"2022-03-19"},{"lineNumber":34,"author":{"gitId":"Jacky142857"},"content":"    @FXML","lastModifiedDate":"2022-03-19"},{"lineNumber":35,"author":{"gitId":"Jacky142857"},"content":"    private Label id;","lastModifiedDate":"2022-03-19"},{"lineNumber":36,"author":{"gitId":"Jacky142857"},"content":"    @FXML","lastModifiedDate":"2022-03-19"},{"lineNumber":37,"author":{"gitId":"Jacky142857"},"content":"    private Label phone;","lastModifiedDate":"2022-03-19"},{"lineNumber":38,"author":{"gitId":"Jacky142857"},"content":"    @FXML","lastModifiedDate":"2022-03-19"},{"lineNumber":39,"author":{"gitId":"Jacky142857"},"content":"    private FlowPane tags;","lastModifiedDate":"2022-03-19"},{"lineNumber":40,"author":{"gitId":"Jacky142857"},"content":"    @FXML","lastModifiedDate":"2022-03-19"},{"lineNumber":41,"author":{"gitId":"Jacky142857"},"content":"    private Label appointment;","lastModifiedDate":"2022-03-19"},{"lineNumber":42,"author":{"gitId":"chuashihong"},"content":"    @FXML","lastModifiedDate":"2022-03-26"},{"lineNumber":43,"author":{"gitId":"chuashihong"},"content":"    private Label propertyType;","lastModifiedDate":"2022-03-26"},{"lineNumber":44,"author":{"gitId":"chuashihong"},"content":"    @FXML","lastModifiedDate":"2022-03-26"},{"lineNumber":45,"author":{"gitId":"chuashihong"},"content":"    private Label propertyLocation;","lastModifiedDate":"2022-03-26"},{"lineNumber":46,"author":{"gitId":"chuashihong"},"content":"    @FXML","lastModifiedDate":"2022-03-26"},{"lineNumber":47,"author":{"gitId":"chuashihong"},"content":"    private Label propertyLowerPrice;","lastModifiedDate":"2022-03-26"},{"lineNumber":48,"author":{"gitId":"chuashihong"},"content":"    @FXML","lastModifiedDate":"2022-03-26"},{"lineNumber":49,"author":{"gitId":"chuashihong"},"content":"    private Label propertyUpperPrice;","lastModifiedDate":"2022-03-26"},{"lineNumber":50,"author":{"gitId":"chuashihong"},"content":"    @FXML","lastModifiedDate":"2022-03-26"},{"lineNumber":51,"author":{"gitId":"chuashihong"},"content":"    private Label propertyAddress;","lastModifiedDate":"2022-03-26"},{"lineNumber":52,"author":{"gitId":"Jacky142857"},"content":"","lastModifiedDate":"2022-03-19"},{"lineNumber":53,"author":{"gitId":"Jacky142857"},"content":"    /**","lastModifiedDate":"2022-03-19"},{"lineNumber":54,"author":{"gitId":"Jacky142857"},"content":"     * Creates a {@code PersonCode} with the given {@code Person} and index to display.","lastModifiedDate":"2022-03-19"},{"lineNumber":55,"author":{"gitId":"Jacky142857"},"content":"     */","lastModifiedDate":"2022-03-19"},{"lineNumber":56,"author":{"gitId":"Jacky142857"},"content":"    public SellerCard(Seller seller, int displayedIndex) {","lastModifiedDate":"2022-03-19"},{"lineNumber":57,"author":{"gitId":"Jacky142857"},"content":"        super(FXML);","lastModifiedDate":"2022-03-19"},{"lineNumber":58,"author":{"gitId":"Jacky142857"},"content":"        this.seller \u003d seller;","lastModifiedDate":"2022-03-19"},{"lineNumber":59,"author":{"gitId":"Jacky142857"},"content":"        id.setText(displayedIndex + \". \");","lastModifiedDate":"2022-03-19"},{"lineNumber":60,"author":{"gitId":"Jacky142857"},"content":"        name.setText(seller.getName().fullName);","lastModifiedDate":"2022-03-19"},{"lineNumber":61,"author":{"gitId":"Jacky142857"},"content":"        phone.setText(seller.getPhone().value);","lastModifiedDate":"2022-03-19"},{"lineNumber":62,"author":{"gitId":"Jacky142857"},"content":"        appointment.setText(seller.getAppointment().getAppointmentDetail());","lastModifiedDate":"2022-03-19"},{"lineNumber":63,"author":{"gitId":"Jacky142857"},"content":"        seller.getTags().stream()","lastModifiedDate":"2022-03-19"},{"lineNumber":64,"author":{"gitId":"Jacky142857"},"content":"                .sorted(Comparator.comparing(tag -\u003e tag.tagName))","lastModifiedDate":"2022-03-19"},{"lineNumber":65,"author":{"gitId":"Jacky142857"},"content":"                .forEach(tag -\u003e tags.getChildren().add(new Label(tag.tagName)));","lastModifiedDate":"2022-03-19"},{"lineNumber":66,"author":{"gitId":"chuashihong"},"content":"        String houseType \u003d seller.getPropertyToSell().getHouse().getHouseTypeToString();","lastModifiedDate":"2022-03-27"},{"lineNumber":67,"author":{"gitId":"chuashihong"},"content":"        String houseLocation \u003d seller.getPropertyToSell().getHouse().getLocationToString();","lastModifiedDate":"2022-03-27"},{"lineNumber":68,"author":{"gitId":"chuashihong"},"content":"        String houseLowerPrice \u003d seller.getPropertyToSell().getPriceRange().getLowerToString();","lastModifiedDate":"2022-03-27"},{"lineNumber":69,"author":{"gitId":"chuashihong"},"content":"        String houseUpperPrice \u003d seller.getPropertyToSell().getPriceRange().getUpperToString();","lastModifiedDate":"2022-03-27"},{"lineNumber":70,"author":{"gitId":"WJunHong"},"content":"        String houseAddress \u003d seller.getPropertyToSell().getAddress().toString();","lastModifiedDate":"2022-03-28"},{"lineNumber":71,"author":{"gitId":"WJunHong"},"content":"        if (seller.getPropertyToSell() instanceof NullPropertyToSell) {","lastModifiedDate":"2022-03-28"},{"lineNumber":72,"author":{"gitId":"janald99"},"content":"            propertyType.setText(\"no property added yet\");","lastModifiedDate":"2022-04-06"},{"lineNumber":73,"author":{"gitId":"janald99"},"content":"            propertyLocation.setText(\"-\");","lastModifiedDate":"2022-04-06"},{"lineNumber":74,"author":{"gitId":"janald99"},"content":"            propertyAddress.setText(\"-\");","lastModifiedDate":"2022-04-06"},{"lineNumber":75,"author":{"gitId":"WJunHong"},"content":"            propertyLowerPrice.setText(\"\");","lastModifiedDate":"2022-03-28"},{"lineNumber":76,"author":{"gitId":"chuashihong"},"content":"        } else {","lastModifiedDate":"2022-03-27"},{"lineNumber":77,"author":{"gitId":"chuashihong"},"content":"            propertyType.setText(houseType);","lastModifiedDate":"2022-03-27"},{"lineNumber":78,"author":{"gitId":"chuashihong"},"content":"            propertyLocation.setText(houseLocation);","lastModifiedDate":"2022-03-27"},{"lineNumber":79,"author":{"gitId":"WJunHong"},"content":"            propertyAddress.setText(houseAddress);","lastModifiedDate":"2022-03-28"},{"lineNumber":80,"author":{"gitId":"chuashihong"},"content":"            propertyLowerPrice.setText(houseLowerPrice);","lastModifiedDate":"2022-03-27"},{"lineNumber":81,"author":{"gitId":"chuashihong"},"content":"            propertyUpperPrice.setText(houseUpperPrice);","lastModifiedDate":"2022-03-27"},{"lineNumber":82,"author":{"gitId":"chuashihong"},"content":"        }","lastModifiedDate":"2022-03-26"},{"lineNumber":83,"author":{"gitId":"Jacky142857"},"content":"    }","lastModifiedDate":"2022-03-19"},{"lineNumber":84,"author":{"gitId":"Jacky142857"},"content":"","lastModifiedDate":"2022-03-19"},{"lineNumber":85,"author":{"gitId":"Jacky142857"},"content":"    @Override","lastModifiedDate":"2022-03-19"},{"lineNumber":86,"author":{"gitId":"Jacky142857"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2022-03-19"},{"lineNumber":87,"author":{"gitId":"Jacky142857"},"content":"        // short circuit if same object","lastModifiedDate":"2022-03-19"},{"lineNumber":88,"author":{"gitId":"Jacky142857"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2022-03-19"},{"lineNumber":89,"author":{"gitId":"Jacky142857"},"content":"            return true;","lastModifiedDate":"2022-03-19"},{"lineNumber":90,"author":{"gitId":"Jacky142857"},"content":"        }","lastModifiedDate":"2022-03-19"},{"lineNumber":91,"author":{"gitId":"Jacky142857"},"content":"","lastModifiedDate":"2022-03-19"},{"lineNumber":92,"author":{"gitId":"Jacky142857"},"content":"        // instanceof handles nulls","lastModifiedDate":"2022-03-19"},{"lineNumber":93,"author":{"gitId":"chuashihong"},"content":"        if (!(other instanceof BuyerCard)) {","lastModifiedDate":"2022-03-27"},{"lineNumber":94,"author":{"gitId":"Jacky142857"},"content":"            return false;","lastModifiedDate":"2022-03-19"},{"lineNumber":95,"author":{"gitId":"Jacky142857"},"content":"        }","lastModifiedDate":"2022-03-19"},{"lineNumber":96,"author":{"gitId":"Jacky142857"},"content":"","lastModifiedDate":"2022-03-19"},{"lineNumber":97,"author":{"gitId":"Jacky142857"},"content":"        // state check","lastModifiedDate":"2022-03-19"},{"lineNumber":98,"author":{"gitId":"Jacky142857"},"content":"        SellerCard card \u003d (SellerCard) other;","lastModifiedDate":"2022-03-19"},{"lineNumber":99,"author":{"gitId":"Jacky142857"},"content":"        return id.getText().equals(card.id.getText())","lastModifiedDate":"2022-03-19"},{"lineNumber":100,"author":{"gitId":"Jacky142857"},"content":"                \u0026\u0026 seller.equals(card.seller);","lastModifiedDate":"2022-03-19"},{"lineNumber":101,"author":{"gitId":"Jacky142857"},"content":"    }","lastModifiedDate":"2022-03-19"},{"lineNumber":102,"author":{"gitId":"Jacky142857"},"content":"}","lastModifiedDate":"2022-03-19"},{"lineNumber":103,"author":{"gitId":"Jacky142857"},"content":"","lastModifiedDate":"2022-03-19"}],"authorContributionMap":{"janald99":3,"WJunHong":4,"Jacky142857":73,"cwnm":1,"chuashihong":22}},{"path":"src/main/java/seedu/address/ui/SellerListPanel.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"Jacky142857"},"content":"package seedu.address.ui;","lastModifiedDate":"2022-03-19"},{"lineNumber":2,"author":{"gitId":"Jacky142857"},"content":"","lastModifiedDate":"2022-03-19"},{"lineNumber":3,"author":{"gitId":"Jacky142857"},"content":"import java.util.logging.Logger;","lastModifiedDate":"2022-03-19"},{"lineNumber":4,"author":{"gitId":"Jacky142857"},"content":"","lastModifiedDate":"2022-03-19"},{"lineNumber":5,"author":{"gitId":"Jacky142857"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2022-03-19"},{"lineNumber":6,"author":{"gitId":"Jacky142857"},"content":"import javafx.fxml.FXML;","lastModifiedDate":"2022-03-19"},{"lineNumber":7,"author":{"gitId":"Jacky142857"},"content":"import javafx.scene.control.ListCell;","lastModifiedDate":"2022-03-19"},{"lineNumber":8,"author":{"gitId":"Jacky142857"},"content":"import javafx.scene.control.ListView;","lastModifiedDate":"2022-03-19"},{"lineNumber":9,"author":{"gitId":"Jacky142857"},"content":"import javafx.scene.layout.Region;","lastModifiedDate":"2022-03-19"},{"lineNumber":10,"author":{"gitId":"Jacky142857"},"content":"import seedu.address.commons.core.LogsCenter;","lastModifiedDate":"2022-03-19"},{"lineNumber":11,"author":{"gitId":"Jacky142857"},"content":"import seedu.address.model.seller.Seller;","lastModifiedDate":"2022-03-19"},{"lineNumber":12,"author":{"gitId":"Jacky142857"},"content":"","lastModifiedDate":"2022-03-19"},{"lineNumber":13,"author":{"gitId":"Jacky142857"},"content":"/**","lastModifiedDate":"2022-03-19"},{"lineNumber":14,"author":{"gitId":"Jacky142857"},"content":" * Panel containing the list of clients.","lastModifiedDate":"2022-03-19"},{"lineNumber":15,"author":{"gitId":"Jacky142857"},"content":" */","lastModifiedDate":"2022-03-19"},{"lineNumber":16,"author":{"gitId":"Jacky142857"},"content":"public class SellerListPanel extends UiPart\u003cRegion\u003e {","lastModifiedDate":"2022-03-19"},{"lineNumber":17,"author":{"gitId":"cwnm"},"content":"    private static final String FXML \u003d \"SellerListPanel.fxml\";","lastModifiedDate":"2022-04-01"},{"lineNumber":18,"author":{"gitId":"Jacky142857"},"content":"    private final Logger logger \u003d LogsCenter.getLogger(SellerListPanel.class);","lastModifiedDate":"2022-03-19"},{"lineNumber":19,"author":{"gitId":"Jacky142857"},"content":"","lastModifiedDate":"2022-03-19"},{"lineNumber":20,"author":{"gitId":"Jacky142857"},"content":"    @FXML","lastModifiedDate":"2022-03-19"},{"lineNumber":21,"author":{"gitId":"Jacky142857"},"content":"    private ListView\u003cSeller\u003e sellerListView;","lastModifiedDate":"2022-03-19"},{"lineNumber":22,"author":{"gitId":"Jacky142857"},"content":"","lastModifiedDate":"2022-03-19"},{"lineNumber":23,"author":{"gitId":"Jacky142857"},"content":"    /**","lastModifiedDate":"2022-03-19"},{"lineNumber":24,"author":{"gitId":"Jacky142857"},"content":"     * Creates a {@code clientListPanel} with the given {@code ObservableList}.","lastModifiedDate":"2022-03-19"},{"lineNumber":25,"author":{"gitId":"Jacky142857"},"content":"     */","lastModifiedDate":"2022-03-19"},{"lineNumber":26,"author":{"gitId":"Jacky142857"},"content":"    public SellerListPanel(ObservableList\u003cSeller\u003e sellerList) {","lastModifiedDate":"2022-03-19"},{"lineNumber":27,"author":{"gitId":"Jacky142857"},"content":"        super(FXML);","lastModifiedDate":"2022-03-19"},{"lineNumber":28,"author":{"gitId":"Jacky142857"},"content":"        sellerListView.setItems(sellerList);","lastModifiedDate":"2022-03-19"},{"lineNumber":29,"author":{"gitId":"Jacky142857"},"content":"        sellerListView.setCellFactory(listView -\u003e new SellerListViewCell());","lastModifiedDate":"2022-03-19"},{"lineNumber":30,"author":{"gitId":"Jacky142857"},"content":"    }","lastModifiedDate":"2022-03-19"},{"lineNumber":31,"author":{"gitId":"Jacky142857"},"content":"","lastModifiedDate":"2022-03-19"},{"lineNumber":32,"author":{"gitId":"Jacky142857"},"content":"    /**","lastModifiedDate":"2022-03-19"},{"lineNumber":33,"author":{"gitId":"Jacky142857"},"content":"     * Custom {@code ListCell} that displays the graphics of a {@code client} using a {@code clientCard}.","lastModifiedDate":"2022-03-19"},{"lineNumber":34,"author":{"gitId":"Jacky142857"},"content":"     */","lastModifiedDate":"2022-03-19"},{"lineNumber":35,"author":{"gitId":"Jacky142857"},"content":"    class SellerListViewCell extends ListCell\u003cSeller\u003e {","lastModifiedDate":"2022-03-19"},{"lineNumber":36,"author":{"gitId":"Jacky142857"},"content":"        @Override","lastModifiedDate":"2022-03-19"},{"lineNumber":37,"author":{"gitId":"Jacky142857"},"content":"        protected void updateItem(Seller seller, boolean empty) {","lastModifiedDate":"2022-03-19"},{"lineNumber":38,"author":{"gitId":"Jacky142857"},"content":"            super.updateItem(seller, empty);","lastModifiedDate":"2022-03-19"},{"lineNumber":39,"author":{"gitId":"Jacky142857"},"content":"","lastModifiedDate":"2022-03-19"},{"lineNumber":40,"author":{"gitId":"Jacky142857"},"content":"            if (empty || seller \u003d\u003d null) {","lastModifiedDate":"2022-03-19"},{"lineNumber":41,"author":{"gitId":"Jacky142857"},"content":"                setGraphic(null);","lastModifiedDate":"2022-03-19"},{"lineNumber":42,"author":{"gitId":"Jacky142857"},"content":"                setText(null);","lastModifiedDate":"2022-03-19"},{"lineNumber":43,"author":{"gitId":"Jacky142857"},"content":"            } else {","lastModifiedDate":"2022-03-19"},{"lineNumber":44,"author":{"gitId":"Jacky142857"},"content":"                setGraphic(new SellerCard(seller, getIndex() + 1).getRoot());","lastModifiedDate":"2022-03-19"},{"lineNumber":45,"author":{"gitId":"Jacky142857"},"content":"            }","lastModifiedDate":"2022-03-19"},{"lineNumber":46,"author":{"gitId":"Jacky142857"},"content":"        }","lastModifiedDate":"2022-03-19"},{"lineNumber":47,"author":{"gitId":"Jacky142857"},"content":"    }","lastModifiedDate":"2022-03-19"},{"lineNumber":48,"author":{"gitId":"Jacky142857"},"content":"","lastModifiedDate":"2022-03-19"},{"lineNumber":49,"author":{"gitId":"Jacky142857"},"content":"}","lastModifiedDate":"2022-03-19"}],"authorContributionMap":{"Jacky142857":48,"cwnm":1}},{"path":"src/main/java/seedu/address/ui/StatusBarFooter.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.ui;","lastModifiedDate":"2016-09-22"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-04-21"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import javafx.fxml.FXML;","lastModifiedDate":"2016-08-08"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import javafx.scene.control.Label;","lastModifiedDate":"2018-12-08"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import javafx.scene.layout.Region;","lastModifiedDate":"2016-12-24"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":9,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-08"},{"lineNumber":10,"author":{"gitId":"-"},"content":" * A ui for the status bar that is displayed at the footer of the application.","lastModifiedDate":"2016-09-28"},{"lineNumber":11,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-08"},{"lineNumber":12,"author":{"gitId":"-"},"content":"public class StatusBarFooter extends UiPart\u003cRegion\u003e {","lastModifiedDate":"2016-12-24"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-14"},{"lineNumber":14,"author":{"gitId":"-"},"content":"    private static final String FXML \u003d \"StatusBarFooter.fxml\";","lastModifiedDate":"2017-04-01"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-04-01"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-12-10"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    private Label saveLocationStatus;","lastModifiedDate":"2018-12-08"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2020-05-27"},{"lineNumber":20,"author":{"gitId":"-"},"content":"     * Creates a {@code StatusBarFooter} with the given {@code Path}.","lastModifiedDate":"2020-05-27"},{"lineNumber":21,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2020-05-27"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    public StatusBarFooter(Path saveLocation) {","lastModifiedDate":"2019-01-25"},{"lineNumber":23,"author":{"gitId":"-"},"content":"        super(FXML);","lastModifiedDate":"2017-04-01"},{"lineNumber":24,"author":{"gitId":"chuashihong"},"content":"        saveLocationStatus.setText(\"TEST\");","lastModifiedDate":"2022-04-07"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-04-01"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":27,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"}],"authorContributionMap":{"-":26,"chuashihong":1}},{"path":"src/main/resources/view/BuyerListCard.fxml","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":3,"author":{"gitId":"-"},"content":"\u003c?import javafx.geometry.Insets?\u003e","lastModifiedDate":"2016-12-18"},{"lineNumber":4,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.control.Label?\u003e","lastModifiedDate":"2016-12-18"},{"lineNumber":5,"author":{"gitId":"Jacky142857"},"content":"\u003c?import javafx.scene.image.Image?\u003e","lastModifiedDate":"2022-03-17"},{"lineNumber":6,"author":{"gitId":"Jacky142857"},"content":"\u003c?import javafx.scene.image.ImageView?\u003e","lastModifiedDate":"2022-03-17"},{"lineNumber":7,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.layout.ColumnConstraints?\u003e","lastModifiedDate":"2016-12-18"},{"lineNumber":8,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.layout.FlowPane?\u003e","lastModifiedDate":"2016-12-18"},{"lineNumber":9,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.layout.GridPane?\u003e","lastModifiedDate":"2016-12-18"},{"lineNumber":10,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.layout.HBox?\u003e","lastModifiedDate":"2016-12-18"},{"lineNumber":11,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.layout.Region?\u003e","lastModifiedDate":"2017-03-20"},{"lineNumber":12,"author":{"gitId":"Jacky142857"},"content":"\u003c?import javafx.scene.layout.RowConstraints?\u003e","lastModifiedDate":"2022-03-17"},{"lineNumber":13,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.layout.VBox?\u003e","lastModifiedDate":"2016-12-18"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-18"},{"lineNumber":15,"author":{"gitId":"chuashihong"},"content":"\u003cHBox id\u003d\"cardPane\" fx:id\u003d\"cardPane\" style\u003d\"-fx-background-radius: 40;\" xmlns\u003d\"http://javafx.com/javafx/11\" xmlns:fx\u003d\"http://javafx.com/fxml/1\"\u003e","lastModifiedDate":"2022-03-23"},{"lineNumber":16,"author":{"gitId":"-"},"content":"  \u003cGridPane HBox.hgrow\u003d\"ALWAYS\"\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    \u003ccolumnConstraints\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":18,"author":{"gitId":"-"},"content":"      \u003cColumnConstraints hgrow\u003d\"SOMETIMES\" minWidth\u003d\"10\" prefWidth\u003d\"150\" /\u003e","lastModifiedDate":"2017-03-28"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    \u003c/columnConstraints\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    \u003cVBox alignment\u003d\"CENTER_LEFT\" minHeight\u003d\"105\" GridPane.columnIndex\u003d\"0\"\u003e","lastModifiedDate":"2017-03-28"},{"lineNumber":21,"author":{"gitId":"-"},"content":"      \u003cpadding\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":22,"author":{"gitId":"Jacky142857"},"content":"        \u003cInsets bottom\u003d\"5\" left\u003d\"15\" right\u003d\"5\" top\u003d\"5\" /\u003e","lastModifiedDate":"2022-03-17"},{"lineNumber":23,"author":{"gitId":"-"},"content":"      \u003c/padding\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":24,"author":{"gitId":"Jacky142857"},"content":"      \u003cHBox alignment\u003d\"CENTER_LEFT\" spacing\u003d\"5\"\u003e","lastModifiedDate":"2022-03-17"},{"lineNumber":25,"author":{"gitId":"-"},"content":"        \u003cLabel fx:id\u003d\"id\" styleClass\u003d\"cell_big_label\"\u003e","lastModifiedDate":"2017-03-20"},{"lineNumber":26,"author":{"gitId":"-"},"content":"          \u003cminWidth\u003e","lastModifiedDate":"2017-03-20"},{"lineNumber":27,"author":{"gitId":"-"},"content":"            \u003c!-- Ensures that the label text is never truncated --\u003e","lastModifiedDate":"2017-03-20"},{"lineNumber":28,"author":{"gitId":"-"},"content":"            \u003cRegion fx:constant\u003d\"USE_PREF_SIZE\" /\u003e","lastModifiedDate":"2017-03-20"},{"lineNumber":29,"author":{"gitId":"-"},"content":"          \u003c/minWidth\u003e","lastModifiedDate":"2017-03-20"},{"lineNumber":30,"author":{"gitId":"-"},"content":"        \u003c/Label\u003e","lastModifiedDate":"2017-03-20"},{"lineNumber":31,"author":{"gitId":"Jacky142857"},"content":"        \u003cLabel fx:id\u003d\"name\" styleClass\u003d\"cell_big_label\" text\u003d\"\\$first\" /\u003e","lastModifiedDate":"2022-03-17"},{"lineNumber":32,"author":{"gitId":"WJunHong"},"content":"            \u003cpadding\u003e","lastModifiedDate":"2022-03-31"},{"lineNumber":33,"author":{"gitId":"WJunHong"},"content":"               \u003cInsets bottom\u003d\"5.0\" /\u003e","lastModifiedDate":"2022-03-31"},{"lineNumber":34,"author":{"gitId":"WJunHong"},"content":"            \u003c/padding\u003e","lastModifiedDate":"2022-03-31"},{"lineNumber":35,"author":{"gitId":"Jacky142857"},"content":"      \u003c/HBox\u003e","lastModifiedDate":"2022-03-17"},{"lineNumber":36,"author":{"gitId":"WJunHong"},"content":"      \u003cFlowPane fx:id\u003d\"tags\"\u003e","lastModifiedDate":"2022-03-31"},{"lineNumber":37,"author":{"gitId":"WJunHong"},"content":"            \u003cVBox.margin\u003e","lastModifiedDate":"2022-03-31"},{"lineNumber":38,"author":{"gitId":"WJunHong"},"content":"               \u003cInsets bottom\u003d\"5.0\" /\u003e","lastModifiedDate":"2022-03-31"},{"lineNumber":39,"author":{"gitId":"WJunHong"},"content":"            \u003c/VBox.margin\u003e","lastModifiedDate":"2022-03-31"},{"lineNumber":40,"author":{"gitId":"WJunHong"},"content":"         \u003c/FlowPane\u003e","lastModifiedDate":"2022-03-31"},{"lineNumber":41,"author":{"gitId":"Jacky142857"},"content":"         \u003cHBox\u003e","lastModifiedDate":"2022-03-17"},{"lineNumber":42,"author":{"gitId":"Jacky142857"},"content":"            \u003cchildren\u003e","lastModifiedDate":"2022-03-17"},{"lineNumber":43,"author":{"gitId":"WJunHong"},"content":"               \u003cImageView fitHeight\u003d\"13.0\" fitWidth\u003d\"13.0\" opacity\u003d\"0.63\" pickOnBounds\u003d\"true\" preserveRatio\u003d\"true\" HBox.hgrow\u003d\"NEVER\"\u003e","lastModifiedDate":"2022-03-31"},{"lineNumber":44,"author":{"gitId":"Jacky142857"},"content":"                  \u003cimage\u003e","lastModifiedDate":"2022-03-17"},{"lineNumber":45,"author":{"gitId":"Jacky142857"},"content":"                     \u003cImage url\u003d\"@../images/phone.png\" /\u003e","lastModifiedDate":"2022-03-17"},{"lineNumber":46,"author":{"gitId":"Jacky142857"},"content":"                  \u003c/image\u003e","lastModifiedDate":"2022-03-17"},{"lineNumber":47,"author":{"gitId":"WJunHong"},"content":"                  \u003cHBox.margin\u003e","lastModifiedDate":"2022-03-31"},{"lineNumber":48,"author":{"gitId":"WJunHong"},"content":"                     \u003cInsets top\u003d\"2.0\" /\u003e","lastModifiedDate":"2022-03-31"},{"lineNumber":49,"author":{"gitId":"WJunHong"},"content":"                  \u003c/HBox.margin\u003e","lastModifiedDate":"2022-03-31"},{"lineNumber":50,"author":{"gitId":"Jacky142857"},"content":"               \u003c/ImageView\u003e","lastModifiedDate":"2022-03-17"},{"lineNumber":51,"author":{"gitId":"WJunHong"},"content":"            \u003cLabel fx:id\u003d\"phone\" styleClass\u003d\"cell_small_label\" text\u003d\"\\$phone\"\u003e","lastModifiedDate":"2022-03-31"},{"lineNumber":52,"author":{"gitId":"WJunHong"},"content":"                  \u003cpadding\u003e","lastModifiedDate":"2022-03-31"},{"lineNumber":53,"author":{"gitId":"WJunHong"},"content":"                     \u003cInsets left\u003d\"5.0\" /\u003e","lastModifiedDate":"2022-03-31"},{"lineNumber":54,"author":{"gitId":"WJunHong"},"content":"                  \u003c/padding\u003e\u003c/Label\u003e","lastModifiedDate":"2022-03-31"},{"lineNumber":55,"author":{"gitId":"Jacky142857"},"content":"            \u003c/children\u003e","lastModifiedDate":"2022-03-17"},{"lineNumber":56,"author":{"gitId":"WJunHong"},"content":"            \u003cpadding\u003e","lastModifiedDate":"2022-03-31"},{"lineNumber":57,"author":{"gitId":"WJunHong"},"content":"               \u003cInsets bottom\u003d\"5.0\" /\u003e","lastModifiedDate":"2022-03-31"},{"lineNumber":58,"author":{"gitId":"WJunHong"},"content":"            \u003c/padding\u003e","lastModifiedDate":"2022-03-31"},{"lineNumber":59,"author":{"gitId":"-"},"content":"         \u003c/HBox\u003e","lastModifiedDate":"2016-09-03"},{"lineNumber":60,"author":{"gitId":"chuashihong"},"content":"        \u003cHBox\u003e","lastModifiedDate":"2022-03-27"},{"lineNumber":61,"author":{"gitId":"WJunHong"},"content":"            \u003cchildren\u003e","lastModifiedDate":"2022-03-31"},{"lineNumber":62,"author":{"gitId":"WJunHong"},"content":"                \u003cImageView fitHeight\u003d\"17.0\" fitWidth\u003d\"17.0\" opacity\u003d\"0.63\" pickOnBounds\u003d\"true\" preserveRatio\u003d\"true\" scaleX\u003d\"1.1\" scaleY\u003d\"1.1\" HBox.hgrow\u003d\"NEVER\"\u003e","lastModifiedDate":"2022-03-31"},{"lineNumber":63,"author":{"gitId":"WJunHong"},"content":"                    \u003cimage\u003e","lastModifiedDate":"2022-03-31"},{"lineNumber":64,"author":{"gitId":"WJunHong"},"content":"                        \u003cImage url\u003d\"@../images/house.png\" /\u003e","lastModifiedDate":"2022-03-31"},{"lineNumber":65,"author":{"gitId":"WJunHong"},"content":"                    \u003c/image\u003e","lastModifiedDate":"2022-03-31"},{"lineNumber":66,"author":{"gitId":"WJunHong"},"content":"                    \u003cHBox.margin\u003e","lastModifiedDate":"2022-03-31"},{"lineNumber":67,"author":{"gitId":"WJunHong"},"content":"                        \u003cInsets top\u003d\"2.0\" /\u003e","lastModifiedDate":"2022-03-31"},{"lineNumber":68,"author":{"gitId":"WJunHong"},"content":"                    \u003c/HBox.margin\u003e","lastModifiedDate":"2022-03-31"},{"lineNumber":69,"author":{"gitId":"WJunHong"},"content":"                \u003c/ImageView\u003e","lastModifiedDate":"2022-03-31"},{"lineNumber":70,"author":{"gitId":"WJunHong"},"content":"            \u003cLabel text\u003d\"Type: \"\u003e","lastModifiedDate":"2022-03-31"},{"lineNumber":71,"author":{"gitId":"WJunHong"},"content":"                  \u003cpadding\u003e","lastModifiedDate":"2022-03-31"},{"lineNumber":72,"author":{"gitId":"WJunHong"},"content":"                     \u003cInsets left\u003d\"5.0\" top\u003d\"2.0\" /\u003e","lastModifiedDate":"2022-03-31"},{"lineNumber":73,"author":{"gitId":"WJunHong"},"content":"                  \u003c/padding\u003e\u003c/Label\u003e","lastModifiedDate":"2022-03-31"},{"lineNumber":74,"author":{"gitId":"WJunHong"},"content":"            \u003cLabel fx:id\u003d\"propertyType\" styleClass\u003d\"cell_small_label\"\u003e","lastModifiedDate":"2022-03-31"},{"lineNumber":75,"author":{"gitId":"WJunHong"},"content":"                  \u003cpadding\u003e","lastModifiedDate":"2022-03-31"},{"lineNumber":76,"author":{"gitId":"WJunHong"},"content":"                     \u003cInsets top\u003d\"3.0\" /\u003e","lastModifiedDate":"2022-03-31"},{"lineNumber":77,"author":{"gitId":"WJunHong"},"content":"                  \u003c/padding\u003e\u003c/Label\u003e","lastModifiedDate":"2022-03-31"},{"lineNumber":78,"author":{"gitId":"WJunHong"},"content":"            \u003c/children\u003e","lastModifiedDate":"2022-03-31"},{"lineNumber":79,"author":{"gitId":"WJunHong"},"content":"            \u003cpadding\u003e","lastModifiedDate":"2022-03-31"},{"lineNumber":80,"author":{"gitId":"WJunHong"},"content":"               \u003cInsets bottom\u003d\"5.0\" /\u003e","lastModifiedDate":"2022-03-31"},{"lineNumber":81,"author":{"gitId":"WJunHong"},"content":"            \u003c/padding\u003e","lastModifiedDate":"2022-03-31"},{"lineNumber":82,"author":{"gitId":"chuashihong"},"content":"        \u003c/HBox\u003e","lastModifiedDate":"2022-03-27"},{"lineNumber":83,"author":{"gitId":"chuashihong"},"content":"        \u003cHBox\u003e","lastModifiedDate":"2022-03-27"},{"lineNumber":84,"author":{"gitId":"WJunHong"},"content":"            \u003cchildren\u003e","lastModifiedDate":"2022-03-31"},{"lineNumber":85,"author":{"gitId":"WJunHong"},"content":"                \u003cImageView fitHeight\u003d\"17.0\" fitWidth\u003d\"17.0\" opacity\u003d\"0.63\" pickOnBounds\u003d\"true\" preserveRatio\u003d\"true\" HBox.hgrow\u003d\"NEVER\"\u003e","lastModifiedDate":"2022-03-31"},{"lineNumber":86,"author":{"gitId":"WJunHong"},"content":"                    \u003cimage\u003e","lastModifiedDate":"2022-03-31"},{"lineNumber":87,"author":{"gitId":"WJunHong"},"content":"                        \u003cImage url\u003d\"@../images/location.png\" /\u003e","lastModifiedDate":"2022-03-31"},{"lineNumber":88,"author":{"gitId":"WJunHong"},"content":"                    \u003c/image\u003e","lastModifiedDate":"2022-03-31"},{"lineNumber":89,"author":{"gitId":"WJunHong"},"content":"                    \u003cHBox.margin\u003e","lastModifiedDate":"2022-03-31"},{"lineNumber":90,"author":{"gitId":"WJunHong"},"content":"                        \u003cInsets top\u003d\"2.0\" /\u003e","lastModifiedDate":"2022-03-31"},{"lineNumber":91,"author":{"gitId":"WJunHong"},"content":"                    \u003c/HBox.margin\u003e","lastModifiedDate":"2022-03-31"},{"lineNumber":92,"author":{"gitId":"WJunHong"},"content":"                \u003c/ImageView\u003e","lastModifiedDate":"2022-03-31"},{"lineNumber":93,"author":{"gitId":"WJunHong"},"content":"            \u003cLabel text\u003d\"Location: \"\u003e","lastModifiedDate":"2022-03-31"},{"lineNumber":94,"author":{"gitId":"WJunHong"},"content":"                  \u003cpadding\u003e","lastModifiedDate":"2022-03-31"},{"lineNumber":95,"author":{"gitId":"WJunHong"},"content":"                     \u003cInsets left\u003d\"5.0\" top\u003d\"2.0\" /\u003e","lastModifiedDate":"2022-03-31"},{"lineNumber":96,"author":{"gitId":"WJunHong"},"content":"                  \u003c/padding\u003e\u003c/Label\u003e","lastModifiedDate":"2022-03-31"},{"lineNumber":97,"author":{"gitId":"WJunHong"},"content":"            \u003cLabel fx:id\u003d\"propertyLocation\" styleClass\u003d\"cell_small_label\"\u003e","lastModifiedDate":"2022-03-31"},{"lineNumber":98,"author":{"gitId":"WJunHong"},"content":"                  \u003cpadding\u003e","lastModifiedDate":"2022-03-31"},{"lineNumber":99,"author":{"gitId":"WJunHong"},"content":"                     \u003cInsets top\u003d\"3.0\" /\u003e","lastModifiedDate":"2022-03-31"},{"lineNumber":100,"author":{"gitId":"WJunHong"},"content":"                  \u003c/padding\u003e\u003c/Label\u003e","lastModifiedDate":"2022-03-31"},{"lineNumber":101,"author":{"gitId":"WJunHong"},"content":"            \u003c/children\u003e","lastModifiedDate":"2022-03-31"},{"lineNumber":102,"author":{"gitId":"WJunHong"},"content":"            \u003cpadding\u003e","lastModifiedDate":"2022-03-31"},{"lineNumber":103,"author":{"gitId":"WJunHong"},"content":"               \u003cInsets bottom\u003d\"5.0\" /\u003e","lastModifiedDate":"2022-03-31"},{"lineNumber":104,"author":{"gitId":"WJunHong"},"content":"            \u003c/padding\u003e","lastModifiedDate":"2022-03-31"},{"lineNumber":105,"author":{"gitId":"chuashihong"},"content":"        \u003c/HBox\u003e","lastModifiedDate":"2022-03-27"},{"lineNumber":106,"author":{"gitId":"chuashihong"},"content":"        \u003cHBox\u003e","lastModifiedDate":"2022-03-27"},{"lineNumber":107,"author":{"gitId":"WJunHong"},"content":"            \u003cchildren\u003e","lastModifiedDate":"2022-03-31"},{"lineNumber":108,"author":{"gitId":"WJunHong"},"content":"                \u003cImageView fitHeight\u003d\"17.0\" fitWidth\u003d\"17.0\" opacity\u003d\"0.63\" pickOnBounds\u003d\"true\" preserveRatio\u003d\"true\" HBox.hgrow\u003d\"NEVER\"\u003e","lastModifiedDate":"2022-03-31"},{"lineNumber":109,"author":{"gitId":"WJunHong"},"content":"                    \u003cimage\u003e","lastModifiedDate":"2022-03-31"},{"lineNumber":110,"author":{"gitId":"WJunHong"},"content":"                        \u003cImage url\u003d\"@../images/pricerange.png\" /\u003e","lastModifiedDate":"2022-03-31"},{"lineNumber":111,"author":{"gitId":"WJunHong"},"content":"                    \u003c/image\u003e","lastModifiedDate":"2022-03-31"},{"lineNumber":112,"author":{"gitId":"WJunHong"},"content":"                    \u003cHBox.margin\u003e","lastModifiedDate":"2022-03-31"},{"lineNumber":113,"author":{"gitId":"WJunHong"},"content":"                        \u003cInsets top\u003d\"2.0\" /\u003e","lastModifiedDate":"2022-03-31"},{"lineNumber":114,"author":{"gitId":"WJunHong"},"content":"                    \u003c/HBox.margin\u003e","lastModifiedDate":"2022-03-31"},{"lineNumber":115,"author":{"gitId":"WJunHong"},"content":"                \u003c/ImageView\u003e","lastModifiedDate":"2022-03-31"},{"lineNumber":116,"author":{"gitId":"WJunHong"},"content":"            \u003cLabel text\u003d\"Price: ($) \"\u003e","lastModifiedDate":"2022-03-31"},{"lineNumber":117,"author":{"gitId":"WJunHong"},"content":"                  \u003cpadding\u003e","lastModifiedDate":"2022-03-31"},{"lineNumber":118,"author":{"gitId":"WJunHong"},"content":"                     \u003cInsets left\u003d\"5.0\" top\u003d\"2.0\" /\u003e","lastModifiedDate":"2022-03-31"},{"lineNumber":119,"author":{"gitId":"WJunHong"},"content":"                  \u003c/padding\u003e\u003c/Label\u003e","lastModifiedDate":"2022-03-31"},{"lineNumber":120,"author":{"gitId":"WJunHong"},"content":"            \u003cLabel fx:id\u003d\"propertyLowerPrice\" styleClass\u003d\"cell_small_label\"\u003e","lastModifiedDate":"2022-03-31"},{"lineNumber":121,"author":{"gitId":"WJunHong"},"content":"                  \u003cpadding\u003e","lastModifiedDate":"2022-03-31"},{"lineNumber":122,"author":{"gitId":"WJunHong"},"content":"                     \u003cInsets top\u003d\"3.0\" /\u003e","lastModifiedDate":"2022-03-31"},{"lineNumber":123,"author":{"gitId":"WJunHong"},"content":"                  \u003c/padding\u003e\u003c/Label\u003e","lastModifiedDate":"2022-03-31"},{"lineNumber":124,"author":{"gitId":"WJunHong"},"content":"            \u003cLabel text\u003d\" - \"\u003e","lastModifiedDate":"2022-03-31"},{"lineNumber":125,"author":{"gitId":"WJunHong"},"content":"                  \u003cpadding\u003e","lastModifiedDate":"2022-03-31"},{"lineNumber":126,"author":{"gitId":"WJunHong"},"content":"                     \u003cInsets top\u003d\"3.0\" /\u003e","lastModifiedDate":"2022-03-31"},{"lineNumber":127,"author":{"gitId":"WJunHong"},"content":"                  \u003c/padding\u003e\u003c/Label\u003e","lastModifiedDate":"2022-03-31"},{"lineNumber":128,"author":{"gitId":"WJunHong"},"content":"            \u003cLabel fx:id\u003d\"propertyUpperPrice\" styleClass\u003d\"cell_small_label\"\u003e","lastModifiedDate":"2022-03-31"},{"lineNumber":129,"author":{"gitId":"WJunHong"},"content":"                  \u003cpadding\u003e","lastModifiedDate":"2022-03-31"},{"lineNumber":130,"author":{"gitId":"WJunHong"},"content":"                     \u003cInsets top\u003d\"3.0\" /\u003e","lastModifiedDate":"2022-03-31"},{"lineNumber":131,"author":{"gitId":"WJunHong"},"content":"                  \u003c/padding\u003e\u003c/Label\u003e","lastModifiedDate":"2022-03-31"},{"lineNumber":132,"author":{"gitId":"WJunHong"},"content":"            \u003c/children\u003e","lastModifiedDate":"2022-03-31"},{"lineNumber":133,"author":{"gitId":"WJunHong"},"content":"            \u003cpadding\u003e","lastModifiedDate":"2022-03-31"},{"lineNumber":134,"author":{"gitId":"WJunHong"},"content":"               \u003cInsets bottom\u003d\"5.0\" /\u003e","lastModifiedDate":"2022-03-31"},{"lineNumber":135,"author":{"gitId":"WJunHong"},"content":"            \u003c/padding\u003e","lastModifiedDate":"2022-03-31"},{"lineNumber":136,"author":{"gitId":"chuashihong"},"content":"        \u003c/HBox\u003e","lastModifiedDate":"2022-03-27"},{"lineNumber":137,"author":{"gitId":"Jacky142857"},"content":"         \u003cHBox\u003e","lastModifiedDate":"2022-03-17"},{"lineNumber":138,"author":{"gitId":"Jacky142857"},"content":"            \u003cchildren\u003e","lastModifiedDate":"2022-03-17"},{"lineNumber":139,"author":{"gitId":"Jacky142857"},"content":"               \u003cImageView fitHeight\u003d\"17.0\" fitWidth\u003d\"17.0\" pickOnBounds\u003d\"true\" preserveRatio\u003d\"true\"\u003e","lastModifiedDate":"2022-03-17"},{"lineNumber":140,"author":{"gitId":"Jacky142857"},"content":"                  \u003cimage\u003e","lastModifiedDate":"2022-03-17"},{"lineNumber":141,"author":{"gitId":"WJunHong"},"content":"                     \u003cImage url\u003d\"@../images/clock2.png\" /\u003e","lastModifiedDate":"2022-03-31"},{"lineNumber":142,"author":{"gitId":"Jacky142857"},"content":"                  \u003c/image\u003e","lastModifiedDate":"2022-03-17"},{"lineNumber":143,"author":{"gitId":"Jacky142857"},"content":"               \u003c/ImageView\u003e","lastModifiedDate":"2022-03-17"},{"lineNumber":144,"author":{"gitId":"WJunHong"},"content":"            \u003cLabel fx:id\u003d\"appointment\" styleClass\u003d\"cell_small_label\" text\u003d\"\\$appointment\"\u003e","lastModifiedDate":"2022-03-31"},{"lineNumber":145,"author":{"gitId":"WJunHong"},"content":"                  \u003cpadding\u003e","lastModifiedDate":"2022-03-31"},{"lineNumber":146,"author":{"gitId":"WJunHong"},"content":"                     \u003cInsets left\u003d\"5.0\" /\u003e","lastModifiedDate":"2022-03-31"},{"lineNumber":147,"author":{"gitId":"WJunHong"},"content":"                  \u003c/padding\u003e\u003c/Label\u003e","lastModifiedDate":"2022-03-31"},{"lineNumber":148,"author":{"gitId":"Jacky142857"},"content":"            \u003c/children\u003e","lastModifiedDate":"2022-03-17"},{"lineNumber":149,"author":{"gitId":"Jacky142857"},"content":"         \u003c/HBox\u003e","lastModifiedDate":"2022-03-17"},{"lineNumber":150,"author":{"gitId":"Jacky142857"},"content":"","lastModifiedDate":"2022-03-11"},{"lineNumber":151,"author":{"gitId":"-"},"content":"    \u003c/VBox\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":152,"author":{"gitId":"Jacky142857"},"content":"      \u003crowConstraints\u003e","lastModifiedDate":"2022-03-17"},{"lineNumber":153,"author":{"gitId":"Jacky142857"},"content":"         \u003cRowConstraints /\u003e","lastModifiedDate":"2022-03-17"},{"lineNumber":154,"author":{"gitId":"Jacky142857"},"content":"      \u003c/rowConstraints\u003e","lastModifiedDate":"2022-03-17"},{"lineNumber":155,"author":{"gitId":"-"},"content":"  \u003c/GridPane\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":156,"author":{"gitId":"Jacky142857"},"content":"   \u003copaqueInsets\u003e","lastModifiedDate":"2022-03-17"},{"lineNumber":157,"author":{"gitId":"Jacky142857"},"content":"      \u003cInsets /\u003e","lastModifiedDate":"2022-03-17"},{"lineNumber":158,"author":{"gitId":"Jacky142857"},"content":"   \u003c/opaqueInsets\u003e","lastModifiedDate":"2022-03-17"},{"lineNumber":159,"author":{"gitId":"Jacky142857"},"content":"   \u003cpadding\u003e","lastModifiedDate":"2022-03-17"},{"lineNumber":160,"author":{"gitId":"Jacky142857"},"content":"      \u003cInsets bottom\u003d\"5.0\" top\u003d\"5.0\" /\u003e","lastModifiedDate":"2022-03-17"},{"lineNumber":161,"author":{"gitId":"Jacky142857"},"content":"   \u003c/padding\u003e","lastModifiedDate":"2022-03-17"},{"lineNumber":162,"author":{"gitId":"-"},"content":"\u003c/HBox\u003e","lastModifiedDate":"2016-08-08"}],"authorContributionMap":{"WJunHong":95,"Jacky142857":32,"-":28,"chuashihong":7}},{"path":"src/main/resources/view/ClientListPanel.fxml","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":3,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.control.ListView?\u003e","lastModifiedDate":"2017-03-25"},{"lineNumber":4,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.layout.VBox?\u003e","lastModifiedDate":"2017-03-25"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-25"},{"lineNumber":6,"author":{"gitId":"-"},"content":"\u003cVBox xmlns\u003d\"http://javafx.com/javafx/8\" xmlns:fx\u003d\"http://javafx.com/fxml/1\"\u003e","lastModifiedDate":"2017-01-18"},{"lineNumber":7,"author":{"gitId":"cwnm"},"content":"  \u003cListView fx:id\u003d\"clientListView\" VBox.vgrow\u003d\"ALWAYS\" /\u003e","lastModifiedDate":"2022-03-04"},{"lineNumber":8,"author":{"gitId":"-"},"content":"\u003c/VBox\u003e","lastModifiedDate":"2016-08-08"}],"authorContributionMap":{"-":7,"cwnm":1}},{"path":"src/main/resources/view/DarkTheme.css","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":".background {","lastModifiedDate":"2016-08-08"},{"lineNumber":2,"author":{"gitId":"-"},"content":"    -fx-background-color: derive(#1d1d1d, 20%);","lastModifiedDate":"2016-08-15"},{"lineNumber":3,"author":{"gitId":"-"},"content":"    background-color: #383838; /* Used in the default.html file */","lastModifiedDate":"2017-03-02"},{"lineNumber":4,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":6,"author":{"gitId":"-"},"content":".label {","lastModifiedDate":"2016-08-08"},{"lineNumber":7,"author":{"gitId":"-"},"content":"    -fx-font-size: 11pt;","lastModifiedDate":"2016-08-08"},{"lineNumber":8,"author":{"gitId":"-"},"content":"    -fx-font-family: \"Segoe UI Semibold\";","lastModifiedDate":"2022-01-13"},{"lineNumber":9,"author":{"gitId":"Jacky142857"},"content":"    -fx-text-fill: #cccccc;","lastModifiedDate":"2022-03-31"},{"lineNumber":10,"author":{"gitId":"-"},"content":"    -fx-opacity: 0.9;","lastModifiedDate":"2016-08-08"},{"lineNumber":11,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":13,"author":{"gitId":"-"},"content":".label-bright {","lastModifiedDate":"2016-08-08"},{"lineNumber":14,"author":{"gitId":"Jacky142857"},"content":"    -fx-font-size: 12pt;","lastModifiedDate":"2022-03-31"},{"lineNumber":15,"author":{"gitId":"-"},"content":"    -fx-font-family: \"Segoe UI Semibold\";","lastModifiedDate":"2022-01-13"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    -fx-text-fill: white;","lastModifiedDate":"2016-08-08"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    -fx-opacity: 1;","lastModifiedDate":"2016-08-08"},{"lineNumber":18,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":20,"author":{"gitId":"-"},"content":".label-header {","lastModifiedDate":"2016-08-08"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    -fx-font-size: 32pt;","lastModifiedDate":"2016-08-08"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    -fx-font-family: \"Segoe UI Light\";","lastModifiedDate":"2022-01-13"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    -fx-text-fill: white;","lastModifiedDate":"2016-08-08"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    -fx-opacity: 1;","lastModifiedDate":"2016-08-08"},{"lineNumber":25,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":27,"author":{"gitId":"-"},"content":".text-field {","lastModifiedDate":"2016-08-08"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    -fx-font-size: 12pt;","lastModifiedDate":"2016-08-08"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    -fx-font-family: \"Segoe UI Semibold\";","lastModifiedDate":"2022-01-13"},{"lineNumber":30,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":31,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":32,"author":{"gitId":"-"},"content":".tab-pane {","lastModifiedDate":"2016-08-08"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    -fx-padding: 0 0 0 1;","lastModifiedDate":"2016-08-08"},{"lineNumber":34,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":36,"author":{"gitId":"-"},"content":".tab-pane .tab-header-area {","lastModifiedDate":"2016-08-08"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    -fx-padding: 0 0 0 0;","lastModifiedDate":"2016-08-08"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    -fx-min-height: 0;","lastModifiedDate":"2016-08-08"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    -fx-max-height: 0;","lastModifiedDate":"2016-08-08"},{"lineNumber":40,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":42,"author":{"gitId":"-"},"content":".table-view {","lastModifiedDate":"2016-08-08"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    -fx-base: #1d1d1d;","lastModifiedDate":"2016-08-15"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    -fx-control-inner-background: #1d1d1d;","lastModifiedDate":"2016-08-15"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    -fx-background-color: #1d1d1d;","lastModifiedDate":"2016-08-15"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    -fx-table-cell-border-color: transparent;","lastModifiedDate":"2016-08-08"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    -fx-table-header-border-color: transparent;","lastModifiedDate":"2016-08-08"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    -fx-padding: 5;","lastModifiedDate":"2016-08-08"},{"lineNumber":49,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":50,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":51,"author":{"gitId":"-"},"content":".table-view .column-header-background {","lastModifiedDate":"2016-08-08"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    -fx-background-color: transparent;","lastModifiedDate":"2016-08-08"},{"lineNumber":53,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":54,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":55,"author":{"gitId":"-"},"content":".table-view .column-header, .table-view .filler {","lastModifiedDate":"2016-08-08"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    -fx-size: 35;","lastModifiedDate":"2016-08-08"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    -fx-border-width: 0 0 1 0;","lastModifiedDate":"2016-08-08"},{"lineNumber":58,"author":{"gitId":"-"},"content":"    -fx-background-color: transparent;","lastModifiedDate":"2016-08-08"},{"lineNumber":59,"author":{"gitId":"-"},"content":"    -fx-border-color:","lastModifiedDate":"2016-08-08"},{"lineNumber":60,"author":{"gitId":"-"},"content":"        transparent","lastModifiedDate":"2016-08-08"},{"lineNumber":61,"author":{"gitId":"-"},"content":"        transparent","lastModifiedDate":"2016-08-08"},{"lineNumber":62,"author":{"gitId":"-"},"content":"        derive(-fx-base, 80%)","lastModifiedDate":"2016-08-08"},{"lineNumber":63,"author":{"gitId":"-"},"content":"        transparent;","lastModifiedDate":"2016-08-08"},{"lineNumber":64,"author":{"gitId":"-"},"content":"    -fx-border-insets: 0 10 1 0;","lastModifiedDate":"2016-08-08"},{"lineNumber":65,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":66,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":67,"author":{"gitId":"-"},"content":".table-view .column-header .label {","lastModifiedDate":"2016-08-08"},{"lineNumber":68,"author":{"gitId":"-"},"content":"    -fx-font-size: 20pt;","lastModifiedDate":"2016-08-08"},{"lineNumber":69,"author":{"gitId":"-"},"content":"    -fx-font-family: \"Segoe UI Light\";","lastModifiedDate":"2022-01-13"},{"lineNumber":70,"author":{"gitId":"-"},"content":"    -fx-text-fill: white;","lastModifiedDate":"2016-08-08"},{"lineNumber":71,"author":{"gitId":"-"},"content":"    -fx-alignment: center-left;","lastModifiedDate":"2016-08-08"},{"lineNumber":72,"author":{"gitId":"-"},"content":"    -fx-opacity: 1;","lastModifiedDate":"2016-08-08"},{"lineNumber":73,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":74,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":75,"author":{"gitId":"-"},"content":".table-view:focused .table-row-cell:filled:focused:selected {","lastModifiedDate":"2016-08-08"},{"lineNumber":76,"author":{"gitId":"-"},"content":"    -fx-background-color: -fx-focus-color;","lastModifiedDate":"2016-08-08"},{"lineNumber":77,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":78,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":79,"author":{"gitId":"-"},"content":".split-pane:horizontal .split-pane-divider {","lastModifiedDate":"2016-08-08"},{"lineNumber":80,"author":{"gitId":"-"},"content":"    -fx-background-color: derive(#1d1d1d, 20%);","lastModifiedDate":"2017-03-02"},{"lineNumber":81,"author":{"gitId":"-"},"content":"    -fx-border-color: transparent transparent transparent #4d4d4d;","lastModifiedDate":"2017-03-02"},{"lineNumber":82,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-15"},{"lineNumber":83,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-15"},{"lineNumber":84,"author":{"gitId":"-"},"content":".split-pane {","lastModifiedDate":"2016-08-15"},{"lineNumber":85,"author":{"gitId":"-"},"content":"    -fx-border-radius: 1;","lastModifiedDate":"2016-08-15"},{"lineNumber":86,"author":{"gitId":"-"},"content":"    -fx-border-width: 1;","lastModifiedDate":"2016-08-15"},{"lineNumber":87,"author":{"gitId":"-"},"content":"    -fx-background-color: derive(#1d1d1d, 20%);","lastModifiedDate":"2016-08-15"},{"lineNumber":88,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":89,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":90,"author":{"gitId":"-"},"content":".list-view {","lastModifiedDate":"2017-03-02"},{"lineNumber":91,"author":{"gitId":"-"},"content":"    -fx-background-insets: 0;","lastModifiedDate":"2017-03-02"},{"lineNumber":92,"author":{"gitId":"-"},"content":"    -fx-padding: 0;","lastModifiedDate":"2017-03-02"},{"lineNumber":93,"author":{"gitId":"-"},"content":"    -fx-background-color: derive(#1d1d1d, 20%);","lastModifiedDate":"2018-01-10"},{"lineNumber":94,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-03-02"},{"lineNumber":95,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-02"},{"lineNumber":96,"author":{"gitId":"-"},"content":".list-cell {","lastModifiedDate":"2016-08-08"},{"lineNumber":97,"author":{"gitId":"-"},"content":"    -fx-label-padding: 0 0 0 0;","lastModifiedDate":"2016-08-08"},{"lineNumber":98,"author":{"gitId":"-"},"content":"    -fx-graphic-text-gap : 0;","lastModifiedDate":"2016-08-08"},{"lineNumber":99,"author":{"gitId":"-"},"content":"    -fx-padding: 0 0 0 0;","lastModifiedDate":"2016-08-08"},{"lineNumber":100,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":101,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":102,"author":{"gitId":"-"},"content":".list-cell:filled:even {","lastModifiedDate":"2017-03-02"},{"lineNumber":103,"author":{"gitId":"-"},"content":"    -fx-background-color: #3c3e3f;","lastModifiedDate":"2017-03-02"},{"lineNumber":104,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-03-02"},{"lineNumber":105,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-02"},{"lineNumber":106,"author":{"gitId":"-"},"content":".list-cell:filled:odd {","lastModifiedDate":"2017-03-02"},{"lineNumber":107,"author":{"gitId":"-"},"content":"    -fx-background-color: #515658;","lastModifiedDate":"2017-03-02"},{"lineNumber":108,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-03-02"},{"lineNumber":109,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-02"},{"lineNumber":110,"author":{"gitId":"-"},"content":".list-cell:filled:selected {","lastModifiedDate":"2017-03-02"},{"lineNumber":111,"author":{"gitId":"-"},"content":"    -fx-background-color: #424d5f;","lastModifiedDate":"2017-03-02"},{"lineNumber":112,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-03-02"},{"lineNumber":113,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-02"},{"lineNumber":114,"author":{"gitId":"-"},"content":".list-cell:filled:selected #cardPane {","lastModifiedDate":"2017-03-02"},{"lineNumber":115,"author":{"gitId":"-"},"content":"    -fx-border-color: #3e7b91;","lastModifiedDate":"2017-03-02"},{"lineNumber":116,"author":{"gitId":"-"},"content":"    -fx-border-width: 1;","lastModifiedDate":"2017-03-02"},{"lineNumber":117,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-03-02"},{"lineNumber":118,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-02"},{"lineNumber":119,"author":{"gitId":"-"},"content":".list-cell .label {","lastModifiedDate":"2016-08-08"},{"lineNumber":120,"author":{"gitId":"-"},"content":"    -fx-text-fill: white;","lastModifiedDate":"2017-03-02"},{"lineNumber":121,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":122,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":123,"author":{"gitId":"-"},"content":".cell_big_label {","lastModifiedDate":"2016-08-08"},{"lineNumber":124,"author":{"gitId":"-"},"content":"    -fx-font-family: \"Segoe UI Semibold\";","lastModifiedDate":"2022-01-13"},{"lineNumber":125,"author":{"gitId":"WJunHong"},"content":"    -fx-font-size: 20px;","lastModifiedDate":"2022-03-31"},{"lineNumber":126,"author":{"gitId":"-"},"content":"    -fx-text-fill: #010504;","lastModifiedDate":"2016-08-08"},{"lineNumber":127,"author":{"gitId":"WJunHong"},"content":"    -fx-text-weight: bolder;","lastModifiedDate":"2022-03-31"},{"lineNumber":128,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":129,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":130,"author":{"gitId":"-"},"content":".cell_small_label {","lastModifiedDate":"2016-08-08"},{"lineNumber":131,"author":{"gitId":"-"},"content":"    -fx-font-family: \"Segoe UI\";","lastModifiedDate":"2022-01-13"},{"lineNumber":132,"author":{"gitId":"-"},"content":"    -fx-font-size: 13px;","lastModifiedDate":"2017-03-02"},{"lineNumber":133,"author":{"gitId":"-"},"content":"    -fx-text-fill: #010504;","lastModifiedDate":"2016-08-08"},{"lineNumber":134,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":135,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":136,"author":{"gitId":"-"},"content":".stack-pane {","lastModifiedDate":"2018-04-01"},{"lineNumber":137,"author":{"gitId":"-"},"content":"     -fx-background-color: derive(#1d1d1d, 20%);","lastModifiedDate":"2016-08-15"},{"lineNumber":138,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":139,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":140,"author":{"gitId":"-"},"content":".pane-with-border {","lastModifiedDate":"2017-05-15"},{"lineNumber":141,"author":{"gitId":"-"},"content":"     -fx-background-color: derive(#1d1d1d, 20%);","lastModifiedDate":"2017-05-09"},{"lineNumber":142,"author":{"gitId":"-"},"content":"     -fx-border-color: derive(#1d1d1d, 10%);","lastModifiedDate":"2017-05-09"},{"lineNumber":143,"author":{"gitId":"-"},"content":"     -fx-border-top-width: 1px;","lastModifiedDate":"2017-05-09"},{"lineNumber":144,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-05-09"},{"lineNumber":145,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-09"},{"lineNumber":146,"author":{"gitId":"-"},"content":".status-bar {","lastModifiedDate":"2016-08-08"},{"lineNumber":147,"author":{"gitId":"-"},"content":"    -fx-background-color: derive(#1d1d1d, 30%);","lastModifiedDate":"2018-12-08"},{"lineNumber":148,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-09-14"},{"lineNumber":149,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-14"},{"lineNumber":150,"author":{"gitId":"-"},"content":".result-display {","lastModifiedDate":"2016-09-14"},{"lineNumber":151,"author":{"gitId":"-"},"content":"    -fx-background-color: transparent;","lastModifiedDate":"2017-03-02"},{"lineNumber":152,"author":{"gitId":"-"},"content":"    -fx-font-family: \"Segoe UI Light\";","lastModifiedDate":"2022-01-13"},{"lineNumber":153,"author":{"gitId":"-"},"content":"    -fx-font-size: 13pt;","lastModifiedDate":"2017-03-02"},{"lineNumber":154,"author":{"gitId":"-"},"content":"    -fx-text-fill: white;","lastModifiedDate":"2017-03-02"},{"lineNumber":155,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-09-14"},{"lineNumber":156,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-14"},{"lineNumber":157,"author":{"gitId":"-"},"content":".result-display .label {","lastModifiedDate":"2016-09-14"},{"lineNumber":158,"author":{"gitId":"-"},"content":"    -fx-text-fill: black !important;","lastModifiedDate":"2016-09-14"},{"lineNumber":159,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":160,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":161,"author":{"gitId":"-"},"content":".status-bar .label {","lastModifiedDate":"2016-08-08"},{"lineNumber":162,"author":{"gitId":"-"},"content":"    -fx-font-family: \"Segoe UI Light\";","lastModifiedDate":"2022-01-13"},{"lineNumber":163,"author":{"gitId":"-"},"content":"    -fx-text-fill: white;","lastModifiedDate":"2016-08-08"},{"lineNumber":164,"author":{"gitId":"-"},"content":"    -fx-padding: 4px;","lastModifiedDate":"2018-12-08"},{"lineNumber":165,"author":{"gitId":"-"},"content":"    -fx-pref-height: 30px;","lastModifiedDate":"2018-12-08"},{"lineNumber":166,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":167,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":168,"author":{"gitId":"-"},"content":".status-bar-with-border {","lastModifiedDate":"2016-08-08"},{"lineNumber":169,"author":{"gitId":"-"},"content":"    -fx-background-color: derive(#1d1d1d, 30%);","lastModifiedDate":"2016-08-15"},{"lineNumber":170,"author":{"gitId":"-"},"content":"    -fx-border-color: derive(#1d1d1d, 25%);","lastModifiedDate":"2016-08-15"},{"lineNumber":171,"author":{"gitId":"-"},"content":"    -fx-border-width: 1px;","lastModifiedDate":"2016-08-08"},{"lineNumber":172,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":173,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":174,"author":{"gitId":"-"},"content":".status-bar-with-border .label {","lastModifiedDate":"2016-08-08"},{"lineNumber":175,"author":{"gitId":"-"},"content":"    -fx-text-fill: white;","lastModifiedDate":"2016-08-08"},{"lineNumber":176,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":177,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":178,"author":{"gitId":"-"},"content":".grid-pane {","lastModifiedDate":"2016-08-08"},{"lineNumber":179,"author":{"gitId":"-"},"content":"    -fx-background-color: derive(#1d1d1d, 30%);","lastModifiedDate":"2016-08-15"},{"lineNumber":180,"author":{"gitId":"-"},"content":"    -fx-border-color: derive(#1d1d1d, 30%);","lastModifiedDate":"2016-08-15"},{"lineNumber":181,"author":{"gitId":"-"},"content":"    -fx-border-width: 1px;","lastModifiedDate":"2016-08-08"},{"lineNumber":182,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":183,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":184,"author":{"gitId":"-"},"content":".grid-pane .stack-pane {","lastModifiedDate":"2018-04-01"},{"lineNumber":185,"author":{"gitId":"-"},"content":"    -fx-background-color: derive(#1d1d1d, 30%);","lastModifiedDate":"2016-08-15"},{"lineNumber":186,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":187,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":188,"author":{"gitId":"-"},"content":".context-menu {","lastModifiedDate":"2016-08-08"},{"lineNumber":189,"author":{"gitId":"-"},"content":"    -fx-background-color: derive(#1d1d1d, 50%);","lastModifiedDate":"2016-08-15"},{"lineNumber":190,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":191,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":192,"author":{"gitId":"-"},"content":".context-menu .label {","lastModifiedDate":"2016-08-08"},{"lineNumber":193,"author":{"gitId":"-"},"content":"    -fx-text-fill: white;","lastModifiedDate":"2016-08-08"},{"lineNumber":194,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":195,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":196,"author":{"gitId":"-"},"content":".menu-bar {","lastModifiedDate":"2016-08-08"},{"lineNumber":197,"author":{"gitId":"-"},"content":"    -fx-background-color: derive(#1d1d1d, 20%);","lastModifiedDate":"2016-08-15"},{"lineNumber":198,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":199,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":200,"author":{"gitId":"-"},"content":".menu-bar .label {","lastModifiedDate":"2016-08-08"},{"lineNumber":201,"author":{"gitId":"-"},"content":"    -fx-font-size: 14pt;","lastModifiedDate":"2016-08-08"},{"lineNumber":202,"author":{"gitId":"-"},"content":"    -fx-font-family: \"Segoe UI Light\";","lastModifiedDate":"2022-01-13"},{"lineNumber":203,"author":{"gitId":"-"},"content":"    -fx-text-fill: white;","lastModifiedDate":"2016-08-08"},{"lineNumber":204,"author":{"gitId":"-"},"content":"    -fx-opacity: 0.9;","lastModifiedDate":"2016-08-08"},{"lineNumber":205,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":206,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":207,"author":{"gitId":"-"},"content":".menu .left-container {","lastModifiedDate":"2016-08-08"},{"lineNumber":208,"author":{"gitId":"-"},"content":"    -fx-background-color: black;","lastModifiedDate":"2016-08-08"},{"lineNumber":209,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":210,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":211,"author":{"gitId":"-"},"content":"/*","lastModifiedDate":"2016-08-08"},{"lineNumber":212,"author":{"gitId":"-"},"content":" * Metro style Push Button","lastModifiedDate":"2016-08-08"},{"lineNumber":213,"author":{"gitId":"-"},"content":" * Author: Pedro Duque Vieira","lastModifiedDate":"2016-08-08"},{"lineNumber":214,"author":{"gitId":"-"},"content":" * http://pixelduke.wordpress.com/2012/10/23/jmetro-windows-8-controls-on-java/","lastModifiedDate":"2016-08-08"},{"lineNumber":215,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-08"},{"lineNumber":216,"author":{"gitId":"-"},"content":".button {","lastModifiedDate":"2016-08-08"},{"lineNumber":217,"author":{"gitId":"-"},"content":"    -fx-padding: 5 22 5 22;","lastModifiedDate":"2016-08-08"},{"lineNumber":218,"author":{"gitId":"-"},"content":"    -fx-border-color: #e2e2e2;","lastModifiedDate":"2016-08-08"},{"lineNumber":219,"author":{"gitId":"-"},"content":"    -fx-border-width: 2;","lastModifiedDate":"2016-08-08"},{"lineNumber":220,"author":{"gitId":"-"},"content":"    -fx-background-radius: 0;","lastModifiedDate":"2016-08-08"},{"lineNumber":221,"author":{"gitId":"-"},"content":"    -fx-background-color: #1d1d1d;","lastModifiedDate":"2016-08-15"},{"lineNumber":222,"author":{"gitId":"-"},"content":"    -fx-font-family: \"Segoe UI\", Helvetica, Arial, sans-serif;","lastModifiedDate":"2022-01-13"},{"lineNumber":223,"author":{"gitId":"-"},"content":"    -fx-font-size: 11pt;","lastModifiedDate":"2016-08-08"},{"lineNumber":224,"author":{"gitId":"-"},"content":"    -fx-text-fill: #d8d8d8;","lastModifiedDate":"2016-08-08"},{"lineNumber":225,"author":{"gitId":"-"},"content":"    -fx-background-insets: 0 0 0 0, 0, 1, 2;","lastModifiedDate":"2016-08-08"},{"lineNumber":226,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":227,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":228,"author":{"gitId":"-"},"content":".button:hover {","lastModifiedDate":"2016-08-08"},{"lineNumber":229,"author":{"gitId":"-"},"content":"    -fx-background-color: #3a3a3a;","lastModifiedDate":"2016-08-08"},{"lineNumber":230,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":231,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":232,"author":{"gitId":"-"},"content":".button:pressed, .button:default:hover:pressed {","lastModifiedDate":"2016-08-08"},{"lineNumber":233,"author":{"gitId":"-"},"content":"  -fx-background-color: white;","lastModifiedDate":"2016-08-08"},{"lineNumber":234,"author":{"gitId":"-"},"content":"  -fx-text-fill: #1d1d1d;","lastModifiedDate":"2016-08-15"},{"lineNumber":235,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":236,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":237,"author":{"gitId":"-"},"content":".button:focused {","lastModifiedDate":"2016-08-08"},{"lineNumber":238,"author":{"gitId":"-"},"content":"    -fx-border-color: white, white;","lastModifiedDate":"2016-08-08"},{"lineNumber":239,"author":{"gitId":"-"},"content":"    -fx-border-width: 1, 1;","lastModifiedDate":"2016-08-08"},{"lineNumber":240,"author":{"gitId":"-"},"content":"    -fx-border-style: solid, segments(1, 1);","lastModifiedDate":"2016-08-08"},{"lineNumber":241,"author":{"gitId":"-"},"content":"    -fx-border-radius: 0, 0;","lastModifiedDate":"2016-08-08"},{"lineNumber":242,"author":{"gitId":"-"},"content":"    -fx-border-insets: 1 1 1 1, 0;","lastModifiedDate":"2016-08-08"},{"lineNumber":243,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":244,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":245,"author":{"gitId":"-"},"content":".button:disabled, .button:default:disabled {","lastModifiedDate":"2016-08-08"},{"lineNumber":246,"author":{"gitId":"-"},"content":"    -fx-opacity: 0.4;","lastModifiedDate":"2016-08-08"},{"lineNumber":247,"author":{"gitId":"-"},"content":"    -fx-background-color: #1d1d1d;","lastModifiedDate":"2016-08-15"},{"lineNumber":248,"author":{"gitId":"-"},"content":"    -fx-text-fill: white;","lastModifiedDate":"2016-08-08"},{"lineNumber":249,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":250,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":251,"author":{"gitId":"-"},"content":".button:default {","lastModifiedDate":"2016-08-08"},{"lineNumber":252,"author":{"gitId":"-"},"content":"    -fx-background-color: -fx-focus-color;","lastModifiedDate":"2016-08-08"},{"lineNumber":253,"author":{"gitId":"-"},"content":"    -fx-text-fill: #ffffff;","lastModifiedDate":"2016-08-08"},{"lineNumber":254,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":255,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":256,"author":{"gitId":"-"},"content":".button:default:hover {","lastModifiedDate":"2016-08-08"},{"lineNumber":257,"author":{"gitId":"-"},"content":"    -fx-background-color: derive(-fx-focus-color, 30%);","lastModifiedDate":"2016-08-08"},{"lineNumber":258,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":259,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":260,"author":{"gitId":"-"},"content":".dialog-pane {","lastModifiedDate":"2016-08-08"},{"lineNumber":261,"author":{"gitId":"-"},"content":"    -fx-background-color: #1d1d1d;","lastModifiedDate":"2016-08-15"},{"lineNumber":262,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":263,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":264,"author":{"gitId":"-"},"content":".dialog-pane \u003e *.button-bar \u003e *.container {","lastModifiedDate":"2016-08-08"},{"lineNumber":265,"author":{"gitId":"-"},"content":"    -fx-background-color: #1d1d1d;","lastModifiedDate":"2016-08-15"},{"lineNumber":266,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":267,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":268,"author":{"gitId":"-"},"content":".dialog-pane \u003e *.label.content {","lastModifiedDate":"2016-08-08"},{"lineNumber":269,"author":{"gitId":"-"},"content":"    -fx-font-size: 14px;","lastModifiedDate":"2016-08-08"},{"lineNumber":270,"author":{"gitId":"-"},"content":"    -fx-font-weight: bold;","lastModifiedDate":"2016-08-08"},{"lineNumber":271,"author":{"gitId":"-"},"content":"    -fx-text-fill: white;","lastModifiedDate":"2016-08-08"},{"lineNumber":272,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":273,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":274,"author":{"gitId":"-"},"content":".dialog-pane:header *.header-panel {","lastModifiedDate":"2016-08-08"},{"lineNumber":275,"author":{"gitId":"-"},"content":"    -fx-background-color: derive(#1d1d1d, 25%);","lastModifiedDate":"2016-08-15"},{"lineNumber":276,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":277,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":278,"author":{"gitId":"-"},"content":".dialog-pane:header *.header-panel *.label {","lastModifiedDate":"2016-08-08"},{"lineNumber":279,"author":{"gitId":"-"},"content":"    -fx-font-size: 18px;","lastModifiedDate":"2016-08-08"},{"lineNumber":280,"author":{"gitId":"-"},"content":"    -fx-font-style: italic;","lastModifiedDate":"2016-08-08"},{"lineNumber":281,"author":{"gitId":"-"},"content":"    -fx-fill: white;","lastModifiedDate":"2016-08-08"},{"lineNumber":282,"author":{"gitId":"-"},"content":"    -fx-text-fill: white;","lastModifiedDate":"2016-08-08"},{"lineNumber":283,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":284,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":285,"author":{"gitId":"-"},"content":".scroll-bar {","lastModifiedDate":"2017-03-02"},{"lineNumber":286,"author":{"gitId":"-"},"content":"    -fx-background-color: derive(#1d1d1d, 20%);","lastModifiedDate":"2017-03-02"},{"lineNumber":287,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-03-02"},{"lineNumber":288,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-02"},{"lineNumber":289,"author":{"gitId":"-"},"content":".scroll-bar .thumb {","lastModifiedDate":"2016-08-15"},{"lineNumber":290,"author":{"gitId":"-"},"content":"    -fx-background-color: derive(#1d1d1d, 50%);","lastModifiedDate":"2016-08-15"},{"lineNumber":291,"author":{"gitId":"-"},"content":"    -fx-background-insets: 3;","lastModifiedDate":"2016-08-15"},{"lineNumber":292,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-15"},{"lineNumber":293,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-15"},{"lineNumber":294,"author":{"gitId":"-"},"content":".scroll-bar .increment-button, .scroll-bar .decrement-button {","lastModifiedDate":"2016-08-15"},{"lineNumber":295,"author":{"gitId":"-"},"content":"    -fx-background-color: transparent;","lastModifiedDate":"2016-08-15"},{"lineNumber":296,"author":{"gitId":"-"},"content":"    -fx-padding: 0 0 0 0;","lastModifiedDate":"2016-08-15"},{"lineNumber":297,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-15"},{"lineNumber":298,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-15"},{"lineNumber":299,"author":{"gitId":"-"},"content":".scroll-bar .increment-arrow, .scroll-bar .decrement-arrow {","lastModifiedDate":"2016-08-15"},{"lineNumber":300,"author":{"gitId":"-"},"content":"    -fx-shape: \" \";","lastModifiedDate":"2016-08-15"},{"lineNumber":301,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-18"},{"lineNumber":302,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":303,"author":{"gitId":"-"},"content":".scroll-bar:vertical .increment-arrow, .scroll-bar:vertical .decrement-arrow {","lastModifiedDate":"2016-08-18"},{"lineNumber":304,"author":{"gitId":"-"},"content":"    -fx-padding: 1 8 1 8;","lastModifiedDate":"2016-08-15"},{"lineNumber":305,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-15"},{"lineNumber":306,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-15"},{"lineNumber":307,"author":{"gitId":"-"},"content":".scroll-bar:horizontal .increment-arrow, .scroll-bar:horizontal .decrement-arrow {","lastModifiedDate":"2016-08-18"},{"lineNumber":308,"author":{"gitId":"-"},"content":"    -fx-padding: 8 1 8 1;","lastModifiedDate":"2016-08-18"},{"lineNumber":309,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-18"},{"lineNumber":310,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":311,"author":{"gitId":"-"},"content":"#cardPane {","lastModifiedDate":"2016-08-08"},{"lineNumber":312,"author":{"gitId":"-"},"content":"    -fx-background-color: transparent;","lastModifiedDate":"2016-08-08"},{"lineNumber":313,"author":{"gitId":"-"},"content":"    -fx-border-width: 0;","lastModifiedDate":"2017-03-02"},{"lineNumber":314,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":315,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":316,"author":{"gitId":"-"},"content":"#commandTypeLabel {","lastModifiedDate":"2016-08-08"},{"lineNumber":317,"author":{"gitId":"-"},"content":"    -fx-font-size: 11px;","lastModifiedDate":"2016-08-08"},{"lineNumber":318,"author":{"gitId":"-"},"content":"    -fx-text-fill: #F70D1A;","lastModifiedDate":"2016-08-08"},{"lineNumber":319,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":320,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":321,"author":{"gitId":"-"},"content":"#commandTextField {","lastModifiedDate":"2017-03-02"},{"lineNumber":322,"author":{"gitId":"-"},"content":"    -fx-background-color: transparent #383838 transparent #383838;","lastModifiedDate":"2017-03-02"},{"lineNumber":323,"author":{"gitId":"-"},"content":"    -fx-background-insets: 0;","lastModifiedDate":"2017-03-02"},{"lineNumber":324,"author":{"gitId":"-"},"content":"    -fx-border-color: #383838 #383838 #ffffff #383838;","lastModifiedDate":"2017-03-02"},{"lineNumber":325,"author":{"gitId":"-"},"content":"    -fx-border-insets: 0;","lastModifiedDate":"2017-03-02"},{"lineNumber":326,"author":{"gitId":"-"},"content":"    -fx-border-width: 1;","lastModifiedDate":"2017-03-02"},{"lineNumber":327,"author":{"gitId":"-"},"content":"    -fx-font-family: \"Segoe UI Light\";","lastModifiedDate":"2022-01-13"},{"lineNumber":328,"author":{"gitId":"-"},"content":"    -fx-font-size: 13pt;","lastModifiedDate":"2017-03-02"},{"lineNumber":329,"author":{"gitId":"-"},"content":"    -fx-text-fill: white;","lastModifiedDate":"2017-03-02"},{"lineNumber":330,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-03-02"},{"lineNumber":331,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-02"},{"lineNumber":332,"author":{"gitId":"cwnm"},"content":"#filterField, #clientListPanel, #clientWebpage {","lastModifiedDate":"2022-03-04"},{"lineNumber":333,"author":{"gitId":"-"},"content":"    -fx-effect: innershadow(gaussian, black, 10, 0, 0, 0);","lastModifiedDate":"2016-08-15"},{"lineNumber":334,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":335,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-18"},{"lineNumber":336,"author":{"gitId":"-"},"content":"#resultDisplay .content {","lastModifiedDate":"2017-03-02"},{"lineNumber":337,"author":{"gitId":"-"},"content":"    -fx-background-color: transparent, #383838, transparent, #383838;","lastModifiedDate":"2017-03-02"},{"lineNumber":338,"author":{"gitId":"-"},"content":"    -fx-background-radius: 0;","lastModifiedDate":"2017-03-02"},{"lineNumber":339,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-03-02"},{"lineNumber":340,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-02"},{"lineNumber":341,"author":{"gitId":"-"},"content":"#tags {","lastModifiedDate":"2016-12-18"},{"lineNumber":342,"author":{"gitId":"-"},"content":"    -fx-hgap: 7;","lastModifiedDate":"2016-12-18"},{"lineNumber":343,"author":{"gitId":"-"},"content":"    -fx-vgap: 3;","lastModifiedDate":"2016-12-18"},{"lineNumber":344,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-12-18"},{"lineNumber":345,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-18"},{"lineNumber":346,"author":{"gitId":"-"},"content":"#tags .label {","lastModifiedDate":"2016-12-18"},{"lineNumber":347,"author":{"gitId":"WJunHong"},"content":"    -fx-text-fill: black;","lastModifiedDate":"2022-03-31"},{"lineNumber":348,"author":{"gitId":"WJunHong"},"content":"    -fx-background-color: #e1c699;","lastModifiedDate":"2022-03-31"},{"lineNumber":349,"author":{"gitId":"-"},"content":"    -fx-padding: 1 3 1 3;","lastModifiedDate":"2016-12-18"},{"lineNumber":350,"author":{"gitId":"-"},"content":"    -fx-border-radius: 2;","lastModifiedDate":"2016-12-18"},{"lineNumber":351,"author":{"gitId":"-"},"content":"    -fx-background-radius: 2;","lastModifiedDate":"2016-12-18"},{"lineNumber":352,"author":{"gitId":"WJunHong"},"content":"    -fx-font-size: 12;","lastModifiedDate":"2022-03-31"},{"lineNumber":353,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-12-18"},{"lineNumber":354,"author":{"gitId":"WJunHong"},"content":"","lastModifiedDate":"2022-03-31"}],"authorContributionMap":{"WJunHong":6,"Jacky142857":2,"-":345,"cwnm":1}},{"path":"src/main/resources/view/MainWindow.fxml","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":3,"author":{"gitId":"-"},"content":"\u003c?import java.net.URL?\u003e","lastModifiedDate":"2016-08-26"},{"lineNumber":4,"author":{"gitId":"-"},"content":"\u003c?import javafx.geometry.Insets?\u003e","lastModifiedDate":"2017-03-25"},{"lineNumber":5,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.Scene?\u003e","lastModifiedDate":"2017-11-29"},{"lineNumber":6,"author":{"gitId":"Jacky142857"},"content":"\u003c?import javafx.scene.control.Label?\u003e","lastModifiedDate":"2022-03-17"},{"lineNumber":7,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.control.Menu?\u003e","lastModifiedDate":"2017-03-25"},{"lineNumber":8,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.control.MenuBar?\u003e","lastModifiedDate":"2017-03-25"},{"lineNumber":9,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.control.MenuItem?\u003e","lastModifiedDate":"2017-03-25"},{"lineNumber":10,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.image.Image?\u003e","lastModifiedDate":"2017-11-29"},{"lineNumber":11,"author":{"gitId":"Jacky142857"},"content":"\u003c?import javafx.scene.layout.HBox?\u003e","lastModifiedDate":"2022-03-17"},{"lineNumber":12,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.layout.StackPane?\u003e","lastModifiedDate":"2017-05-09"},{"lineNumber":13,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.layout.VBox?\u003e","lastModifiedDate":"2017-03-25"},{"lineNumber":14,"author":{"gitId":"Jacky142857"},"content":"\u003c?import javafx.scene.text.Font?\u003e","lastModifiedDate":"2022-03-17"},{"lineNumber":15,"author":{"gitId":"Jacky142857"},"content":"\u003c?import javafx.stage.Stage?\u003e","lastModifiedDate":"2022-03-17"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-25"},{"lineNumber":17,"author":{"gitId":"WJunHong"},"content":"\u003cfx:root minHeight\u003d\"600\" minWidth\u003d\"1200.0\" onCloseRequest\u003d\"#handleExit\" title\u003d\"AgentSee\" type\u003d\"javafx.stage.Stage\" xmlns\u003d\"http://javafx.com/javafx/11\" xmlns:fx\u003d\"http://javafx.com/fxml/1\"\u003e","lastModifiedDate":"2022-03-31"},{"lineNumber":18,"author":{"gitId":"-"},"content":"  \u003cicons\u003e","lastModifiedDate":"2017-11-29"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    \u003cImage url\u003d\"@/images/address_book_32.png\" /\u003e","lastModifiedDate":"2017-11-29"},{"lineNumber":20,"author":{"gitId":"-"},"content":"  \u003c/icons\u003e","lastModifiedDate":"2017-11-29"},{"lineNumber":21,"author":{"gitId":"-"},"content":"  \u003cscene\u003e","lastModifiedDate":"2017-11-29"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    \u003cScene\u003e","lastModifiedDate":"2017-11-29"},{"lineNumber":23,"author":{"gitId":"-"},"content":"      \u003cstylesheets\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":24,"author":{"gitId":"-"},"content":"        \u003cURL value\u003d\"@DarkTheme.css\" /\u003e","lastModifiedDate":"2016-08-20"},{"lineNumber":25,"author":{"gitId":"-"},"content":"        \u003cURL value\u003d\"@Extensions.css\" /\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":26,"author":{"gitId":"-"},"content":"      \u003c/stylesheets\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":27,"author":{"gitId":"Jacky142857"},"content":"      \u003cHBox alignment\u003d\"CENTER\" minWidth\u003d\"1200.0\" nodeOrientation\u003d\"LEFT_TO_RIGHT\" prefWidth\u003d\"1200.0\"\u003e","lastModifiedDate":"2022-03-19"},{"lineNumber":28,"author":{"gitId":"Jacky142857"},"content":"        \u003cVBox maxWidth\u003d\"400.0\" minWidth\u003d\"400.0\" prefWidth\u003d\"400.0\" HBox.hgrow\u003d\"ALWAYS\"\u003e","lastModifiedDate":"2022-03-19"},{"lineNumber":29,"author":{"gitId":"Jacky142857"},"content":"          \u003cMenuBar fx:id\u003d\"menuBar\" minWidth\u003d\"400.0\" prefWidth\u003d\"400.0\" VBox.vgrow\u003d\"NEVER\"\u003e","lastModifiedDate":"2022-03-19"},{"lineNumber":30,"author":{"gitId":"-"},"content":"            \u003cMenu mnemonicParsing\u003d\"false\" text\u003d\"File\"\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":31,"author":{"gitId":"-"},"content":"              \u003cMenuItem mnemonicParsing\u003d\"false\" onAction\u003d\"#handleExit\" text\u003d\"Exit\" /\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":32,"author":{"gitId":"-"},"content":"            \u003c/Menu\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":33,"author":{"gitId":"-"},"content":"            \u003cMenu mnemonicParsing\u003d\"false\" text\u003d\"Help\"\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":34,"author":{"gitId":"-"},"content":"              \u003cMenuItem fx:id\u003d\"helpMenuItem\" mnemonicParsing\u003d\"false\" onAction\u003d\"#handleHelp\" text\u003d\"Help\" /\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":35,"author":{"gitId":"-"},"content":"            \u003c/Menu\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":36,"author":{"gitId":"-"},"content":"          \u003c/MenuBar\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":37,"author":{"gitId":"Jacky142857"},"content":"               \u003cHBox alignment\u003d\"CENTER\" minWidth\u003d\"400.0\" prefHeight\u003d\"50.0\" prefWidth\u003d\"200.0\" styleClass\u003d\"background\" VBox.vgrow\u003d\"NEVER\"\u003e","lastModifiedDate":"2022-03-19"},{"lineNumber":38,"author":{"gitId":"Jacky142857"},"content":"                  \u003cchildren\u003e","lastModifiedDate":"2022-03-17"},{"lineNumber":39,"author":{"gitId":"Jacky142857"},"content":"                     \u003cLabel alignment\u003d\"TOP_LEFT\" opacity\u003d\"0.0\" styleClass\u003d\"label-bright\" text\u003d\"AgentSee\" textFill\u003d\"#858585f5\" textOverrun\u003d\"CLIP\" HBox.hgrow\u003d\"ALWAYS\"\u003e","lastModifiedDate":"2022-03-31"},{"lineNumber":40,"author":{"gitId":"Jacky142857"},"content":"                        \u003cfont\u003e","lastModifiedDate":"2022-03-17"},{"lineNumber":41,"author":{"gitId":"Jacky142857"},"content":"                           \u003cFont name\u003d\"Cambria Bold\" size\u003d\"29.0\" /\u003e","lastModifiedDate":"2022-03-17"},{"lineNumber":42,"author":{"gitId":"Jacky142857"},"content":"                        \u003c/font\u003e","lastModifiedDate":"2022-03-17"},{"lineNumber":43,"author":{"gitId":"Jacky142857"},"content":"                     \u003c/Label\u003e","lastModifiedDate":"2022-03-17"},{"lineNumber":44,"author":{"gitId":"Jacky142857"},"content":"                  \u003c/children\u003e","lastModifiedDate":"2022-03-17"},{"lineNumber":45,"author":{"gitId":"Jacky142857"},"content":"               \u003c/HBox\u003e","lastModifiedDate":"2022-03-17"},{"lineNumber":46,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-25"},{"lineNumber":47,"author":{"gitId":"Jacky142857"},"content":"                \u003cStackPane fx:id\u003d\"resultDisplayPlaceholder\" alignment\u003d\"TOP_CENTER\" maxHeight\u003d\"1.7976931348623157E308\" maxWidth\u003d\"400.0\" minHeight\u003d\"100\" minWidth\u003d\"400.0\" prefHeight\u003d\"100\" prefWidth\u003d\"400.0\" styleClass\u003d\"pane-with-border\" VBox.vgrow\u003d\"ALWAYS\"\u003e","lastModifiedDate":"2022-03-19"},{"lineNumber":48,"author":{"gitId":"-"},"content":"            \u003cpadding\u003e","lastModifiedDate":"2016-09-14"},{"lineNumber":49,"author":{"gitId":"Jacky142857"},"content":"              \u003cInsets bottom\u003d\"5\" left\u003d\"10\" right\u003d\"10\" top\u003d\"5\" /\u003e","lastModifiedDate":"2022-03-17"},{"lineNumber":50,"author":{"gitId":"-"},"content":"            \u003c/padding\u003e","lastModifiedDate":"2016-09-14"},{"lineNumber":51,"author":{"gitId":"-"},"content":"          \u003c/StackPane\u003e","lastModifiedDate":"2017-05-09"},{"lineNumber":52,"author":{"gitId":"Jacky142857"},"content":"        \u003c/VBox\u003e","lastModifiedDate":"2022-03-17"},{"lineNumber":53,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-25"},{"lineNumber":54,"author":{"gitId":"Jacky142857"},"content":"        \u003cVBox alignment\u003d\"CENTER_LEFT\" minWidth\u003d\"-Infinity\" prefWidth\u003d\"800.0\" HBox.hgrow\u003d\"ALWAYS\"\u003e","lastModifiedDate":"2022-03-31"},{"lineNumber":55,"author":{"gitId":"Jacky142857"},"content":"               \u003cHBox minWidth\u003d\"720.0\" prefWidth\u003d\"800.0\" VBox.vgrow\u003d\"ALWAYS\"\u003e","lastModifiedDate":"2022-03-19"},{"lineNumber":56,"author":{"gitId":"Jacky142857"},"content":"                  \u003cchildren\u003e","lastModifiedDate":"2022-03-19"},{"lineNumber":57,"author":{"gitId":"Jacky142857"},"content":"                     \u003cVBox fx:id\u003d\"sellerList\" minWidth\u003d\"360.0\" prefWidth\u003d\"360.0\" styleClass\u003d\"pane-with-border\" HBox.hgrow\u003d\"ALWAYS\"\u003e","lastModifiedDate":"2022-03-19"},{"lineNumber":58,"author":{"gitId":"Jacky142857"},"content":"                        \u003cchildren\u003e","lastModifiedDate":"2022-03-19"},{"lineNumber":59,"author":{"gitId":"Jacky142857"},"content":"                           \u003cLabel alignment\u003d\"TOP_LEFT\" styleClass\u003d\"label-bright\" text\u003d\"Sellers\" textFill\u003d\"WHITE\" VBox.vgrow\u003d\"NEVER\" /\u003e","lastModifiedDate":"2022-03-31"},{"lineNumber":60,"author":{"gitId":"Jacky142857"},"content":"                           \u003cStackPane fx:id\u003d\"sellerListPanelPlaceholder\" prefWidth\u003d\"360.0\" VBox.vgrow\u003d\"ALWAYS\" /\u003e","lastModifiedDate":"2022-03-19"},{"lineNumber":61,"author":{"gitId":"Jacky142857"},"content":"                        \u003c/children\u003e","lastModifiedDate":"2022-03-19"},{"lineNumber":62,"author":{"gitId":"Jacky142857"},"content":"                        \u003cpadding\u003e","lastModifiedDate":"2022-03-31"},{"lineNumber":63,"author":{"gitId":"Jacky142857"},"content":"                           \u003cInsets bottom\u003d\"10.0\" left\u003d\"10.0\" right\u003d\"10.0\" top\u003d\"10.0\" /\u003e","lastModifiedDate":"2022-03-31"},{"lineNumber":64,"author":{"gitId":"Jacky142857"},"content":"                        \u003c/padding\u003e","lastModifiedDate":"2022-03-31"},{"lineNumber":65,"author":{"gitId":"Jacky142857"},"content":"                     \u003c/VBox\u003e","lastModifiedDate":"2022-03-19"},{"lineNumber":66,"author":{"gitId":"Jacky142857"},"content":"                \u003cVBox fx:id\u003d\"clientList\" minWidth\u003d\"360.0\" prefWidth\u003d\"360.0\" styleClass\u003d\"pane-with-border\" HBox.hgrow\u003d\"ALWAYS\"\u003e","lastModifiedDate":"2022-03-31"},{"lineNumber":67,"author":{"gitId":"-"},"content":"                  \u003cpadding\u003e","lastModifiedDate":"2016-08-15"},{"lineNumber":68,"author":{"gitId":"Jacky142857"},"content":"                    \u003cInsets bottom\u003d\"10\" left\u003d\"10\" right\u003d\"10\" top\u003d\"10\" /\u003e","lastModifiedDate":"2022-03-17"},{"lineNumber":69,"author":{"gitId":"-"},"content":"                  \u003c/padding\u003e","lastModifiedDate":"2016-08-15"},{"lineNumber":70,"author":{"gitId":"Jacky142857"},"content":"                        \u003cLabel alignment\u003d\"TOP_LEFT\" styleClass\u003d\"label-bright\" text\u003d\"Buyers\" textFill\u003d\"WHITE\" VBox.vgrow\u003d\"NEVER\" /\u003e","lastModifiedDate":"2022-03-31"},{"lineNumber":71,"author":{"gitId":"Jacky142857"},"content":"                  \u003cStackPane fx:id\u003d\"clientListPanelPlaceholder\" prefWidth\u003d\"360.0\" VBox.vgrow\u003d\"ALWAYS\" /\u003e","lastModifiedDate":"2022-03-19"},{"lineNumber":72,"author":{"gitId":"-"},"content":"                \u003c/VBox\u003e","lastModifiedDate":"2016-08-15"},{"lineNumber":73,"author":{"gitId":"Jacky142857"},"content":"                  \u003c/children\u003e","lastModifiedDate":"2022-03-19"},{"lineNumber":74,"author":{"gitId":"Jacky142857"},"content":"               \u003c/HBox\u003e","lastModifiedDate":"2022-03-19"},{"lineNumber":75,"author":{"gitId":"Jacky142857"},"content":"          \u003cStackPane fx:id\u003d\"commandBoxPlaceholder\" minWidth\u003d\"800.0\" styleClass\u003d\"pane-with-border\" VBox.vgrow\u003d\"NEVER\"\u003e","lastModifiedDate":"2022-03-19"},{"lineNumber":76,"author":{"gitId":"Jacky142857"},"content":"            \u003cpadding\u003e","lastModifiedDate":"2022-03-17"},{"lineNumber":77,"author":{"gitId":"Jacky142857"},"content":"              \u003cInsets bottom\u003d\"5\" left\u003d\"10\" right\u003d\"10\" top\u003d\"5\" /\u003e","lastModifiedDate":"2022-03-17"},{"lineNumber":78,"author":{"gitId":"Jacky142857"},"content":"            \u003c/padding\u003e","lastModifiedDate":"2022-03-17"},{"lineNumber":79,"author":{"gitId":"Jacky142857"},"content":"          \u003c/StackPane\u003e","lastModifiedDate":"2022-03-17"},{"lineNumber":80,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-25"},{"lineNumber":81,"author":{"gitId":"Jacky142857"},"content":"          \u003cStackPane fx:id\u003d\"statusbarPlaceholder\" minWidth\u003d\"800.0\" VBox.vgrow\u003d\"NEVER\" /\u003e","lastModifiedDate":"2022-03-19"},{"lineNumber":82,"author":{"gitId":"-"},"content":"        \u003c/VBox\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":83,"author":{"gitId":"Jacky142857"},"content":"      \u003c/HBox\u003e","lastModifiedDate":"2022-03-17"},{"lineNumber":84,"author":{"gitId":"-"},"content":"    \u003c/Scene\u003e","lastModifiedDate":"2017-11-29"},{"lineNumber":85,"author":{"gitId":"-"},"content":"  \u003c/scene\u003e","lastModifiedDate":"2017-11-29"},{"lineNumber":86,"author":{"gitId":"-"},"content":"\u003c/fx:root\u003e","lastModifiedDate":"2017-11-29"}],"authorContributionMap":{"WJunHong":1,"Jacky142857":44,"-":41}},{"path":"src/main/resources/view/ResultDisplay.fxml","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e","lastModifiedDate":"2016-09-14"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-14"},{"lineNumber":3,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.control.TextArea?\u003e","lastModifiedDate":"2016-10-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.layout.StackPane?\u003e","lastModifiedDate":"2017-06-22"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-25"},{"lineNumber":6,"author":{"gitId":"WJunHong"},"content":"\u003cStackPane fx:id\u003d\"placeHolder\" styleClass\u003d\"pane-with-border\" xmlns\u003d\"http://javafx.com/javafx/11\" xmlns:fx\u003d\"http://javafx.com/fxml/1\"\u003e","lastModifiedDate":"2022-03-31"},{"lineNumber":7,"author":{"gitId":"WJunHong"},"content":"  \u003cTextArea fx:id\u003d\"resultDisplay\" editable\u003d\"false\" styleClass\u003d\"result-display\" wrapText\u003d\"true\" /\u003e","lastModifiedDate":"2022-03-31"},{"lineNumber":8,"author":{"gitId":"-"},"content":"\u003c/StackPane\u003e","lastModifiedDate":"2017-06-22"}],"authorContributionMap":{"WJunHong":2,"-":6}},{"path":"src/main/resources/view/SellerListCard.fxml","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"Jacky142857"},"content":"\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e","lastModifiedDate":"2022-03-19"},{"lineNumber":2,"author":{"gitId":"Jacky142857"},"content":"","lastModifiedDate":"2022-03-19"},{"lineNumber":3,"author":{"gitId":"Jacky142857"},"content":"\u003c?import javafx.geometry.Insets?\u003e","lastModifiedDate":"2022-03-19"},{"lineNumber":4,"author":{"gitId":"Jacky142857"},"content":"\u003c?import javafx.scene.control.Label?\u003e","lastModifiedDate":"2022-03-19"},{"lineNumber":5,"author":{"gitId":"Jacky142857"},"content":"\u003c?import javafx.scene.image.Image?\u003e","lastModifiedDate":"2022-03-19"},{"lineNumber":6,"author":{"gitId":"Jacky142857"},"content":"\u003c?import javafx.scene.image.ImageView?\u003e","lastModifiedDate":"2022-03-19"},{"lineNumber":7,"author":{"gitId":"Jacky142857"},"content":"\u003c?import javafx.scene.layout.ColumnConstraints?\u003e","lastModifiedDate":"2022-03-19"},{"lineNumber":8,"author":{"gitId":"Jacky142857"},"content":"\u003c?import javafx.scene.layout.FlowPane?\u003e","lastModifiedDate":"2022-03-19"},{"lineNumber":9,"author":{"gitId":"Jacky142857"},"content":"\u003c?import javafx.scene.layout.GridPane?\u003e","lastModifiedDate":"2022-03-19"},{"lineNumber":10,"author":{"gitId":"Jacky142857"},"content":"\u003c?import javafx.scene.layout.HBox?\u003e","lastModifiedDate":"2022-03-19"},{"lineNumber":11,"author":{"gitId":"Jacky142857"},"content":"\u003c?import javafx.scene.layout.Region?\u003e","lastModifiedDate":"2022-03-19"},{"lineNumber":12,"author":{"gitId":"Jacky142857"},"content":"\u003c?import javafx.scene.layout.RowConstraints?\u003e","lastModifiedDate":"2022-03-19"},{"lineNumber":13,"author":{"gitId":"Jacky142857"},"content":"\u003c?import javafx.scene.layout.VBox?\u003e","lastModifiedDate":"2022-03-19"},{"lineNumber":14,"author":{"gitId":"Jacky142857"},"content":"","lastModifiedDate":"2022-03-19"},{"lineNumber":15,"author":{"gitId":"chuashihong"},"content":"\u003cHBox id\u003d\"cardPane\" fx:id\u003d\"cardPane\" style\u003d\"-fx-background-radius: 40;\" xmlns\u003d\"http://javafx.com/javafx/11\" xmlns:fx\u003d\"http://javafx.com/fxml/1\"\u003e","lastModifiedDate":"2022-03-23"},{"lineNumber":16,"author":{"gitId":"Jacky142857"},"content":"    \u003cGridPane HBox.hgrow\u003d\"ALWAYS\"\u003e","lastModifiedDate":"2022-03-19"},{"lineNumber":17,"author":{"gitId":"Jacky142857"},"content":"        \u003ccolumnConstraints\u003e","lastModifiedDate":"2022-03-19"},{"lineNumber":18,"author":{"gitId":"Jacky142857"},"content":"            \u003cColumnConstraints hgrow\u003d\"SOMETIMES\" minWidth\u003d\"10\" prefWidth\u003d\"150\" /\u003e","lastModifiedDate":"2022-03-19"},{"lineNumber":19,"author":{"gitId":"Jacky142857"},"content":"        \u003c/columnConstraints\u003e","lastModifiedDate":"2022-03-19"},{"lineNumber":20,"author":{"gitId":"Jacky142857"},"content":"        \u003cVBox alignment\u003d\"CENTER_LEFT\" minHeight\u003d\"105\" GridPane.columnIndex\u003d\"0\"\u003e","lastModifiedDate":"2022-03-19"},{"lineNumber":21,"author":{"gitId":"Jacky142857"},"content":"            \u003cpadding\u003e","lastModifiedDate":"2022-03-19"},{"lineNumber":22,"author":{"gitId":"Jacky142857"},"content":"                \u003cInsets bottom\u003d\"5\" left\u003d\"15\" right\u003d\"5\" top\u003d\"5\" /\u003e","lastModifiedDate":"2022-03-19"},{"lineNumber":23,"author":{"gitId":"Jacky142857"},"content":"            \u003c/padding\u003e","lastModifiedDate":"2022-03-19"},{"lineNumber":24,"author":{"gitId":"Jacky142857"},"content":"            \u003cHBox alignment\u003d\"CENTER_LEFT\" spacing\u003d\"5\"\u003e","lastModifiedDate":"2022-03-19"},{"lineNumber":25,"author":{"gitId":"Jacky142857"},"content":"                \u003cLabel fx:id\u003d\"id\" styleClass\u003d\"cell_big_label\"\u003e","lastModifiedDate":"2022-03-19"},{"lineNumber":26,"author":{"gitId":"Jacky142857"},"content":"                    \u003cminWidth\u003e","lastModifiedDate":"2022-03-19"},{"lineNumber":27,"author":{"gitId":"Jacky142857"},"content":"                        \u003c!-- Ensures that the label text is never truncated --\u003e","lastModifiedDate":"2022-03-19"},{"lineNumber":28,"author":{"gitId":"Jacky142857"},"content":"                        \u003cRegion fx:constant\u003d\"USE_PREF_SIZE\" /\u003e","lastModifiedDate":"2022-03-19"},{"lineNumber":29,"author":{"gitId":"Jacky142857"},"content":"                    \u003c/minWidth\u003e","lastModifiedDate":"2022-03-19"},{"lineNumber":30,"author":{"gitId":"Jacky142857"},"content":"                \u003c/Label\u003e","lastModifiedDate":"2022-03-19"},{"lineNumber":31,"author":{"gitId":"Jacky142857"},"content":"                \u003cLabel fx:id\u003d\"name\" styleClass\u003d\"cell_big_label\" text\u003d\"\\$first\" /\u003e","lastModifiedDate":"2022-03-19"},{"lineNumber":32,"author":{"gitId":"WJunHong"},"content":"            \u003cpadding\u003e","lastModifiedDate":"2022-03-31"},{"lineNumber":33,"author":{"gitId":"WJunHong"},"content":"               \u003cInsets bottom\u003d\"5.0\" /\u003e","lastModifiedDate":"2022-03-31"},{"lineNumber":34,"author":{"gitId":"WJunHong"},"content":"            \u003c/padding\u003e","lastModifiedDate":"2022-03-31"},{"lineNumber":35,"author":{"gitId":"Jacky142857"},"content":"            \u003c/HBox\u003e","lastModifiedDate":"2022-03-19"},{"lineNumber":36,"author":{"gitId":"WJunHong"},"content":"            \u003cFlowPane fx:id\u003d\"tags\"\u003e","lastModifiedDate":"2022-03-31"},{"lineNumber":37,"author":{"gitId":"WJunHong"},"content":"            \u003cVBox.margin\u003e","lastModifiedDate":"2022-03-31"},{"lineNumber":38,"author":{"gitId":"WJunHong"},"content":"               \u003cInsets bottom\u003d\"5.0\" /\u003e","lastModifiedDate":"2022-03-31"},{"lineNumber":39,"author":{"gitId":"WJunHong"},"content":"            \u003c/VBox.margin\u003e\u003c/FlowPane\u003e","lastModifiedDate":"2022-03-31"},{"lineNumber":40,"author":{"gitId":"Jacky142857"},"content":"            \u003cHBox\u003e","lastModifiedDate":"2022-03-19"},{"lineNumber":41,"author":{"gitId":"Jacky142857"},"content":"                \u003cchildren\u003e","lastModifiedDate":"2022-03-19"},{"lineNumber":42,"author":{"gitId":"WJunHong"},"content":"                    \u003cImageView fitHeight\u003d\"13.0\" fitWidth\u003d\"13.0\" opacity\u003d\"0.63\" pickOnBounds\u003d\"true\" preserveRatio\u003d\"true\" HBox.hgrow\u003d\"NEVER\"\u003e","lastModifiedDate":"2022-03-31"},{"lineNumber":43,"author":{"gitId":"Jacky142857"},"content":"                        \u003cimage\u003e","lastModifiedDate":"2022-03-19"},{"lineNumber":44,"author":{"gitId":"Jacky142857"},"content":"                            \u003cImage url\u003d\"@../images/phone.png\" /\u003e","lastModifiedDate":"2022-03-19"},{"lineNumber":45,"author":{"gitId":"Jacky142857"},"content":"                        \u003c/image\u003e","lastModifiedDate":"2022-03-19"},{"lineNumber":46,"author":{"gitId":"WJunHong"},"content":"                  \u003cHBox.margin\u003e","lastModifiedDate":"2022-03-31"},{"lineNumber":47,"author":{"gitId":"WJunHong"},"content":"                     \u003cInsets top\u003d\"2.0\" /\u003e","lastModifiedDate":"2022-03-31"},{"lineNumber":48,"author":{"gitId":"WJunHong"},"content":"                  \u003c/HBox.margin\u003e","lastModifiedDate":"2022-03-31"},{"lineNumber":49,"author":{"gitId":"Jacky142857"},"content":"                    \u003c/ImageView\u003e","lastModifiedDate":"2022-03-19"},{"lineNumber":50,"author":{"gitId":"WJunHong"},"content":"                    \u003cLabel fx:id\u003d\"phone\" styleClass\u003d\"cell_small_label\" text\u003d\"\\$phone\"\u003e","lastModifiedDate":"2022-03-31"},{"lineNumber":51,"author":{"gitId":"WJunHong"},"content":"                  \u003cpadding\u003e","lastModifiedDate":"2022-03-31"},{"lineNumber":52,"author":{"gitId":"WJunHong"},"content":"                     \u003cInsets left\u003d\"5.0\" /\u003e","lastModifiedDate":"2022-03-31"},{"lineNumber":53,"author":{"gitId":"WJunHong"},"content":"                  \u003c/padding\u003e\u003c/Label\u003e","lastModifiedDate":"2022-03-31"},{"lineNumber":54,"author":{"gitId":"Jacky142857"},"content":"                \u003c/children\u003e","lastModifiedDate":"2022-03-19"},{"lineNumber":55,"author":{"gitId":"WJunHong"},"content":"            \u003cpadding\u003e","lastModifiedDate":"2022-03-31"},{"lineNumber":56,"author":{"gitId":"WJunHong"},"content":"               \u003cInsets bottom\u003d\"5.0\" /\u003e","lastModifiedDate":"2022-03-31"},{"lineNumber":57,"author":{"gitId":"WJunHong"},"content":"            \u003c/padding\u003e","lastModifiedDate":"2022-03-31"},{"lineNumber":58,"author":{"gitId":"Jacky142857"},"content":"            \u003c/HBox\u003e","lastModifiedDate":"2022-03-19"},{"lineNumber":59,"author":{"gitId":"chuashihong"},"content":"            \u003cHBox\u003e","lastModifiedDate":"2022-03-27"},{"lineNumber":60,"author":{"gitId":"WJunHong"},"content":"                \u003cchildren\u003e","lastModifiedDate":"2022-03-31"},{"lineNumber":61,"author":{"gitId":"WJunHong"},"content":"                    \u003cImageView fitHeight\u003d\"17.0\" fitWidth\u003d\"17.0\" opacity\u003d\"0.63\" pickOnBounds\u003d\"true\" preserveRatio\u003d\"true\" scaleX\u003d\"1.1\" scaleY\u003d\"1.1\" HBox.hgrow\u003d\"NEVER\"\u003e","lastModifiedDate":"2022-03-31"},{"lineNumber":62,"author":{"gitId":"WJunHong"},"content":"                        \u003cimage\u003e","lastModifiedDate":"2022-03-31"},{"lineNumber":63,"author":{"gitId":"WJunHong"},"content":"                            \u003cImage url\u003d\"@../images/house.png\" /\u003e","lastModifiedDate":"2022-03-31"},{"lineNumber":64,"author":{"gitId":"WJunHong"},"content":"                        \u003c/image\u003e","lastModifiedDate":"2022-03-31"},{"lineNumber":65,"author":{"gitId":"WJunHong"},"content":"                        \u003cHBox.margin\u003e","lastModifiedDate":"2022-03-31"},{"lineNumber":66,"author":{"gitId":"WJunHong"},"content":"                            \u003cInsets top\u003d\"2.0\" /\u003e","lastModifiedDate":"2022-03-31"},{"lineNumber":67,"author":{"gitId":"WJunHong"},"content":"                        \u003c/HBox.margin\u003e","lastModifiedDate":"2022-03-31"},{"lineNumber":68,"author":{"gitId":"WJunHong"},"content":"                    \u003c/ImageView\u003e","lastModifiedDate":"2022-03-31"},{"lineNumber":69,"author":{"gitId":"WJunHong"},"content":"                    \u003cLabel text\u003d\"Type: \"\u003e","lastModifiedDate":"2022-03-31"},{"lineNumber":70,"author":{"gitId":"WJunHong"},"content":"                  \u003cHBox.margin\u003e","lastModifiedDate":"2022-03-31"},{"lineNumber":71,"author":{"gitId":"WJunHong"},"content":"                     \u003cInsets /\u003e","lastModifiedDate":"2022-03-31"},{"lineNumber":72,"author":{"gitId":"WJunHong"},"content":"                  \u003c/HBox.margin\u003e","lastModifiedDate":"2022-03-31"},{"lineNumber":73,"author":{"gitId":"WJunHong"},"content":"                  \u003cpadding\u003e","lastModifiedDate":"2022-03-31"},{"lineNumber":74,"author":{"gitId":"WJunHong"},"content":"                     \u003cInsets left\u003d\"5.0\" top\u003d\"2.0\" /\u003e","lastModifiedDate":"2022-03-31"},{"lineNumber":75,"author":{"gitId":"WJunHong"},"content":"                  \u003c/padding\u003e\u003c/Label\u003e","lastModifiedDate":"2022-03-31"},{"lineNumber":76,"author":{"gitId":"WJunHong"},"content":"                    \u003cLabel fx:id\u003d\"propertyType\" styleClass\u003d\"cell_small_label\"\u003e","lastModifiedDate":"2022-03-31"},{"lineNumber":77,"author":{"gitId":"WJunHong"},"content":"                  \u003cpadding\u003e","lastModifiedDate":"2022-03-31"},{"lineNumber":78,"author":{"gitId":"WJunHong"},"content":"                     \u003cInsets top\u003d\"3.0\" /\u003e","lastModifiedDate":"2022-03-31"},{"lineNumber":79,"author":{"gitId":"WJunHong"},"content":"                  \u003c/padding\u003e\u003c/Label\u003e","lastModifiedDate":"2022-03-31"},{"lineNumber":80,"author":{"gitId":"WJunHong"},"content":"                \u003c/children\u003e","lastModifiedDate":"2022-03-31"},{"lineNumber":81,"author":{"gitId":"WJunHong"},"content":"                \u003cpadding\u003e","lastModifiedDate":"2022-03-31"},{"lineNumber":82,"author":{"gitId":"WJunHong"},"content":"                    \u003cInsets bottom\u003d\"5.0\" /\u003e","lastModifiedDate":"2022-03-31"},{"lineNumber":83,"author":{"gitId":"WJunHong"},"content":"                \u003c/padding\u003e","lastModifiedDate":"2022-03-31"},{"lineNumber":84,"author":{"gitId":"chuashihong"},"content":"            \u003c/HBox\u003e","lastModifiedDate":"2022-03-27"},{"lineNumber":85,"author":{"gitId":"chuashihong"},"content":"            \u003cHBox\u003e","lastModifiedDate":"2022-03-27"},{"lineNumber":86,"author":{"gitId":"WJunHong"},"content":"                \u003cchildren\u003e","lastModifiedDate":"2022-03-31"},{"lineNumber":87,"author":{"gitId":"WJunHong"},"content":"                    \u003cImageView fitHeight\u003d\"17.0\" fitWidth\u003d\"17.0\" opacity\u003d\"0.63\" pickOnBounds\u003d\"true\" preserveRatio\u003d\"true\" scaleX\u003d\"1.1\" scaleY\u003d\"1.1\" HBox.hgrow\u003d\"NEVER\"\u003e","lastModifiedDate":"2022-03-31"},{"lineNumber":88,"author":{"gitId":"WJunHong"},"content":"                        \u003cimage\u003e","lastModifiedDate":"2022-03-31"},{"lineNumber":89,"author":{"gitId":"WJunHong"},"content":"                            \u003cImage url\u003d\"@../images/location.png\" /\u003e","lastModifiedDate":"2022-03-31"},{"lineNumber":90,"author":{"gitId":"WJunHong"},"content":"                        \u003c/image\u003e","lastModifiedDate":"2022-03-31"},{"lineNumber":91,"author":{"gitId":"WJunHong"},"content":"                        \u003cHBox.margin\u003e","lastModifiedDate":"2022-03-31"},{"lineNumber":92,"author":{"gitId":"WJunHong"},"content":"                            \u003cInsets top\u003d\"2.0\" /\u003e","lastModifiedDate":"2022-03-31"},{"lineNumber":93,"author":{"gitId":"WJunHong"},"content":"                        \u003c/HBox.margin\u003e","lastModifiedDate":"2022-03-31"},{"lineNumber":94,"author":{"gitId":"WJunHong"},"content":"                    \u003c/ImageView\u003e","lastModifiedDate":"2022-03-31"},{"lineNumber":95,"author":{"gitId":"WJunHong"},"content":"                \u003cLabel text\u003d\"Location: \"\u003e","lastModifiedDate":"2022-03-31"},{"lineNumber":96,"author":{"gitId":"WJunHong"},"content":"                  \u003cpadding\u003e","lastModifiedDate":"2022-03-31"},{"lineNumber":97,"author":{"gitId":"WJunHong"},"content":"                     \u003cInsets left\u003d\"5.0\" top\u003d\"2.0\" /\u003e","lastModifiedDate":"2022-03-31"},{"lineNumber":98,"author":{"gitId":"WJunHong"},"content":"                  \u003c/padding\u003e\u003c/Label\u003e","lastModifiedDate":"2022-03-31"},{"lineNumber":99,"author":{"gitId":"WJunHong"},"content":"                \u003cLabel fx:id\u003d\"propertyLocation\" styleClass\u003d\"cell_small_label\"\u003e","lastModifiedDate":"2022-03-31"},{"lineNumber":100,"author":{"gitId":"WJunHong"},"content":"                \u003cpadding\u003e","lastModifiedDate":"2022-03-31"},{"lineNumber":101,"author":{"gitId":"WJunHong"},"content":"                    \u003cInsets top\u003d\"3.0\" /\u003e","lastModifiedDate":"2022-03-31"},{"lineNumber":102,"author":{"gitId":"WJunHong"},"content":"                \u003c/padding\u003e\u003c/Label\u003e","lastModifiedDate":"2022-03-31"},{"lineNumber":103,"author":{"gitId":"WJunHong"},"content":"                \u003c/children\u003e","lastModifiedDate":"2022-03-31"},{"lineNumber":104,"author":{"gitId":"WJunHong"},"content":"            \u003cpadding\u003e","lastModifiedDate":"2022-03-31"},{"lineNumber":105,"author":{"gitId":"WJunHong"},"content":"               \u003cInsets bottom\u003d\"5.0\" /\u003e","lastModifiedDate":"2022-03-31"},{"lineNumber":106,"author":{"gitId":"WJunHong"},"content":"            \u003c/padding\u003e","lastModifiedDate":"2022-03-31"},{"lineNumber":107,"author":{"gitId":"chuashihong"},"content":"            \u003c/HBox\u003e","lastModifiedDate":"2022-03-27"},{"lineNumber":108,"author":{"gitId":"WJunHong"},"content":"            \u003cHBox\u003e","lastModifiedDate":"2022-03-28"},{"lineNumber":109,"author":{"gitId":"WJunHong"},"content":"                \u003cchildren\u003e","lastModifiedDate":"2022-03-31"},{"lineNumber":110,"author":{"gitId":"WJunHong"},"content":"                    \u003cImageView fitHeight\u003d\"17.0\" fitWidth\u003d\"17.0\" opacity\u003d\"0.63\" pickOnBounds\u003d\"true\" preserveRatio\u003d\"true\" scaleX\u003d\"1.1\" scaleY\u003d\"1.1\" HBox.hgrow\u003d\"NEVER\"\u003e","lastModifiedDate":"2022-03-31"},{"lineNumber":111,"author":{"gitId":"WJunHong"},"content":"                        \u003cimage\u003e","lastModifiedDate":"2022-03-31"},{"lineNumber":112,"author":{"gitId":"WJunHong"},"content":"                            \u003cImage url\u003d\"@../images/address.png\" /\u003e","lastModifiedDate":"2022-03-31"},{"lineNumber":113,"author":{"gitId":"WJunHong"},"content":"                        \u003c/image\u003e","lastModifiedDate":"2022-03-31"},{"lineNumber":114,"author":{"gitId":"WJunHong"},"content":"                        \u003cHBox.margin\u003e","lastModifiedDate":"2022-03-31"},{"lineNumber":115,"author":{"gitId":"WJunHong"},"content":"                            \u003cInsets top\u003d\"2.0\" /\u003e","lastModifiedDate":"2022-03-31"},{"lineNumber":116,"author":{"gitId":"WJunHong"},"content":"                        \u003c/HBox.margin\u003e","lastModifiedDate":"2022-03-31"},{"lineNumber":117,"author":{"gitId":"WJunHong"},"content":"                    \u003c/ImageView\u003e","lastModifiedDate":"2022-03-31"},{"lineNumber":118,"author":{"gitId":"WJunHong"},"content":"                \u003cLabel text\u003d\"Address: \"\u003e","lastModifiedDate":"2022-03-31"},{"lineNumber":119,"author":{"gitId":"WJunHong"},"content":"                  \u003cpadding\u003e","lastModifiedDate":"2022-03-31"},{"lineNumber":120,"author":{"gitId":"WJunHong"},"content":"                     \u003cInsets left\u003d\"5.0\" top\u003d\"2.0\" /\u003e","lastModifiedDate":"2022-03-31"},{"lineNumber":121,"author":{"gitId":"WJunHong"},"content":"                  \u003c/padding\u003e\u003c/Label\u003e","lastModifiedDate":"2022-03-31"},{"lineNumber":122,"author":{"gitId":"WJunHong"},"content":"                \u003cLabel fx:id\u003d\"propertyAddress\" styleClass\u003d\"cell_small_label\"\u003e","lastModifiedDate":"2022-03-31"},{"lineNumber":123,"author":{"gitId":"WJunHong"},"content":"                  \u003cpadding\u003e","lastModifiedDate":"2022-03-31"},{"lineNumber":124,"author":{"gitId":"WJunHong"},"content":"                     \u003cInsets top\u003d\"3.0\" /\u003e","lastModifiedDate":"2022-03-31"},{"lineNumber":125,"author":{"gitId":"WJunHong"},"content":"                  \u003c/padding\u003e\u003c/Label\u003e","lastModifiedDate":"2022-03-31"},{"lineNumber":126,"author":{"gitId":"WJunHong"},"content":"                \u003c/children\u003e","lastModifiedDate":"2022-03-31"},{"lineNumber":127,"author":{"gitId":"WJunHong"},"content":"            \u003cpadding\u003e","lastModifiedDate":"2022-03-31"},{"lineNumber":128,"author":{"gitId":"WJunHong"},"content":"               \u003cInsets bottom\u003d\"5.0\" /\u003e","lastModifiedDate":"2022-03-31"},{"lineNumber":129,"author":{"gitId":"WJunHong"},"content":"            \u003c/padding\u003e","lastModifiedDate":"2022-03-31"},{"lineNumber":130,"author":{"gitId":"WJunHong"},"content":"            \u003c/HBox\u003e","lastModifiedDate":"2022-03-28"},{"lineNumber":131,"author":{"gitId":"chuashihong"},"content":"            \u003cHBox\u003e","lastModifiedDate":"2022-03-27"},{"lineNumber":132,"author":{"gitId":"WJunHong"},"content":"                \u003cchildren\u003e","lastModifiedDate":"2022-03-31"},{"lineNumber":133,"author":{"gitId":"WJunHong"},"content":"                    \u003cImageView fitHeight\u003d\"17.0\" fitWidth\u003d\"17.0\" opacity\u003d\"0.63\" pickOnBounds\u003d\"true\" preserveRatio\u003d\"true\" scaleX\u003d\"1.1\" scaleY\u003d\"1.1\" HBox.hgrow\u003d\"NEVER\"\u003e","lastModifiedDate":"2022-03-31"},{"lineNumber":134,"author":{"gitId":"WJunHong"},"content":"                        \u003cimage\u003e","lastModifiedDate":"2022-03-31"},{"lineNumber":135,"author":{"gitId":"WJunHong"},"content":"                            \u003cImage url\u003d\"@../images/pricerange.png\" /\u003e","lastModifiedDate":"2022-03-31"},{"lineNumber":136,"author":{"gitId":"WJunHong"},"content":"                        \u003c/image\u003e","lastModifiedDate":"2022-03-31"},{"lineNumber":137,"author":{"gitId":"WJunHong"},"content":"                        \u003cHBox.margin\u003e","lastModifiedDate":"2022-03-31"},{"lineNumber":138,"author":{"gitId":"WJunHong"},"content":"                            \u003cInsets top\u003d\"2.0\" /\u003e","lastModifiedDate":"2022-03-31"},{"lineNumber":139,"author":{"gitId":"WJunHong"},"content":"                        \u003c/HBox.margin\u003e","lastModifiedDate":"2022-03-31"},{"lineNumber":140,"author":{"gitId":"WJunHong"},"content":"                    \u003c/ImageView\u003e","lastModifiedDate":"2022-03-31"},{"lineNumber":141,"author":{"gitId":"WJunHong"},"content":"                \u003cLabel text\u003d\"Price: ($) \"\u003e","lastModifiedDate":"2022-03-31"},{"lineNumber":142,"author":{"gitId":"WJunHong"},"content":"                  \u003cpadding\u003e","lastModifiedDate":"2022-03-31"},{"lineNumber":143,"author":{"gitId":"WJunHong"},"content":"                     \u003cInsets left\u003d\"5.0\" top\u003d\"2.0\" /\u003e","lastModifiedDate":"2022-03-31"},{"lineNumber":144,"author":{"gitId":"WJunHong"},"content":"                  \u003c/padding\u003e\u003c/Label\u003e","lastModifiedDate":"2022-03-31"},{"lineNumber":145,"author":{"gitId":"WJunHong"},"content":"                \u003cLabel fx:id\u003d\"propertyLowerPrice\" styleClass\u003d\"cell_small_label\"\u003e","lastModifiedDate":"2022-03-31"},{"lineNumber":146,"author":{"gitId":"WJunHong"},"content":"                  \u003cpadding\u003e","lastModifiedDate":"2022-03-31"},{"lineNumber":147,"author":{"gitId":"WJunHong"},"content":"                     \u003cInsets top\u003d\"3.0\" /\u003e","lastModifiedDate":"2022-03-31"},{"lineNumber":148,"author":{"gitId":"WJunHong"},"content":"                  \u003c/padding\u003e\u003c/Label\u003e","lastModifiedDate":"2022-03-31"},{"lineNumber":149,"author":{"gitId":"WJunHong"},"content":"                \u003cLabel text\u003d\" - \"\u003e","lastModifiedDate":"2022-03-31"},{"lineNumber":150,"author":{"gitId":"WJunHong"},"content":"                  \u003cHBox.margin\u003e","lastModifiedDate":"2022-03-31"},{"lineNumber":151,"author":{"gitId":"WJunHong"},"content":"                     \u003cInsets /\u003e","lastModifiedDate":"2022-03-31"},{"lineNumber":152,"author":{"gitId":"WJunHong"},"content":"                  \u003c/HBox.margin\u003e","lastModifiedDate":"2022-03-31"},{"lineNumber":153,"author":{"gitId":"WJunHong"},"content":"                  \u003cpadding\u003e","lastModifiedDate":"2022-03-31"},{"lineNumber":154,"author":{"gitId":"WJunHong"},"content":"                     \u003cInsets top\u003d\"3.0\" /\u003e","lastModifiedDate":"2022-03-31"},{"lineNumber":155,"author":{"gitId":"WJunHong"},"content":"                  \u003c/padding\u003e\u003c/Label\u003e","lastModifiedDate":"2022-03-31"},{"lineNumber":156,"author":{"gitId":"WJunHong"},"content":"                \u003cLabel fx:id\u003d\"propertyUpperPrice\" styleClass\u003d\"cell_small_label\"\u003e","lastModifiedDate":"2022-03-31"},{"lineNumber":157,"author":{"gitId":"WJunHong"},"content":"                  \u003cpadding\u003e","lastModifiedDate":"2022-03-31"},{"lineNumber":158,"author":{"gitId":"WJunHong"},"content":"                     \u003cInsets top\u003d\"3.0\" /\u003e","lastModifiedDate":"2022-03-31"},{"lineNumber":159,"author":{"gitId":"WJunHong"},"content":"                  \u003c/padding\u003e\u003c/Label\u003e","lastModifiedDate":"2022-03-31"},{"lineNumber":160,"author":{"gitId":"WJunHong"},"content":"                \u003c/children\u003e","lastModifiedDate":"2022-03-31"},{"lineNumber":161,"author":{"gitId":"WJunHong"},"content":"            \u003cpadding\u003e","lastModifiedDate":"2022-03-31"},{"lineNumber":162,"author":{"gitId":"WJunHong"},"content":"               \u003cInsets bottom\u003d\"5.0\" /\u003e","lastModifiedDate":"2022-03-31"},{"lineNumber":163,"author":{"gitId":"WJunHong"},"content":"            \u003c/padding\u003e","lastModifiedDate":"2022-03-31"},{"lineNumber":164,"author":{"gitId":"chuashihong"},"content":"            \u003c/HBox\u003e","lastModifiedDate":"2022-03-27"},{"lineNumber":165,"author":{"gitId":"Jacky142857"},"content":"            \u003cHBox\u003e","lastModifiedDate":"2022-03-19"},{"lineNumber":166,"author":{"gitId":"Jacky142857"},"content":"                \u003cchildren\u003e","lastModifiedDate":"2022-03-19"},{"lineNumber":167,"author":{"gitId":"Jacky142857"},"content":"                    \u003cImageView fitHeight\u003d\"17.0\" fitWidth\u003d\"17.0\" pickOnBounds\u003d\"true\" preserveRatio\u003d\"true\"\u003e","lastModifiedDate":"2022-03-19"},{"lineNumber":168,"author":{"gitId":"Jacky142857"},"content":"                        \u003cimage\u003e","lastModifiedDate":"2022-03-19"},{"lineNumber":169,"author":{"gitId":"WJunHong"},"content":"                            \u003cImage url\u003d\"@../images/clock2.png\" /\u003e","lastModifiedDate":"2022-03-31"},{"lineNumber":170,"author":{"gitId":"Jacky142857"},"content":"                        \u003c/image\u003e","lastModifiedDate":"2022-03-19"},{"lineNumber":171,"author":{"gitId":"WJunHong"},"content":"                  \u003cHBox.margin\u003e","lastModifiedDate":"2022-03-31"},{"lineNumber":172,"author":{"gitId":"WJunHong"},"content":"                     \u003cInsets top\u003d\"3.0\" /\u003e","lastModifiedDate":"2022-03-31"},{"lineNumber":173,"author":{"gitId":"WJunHong"},"content":"                  \u003c/HBox.margin\u003e","lastModifiedDate":"2022-03-31"},{"lineNumber":174,"author":{"gitId":"Jacky142857"},"content":"                    \u003c/ImageView\u003e","lastModifiedDate":"2022-03-19"},{"lineNumber":175,"author":{"gitId":"WJunHong"},"content":"                    \u003cLabel fx:id\u003d\"appointment\" styleClass\u003d\"cell_small_label\" text\u003d\"\\$appointment\"\u003e","lastModifiedDate":"2022-03-31"},{"lineNumber":176,"author":{"gitId":"WJunHong"},"content":"                  \u003cpadding\u003e","lastModifiedDate":"2022-03-31"},{"lineNumber":177,"author":{"gitId":"WJunHong"},"content":"                     \u003cInsets left\u003d\"5.0\" top\u003d\"3.0\" /\u003e","lastModifiedDate":"2022-03-31"},{"lineNumber":178,"author":{"gitId":"WJunHong"},"content":"                  \u003c/padding\u003e\u003c/Label\u003e","lastModifiedDate":"2022-03-31"},{"lineNumber":179,"author":{"gitId":"Jacky142857"},"content":"                \u003c/children\u003e","lastModifiedDate":"2022-03-19"},{"lineNumber":180,"author":{"gitId":"Jacky142857"},"content":"            \u003c/HBox\u003e","lastModifiedDate":"2022-03-19"},{"lineNumber":181,"author":{"gitId":"Jacky142857"},"content":"","lastModifiedDate":"2022-03-19"},{"lineNumber":182,"author":{"gitId":"Jacky142857"},"content":"        \u003c/VBox\u003e","lastModifiedDate":"2022-03-19"},{"lineNumber":183,"author":{"gitId":"Jacky142857"},"content":"        \u003crowConstraints\u003e","lastModifiedDate":"2022-03-19"},{"lineNumber":184,"author":{"gitId":"Jacky142857"},"content":"            \u003cRowConstraints /\u003e","lastModifiedDate":"2022-03-19"},{"lineNumber":185,"author":{"gitId":"Jacky142857"},"content":"        \u003c/rowConstraints\u003e","lastModifiedDate":"2022-03-19"},{"lineNumber":186,"author":{"gitId":"Jacky142857"},"content":"    \u003c/GridPane\u003e","lastModifiedDate":"2022-03-19"},{"lineNumber":187,"author":{"gitId":"Jacky142857"},"content":"    \u003copaqueInsets\u003e","lastModifiedDate":"2022-03-19"},{"lineNumber":188,"author":{"gitId":"Jacky142857"},"content":"        \u003cInsets /\u003e","lastModifiedDate":"2022-03-19"},{"lineNumber":189,"author":{"gitId":"Jacky142857"},"content":"    \u003c/opaqueInsets\u003e","lastModifiedDate":"2022-03-19"},{"lineNumber":190,"author":{"gitId":"Jacky142857"},"content":"    \u003cpadding\u003e","lastModifiedDate":"2022-03-19"},{"lineNumber":191,"author":{"gitId":"Jacky142857"},"content":"        \u003cInsets bottom\u003d\"5.0\" top\u003d\"5.0\" /\u003e","lastModifiedDate":"2022-03-19"},{"lineNumber":192,"author":{"gitId":"Jacky142857"},"content":"    \u003c/padding\u003e","lastModifiedDate":"2022-03-19"},{"lineNumber":193,"author":{"gitId":"Jacky142857"},"content":"\u003c/HBox\u003e","lastModifiedDate":"2022-03-19"}],"authorContributionMap":{"WJunHong":126,"Jacky142857":60,"chuashihong":7}},{"path":"src/main/resources/view/SellerListPanel.fxml","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"Jacky142857"},"content":"\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e","lastModifiedDate":"2022-03-19"},{"lineNumber":2,"author":{"gitId":"Jacky142857"},"content":"","lastModifiedDate":"2022-03-19"},{"lineNumber":3,"author":{"gitId":"Jacky142857"},"content":"\u003c?import javafx.scene.control.ListView?\u003e","lastModifiedDate":"2022-03-19"},{"lineNumber":4,"author":{"gitId":"Jacky142857"},"content":"\u003c?import javafx.scene.layout.VBox?\u003e","lastModifiedDate":"2022-03-19"},{"lineNumber":5,"author":{"gitId":"Jacky142857"},"content":"","lastModifiedDate":"2022-03-19"},{"lineNumber":6,"author":{"gitId":"Jacky142857"},"content":"\u003cVBox xmlns\u003d\"http://javafx.com/javafx/8\" xmlns:fx\u003d\"http://javafx.com/fxml/1\"\u003e","lastModifiedDate":"2022-03-19"},{"lineNumber":7,"author":{"gitId":"Jacky142857"},"content":"    \u003cListView fx:id\u003d\"sellerListView\" VBox.vgrow\u003d\"ALWAYS\" /\u003e","lastModifiedDate":"2022-03-19"},{"lineNumber":8,"author":{"gitId":"Jacky142857"},"content":"\u003c/VBox\u003e","lastModifiedDate":"2022-03-19"}],"authorContributionMap":{"Jacky142857":8}},{"path":"src/test/java/seedu/address/commons/core/index/IndexTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.commons.core.index;","lastModifiedDate":"2017-05-24"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-24"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2019-03-15"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.Assert.assertThrows;","lastModifiedDate":"2019-03-23"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-24"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-24"},{"lineNumber":10,"author":{"gitId":"-"},"content":"public class IndexTest {","lastModifiedDate":"2017-05-24"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-24"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-24"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    public void createOneBasedIndex() {","lastModifiedDate":"2017-05-24"},{"lineNumber":14,"author":{"gitId":"-"},"content":"        // invalid index","lastModifiedDate":"2017-05-24"},{"lineNumber":15,"author":{"gitId":"-"},"content":"        assertThrows(IndexOutOfBoundsException.class, () -\u003e Index.fromOneBased(0));","lastModifiedDate":"2019-03-23"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-24"},{"lineNumber":17,"author":{"gitId":"-"},"content":"        // check equality using the same base","lastModifiedDate":"2017-05-24"},{"lineNumber":18,"author":{"gitId":"-"},"content":"        assertEquals(1, Index.fromOneBased(1).getOneBased());","lastModifiedDate":"2017-05-24"},{"lineNumber":19,"author":{"gitId":"-"},"content":"        assertEquals(5, Index.fromOneBased(5).getOneBased());","lastModifiedDate":"2017-05-24"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-24"},{"lineNumber":21,"author":{"gitId":"-"},"content":"        // convert from one-based index to zero-based index","lastModifiedDate":"2017-05-24"},{"lineNumber":22,"author":{"gitId":"-"},"content":"        assertEquals(0, Index.fromOneBased(1).getZeroBased());","lastModifiedDate":"2017-05-24"},{"lineNumber":23,"author":{"gitId":"-"},"content":"        assertEquals(4, Index.fromOneBased(5).getZeroBased());","lastModifiedDate":"2017-05-24"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-24"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-24"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-24"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    public void createZeroBasedIndex() {","lastModifiedDate":"2017-05-24"},{"lineNumber":28,"author":{"gitId":"-"},"content":"        // invalid index","lastModifiedDate":"2017-05-24"},{"lineNumber":29,"author":{"gitId":"-"},"content":"        assertThrows(IndexOutOfBoundsException.class, () -\u003e Index.fromZeroBased(-1));","lastModifiedDate":"2019-03-23"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-24"},{"lineNumber":31,"author":{"gitId":"-"},"content":"        // check equality using the same base","lastModifiedDate":"2017-05-24"},{"lineNumber":32,"author":{"gitId":"-"},"content":"        assertEquals(0, Index.fromZeroBased(0).getZeroBased());","lastModifiedDate":"2017-05-24"},{"lineNumber":33,"author":{"gitId":"-"},"content":"        assertEquals(5, Index.fromZeroBased(5).getZeroBased());","lastModifiedDate":"2017-05-24"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-24"},{"lineNumber":35,"author":{"gitId":"-"},"content":"        // convert from zero-based index to one-based index","lastModifiedDate":"2017-05-24"},{"lineNumber":36,"author":{"gitId":"-"},"content":"        assertEquals(1, Index.fromZeroBased(0).getOneBased());","lastModifiedDate":"2017-05-24"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        assertEquals(6, Index.fromZeroBased(5).getOneBased());","lastModifiedDate":"2017-05-24"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-24"},{"lineNumber":39,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-24"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-24"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    public void equals() {","lastModifiedDate":"2017-05-24"},{"lineNumber":42,"author":{"gitId":"cwnm"},"content":"        final Index fifthclientIndex \u003d Index.fromOneBased(5);","lastModifiedDate":"2022-03-04"},{"lineNumber":43,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-24"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        // same values -\u003e returns true","lastModifiedDate":"2017-05-24"},{"lineNumber":45,"author":{"gitId":"cwnm"},"content":"        assertTrue(fifthclientIndex.equals(Index.fromOneBased(5)));","lastModifiedDate":"2022-03-04"},{"lineNumber":46,"author":{"gitId":"cwnm"},"content":"        assertTrue(fifthclientIndex.equals(Index.fromZeroBased(4)));","lastModifiedDate":"2022-03-04"},{"lineNumber":47,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-24"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2017-05-24"},{"lineNumber":49,"author":{"gitId":"cwnm"},"content":"        assertTrue(fifthclientIndex.equals(fifthclientIndex));","lastModifiedDate":"2022-03-04"},{"lineNumber":50,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-24"},{"lineNumber":51,"author":{"gitId":"-"},"content":"        // null -\u003e returns false","lastModifiedDate":"2017-05-24"},{"lineNumber":52,"author":{"gitId":"cwnm"},"content":"        assertFalse(fifthclientIndex.equals(null));","lastModifiedDate":"2022-03-04"},{"lineNumber":53,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-24"},{"lineNumber":54,"author":{"gitId":"-"},"content":"        // different types -\u003e returns false","lastModifiedDate":"2017-05-24"},{"lineNumber":55,"author":{"gitId":"cwnm"},"content":"        assertFalse(fifthclientIndex.equals(5.0f));","lastModifiedDate":"2022-03-04"},{"lineNumber":56,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-24"},{"lineNumber":57,"author":{"gitId":"-"},"content":"        // different index -\u003e returns false","lastModifiedDate":"2017-05-24"},{"lineNumber":58,"author":{"gitId":"cwnm"},"content":"        assertFalse(fifthclientIndex.equals(Index.fromOneBased(1)));","lastModifiedDate":"2022-03-04"},{"lineNumber":59,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-24"},{"lineNumber":60,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-05-24"}],"authorContributionMap":{"-":53,"cwnm":7}},{"path":"src/test/java/seedu/address/commons/util/StringUtilTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.commons.util;","lastModifiedDate":"2016-09-23"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.Assert.assertThrows;","lastModifiedDate":"2019-03-23"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import java.io.FileNotFoundException;","lastModifiedDate":"2017-01-19"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":11,"author":{"gitId":"-"},"content":"public class StringUtilTest {","lastModifiedDate":"2016-09-22"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    //---------------- Tests for isNonZeroUnsignedInteger --------------------------------------","lastModifiedDate":"2019-02-24"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-13"},{"lineNumber":15,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-09-22"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    public void isNonZeroUnsignedInteger() {","lastModifiedDate":"2019-02-24"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-12"},{"lineNumber":18,"author":{"gitId":"-"},"content":"        // EP: empty strings","lastModifiedDate":"2016-10-12"},{"lineNumber":19,"author":{"gitId":"-"},"content":"        assertFalse(StringUtil.isNonZeroUnsignedInteger(\"\")); // Boundary value","lastModifiedDate":"2017-06-02"},{"lineNumber":20,"author":{"gitId":"-"},"content":"        assertFalse(StringUtil.isNonZeroUnsignedInteger(\"  \"));","lastModifiedDate":"2017-06-02"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-12"},{"lineNumber":22,"author":{"gitId":"-"},"content":"        // EP: not a number","lastModifiedDate":"2016-10-12"},{"lineNumber":23,"author":{"gitId":"-"},"content":"        assertFalse(StringUtil.isNonZeroUnsignedInteger(\"a\"));","lastModifiedDate":"2017-06-02"},{"lineNumber":24,"author":{"gitId":"-"},"content":"        assertFalse(StringUtil.isNonZeroUnsignedInteger(\"aaa\"));","lastModifiedDate":"2017-06-02"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-12"},{"lineNumber":26,"author":{"gitId":"-"},"content":"        // EP: zero","lastModifiedDate":"2016-10-12"},{"lineNumber":27,"author":{"gitId":"-"},"content":"        assertFalse(StringUtil.isNonZeroUnsignedInteger(\"0\"));","lastModifiedDate":"2017-06-02"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-02"},{"lineNumber":29,"author":{"gitId":"-"},"content":"        // EP: zero as prefix","lastModifiedDate":"2017-06-02"},{"lineNumber":30,"author":{"gitId":"-"},"content":"        assertTrue(StringUtil.isNonZeroUnsignedInteger(\"01\"));","lastModifiedDate":"2017-06-02"},{"lineNumber":31,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":32,"author":{"gitId":"-"},"content":"        // EP: signed numbers","lastModifiedDate":"2016-10-12"},{"lineNumber":33,"author":{"gitId":"-"},"content":"        assertFalse(StringUtil.isNonZeroUnsignedInteger(\"-1\"));","lastModifiedDate":"2017-06-02"},{"lineNumber":34,"author":{"gitId":"-"},"content":"        assertFalse(StringUtil.isNonZeroUnsignedInteger(\"+1\"));","lastModifiedDate":"2017-06-02"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-12"},{"lineNumber":36,"author":{"gitId":"-"},"content":"        // EP: numbers with white space","lastModifiedDate":"2016-10-12"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        assertFalse(StringUtil.isNonZeroUnsignedInteger(\" 10 \")); // Leading/trailing spaces","lastModifiedDate":"2017-06-02"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        assertFalse(StringUtil.isNonZeroUnsignedInteger(\"1 0\")); // Spaces in the middle","lastModifiedDate":"2017-06-02"},{"lineNumber":39,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-02"},{"lineNumber":40,"author":{"gitId":"-"},"content":"        // EP: number larger than Integer.MAX_VALUE","lastModifiedDate":"2017-06-02"},{"lineNumber":41,"author":{"gitId":"-"},"content":"        assertFalse(StringUtil.isNonZeroUnsignedInteger(Long.toString(Integer.MAX_VALUE + 1)));","lastModifiedDate":"2017-06-02"},{"lineNumber":42,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-12"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        // EP: valid numbers, should return true","lastModifiedDate":"2016-10-12"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        assertTrue(StringUtil.isNonZeroUnsignedInteger(\"1\")); // Boundary value","lastModifiedDate":"2017-06-02"},{"lineNumber":45,"author":{"gitId":"-"},"content":"        assertTrue(StringUtil.isNonZeroUnsignedInteger(\"10\"));","lastModifiedDate":"2017-06-02"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-22"},{"lineNumber":47,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":48,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-13"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    //---------------- Tests for containsWordIgnoreCase --------------------------------------","lastModifiedDate":"2016-10-13"},{"lineNumber":50,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-13"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    /*","lastModifiedDate":"2016-10-13"},{"lineNumber":52,"author":{"gitId":"-"},"content":"     * Invalid equivalence partitions for word: null, empty, multiple words","lastModifiedDate":"2016-10-13"},{"lineNumber":53,"author":{"gitId":"-"},"content":"     * Invalid equivalence partitions for sentence: null","lastModifiedDate":"2016-10-13"},{"lineNumber":54,"author":{"gitId":"-"},"content":"     * The four test cases below test one invalid input at a time.","lastModifiedDate":"2016-10-13"},{"lineNumber":55,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-10-13"},{"lineNumber":56,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-13"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-10-13"},{"lineNumber":58,"author":{"gitId":"-"},"content":"    public void containsWordIgnoreCase_nullWord_throwsNullPointerException() {","lastModifiedDate":"2017-05-15"},{"lineNumber":59,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e StringUtil.containsWordIgnoreCase(\"typical sentence\", null));","lastModifiedDate":"2019-03-23"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-10-13"},{"lineNumber":61,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-13"},{"lineNumber":62,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-10-13"},{"lineNumber":63,"author":{"gitId":"-"},"content":"    public void containsWordIgnoreCase_emptyWord_throwsIllegalArgumentException() {","lastModifiedDate":"2017-05-15"},{"lineNumber":64,"author":{"gitId":"-"},"content":"        assertThrows(IllegalArgumentException.class, \"Word parameter cannot be empty\", ()","lastModifiedDate":"2019-03-23"},{"lineNumber":65,"author":{"gitId":"-"},"content":"            -\u003e StringUtil.containsWordIgnoreCase(\"typical sentence\", \"  \"));","lastModifiedDate":"2019-03-23"},{"lineNumber":66,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-10-13"},{"lineNumber":67,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-13"},{"lineNumber":68,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-10-13"},{"lineNumber":69,"author":{"gitId":"-"},"content":"    public void containsWordIgnoreCase_multipleWords_throwsIllegalArgumentException() {","lastModifiedDate":"2017-05-15"},{"lineNumber":70,"author":{"gitId":"-"},"content":"        assertThrows(IllegalArgumentException.class, \"Word parameter should be a single word\", ()","lastModifiedDate":"2019-03-23"},{"lineNumber":71,"author":{"gitId":"-"},"content":"            -\u003e StringUtil.containsWordIgnoreCase(\"typical sentence\", \"aaa BBB\"));","lastModifiedDate":"2019-03-23"},{"lineNumber":72,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-10-13"},{"lineNumber":73,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-13"},{"lineNumber":74,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-10-13"},{"lineNumber":75,"author":{"gitId":"-"},"content":"    public void containsWordIgnoreCase_nullSentence_throwsNullPointerException() {","lastModifiedDate":"2017-05-15"},{"lineNumber":76,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e StringUtil.containsWordIgnoreCase(null, \"abc\"));","lastModifiedDate":"2019-03-23"},{"lineNumber":77,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-10-13"},{"lineNumber":78,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-13"},{"lineNumber":79,"author":{"gitId":"-"},"content":"    /*","lastModifiedDate":"2016-10-13"},{"lineNumber":80,"author":{"gitId":"-"},"content":"     * Valid equivalence partitions for word:","lastModifiedDate":"2016-10-13"},{"lineNumber":81,"author":{"gitId":"-"},"content":"     *   - any word","lastModifiedDate":"2016-10-13"},{"lineNumber":82,"author":{"gitId":"-"},"content":"     *   - word containing symbols/numbers","lastModifiedDate":"2016-10-13"},{"lineNumber":83,"author":{"gitId":"-"},"content":"     *   - word with leading/trailing spaces","lastModifiedDate":"2016-10-13"},{"lineNumber":84,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2016-10-13"},{"lineNumber":85,"author":{"gitId":"-"},"content":"     * Valid equivalence partitions for sentence:","lastModifiedDate":"2016-10-13"},{"lineNumber":86,"author":{"gitId":"-"},"content":"     *   - empty string","lastModifiedDate":"2016-10-13"},{"lineNumber":87,"author":{"gitId":"-"},"content":"     *   - one word","lastModifiedDate":"2016-10-13"},{"lineNumber":88,"author":{"gitId":"-"},"content":"     *   - multiple words","lastModifiedDate":"2016-10-13"},{"lineNumber":89,"author":{"gitId":"-"},"content":"     *   - sentence with extra spaces","lastModifiedDate":"2016-10-13"},{"lineNumber":90,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2016-10-13"},{"lineNumber":91,"author":{"gitId":"-"},"content":"     * Possible scenarios returning true:","lastModifiedDate":"2016-10-13"},{"lineNumber":92,"author":{"gitId":"-"},"content":"     *   - matches first word in sentence","lastModifiedDate":"2016-10-13"},{"lineNumber":93,"author":{"gitId":"-"},"content":"     *   - last word in sentence","lastModifiedDate":"2016-10-13"},{"lineNumber":94,"author":{"gitId":"-"},"content":"     *   - middle word in sentence","lastModifiedDate":"2016-10-13"},{"lineNumber":95,"author":{"gitId":"-"},"content":"     *   - matches multiple words","lastModifiedDate":"2016-10-13"},{"lineNumber":96,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2016-10-13"},{"lineNumber":97,"author":{"gitId":"-"},"content":"     * Possible scenarios returning false:","lastModifiedDate":"2016-10-13"},{"lineNumber":98,"author":{"gitId":"-"},"content":"     *   - query word matches part of a sentence word","lastModifiedDate":"2016-10-13"},{"lineNumber":99,"author":{"gitId":"-"},"content":"     *   - sentence word matches part of the query word","lastModifiedDate":"2016-10-13"},{"lineNumber":100,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2016-10-13"},{"lineNumber":101,"author":{"gitId":"-"},"content":"     * The test method below tries to verify all above with a reasonably low number of test cases.","lastModifiedDate":"2016-10-13"},{"lineNumber":102,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-10-13"},{"lineNumber":103,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-13"},{"lineNumber":104,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-10-13"},{"lineNumber":105,"author":{"gitId":"-"},"content":"    public void containsWordIgnoreCase_validInputs_correctResult() {","lastModifiedDate":"2016-10-13"},{"lineNumber":106,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-13"},{"lineNumber":107,"author":{"gitId":"-"},"content":"        // Empty sentence","lastModifiedDate":"2016-10-13"},{"lineNumber":108,"author":{"gitId":"-"},"content":"        assertFalse(StringUtil.containsWordIgnoreCase(\"\", \"abc\")); // Boundary case","lastModifiedDate":"2016-10-13"},{"lineNumber":109,"author":{"gitId":"-"},"content":"        assertFalse(StringUtil.containsWordIgnoreCase(\"    \", \"123\"));","lastModifiedDate":"2016-10-13"},{"lineNumber":110,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-13"},{"lineNumber":111,"author":{"gitId":"-"},"content":"        // Matches a partial word only","lastModifiedDate":"2016-10-13"},{"lineNumber":112,"author":{"gitId":"-"},"content":"        assertFalse(StringUtil.containsWordIgnoreCase(\"aaa bbb ccc\", \"bbbb\")); // Query word bigger than sentence word","lastModifiedDate":"2016-10-13"},{"lineNumber":113,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-13"},{"lineNumber":114,"author":{"gitId":"-"},"content":"        // Matches word in the sentence, different upper/lower case letters","lastModifiedDate":"2016-10-13"},{"lineNumber":115,"author":{"gitId":"WJunHong"},"content":"        assertTrue(StringUtil.containsWordIgnoreCase(\"aaa bbb ccc\", \"bb\")); // Ok to have subset word","lastModifiedDate":"2022-03-02"},{"lineNumber":116,"author":{"gitId":"-"},"content":"        assertTrue(StringUtil.containsWordIgnoreCase(\"aaa bBb ccc\", \"Bbb\")); // First word (boundary case)","lastModifiedDate":"2016-10-13"},{"lineNumber":117,"author":{"gitId":"-"},"content":"        assertTrue(StringUtil.containsWordIgnoreCase(\"aaa bBb ccc@1\", \"CCc@1\")); // Last word (boundary case)","lastModifiedDate":"2016-10-13"},{"lineNumber":118,"author":{"gitId":"-"},"content":"        assertTrue(StringUtil.containsWordIgnoreCase(\"  AAA   bBb   ccc  \", \"aaa\")); // Sentence has extra spaces","lastModifiedDate":"2016-10-13"},{"lineNumber":119,"author":{"gitId":"-"},"content":"        assertTrue(StringUtil.containsWordIgnoreCase(\"Aaa\", \"aaa\")); // Only one word in sentence (boundary case)","lastModifiedDate":"2016-10-13"},{"lineNumber":120,"author":{"gitId":"-"},"content":"        assertTrue(StringUtil.containsWordIgnoreCase(\"aaa bbb ccc\", \"  ccc  \")); // Leading/trailing spaces","lastModifiedDate":"2016-10-13"},{"lineNumber":121,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-13"},{"lineNumber":122,"author":{"gitId":"-"},"content":"        // Matches multiple words in sentence","lastModifiedDate":"2016-10-13"},{"lineNumber":123,"author":{"gitId":"-"},"content":"        assertTrue(StringUtil.containsWordIgnoreCase(\"AAA bBb ccc  bbb\", \"bbB\"));","lastModifiedDate":"2016-10-13"},{"lineNumber":124,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-10-13"},{"lineNumber":125,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-13"},{"lineNumber":126,"author":{"gitId":"-"},"content":"    //---------------- Tests for getDetails --------------------------------------","lastModifiedDate":"2016-10-13"},{"lineNumber":127,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-13"},{"lineNumber":128,"author":{"gitId":"-"},"content":"    /*","lastModifiedDate":"2016-10-13"},{"lineNumber":129,"author":{"gitId":"-"},"content":"     * Equivalence Partitions: null, valid throwable object","lastModifiedDate":"2016-10-13"},{"lineNumber":130,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-10-13"},{"lineNumber":131,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-13"},{"lineNumber":132,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-09-30"},{"lineNumber":133,"author":{"gitId":"-"},"content":"    public void getDetails_exceptionGiven() {","lastModifiedDate":"2016-09-30"},{"lineNumber":134,"author":{"gitId":"-"},"content":"        assertTrue(StringUtil.getDetails(new FileNotFoundException(\"file not found\"))","lastModifiedDate":"2019-03-14"},{"lineNumber":135,"author":{"gitId":"-"},"content":"            .contains(\"java.io.FileNotFoundException: file not found\"));","lastModifiedDate":"2019-03-14"},{"lineNumber":136,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-30"},{"lineNumber":137,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-30"},{"lineNumber":138,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-09-30"},{"lineNumber":139,"author":{"gitId":"-"},"content":"    public void getDetails_nullGiven_throwsNullPointerException() {","lastModifiedDate":"2017-05-15"},{"lineNumber":140,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e StringUtil.getDetails(null));","lastModifiedDate":"2019-03-23"},{"lineNumber":141,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-30"},{"lineNumber":142,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-30"},{"lineNumber":143,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-09-22"}],"authorContributionMap":{"WJunHong":1,"-":142}},{"path":"src/test/java/seedu/address/logic/LogicManagerTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic;","lastModifiedDate":"2016-09-21"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static seedu.address.commons.core.Messages.MESSAGE_UNKNOWN_COMMAND;","lastModifiedDate":"2017-01-19"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.Assert.assertThrows;","lastModifiedDate":"2019-03-14"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import java.io.IOException;","lastModifiedDate":"2018-12-09"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-12-09"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.BeforeEach;","lastModifiedDate":"2019-04-25"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-25"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.io.TempDir;","lastModifiedDate":"2019-04-25"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.CommandResult;","lastModifiedDate":"2017-01-18"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.exceptions.CommandException;","lastModifiedDate":"2017-02-05"},{"lineNumber":16,"author":{"gitId":"-"},"content":"import seedu.address.logic.parser.exceptions.ParseException;","lastModifiedDate":"2017-03-11"},{"lineNumber":17,"author":{"gitId":"WJunHong"},"content":"import seedu.address.model.BuyerAddressBook;","lastModifiedDate":"2022-03-23"},{"lineNumber":18,"author":{"gitId":"-"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2016-09-25"},{"lineNumber":19,"author":{"gitId":"-"},"content":"import seedu.address.model.ModelManager;","lastModifiedDate":"2016-09-21"},{"lineNumber":20,"author":{"gitId":"-"},"content":"import seedu.address.model.ReadOnlyAddressBook;","lastModifiedDate":"2018-12-09"},{"lineNumber":21,"author":{"gitId":"Jacky142857"},"content":"import seedu.address.model.SellerAddressBook;","lastModifiedDate":"2022-03-19"},{"lineNumber":22,"author":{"gitId":"-"},"content":"import seedu.address.model.UserPrefs;","lastModifiedDate":"2017-05-31"},{"lineNumber":23,"author":{"gitId":"-"},"content":"import seedu.address.storage.JsonAddressBookStorage;","lastModifiedDate":"2018-12-09"},{"lineNumber":24,"author":{"gitId":"WJunHong"},"content":"import seedu.address.storage.JsonBuyerAddressBookStorage;","lastModifiedDate":"2022-03-23"},{"lineNumber":25,"author":{"gitId":"Jacky142857"},"content":"import seedu.address.storage.JsonSellerAddressBookStorage;","lastModifiedDate":"2022-03-19"},{"lineNumber":26,"author":{"gitId":"-"},"content":"import seedu.address.storage.JsonUserPrefsStorage;","lastModifiedDate":"2018-12-09"},{"lineNumber":27,"author":{"gitId":"-"},"content":"import seedu.address.storage.StorageManager;","lastModifiedDate":"2018-12-09"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":29,"author":{"gitId":"-"},"content":"public class LogicManagerTest {","lastModifiedDate":"2016-09-22"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    private static final IOException DUMMY_IO_EXCEPTION \u003d new IOException(\"dummy exception\");","lastModifiedDate":"2018-12-09"},{"lineNumber":31,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    @TempDir","lastModifiedDate":"2019-04-25"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    public Path temporaryFolder;","lastModifiedDate":"2019-04-25"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    private Model model \u003d new ModelManager();","lastModifiedDate":"2017-06-20"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    private Logic logic;","lastModifiedDate":"2018-12-09"},{"lineNumber":37,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    @BeforeEach","lastModifiedDate":"2019-04-25"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    public void setUp() {","lastModifiedDate":"2019-04-25"},{"lineNumber":40,"author":{"gitId":"-"},"content":"        JsonAddressBookStorage addressBookStorage \u003d","lastModifiedDate":"2019-04-25"},{"lineNumber":41,"author":{"gitId":"-"},"content":"                new JsonAddressBookStorage(temporaryFolder.resolve(\"addressBook.json\"));","lastModifiedDate":"2019-04-25"},{"lineNumber":42,"author":{"gitId":"-"},"content":"        JsonUserPrefsStorage userPrefsStorage \u003d new JsonUserPrefsStorage(temporaryFolder.resolve(\"userPrefs.json\"));","lastModifiedDate":"2019-04-25"},{"lineNumber":43,"author":{"gitId":"Jacky142857"},"content":"        JsonSellerAddressBookStorage sellerAddressBookStorage \u003d new JsonSellerAddressBookStorage(","lastModifiedDate":"2022-03-19"},{"lineNumber":44,"author":{"gitId":"Jacky142857"},"content":"                temporaryFolder.resolve(\"selleraddressbook.json\"));","lastModifiedDate":"2022-03-19"},{"lineNumber":45,"author":{"gitId":"WJunHong"},"content":"        JsonBuyerAddressBookStorage buyerAddressBookStorage \u003d new JsonBuyerAddressBookStorage(","lastModifiedDate":"2022-03-23"},{"lineNumber":46,"author":{"gitId":"WJunHong"},"content":"                temporaryFolder.resolve(\"buyeraddressbook.json\"));","lastModifiedDate":"2022-03-23"},{"lineNumber":47,"author":{"gitId":"WJunHong"},"content":"        StorageManager storage \u003d new StorageManager(addressBookStorage, userPrefsStorage, sellerAddressBookStorage,","lastModifiedDate":"2022-03-23"},{"lineNumber":48,"author":{"gitId":"WJunHong"},"content":"                buyerAddressBookStorage);","lastModifiedDate":"2022-03-23"},{"lineNumber":49,"author":{"gitId":"-"},"content":"        logic \u003d new LogicManager(model, storage);","lastModifiedDate":"2018-12-09"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-12-09"},{"lineNumber":51,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-20"},{"lineNumber":53,"author":{"gitId":"-"},"content":"    public void execute_invalidCommandFormat_throwsParseException() {","lastModifiedDate":"2017-08-15"},{"lineNumber":54,"author":{"gitId":"-"},"content":"        String invalidCommand \u003d \"uicfhmowqewca\";","lastModifiedDate":"2017-06-20"},{"lineNumber":55,"author":{"gitId":"-"},"content":"        assertParseException(invalidCommand, MESSAGE_UNKNOWN_COMMAND);","lastModifiedDate":"2017-06-20"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-20"},{"lineNumber":57,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-20"},{"lineNumber":58,"author":{"gitId":"chuashihong"},"content":"    //@Test","lastModifiedDate":"2022-03-30"},{"lineNumber":59,"author":{"gitId":"chuashihong"},"content":"    //public void execute_commandExecutionError_throwsCommandException() {","lastModifiedDate":"2022-03-30"},{"lineNumber":60,"author":{"gitId":"chuashihong"},"content":"    //    String deleteCommand \u003d \"delete 9\";","lastModifiedDate":"2022-03-30"},{"lineNumber":61,"author":{"gitId":"chuashihong"},"content":"    //    assertCommandException(deleteCommand, MESSAGE_INVALID_CLIENT_DISPLAYED_INDEX);","lastModifiedDate":"2022-03-30"},{"lineNumber":62,"author":{"gitId":"chuashihong"},"content":"    //}","lastModifiedDate":"2022-03-30"},{"lineNumber":63,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":64,"author":{"gitId":"chuashihong"},"content":"    //@Test","lastModifiedDate":"2022-03-30"},{"lineNumber":65,"author":{"gitId":"chuashihong"},"content":"    //public void execute_storageThrowsIoException_throwsCommandException() {","lastModifiedDate":"2022-03-30"},{"lineNumber":66,"author":{"gitId":"chuashihong"},"content":"    //    // Setup LogicManager with JsonAddressBookIoExceptionThrowingStub","lastModifiedDate":"2022-03-30"},{"lineNumber":67,"author":{"gitId":"chuashihong"},"content":"    //    JsonAddressBookStorage addressBookStorage \u003d","lastModifiedDate":"2022-03-30"},{"lineNumber":68,"author":{"gitId":"chuashihong"},"content":"    //            new JsonAddressBookIoExceptionThrowingStub(temporaryFolder.resolve(\"ioExceptionAddressBook.json\"));","lastModifiedDate":"2022-03-30"},{"lineNumber":69,"author":{"gitId":"chuashihong"},"content":"    //    JsonUserPrefsStorage userPrefsStorage \u003d","lastModifiedDate":"2022-03-30"},{"lineNumber":70,"author":{"gitId":"chuashihong"},"content":"    //            new JsonUserPrefsStorage(temporaryFolder.resolve(\"ioExceptionUserPrefs.json\"));","lastModifiedDate":"2022-03-30"},{"lineNumber":71,"author":{"gitId":"chuashihong"},"content":"    //    JsonSellerAddressBookStorage sellerAddressBookStorage \u003d new JsonSellerAddressBookStorage(","lastModifiedDate":"2022-03-30"},{"lineNumber":72,"author":{"gitId":"chuashihong"},"content":"    //            temporaryFolder.resolve(\"selleraddressbook.json\"));","lastModifiedDate":"2022-03-30"},{"lineNumber":73,"author":{"gitId":"chuashihong"},"content":"    //    JsonBuyerAddressBookStorage buyerAddressBookStorage \u003d new JsonBuyerAddressBookStorage(","lastModifiedDate":"2022-03-30"},{"lineNumber":74,"author":{"gitId":"chuashihong"},"content":"    //            temporaryFolder.resolve(\"buyeraddressbook.json\"));","lastModifiedDate":"2022-03-30"},{"lineNumber":75,"author":{"gitId":"chuashihong"},"content":"    //    StorageManager storage \u003d new StorageManager(addressBookStorage, userPrefsStorage,","lastModifiedDate":"2022-03-30"},{"lineNumber":76,"author":{"gitId":"chuashihong"},"content":"    //            sellerAddressBookStorage, buyerAddressBookStorage);","lastModifiedDate":"2022-03-30"},{"lineNumber":77,"author":{"gitId":"chuashihong"},"content":"    //    logic \u003d new LogicManager(model, storage);","lastModifiedDate":"2022-03-30"},{"lineNumber":78,"author":{"gitId":"chuashihong"},"content":"    //","lastModifiedDate":"2022-03-30"},{"lineNumber":79,"author":{"gitId":"chuashihong"},"content":"    //    // Execute add command","lastModifiedDate":"2022-03-30"},{"lineNumber":80,"author":{"gitId":"chuashihong"},"content":"    //    String addCommand \u003d AddCommand.COMMAND_WORD + NAME_DESC_AMY + PHONE_DESC_AMY;","lastModifiedDate":"2022-03-30"},{"lineNumber":81,"author":{"gitId":"chuashihong"},"content":"    //    Client expectedClient \u003d new ClientBuilder(AMY).withTags().build();","lastModifiedDate":"2022-03-30"},{"lineNumber":82,"author":{"gitId":"chuashihong"},"content":"    //    ModelManager expectedModel \u003d new ModelManager();","lastModifiedDate":"2022-03-30"},{"lineNumber":83,"author":{"gitId":"chuashihong"},"content":"    //    expectedModel.addClient(expectedClient);","lastModifiedDate":"2022-03-30"},{"lineNumber":84,"author":{"gitId":"chuashihong"},"content":"    //    String expectedMessage \u003d LogicManager.FILE_OPS_ERROR_MESSAGE + DUMMY_IO_EXCEPTION;","lastModifiedDate":"2022-03-30"},{"lineNumber":85,"author":{"gitId":"chuashihong"},"content":"    //    assertCommandFailure(addCommand, CommandException.class, expectedMessage, expectedModel);","lastModifiedDate":"2022-03-30"},{"lineNumber":86,"author":{"gitId":"chuashihong"},"content":"    //}","lastModifiedDate":"2022-03-30"},{"lineNumber":87,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":88,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-09-01"},{"lineNumber":89,"author":{"gitId":"cwnm"},"content":"    public void getFilteredclientList_modifyList_throwsUnsupportedOperationException() {","lastModifiedDate":"2022-03-04"},{"lineNumber":90,"author":{"gitId":"cwnm"},"content":"        assertThrows(UnsupportedOperationException.class, () -\u003e logic.getFilteredclientList().remove(0));","lastModifiedDate":"2022-03-04"},{"lineNumber":91,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-09-01"},{"lineNumber":92,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-09-01"},{"lineNumber":93,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-09-21"},{"lineNumber":94,"author":{"gitId":"-"},"content":"     * Executes the command and confirms that","lastModifiedDate":"2019-03-14"},{"lineNumber":95,"author":{"gitId":"-"},"content":"     * - no exceptions are thrown \u003cbr\u003e","lastModifiedDate":"2019-03-14"},{"lineNumber":96,"author":{"gitId":"-"},"content":"     * - the feedback message is equal to {@code expectedMessage} \u003cbr\u003e","lastModifiedDate":"2019-03-14"},{"lineNumber":97,"author":{"gitId":"-"},"content":"     * - the internal model manager state is the same as that in {@code expectedModel} \u003cbr\u003e","lastModifiedDate":"2019-03-14"},{"lineNumber":98,"author":{"gitId":"-"},"content":"     * @see #assertCommandFailure(String, Class, String, Model)","lastModifiedDate":"2019-03-14"},{"lineNumber":99,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-09-21"},{"lineNumber":100,"author":{"gitId":"-"},"content":"    private void assertCommandSuccess(String inputCommand, String expectedMessage,","lastModifiedDate":"2019-03-14"},{"lineNumber":101,"author":{"gitId":"-"},"content":"            Model expectedModel) throws CommandException, ParseException {","lastModifiedDate":"2019-03-14"},{"lineNumber":102,"author":{"gitId":"-"},"content":"        CommandResult result \u003d logic.execute(inputCommand);","lastModifiedDate":"2019-03-14"},{"lineNumber":103,"author":{"gitId":"-"},"content":"        assertEquals(expectedMessage, result.getFeedbackToUser());","lastModifiedDate":"2019-03-14"},{"lineNumber":104,"author":{"gitId":"-"},"content":"        assertEquals(expectedModel, model);","lastModifiedDate":"2019-03-14"},{"lineNumber":105,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-21"},{"lineNumber":106,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":107,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-03-11"},{"lineNumber":108,"author":{"gitId":"-"},"content":"     * Executes the command, confirms that a ParseException is thrown and that the result message is correct.","lastModifiedDate":"2017-03-11"},{"lineNumber":109,"author":{"gitId":"-"},"content":"     * @see #assertCommandFailure(String, Class, String, Model)","lastModifiedDate":"2019-03-14"},{"lineNumber":110,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-03-11"},{"lineNumber":111,"author":{"gitId":"-"},"content":"    private void assertParseException(String inputCommand, String expectedMessage) {","lastModifiedDate":"2017-03-11"},{"lineNumber":112,"author":{"gitId":"-"},"content":"        assertCommandFailure(inputCommand, ParseException.class, expectedMessage);","lastModifiedDate":"2017-03-11"},{"lineNumber":113,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-03-11"},{"lineNumber":114,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-11"},{"lineNumber":115,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-06-14"},{"lineNumber":116,"author":{"gitId":"-"},"content":"     * Executes the command, confirms that a CommandException is thrown and that the result message is correct.","lastModifiedDate":"2017-06-14"},{"lineNumber":117,"author":{"gitId":"-"},"content":"     * @see #assertCommandFailure(String, Class, String, Model)","lastModifiedDate":"2019-03-14"},{"lineNumber":118,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-06-14"},{"lineNumber":119,"author":{"gitId":"-"},"content":"    private void assertCommandException(String inputCommand, String expectedMessage) {","lastModifiedDate":"2017-06-14"},{"lineNumber":120,"author":{"gitId":"-"},"content":"        assertCommandFailure(inputCommand, CommandException.class, expectedMessage);","lastModifiedDate":"2017-06-14"},{"lineNumber":121,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-14"},{"lineNumber":122,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-14"},{"lineNumber":123,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-03-11"},{"lineNumber":124,"author":{"gitId":"-"},"content":"     * Executes the command, confirms that the exception is thrown and that the result message is correct.","lastModifiedDate":"2017-03-11"},{"lineNumber":125,"author":{"gitId":"-"},"content":"     * @see #assertCommandFailure(String, Class, String, Model)","lastModifiedDate":"2019-03-14"},{"lineNumber":126,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-03-11"},{"lineNumber":127,"author":{"gitId":"-"},"content":"    private void assertCommandFailure(String inputCommand, Class\u003c? extends Throwable\u003e expectedException,","lastModifiedDate":"2019-03-14"},{"lineNumber":128,"author":{"gitId":"-"},"content":"            String expectedMessage) {","lastModifiedDate":"2019-03-14"},{"lineNumber":129,"author":{"gitId":"WJunHong"},"content":"        Model expectedModel \u003d new ModelManager(model.getAddressBook(), new UserPrefs(), new SellerAddressBook(),","lastModifiedDate":"2022-03-23"},{"lineNumber":130,"author":{"gitId":"WJunHong"},"content":"                new BuyerAddressBook());","lastModifiedDate":"2022-03-23"},{"lineNumber":131,"author":{"gitId":"-"},"content":"        assertCommandFailure(inputCommand, expectedException, expectedMessage, expectedModel);","lastModifiedDate":"2019-03-14"},{"lineNumber":132,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-02-05"},{"lineNumber":133,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-05"},{"lineNumber":134,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-02-05"},{"lineNumber":135,"author":{"gitId":"-"},"content":"     * Executes the command and confirms that","lastModifiedDate":"2019-03-14"},{"lineNumber":136,"author":{"gitId":"-"},"content":"     * - the {@code expectedException} is thrown \u003cbr\u003e","lastModifiedDate":"2019-03-14"},{"lineNumber":137,"author":{"gitId":"-"},"content":"     * - the resulting error message is equal to {@code expectedMessage} \u003cbr\u003e","lastModifiedDate":"2019-03-14"},{"lineNumber":138,"author":{"gitId":"-"},"content":"     * - the internal model manager state is the same as that in {@code expectedModel} \u003cbr\u003e","lastModifiedDate":"2019-03-14"},{"lineNumber":139,"author":{"gitId":"-"},"content":"     * @see #assertCommandSuccess(String, String, Model)","lastModifiedDate":"2019-03-14"},{"lineNumber":140,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-09-21"},{"lineNumber":141,"author":{"gitId":"-"},"content":"    private void assertCommandFailure(String inputCommand, Class\u003c? extends Throwable\u003e expectedException,","lastModifiedDate":"2019-03-14"},{"lineNumber":142,"author":{"gitId":"-"},"content":"            String expectedMessage, Model expectedModel) {","lastModifiedDate":"2017-05-31"},{"lineNumber":143,"author":{"gitId":"-"},"content":"        assertThrows(expectedException, expectedMessage, () -\u003e logic.execute(inputCommand));","lastModifiedDate":"2019-03-14"},{"lineNumber":144,"author":{"gitId":"-"},"content":"        assertEquals(expectedModel, model);","lastModifiedDate":"2017-05-31"},{"lineNumber":145,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-21"},{"lineNumber":146,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-19"},{"lineNumber":147,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-12-09"},{"lineNumber":148,"author":{"gitId":"-"},"content":"     * A stub class to throw an {@code IOException} when the save method is called.","lastModifiedDate":"2018-12-09"},{"lineNumber":149,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-12-09"},{"lineNumber":150,"author":{"gitId":"-"},"content":"    private static class JsonAddressBookIoExceptionThrowingStub extends JsonAddressBookStorage {","lastModifiedDate":"2018-12-09"},{"lineNumber":151,"author":{"gitId":"-"},"content":"        private JsonAddressBookIoExceptionThrowingStub(Path filePath) {","lastModifiedDate":"2018-12-09"},{"lineNumber":152,"author":{"gitId":"-"},"content":"            super(filePath);","lastModifiedDate":"2018-12-09"},{"lineNumber":153,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-12-09"},{"lineNumber":154,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":155,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2018-12-09"},{"lineNumber":156,"author":{"gitId":"-"},"content":"        public void saveAddressBook(ReadOnlyAddressBook addressBook, Path filePath) throws IOException {","lastModifiedDate":"2018-12-09"},{"lineNumber":157,"author":{"gitId":"-"},"content":"            throw DUMMY_IO_EXCEPTION;","lastModifiedDate":"2018-12-09"},{"lineNumber":158,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-12-09"},{"lineNumber":159,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-12-09"},{"lineNumber":160,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-09-21"}],"authorContributionMap":{"WJunHong":8,"Jacky142857":4,"-":118,"cwnm":2,"chuashihong":28}},{"path":"src/test/java/seedu/address/logic/commands/AddBuyerCommandIntegrationTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"WJunHong"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2022-03-16"},{"lineNumber":2,"author":{"gitId":"WJunHong"},"content":"","lastModifiedDate":"2022-03-16"},{"lineNumber":3,"author":{"gitId":"chuashihong"},"content":"import static seedu.address.logic.commands.BuyerCommandTestUtil.assertCommandSuccess;","lastModifiedDate":"2022-04-07"},{"lineNumber":4,"author":{"gitId":"WJunHong"},"content":"import static seedu.address.testutil.TypicalClients.getTypicalAddressBook;","lastModifiedDate":"2022-03-16"},{"lineNumber":5,"author":{"gitId":"WJunHong"},"content":"","lastModifiedDate":"2022-03-16"},{"lineNumber":6,"author":{"gitId":"WJunHong"},"content":"import org.junit.jupiter.api.BeforeEach;","lastModifiedDate":"2022-03-16"},{"lineNumber":7,"author":{"gitId":"WJunHong"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2022-03-16"},{"lineNumber":8,"author":{"gitId":"WJunHong"},"content":"","lastModifiedDate":"2022-03-16"},{"lineNumber":9,"author":{"gitId":"WJunHong"},"content":"import seedu.address.model.BuyerAddressBook;","lastModifiedDate":"2022-03-23"},{"lineNumber":10,"author":{"gitId":"WJunHong"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2022-03-16"},{"lineNumber":11,"author":{"gitId":"WJunHong"},"content":"import seedu.address.model.ModelManager;","lastModifiedDate":"2022-03-16"},{"lineNumber":12,"author":{"gitId":"Jacky142857"},"content":"import seedu.address.model.SellerAddressBook;","lastModifiedDate":"2022-03-19"},{"lineNumber":13,"author":{"gitId":"WJunHong"},"content":"import seedu.address.model.UserPrefs;","lastModifiedDate":"2022-03-16"},{"lineNumber":14,"author":{"gitId":"WJunHong"},"content":"import seedu.address.model.buyer.Buyer;","lastModifiedDate":"2022-03-16"},{"lineNumber":15,"author":{"gitId":"WJunHong"},"content":"import seedu.address.testutil.BuyerBuilder;","lastModifiedDate":"2022-03-16"},{"lineNumber":16,"author":{"gitId":"WJunHong"},"content":"","lastModifiedDate":"2022-03-16"},{"lineNumber":17,"author":{"gitId":"WJunHong"},"content":"/**","lastModifiedDate":"2022-03-16"},{"lineNumber":18,"author":{"gitId":"WJunHong"},"content":" * Contains integration tests (interaction with the Model) for {@code AddBuyerCommand}.","lastModifiedDate":"2022-03-16"},{"lineNumber":19,"author":{"gitId":"WJunHong"},"content":" */","lastModifiedDate":"2022-03-16"},{"lineNumber":20,"author":{"gitId":"WJunHong"},"content":"public class AddBuyerCommandIntegrationTest {","lastModifiedDate":"2022-03-16"},{"lineNumber":21,"author":{"gitId":"WJunHong"},"content":"","lastModifiedDate":"2022-03-16"},{"lineNumber":22,"author":{"gitId":"WJunHong"},"content":"    private Model model;","lastModifiedDate":"2022-03-16"},{"lineNumber":23,"author":{"gitId":"WJunHong"},"content":"","lastModifiedDate":"2022-03-16"},{"lineNumber":24,"author":{"gitId":"WJunHong"},"content":"    @BeforeEach","lastModifiedDate":"2022-03-16"},{"lineNumber":25,"author":{"gitId":"WJunHong"},"content":"    public void setUp() {","lastModifiedDate":"2022-03-16"},{"lineNumber":26,"author":{"gitId":"WJunHong"},"content":"        model \u003d new ModelManager(getTypicalAddressBook(), new UserPrefs(), new SellerAddressBook(),","lastModifiedDate":"2022-03-23"},{"lineNumber":27,"author":{"gitId":"WJunHong"},"content":"                new BuyerAddressBook());","lastModifiedDate":"2022-03-23"},{"lineNumber":28,"author":{"gitId":"WJunHong"},"content":"    }","lastModifiedDate":"2022-03-16"},{"lineNumber":29,"author":{"gitId":"WJunHong"},"content":"","lastModifiedDate":"2022-03-16"},{"lineNumber":30,"author":{"gitId":"WJunHong"},"content":"    @Test","lastModifiedDate":"2022-03-16"},{"lineNumber":31,"author":{"gitId":"WJunHong"},"content":"    public void execute_newBuyer_success() {","lastModifiedDate":"2022-03-16"},{"lineNumber":32,"author":{"gitId":"WJunHong"},"content":"        Buyer validBuyer \u003d new BuyerBuilder().build();","lastModifiedDate":"2022-03-16"},{"lineNumber":33,"author":{"gitId":"WJunHong"},"content":"","lastModifiedDate":"2022-03-16"},{"lineNumber":34,"author":{"gitId":"WJunHong"},"content":"        Model expectedModel \u003d new ModelManager(model.getAddressBook(), new UserPrefs(), new SellerAddressBook(),","lastModifiedDate":"2022-03-23"},{"lineNumber":35,"author":{"gitId":"WJunHong"},"content":"                new BuyerAddressBook());","lastModifiedDate":"2022-03-23"},{"lineNumber":36,"author":{"gitId":"chuashihong"},"content":"        expectedModel.addBuyer(validBuyer);","lastModifiedDate":"2022-03-24"},{"lineNumber":37,"author":{"gitId":"WJunHong"},"content":"","lastModifiedDate":"2022-03-16"},{"lineNumber":38,"author":{"gitId":"WJunHong"},"content":"        assertCommandSuccess(new AddBuyerCommand(validBuyer), model,","lastModifiedDate":"2022-03-16"},{"lineNumber":39,"author":{"gitId":"WJunHong"},"content":"                String.format(AddBuyerCommand.MESSAGE_SUCCESS, validBuyer), expectedModel);","lastModifiedDate":"2022-03-16"},{"lineNumber":40,"author":{"gitId":"WJunHong"},"content":"    }","lastModifiedDate":"2022-03-16"},{"lineNumber":41,"author":{"gitId":"WJunHong"},"content":"","lastModifiedDate":"2022-03-16"},{"lineNumber":42,"author":{"gitId":"WJunHong"},"content":"}","lastModifiedDate":"2022-03-16"},{"lineNumber":43,"author":{"gitId":"WJunHong"},"content":"","lastModifiedDate":"2022-03-16"}],"authorContributionMap":{"WJunHong":40,"Jacky142857":1,"chuashihong":2}},{"path":"src/test/java/seedu/address/logic/commands/AddBuyerCommandTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"WJunHong"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2022-03-16"},{"lineNumber":2,"author":{"gitId":"WJunHong"},"content":"","lastModifiedDate":"2022-03-16"},{"lineNumber":3,"author":{"gitId":"WJunHong"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2022-03-16"},{"lineNumber":4,"author":{"gitId":"WJunHong"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2022-03-16"},{"lineNumber":5,"author":{"gitId":"WJunHong"},"content":"import static org.junit.jupiter.api.Assertions.assertNotEquals;","lastModifiedDate":"2022-03-16"},{"lineNumber":6,"author":{"gitId":"WJunHong"},"content":"import static seedu.address.testutil.Assert.assertThrows;","lastModifiedDate":"2022-03-16"},{"lineNumber":7,"author":{"gitId":"WJunHong"},"content":"","lastModifiedDate":"2022-03-16"},{"lineNumber":8,"author":{"gitId":"WJunHong"},"content":"import java.nio.file.Path;","lastModifiedDate":"2022-03-16"},{"lineNumber":9,"author":{"gitId":"WJunHong"},"content":"import java.util.ArrayList;","lastModifiedDate":"2022-03-16"},{"lineNumber":10,"author":{"gitId":"WJunHong"},"content":"import java.util.List;","lastModifiedDate":"2022-03-16"},{"lineNumber":11,"author":{"gitId":"WJunHong"},"content":"import java.util.function.Predicate;","lastModifiedDate":"2022-03-16"},{"lineNumber":12,"author":{"gitId":"WJunHong"},"content":"","lastModifiedDate":"2022-03-16"},{"lineNumber":13,"author":{"gitId":"WJunHong"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2022-03-16"},{"lineNumber":14,"author":{"gitId":"WJunHong"},"content":"","lastModifiedDate":"2022-03-16"},{"lineNumber":15,"author":{"gitId":"WJunHong"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2022-03-16"},{"lineNumber":16,"author":{"gitId":"WJunHong"},"content":"import seedu.address.commons.core.GuiSettings;","lastModifiedDate":"2022-03-16"},{"lineNumber":17,"author":{"gitId":"WJunHong"},"content":"import seedu.address.logic.commands.exceptions.CommandException;","lastModifiedDate":"2022-03-16"},{"lineNumber":18,"author":{"gitId":"WJunHong"},"content":"import seedu.address.model.AddressBook;","lastModifiedDate":"2022-03-16"},{"lineNumber":19,"author":{"gitId":"WJunHong"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2022-03-16"},{"lineNumber":20,"author":{"gitId":"WJunHong"},"content":"import seedu.address.model.ReadOnlyAddressBook;","lastModifiedDate":"2022-03-16"},{"lineNumber":21,"author":{"gitId":"WJunHong"},"content":"import seedu.address.model.ReadOnlyBuyerAddressBook;","lastModifiedDate":"2022-03-23"},{"lineNumber":22,"author":{"gitId":"Jacky142857"},"content":"import seedu.address.model.ReadOnlySellerAddressBook;","lastModifiedDate":"2022-03-19"},{"lineNumber":23,"author":{"gitId":"WJunHong"},"content":"import seedu.address.model.ReadOnlyUserPrefs;","lastModifiedDate":"2022-03-16"},{"lineNumber":24,"author":{"gitId":"WJunHong"},"content":"import seedu.address.model.buyer.Buyer;","lastModifiedDate":"2022-03-16"},{"lineNumber":25,"author":{"gitId":"WJunHong"},"content":"import seedu.address.model.client.Client;","lastModifiedDate":"2022-03-16"},{"lineNumber":26,"author":{"gitId":"cwnm"},"content":"import seedu.address.model.seller.Seller;","lastModifiedDate":"2022-03-17"},{"lineNumber":27,"author":{"gitId":"WJunHong"},"content":"import seedu.address.testutil.BuyerBuilder;","lastModifiedDate":"2022-03-16"},{"lineNumber":28,"author":{"gitId":"WJunHong"},"content":"import seedu.address.testutil.SellerBuilder;","lastModifiedDate":"2022-04-07"},{"lineNumber":29,"author":{"gitId":"WJunHong"},"content":"","lastModifiedDate":"2022-03-16"},{"lineNumber":30,"author":{"gitId":"WJunHong"},"content":"public class AddBuyerCommandTest {","lastModifiedDate":"2022-03-16"},{"lineNumber":31,"author":{"gitId":"WJunHong"},"content":"","lastModifiedDate":"2022-03-16"},{"lineNumber":32,"author":{"gitId":"WJunHong"},"content":"    @Test","lastModifiedDate":"2022-03-16"},{"lineNumber":33,"author":{"gitId":"WJunHong"},"content":"    public void constructor_nullBuyer_throwsNullPointerException() {","lastModifiedDate":"2022-03-16"},{"lineNumber":34,"author":{"gitId":"WJunHong"},"content":"        assertThrows(NullPointerException.class, () -\u003e new AddBuyerCommand(null));","lastModifiedDate":"2022-03-16"},{"lineNumber":35,"author":{"gitId":"WJunHong"},"content":"    }","lastModifiedDate":"2022-03-16"},{"lineNumber":36,"author":{"gitId":"WJunHong"},"content":"","lastModifiedDate":"2022-03-16"},{"lineNumber":37,"author":{"gitId":"WJunHong"},"content":"    @Test","lastModifiedDate":"2022-03-16"},{"lineNumber":38,"author":{"gitId":"WJunHong"},"content":"    public void execute_buyerAcceptedByModel_addSuccessful() throws Exception {","lastModifiedDate":"2022-04-07"},{"lineNumber":39,"author":{"gitId":"WJunHong"},"content":"        ModelStubAcceptingBuyerAdded modelStub \u003d new ModelStubAcceptingBuyerAdded();","lastModifiedDate":"2022-03-16"},{"lineNumber":40,"author":{"gitId":"WJunHong"},"content":"        Buyer validBuyer \u003d new BuyerBuilder().build();","lastModifiedDate":"2022-03-16"},{"lineNumber":41,"author":{"gitId":"WJunHong"},"content":"","lastModifiedDate":"2022-03-16"},{"lineNumber":42,"author":{"gitId":"WJunHong"},"content":"        CommandResult commandResult \u003d new AddBuyerCommand(validBuyer).execute(modelStub);","lastModifiedDate":"2022-03-16"},{"lineNumber":43,"author":{"gitId":"WJunHong"},"content":"","lastModifiedDate":"2022-03-16"},{"lineNumber":44,"author":{"gitId":"WJunHong"},"content":"        assertEquals(String.format(AddBuyerCommand.MESSAGE_SUCCESS, validBuyer), commandResult.getFeedbackToUser());","lastModifiedDate":"2022-03-16"},{"lineNumber":45,"author":{"gitId":"WJunHong"},"content":"        assertEquals(List.of(validBuyer), modelStub.clientsAdded);","lastModifiedDate":"2022-03-16"},{"lineNumber":46,"author":{"gitId":"WJunHong"},"content":"    }","lastModifiedDate":"2022-03-16"},{"lineNumber":47,"author":{"gitId":"WJunHong"},"content":"","lastModifiedDate":"2022-03-16"},{"lineNumber":48,"author":{"gitId":"WJunHong"},"content":"    @Test","lastModifiedDate":"2022-04-07"},{"lineNumber":49,"author":{"gitId":"WJunHong"},"content":"    public void constructor_nullNotAccepted_addFailure() {","lastModifiedDate":"2022-04-07"},{"lineNumber":50,"author":{"gitId":"WJunHong"},"content":"        assertThrows(NullPointerException.class, () -\u003e new AddBuyerCommand(null));","lastModifiedDate":"2022-04-07"},{"lineNumber":51,"author":{"gitId":"WJunHong"},"content":"    }","lastModifiedDate":"2022-04-07"},{"lineNumber":52,"author":{"gitId":"WJunHong"},"content":"","lastModifiedDate":"2022-04-07"},{"lineNumber":53,"author":{"gitId":"WJunHong"},"content":"    @Test","lastModifiedDate":"2022-04-07"},{"lineNumber":54,"author":{"gitId":"WJunHong"},"content":"    public void execute_nullModel_executeFailure() {","lastModifiedDate":"2022-04-07"},{"lineNumber":55,"author":{"gitId":"WJunHong"},"content":"        Buyer validBuyer \u003d new BuyerBuilder().build();","lastModifiedDate":"2022-04-07"},{"lineNumber":56,"author":{"gitId":"WJunHong"},"content":"        assertThrows(NullPointerException.class, () -\u003e new AddBuyerCommand(validBuyer).execute(null));","lastModifiedDate":"2022-04-07"},{"lineNumber":57,"author":{"gitId":"WJunHong"},"content":"    }","lastModifiedDate":"2022-04-07"},{"lineNumber":58,"author":{"gitId":"WJunHong"},"content":"","lastModifiedDate":"2022-04-07"},{"lineNumber":59,"author":{"gitId":"WJunHong"},"content":"    @Test","lastModifiedDate":"2022-03-16"},{"lineNumber":60,"author":{"gitId":"WJunHong"},"content":"    public void execute_duplicateBuyer_throwsCommandException() {","lastModifiedDate":"2022-03-16"},{"lineNumber":61,"author":{"gitId":"WJunHong"},"content":"        Buyer validBuyer \u003d new BuyerBuilder().build();","lastModifiedDate":"2022-03-16"},{"lineNumber":62,"author":{"gitId":"WJunHong"},"content":"        AddBuyerCommand addBuyerCommand \u003d new AddBuyerCommand(validBuyer);","lastModifiedDate":"2022-03-16"},{"lineNumber":63,"author":{"gitId":"WJunHong"},"content":"        ModelStub modelStub \u003d new ModelStubWithBuyer(validBuyer);","lastModifiedDate":"2022-03-16"},{"lineNumber":64,"author":{"gitId":"WJunHong"},"content":"","lastModifiedDate":"2022-03-16"},{"lineNumber":65,"author":{"gitId":"WJunHong"},"content":"        assertThrows(CommandException.class, AddBuyerCommand.MESSAGE_DUPLICATE_CLIENT, () -\u003e addBuyerCommand","lastModifiedDate":"2022-03-16"},{"lineNumber":66,"author":{"gitId":"WJunHong"},"content":"                .execute(modelStub));","lastModifiedDate":"2022-03-16"},{"lineNumber":67,"author":{"gitId":"WJunHong"},"content":"    }","lastModifiedDate":"2022-03-16"},{"lineNumber":68,"author":{"gitId":"WJunHong"},"content":"","lastModifiedDate":"2022-03-16"},{"lineNumber":69,"author":{"gitId":"WJunHong"},"content":"    @Test","lastModifiedDate":"2022-03-16"},{"lineNumber":70,"author":{"gitId":"WJunHong"},"content":"    public void equals() {","lastModifiedDate":"2022-03-16"},{"lineNumber":71,"author":{"gitId":"WJunHong"},"content":"        Buyer janald \u003d new BuyerBuilder().withName(\"Janald\").build();","lastModifiedDate":"2022-03-16"},{"lineNumber":72,"author":{"gitId":"WJunHong"},"content":"        Buyer junheng \u003d new BuyerBuilder().withName(\"Junheng\").build();","lastModifiedDate":"2022-03-16"},{"lineNumber":73,"author":{"gitId":"WJunHong"},"content":"        Seller shihong \u003d new SellerBuilder().withName(\"janald\").build();","lastModifiedDate":"2022-04-07"},{"lineNumber":74,"author":{"gitId":"WJunHong"},"content":"        AddBuyerCommand addJanaldCommand \u003d new AddBuyerCommand(janald);","lastModifiedDate":"2022-03-16"},{"lineNumber":75,"author":{"gitId":"WJunHong"},"content":"        AddBuyerCommand addJunhengCommand \u003d new AddBuyerCommand(junheng);","lastModifiedDate":"2022-03-16"},{"lineNumber":76,"author":{"gitId":"WJunHong"},"content":"        AddSellerCommand addShihongCommand \u003d new AddSellerCommand(shihong);","lastModifiedDate":"2022-04-07"},{"lineNumber":77,"author":{"gitId":"WJunHong"},"content":"","lastModifiedDate":"2022-03-16"},{"lineNumber":78,"author":{"gitId":"WJunHong"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2022-03-16"},{"lineNumber":79,"author":{"gitId":"WJunHong"},"content":"        assertEquals(addJanaldCommand, addJanaldCommand);","lastModifiedDate":"2022-03-16"},{"lineNumber":80,"author":{"gitId":"WJunHong"},"content":"","lastModifiedDate":"2022-03-16"},{"lineNumber":81,"author":{"gitId":"WJunHong"},"content":"        // same values -\u003e returns true","lastModifiedDate":"2022-03-16"},{"lineNumber":82,"author":{"gitId":"WJunHong"},"content":"        AddBuyerCommand addJanaldCommandCopy \u003d new AddBuyerCommand(janald);","lastModifiedDate":"2022-03-16"},{"lineNumber":83,"author":{"gitId":"WJunHong"},"content":"        assertEquals(addJanaldCommand, addJanaldCommandCopy);","lastModifiedDate":"2022-03-16"},{"lineNumber":84,"author":{"gitId":"WJunHong"},"content":"","lastModifiedDate":"2022-03-16"},{"lineNumber":85,"author":{"gitId":"WJunHong"},"content":"        // different types -\u003e returns false","lastModifiedDate":"2022-03-16"},{"lineNumber":86,"author":{"gitId":"WJunHong"},"content":"        assertNotEquals(1, addJanaldCommand);","lastModifiedDate":"2022-03-16"},{"lineNumber":87,"author":{"gitId":"WJunHong"},"content":"","lastModifiedDate":"2022-03-16"},{"lineNumber":88,"author":{"gitId":"WJunHong"},"content":"        // null -\u003e returns false","lastModifiedDate":"2022-03-16"},{"lineNumber":89,"author":{"gitId":"WJunHong"},"content":"        assertNotEquals(null, addJanaldCommand);","lastModifiedDate":"2022-03-16"},{"lineNumber":90,"author":{"gitId":"WJunHong"},"content":"","lastModifiedDate":"2022-03-16"},{"lineNumber":91,"author":{"gitId":"WJunHong"},"content":"        // different client -\u003e returns false","lastModifiedDate":"2022-03-16"},{"lineNumber":92,"author":{"gitId":"WJunHong"},"content":"        assertNotEquals(addJanaldCommand, addJunhengCommand);","lastModifiedDate":"2022-03-16"},{"lineNumber":93,"author":{"gitId":"WJunHong"},"content":"","lastModifiedDate":"2022-04-07"},{"lineNumber":94,"author":{"gitId":"WJunHong"},"content":"        // different command type -\u003e returns false","lastModifiedDate":"2022-04-07"},{"lineNumber":95,"author":{"gitId":"WJunHong"},"content":"        assertNotEquals(addShihongCommand, addJunhengCommand);","lastModifiedDate":"2022-04-07"},{"lineNumber":96,"author":{"gitId":"WJunHong"},"content":"    }","lastModifiedDate":"2022-03-16"},{"lineNumber":97,"author":{"gitId":"WJunHong"},"content":"","lastModifiedDate":"2022-03-16"},{"lineNumber":98,"author":{"gitId":"WJunHong"},"content":"    /**","lastModifiedDate":"2022-03-16"},{"lineNumber":99,"author":{"gitId":"WJunHong"},"content":"     * A default model stub that have all of the methods failing.","lastModifiedDate":"2022-03-16"},{"lineNumber":100,"author":{"gitId":"WJunHong"},"content":"     */","lastModifiedDate":"2022-03-16"},{"lineNumber":101,"author":{"gitId":"WJunHong"},"content":"    private static class ModelStub implements Model {","lastModifiedDate":"2022-03-16"},{"lineNumber":102,"author":{"gitId":"WJunHong"},"content":"        @Override","lastModifiedDate":"2022-03-16"},{"lineNumber":103,"author":{"gitId":"WJunHong"},"content":"        public void setUserPrefs(ReadOnlyUserPrefs userPrefs) {","lastModifiedDate":"2022-03-16"},{"lineNumber":104,"author":{"gitId":"WJunHong"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2022-03-16"},{"lineNumber":105,"author":{"gitId":"WJunHong"},"content":"        }","lastModifiedDate":"2022-03-16"},{"lineNumber":106,"author":{"gitId":"WJunHong"},"content":"","lastModifiedDate":"2022-03-16"},{"lineNumber":107,"author":{"gitId":"WJunHong"},"content":"        @Override","lastModifiedDate":"2022-03-16"},{"lineNumber":108,"author":{"gitId":"WJunHong"},"content":"        public ReadOnlyUserPrefs getUserPrefs() {","lastModifiedDate":"2022-03-16"},{"lineNumber":109,"author":{"gitId":"WJunHong"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2022-03-16"},{"lineNumber":110,"author":{"gitId":"WJunHong"},"content":"        }","lastModifiedDate":"2022-03-16"},{"lineNumber":111,"author":{"gitId":"WJunHong"},"content":"","lastModifiedDate":"2022-03-16"},{"lineNumber":112,"author":{"gitId":"WJunHong"},"content":"        @Override","lastModifiedDate":"2022-03-16"},{"lineNumber":113,"author":{"gitId":"WJunHong"},"content":"        public GuiSettings getGuiSettings() {","lastModifiedDate":"2022-03-16"},{"lineNumber":114,"author":{"gitId":"WJunHong"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2022-03-16"},{"lineNumber":115,"author":{"gitId":"WJunHong"},"content":"        }","lastModifiedDate":"2022-03-16"},{"lineNumber":116,"author":{"gitId":"WJunHong"},"content":"","lastModifiedDate":"2022-03-16"},{"lineNumber":117,"author":{"gitId":"WJunHong"},"content":"        @Override","lastModifiedDate":"2022-03-16"},{"lineNumber":118,"author":{"gitId":"WJunHong"},"content":"        public void setGuiSettings(GuiSettings guiSettings) {","lastModifiedDate":"2022-03-16"},{"lineNumber":119,"author":{"gitId":"WJunHong"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2022-03-16"},{"lineNumber":120,"author":{"gitId":"WJunHong"},"content":"        }","lastModifiedDate":"2022-03-16"},{"lineNumber":121,"author":{"gitId":"WJunHong"},"content":"","lastModifiedDate":"2022-03-16"},{"lineNumber":122,"author":{"gitId":"WJunHong"},"content":"        @Override","lastModifiedDate":"2022-03-16"},{"lineNumber":123,"author":{"gitId":"WJunHong"},"content":"        public Path getAddressBookFilePath() {","lastModifiedDate":"2022-03-16"},{"lineNumber":124,"author":{"gitId":"WJunHong"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2022-03-16"},{"lineNumber":125,"author":{"gitId":"WJunHong"},"content":"        }","lastModifiedDate":"2022-03-16"},{"lineNumber":126,"author":{"gitId":"WJunHong"},"content":"","lastModifiedDate":"2022-03-16"},{"lineNumber":127,"author":{"gitId":"WJunHong"},"content":"        @Override","lastModifiedDate":"2022-03-16"},{"lineNumber":128,"author":{"gitId":"WJunHong"},"content":"        public void setAddressBookFilePath(Path addressBookFilePath) {","lastModifiedDate":"2022-03-16"},{"lineNumber":129,"author":{"gitId":"WJunHong"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2022-03-16"},{"lineNumber":130,"author":{"gitId":"WJunHong"},"content":"        }","lastModifiedDate":"2022-03-16"},{"lineNumber":131,"author":{"gitId":"WJunHong"},"content":"","lastModifiedDate":"2022-03-16"},{"lineNumber":132,"author":{"gitId":"WJunHong"},"content":"        @Override","lastModifiedDate":"2022-03-16"},{"lineNumber":133,"author":{"gitId":"WJunHong"},"content":"        public void addClient(Client client) {","lastModifiedDate":"2022-03-16"},{"lineNumber":134,"author":{"gitId":"WJunHong"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2022-03-16"},{"lineNumber":135,"author":{"gitId":"WJunHong"},"content":"        }","lastModifiedDate":"2022-03-16"},{"lineNumber":136,"author":{"gitId":"WJunHong"},"content":"","lastModifiedDate":"2022-03-16"},{"lineNumber":137,"author":{"gitId":"WJunHong"},"content":"        @Override","lastModifiedDate":"2022-03-16"},{"lineNumber":138,"author":{"gitId":"WJunHong"},"content":"        public void setAddressBook(ReadOnlyAddressBook newData) {","lastModifiedDate":"2022-03-16"},{"lineNumber":139,"author":{"gitId":"WJunHong"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2022-03-16"},{"lineNumber":140,"author":{"gitId":"WJunHong"},"content":"        }","lastModifiedDate":"2022-03-16"},{"lineNumber":141,"author":{"gitId":"WJunHong"},"content":"","lastModifiedDate":"2022-03-16"},{"lineNumber":142,"author":{"gitId":"WJunHong"},"content":"        @Override","lastModifiedDate":"2022-03-16"},{"lineNumber":143,"author":{"gitId":"WJunHong"},"content":"        public ReadOnlyAddressBook getAddressBook() {","lastModifiedDate":"2022-03-16"},{"lineNumber":144,"author":{"gitId":"WJunHong"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2022-03-16"},{"lineNumber":145,"author":{"gitId":"WJunHong"},"content":"        }","lastModifiedDate":"2022-03-16"},{"lineNumber":146,"author":{"gitId":"WJunHong"},"content":"","lastModifiedDate":"2022-03-16"},{"lineNumber":147,"author":{"gitId":"WJunHong"},"content":"        @Override","lastModifiedDate":"2022-03-16"},{"lineNumber":148,"author":{"gitId":"WJunHong"},"content":"        public boolean hasClient(Client client) {","lastModifiedDate":"2022-03-16"},{"lineNumber":149,"author":{"gitId":"WJunHong"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2022-03-16"},{"lineNumber":150,"author":{"gitId":"WJunHong"},"content":"        }","lastModifiedDate":"2022-03-16"},{"lineNumber":151,"author":{"gitId":"WJunHong"},"content":"","lastModifiedDate":"2022-03-16"},{"lineNumber":152,"author":{"gitId":"WJunHong"},"content":"        @Override","lastModifiedDate":"2022-03-16"},{"lineNumber":153,"author":{"gitId":"WJunHong"},"content":"        public boolean hasBuyer(Buyer buyer) {","lastModifiedDate":"2022-03-16"},{"lineNumber":154,"author":{"gitId":"WJunHong"},"content":"            throw new AssertionError(\"This method should not be called\");","lastModifiedDate":"2022-03-16"},{"lineNumber":155,"author":{"gitId":"WJunHong"},"content":"        }","lastModifiedDate":"2022-03-16"},{"lineNumber":156,"author":{"gitId":"WJunHong"},"content":"","lastModifiedDate":"2022-03-16"},{"lineNumber":157,"author":{"gitId":"cwnm"},"content":"        @Override","lastModifiedDate":"2022-03-17"},{"lineNumber":158,"author":{"gitId":"cwnm"},"content":"        public boolean hasSeller(Seller seller) {","lastModifiedDate":"2022-03-17"},{"lineNumber":159,"author":{"gitId":"cwnm"},"content":"            throw new AssertionError(\"This method should not be called\");","lastModifiedDate":"2022-03-17"},{"lineNumber":160,"author":{"gitId":"cwnm"},"content":"        }","lastModifiedDate":"2022-03-17"},{"lineNumber":161,"author":{"gitId":"cwnm"},"content":"","lastModifiedDate":"2022-03-17"},{"lineNumber":162,"author":{"gitId":"WJunHong"},"content":"        @Override","lastModifiedDate":"2022-03-16"},{"lineNumber":163,"author":{"gitId":"WJunHong"},"content":"        public void deleteClient(Client target) {","lastModifiedDate":"2022-03-16"},{"lineNumber":164,"author":{"gitId":"WJunHong"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2022-03-16"},{"lineNumber":165,"author":{"gitId":"WJunHong"},"content":"        }","lastModifiedDate":"2022-03-16"},{"lineNumber":166,"author":{"gitId":"WJunHong"},"content":"","lastModifiedDate":"2022-03-16"},{"lineNumber":167,"author":{"gitId":"WJunHong"},"content":"        @Override","lastModifiedDate":"2022-03-16"},{"lineNumber":168,"author":{"gitId":"WJunHong"},"content":"        public void setClient(Client target, Client editedClient) {","lastModifiedDate":"2022-03-16"},{"lineNumber":169,"author":{"gitId":"WJunHong"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2022-03-16"},{"lineNumber":170,"author":{"gitId":"WJunHong"},"content":"        }","lastModifiedDate":"2022-03-16"},{"lineNumber":171,"author":{"gitId":"WJunHong"},"content":"","lastModifiedDate":"2022-03-16"},{"lineNumber":172,"author":{"gitId":"WJunHong"},"content":"        @Override","lastModifiedDate":"2022-03-16"},{"lineNumber":173,"author":{"gitId":"WJunHong"},"content":"        public ObservableList\u003cClient\u003e getFilteredClientList() {","lastModifiedDate":"2022-03-16"},{"lineNumber":174,"author":{"gitId":"WJunHong"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2022-03-16"},{"lineNumber":175,"author":{"gitId":"WJunHong"},"content":"        }","lastModifiedDate":"2022-03-16"},{"lineNumber":176,"author":{"gitId":"WJunHong"},"content":"","lastModifiedDate":"2022-03-16"},{"lineNumber":177,"author":{"gitId":"WJunHong"},"content":"        @Override","lastModifiedDate":"2022-03-16"},{"lineNumber":178,"author":{"gitId":"WJunHong"},"content":"        public void updateFilteredClientList(Predicate\u003cClient\u003e predicate) {","lastModifiedDate":"2022-03-16"},{"lineNumber":179,"author":{"gitId":"WJunHong"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2022-03-16"},{"lineNumber":180,"author":{"gitId":"WJunHong"},"content":"        }","lastModifiedDate":"2022-03-16"},{"lineNumber":181,"author":{"gitId":"WJunHong"},"content":"","lastModifiedDate":"2022-03-16"},{"lineNumber":182,"author":{"gitId":"Jacky142857"},"content":"        @Override","lastModifiedDate":"2022-03-31"},{"lineNumber":183,"author":{"gitId":"Jacky142857"},"content":"        public void sortFilteredBuyerList(String comparedItem, String order) {","lastModifiedDate":"2022-03-31"},{"lineNumber":184,"author":{"gitId":"Jacky142857"},"content":"            throw new AssertionError(\"This method should not be called\");","lastModifiedDate":"2022-03-31"},{"lineNumber":185,"author":{"gitId":"Jacky142857"},"content":"        }","lastModifiedDate":"2022-03-31"},{"lineNumber":186,"author":{"gitId":"WJunHong"},"content":"        @Override","lastModifiedDate":"2022-03-16"},{"lineNumber":187,"author":{"gitId":"WJunHong"},"content":"        public void addBuyer(Buyer buyer) {","lastModifiedDate":"2022-03-16"},{"lineNumber":188,"author":{"gitId":"WJunHong"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2022-03-16"},{"lineNumber":189,"author":{"gitId":"WJunHong"},"content":"        }","lastModifiedDate":"2022-03-16"},{"lineNumber":190,"author":{"gitId":"cwnm"},"content":"","lastModifiedDate":"2022-03-17"},{"lineNumber":191,"author":{"gitId":"cwnm"},"content":"        @Override","lastModifiedDate":"2022-03-17"},{"lineNumber":192,"author":{"gitId":"cwnm"},"content":"        public void addSeller(Seller seller) {","lastModifiedDate":"2022-03-17"},{"lineNumber":193,"author":{"gitId":"cwnm"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2022-03-17"},{"lineNumber":194,"author":{"gitId":"cwnm"},"content":"        }","lastModifiedDate":"2022-03-17"},{"lineNumber":195,"author":{"gitId":"cwnm"},"content":"","lastModifiedDate":"2022-03-17"},{"lineNumber":196,"author":{"gitId":"Jacky142857"},"content":"        @Override","lastModifiedDate":"2022-03-19"},{"lineNumber":197,"author":{"gitId":"Jacky142857"},"content":"        public Path getSellerAddressBookFilePath() {","lastModifiedDate":"2022-03-19"},{"lineNumber":198,"author":{"gitId":"Jacky142857"},"content":"            return null;","lastModifiedDate":"2022-03-19"},{"lineNumber":199,"author":{"gitId":"Jacky142857"},"content":"        }","lastModifiedDate":"2022-03-19"},{"lineNumber":200,"author":{"gitId":"Jacky142857"},"content":"","lastModifiedDate":"2022-03-19"},{"lineNumber":201,"author":{"gitId":"Jacky142857"},"content":"        @Override","lastModifiedDate":"2022-03-19"},{"lineNumber":202,"author":{"gitId":"Jacky142857"},"content":"        public void setSellerAddressBookFilePath(Path sellerAddressBookFilePath) {","lastModifiedDate":"2022-03-19"},{"lineNumber":203,"author":{"gitId":"Jacky142857"},"content":"","lastModifiedDate":"2022-03-19"},{"lineNumber":204,"author":{"gitId":"Jacky142857"},"content":"        }","lastModifiedDate":"2022-03-19"},{"lineNumber":205,"author":{"gitId":"Jacky142857"},"content":"","lastModifiedDate":"2022-03-19"},{"lineNumber":206,"author":{"gitId":"Jacky142857"},"content":"        @Override","lastModifiedDate":"2022-03-19"},{"lineNumber":207,"author":{"gitId":"Jacky142857"},"content":"        public void setSellerAddressBook(ReadOnlySellerAddressBook sellerAddressBook) {","lastModifiedDate":"2022-03-19"},{"lineNumber":208,"author":{"gitId":"Jacky142857"},"content":"","lastModifiedDate":"2022-03-19"},{"lineNumber":209,"author":{"gitId":"Jacky142857"},"content":"        }","lastModifiedDate":"2022-03-19"},{"lineNumber":210,"author":{"gitId":"Jacky142857"},"content":"","lastModifiedDate":"2022-03-19"},{"lineNumber":211,"author":{"gitId":"Jacky142857"},"content":"        @Override","lastModifiedDate":"2022-03-31"},{"lineNumber":212,"author":{"gitId":"Jacky142857"},"content":"        public void sortFilteredSellerList(String comparator, String order) {","lastModifiedDate":"2022-03-31"},{"lineNumber":213,"author":{"gitId":"Jacky142857"},"content":"            throw new AssertionError(\"This method should not be called\");","lastModifiedDate":"2022-03-31"},{"lineNumber":214,"author":{"gitId":"Jacky142857"},"content":"        }","lastModifiedDate":"2022-03-31"},{"lineNumber":215,"author":{"gitId":"Jacky142857"},"content":"","lastModifiedDate":"2022-03-31"},{"lineNumber":216,"author":{"gitId":"Jacky142857"},"content":"        @Override","lastModifiedDate":"2022-03-19"},{"lineNumber":217,"author":{"gitId":"Jacky142857"},"content":"        public ReadOnlySellerAddressBook getSellerAddressBook() {","lastModifiedDate":"2022-03-19"},{"lineNumber":218,"author":{"gitId":"Jacky142857"},"content":"            return null;","lastModifiedDate":"2022-03-19"},{"lineNumber":219,"author":{"gitId":"Jacky142857"},"content":"        }","lastModifiedDate":"2022-03-19"},{"lineNumber":220,"author":{"gitId":"Jacky142857"},"content":"","lastModifiedDate":"2022-03-19"},{"lineNumber":221,"author":{"gitId":"Jacky142857"},"content":"        @Override","lastModifiedDate":"2022-03-19"},{"lineNumber":222,"author":{"gitId":"Jacky142857"},"content":"        public void deleteSeller(Seller target) {","lastModifiedDate":"2022-03-19"},{"lineNumber":223,"author":{"gitId":"Jacky142857"},"content":"","lastModifiedDate":"2022-03-19"},{"lineNumber":224,"author":{"gitId":"Jacky142857"},"content":"        }","lastModifiedDate":"2022-03-19"},{"lineNumber":225,"author":{"gitId":"Jacky142857"},"content":"","lastModifiedDate":"2022-03-19"},{"lineNumber":226,"author":{"gitId":"Jacky142857"},"content":"        @Override","lastModifiedDate":"2022-03-19"},{"lineNumber":227,"author":{"gitId":"Jacky142857"},"content":"        public void setSeller(Seller target, Seller editedSeller) {","lastModifiedDate":"2022-03-19"},{"lineNumber":228,"author":{"gitId":"Jacky142857"},"content":"","lastModifiedDate":"2022-03-19"},{"lineNumber":229,"author":{"gitId":"Jacky142857"},"content":"        }","lastModifiedDate":"2022-03-19"},{"lineNumber":230,"author":{"gitId":"Jacky142857"},"content":"","lastModifiedDate":"2022-03-19"},{"lineNumber":231,"author":{"gitId":"Jacky142857"},"content":"        @Override","lastModifiedDate":"2022-03-19"},{"lineNumber":232,"author":{"gitId":"Jacky142857"},"content":"        public ObservableList\u003cSeller\u003e getFilteredSellerList() {","lastModifiedDate":"2022-03-19"},{"lineNumber":233,"author":{"gitId":"Jacky142857"},"content":"            return null;","lastModifiedDate":"2022-03-19"},{"lineNumber":234,"author":{"gitId":"Jacky142857"},"content":"        }","lastModifiedDate":"2022-03-19"},{"lineNumber":235,"author":{"gitId":"Jacky142857"},"content":"","lastModifiedDate":"2022-03-19"},{"lineNumber":236,"author":{"gitId":"Jacky142857"},"content":"        @Override","lastModifiedDate":"2022-03-19"},{"lineNumber":237,"author":{"gitId":"Jacky142857"},"content":"        public void updateFilteredSellerList(Predicate\u003cSeller\u003e predicate) {","lastModifiedDate":"2022-03-19"},{"lineNumber":238,"author":{"gitId":"Jacky142857"},"content":"","lastModifiedDate":"2022-03-19"},{"lineNumber":239,"author":{"gitId":"Jacky142857"},"content":"        }","lastModifiedDate":"2022-03-19"},{"lineNumber":240,"author":{"gitId":"WJunHong"},"content":"","lastModifiedDate":"2022-03-23"},{"lineNumber":241,"author":{"gitId":"WJunHong"},"content":"        // \u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d Buyer \u003d\u003d\u003d\u003d\u003d\u003d //","lastModifiedDate":"2022-03-23"},{"lineNumber":242,"author":{"gitId":"WJunHong"},"content":"        @Override","lastModifiedDate":"2022-03-23"},{"lineNumber":243,"author":{"gitId":"WJunHong"},"content":"        public Path getBuyerAddressBookFilePath() {","lastModifiedDate":"2022-03-23"},{"lineNumber":244,"author":{"gitId":"WJunHong"},"content":"            return null;","lastModifiedDate":"2022-03-23"},{"lineNumber":245,"author":{"gitId":"WJunHong"},"content":"        }","lastModifiedDate":"2022-03-23"},{"lineNumber":246,"author":{"gitId":"WJunHong"},"content":"","lastModifiedDate":"2022-03-23"},{"lineNumber":247,"author":{"gitId":"WJunHong"},"content":"        @Override","lastModifiedDate":"2022-03-23"},{"lineNumber":248,"author":{"gitId":"WJunHong"},"content":"        public void setBuyerAddressBookFilePath(Path buyerAddressBookFilePath) {","lastModifiedDate":"2022-03-23"},{"lineNumber":249,"author":{"gitId":"WJunHong"},"content":"","lastModifiedDate":"2022-03-23"},{"lineNumber":250,"author":{"gitId":"WJunHong"},"content":"        }","lastModifiedDate":"2022-03-23"},{"lineNumber":251,"author":{"gitId":"WJunHong"},"content":"","lastModifiedDate":"2022-03-23"},{"lineNumber":252,"author":{"gitId":"WJunHong"},"content":"        @Override","lastModifiedDate":"2022-03-23"},{"lineNumber":253,"author":{"gitId":"WJunHong"},"content":"        public void setBuyerAddressBook(ReadOnlyBuyerAddressBook buyerAddressBook) {","lastModifiedDate":"2022-03-23"},{"lineNumber":254,"author":{"gitId":"WJunHong"},"content":"","lastModifiedDate":"2022-03-23"},{"lineNumber":255,"author":{"gitId":"WJunHong"},"content":"        }","lastModifiedDate":"2022-03-23"},{"lineNumber":256,"author":{"gitId":"WJunHong"},"content":"","lastModifiedDate":"2022-03-23"},{"lineNumber":257,"author":{"gitId":"WJunHong"},"content":"        @Override","lastModifiedDate":"2022-03-23"},{"lineNumber":258,"author":{"gitId":"WJunHong"},"content":"        public ReadOnlyBuyerAddressBook getBuyerAddressBook() {","lastModifiedDate":"2022-03-23"},{"lineNumber":259,"author":{"gitId":"WJunHong"},"content":"            return null;","lastModifiedDate":"2022-03-23"},{"lineNumber":260,"author":{"gitId":"WJunHong"},"content":"        }","lastModifiedDate":"2022-03-23"},{"lineNumber":261,"author":{"gitId":"WJunHong"},"content":"","lastModifiedDate":"2022-03-23"},{"lineNumber":262,"author":{"gitId":"WJunHong"},"content":"        @Override","lastModifiedDate":"2022-03-23"},{"lineNumber":263,"author":{"gitId":"WJunHong"},"content":"        public void deleteBuyer(Buyer target) {","lastModifiedDate":"2022-03-23"},{"lineNumber":264,"author":{"gitId":"WJunHong"},"content":"","lastModifiedDate":"2022-03-23"},{"lineNumber":265,"author":{"gitId":"WJunHong"},"content":"        }","lastModifiedDate":"2022-03-23"},{"lineNumber":266,"author":{"gitId":"WJunHong"},"content":"","lastModifiedDate":"2022-03-23"},{"lineNumber":267,"author":{"gitId":"WJunHong"},"content":"        @Override","lastModifiedDate":"2022-03-23"},{"lineNumber":268,"author":{"gitId":"WJunHong"},"content":"        public void setBuyer(Buyer target, Buyer editedBuyer) {","lastModifiedDate":"2022-03-23"},{"lineNumber":269,"author":{"gitId":"WJunHong"},"content":"","lastModifiedDate":"2022-03-23"},{"lineNumber":270,"author":{"gitId":"WJunHong"},"content":"        }","lastModifiedDate":"2022-03-23"},{"lineNumber":271,"author":{"gitId":"WJunHong"},"content":"","lastModifiedDate":"2022-03-23"},{"lineNumber":272,"author":{"gitId":"WJunHong"},"content":"        @Override","lastModifiedDate":"2022-03-23"},{"lineNumber":273,"author":{"gitId":"WJunHong"},"content":"        public ObservableList\u003cBuyer\u003e getFilteredBuyerList() {","lastModifiedDate":"2022-03-23"},{"lineNumber":274,"author":{"gitId":"WJunHong"},"content":"            return null;","lastModifiedDate":"2022-03-23"},{"lineNumber":275,"author":{"gitId":"WJunHong"},"content":"        }","lastModifiedDate":"2022-03-23"},{"lineNumber":276,"author":{"gitId":"WJunHong"},"content":"","lastModifiedDate":"2022-03-23"},{"lineNumber":277,"author":{"gitId":"WJunHong"},"content":"        @Override","lastModifiedDate":"2022-03-23"},{"lineNumber":278,"author":{"gitId":"WJunHong"},"content":"        public void updateFilteredBuyerList(Predicate\u003cBuyer\u003e predicate) {","lastModifiedDate":"2022-03-23"},{"lineNumber":279,"author":{"gitId":"WJunHong"},"content":"","lastModifiedDate":"2022-03-23"},{"lineNumber":280,"author":{"gitId":"WJunHong"},"content":"        }","lastModifiedDate":"2022-03-23"},{"lineNumber":281,"author":{"gitId":"WJunHong"},"content":"    }","lastModifiedDate":"2022-03-16"},{"lineNumber":282,"author":{"gitId":"WJunHong"},"content":"","lastModifiedDate":"2022-03-16"},{"lineNumber":283,"author":{"gitId":"WJunHong"},"content":"    /**","lastModifiedDate":"2022-03-16"},{"lineNumber":284,"author":{"gitId":"WJunHong"},"content":"     * A Model stub that contains a single buyer.","lastModifiedDate":"2022-03-16"},{"lineNumber":285,"author":{"gitId":"WJunHong"},"content":"     */","lastModifiedDate":"2022-03-16"},{"lineNumber":286,"author":{"gitId":"WJunHong"},"content":"    private static class ModelStubWithBuyer extends ModelStub {","lastModifiedDate":"2022-03-16"},{"lineNumber":287,"author":{"gitId":"WJunHong"},"content":"        private final Buyer buyer;","lastModifiedDate":"2022-03-16"},{"lineNumber":288,"author":{"gitId":"WJunHong"},"content":"","lastModifiedDate":"2022-03-16"},{"lineNumber":289,"author":{"gitId":"WJunHong"},"content":"        ModelStubWithBuyer(Buyer buyer) {","lastModifiedDate":"2022-03-16"},{"lineNumber":290,"author":{"gitId":"WJunHong"},"content":"            requireNonNull(buyer);","lastModifiedDate":"2022-03-16"},{"lineNumber":291,"author":{"gitId":"WJunHong"},"content":"            this.buyer \u003d buyer;","lastModifiedDate":"2022-03-16"},{"lineNumber":292,"author":{"gitId":"WJunHong"},"content":"        }","lastModifiedDate":"2022-03-16"},{"lineNumber":293,"author":{"gitId":"WJunHong"},"content":"","lastModifiedDate":"2022-03-16"},{"lineNumber":294,"author":{"gitId":"WJunHong"},"content":"        @Override","lastModifiedDate":"2022-03-16"},{"lineNumber":295,"author":{"gitId":"WJunHong"},"content":"        public boolean hasBuyer(Buyer buyer) {","lastModifiedDate":"2022-03-16"},{"lineNumber":296,"author":{"gitId":"WJunHong"},"content":"            requireNonNull(buyer);","lastModifiedDate":"2022-03-16"},{"lineNumber":297,"author":{"gitId":"WJunHong"},"content":"            return this.buyer.isSameclient(buyer);","lastModifiedDate":"2022-03-16"},{"lineNumber":298,"author":{"gitId":"WJunHong"},"content":"        }","lastModifiedDate":"2022-03-16"},{"lineNumber":299,"author":{"gitId":"WJunHong"},"content":"    }","lastModifiedDate":"2022-03-16"},{"lineNumber":300,"author":{"gitId":"WJunHong"},"content":"","lastModifiedDate":"2022-03-16"},{"lineNumber":301,"author":{"gitId":"WJunHong"},"content":"    /**","lastModifiedDate":"2022-03-16"},{"lineNumber":302,"author":{"gitId":"WJunHong"},"content":"     * A Model stub that always accept the client being added.","lastModifiedDate":"2022-03-16"},{"lineNumber":303,"author":{"gitId":"WJunHong"},"content":"     */","lastModifiedDate":"2022-03-16"},{"lineNumber":304,"author":{"gitId":"WJunHong"},"content":"    private static class ModelStubAcceptingBuyerAdded extends ModelStub {","lastModifiedDate":"2022-03-16"},{"lineNumber":305,"author":{"gitId":"WJunHong"},"content":"        final ArrayList\u003cClient\u003e clientsAdded \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2022-03-16"},{"lineNumber":306,"author":{"gitId":"WJunHong"},"content":"","lastModifiedDate":"2022-03-16"},{"lineNumber":307,"author":{"gitId":"WJunHong"},"content":"        @Override","lastModifiedDate":"2022-03-16"},{"lineNumber":308,"author":{"gitId":"WJunHong"},"content":"        public boolean hasBuyer(Buyer buyer) {","lastModifiedDate":"2022-03-16"},{"lineNumber":309,"author":{"gitId":"WJunHong"},"content":"            requireNonNull(buyer);","lastModifiedDate":"2022-03-16"},{"lineNumber":310,"author":{"gitId":"WJunHong"},"content":"            return clientsAdded.stream().anyMatch(buyer::isSameclient);","lastModifiedDate":"2022-03-16"},{"lineNumber":311,"author":{"gitId":"WJunHong"},"content":"        }","lastModifiedDate":"2022-03-16"},{"lineNumber":312,"author":{"gitId":"WJunHong"},"content":"","lastModifiedDate":"2022-03-16"},{"lineNumber":313,"author":{"gitId":"WJunHong"},"content":"        @Override","lastModifiedDate":"2022-03-16"},{"lineNumber":314,"author":{"gitId":"WJunHong"},"content":"        public void addBuyer(Buyer buyer) {","lastModifiedDate":"2022-03-16"},{"lineNumber":315,"author":{"gitId":"WJunHong"},"content":"            requireNonNull(buyer);","lastModifiedDate":"2022-03-16"},{"lineNumber":316,"author":{"gitId":"WJunHong"},"content":"            clientsAdded.add(buyer);","lastModifiedDate":"2022-03-16"},{"lineNumber":317,"author":{"gitId":"WJunHong"},"content":"        }","lastModifiedDate":"2022-03-16"},{"lineNumber":318,"author":{"gitId":"WJunHong"},"content":"","lastModifiedDate":"2022-03-16"},{"lineNumber":319,"author":{"gitId":"WJunHong"},"content":"        @Override","lastModifiedDate":"2022-03-16"},{"lineNumber":320,"author":{"gitId":"WJunHong"},"content":"        public ReadOnlyAddressBook getAddressBook() {","lastModifiedDate":"2022-03-16"},{"lineNumber":321,"author":{"gitId":"WJunHong"},"content":"            return new AddressBook();","lastModifiedDate":"2022-03-16"},{"lineNumber":322,"author":{"gitId":"WJunHong"},"content":"        }","lastModifiedDate":"2022-03-16"},{"lineNumber":323,"author":{"gitId":"WJunHong"},"content":"    }","lastModifiedDate":"2022-03-16"},{"lineNumber":324,"author":{"gitId":"WJunHong"},"content":"","lastModifiedDate":"2022-03-16"},{"lineNumber":325,"author":{"gitId":"WJunHong"},"content":"}","lastModifiedDate":"2022-03-16"}],"authorContributionMap":{"WJunHong":264,"Jacky142857":49,"cwnm":12}},{"path":"src/test/java/seedu/address/logic/commands/AddPtbCommandTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"WJunHong"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2022-03-24"},{"lineNumber":2,"author":{"gitId":"WJunHong"},"content":"","lastModifiedDate":"2022-03-24"},{"lineNumber":3,"author":{"gitId":"WJunHong"},"content":"public class AddPtbCommandTest {","lastModifiedDate":"2022-03-24"},{"lineNumber":4,"author":{"gitId":"WJunHong"},"content":"","lastModifiedDate":"2022-03-24"},{"lineNumber":5,"author":{"gitId":"WJunHong"},"content":"","lastModifiedDate":"2022-03-24"},{"lineNumber":6,"author":{"gitId":"WJunHong"},"content":"}","lastModifiedDate":"2022-03-24"}],"authorContributionMap":{"WJunHong":6}},{"path":"src/test/java/seedu/address/logic/commands/AddSellerCommandIntegrationTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"cwnm"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2022-03-17"},{"lineNumber":2,"author":{"gitId":"cwnm"},"content":"","lastModifiedDate":"2022-03-17"},{"lineNumber":3,"author":{"gitId":"chuashihong"},"content":"import static seedu.address.logic.commands.SellerCommandTestUtil.assertCommandSuccess;","lastModifiedDate":"2022-04-07"},{"lineNumber":4,"author":{"gitId":"cwnm"},"content":"import static seedu.address.testutil.TypicalClients.getTypicalAddressBook;","lastModifiedDate":"2022-03-17"},{"lineNumber":5,"author":{"gitId":"cwnm"},"content":"","lastModifiedDate":"2022-03-17"},{"lineNumber":6,"author":{"gitId":"cwnm"},"content":"import org.junit.jupiter.api.BeforeEach;","lastModifiedDate":"2022-03-17"},{"lineNumber":7,"author":{"gitId":"cwnm"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2022-03-17"},{"lineNumber":8,"author":{"gitId":"cwnm"},"content":"","lastModifiedDate":"2022-03-17"},{"lineNumber":9,"author":{"gitId":"WJunHong"},"content":"import seedu.address.model.BuyerAddressBook;","lastModifiedDate":"2022-03-23"},{"lineNumber":10,"author":{"gitId":"cwnm"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2022-03-17"},{"lineNumber":11,"author":{"gitId":"cwnm"},"content":"import seedu.address.model.ModelManager;","lastModifiedDate":"2022-03-17"},{"lineNumber":12,"author":{"gitId":"Jacky142857"},"content":"import seedu.address.model.SellerAddressBook;","lastModifiedDate":"2022-03-19"},{"lineNumber":13,"author":{"gitId":"cwnm"},"content":"import seedu.address.model.UserPrefs;","lastModifiedDate":"2022-03-17"},{"lineNumber":14,"author":{"gitId":"cwnm"},"content":"import seedu.address.model.seller.Seller;","lastModifiedDate":"2022-03-17"},{"lineNumber":15,"author":{"gitId":"cwnm"},"content":"import seedu.address.testutil.SellerBuilder;","lastModifiedDate":"2022-03-17"},{"lineNumber":16,"author":{"gitId":"cwnm"},"content":"","lastModifiedDate":"2022-03-17"},{"lineNumber":17,"author":{"gitId":"cwnm"},"content":"/**","lastModifiedDate":"2022-03-17"},{"lineNumber":18,"author":{"gitId":"cwnm"},"content":" * Contains integration tests (interaction with the Model) for {@code AddSellerCommand}.","lastModifiedDate":"2022-03-17"},{"lineNumber":19,"author":{"gitId":"cwnm"},"content":" */","lastModifiedDate":"2022-03-17"},{"lineNumber":20,"author":{"gitId":"cwnm"},"content":"public class AddSellerCommandIntegrationTest {","lastModifiedDate":"2022-03-17"},{"lineNumber":21,"author":{"gitId":"cwnm"},"content":"","lastModifiedDate":"2022-03-17"},{"lineNumber":22,"author":{"gitId":"cwnm"},"content":"    private Model model;","lastModifiedDate":"2022-03-17"},{"lineNumber":23,"author":{"gitId":"cwnm"},"content":"","lastModifiedDate":"2022-03-17"},{"lineNumber":24,"author":{"gitId":"cwnm"},"content":"    @BeforeEach","lastModifiedDate":"2022-03-17"},{"lineNumber":25,"author":{"gitId":"cwnm"},"content":"    public void setUp() {","lastModifiedDate":"2022-03-17"},{"lineNumber":26,"author":{"gitId":"WJunHong"},"content":"        model \u003d new ModelManager(getTypicalAddressBook(), new UserPrefs(), new SellerAddressBook(),","lastModifiedDate":"2022-03-23"},{"lineNumber":27,"author":{"gitId":"WJunHong"},"content":"                new BuyerAddressBook());","lastModifiedDate":"2022-03-23"},{"lineNumber":28,"author":{"gitId":"cwnm"},"content":"    }","lastModifiedDate":"2022-03-17"},{"lineNumber":29,"author":{"gitId":"cwnm"},"content":"","lastModifiedDate":"2022-03-17"},{"lineNumber":30,"author":{"gitId":"cwnm"},"content":"    @Test","lastModifiedDate":"2022-03-17"},{"lineNumber":31,"author":{"gitId":"cwnm"},"content":"    public void execute_newSeller_success() {","lastModifiedDate":"2022-03-17"},{"lineNumber":32,"author":{"gitId":"cwnm"},"content":"        Seller validSeller \u003d new SellerBuilder().build();","lastModifiedDate":"2022-03-17"},{"lineNumber":33,"author":{"gitId":"cwnm"},"content":"","lastModifiedDate":"2022-03-17"},{"lineNumber":34,"author":{"gitId":"WJunHong"},"content":"        Model expectedModel \u003d new ModelManager(model.getAddressBook(), new UserPrefs(), model.getSellerAddressBook(),","lastModifiedDate":"2022-03-23"},{"lineNumber":35,"author":{"gitId":"WJunHong"},"content":"                model.getBuyerAddressBook());","lastModifiedDate":"2022-03-23"},{"lineNumber":36,"author":{"gitId":"Jacky142857"},"content":"        expectedModel.addSeller(validSeller);","lastModifiedDate":"2022-03-19"},{"lineNumber":37,"author":{"gitId":"cwnm"},"content":"","lastModifiedDate":"2022-03-17"},{"lineNumber":38,"author":{"gitId":"cwnm"},"content":"        assertCommandSuccess(new AddSellerCommand(validSeller), model,","lastModifiedDate":"2022-03-17"},{"lineNumber":39,"author":{"gitId":"cwnm"},"content":"                String.format(AddSellerCommand.MESSAGE_SUCCESS, validSeller), expectedModel);","lastModifiedDate":"2022-03-17"},{"lineNumber":40,"author":{"gitId":"cwnm"},"content":"    }","lastModifiedDate":"2022-03-17"},{"lineNumber":41,"author":{"gitId":"cwnm"},"content":"","lastModifiedDate":"2022-03-17"},{"lineNumber":42,"author":{"gitId":"cwnm"},"content":"}","lastModifiedDate":"2022-03-17"},{"lineNumber":43,"author":{"gitId":"cwnm"},"content":"","lastModifiedDate":"2022-03-17"}],"authorContributionMap":{"WJunHong":5,"Jacky142857":2,"cwnm":35,"chuashihong":1}},{"path":"src/test/java/seedu/address/logic/commands/AddSellerCommandTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"cwnm"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2022-03-17"},{"lineNumber":2,"author":{"gitId":"cwnm"},"content":"","lastModifiedDate":"2022-03-17"},{"lineNumber":3,"author":{"gitId":"cwnm"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2022-03-17"},{"lineNumber":4,"author":{"gitId":"cwnm"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2022-03-17"},{"lineNumber":5,"author":{"gitId":"cwnm"},"content":"import static org.junit.jupiter.api.Assertions.assertNotEquals;","lastModifiedDate":"2022-03-17"},{"lineNumber":6,"author":{"gitId":"cwnm"},"content":"import static seedu.address.testutil.Assert.assertThrows;","lastModifiedDate":"2022-03-17"},{"lineNumber":7,"author":{"gitId":"cwnm"},"content":"","lastModifiedDate":"2022-03-17"},{"lineNumber":8,"author":{"gitId":"cwnm"},"content":"import java.nio.file.Path;","lastModifiedDate":"2022-03-17"},{"lineNumber":9,"author":{"gitId":"cwnm"},"content":"import java.util.ArrayList;","lastModifiedDate":"2022-03-17"},{"lineNumber":10,"author":{"gitId":"cwnm"},"content":"import java.util.List;","lastModifiedDate":"2022-03-17"},{"lineNumber":11,"author":{"gitId":"cwnm"},"content":"import java.util.function.Predicate;","lastModifiedDate":"2022-03-17"},{"lineNumber":12,"author":{"gitId":"cwnm"},"content":"","lastModifiedDate":"2022-03-17"},{"lineNumber":13,"author":{"gitId":"cwnm"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2022-03-17"},{"lineNumber":14,"author":{"gitId":"cwnm"},"content":"","lastModifiedDate":"2022-03-17"},{"lineNumber":15,"author":{"gitId":"cwnm"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2022-03-17"},{"lineNumber":16,"author":{"gitId":"cwnm"},"content":"import seedu.address.commons.core.GuiSettings;","lastModifiedDate":"2022-03-17"},{"lineNumber":17,"author":{"gitId":"cwnm"},"content":"import seedu.address.logic.commands.exceptions.CommandException;","lastModifiedDate":"2022-03-17"},{"lineNumber":18,"author":{"gitId":"cwnm"},"content":"import seedu.address.model.AddressBook;","lastModifiedDate":"2022-03-17"},{"lineNumber":19,"author":{"gitId":"cwnm"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2022-03-17"},{"lineNumber":20,"author":{"gitId":"cwnm"},"content":"import seedu.address.model.ReadOnlyAddressBook;","lastModifiedDate":"2022-03-17"},{"lineNumber":21,"author":{"gitId":"WJunHong"},"content":"import seedu.address.model.ReadOnlyBuyerAddressBook;","lastModifiedDate":"2022-03-23"},{"lineNumber":22,"author":{"gitId":"Jacky142857"},"content":"import seedu.address.model.ReadOnlySellerAddressBook;","lastModifiedDate":"2022-03-19"},{"lineNumber":23,"author":{"gitId":"cwnm"},"content":"import seedu.address.model.ReadOnlyUserPrefs;","lastModifiedDate":"2022-03-17"},{"lineNumber":24,"author":{"gitId":"cwnm"},"content":"import seedu.address.model.buyer.Buyer;","lastModifiedDate":"2022-03-17"},{"lineNumber":25,"author":{"gitId":"cwnm"},"content":"import seedu.address.model.client.Client;","lastModifiedDate":"2022-03-17"},{"lineNumber":26,"author":{"gitId":"cwnm"},"content":"import seedu.address.model.seller.Seller;","lastModifiedDate":"2022-03-17"},{"lineNumber":27,"author":{"gitId":"cwnm"},"content":"import seedu.address.testutil.SellerBuilder;","lastModifiedDate":"2022-03-17"},{"lineNumber":28,"author":{"gitId":"cwnm"},"content":"","lastModifiedDate":"2022-03-17"},{"lineNumber":29,"author":{"gitId":"cwnm"},"content":"public class AddSellerCommandTest {","lastModifiedDate":"2022-03-17"},{"lineNumber":30,"author":{"gitId":"cwnm"},"content":"","lastModifiedDate":"2022-03-17"},{"lineNumber":31,"author":{"gitId":"cwnm"},"content":"    @Test","lastModifiedDate":"2022-03-17"},{"lineNumber":32,"author":{"gitId":"cwnm"},"content":"    public void constructor_nullSeller_throwsNullPointerException() {","lastModifiedDate":"2022-03-17"},{"lineNumber":33,"author":{"gitId":"cwnm"},"content":"        assertThrows(NullPointerException.class, () -\u003e new AddSellerCommand(null));","lastModifiedDate":"2022-03-17"},{"lineNumber":34,"author":{"gitId":"cwnm"},"content":"    }","lastModifiedDate":"2022-03-17"},{"lineNumber":35,"author":{"gitId":"cwnm"},"content":"","lastModifiedDate":"2022-03-17"},{"lineNumber":36,"author":{"gitId":"cwnm"},"content":"    @Test","lastModifiedDate":"2022-03-17"},{"lineNumber":37,"author":{"gitId":"cwnm"},"content":"    public void execute_clientAcceptedByModel_addSuccessful() throws Exception {","lastModifiedDate":"2022-03-17"},{"lineNumber":38,"author":{"gitId":"cwnm"},"content":"        ModelStubAcceptingSellerAdded modelStub \u003d new ModelStubAcceptingSellerAdded();","lastModifiedDate":"2022-03-17"},{"lineNumber":39,"author":{"gitId":"cwnm"},"content":"        Seller validSeller \u003d new SellerBuilder().build();","lastModifiedDate":"2022-03-17"},{"lineNumber":40,"author":{"gitId":"cwnm"},"content":"","lastModifiedDate":"2022-03-17"},{"lineNumber":41,"author":{"gitId":"cwnm"},"content":"        CommandResult commandResult \u003d new AddSellerCommand(validSeller).execute(modelStub);","lastModifiedDate":"2022-03-17"},{"lineNumber":42,"author":{"gitId":"cwnm"},"content":"","lastModifiedDate":"2022-03-17"},{"lineNumber":43,"author":{"gitId":"cwnm"},"content":"        assertEquals(String.format(AddSellerCommand.MESSAGE_SUCCESS, validSeller), commandResult.getFeedbackToUser());","lastModifiedDate":"2022-03-17"},{"lineNumber":44,"author":{"gitId":"cwnm"},"content":"        assertEquals(List.of(validSeller), modelStub.clientsAdded);","lastModifiedDate":"2022-03-17"},{"lineNumber":45,"author":{"gitId":"cwnm"},"content":"    }","lastModifiedDate":"2022-03-17"},{"lineNumber":46,"author":{"gitId":"cwnm"},"content":"","lastModifiedDate":"2022-03-17"},{"lineNumber":47,"author":{"gitId":"cwnm"},"content":"    @Test","lastModifiedDate":"2022-03-17"},{"lineNumber":48,"author":{"gitId":"cwnm"},"content":"    public void execute_duplicateSeller_throwsCommandException() {","lastModifiedDate":"2022-03-17"},{"lineNumber":49,"author":{"gitId":"cwnm"},"content":"        Seller validSeller \u003d new SellerBuilder().build();","lastModifiedDate":"2022-03-17"},{"lineNumber":50,"author":{"gitId":"cwnm"},"content":"        AddSellerCommand addSellerCommand \u003d new AddSellerCommand(validSeller);","lastModifiedDate":"2022-03-17"},{"lineNumber":51,"author":{"gitId":"cwnm"},"content":"        ModelStub modelStub \u003d new ModelStubWithSeller(validSeller);","lastModifiedDate":"2022-03-17"},{"lineNumber":52,"author":{"gitId":"cwnm"},"content":"","lastModifiedDate":"2022-03-17"},{"lineNumber":53,"author":{"gitId":"cwnm"},"content":"        assertThrows(CommandException.class, AddSellerCommand.MESSAGE_DUPLICATE_CLIENT, () -\u003e addSellerCommand","lastModifiedDate":"2022-03-17"},{"lineNumber":54,"author":{"gitId":"cwnm"},"content":"                .execute(modelStub));","lastModifiedDate":"2022-03-17"},{"lineNumber":55,"author":{"gitId":"cwnm"},"content":"    }","lastModifiedDate":"2022-03-17"},{"lineNumber":56,"author":{"gitId":"cwnm"},"content":"","lastModifiedDate":"2022-03-17"},{"lineNumber":57,"author":{"gitId":"cwnm"},"content":"    @Test","lastModifiedDate":"2022-03-17"},{"lineNumber":58,"author":{"gitId":"cwnm"},"content":"    public void equals() {","lastModifiedDate":"2022-03-17"},{"lineNumber":59,"author":{"gitId":"cwnm"},"content":"        Seller janald \u003d new SellerBuilder().withName(\"Janald\").build();","lastModifiedDate":"2022-03-17"},{"lineNumber":60,"author":{"gitId":"cwnm"},"content":"        Seller junheng \u003d new SellerBuilder().withName(\"Junheng\").build();","lastModifiedDate":"2022-03-17"},{"lineNumber":61,"author":{"gitId":"cwnm"},"content":"        AddSellerCommand addJanaldCommand \u003d new AddSellerCommand(janald);","lastModifiedDate":"2022-03-17"},{"lineNumber":62,"author":{"gitId":"cwnm"},"content":"        AddSellerCommand addJunhengCommand \u003d new AddSellerCommand(junheng);","lastModifiedDate":"2022-03-17"},{"lineNumber":63,"author":{"gitId":"cwnm"},"content":"","lastModifiedDate":"2022-03-17"},{"lineNumber":64,"author":{"gitId":"cwnm"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2022-03-17"},{"lineNumber":65,"author":{"gitId":"cwnm"},"content":"        assertEquals(addJanaldCommand, addJanaldCommand);","lastModifiedDate":"2022-03-17"},{"lineNumber":66,"author":{"gitId":"cwnm"},"content":"","lastModifiedDate":"2022-03-17"},{"lineNumber":67,"author":{"gitId":"cwnm"},"content":"        // same values -\u003e returns true","lastModifiedDate":"2022-03-17"},{"lineNumber":68,"author":{"gitId":"cwnm"},"content":"        AddSellerCommand addJanaldCommandCopy \u003d new AddSellerCommand(janald);","lastModifiedDate":"2022-03-17"},{"lineNumber":69,"author":{"gitId":"cwnm"},"content":"        assertEquals(addJanaldCommand, addJanaldCommandCopy);","lastModifiedDate":"2022-03-17"},{"lineNumber":70,"author":{"gitId":"cwnm"},"content":"","lastModifiedDate":"2022-03-17"},{"lineNumber":71,"author":{"gitId":"cwnm"},"content":"        // different types -\u003e returns false","lastModifiedDate":"2022-03-17"},{"lineNumber":72,"author":{"gitId":"cwnm"},"content":"        assertNotEquals(1, addJanaldCommand);","lastModifiedDate":"2022-03-17"},{"lineNumber":73,"author":{"gitId":"cwnm"},"content":"","lastModifiedDate":"2022-03-17"},{"lineNumber":74,"author":{"gitId":"cwnm"},"content":"        // null -\u003e returns false","lastModifiedDate":"2022-03-17"},{"lineNumber":75,"author":{"gitId":"cwnm"},"content":"        assertNotEquals(null, addJanaldCommand);","lastModifiedDate":"2022-03-17"},{"lineNumber":76,"author":{"gitId":"cwnm"},"content":"","lastModifiedDate":"2022-03-17"},{"lineNumber":77,"author":{"gitId":"cwnm"},"content":"        // different client -\u003e returns false","lastModifiedDate":"2022-03-17"},{"lineNumber":78,"author":{"gitId":"cwnm"},"content":"        assertNotEquals(addJanaldCommand, addJunhengCommand);","lastModifiedDate":"2022-03-17"},{"lineNumber":79,"author":{"gitId":"cwnm"},"content":"    }","lastModifiedDate":"2022-03-17"},{"lineNumber":80,"author":{"gitId":"cwnm"},"content":"","lastModifiedDate":"2022-03-17"},{"lineNumber":81,"author":{"gitId":"cwnm"},"content":"    /**","lastModifiedDate":"2022-03-17"},{"lineNumber":82,"author":{"gitId":"cwnm"},"content":"     * A default model stub that have all of the methods failing.","lastModifiedDate":"2022-03-17"},{"lineNumber":83,"author":{"gitId":"cwnm"},"content":"     */","lastModifiedDate":"2022-03-17"},{"lineNumber":84,"author":{"gitId":"cwnm"},"content":"    private static class ModelStub implements Model {","lastModifiedDate":"2022-03-17"},{"lineNumber":85,"author":{"gitId":"cwnm"},"content":"        @Override","lastModifiedDate":"2022-03-17"},{"lineNumber":86,"author":{"gitId":"cwnm"},"content":"        public void setUserPrefs(ReadOnlyUserPrefs userPrefs) {","lastModifiedDate":"2022-03-17"},{"lineNumber":87,"author":{"gitId":"cwnm"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2022-03-17"},{"lineNumber":88,"author":{"gitId":"cwnm"},"content":"        }","lastModifiedDate":"2022-03-17"},{"lineNumber":89,"author":{"gitId":"cwnm"},"content":"","lastModifiedDate":"2022-03-17"},{"lineNumber":90,"author":{"gitId":"cwnm"},"content":"        @Override","lastModifiedDate":"2022-03-17"},{"lineNumber":91,"author":{"gitId":"cwnm"},"content":"        public ReadOnlyUserPrefs getUserPrefs() {","lastModifiedDate":"2022-03-17"},{"lineNumber":92,"author":{"gitId":"cwnm"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2022-03-17"},{"lineNumber":93,"author":{"gitId":"cwnm"},"content":"        }","lastModifiedDate":"2022-03-17"},{"lineNumber":94,"author":{"gitId":"cwnm"},"content":"","lastModifiedDate":"2022-03-17"},{"lineNumber":95,"author":{"gitId":"cwnm"},"content":"        @Override","lastModifiedDate":"2022-03-17"},{"lineNumber":96,"author":{"gitId":"cwnm"},"content":"        public GuiSettings getGuiSettings() {","lastModifiedDate":"2022-03-17"},{"lineNumber":97,"author":{"gitId":"cwnm"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2022-03-17"},{"lineNumber":98,"author":{"gitId":"cwnm"},"content":"        }","lastModifiedDate":"2022-03-17"},{"lineNumber":99,"author":{"gitId":"cwnm"},"content":"","lastModifiedDate":"2022-03-17"},{"lineNumber":100,"author":{"gitId":"cwnm"},"content":"        @Override","lastModifiedDate":"2022-03-17"},{"lineNumber":101,"author":{"gitId":"cwnm"},"content":"        public void setGuiSettings(GuiSettings guiSettings) {","lastModifiedDate":"2022-03-17"},{"lineNumber":102,"author":{"gitId":"cwnm"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2022-03-17"},{"lineNumber":103,"author":{"gitId":"cwnm"},"content":"        }","lastModifiedDate":"2022-03-17"},{"lineNumber":104,"author":{"gitId":"cwnm"},"content":"","lastModifiedDate":"2022-03-17"},{"lineNumber":105,"author":{"gitId":"cwnm"},"content":"        @Override","lastModifiedDate":"2022-03-17"},{"lineNumber":106,"author":{"gitId":"cwnm"},"content":"        public Path getAddressBookFilePath() {","lastModifiedDate":"2022-03-17"},{"lineNumber":107,"author":{"gitId":"cwnm"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2022-03-17"},{"lineNumber":108,"author":{"gitId":"cwnm"},"content":"        }","lastModifiedDate":"2022-03-17"},{"lineNumber":109,"author":{"gitId":"cwnm"},"content":"","lastModifiedDate":"2022-03-17"},{"lineNumber":110,"author":{"gitId":"cwnm"},"content":"        @Override","lastModifiedDate":"2022-03-17"},{"lineNumber":111,"author":{"gitId":"cwnm"},"content":"        public void setAddressBookFilePath(Path addressBookFilePath) {","lastModifiedDate":"2022-03-17"},{"lineNumber":112,"author":{"gitId":"cwnm"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2022-03-17"},{"lineNumber":113,"author":{"gitId":"cwnm"},"content":"        }","lastModifiedDate":"2022-03-17"},{"lineNumber":114,"author":{"gitId":"cwnm"},"content":"","lastModifiedDate":"2022-03-17"},{"lineNumber":115,"author":{"gitId":"cwnm"},"content":"        @Override","lastModifiedDate":"2022-03-17"},{"lineNumber":116,"author":{"gitId":"cwnm"},"content":"        public void addClient(Client client) {","lastModifiedDate":"2022-03-17"},{"lineNumber":117,"author":{"gitId":"cwnm"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2022-03-17"},{"lineNumber":118,"author":{"gitId":"cwnm"},"content":"        }","lastModifiedDate":"2022-03-17"},{"lineNumber":119,"author":{"gitId":"cwnm"},"content":"","lastModifiedDate":"2022-03-17"},{"lineNumber":120,"author":{"gitId":"cwnm"},"content":"        @Override","lastModifiedDate":"2022-03-17"},{"lineNumber":121,"author":{"gitId":"cwnm"},"content":"        public void setAddressBook(ReadOnlyAddressBook newData) {","lastModifiedDate":"2022-03-17"},{"lineNumber":122,"author":{"gitId":"cwnm"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2022-03-17"},{"lineNumber":123,"author":{"gitId":"cwnm"},"content":"        }","lastModifiedDate":"2022-03-17"},{"lineNumber":124,"author":{"gitId":"cwnm"},"content":"","lastModifiedDate":"2022-03-17"},{"lineNumber":125,"author":{"gitId":"cwnm"},"content":"        @Override","lastModifiedDate":"2022-03-17"},{"lineNumber":126,"author":{"gitId":"cwnm"},"content":"        public ReadOnlyAddressBook getAddressBook() {","lastModifiedDate":"2022-03-17"},{"lineNumber":127,"author":{"gitId":"cwnm"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2022-03-17"},{"lineNumber":128,"author":{"gitId":"cwnm"},"content":"        }","lastModifiedDate":"2022-03-17"},{"lineNumber":129,"author":{"gitId":"cwnm"},"content":"","lastModifiedDate":"2022-03-17"},{"lineNumber":130,"author":{"gitId":"cwnm"},"content":"        @Override","lastModifiedDate":"2022-03-17"},{"lineNumber":131,"author":{"gitId":"cwnm"},"content":"        public boolean hasClient(Client client) {","lastModifiedDate":"2022-03-17"},{"lineNumber":132,"author":{"gitId":"cwnm"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2022-03-17"},{"lineNumber":133,"author":{"gitId":"cwnm"},"content":"        }","lastModifiedDate":"2022-03-17"},{"lineNumber":134,"author":{"gitId":"cwnm"},"content":"","lastModifiedDate":"2022-03-17"},{"lineNumber":135,"author":{"gitId":"cwnm"},"content":"        @Override","lastModifiedDate":"2022-03-17"},{"lineNumber":136,"author":{"gitId":"cwnm"},"content":"        public boolean hasBuyer(Buyer buyer) {","lastModifiedDate":"2022-03-17"},{"lineNumber":137,"author":{"gitId":"cwnm"},"content":"            throw new AssertionError(\"This method should not be called\");","lastModifiedDate":"2022-03-17"},{"lineNumber":138,"author":{"gitId":"cwnm"},"content":"        }","lastModifiedDate":"2022-03-17"},{"lineNumber":139,"author":{"gitId":"cwnm"},"content":"","lastModifiedDate":"2022-03-17"},{"lineNumber":140,"author":{"gitId":"cwnm"},"content":"        @Override","lastModifiedDate":"2022-03-17"},{"lineNumber":141,"author":{"gitId":"cwnm"},"content":"        public boolean hasSeller(Seller seller) {","lastModifiedDate":"2022-03-17"},{"lineNumber":142,"author":{"gitId":"cwnm"},"content":"            throw new AssertionError(\"This method should not be called\");","lastModifiedDate":"2022-03-17"},{"lineNumber":143,"author":{"gitId":"cwnm"},"content":"        }","lastModifiedDate":"2022-03-17"},{"lineNumber":144,"author":{"gitId":"cwnm"},"content":"","lastModifiedDate":"2022-03-17"},{"lineNumber":145,"author":{"gitId":"cwnm"},"content":"        @Override","lastModifiedDate":"2022-03-17"},{"lineNumber":146,"author":{"gitId":"cwnm"},"content":"        public void deleteClient(Client target) {","lastModifiedDate":"2022-03-17"},{"lineNumber":147,"author":{"gitId":"cwnm"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2022-03-17"},{"lineNumber":148,"author":{"gitId":"cwnm"},"content":"        }","lastModifiedDate":"2022-03-17"},{"lineNumber":149,"author":{"gitId":"cwnm"},"content":"","lastModifiedDate":"2022-03-17"},{"lineNumber":150,"author":{"gitId":"cwnm"},"content":"        @Override","lastModifiedDate":"2022-03-17"},{"lineNumber":151,"author":{"gitId":"cwnm"},"content":"        public void setClient(Client target, Client editedClient) {","lastModifiedDate":"2022-03-17"},{"lineNumber":152,"author":{"gitId":"cwnm"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2022-03-17"},{"lineNumber":153,"author":{"gitId":"cwnm"},"content":"        }","lastModifiedDate":"2022-03-17"},{"lineNumber":154,"author":{"gitId":"cwnm"},"content":"","lastModifiedDate":"2022-03-17"},{"lineNumber":155,"author":{"gitId":"cwnm"},"content":"        @Override","lastModifiedDate":"2022-03-17"},{"lineNumber":156,"author":{"gitId":"cwnm"},"content":"        public ObservableList\u003cClient\u003e getFilteredClientList() {","lastModifiedDate":"2022-03-17"},{"lineNumber":157,"author":{"gitId":"cwnm"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2022-03-17"},{"lineNumber":158,"author":{"gitId":"cwnm"},"content":"        }","lastModifiedDate":"2022-03-17"},{"lineNumber":159,"author":{"gitId":"cwnm"},"content":"","lastModifiedDate":"2022-03-17"},{"lineNumber":160,"author":{"gitId":"cwnm"},"content":"        @Override","lastModifiedDate":"2022-03-17"},{"lineNumber":161,"author":{"gitId":"cwnm"},"content":"        public void updateFilteredClientList(Predicate\u003cClient\u003e predicate) {","lastModifiedDate":"2022-03-17"},{"lineNumber":162,"author":{"gitId":"cwnm"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2022-03-17"},{"lineNumber":163,"author":{"gitId":"cwnm"},"content":"        }","lastModifiedDate":"2022-03-17"},{"lineNumber":164,"author":{"gitId":"cwnm"},"content":"","lastModifiedDate":"2022-03-17"},{"lineNumber":165,"author":{"gitId":"cwnm"},"content":"        @Override","lastModifiedDate":"2022-03-17"},{"lineNumber":166,"author":{"gitId":"cwnm"},"content":"        public void addBuyer(Buyer buyer) {","lastModifiedDate":"2022-03-17"},{"lineNumber":167,"author":{"gitId":"cwnm"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2022-03-17"},{"lineNumber":168,"author":{"gitId":"cwnm"},"content":"        }","lastModifiedDate":"2022-03-17"},{"lineNumber":169,"author":{"gitId":"cwnm"},"content":"","lastModifiedDate":"2022-03-17"},{"lineNumber":170,"author":{"gitId":"cwnm"},"content":"        @Override","lastModifiedDate":"2022-03-17"},{"lineNumber":171,"author":{"gitId":"cwnm"},"content":"        public void addSeller(Seller seller) {","lastModifiedDate":"2022-03-17"},{"lineNumber":172,"author":{"gitId":"cwnm"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2022-03-17"},{"lineNumber":173,"author":{"gitId":"cwnm"},"content":"        }","lastModifiedDate":"2022-03-17"},{"lineNumber":174,"author":{"gitId":"cwnm"},"content":"","lastModifiedDate":"2022-03-17"},{"lineNumber":175,"author":{"gitId":"Jacky142857"},"content":"        @Override","lastModifiedDate":"2022-03-19"},{"lineNumber":176,"author":{"gitId":"Jacky142857"},"content":"        public Path getSellerAddressBookFilePath() {","lastModifiedDate":"2022-03-19"},{"lineNumber":177,"author":{"gitId":"Jacky142857"},"content":"            return null;","lastModifiedDate":"2022-03-19"},{"lineNumber":178,"author":{"gitId":"Jacky142857"},"content":"        }","lastModifiedDate":"2022-03-19"},{"lineNumber":179,"author":{"gitId":"Jacky142857"},"content":"","lastModifiedDate":"2022-03-19"},{"lineNumber":180,"author":{"gitId":"Jacky142857"},"content":"        @Override","lastModifiedDate":"2022-03-19"},{"lineNumber":181,"author":{"gitId":"Jacky142857"},"content":"        public void setSellerAddressBookFilePath(Path sellerAddressBookFilePath) {","lastModifiedDate":"2022-03-19"},{"lineNumber":182,"author":{"gitId":"Jacky142857"},"content":"","lastModifiedDate":"2022-03-19"},{"lineNumber":183,"author":{"gitId":"Jacky142857"},"content":"        }","lastModifiedDate":"2022-03-19"},{"lineNumber":184,"author":{"gitId":"Jacky142857"},"content":"","lastModifiedDate":"2022-03-19"},{"lineNumber":185,"author":{"gitId":"Jacky142857"},"content":"        @Override","lastModifiedDate":"2022-03-19"},{"lineNumber":186,"author":{"gitId":"Jacky142857"},"content":"        public void setSellerAddressBook(ReadOnlySellerAddressBook sellerAddressBook) {","lastModifiedDate":"2022-03-19"},{"lineNumber":187,"author":{"gitId":"Jacky142857"},"content":"","lastModifiedDate":"2022-03-19"},{"lineNumber":188,"author":{"gitId":"Jacky142857"},"content":"        }","lastModifiedDate":"2022-03-19"},{"lineNumber":189,"author":{"gitId":"Jacky142857"},"content":"","lastModifiedDate":"2022-03-19"},{"lineNumber":190,"author":{"gitId":"Jacky142857"},"content":"        @Override","lastModifiedDate":"2022-03-19"},{"lineNumber":191,"author":{"gitId":"Jacky142857"},"content":"        public ReadOnlySellerAddressBook getSellerAddressBook() {","lastModifiedDate":"2022-03-19"},{"lineNumber":192,"author":{"gitId":"Jacky142857"},"content":"            return null;","lastModifiedDate":"2022-03-19"},{"lineNumber":193,"author":{"gitId":"Jacky142857"},"content":"        }","lastModifiedDate":"2022-03-19"},{"lineNumber":194,"author":{"gitId":"Jacky142857"},"content":"","lastModifiedDate":"2022-03-19"},{"lineNumber":195,"author":{"gitId":"Jacky142857"},"content":"        @Override","lastModifiedDate":"2022-03-19"},{"lineNumber":196,"author":{"gitId":"Jacky142857"},"content":"        public void deleteSeller(Seller target) {","lastModifiedDate":"2022-03-19"},{"lineNumber":197,"author":{"gitId":"Jacky142857"},"content":"","lastModifiedDate":"2022-03-19"},{"lineNumber":198,"author":{"gitId":"Jacky142857"},"content":"        }","lastModifiedDate":"2022-03-19"},{"lineNumber":199,"author":{"gitId":"Jacky142857"},"content":"","lastModifiedDate":"2022-03-19"},{"lineNumber":200,"author":{"gitId":"Jacky142857"},"content":"        @Override","lastModifiedDate":"2022-03-19"},{"lineNumber":201,"author":{"gitId":"Jacky142857"},"content":"        public void setSeller(Seller target, Seller editedSeller) {","lastModifiedDate":"2022-03-19"},{"lineNumber":202,"author":{"gitId":"Jacky142857"},"content":"","lastModifiedDate":"2022-03-19"},{"lineNumber":203,"author":{"gitId":"Jacky142857"},"content":"        }","lastModifiedDate":"2022-03-19"},{"lineNumber":204,"author":{"gitId":"Jacky142857"},"content":"","lastModifiedDate":"2022-03-19"},{"lineNumber":205,"author":{"gitId":"Jacky142857"},"content":"        @Override","lastModifiedDate":"2022-03-19"},{"lineNumber":206,"author":{"gitId":"Jacky142857"},"content":"        public ObservableList\u003cSeller\u003e getFilteredSellerList() {","lastModifiedDate":"2022-03-19"},{"lineNumber":207,"author":{"gitId":"Jacky142857"},"content":"            return null;","lastModifiedDate":"2022-03-19"},{"lineNumber":208,"author":{"gitId":"Jacky142857"},"content":"        }","lastModifiedDate":"2022-03-19"},{"lineNumber":209,"author":{"gitId":"Jacky142857"},"content":"","lastModifiedDate":"2022-03-19"},{"lineNumber":210,"author":{"gitId":"Jacky142857"},"content":"        @Override","lastModifiedDate":"2022-03-19"},{"lineNumber":211,"author":{"gitId":"Jacky142857"},"content":"        public void updateFilteredSellerList(Predicate\u003cSeller\u003e predicate) {","lastModifiedDate":"2022-03-19"},{"lineNumber":212,"author":{"gitId":"Jacky142857"},"content":"","lastModifiedDate":"2022-03-19"},{"lineNumber":213,"author":{"gitId":"Jacky142857"},"content":"        }","lastModifiedDate":"2022-03-19"},{"lineNumber":214,"author":{"gitId":"WJunHong"},"content":"","lastModifiedDate":"2022-03-23"},{"lineNumber":215,"author":{"gitId":"Jacky142857"},"content":"        @Override","lastModifiedDate":"2022-03-31"},{"lineNumber":216,"author":{"gitId":"Jacky142857"},"content":"        public void sortFilteredSellerList(String comparator, String order) {","lastModifiedDate":"2022-03-31"},{"lineNumber":217,"author":{"gitId":"Jacky142857"},"content":"            throw new AssertionError(\"This method should not be called\");","lastModifiedDate":"2022-03-31"},{"lineNumber":218,"author":{"gitId":"Jacky142857"},"content":"        }","lastModifiedDate":"2022-03-31"},{"lineNumber":219,"author":{"gitId":"Jacky142857"},"content":"","lastModifiedDate":"2022-03-31"},{"lineNumber":220,"author":{"gitId":"WJunHong"},"content":"        // buyer","lastModifiedDate":"2022-03-23"},{"lineNumber":221,"author":{"gitId":"WJunHong"},"content":"","lastModifiedDate":"2022-03-23"},{"lineNumber":222,"author":{"gitId":"Jacky142857"},"content":"        @Override","lastModifiedDate":"2022-03-31"},{"lineNumber":223,"author":{"gitId":"Jacky142857"},"content":"        public void sortFilteredBuyerList(String comparedItem, String order) {","lastModifiedDate":"2022-03-31"},{"lineNumber":224,"author":{"gitId":"Jacky142857"},"content":"            throw new AssertionError(\"This method should not be called\");","lastModifiedDate":"2022-03-31"},{"lineNumber":225,"author":{"gitId":"Jacky142857"},"content":"        }","lastModifiedDate":"2022-03-31"},{"lineNumber":226,"author":{"gitId":"Jacky142857"},"content":"","lastModifiedDate":"2022-03-31"},{"lineNumber":227,"author":{"gitId":"WJunHong"},"content":"        @Override","lastModifiedDate":"2022-03-23"},{"lineNumber":228,"author":{"gitId":"WJunHong"},"content":"        public Path getBuyerAddressBookFilePath() {","lastModifiedDate":"2022-03-23"},{"lineNumber":229,"author":{"gitId":"WJunHong"},"content":"            return null;","lastModifiedDate":"2022-03-23"},{"lineNumber":230,"author":{"gitId":"WJunHong"},"content":"        }","lastModifiedDate":"2022-03-23"},{"lineNumber":231,"author":{"gitId":"WJunHong"},"content":"","lastModifiedDate":"2022-03-23"},{"lineNumber":232,"author":{"gitId":"WJunHong"},"content":"        @Override","lastModifiedDate":"2022-03-23"},{"lineNumber":233,"author":{"gitId":"WJunHong"},"content":"        public void setBuyerAddressBookFilePath(Path buyerAddressBookFilePath) {","lastModifiedDate":"2022-03-23"},{"lineNumber":234,"author":{"gitId":"WJunHong"},"content":"","lastModifiedDate":"2022-03-23"},{"lineNumber":235,"author":{"gitId":"WJunHong"},"content":"        }","lastModifiedDate":"2022-03-23"},{"lineNumber":236,"author":{"gitId":"WJunHong"},"content":"","lastModifiedDate":"2022-03-23"},{"lineNumber":237,"author":{"gitId":"WJunHong"},"content":"        @Override","lastModifiedDate":"2022-03-23"},{"lineNumber":238,"author":{"gitId":"WJunHong"},"content":"        public void setBuyerAddressBook(ReadOnlyBuyerAddressBook buyerAddressBook) {","lastModifiedDate":"2022-03-23"},{"lineNumber":239,"author":{"gitId":"WJunHong"},"content":"","lastModifiedDate":"2022-03-23"},{"lineNumber":240,"author":{"gitId":"WJunHong"},"content":"        }","lastModifiedDate":"2022-03-23"},{"lineNumber":241,"author":{"gitId":"WJunHong"},"content":"","lastModifiedDate":"2022-03-23"},{"lineNumber":242,"author":{"gitId":"WJunHong"},"content":"        @Override","lastModifiedDate":"2022-03-23"},{"lineNumber":243,"author":{"gitId":"WJunHong"},"content":"        public ReadOnlyBuyerAddressBook getBuyerAddressBook() {","lastModifiedDate":"2022-03-23"},{"lineNumber":244,"author":{"gitId":"WJunHong"},"content":"            return null;","lastModifiedDate":"2022-03-23"},{"lineNumber":245,"author":{"gitId":"WJunHong"},"content":"        }","lastModifiedDate":"2022-03-23"},{"lineNumber":246,"author":{"gitId":"WJunHong"},"content":"","lastModifiedDate":"2022-03-23"},{"lineNumber":247,"author":{"gitId":"WJunHong"},"content":"        @Override","lastModifiedDate":"2022-03-23"},{"lineNumber":248,"author":{"gitId":"WJunHong"},"content":"        public void deleteBuyer(Buyer target) {","lastModifiedDate":"2022-03-23"},{"lineNumber":249,"author":{"gitId":"WJunHong"},"content":"","lastModifiedDate":"2022-03-23"},{"lineNumber":250,"author":{"gitId":"WJunHong"},"content":"        }","lastModifiedDate":"2022-03-23"},{"lineNumber":251,"author":{"gitId":"WJunHong"},"content":"","lastModifiedDate":"2022-03-23"},{"lineNumber":252,"author":{"gitId":"WJunHong"},"content":"        @Override","lastModifiedDate":"2022-03-23"},{"lineNumber":253,"author":{"gitId":"WJunHong"},"content":"        public void setBuyer(Buyer target, Buyer editedBuyer) {","lastModifiedDate":"2022-03-23"},{"lineNumber":254,"author":{"gitId":"WJunHong"},"content":"","lastModifiedDate":"2022-03-23"},{"lineNumber":255,"author":{"gitId":"WJunHong"},"content":"        }","lastModifiedDate":"2022-03-23"},{"lineNumber":256,"author":{"gitId":"WJunHong"},"content":"","lastModifiedDate":"2022-03-23"},{"lineNumber":257,"author":{"gitId":"WJunHong"},"content":"        @Override","lastModifiedDate":"2022-03-23"},{"lineNumber":258,"author":{"gitId":"WJunHong"},"content":"        public ObservableList\u003cBuyer\u003e getFilteredBuyerList() {","lastModifiedDate":"2022-03-23"},{"lineNumber":259,"author":{"gitId":"WJunHong"},"content":"            return null;","lastModifiedDate":"2022-03-23"},{"lineNumber":260,"author":{"gitId":"WJunHong"},"content":"        }","lastModifiedDate":"2022-03-23"},{"lineNumber":261,"author":{"gitId":"WJunHong"},"content":"","lastModifiedDate":"2022-03-23"},{"lineNumber":262,"author":{"gitId":"WJunHong"},"content":"        @Override","lastModifiedDate":"2022-03-23"},{"lineNumber":263,"author":{"gitId":"WJunHong"},"content":"        public void updateFilteredBuyerList(Predicate\u003cBuyer\u003e predicate) {","lastModifiedDate":"2022-03-23"},{"lineNumber":264,"author":{"gitId":"WJunHong"},"content":"","lastModifiedDate":"2022-03-23"},{"lineNumber":265,"author":{"gitId":"WJunHong"},"content":"        }","lastModifiedDate":"2022-03-23"},{"lineNumber":266,"author":{"gitId":"cwnm"},"content":"    }","lastModifiedDate":"2022-03-17"},{"lineNumber":267,"author":{"gitId":"cwnm"},"content":"","lastModifiedDate":"2022-03-17"},{"lineNumber":268,"author":{"gitId":"cwnm"},"content":"    /**","lastModifiedDate":"2022-03-17"},{"lineNumber":269,"author":{"gitId":"cwnm"},"content":"     * A Model stub that contains a single seller.","lastModifiedDate":"2022-03-17"},{"lineNumber":270,"author":{"gitId":"cwnm"},"content":"     */","lastModifiedDate":"2022-03-17"},{"lineNumber":271,"author":{"gitId":"cwnm"},"content":"    private static class ModelStubWithSeller extends ModelStub {","lastModifiedDate":"2022-03-17"},{"lineNumber":272,"author":{"gitId":"cwnm"},"content":"        private final Seller seller;","lastModifiedDate":"2022-03-17"},{"lineNumber":273,"author":{"gitId":"cwnm"},"content":"","lastModifiedDate":"2022-03-17"},{"lineNumber":274,"author":{"gitId":"cwnm"},"content":"        ModelStubWithSeller(Seller seller) {","lastModifiedDate":"2022-03-17"},{"lineNumber":275,"author":{"gitId":"cwnm"},"content":"            requireNonNull(seller);","lastModifiedDate":"2022-03-17"},{"lineNumber":276,"author":{"gitId":"cwnm"},"content":"            this.seller \u003d seller;","lastModifiedDate":"2022-03-17"},{"lineNumber":277,"author":{"gitId":"cwnm"},"content":"        }","lastModifiedDate":"2022-03-17"},{"lineNumber":278,"author":{"gitId":"cwnm"},"content":"","lastModifiedDate":"2022-03-17"},{"lineNumber":279,"author":{"gitId":"cwnm"},"content":"        @Override","lastModifiedDate":"2022-03-17"},{"lineNumber":280,"author":{"gitId":"cwnm"},"content":"        public boolean hasSeller(Seller seller) {","lastModifiedDate":"2022-03-17"},{"lineNumber":281,"author":{"gitId":"cwnm"},"content":"            requireNonNull(seller);","lastModifiedDate":"2022-03-17"},{"lineNumber":282,"author":{"gitId":"cwnm"},"content":"            return this.seller.isSameclient(seller);","lastModifiedDate":"2022-03-17"},{"lineNumber":283,"author":{"gitId":"cwnm"},"content":"        }","lastModifiedDate":"2022-03-17"},{"lineNumber":284,"author":{"gitId":"cwnm"},"content":"    }","lastModifiedDate":"2022-03-17"},{"lineNumber":285,"author":{"gitId":"cwnm"},"content":"","lastModifiedDate":"2022-03-17"},{"lineNumber":286,"author":{"gitId":"cwnm"},"content":"    /**","lastModifiedDate":"2022-03-17"},{"lineNumber":287,"author":{"gitId":"cwnm"},"content":"     * A Model stub that always accept the client being added.","lastModifiedDate":"2022-03-17"},{"lineNumber":288,"author":{"gitId":"cwnm"},"content":"     */","lastModifiedDate":"2022-03-17"},{"lineNumber":289,"author":{"gitId":"cwnm"},"content":"    private static class ModelStubAcceptingSellerAdded extends ModelStub {","lastModifiedDate":"2022-03-17"},{"lineNumber":290,"author":{"gitId":"cwnm"},"content":"        final ArrayList\u003cClient\u003e clientsAdded \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2022-03-17"},{"lineNumber":291,"author":{"gitId":"cwnm"},"content":"","lastModifiedDate":"2022-03-17"},{"lineNumber":292,"author":{"gitId":"cwnm"},"content":"        @Override","lastModifiedDate":"2022-03-17"},{"lineNumber":293,"author":{"gitId":"cwnm"},"content":"        public boolean hasSeller(Seller seller) {","lastModifiedDate":"2022-03-17"},{"lineNumber":294,"author":{"gitId":"cwnm"},"content":"            requireNonNull(seller);","lastModifiedDate":"2022-03-17"},{"lineNumber":295,"author":{"gitId":"cwnm"},"content":"            return clientsAdded.stream().anyMatch(seller::isSameclient);","lastModifiedDate":"2022-03-17"},{"lineNumber":296,"author":{"gitId":"cwnm"},"content":"        }","lastModifiedDate":"2022-03-17"},{"lineNumber":297,"author":{"gitId":"cwnm"},"content":"","lastModifiedDate":"2022-03-17"},{"lineNumber":298,"author":{"gitId":"cwnm"},"content":"        @Override","lastModifiedDate":"2022-03-17"},{"lineNumber":299,"author":{"gitId":"cwnm"},"content":"        public void addSeller(Seller seller) {","lastModifiedDate":"2022-03-17"},{"lineNumber":300,"author":{"gitId":"cwnm"},"content":"            requireNonNull(seller);","lastModifiedDate":"2022-03-17"},{"lineNumber":301,"author":{"gitId":"cwnm"},"content":"            clientsAdded.add(seller);","lastModifiedDate":"2022-03-17"},{"lineNumber":302,"author":{"gitId":"cwnm"},"content":"        }","lastModifiedDate":"2022-03-17"},{"lineNumber":303,"author":{"gitId":"cwnm"},"content":"","lastModifiedDate":"2022-03-17"},{"lineNumber":304,"author":{"gitId":"cwnm"},"content":"        @Override","lastModifiedDate":"2022-03-17"},{"lineNumber":305,"author":{"gitId":"cwnm"},"content":"        public ReadOnlyAddressBook getAddressBook() {","lastModifiedDate":"2022-03-17"},{"lineNumber":306,"author":{"gitId":"cwnm"},"content":"            return new AddressBook();","lastModifiedDate":"2022-03-17"},{"lineNumber":307,"author":{"gitId":"cwnm"},"content":"        }","lastModifiedDate":"2022-03-17"},{"lineNumber":308,"author":{"gitId":"cwnm"},"content":"    }","lastModifiedDate":"2022-03-17"},{"lineNumber":309,"author":{"gitId":"cwnm"},"content":"","lastModifiedDate":"2022-03-17"},{"lineNumber":310,"author":{"gitId":"cwnm"},"content":"}","lastModifiedDate":"2022-03-17"}],"authorContributionMap":{"WJunHong":43,"Jacky142857":50,"cwnm":217}},{"path":"src/test/java/seedu/address/logic/commands/BuyerCommandTestUtil.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"chuashihong"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2022-04-07"},{"lineNumber":2,"author":{"gitId":"chuashihong"},"content":"","lastModifiedDate":"2022-04-07"},{"lineNumber":3,"author":{"gitId":"chuashihong"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2022-04-07"},{"lineNumber":4,"author":{"gitId":"chuashihong"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2022-04-07"},{"lineNumber":5,"author":{"gitId":"chuashihong"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_NAME;","lastModifiedDate":"2022-04-07"},{"lineNumber":6,"author":{"gitId":"chuashihong"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_PHONE;","lastModifiedDate":"2022-04-07"},{"lineNumber":7,"author":{"gitId":"chuashihong"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_TAG;","lastModifiedDate":"2022-04-07"},{"lineNumber":8,"author":{"gitId":"chuashihong"},"content":"import static seedu.address.testutil.Assert.assertThrows;","lastModifiedDate":"2022-04-07"},{"lineNumber":9,"author":{"gitId":"chuashihong"},"content":"","lastModifiedDate":"2022-04-07"},{"lineNumber":10,"author":{"gitId":"chuashihong"},"content":"import java.util.ArrayList;","lastModifiedDate":"2022-04-07"},{"lineNumber":11,"author":{"gitId":"chuashihong"},"content":"import java.util.Arrays;","lastModifiedDate":"2022-04-07"},{"lineNumber":12,"author":{"gitId":"chuashihong"},"content":"import java.util.List;","lastModifiedDate":"2022-04-07"},{"lineNumber":13,"author":{"gitId":"chuashihong"},"content":"","lastModifiedDate":"2022-04-07"},{"lineNumber":14,"author":{"gitId":"chuashihong"},"content":"import seedu.address.commons.core.index.Index;","lastModifiedDate":"2022-04-07"},{"lineNumber":15,"author":{"gitId":"chuashihong"},"content":"import seedu.address.logic.commands.exceptions.CommandException;","lastModifiedDate":"2022-04-07"},{"lineNumber":16,"author":{"gitId":"chuashihong"},"content":"import seedu.address.model.AddressBook;","lastModifiedDate":"2022-04-07"},{"lineNumber":17,"author":{"gitId":"chuashihong"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2022-04-07"},{"lineNumber":18,"author":{"gitId":"chuashihong"},"content":"import seedu.address.model.buyer.Buyer;","lastModifiedDate":"2022-04-07"},{"lineNumber":19,"author":{"gitId":"chuashihong"},"content":"import seedu.address.model.buyer.BuyerNameContainsKeywordsPredicate;","lastModifiedDate":"2022-04-07"},{"lineNumber":20,"author":{"gitId":"chuashihong"},"content":"import seedu.address.model.client.Client;","lastModifiedDate":"2022-04-07"},{"lineNumber":21,"author":{"gitId":"chuashihong"},"content":"import seedu.address.model.client.NameContainsKeywordsPredicate;","lastModifiedDate":"2022-04-07"},{"lineNumber":22,"author":{"gitId":"chuashihong"},"content":"import seedu.address.model.property.House;","lastModifiedDate":"2022-04-07"},{"lineNumber":23,"author":{"gitId":"chuashihong"},"content":"import seedu.address.model.property.HouseType;","lastModifiedDate":"2022-04-07"},{"lineNumber":24,"author":{"gitId":"chuashihong"},"content":"import seedu.address.model.property.Location;","lastModifiedDate":"2022-04-07"},{"lineNumber":25,"author":{"gitId":"chuashihong"},"content":"import seedu.address.model.property.PriceRange;","lastModifiedDate":"2022-04-07"},{"lineNumber":26,"author":{"gitId":"chuashihong"},"content":"import seedu.address.model.property.PropertyToBuy;","lastModifiedDate":"2022-04-07"},{"lineNumber":27,"author":{"gitId":"chuashihong"},"content":"import seedu.address.model.seller.Seller;","lastModifiedDate":"2022-04-07"},{"lineNumber":28,"author":{"gitId":"chuashihong"},"content":"import seedu.address.model.seller.SellerNameContainsKeywordsPredicate;","lastModifiedDate":"2022-04-07"},{"lineNumber":29,"author":{"gitId":"chuashihong"},"content":"import seedu.address.testutil.EditBuyerDescriptorBuilder;","lastModifiedDate":"2022-04-07"},{"lineNumber":30,"author":{"gitId":"chuashihong"},"content":"","lastModifiedDate":"2022-04-07"},{"lineNumber":31,"author":{"gitId":"chuashihong"},"content":"/**","lastModifiedDate":"2022-04-07"},{"lineNumber":32,"author":{"gitId":"chuashihong"},"content":" * Contains helper methods for testing commands.","lastModifiedDate":"2022-04-07"},{"lineNumber":33,"author":{"gitId":"chuashihong"},"content":" */","lastModifiedDate":"2022-04-07"},{"lineNumber":34,"author":{"gitId":"chuashihong"},"content":"public class BuyerCommandTestUtil {","lastModifiedDate":"2022-04-07"},{"lineNumber":35,"author":{"gitId":"chuashihong"},"content":"","lastModifiedDate":"2022-04-07"},{"lineNumber":36,"author":{"gitId":"chuashihong"},"content":"    public static final String VALID_NAME_AMY \u003d \"Amy Bee\";","lastModifiedDate":"2022-04-07"},{"lineNumber":37,"author":{"gitId":"chuashihong"},"content":"    public static final String VALID_NAME_BOB \u003d \"Bob Choo\";","lastModifiedDate":"2022-04-07"},{"lineNumber":38,"author":{"gitId":"chuashihong"},"content":"    public static final String VALID_NAME_CHAD \u003d \"Chad chadson\";","lastModifiedDate":"2022-04-07"},{"lineNumber":39,"author":{"gitId":"WJunHong"},"content":"    public static final String VALID_NAME_WEIRD \u003d \"123BBBaln123  23asdsd\";","lastModifiedDate":"2022-04-07"},{"lineNumber":40,"author":{"gitId":"chuashihong"},"content":"    public static final String VALID_PHONE_AMY \u003d \"11111111\";","lastModifiedDate":"2022-04-07"},{"lineNumber":41,"author":{"gitId":"chuashihong"},"content":"    public static final String VALID_PHONE_BOB \u003d \"22222222\";","lastModifiedDate":"2022-04-07"},{"lineNumber":42,"author":{"gitId":"chuashihong"},"content":"    public static final String VALID_PHONE_CHAD \u003d \"33333333\";","lastModifiedDate":"2022-04-07"},{"lineNumber":43,"author":{"gitId":"WJunHong"},"content":"    public static final String VALID_PHONE_WEIRD \u003d \"00000000\";","lastModifiedDate":"2022-04-07"},{"lineNumber":44,"author":{"gitId":"chuashihong"},"content":"    public static final PropertyToBuy VALID_PROPERTY_BUY_CHAD \u003d new PropertyToBuy(new House(HouseType.HDB_FLAT,","lastModifiedDate":"2022-04-07"},{"lineNumber":45,"author":{"gitId":"chuashihong"},"content":"            new Location(\"jurong\")), new PriceRange(1000, 2000));","lastModifiedDate":"2022-04-07"},{"lineNumber":46,"author":{"gitId":"chuashihong"},"content":"    public static final String VALID_TAG_HUSBAND \u003d \"husband\";","lastModifiedDate":"2022-04-07"},{"lineNumber":47,"author":{"gitId":"chuashihong"},"content":"    public static final String VALID_TAG_FRIEND \u003d \"friend\";","lastModifiedDate":"2022-04-07"},{"lineNumber":48,"author":{"gitId":"chuashihong"},"content":"    public static final String VALID_REMARK_AMY \u003d \"A remark\";","lastModifiedDate":"2022-04-07"},{"lineNumber":49,"author":{"gitId":"chuashihong"},"content":"    public static final String VALID_REMARK_BOB \u003d \"B remark\";","lastModifiedDate":"2022-04-07"},{"lineNumber":50,"author":{"gitId":"chuashihong"},"content":"    public static final String VALID_APPOINTMENT_AMY \u003d \"2022-09-08-12-00\";","lastModifiedDate":"2022-04-07"},{"lineNumber":51,"author":{"gitId":"chuashihong"},"content":"    public static final String VALID_APPOINTMENT_BOB \u003d \"2022-09-03-09-10\";","lastModifiedDate":"2022-04-07"},{"lineNumber":52,"author":{"gitId":"chuashihong"},"content":"    public static final String VALID_APPOINTMENT_CHAD \u003d \"2023-09-03-09-10\";","lastModifiedDate":"2022-04-07"},{"lineNumber":53,"author":{"gitId":"chuashihong"},"content":"","lastModifiedDate":"2022-04-07"},{"lineNumber":54,"author":{"gitId":"chuashihong"},"content":"","lastModifiedDate":"2022-04-07"},{"lineNumber":55,"author":{"gitId":"chuashihong"},"content":"    public static final String NAME_DESC_AMY \u003d \" \" + PREFIX_NAME + VALID_NAME_AMY;","lastModifiedDate":"2022-04-07"},{"lineNumber":56,"author":{"gitId":"chuashihong"},"content":"    public static final String NAME_DESC_BOB \u003d \" \" + PREFIX_NAME + VALID_NAME_BOB;","lastModifiedDate":"2022-04-07"},{"lineNumber":57,"author":{"gitId":"WJunHong"},"content":"    public static final String NAME_DESC_WEIRD \u003d \" \" + PREFIX_NAME + VALID_NAME_WEIRD;","lastModifiedDate":"2022-04-07"},{"lineNumber":58,"author":{"gitId":"chuashihong"},"content":"    public static final String PHONE_DESC_AMY \u003d \" \" + PREFIX_PHONE + VALID_PHONE_AMY;","lastModifiedDate":"2022-04-07"},{"lineNumber":59,"author":{"gitId":"chuashihong"},"content":"    public static final String PHONE_DESC_BOB \u003d \" \" + PREFIX_PHONE + VALID_PHONE_BOB;","lastModifiedDate":"2022-04-07"},{"lineNumber":60,"author":{"gitId":"WJunHong"},"content":"    public static final String PHONE_DESC_WEIRD \u003d \" \" + PREFIX_PHONE + VALID_PHONE_WEIRD;","lastModifiedDate":"2022-04-07"},{"lineNumber":61,"author":{"gitId":"chuashihong"},"content":"    public static final String TAG_DESC_FRIEND \u003d \" \" + PREFIX_TAG + VALID_TAG_FRIEND;","lastModifiedDate":"2022-04-07"},{"lineNumber":62,"author":{"gitId":"chuashihong"},"content":"    public static final String TAG_DESC_HUSBAND \u003d \" \" + PREFIX_TAG + VALID_TAG_HUSBAND;","lastModifiedDate":"2022-04-07"},{"lineNumber":63,"author":{"gitId":"chuashihong"},"content":"","lastModifiedDate":"2022-04-07"},{"lineNumber":64,"author":{"gitId":"chuashihong"},"content":"    public static final String INVALID_NAME_DESC \u003d \" \" + PREFIX_NAME + \"James\u0026\"; // \u0027\u0026\u0027 not allowed in names","lastModifiedDate":"2022-04-07"},{"lineNumber":65,"author":{"gitId":"WJunHong"},"content":"    public static final String INVALID_NAME_DESC_2 \u003d \" \" + PREFIX_NAME + \"James pr/1,2\";","lastModifiedDate":"2022-04-07"},{"lineNumber":66,"author":{"gitId":"WJunHong"},"content":"    public static final String INVALID_NAME_DESC_3 \u003d \" \" + PREFIX_NAME + \"Jamesn/David\";","lastModifiedDate":"2022-04-07"},{"lineNumber":67,"author":{"gitId":"WJunHong"},"content":"    public static final String INVALID_NAME_DESC_4 \u003d \" \" + PREFIX_NAME + \"Jamesp/90872\";","lastModifiedDate":"2022-04-07"},{"lineNumber":68,"author":{"gitId":"chuashihong"},"content":"    public static final String INVALID_PHONE_DESC \u003d \" \" + PREFIX_PHONE + \"911a\"; // \u0027a\u0027 not allowed in phones","lastModifiedDate":"2022-04-07"},{"lineNumber":69,"author":{"gitId":"WJunHong"},"content":"    public static final String INVALID_PHONE_DESC_2 \u003d \" \" + PREFIX_PHONE + \"911 09\"; // spaces not allowed in phones","lastModifiedDate":"2022-04-07"},{"lineNumber":70,"author":{"gitId":"WJunHong"},"content":"    public static final String INVALID_PHONE_DESC_3 \u003d \" \" + PREFIX_PHONE + \"91\"; // too short phone number","lastModifiedDate":"2022-04-07"},{"lineNumber":71,"author":{"gitId":"chuashihong"},"content":"    public static final String INVALID_TAG_DESC \u003d \" \" + PREFIX_TAG + \"hubby*\"; // \u0027*\u0027 not allowed in tags","lastModifiedDate":"2022-04-07"},{"lineNumber":72,"author":{"gitId":"WJunHong"},"content":"    public static final String INVALID_TAG_DESC_2 \u003d \" \" + PREFIX_TAG + \"hubby 123\"; // \u0027*\u0027 not allowed in tags","lastModifiedDate":"2022-04-07"},{"lineNumber":73,"author":{"gitId":"chuashihong"},"content":"","lastModifiedDate":"2022-04-07"},{"lineNumber":74,"author":{"gitId":"chuashihong"},"content":"    public static final String PREAMBLE_WHITESPACE \u003d \"\\t  \\r  \\n\";","lastModifiedDate":"2022-04-07"},{"lineNumber":75,"author":{"gitId":"chuashihong"},"content":"    public static final String PREAMBLE_NON_EMPTY \u003d \"NonEmptyPreamble\";","lastModifiedDate":"2022-04-07"},{"lineNumber":76,"author":{"gitId":"chuashihong"},"content":"","lastModifiedDate":"2022-04-07"},{"lineNumber":77,"author":{"gitId":"chuashihong"},"content":"    public static final EditBuyerCommand.EditBuyerDescriptor DESC_AMY;","lastModifiedDate":"2022-04-07"},{"lineNumber":78,"author":{"gitId":"chuashihong"},"content":"    public static final EditBuyerCommand.EditBuyerDescriptor DESC_BOB;","lastModifiedDate":"2022-04-07"},{"lineNumber":79,"author":{"gitId":"chuashihong"},"content":"","lastModifiedDate":"2022-04-07"},{"lineNumber":80,"author":{"gitId":"chuashihong"},"content":"    static {","lastModifiedDate":"2022-04-07"},{"lineNumber":81,"author":{"gitId":"chuashihong"},"content":"        DESC_AMY \u003d new EditBuyerDescriptorBuilder().withName(VALID_NAME_AMY)","lastModifiedDate":"2022-04-07"},{"lineNumber":82,"author":{"gitId":"chuashihong"},"content":"                .withPhone(VALID_PHONE_AMY).withTags(VALID_TAG_FRIEND)","lastModifiedDate":"2022-04-07"},{"lineNumber":83,"author":{"gitId":"chuashihong"},"content":"                .withAppointment(VALID_APPOINTMENT_AMY).build();","lastModifiedDate":"2022-04-07"},{"lineNumber":84,"author":{"gitId":"chuashihong"},"content":"        DESC_BOB \u003d new EditBuyerDescriptorBuilder().withName(VALID_NAME_BOB)","lastModifiedDate":"2022-04-07"},{"lineNumber":85,"author":{"gitId":"chuashihong"},"content":"                .withPhone(VALID_PHONE_BOB).withTags(VALID_TAG_HUSBAND, VALID_TAG_FRIEND)","lastModifiedDate":"2022-04-07"},{"lineNumber":86,"author":{"gitId":"chuashihong"},"content":"                .withAppointment(VALID_APPOINTMENT_BOB).build();","lastModifiedDate":"2022-04-07"},{"lineNumber":87,"author":{"gitId":"chuashihong"},"content":"    }","lastModifiedDate":"2022-04-07"},{"lineNumber":88,"author":{"gitId":"chuashihong"},"content":"","lastModifiedDate":"2022-04-07"},{"lineNumber":89,"author":{"gitId":"chuashihong"},"content":"    /**","lastModifiedDate":"2022-04-07"},{"lineNumber":90,"author":{"gitId":"chuashihong"},"content":"     * Executes the given {@code command}, confirms that \u003cbr\u003e","lastModifiedDate":"2022-04-07"},{"lineNumber":91,"author":{"gitId":"chuashihong"},"content":"     * - the returned {@link CommandResult} matches {@code expectedCommandResult} \u003cbr\u003e","lastModifiedDate":"2022-04-07"},{"lineNumber":92,"author":{"gitId":"chuashihong"},"content":"     * - the {@code actualModel} matches {@code expectedModel}","lastModifiedDate":"2022-04-07"},{"lineNumber":93,"author":{"gitId":"chuashihong"},"content":"     */","lastModifiedDate":"2022-04-07"},{"lineNumber":94,"author":{"gitId":"chuashihong"},"content":"    public static void assertCommandSuccess(Command command, Model actualModel, CommandResult expectedCommandResult,","lastModifiedDate":"2022-04-07"},{"lineNumber":95,"author":{"gitId":"chuashihong"},"content":"            Model expectedModel) {","lastModifiedDate":"2022-04-07"},{"lineNumber":96,"author":{"gitId":"chuashihong"},"content":"        try {","lastModifiedDate":"2022-04-07"},{"lineNumber":97,"author":{"gitId":"chuashihong"},"content":"            CommandResult result \u003d command.execute(actualModel);","lastModifiedDate":"2022-04-07"},{"lineNumber":98,"author":{"gitId":"chuashihong"},"content":"            assertEquals(expectedCommandResult, result);","lastModifiedDate":"2022-04-07"},{"lineNumber":99,"author":{"gitId":"chuashihong"},"content":"            assertEquals(expectedModel, actualModel);","lastModifiedDate":"2022-04-07"},{"lineNumber":100,"author":{"gitId":"chuashihong"},"content":"        } catch (CommandException ce) {","lastModifiedDate":"2022-04-07"},{"lineNumber":101,"author":{"gitId":"chuashihong"},"content":"            throw new AssertionError(\"Execution of command should not fail.\", ce);","lastModifiedDate":"2022-04-07"},{"lineNumber":102,"author":{"gitId":"chuashihong"},"content":"        }","lastModifiedDate":"2022-04-07"},{"lineNumber":103,"author":{"gitId":"chuashihong"},"content":"    }","lastModifiedDate":"2022-04-07"},{"lineNumber":104,"author":{"gitId":"chuashihong"},"content":"","lastModifiedDate":"2022-04-07"},{"lineNumber":105,"author":{"gitId":"chuashihong"},"content":"    /**","lastModifiedDate":"2022-04-07"},{"lineNumber":106,"author":{"gitId":"chuashihong"},"content":"     * Convenience wrapper to {@link #assertCommandSuccess(Command, Model, CommandResult, Model)}","lastModifiedDate":"2022-04-07"},{"lineNumber":107,"author":{"gitId":"chuashihong"},"content":"     * that takes a string {@code expectedMessage}.","lastModifiedDate":"2022-04-07"},{"lineNumber":108,"author":{"gitId":"chuashihong"},"content":"     */","lastModifiedDate":"2022-04-07"},{"lineNumber":109,"author":{"gitId":"chuashihong"},"content":"    public static void assertCommandSuccess(Command command, Model actualModel, String expectedMessage,","lastModifiedDate":"2022-04-07"},{"lineNumber":110,"author":{"gitId":"chuashihong"},"content":"            Model expectedModel) {","lastModifiedDate":"2022-04-07"},{"lineNumber":111,"author":{"gitId":"chuashihong"},"content":"        CommandResult expectedCommandResult \u003d new CommandResult(expectedMessage);","lastModifiedDate":"2022-04-07"},{"lineNumber":112,"author":{"gitId":"chuashihong"},"content":"        assertCommandSuccess(command, actualModel, expectedCommandResult, expectedModel);","lastModifiedDate":"2022-04-07"},{"lineNumber":113,"author":{"gitId":"chuashihong"},"content":"    }","lastModifiedDate":"2022-04-07"},{"lineNumber":114,"author":{"gitId":"chuashihong"},"content":"","lastModifiedDate":"2022-04-07"},{"lineNumber":115,"author":{"gitId":"chuashihong"},"content":"    /**","lastModifiedDate":"2022-04-07"},{"lineNumber":116,"author":{"gitId":"chuashihong"},"content":"     * Executes the given {@code command}, confirms that \u003cbr\u003e","lastModifiedDate":"2022-04-07"},{"lineNumber":117,"author":{"gitId":"chuashihong"},"content":"     * - a {@code CommandException} is thrown \u003cbr\u003e","lastModifiedDate":"2022-04-07"},{"lineNumber":118,"author":{"gitId":"chuashihong"},"content":"     * - the CommandException message matches {@code expectedMessage} \u003cbr\u003e","lastModifiedDate":"2022-04-07"},{"lineNumber":119,"author":{"gitId":"chuashihong"},"content":"     * - the address book, filtered client list and selected client in {@code actualModel} remain unchanged","lastModifiedDate":"2022-04-07"},{"lineNumber":120,"author":{"gitId":"chuashihong"},"content":"     */","lastModifiedDate":"2022-04-07"},{"lineNumber":121,"author":{"gitId":"chuashihong"},"content":"    public static void assertCommandFailure(Command command, Model actualModel, String expectedMessage) {","lastModifiedDate":"2022-04-07"},{"lineNumber":122,"author":{"gitId":"chuashihong"},"content":"        // we are unable to defensively copy the model for comparison later, so we can","lastModifiedDate":"2022-04-07"},{"lineNumber":123,"author":{"gitId":"chuashihong"},"content":"        // only do so by copying its components.","lastModifiedDate":"2022-04-07"},{"lineNumber":124,"author":{"gitId":"chuashihong"},"content":"        AddressBook expectedAddressBook \u003d new AddressBook(actualModel.getAddressBook());","lastModifiedDate":"2022-04-07"},{"lineNumber":125,"author":{"gitId":"chuashihong"},"content":"        List\u003cClient\u003e expectedFilteredList \u003d new ArrayList\u003c\u003e(actualModel.getFilteredClientList());","lastModifiedDate":"2022-04-07"},{"lineNumber":126,"author":{"gitId":"chuashihong"},"content":"","lastModifiedDate":"2022-04-07"},{"lineNumber":127,"author":{"gitId":"chuashihong"},"content":"        assertThrows(CommandException.class, expectedMessage, () -\u003e command.execute(actualModel));","lastModifiedDate":"2022-04-07"},{"lineNumber":128,"author":{"gitId":"chuashihong"},"content":"        assertEquals(expectedAddressBook, actualModel.getAddressBook());","lastModifiedDate":"2022-04-07"},{"lineNumber":129,"author":{"gitId":"chuashihong"},"content":"        assertEquals(expectedFilteredList, actualModel.getFilteredClientList());","lastModifiedDate":"2022-04-07"},{"lineNumber":130,"author":{"gitId":"chuashihong"},"content":"    }","lastModifiedDate":"2022-04-07"},{"lineNumber":131,"author":{"gitId":"chuashihong"},"content":"","lastModifiedDate":"2022-04-07"},{"lineNumber":132,"author":{"gitId":"chuashihong"},"content":"    /**","lastModifiedDate":"2022-04-07"},{"lineNumber":133,"author":{"gitId":"chuashihong"},"content":"     * Executes the given {@code command}, confirms that \u003cbr\u003e","lastModifiedDate":"2022-04-07"},{"lineNumber":134,"author":{"gitId":"chuashihong"},"content":"     * - a {@code CommandException} is thrown \u003cbr\u003e","lastModifiedDate":"2022-04-07"},{"lineNumber":135,"author":{"gitId":"chuashihong"},"content":"     * - the CommandException message matches {@code expectedMessage} \u003cbr\u003e","lastModifiedDate":"2022-04-07"},{"lineNumber":136,"author":{"gitId":"chuashihong"},"content":"     * - the address book, filtered seller list and selected seller in {@code actualModel} remain unchanged","lastModifiedDate":"2022-04-07"},{"lineNumber":137,"author":{"gitId":"chuashihong"},"content":"     */","lastModifiedDate":"2022-04-07"},{"lineNumber":138,"author":{"gitId":"chuashihong"},"content":"    public static void assertSellerCommandFailure(Command command, Model actualModel, String expectedMessage) {","lastModifiedDate":"2022-04-07"},{"lineNumber":139,"author":{"gitId":"chuashihong"},"content":"        // we are unable to defensively copy the model for comparison later, so we can","lastModifiedDate":"2022-04-07"},{"lineNumber":140,"author":{"gitId":"chuashihong"},"content":"        // only do so by copying its components.","lastModifiedDate":"2022-04-07"},{"lineNumber":141,"author":{"gitId":"chuashihong"},"content":"        AddressBook expectedAddressBook \u003d new AddressBook(actualModel.getAddressBook());","lastModifiedDate":"2022-04-07"},{"lineNumber":142,"author":{"gitId":"chuashihong"},"content":"        List\u003cSeller\u003e expectedFilteredSellerList \u003d new ArrayList\u003c\u003e(actualModel.getFilteredSellerList());","lastModifiedDate":"2022-04-07"},{"lineNumber":143,"author":{"gitId":"chuashihong"},"content":"","lastModifiedDate":"2022-04-07"},{"lineNumber":144,"author":{"gitId":"chuashihong"},"content":"        assertThrows(CommandException.class, expectedMessage, () -\u003e command.execute(actualModel));","lastModifiedDate":"2022-04-07"},{"lineNumber":145,"author":{"gitId":"chuashihong"},"content":"        assertEquals(expectedAddressBook, actualModel.getAddressBook());","lastModifiedDate":"2022-04-07"},{"lineNumber":146,"author":{"gitId":"chuashihong"},"content":"        assertEquals(expectedFilteredSellerList, actualModel.getFilteredSellerList());","lastModifiedDate":"2022-04-07"},{"lineNumber":147,"author":{"gitId":"chuashihong"},"content":"    }","lastModifiedDate":"2022-04-07"},{"lineNumber":148,"author":{"gitId":"chuashihong"},"content":"","lastModifiedDate":"2022-04-07"},{"lineNumber":149,"author":{"gitId":"chuashihong"},"content":"    /**","lastModifiedDate":"2022-04-07"},{"lineNumber":150,"author":{"gitId":"chuashihong"},"content":"     * Updates {@code model}\u0027s filtered list to show only the client at the given {@code targetIndex} in the","lastModifiedDate":"2022-04-07"},{"lineNumber":151,"author":{"gitId":"chuashihong"},"content":"     * {@code model}\u0027s address book.","lastModifiedDate":"2022-04-07"},{"lineNumber":152,"author":{"gitId":"chuashihong"},"content":"     */","lastModifiedDate":"2022-04-07"},{"lineNumber":153,"author":{"gitId":"chuashihong"},"content":"    public static void showClientAtIndex(Model model, Index targetIndex) {","lastModifiedDate":"2022-04-07"},{"lineNumber":154,"author":{"gitId":"chuashihong"},"content":"        assertTrue(targetIndex.getZeroBased() \u003c model.getFilteredClientList().size());","lastModifiedDate":"2022-04-07"},{"lineNumber":155,"author":{"gitId":"chuashihong"},"content":"","lastModifiedDate":"2022-04-07"},{"lineNumber":156,"author":{"gitId":"chuashihong"},"content":"        Client client \u003d model.getFilteredClientList().get(targetIndex.getZeroBased());","lastModifiedDate":"2022-04-07"},{"lineNumber":157,"author":{"gitId":"chuashihong"},"content":"        final String[] splitName \u003d client.getName().fullName.split(\"\\\\s+\");","lastModifiedDate":"2022-04-07"},{"lineNumber":158,"author":{"gitId":"chuashihong"},"content":"        model.updateFilteredClientList(new NameContainsKeywordsPredicate(Arrays.asList(splitName[0])));","lastModifiedDate":"2022-04-07"},{"lineNumber":159,"author":{"gitId":"chuashihong"},"content":"","lastModifiedDate":"2022-04-07"},{"lineNumber":160,"author":{"gitId":"chuashihong"},"content":"        assertEquals(1, model.getFilteredClientList().size());","lastModifiedDate":"2022-04-07"},{"lineNumber":161,"author":{"gitId":"chuashihong"},"content":"    }","lastModifiedDate":"2022-04-07"},{"lineNumber":162,"author":{"gitId":"chuashihong"},"content":"","lastModifiedDate":"2022-04-07"},{"lineNumber":163,"author":{"gitId":"chuashihong"},"content":"    /**","lastModifiedDate":"2022-04-07"},{"lineNumber":164,"author":{"gitId":"chuashihong"},"content":"     * Updates {@code model}\u0027s filtered list to show only the buyer at the given {@code targetIndex} in the","lastModifiedDate":"2022-04-07"},{"lineNumber":165,"author":{"gitId":"chuashihong"},"content":"     * {@code model}\u0027s address book.","lastModifiedDate":"2022-04-07"},{"lineNumber":166,"author":{"gitId":"chuashihong"},"content":"     */","lastModifiedDate":"2022-04-07"},{"lineNumber":167,"author":{"gitId":"chuashihong"},"content":"    public static void showBuyerAtIndex(Model model, Index targetIndex) {","lastModifiedDate":"2022-04-07"},{"lineNumber":168,"author":{"gitId":"chuashihong"},"content":"        assertTrue(targetIndex.getZeroBased() \u003c model.getFilteredBuyerList().size());","lastModifiedDate":"2022-04-07"},{"lineNumber":169,"author":{"gitId":"chuashihong"},"content":"","lastModifiedDate":"2022-04-07"},{"lineNumber":170,"author":{"gitId":"chuashihong"},"content":"        Buyer buyer \u003d model.getFilteredBuyerList().get(targetIndex.getZeroBased());","lastModifiedDate":"2022-04-07"},{"lineNumber":171,"author":{"gitId":"chuashihong"},"content":"        final String[] splitName \u003d buyer.getName().fullName.split(\"\\\\s+\");","lastModifiedDate":"2022-04-07"},{"lineNumber":172,"author":{"gitId":"chuashihong"},"content":"        model.updateFilteredBuyerList(new BuyerNameContainsKeywordsPredicate(Arrays.asList(splitName[0])));","lastModifiedDate":"2022-04-07"},{"lineNumber":173,"author":{"gitId":"chuashihong"},"content":"","lastModifiedDate":"2022-04-07"},{"lineNumber":174,"author":{"gitId":"chuashihong"},"content":"        assertEquals(1, model.getFilteredBuyerList().size());","lastModifiedDate":"2022-04-07"},{"lineNumber":175,"author":{"gitId":"chuashihong"},"content":"    }","lastModifiedDate":"2022-04-07"},{"lineNumber":176,"author":{"gitId":"chuashihong"},"content":"","lastModifiedDate":"2022-04-07"},{"lineNumber":177,"author":{"gitId":"chuashihong"},"content":"    /**","lastModifiedDate":"2022-04-07"},{"lineNumber":178,"author":{"gitId":"chuashihong"},"content":"     * Updates {@code model}\u0027s filtered list to show only the seller at the given {@code targetIndex} in the","lastModifiedDate":"2022-04-07"},{"lineNumber":179,"author":{"gitId":"chuashihong"},"content":"     * {@code model}\u0027s address book.","lastModifiedDate":"2022-04-07"},{"lineNumber":180,"author":{"gitId":"chuashihong"},"content":"     */","lastModifiedDate":"2022-04-07"},{"lineNumber":181,"author":{"gitId":"chuashihong"},"content":"    public static void showSellerAtIndex(Model model, Index targetIndex) {","lastModifiedDate":"2022-04-07"},{"lineNumber":182,"author":{"gitId":"chuashihong"},"content":"        assertTrue(targetIndex.getZeroBased() \u003c model.getFilteredSellerList().size());","lastModifiedDate":"2022-04-07"},{"lineNumber":183,"author":{"gitId":"chuashihong"},"content":"","lastModifiedDate":"2022-04-07"},{"lineNumber":184,"author":{"gitId":"chuashihong"},"content":"        Seller seller \u003d model.getFilteredSellerList().get(targetIndex.getZeroBased());","lastModifiedDate":"2022-04-07"},{"lineNumber":185,"author":{"gitId":"chuashihong"},"content":"        final String[] splitName \u003d seller.getName().fullName.split(\"\\\\s+\");","lastModifiedDate":"2022-04-07"},{"lineNumber":186,"author":{"gitId":"chuashihong"},"content":"        model.updateFilteredSellerList(new SellerNameContainsKeywordsPredicate(Arrays.asList(splitName[0])));","lastModifiedDate":"2022-04-07"},{"lineNumber":187,"author":{"gitId":"chuashihong"},"content":"","lastModifiedDate":"2022-04-07"},{"lineNumber":188,"author":{"gitId":"chuashihong"},"content":"        assertEquals(1, model.getFilteredSellerList().size());","lastModifiedDate":"2022-04-07"},{"lineNumber":189,"author":{"gitId":"chuashihong"},"content":"    }","lastModifiedDate":"2022-04-07"},{"lineNumber":190,"author":{"gitId":"chuashihong"},"content":"","lastModifiedDate":"2022-04-07"},{"lineNumber":191,"author":{"gitId":"chuashihong"},"content":"}","lastModifiedDate":"2022-04-07"}],"authorContributionMap":{"WJunHong":10,"chuashihong":181}},{"path":"src/test/java/seedu/address/logic/commands/ClearBuyerCommandTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"cwnm"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2022-03-29"},{"lineNumber":2,"author":{"gitId":"cwnm"},"content":"","lastModifiedDate":"2022-03-29"},{"lineNumber":3,"author":{"gitId":"chuashihong"},"content":"import static seedu.address.logic.commands.BuyerCommandTestUtil.assertCommandSuccess;","lastModifiedDate":"2022-04-07"},{"lineNumber":4,"author":{"gitId":"cwnm"},"content":"import static seedu.address.testutil.TypicalClients.getTypicalAddressBook;","lastModifiedDate":"2022-03-29"},{"lineNumber":5,"author":{"gitId":"cwnm"},"content":"","lastModifiedDate":"2022-03-29"},{"lineNumber":6,"author":{"gitId":"cwnm"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2022-03-29"},{"lineNumber":7,"author":{"gitId":"cwnm"},"content":"","lastModifiedDate":"2022-03-29"},{"lineNumber":8,"author":{"gitId":"cwnm"},"content":"import seedu.address.model.BuyerAddressBook;","lastModifiedDate":"2022-03-29"},{"lineNumber":9,"author":{"gitId":"cwnm"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2022-03-29"},{"lineNumber":10,"author":{"gitId":"cwnm"},"content":"import seedu.address.model.ModelManager;","lastModifiedDate":"2022-03-29"},{"lineNumber":11,"author":{"gitId":"cwnm"},"content":"import seedu.address.model.SellerAddressBook;","lastModifiedDate":"2022-03-29"},{"lineNumber":12,"author":{"gitId":"cwnm"},"content":"import seedu.address.model.UserPrefs;","lastModifiedDate":"2022-03-29"},{"lineNumber":13,"author":{"gitId":"cwnm"},"content":"","lastModifiedDate":"2022-03-29"},{"lineNumber":14,"author":{"gitId":"cwnm"},"content":"public class ClearBuyerCommandTest {","lastModifiedDate":"2022-03-29"},{"lineNumber":15,"author":{"gitId":"cwnm"},"content":"","lastModifiedDate":"2022-03-29"},{"lineNumber":16,"author":{"gitId":"cwnm"},"content":"    @Test","lastModifiedDate":"2022-03-29"},{"lineNumber":17,"author":{"gitId":"cwnm"},"content":"    public void execute_emptyAddressBook_success() {","lastModifiedDate":"2022-03-29"},{"lineNumber":18,"author":{"gitId":"cwnm"},"content":"        Model model \u003d new ModelManager();","lastModifiedDate":"2022-03-29"},{"lineNumber":19,"author":{"gitId":"cwnm"},"content":"        Model expectedModel \u003d new ModelManager();","lastModifiedDate":"2022-03-29"},{"lineNumber":20,"author":{"gitId":"cwnm"},"content":"","lastModifiedDate":"2022-03-29"},{"lineNumber":21,"author":{"gitId":"cwnm"},"content":"        assertCommandSuccess(new ClearBuyerCommand(), model, ClearBuyerCommand.MESSAGE_SUCCESS, expectedModel);","lastModifiedDate":"2022-03-29"},{"lineNumber":22,"author":{"gitId":"cwnm"},"content":"    }","lastModifiedDate":"2022-03-29"},{"lineNumber":23,"author":{"gitId":"cwnm"},"content":"","lastModifiedDate":"2022-03-29"},{"lineNumber":24,"author":{"gitId":"cwnm"},"content":"    @Test","lastModifiedDate":"2022-03-29"},{"lineNumber":25,"author":{"gitId":"cwnm"},"content":"    public void execute_nonEmptyAddressBook_success() {","lastModifiedDate":"2022-03-29"},{"lineNumber":26,"author":{"gitId":"cwnm"},"content":"        Model model \u003d new ModelManager(getTypicalAddressBook(), new UserPrefs(), new SellerAddressBook(),","lastModifiedDate":"2022-03-29"},{"lineNumber":27,"author":{"gitId":"cwnm"},"content":"                new BuyerAddressBook());","lastModifiedDate":"2022-03-29"},{"lineNumber":28,"author":{"gitId":"cwnm"},"content":"        Model expectedModel \u003d new ModelManager(getTypicalAddressBook(), new UserPrefs(), new SellerAddressBook(),","lastModifiedDate":"2022-03-29"},{"lineNumber":29,"author":{"gitId":"cwnm"},"content":"                new BuyerAddressBook());","lastModifiedDate":"2022-03-29"},{"lineNumber":30,"author":{"gitId":"cwnm"},"content":"        expectedModel.setBuyerAddressBook(new BuyerAddressBook());","lastModifiedDate":"2022-03-29"},{"lineNumber":31,"author":{"gitId":"cwnm"},"content":"","lastModifiedDate":"2022-03-29"},{"lineNumber":32,"author":{"gitId":"cwnm"},"content":"        assertCommandSuccess(new ClearBuyerCommand(), model, ClearBuyerCommand.MESSAGE_SUCCESS, expectedModel);","lastModifiedDate":"2022-03-29"},{"lineNumber":33,"author":{"gitId":"cwnm"},"content":"    }","lastModifiedDate":"2022-03-29"},{"lineNumber":34,"author":{"gitId":"cwnm"},"content":"","lastModifiedDate":"2022-03-29"},{"lineNumber":35,"author":{"gitId":"cwnm"},"content":"}","lastModifiedDate":"2022-03-29"}],"authorContributionMap":{"cwnm":34,"chuashihong":1}},{"path":"src/test/java/seedu/address/logic/commands/ClearCommandTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"cwnm"},"content":"//package seedu.address.logic.commands;","lastModifiedDate":"2022-03-31"},{"lineNumber":2,"author":{"gitId":"cwnm"},"content":"//","lastModifiedDate":"2022-03-31"},{"lineNumber":3,"author":{"gitId":"cwnm"},"content":"//import static seedu.address.logic.commands.CommandTestUtil.assertCommandSuccess;","lastModifiedDate":"2022-03-31"},{"lineNumber":4,"author":{"gitId":"cwnm"},"content":"//import static seedu.address.testutil.TypicalClients.getTypicalAddressBook;","lastModifiedDate":"2022-03-31"},{"lineNumber":5,"author":{"gitId":"cwnm"},"content":"//","lastModifiedDate":"2022-03-31"},{"lineNumber":6,"author":{"gitId":"cwnm"},"content":"//import org.junit.jupiter.api.Test;","lastModifiedDate":"2022-03-31"},{"lineNumber":7,"author":{"gitId":"cwnm"},"content":"//","lastModifiedDate":"2022-03-31"},{"lineNumber":8,"author":{"gitId":"cwnm"},"content":"//import seedu.address.model.AddressBook;","lastModifiedDate":"2022-03-31"},{"lineNumber":9,"author":{"gitId":"cwnm"},"content":"//import seedu.address.model.BuyerAddressBook;","lastModifiedDate":"2022-03-31"},{"lineNumber":10,"author":{"gitId":"cwnm"},"content":"//import seedu.address.model.Model;","lastModifiedDate":"2022-03-31"},{"lineNumber":11,"author":{"gitId":"cwnm"},"content":"//import seedu.address.model.ModelManager;","lastModifiedDate":"2022-03-31"},{"lineNumber":12,"author":{"gitId":"cwnm"},"content":"//import seedu.address.model.SellerAddressBook;","lastModifiedDate":"2022-03-31"},{"lineNumber":13,"author":{"gitId":"cwnm"},"content":"//import seedu.address.model.UserPrefs;","lastModifiedDate":"2022-03-31"},{"lineNumber":14,"author":{"gitId":"cwnm"},"content":"//","lastModifiedDate":"2022-03-31"},{"lineNumber":15,"author":{"gitId":"cwnm"},"content":"//public class ClearCommandTest {","lastModifiedDate":"2022-03-31"},{"lineNumber":16,"author":{"gitId":"cwnm"},"content":"//","lastModifiedDate":"2022-03-31"},{"lineNumber":17,"author":{"gitId":"cwnm"},"content":"//    @Test","lastModifiedDate":"2022-03-31"},{"lineNumber":18,"author":{"gitId":"cwnm"},"content":"//    public void execute_emptyAddressBook_success() {","lastModifiedDate":"2022-03-31"},{"lineNumber":19,"author":{"gitId":"cwnm"},"content":"//        Model model \u003d new ModelManager();","lastModifiedDate":"2022-03-31"},{"lineNumber":20,"author":{"gitId":"cwnm"},"content":"//        Model expectedModel \u003d new ModelManager();","lastModifiedDate":"2022-03-31"},{"lineNumber":21,"author":{"gitId":"cwnm"},"content":"//","lastModifiedDate":"2022-03-31"},{"lineNumber":22,"author":{"gitId":"cwnm"},"content":"//        assertCommandSuccess(new ClearCommand(), model, ClearCommand.MESSAGE_SUCCESS, expectedModel);","lastModifiedDate":"2022-03-31"},{"lineNumber":23,"author":{"gitId":"cwnm"},"content":"//    }","lastModifiedDate":"2022-03-31"},{"lineNumber":24,"author":{"gitId":"cwnm"},"content":"//","lastModifiedDate":"2022-03-31"},{"lineNumber":25,"author":{"gitId":"cwnm"},"content":"//    @Test","lastModifiedDate":"2022-03-31"},{"lineNumber":26,"author":{"gitId":"cwnm"},"content":"//    public void execute_nonEmptyAddressBook_success() {","lastModifiedDate":"2022-03-31"},{"lineNumber":27,"author":{"gitId":"cwnm"},"content":"//        Model model \u003d new ModelManager(getTypicalAddressBook(), new UserPrefs(), new SellerAddressBook(),","lastModifiedDate":"2022-03-31"},{"lineNumber":28,"author":{"gitId":"cwnm"},"content":"//                new BuyerAddressBook());","lastModifiedDate":"2022-03-31"},{"lineNumber":29,"author":{"gitId":"cwnm"},"content":"//        Model expectedModel \u003d new ModelManager(getTypicalAddressBook(), new UserPrefs(), new SellerAddressBook(),","lastModifiedDate":"2022-03-31"},{"lineNumber":30,"author":{"gitId":"cwnm"},"content":"//                new BuyerAddressBook());","lastModifiedDate":"2022-03-31"},{"lineNumber":31,"author":{"gitId":"cwnm"},"content":"//        expectedModel.setAddressBook(new AddressBook());","lastModifiedDate":"2022-03-31"},{"lineNumber":32,"author":{"gitId":"cwnm"},"content":"//","lastModifiedDate":"2022-03-31"},{"lineNumber":33,"author":{"gitId":"cwnm"},"content":"//        assertCommandSuccess(new ClearCommand(), model, ClearCommand.MESSAGE_SUCCESS, expectedModel);","lastModifiedDate":"2022-03-31"},{"lineNumber":34,"author":{"gitId":"cwnm"},"content":"//    }","lastModifiedDate":"2022-03-31"},{"lineNumber":35,"author":{"gitId":"cwnm"},"content":"//","lastModifiedDate":"2022-03-31"},{"lineNumber":36,"author":{"gitId":"cwnm"},"content":"//}","lastModifiedDate":"2022-03-31"}],"authorContributionMap":{"cwnm":36}},{"path":"src/test/java/seedu/address/logic/commands/ClearSellerCommandTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"cwnm"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2022-03-29"},{"lineNumber":2,"author":{"gitId":"cwnm"},"content":"","lastModifiedDate":"2022-03-29"},{"lineNumber":3,"author":{"gitId":"chuashihong"},"content":"import static seedu.address.logic.commands.SellerCommandTestUtil.assertCommandSuccess;","lastModifiedDate":"2022-04-07"},{"lineNumber":4,"author":{"gitId":"cwnm"},"content":"import static seedu.address.testutil.TypicalClients.getTypicalAddressBook;","lastModifiedDate":"2022-03-29"},{"lineNumber":5,"author":{"gitId":"cwnm"},"content":"","lastModifiedDate":"2022-03-29"},{"lineNumber":6,"author":{"gitId":"cwnm"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2022-03-29"},{"lineNumber":7,"author":{"gitId":"cwnm"},"content":"","lastModifiedDate":"2022-03-29"},{"lineNumber":8,"author":{"gitId":"cwnm"},"content":"import seedu.address.model.BuyerAddressBook;","lastModifiedDate":"2022-03-29"},{"lineNumber":9,"author":{"gitId":"cwnm"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2022-03-29"},{"lineNumber":10,"author":{"gitId":"cwnm"},"content":"import seedu.address.model.ModelManager;","lastModifiedDate":"2022-03-29"},{"lineNumber":11,"author":{"gitId":"cwnm"},"content":"import seedu.address.model.SellerAddressBook;","lastModifiedDate":"2022-03-29"},{"lineNumber":12,"author":{"gitId":"cwnm"},"content":"import seedu.address.model.UserPrefs;","lastModifiedDate":"2022-03-29"},{"lineNumber":13,"author":{"gitId":"cwnm"},"content":"","lastModifiedDate":"2022-03-29"},{"lineNumber":14,"author":{"gitId":"cwnm"},"content":"public class ClearSellerCommandTest {","lastModifiedDate":"2022-03-29"},{"lineNumber":15,"author":{"gitId":"cwnm"},"content":"","lastModifiedDate":"2022-03-29"},{"lineNumber":16,"author":{"gitId":"cwnm"},"content":"    @Test","lastModifiedDate":"2022-03-29"},{"lineNumber":17,"author":{"gitId":"cwnm"},"content":"    public void execute_emptyAddressBook_success() {","lastModifiedDate":"2022-03-29"},{"lineNumber":18,"author":{"gitId":"cwnm"},"content":"        Model model \u003d new ModelManager();","lastModifiedDate":"2022-03-29"},{"lineNumber":19,"author":{"gitId":"cwnm"},"content":"        Model expectedModel \u003d new ModelManager();","lastModifiedDate":"2022-03-29"},{"lineNumber":20,"author":{"gitId":"cwnm"},"content":"","lastModifiedDate":"2022-03-29"},{"lineNumber":21,"author":{"gitId":"cwnm"},"content":"        assertCommandSuccess(new ClearSellerCommand(), model, ClearSellerCommand.MESSAGE_SUCCESS, expectedModel);","lastModifiedDate":"2022-03-29"},{"lineNumber":22,"author":{"gitId":"cwnm"},"content":"    }","lastModifiedDate":"2022-03-29"},{"lineNumber":23,"author":{"gitId":"cwnm"},"content":"","lastModifiedDate":"2022-03-29"},{"lineNumber":24,"author":{"gitId":"cwnm"},"content":"    @Test","lastModifiedDate":"2022-03-29"},{"lineNumber":25,"author":{"gitId":"cwnm"},"content":"    public void execute_nonEmptyAddressBook_success() {","lastModifiedDate":"2022-03-29"},{"lineNumber":26,"author":{"gitId":"cwnm"},"content":"        Model model \u003d new ModelManager(getTypicalAddressBook(), new UserPrefs(), new SellerAddressBook(),","lastModifiedDate":"2022-03-29"},{"lineNumber":27,"author":{"gitId":"cwnm"},"content":"                new BuyerAddressBook());","lastModifiedDate":"2022-03-29"},{"lineNumber":28,"author":{"gitId":"cwnm"},"content":"        Model expectedModel \u003d new ModelManager(getTypicalAddressBook(), new UserPrefs(), new SellerAddressBook(),","lastModifiedDate":"2022-03-29"},{"lineNumber":29,"author":{"gitId":"cwnm"},"content":"                new BuyerAddressBook());","lastModifiedDate":"2022-03-29"},{"lineNumber":30,"author":{"gitId":"cwnm"},"content":"        expectedModel.setSellerAddressBook(new SellerAddressBook());","lastModifiedDate":"2022-03-29"},{"lineNumber":31,"author":{"gitId":"cwnm"},"content":"","lastModifiedDate":"2022-03-29"},{"lineNumber":32,"author":{"gitId":"cwnm"},"content":"        assertCommandSuccess(new ClearSellerCommand(), model, ClearSellerCommand.MESSAGE_SUCCESS, expectedModel);","lastModifiedDate":"2022-03-29"},{"lineNumber":33,"author":{"gitId":"cwnm"},"content":"    }","lastModifiedDate":"2022-03-29"},{"lineNumber":34,"author":{"gitId":"cwnm"},"content":"","lastModifiedDate":"2022-03-29"},{"lineNumber":35,"author":{"gitId":"cwnm"},"content":"}","lastModifiedDate":"2022-03-29"}],"authorContributionMap":{"cwnm":34,"chuashihong":1}},{"path":"src/test/java/seedu/address/logic/commands/CommandTestUtil.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"WJunHong"},"content":"//","lastModifiedDate":"2022-04-07"},{"lineNumber":2,"author":{"gitId":"chuashihong"},"content":"//","lastModifiedDate":"2022-04-07"},{"lineNumber":3,"author":{"gitId":"chuashihong"},"content":"//import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2022-04-07"},{"lineNumber":4,"author":{"gitId":"chuashihong"},"content":"//import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2022-04-07"},{"lineNumber":5,"author":{"gitId":"chuashihong"},"content":"//import static seedu.address.logic.parser.CliSyntax.PREFIX_NAME;","lastModifiedDate":"2022-04-07"},{"lineNumber":6,"author":{"gitId":"chuashihong"},"content":"//import static seedu.address.logic.parser.CliSyntax.PREFIX_PHONE;","lastModifiedDate":"2022-04-07"},{"lineNumber":7,"author":{"gitId":"chuashihong"},"content":"//import static seedu.address.logic.parser.CliSyntax.PREFIX_TAG;","lastModifiedDate":"2022-04-07"},{"lineNumber":8,"author":{"gitId":"chuashihong"},"content":"//import static seedu.address.testutil.Assert.assertThrows;","lastModifiedDate":"2022-04-07"},{"lineNumber":9,"author":{"gitId":"chuashihong"},"content":"//","lastModifiedDate":"2022-04-07"},{"lineNumber":10,"author":{"gitId":"chuashihong"},"content":"//import java.util.ArrayList;","lastModifiedDate":"2022-04-07"},{"lineNumber":11,"author":{"gitId":"chuashihong"},"content":"//import java.util.Arrays;","lastModifiedDate":"2022-04-07"},{"lineNumber":12,"author":{"gitId":"chuashihong"},"content":"//import java.util.List;","lastModifiedDate":"2022-04-07"},{"lineNumber":13,"author":{"gitId":"chuashihong"},"content":"//","lastModifiedDate":"2022-04-07"},{"lineNumber":14,"author":{"gitId":"chuashihong"},"content":"//import seedu.address.commons.core.index.Index;","lastModifiedDate":"2022-04-07"},{"lineNumber":15,"author":{"gitId":"chuashihong"},"content":"//import seedu.address.logic.commands.exceptions.CommandException;","lastModifiedDate":"2022-04-07"},{"lineNumber":16,"author":{"gitId":"chuashihong"},"content":"//import seedu.address.model.AddressBook;","lastModifiedDate":"2022-04-07"},{"lineNumber":17,"author":{"gitId":"chuashihong"},"content":"//import seedu.address.model.Model;","lastModifiedDate":"2022-04-07"},{"lineNumber":18,"author":{"gitId":"chuashihong"},"content":"//import seedu.address.model.buyer.Buyer;","lastModifiedDate":"2022-04-07"},{"lineNumber":19,"author":{"gitId":"chuashihong"},"content":"//import seedu.address.model.buyer.BuyerNameContainsKeywordsPredicate;","lastModifiedDate":"2022-04-07"},{"lineNumber":20,"author":{"gitId":"chuashihong"},"content":"//import seedu.address.model.client.Client;","lastModifiedDate":"2022-04-07"},{"lineNumber":21,"author":{"gitId":"chuashihong"},"content":"//import seedu.address.model.client.NameContainsKeywordsPredicate;","lastModifiedDate":"2022-04-07"},{"lineNumber":22,"author":{"gitId":"chuashihong"},"content":"//import seedu.address.model.property.House;","lastModifiedDate":"2022-04-07"},{"lineNumber":23,"author":{"gitId":"chuashihong"},"content":"//import seedu.address.model.property.HouseType;","lastModifiedDate":"2022-04-07"},{"lineNumber":24,"author":{"gitId":"chuashihong"},"content":"//import seedu.address.model.property.Location;","lastModifiedDate":"2022-04-07"},{"lineNumber":25,"author":{"gitId":"chuashihong"},"content":"//import seedu.address.model.property.PriceRange;","lastModifiedDate":"2022-04-07"},{"lineNumber":26,"author":{"gitId":"chuashihong"},"content":"//import seedu.address.model.property.PropertyToBuy;","lastModifiedDate":"2022-04-07"},{"lineNumber":27,"author":{"gitId":"chuashihong"},"content":"//import seedu.address.model.seller.Seller;","lastModifiedDate":"2022-04-07"},{"lineNumber":28,"author":{"gitId":"chuashihong"},"content":"//import seedu.address.model.seller.SellerNameContainsKeywordsPredicate;","lastModifiedDate":"2022-04-07"},{"lineNumber":29,"author":{"gitId":"chuashihong"},"content":"////import seedu.address.testutil.EditClientDescriptorBuilder;","lastModifiedDate":"2022-04-07"},{"lineNumber":30,"author":{"gitId":"chuashihong"},"content":"//","lastModifiedDate":"2022-04-07"},{"lineNumber":31,"author":{"gitId":"chuashihong"},"content":"///**","lastModifiedDate":"2022-04-07"},{"lineNumber":32,"author":{"gitId":"chuashihong"},"content":"// * Contains helper methods for testing commands.","lastModifiedDate":"2022-04-07"},{"lineNumber":33,"author":{"gitId":"chuashihong"},"content":"// */","lastModifiedDate":"2022-04-07"},{"lineNumber":34,"author":{"gitId":"chuashihong"},"content":"//public class CommandTestUtil {","lastModifiedDate":"2022-04-07"},{"lineNumber":35,"author":{"gitId":"chuashihong"},"content":"//","lastModifiedDate":"2022-04-07"},{"lineNumber":36,"author":{"gitId":"chuashihong"},"content":"//    public static final String VALID_NAME_AMY \u003d \"Amy Bee\";","lastModifiedDate":"2022-04-07"},{"lineNumber":37,"author":{"gitId":"chuashihong"},"content":"//    public static final String VALID_NAME_BOB \u003d \"Bob Choo\";","lastModifiedDate":"2022-04-07"},{"lineNumber":38,"author":{"gitId":"chuashihong"},"content":"//    public static final String VALID_NAME_CHAD \u003d \"Chad chadson\";","lastModifiedDate":"2022-04-07"},{"lineNumber":39,"author":{"gitId":"chuashihong"},"content":"//    public static final String VALID_PHONE_AMY \u003d \"11111111\";","lastModifiedDate":"2022-04-07"},{"lineNumber":40,"author":{"gitId":"chuashihong"},"content":"//    public static final String VALID_PHONE_BOB \u003d \"22222222\";","lastModifiedDate":"2022-04-07"},{"lineNumber":41,"author":{"gitId":"chuashihong"},"content":"//    public static final String VALID_PHONE_CHAD \u003d \"33333333\";","lastModifiedDate":"2022-04-07"},{"lineNumber":42,"author":{"gitId":"chuashihong"},"content":"//    public static final PropertyToBuy VALID_PROPERTY_BUY_CHAD \u003d new PropertyToBuy(new House(HouseType.HDB_FLAT,","lastModifiedDate":"2022-04-07"},{"lineNumber":43,"author":{"gitId":"chuashihong"},"content":"//            new Location(\"jurong\")), new PriceRange(1000, 2000));","lastModifiedDate":"2022-04-07"},{"lineNumber":44,"author":{"gitId":"chuashihong"},"content":"//    public static final String VALID_TAG_HUSBAND \u003d \"husband\";","lastModifiedDate":"2022-04-07"},{"lineNumber":45,"author":{"gitId":"chuashihong"},"content":"//    public static final String VALID_TAG_FRIEND \u003d \"friend\";","lastModifiedDate":"2022-04-07"},{"lineNumber":46,"author":{"gitId":"chuashihong"},"content":"//    public static final String VALID_REMARK_AMY \u003d \"A remark\";","lastModifiedDate":"2022-04-07"},{"lineNumber":47,"author":{"gitId":"chuashihong"},"content":"//    public static final String VALID_REMARK_BOB \u003d \"B remark\";","lastModifiedDate":"2022-04-07"},{"lineNumber":48,"author":{"gitId":"chuashihong"},"content":"//    public static final String VALID_APPOINTMENT_AMY \u003d \"2022-09-08-12-00\";","lastModifiedDate":"2022-04-07"},{"lineNumber":49,"author":{"gitId":"chuashihong"},"content":"//    public static final String VALID_APPOINTMENT_BOB \u003d \"2022-09-03-09-10\";","lastModifiedDate":"2022-04-07"},{"lineNumber":50,"author":{"gitId":"chuashihong"},"content":"//    public static final String VALID_APPOINTMENT_CHAD \u003d \"2023-09-03-09-10\";","lastModifiedDate":"2022-04-07"},{"lineNumber":51,"author":{"gitId":"chuashihong"},"content":"//","lastModifiedDate":"2022-04-07"},{"lineNumber":52,"author":{"gitId":"chuashihong"},"content":"//","lastModifiedDate":"2022-04-07"},{"lineNumber":53,"author":{"gitId":"chuashihong"},"content":"//    public static final String NAME_DESC_AMY \u003d \" \" + PREFIX_NAME + VALID_NAME_AMY;","lastModifiedDate":"2022-04-07"},{"lineNumber":54,"author":{"gitId":"chuashihong"},"content":"//    public static final String NAME_DESC_BOB \u003d \" \" + PREFIX_NAME + VALID_NAME_BOB;","lastModifiedDate":"2022-04-07"},{"lineNumber":55,"author":{"gitId":"chuashihong"},"content":"//    public static final String PHONE_DESC_AMY \u003d \" \" + PREFIX_PHONE + VALID_PHONE_AMY;","lastModifiedDate":"2022-04-07"},{"lineNumber":56,"author":{"gitId":"chuashihong"},"content":"//    public static final String PHONE_DESC_BOB \u003d \" \" + PREFIX_PHONE + VALID_PHONE_BOB;","lastModifiedDate":"2022-04-07"},{"lineNumber":57,"author":{"gitId":"chuashihong"},"content":"//    public static final String TAG_DESC_FRIEND \u003d \" \" + PREFIX_TAG + VALID_TAG_FRIEND;","lastModifiedDate":"2022-04-07"},{"lineNumber":58,"author":{"gitId":"chuashihong"},"content":"//    public static final String TAG_DESC_HUSBAND \u003d \" \" + PREFIX_TAG + VALID_TAG_HUSBAND;","lastModifiedDate":"2022-04-07"},{"lineNumber":59,"author":{"gitId":"chuashihong"},"content":"//","lastModifiedDate":"2022-04-07"},{"lineNumber":60,"author":{"gitId":"chuashihong"},"content":"//    public static final String INVALID_NAME_DESC \u003d \" \" + PREFIX_NAME + \"James\u0026\"; // \u0027\u0026\u0027 not allowed in names","lastModifiedDate":"2022-04-07"},{"lineNumber":61,"author":{"gitId":"chuashihong"},"content":"//    public static final String INVALID_PHONE_DESC \u003d \" \" + PREFIX_PHONE + \"911a\"; // \u0027a\u0027 not allowed in phones","lastModifiedDate":"2022-04-07"},{"lineNumber":62,"author":{"gitId":"chuashihong"},"content":"//    public static final String INVALID_TAG_DESC \u003d \" \" + PREFIX_TAG + \"hubby*\"; // \u0027*\u0027 not allowed in tags","lastModifiedDate":"2022-04-07"},{"lineNumber":63,"author":{"gitId":"chuashihong"},"content":"//","lastModifiedDate":"2022-04-07"},{"lineNumber":64,"author":{"gitId":"chuashihong"},"content":"//    public static final String PREAMBLE_WHITESPACE \u003d \"\\t  \\r  \\n\";","lastModifiedDate":"2022-04-07"},{"lineNumber":65,"author":{"gitId":"chuashihong"},"content":"//    public static final String PREAMBLE_NON_EMPTY \u003d \"NonEmptyPreamble\";","lastModifiedDate":"2022-04-07"},{"lineNumber":66,"author":{"gitId":"chuashihong"},"content":"//","lastModifiedDate":"2022-04-07"},{"lineNumber":67,"author":{"gitId":"chuashihong"},"content":"//    //public static final EditCommand.EditclientDescriptor DESC_AMY;","lastModifiedDate":"2022-04-07"},{"lineNumber":68,"author":{"gitId":"chuashihong"},"content":"//    //public static final EditCommand.EditclientDescriptor DESC_BOB;","lastModifiedDate":"2022-04-07"},{"lineNumber":69,"author":{"gitId":"chuashihong"},"content":"//","lastModifiedDate":"2022-04-07"},{"lineNumber":70,"author":{"gitId":"chuashihong"},"content":"//    static {","lastModifiedDate":"2022-04-07"},{"lineNumber":71,"author":{"gitId":"chuashihong"},"content":"//        DESC_AMY \u003d new EditClientDescriptorBuilder().withName(VALID_NAME_AMY)","lastModifiedDate":"2022-04-07"},{"lineNumber":72,"author":{"gitId":"chuashihong"},"content":"//                .withPhone(VALID_PHONE_AMY).withTags(VALID_TAG_FRIEND)","lastModifiedDate":"2022-04-07"},{"lineNumber":73,"author":{"gitId":"chuashihong"},"content":"//                .withAppointment(VALID_APPOINTMENT_AMY).build();","lastModifiedDate":"2022-04-07"},{"lineNumber":74,"author":{"gitId":"chuashihong"},"content":"//        DESC_BOB \u003d new EditClientDescriptorBuilder().withName(VALID_NAME_BOB)","lastModifiedDate":"2022-04-07"},{"lineNumber":75,"author":{"gitId":"chuashihong"},"content":"//                .withPhone(VALID_PHONE_BOB).withTags(VALID_TAG_HUSBAND, VALID_TAG_FRIEND)","lastModifiedDate":"2022-04-07"},{"lineNumber":76,"author":{"gitId":"chuashihong"},"content":"//                .withAppointment(VALID_APPOINTMENT_BOB).build();","lastModifiedDate":"2022-04-07"},{"lineNumber":77,"author":{"gitId":"chuashihong"},"content":"//    }","lastModifiedDate":"2022-04-07"},{"lineNumber":78,"author":{"gitId":"chuashihong"},"content":"//","lastModifiedDate":"2022-04-07"},{"lineNumber":79,"author":{"gitId":"chuashihong"},"content":"//    /**","lastModifiedDate":"2022-04-07"},{"lineNumber":80,"author":{"gitId":"chuashihong"},"content":"//     * Executes the given {@code command}, confirms that \u003cbr\u003e","lastModifiedDate":"2022-04-07"},{"lineNumber":81,"author":{"gitId":"chuashihong"},"content":"//     * - the returned {@link CommandResult} matches {@code expectedCommandResult} \u003cbr\u003e","lastModifiedDate":"2022-04-07"},{"lineNumber":82,"author":{"gitId":"chuashihong"},"content":"//     * - the {@code actualModel} matches {@code expectedModel}","lastModifiedDate":"2022-04-07"},{"lineNumber":83,"author":{"gitId":"chuashihong"},"content":"//     */","lastModifiedDate":"2022-04-07"},{"lineNumber":84,"author":{"gitId":"chuashihong"},"content":"//    public static void assertCommandSuccess(Command command, Model actualModel, CommandResult expectedCommandResult,","lastModifiedDate":"2022-04-07"},{"lineNumber":85,"author":{"gitId":"chuashihong"},"content":"//            Model expectedModel) {","lastModifiedDate":"2022-04-07"},{"lineNumber":86,"author":{"gitId":"chuashihong"},"content":"//        try {","lastModifiedDate":"2022-04-07"},{"lineNumber":87,"author":{"gitId":"chuashihong"},"content":"//            CommandResult result \u003d command.execute(actualModel);","lastModifiedDate":"2022-04-07"},{"lineNumber":88,"author":{"gitId":"chuashihong"},"content":"//            assertEquals(expectedCommandResult, result);","lastModifiedDate":"2022-04-07"},{"lineNumber":89,"author":{"gitId":"chuashihong"},"content":"//            assertEquals(expectedModel, actualModel);","lastModifiedDate":"2022-04-07"},{"lineNumber":90,"author":{"gitId":"chuashihong"},"content":"//        } catch (CommandException ce) {","lastModifiedDate":"2022-04-07"},{"lineNumber":91,"author":{"gitId":"chuashihong"},"content":"//            throw new AssertionError(\"Execution of command should not fail.\", ce);","lastModifiedDate":"2022-04-07"},{"lineNumber":92,"author":{"gitId":"chuashihong"},"content":"//        }","lastModifiedDate":"2022-04-07"},{"lineNumber":93,"author":{"gitId":"chuashihong"},"content":"//    }","lastModifiedDate":"2022-04-07"},{"lineNumber":94,"author":{"gitId":"chuashihong"},"content":"//","lastModifiedDate":"2022-04-07"},{"lineNumber":95,"author":{"gitId":"chuashihong"},"content":"//    /**","lastModifiedDate":"2022-04-07"},{"lineNumber":96,"author":{"gitId":"chuashihong"},"content":"//     * Convenience wrapper to {@link #assertCommandSuccess(Command, Model, CommandResult, Model)}","lastModifiedDate":"2022-04-07"},{"lineNumber":97,"author":{"gitId":"chuashihong"},"content":"//     * that takes a string {@code expectedMessage}.","lastModifiedDate":"2022-04-07"},{"lineNumber":98,"author":{"gitId":"chuashihong"},"content":"//     */","lastModifiedDate":"2022-04-07"},{"lineNumber":99,"author":{"gitId":"chuashihong"},"content":"//    public static void assertCommandSuccess(Command command, Model actualModel, String expectedMessage,","lastModifiedDate":"2022-04-07"},{"lineNumber":100,"author":{"gitId":"chuashihong"},"content":"//            Model expectedModel) {","lastModifiedDate":"2022-04-07"},{"lineNumber":101,"author":{"gitId":"chuashihong"},"content":"//        CommandResult expectedCommandResult \u003d new CommandResult(expectedMessage);","lastModifiedDate":"2022-04-07"},{"lineNumber":102,"author":{"gitId":"chuashihong"},"content":"//        assertCommandSuccess(command, actualModel, expectedCommandResult, expectedModel);","lastModifiedDate":"2022-04-07"},{"lineNumber":103,"author":{"gitId":"chuashihong"},"content":"//    }","lastModifiedDate":"2022-04-07"},{"lineNumber":104,"author":{"gitId":"chuashihong"},"content":"//","lastModifiedDate":"2022-04-07"},{"lineNumber":105,"author":{"gitId":"chuashihong"},"content":"//    /**","lastModifiedDate":"2022-04-07"},{"lineNumber":106,"author":{"gitId":"chuashihong"},"content":"//     * Executes the given {@code command}, confirms that \u003cbr\u003e","lastModifiedDate":"2022-04-07"},{"lineNumber":107,"author":{"gitId":"chuashihong"},"content":"//     * - a {@code CommandException} is thrown \u003cbr\u003e","lastModifiedDate":"2022-04-07"},{"lineNumber":108,"author":{"gitId":"chuashihong"},"content":"//     * - the CommandException message matches {@code expectedMessage} \u003cbr\u003e","lastModifiedDate":"2022-04-07"},{"lineNumber":109,"author":{"gitId":"chuashihong"},"content":"//     * - the address book, filtered client list and selected client in {@code actualModel} remain unchanged","lastModifiedDate":"2022-04-07"},{"lineNumber":110,"author":{"gitId":"chuashihong"},"content":"//     */","lastModifiedDate":"2022-04-07"},{"lineNumber":111,"author":{"gitId":"chuashihong"},"content":"//    public static void assertCommandFailure(Command command, Model actualModel, String expectedMessage) {","lastModifiedDate":"2022-04-07"},{"lineNumber":112,"author":{"gitId":"chuashihong"},"content":"//        // we are unable to defensively copy the model for comparison later, so we can","lastModifiedDate":"2022-04-07"},{"lineNumber":113,"author":{"gitId":"chuashihong"},"content":"//        // only do so by copying its components.","lastModifiedDate":"2022-04-07"},{"lineNumber":114,"author":{"gitId":"chuashihong"},"content":"//        AddressBook expectedAddressBook \u003d new AddressBook(actualModel.getAddressBook());","lastModifiedDate":"2022-04-07"},{"lineNumber":115,"author":{"gitId":"chuashihong"},"content":"//        List\u003cClient\u003e expectedFilteredList \u003d new ArrayList\u003c\u003e(actualModel.getFilteredClientList());","lastModifiedDate":"2022-04-07"},{"lineNumber":116,"author":{"gitId":"chuashihong"},"content":"//","lastModifiedDate":"2022-04-07"},{"lineNumber":117,"author":{"gitId":"chuashihong"},"content":"//        assertThrows(CommandException.class, expectedMessage, () -\u003e command.execute(actualModel));","lastModifiedDate":"2022-04-07"},{"lineNumber":118,"author":{"gitId":"chuashihong"},"content":"//        assertEquals(expectedAddressBook, actualModel.getAddressBook());","lastModifiedDate":"2022-04-07"},{"lineNumber":119,"author":{"gitId":"chuashihong"},"content":"//        assertEquals(expectedFilteredList, actualModel.getFilteredClientList());","lastModifiedDate":"2022-04-07"},{"lineNumber":120,"author":{"gitId":"chuashihong"},"content":"//    }","lastModifiedDate":"2022-04-07"},{"lineNumber":121,"author":{"gitId":"chuashihong"},"content":"//","lastModifiedDate":"2022-04-07"},{"lineNumber":122,"author":{"gitId":"chuashihong"},"content":"//    /**","lastModifiedDate":"2022-04-07"},{"lineNumber":123,"author":{"gitId":"chuashihong"},"content":"//     * Executes the given {@code command}, confirms that \u003cbr\u003e","lastModifiedDate":"2022-04-07"},{"lineNumber":124,"author":{"gitId":"chuashihong"},"content":"//     * - a {@code CommandException} is thrown \u003cbr\u003e","lastModifiedDate":"2022-04-07"},{"lineNumber":125,"author":{"gitId":"chuashihong"},"content":"//     * - the CommandException message matches {@code expectedMessage} \u003cbr\u003e","lastModifiedDate":"2022-04-07"},{"lineNumber":126,"author":{"gitId":"chuashihong"},"content":"//     * - the address book, filtered seller list and selected seller in {@code actualModel} remain unchanged","lastModifiedDate":"2022-04-07"},{"lineNumber":127,"author":{"gitId":"chuashihong"},"content":"//     */","lastModifiedDate":"2022-04-07"},{"lineNumber":128,"author":{"gitId":"chuashihong"},"content":"//    public static void assertSellerCommandFailure(Command command, Model actualModel, String expectedMessage) {","lastModifiedDate":"2022-04-07"},{"lineNumber":129,"author":{"gitId":"chuashihong"},"content":"//        // we are unable to defensively copy the model for comparison later, so we can","lastModifiedDate":"2022-04-07"},{"lineNumber":130,"author":{"gitId":"chuashihong"},"content":"//        // only do so by copying its components.","lastModifiedDate":"2022-04-07"},{"lineNumber":131,"author":{"gitId":"chuashihong"},"content":"//        AddressBook expectedAddressBook \u003d new AddressBook(actualModel.getAddressBook());","lastModifiedDate":"2022-04-07"},{"lineNumber":132,"author":{"gitId":"chuashihong"},"content":"//        List\u003cSeller\u003e expectedFilteredSellerList \u003d new ArrayList\u003c\u003e(actualModel.getFilteredSellerList());","lastModifiedDate":"2022-04-07"},{"lineNumber":133,"author":{"gitId":"chuashihong"},"content":"//","lastModifiedDate":"2022-04-07"},{"lineNumber":134,"author":{"gitId":"chuashihong"},"content":"//        assertThrows(CommandException.class, expectedMessage, () -\u003e command.execute(actualModel));","lastModifiedDate":"2022-04-07"},{"lineNumber":135,"author":{"gitId":"chuashihong"},"content":"//        assertEquals(expectedAddressBook, actualModel.getAddressBook());","lastModifiedDate":"2022-04-07"},{"lineNumber":136,"author":{"gitId":"chuashihong"},"content":"//        assertEquals(expectedFilteredSellerList, actualModel.getFilteredSellerList());","lastModifiedDate":"2022-04-07"},{"lineNumber":137,"author":{"gitId":"chuashihong"},"content":"//    }","lastModifiedDate":"2022-04-07"},{"lineNumber":138,"author":{"gitId":"chuashihong"},"content":"//","lastModifiedDate":"2022-04-07"},{"lineNumber":139,"author":{"gitId":"chuashihong"},"content":"//    /**","lastModifiedDate":"2022-04-07"},{"lineNumber":140,"author":{"gitId":"chuashihong"},"content":"//     * Updates {@code model}\u0027s filtered list to show only the client at the given {@code targetIndex} in the","lastModifiedDate":"2022-04-07"},{"lineNumber":141,"author":{"gitId":"chuashihong"},"content":"//     * {@code model}\u0027s address book.","lastModifiedDate":"2022-04-07"},{"lineNumber":142,"author":{"gitId":"chuashihong"},"content":"//     */","lastModifiedDate":"2022-04-07"},{"lineNumber":143,"author":{"gitId":"chuashihong"},"content":"//    public static void showClientAtIndex(Model model, Index targetIndex) {","lastModifiedDate":"2022-04-07"},{"lineNumber":144,"author":{"gitId":"chuashihong"},"content":"//        assertTrue(targetIndex.getZeroBased() \u003c model.getFilteredClientList().size());","lastModifiedDate":"2022-04-07"},{"lineNumber":145,"author":{"gitId":"chuashihong"},"content":"//","lastModifiedDate":"2022-04-07"},{"lineNumber":146,"author":{"gitId":"chuashihong"},"content":"//        Client client \u003d model.getFilteredClientList().get(targetIndex.getZeroBased());","lastModifiedDate":"2022-04-07"},{"lineNumber":147,"author":{"gitId":"chuashihong"},"content":"//        final String[] splitName \u003d client.getName().fullName.split(\"\\\\s+\");","lastModifiedDate":"2022-04-07"},{"lineNumber":148,"author":{"gitId":"chuashihong"},"content":"//        model.updateFilteredClientList(new NameContainsKeywordsPredicate(Arrays.asList(splitName[0])));","lastModifiedDate":"2022-04-07"},{"lineNumber":149,"author":{"gitId":"chuashihong"},"content":"//","lastModifiedDate":"2022-04-07"},{"lineNumber":150,"author":{"gitId":"chuashihong"},"content":"//        assertEquals(1, model.getFilteredClientList().size());","lastModifiedDate":"2022-04-07"},{"lineNumber":151,"author":{"gitId":"chuashihong"},"content":"//    }","lastModifiedDate":"2022-04-07"},{"lineNumber":152,"author":{"gitId":"chuashihong"},"content":"//","lastModifiedDate":"2022-04-07"},{"lineNumber":153,"author":{"gitId":"chuashihong"},"content":"//    /**","lastModifiedDate":"2022-04-07"},{"lineNumber":154,"author":{"gitId":"chuashihong"},"content":"//     * Updates {@code model}\u0027s filtered list to show only the buyer at the given {@code targetIndex} in the","lastModifiedDate":"2022-04-07"},{"lineNumber":155,"author":{"gitId":"chuashihong"},"content":"//     * {@code model}\u0027s address book.","lastModifiedDate":"2022-04-07"},{"lineNumber":156,"author":{"gitId":"chuashihong"},"content":"//     */","lastModifiedDate":"2022-04-07"},{"lineNumber":157,"author":{"gitId":"chuashihong"},"content":"//    public static void showBuyerAtIndex(Model model, Index targetIndex) {","lastModifiedDate":"2022-04-07"},{"lineNumber":158,"author":{"gitId":"chuashihong"},"content":"//        assertTrue(targetIndex.getZeroBased() \u003c model.getFilteredBuyerList().size());","lastModifiedDate":"2022-04-07"},{"lineNumber":159,"author":{"gitId":"chuashihong"},"content":"//","lastModifiedDate":"2022-04-07"},{"lineNumber":160,"author":{"gitId":"chuashihong"},"content":"//        Buyer buyer \u003d model.getFilteredBuyerList().get(targetIndex.getZeroBased());","lastModifiedDate":"2022-04-07"},{"lineNumber":161,"author":{"gitId":"chuashihong"},"content":"//        final String[] splitName \u003d buyer.getName().fullName.split(\"\\\\s+\");","lastModifiedDate":"2022-04-07"},{"lineNumber":162,"author":{"gitId":"chuashihong"},"content":"//        model.updateFilteredBuyerList(new BuyerNameContainsKeywordsPredicate(Arrays.asList(splitName[0])));","lastModifiedDate":"2022-04-07"},{"lineNumber":163,"author":{"gitId":"chuashihong"},"content":"//","lastModifiedDate":"2022-04-07"},{"lineNumber":164,"author":{"gitId":"chuashihong"},"content":"//        assertEquals(1, model.getFilteredBuyerList().size());","lastModifiedDate":"2022-04-07"},{"lineNumber":165,"author":{"gitId":"chuashihong"},"content":"//    }","lastModifiedDate":"2022-04-07"},{"lineNumber":166,"author":{"gitId":"chuashihong"},"content":"//","lastModifiedDate":"2022-04-07"},{"lineNumber":167,"author":{"gitId":"chuashihong"},"content":"//    /**","lastModifiedDate":"2022-04-07"},{"lineNumber":168,"author":{"gitId":"chuashihong"},"content":"//     * Updates {@code model}\u0027s filtered list to show only the seller at the given {@code targetIndex} in the","lastModifiedDate":"2022-04-07"},{"lineNumber":169,"author":{"gitId":"chuashihong"},"content":"//     * {@code model}\u0027s address book.","lastModifiedDate":"2022-04-07"},{"lineNumber":170,"author":{"gitId":"chuashihong"},"content":"//     */","lastModifiedDate":"2022-04-07"},{"lineNumber":171,"author":{"gitId":"chuashihong"},"content":"//    public static void showSellerAtIndex(Model model, Index targetIndex) {","lastModifiedDate":"2022-04-07"},{"lineNumber":172,"author":{"gitId":"chuashihong"},"content":"//        assertTrue(targetIndex.getZeroBased() \u003c model.getFilteredSellerList().size());","lastModifiedDate":"2022-04-07"},{"lineNumber":173,"author":{"gitId":"chuashihong"},"content":"//","lastModifiedDate":"2022-04-07"},{"lineNumber":174,"author":{"gitId":"chuashihong"},"content":"//        Seller seller \u003d model.getFilteredSellerList().get(targetIndex.getZeroBased());","lastModifiedDate":"2022-04-07"},{"lineNumber":175,"author":{"gitId":"chuashihong"},"content":"//        final String[] splitName \u003d seller.getName().fullName.split(\"\\\\s+\");","lastModifiedDate":"2022-04-07"},{"lineNumber":176,"author":{"gitId":"chuashihong"},"content":"//        model.updateFilteredSellerList(new SellerNameContainsKeywordsPredicate(Arrays.asList(splitName[0])));","lastModifiedDate":"2022-04-07"},{"lineNumber":177,"author":{"gitId":"chuashihong"},"content":"//","lastModifiedDate":"2022-04-07"},{"lineNumber":178,"author":{"gitId":"chuashihong"},"content":"//        assertEquals(1, model.getFilteredSellerList().size());","lastModifiedDate":"2022-04-07"},{"lineNumber":179,"author":{"gitId":"chuashihong"},"content":"//    }","lastModifiedDate":"2022-04-07"},{"lineNumber":180,"author":{"gitId":"chuashihong"},"content":"//","lastModifiedDate":"2022-04-07"},{"lineNumber":181,"author":{"gitId":"chuashihong"},"content":"//}","lastModifiedDate":"2022-04-07"}],"authorContributionMap":{"WJunHong":1,"chuashihong":180}},{"path":"src/test/java/seedu/address/logic/commands/DeleteBuyerCommandTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"WJunHong"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2022-03-29"},{"lineNumber":2,"author":{"gitId":"WJunHong"},"content":"","lastModifiedDate":"2022-03-29"},{"lineNumber":3,"author":{"gitId":"WJunHong"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2022-03-29"},{"lineNumber":4,"author":{"gitId":"WJunHong"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2022-03-29"},{"lineNumber":5,"author":{"gitId":"chuashihong"},"content":"import static seedu.address.logic.commands.BuyerCommandTestUtil.assertCommandFailure;","lastModifiedDate":"2022-04-07"},{"lineNumber":6,"author":{"gitId":"chuashihong"},"content":"import static seedu.address.logic.commands.BuyerCommandTestUtil.assertCommandSuccess;","lastModifiedDate":"2022-04-07"},{"lineNumber":7,"author":{"gitId":"chuashihong"},"content":"import static seedu.address.logic.commands.BuyerCommandTestUtil.showBuyerAtIndex;","lastModifiedDate":"2022-04-07"},{"lineNumber":8,"author":{"gitId":"WJunHong"},"content":"import static seedu.address.testutil.TypicalIndexes.INDEX_FIRST_CLIENT;","lastModifiedDate":"2022-03-29"},{"lineNumber":9,"author":{"gitId":"WJunHong"},"content":"import static seedu.address.testutil.TypicalIndexes.INDEX_SECOND_CLIENT;","lastModifiedDate":"2022-03-29"},{"lineNumber":10,"author":{"gitId":"WJunHong"},"content":"","lastModifiedDate":"2022-03-29"},{"lineNumber":11,"author":{"gitId":"WJunHong"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2022-03-29"},{"lineNumber":12,"author":{"gitId":"WJunHong"},"content":"","lastModifiedDate":"2022-03-29"},{"lineNumber":13,"author":{"gitId":"WJunHong"},"content":"import seedu.address.commons.core.Messages;","lastModifiedDate":"2022-03-29"},{"lineNumber":14,"author":{"gitId":"WJunHong"},"content":"import seedu.address.commons.core.index.Index;","lastModifiedDate":"2022-03-29"},{"lineNumber":15,"author":{"gitId":"WJunHong"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2022-03-29"},{"lineNumber":16,"author":{"gitId":"WJunHong"},"content":"import seedu.address.model.ModelManager;","lastModifiedDate":"2022-03-29"},{"lineNumber":17,"author":{"gitId":"WJunHong"},"content":"import seedu.address.model.SellerAddressBook;","lastModifiedDate":"2022-03-29"},{"lineNumber":18,"author":{"gitId":"WJunHong"},"content":"import seedu.address.model.UserPrefs;","lastModifiedDate":"2022-03-29"},{"lineNumber":19,"author":{"gitId":"WJunHong"},"content":"import seedu.address.model.buyer.Buyer;","lastModifiedDate":"2022-03-29"},{"lineNumber":20,"author":{"gitId":"WJunHong"},"content":"import seedu.address.testutil.TypicalBuyers;","lastModifiedDate":"2022-03-29"},{"lineNumber":21,"author":{"gitId":"WJunHong"},"content":"import seedu.address.testutil.TypicalClients;","lastModifiedDate":"2022-03-29"},{"lineNumber":22,"author":{"gitId":"WJunHong"},"content":"","lastModifiedDate":"2022-03-29"},{"lineNumber":23,"author":{"gitId":"WJunHong"},"content":"public class DeleteBuyerCommandTest {","lastModifiedDate":"2022-03-29"},{"lineNumber":24,"author":{"gitId":"WJunHong"},"content":"","lastModifiedDate":"2022-03-29"},{"lineNumber":25,"author":{"gitId":"WJunHong"},"content":"    private Model model \u003d new ModelManager(TypicalClients.getTypicalAddressBook(), new UserPrefs(),","lastModifiedDate":"2022-03-29"},{"lineNumber":26,"author":{"gitId":"chuashihong"},"content":"            new SellerAddressBook(), TypicalBuyers.getTypicalBuyerAddressBook());","lastModifiedDate":"2022-03-30"},{"lineNumber":27,"author":{"gitId":"WJunHong"},"content":"","lastModifiedDate":"2022-03-29"},{"lineNumber":28,"author":{"gitId":"WJunHong"},"content":"    @Test","lastModifiedDate":"2022-03-29"},{"lineNumber":29,"author":{"gitId":"WJunHong"},"content":"    public void execute_validIndexUnfilteredList_success() {","lastModifiedDate":"2022-03-29"},{"lineNumber":30,"author":{"gitId":"WJunHong"},"content":"        Buyer buyerToDelete \u003d model.getFilteredBuyerList().get(INDEX_FIRST_CLIENT.getZeroBased());","lastModifiedDate":"2022-03-29"},{"lineNumber":31,"author":{"gitId":"WJunHong"},"content":"        DeleteBuyerCommand deleteCommand \u003d new DeleteBuyerCommand(INDEX_FIRST_CLIENT);","lastModifiedDate":"2022-03-29"},{"lineNumber":32,"author":{"gitId":"WJunHong"},"content":"","lastModifiedDate":"2022-03-29"},{"lineNumber":33,"author":{"gitId":"WJunHong"},"content":"        String expectedMessage \u003d String.format(DeleteBuyerCommand.MESSAGE_DELETE_CLIENT_SUCCESS, buyerToDelete);","lastModifiedDate":"2022-03-29"},{"lineNumber":34,"author":{"gitId":"WJunHong"},"content":"","lastModifiedDate":"2022-03-29"},{"lineNumber":35,"author":{"gitId":"WJunHong"},"content":"        ModelManager expectedModel \u003d new ModelManager(model.getAddressBook(), new UserPrefs(), new SellerAddressBook(),","lastModifiedDate":"2022-03-29"},{"lineNumber":36,"author":{"gitId":"chuashihong"},"content":"                TypicalBuyers.getTypicalBuyerAddressBook());","lastModifiedDate":"2022-03-30"},{"lineNumber":37,"author":{"gitId":"WJunHong"},"content":"        expectedModel.deleteBuyer(buyerToDelete);","lastModifiedDate":"2022-03-29"},{"lineNumber":38,"author":{"gitId":"WJunHong"},"content":"","lastModifiedDate":"2022-03-29"},{"lineNumber":39,"author":{"gitId":"WJunHong"},"content":"        assertCommandSuccess(deleteCommand, model, expectedMessage, expectedModel);","lastModifiedDate":"2022-03-29"},{"lineNumber":40,"author":{"gitId":"WJunHong"},"content":"    }","lastModifiedDate":"2022-03-29"},{"lineNumber":41,"author":{"gitId":"WJunHong"},"content":"","lastModifiedDate":"2022-03-29"},{"lineNumber":42,"author":{"gitId":"WJunHong"},"content":"    @Test","lastModifiedDate":"2022-03-29"},{"lineNumber":43,"author":{"gitId":"WJunHong"},"content":"    public void execute_invalidIndexUnfilteredList_throwsCommandException() {","lastModifiedDate":"2022-03-29"},{"lineNumber":44,"author":{"gitId":"WJunHong"},"content":"        Index outOfBoundIndex \u003d Index.fromOneBased(model.getFilteredBuyerList().size() + 1);","lastModifiedDate":"2022-03-29"},{"lineNumber":45,"author":{"gitId":"WJunHong"},"content":"        DeleteBuyerCommand deleteCommand \u003d new DeleteBuyerCommand(outOfBoundIndex);","lastModifiedDate":"2022-03-29"},{"lineNumber":46,"author":{"gitId":"WJunHong"},"content":"","lastModifiedDate":"2022-03-29"},{"lineNumber":47,"author":{"gitId":"WJunHong"},"content":"        assertCommandFailure(deleteCommand, model, Messages.MESSAGE_INVALID_BUYER_DISPLAYED_INDEX);","lastModifiedDate":"2022-04-06"},{"lineNumber":48,"author":{"gitId":"WJunHong"},"content":"    }","lastModifiedDate":"2022-03-29"},{"lineNumber":49,"author":{"gitId":"WJunHong"},"content":"","lastModifiedDate":"2022-03-29"},{"lineNumber":50,"author":{"gitId":"WJunHong"},"content":"    @Test","lastModifiedDate":"2022-03-29"},{"lineNumber":51,"author":{"gitId":"WJunHong"},"content":"    public void execute_validIndexFilteredList_success() {","lastModifiedDate":"2022-03-29"},{"lineNumber":52,"author":{"gitId":"WJunHong"},"content":"        showBuyerAtIndex(model, INDEX_FIRST_CLIENT);","lastModifiedDate":"2022-03-29"},{"lineNumber":53,"author":{"gitId":"WJunHong"},"content":"","lastModifiedDate":"2022-03-29"},{"lineNumber":54,"author":{"gitId":"WJunHong"},"content":"        Buyer buyerToDelete \u003d model.getFilteredBuyerList().get(INDEX_FIRST_CLIENT.getZeroBased());","lastModifiedDate":"2022-03-29"},{"lineNumber":55,"author":{"gitId":"WJunHong"},"content":"        DeleteBuyerCommand deleteCommand \u003d new DeleteBuyerCommand(INDEX_FIRST_CLIENT);","lastModifiedDate":"2022-03-29"},{"lineNumber":56,"author":{"gitId":"WJunHong"},"content":"","lastModifiedDate":"2022-03-29"},{"lineNumber":57,"author":{"gitId":"WJunHong"},"content":"        String expectedMessage \u003d String.format(DeleteBuyerCommand.MESSAGE_DELETE_CLIENT_SUCCESS, buyerToDelete);","lastModifiedDate":"2022-03-29"},{"lineNumber":58,"author":{"gitId":"WJunHong"},"content":"","lastModifiedDate":"2022-03-29"},{"lineNumber":59,"author":{"gitId":"WJunHong"},"content":"        Model expectedModel \u003d new ModelManager(model.getAddressBook(), new UserPrefs(), new SellerAddressBook(),","lastModifiedDate":"2022-03-29"},{"lineNumber":60,"author":{"gitId":"chuashihong"},"content":"                TypicalBuyers.getTypicalBuyerAddressBook());","lastModifiedDate":"2022-03-30"},{"lineNumber":61,"author":{"gitId":"WJunHong"},"content":"        expectedModel.deleteBuyer(buyerToDelete);","lastModifiedDate":"2022-03-29"},{"lineNumber":62,"author":{"gitId":"WJunHong"},"content":"        showNobuyer(expectedModel);","lastModifiedDate":"2022-03-29"},{"lineNumber":63,"author":{"gitId":"WJunHong"},"content":"","lastModifiedDate":"2022-03-29"},{"lineNumber":64,"author":{"gitId":"WJunHong"},"content":"        assertCommandSuccess(deleteCommand, model, expectedMessage, expectedModel);","lastModifiedDate":"2022-03-29"},{"lineNumber":65,"author":{"gitId":"WJunHong"},"content":"    }","lastModifiedDate":"2022-03-29"},{"lineNumber":66,"author":{"gitId":"WJunHong"},"content":"","lastModifiedDate":"2022-03-29"},{"lineNumber":67,"author":{"gitId":"WJunHong"},"content":"    @Test","lastModifiedDate":"2022-03-29"},{"lineNumber":68,"author":{"gitId":"WJunHong"},"content":"    public void execute_invalidIndexFilteredList_throwsCommandException() {","lastModifiedDate":"2022-03-29"},{"lineNumber":69,"author":{"gitId":"WJunHong"},"content":"        showBuyerAtIndex(model, INDEX_FIRST_CLIENT);","lastModifiedDate":"2022-03-29"},{"lineNumber":70,"author":{"gitId":"WJunHong"},"content":"","lastModifiedDate":"2022-03-29"},{"lineNumber":71,"author":{"gitId":"WJunHong"},"content":"        Index outOfBoundIndex \u003d INDEX_SECOND_CLIENT;","lastModifiedDate":"2022-03-29"},{"lineNumber":72,"author":{"gitId":"WJunHong"},"content":"        // ensures that outOfBoundIndex is still in bounds of address book list","lastModifiedDate":"2022-03-29"},{"lineNumber":73,"author":{"gitId":"WJunHong"},"content":"        assertTrue(outOfBoundIndex.getZeroBased() \u003c model.getBuyerAddressBook().getBuyerList().size());","lastModifiedDate":"2022-03-29"},{"lineNumber":74,"author":{"gitId":"WJunHong"},"content":"","lastModifiedDate":"2022-03-29"},{"lineNumber":75,"author":{"gitId":"WJunHong"},"content":"        DeleteBuyerCommand deleteCommand \u003d new DeleteBuyerCommand(outOfBoundIndex);","lastModifiedDate":"2022-03-29"},{"lineNumber":76,"author":{"gitId":"WJunHong"},"content":"","lastModifiedDate":"2022-03-29"},{"lineNumber":77,"author":{"gitId":"WJunHong"},"content":"        assertCommandFailure(deleteCommand, model, Messages.MESSAGE_INVALID_BUYER_DISPLAYED_INDEX);","lastModifiedDate":"2022-04-06"},{"lineNumber":78,"author":{"gitId":"WJunHong"},"content":"    }","lastModifiedDate":"2022-03-29"},{"lineNumber":79,"author":{"gitId":"WJunHong"},"content":"","lastModifiedDate":"2022-03-29"},{"lineNumber":80,"author":{"gitId":"WJunHong"},"content":"    @Test","lastModifiedDate":"2022-03-29"},{"lineNumber":81,"author":{"gitId":"WJunHong"},"content":"    public void equals() {","lastModifiedDate":"2022-03-29"},{"lineNumber":82,"author":{"gitId":"WJunHong"},"content":"        DeleteBuyerCommand deleteFirstCommand \u003d new DeleteBuyerCommand(INDEX_FIRST_CLIENT);","lastModifiedDate":"2022-03-29"},{"lineNumber":83,"author":{"gitId":"WJunHong"},"content":"        DeleteBuyerCommand deleteSecondCommand \u003d new DeleteBuyerCommand(INDEX_SECOND_CLIENT);","lastModifiedDate":"2022-03-29"},{"lineNumber":84,"author":{"gitId":"WJunHong"},"content":"","lastModifiedDate":"2022-03-29"},{"lineNumber":85,"author":{"gitId":"WJunHong"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2022-03-29"},{"lineNumber":86,"author":{"gitId":"WJunHong"},"content":"        assertTrue(deleteFirstCommand.equals(deleteFirstCommand));","lastModifiedDate":"2022-03-29"},{"lineNumber":87,"author":{"gitId":"WJunHong"},"content":"","lastModifiedDate":"2022-03-29"},{"lineNumber":88,"author":{"gitId":"WJunHong"},"content":"        // same values -\u003e returns true","lastModifiedDate":"2022-03-29"},{"lineNumber":89,"author":{"gitId":"WJunHong"},"content":"        DeleteBuyerCommand deleteFirstCommandCopy \u003d new DeleteBuyerCommand(INDEX_FIRST_CLIENT);","lastModifiedDate":"2022-03-29"},{"lineNumber":90,"author":{"gitId":"WJunHong"},"content":"        assertTrue(deleteFirstCommand.equals(deleteFirstCommandCopy));","lastModifiedDate":"2022-03-29"},{"lineNumber":91,"author":{"gitId":"WJunHong"},"content":"","lastModifiedDate":"2022-03-29"},{"lineNumber":92,"author":{"gitId":"WJunHong"},"content":"        // different types -\u003e returns false","lastModifiedDate":"2022-03-29"},{"lineNumber":93,"author":{"gitId":"WJunHong"},"content":"        assertFalse(deleteFirstCommand.equals(1));","lastModifiedDate":"2022-03-29"},{"lineNumber":94,"author":{"gitId":"WJunHong"},"content":"","lastModifiedDate":"2022-03-29"},{"lineNumber":95,"author":{"gitId":"WJunHong"},"content":"        // null -\u003e returns false","lastModifiedDate":"2022-03-29"},{"lineNumber":96,"author":{"gitId":"WJunHong"},"content":"        assertFalse(deleteFirstCommand.equals(null));","lastModifiedDate":"2022-03-29"},{"lineNumber":97,"author":{"gitId":"WJunHong"},"content":"","lastModifiedDate":"2022-03-29"},{"lineNumber":98,"author":{"gitId":"WJunHong"},"content":"        // different buyer -\u003e returns false","lastModifiedDate":"2022-03-29"},{"lineNumber":99,"author":{"gitId":"WJunHong"},"content":"        assertFalse(deleteFirstCommand.equals(deleteSecondCommand));","lastModifiedDate":"2022-03-29"},{"lineNumber":100,"author":{"gitId":"WJunHong"},"content":"    }","lastModifiedDate":"2022-03-29"},{"lineNumber":101,"author":{"gitId":"WJunHong"},"content":"","lastModifiedDate":"2022-03-29"},{"lineNumber":102,"author":{"gitId":"WJunHong"},"content":"    /**","lastModifiedDate":"2022-03-29"},{"lineNumber":103,"author":{"gitId":"WJunHong"},"content":"     * Updates {@code model}\u0027s filtered list to show no one.","lastModifiedDate":"2022-03-29"},{"lineNumber":104,"author":{"gitId":"WJunHong"},"content":"     */","lastModifiedDate":"2022-03-29"},{"lineNumber":105,"author":{"gitId":"WJunHong"},"content":"    private void showNobuyer(Model model) {","lastModifiedDate":"2022-03-29"},{"lineNumber":106,"author":{"gitId":"WJunHong"},"content":"        model.updateFilteredBuyerList(p -\u003e false);","lastModifiedDate":"2022-03-29"},{"lineNumber":107,"author":{"gitId":"WJunHong"},"content":"","lastModifiedDate":"2022-03-29"},{"lineNumber":108,"author":{"gitId":"WJunHong"},"content":"        assertTrue(model.getFilteredBuyerList().isEmpty());","lastModifiedDate":"2022-03-29"},{"lineNumber":109,"author":{"gitId":"WJunHong"},"content":"    }","lastModifiedDate":"2022-03-29"},{"lineNumber":110,"author":{"gitId":"WJunHong"},"content":"}","lastModifiedDate":"2022-03-29"}],"authorContributionMap":{"WJunHong":104,"chuashihong":6}},{"path":"src/test/java/seedu/address/logic/commands/DeleteSellerCommandTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"chuashihong"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2022-03-30"},{"lineNumber":2,"author":{"gitId":"chuashihong"},"content":"","lastModifiedDate":"2022-03-30"},{"lineNumber":3,"author":{"gitId":"chuashihong"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2022-03-30"},{"lineNumber":4,"author":{"gitId":"chuashihong"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2022-03-30"},{"lineNumber":5,"author":{"gitId":"chuashihong"},"content":"import static seedu.address.logic.commands.SellerCommandTestUtil.assertCommandSuccess;","lastModifiedDate":"2022-04-07"},{"lineNumber":6,"author":{"gitId":"chuashihong"},"content":"import static seedu.address.logic.commands.SellerCommandTestUtil.assertSellerCommandFailure;","lastModifiedDate":"2022-04-07"},{"lineNumber":7,"author":{"gitId":"chuashihong"},"content":"import static seedu.address.logic.commands.SellerCommandTestUtil.showSellerAtIndex;","lastModifiedDate":"2022-04-07"},{"lineNumber":8,"author":{"gitId":"chuashihong"},"content":"import static seedu.address.testutil.TypicalIndexes.INDEX_FIRST_SELLER;","lastModifiedDate":"2022-03-30"},{"lineNumber":9,"author":{"gitId":"chuashihong"},"content":"import static seedu.address.testutil.TypicalIndexes.INDEX_SECOND_SELLER;","lastModifiedDate":"2022-03-30"},{"lineNumber":10,"author":{"gitId":"chuashihong"},"content":"","lastModifiedDate":"2022-03-30"},{"lineNumber":11,"author":{"gitId":"chuashihong"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2022-03-30"},{"lineNumber":12,"author":{"gitId":"chuashihong"},"content":"","lastModifiedDate":"2022-03-30"},{"lineNumber":13,"author":{"gitId":"chuashihong"},"content":"import seedu.address.commons.core.Messages;","lastModifiedDate":"2022-03-30"},{"lineNumber":14,"author":{"gitId":"chuashihong"},"content":"import seedu.address.commons.core.index.Index;","lastModifiedDate":"2022-03-30"},{"lineNumber":15,"author":{"gitId":"chuashihong"},"content":"import seedu.address.model.BuyerAddressBook;","lastModifiedDate":"2022-03-30"},{"lineNumber":16,"author":{"gitId":"chuashihong"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2022-03-30"},{"lineNumber":17,"author":{"gitId":"chuashihong"},"content":"import seedu.address.model.ModelManager;","lastModifiedDate":"2022-03-30"},{"lineNumber":18,"author":{"gitId":"chuashihong"},"content":"import seedu.address.model.UserPrefs;","lastModifiedDate":"2022-03-30"},{"lineNumber":19,"author":{"gitId":"chuashihong"},"content":"import seedu.address.model.seller.Seller;","lastModifiedDate":"2022-03-30"},{"lineNumber":20,"author":{"gitId":"chuashihong"},"content":"import seedu.address.testutil.TypicalClients;","lastModifiedDate":"2022-03-30"},{"lineNumber":21,"author":{"gitId":"chuashihong"},"content":"import seedu.address.testutil.TypicalSellers;","lastModifiedDate":"2022-03-30"},{"lineNumber":22,"author":{"gitId":"chuashihong"},"content":"","lastModifiedDate":"2022-03-30"},{"lineNumber":23,"author":{"gitId":"chuashihong"},"content":"/**","lastModifiedDate":"2022-03-30"},{"lineNumber":24,"author":{"gitId":"chuashihong"},"content":" * Contains integration tests (interaction with the Model) and unit tests for","lastModifiedDate":"2022-03-30"},{"lineNumber":25,"author":{"gitId":"chuashihong"},"content":" * {@code DeleteCommand}.","lastModifiedDate":"2022-03-30"},{"lineNumber":26,"author":{"gitId":"chuashihong"},"content":" */","lastModifiedDate":"2022-03-30"},{"lineNumber":27,"author":{"gitId":"chuashihong"},"content":"public class DeleteSellerCommandTest {","lastModifiedDate":"2022-03-30"},{"lineNumber":28,"author":{"gitId":"chuashihong"},"content":"","lastModifiedDate":"2022-03-30"},{"lineNumber":29,"author":{"gitId":"chuashihong"},"content":"    private Model model \u003d new ModelManager(TypicalClients.getTypicalAddressBook(), new UserPrefs(),","lastModifiedDate":"2022-03-30"},{"lineNumber":30,"author":{"gitId":"chuashihong"},"content":"            TypicalSellers.getTypicalSellerAddressBook(), new BuyerAddressBook());","lastModifiedDate":"2022-03-30"},{"lineNumber":31,"author":{"gitId":"chuashihong"},"content":"","lastModifiedDate":"2022-03-30"},{"lineNumber":32,"author":{"gitId":"chuashihong"},"content":"    @Test","lastModifiedDate":"2022-03-30"},{"lineNumber":33,"author":{"gitId":"chuashihong"},"content":"    public void execute_validIndexUnfilteredList_success() {","lastModifiedDate":"2022-03-30"},{"lineNumber":34,"author":{"gitId":"chuashihong"},"content":"        Seller sellerToDelete \u003d model.getFilteredSellerList().get(INDEX_FIRST_SELLER.getZeroBased());","lastModifiedDate":"2022-03-30"},{"lineNumber":35,"author":{"gitId":"chuashihong"},"content":"        DeleteSellerCommand deleteSellerCommand \u003d new DeleteSellerCommand(INDEX_FIRST_SELLER);","lastModifiedDate":"2022-03-30"},{"lineNumber":36,"author":{"gitId":"chuashihong"},"content":"","lastModifiedDate":"2022-03-30"},{"lineNumber":37,"author":{"gitId":"chuashihong"},"content":"        String expectedMessage \u003d String.format(DeleteSellerCommand.MESSAGE_DELETE_SELLER_SUCCESS, sellerToDelete);","lastModifiedDate":"2022-03-30"},{"lineNumber":38,"author":{"gitId":"chuashihong"},"content":"","lastModifiedDate":"2022-03-30"},{"lineNumber":39,"author":{"gitId":"chuashihong"},"content":"        ModelManager expectedModel \u003d new ModelManager(model.getAddressBook(), new UserPrefs(),","lastModifiedDate":"2022-03-30"},{"lineNumber":40,"author":{"gitId":"chuashihong"},"content":"                TypicalSellers.getTypicalSellerAddressBook(), new BuyerAddressBook());","lastModifiedDate":"2022-03-30"},{"lineNumber":41,"author":{"gitId":"chuashihong"},"content":"        expectedModel.deleteSeller(sellerToDelete);","lastModifiedDate":"2022-03-30"},{"lineNumber":42,"author":{"gitId":"chuashihong"},"content":"","lastModifiedDate":"2022-03-30"},{"lineNumber":43,"author":{"gitId":"chuashihong"},"content":"        assertCommandSuccess(deleteSellerCommand, model, expectedMessage, expectedModel);","lastModifiedDate":"2022-03-30"},{"lineNumber":44,"author":{"gitId":"chuashihong"},"content":"    }","lastModifiedDate":"2022-03-30"},{"lineNumber":45,"author":{"gitId":"chuashihong"},"content":"","lastModifiedDate":"2022-03-30"},{"lineNumber":46,"author":{"gitId":"chuashihong"},"content":"    @Test","lastModifiedDate":"2022-03-30"},{"lineNumber":47,"author":{"gitId":"chuashihong"},"content":"    public void execute_invalidIndexUnfilteredList_throwsCommandException() {","lastModifiedDate":"2022-03-30"},{"lineNumber":48,"author":{"gitId":"chuashihong"},"content":"        Index outOfBoundIndex \u003d Index.fromOneBased(model.getFilteredSellerList().size() + 1);","lastModifiedDate":"2022-03-30"},{"lineNumber":49,"author":{"gitId":"chuashihong"},"content":"        DeleteSellerCommand deleteSellerCommand \u003d new DeleteSellerCommand(outOfBoundIndex);","lastModifiedDate":"2022-03-30"},{"lineNumber":50,"author":{"gitId":"chuashihong"},"content":"        assertSellerCommandFailure(deleteSellerCommand, model, Messages.MESSAGE_INVALID_SELLER_DISPLAYED_INDEX);","lastModifiedDate":"2022-03-30"},{"lineNumber":51,"author":{"gitId":"chuashihong"},"content":"    }","lastModifiedDate":"2022-03-30"},{"lineNumber":52,"author":{"gitId":"chuashihong"},"content":"","lastModifiedDate":"2022-03-30"},{"lineNumber":53,"author":{"gitId":"chuashihong"},"content":"    @Test","lastModifiedDate":"2022-03-30"},{"lineNumber":54,"author":{"gitId":"chuashihong"},"content":"    public void execute_validIndexFilteredList_success() {","lastModifiedDate":"2022-03-30"},{"lineNumber":55,"author":{"gitId":"chuashihong"},"content":"        showSellerAtIndex(model, INDEX_FIRST_SELLER);","lastModifiedDate":"2022-03-30"},{"lineNumber":56,"author":{"gitId":"chuashihong"},"content":"","lastModifiedDate":"2022-03-30"},{"lineNumber":57,"author":{"gitId":"chuashihong"},"content":"        Seller sellerToDelete \u003d model.getFilteredSellerList().get(INDEX_FIRST_SELLER.getZeroBased());","lastModifiedDate":"2022-03-30"},{"lineNumber":58,"author":{"gitId":"chuashihong"},"content":"        DeleteSellerCommand deleteSellerCommand \u003d new DeleteSellerCommand(INDEX_FIRST_SELLER);","lastModifiedDate":"2022-03-30"},{"lineNumber":59,"author":{"gitId":"chuashihong"},"content":"","lastModifiedDate":"2022-03-30"},{"lineNumber":60,"author":{"gitId":"chuashihong"},"content":"        String expectedMessage \u003d String.format(DeleteSellerCommand.MESSAGE_DELETE_SELLER_SUCCESS, sellerToDelete);","lastModifiedDate":"2022-03-30"},{"lineNumber":61,"author":{"gitId":"chuashihong"},"content":"","lastModifiedDate":"2022-03-30"},{"lineNumber":62,"author":{"gitId":"chuashihong"},"content":"        Model expectedModel \u003d new ModelManager(model.getAddressBook(), new UserPrefs(),","lastModifiedDate":"2022-03-30"},{"lineNumber":63,"author":{"gitId":"chuashihong"},"content":"                TypicalSellers.getTypicalSellerAddressBook(), new BuyerAddressBook());","lastModifiedDate":"2022-03-30"},{"lineNumber":64,"author":{"gitId":"chuashihong"},"content":"        expectedModel.deleteSeller(sellerToDelete);","lastModifiedDate":"2022-03-30"},{"lineNumber":65,"author":{"gitId":"chuashihong"},"content":"        showNoSeller(expectedModel);","lastModifiedDate":"2022-03-30"},{"lineNumber":66,"author":{"gitId":"chuashihong"},"content":"","lastModifiedDate":"2022-03-30"},{"lineNumber":67,"author":{"gitId":"chuashihong"},"content":"        assertCommandSuccess(deleteSellerCommand, model, expectedMessage, expectedModel);","lastModifiedDate":"2022-03-30"},{"lineNumber":68,"author":{"gitId":"chuashihong"},"content":"    }","lastModifiedDate":"2022-03-30"},{"lineNumber":69,"author":{"gitId":"chuashihong"},"content":"","lastModifiedDate":"2022-03-30"},{"lineNumber":70,"author":{"gitId":"chuashihong"},"content":"    @Test","lastModifiedDate":"2022-03-30"},{"lineNumber":71,"author":{"gitId":"chuashihong"},"content":"    public void execute_invalidIndexFilteredList_throwsCommandException() {","lastModifiedDate":"2022-03-30"},{"lineNumber":72,"author":{"gitId":"chuashihong"},"content":"        showSellerAtIndex(model, INDEX_FIRST_SELLER);","lastModifiedDate":"2022-03-30"},{"lineNumber":73,"author":{"gitId":"chuashihong"},"content":"","lastModifiedDate":"2022-03-30"},{"lineNumber":74,"author":{"gitId":"chuashihong"},"content":"        Index outOfBoundIndex \u003d INDEX_SECOND_SELLER;","lastModifiedDate":"2022-03-30"},{"lineNumber":75,"author":{"gitId":"chuashihong"},"content":"        // ensures that outOfBoundIndex is still in bounds of address book list","lastModifiedDate":"2022-03-30"},{"lineNumber":76,"author":{"gitId":"chuashihong"},"content":"        assertTrue(outOfBoundIndex.getZeroBased() \u003c model.getSellerAddressBook().getSellerList().size());","lastModifiedDate":"2022-03-30"},{"lineNumber":77,"author":{"gitId":"chuashihong"},"content":"","lastModifiedDate":"2022-03-30"},{"lineNumber":78,"author":{"gitId":"chuashihong"},"content":"        DeleteSellerCommand deleteSellerCommand \u003d new DeleteSellerCommand(outOfBoundIndex);","lastModifiedDate":"2022-03-30"},{"lineNumber":79,"author":{"gitId":"chuashihong"},"content":"","lastModifiedDate":"2022-03-30"},{"lineNumber":80,"author":{"gitId":"chuashihong"},"content":"        assertSellerCommandFailure(deleteSellerCommand, model, Messages.MESSAGE_INVALID_SELLER_DISPLAYED_INDEX);","lastModifiedDate":"2022-03-30"},{"lineNumber":81,"author":{"gitId":"chuashihong"},"content":"    }","lastModifiedDate":"2022-03-30"},{"lineNumber":82,"author":{"gitId":"chuashihong"},"content":"","lastModifiedDate":"2022-03-30"},{"lineNumber":83,"author":{"gitId":"chuashihong"},"content":"    @Test","lastModifiedDate":"2022-03-30"},{"lineNumber":84,"author":{"gitId":"chuashihong"},"content":"    public void equals() {","lastModifiedDate":"2022-03-30"},{"lineNumber":85,"author":{"gitId":"chuashihong"},"content":"        DeleteSellerCommand deleteFirstSellerCommand \u003d new DeleteSellerCommand(INDEX_FIRST_SELLER);","lastModifiedDate":"2022-03-30"},{"lineNumber":86,"author":{"gitId":"chuashihong"},"content":"        DeleteSellerCommand deleteSecondSellerCommand \u003d new DeleteSellerCommand(INDEX_SECOND_SELLER);","lastModifiedDate":"2022-03-30"},{"lineNumber":87,"author":{"gitId":"chuashihong"},"content":"","lastModifiedDate":"2022-03-30"},{"lineNumber":88,"author":{"gitId":"chuashihong"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2022-03-30"},{"lineNumber":89,"author":{"gitId":"chuashihong"},"content":"        assertTrue(deleteFirstSellerCommand.equals(deleteFirstSellerCommand));","lastModifiedDate":"2022-03-30"},{"lineNumber":90,"author":{"gitId":"chuashihong"},"content":"","lastModifiedDate":"2022-03-30"},{"lineNumber":91,"author":{"gitId":"chuashihong"},"content":"        // same values -\u003e returns true","lastModifiedDate":"2022-03-30"},{"lineNumber":92,"author":{"gitId":"chuashihong"},"content":"        DeleteSellerCommand deleteFirstSellerCommandCopy \u003d new DeleteSellerCommand(INDEX_FIRST_SELLER);","lastModifiedDate":"2022-03-30"},{"lineNumber":93,"author":{"gitId":"chuashihong"},"content":"        assertTrue(deleteFirstSellerCommand.equals(deleteFirstSellerCommandCopy));","lastModifiedDate":"2022-03-30"},{"lineNumber":94,"author":{"gitId":"chuashihong"},"content":"","lastModifiedDate":"2022-03-30"},{"lineNumber":95,"author":{"gitId":"chuashihong"},"content":"        // different types -\u003e returns false","lastModifiedDate":"2022-03-30"},{"lineNumber":96,"author":{"gitId":"chuashihong"},"content":"        assertFalse(deleteFirstSellerCommand.equals(1));","lastModifiedDate":"2022-03-30"},{"lineNumber":97,"author":{"gitId":"chuashihong"},"content":"","lastModifiedDate":"2022-03-30"},{"lineNumber":98,"author":{"gitId":"chuashihong"},"content":"        // null -\u003e returns false","lastModifiedDate":"2022-03-30"},{"lineNumber":99,"author":{"gitId":"chuashihong"},"content":"        assertFalse(deleteFirstSellerCommand.equals(null));","lastModifiedDate":"2022-03-30"},{"lineNumber":100,"author":{"gitId":"chuashihong"},"content":"","lastModifiedDate":"2022-03-30"},{"lineNumber":101,"author":{"gitId":"chuashihong"},"content":"        // different client -\u003e returns false","lastModifiedDate":"2022-03-30"},{"lineNumber":102,"author":{"gitId":"chuashihong"},"content":"        assertFalse(deleteFirstSellerCommand.equals(deleteSecondSellerCommand));","lastModifiedDate":"2022-03-30"},{"lineNumber":103,"author":{"gitId":"chuashihong"},"content":"    }","lastModifiedDate":"2022-03-30"},{"lineNumber":104,"author":{"gitId":"chuashihong"},"content":"","lastModifiedDate":"2022-03-30"},{"lineNumber":105,"author":{"gitId":"chuashihong"},"content":"    /**","lastModifiedDate":"2022-03-30"},{"lineNumber":106,"author":{"gitId":"chuashihong"},"content":"     * Updates {@code model}\u0027s filtered list to show no one.","lastModifiedDate":"2022-03-30"},{"lineNumber":107,"author":{"gitId":"chuashihong"},"content":"     */","lastModifiedDate":"2022-03-30"},{"lineNumber":108,"author":{"gitId":"chuashihong"},"content":"    private void showNoSeller(Model model) {","lastModifiedDate":"2022-03-30"},{"lineNumber":109,"author":{"gitId":"chuashihong"},"content":"        model.updateFilteredSellerList(p -\u003e false);","lastModifiedDate":"2022-03-30"},{"lineNumber":110,"author":{"gitId":"chuashihong"},"content":"","lastModifiedDate":"2022-03-30"},{"lineNumber":111,"author":{"gitId":"chuashihong"},"content":"        assertTrue(model.getFilteredSellerList().isEmpty());","lastModifiedDate":"2022-03-30"},{"lineNumber":112,"author":{"gitId":"chuashihong"},"content":"    }","lastModifiedDate":"2022-03-30"},{"lineNumber":113,"author":{"gitId":"chuashihong"},"content":"}","lastModifiedDate":"2022-03-30"}],"authorContributionMap":{"chuashihong":113}},{"path":"src/test/java/seedu/address/logic/commands/EditBuyerCommandTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"chuashihong"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2022-04-08"},{"lineNumber":2,"author":{"gitId":"chuashihong"},"content":"","lastModifiedDate":"2022-04-08"},{"lineNumber":3,"author":{"gitId":"chuashihong"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2022-04-08"},{"lineNumber":4,"author":{"gitId":"chuashihong"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2022-04-08"},{"lineNumber":5,"author":{"gitId":"chuashihong"},"content":"import static seedu.address.logic.commands.BuyerCommandTestUtil.DESC_AMY;","lastModifiedDate":"2022-04-08"},{"lineNumber":6,"author":{"gitId":"chuashihong"},"content":"import static seedu.address.logic.commands.BuyerCommandTestUtil.DESC_BOB;","lastModifiedDate":"2022-04-08"},{"lineNumber":7,"author":{"gitId":"chuashihong"},"content":"import static seedu.address.logic.commands.BuyerCommandTestUtil.VALID_NAME_BOB;","lastModifiedDate":"2022-04-08"},{"lineNumber":8,"author":{"gitId":"chuashihong"},"content":"import static seedu.address.logic.commands.BuyerCommandTestUtil.VALID_PHONE_BOB;","lastModifiedDate":"2022-04-08"},{"lineNumber":9,"author":{"gitId":"chuashihong"},"content":"import static seedu.address.logic.commands.BuyerCommandTestUtil.VALID_TAG_HUSBAND;","lastModifiedDate":"2022-04-08"},{"lineNumber":10,"author":{"gitId":"chuashihong"},"content":"import static seedu.address.logic.commands.BuyerCommandTestUtil.assertCommandFailure;","lastModifiedDate":"2022-04-08"},{"lineNumber":11,"author":{"gitId":"chuashihong"},"content":"import static seedu.address.logic.commands.BuyerCommandTestUtil.assertCommandSuccess;","lastModifiedDate":"2022-04-08"},{"lineNumber":12,"author":{"gitId":"chuashihong"},"content":"import static seedu.address.logic.commands.BuyerCommandTestUtil.showBuyerAtIndex;","lastModifiedDate":"2022-04-08"},{"lineNumber":13,"author":{"gitId":"chuashihong"},"content":"import static seedu.address.testutil.TypicalBuyers.getTypicalBuyerAddressBook;","lastModifiedDate":"2022-04-08"},{"lineNumber":14,"author":{"gitId":"chuashihong"},"content":"import static seedu.address.testutil.TypicalIndexes.INDEX_FIRST_BUYER;","lastModifiedDate":"2022-04-08"},{"lineNumber":15,"author":{"gitId":"chuashihong"},"content":"import static seedu.address.testutil.TypicalIndexes.INDEX_FIRST_SELLER;","lastModifiedDate":"2022-04-08"},{"lineNumber":16,"author":{"gitId":"chuashihong"},"content":"import static seedu.address.testutil.TypicalIndexes.INDEX_SECOND_BUYER;","lastModifiedDate":"2022-04-08"},{"lineNumber":17,"author":{"gitId":"chuashihong"},"content":"import static seedu.address.testutil.TypicalIndexes.INDEX_SECOND_SELLER;","lastModifiedDate":"2022-04-08"},{"lineNumber":18,"author":{"gitId":"chuashihong"},"content":"","lastModifiedDate":"2022-04-08"},{"lineNumber":19,"author":{"gitId":"chuashihong"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2022-04-08"},{"lineNumber":20,"author":{"gitId":"chuashihong"},"content":"","lastModifiedDate":"2022-04-08"},{"lineNumber":21,"author":{"gitId":"chuashihong"},"content":"import seedu.address.commons.core.Messages;","lastModifiedDate":"2022-04-08"},{"lineNumber":22,"author":{"gitId":"chuashihong"},"content":"import seedu.address.commons.core.index.Index;","lastModifiedDate":"2022-04-08"},{"lineNumber":23,"author":{"gitId":"chuashihong"},"content":"import seedu.address.logic.commands.EditBuyerCommand.EditBuyerDescriptor;","lastModifiedDate":"2022-04-08"},{"lineNumber":24,"author":{"gitId":"chuashihong"},"content":"import seedu.address.model.AddressBook;","lastModifiedDate":"2022-04-08"},{"lineNumber":25,"author":{"gitId":"chuashihong"},"content":"import seedu.address.model.BuyerAddressBook;","lastModifiedDate":"2022-04-08"},{"lineNumber":26,"author":{"gitId":"chuashihong"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2022-04-08"},{"lineNumber":27,"author":{"gitId":"chuashihong"},"content":"import seedu.address.model.ModelManager;","lastModifiedDate":"2022-04-08"},{"lineNumber":28,"author":{"gitId":"chuashihong"},"content":"import seedu.address.model.SellerAddressBook;","lastModifiedDate":"2022-04-08"},{"lineNumber":29,"author":{"gitId":"chuashihong"},"content":"import seedu.address.model.UserPrefs;","lastModifiedDate":"2022-04-08"},{"lineNumber":30,"author":{"gitId":"chuashihong"},"content":"import seedu.address.model.buyer.Buyer;","lastModifiedDate":"2022-04-08"},{"lineNumber":31,"author":{"gitId":"chuashihong"},"content":"import seedu.address.testutil.BuyerBuilder;","lastModifiedDate":"2022-04-08"},{"lineNumber":32,"author":{"gitId":"chuashihong"},"content":"import seedu.address.testutil.EditBuyerDescriptorBuilder;","lastModifiedDate":"2022-04-08"},{"lineNumber":33,"author":{"gitId":"chuashihong"},"content":"","lastModifiedDate":"2022-04-08"},{"lineNumber":34,"author":{"gitId":"chuashihong"},"content":"/**","lastModifiedDate":"2022-04-08"},{"lineNumber":35,"author":{"gitId":"chuashihong"},"content":" * Contains integration tests (interaction with the Model) and unit tests for EditCommand.","lastModifiedDate":"2022-04-08"},{"lineNumber":36,"author":{"gitId":"chuashihong"},"content":" */","lastModifiedDate":"2022-04-08"},{"lineNumber":37,"author":{"gitId":"chuashihong"},"content":"public class EditBuyerCommandTest {","lastModifiedDate":"2022-04-08"},{"lineNumber":38,"author":{"gitId":"chuashihong"},"content":"","lastModifiedDate":"2022-04-08"},{"lineNumber":39,"author":{"gitId":"chuashihong"},"content":"    private Model model \u003d new ModelManager(new AddressBook(), new UserPrefs(), new SellerAddressBook(),","lastModifiedDate":"2022-04-08"},{"lineNumber":40,"author":{"gitId":"chuashihong"},"content":"            getTypicalBuyerAddressBook());","lastModifiedDate":"2022-04-08"},{"lineNumber":41,"author":{"gitId":"chuashihong"},"content":"","lastModifiedDate":"2022-04-08"},{"lineNumber":42,"author":{"gitId":"chuashihong"},"content":"    @Test","lastModifiedDate":"2022-04-08"},{"lineNumber":43,"author":{"gitId":"chuashihong"},"content":"    public void execute_allFieldsSpecifiedUnfilteredList_success() {","lastModifiedDate":"2022-04-08"},{"lineNumber":44,"author":{"gitId":"chuashihong"},"content":"        Buyer editedBuyer \u003d new BuyerBuilder().build();","lastModifiedDate":"2022-04-08"},{"lineNumber":45,"author":{"gitId":"chuashihong"},"content":"        EditBuyerDescriptor descriptor \u003d new EditBuyerDescriptorBuilder(editedBuyer).build();","lastModifiedDate":"2022-04-08"},{"lineNumber":46,"author":{"gitId":"chuashihong"},"content":"        EditBuyerCommand editBuyerCommand \u003d new EditBuyerCommand(INDEX_FIRST_BUYER, descriptor);","lastModifiedDate":"2022-04-08"},{"lineNumber":47,"author":{"gitId":"chuashihong"},"content":"","lastModifiedDate":"2022-04-08"},{"lineNumber":48,"author":{"gitId":"chuashihong"},"content":"        String expectedMessage \u003d String.format(EditBuyerCommand.MESSAGE_EDIT_BUYER_SUCCESS, editedBuyer);","lastModifiedDate":"2022-04-08"},{"lineNumber":49,"author":{"gitId":"chuashihong"},"content":"        System.out.println(expectedMessage);","lastModifiedDate":"2022-04-08"},{"lineNumber":50,"author":{"gitId":"chuashihong"},"content":"        Model expectedModel \u003d new ModelManager(new AddressBook() , new UserPrefs(),","lastModifiedDate":"2022-04-08"},{"lineNumber":51,"author":{"gitId":"chuashihong"},"content":"                new SellerAddressBook(), new BuyerAddressBook(model.getBuyerAddressBook()));","lastModifiedDate":"2022-04-08"},{"lineNumber":52,"author":{"gitId":"chuashihong"},"content":"        expectedModel.setBuyer(model.getFilteredBuyerList().get(0), editedBuyer);","lastModifiedDate":"2022-04-08"},{"lineNumber":53,"author":{"gitId":"chuashihong"},"content":"        assertCommandSuccess(editBuyerCommand, model, expectedMessage, expectedModel);","lastModifiedDate":"2022-04-08"},{"lineNumber":54,"author":{"gitId":"chuashihong"},"content":"    }","lastModifiedDate":"2022-04-08"},{"lineNumber":55,"author":{"gitId":"chuashihong"},"content":"","lastModifiedDate":"2022-04-08"},{"lineNumber":56,"author":{"gitId":"chuashihong"},"content":"    @Test","lastModifiedDate":"2022-04-08"},{"lineNumber":57,"author":{"gitId":"chuashihong"},"content":"    public void execute_someFieldsSpecifiedUnfilteredList_success() {","lastModifiedDate":"2022-04-08"},{"lineNumber":58,"author":{"gitId":"chuashihong"},"content":"        Index indexLastBuyer \u003d Index.fromOneBased(model.getFilteredBuyerList().size());","lastModifiedDate":"2022-04-08"},{"lineNumber":59,"author":{"gitId":"chuashihong"},"content":"        Buyer lastBuyer \u003d model.getFilteredBuyerList().get(indexLastBuyer.getZeroBased());","lastModifiedDate":"2022-04-08"},{"lineNumber":60,"author":{"gitId":"chuashihong"},"content":"","lastModifiedDate":"2022-04-08"},{"lineNumber":61,"author":{"gitId":"chuashihong"},"content":"        BuyerBuilder buyerInList \u003d new BuyerBuilder(lastBuyer);","lastModifiedDate":"2022-04-08"},{"lineNumber":62,"author":{"gitId":"chuashihong"},"content":"        Buyer editedBuyer \u003d buyerInList.withName(VALID_NAME_BOB).withPhone(VALID_PHONE_BOB)","lastModifiedDate":"2022-04-08"},{"lineNumber":63,"author":{"gitId":"chuashihong"},"content":"                .withTags(VALID_TAG_HUSBAND).build();","lastModifiedDate":"2022-04-08"},{"lineNumber":64,"author":{"gitId":"chuashihong"},"content":"","lastModifiedDate":"2022-04-08"},{"lineNumber":65,"author":{"gitId":"chuashihong"},"content":"        EditBuyerDescriptor descriptor \u003d new EditBuyerDescriptorBuilder().withName(VALID_NAME_BOB)","lastModifiedDate":"2022-04-08"},{"lineNumber":66,"author":{"gitId":"chuashihong"},"content":"                .withPhone(VALID_PHONE_BOB).withTags(VALID_TAG_HUSBAND).build();","lastModifiedDate":"2022-04-08"},{"lineNumber":67,"author":{"gitId":"chuashihong"},"content":"        EditBuyerCommand editBuyerCommand \u003d new EditBuyerCommand(indexLastBuyer, descriptor);","lastModifiedDate":"2022-04-08"},{"lineNumber":68,"author":{"gitId":"chuashihong"},"content":"","lastModifiedDate":"2022-04-08"},{"lineNumber":69,"author":{"gitId":"chuashihong"},"content":"        String expectedMessage \u003d String.format(EditBuyerCommand.MESSAGE_EDIT_BUYER_SUCCESS, editedBuyer);","lastModifiedDate":"2022-04-08"},{"lineNumber":70,"author":{"gitId":"chuashihong"},"content":"","lastModifiedDate":"2022-04-08"},{"lineNumber":71,"author":{"gitId":"chuashihong"},"content":"        Model expectedModel \u003d new ModelManager(new AddressBook() , new UserPrefs(),","lastModifiedDate":"2022-04-08"},{"lineNumber":72,"author":{"gitId":"chuashihong"},"content":"                new SellerAddressBook(), new BuyerAddressBook(model.getBuyerAddressBook()));","lastModifiedDate":"2022-04-08"},{"lineNumber":73,"author":{"gitId":"chuashihong"},"content":"        expectedModel.setBuyer(lastBuyer, editedBuyer);","lastModifiedDate":"2022-04-08"},{"lineNumber":74,"author":{"gitId":"chuashihong"},"content":"","lastModifiedDate":"2022-04-08"},{"lineNumber":75,"author":{"gitId":"chuashihong"},"content":"        assertCommandSuccess(editBuyerCommand, model, expectedMessage, expectedModel);","lastModifiedDate":"2022-04-08"},{"lineNumber":76,"author":{"gitId":"chuashihong"},"content":"    }","lastModifiedDate":"2022-04-08"},{"lineNumber":77,"author":{"gitId":"chuashihong"},"content":"","lastModifiedDate":"2022-04-08"},{"lineNumber":78,"author":{"gitId":"chuashihong"},"content":"    @Test","lastModifiedDate":"2022-04-08"},{"lineNumber":79,"author":{"gitId":"chuashihong"},"content":"    public void execute_noFieldSpecifiedUnfilteredList_success() {","lastModifiedDate":"2022-04-08"},{"lineNumber":80,"author":{"gitId":"chuashihong"},"content":"        EditBuyerCommand editBuyerCommand \u003d new EditBuyerCommand(INDEX_FIRST_BUYER, new EditBuyerDescriptor());","lastModifiedDate":"2022-04-08"},{"lineNumber":81,"author":{"gitId":"chuashihong"},"content":"        Buyer editedBuyer \u003d model.getFilteredBuyerList().get(INDEX_FIRST_BUYER.getZeroBased());","lastModifiedDate":"2022-04-08"},{"lineNumber":82,"author":{"gitId":"chuashihong"},"content":"","lastModifiedDate":"2022-04-08"},{"lineNumber":83,"author":{"gitId":"chuashihong"},"content":"        String expectedMessage \u003d String.format(EditBuyerCommand.MESSAGE_EDIT_BUYER_SUCCESS, editedBuyer);","lastModifiedDate":"2022-04-08"},{"lineNumber":84,"author":{"gitId":"chuashihong"},"content":"","lastModifiedDate":"2022-04-08"},{"lineNumber":85,"author":{"gitId":"chuashihong"},"content":"        Model expectedModel \u003d new ModelManager(new AddressBook() , new UserPrefs(),","lastModifiedDate":"2022-04-08"},{"lineNumber":86,"author":{"gitId":"chuashihong"},"content":"                new SellerAddressBook(), new BuyerAddressBook(model.getBuyerAddressBook()));","lastModifiedDate":"2022-04-08"},{"lineNumber":87,"author":{"gitId":"chuashihong"},"content":"","lastModifiedDate":"2022-04-08"},{"lineNumber":88,"author":{"gitId":"chuashihong"},"content":"        assertCommandSuccess(editBuyerCommand, model, expectedMessage, expectedModel);","lastModifiedDate":"2022-04-08"},{"lineNumber":89,"author":{"gitId":"chuashihong"},"content":"    }","lastModifiedDate":"2022-04-08"},{"lineNumber":90,"author":{"gitId":"chuashihong"},"content":"","lastModifiedDate":"2022-04-08"},{"lineNumber":91,"author":{"gitId":"chuashihong"},"content":"    @Test","lastModifiedDate":"2022-04-08"},{"lineNumber":92,"author":{"gitId":"chuashihong"},"content":"    public void execute_filteredList_success() {","lastModifiedDate":"2022-04-08"},{"lineNumber":93,"author":{"gitId":"chuashihong"},"content":"        showBuyerAtIndex(model, INDEX_FIRST_BUYER);","lastModifiedDate":"2022-04-08"},{"lineNumber":94,"author":{"gitId":"chuashihong"},"content":"","lastModifiedDate":"2022-04-08"},{"lineNumber":95,"author":{"gitId":"chuashihong"},"content":"        Buyer buyerInFilteredList \u003d model.getFilteredBuyerList().get(INDEX_FIRST_BUYER.getZeroBased());","lastModifiedDate":"2022-04-08"},{"lineNumber":96,"author":{"gitId":"chuashihong"},"content":"        Buyer editedBuyer \u003d new BuyerBuilder(buyerInFilteredList).withName(VALID_NAME_BOB).build();","lastModifiedDate":"2022-04-08"},{"lineNumber":97,"author":{"gitId":"chuashihong"},"content":"        EditBuyerCommand editBuyerCommand \u003d new EditBuyerCommand(INDEX_FIRST_SELLER,","lastModifiedDate":"2022-04-08"},{"lineNumber":98,"author":{"gitId":"chuashihong"},"content":"                new EditBuyerDescriptorBuilder().withName(VALID_NAME_BOB).build());","lastModifiedDate":"2022-04-08"},{"lineNumber":99,"author":{"gitId":"chuashihong"},"content":"","lastModifiedDate":"2022-04-08"},{"lineNumber":100,"author":{"gitId":"chuashihong"},"content":"        String expectedMessage \u003d String.format(EditBuyerCommand.MESSAGE_EDIT_BUYER_SUCCESS, editedBuyer);","lastModifiedDate":"2022-04-08"},{"lineNumber":101,"author":{"gitId":"chuashihong"},"content":"","lastModifiedDate":"2022-04-08"},{"lineNumber":102,"author":{"gitId":"chuashihong"},"content":"        Model expectedModel \u003d new ModelManager(new AddressBook() , new UserPrefs(),","lastModifiedDate":"2022-04-08"},{"lineNumber":103,"author":{"gitId":"chuashihong"},"content":"                new SellerAddressBook(), new BuyerAddressBook(model.getBuyerAddressBook()));","lastModifiedDate":"2022-04-08"},{"lineNumber":104,"author":{"gitId":"chuashihong"},"content":"        expectedModel.setBuyer(model.getFilteredBuyerList().get(0), editedBuyer);","lastModifiedDate":"2022-04-08"},{"lineNumber":105,"author":{"gitId":"chuashihong"},"content":"","lastModifiedDate":"2022-04-08"},{"lineNumber":106,"author":{"gitId":"chuashihong"},"content":"        assertCommandSuccess(editBuyerCommand, model, expectedMessage, expectedModel);","lastModifiedDate":"2022-04-08"},{"lineNumber":107,"author":{"gitId":"chuashihong"},"content":"    }","lastModifiedDate":"2022-04-08"},{"lineNumber":108,"author":{"gitId":"chuashihong"},"content":"","lastModifiedDate":"2022-04-08"},{"lineNumber":109,"author":{"gitId":"chuashihong"},"content":"    @Test","lastModifiedDate":"2022-04-08"},{"lineNumber":110,"author":{"gitId":"chuashihong"},"content":"    public void execute_duplicateBuyerUnfilteredList_failure() {","lastModifiedDate":"2022-04-08"},{"lineNumber":111,"author":{"gitId":"chuashihong"},"content":"        Buyer firstBuyer \u003d model.getFilteredBuyerList().get(INDEX_FIRST_BUYER.getZeroBased());","lastModifiedDate":"2022-04-08"},{"lineNumber":112,"author":{"gitId":"chuashihong"},"content":"        EditBuyerDescriptor descriptor \u003d new EditBuyerDescriptorBuilder(firstBuyer).build();","lastModifiedDate":"2022-04-08"},{"lineNumber":113,"author":{"gitId":"chuashihong"},"content":"        EditBuyerCommand editBuyerCommand \u003d new EditBuyerCommand(INDEX_SECOND_BUYER, descriptor);","lastModifiedDate":"2022-04-08"},{"lineNumber":114,"author":{"gitId":"chuashihong"},"content":"","lastModifiedDate":"2022-04-08"},{"lineNumber":115,"author":{"gitId":"chuashihong"},"content":"        assertCommandFailure(editBuyerCommand, model, EditBuyerCommand.MESSAGE_DUPLICATE_BUYER);","lastModifiedDate":"2022-04-08"},{"lineNumber":116,"author":{"gitId":"chuashihong"},"content":"    }","lastModifiedDate":"2022-04-08"},{"lineNumber":117,"author":{"gitId":"chuashihong"},"content":"","lastModifiedDate":"2022-04-08"},{"lineNumber":118,"author":{"gitId":"chuashihong"},"content":"    @Test","lastModifiedDate":"2022-04-08"},{"lineNumber":119,"author":{"gitId":"chuashihong"},"content":"    public void execute_duplicateBuyerFilteredList_failure() {","lastModifiedDate":"2022-04-08"},{"lineNumber":120,"author":{"gitId":"chuashihong"},"content":"        showBuyerAtIndex(model, INDEX_FIRST_BUYER);","lastModifiedDate":"2022-04-08"},{"lineNumber":121,"author":{"gitId":"chuashihong"},"content":"","lastModifiedDate":"2022-04-08"},{"lineNumber":122,"author":{"gitId":"chuashihong"},"content":"        // edit seller in filtered list into a duplicate in address book","lastModifiedDate":"2022-04-08"},{"lineNumber":123,"author":{"gitId":"chuashihong"},"content":"        Buyer buyerInList \u003d model.getBuyerAddressBook().getBuyerList().get(INDEX_SECOND_SELLER.getZeroBased());","lastModifiedDate":"2022-04-08"},{"lineNumber":124,"author":{"gitId":"chuashihong"},"content":"        EditBuyerCommand editBuyerCommand \u003d new EditBuyerCommand(INDEX_FIRST_BUYER,","lastModifiedDate":"2022-04-08"},{"lineNumber":125,"author":{"gitId":"chuashihong"},"content":"                new EditBuyerDescriptorBuilder(buyerInList).build());","lastModifiedDate":"2022-04-08"},{"lineNumber":126,"author":{"gitId":"chuashihong"},"content":"","lastModifiedDate":"2022-04-08"},{"lineNumber":127,"author":{"gitId":"chuashihong"},"content":"        assertCommandFailure(editBuyerCommand, model, EditBuyerCommand.MESSAGE_DUPLICATE_BUYER);","lastModifiedDate":"2022-04-08"},{"lineNumber":128,"author":{"gitId":"chuashihong"},"content":"    }","lastModifiedDate":"2022-04-08"},{"lineNumber":129,"author":{"gitId":"chuashihong"},"content":"","lastModifiedDate":"2022-04-08"},{"lineNumber":130,"author":{"gitId":"chuashihong"},"content":"    @Test","lastModifiedDate":"2022-04-08"},{"lineNumber":131,"author":{"gitId":"chuashihong"},"content":"    public void execute_invalidBuyerIndexUnfilteredList_failure() {","lastModifiedDate":"2022-04-08"},{"lineNumber":132,"author":{"gitId":"chuashihong"},"content":"        Index outOfBoundIndex \u003d Index.fromOneBased(model.getFilteredBuyerList().size() + 1);","lastModifiedDate":"2022-04-08"},{"lineNumber":133,"author":{"gitId":"chuashihong"},"content":"        EditBuyerDescriptor descriptor \u003d new EditBuyerDescriptorBuilder().withName(VALID_NAME_BOB).build();","lastModifiedDate":"2022-04-08"},{"lineNumber":134,"author":{"gitId":"chuashihong"},"content":"        EditBuyerCommand editBuyerCommand \u003d new EditBuyerCommand(outOfBoundIndex, descriptor);","lastModifiedDate":"2022-04-08"},{"lineNumber":135,"author":{"gitId":"chuashihong"},"content":"","lastModifiedDate":"2022-04-08"},{"lineNumber":136,"author":{"gitId":"chuashihong"},"content":"        assertCommandFailure(editBuyerCommand, model, Messages.MESSAGE_INVALID_BUYER_DISPLAYED_INDEX);","lastModifiedDate":"2022-04-08"},{"lineNumber":137,"author":{"gitId":"chuashihong"},"content":"    }","lastModifiedDate":"2022-04-08"},{"lineNumber":138,"author":{"gitId":"chuashihong"},"content":"","lastModifiedDate":"2022-04-08"},{"lineNumber":139,"author":{"gitId":"chuashihong"},"content":"    /**","lastModifiedDate":"2022-04-08"},{"lineNumber":140,"author":{"gitId":"chuashihong"},"content":"     * Edit filtered list where index is larger than size of filtered list,","lastModifiedDate":"2022-04-08"},{"lineNumber":141,"author":{"gitId":"chuashihong"},"content":"     * but smaller than size of address book","lastModifiedDate":"2022-04-08"},{"lineNumber":142,"author":{"gitId":"chuashihong"},"content":"     */","lastModifiedDate":"2022-04-08"},{"lineNumber":143,"author":{"gitId":"chuashihong"},"content":"    @Test","lastModifiedDate":"2022-04-08"},{"lineNumber":144,"author":{"gitId":"chuashihong"},"content":"    public void execute_invalidBuyerIndexFilteredList_failure() {","lastModifiedDate":"2022-04-08"},{"lineNumber":145,"author":{"gitId":"chuashihong"},"content":"        showBuyerAtIndex(model, INDEX_FIRST_BUYER);","lastModifiedDate":"2022-04-08"},{"lineNumber":146,"author":{"gitId":"chuashihong"},"content":"        Index outOfBoundIndex \u003d INDEX_SECOND_BUYER;","lastModifiedDate":"2022-04-08"},{"lineNumber":147,"author":{"gitId":"chuashihong"},"content":"        // ensures that outOfBoundIndex is still in bounds of address book list","lastModifiedDate":"2022-04-08"},{"lineNumber":148,"author":{"gitId":"chuashihong"},"content":"        assertTrue(outOfBoundIndex.getZeroBased() \u003c model.getBuyerAddressBook().getBuyerList().size());","lastModifiedDate":"2022-04-08"},{"lineNumber":149,"author":{"gitId":"chuashihong"},"content":"","lastModifiedDate":"2022-04-08"},{"lineNumber":150,"author":{"gitId":"chuashihong"},"content":"        EditBuyerCommand editSellerCommand \u003d new EditBuyerCommand(outOfBoundIndex,","lastModifiedDate":"2022-04-08"},{"lineNumber":151,"author":{"gitId":"chuashihong"},"content":"                new EditBuyerDescriptorBuilder().withName(VALID_NAME_BOB).build());","lastModifiedDate":"2022-04-08"},{"lineNumber":152,"author":{"gitId":"chuashihong"},"content":"","lastModifiedDate":"2022-04-08"},{"lineNumber":153,"author":{"gitId":"chuashihong"},"content":"        assertCommandFailure(editSellerCommand, model, Messages.MESSAGE_INVALID_BUYER_DISPLAYED_INDEX);","lastModifiedDate":"2022-04-08"},{"lineNumber":154,"author":{"gitId":"chuashihong"},"content":"    }","lastModifiedDate":"2022-04-08"},{"lineNumber":155,"author":{"gitId":"chuashihong"},"content":"","lastModifiedDate":"2022-04-08"},{"lineNumber":156,"author":{"gitId":"chuashihong"},"content":"    @Test","lastModifiedDate":"2022-04-08"},{"lineNumber":157,"author":{"gitId":"chuashihong"},"content":"    public void equals() {","lastModifiedDate":"2022-04-08"},{"lineNumber":158,"author":{"gitId":"chuashihong"},"content":"        final EditBuyerCommand standardCommand \u003d new EditBuyerCommand(INDEX_FIRST_SELLER, DESC_AMY);","lastModifiedDate":"2022-04-08"},{"lineNumber":159,"author":{"gitId":"chuashihong"},"content":"","lastModifiedDate":"2022-04-08"},{"lineNumber":160,"author":{"gitId":"chuashihong"},"content":"        // same values -\u003e returns true","lastModifiedDate":"2022-04-08"},{"lineNumber":161,"author":{"gitId":"chuashihong"},"content":"        EditBuyerDescriptor copyDescriptor \u003d new EditBuyerDescriptor(DESC_AMY);","lastModifiedDate":"2022-04-08"},{"lineNumber":162,"author":{"gitId":"chuashihong"},"content":"        EditBuyerCommand commandWithSameValues \u003d new EditBuyerCommand(INDEX_FIRST_SELLER, copyDescriptor);","lastModifiedDate":"2022-04-08"},{"lineNumber":163,"author":{"gitId":"chuashihong"},"content":"        assertTrue(standardCommand.equals(commandWithSameValues));","lastModifiedDate":"2022-04-08"},{"lineNumber":164,"author":{"gitId":"chuashihong"},"content":"","lastModifiedDate":"2022-04-08"},{"lineNumber":165,"author":{"gitId":"chuashihong"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2022-04-08"},{"lineNumber":166,"author":{"gitId":"chuashihong"},"content":"        assertTrue(standardCommand.equals(standardCommand));","lastModifiedDate":"2022-04-08"},{"lineNumber":167,"author":{"gitId":"chuashihong"},"content":"","lastModifiedDate":"2022-04-08"},{"lineNumber":168,"author":{"gitId":"chuashihong"},"content":"        // null -\u003e returns false","lastModifiedDate":"2022-04-08"},{"lineNumber":169,"author":{"gitId":"chuashihong"},"content":"        assertFalse(standardCommand.equals(null));","lastModifiedDate":"2022-04-08"},{"lineNumber":170,"author":{"gitId":"chuashihong"},"content":"","lastModifiedDate":"2022-04-08"},{"lineNumber":171,"author":{"gitId":"chuashihong"},"content":"        // different types -\u003e returns false","lastModifiedDate":"2022-04-08"},{"lineNumber":172,"author":{"gitId":"chuashihong"},"content":"        assertFalse(standardCommand.equals(new ClearCommand()));","lastModifiedDate":"2022-04-08"},{"lineNumber":173,"author":{"gitId":"chuashihong"},"content":"","lastModifiedDate":"2022-04-08"},{"lineNumber":174,"author":{"gitId":"chuashihong"},"content":"        // different index -\u003e returns false","lastModifiedDate":"2022-04-08"},{"lineNumber":175,"author":{"gitId":"chuashihong"},"content":"        assertFalse(standardCommand.equals(new EditBuyerCommand(INDEX_SECOND_SELLER, DESC_AMY)));","lastModifiedDate":"2022-04-08"},{"lineNumber":176,"author":{"gitId":"chuashihong"},"content":"","lastModifiedDate":"2022-04-08"},{"lineNumber":177,"author":{"gitId":"chuashihong"},"content":"        // different descriptor -\u003e returns false","lastModifiedDate":"2022-04-08"},{"lineNumber":178,"author":{"gitId":"chuashihong"},"content":"        assertFalse(standardCommand.equals(new EditBuyerCommand(INDEX_FIRST_SELLER, DESC_BOB)));","lastModifiedDate":"2022-04-08"},{"lineNumber":179,"author":{"gitId":"chuashihong"},"content":"    }","lastModifiedDate":"2022-04-08"},{"lineNumber":180,"author":{"gitId":"chuashihong"},"content":"","lastModifiedDate":"2022-04-08"},{"lineNumber":181,"author":{"gitId":"chuashihong"},"content":"}","lastModifiedDate":"2022-04-08"}],"authorContributionMap":{"chuashihong":181}},{"path":"src/test/java/seedu/address/logic/commands/EditClientDescriptorTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"chuashihong"},"content":"//package seedu.address.logic.commands;","lastModifiedDate":"2022-04-07"},{"lineNumber":2,"author":{"gitId":"chuashihong"},"content":"//","lastModifiedDate":"2022-04-07"},{"lineNumber":3,"author":{"gitId":"chuashihong"},"content":"//import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2022-04-07"},{"lineNumber":4,"author":{"gitId":"chuashihong"},"content":"//import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2022-04-07"},{"lineNumber":5,"author":{"gitId":"chuashihong"},"content":"//import static seedu.address.logic.commands.CommandTestUtil.DESC_AMY;","lastModifiedDate":"2022-04-07"},{"lineNumber":6,"author":{"gitId":"chuashihong"},"content":"//import static seedu.address.logic.commands.CommandTestUtil.DESC_BOB;","lastModifiedDate":"2022-04-07"},{"lineNumber":7,"author":{"gitId":"chuashihong"},"content":"//import static seedu.address.logic.commands.CommandTestUtil.VALID_NAME_BOB;","lastModifiedDate":"2022-04-07"},{"lineNumber":8,"author":{"gitId":"chuashihong"},"content":"//import static seedu.address.logic.commands.CommandTestUtil.VALID_PHONE_BOB;","lastModifiedDate":"2022-04-07"},{"lineNumber":9,"author":{"gitId":"chuashihong"},"content":"//import static seedu.address.logic.commands.CommandTestUtil.VALID_TAG_HUSBAND;","lastModifiedDate":"2022-04-07"},{"lineNumber":10,"author":{"gitId":"chuashihong"},"content":"//","lastModifiedDate":"2022-04-07"},{"lineNumber":11,"author":{"gitId":"chuashihong"},"content":"//import org.junit.jupiter.api.Test;","lastModifiedDate":"2022-04-07"},{"lineNumber":12,"author":{"gitId":"chuashihong"},"content":"//","lastModifiedDate":"2022-04-07"},{"lineNumber":13,"author":{"gitId":"chuashihong"},"content":"//import seedu.address.logic.commands.EditCommand.EditclientDescriptor;","lastModifiedDate":"2022-04-07"},{"lineNumber":14,"author":{"gitId":"chuashihong"},"content":"//import seedu.address.testutil.EditClientDescriptorBuilder;","lastModifiedDate":"2022-04-07"},{"lineNumber":15,"author":{"gitId":"chuashihong"},"content":"//","lastModifiedDate":"2022-04-07"},{"lineNumber":16,"author":{"gitId":"chuashihong"},"content":"//public class EditClientDescriptorTest {","lastModifiedDate":"2022-04-07"},{"lineNumber":17,"author":{"gitId":"chuashihong"},"content":"//","lastModifiedDate":"2022-04-07"},{"lineNumber":18,"author":{"gitId":"chuashihong"},"content":"//    @Test","lastModifiedDate":"2022-04-07"},{"lineNumber":19,"author":{"gitId":"chuashihong"},"content":"//    public void equals() {","lastModifiedDate":"2022-04-07"},{"lineNumber":20,"author":{"gitId":"chuashihong"},"content":"//        // same values -\u003e returns true","lastModifiedDate":"2022-04-07"},{"lineNumber":21,"author":{"gitId":"chuashihong"},"content":"//        EditclientDescriptor descriptorWithSameValues \u003d new EditclientDescriptor(DESC_AMY);","lastModifiedDate":"2022-04-07"},{"lineNumber":22,"author":{"gitId":"chuashihong"},"content":"//        assertTrue(DESC_AMY.equals(descriptorWithSameValues));","lastModifiedDate":"2022-04-07"},{"lineNumber":23,"author":{"gitId":"chuashihong"},"content":"//","lastModifiedDate":"2022-04-07"},{"lineNumber":24,"author":{"gitId":"chuashihong"},"content":"//        // same object -\u003e returns true","lastModifiedDate":"2022-04-07"},{"lineNumber":25,"author":{"gitId":"chuashihong"},"content":"//        assertTrue(DESC_AMY.equals(DESC_AMY));","lastModifiedDate":"2022-04-07"},{"lineNumber":26,"author":{"gitId":"chuashihong"},"content":"//","lastModifiedDate":"2022-04-07"},{"lineNumber":27,"author":{"gitId":"chuashihong"},"content":"//        // null -\u003e returns false","lastModifiedDate":"2022-04-07"},{"lineNumber":28,"author":{"gitId":"chuashihong"},"content":"//        assertFalse(DESC_AMY.equals(null));","lastModifiedDate":"2022-04-07"},{"lineNumber":29,"author":{"gitId":"chuashihong"},"content":"//","lastModifiedDate":"2022-04-07"},{"lineNumber":30,"author":{"gitId":"chuashihong"},"content":"//        // different types -\u003e returns false","lastModifiedDate":"2022-04-07"},{"lineNumber":31,"author":{"gitId":"chuashihong"},"content":"//        assertFalse(DESC_AMY.equals(5));","lastModifiedDate":"2022-04-07"},{"lineNumber":32,"author":{"gitId":"chuashihong"},"content":"//","lastModifiedDate":"2022-04-07"},{"lineNumber":33,"author":{"gitId":"chuashihong"},"content":"//        // different values -\u003e returns false","lastModifiedDate":"2022-04-07"},{"lineNumber":34,"author":{"gitId":"chuashihong"},"content":"//        assertFalse(DESC_AMY.equals(DESC_BOB));","lastModifiedDate":"2022-04-07"},{"lineNumber":35,"author":{"gitId":"chuashihong"},"content":"//","lastModifiedDate":"2022-04-07"},{"lineNumber":36,"author":{"gitId":"chuashihong"},"content":"//        // different name -\u003e returns false","lastModifiedDate":"2022-04-07"},{"lineNumber":37,"author":{"gitId":"chuashihong"},"content":"//        EditclientDescriptor editedAmy \u003d new EditClientDescriptorBuilder(DESC_AMY).withName(VALID_NAME_BOB).build();","lastModifiedDate":"2022-04-07"},{"lineNumber":38,"author":{"gitId":"chuashihong"},"content":"//        assertFalse(DESC_AMY.equals(editedAmy));","lastModifiedDate":"2022-04-07"},{"lineNumber":39,"author":{"gitId":"chuashihong"},"content":"//","lastModifiedDate":"2022-04-07"},{"lineNumber":40,"author":{"gitId":"chuashihong"},"content":"//        // different phone -\u003e returns false","lastModifiedDate":"2022-04-07"},{"lineNumber":41,"author":{"gitId":"chuashihong"},"content":"//        editedAmy \u003d new EditClientDescriptorBuilder(DESC_AMY).withPhone(VALID_PHONE_BOB).build();","lastModifiedDate":"2022-04-07"},{"lineNumber":42,"author":{"gitId":"chuashihong"},"content":"//        assertFalse(DESC_AMY.equals(editedAmy));","lastModifiedDate":"2022-04-07"},{"lineNumber":43,"author":{"gitId":"chuashihong"},"content":"//","lastModifiedDate":"2022-04-07"},{"lineNumber":44,"author":{"gitId":"chuashihong"},"content":"//        // different tags -\u003e returns false","lastModifiedDate":"2022-04-07"},{"lineNumber":45,"author":{"gitId":"chuashihong"},"content":"//        editedAmy \u003d new EditClientDescriptorBuilder(DESC_AMY).withTags(VALID_TAG_HUSBAND).build();","lastModifiedDate":"2022-04-07"},{"lineNumber":46,"author":{"gitId":"chuashihong"},"content":"//        assertFalse(DESC_AMY.equals(editedAmy));","lastModifiedDate":"2022-04-07"},{"lineNumber":47,"author":{"gitId":"chuashihong"},"content":"//    }","lastModifiedDate":"2022-04-07"},{"lineNumber":48,"author":{"gitId":"chuashihong"},"content":"//}","lastModifiedDate":"2022-04-07"}],"authorContributionMap":{"chuashihong":48}},{"path":"src/test/java/seedu/address/logic/commands/EditSellerCommandTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"chuashihong"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2022-04-08"},{"lineNumber":2,"author":{"gitId":"chuashihong"},"content":"","lastModifiedDate":"2022-04-08"},{"lineNumber":3,"author":{"gitId":"chuashihong"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2022-04-08"},{"lineNumber":4,"author":{"gitId":"chuashihong"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2022-04-08"},{"lineNumber":5,"author":{"gitId":"chuashihong"},"content":"import static seedu.address.logic.commands.SellerCommandTestUtil.DESC_AMY;","lastModifiedDate":"2022-04-08"},{"lineNumber":6,"author":{"gitId":"chuashihong"},"content":"import static seedu.address.logic.commands.SellerCommandTestUtil.DESC_BOB;","lastModifiedDate":"2022-04-08"},{"lineNumber":7,"author":{"gitId":"chuashihong"},"content":"import static seedu.address.logic.commands.SellerCommandTestUtil.VALID_NAME_BOB;","lastModifiedDate":"2022-04-08"},{"lineNumber":8,"author":{"gitId":"chuashihong"},"content":"import static seedu.address.logic.commands.SellerCommandTestUtil.VALID_PHONE_BOB;","lastModifiedDate":"2022-04-08"},{"lineNumber":9,"author":{"gitId":"chuashihong"},"content":"import static seedu.address.logic.commands.SellerCommandTestUtil.VALID_TAG_HUSBAND;","lastModifiedDate":"2022-04-08"},{"lineNumber":10,"author":{"gitId":"chuashihong"},"content":"import static seedu.address.logic.commands.SellerCommandTestUtil.assertCommandFailure;","lastModifiedDate":"2022-04-08"},{"lineNumber":11,"author":{"gitId":"chuashihong"},"content":"import static seedu.address.logic.commands.SellerCommandTestUtil.assertCommandSuccess;","lastModifiedDate":"2022-04-08"},{"lineNumber":12,"author":{"gitId":"chuashihong"},"content":"import static seedu.address.logic.commands.SellerCommandTestUtil.assertSellerCommandFailure;","lastModifiedDate":"2022-04-08"},{"lineNumber":13,"author":{"gitId":"chuashihong"},"content":"import static seedu.address.logic.commands.SellerCommandTestUtil.showSellerAtIndex;","lastModifiedDate":"2022-04-08"},{"lineNumber":14,"author":{"gitId":"chuashihong"},"content":"import static seedu.address.testutil.TypicalIndexes.INDEX_FIRST_SELLER;","lastModifiedDate":"2022-04-08"},{"lineNumber":15,"author":{"gitId":"chuashihong"},"content":"import static seedu.address.testutil.TypicalIndexes.INDEX_SECOND_SELLER;","lastModifiedDate":"2022-04-08"},{"lineNumber":16,"author":{"gitId":"chuashihong"},"content":"import static seedu.address.testutil.TypicalSellers.getTypicalSellerAddressBook;","lastModifiedDate":"2022-04-08"},{"lineNumber":17,"author":{"gitId":"chuashihong"},"content":"","lastModifiedDate":"2022-04-08"},{"lineNumber":18,"author":{"gitId":"chuashihong"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2022-04-08"},{"lineNumber":19,"author":{"gitId":"chuashihong"},"content":"","lastModifiedDate":"2022-04-08"},{"lineNumber":20,"author":{"gitId":"chuashihong"},"content":"import seedu.address.commons.core.Messages;","lastModifiedDate":"2022-04-08"},{"lineNumber":21,"author":{"gitId":"chuashihong"},"content":"import seedu.address.commons.core.index.Index;","lastModifiedDate":"2022-04-08"},{"lineNumber":22,"author":{"gitId":"chuashihong"},"content":"import seedu.address.logic.commands.EditSellerCommand.EditSellerDescriptor;","lastModifiedDate":"2022-04-08"},{"lineNumber":23,"author":{"gitId":"chuashihong"},"content":"import seedu.address.model.AddressBook;","lastModifiedDate":"2022-04-08"},{"lineNumber":24,"author":{"gitId":"chuashihong"},"content":"import seedu.address.model.BuyerAddressBook;","lastModifiedDate":"2022-04-08"},{"lineNumber":25,"author":{"gitId":"chuashihong"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2022-04-08"},{"lineNumber":26,"author":{"gitId":"chuashihong"},"content":"import seedu.address.model.ModelManager;","lastModifiedDate":"2022-04-08"},{"lineNumber":27,"author":{"gitId":"chuashihong"},"content":"import seedu.address.model.SellerAddressBook;","lastModifiedDate":"2022-04-08"},{"lineNumber":28,"author":{"gitId":"chuashihong"},"content":"import seedu.address.model.UserPrefs;","lastModifiedDate":"2022-04-08"},{"lineNumber":29,"author":{"gitId":"chuashihong"},"content":"import seedu.address.model.seller.Seller;","lastModifiedDate":"2022-04-08"},{"lineNumber":30,"author":{"gitId":"chuashihong"},"content":"import seedu.address.testutil.EditSellerDescriptorBuilder;","lastModifiedDate":"2022-04-08"},{"lineNumber":31,"author":{"gitId":"chuashihong"},"content":"import seedu.address.testutil.SellerBuilder;","lastModifiedDate":"2022-04-08"},{"lineNumber":32,"author":{"gitId":"chuashihong"},"content":"","lastModifiedDate":"2022-04-08"},{"lineNumber":33,"author":{"gitId":"chuashihong"},"content":"/**","lastModifiedDate":"2022-04-08"},{"lineNumber":34,"author":{"gitId":"chuashihong"},"content":" * Contains integration tests (interaction with the Model) and unit tests for EditCommand.","lastModifiedDate":"2022-04-08"},{"lineNumber":35,"author":{"gitId":"chuashihong"},"content":" */","lastModifiedDate":"2022-04-08"},{"lineNumber":36,"author":{"gitId":"chuashihong"},"content":"public class EditSellerCommandTest {","lastModifiedDate":"2022-04-08"},{"lineNumber":37,"author":{"gitId":"chuashihong"},"content":"","lastModifiedDate":"2022-04-08"},{"lineNumber":38,"author":{"gitId":"chuashihong"},"content":"    private Model model \u003d new ModelManager(new AddressBook(), new UserPrefs(), getTypicalSellerAddressBook(),","lastModifiedDate":"2022-04-08"},{"lineNumber":39,"author":{"gitId":"chuashihong"},"content":"            new BuyerAddressBook());","lastModifiedDate":"2022-04-08"},{"lineNumber":40,"author":{"gitId":"chuashihong"},"content":"","lastModifiedDate":"2022-04-08"},{"lineNumber":41,"author":{"gitId":"chuashihong"},"content":"    @Test","lastModifiedDate":"2022-04-08"},{"lineNumber":42,"author":{"gitId":"chuashihong"},"content":"    public void execute_allFieldsSpecifiedUnfilteredList_success() {","lastModifiedDate":"2022-04-08"},{"lineNumber":43,"author":{"gitId":"chuashihong"},"content":"        Seller editedSeller \u003d new SellerBuilder().build();","lastModifiedDate":"2022-04-08"},{"lineNumber":44,"author":{"gitId":"chuashihong"},"content":"        EditSellerDescriptor descriptor \u003d new EditSellerDescriptorBuilder(editedSeller).build();","lastModifiedDate":"2022-04-08"},{"lineNumber":45,"author":{"gitId":"chuashihong"},"content":"        EditSellerCommand editSellerCommand \u003d new EditSellerCommand(INDEX_FIRST_SELLER, descriptor);","lastModifiedDate":"2022-04-08"},{"lineNumber":46,"author":{"gitId":"chuashihong"},"content":"","lastModifiedDate":"2022-04-08"},{"lineNumber":47,"author":{"gitId":"chuashihong"},"content":"        String expectedMessage \u003d String.format(EditSellerCommand.MESSAGE_EDIT_SELLER_SUCCESS, editedSeller);","lastModifiedDate":"2022-04-08"},{"lineNumber":48,"author":{"gitId":"chuashihong"},"content":"        System.out.println(expectedMessage);","lastModifiedDate":"2022-04-08"},{"lineNumber":49,"author":{"gitId":"chuashihong"},"content":"        Model expectedModel \u003d new ModelManager(new AddressBook() , new UserPrefs(),","lastModifiedDate":"2022-04-08"},{"lineNumber":50,"author":{"gitId":"chuashihong"},"content":"                new SellerAddressBook(model.getSellerAddressBook()), new BuyerAddressBook());","lastModifiedDate":"2022-04-08"},{"lineNumber":51,"author":{"gitId":"chuashihong"},"content":"        expectedModel.setSeller(model.getFilteredSellerList().get(0), editedSeller);","lastModifiedDate":"2022-04-08"},{"lineNumber":52,"author":{"gitId":"chuashihong"},"content":"        assertCommandSuccess(editSellerCommand, model, expectedMessage, expectedModel);","lastModifiedDate":"2022-04-08"},{"lineNumber":53,"author":{"gitId":"chuashihong"},"content":"    }","lastModifiedDate":"2022-04-08"},{"lineNumber":54,"author":{"gitId":"chuashihong"},"content":"","lastModifiedDate":"2022-04-08"},{"lineNumber":55,"author":{"gitId":"chuashihong"},"content":"    @Test","lastModifiedDate":"2022-04-08"},{"lineNumber":56,"author":{"gitId":"chuashihong"},"content":"    public void execute_someFieldsSpecifiedUnfilteredList_success() {","lastModifiedDate":"2022-04-08"},{"lineNumber":57,"author":{"gitId":"chuashihong"},"content":"        Index indexLastSeller \u003d Index.fromOneBased(model.getFilteredSellerList().size());","lastModifiedDate":"2022-04-08"},{"lineNumber":58,"author":{"gitId":"chuashihong"},"content":"        Seller lastSeller \u003d model.getFilteredSellerList().get(indexLastSeller.getZeroBased());","lastModifiedDate":"2022-04-08"},{"lineNumber":59,"author":{"gitId":"chuashihong"},"content":"","lastModifiedDate":"2022-04-08"},{"lineNumber":60,"author":{"gitId":"chuashihong"},"content":"        SellerBuilder sellerInList \u003d new SellerBuilder(lastSeller);","lastModifiedDate":"2022-04-08"},{"lineNumber":61,"author":{"gitId":"chuashihong"},"content":"        Seller editedSeller \u003d sellerInList.withName(VALID_NAME_BOB).withPhone(VALID_PHONE_BOB)","lastModifiedDate":"2022-04-08"},{"lineNumber":62,"author":{"gitId":"chuashihong"},"content":"                .withTags(VALID_TAG_HUSBAND).build();","lastModifiedDate":"2022-04-08"},{"lineNumber":63,"author":{"gitId":"chuashihong"},"content":"","lastModifiedDate":"2022-04-08"},{"lineNumber":64,"author":{"gitId":"chuashihong"},"content":"        EditSellerDescriptor descriptor \u003d new EditSellerDescriptorBuilder().withName(VALID_NAME_BOB)","lastModifiedDate":"2022-04-08"},{"lineNumber":65,"author":{"gitId":"chuashihong"},"content":"                .withPhone(VALID_PHONE_BOB).withTags(VALID_TAG_HUSBAND).build();","lastModifiedDate":"2022-04-08"},{"lineNumber":66,"author":{"gitId":"chuashihong"},"content":"        EditSellerCommand editCommand \u003d new EditSellerCommand(indexLastSeller, descriptor);","lastModifiedDate":"2022-04-08"},{"lineNumber":67,"author":{"gitId":"chuashihong"},"content":"","lastModifiedDate":"2022-04-08"},{"lineNumber":68,"author":{"gitId":"chuashihong"},"content":"        String expectedMessage \u003d String.format(EditSellerCommand.MESSAGE_EDIT_SELLER_SUCCESS, editedSeller);","lastModifiedDate":"2022-04-08"},{"lineNumber":69,"author":{"gitId":"chuashihong"},"content":"","lastModifiedDate":"2022-04-08"},{"lineNumber":70,"author":{"gitId":"chuashihong"},"content":"        Model expectedModel \u003d new ModelManager(new AddressBook(), new UserPrefs(),","lastModifiedDate":"2022-04-08"},{"lineNumber":71,"author":{"gitId":"chuashihong"},"content":"                new SellerAddressBook(model.getSellerAddressBook()), new BuyerAddressBook());","lastModifiedDate":"2022-04-08"},{"lineNumber":72,"author":{"gitId":"chuashihong"},"content":"        expectedModel.setSeller(lastSeller, editedSeller);","lastModifiedDate":"2022-04-08"},{"lineNumber":73,"author":{"gitId":"chuashihong"},"content":"","lastModifiedDate":"2022-04-08"},{"lineNumber":74,"author":{"gitId":"chuashihong"},"content":"        assertCommandSuccess(editCommand, model, expectedMessage, expectedModel);","lastModifiedDate":"2022-04-08"},{"lineNumber":75,"author":{"gitId":"chuashihong"},"content":"    }","lastModifiedDate":"2022-04-08"},{"lineNumber":76,"author":{"gitId":"chuashihong"},"content":"","lastModifiedDate":"2022-04-08"},{"lineNumber":77,"author":{"gitId":"chuashihong"},"content":"    @Test","lastModifiedDate":"2022-04-08"},{"lineNumber":78,"author":{"gitId":"chuashihong"},"content":"    public void execute_noFieldSpecifiedUnfilteredList_success() {","lastModifiedDate":"2022-04-08"},{"lineNumber":79,"author":{"gitId":"chuashihong"},"content":"        EditSellerCommand editSellerCommand \u003d new EditSellerCommand(INDEX_FIRST_SELLER, new EditSellerDescriptor());","lastModifiedDate":"2022-04-08"},{"lineNumber":80,"author":{"gitId":"chuashihong"},"content":"        Seller editedSeller \u003d model.getFilteredSellerList().get(INDEX_FIRST_SELLER.getZeroBased());","lastModifiedDate":"2022-04-08"},{"lineNumber":81,"author":{"gitId":"chuashihong"},"content":"","lastModifiedDate":"2022-04-08"},{"lineNumber":82,"author":{"gitId":"chuashihong"},"content":"        String expectedMessage \u003d String.format(EditSellerCommand.MESSAGE_EDIT_SELLER_SUCCESS, editedSeller);","lastModifiedDate":"2022-04-08"},{"lineNumber":83,"author":{"gitId":"chuashihong"},"content":"","lastModifiedDate":"2022-04-08"},{"lineNumber":84,"author":{"gitId":"chuashihong"},"content":"        Model expectedModel \u003d new ModelManager(new AddressBook(), new UserPrefs(),","lastModifiedDate":"2022-04-08"},{"lineNumber":85,"author":{"gitId":"chuashihong"},"content":"                new SellerAddressBook(model.getSellerAddressBook()), new BuyerAddressBook());","lastModifiedDate":"2022-04-08"},{"lineNumber":86,"author":{"gitId":"chuashihong"},"content":"","lastModifiedDate":"2022-04-08"},{"lineNumber":87,"author":{"gitId":"chuashihong"},"content":"        assertCommandSuccess(editSellerCommand, model, expectedMessage, expectedModel);","lastModifiedDate":"2022-04-08"},{"lineNumber":88,"author":{"gitId":"chuashihong"},"content":"    }","lastModifiedDate":"2022-04-08"},{"lineNumber":89,"author":{"gitId":"chuashihong"},"content":"","lastModifiedDate":"2022-04-08"},{"lineNumber":90,"author":{"gitId":"chuashihong"},"content":"    @Test","lastModifiedDate":"2022-04-08"},{"lineNumber":91,"author":{"gitId":"chuashihong"},"content":"    public void execute_filteredList_success() {","lastModifiedDate":"2022-04-08"},{"lineNumber":92,"author":{"gitId":"chuashihong"},"content":"        showSellerAtIndex(model, INDEX_FIRST_SELLER);","lastModifiedDate":"2022-04-08"},{"lineNumber":93,"author":{"gitId":"chuashihong"},"content":"","lastModifiedDate":"2022-04-08"},{"lineNumber":94,"author":{"gitId":"chuashihong"},"content":"        Seller sellerInFilteredList \u003d model.getFilteredSellerList().get(INDEX_FIRST_SELLER.getZeroBased());","lastModifiedDate":"2022-04-08"},{"lineNumber":95,"author":{"gitId":"chuashihong"},"content":"        Seller editedSeller \u003d new SellerBuilder(sellerInFilteredList).withName(VALID_NAME_BOB).build();","lastModifiedDate":"2022-04-08"},{"lineNumber":96,"author":{"gitId":"chuashihong"},"content":"        EditSellerCommand editSellerCommand \u003d new EditSellerCommand(INDEX_FIRST_SELLER,","lastModifiedDate":"2022-04-08"},{"lineNumber":97,"author":{"gitId":"chuashihong"},"content":"                new EditSellerDescriptorBuilder().withName(VALID_NAME_BOB).build());","lastModifiedDate":"2022-04-08"},{"lineNumber":98,"author":{"gitId":"chuashihong"},"content":"","lastModifiedDate":"2022-04-08"},{"lineNumber":99,"author":{"gitId":"chuashihong"},"content":"        String expectedMessage \u003d String.format(EditSellerCommand.MESSAGE_EDIT_SELLER_SUCCESS, editedSeller);","lastModifiedDate":"2022-04-08"},{"lineNumber":100,"author":{"gitId":"chuashihong"},"content":"","lastModifiedDate":"2022-04-08"},{"lineNumber":101,"author":{"gitId":"chuashihong"},"content":"        Model expectedModel \u003d new ModelManager(new AddressBook(), new UserPrefs(),","lastModifiedDate":"2022-04-08"},{"lineNumber":102,"author":{"gitId":"chuashihong"},"content":"                new SellerAddressBook(model.getSellerAddressBook()), new BuyerAddressBook());","lastModifiedDate":"2022-04-08"},{"lineNumber":103,"author":{"gitId":"chuashihong"},"content":"        expectedModel.setSeller(model.getFilteredSellerList().get(0), editedSeller);","lastModifiedDate":"2022-04-08"},{"lineNumber":104,"author":{"gitId":"chuashihong"},"content":"","lastModifiedDate":"2022-04-08"},{"lineNumber":105,"author":{"gitId":"chuashihong"},"content":"        assertCommandSuccess(editSellerCommand, model, expectedMessage, expectedModel);","lastModifiedDate":"2022-04-08"},{"lineNumber":106,"author":{"gitId":"chuashihong"},"content":"    }","lastModifiedDate":"2022-04-08"},{"lineNumber":107,"author":{"gitId":"chuashihong"},"content":"","lastModifiedDate":"2022-04-08"},{"lineNumber":108,"author":{"gitId":"chuashihong"},"content":"    @Test","lastModifiedDate":"2022-04-08"},{"lineNumber":109,"author":{"gitId":"chuashihong"},"content":"    public void execute_duplicateSellerUnfilteredList_failure() {","lastModifiedDate":"2022-04-08"},{"lineNumber":110,"author":{"gitId":"chuashihong"},"content":"        Seller firstSeller \u003d model.getFilteredSellerList().get(INDEX_FIRST_SELLER.getZeroBased());","lastModifiedDate":"2022-04-08"},{"lineNumber":111,"author":{"gitId":"chuashihong"},"content":"        EditSellerDescriptor descriptor \u003d new EditSellerDescriptorBuilder(firstSeller).build();","lastModifiedDate":"2022-04-08"},{"lineNumber":112,"author":{"gitId":"chuashihong"},"content":"        EditSellerCommand editSellerCommand \u003d new EditSellerCommand(INDEX_SECOND_SELLER, descriptor);","lastModifiedDate":"2022-04-08"},{"lineNumber":113,"author":{"gitId":"chuashihong"},"content":"","lastModifiedDate":"2022-04-08"},{"lineNumber":114,"author":{"gitId":"chuashihong"},"content":"        assertSellerCommandFailure(editSellerCommand, model, EditSellerCommand.MESSAGE_DUPLICATE_SELLER);","lastModifiedDate":"2022-04-08"},{"lineNumber":115,"author":{"gitId":"chuashihong"},"content":"    }","lastModifiedDate":"2022-04-08"},{"lineNumber":116,"author":{"gitId":"chuashihong"},"content":"","lastModifiedDate":"2022-04-08"},{"lineNumber":117,"author":{"gitId":"chuashihong"},"content":"    @Test","lastModifiedDate":"2022-04-08"},{"lineNumber":118,"author":{"gitId":"chuashihong"},"content":"    public void execute_duplicateSellerFilteredList_failure() {","lastModifiedDate":"2022-04-08"},{"lineNumber":119,"author":{"gitId":"chuashihong"},"content":"        showSellerAtIndex(model, INDEX_FIRST_SELLER);","lastModifiedDate":"2022-04-08"},{"lineNumber":120,"author":{"gitId":"chuashihong"},"content":"","lastModifiedDate":"2022-04-08"},{"lineNumber":121,"author":{"gitId":"chuashihong"},"content":"        // edit seller in filtered list into a duplicate in address book","lastModifiedDate":"2022-04-08"},{"lineNumber":122,"author":{"gitId":"chuashihong"},"content":"        Seller sellerInList \u003d model.getSellerAddressBook().getSellerList().get(INDEX_SECOND_SELLER.getZeroBased());","lastModifiedDate":"2022-04-08"},{"lineNumber":123,"author":{"gitId":"chuashihong"},"content":"        EditSellerCommand editSellerCommand \u003d new EditSellerCommand(INDEX_FIRST_SELLER,","lastModifiedDate":"2022-04-08"},{"lineNumber":124,"author":{"gitId":"chuashihong"},"content":"                new EditSellerDescriptorBuilder(sellerInList).build());","lastModifiedDate":"2022-04-08"},{"lineNumber":125,"author":{"gitId":"chuashihong"},"content":"","lastModifiedDate":"2022-04-08"},{"lineNumber":126,"author":{"gitId":"chuashihong"},"content":"        assertSellerCommandFailure(editSellerCommand, model, EditSellerCommand.MESSAGE_DUPLICATE_SELLER);","lastModifiedDate":"2022-04-08"},{"lineNumber":127,"author":{"gitId":"chuashihong"},"content":"    }","lastModifiedDate":"2022-04-08"},{"lineNumber":128,"author":{"gitId":"chuashihong"},"content":"","lastModifiedDate":"2022-04-08"},{"lineNumber":129,"author":{"gitId":"chuashihong"},"content":"    @Test","lastModifiedDate":"2022-04-08"},{"lineNumber":130,"author":{"gitId":"chuashihong"},"content":"    public void execute_invalidSellerIndexUnfilteredList_failure() {","lastModifiedDate":"2022-04-08"},{"lineNumber":131,"author":{"gitId":"chuashihong"},"content":"        Index outOfBoundIndex \u003d Index.fromOneBased(model.getFilteredSellerList().size() + 1);","lastModifiedDate":"2022-04-08"},{"lineNumber":132,"author":{"gitId":"chuashihong"},"content":"        EditSellerDescriptor descriptor \u003d new EditSellerDescriptorBuilder().withName(VALID_NAME_BOB).build();","lastModifiedDate":"2022-04-08"},{"lineNumber":133,"author":{"gitId":"chuashihong"},"content":"        EditSellerCommand editSellerCommand \u003d new EditSellerCommand(outOfBoundIndex, descriptor);","lastModifiedDate":"2022-04-08"},{"lineNumber":134,"author":{"gitId":"chuashihong"},"content":"","lastModifiedDate":"2022-04-08"},{"lineNumber":135,"author":{"gitId":"chuashihong"},"content":"        assertSellerCommandFailure(editSellerCommand, model, Messages.MESSAGE_INVALID_SELLER_DISPLAYED_INDEX);","lastModifiedDate":"2022-04-08"},{"lineNumber":136,"author":{"gitId":"chuashihong"},"content":"    }","lastModifiedDate":"2022-04-08"},{"lineNumber":137,"author":{"gitId":"chuashihong"},"content":"","lastModifiedDate":"2022-04-08"},{"lineNumber":138,"author":{"gitId":"chuashihong"},"content":"    /**","lastModifiedDate":"2022-04-08"},{"lineNumber":139,"author":{"gitId":"chuashihong"},"content":"     * Edit filtered list where index is larger than size of filtered list,","lastModifiedDate":"2022-04-08"},{"lineNumber":140,"author":{"gitId":"chuashihong"},"content":"     * but smaller than size of address book","lastModifiedDate":"2022-04-08"},{"lineNumber":141,"author":{"gitId":"chuashihong"},"content":"     */","lastModifiedDate":"2022-04-08"},{"lineNumber":142,"author":{"gitId":"chuashihong"},"content":"    @Test","lastModifiedDate":"2022-04-08"},{"lineNumber":143,"author":{"gitId":"chuashihong"},"content":"    public void execute_invalidSellerIndexFilteredList_failure() {","lastModifiedDate":"2022-04-08"},{"lineNumber":144,"author":{"gitId":"chuashihong"},"content":"        showSellerAtIndex(model, INDEX_FIRST_SELLER);","lastModifiedDate":"2022-04-08"},{"lineNumber":145,"author":{"gitId":"chuashihong"},"content":"        Index outOfBoundIndex \u003d INDEX_SECOND_SELLER;","lastModifiedDate":"2022-04-08"},{"lineNumber":146,"author":{"gitId":"chuashihong"},"content":"        // ensures that outOfBoundIndex is still in bounds of address book list","lastModifiedDate":"2022-04-08"},{"lineNumber":147,"author":{"gitId":"chuashihong"},"content":"        assertTrue(outOfBoundIndex.getZeroBased() \u003c model.getSellerAddressBook().getSellerList().size());","lastModifiedDate":"2022-04-08"},{"lineNumber":148,"author":{"gitId":"chuashihong"},"content":"","lastModifiedDate":"2022-04-08"},{"lineNumber":149,"author":{"gitId":"chuashihong"},"content":"        EditSellerCommand editSellerCommand \u003d new EditSellerCommand(outOfBoundIndex,","lastModifiedDate":"2022-04-08"},{"lineNumber":150,"author":{"gitId":"chuashihong"},"content":"                new EditSellerDescriptorBuilder().withName(VALID_NAME_BOB).build());","lastModifiedDate":"2022-04-08"},{"lineNumber":151,"author":{"gitId":"chuashihong"},"content":"","lastModifiedDate":"2022-04-08"},{"lineNumber":152,"author":{"gitId":"chuashihong"},"content":"        assertCommandFailure(editSellerCommand, model, Messages.MESSAGE_INVALID_SELLER_DISPLAYED_INDEX);","lastModifiedDate":"2022-04-08"},{"lineNumber":153,"author":{"gitId":"chuashihong"},"content":"    }","lastModifiedDate":"2022-04-08"},{"lineNumber":154,"author":{"gitId":"chuashihong"},"content":"","lastModifiedDate":"2022-04-08"},{"lineNumber":155,"author":{"gitId":"chuashihong"},"content":"    @Test","lastModifiedDate":"2022-04-08"},{"lineNumber":156,"author":{"gitId":"chuashihong"},"content":"    public void equals() {","lastModifiedDate":"2022-04-08"},{"lineNumber":157,"author":{"gitId":"chuashihong"},"content":"        final EditSellerCommand standardCommand \u003d new EditSellerCommand(INDEX_FIRST_SELLER, DESC_AMY);","lastModifiedDate":"2022-04-08"},{"lineNumber":158,"author":{"gitId":"chuashihong"},"content":"","lastModifiedDate":"2022-04-08"},{"lineNumber":159,"author":{"gitId":"chuashihong"},"content":"        // same values -\u003e returns true","lastModifiedDate":"2022-04-08"},{"lineNumber":160,"author":{"gitId":"chuashihong"},"content":"        EditSellerDescriptor copyDescriptor \u003d new EditSellerDescriptor(DESC_AMY);","lastModifiedDate":"2022-04-08"},{"lineNumber":161,"author":{"gitId":"chuashihong"},"content":"        EditSellerCommand commandWithSameValues \u003d new EditSellerCommand(INDEX_FIRST_SELLER, copyDescriptor);","lastModifiedDate":"2022-04-08"},{"lineNumber":162,"author":{"gitId":"chuashihong"},"content":"        assertTrue(standardCommand.equals(commandWithSameValues));","lastModifiedDate":"2022-04-08"},{"lineNumber":163,"author":{"gitId":"chuashihong"},"content":"","lastModifiedDate":"2022-04-08"},{"lineNumber":164,"author":{"gitId":"chuashihong"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2022-04-08"},{"lineNumber":165,"author":{"gitId":"chuashihong"},"content":"        assertTrue(standardCommand.equals(standardCommand));","lastModifiedDate":"2022-04-08"},{"lineNumber":166,"author":{"gitId":"chuashihong"},"content":"","lastModifiedDate":"2022-04-08"},{"lineNumber":167,"author":{"gitId":"chuashihong"},"content":"        // null -\u003e returns false","lastModifiedDate":"2022-04-08"},{"lineNumber":168,"author":{"gitId":"chuashihong"},"content":"        assertFalse(standardCommand.equals(null));","lastModifiedDate":"2022-04-08"},{"lineNumber":169,"author":{"gitId":"chuashihong"},"content":"","lastModifiedDate":"2022-04-08"},{"lineNumber":170,"author":{"gitId":"chuashihong"},"content":"        // different types -\u003e returns false","lastModifiedDate":"2022-04-08"},{"lineNumber":171,"author":{"gitId":"chuashihong"},"content":"        assertFalse(standardCommand.equals(new ClearCommand()));","lastModifiedDate":"2022-04-08"},{"lineNumber":172,"author":{"gitId":"chuashihong"},"content":"","lastModifiedDate":"2022-04-08"},{"lineNumber":173,"author":{"gitId":"chuashihong"},"content":"        // different index -\u003e returns false","lastModifiedDate":"2022-04-08"},{"lineNumber":174,"author":{"gitId":"chuashihong"},"content":"        assertFalse(standardCommand.equals(new EditSellerCommand(INDEX_SECOND_SELLER, DESC_AMY)));","lastModifiedDate":"2022-04-08"},{"lineNumber":175,"author":{"gitId":"chuashihong"},"content":"","lastModifiedDate":"2022-04-08"},{"lineNumber":176,"author":{"gitId":"chuashihong"},"content":"        // different descriptor -\u003e returns false","lastModifiedDate":"2022-04-08"},{"lineNumber":177,"author":{"gitId":"chuashihong"},"content":"        assertFalse(standardCommand.equals(new EditSellerCommand(INDEX_FIRST_SELLER, DESC_BOB)));","lastModifiedDate":"2022-04-08"},{"lineNumber":178,"author":{"gitId":"chuashihong"},"content":"    }","lastModifiedDate":"2022-04-08"},{"lineNumber":179,"author":{"gitId":"chuashihong"},"content":"","lastModifiedDate":"2022-04-08"},{"lineNumber":180,"author":{"gitId":"chuashihong"},"content":"}","lastModifiedDate":"2022-04-08"}],"authorContributionMap":{"chuashihong":180}},{"path":"src/test/java/seedu/address/logic/commands/ExitCommandTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2017-06-08"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-08"},{"lineNumber":3,"author":{"gitId":"chuashihong"},"content":"import static seedu.address.logic.commands.BuyerCommandTestUtil.assertCommandSuccess;","lastModifiedDate":"2022-04-07"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.ExitCommand.MESSAGE_EXIT_ACKNOWLEDGEMENT;","lastModifiedDate":"2017-06-08"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-08"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-08"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2018-08-08"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import seedu.address.model.ModelManager;","lastModifiedDate":"2018-08-08"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-08"},{"lineNumber":11,"author":{"gitId":"-"},"content":"public class ExitCommandTest {","lastModifiedDate":"2017-06-08"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    private Model model \u003d new ModelManager();","lastModifiedDate":"2018-08-08"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    private Model expectedModel \u003d new ModelManager();","lastModifiedDate":"2018-12-09"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":15,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-08"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    public void execute_exit_success() {","lastModifiedDate":"2017-06-08"},{"lineNumber":17,"author":{"gitId":"-"},"content":"        CommandResult expectedCommandResult \u003d new CommandResult(MESSAGE_EXIT_ACKNOWLEDGEMENT, false, true);","lastModifiedDate":"2018-12-09"},{"lineNumber":18,"author":{"gitId":"-"},"content":"        assertCommandSuccess(new ExitCommand(), model, expectedCommandResult, expectedModel);","lastModifiedDate":"2019-01-25"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-08"},{"lineNumber":20,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-06-08"}],"authorContributionMap":{"-":19,"chuashihong":1}},{"path":"src/test/java/seedu/address/logic/commands/FindCommandTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"chuashihong"},"content":"//package seedu.address.logic.commands;","lastModifiedDate":"2022-04-07"},{"lineNumber":2,"author":{"gitId":"chuashihong"},"content":"//","lastModifiedDate":"2022-04-07"},{"lineNumber":3,"author":{"gitId":"chuashihong"},"content":"//import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2022-04-07"},{"lineNumber":4,"author":{"gitId":"chuashihong"},"content":"//import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2022-04-07"},{"lineNumber":5,"author":{"gitId":"chuashihong"},"content":"//import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2022-04-07"},{"lineNumber":6,"author":{"gitId":"chuashihong"},"content":"//import static seedu.address.commons.core.Messages.MESSAGE_CLIENTS_LISTED_OVERVIEW;","lastModifiedDate":"2022-04-07"},{"lineNumber":7,"author":{"gitId":"chuashihong"},"content":"//import static seedu.address.logic.commands.CommandTestUtil.assertCommandSuccess;","lastModifiedDate":"2022-04-07"},{"lineNumber":8,"author":{"gitId":"chuashihong"},"content":"//import static seedu.address.testutil.TypicalClients.CARL;","lastModifiedDate":"2022-04-07"},{"lineNumber":9,"author":{"gitId":"chuashihong"},"content":"//import static seedu.address.testutil.TypicalClients.ELLE;","lastModifiedDate":"2022-04-07"},{"lineNumber":10,"author":{"gitId":"chuashihong"},"content":"//import static seedu.address.testutil.TypicalClients.FIONA;","lastModifiedDate":"2022-04-07"},{"lineNumber":11,"author":{"gitId":"chuashihong"},"content":"//import static seedu.address.testutil.TypicalClients.getTypicalAddressBook;","lastModifiedDate":"2022-04-07"},{"lineNumber":12,"author":{"gitId":"chuashihong"},"content":"//","lastModifiedDate":"2022-04-07"},{"lineNumber":13,"author":{"gitId":"chuashihong"},"content":"//import java.util.Arrays;","lastModifiedDate":"2022-04-07"},{"lineNumber":14,"author":{"gitId":"chuashihong"},"content":"//import java.util.Collections;","lastModifiedDate":"2022-04-07"},{"lineNumber":15,"author":{"gitId":"chuashihong"},"content":"//","lastModifiedDate":"2022-04-07"},{"lineNumber":16,"author":{"gitId":"chuashihong"},"content":"//import org.junit.jupiter.api.Test;","lastModifiedDate":"2022-04-07"},{"lineNumber":17,"author":{"gitId":"chuashihong"},"content":"//","lastModifiedDate":"2022-04-07"},{"lineNumber":18,"author":{"gitId":"chuashihong"},"content":"//import seedu.address.model.BuyerAddressBook;","lastModifiedDate":"2022-04-07"},{"lineNumber":19,"author":{"gitId":"chuashihong"},"content":"//import seedu.address.model.Model;","lastModifiedDate":"2022-04-07"},{"lineNumber":20,"author":{"gitId":"chuashihong"},"content":"//import seedu.address.model.ModelManager;","lastModifiedDate":"2022-04-07"},{"lineNumber":21,"author":{"gitId":"chuashihong"},"content":"//import seedu.address.model.SellerAddressBook;","lastModifiedDate":"2022-04-07"},{"lineNumber":22,"author":{"gitId":"chuashihong"},"content":"//import seedu.address.model.UserPrefs;","lastModifiedDate":"2022-04-07"},{"lineNumber":23,"author":{"gitId":"chuashihong"},"content":"//import seedu.address.model.client.NameContainsKeywordsPredicate;","lastModifiedDate":"2022-04-07"},{"lineNumber":24,"author":{"gitId":"chuashihong"},"content":"//","lastModifiedDate":"2022-04-07"},{"lineNumber":25,"author":{"gitId":"chuashihong"},"content":"///**","lastModifiedDate":"2022-04-07"},{"lineNumber":26,"author":{"gitId":"chuashihong"},"content":"// * Contains integration tests (interaction with the Model) for {@code FindCommand}.","lastModifiedDate":"2022-04-07"},{"lineNumber":27,"author":{"gitId":"chuashihong"},"content":"// */","lastModifiedDate":"2022-04-07"},{"lineNumber":28,"author":{"gitId":"chuashihong"},"content":"//public class FindCommandTest {","lastModifiedDate":"2022-04-07"},{"lineNumber":29,"author":{"gitId":"chuashihong"},"content":"//    private Model model \u003d new ModelManager(getTypicalAddressBook(), new UserPrefs(), new SellerAddressBook(),","lastModifiedDate":"2022-04-07"},{"lineNumber":30,"author":{"gitId":"chuashihong"},"content":"//            new BuyerAddressBook());","lastModifiedDate":"2022-04-07"},{"lineNumber":31,"author":{"gitId":"chuashihong"},"content":"//    private Model expectedModel \u003d new ModelManager(getTypicalAddressBook(), new UserPrefs(),","lastModifiedDate":"2022-04-07"},{"lineNumber":32,"author":{"gitId":"chuashihong"},"content":"//            new SellerAddressBook(), new BuyerAddressBook());","lastModifiedDate":"2022-04-07"},{"lineNumber":33,"author":{"gitId":"chuashihong"},"content":"//","lastModifiedDate":"2022-04-07"},{"lineNumber":34,"author":{"gitId":"chuashihong"},"content":"//    @Test","lastModifiedDate":"2022-04-07"},{"lineNumber":35,"author":{"gitId":"chuashihong"},"content":"//    public void equals() {","lastModifiedDate":"2022-04-07"},{"lineNumber":36,"author":{"gitId":"chuashihong"},"content":"//        NameContainsKeywordsPredicate firstPredicate \u003d","lastModifiedDate":"2022-04-07"},{"lineNumber":37,"author":{"gitId":"chuashihong"},"content":"//                new NameContainsKeywordsPredicate(Collections.singletonList(\"first\"));","lastModifiedDate":"2022-04-07"},{"lineNumber":38,"author":{"gitId":"chuashihong"},"content":"//        NameContainsKeywordsPredicate secondPredicate \u003d","lastModifiedDate":"2022-04-07"},{"lineNumber":39,"author":{"gitId":"chuashihong"},"content":"//                new NameContainsKeywordsPredicate(Collections.singletonList(\"second\"));","lastModifiedDate":"2022-04-07"},{"lineNumber":40,"author":{"gitId":"chuashihong"},"content":"//","lastModifiedDate":"2022-04-07"},{"lineNumber":41,"author":{"gitId":"chuashihong"},"content":"//        FindCommand findFirstCommand \u003d new FindCommand(firstPredicate);","lastModifiedDate":"2022-04-07"},{"lineNumber":42,"author":{"gitId":"chuashihong"},"content":"//        FindCommand findSecondCommand \u003d new FindCommand(secondPredicate);","lastModifiedDate":"2022-04-07"},{"lineNumber":43,"author":{"gitId":"chuashihong"},"content":"//","lastModifiedDate":"2022-04-07"},{"lineNumber":44,"author":{"gitId":"chuashihong"},"content":"//        // same object -\u003e returns true","lastModifiedDate":"2022-04-07"},{"lineNumber":45,"author":{"gitId":"chuashihong"},"content":"//        assertTrue(findFirstCommand.equals(findFirstCommand));","lastModifiedDate":"2022-04-07"},{"lineNumber":46,"author":{"gitId":"chuashihong"},"content":"//","lastModifiedDate":"2022-04-07"},{"lineNumber":47,"author":{"gitId":"chuashihong"},"content":"//        // same values -\u003e returns true","lastModifiedDate":"2022-04-07"},{"lineNumber":48,"author":{"gitId":"chuashihong"},"content":"//        FindCommand findFirstCommandCopy \u003d new FindCommand(firstPredicate);","lastModifiedDate":"2022-04-07"},{"lineNumber":49,"author":{"gitId":"chuashihong"},"content":"//        assertTrue(findFirstCommand.equals(findFirstCommandCopy));","lastModifiedDate":"2022-04-07"},{"lineNumber":50,"author":{"gitId":"chuashihong"},"content":"//","lastModifiedDate":"2022-04-07"},{"lineNumber":51,"author":{"gitId":"chuashihong"},"content":"//        // different types -\u003e returns false","lastModifiedDate":"2022-04-07"},{"lineNumber":52,"author":{"gitId":"chuashihong"},"content":"//        assertFalse(findFirstCommand.equals(1));","lastModifiedDate":"2022-04-07"},{"lineNumber":53,"author":{"gitId":"chuashihong"},"content":"//","lastModifiedDate":"2022-04-07"},{"lineNumber":54,"author":{"gitId":"chuashihong"},"content":"//        // null -\u003e returns false","lastModifiedDate":"2022-04-07"},{"lineNumber":55,"author":{"gitId":"chuashihong"},"content":"//        assertFalse(findFirstCommand.equals(null));","lastModifiedDate":"2022-04-07"},{"lineNumber":56,"author":{"gitId":"chuashihong"},"content":"//","lastModifiedDate":"2022-04-07"},{"lineNumber":57,"author":{"gitId":"chuashihong"},"content":"//        // different client -\u003e returns false","lastModifiedDate":"2022-04-07"},{"lineNumber":58,"author":{"gitId":"chuashihong"},"content":"//        assertFalse(findFirstCommand.equals(findSecondCommand));","lastModifiedDate":"2022-04-07"},{"lineNumber":59,"author":{"gitId":"chuashihong"},"content":"//    }","lastModifiedDate":"2022-04-07"},{"lineNumber":60,"author":{"gitId":"chuashihong"},"content":"//","lastModifiedDate":"2022-04-07"},{"lineNumber":61,"author":{"gitId":"chuashihong"},"content":"//    @Test","lastModifiedDate":"2022-04-07"},{"lineNumber":62,"author":{"gitId":"chuashihong"},"content":"//    public void execute_zeroKeywords_noclientFound() {","lastModifiedDate":"2022-04-07"},{"lineNumber":63,"author":{"gitId":"chuashihong"},"content":"//        String expectedMessage \u003d String.format(MESSAGE_CLIENTS_LISTED_OVERVIEW, 0);","lastModifiedDate":"2022-04-07"},{"lineNumber":64,"author":{"gitId":"chuashihong"},"content":"//        NameContainsKeywordsPredicate predicate \u003d preparePredicate(\" \");","lastModifiedDate":"2022-04-07"},{"lineNumber":65,"author":{"gitId":"chuashihong"},"content":"//        FindCommand command \u003d new FindCommand(predicate);","lastModifiedDate":"2022-04-07"},{"lineNumber":66,"author":{"gitId":"chuashihong"},"content":"//        expectedModel.updateFilteredClientList(predicate);","lastModifiedDate":"2022-04-07"},{"lineNumber":67,"author":{"gitId":"chuashihong"},"content":"//        assertCommandSuccess(command, model, expectedMessage, expectedModel);","lastModifiedDate":"2022-04-07"},{"lineNumber":68,"author":{"gitId":"chuashihong"},"content":"//        assertEquals(Collections.emptyList(), model.getFilteredClientList());","lastModifiedDate":"2022-04-07"},{"lineNumber":69,"author":{"gitId":"chuashihong"},"content":"//    }","lastModifiedDate":"2022-04-07"},{"lineNumber":70,"author":{"gitId":"chuashihong"},"content":"//","lastModifiedDate":"2022-04-07"},{"lineNumber":71,"author":{"gitId":"chuashihong"},"content":"//    @Test","lastModifiedDate":"2022-04-07"},{"lineNumber":72,"author":{"gitId":"chuashihong"},"content":"//    public void execute_multipleKeywords_multipleclientsFound() {","lastModifiedDate":"2022-04-07"},{"lineNumber":73,"author":{"gitId":"chuashihong"},"content":"//        String expectedMessage \u003d String.format(MESSAGE_CLIENTS_LISTED_OVERVIEW, 3);","lastModifiedDate":"2022-04-07"},{"lineNumber":74,"author":{"gitId":"chuashihong"},"content":"//        NameContainsKeywordsPredicate predicate \u003d preparePredicate(\"Kurz Elle Kunz\");","lastModifiedDate":"2022-04-07"},{"lineNumber":75,"author":{"gitId":"chuashihong"},"content":"//        FindCommand command \u003d new FindCommand(predicate);","lastModifiedDate":"2022-04-07"},{"lineNumber":76,"author":{"gitId":"chuashihong"},"content":"//        expectedModel.updateFilteredClientList(predicate);","lastModifiedDate":"2022-04-07"},{"lineNumber":77,"author":{"gitId":"chuashihong"},"content":"//        assertCommandSuccess(command, model, expectedMessage, expectedModel);","lastModifiedDate":"2022-04-07"},{"lineNumber":78,"author":{"gitId":"chuashihong"},"content":"//        assertEquals(Arrays.asList(CARL, ELLE, FIONA), model.getFilteredClientList());","lastModifiedDate":"2022-04-07"},{"lineNumber":79,"author":{"gitId":"chuashihong"},"content":"//    }","lastModifiedDate":"2022-04-07"},{"lineNumber":80,"author":{"gitId":"chuashihong"},"content":"//","lastModifiedDate":"2022-04-07"},{"lineNumber":81,"author":{"gitId":"chuashihong"},"content":"//    /**","lastModifiedDate":"2022-04-07"},{"lineNumber":82,"author":{"gitId":"chuashihong"},"content":"//     * Parses {@code userInput} into a {@code NameContainsKeywordsPredicate}.","lastModifiedDate":"2022-04-07"},{"lineNumber":83,"author":{"gitId":"chuashihong"},"content":"//     */","lastModifiedDate":"2022-04-07"},{"lineNumber":84,"author":{"gitId":"chuashihong"},"content":"//    private NameContainsKeywordsPredicate preparePredicate(String userInput) {","lastModifiedDate":"2022-04-07"},{"lineNumber":85,"author":{"gitId":"chuashihong"},"content":"//        return new NameContainsKeywordsPredicate(Arrays.asList(userInput.split(\"\\\\s+\")));","lastModifiedDate":"2022-04-07"},{"lineNumber":86,"author":{"gitId":"chuashihong"},"content":"//    }","lastModifiedDate":"2022-04-07"},{"lineNumber":87,"author":{"gitId":"chuashihong"},"content":"//}","lastModifiedDate":"2022-04-07"}],"authorContributionMap":{"chuashihong":87}},{"path":"src/test/java/seedu/address/logic/commands/HelpCommandTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2017-06-08"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-08"},{"lineNumber":3,"author":{"gitId":"chuashihong"},"content":"import static seedu.address.logic.commands.BuyerCommandTestUtil.assertCommandSuccess;","lastModifiedDate":"2022-04-07"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.HelpCommand.SHOWING_HELP_MESSAGE;","lastModifiedDate":"2017-06-08"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-08"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-08"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2018-08-08"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import seedu.address.model.ModelManager;","lastModifiedDate":"2018-08-08"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-08"},{"lineNumber":11,"author":{"gitId":"-"},"content":"public class HelpCommandTest {","lastModifiedDate":"2017-06-08"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    private Model model \u003d new ModelManager();","lastModifiedDate":"2018-08-08"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    private Model expectedModel \u003d new ModelManager();","lastModifiedDate":"2018-08-08"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":15,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-08"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    public void execute_help_success() {","lastModifiedDate":"2017-06-08"},{"lineNumber":17,"author":{"gitId":"-"},"content":"        CommandResult expectedCommandResult \u003d new CommandResult(SHOWING_HELP_MESSAGE, true, false);","lastModifiedDate":"2018-12-09"},{"lineNumber":18,"author":{"gitId":"-"},"content":"        assertCommandSuccess(new HelpCommand(), model, expectedCommandResult, expectedModel);","lastModifiedDate":"2019-01-25"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-08"},{"lineNumber":20,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-06-08"}],"authorContributionMap":{"-":19,"chuashihong":1}},{"path":"src/test/java/seedu/address/logic/commands/ListBuyerCommandTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"cwnm"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2022-03-29"},{"lineNumber":2,"author":{"gitId":"cwnm"},"content":"","lastModifiedDate":"2022-03-29"},{"lineNumber":3,"author":{"gitId":"chuashihong"},"content":"import static seedu.address.logic.commands.BuyerCommandTestUtil.assertCommandSuccess;","lastModifiedDate":"2022-04-07"},{"lineNumber":4,"author":{"gitId":"cwnm"},"content":"import static seedu.address.testutil.TypicalClients.getTypicalAddressBook;","lastModifiedDate":"2022-03-29"},{"lineNumber":5,"author":{"gitId":"cwnm"},"content":"","lastModifiedDate":"2022-03-29"},{"lineNumber":6,"author":{"gitId":"cwnm"},"content":"import org.junit.jupiter.api.BeforeEach;","lastModifiedDate":"2022-03-29"},{"lineNumber":7,"author":{"gitId":"cwnm"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2022-03-29"},{"lineNumber":8,"author":{"gitId":"cwnm"},"content":"","lastModifiedDate":"2022-03-29"},{"lineNumber":9,"author":{"gitId":"cwnm"},"content":"import seedu.address.model.BuyerAddressBook;","lastModifiedDate":"2022-03-29"},{"lineNumber":10,"author":{"gitId":"cwnm"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2022-03-29"},{"lineNumber":11,"author":{"gitId":"cwnm"},"content":"import seedu.address.model.ModelManager;","lastModifiedDate":"2022-03-29"},{"lineNumber":12,"author":{"gitId":"cwnm"},"content":"import seedu.address.model.SellerAddressBook;","lastModifiedDate":"2022-03-29"},{"lineNumber":13,"author":{"gitId":"cwnm"},"content":"import seedu.address.model.UserPrefs;","lastModifiedDate":"2022-03-29"},{"lineNumber":14,"author":{"gitId":"cwnm"},"content":"","lastModifiedDate":"2022-03-29"},{"lineNumber":15,"author":{"gitId":"cwnm"},"content":"/**","lastModifiedDate":"2022-03-29"},{"lineNumber":16,"author":{"gitId":"cwnm"},"content":" * Contains integration tests (interaction with the Model) and unit tests for ListCommand.","lastModifiedDate":"2022-03-29"},{"lineNumber":17,"author":{"gitId":"cwnm"},"content":" */","lastModifiedDate":"2022-03-29"},{"lineNumber":18,"author":{"gitId":"cwnm"},"content":"public class ListBuyerCommandTest {","lastModifiedDate":"2022-03-29"},{"lineNumber":19,"author":{"gitId":"cwnm"},"content":"","lastModifiedDate":"2022-03-29"},{"lineNumber":20,"author":{"gitId":"cwnm"},"content":"    private Model model;","lastModifiedDate":"2022-03-29"},{"lineNumber":21,"author":{"gitId":"cwnm"},"content":"    private Model expectedModel;","lastModifiedDate":"2022-03-29"},{"lineNumber":22,"author":{"gitId":"cwnm"},"content":"","lastModifiedDate":"2022-03-29"},{"lineNumber":23,"author":{"gitId":"cwnm"},"content":"    @BeforeEach","lastModifiedDate":"2022-03-29"},{"lineNumber":24,"author":{"gitId":"cwnm"},"content":"    public void setUp() {","lastModifiedDate":"2022-03-29"},{"lineNumber":25,"author":{"gitId":"cwnm"},"content":"        model \u003d new ModelManager(getTypicalAddressBook(), new UserPrefs(), new SellerAddressBook(),","lastModifiedDate":"2022-03-29"},{"lineNumber":26,"author":{"gitId":"cwnm"},"content":"                new BuyerAddressBook());","lastModifiedDate":"2022-03-29"},{"lineNumber":27,"author":{"gitId":"cwnm"},"content":"        expectedModel \u003d new ModelManager(model.getAddressBook(), new UserPrefs(), new SellerAddressBook(),","lastModifiedDate":"2022-03-29"},{"lineNumber":28,"author":{"gitId":"cwnm"},"content":"                new BuyerAddressBook());","lastModifiedDate":"2022-03-29"},{"lineNumber":29,"author":{"gitId":"cwnm"},"content":"    }","lastModifiedDate":"2022-03-29"},{"lineNumber":30,"author":{"gitId":"cwnm"},"content":"","lastModifiedDate":"2022-03-29"},{"lineNumber":31,"author":{"gitId":"cwnm"},"content":"    @Test","lastModifiedDate":"2022-03-29"},{"lineNumber":32,"author":{"gitId":"cwnm"},"content":"    public void execute_buyerListIsNotFiltered_showsSameList() {","lastModifiedDate":"2022-03-29"},{"lineNumber":33,"author":{"gitId":"cwnm"},"content":"        assertCommandSuccess(new ListBuyerCommand(), model, ListBuyerCommand.MESSAGE_SUCCESS, expectedModel);","lastModifiedDate":"2022-03-29"},{"lineNumber":34,"author":{"gitId":"cwnm"},"content":"    }","lastModifiedDate":"2022-03-29"},{"lineNumber":35,"author":{"gitId":"cwnm"},"content":"","lastModifiedDate":"2022-03-29"},{"lineNumber":36,"author":{"gitId":"cwnm"},"content":"}","lastModifiedDate":"2022-03-29"}],"authorContributionMap":{"cwnm":35,"chuashihong":1}},{"path":"src/test/java/seedu/address/logic/commands/ListCommandTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"chuashihong"},"content":"//package seedu.address.logic.commands;","lastModifiedDate":"2022-04-07"},{"lineNumber":2,"author":{"gitId":"chuashihong"},"content":"//","lastModifiedDate":"2022-04-07"},{"lineNumber":3,"author":{"gitId":"chuashihong"},"content":"//import static seedu.address.logic.commands.CommandTestUtil.assertCommandSuccess;","lastModifiedDate":"2022-04-07"},{"lineNumber":4,"author":{"gitId":"chuashihong"},"content":"//import static seedu.address.logic.commands.CommandTestUtil.showClientAtIndex;","lastModifiedDate":"2022-04-07"},{"lineNumber":5,"author":{"gitId":"chuashihong"},"content":"//import static seedu.address.testutil.TypicalClients.getTypicalAddressBook;","lastModifiedDate":"2022-04-07"},{"lineNumber":6,"author":{"gitId":"chuashihong"},"content":"//import static seedu.address.testutil.TypicalIndexes.INDEX_FIRST_CLIENT;","lastModifiedDate":"2022-04-07"},{"lineNumber":7,"author":{"gitId":"chuashihong"},"content":"//","lastModifiedDate":"2022-04-07"},{"lineNumber":8,"author":{"gitId":"chuashihong"},"content":"//import org.junit.jupiter.api.BeforeEach;","lastModifiedDate":"2022-04-07"},{"lineNumber":9,"author":{"gitId":"chuashihong"},"content":"//import org.junit.jupiter.api.Test;","lastModifiedDate":"2022-04-07"},{"lineNumber":10,"author":{"gitId":"chuashihong"},"content":"//","lastModifiedDate":"2022-04-07"},{"lineNumber":11,"author":{"gitId":"chuashihong"},"content":"//import seedu.address.model.BuyerAddressBook;","lastModifiedDate":"2022-04-07"},{"lineNumber":12,"author":{"gitId":"chuashihong"},"content":"//import seedu.address.model.Model;","lastModifiedDate":"2022-04-07"},{"lineNumber":13,"author":{"gitId":"chuashihong"},"content":"//import seedu.address.model.ModelManager;","lastModifiedDate":"2022-04-07"},{"lineNumber":14,"author":{"gitId":"chuashihong"},"content":"//import seedu.address.model.SellerAddressBook;","lastModifiedDate":"2022-04-07"},{"lineNumber":15,"author":{"gitId":"chuashihong"},"content":"//import seedu.address.model.UserPrefs;","lastModifiedDate":"2022-04-07"},{"lineNumber":16,"author":{"gitId":"chuashihong"},"content":"//","lastModifiedDate":"2022-04-07"},{"lineNumber":17,"author":{"gitId":"chuashihong"},"content":"///**","lastModifiedDate":"2022-04-07"},{"lineNumber":18,"author":{"gitId":"chuashihong"},"content":"// * Contains integration tests (interaction with the Model) and unit tests for ListCommand.","lastModifiedDate":"2022-04-07"},{"lineNumber":19,"author":{"gitId":"chuashihong"},"content":"// */","lastModifiedDate":"2022-04-07"},{"lineNumber":20,"author":{"gitId":"chuashihong"},"content":"//public class ListCommandTest {","lastModifiedDate":"2022-04-07"},{"lineNumber":21,"author":{"gitId":"chuashihong"},"content":"//","lastModifiedDate":"2022-04-07"},{"lineNumber":22,"author":{"gitId":"chuashihong"},"content":"//    private Model model;","lastModifiedDate":"2022-04-07"},{"lineNumber":23,"author":{"gitId":"chuashihong"},"content":"//    private Model expectedModel;","lastModifiedDate":"2022-04-07"},{"lineNumber":24,"author":{"gitId":"chuashihong"},"content":"//","lastModifiedDate":"2022-04-07"},{"lineNumber":25,"author":{"gitId":"chuashihong"},"content":"//    @BeforeEach","lastModifiedDate":"2022-04-07"},{"lineNumber":26,"author":{"gitId":"chuashihong"},"content":"//    public void setUp() {","lastModifiedDate":"2022-04-07"},{"lineNumber":27,"author":{"gitId":"chuashihong"},"content":"//        model \u003d new ModelManager(getTypicalAddressBook(), new UserPrefs(), new SellerAddressBook(),","lastModifiedDate":"2022-04-07"},{"lineNumber":28,"author":{"gitId":"chuashihong"},"content":"//                new BuyerAddressBook());","lastModifiedDate":"2022-04-07"},{"lineNumber":29,"author":{"gitId":"chuashihong"},"content":"//        expectedModel \u003d new ModelManager(model.getAddressBook(), new UserPrefs(), new SellerAddressBook(),","lastModifiedDate":"2022-04-07"},{"lineNumber":30,"author":{"gitId":"chuashihong"},"content":"//                new BuyerAddressBook());","lastModifiedDate":"2022-04-07"},{"lineNumber":31,"author":{"gitId":"chuashihong"},"content":"//    }","lastModifiedDate":"2022-04-07"},{"lineNumber":32,"author":{"gitId":"chuashihong"},"content":"//","lastModifiedDate":"2022-04-07"},{"lineNumber":33,"author":{"gitId":"chuashihong"},"content":"//    @Test","lastModifiedDate":"2022-04-07"},{"lineNumber":34,"author":{"gitId":"chuashihong"},"content":"//    public void execute_listIsNotFiltered_showsSameList() {","lastModifiedDate":"2022-04-07"},{"lineNumber":35,"author":{"gitId":"chuashihong"},"content":"//        assertCommandSuccess(new ListCommand(), model, ListCommand.MESSAGE_SUCCESS, expectedModel);","lastModifiedDate":"2022-04-07"},{"lineNumber":36,"author":{"gitId":"chuashihong"},"content":"//    }","lastModifiedDate":"2022-04-07"},{"lineNumber":37,"author":{"gitId":"chuashihong"},"content":"//","lastModifiedDate":"2022-04-07"},{"lineNumber":38,"author":{"gitId":"chuashihong"},"content":"//    @Test","lastModifiedDate":"2022-04-07"},{"lineNumber":39,"author":{"gitId":"chuashihong"},"content":"//    public void execute_listIsFiltered_showsEverything() {","lastModifiedDate":"2022-04-07"},{"lineNumber":40,"author":{"gitId":"chuashihong"},"content":"//        showClientAtIndex(model, INDEX_FIRST_CLIENT);","lastModifiedDate":"2022-04-07"},{"lineNumber":41,"author":{"gitId":"chuashihong"},"content":"//        assertCommandSuccess(new ListCommand(), model, ListCommand.MESSAGE_SUCCESS, expectedModel);","lastModifiedDate":"2022-04-07"},{"lineNumber":42,"author":{"gitId":"chuashihong"},"content":"//    }","lastModifiedDate":"2022-04-07"},{"lineNumber":43,"author":{"gitId":"chuashihong"},"content":"//}","lastModifiedDate":"2022-04-07"}],"authorContributionMap":{"chuashihong":43}},{"path":"src/test/java/seedu/address/logic/commands/ListSellerCommandTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"cwnm"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2022-03-29"},{"lineNumber":2,"author":{"gitId":"cwnm"},"content":"","lastModifiedDate":"2022-03-29"},{"lineNumber":3,"author":{"gitId":"chuashihong"},"content":"import static seedu.address.logic.commands.SellerCommandTestUtil.assertCommandSuccess;","lastModifiedDate":"2022-04-07"},{"lineNumber":4,"author":{"gitId":"cwnm"},"content":"import static seedu.address.testutil.TypicalClients.getTypicalAddressBook;","lastModifiedDate":"2022-03-29"},{"lineNumber":5,"author":{"gitId":"cwnm"},"content":"","lastModifiedDate":"2022-03-29"},{"lineNumber":6,"author":{"gitId":"cwnm"},"content":"import org.junit.jupiter.api.BeforeEach;","lastModifiedDate":"2022-03-29"},{"lineNumber":7,"author":{"gitId":"cwnm"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2022-03-29"},{"lineNumber":8,"author":{"gitId":"cwnm"},"content":"","lastModifiedDate":"2022-03-29"},{"lineNumber":9,"author":{"gitId":"cwnm"},"content":"import seedu.address.model.BuyerAddressBook;","lastModifiedDate":"2022-03-29"},{"lineNumber":10,"author":{"gitId":"cwnm"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2022-03-29"},{"lineNumber":11,"author":{"gitId":"cwnm"},"content":"import seedu.address.model.ModelManager;","lastModifiedDate":"2022-03-29"},{"lineNumber":12,"author":{"gitId":"cwnm"},"content":"import seedu.address.model.SellerAddressBook;","lastModifiedDate":"2022-03-29"},{"lineNumber":13,"author":{"gitId":"cwnm"},"content":"import seedu.address.model.UserPrefs;","lastModifiedDate":"2022-03-29"},{"lineNumber":14,"author":{"gitId":"cwnm"},"content":"","lastModifiedDate":"2022-03-29"},{"lineNumber":15,"author":{"gitId":"cwnm"},"content":"/**","lastModifiedDate":"2022-03-29"},{"lineNumber":16,"author":{"gitId":"cwnm"},"content":" * Contains integration tests (interaction with the Model) and unit tests for ListCommand.","lastModifiedDate":"2022-03-29"},{"lineNumber":17,"author":{"gitId":"cwnm"},"content":" */","lastModifiedDate":"2022-03-29"},{"lineNumber":18,"author":{"gitId":"cwnm"},"content":"public class ListSellerCommandTest {","lastModifiedDate":"2022-03-29"},{"lineNumber":19,"author":{"gitId":"cwnm"},"content":"","lastModifiedDate":"2022-03-29"},{"lineNumber":20,"author":{"gitId":"cwnm"},"content":"    private Model model;","lastModifiedDate":"2022-03-29"},{"lineNumber":21,"author":{"gitId":"cwnm"},"content":"    private Model expectedModel;","lastModifiedDate":"2022-03-29"},{"lineNumber":22,"author":{"gitId":"cwnm"},"content":"","lastModifiedDate":"2022-03-29"},{"lineNumber":23,"author":{"gitId":"cwnm"},"content":"    @BeforeEach","lastModifiedDate":"2022-03-29"},{"lineNumber":24,"author":{"gitId":"cwnm"},"content":"    public void setUp() {","lastModifiedDate":"2022-03-29"},{"lineNumber":25,"author":{"gitId":"cwnm"},"content":"        model \u003d new ModelManager(getTypicalAddressBook(), new UserPrefs(), new SellerAddressBook(),","lastModifiedDate":"2022-03-29"},{"lineNumber":26,"author":{"gitId":"cwnm"},"content":"                new BuyerAddressBook());","lastModifiedDate":"2022-03-29"},{"lineNumber":27,"author":{"gitId":"cwnm"},"content":"        expectedModel \u003d new ModelManager(model.getAddressBook(), new UserPrefs(), new SellerAddressBook(),","lastModifiedDate":"2022-03-29"},{"lineNumber":28,"author":{"gitId":"cwnm"},"content":"                new BuyerAddressBook());","lastModifiedDate":"2022-03-29"},{"lineNumber":29,"author":{"gitId":"cwnm"},"content":"    }","lastModifiedDate":"2022-03-29"},{"lineNumber":30,"author":{"gitId":"cwnm"},"content":"","lastModifiedDate":"2022-03-29"},{"lineNumber":31,"author":{"gitId":"cwnm"},"content":"    @Test","lastModifiedDate":"2022-03-29"},{"lineNumber":32,"author":{"gitId":"cwnm"},"content":"    public void execute_sellerListIsNotFiltered_showsSameList() {","lastModifiedDate":"2022-03-29"},{"lineNumber":33,"author":{"gitId":"cwnm"},"content":"        assertCommandSuccess(new ListSellerCommand(), model, ListSellerCommand.MESSAGE_SUCCESS, expectedModel);","lastModifiedDate":"2022-03-29"},{"lineNumber":34,"author":{"gitId":"cwnm"},"content":"    }","lastModifiedDate":"2022-03-29"},{"lineNumber":35,"author":{"gitId":"cwnm"},"content":"","lastModifiedDate":"2022-03-29"},{"lineNumber":36,"author":{"gitId":"cwnm"},"content":"}","lastModifiedDate":"2022-03-29"}],"authorContributionMap":{"cwnm":35,"chuashihong":1}},{"path":"src/test/java/seedu/address/logic/commands/MatchCommandTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"janald99"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2022-04-07"},{"lineNumber":2,"author":{"gitId":"janald99"},"content":"","lastModifiedDate":"2022-04-07"},{"lineNumber":3,"author":{"gitId":"janald99"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2022-04-07"},{"lineNumber":4,"author":{"gitId":"janald99"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2022-04-07"},{"lineNumber":5,"author":{"gitId":"janald99"},"content":"import static seedu.address.logic.commands.BuyerCommandTestUtil.assertCommandFailure;","lastModifiedDate":"2022-04-07"},{"lineNumber":6,"author":{"gitId":"janald99"},"content":"import static seedu.address.logic.commands.BuyerCommandTestUtil.assertCommandSuccess;","lastModifiedDate":"2022-04-07"},{"lineNumber":7,"author":{"gitId":"chuashihong"},"content":"import static seedu.address.testutil.TypicalIndexes.INDEX_FORTH_BUYER;","lastModifiedDate":"2022-04-08"},{"lineNumber":8,"author":{"gitId":"chuashihong"},"content":"import static seedu.address.testutil.TypicalIndexes.INDEX_THIRD_BUYER;","lastModifiedDate":"2022-04-07"},{"lineNumber":9,"author":{"gitId":"janald99"},"content":"","lastModifiedDate":"2022-04-07"},{"lineNumber":10,"author":{"gitId":"janald99"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2022-04-07"},{"lineNumber":11,"author":{"gitId":"janald99"},"content":"","lastModifiedDate":"2022-04-07"},{"lineNumber":12,"author":{"gitId":"janald99"},"content":"import seedu.address.commons.core.Messages;","lastModifiedDate":"2022-04-07"},{"lineNumber":13,"author":{"gitId":"janald99"},"content":"import seedu.address.commons.core.index.Index;","lastModifiedDate":"2022-04-07"},{"lineNumber":14,"author":{"gitId":"janald99"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2022-04-07"},{"lineNumber":15,"author":{"gitId":"janald99"},"content":"import seedu.address.model.ModelManager;","lastModifiedDate":"2022-04-07"},{"lineNumber":16,"author":{"gitId":"janald99"},"content":"import seedu.address.model.SellerAddressBook;","lastModifiedDate":"2022-04-07"},{"lineNumber":17,"author":{"gitId":"janald99"},"content":"import seedu.address.model.UserPrefs;","lastModifiedDate":"2022-04-07"},{"lineNumber":18,"author":{"gitId":"janald99"},"content":"import seedu.address.model.buyer.Buyer;","lastModifiedDate":"2022-04-07"},{"lineNumber":19,"author":{"gitId":"janald99"},"content":"import seedu.address.model.seller.AllFieldsMatchBuyerPredicate;","lastModifiedDate":"2022-04-07"},{"lineNumber":20,"author":{"gitId":"janald99"},"content":"import seedu.address.testutil.TypicalBuyers;","lastModifiedDate":"2022-04-07"},{"lineNumber":21,"author":{"gitId":"janald99"},"content":"import seedu.address.testutil.TypicalClients;","lastModifiedDate":"2022-04-07"},{"lineNumber":22,"author":{"gitId":"janald99"},"content":"import seedu.address.testutil.TypicalSellers;","lastModifiedDate":"2022-04-07"},{"lineNumber":23,"author":{"gitId":"janald99"},"content":"","lastModifiedDate":"2022-04-07"},{"lineNumber":24,"author":{"gitId":"janald99"},"content":"","lastModifiedDate":"2022-04-07"},{"lineNumber":25,"author":{"gitId":"janald99"},"content":"/**","lastModifiedDate":"2022-04-07"},{"lineNumber":26,"author":{"gitId":"janald99"},"content":" * Contains integration tests (interaction with the Model) for {@code MatchCommand}.","lastModifiedDate":"2022-04-07"},{"lineNumber":27,"author":{"gitId":"janald99"},"content":" */","lastModifiedDate":"2022-04-07"},{"lineNumber":28,"author":{"gitId":"janald99"},"content":"public class MatchCommandTest {","lastModifiedDate":"2022-04-07"},{"lineNumber":29,"author":{"gitId":"janald99"},"content":"","lastModifiedDate":"2022-04-07"},{"lineNumber":30,"author":{"gitId":"janald99"},"content":"    private Model model \u003d new ModelManager(TypicalClients.getTypicalAddressBook(), new UserPrefs(),","lastModifiedDate":"2022-04-07"},{"lineNumber":31,"author":{"gitId":"janald99"},"content":"        TypicalSellers.getTypicalSellerAddressBook(), TypicalBuyers.getTypicalBuyerAddressBook());","lastModifiedDate":"2022-04-07"},{"lineNumber":32,"author":{"gitId":"janald99"},"content":"","lastModifiedDate":"2022-04-07"},{"lineNumber":33,"author":{"gitId":"janald99"},"content":"    @Test","lastModifiedDate":"2022-04-07"},{"lineNumber":34,"author":{"gitId":"janald99"},"content":"    public void execute_validIndexUnfilteredList_success() {","lastModifiedDate":"2022-04-07"},{"lineNumber":35,"author":{"gitId":"chuashihong"},"content":"        Buyer buyerToMatch \u003d model.getFilteredBuyerList().get(INDEX_THIRD_BUYER.getZeroBased());","lastModifiedDate":"2022-04-07"},{"lineNumber":36,"author":{"gitId":"janald99"},"content":"","lastModifiedDate":"2022-04-07"},{"lineNumber":37,"author":{"gitId":"chuashihong"},"content":"        MatchCommand matchCommand \u003d new MatchCommand(INDEX_THIRD_BUYER);","lastModifiedDate":"2022-04-07"},{"lineNumber":38,"author":{"gitId":"janald99"},"content":"","lastModifiedDate":"2022-04-07"},{"lineNumber":39,"author":{"gitId":"janald99"},"content":"        AllFieldsMatchBuyerPredicate predicate \u003d new AllFieldsMatchBuyerPredicate(buyerToMatch);","lastModifiedDate":"2022-04-07"},{"lineNumber":40,"author":{"gitId":"janald99"},"content":"","lastModifiedDate":"2022-04-07"},{"lineNumber":41,"author":{"gitId":"chuashihong"},"content":"        String expectedMessage \u003d String.format(Messages.MESSAGE_SELLERS_LISTED_OVERVIEW, 4);","lastModifiedDate":"2022-04-08"},{"lineNumber":42,"author":{"gitId":"janald99"},"content":"","lastModifiedDate":"2022-04-07"},{"lineNumber":43,"author":{"gitId":"janald99"},"content":"        ModelManager expectedModel \u003d new ModelManager(model.getAddressBook(),","lastModifiedDate":"2022-04-07"},{"lineNumber":44,"author":{"gitId":"janald99"},"content":"              new UserPrefs(), new SellerAddressBook(),","lastModifiedDate":"2022-04-07"},{"lineNumber":45,"author":{"gitId":"janald99"},"content":"            TypicalBuyers.getTypicalBuyerAddressBook());","lastModifiedDate":"2022-04-07"},{"lineNumber":46,"author":{"gitId":"janald99"},"content":"","lastModifiedDate":"2022-04-07"},{"lineNumber":47,"author":{"gitId":"janald99"},"content":"        expectedModel.updateFilteredSellerList(predicate);","lastModifiedDate":"2022-04-07"},{"lineNumber":48,"author":{"gitId":"janald99"},"content":"","lastModifiedDate":"2022-04-07"},{"lineNumber":49,"author":{"gitId":"janald99"},"content":"        assertCommandSuccess(matchCommand, model, expectedMessage, expectedModel);","lastModifiedDate":"2022-04-07"},{"lineNumber":50,"author":{"gitId":"janald99"},"content":"    }","lastModifiedDate":"2022-04-07"},{"lineNumber":51,"author":{"gitId":"janald99"},"content":"","lastModifiedDate":"2022-04-07"},{"lineNumber":52,"author":{"gitId":"janald99"},"content":"    @Test","lastModifiedDate":"2022-04-07"},{"lineNumber":53,"author":{"gitId":"janald99"},"content":"    public void execute_noPropertyAdded_failure() {","lastModifiedDate":"2022-04-07"},{"lineNumber":54,"author":{"gitId":"chuashihong"},"content":"        Buyer buyerToMatch \u003d model.getFilteredBuyerList().get(INDEX_FORTH_BUYER.getZeroBased());","lastModifiedDate":"2022-04-08"},{"lineNumber":55,"author":{"gitId":"janald99"},"content":"","lastModifiedDate":"2022-04-07"},{"lineNumber":56,"author":{"gitId":"chuashihong"},"content":"        MatchCommand matchCommand \u003d new MatchCommand(INDEX_FORTH_BUYER);","lastModifiedDate":"2022-04-08"},{"lineNumber":57,"author":{"gitId":"janald99"},"content":"","lastModifiedDate":"2022-04-07"},{"lineNumber":58,"author":{"gitId":"janald99"},"content":"        AllFieldsMatchBuyerPredicate predicate \u003d new AllFieldsMatchBuyerPredicate(buyerToMatch);","lastModifiedDate":"2022-04-07"},{"lineNumber":59,"author":{"gitId":"janald99"},"content":"","lastModifiedDate":"2022-04-07"},{"lineNumber":60,"author":{"gitId":"janald99"},"content":"        String expectedMessage \u003d String.format(Messages.MESSAGE_NO_PROPERTY_ADDED);","lastModifiedDate":"2022-04-07"},{"lineNumber":61,"author":{"gitId":"janald99"},"content":"","lastModifiedDate":"2022-04-07"},{"lineNumber":62,"author":{"gitId":"janald99"},"content":"        assertCommandFailure(matchCommand, model, expectedMessage);","lastModifiedDate":"2022-04-07"},{"lineNumber":63,"author":{"gitId":"janald99"},"content":"    }","lastModifiedDate":"2022-04-07"},{"lineNumber":64,"author":{"gitId":"janald99"},"content":"","lastModifiedDate":"2022-04-07"},{"lineNumber":65,"author":{"gitId":"janald99"},"content":"    @Test","lastModifiedDate":"2022-04-07"},{"lineNumber":66,"author":{"gitId":"janald99"},"content":"    public void equals() {","lastModifiedDate":"2022-04-07"},{"lineNumber":67,"author":{"gitId":"janald99"},"content":"        Index firstIndex \u003d Index.fromZeroBased(1);","lastModifiedDate":"2022-04-07"},{"lineNumber":68,"author":{"gitId":"janald99"},"content":"        Index secondIndex \u003d Index.fromZeroBased(1);","lastModifiedDate":"2022-04-07"},{"lineNumber":69,"author":{"gitId":"janald99"},"content":"        Index thirdIndex \u003d Index.fromZeroBased(2);","lastModifiedDate":"2022-04-07"},{"lineNumber":70,"author":{"gitId":"janald99"},"content":"","lastModifiedDate":"2022-04-07"},{"lineNumber":71,"author":{"gitId":"janald99"},"content":"        MatchCommand matchFirstCommand \u003d new MatchCommand(firstIndex);","lastModifiedDate":"2022-04-07"},{"lineNumber":72,"author":{"gitId":"janald99"},"content":"        MatchCommand matchSecondCommand \u003d new MatchCommand(secondIndex);","lastModifiedDate":"2022-04-07"},{"lineNumber":73,"author":{"gitId":"janald99"},"content":"        MatchCommand matchThirdCommand \u003d new MatchCommand(thirdIndex);","lastModifiedDate":"2022-04-07"},{"lineNumber":74,"author":{"gitId":"janald99"},"content":"","lastModifiedDate":"2022-04-07"},{"lineNumber":75,"author":{"gitId":"janald99"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2022-04-07"},{"lineNumber":76,"author":{"gitId":"janald99"},"content":"        assertTrue(matchFirstCommand.equals(matchFirstCommand));","lastModifiedDate":"2022-04-07"},{"lineNumber":77,"author":{"gitId":"janald99"},"content":"","lastModifiedDate":"2022-04-07"},{"lineNumber":78,"author":{"gitId":"janald99"},"content":"        // same values -\u003e returns true","lastModifiedDate":"2022-04-07"},{"lineNumber":79,"author":{"gitId":"janald99"},"content":"        assertTrue(matchFirstCommand.equals(matchSecondCommand));","lastModifiedDate":"2022-04-07"},{"lineNumber":80,"author":{"gitId":"janald99"},"content":"","lastModifiedDate":"2022-04-07"},{"lineNumber":81,"author":{"gitId":"janald99"},"content":"        // different types -\u003e returns false","lastModifiedDate":"2022-04-07"},{"lineNumber":82,"author":{"gitId":"janald99"},"content":"        assertFalse(matchFirstCommand.equals(1));","lastModifiedDate":"2022-04-07"},{"lineNumber":83,"author":{"gitId":"janald99"},"content":"","lastModifiedDate":"2022-04-07"},{"lineNumber":84,"author":{"gitId":"janald99"},"content":"        // null -\u003e returns false","lastModifiedDate":"2022-04-07"},{"lineNumber":85,"author":{"gitId":"janald99"},"content":"        assertFalse(matchFirstCommand.equals(null));","lastModifiedDate":"2022-04-07"},{"lineNumber":86,"author":{"gitId":"janald99"},"content":"","lastModifiedDate":"2022-04-07"},{"lineNumber":87,"author":{"gitId":"janald99"},"content":"        // different command -\u003e returns false","lastModifiedDate":"2022-04-07"},{"lineNumber":88,"author":{"gitId":"janald99"},"content":"        assertFalse(matchFirstCommand.equals(matchThirdCommand));","lastModifiedDate":"2022-04-07"},{"lineNumber":89,"author":{"gitId":"janald99"},"content":"    }","lastModifiedDate":"2022-04-07"},{"lineNumber":90,"author":{"gitId":"janald99"},"content":"}","lastModifiedDate":"2022-04-07"}],"authorContributionMap":{"janald99":83,"chuashihong":7}},{"path":"src/test/java/seedu/address/logic/commands/MatchHouseTypeCommandTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"janald99"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2022-04-07"},{"lineNumber":2,"author":{"gitId":"janald99"},"content":"","lastModifiedDate":"2022-04-07"},{"lineNumber":3,"author":{"gitId":"janald99"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2022-04-07"},{"lineNumber":4,"author":{"gitId":"janald99"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2022-04-07"},{"lineNumber":5,"author":{"gitId":"janald99"},"content":"import static seedu.address.logic.commands.BuyerCommandTestUtil.assertCommandFailure;","lastModifiedDate":"2022-04-07"},{"lineNumber":6,"author":{"gitId":"janald99"},"content":"import static seedu.address.logic.commands.BuyerCommandTestUtil.assertCommandSuccess;","lastModifiedDate":"2022-04-07"},{"lineNumber":7,"author":{"gitId":"chuashihong"},"content":"import static seedu.address.testutil.TypicalIndexes.INDEX_FORTH_BUYER;","lastModifiedDate":"2022-04-08"},{"lineNumber":8,"author":{"gitId":"chuashihong"},"content":"import static seedu.address.testutil.TypicalIndexes.INDEX_THIRD_BUYER;","lastModifiedDate":"2022-04-07"},{"lineNumber":9,"author":{"gitId":"janald99"},"content":"","lastModifiedDate":"2022-04-07"},{"lineNumber":10,"author":{"gitId":"janald99"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2022-04-07"},{"lineNumber":11,"author":{"gitId":"janald99"},"content":"","lastModifiedDate":"2022-04-07"},{"lineNumber":12,"author":{"gitId":"janald99"},"content":"import seedu.address.commons.core.Messages;","lastModifiedDate":"2022-04-07"},{"lineNumber":13,"author":{"gitId":"janald99"},"content":"import seedu.address.commons.core.index.Index;","lastModifiedDate":"2022-04-07"},{"lineNumber":14,"author":{"gitId":"janald99"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2022-04-07"},{"lineNumber":15,"author":{"gitId":"janald99"},"content":"import seedu.address.model.ModelManager;","lastModifiedDate":"2022-04-07"},{"lineNumber":16,"author":{"gitId":"janald99"},"content":"import seedu.address.model.SellerAddressBook;","lastModifiedDate":"2022-04-07"},{"lineNumber":17,"author":{"gitId":"janald99"},"content":"import seedu.address.model.UserPrefs;","lastModifiedDate":"2022-04-07"},{"lineNumber":18,"author":{"gitId":"janald99"},"content":"import seedu.address.model.buyer.Buyer;","lastModifiedDate":"2022-04-07"},{"lineNumber":19,"author":{"gitId":"janald99"},"content":"import seedu.address.model.seller.HouseTypeMatchBuyerPredicate;","lastModifiedDate":"2022-04-07"},{"lineNumber":20,"author":{"gitId":"janald99"},"content":"import seedu.address.testutil.TypicalBuyers;","lastModifiedDate":"2022-04-07"},{"lineNumber":21,"author":{"gitId":"janald99"},"content":"import seedu.address.testutil.TypicalClients;","lastModifiedDate":"2022-04-07"},{"lineNumber":22,"author":{"gitId":"janald99"},"content":"import seedu.address.testutil.TypicalSellers;","lastModifiedDate":"2022-04-07"},{"lineNumber":23,"author":{"gitId":"janald99"},"content":"","lastModifiedDate":"2022-04-07"},{"lineNumber":24,"author":{"gitId":"janald99"},"content":"class MatchHouseTypeCommandTest {","lastModifiedDate":"2022-04-07"},{"lineNumber":25,"author":{"gitId":"janald99"},"content":"","lastModifiedDate":"2022-04-07"},{"lineNumber":26,"author":{"gitId":"janald99"},"content":"    private Model model \u003d new ModelManager(TypicalClients.getTypicalAddressBook(), new UserPrefs(),","lastModifiedDate":"2022-04-07"},{"lineNumber":27,"author":{"gitId":"janald99"},"content":"        TypicalSellers.getTypicalSellerAddressBook(), TypicalBuyers.getTypicalBuyerAddressBook());","lastModifiedDate":"2022-04-07"},{"lineNumber":28,"author":{"gitId":"janald99"},"content":"","lastModifiedDate":"2022-04-07"},{"lineNumber":29,"author":{"gitId":"janald99"},"content":"    @Test","lastModifiedDate":"2022-04-07"},{"lineNumber":30,"author":{"gitId":"janald99"},"content":"    public void execute_validIndexUnfilteredList_success() {","lastModifiedDate":"2022-04-07"},{"lineNumber":31,"author":{"gitId":"chuashihong"},"content":"        Buyer buyerToMatch \u003d model.getFilteredBuyerList().get(INDEX_THIRD_BUYER.getZeroBased());","lastModifiedDate":"2022-04-07"},{"lineNumber":32,"author":{"gitId":"janald99"},"content":"","lastModifiedDate":"2022-04-07"},{"lineNumber":33,"author":{"gitId":"chuashihong"},"content":"        MatchHouseTypeCommand matchCommand \u003d new MatchHouseTypeCommand(INDEX_THIRD_BUYER);","lastModifiedDate":"2022-04-07"},{"lineNumber":34,"author":{"gitId":"janald99"},"content":"","lastModifiedDate":"2022-04-07"},{"lineNumber":35,"author":{"gitId":"janald99"},"content":"        HouseTypeMatchBuyerPredicate predicate \u003d new HouseTypeMatchBuyerPredicate(buyerToMatch);","lastModifiedDate":"2022-04-07"},{"lineNumber":36,"author":{"gitId":"janald99"},"content":"","lastModifiedDate":"2022-04-07"},{"lineNumber":37,"author":{"gitId":"chuashihong"},"content":"        String expectedMessage \u003d String.format(Messages.MESSAGE_SELLERS_LISTED_OVERVIEW, 7);","lastModifiedDate":"2022-04-08"},{"lineNumber":38,"author":{"gitId":"janald99"},"content":"","lastModifiedDate":"2022-04-07"},{"lineNumber":39,"author":{"gitId":"janald99"},"content":"        ModelManager expectedModel \u003d new ModelManager(model.getAddressBook(),","lastModifiedDate":"2022-04-07"},{"lineNumber":40,"author":{"gitId":"janald99"},"content":"            new UserPrefs(), new SellerAddressBook(),","lastModifiedDate":"2022-04-07"},{"lineNumber":41,"author":{"gitId":"janald99"},"content":"            TypicalBuyers.getTypicalBuyerAddressBook());","lastModifiedDate":"2022-04-07"},{"lineNumber":42,"author":{"gitId":"janald99"},"content":"","lastModifiedDate":"2022-04-07"},{"lineNumber":43,"author":{"gitId":"janald99"},"content":"        expectedModel.updateFilteredSellerList(predicate);","lastModifiedDate":"2022-04-07"},{"lineNumber":44,"author":{"gitId":"janald99"},"content":"","lastModifiedDate":"2022-04-07"},{"lineNumber":45,"author":{"gitId":"janald99"},"content":"        assertCommandSuccess(matchCommand, model, expectedMessage, expectedModel);","lastModifiedDate":"2022-04-07"},{"lineNumber":46,"author":{"gitId":"janald99"},"content":"    }","lastModifiedDate":"2022-04-07"},{"lineNumber":47,"author":{"gitId":"janald99"},"content":"","lastModifiedDate":"2022-04-07"},{"lineNumber":48,"author":{"gitId":"janald99"},"content":"    @Test","lastModifiedDate":"2022-04-07"},{"lineNumber":49,"author":{"gitId":"janald99"},"content":"    public void execute_noPropertyAdded_failure() {","lastModifiedDate":"2022-04-07"},{"lineNumber":50,"author":{"gitId":"chuashihong"},"content":"        Buyer buyerToMatch \u003d model.getFilteredBuyerList().get(INDEX_FORTH_BUYER.getZeroBased());","lastModifiedDate":"2022-04-08"},{"lineNumber":51,"author":{"gitId":"janald99"},"content":"","lastModifiedDate":"2022-04-07"},{"lineNumber":52,"author":{"gitId":"chuashihong"},"content":"        MatchHouseTypeCommand matchCommand \u003d new MatchHouseTypeCommand(INDEX_FORTH_BUYER);","lastModifiedDate":"2022-04-08"},{"lineNumber":53,"author":{"gitId":"janald99"},"content":"","lastModifiedDate":"2022-04-07"},{"lineNumber":54,"author":{"gitId":"janald99"},"content":"        HouseTypeMatchBuyerPredicate predicate \u003d new HouseTypeMatchBuyerPredicate(buyerToMatch);","lastModifiedDate":"2022-04-07"},{"lineNumber":55,"author":{"gitId":"janald99"},"content":"","lastModifiedDate":"2022-04-07"},{"lineNumber":56,"author":{"gitId":"janald99"},"content":"        String expectedMessage \u003d String.format(Messages.MESSAGE_NO_PROPERTY_ADDED);","lastModifiedDate":"2022-04-07"},{"lineNumber":57,"author":{"gitId":"janald99"},"content":"","lastModifiedDate":"2022-04-07"},{"lineNumber":58,"author":{"gitId":"janald99"},"content":"        assertCommandFailure(matchCommand, model, expectedMessage);","lastModifiedDate":"2022-04-07"},{"lineNumber":59,"author":{"gitId":"janald99"},"content":"    }","lastModifiedDate":"2022-04-07"},{"lineNumber":60,"author":{"gitId":"janald99"},"content":"","lastModifiedDate":"2022-04-07"},{"lineNumber":61,"author":{"gitId":"janald99"},"content":"    @Test","lastModifiedDate":"2022-04-07"},{"lineNumber":62,"author":{"gitId":"janald99"},"content":"    public void equals() {","lastModifiedDate":"2022-04-07"},{"lineNumber":63,"author":{"gitId":"janald99"},"content":"        Index firstIndex \u003d Index.fromZeroBased(1);","lastModifiedDate":"2022-04-07"},{"lineNumber":64,"author":{"gitId":"janald99"},"content":"        Index secondIndex \u003d Index.fromZeroBased(1);","lastModifiedDate":"2022-04-07"},{"lineNumber":65,"author":{"gitId":"janald99"},"content":"        Index thirdIndex \u003d Index.fromZeroBased(2);","lastModifiedDate":"2022-04-07"},{"lineNumber":66,"author":{"gitId":"janald99"},"content":"","lastModifiedDate":"2022-04-07"},{"lineNumber":67,"author":{"gitId":"janald99"},"content":"        MatchHouseTypeCommand matchFirstCommand \u003d new MatchHouseTypeCommand(firstIndex);","lastModifiedDate":"2022-04-07"},{"lineNumber":68,"author":{"gitId":"janald99"},"content":"        MatchHouseTypeCommand matchSecondCommand \u003d new MatchHouseTypeCommand(secondIndex);","lastModifiedDate":"2022-04-07"},{"lineNumber":69,"author":{"gitId":"janald99"},"content":"        MatchHouseTypeCommand matchThirdCommand \u003d new MatchHouseTypeCommand(thirdIndex);","lastModifiedDate":"2022-04-07"},{"lineNumber":70,"author":{"gitId":"janald99"},"content":"","lastModifiedDate":"2022-04-07"},{"lineNumber":71,"author":{"gitId":"janald99"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2022-04-07"},{"lineNumber":72,"author":{"gitId":"janald99"},"content":"        assertTrue(matchFirstCommand.equals(matchFirstCommand));","lastModifiedDate":"2022-04-07"},{"lineNumber":73,"author":{"gitId":"janald99"},"content":"","lastModifiedDate":"2022-04-07"},{"lineNumber":74,"author":{"gitId":"janald99"},"content":"        // same values -\u003e returns true","lastModifiedDate":"2022-04-07"},{"lineNumber":75,"author":{"gitId":"janald99"},"content":"        assertTrue(matchFirstCommand.equals(matchSecondCommand));","lastModifiedDate":"2022-04-07"},{"lineNumber":76,"author":{"gitId":"janald99"},"content":"","lastModifiedDate":"2022-04-07"},{"lineNumber":77,"author":{"gitId":"janald99"},"content":"        // different types -\u003e returns false","lastModifiedDate":"2022-04-07"},{"lineNumber":78,"author":{"gitId":"janald99"},"content":"        assertFalse(matchFirstCommand.equals(1));","lastModifiedDate":"2022-04-07"},{"lineNumber":79,"author":{"gitId":"janald99"},"content":"","lastModifiedDate":"2022-04-07"},{"lineNumber":80,"author":{"gitId":"janald99"},"content":"        // null -\u003e returns false","lastModifiedDate":"2022-04-07"},{"lineNumber":81,"author":{"gitId":"janald99"},"content":"        assertFalse(matchFirstCommand.equals(null));","lastModifiedDate":"2022-04-07"},{"lineNumber":82,"author":{"gitId":"janald99"},"content":"","lastModifiedDate":"2022-04-07"},{"lineNumber":83,"author":{"gitId":"janald99"},"content":"        // different command -\u003e returns false","lastModifiedDate":"2022-04-07"},{"lineNumber":84,"author":{"gitId":"janald99"},"content":"        assertFalse(matchFirstCommand.equals(matchThirdCommand));","lastModifiedDate":"2022-04-07"},{"lineNumber":85,"author":{"gitId":"janald99"},"content":"    }","lastModifiedDate":"2022-04-07"},{"lineNumber":86,"author":{"gitId":"janald99"},"content":"}","lastModifiedDate":"2022-04-07"}],"authorContributionMap":{"janald99":79,"chuashihong":7}},{"path":"src/test/java/seedu/address/logic/commands/MatchLocationCommandTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"janald99"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2022-04-07"},{"lineNumber":2,"author":{"gitId":"janald99"},"content":"","lastModifiedDate":"2022-04-07"},{"lineNumber":3,"author":{"gitId":"janald99"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2022-04-07"},{"lineNumber":4,"author":{"gitId":"janald99"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2022-04-07"},{"lineNumber":5,"author":{"gitId":"janald99"},"content":"import static seedu.address.logic.commands.BuyerCommandTestUtil.assertCommandFailure;","lastModifiedDate":"2022-04-07"},{"lineNumber":6,"author":{"gitId":"janald99"},"content":"import static seedu.address.logic.commands.BuyerCommandTestUtil.assertCommandSuccess;","lastModifiedDate":"2022-04-07"},{"lineNumber":7,"author":{"gitId":"chuashihong"},"content":"import static seedu.address.testutil.TypicalIndexes.INDEX_FORTH_BUYER;","lastModifiedDate":"2022-04-08"},{"lineNumber":8,"author":{"gitId":"chuashihong"},"content":"import static seedu.address.testutil.TypicalIndexes.INDEX_THIRD_BUYER;","lastModifiedDate":"2022-04-07"},{"lineNumber":9,"author":{"gitId":"janald99"},"content":"","lastModifiedDate":"2022-04-07"},{"lineNumber":10,"author":{"gitId":"janald99"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2022-04-07"},{"lineNumber":11,"author":{"gitId":"janald99"},"content":"","lastModifiedDate":"2022-04-07"},{"lineNumber":12,"author":{"gitId":"janald99"},"content":"import seedu.address.commons.core.Messages;","lastModifiedDate":"2022-04-07"},{"lineNumber":13,"author":{"gitId":"janald99"},"content":"import seedu.address.commons.core.index.Index;","lastModifiedDate":"2022-04-07"},{"lineNumber":14,"author":{"gitId":"janald99"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2022-04-07"},{"lineNumber":15,"author":{"gitId":"janald99"},"content":"import seedu.address.model.ModelManager;","lastModifiedDate":"2022-04-07"},{"lineNumber":16,"author":{"gitId":"janald99"},"content":"import seedu.address.model.SellerAddressBook;","lastModifiedDate":"2022-04-07"},{"lineNumber":17,"author":{"gitId":"janald99"},"content":"import seedu.address.model.UserPrefs;","lastModifiedDate":"2022-04-07"},{"lineNumber":18,"author":{"gitId":"janald99"},"content":"import seedu.address.model.buyer.Buyer;","lastModifiedDate":"2022-04-07"},{"lineNumber":19,"author":{"gitId":"janald99"},"content":"import seedu.address.model.seller.LocationMatchBuyerPredicate;","lastModifiedDate":"2022-04-07"},{"lineNumber":20,"author":{"gitId":"janald99"},"content":"import seedu.address.testutil.TypicalBuyers;","lastModifiedDate":"2022-04-07"},{"lineNumber":21,"author":{"gitId":"janald99"},"content":"import seedu.address.testutil.TypicalClients;","lastModifiedDate":"2022-04-07"},{"lineNumber":22,"author":{"gitId":"janald99"},"content":"import seedu.address.testutil.TypicalSellers;","lastModifiedDate":"2022-04-07"},{"lineNumber":23,"author":{"gitId":"janald99"},"content":"","lastModifiedDate":"2022-04-07"},{"lineNumber":24,"author":{"gitId":"janald99"},"content":"class MatchLocationCommandTest {","lastModifiedDate":"2022-04-07"},{"lineNumber":25,"author":{"gitId":"janald99"},"content":"","lastModifiedDate":"2022-04-07"},{"lineNumber":26,"author":{"gitId":"janald99"},"content":"    private Model model \u003d new ModelManager(TypicalClients.getTypicalAddressBook(), new UserPrefs(),","lastModifiedDate":"2022-04-07"},{"lineNumber":27,"author":{"gitId":"janald99"},"content":"        TypicalSellers.getTypicalSellerAddressBook(), TypicalBuyers.getTypicalBuyerAddressBook());","lastModifiedDate":"2022-04-07"},{"lineNumber":28,"author":{"gitId":"janald99"},"content":"","lastModifiedDate":"2022-04-07"},{"lineNumber":29,"author":{"gitId":"janald99"},"content":"    @Test","lastModifiedDate":"2022-04-07"},{"lineNumber":30,"author":{"gitId":"janald99"},"content":"    public void execute_validIndexUnfilteredList_success() {","lastModifiedDate":"2022-04-07"},{"lineNumber":31,"author":{"gitId":"chuashihong"},"content":"        Buyer buyerToMatch \u003d model.getFilteredBuyerList().get(INDEX_THIRD_BUYER.getZeroBased());","lastModifiedDate":"2022-04-07"},{"lineNumber":32,"author":{"gitId":"janald99"},"content":"","lastModifiedDate":"2022-04-07"},{"lineNumber":33,"author":{"gitId":"chuashihong"},"content":"        MatchLocationCommand matchCommand \u003d new MatchLocationCommand(INDEX_THIRD_BUYER);","lastModifiedDate":"2022-04-07"},{"lineNumber":34,"author":{"gitId":"janald99"},"content":"","lastModifiedDate":"2022-04-07"},{"lineNumber":35,"author":{"gitId":"janald99"},"content":"        LocationMatchBuyerPredicate predicate \u003d new LocationMatchBuyerPredicate(buyerToMatch);","lastModifiedDate":"2022-04-07"},{"lineNumber":36,"author":{"gitId":"janald99"},"content":"","lastModifiedDate":"2022-04-07"},{"lineNumber":37,"author":{"gitId":"chuashihong"},"content":"        String expectedMessage \u003d String.format(Messages.MESSAGE_SELLERS_LISTED_OVERVIEW, 5);","lastModifiedDate":"2022-04-08"},{"lineNumber":38,"author":{"gitId":"janald99"},"content":"","lastModifiedDate":"2022-04-07"},{"lineNumber":39,"author":{"gitId":"janald99"},"content":"        ModelManager expectedModel \u003d new ModelManager(model.getAddressBook(),","lastModifiedDate":"2022-04-07"},{"lineNumber":40,"author":{"gitId":"janald99"},"content":"            new UserPrefs(), new SellerAddressBook(),","lastModifiedDate":"2022-04-07"},{"lineNumber":41,"author":{"gitId":"janald99"},"content":"            TypicalBuyers.getTypicalBuyerAddressBook());","lastModifiedDate":"2022-04-07"},{"lineNumber":42,"author":{"gitId":"janald99"},"content":"","lastModifiedDate":"2022-04-07"},{"lineNumber":43,"author":{"gitId":"janald99"},"content":"        expectedModel.updateFilteredSellerList(predicate);","lastModifiedDate":"2022-04-07"},{"lineNumber":44,"author":{"gitId":"janald99"},"content":"","lastModifiedDate":"2022-04-07"},{"lineNumber":45,"author":{"gitId":"janald99"},"content":"        assertCommandSuccess(matchCommand, model, expectedMessage, expectedModel);","lastModifiedDate":"2022-04-07"},{"lineNumber":46,"author":{"gitId":"janald99"},"content":"    }","lastModifiedDate":"2022-04-07"},{"lineNumber":47,"author":{"gitId":"janald99"},"content":"","lastModifiedDate":"2022-04-07"},{"lineNumber":48,"author":{"gitId":"janald99"},"content":"    @Test","lastModifiedDate":"2022-04-07"},{"lineNumber":49,"author":{"gitId":"janald99"},"content":"    public void execute_noPropertyAdded_failure() {","lastModifiedDate":"2022-04-07"},{"lineNumber":50,"author":{"gitId":"chuashihong"},"content":"        Buyer buyerToMatch \u003d model.getFilteredBuyerList().get(INDEX_FORTH_BUYER.getZeroBased());","lastModifiedDate":"2022-04-08"},{"lineNumber":51,"author":{"gitId":"janald99"},"content":"","lastModifiedDate":"2022-04-07"},{"lineNumber":52,"author":{"gitId":"chuashihong"},"content":"        MatchLocationCommand matchCommand \u003d new MatchLocationCommand(INDEX_FORTH_BUYER);","lastModifiedDate":"2022-04-08"},{"lineNumber":53,"author":{"gitId":"janald99"},"content":"","lastModifiedDate":"2022-04-07"},{"lineNumber":54,"author":{"gitId":"janald99"},"content":"        LocationMatchBuyerPredicate predicate \u003d new LocationMatchBuyerPredicate(buyerToMatch);","lastModifiedDate":"2022-04-07"},{"lineNumber":55,"author":{"gitId":"janald99"},"content":"","lastModifiedDate":"2022-04-07"},{"lineNumber":56,"author":{"gitId":"janald99"},"content":"        String expectedMessage \u003d String.format(Messages.MESSAGE_NO_PROPERTY_ADDED);","lastModifiedDate":"2022-04-07"},{"lineNumber":57,"author":{"gitId":"janald99"},"content":"","lastModifiedDate":"2022-04-07"},{"lineNumber":58,"author":{"gitId":"janald99"},"content":"        assertCommandFailure(matchCommand, model, expectedMessage);","lastModifiedDate":"2022-04-07"},{"lineNumber":59,"author":{"gitId":"janald99"},"content":"    }","lastModifiedDate":"2022-04-07"},{"lineNumber":60,"author":{"gitId":"janald99"},"content":"","lastModifiedDate":"2022-04-07"},{"lineNumber":61,"author":{"gitId":"janald99"},"content":"    @Test","lastModifiedDate":"2022-04-07"},{"lineNumber":62,"author":{"gitId":"janald99"},"content":"    public void equals() {","lastModifiedDate":"2022-04-07"},{"lineNumber":63,"author":{"gitId":"janald99"},"content":"        Index firstIndex \u003d Index.fromZeroBased(1);","lastModifiedDate":"2022-04-07"},{"lineNumber":64,"author":{"gitId":"janald99"},"content":"        Index secondIndex \u003d Index.fromZeroBased(1);","lastModifiedDate":"2022-04-07"},{"lineNumber":65,"author":{"gitId":"janald99"},"content":"        Index thirdIndex \u003d Index.fromZeroBased(2);","lastModifiedDate":"2022-04-07"},{"lineNumber":66,"author":{"gitId":"janald99"},"content":"","lastModifiedDate":"2022-04-07"},{"lineNumber":67,"author":{"gitId":"janald99"},"content":"        MatchLocationCommand matchFirstCommand \u003d new MatchLocationCommand(firstIndex);","lastModifiedDate":"2022-04-07"},{"lineNumber":68,"author":{"gitId":"janald99"},"content":"        MatchLocationCommand matchSecondCommand \u003d new MatchLocationCommand(secondIndex);","lastModifiedDate":"2022-04-07"},{"lineNumber":69,"author":{"gitId":"janald99"},"content":"        MatchLocationCommand matchThirdCommand \u003d new MatchLocationCommand(thirdIndex);","lastModifiedDate":"2022-04-07"},{"lineNumber":70,"author":{"gitId":"janald99"},"content":"","lastModifiedDate":"2022-04-07"},{"lineNumber":71,"author":{"gitId":"janald99"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2022-04-07"},{"lineNumber":72,"author":{"gitId":"janald99"},"content":"        assertTrue(matchFirstCommand.equals(matchFirstCommand));","lastModifiedDate":"2022-04-07"},{"lineNumber":73,"author":{"gitId":"janald99"},"content":"","lastModifiedDate":"2022-04-07"},{"lineNumber":74,"author":{"gitId":"janald99"},"content":"        // same values -\u003e returns true","lastModifiedDate":"2022-04-07"},{"lineNumber":75,"author":{"gitId":"janald99"},"content":"        assertTrue(matchFirstCommand.equals(matchSecondCommand));","lastModifiedDate":"2022-04-07"},{"lineNumber":76,"author":{"gitId":"janald99"},"content":"","lastModifiedDate":"2022-04-07"},{"lineNumber":77,"author":{"gitId":"janald99"},"content":"        // different types -\u003e returns false","lastModifiedDate":"2022-04-07"},{"lineNumber":78,"author":{"gitId":"janald99"},"content":"        assertFalse(matchFirstCommand.equals(1));","lastModifiedDate":"2022-04-07"},{"lineNumber":79,"author":{"gitId":"janald99"},"content":"","lastModifiedDate":"2022-04-07"},{"lineNumber":80,"author":{"gitId":"janald99"},"content":"        // null -\u003e returns false","lastModifiedDate":"2022-04-07"},{"lineNumber":81,"author":{"gitId":"janald99"},"content":"        assertFalse(matchFirstCommand.equals(null));","lastModifiedDate":"2022-04-07"},{"lineNumber":82,"author":{"gitId":"janald99"},"content":"","lastModifiedDate":"2022-04-07"},{"lineNumber":83,"author":{"gitId":"janald99"},"content":"        // different command -\u003e returns false","lastModifiedDate":"2022-04-07"},{"lineNumber":84,"author":{"gitId":"janald99"},"content":"        assertFalse(matchFirstCommand.equals(matchThirdCommand));","lastModifiedDate":"2022-04-07"},{"lineNumber":85,"author":{"gitId":"janald99"},"content":"    }","lastModifiedDate":"2022-04-07"},{"lineNumber":86,"author":{"gitId":"janald99"},"content":"}","lastModifiedDate":"2022-04-07"}],"authorContributionMap":{"janald99":79,"chuashihong":7}},{"path":"src/test/java/seedu/address/logic/commands/MatchPriceRangeCommandTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"janald99"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2022-04-07"},{"lineNumber":2,"author":{"gitId":"janald99"},"content":"","lastModifiedDate":"2022-04-07"},{"lineNumber":3,"author":{"gitId":"janald99"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2022-04-07"},{"lineNumber":4,"author":{"gitId":"janald99"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2022-04-07"},{"lineNumber":5,"author":{"gitId":"janald99"},"content":"import static seedu.address.logic.commands.BuyerCommandTestUtil.assertCommandFailure;","lastModifiedDate":"2022-04-07"},{"lineNumber":6,"author":{"gitId":"janald99"},"content":"import static seedu.address.logic.commands.BuyerCommandTestUtil.assertCommandSuccess;","lastModifiedDate":"2022-04-07"},{"lineNumber":7,"author":{"gitId":"chuashihong"},"content":"import static seedu.address.testutil.TypicalIndexes.INDEX_FORTH_BUYER;","lastModifiedDate":"2022-04-08"},{"lineNumber":8,"author":{"gitId":"chuashihong"},"content":"import static seedu.address.testutil.TypicalIndexes.INDEX_THIRD_BUYER;","lastModifiedDate":"2022-04-07"},{"lineNumber":9,"author":{"gitId":"janald99"},"content":"","lastModifiedDate":"2022-04-07"},{"lineNumber":10,"author":{"gitId":"janald99"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2022-04-07"},{"lineNumber":11,"author":{"gitId":"janald99"},"content":"","lastModifiedDate":"2022-04-07"},{"lineNumber":12,"author":{"gitId":"janald99"},"content":"import seedu.address.commons.core.Messages;","lastModifiedDate":"2022-04-07"},{"lineNumber":13,"author":{"gitId":"janald99"},"content":"import seedu.address.commons.core.index.Index;","lastModifiedDate":"2022-04-07"},{"lineNumber":14,"author":{"gitId":"janald99"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2022-04-07"},{"lineNumber":15,"author":{"gitId":"janald99"},"content":"import seedu.address.model.ModelManager;","lastModifiedDate":"2022-04-07"},{"lineNumber":16,"author":{"gitId":"janald99"},"content":"import seedu.address.model.SellerAddressBook;","lastModifiedDate":"2022-04-07"},{"lineNumber":17,"author":{"gitId":"janald99"},"content":"import seedu.address.model.UserPrefs;","lastModifiedDate":"2022-04-07"},{"lineNumber":18,"author":{"gitId":"janald99"},"content":"import seedu.address.model.buyer.Buyer;","lastModifiedDate":"2022-04-07"},{"lineNumber":19,"author":{"gitId":"janald99"},"content":"import seedu.address.model.seller.PriceRangeMatchBuyerPredicate;","lastModifiedDate":"2022-04-07"},{"lineNumber":20,"author":{"gitId":"janald99"},"content":"import seedu.address.testutil.TypicalBuyers;","lastModifiedDate":"2022-04-07"},{"lineNumber":21,"author":{"gitId":"janald99"},"content":"import seedu.address.testutil.TypicalClients;","lastModifiedDate":"2022-04-07"},{"lineNumber":22,"author":{"gitId":"janald99"},"content":"import seedu.address.testutil.TypicalSellers;","lastModifiedDate":"2022-04-07"},{"lineNumber":23,"author":{"gitId":"janald99"},"content":"","lastModifiedDate":"2022-04-07"},{"lineNumber":24,"author":{"gitId":"janald99"},"content":"class MatchPriceRangeCommandTest {","lastModifiedDate":"2022-04-07"},{"lineNumber":25,"author":{"gitId":"janald99"},"content":"","lastModifiedDate":"2022-04-07"},{"lineNumber":26,"author":{"gitId":"janald99"},"content":"    private Model model \u003d new ModelManager(TypicalClients.getTypicalAddressBook(), new UserPrefs(),","lastModifiedDate":"2022-04-07"},{"lineNumber":27,"author":{"gitId":"janald99"},"content":"        TypicalSellers.getTypicalSellerAddressBook(), TypicalBuyers.getTypicalBuyerAddressBook());","lastModifiedDate":"2022-04-07"},{"lineNumber":28,"author":{"gitId":"janald99"},"content":"","lastModifiedDate":"2022-04-07"},{"lineNumber":29,"author":{"gitId":"janald99"},"content":"    @Test","lastModifiedDate":"2022-04-07"},{"lineNumber":30,"author":{"gitId":"janald99"},"content":"    public void execute_validIndexUnfilteredList_success() {","lastModifiedDate":"2022-04-07"},{"lineNumber":31,"author":{"gitId":"chuashihong"},"content":"        Buyer buyerToMatch \u003d model.getFilteredBuyerList().get(INDEX_THIRD_BUYER.getZeroBased());","lastModifiedDate":"2022-04-07"},{"lineNumber":32,"author":{"gitId":"janald99"},"content":"","lastModifiedDate":"2022-04-07"},{"lineNumber":33,"author":{"gitId":"chuashihong"},"content":"        MatchPriceRangeCommand matchCommand \u003d new MatchPriceRangeCommand(INDEX_THIRD_BUYER);","lastModifiedDate":"2022-04-07"},{"lineNumber":34,"author":{"gitId":"janald99"},"content":"","lastModifiedDate":"2022-04-07"},{"lineNumber":35,"author":{"gitId":"janald99"},"content":"        PriceRangeMatchBuyerPredicate predicate \u003d new PriceRangeMatchBuyerPredicate(buyerToMatch);","lastModifiedDate":"2022-04-07"},{"lineNumber":36,"author":{"gitId":"janald99"},"content":"","lastModifiedDate":"2022-04-07"},{"lineNumber":37,"author":{"gitId":"chuashihong"},"content":"        String expectedMessage \u003d String.format(Messages.MESSAGE_SELLERS_LISTED_OVERVIEW, 6);","lastModifiedDate":"2022-04-08"},{"lineNumber":38,"author":{"gitId":"janald99"},"content":"","lastModifiedDate":"2022-04-07"},{"lineNumber":39,"author":{"gitId":"janald99"},"content":"        ModelManager expectedModel \u003d new ModelManager(model.getAddressBook(),","lastModifiedDate":"2022-04-07"},{"lineNumber":40,"author":{"gitId":"janald99"},"content":"            new UserPrefs(), new SellerAddressBook(),","lastModifiedDate":"2022-04-07"},{"lineNumber":41,"author":{"gitId":"janald99"},"content":"            TypicalBuyers.getTypicalBuyerAddressBook());","lastModifiedDate":"2022-04-07"},{"lineNumber":42,"author":{"gitId":"janald99"},"content":"","lastModifiedDate":"2022-04-07"},{"lineNumber":43,"author":{"gitId":"janald99"},"content":"        expectedModel.updateFilteredSellerList(predicate);","lastModifiedDate":"2022-04-07"},{"lineNumber":44,"author":{"gitId":"janald99"},"content":"","lastModifiedDate":"2022-04-07"},{"lineNumber":45,"author":{"gitId":"janald99"},"content":"        assertCommandSuccess(matchCommand, model, expectedMessage, expectedModel);","lastModifiedDate":"2022-04-07"},{"lineNumber":46,"author":{"gitId":"janald99"},"content":"    }","lastModifiedDate":"2022-04-07"},{"lineNumber":47,"author":{"gitId":"janald99"},"content":"","lastModifiedDate":"2022-04-07"},{"lineNumber":48,"author":{"gitId":"janald99"},"content":"    @Test","lastModifiedDate":"2022-04-07"},{"lineNumber":49,"author":{"gitId":"janald99"},"content":"    public void execute_noPropertyAdded_failure() {","lastModifiedDate":"2022-04-07"},{"lineNumber":50,"author":{"gitId":"chuashihong"},"content":"        Buyer buyerToMatch \u003d model.getFilteredBuyerList().get(INDEX_FORTH_BUYER.getZeroBased());","lastModifiedDate":"2022-04-08"},{"lineNumber":51,"author":{"gitId":"janald99"},"content":"","lastModifiedDate":"2022-04-07"},{"lineNumber":52,"author":{"gitId":"chuashihong"},"content":"        MatchPriceRangeCommand matchCommand \u003d new MatchPriceRangeCommand(INDEX_FORTH_BUYER);","lastModifiedDate":"2022-04-08"},{"lineNumber":53,"author":{"gitId":"janald99"},"content":"","lastModifiedDate":"2022-04-07"},{"lineNumber":54,"author":{"gitId":"janald99"},"content":"        PriceRangeMatchBuyerPredicate predicate \u003d new PriceRangeMatchBuyerPredicate(buyerToMatch);","lastModifiedDate":"2022-04-07"},{"lineNumber":55,"author":{"gitId":"janald99"},"content":"","lastModifiedDate":"2022-04-07"},{"lineNumber":56,"author":{"gitId":"janald99"},"content":"        String expectedMessage \u003d String.format(Messages.MESSAGE_NO_PROPERTY_ADDED);","lastModifiedDate":"2022-04-07"},{"lineNumber":57,"author":{"gitId":"janald99"},"content":"","lastModifiedDate":"2022-04-07"},{"lineNumber":58,"author":{"gitId":"janald99"},"content":"        assertCommandFailure(matchCommand, model, expectedMessage);","lastModifiedDate":"2022-04-07"},{"lineNumber":59,"author":{"gitId":"janald99"},"content":"    }","lastModifiedDate":"2022-04-07"},{"lineNumber":60,"author":{"gitId":"janald99"},"content":"","lastModifiedDate":"2022-04-07"},{"lineNumber":61,"author":{"gitId":"janald99"},"content":"    @Test","lastModifiedDate":"2022-04-07"},{"lineNumber":62,"author":{"gitId":"janald99"},"content":"    public void equals() {","lastModifiedDate":"2022-04-07"},{"lineNumber":63,"author":{"gitId":"janald99"},"content":"        Index firstIndex \u003d Index.fromZeroBased(1);","lastModifiedDate":"2022-04-07"},{"lineNumber":64,"author":{"gitId":"janald99"},"content":"        Index secondIndex \u003d Index.fromZeroBased(1);","lastModifiedDate":"2022-04-07"},{"lineNumber":65,"author":{"gitId":"janald99"},"content":"        Index thirdIndex \u003d Index.fromZeroBased(2);","lastModifiedDate":"2022-04-07"},{"lineNumber":66,"author":{"gitId":"janald99"},"content":"","lastModifiedDate":"2022-04-07"},{"lineNumber":67,"author":{"gitId":"janald99"},"content":"        MatchPriceRangeCommand matchFirstCommand \u003d new MatchPriceRangeCommand(firstIndex);","lastModifiedDate":"2022-04-07"},{"lineNumber":68,"author":{"gitId":"janald99"},"content":"        MatchPriceRangeCommand matchSecondCommand \u003d new MatchPriceRangeCommand(secondIndex);","lastModifiedDate":"2022-04-07"},{"lineNumber":69,"author":{"gitId":"janald99"},"content":"        MatchPriceRangeCommand matchThirdCommand \u003d new MatchPriceRangeCommand(thirdIndex);","lastModifiedDate":"2022-04-07"},{"lineNumber":70,"author":{"gitId":"janald99"},"content":"","lastModifiedDate":"2022-04-07"},{"lineNumber":71,"author":{"gitId":"janald99"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2022-04-07"},{"lineNumber":72,"author":{"gitId":"janald99"},"content":"        assertTrue(matchFirstCommand.equals(matchFirstCommand));","lastModifiedDate":"2022-04-07"},{"lineNumber":73,"author":{"gitId":"janald99"},"content":"","lastModifiedDate":"2022-04-07"},{"lineNumber":74,"author":{"gitId":"janald99"},"content":"        // same values -\u003e returns true","lastModifiedDate":"2022-04-07"},{"lineNumber":75,"author":{"gitId":"janald99"},"content":"        assertTrue(matchFirstCommand.equals(matchSecondCommand));","lastModifiedDate":"2022-04-07"},{"lineNumber":76,"author":{"gitId":"janald99"},"content":"","lastModifiedDate":"2022-04-07"},{"lineNumber":77,"author":{"gitId":"janald99"},"content":"        // different types -\u003e returns false","lastModifiedDate":"2022-04-07"},{"lineNumber":78,"author":{"gitId":"janald99"},"content":"        assertFalse(matchFirstCommand.equals(1));","lastModifiedDate":"2022-04-07"},{"lineNumber":79,"author":{"gitId":"janald99"},"content":"","lastModifiedDate":"2022-04-07"},{"lineNumber":80,"author":{"gitId":"janald99"},"content":"        // null -\u003e returns false","lastModifiedDate":"2022-04-07"},{"lineNumber":81,"author":{"gitId":"janald99"},"content":"        assertFalse(matchFirstCommand.equals(null));","lastModifiedDate":"2022-04-07"},{"lineNumber":82,"author":{"gitId":"janald99"},"content":"","lastModifiedDate":"2022-04-07"},{"lineNumber":83,"author":{"gitId":"janald99"},"content":"        // different command -\u003e returns false","lastModifiedDate":"2022-04-07"},{"lineNumber":84,"author":{"gitId":"janald99"},"content":"        assertFalse(matchFirstCommand.equals(matchThirdCommand));","lastModifiedDate":"2022-04-07"},{"lineNumber":85,"author":{"gitId":"janald99"},"content":"    }","lastModifiedDate":"2022-04-07"},{"lineNumber":86,"author":{"gitId":"janald99"},"content":"}","lastModifiedDate":"2022-04-07"}],"authorContributionMap":{"janald99":79,"chuashihong":7}},{"path":"src/test/java/seedu/address/logic/commands/PropertyCommandsTestUtil.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"WJunHong"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2022-04-07"},{"lineNumber":2,"author":{"gitId":"WJunHong"},"content":"","lastModifiedDate":"2022-04-07"},{"lineNumber":3,"author":{"gitId":"WJunHong"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_ADDRESS;","lastModifiedDate":"2022-04-07"},{"lineNumber":4,"author":{"gitId":"WJunHong"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_HOUSE_TYPE;","lastModifiedDate":"2022-04-07"},{"lineNumber":5,"author":{"gitId":"WJunHong"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_LOCATION;","lastModifiedDate":"2022-04-07"},{"lineNumber":6,"author":{"gitId":"WJunHong"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_PRICE_RANGE;","lastModifiedDate":"2022-04-07"},{"lineNumber":7,"author":{"gitId":"WJunHong"},"content":"","lastModifiedDate":"2022-04-07"},{"lineNumber":8,"author":{"gitId":"WJunHong"},"content":"import seedu.address.model.property.HouseType;","lastModifiedDate":"2022-04-07"},{"lineNumber":9,"author":{"gitId":"WJunHong"},"content":"import seedu.address.model.property.PriceRange;","lastModifiedDate":"2022-04-07"},{"lineNumber":10,"author":{"gitId":"WJunHong"},"content":"","lastModifiedDate":"2022-04-07"},{"lineNumber":11,"author":{"gitId":"WJunHong"},"content":"public class PropertyCommandsTestUtil {","lastModifiedDate":"2022-04-07"},{"lineNumber":12,"author":{"gitId":"WJunHong"},"content":"","lastModifiedDate":"2022-04-07"},{"lineNumber":13,"author":{"gitId":"WJunHong"},"content":"    public static final String VALID_HOUSE_TYPE_1 \u003d \"Condominium\";","lastModifiedDate":"2022-04-07"},{"lineNumber":14,"author":{"gitId":"WJunHong"},"content":"    public static final String VALID_HOUSE_TYPE_2 \u003d \"Colonia\";","lastModifiedDate":"2022-04-07"},{"lineNumber":15,"author":{"gitId":"WJunHong"},"content":"    public static final String VALID_HOUSE_TYPE_3 \u003d \"HDB\";","lastModifiedDate":"2022-04-07"},{"lineNumber":16,"author":{"gitId":"WJunHong"},"content":"    public static final String VALID_HOUSE_TYPE_4 \u003d \"Mansion\";","lastModifiedDate":"2022-04-07"},{"lineNumber":17,"author":{"gitId":"WJunHong"},"content":"    public static final String VALID_HOUSE_TYPE_5 \u003d \"Unspecified\";","lastModifiedDate":"2022-04-07"},{"lineNumber":18,"author":{"gitId":"WJunHong"},"content":"","lastModifiedDate":"2022-04-07"},{"lineNumber":19,"author":{"gitId":"WJunHong"},"content":"    public static final HouseType VALID_HOUSE_TYPE_CONDO \u003d HouseType.CONDOMINIUM;","lastModifiedDate":"2022-04-07"},{"lineNumber":20,"author":{"gitId":"WJunHong"},"content":"    public static final HouseType VALID_HOUSE_TYPE_COL \u003d HouseType.COLONIA;","lastModifiedDate":"2022-04-07"},{"lineNumber":21,"author":{"gitId":"WJunHong"},"content":"    public static final HouseType VALID_HOUSE_TYPE_HDB \u003d HouseType.HDB_FLAT;","lastModifiedDate":"2022-04-07"},{"lineNumber":22,"author":{"gitId":"WJunHong"},"content":"    public static final HouseType VALID_HOUSE_TYPE_MAN \u003d HouseType.MANSION;","lastModifiedDate":"2022-04-07"},{"lineNumber":23,"author":{"gitId":"WJunHong"},"content":"    public static final HouseType VALID_HOUSE_TYPE_UND \u003d HouseType.UNSPECIFIED;","lastModifiedDate":"2022-04-07"},{"lineNumber":24,"author":{"gitId":"WJunHong"},"content":"","lastModifiedDate":"2022-04-07"},{"lineNumber":25,"author":{"gitId":"WJunHong"},"content":"    public static final String VALID_LOCATION_1 \u003d \"Bishan\";","lastModifiedDate":"2022-04-07"},{"lineNumber":26,"author":{"gitId":"WJunHong"},"content":"    public static final String VALID_LOCATION_2 \u003d \"AMK Block 4\";","lastModifiedDate":"2022-04-07"},{"lineNumber":27,"author":{"gitId":"WJunHong"},"content":"    public static final String VALID_LOCATION_3 \u003d \"Heartbeat@Bedok\";","lastModifiedDate":"2022-04-07"},{"lineNumber":28,"author":{"gitId":"WJunHong"},"content":"    public static final String VALID_LOCATION_4 \u003d \"Heartbeat/Bedok\";","lastModifiedDate":"2022-04-07"},{"lineNumber":29,"author":{"gitId":"WJunHong"},"content":"","lastModifiedDate":"2022-04-07"},{"lineNumber":30,"author":{"gitId":"WJunHong"},"content":"    public static final String VALID_ADDRESS_1 \u003d \"Clementi Block 4\";","lastModifiedDate":"2022-04-07"},{"lineNumber":31,"author":{"gitId":"WJunHong"},"content":"    public static final String VALID_ADDRESS_2 \u003d \"Sembawang unit #04-1212\";","lastModifiedDate":"2022-04-07"},{"lineNumber":32,"author":{"gitId":"WJunHong"},"content":"    public static final String VALID_ADDRESS_3 \u003d \"Istana\";","lastModifiedDate":"2022-04-07"},{"lineNumber":33,"author":{"gitId":"WJunHong"},"content":"    public static final String VALID_ADDRESS_4 \u003d \"Kranji, Joo chiat place\";","lastModifiedDate":"2022-04-07"},{"lineNumber":34,"author":{"gitId":"WJunHong"},"content":"","lastModifiedDate":"2022-04-07"},{"lineNumber":35,"author":{"gitId":"WJunHong"},"content":"    public static final String VALID_PR_1 \u003d \"0,0\";","lastModifiedDate":"2022-04-07"},{"lineNumber":36,"author":{"gitId":"WJunHong"},"content":"    public static final String VALID_PR_2 \u003d \"10000,20000\";","lastModifiedDate":"2022-04-07"},{"lineNumber":37,"author":{"gitId":"WJunHong"},"content":"    public static final String VALID_PR_3 \u003d \"0,2147483647\";","lastModifiedDate":"2022-04-07"},{"lineNumber":38,"author":{"gitId":"WJunHong"},"content":"    public static final String VALID_PR_4 \u003d \"2147483647,2147483647\";","lastModifiedDate":"2022-04-07"},{"lineNumber":39,"author":{"gitId":"WJunHong"},"content":"","lastModifiedDate":"2022-04-07"},{"lineNumber":40,"author":{"gitId":"WJunHong"},"content":"    public static final PriceRange VALID_PR_ZERO \u003d new PriceRange(\"0,0\");","lastModifiedDate":"2022-04-07"},{"lineNumber":41,"author":{"gitId":"WJunHong"},"content":"    public static final PriceRange VALID_PR_NORMAL \u003d new PriceRange(\"10000,20000\");","lastModifiedDate":"2022-04-07"},{"lineNumber":42,"author":{"gitId":"WJunHong"},"content":"    public static final PriceRange VALID_PR_BIG \u003d new PriceRange(\"0,2147483647\");","lastModifiedDate":"2022-04-07"},{"lineNumber":43,"author":{"gitId":"WJunHong"},"content":"    public static final PriceRange VALID_PR_MAX \u003d new PriceRange(\"2147483647,2147483647\");","lastModifiedDate":"2022-04-07"},{"lineNumber":44,"author":{"gitId":"WJunHong"},"content":"","lastModifiedDate":"2022-04-07"},{"lineNumber":45,"author":{"gitId":"WJunHong"},"content":"    public static final String INVALID_HOUSE_TYPE_1 \u003d \"sandbox\";","lastModifiedDate":"2022-04-07"},{"lineNumber":46,"author":{"gitId":"WJunHong"},"content":"    public static final String INVALID_HOUSE_TYPE_2 \u003d \"hdb123\";","lastModifiedDate":"2022-04-07"},{"lineNumber":47,"author":{"gitId":"WJunHong"},"content":"","lastModifiedDate":"2022-04-07"},{"lineNumber":48,"author":{"gitId":"WJunHong"},"content":"    public static final String INVALID_LOCATION_1 \u003d \"\";","lastModifiedDate":"2022-04-07"},{"lineNumber":49,"author":{"gitId":"WJunHong"},"content":"","lastModifiedDate":"2022-04-07"},{"lineNumber":50,"author":{"gitId":"WJunHong"},"content":"    public static final String INVALID_ADDRESS_1 \u003d \"\";","lastModifiedDate":"2022-04-07"},{"lineNumber":51,"author":{"gitId":"WJunHong"},"content":"","lastModifiedDate":"2022-04-07"},{"lineNumber":52,"author":{"gitId":"WJunHong"},"content":"    public static final String INVALID_PR_1 \u003d \"-1,1000\";","lastModifiedDate":"2022-04-07"},{"lineNumber":53,"author":{"gitId":"WJunHong"},"content":"    public static final String INVALID_PR_2 \u003d \"-1,-3\";","lastModifiedDate":"2022-04-07"},{"lineNumber":54,"author":{"gitId":"WJunHong"},"content":"    public static final String INVALID_PR_3 \u003d \"40,39\";","lastModifiedDate":"2022-04-07"},{"lineNumber":55,"author":{"gitId":"WJunHong"},"content":"    public static final String INVALID_PR_4 \u003d \"2147483647,2147483648\";","lastModifiedDate":"2022-04-07"},{"lineNumber":56,"author":{"gitId":"WJunHong"},"content":"    public static final String INVALID_PR_5 \u003d \"2147483648,2147483650\";","lastModifiedDate":"2022-04-07"},{"lineNumber":57,"author":{"gitId":"WJunHong"},"content":"","lastModifiedDate":"2022-04-07"},{"lineNumber":58,"author":{"gitId":"WJunHong"},"content":"    public static final String HOUSE_TYPE_DESC_1 \u003d \" \" + PREFIX_HOUSE_TYPE + VALID_HOUSE_TYPE_1;","lastModifiedDate":"2022-04-07"},{"lineNumber":59,"author":{"gitId":"WJunHong"},"content":"    public static final String HOUSE_TYPE_DESC_2 \u003d \" \" + PREFIX_HOUSE_TYPE + VALID_HOUSE_TYPE_2;","lastModifiedDate":"2022-04-07"},{"lineNumber":60,"author":{"gitId":"WJunHong"},"content":"    public static final String HOUSE_TYPE_DESC_3 \u003d \" \" + PREFIX_HOUSE_TYPE + VALID_HOUSE_TYPE_3;","lastModifiedDate":"2022-04-07"},{"lineNumber":61,"author":{"gitId":"WJunHong"},"content":"    public static final String HOUSE_TYPE_DESC_4 \u003d \" \" + PREFIX_HOUSE_TYPE + VALID_HOUSE_TYPE_4;","lastModifiedDate":"2022-04-07"},{"lineNumber":62,"author":{"gitId":"WJunHong"},"content":"    public static final String HOUSE_TYPE_DESC_5 \u003d \" \" + PREFIX_HOUSE_TYPE + VALID_HOUSE_TYPE_5;","lastModifiedDate":"2022-04-07"},{"lineNumber":63,"author":{"gitId":"WJunHong"},"content":"","lastModifiedDate":"2022-04-07"},{"lineNumber":64,"author":{"gitId":"WJunHong"},"content":"    public static final String LOCATION_DESC_1 \u003d \" \" + PREFIX_LOCATION + VALID_LOCATION_1;","lastModifiedDate":"2022-04-07"},{"lineNumber":65,"author":{"gitId":"WJunHong"},"content":"    public static final String LOCATION_DESC_2 \u003d \" \" + PREFIX_LOCATION + VALID_LOCATION_2;","lastModifiedDate":"2022-04-07"},{"lineNumber":66,"author":{"gitId":"WJunHong"},"content":"    public static final String LOCATION_DESC_3 \u003d \" \" + PREFIX_LOCATION + VALID_LOCATION_3;","lastModifiedDate":"2022-04-07"},{"lineNumber":67,"author":{"gitId":"WJunHong"},"content":"    public static final String LOCATION_DESC_4 \u003d \" \" + PREFIX_LOCATION + VALID_LOCATION_4;","lastModifiedDate":"2022-04-07"},{"lineNumber":68,"author":{"gitId":"WJunHong"},"content":"","lastModifiedDate":"2022-04-07"},{"lineNumber":69,"author":{"gitId":"WJunHong"},"content":"    public static final String ADDRESS_DESC_1 \u003d \" \" + PREFIX_ADDRESS + VALID_ADDRESS_1;","lastModifiedDate":"2022-04-07"},{"lineNumber":70,"author":{"gitId":"WJunHong"},"content":"    public static final String ADDRESS_DESC_2 \u003d \" \" + PREFIX_ADDRESS + VALID_ADDRESS_2;","lastModifiedDate":"2022-04-07"},{"lineNumber":71,"author":{"gitId":"WJunHong"},"content":"    public static final String ADDRESS_DESC_3 \u003d \" \" + PREFIX_ADDRESS + VALID_ADDRESS_3;","lastModifiedDate":"2022-04-07"},{"lineNumber":72,"author":{"gitId":"WJunHong"},"content":"    public static final String ADDRESS_DESC_4 \u003d \" \" + PREFIX_ADDRESS + VALID_ADDRESS_4;","lastModifiedDate":"2022-04-07"},{"lineNumber":73,"author":{"gitId":"WJunHong"},"content":"","lastModifiedDate":"2022-04-07"},{"lineNumber":74,"author":{"gitId":"WJunHong"},"content":"    public static final String PR_DESC_1 \u003d \" \" + PREFIX_PRICE_RANGE + VALID_PR_1;","lastModifiedDate":"2022-04-07"},{"lineNumber":75,"author":{"gitId":"WJunHong"},"content":"    public static final String PR_DESC_2 \u003d \" \" + PREFIX_PRICE_RANGE + VALID_PR_2;","lastModifiedDate":"2022-04-07"},{"lineNumber":76,"author":{"gitId":"WJunHong"},"content":"    public static final String PR_DESC_3 \u003d \" \" + PREFIX_PRICE_RANGE + VALID_PR_3;","lastModifiedDate":"2022-04-07"},{"lineNumber":77,"author":{"gitId":"WJunHong"},"content":"    public static final String PR_DESC_4 \u003d \" \" + PREFIX_PRICE_RANGE + VALID_PR_4;","lastModifiedDate":"2022-04-07"},{"lineNumber":78,"author":{"gitId":"WJunHong"},"content":"","lastModifiedDate":"2022-04-07"},{"lineNumber":79,"author":{"gitId":"WJunHong"},"content":"","lastModifiedDate":"2022-04-07"},{"lineNumber":80,"author":{"gitId":"WJunHong"},"content":"}","lastModifiedDate":"2022-04-07"}],"authorContributionMap":{"WJunHong":80}},{"path":"src/test/java/seedu/address/logic/commands/SellerCommandTestUtil.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"chuashihong"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2022-04-07"},{"lineNumber":2,"author":{"gitId":"chuashihong"},"content":"","lastModifiedDate":"2022-04-07"},{"lineNumber":3,"author":{"gitId":"chuashihong"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2022-04-07"},{"lineNumber":4,"author":{"gitId":"chuashihong"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2022-04-07"},{"lineNumber":5,"author":{"gitId":"chuashihong"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_NAME;","lastModifiedDate":"2022-04-07"},{"lineNumber":6,"author":{"gitId":"chuashihong"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_PHONE;","lastModifiedDate":"2022-04-07"},{"lineNumber":7,"author":{"gitId":"chuashihong"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_TAG;","lastModifiedDate":"2022-04-07"},{"lineNumber":8,"author":{"gitId":"chuashihong"},"content":"import static seedu.address.testutil.Assert.assertThrows;","lastModifiedDate":"2022-04-07"},{"lineNumber":9,"author":{"gitId":"chuashihong"},"content":"","lastModifiedDate":"2022-04-07"},{"lineNumber":10,"author":{"gitId":"chuashihong"},"content":"import java.util.ArrayList;","lastModifiedDate":"2022-04-07"},{"lineNumber":11,"author":{"gitId":"chuashihong"},"content":"import java.util.Arrays;","lastModifiedDate":"2022-04-07"},{"lineNumber":12,"author":{"gitId":"chuashihong"},"content":"import java.util.List;","lastModifiedDate":"2022-04-07"},{"lineNumber":13,"author":{"gitId":"chuashihong"},"content":"","lastModifiedDate":"2022-04-07"},{"lineNumber":14,"author":{"gitId":"chuashihong"},"content":"import seedu.address.commons.core.index.Index;","lastModifiedDate":"2022-04-07"},{"lineNumber":15,"author":{"gitId":"chuashihong"},"content":"import seedu.address.logic.commands.exceptions.CommandException;","lastModifiedDate":"2022-04-07"},{"lineNumber":16,"author":{"gitId":"chuashihong"},"content":"import seedu.address.model.AddressBook;","lastModifiedDate":"2022-04-07"},{"lineNumber":17,"author":{"gitId":"chuashihong"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2022-04-07"},{"lineNumber":18,"author":{"gitId":"chuashihong"},"content":"import seedu.address.model.client.Client;","lastModifiedDate":"2022-04-07"},{"lineNumber":19,"author":{"gitId":"chuashihong"},"content":"import seedu.address.model.property.House;","lastModifiedDate":"2022-04-07"},{"lineNumber":20,"author":{"gitId":"chuashihong"},"content":"import seedu.address.model.property.HouseType;","lastModifiedDate":"2022-04-07"},{"lineNumber":21,"author":{"gitId":"chuashihong"},"content":"import seedu.address.model.property.Location;","lastModifiedDate":"2022-04-07"},{"lineNumber":22,"author":{"gitId":"chuashihong"},"content":"import seedu.address.model.property.PriceRange;","lastModifiedDate":"2022-04-07"},{"lineNumber":23,"author":{"gitId":"chuashihong"},"content":"import seedu.address.model.property.PropertyToBuy;","lastModifiedDate":"2022-04-07"},{"lineNumber":24,"author":{"gitId":"chuashihong"},"content":"import seedu.address.model.seller.Seller;","lastModifiedDate":"2022-04-07"},{"lineNumber":25,"author":{"gitId":"chuashihong"},"content":"import seedu.address.model.seller.SellerNameContainsKeywordsPredicate;","lastModifiedDate":"2022-04-07"},{"lineNumber":26,"author":{"gitId":"chuashihong"},"content":"import seedu.address.testutil.EditSellerDescriptorBuilder;","lastModifiedDate":"2022-04-07"},{"lineNumber":27,"author":{"gitId":"chuashihong"},"content":"","lastModifiedDate":"2022-04-07"},{"lineNumber":28,"author":{"gitId":"chuashihong"},"content":"/**","lastModifiedDate":"2022-04-07"},{"lineNumber":29,"author":{"gitId":"chuashihong"},"content":" * Contains helper methods for testing commands.","lastModifiedDate":"2022-04-07"},{"lineNumber":30,"author":{"gitId":"chuashihong"},"content":" */","lastModifiedDate":"2022-04-07"},{"lineNumber":31,"author":{"gitId":"chuashihong"},"content":"public class SellerCommandTestUtil {","lastModifiedDate":"2022-04-07"},{"lineNumber":32,"author":{"gitId":"chuashihong"},"content":"","lastModifiedDate":"2022-04-07"},{"lineNumber":33,"author":{"gitId":"chuashihong"},"content":"    public static final String VALID_NAME_AMY \u003d \"Amy Bee\";","lastModifiedDate":"2022-04-07"},{"lineNumber":34,"author":{"gitId":"chuashihong"},"content":"    public static final String VALID_NAME_BOB \u003d \"Bob Choo\";","lastModifiedDate":"2022-04-07"},{"lineNumber":35,"author":{"gitId":"chuashihong"},"content":"    public static final String VALID_NAME_CHAD \u003d \"Chad chadson\";","lastModifiedDate":"2022-04-07"},{"lineNumber":36,"author":{"gitId":"chuashihong"},"content":"    public static final String VALID_PHONE_AMY \u003d \"11111111\";","lastModifiedDate":"2022-04-07"},{"lineNumber":37,"author":{"gitId":"chuashihong"},"content":"    public static final String VALID_PHONE_BOB \u003d \"22222222\";","lastModifiedDate":"2022-04-07"},{"lineNumber":38,"author":{"gitId":"chuashihong"},"content":"    public static final String VALID_PHONE_CHAD \u003d \"33333333\";","lastModifiedDate":"2022-04-07"},{"lineNumber":39,"author":{"gitId":"chuashihong"},"content":"    public static final PropertyToBuy VALID_PROPERTY_BUY_CHAD \u003d new PropertyToBuy(new House(HouseType.HDB_FLAT,","lastModifiedDate":"2022-04-07"},{"lineNumber":40,"author":{"gitId":"chuashihong"},"content":"            new Location(\"jurong\")), new PriceRange(1000, 2000));","lastModifiedDate":"2022-04-07"},{"lineNumber":41,"author":{"gitId":"chuashihong"},"content":"    public static final String VALID_TAG_HUSBAND \u003d \"husband\";","lastModifiedDate":"2022-04-07"},{"lineNumber":42,"author":{"gitId":"chuashihong"},"content":"    public static final String VALID_TAG_FRIEND \u003d \"friend\";","lastModifiedDate":"2022-04-07"},{"lineNumber":43,"author":{"gitId":"chuashihong"},"content":"    public static final String VALID_REMARK_AMY \u003d \"A remark\";","lastModifiedDate":"2022-04-07"},{"lineNumber":44,"author":{"gitId":"chuashihong"},"content":"    public static final String VALID_REMARK_BOB \u003d \"B remark\";","lastModifiedDate":"2022-04-07"},{"lineNumber":45,"author":{"gitId":"chuashihong"},"content":"    public static final String VALID_APPOINTMENT_AMY \u003d \"2022-09-08-12-00\";","lastModifiedDate":"2022-04-07"},{"lineNumber":46,"author":{"gitId":"chuashihong"},"content":"    public static final String VALID_APPOINTMENT_BOB \u003d \"2022-09-03-09-10\";","lastModifiedDate":"2022-04-07"},{"lineNumber":47,"author":{"gitId":"chuashihong"},"content":"    public static final String VALID_APPOINTMENT_CHAD \u003d \"2023-09-03-09-10\";","lastModifiedDate":"2022-04-07"},{"lineNumber":48,"author":{"gitId":"chuashihong"},"content":"","lastModifiedDate":"2022-04-07"},{"lineNumber":49,"author":{"gitId":"chuashihong"},"content":"","lastModifiedDate":"2022-04-07"},{"lineNumber":50,"author":{"gitId":"chuashihong"},"content":"    public static final String NAME_DESC_AMY \u003d \" \" + PREFIX_NAME + VALID_NAME_AMY;","lastModifiedDate":"2022-04-07"},{"lineNumber":51,"author":{"gitId":"chuashihong"},"content":"    public static final String NAME_DESC_BOB \u003d \" \" + PREFIX_NAME + VALID_NAME_BOB;","lastModifiedDate":"2022-04-07"},{"lineNumber":52,"author":{"gitId":"chuashihong"},"content":"    public static final String PHONE_DESC_AMY \u003d \" \" + PREFIX_PHONE + VALID_PHONE_AMY;","lastModifiedDate":"2022-04-07"},{"lineNumber":53,"author":{"gitId":"chuashihong"},"content":"    public static final String PHONE_DESC_BOB \u003d \" \" + PREFIX_PHONE + VALID_PHONE_BOB;","lastModifiedDate":"2022-04-07"},{"lineNumber":54,"author":{"gitId":"chuashihong"},"content":"    public static final String TAG_DESC_FRIEND \u003d \" \" + PREFIX_TAG + VALID_TAG_FRIEND;","lastModifiedDate":"2022-04-07"},{"lineNumber":55,"author":{"gitId":"chuashihong"},"content":"    public static final String TAG_DESC_HUSBAND \u003d \" \" + PREFIX_TAG + VALID_TAG_HUSBAND;","lastModifiedDate":"2022-04-07"},{"lineNumber":56,"author":{"gitId":"chuashihong"},"content":"","lastModifiedDate":"2022-04-07"},{"lineNumber":57,"author":{"gitId":"chuashihong"},"content":"    public static final String INVALID_NAME_DESC \u003d \" \" + PREFIX_NAME + \"James\u0026\"; // \u0027\u0026\u0027 not allowed in names","lastModifiedDate":"2022-04-07"},{"lineNumber":58,"author":{"gitId":"chuashihong"},"content":"    public static final String INVALID_PHONE_DESC \u003d \" \" + PREFIX_PHONE + \"911a\"; // \u0027a\u0027 not allowed in phones","lastModifiedDate":"2022-04-07"},{"lineNumber":59,"author":{"gitId":"chuashihong"},"content":"    public static final String INVALID_TAG_DESC \u003d \" \" + PREFIX_TAG + \"hubby*\"; // \u0027*\u0027 not allowed in tags","lastModifiedDate":"2022-04-07"},{"lineNumber":60,"author":{"gitId":"chuashihong"},"content":"","lastModifiedDate":"2022-04-07"},{"lineNumber":61,"author":{"gitId":"chuashihong"},"content":"    public static final String PREAMBLE_WHITESPACE \u003d \"\\t  \\r  \\n\";","lastModifiedDate":"2022-04-07"},{"lineNumber":62,"author":{"gitId":"chuashihong"},"content":"    public static final String PREAMBLE_NON_EMPTY \u003d \"NonEmptyPreamble\";","lastModifiedDate":"2022-04-07"},{"lineNumber":63,"author":{"gitId":"chuashihong"},"content":"","lastModifiedDate":"2022-04-07"},{"lineNumber":64,"author":{"gitId":"chuashihong"},"content":"    public static final EditSellerCommand.EditSellerDescriptor DESC_AMY;","lastModifiedDate":"2022-04-07"},{"lineNumber":65,"author":{"gitId":"chuashihong"},"content":"    public static final EditSellerCommand.EditSellerDescriptor DESC_BOB;","lastModifiedDate":"2022-04-07"},{"lineNumber":66,"author":{"gitId":"chuashihong"},"content":"","lastModifiedDate":"2022-04-07"},{"lineNumber":67,"author":{"gitId":"chuashihong"},"content":"    static {","lastModifiedDate":"2022-04-07"},{"lineNumber":68,"author":{"gitId":"chuashihong"},"content":"        DESC_AMY \u003d new EditSellerDescriptorBuilder().withName(VALID_NAME_AMY)","lastModifiedDate":"2022-04-07"},{"lineNumber":69,"author":{"gitId":"chuashihong"},"content":"                .withPhone(VALID_PHONE_AMY).withTags(VALID_TAG_FRIEND)","lastModifiedDate":"2022-04-07"},{"lineNumber":70,"author":{"gitId":"chuashihong"},"content":"                .withAppointment(VALID_APPOINTMENT_AMY).build();","lastModifiedDate":"2022-04-07"},{"lineNumber":71,"author":{"gitId":"chuashihong"},"content":"        DESC_BOB \u003d new EditSellerDescriptorBuilder().withName(VALID_NAME_BOB)","lastModifiedDate":"2022-04-07"},{"lineNumber":72,"author":{"gitId":"chuashihong"},"content":"                .withPhone(VALID_PHONE_BOB).withTags(VALID_TAG_HUSBAND, VALID_TAG_FRIEND)","lastModifiedDate":"2022-04-07"},{"lineNumber":73,"author":{"gitId":"chuashihong"},"content":"                .withAppointment(VALID_APPOINTMENT_BOB).build();","lastModifiedDate":"2022-04-07"},{"lineNumber":74,"author":{"gitId":"chuashihong"},"content":"    }","lastModifiedDate":"2022-04-07"},{"lineNumber":75,"author":{"gitId":"chuashihong"},"content":"","lastModifiedDate":"2022-04-07"},{"lineNumber":76,"author":{"gitId":"chuashihong"},"content":"    /**","lastModifiedDate":"2022-04-07"},{"lineNumber":77,"author":{"gitId":"chuashihong"},"content":"     * Executes the given {@code command}, confirms that \u003cbr\u003e","lastModifiedDate":"2022-04-07"},{"lineNumber":78,"author":{"gitId":"chuashihong"},"content":"     * - the returned {@link CommandResult} matches {@code expectedCommandResult} \u003cbr\u003e","lastModifiedDate":"2022-04-07"},{"lineNumber":79,"author":{"gitId":"chuashihong"},"content":"     * - the {@code actualModel} matches {@code expectedModel}","lastModifiedDate":"2022-04-07"},{"lineNumber":80,"author":{"gitId":"chuashihong"},"content":"     */","lastModifiedDate":"2022-04-07"},{"lineNumber":81,"author":{"gitId":"chuashihong"},"content":"    public static void assertCommandSuccess(Command command, Model actualModel, CommandResult expectedCommandResult,","lastModifiedDate":"2022-04-07"},{"lineNumber":82,"author":{"gitId":"chuashihong"},"content":"            Model expectedModel) {","lastModifiedDate":"2022-04-07"},{"lineNumber":83,"author":{"gitId":"chuashihong"},"content":"        try {","lastModifiedDate":"2022-04-07"},{"lineNumber":84,"author":{"gitId":"chuashihong"},"content":"            CommandResult result \u003d command.execute(actualModel);","lastModifiedDate":"2022-04-07"},{"lineNumber":85,"author":{"gitId":"chuashihong"},"content":"            assertEquals(expectedCommandResult, result);","lastModifiedDate":"2022-04-07"},{"lineNumber":86,"author":{"gitId":"chuashihong"},"content":"            assertEquals(expectedModel, actualModel);","lastModifiedDate":"2022-04-07"},{"lineNumber":87,"author":{"gitId":"chuashihong"},"content":"        } catch (CommandException ce) {","lastModifiedDate":"2022-04-07"},{"lineNumber":88,"author":{"gitId":"chuashihong"},"content":"            throw new AssertionError(\"Execution of command should not fail.\", ce);","lastModifiedDate":"2022-04-07"},{"lineNumber":89,"author":{"gitId":"chuashihong"},"content":"        }","lastModifiedDate":"2022-04-07"},{"lineNumber":90,"author":{"gitId":"chuashihong"},"content":"    }","lastModifiedDate":"2022-04-07"},{"lineNumber":91,"author":{"gitId":"chuashihong"},"content":"","lastModifiedDate":"2022-04-07"},{"lineNumber":92,"author":{"gitId":"chuashihong"},"content":"    /**","lastModifiedDate":"2022-04-07"},{"lineNumber":93,"author":{"gitId":"chuashihong"},"content":"     * Convenience wrapper to {@link #assertCommandSuccess(Command, Model, CommandResult, Model)}","lastModifiedDate":"2022-04-07"},{"lineNumber":94,"author":{"gitId":"chuashihong"},"content":"     * that takes a string {@code expectedMessage}.","lastModifiedDate":"2022-04-07"},{"lineNumber":95,"author":{"gitId":"chuashihong"},"content":"     */","lastModifiedDate":"2022-04-07"},{"lineNumber":96,"author":{"gitId":"chuashihong"},"content":"    public static void assertCommandSuccess(Command command, Model actualModel, String expectedMessage,","lastModifiedDate":"2022-04-07"},{"lineNumber":97,"author":{"gitId":"chuashihong"},"content":"            Model expectedModel) {","lastModifiedDate":"2022-04-07"},{"lineNumber":98,"author":{"gitId":"chuashihong"},"content":"        CommandResult expectedCommandResult \u003d new CommandResult(expectedMessage);","lastModifiedDate":"2022-04-07"},{"lineNumber":99,"author":{"gitId":"chuashihong"},"content":"        assertCommandSuccess(command, actualModel, expectedCommandResult, expectedModel);","lastModifiedDate":"2022-04-07"},{"lineNumber":100,"author":{"gitId":"chuashihong"},"content":"    }","lastModifiedDate":"2022-04-07"},{"lineNumber":101,"author":{"gitId":"chuashihong"},"content":"","lastModifiedDate":"2022-04-07"},{"lineNumber":102,"author":{"gitId":"chuashihong"},"content":"    /**","lastModifiedDate":"2022-04-07"},{"lineNumber":103,"author":{"gitId":"chuashihong"},"content":"     * Executes the given {@code command}, confirms that \u003cbr\u003e","lastModifiedDate":"2022-04-07"},{"lineNumber":104,"author":{"gitId":"chuashihong"},"content":"     * - a {@code CommandException} is thrown \u003cbr\u003e","lastModifiedDate":"2022-04-07"},{"lineNumber":105,"author":{"gitId":"chuashihong"},"content":"     * - the CommandException message matches {@code expectedMessage} \u003cbr\u003e","lastModifiedDate":"2022-04-07"},{"lineNumber":106,"author":{"gitId":"chuashihong"},"content":"     * - the address book, filtered client list and selected client in {@code actualModel} remain unchanged","lastModifiedDate":"2022-04-07"},{"lineNumber":107,"author":{"gitId":"chuashihong"},"content":"     */","lastModifiedDate":"2022-04-07"},{"lineNumber":108,"author":{"gitId":"chuashihong"},"content":"    public static void assertCommandFailure(Command command, Model actualModel, String expectedMessage) {","lastModifiedDate":"2022-04-07"},{"lineNumber":109,"author":{"gitId":"chuashihong"},"content":"        // we are unable to defensively copy the model for comparison later, so we can","lastModifiedDate":"2022-04-07"},{"lineNumber":110,"author":{"gitId":"chuashihong"},"content":"        // only do so by copying its components.","lastModifiedDate":"2022-04-07"},{"lineNumber":111,"author":{"gitId":"chuashihong"},"content":"        AddressBook expectedAddressBook \u003d new AddressBook(actualModel.getAddressBook());","lastModifiedDate":"2022-04-07"},{"lineNumber":112,"author":{"gitId":"chuashihong"},"content":"        List\u003cClient\u003e expectedFilteredList \u003d new ArrayList\u003c\u003e(actualModel.getFilteredClientList());","lastModifiedDate":"2022-04-07"},{"lineNumber":113,"author":{"gitId":"chuashihong"},"content":"","lastModifiedDate":"2022-04-07"},{"lineNumber":114,"author":{"gitId":"chuashihong"},"content":"        assertThrows(CommandException.class, expectedMessage, () -\u003e command.execute(actualModel));","lastModifiedDate":"2022-04-07"},{"lineNumber":115,"author":{"gitId":"chuashihong"},"content":"        assertEquals(expectedAddressBook, actualModel.getAddressBook());","lastModifiedDate":"2022-04-07"},{"lineNumber":116,"author":{"gitId":"chuashihong"},"content":"        assertEquals(expectedFilteredList, actualModel.getFilteredClientList());","lastModifiedDate":"2022-04-07"},{"lineNumber":117,"author":{"gitId":"chuashihong"},"content":"    }","lastModifiedDate":"2022-04-07"},{"lineNumber":118,"author":{"gitId":"chuashihong"},"content":"","lastModifiedDate":"2022-04-07"},{"lineNumber":119,"author":{"gitId":"chuashihong"},"content":"    /**","lastModifiedDate":"2022-04-07"},{"lineNumber":120,"author":{"gitId":"chuashihong"},"content":"     * Executes the given {@code command}, confirms that \u003cbr\u003e","lastModifiedDate":"2022-04-07"},{"lineNumber":121,"author":{"gitId":"chuashihong"},"content":"     * - a {@code CommandException} is thrown \u003cbr\u003e","lastModifiedDate":"2022-04-07"},{"lineNumber":122,"author":{"gitId":"chuashihong"},"content":"     * - the CommandException message matches {@code expectedMessage} \u003cbr\u003e","lastModifiedDate":"2022-04-07"},{"lineNumber":123,"author":{"gitId":"chuashihong"},"content":"     * - the address book, filtered seller list and selected seller in {@code actualModel} remain unchanged","lastModifiedDate":"2022-04-07"},{"lineNumber":124,"author":{"gitId":"chuashihong"},"content":"     */","lastModifiedDate":"2022-04-07"},{"lineNumber":125,"author":{"gitId":"chuashihong"},"content":"    public static void assertSellerCommandFailure(Command command, Model actualModel, String expectedMessage) {","lastModifiedDate":"2022-04-07"},{"lineNumber":126,"author":{"gitId":"chuashihong"},"content":"        // we are unable to defensively copy the model for comparison later, so we can","lastModifiedDate":"2022-04-07"},{"lineNumber":127,"author":{"gitId":"chuashihong"},"content":"        // only do so by copying its components.","lastModifiedDate":"2022-04-07"},{"lineNumber":128,"author":{"gitId":"chuashihong"},"content":"        AddressBook expectedAddressBook \u003d new AddressBook(actualModel.getAddressBook());","lastModifiedDate":"2022-04-07"},{"lineNumber":129,"author":{"gitId":"chuashihong"},"content":"        List\u003cSeller\u003e expectedFilteredSellerList \u003d new ArrayList\u003c\u003e(actualModel.getFilteredSellerList());","lastModifiedDate":"2022-04-07"},{"lineNumber":130,"author":{"gitId":"chuashihong"},"content":"","lastModifiedDate":"2022-04-07"},{"lineNumber":131,"author":{"gitId":"chuashihong"},"content":"        assertThrows(CommandException.class, expectedMessage, () -\u003e command.execute(actualModel));","lastModifiedDate":"2022-04-07"},{"lineNumber":132,"author":{"gitId":"chuashihong"},"content":"        assertEquals(expectedAddressBook, actualModel.getAddressBook());","lastModifiedDate":"2022-04-07"},{"lineNumber":133,"author":{"gitId":"chuashihong"},"content":"        assertEquals(expectedFilteredSellerList, actualModel.getFilteredSellerList());","lastModifiedDate":"2022-04-07"},{"lineNumber":134,"author":{"gitId":"chuashihong"},"content":"    }","lastModifiedDate":"2022-04-07"},{"lineNumber":135,"author":{"gitId":"chuashihong"},"content":"","lastModifiedDate":"2022-04-07"},{"lineNumber":136,"author":{"gitId":"chuashihong"},"content":"    /**","lastModifiedDate":"2022-04-07"},{"lineNumber":137,"author":{"gitId":"chuashihong"},"content":"     * Updates {@code model}\u0027s filtered list to show only the seller at the given {@code targetIndex} in the","lastModifiedDate":"2022-04-07"},{"lineNumber":138,"author":{"gitId":"chuashihong"},"content":"     * {@code model}\u0027s address book.","lastModifiedDate":"2022-04-07"},{"lineNumber":139,"author":{"gitId":"chuashihong"},"content":"     */","lastModifiedDate":"2022-04-07"},{"lineNumber":140,"author":{"gitId":"chuashihong"},"content":"    public static void showSellerAtIndex(Model model, Index targetIndex) {","lastModifiedDate":"2022-04-07"},{"lineNumber":141,"author":{"gitId":"chuashihong"},"content":"        assertTrue(targetIndex.getZeroBased() \u003c model.getFilteredSellerList().size());","lastModifiedDate":"2022-04-07"},{"lineNumber":142,"author":{"gitId":"chuashihong"},"content":"","lastModifiedDate":"2022-04-07"},{"lineNumber":143,"author":{"gitId":"chuashihong"},"content":"        Seller seller \u003d model.getFilteredSellerList().get(targetIndex.getZeroBased());","lastModifiedDate":"2022-04-07"},{"lineNumber":144,"author":{"gitId":"chuashihong"},"content":"        final String[] splitName \u003d seller.getName().fullName.split(\"\\\\s+\");","lastModifiedDate":"2022-04-07"},{"lineNumber":145,"author":{"gitId":"chuashihong"},"content":"        model.updateFilteredSellerList(new SellerNameContainsKeywordsPredicate(Arrays.asList(splitName[0])));","lastModifiedDate":"2022-04-07"},{"lineNumber":146,"author":{"gitId":"chuashihong"},"content":"","lastModifiedDate":"2022-04-07"},{"lineNumber":147,"author":{"gitId":"chuashihong"},"content":"        assertEquals(1, model.getFilteredSellerList().size());","lastModifiedDate":"2022-04-07"},{"lineNumber":148,"author":{"gitId":"chuashihong"},"content":"    }","lastModifiedDate":"2022-04-07"},{"lineNumber":149,"author":{"gitId":"chuashihong"},"content":"","lastModifiedDate":"2022-04-07"},{"lineNumber":150,"author":{"gitId":"chuashihong"},"content":"}","lastModifiedDate":"2022-04-07"}],"authorContributionMap":{"chuashihong":150}},{"path":"src/test/java/seedu/address/logic/parser/AddBuyerCommandParserTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"WJunHong"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2022-03-16"},{"lineNumber":2,"author":{"gitId":"WJunHong"},"content":"","lastModifiedDate":"2022-03-16"},{"lineNumber":3,"author":{"gitId":"WJunHong"},"content":"import static seedu.address.commons.core.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2022-03-16"},{"lineNumber":4,"author":{"gitId":"chuashihong"},"content":"import static seedu.address.logic.commands.BuyerCommandTestUtil.INVALID_NAME_DESC;","lastModifiedDate":"2022-04-07"},{"lineNumber":5,"author":{"gitId":"WJunHong"},"content":"import static seedu.address.logic.commands.BuyerCommandTestUtil.INVALID_NAME_DESC_2;","lastModifiedDate":"2022-04-07"},{"lineNumber":6,"author":{"gitId":"WJunHong"},"content":"import static seedu.address.logic.commands.BuyerCommandTestUtil.INVALID_NAME_DESC_3;","lastModifiedDate":"2022-04-07"},{"lineNumber":7,"author":{"gitId":"WJunHong"},"content":"import static seedu.address.logic.commands.BuyerCommandTestUtil.INVALID_NAME_DESC_4;","lastModifiedDate":"2022-04-07"},{"lineNumber":8,"author":{"gitId":"chuashihong"},"content":"import static seedu.address.logic.commands.BuyerCommandTestUtil.INVALID_PHONE_DESC;","lastModifiedDate":"2022-04-07"},{"lineNumber":9,"author":{"gitId":"WJunHong"},"content":"import static seedu.address.logic.commands.BuyerCommandTestUtil.INVALID_PHONE_DESC_2;","lastModifiedDate":"2022-04-07"},{"lineNumber":10,"author":{"gitId":"WJunHong"},"content":"import static seedu.address.logic.commands.BuyerCommandTestUtil.INVALID_PHONE_DESC_3;","lastModifiedDate":"2022-04-07"},{"lineNumber":11,"author":{"gitId":"chuashihong"},"content":"import static seedu.address.logic.commands.BuyerCommandTestUtil.INVALID_TAG_DESC;","lastModifiedDate":"2022-04-07"},{"lineNumber":12,"author":{"gitId":"WJunHong"},"content":"import static seedu.address.logic.commands.BuyerCommandTestUtil.INVALID_TAG_DESC_2;","lastModifiedDate":"2022-04-07"},{"lineNumber":13,"author":{"gitId":"chuashihong"},"content":"import static seedu.address.logic.commands.BuyerCommandTestUtil.NAME_DESC_AMY;","lastModifiedDate":"2022-04-07"},{"lineNumber":14,"author":{"gitId":"chuashihong"},"content":"import static seedu.address.logic.commands.BuyerCommandTestUtil.NAME_DESC_BOB;","lastModifiedDate":"2022-04-07"},{"lineNumber":15,"author":{"gitId":"WJunHong"},"content":"import static seedu.address.logic.commands.BuyerCommandTestUtil.NAME_DESC_WEIRD;","lastModifiedDate":"2022-04-07"},{"lineNumber":16,"author":{"gitId":"chuashihong"},"content":"import static seedu.address.logic.commands.BuyerCommandTestUtil.PHONE_DESC_AMY;","lastModifiedDate":"2022-04-07"},{"lineNumber":17,"author":{"gitId":"chuashihong"},"content":"import static seedu.address.logic.commands.BuyerCommandTestUtil.PHONE_DESC_BOB;","lastModifiedDate":"2022-04-07"},{"lineNumber":18,"author":{"gitId":"WJunHong"},"content":"import static seedu.address.logic.commands.BuyerCommandTestUtil.PHONE_DESC_WEIRD;","lastModifiedDate":"2022-04-07"},{"lineNumber":19,"author":{"gitId":"chuashihong"},"content":"import static seedu.address.logic.commands.BuyerCommandTestUtil.PREAMBLE_NON_EMPTY;","lastModifiedDate":"2022-04-07"},{"lineNumber":20,"author":{"gitId":"chuashihong"},"content":"import static seedu.address.logic.commands.BuyerCommandTestUtil.PREAMBLE_WHITESPACE;","lastModifiedDate":"2022-04-07"},{"lineNumber":21,"author":{"gitId":"chuashihong"},"content":"import static seedu.address.logic.commands.BuyerCommandTestUtil.TAG_DESC_FRIEND;","lastModifiedDate":"2022-04-07"},{"lineNumber":22,"author":{"gitId":"chuashihong"},"content":"import static seedu.address.logic.commands.BuyerCommandTestUtil.TAG_DESC_HUSBAND;","lastModifiedDate":"2022-04-07"},{"lineNumber":23,"author":{"gitId":"chuashihong"},"content":"import static seedu.address.logic.commands.BuyerCommandTestUtil.VALID_NAME_BOB;","lastModifiedDate":"2022-04-07"},{"lineNumber":24,"author":{"gitId":"WJunHong"},"content":"import static seedu.address.logic.commands.BuyerCommandTestUtil.VALID_NAME_WEIRD;","lastModifiedDate":"2022-04-07"},{"lineNumber":25,"author":{"gitId":"chuashihong"},"content":"import static seedu.address.logic.commands.BuyerCommandTestUtil.VALID_PHONE_BOB;","lastModifiedDate":"2022-04-07"},{"lineNumber":26,"author":{"gitId":"WJunHong"},"content":"import static seedu.address.logic.commands.BuyerCommandTestUtil.VALID_PHONE_WEIRD;","lastModifiedDate":"2022-04-07"},{"lineNumber":27,"author":{"gitId":"chuashihong"},"content":"import static seedu.address.logic.commands.BuyerCommandTestUtil.VALID_TAG_FRIEND;","lastModifiedDate":"2022-04-07"},{"lineNumber":28,"author":{"gitId":"chuashihong"},"content":"import static seedu.address.logic.commands.BuyerCommandTestUtil.VALID_TAG_HUSBAND;","lastModifiedDate":"2022-04-07"},{"lineNumber":29,"author":{"gitId":"WJunHong"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_NAME;","lastModifiedDate":"2022-04-07"},{"lineNumber":30,"author":{"gitId":"WJunHong"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_PHONE;","lastModifiedDate":"2022-04-07"},{"lineNumber":31,"author":{"gitId":"WJunHong"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_TAG;","lastModifiedDate":"2022-04-07"},{"lineNumber":32,"author":{"gitId":"WJunHong"},"content":"import static seedu.address.logic.parser.CommandParserTestUtil.assertParseFailure;","lastModifiedDate":"2022-03-16"},{"lineNumber":33,"author":{"gitId":"WJunHong"},"content":"import static seedu.address.logic.parser.CommandParserTestUtil.assertParseSuccess;","lastModifiedDate":"2022-03-16"},{"lineNumber":34,"author":{"gitId":"WJunHong"},"content":"import static seedu.address.testutil.TypicalBuyers.AMY;","lastModifiedDate":"2022-03-16"},{"lineNumber":35,"author":{"gitId":"WJunHong"},"content":"import static seedu.address.testutil.TypicalBuyers.BOB;","lastModifiedDate":"2022-03-16"},{"lineNumber":36,"author":{"gitId":"WJunHong"},"content":"","lastModifiedDate":"2022-03-16"},{"lineNumber":37,"author":{"gitId":"WJunHong"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2022-03-16"},{"lineNumber":38,"author":{"gitId":"WJunHong"},"content":"","lastModifiedDate":"2022-04-07"},{"lineNumber":39,"author":{"gitId":"WJunHong"},"content":"import seedu.address.logic.commands.AddBuyerCommand;","lastModifiedDate":"2022-03-16"},{"lineNumber":40,"author":{"gitId":"WJunHong"},"content":"import seedu.address.model.buyer.Buyer;","lastModifiedDate":"2022-03-16"},{"lineNumber":41,"author":{"gitId":"WJunHong"},"content":"import seedu.address.model.client.Name;","lastModifiedDate":"2022-03-16"},{"lineNumber":42,"author":{"gitId":"WJunHong"},"content":"import seedu.address.model.client.Phone;","lastModifiedDate":"2022-03-16"},{"lineNumber":43,"author":{"gitId":"WJunHong"},"content":"import seedu.address.model.tag.Tag;","lastModifiedDate":"2022-03-16"},{"lineNumber":44,"author":{"gitId":"WJunHong"},"content":"import seedu.address.testutil.BuyerBuilder;","lastModifiedDate":"2022-03-16"},{"lineNumber":45,"author":{"gitId":"WJunHong"},"content":"","lastModifiedDate":"2022-03-16"},{"lineNumber":46,"author":{"gitId":"WJunHong"},"content":"public class AddBuyerCommandParserTest {","lastModifiedDate":"2022-03-16"},{"lineNumber":47,"author":{"gitId":"WJunHong"},"content":"    private final AddBuyerCommandParser parser \u003d new AddBuyerCommandParser();","lastModifiedDate":"2022-03-16"},{"lineNumber":48,"author":{"gitId":"WJunHong"},"content":"","lastModifiedDate":"2022-03-16"},{"lineNumber":49,"author":{"gitId":"WJunHong"},"content":"    @Test","lastModifiedDate":"2022-03-16"},{"lineNumber":50,"author":{"gitId":"WJunHong"},"content":"    public void parse_allFieldsPresent_success() {","lastModifiedDate":"2022-03-16"},{"lineNumber":51,"author":{"gitId":"WJunHong"},"content":"        Buyer expectedBuyer \u003d new BuyerBuilder(BOB).withTags(VALID_TAG_FRIEND).build();","lastModifiedDate":"2022-03-16"},{"lineNumber":52,"author":{"gitId":"WJunHong"},"content":"        Buyer weirdBuyer \u003d new BuyerBuilder().withName(VALID_NAME_WEIRD).withPhone(VALID_PHONE_WEIRD).build();","lastModifiedDate":"2022-04-07"},{"lineNumber":53,"author":{"gitId":"WJunHong"},"content":"","lastModifiedDate":"2022-03-16"},{"lineNumber":54,"author":{"gitId":"WJunHong"},"content":"        // whitespace only preamble","lastModifiedDate":"2022-03-16"},{"lineNumber":55,"author":{"gitId":"Jacky142857"},"content":"        assertParseSuccess(parser, PREAMBLE_WHITESPACE + NAME_DESC_BOB","lastModifiedDate":"2022-03-19"},{"lineNumber":56,"author":{"gitId":"Jacky142857"},"content":"                + PHONE_DESC_BOB + TAG_DESC_FRIEND, new AddBuyerCommand(expectedBuyer));","lastModifiedDate":"2022-03-19"},{"lineNumber":57,"author":{"gitId":"WJunHong"},"content":"","lastModifiedDate":"2022-03-16"},{"lineNumber":58,"author":{"gitId":"WJunHong"},"content":"        // Weird buyer name and phone accepted","lastModifiedDate":"2022-04-07"},{"lineNumber":59,"author":{"gitId":"WJunHong"},"content":"        assertParseSuccess(parser, PREAMBLE_WHITESPACE + NAME_DESC_WEIRD","lastModifiedDate":"2022-04-07"},{"lineNumber":60,"author":{"gitId":"WJunHong"},"content":"                + PHONE_DESC_WEIRD, new AddBuyerCommand(weirdBuyer));","lastModifiedDate":"2022-04-07"},{"lineNumber":61,"author":{"gitId":"WJunHong"},"content":"","lastModifiedDate":"2022-04-07"},{"lineNumber":62,"author":{"gitId":"WJunHong"},"content":"        // multiple names - last name accepted","lastModifiedDate":"2022-03-16"},{"lineNumber":63,"author":{"gitId":"Jacky142857"},"content":"        assertParseSuccess(parser, NAME_DESC_BOB + NAME_DESC_BOB","lastModifiedDate":"2022-03-19"},{"lineNumber":64,"author":{"gitId":"Jacky142857"},"content":"                + PHONE_DESC_BOB + TAG_DESC_FRIEND, new AddBuyerCommand(expectedBuyer));","lastModifiedDate":"2022-03-19"},{"lineNumber":65,"author":{"gitId":"WJunHong"},"content":"","lastModifiedDate":"2022-03-16"},{"lineNumber":66,"author":{"gitId":"WJunHong"},"content":"        // multiple phones - last phone accepted","lastModifiedDate":"2022-03-16"},{"lineNumber":67,"author":{"gitId":"Jacky142857"},"content":"        assertParseSuccess(parser, NAME_DESC_BOB","lastModifiedDate":"2022-03-19"},{"lineNumber":68,"author":{"gitId":"Jacky142857"},"content":"                + PHONE_DESC_AMY + PHONE_DESC_BOB","lastModifiedDate":"2022-03-19"},{"lineNumber":69,"author":{"gitId":"Jacky142857"},"content":"                + TAG_DESC_FRIEND, new AddBuyerCommand(expectedBuyer));","lastModifiedDate":"2022-03-19"},{"lineNumber":70,"author":{"gitId":"WJunHong"},"content":"","lastModifiedDate":"2022-03-16"},{"lineNumber":71,"author":{"gitId":"WJunHong"},"content":"        // multiple tags - all accepted","lastModifiedDate":"2022-03-16"},{"lineNumber":72,"author":{"gitId":"WJunHong"},"content":"        Buyer expectedBuyerMultipleTags \u003d new BuyerBuilder(BOB).withTags(VALID_TAG_FRIEND, VALID_TAG_HUSBAND)","lastModifiedDate":"2022-03-16"},{"lineNumber":73,"author":{"gitId":"WJunHong"},"content":"                .build();","lastModifiedDate":"2022-03-16"},{"lineNumber":74,"author":{"gitId":"Jacky142857"},"content":"        assertParseSuccess(parser, NAME_DESC_BOB","lastModifiedDate":"2022-03-19"},{"lineNumber":75,"author":{"gitId":"Jacky142857"},"content":"                + PHONE_DESC_BOB + TAG_DESC_HUSBAND","lastModifiedDate":"2022-03-19"},{"lineNumber":76,"author":{"gitId":"Jacky142857"},"content":"                + TAG_DESC_FRIEND, new AddBuyerCommand(expectedBuyerMultipleTags));","lastModifiedDate":"2022-03-19"},{"lineNumber":77,"author":{"gitId":"WJunHong"},"content":"    }","lastModifiedDate":"2022-03-16"},{"lineNumber":78,"author":{"gitId":"WJunHong"},"content":"","lastModifiedDate":"2022-03-16"},{"lineNumber":79,"author":{"gitId":"WJunHong"},"content":"    @Test","lastModifiedDate":"2022-03-16"},{"lineNumber":80,"author":{"gitId":"WJunHong"},"content":"    public void parse_optionalFieldsMissing_success() {","lastModifiedDate":"2022-03-16"},{"lineNumber":81,"author":{"gitId":"WJunHong"},"content":"        // zero tags","lastModifiedDate":"2022-03-16"},{"lineNumber":82,"author":{"gitId":"WJunHong"},"content":"        Buyer expectedBuyer \u003d new BuyerBuilder(AMY).withTags().build();","lastModifiedDate":"2022-03-16"},{"lineNumber":83,"author":{"gitId":"Jacky142857"},"content":"        assertParseSuccess(parser, NAME_DESC_AMY + PHONE_DESC_AMY,","lastModifiedDate":"2022-03-19"},{"lineNumber":84,"author":{"gitId":"WJunHong"},"content":"                new AddBuyerCommand(expectedBuyer));","lastModifiedDate":"2022-03-16"},{"lineNumber":85,"author":{"gitId":"WJunHong"},"content":"    }","lastModifiedDate":"2022-03-16"},{"lineNumber":86,"author":{"gitId":"WJunHong"},"content":"","lastModifiedDate":"2022-03-16"},{"lineNumber":87,"author":{"gitId":"WJunHong"},"content":"    @Test","lastModifiedDate":"2022-03-16"},{"lineNumber":88,"author":{"gitId":"WJunHong"},"content":"    public void parse_compulsoryFieldMissing_failure() {","lastModifiedDate":"2022-03-16"},{"lineNumber":89,"author":{"gitId":"WJunHong"},"content":"        String expectedMessage \u003d String.format(MESSAGE_INVALID_COMMAND_FORMAT, AddBuyerCommand.MESSAGE_USAGE);","lastModifiedDate":"2022-03-16"},{"lineNumber":90,"author":{"gitId":"WJunHong"},"content":"","lastModifiedDate":"2022-03-16"},{"lineNumber":91,"author":{"gitId":"WJunHong"},"content":"        // missing name prefix","lastModifiedDate":"2022-03-16"},{"lineNumber":92,"author":{"gitId":"Jacky142857"},"content":"        assertParseFailure(parser, VALID_NAME_BOB + PHONE_DESC_BOB,","lastModifiedDate":"2022-03-19"},{"lineNumber":93,"author":{"gitId":"WJunHong"},"content":"                expectedMessage);","lastModifiedDate":"2022-03-16"},{"lineNumber":94,"author":{"gitId":"WJunHong"},"content":"","lastModifiedDate":"2022-03-16"},{"lineNumber":95,"author":{"gitId":"WJunHong"},"content":"        // missing phone prefix","lastModifiedDate":"2022-03-16"},{"lineNumber":96,"author":{"gitId":"Jacky142857"},"content":"        assertParseFailure(parser, NAME_DESC_BOB + VALID_PHONE_BOB,","lastModifiedDate":"2022-03-19"},{"lineNumber":97,"author":{"gitId":"WJunHong"},"content":"                expectedMessage);","lastModifiedDate":"2022-03-16"},{"lineNumber":98,"author":{"gitId":"WJunHong"},"content":"","lastModifiedDate":"2022-03-16"},{"lineNumber":99,"author":{"gitId":"WJunHong"},"content":"        // all prefixes missing","lastModifiedDate":"2022-03-16"},{"lineNumber":100,"author":{"gitId":"Jacky142857"},"content":"        assertParseFailure(parser, VALID_NAME_BOB + VALID_PHONE_BOB,","lastModifiedDate":"2022-03-19"},{"lineNumber":101,"author":{"gitId":"WJunHong"},"content":"                expectedMessage);","lastModifiedDate":"2022-03-16"},{"lineNumber":102,"author":{"gitId":"WJunHong"},"content":"    }","lastModifiedDate":"2022-03-16"},{"lineNumber":103,"author":{"gitId":"WJunHong"},"content":"","lastModifiedDate":"2022-03-16"},{"lineNumber":104,"author":{"gitId":"WJunHong"},"content":"    @Test","lastModifiedDate":"2022-04-07"},{"lineNumber":105,"author":{"gitId":"WJunHong"},"content":"    public void parse_emptyCompulsoryFields_failure() {","lastModifiedDate":"2022-04-07"},{"lineNumber":106,"author":{"gitId":"WJunHong"},"content":"","lastModifiedDate":"2022-04-07"},{"lineNumber":107,"author":{"gitId":"WJunHong"},"content":"        // Empty name","lastModifiedDate":"2022-04-07"},{"lineNumber":108,"author":{"gitId":"WJunHong"},"content":"        assertParseFailure(parser, \" \" + PREFIX_NAME + PHONE_DESC_AMY, Name.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2022-04-07"},{"lineNumber":109,"author":{"gitId":"WJunHong"},"content":"","lastModifiedDate":"2022-04-07"},{"lineNumber":110,"author":{"gitId":"WJunHong"},"content":"        // Empty phone","lastModifiedDate":"2022-04-07"},{"lineNumber":111,"author":{"gitId":"WJunHong"},"content":"        assertParseFailure(parser, NAME_DESC_AMY + \" \" + PREFIX_PHONE,","lastModifiedDate":"2022-04-07"},{"lineNumber":112,"author":{"gitId":"WJunHong"},"content":"                Phone.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2022-04-07"},{"lineNumber":113,"author":{"gitId":"WJunHong"},"content":"","lastModifiedDate":"2022-04-07"},{"lineNumber":114,"author":{"gitId":"WJunHong"},"content":"        // Empty tag","lastModifiedDate":"2022-04-07"},{"lineNumber":115,"author":{"gitId":"WJunHong"},"content":"        assertParseFailure(parser, NAME_DESC_AMY + PHONE_DESC_AMY + \" \" + PREFIX_TAG, Tag.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2022-04-07"},{"lineNumber":116,"author":{"gitId":"WJunHong"},"content":"    }","lastModifiedDate":"2022-04-07"},{"lineNumber":117,"author":{"gitId":"WJunHong"},"content":"","lastModifiedDate":"2022-04-07"},{"lineNumber":118,"author":{"gitId":"WJunHong"},"content":"    @Test","lastModifiedDate":"2022-03-16"},{"lineNumber":119,"author":{"gitId":"WJunHong"},"content":"    public void parse_invalidValue_failure() {","lastModifiedDate":"2022-03-16"},{"lineNumber":120,"author":{"gitId":"WJunHong"},"content":"        // invalid name","lastModifiedDate":"2022-03-16"},{"lineNumber":121,"author":{"gitId":"Jacky142857"},"content":"        assertParseFailure(parser, INVALID_NAME_DESC + PHONE_DESC_BOB","lastModifiedDate":"2022-03-19"},{"lineNumber":122,"author":{"gitId":"WJunHong"},"content":"                + TAG_DESC_HUSBAND + TAG_DESC_FRIEND, Name.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2022-03-16"},{"lineNumber":123,"author":{"gitId":"WJunHong"},"content":"","lastModifiedDate":"2022-03-16"},{"lineNumber":124,"author":{"gitId":"WJunHong"},"content":"        assertParseFailure(parser, INVALID_NAME_DESC_2 + PHONE_DESC_AMY, Name.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2022-04-07"},{"lineNumber":125,"author":{"gitId":"WJunHong"},"content":"        assertParseFailure(parser, INVALID_NAME_DESC_3 + PHONE_DESC_AMY, Name.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2022-04-07"},{"lineNumber":126,"author":{"gitId":"WJunHong"},"content":"        assertParseFailure(parser, INVALID_NAME_DESC_4 + PHONE_DESC_AMY, Name.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2022-04-07"},{"lineNumber":127,"author":{"gitId":"WJunHong"},"content":"","lastModifiedDate":"2022-04-07"},{"lineNumber":128,"author":{"gitId":"WJunHong"},"content":"        // invalid phone","lastModifiedDate":"2022-03-16"},{"lineNumber":129,"author":{"gitId":"Jacky142857"},"content":"        assertParseFailure(parser, NAME_DESC_BOB + INVALID_PHONE_DESC","lastModifiedDate":"2022-03-19"},{"lineNumber":130,"author":{"gitId":"WJunHong"},"content":"                + TAG_DESC_HUSBAND + TAG_DESC_FRIEND, Phone.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2022-03-16"},{"lineNumber":131,"author":{"gitId":"WJunHong"},"content":"","lastModifiedDate":"2022-03-16"},{"lineNumber":132,"author":{"gitId":"WJunHong"},"content":"        assertParseFailure(parser, NAME_DESC_AMY + INVALID_PHONE_DESC_2, Phone.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2022-04-07"},{"lineNumber":133,"author":{"gitId":"WJunHong"},"content":"        assertParseFailure(parser, NAME_DESC_AMY + INVALID_PHONE_DESC_3, Phone.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2022-04-07"},{"lineNumber":134,"author":{"gitId":"WJunHong"},"content":"","lastModifiedDate":"2022-04-07"},{"lineNumber":135,"author":{"gitId":"WJunHong"},"content":"        // invalid tag","lastModifiedDate":"2022-03-16"},{"lineNumber":136,"author":{"gitId":"Jacky142857"},"content":"        assertParseFailure(parser, NAME_DESC_BOB + PHONE_DESC_BOB","lastModifiedDate":"2022-03-19"},{"lineNumber":137,"author":{"gitId":"WJunHong"},"content":"                + INVALID_TAG_DESC + VALID_TAG_FRIEND, Tag.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2022-03-16"},{"lineNumber":138,"author":{"gitId":"WJunHong"},"content":"","lastModifiedDate":"2022-03-16"},{"lineNumber":139,"author":{"gitId":"WJunHong"},"content":"        assertParseFailure(parser, NAME_DESC_BOB + PHONE_DESC_BOB","lastModifiedDate":"2022-04-07"},{"lineNumber":140,"author":{"gitId":"WJunHong"},"content":"                + INVALID_TAG_DESC_2 + VALID_TAG_FRIEND, Tag.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2022-04-07"},{"lineNumber":141,"author":{"gitId":"WJunHong"},"content":"","lastModifiedDate":"2022-04-07"},{"lineNumber":142,"author":{"gitId":"WJunHong"},"content":"        // two invalid values, only first invalid value reported","lastModifiedDate":"2022-03-16"},{"lineNumber":143,"author":{"gitId":"WJunHong"},"content":"        assertParseFailure(parser, INVALID_NAME_DESC + INVALID_PHONE_DESC,","lastModifiedDate":"2022-04-07"},{"lineNumber":144,"author":{"gitId":"WJunHong"},"content":"                Name.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2022-03-16"},{"lineNumber":145,"author":{"gitId":"WJunHong"},"content":"","lastModifiedDate":"2022-03-16"},{"lineNumber":146,"author":{"gitId":"WJunHong"},"content":"        // last occurrence of name invalid and valid phone, fail at invalid name","lastModifiedDate":"2022-04-07"},{"lineNumber":147,"author":{"gitId":"WJunHong"},"content":"        assertParseFailure(parser, NAME_DESC_AMY + INVALID_NAME_DESC + PHONE_DESC_AMY,","lastModifiedDate":"2022-04-07"},{"lineNumber":148,"author":{"gitId":"WJunHong"},"content":"                Name.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2022-04-07"},{"lineNumber":149,"author":{"gitId":"WJunHong"},"content":"","lastModifiedDate":"2022-04-07"},{"lineNumber":150,"author":{"gitId":"WJunHong"},"content":"        // last occurrence of phone invalid and valid name, fail at invalid phone","lastModifiedDate":"2022-04-07"},{"lineNumber":151,"author":{"gitId":"WJunHong"},"content":"        assertParseFailure(parser, NAME_DESC_AMY + PHONE_DESC_AMY + INVALID_PHONE_DESC,","lastModifiedDate":"2022-04-07"},{"lineNumber":152,"author":{"gitId":"WJunHong"},"content":"                Phone.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2022-04-07"},{"lineNumber":153,"author":{"gitId":"WJunHong"},"content":"","lastModifiedDate":"2022-04-07"},{"lineNumber":154,"author":{"gitId":"WJunHong"},"content":"        // non-empty preamble","lastModifiedDate":"2022-03-16"},{"lineNumber":155,"author":{"gitId":"Jacky142857"},"content":"        assertParseFailure(parser, PREAMBLE_NON_EMPTY + NAME_DESC_BOB + PHONE_DESC_BOB","lastModifiedDate":"2022-03-19"},{"lineNumber":156,"author":{"gitId":"Jacky142857"},"content":"                        + TAG_DESC_HUSBAND + TAG_DESC_FRIEND,","lastModifiedDate":"2022-03-19"},{"lineNumber":157,"author":{"gitId":"WJunHong"},"content":"                String.format(MESSAGE_INVALID_COMMAND_FORMAT, AddBuyerCommand.MESSAGE_USAGE));","lastModifiedDate":"2022-03-16"},{"lineNumber":158,"author":{"gitId":"WJunHong"},"content":"    }","lastModifiedDate":"2022-03-16"},{"lineNumber":159,"author":{"gitId":"WJunHong"},"content":"}","lastModifiedDate":"2022-03-16"}],"authorContributionMap":{"WJunHong":125,"Jacky142857":19,"chuashihong":15}},{"path":"src/test/java/seedu/address/logic/parser/AddPtbCommandParserTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"WJunHong"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2022-03-24"},{"lineNumber":2,"author":{"gitId":"WJunHong"},"content":"","lastModifiedDate":"2022-03-24"},{"lineNumber":3,"author":{"gitId":"WJunHong"},"content":"import static seedu.address.commons.core.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2022-03-24"},{"lineNumber":4,"author":{"gitId":"WJunHong"},"content":"import static seedu.address.logic.parser.CommandParserTestUtil.assertParseFailure;","lastModifiedDate":"2022-03-24"},{"lineNumber":5,"author":{"gitId":"WJunHong"},"content":"","lastModifiedDate":"2022-03-24"},{"lineNumber":6,"author":{"gitId":"WJunHong"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2022-03-24"},{"lineNumber":7,"author":{"gitId":"WJunHong"},"content":"","lastModifiedDate":"2022-03-24"},{"lineNumber":8,"author":{"gitId":"WJunHong"},"content":"import seedu.address.logic.commands.AddPropertyToBuyCommand;","lastModifiedDate":"2022-03-24"},{"lineNumber":9,"author":{"gitId":"WJunHong"},"content":"","lastModifiedDate":"2022-03-24"},{"lineNumber":10,"author":{"gitId":"WJunHong"},"content":"public class AddPtbCommandParserTest {","lastModifiedDate":"2022-03-24"},{"lineNumber":11,"author":{"gitId":"WJunHong"},"content":"","lastModifiedDate":"2022-03-24"},{"lineNumber":12,"author":{"gitId":"WJunHong"},"content":"    private static final String MESSAGE_INVALID_FORMAT \u003d","lastModifiedDate":"2022-03-24"},{"lineNumber":13,"author":{"gitId":"WJunHong"},"content":"            String.format(MESSAGE_INVALID_COMMAND_FORMAT, AddPropertyToBuyCommand.MESSAGE_USAGE);","lastModifiedDate":"2022-03-24"},{"lineNumber":14,"author":{"gitId":"WJunHong"},"content":"","lastModifiedDate":"2022-03-24"},{"lineNumber":15,"author":{"gitId":"WJunHong"},"content":"","lastModifiedDate":"2022-03-24"},{"lineNumber":16,"author":{"gitId":"WJunHong"},"content":"    private AddPropertyToBuyCommandParser parser \u003d new AddPropertyToBuyCommandParser();","lastModifiedDate":"2022-03-24"},{"lineNumber":17,"author":{"gitId":"WJunHong"},"content":"","lastModifiedDate":"2022-03-24"},{"lineNumber":18,"author":{"gitId":"WJunHong"},"content":"","lastModifiedDate":"2022-03-24"},{"lineNumber":19,"author":{"gitId":"WJunHong"},"content":"    @Test","lastModifiedDate":"2022-03-24"},{"lineNumber":20,"author":{"gitId":"WJunHong"},"content":"    public void parse_emptyArg_throwsParseException() {","lastModifiedDate":"2022-03-24"},{"lineNumber":21,"author":{"gitId":"WJunHong"},"content":"        assertParseFailure(parser, \"     \",","lastModifiedDate":"2022-03-24"},{"lineNumber":22,"author":{"gitId":"WJunHong"},"content":"                String.format(MESSAGE_INVALID_COMMAND_FORMAT, AddPropertyToBuyCommand.MESSAGE_USAGE));","lastModifiedDate":"2022-03-24"},{"lineNumber":23,"author":{"gitId":"WJunHong"},"content":"    }","lastModifiedDate":"2022-03-24"},{"lineNumber":24,"author":{"gitId":"WJunHong"},"content":"","lastModifiedDate":"2022-03-24"},{"lineNumber":25,"author":{"gitId":"WJunHong"},"content":"    @Test","lastModifiedDate":"2022-03-24"},{"lineNumber":26,"author":{"gitId":"WJunHong"},"content":"    public void parse_weirdString_failure() {","lastModifiedDate":"2022-03-24"},{"lineNumber":27,"author":{"gitId":"WJunHong"},"content":"        assertParseFailure(parser, \"This is weird\", MESSAGE_INVALID_FORMAT);","lastModifiedDate":"2022-03-24"},{"lineNumber":28,"author":{"gitId":"WJunHong"},"content":"    }","lastModifiedDate":"2022-03-24"},{"lineNumber":29,"author":{"gitId":"WJunHong"},"content":"","lastModifiedDate":"2022-03-24"},{"lineNumber":30,"author":{"gitId":"WJunHong"},"content":"    @Test","lastModifiedDate":"2022-04-07"},{"lineNumber":31,"author":{"gitId":"WJunHong"},"content":"    public void parse_allFieldsPresent_success() {","lastModifiedDate":"2022-04-07"},{"lineNumber":32,"author":{"gitId":"WJunHong"},"content":"        //PropertyToBuy validProperty \u003d new PropertyToBuyBuilder().withHouse()","lastModifiedDate":"2022-04-07"},{"lineNumber":33,"author":{"gitId":"WJunHong"},"content":"","lastModifiedDate":"2022-04-07"},{"lineNumber":34,"author":{"gitId":"WJunHong"},"content":"        //assertParseSuccess(parser, PREAMBLE_WHITESPACE + HOUSE_TYPE_DESC_1 + LOCATION_DESC_1","lastModifiedDate":"2022-04-07"},{"lineNumber":35,"author":{"gitId":"WJunHong"},"content":"          //      + PR_DESC_1, new AddPropertyToBuyCommand())","lastModifiedDate":"2022-04-07"},{"lineNumber":36,"author":{"gitId":"WJunHong"},"content":"    }","lastModifiedDate":"2022-04-07"},{"lineNumber":37,"author":{"gitId":"WJunHong"},"content":"","lastModifiedDate":"2022-04-07"},{"lineNumber":38,"author":{"gitId":"WJunHong"},"content":"}","lastModifiedDate":"2022-03-24"}],"authorContributionMap":{"WJunHong":38}},{"path":"src/test/java/seedu/address/logic/parser/AddPtsCommandParserTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"WJunHong"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2022-04-07"},{"lineNumber":2,"author":{"gitId":"WJunHong"},"content":"","lastModifiedDate":"2022-04-07"},{"lineNumber":3,"author":{"gitId":"WJunHong"},"content":"public class AddPtsCommandParserTest {","lastModifiedDate":"2022-04-07"},{"lineNumber":4,"author":{"gitId":"WJunHong"},"content":"}","lastModifiedDate":"2022-04-07"}],"authorContributionMap":{"WJunHong":4}},{"path":"src/test/java/seedu/address/logic/parser/AddressBookParserTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2017-05-24"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-24"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static seedu.address.commons.core.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2017-06-27"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import static seedu.address.commons.core.Messages.MESSAGE_UNKNOWN_COMMAND;","lastModifiedDate":"2017-05-24"},{"lineNumber":7,"author":{"gitId":"chuashihong"},"content":"import static seedu.address.logic.commands.BuyerCommandTestUtil.VALID_PROPERTY_BUY_CHAD;","lastModifiedDate":"2022-04-07"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.Assert.assertThrows;","lastModifiedDate":"2019-03-23"},{"lineNumber":9,"author":{"gitId":"WJunHong"},"content":"import static seedu.address.testutil.TypicalBuyers.CHAD;","lastModifiedDate":"2022-03-28"},{"lineNumber":10,"author":{"gitId":"cwnm"},"content":"import static seedu.address.testutil.TypicalIndexes.INDEX_FIRST_CLIENT;","lastModifiedDate":"2022-03-04"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-24"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-03-29"},{"lineNumber":14,"author":{"gitId":"WJunHong"},"content":"import seedu.address.logic.commands.AddBuyerCommand;","lastModifiedDate":"2022-03-16"},{"lineNumber":15,"author":{"gitId":"WJunHong"},"content":"import seedu.address.logic.commands.AddPropertyToBuyCommand;","lastModifiedDate":"2022-03-27"},{"lineNumber":16,"author":{"gitId":"WJunHong"},"content":"import seedu.address.logic.commands.DeleteBuyerCommand;","lastModifiedDate":"2022-03-29"},{"lineNumber":17,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.ExitCommand;","lastModifiedDate":"2017-06-27"},{"lineNumber":18,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.HelpCommand;","lastModifiedDate":"2017-06-27"},{"lineNumber":19,"author":{"gitId":"-"},"content":"import seedu.address.logic.parser.exceptions.ParseException;","lastModifiedDate":"2017-05-24"},{"lineNumber":20,"author":{"gitId":"WJunHong"},"content":"import seedu.address.model.buyer.Buyer;","lastModifiedDate":"2022-03-16"},{"lineNumber":21,"author":{"gitId":"WJunHong"},"content":"import seedu.address.testutil.BuyerBuilder;","lastModifiedDate":"2022-03-16"},{"lineNumber":22,"author":{"gitId":"chuashihong"},"content":"import seedu.address.testutil.BuyerUtil;","lastModifiedDate":"2022-04-07"},{"lineNumber":23,"author":{"gitId":"chuashihong"},"content":"//import seedu.address.testutil.ClientUtil;","lastModifiedDate":"2022-04-07"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-03-28"},{"lineNumber":25,"author":{"gitId":"-"},"content":"public class AddressBookParserTest {","lastModifiedDate":"2017-07-07"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    private final AddressBookParser parser \u003d new AddressBookParser();","lastModifiedDate":"2017-07-07"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-24"},{"lineNumber":29,"author":{"gitId":"chuashihong"},"content":"    //@Test","lastModifiedDate":"2022-03-30"},{"lineNumber":30,"author":{"gitId":"chuashihong"},"content":"    //public void parseCommand_add() throws Exception {","lastModifiedDate":"2022-03-30"},{"lineNumber":31,"author":{"gitId":"chuashihong"},"content":"    //    Client client \u003d new ClientBuilder().build();","lastModifiedDate":"2022-03-30"},{"lineNumber":32,"author":{"gitId":"chuashihong"},"content":"    //    AddCommand command \u003d (AddCommand) parser.parseCommand(ClientUtil.getAddCommand(client));","lastModifiedDate":"2022-03-30"},{"lineNumber":33,"author":{"gitId":"chuashihong"},"content":"    //    assertEquals(new AddCommand(client), command);","lastModifiedDate":"2022-03-30"},{"lineNumber":34,"author":{"gitId":"chuashihong"},"content":"    //}","lastModifiedDate":"2022-03-30"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":36,"author":{"gitId":"cwnm"},"content":"    //@Test","lastModifiedDate":"2022-03-30"},{"lineNumber":37,"author":{"gitId":"cwnm"},"content":"    //public void parseCommand_clear() throws Exception {","lastModifiedDate":"2022-03-30"},{"lineNumber":38,"author":{"gitId":"cwnm"},"content":"    //    assertTrue(parser.parseCommand(ClearCommand.COMMAND_WORD) instanceof ClearCommand);","lastModifiedDate":"2022-03-30"},{"lineNumber":39,"author":{"gitId":"cwnm"},"content":"    //    assertTrue(parser.parseCommand(ClearCommand.COMMAND_WORD + \" 3\") instanceof ClearCommand);","lastModifiedDate":"2022-03-30"},{"lineNumber":40,"author":{"gitId":"cwnm"},"content":"    //}","lastModifiedDate":"2022-03-30"},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":42,"author":{"gitId":"chuashihong"},"content":"    //@Test","lastModifiedDate":"2022-03-30"},{"lineNumber":43,"author":{"gitId":"chuashihong"},"content":"    //public void parseCommand_delete() throws Exception {","lastModifiedDate":"2022-03-30"},{"lineNumber":44,"author":{"gitId":"chuashihong"},"content":"    //    DeleteCommand command \u003d (DeleteCommand) parser.parseCommand(","lastModifiedDate":"2022-03-30"},{"lineNumber":45,"author":{"gitId":"chuashihong"},"content":"    //            DeleteCommand.COMMAND_WORD + \" \" + INDEX_FIRST_CLIENT.getOneBased());","lastModifiedDate":"2022-03-30"},{"lineNumber":46,"author":{"gitId":"chuashihong"},"content":"    //    assertEquals(new DeleteCommand(INDEX_FIRST_CLIENT), command);","lastModifiedDate":"2022-03-30"},{"lineNumber":47,"author":{"gitId":"chuashihong"},"content":"    //}","lastModifiedDate":"2022-03-30"},{"lineNumber":48,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-03-29"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2022-03-29"},{"lineNumber":50,"author":{"gitId":"chuashihong"},"content":"    public void parseCommand_deleteBuyer() throws Exception {","lastModifiedDate":"2022-03-30"},{"lineNumber":51,"author":{"gitId":"WJunHong"},"content":"        DeleteBuyerCommand command \u003d (DeleteBuyerCommand) parser.parseCommand(","lastModifiedDate":"2022-03-29"},{"lineNumber":52,"author":{"gitId":"WJunHong"},"content":"                DeleteBuyerCommand.COMMAND_WORD + \" \" + INDEX_FIRST_CLIENT.getOneBased());","lastModifiedDate":"2022-03-29"},{"lineNumber":53,"author":{"gitId":"WJunHong"},"content":"        assertEquals(new DeleteBuyerCommand(INDEX_FIRST_CLIENT), command);","lastModifiedDate":"2022-03-29"},{"lineNumber":54,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-27"},{"lineNumber":55,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":56,"author":{"gitId":"cwnm"},"content":"    //@Test","lastModifiedDate":"2022-03-30"},{"lineNumber":57,"author":{"gitId":"cwnm"},"content":"    //public void parseCommand_edit() throws Exception {","lastModifiedDate":"2022-03-30"},{"lineNumber":58,"author":{"gitId":"cwnm"},"content":"    //    Client client \u003d new ClientBuilder().build();","lastModifiedDate":"2022-03-30"},{"lineNumber":59,"author":{"gitId":"cwnm"},"content":"    //    EditclientDescriptor descriptor \u003d new EditClientDescriptorBuilder(client).build();","lastModifiedDate":"2022-03-30"},{"lineNumber":60,"author":{"gitId":"cwnm"},"content":"    //    EditCommand command \u003d (EditCommand) parser.parseCommand(EditCommand.COMMAND_WORD + \" \"","lastModifiedDate":"2022-03-30"},{"lineNumber":61,"author":{"gitId":"cwnm"},"content":"    //            + INDEX_FIRST_CLIENT.getOneBased() + \" \" + ClientUtil.getEditclientDescriptorDetails(descriptor));","lastModifiedDate":"2022-03-30"},{"lineNumber":62,"author":{"gitId":"cwnm"},"content":"    //    assertEquals(new EditCommand(INDEX_FIRST_CLIENT, descriptor), command);","lastModifiedDate":"2022-03-30"},{"lineNumber":63,"author":{"gitId":"cwnm"},"content":"    //}","lastModifiedDate":"2022-03-30"},{"lineNumber":64,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":65,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-27"},{"lineNumber":66,"author":{"gitId":"-"},"content":"    public void parseCommand_exit() throws Exception {","lastModifiedDate":"2017-06-27"},{"lineNumber":67,"author":{"gitId":"-"},"content":"        assertTrue(parser.parseCommand(ExitCommand.COMMAND_WORD) instanceof ExitCommand);","lastModifiedDate":"2017-06-27"},{"lineNumber":68,"author":{"gitId":"-"},"content":"        assertTrue(parser.parseCommand(ExitCommand.COMMAND_WORD + \" 3\") instanceof ExitCommand);","lastModifiedDate":"2017-06-27"},{"lineNumber":69,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-27"},{"lineNumber":70,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":71,"author":{"gitId":"cwnm"},"content":"    //@Test","lastModifiedDate":"2022-03-28"},{"lineNumber":72,"author":{"gitId":"cwnm"},"content":"    //public void parseCommand_find() throws Exception {","lastModifiedDate":"2022-03-28"},{"lineNumber":73,"author":{"gitId":"cwnm"},"content":"    //    List\u003cString\u003e keywords \u003d Arrays.asList(\"foo\", \"bar\", \"baz\");","lastModifiedDate":"2022-03-28"},{"lineNumber":74,"author":{"gitId":"cwnm"},"content":"    //    FindCommand command \u003d (FindCommand) parser.parseCommand(","lastModifiedDate":"2022-03-28"},{"lineNumber":75,"author":{"gitId":"cwnm"},"content":"    //            FindCommand.COMMAND_WORD + \" n/\" + keywords.stream().collect(Collectors.joining(\" \")));","lastModifiedDate":"2022-03-28"},{"lineNumber":76,"author":{"gitId":"cwnm"},"content":"    //    assertEquals(new FindCommand(new NameContainsKeywordsPredicate(keywords)), command);","lastModifiedDate":"2022-03-28"},{"lineNumber":77,"author":{"gitId":"cwnm"},"content":"    //}","lastModifiedDate":"2022-03-28"},{"lineNumber":78,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":79,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-27"},{"lineNumber":80,"author":{"gitId":"-"},"content":"    public void parseCommand_help() throws Exception {","lastModifiedDate":"2017-06-27"},{"lineNumber":81,"author":{"gitId":"-"},"content":"        assertTrue(parser.parseCommand(HelpCommand.COMMAND_WORD) instanceof HelpCommand);","lastModifiedDate":"2017-06-27"},{"lineNumber":82,"author":{"gitId":"-"},"content":"        assertTrue(parser.parseCommand(HelpCommand.COMMAND_WORD + \" 3\") instanceof HelpCommand);","lastModifiedDate":"2017-06-27"},{"lineNumber":83,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-27"},{"lineNumber":84,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":85,"author":{"gitId":"chuashihong"},"content":"    //@Test","lastModifiedDate":"2022-03-30"},{"lineNumber":86,"author":{"gitId":"chuashihong"},"content":"    //public void parseCommand_list() throws Exception {","lastModifiedDate":"2022-03-30"},{"lineNumber":87,"author":{"gitId":"chuashihong"},"content":"    //    assertTrue(parser.parseCommand(ListCommand.COMMAND_WORD) instanceof ListCommand);","lastModifiedDate":"2022-03-30"},{"lineNumber":88,"author":{"gitId":"chuashihong"},"content":"    //    assertTrue(parser.parseCommand(ListCommand.COMMAND_WORD + \" 3\") instanceof ListCommand);","lastModifiedDate":"2022-03-30"},{"lineNumber":89,"author":{"gitId":"chuashihong"},"content":"    //}","lastModifiedDate":"2022-03-30"},{"lineNumber":90,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":91,"author":{"gitId":"WJunHong"},"content":"    @Test","lastModifiedDate":"2022-03-16"},{"lineNumber":92,"author":{"gitId":"WJunHong"},"content":"    public void parseCommand_addbuyer() throws Exception {","lastModifiedDate":"2022-03-16"},{"lineNumber":93,"author":{"gitId":"WJunHong"},"content":"        Buyer buyer \u003d new BuyerBuilder().build();","lastModifiedDate":"2022-03-16"},{"lineNumber":94,"author":{"gitId":"chuashihong"},"content":"        AddBuyerCommand command \u003d (AddBuyerCommand) parser.parseCommand(BuyerUtil.getAddBuyerCommand(buyer));","lastModifiedDate":"2022-04-07"},{"lineNumber":95,"author":{"gitId":"WJunHong"},"content":"        AddBuyerCommand c \u003d new AddBuyerCommand(buyer);","lastModifiedDate":"2022-03-24"},{"lineNumber":96,"author":{"gitId":"WJunHong"},"content":"        assertEquals(c, command);","lastModifiedDate":"2022-03-24"},{"lineNumber":97,"author":{"gitId":"WJunHong"},"content":"    }","lastModifiedDate":"2022-03-16"},{"lineNumber":98,"author":{"gitId":"WJunHong"},"content":"","lastModifiedDate":"2022-03-16"},{"lineNumber":99,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2022-03-24"},{"lineNumber":100,"author":{"gitId":"WJunHong"},"content":"    public void parseCommand_addPropertyToBuy() throws Exception {","lastModifiedDate":"2022-03-24"},{"lineNumber":101,"author":{"gitId":"WJunHong"},"content":"        Buyer buyer \u003d new BuyerBuilder(CHAD).build();","lastModifiedDate":"2022-03-28"},{"lineNumber":102,"author":{"gitId":"WJunHong"},"content":"        AddPropertyToBuyCommand command \u003d (AddPropertyToBuyCommand)","lastModifiedDate":"2022-03-27"},{"lineNumber":103,"author":{"gitId":"WJunHong"},"content":"                parser.parseCommand(AddPropertyToBuyCommand.COMMAND_WORD + \" \"","lastModifiedDate":"2022-03-27"},{"lineNumber":104,"author":{"gitId":"chuashihong"},"content":"                + INDEX_FIRST_CLIENT.getOneBased() + \" \" + BuyerUtil.getPropertyToBuyCommand(buyer));","lastModifiedDate":"2022-04-07"},{"lineNumber":105,"author":{"gitId":"WJunHong"},"content":"        AddPropertyToBuyCommand c \u003d new AddPropertyToBuyCommand(INDEX_FIRST_CLIENT,","lastModifiedDate":"2022-03-27"},{"lineNumber":106,"author":{"gitId":"WJunHong"},"content":"                VALID_PROPERTY_BUY_CHAD);","lastModifiedDate":"2022-03-28"},{"lineNumber":107,"author":{"gitId":"WJunHong"},"content":"        boolean a \u003d c.equals(command);","lastModifiedDate":"2022-03-27"},{"lineNumber":108,"author":{"gitId":"WJunHong"},"content":"        assertTrue(a);","lastModifiedDate":"2022-03-27"},{"lineNumber":109,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2022-03-24"},{"lineNumber":110,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-03-24"},{"lineNumber":111,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-27"},{"lineNumber":112,"author":{"gitId":"-"},"content":"    public void parseCommand_unrecognisedInput_throwsParseException() {","lastModifiedDate":"2019-03-23"},{"lineNumber":113,"author":{"gitId":"-"},"content":"        assertThrows(ParseException.class, String.format(MESSAGE_INVALID_COMMAND_FORMAT, HelpCommand.MESSAGE_USAGE), ()","lastModifiedDate":"2019-03-23"},{"lineNumber":114,"author":{"gitId":"-"},"content":"            -\u003e parser.parseCommand(\"\"));","lastModifiedDate":"2019-03-23"},{"lineNumber":115,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-27"},{"lineNumber":116,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":117,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-27"},{"lineNumber":118,"author":{"gitId":"-"},"content":"    public void parseCommand_unknownCommand_throwsParseException() {","lastModifiedDate":"2019-03-23"},{"lineNumber":119,"author":{"gitId":"-"},"content":"        assertThrows(ParseException.class, MESSAGE_UNKNOWN_COMMAND, () -\u003e parser.parseCommand(\"unknownCommand\"));","lastModifiedDate":"2019-03-23"},{"lineNumber":120,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-27"},{"lineNumber":121,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-05-24"}],"authorContributionMap":{"WJunHong":24,"-":53,"cwnm":21,"chuashihong":23}},{"path":"src/test/java/seedu/address/logic/parser/DeleteBuyerCommandParserTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"WJunHong"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2022-03-29"},{"lineNumber":2,"author":{"gitId":"WJunHong"},"content":"","lastModifiedDate":"2022-03-29"},{"lineNumber":3,"author":{"gitId":"WJunHong"},"content":"import static seedu.address.commons.core.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2022-03-29"},{"lineNumber":4,"author":{"gitId":"WJunHong"},"content":"import static seedu.address.logic.parser.CommandParserTestUtil.assertParseFailure;","lastModifiedDate":"2022-03-29"},{"lineNumber":5,"author":{"gitId":"WJunHong"},"content":"import static seedu.address.logic.parser.CommandParserTestUtil.assertParseSuccess;","lastModifiedDate":"2022-03-29"},{"lineNumber":6,"author":{"gitId":"WJunHong"},"content":"import static seedu.address.testutil.TypicalIndexes.INDEX_FIRST_CLIENT;","lastModifiedDate":"2022-03-29"},{"lineNumber":7,"author":{"gitId":"WJunHong"},"content":"","lastModifiedDate":"2022-03-29"},{"lineNumber":8,"author":{"gitId":"WJunHong"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2022-03-29"},{"lineNumber":9,"author":{"gitId":"WJunHong"},"content":"","lastModifiedDate":"2022-03-29"},{"lineNumber":10,"author":{"gitId":"WJunHong"},"content":"import seedu.address.logic.commands.DeleteBuyerCommand;","lastModifiedDate":"2022-03-29"},{"lineNumber":11,"author":{"gitId":"WJunHong"},"content":"","lastModifiedDate":"2022-03-29"},{"lineNumber":12,"author":{"gitId":"WJunHong"},"content":"public class DeleteBuyerCommandParserTest {","lastModifiedDate":"2022-03-29"},{"lineNumber":13,"author":{"gitId":"WJunHong"},"content":"","lastModifiedDate":"2022-03-29"},{"lineNumber":14,"author":{"gitId":"WJunHong"},"content":"    private DeleteBuyerCommandParser parser \u003d new DeleteBuyerCommandParser();","lastModifiedDate":"2022-03-29"},{"lineNumber":15,"author":{"gitId":"WJunHong"},"content":"","lastModifiedDate":"2022-03-29"},{"lineNumber":16,"author":{"gitId":"WJunHong"},"content":"    @Test","lastModifiedDate":"2022-03-29"},{"lineNumber":17,"author":{"gitId":"WJunHong"},"content":"    public void parse_validArgs_returnsDeleteBuyerCommand() {","lastModifiedDate":"2022-03-29"},{"lineNumber":18,"author":{"gitId":"WJunHong"},"content":"        assertParseSuccess(parser, \"1\", new DeleteBuyerCommand(INDEX_FIRST_CLIENT));","lastModifiedDate":"2022-03-29"},{"lineNumber":19,"author":{"gitId":"WJunHong"},"content":"    }","lastModifiedDate":"2022-03-29"},{"lineNumber":20,"author":{"gitId":"WJunHong"},"content":"","lastModifiedDate":"2022-03-29"},{"lineNumber":21,"author":{"gitId":"WJunHong"},"content":"    @Test","lastModifiedDate":"2022-03-29"},{"lineNumber":22,"author":{"gitId":"WJunHong"},"content":"    public void parse_invalidArgs_throwsParseException() {","lastModifiedDate":"2022-03-29"},{"lineNumber":23,"author":{"gitId":"WJunHong"},"content":"        assertParseFailure(parser, \"a\", String.format(MESSAGE_INVALID_COMMAND_FORMAT,","lastModifiedDate":"2022-03-29"},{"lineNumber":24,"author":{"gitId":"WJunHong"},"content":"                DeleteBuyerCommand.MESSAGE_USAGE));","lastModifiedDate":"2022-03-29"},{"lineNumber":25,"author":{"gitId":"WJunHong"},"content":"    }","lastModifiedDate":"2022-03-29"},{"lineNumber":26,"author":{"gitId":"WJunHong"},"content":"}","lastModifiedDate":"2022-03-29"}],"authorContributionMap":{"WJunHong":26}},{"path":"src/test/java/seedu/address/logic/parser/DeleteSellerCommandParserTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2022-03-30"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-03-30"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static seedu.address.commons.core.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2022-03-30"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CommandParserTestUtil.assertParseFailure;","lastModifiedDate":"2022-03-30"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CommandParserTestUtil.assertParseSuccess;","lastModifiedDate":"2022-03-30"},{"lineNumber":6,"author":{"gitId":"chuashihong"},"content":"import static seedu.address.testutil.TypicalIndexes.INDEX_FIRST_SELLER;","lastModifiedDate":"2022-03-30"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-03-30"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2022-03-30"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-03-30"},{"lineNumber":10,"author":{"gitId":"chuashihong"},"content":"import seedu.address.logic.commands.DeleteSellerCommand;","lastModifiedDate":"2022-03-30"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-03-30"},{"lineNumber":12,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2022-03-30"},{"lineNumber":13,"author":{"gitId":"-"},"content":" * As we are only doing white-box testing, our test cases do not cover path variations","lastModifiedDate":"2022-03-30"},{"lineNumber":14,"author":{"gitId":"-"},"content":" * outside of the DeleteCommand code. For example, inputs \"1\" and \"1 abc\" take the","lastModifiedDate":"2022-03-30"},{"lineNumber":15,"author":{"gitId":"-"},"content":" * same path through the DeleteCommand, and therefore we test only one of them.","lastModifiedDate":"2022-03-30"},{"lineNumber":16,"author":{"gitId":"-"},"content":" * The path variation for those two cases occur inside the ParserUtil, and","lastModifiedDate":"2022-03-30"},{"lineNumber":17,"author":{"gitId":"-"},"content":" * therefore should be covered by the ParserUtilTest.","lastModifiedDate":"2022-03-30"},{"lineNumber":18,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2022-03-30"},{"lineNumber":19,"author":{"gitId":"chuashihong"},"content":"public class DeleteSellerCommandParserTest {","lastModifiedDate":"2022-03-30"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-03-30"},{"lineNumber":21,"author":{"gitId":"chuashihong"},"content":"    private DeleteSellerCommandParser parser \u003d new DeleteSellerCommandParser();","lastModifiedDate":"2022-03-30"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-03-30"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2022-03-30"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    public void parse_validArgs_returnsDeleteCommand() {","lastModifiedDate":"2022-03-30"},{"lineNumber":25,"author":{"gitId":"chuashihong"},"content":"        assertParseSuccess(parser, \"1\", new DeleteSellerCommand(INDEX_FIRST_SELLER));","lastModifiedDate":"2022-03-30"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2022-03-30"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-03-30"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2022-03-30"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    public void parse_invalidArgs_throwsParseException() {","lastModifiedDate":"2022-03-30"},{"lineNumber":30,"author":{"gitId":"chuashihong"},"content":"        assertParseFailure(parser, \"a\",","lastModifiedDate":"2022-03-30"},{"lineNumber":31,"author":{"gitId":"chuashihong"},"content":"                String.format(MESSAGE_INVALID_COMMAND_FORMAT, DeleteSellerCommand.MESSAGE_USAGE));","lastModifiedDate":"2022-03-30"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2022-03-30"},{"lineNumber":33,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2022-03-30"}],"authorContributionMap":{"-":26,"chuashihong":7}},{"path":"src/test/java/seedu/address/logic/parser/ParserUtilTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2017-05-22"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.ParserUtil.MESSAGE_INVALID_INDEX;","lastModifiedDate":"2017-06-02"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.Assert.assertThrows;","lastModifiedDate":"2019-03-14"},{"lineNumber":7,"author":{"gitId":"cwnm"},"content":"import static seedu.address.testutil.TypicalIndexes.INDEX_FIRST_CLIENT;","lastModifiedDate":"2022-03-04"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import java.util.Arrays;","lastModifiedDate":"2017-05-22"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import java.util.Collections;","lastModifiedDate":"2017-05-22"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import java.util.HashSet;","lastModifiedDate":"2017-05-22"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import java.util.Set;","lastModifiedDate":"2017-05-22"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":16,"author":{"gitId":"-"},"content":"import seedu.address.logic.parser.exceptions.ParseException;","lastModifiedDate":"2018-07-10"},{"lineNumber":17,"author":{"gitId":"Jacky142857"},"content":"import seedu.address.model.client.Appointment;","lastModifiedDate":"2022-03-18"},{"lineNumber":18,"author":{"gitId":"cwnm"},"content":"import seedu.address.model.client.Name;","lastModifiedDate":"2022-03-04"},{"lineNumber":19,"author":{"gitId":"cwnm"},"content":"import seedu.address.model.client.Phone;","lastModifiedDate":"2022-03-04"},{"lineNumber":20,"author":{"gitId":"-"},"content":"import seedu.address.model.tag.Tag;","lastModifiedDate":"2017-05-22"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":22,"author":{"gitId":"-"},"content":"public class ParserUtilTest {","lastModifiedDate":"2017-05-22"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    private static final String INVALID_NAME \u003d \"R@chel\";","lastModifiedDate":"2017-05-22"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    private static final String INVALID_PHONE \u003d \"+651234\";","lastModifiedDate":"2017-05-22"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    private static final String INVALID_TAG \u003d \"#friend\";","lastModifiedDate":"2017-05-22"},{"lineNumber":26,"author":{"gitId":"Jacky142857"},"content":"    private static final String INVALID_APPOINTMENT \u003d \"tomorrow\";","lastModifiedDate":"2022-03-18"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    private static final String VALID_NAME \u003d \"Rachel Walker\";","lastModifiedDate":"2017-05-22"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    private static final String VALID_PHONE \u003d \"123456\";","lastModifiedDate":"2017-05-22"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    private static final String VALID_TAG_1 \u003d \"friend\";","lastModifiedDate":"2017-05-22"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    private static final String VALID_TAG_2 \u003d \"neighbour\";","lastModifiedDate":"2017-05-22"},{"lineNumber":32,"author":{"gitId":"Jacky142857"},"content":"    private static final String VALID_APPOINTMENT \u003d \"2022-05-05-12-00\";","lastModifiedDate":"2022-03-18"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    private static final String WHITESPACE \u003d \" \\t\\r\\n\";","lastModifiedDate":"2017-05-29"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-29"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-26"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    public void parseIndex_invalidInput_throwsParseException() {","lastModifiedDate":"2019-03-23"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        assertThrows(ParseException.class, () -\u003e ParserUtil.parseIndex(\"10 a\"));","lastModifiedDate":"2019-03-23"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-26"},{"lineNumber":40,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-26"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-26"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    public void parseIndex_outOfRangeInput_throwsParseException() {","lastModifiedDate":"2019-03-23"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        assertThrows(ParseException.class, MESSAGE_INVALID_INDEX, ()","lastModifiedDate":"2019-03-23"},{"lineNumber":44,"author":{"gitId":"-"},"content":"            -\u003e ParserUtil.parseIndex(Long.toString(Integer.MAX_VALUE + 1)));","lastModifiedDate":"2019-03-23"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-26"},{"lineNumber":46,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-26"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-26"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    public void parseIndex_validInput_success() throws Exception {","lastModifiedDate":"2017-05-26"},{"lineNumber":49,"author":{"gitId":"-"},"content":"        // No whitespaces","lastModifiedDate":"2017-05-26"},{"lineNumber":50,"author":{"gitId":"cwnm"},"content":"        assertEquals(INDEX_FIRST_CLIENT, ParserUtil.parseIndex(\"1\"));","lastModifiedDate":"2022-03-04"},{"lineNumber":51,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-26"},{"lineNumber":52,"author":{"gitId":"-"},"content":"        // Leading and trailing whitespaces","lastModifiedDate":"2017-05-26"},{"lineNumber":53,"author":{"gitId":"cwnm"},"content":"        assertEquals(INDEX_FIRST_CLIENT, ParserUtil.parseIndex(\"  1  \"));","lastModifiedDate":"2022-03-04"},{"lineNumber":54,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-26"},{"lineNumber":55,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-26"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-22"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    public void parseName_null_throwsNullPointerException() {","lastModifiedDate":"2017-05-29"},{"lineNumber":58,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e ParserUtil.parseName((String) null));","lastModifiedDate":"2019-03-14"},{"lineNumber":59,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-22"},{"lineNumber":60,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":61,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-22"},{"lineNumber":62,"author":{"gitId":"-"},"content":"    public void parseName_invalidValue_throwsParseException() {","lastModifiedDate":"2018-07-10"},{"lineNumber":63,"author":{"gitId":"-"},"content":"        assertThrows(ParseException.class, () -\u003e ParserUtil.parseName(INVALID_NAME));","lastModifiedDate":"2019-03-14"},{"lineNumber":64,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-22"},{"lineNumber":65,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":66,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-22"},{"lineNumber":67,"author":{"gitId":"-"},"content":"    public void parseName_validValueWithoutWhitespace_returnsName() throws Exception {","lastModifiedDate":"2017-05-29"},{"lineNumber":68,"author":{"gitId":"-"},"content":"        Name expectedName \u003d new Name(VALID_NAME);","lastModifiedDate":"2017-05-22"},{"lineNumber":69,"author":{"gitId":"-"},"content":"        assertEquals(expectedName, ParserUtil.parseName(VALID_NAME));","lastModifiedDate":"2017-05-29"},{"lineNumber":70,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-29"},{"lineNumber":71,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":72,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-29"},{"lineNumber":73,"author":{"gitId":"-"},"content":"    public void parseName_validValueWithWhitespace_returnsTrimmedName() throws Exception {","lastModifiedDate":"2017-05-29"},{"lineNumber":74,"author":{"gitId":"-"},"content":"        String nameWithWhitespace \u003d WHITESPACE + VALID_NAME + WHITESPACE;","lastModifiedDate":"2017-05-29"},{"lineNumber":75,"author":{"gitId":"-"},"content":"        Name expectedName \u003d new Name(VALID_NAME);","lastModifiedDate":"2017-05-29"},{"lineNumber":76,"author":{"gitId":"-"},"content":"        assertEquals(expectedName, ParserUtil.parseName(nameWithWhitespace));","lastModifiedDate":"2017-05-29"},{"lineNumber":77,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-22"},{"lineNumber":78,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":79,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-22"},{"lineNumber":80,"author":{"gitId":"-"},"content":"    public void parsePhone_null_throwsNullPointerException() {","lastModifiedDate":"2017-05-30"},{"lineNumber":81,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e ParserUtil.parsePhone((String) null));","lastModifiedDate":"2019-03-14"},{"lineNumber":82,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-22"},{"lineNumber":83,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":84,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-22"},{"lineNumber":85,"author":{"gitId":"-"},"content":"    public void parsePhone_invalidValue_throwsParseException() {","lastModifiedDate":"2018-07-10"},{"lineNumber":86,"author":{"gitId":"-"},"content":"        assertThrows(ParseException.class, () -\u003e ParserUtil.parsePhone(INVALID_PHONE));","lastModifiedDate":"2019-03-14"},{"lineNumber":87,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-22"},{"lineNumber":88,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":89,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-22"},{"lineNumber":90,"author":{"gitId":"-"},"content":"    public void parsePhone_validValueWithoutWhitespace_returnsPhone() throws Exception {","lastModifiedDate":"2017-05-30"},{"lineNumber":91,"author":{"gitId":"-"},"content":"        Phone expectedPhone \u003d new Phone(VALID_PHONE);","lastModifiedDate":"2017-05-22"},{"lineNumber":92,"author":{"gitId":"-"},"content":"        assertEquals(expectedPhone, ParserUtil.parsePhone(VALID_PHONE));","lastModifiedDate":"2017-05-30"},{"lineNumber":93,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-30"},{"lineNumber":94,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":95,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-30"},{"lineNumber":96,"author":{"gitId":"-"},"content":"    public void parsePhone_validValueWithWhitespace_returnsTrimmedPhone() throws Exception {","lastModifiedDate":"2017-05-30"},{"lineNumber":97,"author":{"gitId":"-"},"content":"        String phoneWithWhitespace \u003d WHITESPACE + VALID_PHONE + WHITESPACE;","lastModifiedDate":"2017-05-30"},{"lineNumber":98,"author":{"gitId":"-"},"content":"        Phone expectedPhone \u003d new Phone(VALID_PHONE);","lastModifiedDate":"2017-05-30"},{"lineNumber":99,"author":{"gitId":"-"},"content":"        assertEquals(expectedPhone, ParserUtil.parsePhone(phoneWithWhitespace));","lastModifiedDate":"2017-05-30"},{"lineNumber":100,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-22"},{"lineNumber":101,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":102,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2022-03-18"},{"lineNumber":103,"author":{"gitId":"Jacky142857"},"content":"    public void parseAppointment_validValueWithoutWhitespace_returnsAppointment() throws Exception {","lastModifiedDate":"2022-03-18"},{"lineNumber":104,"author":{"gitId":"Jacky142857"},"content":"        Appointment expectedAppointment \u003d new Appointment(VALID_APPOINTMENT);","lastModifiedDate":"2022-03-18"},{"lineNumber":105,"author":{"gitId":"Jacky142857"},"content":"        assertEquals(expectedAppointment, ParserUtil.parseAppointment(VALID_APPOINTMENT));","lastModifiedDate":"2022-03-18"},{"lineNumber":106,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2022-03-18"},{"lineNumber":107,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-03-18"},{"lineNumber":108,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2022-03-18"},{"lineNumber":109,"author":{"gitId":"Jacky142857"},"content":"    public void parseAppointment_validValueWithWhitespace_returnsTrimmedAppointment() throws Exception {","lastModifiedDate":"2022-03-18"},{"lineNumber":110,"author":{"gitId":"Jacky142857"},"content":"        String appointmentWithWhitespace \u003d WHITESPACE + VALID_APPOINTMENT + WHITESPACE;","lastModifiedDate":"2022-03-18"},{"lineNumber":111,"author":{"gitId":"Jacky142857"},"content":"        Appointment expectedAppointment \u003d new Appointment(VALID_APPOINTMENT);","lastModifiedDate":"2022-03-18"},{"lineNumber":112,"author":{"gitId":"Jacky142857"},"content":"        assertEquals(expectedAppointment, ParserUtil.parseAppointment(appointmentWithWhitespace));","lastModifiedDate":"2022-03-18"},{"lineNumber":113,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2022-03-18"},{"lineNumber":114,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-03-18"},{"lineNumber":115,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2022-03-18"},{"lineNumber":116,"author":{"gitId":"Jacky142857"},"content":"    public void parseAppointment_invalidAppointment_throwsParseException() {","lastModifiedDate":"2022-03-18"},{"lineNumber":117,"author":{"gitId":"Jacky142857"},"content":"        assertThrows(ParseException.class, () -\u003e ParserUtil.parseAppointment(INVALID_APPOINTMENT));","lastModifiedDate":"2022-03-18"},{"lineNumber":118,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2022-03-18"},{"lineNumber":119,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-03-18"},{"lineNumber":120,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-30"},{"lineNumber":121,"author":{"gitId":"-"},"content":"    public void parseTag_null_throwsNullPointerException() {","lastModifiedDate":"2019-03-23"},{"lineNumber":122,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e ParserUtil.parseTag(null));","lastModifiedDate":"2019-03-23"},{"lineNumber":123,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-30"},{"lineNumber":124,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-30"},{"lineNumber":125,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-30"},{"lineNumber":126,"author":{"gitId":"-"},"content":"    public void parseTag_invalidValue_throwsParseException() {","lastModifiedDate":"2019-03-23"},{"lineNumber":127,"author":{"gitId":"-"},"content":"        assertThrows(ParseException.class, () -\u003e ParserUtil.parseTag(INVALID_TAG));","lastModifiedDate":"2019-03-23"},{"lineNumber":128,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-30"},{"lineNumber":129,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-30"},{"lineNumber":130,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-30"},{"lineNumber":131,"author":{"gitId":"-"},"content":"    public void parseTag_validValueWithoutWhitespace_returnsTag() throws Exception {","lastModifiedDate":"2017-05-30"},{"lineNumber":132,"author":{"gitId":"-"},"content":"        Tag expectedTag \u003d new Tag(VALID_TAG_1);","lastModifiedDate":"2017-05-30"},{"lineNumber":133,"author":{"gitId":"-"},"content":"        assertEquals(expectedTag, ParserUtil.parseTag(VALID_TAG_1));","lastModifiedDate":"2017-05-30"},{"lineNumber":134,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-30"},{"lineNumber":135,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-30"},{"lineNumber":136,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-30"},{"lineNumber":137,"author":{"gitId":"-"},"content":"    public void parseTag_validValueWithWhitespace_returnsTrimmedTag() throws Exception {","lastModifiedDate":"2017-05-30"},{"lineNumber":138,"author":{"gitId":"-"},"content":"        String tagWithWhitespace \u003d WHITESPACE + VALID_TAG_1 + WHITESPACE;","lastModifiedDate":"2017-05-30"},{"lineNumber":139,"author":{"gitId":"-"},"content":"        Tag expectedTag \u003d new Tag(VALID_TAG_1);","lastModifiedDate":"2017-05-30"},{"lineNumber":140,"author":{"gitId":"-"},"content":"        assertEquals(expectedTag, ParserUtil.parseTag(tagWithWhitespace));","lastModifiedDate":"2017-05-30"},{"lineNumber":141,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-30"},{"lineNumber":142,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-30"},{"lineNumber":143,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-22"},{"lineNumber":144,"author":{"gitId":"-"},"content":"    public void parseTags_null_throwsNullPointerException() {","lastModifiedDate":"2019-03-23"},{"lineNumber":145,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e ParserUtil.parseTags(null));","lastModifiedDate":"2019-03-23"},{"lineNumber":146,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-22"},{"lineNumber":147,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":148,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-22"},{"lineNumber":149,"author":{"gitId":"-"},"content":"    public void parseTags_collectionWithInvalidTags_throwsParseException() {","lastModifiedDate":"2019-03-23"},{"lineNumber":150,"author":{"gitId":"-"},"content":"        assertThrows(ParseException.class, () -\u003e ParserUtil.parseTags(Arrays.asList(VALID_TAG_1, INVALID_TAG)));","lastModifiedDate":"2019-03-23"},{"lineNumber":151,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-22"},{"lineNumber":152,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":153,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-22"},{"lineNumber":154,"author":{"gitId":"-"},"content":"    public void parseTags_emptyCollection_returnsEmptySet() throws Exception {","lastModifiedDate":"2017-05-22"},{"lineNumber":155,"author":{"gitId":"-"},"content":"        assertTrue(ParserUtil.parseTags(Collections.emptyList()).isEmpty());","lastModifiedDate":"2017-05-22"},{"lineNumber":156,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-22"},{"lineNumber":157,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":158,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-22"},{"lineNumber":159,"author":{"gitId":"-"},"content":"    public void parseTags_collectionWithValidTags_returnsTagSet() throws Exception {","lastModifiedDate":"2017-05-22"},{"lineNumber":160,"author":{"gitId":"-"},"content":"        Set\u003cTag\u003e actualTagSet \u003d ParserUtil.parseTags(Arrays.asList(VALID_TAG_1, VALID_TAG_2));","lastModifiedDate":"2017-05-22"},{"lineNumber":161,"author":{"gitId":"-"},"content":"        Set\u003cTag\u003e expectedTagSet \u003d new HashSet\u003cTag\u003e(Arrays.asList(new Tag(VALID_TAG_1), new Tag(VALID_TAG_2)));","lastModifiedDate":"2017-05-22"},{"lineNumber":162,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":163,"author":{"gitId":"-"},"content":"        assertEquals(expectedTagSet, actualTagSet);","lastModifiedDate":"2017-05-22"},{"lineNumber":164,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-22"},{"lineNumber":165,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-05-22"}],"authorContributionMap":{"Jacky142857":12,"-":148,"cwnm":5}},{"path":"src/test/java/seedu/address/model/AddressBookTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"chuashihong"},"content":"//package seedu.address.model;","lastModifiedDate":"2022-04-07"},{"lineNumber":2,"author":{"gitId":"chuashihong"},"content":"//","lastModifiedDate":"2022-04-07"},{"lineNumber":3,"author":{"gitId":"chuashihong"},"content":"//import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2022-04-07"},{"lineNumber":4,"author":{"gitId":"chuashihong"},"content":"//import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2022-04-07"},{"lineNumber":5,"author":{"gitId":"chuashihong"},"content":"//import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2022-04-07"},{"lineNumber":6,"author":{"gitId":"chuashihong"},"content":"//import static seedu.address.logic.commands.CommandTestUtil.VALID_TAG_HUSBAND;","lastModifiedDate":"2022-04-07"},{"lineNumber":7,"author":{"gitId":"chuashihong"},"content":"//import static seedu.address.testutil.Assert.assertThrows;","lastModifiedDate":"2022-04-07"},{"lineNumber":8,"author":{"gitId":"chuashihong"},"content":"//import static seedu.address.testutil.TypicalClients.ALICE;","lastModifiedDate":"2022-04-07"},{"lineNumber":9,"author":{"gitId":"chuashihong"},"content":"//import static seedu.address.testutil.TypicalClients.getTypicalAddressBook;","lastModifiedDate":"2022-04-07"},{"lineNumber":10,"author":{"gitId":"chuashihong"},"content":"//","lastModifiedDate":"2022-04-07"},{"lineNumber":11,"author":{"gitId":"chuashihong"},"content":"//import java.util.Arrays;","lastModifiedDate":"2022-04-07"},{"lineNumber":12,"author":{"gitId":"chuashihong"},"content":"//import java.util.Collection;","lastModifiedDate":"2022-04-07"},{"lineNumber":13,"author":{"gitId":"chuashihong"},"content":"//import java.util.Collections;","lastModifiedDate":"2022-04-07"},{"lineNumber":14,"author":{"gitId":"chuashihong"},"content":"//import java.util.List;","lastModifiedDate":"2022-04-07"},{"lineNumber":15,"author":{"gitId":"chuashihong"},"content":"//","lastModifiedDate":"2022-04-07"},{"lineNumber":16,"author":{"gitId":"chuashihong"},"content":"//import org.junit.jupiter.api.Test;","lastModifiedDate":"2022-04-07"},{"lineNumber":17,"author":{"gitId":"chuashihong"},"content":"//","lastModifiedDate":"2022-04-07"},{"lineNumber":18,"author":{"gitId":"chuashihong"},"content":"//import javafx.collections.FXCollections;","lastModifiedDate":"2022-04-07"},{"lineNumber":19,"author":{"gitId":"chuashihong"},"content":"//import javafx.collections.ObservableList;","lastModifiedDate":"2022-04-07"},{"lineNumber":20,"author":{"gitId":"chuashihong"},"content":"//import seedu.address.model.client.Client;","lastModifiedDate":"2022-04-07"},{"lineNumber":21,"author":{"gitId":"chuashihong"},"content":"//import seedu.address.model.client.exceptions.DuplicateClientException;","lastModifiedDate":"2022-04-07"},{"lineNumber":22,"author":{"gitId":"chuashihong"},"content":"//import seedu.address.testutil.ClientBuilder;","lastModifiedDate":"2022-04-07"},{"lineNumber":23,"author":{"gitId":"chuashihong"},"content":"//","lastModifiedDate":"2022-04-07"},{"lineNumber":24,"author":{"gitId":"chuashihong"},"content":"//public class AddressBookTest {","lastModifiedDate":"2022-04-07"},{"lineNumber":25,"author":{"gitId":"chuashihong"},"content":"//","lastModifiedDate":"2022-04-07"},{"lineNumber":26,"author":{"gitId":"chuashihong"},"content":"//    private final AddressBook addressBook \u003d new AddressBook();","lastModifiedDate":"2022-04-07"},{"lineNumber":27,"author":{"gitId":"chuashihong"},"content":"//","lastModifiedDate":"2022-04-07"},{"lineNumber":28,"author":{"gitId":"chuashihong"},"content":"//    @Test","lastModifiedDate":"2022-04-07"},{"lineNumber":29,"author":{"gitId":"chuashihong"},"content":"//    public void constructor() {","lastModifiedDate":"2022-04-07"},{"lineNumber":30,"author":{"gitId":"chuashihong"},"content":"//        assertEquals(Collections.emptyList(), addressBook.getclientList());","lastModifiedDate":"2022-04-07"},{"lineNumber":31,"author":{"gitId":"chuashihong"},"content":"//    }","lastModifiedDate":"2022-04-07"},{"lineNumber":32,"author":{"gitId":"chuashihong"},"content":"//","lastModifiedDate":"2022-04-07"},{"lineNumber":33,"author":{"gitId":"chuashihong"},"content":"//    @Test","lastModifiedDate":"2022-04-07"},{"lineNumber":34,"author":{"gitId":"chuashihong"},"content":"//    public void resetData_null_throwsNullPointerException() {","lastModifiedDate":"2022-04-07"},{"lineNumber":35,"author":{"gitId":"chuashihong"},"content":"//        assertThrows(NullPointerException.class, () -\u003e addressBook.resetData(null));","lastModifiedDate":"2022-04-07"},{"lineNumber":36,"author":{"gitId":"chuashihong"},"content":"//    }","lastModifiedDate":"2022-04-07"},{"lineNumber":37,"author":{"gitId":"chuashihong"},"content":"//","lastModifiedDate":"2022-04-07"},{"lineNumber":38,"author":{"gitId":"chuashihong"},"content":"//    @Test","lastModifiedDate":"2022-04-07"},{"lineNumber":39,"author":{"gitId":"chuashihong"},"content":"//    public void resetData_withValidReadOnlyAddressBook_replacesData() {","lastModifiedDate":"2022-04-07"},{"lineNumber":40,"author":{"gitId":"chuashihong"},"content":"//        AddressBook newData \u003d getTypicalAddressBook();","lastModifiedDate":"2022-04-07"},{"lineNumber":41,"author":{"gitId":"chuashihong"},"content":"//        addressBook.resetData(newData);","lastModifiedDate":"2022-04-07"},{"lineNumber":42,"author":{"gitId":"chuashihong"},"content":"//        assertEquals(newData, addressBook);","lastModifiedDate":"2022-04-07"},{"lineNumber":43,"author":{"gitId":"chuashihong"},"content":"//    }","lastModifiedDate":"2022-04-07"},{"lineNumber":44,"author":{"gitId":"chuashihong"},"content":"//","lastModifiedDate":"2022-04-07"},{"lineNumber":45,"author":{"gitId":"chuashihong"},"content":"//    @Test","lastModifiedDate":"2022-04-07"},{"lineNumber":46,"author":{"gitId":"chuashihong"},"content":"//    public void resetData_withDuplicateclients_throwsDuplicateclientException() {","lastModifiedDate":"2022-04-07"},{"lineNumber":47,"author":{"gitId":"chuashihong"},"content":"//        // Two clients with the same identity fields","lastModifiedDate":"2022-04-07"},{"lineNumber":48,"author":{"gitId":"chuashihong"},"content":"//        Client editedAlice \u003d new ClientBuilder(ALICE).withTags(VALID_TAG_HUSBAND)","lastModifiedDate":"2022-04-07"},{"lineNumber":49,"author":{"gitId":"chuashihong"},"content":"//                .build();","lastModifiedDate":"2022-04-07"},{"lineNumber":50,"author":{"gitId":"chuashihong"},"content":"//        List\u003cClient\u003e newClients \u003d Arrays.asList(ALICE, editedAlice);","lastModifiedDate":"2022-04-07"},{"lineNumber":51,"author":{"gitId":"chuashihong"},"content":"//        AddressBookStub newData \u003d new AddressBookStub(newClients);","lastModifiedDate":"2022-04-07"},{"lineNumber":52,"author":{"gitId":"chuashihong"},"content":"//","lastModifiedDate":"2022-04-07"},{"lineNumber":53,"author":{"gitId":"chuashihong"},"content":"//        assertThrows(DuplicateClientException.class, () -\u003e addressBook.resetData(newData));","lastModifiedDate":"2022-04-07"},{"lineNumber":54,"author":{"gitId":"chuashihong"},"content":"//    }","lastModifiedDate":"2022-04-07"},{"lineNumber":55,"author":{"gitId":"chuashihong"},"content":"//","lastModifiedDate":"2022-04-07"},{"lineNumber":56,"author":{"gitId":"chuashihong"},"content":"//    @Test","lastModifiedDate":"2022-04-07"},{"lineNumber":57,"author":{"gitId":"chuashihong"},"content":"//    public void hasclient_nullclient_throwsNullPointerException() {","lastModifiedDate":"2022-04-07"},{"lineNumber":58,"author":{"gitId":"chuashihong"},"content":"//        assertThrows(NullPointerException.class, () -\u003e addressBook.hasclient(null));","lastModifiedDate":"2022-04-07"},{"lineNumber":59,"author":{"gitId":"chuashihong"},"content":"//    }","lastModifiedDate":"2022-04-07"},{"lineNumber":60,"author":{"gitId":"chuashihong"},"content":"//","lastModifiedDate":"2022-04-07"},{"lineNumber":61,"author":{"gitId":"chuashihong"},"content":"//    @Test","lastModifiedDate":"2022-04-07"},{"lineNumber":62,"author":{"gitId":"chuashihong"},"content":"//    public void hasclient_clientNotInAddressBook_returnsFalse() {","lastModifiedDate":"2022-04-07"},{"lineNumber":63,"author":{"gitId":"chuashihong"},"content":"//        assertFalse(addressBook.hasclient(ALICE));","lastModifiedDate":"2022-04-07"},{"lineNumber":64,"author":{"gitId":"chuashihong"},"content":"//    }","lastModifiedDate":"2022-04-07"},{"lineNumber":65,"author":{"gitId":"chuashihong"},"content":"//","lastModifiedDate":"2022-04-07"},{"lineNumber":66,"author":{"gitId":"chuashihong"},"content":"//    @Test","lastModifiedDate":"2022-04-07"},{"lineNumber":67,"author":{"gitId":"chuashihong"},"content":"//    public void hasclient_clientInAddressBook_returnsTrue() {","lastModifiedDate":"2022-04-07"},{"lineNumber":68,"author":{"gitId":"chuashihong"},"content":"//        addressBook.addclient(ALICE);","lastModifiedDate":"2022-04-07"},{"lineNumber":69,"author":{"gitId":"chuashihong"},"content":"//        assertTrue(addressBook.hasclient(ALICE));","lastModifiedDate":"2022-04-07"},{"lineNumber":70,"author":{"gitId":"chuashihong"},"content":"//    }","lastModifiedDate":"2022-04-07"},{"lineNumber":71,"author":{"gitId":"chuashihong"},"content":"//","lastModifiedDate":"2022-04-07"},{"lineNumber":72,"author":{"gitId":"chuashihong"},"content":"//    @Test","lastModifiedDate":"2022-04-07"},{"lineNumber":73,"author":{"gitId":"chuashihong"},"content":"//    public void hasclient_clientWithSameIdentityFieldsInAddressBook_returnsTrue() {","lastModifiedDate":"2022-04-07"},{"lineNumber":74,"author":{"gitId":"chuashihong"},"content":"//        addressBook.addclient(ALICE);","lastModifiedDate":"2022-04-07"},{"lineNumber":75,"author":{"gitId":"chuashihong"},"content":"//        Client editedAlice \u003d new ClientBuilder(ALICE).withTags(VALID_TAG_HUSBAND)","lastModifiedDate":"2022-04-07"},{"lineNumber":76,"author":{"gitId":"chuashihong"},"content":"//                .build();","lastModifiedDate":"2022-04-07"},{"lineNumber":77,"author":{"gitId":"chuashihong"},"content":"//        assertTrue(addressBook.hasclient(editedAlice));","lastModifiedDate":"2022-04-07"},{"lineNumber":78,"author":{"gitId":"chuashihong"},"content":"//    }","lastModifiedDate":"2022-04-07"},{"lineNumber":79,"author":{"gitId":"chuashihong"},"content":"//","lastModifiedDate":"2022-04-07"},{"lineNumber":80,"author":{"gitId":"chuashihong"},"content":"//    @Test","lastModifiedDate":"2022-04-07"},{"lineNumber":81,"author":{"gitId":"chuashihong"},"content":"//    public void getclientList_modifyList_throwsUnsupportedOperationException() {","lastModifiedDate":"2022-04-07"},{"lineNumber":82,"author":{"gitId":"chuashihong"},"content":"//        assertThrows(UnsupportedOperationException.class, () -\u003e addressBook.getclientList().remove(0));","lastModifiedDate":"2022-04-07"},{"lineNumber":83,"author":{"gitId":"chuashihong"},"content":"//    }","lastModifiedDate":"2022-04-07"},{"lineNumber":84,"author":{"gitId":"chuashihong"},"content":"//","lastModifiedDate":"2022-04-07"},{"lineNumber":85,"author":{"gitId":"chuashihong"},"content":"//    /**","lastModifiedDate":"2022-04-07"},{"lineNumber":86,"author":{"gitId":"chuashihong"},"content":"//     * A stub ReadOnlyAddressBook whose clients list can violate interface constraints.","lastModifiedDate":"2022-04-07"},{"lineNumber":87,"author":{"gitId":"chuashihong"},"content":"//     */","lastModifiedDate":"2022-04-07"},{"lineNumber":88,"author":{"gitId":"chuashihong"},"content":"//    private static class AddressBookStub implements ReadOnlyAddressBook {","lastModifiedDate":"2022-04-07"},{"lineNumber":89,"author":{"gitId":"chuashihong"},"content":"//        private final ObservableList\u003cClient\u003e clients \u003d FXCollections.observableArrayList();","lastModifiedDate":"2022-04-07"},{"lineNumber":90,"author":{"gitId":"chuashihong"},"content":"//","lastModifiedDate":"2022-04-07"},{"lineNumber":91,"author":{"gitId":"chuashihong"},"content":"//        AddressBookStub(Collection\u003cClient\u003e clients) {","lastModifiedDate":"2022-04-07"},{"lineNumber":92,"author":{"gitId":"chuashihong"},"content":"//            this.clients.setAll(clients);","lastModifiedDate":"2022-04-07"},{"lineNumber":93,"author":{"gitId":"chuashihong"},"content":"//        }","lastModifiedDate":"2022-04-07"},{"lineNumber":94,"author":{"gitId":"chuashihong"},"content":"//","lastModifiedDate":"2022-04-07"},{"lineNumber":95,"author":{"gitId":"chuashihong"},"content":"//        @Override","lastModifiedDate":"2022-04-07"},{"lineNumber":96,"author":{"gitId":"chuashihong"},"content":"//        public ObservableList\u003cClient\u003e getclientList() {","lastModifiedDate":"2022-04-07"},{"lineNumber":97,"author":{"gitId":"chuashihong"},"content":"//            return clients;","lastModifiedDate":"2022-04-07"},{"lineNumber":98,"author":{"gitId":"chuashihong"},"content":"//        }","lastModifiedDate":"2022-04-07"},{"lineNumber":99,"author":{"gitId":"chuashihong"},"content":"//    }","lastModifiedDate":"2022-04-07"},{"lineNumber":100,"author":{"gitId":"chuashihong"},"content":"//","lastModifiedDate":"2022-04-07"},{"lineNumber":101,"author":{"gitId":"chuashihong"},"content":"//}","lastModifiedDate":"2022-04-07"}],"authorContributionMap":{"chuashihong":101}},{"path":"src/test/java/seedu/address/model/ModelManagerTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.model;","lastModifiedDate":"2017-05-31"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-31"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2019-03-15"},{"lineNumber":6,"author":{"gitId":"cwnm"},"content":"import static seedu.address.model.Model.PREDICATE_SHOW_ALL_CLIENTS;","lastModifiedDate":"2022-03-04"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.Assert.assertThrows;","lastModifiedDate":"2019-03-23"},{"lineNumber":8,"author":{"gitId":"cwnm"},"content":"import static seedu.address.testutil.TypicalClients.ALICE;","lastModifiedDate":"2022-03-04"},{"lineNumber":9,"author":{"gitId":"cwnm"},"content":"import static seedu.address.testutil.TypicalClients.BENSON;","lastModifiedDate":"2022-03-04"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-31"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-11-27"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import java.nio.file.Paths;","lastModifiedDate":"2018-08-09"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import java.util.Arrays;","lastModifiedDate":"2017-05-31"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-31"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-31"},{"lineNumber":17,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.GuiSettings;","lastModifiedDate":"2018-11-27"},{"lineNumber":18,"author":{"gitId":"cwnm"},"content":"import seedu.address.model.client.NameContainsKeywordsPredicate;","lastModifiedDate":"2022-03-04"},{"lineNumber":19,"author":{"gitId":"-"},"content":"import seedu.address.testutil.AddressBookBuilder;","lastModifiedDate":"2017-05-31"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-31"},{"lineNumber":21,"author":{"gitId":"-"},"content":"public class ModelManagerTest {","lastModifiedDate":"2017-05-31"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-09-01"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    private ModelManager modelManager \u003d new ModelManager();","lastModifiedDate":"2018-08-06"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-06"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-11-27"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    public void constructor() {","lastModifiedDate":"2018-11-27"},{"lineNumber":27,"author":{"gitId":"-"},"content":"        assertEquals(new UserPrefs(), modelManager.getUserPrefs());","lastModifiedDate":"2018-11-27"},{"lineNumber":28,"author":{"gitId":"-"},"content":"        assertEquals(new GuiSettings(), modelManager.getGuiSettings());","lastModifiedDate":"2018-11-27"},{"lineNumber":29,"author":{"gitId":"-"},"content":"        assertEquals(new AddressBook(), new AddressBook(modelManager.getAddressBook()));","lastModifiedDate":"2018-11-27"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":31,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-11-27"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    public void setUserPrefs_nullUserPrefs_throwsNullPointerException() {","lastModifiedDate":"2018-11-27"},{"lineNumber":34,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e modelManager.setUserPrefs(null));","lastModifiedDate":"2019-03-23"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":36,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-11-27"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    public void setUserPrefs_validUserPrefs_copiesUserPrefs() {","lastModifiedDate":"2018-12-06"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        UserPrefs userPrefs \u003d new UserPrefs();","lastModifiedDate":"2018-11-27"},{"lineNumber":40,"author":{"gitId":"-"},"content":"        userPrefs.setAddressBookFilePath(Paths.get(\"address/book/file/path\"));","lastModifiedDate":"2018-11-27"},{"lineNumber":41,"author":{"gitId":"-"},"content":"        userPrefs.setGuiSettings(new GuiSettings(1, 2, 3, 4));","lastModifiedDate":"2018-11-27"},{"lineNumber":42,"author":{"gitId":"-"},"content":"        modelManager.setUserPrefs(userPrefs);","lastModifiedDate":"2018-11-27"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        assertEquals(userPrefs, modelManager.getUserPrefs());","lastModifiedDate":"2018-11-27"},{"lineNumber":44,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-06"},{"lineNumber":45,"author":{"gitId":"-"},"content":"        // Modifying userPrefs should not modify modelManager\u0027s userPrefs","lastModifiedDate":"2018-12-06"},{"lineNumber":46,"author":{"gitId":"-"},"content":"        UserPrefs oldUserPrefs \u003d new UserPrefs(userPrefs);","lastModifiedDate":"2018-12-06"},{"lineNumber":47,"author":{"gitId":"-"},"content":"        userPrefs.setAddressBookFilePath(Paths.get(\"new/address/book/file/path\"));","lastModifiedDate":"2018-12-06"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        assertEquals(oldUserPrefs, modelManager.getUserPrefs());","lastModifiedDate":"2018-12-06"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":50,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-11-27"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    public void setGuiSettings_nullGuiSettings_throwsNullPointerException() {","lastModifiedDate":"2018-11-27"},{"lineNumber":53,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e modelManager.setGuiSettings(null));","lastModifiedDate":"2019-03-23"},{"lineNumber":54,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":55,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-11-27"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    public void setGuiSettings_validGuiSettings_setsGuiSettings() {","lastModifiedDate":"2018-11-27"},{"lineNumber":58,"author":{"gitId":"-"},"content":"        GuiSettings guiSettings \u003d new GuiSettings(1, 2, 3, 4);","lastModifiedDate":"2018-11-27"},{"lineNumber":59,"author":{"gitId":"-"},"content":"        modelManager.setGuiSettings(guiSettings);","lastModifiedDate":"2018-11-27"},{"lineNumber":60,"author":{"gitId":"-"},"content":"        assertEquals(guiSettings, modelManager.getGuiSettings());","lastModifiedDate":"2018-11-27"},{"lineNumber":61,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":62,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":63,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-11-27"},{"lineNumber":64,"author":{"gitId":"-"},"content":"    public void setAddressBookFilePath_nullPath_throwsNullPointerException() {","lastModifiedDate":"2018-11-27"},{"lineNumber":65,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e modelManager.setAddressBookFilePath(null));","lastModifiedDate":"2019-03-23"},{"lineNumber":66,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":67,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":68,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-11-27"},{"lineNumber":69,"author":{"gitId":"-"},"content":"    public void setAddressBookFilePath_validPath_setsAddressBookFilePath() {","lastModifiedDate":"2018-11-27"},{"lineNumber":70,"author":{"gitId":"-"},"content":"        Path path \u003d Paths.get(\"address/book/file/path\");","lastModifiedDate":"2018-11-27"},{"lineNumber":71,"author":{"gitId":"-"},"content":"        modelManager.setAddressBookFilePath(path);","lastModifiedDate":"2018-11-27"},{"lineNumber":72,"author":{"gitId":"-"},"content":"        assertEquals(path, modelManager.getAddressBookFilePath());","lastModifiedDate":"2018-11-27"},{"lineNumber":73,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":74,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":75,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-06"},{"lineNumber":76,"author":{"gitId":"cwnm"},"content":"    public void hasclient_nullclient_throwsNullPointerException() {","lastModifiedDate":"2022-03-04"},{"lineNumber":77,"author":{"gitId":"cwnm"},"content":"        assertThrows(NullPointerException.class, () -\u003e modelManager.hasClient(null));","lastModifiedDate":"2022-03-04"},{"lineNumber":78,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-06"},{"lineNumber":79,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-06"},{"lineNumber":80,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-06"},{"lineNumber":81,"author":{"gitId":"cwnm"},"content":"    public void hasclient_clientNotInAddressBook_returnsFalse() {","lastModifiedDate":"2022-03-04"},{"lineNumber":82,"author":{"gitId":"cwnm"},"content":"        assertFalse(modelManager.hasClient(ALICE));","lastModifiedDate":"2022-03-04"},{"lineNumber":83,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-06"},{"lineNumber":84,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-06"},{"lineNumber":85,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-06"},{"lineNumber":86,"author":{"gitId":"cwnm"},"content":"    public void hasclient_clientInAddressBook_returnsTrue() {","lastModifiedDate":"2022-03-04"},{"lineNumber":87,"author":{"gitId":"cwnm"},"content":"        modelManager.addClient(ALICE);","lastModifiedDate":"2022-03-04"},{"lineNumber":88,"author":{"gitId":"cwnm"},"content":"        assertTrue(modelManager.hasClient(ALICE));","lastModifiedDate":"2022-03-04"},{"lineNumber":89,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-06"},{"lineNumber":90,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-06"},{"lineNumber":91,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-09-01"},{"lineNumber":92,"author":{"gitId":"cwnm"},"content":"    public void getFilteredclientList_modifyList_throwsUnsupportedOperationException() {","lastModifiedDate":"2022-03-04"},{"lineNumber":93,"author":{"gitId":"cwnm"},"content":"        assertThrows(UnsupportedOperationException.class, () -\u003e modelManager.getFilteredClientList().remove(0));","lastModifiedDate":"2022-03-04"},{"lineNumber":94,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-09-01"},{"lineNumber":95,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-31"},{"lineNumber":96,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-31"},{"lineNumber":97,"author":{"gitId":"-"},"content":"    public void equals() {","lastModifiedDate":"2017-08-15"},{"lineNumber":98,"author":{"gitId":"cwnm"},"content":"        AddressBook addressBook \u003d new AddressBookBuilder().withclient(ALICE).withclient(BENSON).build();","lastModifiedDate":"2022-03-04"},{"lineNumber":99,"author":{"gitId":"-"},"content":"        AddressBook differentAddressBook \u003d new AddressBook();","lastModifiedDate":"2017-05-31"},{"lineNumber":100,"author":{"gitId":"-"},"content":"        UserPrefs userPrefs \u003d new UserPrefs();","lastModifiedDate":"2017-05-31"},{"lineNumber":101,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-31"},{"lineNumber":102,"author":{"gitId":"-"},"content":"        // same values -\u003e returns true","lastModifiedDate":"2017-05-31"},{"lineNumber":103,"author":{"gitId":"WJunHong"},"content":"        modelManager \u003d new ModelManager(addressBook, userPrefs, new SellerAddressBook(), new BuyerAddressBook());","lastModifiedDate":"2022-03-23"},{"lineNumber":104,"author":{"gitId":"WJunHong"},"content":"        ModelManager modelManagerCopy \u003d new ModelManager(addressBook, userPrefs, new SellerAddressBook(),","lastModifiedDate":"2022-03-23"},{"lineNumber":105,"author":{"gitId":"WJunHong"},"content":"                new BuyerAddressBook());","lastModifiedDate":"2022-03-23"},{"lineNumber":106,"author":{"gitId":"-"},"content":"        assertTrue(modelManager.equals(modelManagerCopy));","lastModifiedDate":"2017-05-31"},{"lineNumber":107,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-31"},{"lineNumber":108,"author":{"gitId":"-"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2017-05-31"},{"lineNumber":109,"author":{"gitId":"-"},"content":"        assertTrue(modelManager.equals(modelManager));","lastModifiedDate":"2017-05-31"},{"lineNumber":110,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-31"},{"lineNumber":111,"author":{"gitId":"-"},"content":"        // null -\u003e returns false","lastModifiedDate":"2017-05-31"},{"lineNumber":112,"author":{"gitId":"-"},"content":"        assertFalse(modelManager.equals(null));","lastModifiedDate":"2017-05-31"},{"lineNumber":113,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-31"},{"lineNumber":114,"author":{"gitId":"-"},"content":"        // different types -\u003e returns false","lastModifiedDate":"2017-05-31"},{"lineNumber":115,"author":{"gitId":"-"},"content":"        assertFalse(modelManager.equals(5));","lastModifiedDate":"2017-05-31"},{"lineNumber":116,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-31"},{"lineNumber":117,"author":{"gitId":"-"},"content":"        // different addressBook -\u003e returns false","lastModifiedDate":"2017-05-31"},{"lineNumber":118,"author":{"gitId":"WJunHong"},"content":"        assertFalse(modelManager.equals(new ModelManager(differentAddressBook, userPrefs, new SellerAddressBook(),","lastModifiedDate":"2022-03-23"},{"lineNumber":119,"author":{"gitId":"WJunHong"},"content":"                new BuyerAddressBook())));","lastModifiedDate":"2022-03-23"},{"lineNumber":120,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-31"},{"lineNumber":121,"author":{"gitId":"-"},"content":"        // different filteredList -\u003e returns false","lastModifiedDate":"2017-05-31"},{"lineNumber":122,"author":{"gitId":"-"},"content":"        String[] keywords \u003d ALICE.getName().fullName.split(\"\\\\s+\");","lastModifiedDate":"2017-07-19"},{"lineNumber":123,"author":{"gitId":"cwnm"},"content":"        modelManager.updateFilteredClientList(new NameContainsKeywordsPredicate(Arrays.asList(keywords)));","lastModifiedDate":"2022-03-04"},{"lineNumber":124,"author":{"gitId":"WJunHong"},"content":"        assertFalse(modelManager.equals(new ModelManager(addressBook, userPrefs, new SellerAddressBook(),","lastModifiedDate":"2022-03-23"},{"lineNumber":125,"author":{"gitId":"WJunHong"},"content":"                new BuyerAddressBook())));","lastModifiedDate":"2022-03-23"},{"lineNumber":126,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-08-05"},{"lineNumber":127,"author":{"gitId":"-"},"content":"        // resets modelManager to initial state for upcoming tests","lastModifiedDate":"2017-08-05"},{"lineNumber":128,"author":{"gitId":"cwnm"},"content":"        modelManager.updateFilteredClientList(PREDICATE_SHOW_ALL_CLIENTS);","lastModifiedDate":"2022-03-04"},{"lineNumber":129,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-31"},{"lineNumber":130,"author":{"gitId":"-"},"content":"        // different userPrefs -\u003e returns false","lastModifiedDate":"2018-11-27"},{"lineNumber":131,"author":{"gitId":"-"},"content":"        UserPrefs differentUserPrefs \u003d new UserPrefs();","lastModifiedDate":"2017-05-31"},{"lineNumber":132,"author":{"gitId":"-"},"content":"        differentUserPrefs.setAddressBookFilePath(Paths.get(\"differentFilePath\"));","lastModifiedDate":"2018-08-09"},{"lineNumber":133,"author":{"gitId":"WJunHong"},"content":"        assertFalse(modelManager.equals(new ModelManager(addressBook, differentUserPrefs, new SellerAddressBook(),","lastModifiedDate":"2022-03-23"},{"lineNumber":134,"author":{"gitId":"WJunHong"},"content":"                new BuyerAddressBook())));","lastModifiedDate":"2022-03-23"},{"lineNumber":135,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-31"},{"lineNumber":136,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-05-31"}],"authorContributionMap":{"WJunHong":9,"-":111,"cwnm":16}},{"path":"src/test/java/seedu/address/model/buyer/BuyerHouseTypeContainsKeywordsPredicateTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"cwnm"},"content":"package seedu.address.model.buyer;","lastModifiedDate":"2022-03-28"},{"lineNumber":2,"author":{"gitId":"cwnm"},"content":"","lastModifiedDate":"2022-03-28"},{"lineNumber":3,"author":{"gitId":"cwnm"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2022-03-28"},{"lineNumber":4,"author":{"gitId":"cwnm"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2022-03-28"},{"lineNumber":5,"author":{"gitId":"cwnm"},"content":"","lastModifiedDate":"2022-03-28"},{"lineNumber":6,"author":{"gitId":"cwnm"},"content":"import java.util.Arrays;","lastModifiedDate":"2022-03-28"},{"lineNumber":7,"author":{"gitId":"cwnm"},"content":"import java.util.Collections;","lastModifiedDate":"2022-03-28"},{"lineNumber":8,"author":{"gitId":"cwnm"},"content":"import java.util.List;","lastModifiedDate":"2022-03-28"},{"lineNumber":9,"author":{"gitId":"cwnm"},"content":"","lastModifiedDate":"2022-03-28"},{"lineNumber":10,"author":{"gitId":"cwnm"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2022-03-28"},{"lineNumber":11,"author":{"gitId":"cwnm"},"content":"","lastModifiedDate":"2022-03-28"},{"lineNumber":12,"author":{"gitId":"cwnm"},"content":"import seedu.address.model.property.House;","lastModifiedDate":"2022-03-28"},{"lineNumber":13,"author":{"gitId":"cwnm"},"content":"import seedu.address.model.property.HouseType;","lastModifiedDate":"2022-03-28"},{"lineNumber":14,"author":{"gitId":"janald99"},"content":"import seedu.address.model.property.Location;","lastModifiedDate":"2022-03-31"},{"lineNumber":15,"author":{"gitId":"cwnm"},"content":"import seedu.address.model.property.PriceRange;","lastModifiedDate":"2022-03-28"},{"lineNumber":16,"author":{"gitId":"cwnm"},"content":"import seedu.address.model.property.PropertyToBuy;","lastModifiedDate":"2022-03-28"},{"lineNumber":17,"author":{"gitId":"cwnm"},"content":"import seedu.address.testutil.BuyerBuilder;","lastModifiedDate":"2022-03-28"},{"lineNumber":18,"author":{"gitId":"cwnm"},"content":"","lastModifiedDate":"2022-03-28"},{"lineNumber":19,"author":{"gitId":"cwnm"},"content":"public class BuyerHouseTypeContainsKeywordsPredicateTest {","lastModifiedDate":"2022-03-28"},{"lineNumber":20,"author":{"gitId":"cwnm"},"content":"","lastModifiedDate":"2022-03-28"},{"lineNumber":21,"author":{"gitId":"cwnm"},"content":"    @Test","lastModifiedDate":"2022-03-28"},{"lineNumber":22,"author":{"gitId":"cwnm"},"content":"    public void equals() {","lastModifiedDate":"2022-03-28"},{"lineNumber":23,"author":{"gitId":"cwnm"},"content":"        List\u003cString\u003e firstPredicateKeywordList \u003d Collections.singletonList(\"first\");","lastModifiedDate":"2022-03-28"},{"lineNumber":24,"author":{"gitId":"cwnm"},"content":"        List\u003cString\u003e secondPredicateKeywordList \u003d Arrays.asList(\"first\", \"second\");","lastModifiedDate":"2022-03-28"},{"lineNumber":25,"author":{"gitId":"cwnm"},"content":"","lastModifiedDate":"2022-03-28"},{"lineNumber":26,"author":{"gitId":"cwnm"},"content":"        BuyerHouseTypeContainsKeywordsPredicate firstPredicate \u003d new BuyerHouseTypeContainsKeywordsPredicate(","lastModifiedDate":"2022-03-28"},{"lineNumber":27,"author":{"gitId":"cwnm"},"content":"                firstPredicateKeywordList);","lastModifiedDate":"2022-03-28"},{"lineNumber":28,"author":{"gitId":"cwnm"},"content":"        BuyerHouseTypeContainsKeywordsPredicate secondPredicate \u003d new BuyerHouseTypeContainsKeywordsPredicate(","lastModifiedDate":"2022-03-28"},{"lineNumber":29,"author":{"gitId":"cwnm"},"content":"                secondPredicateKeywordList);","lastModifiedDate":"2022-03-28"},{"lineNumber":30,"author":{"gitId":"cwnm"},"content":"","lastModifiedDate":"2022-03-28"},{"lineNumber":31,"author":{"gitId":"cwnm"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2022-03-28"},{"lineNumber":32,"author":{"gitId":"cwnm"},"content":"        assertTrue(firstPredicate.equals(firstPredicate));","lastModifiedDate":"2022-03-28"},{"lineNumber":33,"author":{"gitId":"cwnm"},"content":"","lastModifiedDate":"2022-03-28"},{"lineNumber":34,"author":{"gitId":"cwnm"},"content":"        // same values -\u003e returns true","lastModifiedDate":"2022-03-28"},{"lineNumber":35,"author":{"gitId":"cwnm"},"content":"        BuyerHouseTypeContainsKeywordsPredicate firstPredicateCopy \u003d new BuyerHouseTypeContainsKeywordsPredicate(","lastModifiedDate":"2022-03-28"},{"lineNumber":36,"author":{"gitId":"cwnm"},"content":"                firstPredicateKeywordList);","lastModifiedDate":"2022-03-28"},{"lineNumber":37,"author":{"gitId":"cwnm"},"content":"        assertTrue(firstPredicate.equals(firstPredicateCopy));","lastModifiedDate":"2022-03-28"},{"lineNumber":38,"author":{"gitId":"cwnm"},"content":"","lastModifiedDate":"2022-03-28"},{"lineNumber":39,"author":{"gitId":"cwnm"},"content":"        // different types -\u003e returns false","lastModifiedDate":"2022-03-28"},{"lineNumber":40,"author":{"gitId":"cwnm"},"content":"        assertFalse(firstPredicate.equals(1));","lastModifiedDate":"2022-03-28"},{"lineNumber":41,"author":{"gitId":"cwnm"},"content":"","lastModifiedDate":"2022-03-28"},{"lineNumber":42,"author":{"gitId":"cwnm"},"content":"        // null -\u003e returns false","lastModifiedDate":"2022-03-28"},{"lineNumber":43,"author":{"gitId":"cwnm"},"content":"        assertFalse(firstPredicate.equals(null));","lastModifiedDate":"2022-03-28"},{"lineNumber":44,"author":{"gitId":"cwnm"},"content":"","lastModifiedDate":"2022-03-28"},{"lineNumber":45,"author":{"gitId":"cwnm"},"content":"        // different client -\u003e returns false","lastModifiedDate":"2022-03-28"},{"lineNumber":46,"author":{"gitId":"cwnm"},"content":"        assertFalse(firstPredicate.equals(secondPredicate));","lastModifiedDate":"2022-03-28"},{"lineNumber":47,"author":{"gitId":"cwnm"},"content":"    }","lastModifiedDate":"2022-03-28"},{"lineNumber":48,"author":{"gitId":"cwnm"},"content":"","lastModifiedDate":"2022-03-28"},{"lineNumber":49,"author":{"gitId":"cwnm"},"content":"    @Test","lastModifiedDate":"2022-03-28"},{"lineNumber":50,"author":{"gitId":"cwnm"},"content":"    public void test_houseTypeContainsKeywords_returnsTrue() {","lastModifiedDate":"2022-03-28"},{"lineNumber":51,"author":{"gitId":"cwnm"},"content":"        // One keyword","lastModifiedDate":"2022-03-28"},{"lineNumber":52,"author":{"gitId":"cwnm"},"content":"        BuyerHouseTypeContainsKeywordsPredicate predicate \u003d new BuyerHouseTypeContainsKeywordsPredicate(","lastModifiedDate":"2022-03-28"},{"lineNumber":53,"author":{"gitId":"cwnm"},"content":"                Collections.singletonList(\"Bungalow\"));","lastModifiedDate":"2022-03-28"},{"lineNumber":54,"author":{"gitId":"cwnm"},"content":"        assertTrue(predicate.test(new BuyerBuilder().withProperty(new PropertyToBuy(","lastModifiedDate":"2022-03-28"},{"lineNumber":55,"author":{"gitId":"janald99"},"content":"                new House(HouseType.BUNGALOW, new Location(\"Kranji\")),","lastModifiedDate":"2022-03-31"},{"lineNumber":56,"author":{"gitId":"cwnm"},"content":"                new PriceRange(100, 500))).build()));","lastModifiedDate":"2022-03-28"},{"lineNumber":57,"author":{"gitId":"cwnm"},"content":"","lastModifiedDate":"2022-03-28"},{"lineNumber":58,"author":{"gitId":"cwnm"},"content":"        // Multiple keywords","lastModifiedDate":"2022-03-28"},{"lineNumber":59,"author":{"gitId":"cwnm"},"content":"        predicate \u003d new BuyerHouseTypeContainsKeywordsPredicate(Arrays.asList(\"Bunga\", \"Low\"));","lastModifiedDate":"2022-03-28"},{"lineNumber":60,"author":{"gitId":"cwnm"},"content":"        assertTrue(predicate.test(new BuyerBuilder().withProperty(new PropertyToBuy(","lastModifiedDate":"2022-03-28"},{"lineNumber":61,"author":{"gitId":"janald99"},"content":"                new House(HouseType.BUNGALOW, new Location(\"Kranji\")),","lastModifiedDate":"2022-03-31"},{"lineNumber":62,"author":{"gitId":"cwnm"},"content":"                new PriceRange(100, 500))).build()));","lastModifiedDate":"2022-03-28"},{"lineNumber":63,"author":{"gitId":"cwnm"},"content":"","lastModifiedDate":"2022-03-28"},{"lineNumber":64,"author":{"gitId":"cwnm"},"content":"        // Only one matching keyword","lastModifiedDate":"2022-03-28"},{"lineNumber":65,"author":{"gitId":"cwnm"},"content":"        predicate \u003d new BuyerHouseTypeContainsKeywordsPredicate(Arrays.asList(\"Bunga\", \"High\"));","lastModifiedDate":"2022-03-28"},{"lineNumber":66,"author":{"gitId":"cwnm"},"content":"        assertTrue(predicate.test(new BuyerBuilder().withProperty(new PropertyToBuy(","lastModifiedDate":"2022-03-28"},{"lineNumber":67,"author":{"gitId":"janald99"},"content":"                new House(HouseType.BUNGALOW, new Location(\"Kranji\")),","lastModifiedDate":"2022-03-31"},{"lineNumber":68,"author":{"gitId":"cwnm"},"content":"                new PriceRange(100, 500))).build()));","lastModifiedDate":"2022-03-28"},{"lineNumber":69,"author":{"gitId":"cwnm"},"content":"","lastModifiedDate":"2022-03-28"},{"lineNumber":70,"author":{"gitId":"cwnm"},"content":"        // Mixed-case keywords","lastModifiedDate":"2022-03-28"},{"lineNumber":71,"author":{"gitId":"cwnm"},"content":"        predicate \u003d new BuyerHouseTypeContainsKeywordsPredicate(Arrays.asList(\"BuNg\", \"aLoW\"));","lastModifiedDate":"2022-03-28"},{"lineNumber":72,"author":{"gitId":"cwnm"},"content":"        assertTrue(predicate.test(new BuyerBuilder().withProperty(new PropertyToBuy(","lastModifiedDate":"2022-03-28"},{"lineNumber":73,"author":{"gitId":"janald99"},"content":"                new House(HouseType.BUNGALOW, new Location(\"Kranji\")),","lastModifiedDate":"2022-03-31"},{"lineNumber":74,"author":{"gitId":"cwnm"},"content":"                new PriceRange(100, 500))).build()));","lastModifiedDate":"2022-03-28"},{"lineNumber":75,"author":{"gitId":"cwnm"},"content":"    }","lastModifiedDate":"2022-03-28"},{"lineNumber":76,"author":{"gitId":"cwnm"},"content":"","lastModifiedDate":"2022-03-28"},{"lineNumber":77,"author":{"gitId":"cwnm"},"content":"    @Test","lastModifiedDate":"2022-03-28"},{"lineNumber":78,"author":{"gitId":"cwnm"},"content":"    public void test_houseTypeDoesNotContainKeywords_returnsFalse() {","lastModifiedDate":"2022-03-28"},{"lineNumber":79,"author":{"gitId":"cwnm"},"content":"        // Zero keywords","lastModifiedDate":"2022-03-28"},{"lineNumber":80,"author":{"gitId":"cwnm"},"content":"        BuyerHouseTypeContainsKeywordsPredicate predicate \u003d new BuyerHouseTypeContainsKeywordsPredicate(","lastModifiedDate":"2022-03-28"},{"lineNumber":81,"author":{"gitId":"cwnm"},"content":"                Collections.emptyList());","lastModifiedDate":"2022-03-28"},{"lineNumber":82,"author":{"gitId":"cwnm"},"content":"        assertFalse(predicate.test(new BuyerBuilder().withProperty(new PropertyToBuy(","lastModifiedDate":"2022-03-28"},{"lineNumber":83,"author":{"gitId":"janald99"},"content":"                new House(HouseType.BUNGALOW, new Location(\"Kranji\")),","lastModifiedDate":"2022-03-31"},{"lineNumber":84,"author":{"gitId":"cwnm"},"content":"                new PriceRange(100, 500))).build()));","lastModifiedDate":"2022-03-28"},{"lineNumber":85,"author":{"gitId":"cwnm"},"content":"","lastModifiedDate":"2022-03-28"},{"lineNumber":86,"author":{"gitId":"cwnm"},"content":"        // Non-matching keyword","lastModifiedDate":"2022-03-28"},{"lineNumber":87,"author":{"gitId":"cwnm"},"content":"        predicate \u003d new BuyerHouseTypeContainsKeywordsPredicate(Arrays.asList(\"Carol\"));","lastModifiedDate":"2022-03-28"},{"lineNumber":88,"author":{"gitId":"cwnm"},"content":"        assertFalse(predicate.test(new BuyerBuilder().withProperty(new PropertyToBuy(","lastModifiedDate":"2022-03-28"},{"lineNumber":89,"author":{"gitId":"janald99"},"content":"                new House(HouseType.BUNGALOW, new Location(\"Kranji\")),","lastModifiedDate":"2022-03-31"},{"lineNumber":90,"author":{"gitId":"cwnm"},"content":"                new PriceRange(100, 500))).build()));","lastModifiedDate":"2022-03-28"},{"lineNumber":91,"author":{"gitId":"cwnm"},"content":"","lastModifiedDate":"2022-03-28"},{"lineNumber":92,"author":{"gitId":"cwnm"},"content":"        // Keywords match phone, email and address, but does not match House Type","lastModifiedDate":"2022-03-28"},{"lineNumber":93,"author":{"gitId":"cwnm"},"content":"        predicate \u003d new BuyerHouseTypeContainsKeywordsPredicate(","lastModifiedDate":"2022-03-28"},{"lineNumber":94,"author":{"gitId":"cwnm"},"content":"                Arrays.asList(\"12345\", \"alice@email.com\", \"Main\", \"Street\"));","lastModifiedDate":"2022-03-28"},{"lineNumber":95,"author":{"gitId":"cwnm"},"content":"        assertFalse(predicate.test(new BuyerBuilder().withName(\"Alice\").withPhone(\"12345\")","lastModifiedDate":"2022-03-28"},{"lineNumber":96,"author":{"gitId":"janald99"},"content":"                .withProperty(new PropertyToBuy(new House(HouseType.BUNGALOW, new Location(\"Kranji\")),","lastModifiedDate":"2022-03-31"},{"lineNumber":97,"author":{"gitId":"cwnm"},"content":"                        new PriceRange(100, 500))).build()));","lastModifiedDate":"2022-03-28"},{"lineNumber":98,"author":{"gitId":"cwnm"},"content":"    }","lastModifiedDate":"2022-03-28"},{"lineNumber":99,"author":{"gitId":"cwnm"},"content":"}","lastModifiedDate":"2022-03-28"}],"authorContributionMap":{"janald99":8,"cwnm":91}},{"path":"src/test/java/seedu/address/model/buyer/BuyerNameContainsKeywordsPredicateTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"cwnm"},"content":"package seedu.address.model.buyer;","lastModifiedDate":"2022-03-28"},{"lineNumber":2,"author":{"gitId":"cwnm"},"content":"","lastModifiedDate":"2022-03-28"},{"lineNumber":3,"author":{"gitId":"cwnm"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2022-03-28"},{"lineNumber":4,"author":{"gitId":"cwnm"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2022-03-28"},{"lineNumber":5,"author":{"gitId":"cwnm"},"content":"","lastModifiedDate":"2022-03-28"},{"lineNumber":6,"author":{"gitId":"cwnm"},"content":"import java.util.Arrays;","lastModifiedDate":"2022-03-28"},{"lineNumber":7,"author":{"gitId":"cwnm"},"content":"import java.util.Collections;","lastModifiedDate":"2022-03-28"},{"lineNumber":8,"author":{"gitId":"cwnm"},"content":"import java.util.List;","lastModifiedDate":"2022-03-28"},{"lineNumber":9,"author":{"gitId":"cwnm"},"content":"","lastModifiedDate":"2022-03-28"},{"lineNumber":10,"author":{"gitId":"cwnm"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2022-03-28"},{"lineNumber":11,"author":{"gitId":"cwnm"},"content":"","lastModifiedDate":"2022-03-28"},{"lineNumber":12,"author":{"gitId":"cwnm"},"content":"import seedu.address.testutil.BuyerBuilder;","lastModifiedDate":"2022-03-28"},{"lineNumber":13,"author":{"gitId":"cwnm"},"content":"","lastModifiedDate":"2022-03-28"},{"lineNumber":14,"author":{"gitId":"cwnm"},"content":"public class BuyerNameContainsKeywordsPredicateTest {","lastModifiedDate":"2022-03-28"},{"lineNumber":15,"author":{"gitId":"cwnm"},"content":"","lastModifiedDate":"2022-03-28"},{"lineNumber":16,"author":{"gitId":"cwnm"},"content":"    @Test","lastModifiedDate":"2022-03-28"},{"lineNumber":17,"author":{"gitId":"cwnm"},"content":"    public void equals() {","lastModifiedDate":"2022-03-28"},{"lineNumber":18,"author":{"gitId":"cwnm"},"content":"        List\u003cString\u003e firstPredicateKeywordList \u003d Collections.singletonList(\"first\");","lastModifiedDate":"2022-03-28"},{"lineNumber":19,"author":{"gitId":"cwnm"},"content":"        List\u003cString\u003e secondPredicateKeywordList \u003d Arrays.asList(\"first\", \"second\");","lastModifiedDate":"2022-03-28"},{"lineNumber":20,"author":{"gitId":"cwnm"},"content":"","lastModifiedDate":"2022-03-28"},{"lineNumber":21,"author":{"gitId":"cwnm"},"content":"        BuyerNameContainsKeywordsPredicate firstPredicate \u003d new BuyerNameContainsKeywordsPredicate(","lastModifiedDate":"2022-03-28"},{"lineNumber":22,"author":{"gitId":"cwnm"},"content":"                firstPredicateKeywordList);","lastModifiedDate":"2022-03-28"},{"lineNumber":23,"author":{"gitId":"cwnm"},"content":"        BuyerNameContainsKeywordsPredicate secondPredicate \u003d new BuyerNameContainsKeywordsPredicate(","lastModifiedDate":"2022-03-28"},{"lineNumber":24,"author":{"gitId":"cwnm"},"content":"                secondPredicateKeywordList);","lastModifiedDate":"2022-03-28"},{"lineNumber":25,"author":{"gitId":"cwnm"},"content":"","lastModifiedDate":"2022-03-28"},{"lineNumber":26,"author":{"gitId":"cwnm"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2022-03-28"},{"lineNumber":27,"author":{"gitId":"cwnm"},"content":"        assertTrue(firstPredicate.equals(firstPredicate));","lastModifiedDate":"2022-03-28"},{"lineNumber":28,"author":{"gitId":"cwnm"},"content":"","lastModifiedDate":"2022-03-28"},{"lineNumber":29,"author":{"gitId":"cwnm"},"content":"        // same values -\u003e returns true","lastModifiedDate":"2022-03-28"},{"lineNumber":30,"author":{"gitId":"cwnm"},"content":"        BuyerNameContainsKeywordsPredicate firstPredicateCopy \u003d new BuyerNameContainsKeywordsPredicate(","lastModifiedDate":"2022-03-28"},{"lineNumber":31,"author":{"gitId":"cwnm"},"content":"                firstPredicateKeywordList);","lastModifiedDate":"2022-03-28"},{"lineNumber":32,"author":{"gitId":"cwnm"},"content":"        assertTrue(firstPredicate.equals(firstPredicateCopy));","lastModifiedDate":"2022-03-28"},{"lineNumber":33,"author":{"gitId":"cwnm"},"content":"","lastModifiedDate":"2022-03-28"},{"lineNumber":34,"author":{"gitId":"cwnm"},"content":"        // different types -\u003e returns false","lastModifiedDate":"2022-03-28"},{"lineNumber":35,"author":{"gitId":"cwnm"},"content":"        assertFalse(firstPredicate.equals(1));","lastModifiedDate":"2022-03-28"},{"lineNumber":36,"author":{"gitId":"cwnm"},"content":"","lastModifiedDate":"2022-03-28"},{"lineNumber":37,"author":{"gitId":"cwnm"},"content":"        // null -\u003e returns false","lastModifiedDate":"2022-03-28"},{"lineNumber":38,"author":{"gitId":"cwnm"},"content":"        assertFalse(firstPredicate.equals(null));","lastModifiedDate":"2022-03-28"},{"lineNumber":39,"author":{"gitId":"cwnm"},"content":"","lastModifiedDate":"2022-03-28"},{"lineNumber":40,"author":{"gitId":"cwnm"},"content":"        // different client -\u003e returns false","lastModifiedDate":"2022-03-28"},{"lineNumber":41,"author":{"gitId":"cwnm"},"content":"        assertFalse(firstPredicate.equals(secondPredicate));","lastModifiedDate":"2022-03-28"},{"lineNumber":42,"author":{"gitId":"cwnm"},"content":"    }","lastModifiedDate":"2022-03-28"},{"lineNumber":43,"author":{"gitId":"cwnm"},"content":"","lastModifiedDate":"2022-03-28"},{"lineNumber":44,"author":{"gitId":"cwnm"},"content":"    @Test","lastModifiedDate":"2022-03-28"},{"lineNumber":45,"author":{"gitId":"cwnm"},"content":"    public void test_nameContainsKeywords_returnsTrue() {","lastModifiedDate":"2022-03-28"},{"lineNumber":46,"author":{"gitId":"cwnm"},"content":"        // One keyword","lastModifiedDate":"2022-03-28"},{"lineNumber":47,"author":{"gitId":"cwnm"},"content":"        BuyerNameContainsKeywordsPredicate predicate \u003d new BuyerNameContainsKeywordsPredicate(","lastModifiedDate":"2022-03-28"},{"lineNumber":48,"author":{"gitId":"cwnm"},"content":"                Collections.singletonList(\"Alice\"));","lastModifiedDate":"2022-03-28"},{"lineNumber":49,"author":{"gitId":"cwnm"},"content":"        assertTrue(predicate.test(new BuyerBuilder().withName(\"Alice Bob\").build()));","lastModifiedDate":"2022-03-28"},{"lineNumber":50,"author":{"gitId":"cwnm"},"content":"","lastModifiedDate":"2022-03-28"},{"lineNumber":51,"author":{"gitId":"cwnm"},"content":"        // Multiple keywords","lastModifiedDate":"2022-03-28"},{"lineNumber":52,"author":{"gitId":"cwnm"},"content":"        predicate \u003d new BuyerNameContainsKeywordsPredicate(Arrays.asList(\"Alice\", \"Bob\"));","lastModifiedDate":"2022-03-28"},{"lineNumber":53,"author":{"gitId":"cwnm"},"content":"        assertTrue(predicate.test(new BuyerBuilder().withName(\"Alice Bob\").build()));","lastModifiedDate":"2022-03-28"},{"lineNumber":54,"author":{"gitId":"cwnm"},"content":"","lastModifiedDate":"2022-03-28"},{"lineNumber":55,"author":{"gitId":"cwnm"},"content":"        // Only one matching keyword","lastModifiedDate":"2022-03-28"},{"lineNumber":56,"author":{"gitId":"cwnm"},"content":"        predicate \u003d new BuyerNameContainsKeywordsPredicate(Arrays.asList(\"Bob\", \"Carol\"));","lastModifiedDate":"2022-03-28"},{"lineNumber":57,"author":{"gitId":"cwnm"},"content":"        assertTrue(predicate.test(new BuyerBuilder().withName(\"Alice Carol\").build()));","lastModifiedDate":"2022-03-28"},{"lineNumber":58,"author":{"gitId":"cwnm"},"content":"","lastModifiedDate":"2022-03-28"},{"lineNumber":59,"author":{"gitId":"cwnm"},"content":"        // Mixed-case keywords","lastModifiedDate":"2022-03-28"},{"lineNumber":60,"author":{"gitId":"cwnm"},"content":"        predicate \u003d new BuyerNameContainsKeywordsPredicate(Arrays.asList(\"aLIce\", \"bOB\"));","lastModifiedDate":"2022-03-28"},{"lineNumber":61,"author":{"gitId":"cwnm"},"content":"        assertTrue(predicate.test(new BuyerBuilder().withName(\"Alice Bob\").build()));","lastModifiedDate":"2022-03-28"},{"lineNumber":62,"author":{"gitId":"cwnm"},"content":"    }","lastModifiedDate":"2022-03-28"},{"lineNumber":63,"author":{"gitId":"cwnm"},"content":"","lastModifiedDate":"2022-03-28"},{"lineNumber":64,"author":{"gitId":"cwnm"},"content":"    @Test","lastModifiedDate":"2022-03-28"},{"lineNumber":65,"author":{"gitId":"cwnm"},"content":"    public void test_nameDoesNotContainKeywords_returnsFalse() {","lastModifiedDate":"2022-03-28"},{"lineNumber":66,"author":{"gitId":"cwnm"},"content":"        // Zero keywords","lastModifiedDate":"2022-03-28"},{"lineNumber":67,"author":{"gitId":"cwnm"},"content":"        BuyerNameContainsKeywordsPredicate predicate \u003d new BuyerNameContainsKeywordsPredicate(","lastModifiedDate":"2022-03-28"},{"lineNumber":68,"author":{"gitId":"cwnm"},"content":"                Collections.emptyList());","lastModifiedDate":"2022-03-28"},{"lineNumber":69,"author":{"gitId":"cwnm"},"content":"        assertFalse(predicate.test(new BuyerBuilder().withName(\"Alice\").build()));","lastModifiedDate":"2022-03-28"},{"lineNumber":70,"author":{"gitId":"cwnm"},"content":"","lastModifiedDate":"2022-03-28"},{"lineNumber":71,"author":{"gitId":"cwnm"},"content":"        // Non-matching keyword","lastModifiedDate":"2022-03-28"},{"lineNumber":72,"author":{"gitId":"cwnm"},"content":"        predicate \u003d new BuyerNameContainsKeywordsPredicate(Arrays.asList(\"Carol\"));","lastModifiedDate":"2022-03-28"},{"lineNumber":73,"author":{"gitId":"cwnm"},"content":"        assertFalse(predicate.test(new BuyerBuilder().withName(\"Alice Bob\").build()));","lastModifiedDate":"2022-03-28"},{"lineNumber":74,"author":{"gitId":"cwnm"},"content":"","lastModifiedDate":"2022-03-28"},{"lineNumber":75,"author":{"gitId":"cwnm"},"content":"        // Keywords match phone, email and address, but does not match name","lastModifiedDate":"2022-03-28"},{"lineNumber":76,"author":{"gitId":"cwnm"},"content":"        predicate \u003d new BuyerNameContainsKeywordsPredicate(","lastModifiedDate":"2022-03-28"},{"lineNumber":77,"author":{"gitId":"cwnm"},"content":"                Arrays.asList(\"12345\", \"alice@email.com\", \"Main\", \"Street\"));","lastModifiedDate":"2022-03-28"},{"lineNumber":78,"author":{"gitId":"cwnm"},"content":"        assertFalse(predicate.test(new BuyerBuilder().withName(\"Alice\").withPhone(\"12345\")","lastModifiedDate":"2022-03-28"},{"lineNumber":79,"author":{"gitId":"cwnm"},"content":"                .build()));","lastModifiedDate":"2022-03-28"},{"lineNumber":80,"author":{"gitId":"cwnm"},"content":"    }","lastModifiedDate":"2022-03-28"},{"lineNumber":81,"author":{"gitId":"cwnm"},"content":"}","lastModifiedDate":"2022-03-28"}],"authorContributionMap":{"cwnm":81}},{"path":"src/test/java/seedu/address/model/buyer/BuyerPhoneContainsKeywordsPredicateTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"cwnm"},"content":"package seedu.address.model.buyer;","lastModifiedDate":"2022-03-28"},{"lineNumber":2,"author":{"gitId":"cwnm"},"content":"","lastModifiedDate":"2022-03-28"},{"lineNumber":3,"author":{"gitId":"cwnm"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2022-03-28"},{"lineNumber":4,"author":{"gitId":"cwnm"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2022-03-28"},{"lineNumber":5,"author":{"gitId":"cwnm"},"content":"","lastModifiedDate":"2022-03-28"},{"lineNumber":6,"author":{"gitId":"cwnm"},"content":"import java.util.Arrays;","lastModifiedDate":"2022-03-28"},{"lineNumber":7,"author":{"gitId":"cwnm"},"content":"import java.util.Collections;","lastModifiedDate":"2022-03-28"},{"lineNumber":8,"author":{"gitId":"cwnm"},"content":"import java.util.List;","lastModifiedDate":"2022-03-28"},{"lineNumber":9,"author":{"gitId":"cwnm"},"content":"","lastModifiedDate":"2022-03-28"},{"lineNumber":10,"author":{"gitId":"cwnm"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2022-03-28"},{"lineNumber":11,"author":{"gitId":"cwnm"},"content":"","lastModifiedDate":"2022-03-28"},{"lineNumber":12,"author":{"gitId":"cwnm"},"content":"import seedu.address.testutil.BuyerBuilder;","lastModifiedDate":"2022-03-28"},{"lineNumber":13,"author":{"gitId":"cwnm"},"content":"","lastModifiedDate":"2022-03-28"},{"lineNumber":14,"author":{"gitId":"cwnm"},"content":"public class BuyerPhoneContainsKeywordsPredicateTest {","lastModifiedDate":"2022-03-28"},{"lineNumber":15,"author":{"gitId":"cwnm"},"content":"","lastModifiedDate":"2022-03-28"},{"lineNumber":16,"author":{"gitId":"cwnm"},"content":"    @Test","lastModifiedDate":"2022-03-28"},{"lineNumber":17,"author":{"gitId":"cwnm"},"content":"    public void equals() {","lastModifiedDate":"2022-03-28"},{"lineNumber":18,"author":{"gitId":"cwnm"},"content":"        List\u003cString\u003e firstPredicateKeywordList \u003d Collections.singletonList(\"first\");","lastModifiedDate":"2022-03-28"},{"lineNumber":19,"author":{"gitId":"cwnm"},"content":"        List\u003cString\u003e secondPredicateKeywordList \u003d Arrays.asList(\"first\", \"second\");","lastModifiedDate":"2022-03-28"},{"lineNumber":20,"author":{"gitId":"cwnm"},"content":"","lastModifiedDate":"2022-03-28"},{"lineNumber":21,"author":{"gitId":"cwnm"},"content":"        BuyerPhoneContainsKeywordsPredicate firstPredicate \u003d new BuyerPhoneContainsKeywordsPredicate(","lastModifiedDate":"2022-03-28"},{"lineNumber":22,"author":{"gitId":"cwnm"},"content":"                firstPredicateKeywordList);","lastModifiedDate":"2022-03-28"},{"lineNumber":23,"author":{"gitId":"cwnm"},"content":"        BuyerPhoneContainsKeywordsPredicate secondPredicate \u003d new BuyerPhoneContainsKeywordsPredicate(","lastModifiedDate":"2022-03-28"},{"lineNumber":24,"author":{"gitId":"cwnm"},"content":"                secondPredicateKeywordList);","lastModifiedDate":"2022-03-28"},{"lineNumber":25,"author":{"gitId":"cwnm"},"content":"","lastModifiedDate":"2022-03-28"},{"lineNumber":26,"author":{"gitId":"cwnm"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2022-03-28"},{"lineNumber":27,"author":{"gitId":"cwnm"},"content":"        assertTrue(firstPredicate.equals(firstPredicate));","lastModifiedDate":"2022-03-28"},{"lineNumber":28,"author":{"gitId":"cwnm"},"content":"","lastModifiedDate":"2022-03-28"},{"lineNumber":29,"author":{"gitId":"cwnm"},"content":"        // same values -\u003e returns true","lastModifiedDate":"2022-03-28"},{"lineNumber":30,"author":{"gitId":"cwnm"},"content":"        BuyerPhoneContainsKeywordsPredicate firstPredicateCopy \u003d new BuyerPhoneContainsKeywordsPredicate(","lastModifiedDate":"2022-03-28"},{"lineNumber":31,"author":{"gitId":"cwnm"},"content":"                firstPredicateKeywordList);","lastModifiedDate":"2022-03-28"},{"lineNumber":32,"author":{"gitId":"cwnm"},"content":"        assertTrue(firstPredicate.equals(firstPredicateCopy));","lastModifiedDate":"2022-03-28"},{"lineNumber":33,"author":{"gitId":"cwnm"},"content":"","lastModifiedDate":"2022-03-28"},{"lineNumber":34,"author":{"gitId":"cwnm"},"content":"        // different types -\u003e returns false","lastModifiedDate":"2022-03-28"},{"lineNumber":35,"author":{"gitId":"cwnm"},"content":"        assertFalse(firstPredicate.equals(1));","lastModifiedDate":"2022-03-28"},{"lineNumber":36,"author":{"gitId":"cwnm"},"content":"","lastModifiedDate":"2022-03-28"},{"lineNumber":37,"author":{"gitId":"cwnm"},"content":"        // null -\u003e returns false","lastModifiedDate":"2022-03-28"},{"lineNumber":38,"author":{"gitId":"cwnm"},"content":"        assertFalse(firstPredicate.equals(null));","lastModifiedDate":"2022-03-28"},{"lineNumber":39,"author":{"gitId":"cwnm"},"content":"","lastModifiedDate":"2022-03-28"},{"lineNumber":40,"author":{"gitId":"cwnm"},"content":"        // different client -\u003e returns false","lastModifiedDate":"2022-03-28"},{"lineNumber":41,"author":{"gitId":"cwnm"},"content":"        assertFalse(firstPredicate.equals(secondPredicate));","lastModifiedDate":"2022-03-28"},{"lineNumber":42,"author":{"gitId":"cwnm"},"content":"    }","lastModifiedDate":"2022-03-28"},{"lineNumber":43,"author":{"gitId":"cwnm"},"content":"","lastModifiedDate":"2022-03-28"},{"lineNumber":44,"author":{"gitId":"cwnm"},"content":"    @Test","lastModifiedDate":"2022-03-28"},{"lineNumber":45,"author":{"gitId":"cwnm"},"content":"    public void test_phoneContainsKeywords_returnsTrue() {","lastModifiedDate":"2022-03-28"},{"lineNumber":46,"author":{"gitId":"cwnm"},"content":"        // One keyword","lastModifiedDate":"2022-03-28"},{"lineNumber":47,"author":{"gitId":"cwnm"},"content":"        BuyerPhoneContainsKeywordsPredicate predicate \u003d new BuyerPhoneContainsKeywordsPredicate(","lastModifiedDate":"2022-03-28"},{"lineNumber":48,"author":{"gitId":"cwnm"},"content":"                Collections.singletonList(\"123123\"));","lastModifiedDate":"2022-03-28"},{"lineNumber":49,"author":{"gitId":"cwnm"},"content":"        assertTrue(predicate.test(new BuyerBuilder().withPhone(\"123123\").build()));","lastModifiedDate":"2022-03-28"},{"lineNumber":50,"author":{"gitId":"cwnm"},"content":"","lastModifiedDate":"2022-03-28"},{"lineNumber":51,"author":{"gitId":"cwnm"},"content":"        // Multiple keywords","lastModifiedDate":"2022-03-28"},{"lineNumber":52,"author":{"gitId":"cwnm"},"content":"        predicate \u003d new BuyerPhoneContainsKeywordsPredicate(Arrays.asList(\"123\", \"69\"));","lastModifiedDate":"2022-03-28"},{"lineNumber":53,"author":{"gitId":"cwnm"},"content":"        assertTrue(predicate.test(new BuyerBuilder().withPhone(\"12369\").build()));","lastModifiedDate":"2022-03-28"},{"lineNumber":54,"author":{"gitId":"cwnm"},"content":"","lastModifiedDate":"2022-03-28"},{"lineNumber":55,"author":{"gitId":"cwnm"},"content":"        // Only one matching keyword","lastModifiedDate":"2022-03-28"},{"lineNumber":56,"author":{"gitId":"cwnm"},"content":"        predicate \u003d new BuyerPhoneContainsKeywordsPredicate(Arrays.asList(\"123\", \"999\"));","lastModifiedDate":"2022-03-28"},{"lineNumber":57,"author":{"gitId":"cwnm"},"content":"        assertTrue(predicate.test(new BuyerBuilder().withPhone(\"999696969\").build()));","lastModifiedDate":"2022-03-28"},{"lineNumber":58,"author":{"gitId":"cwnm"},"content":"","lastModifiedDate":"2022-03-28"},{"lineNumber":59,"author":{"gitId":"cwnm"},"content":"    }","lastModifiedDate":"2022-03-28"},{"lineNumber":60,"author":{"gitId":"cwnm"},"content":"","lastModifiedDate":"2022-03-28"},{"lineNumber":61,"author":{"gitId":"cwnm"},"content":"    @Test","lastModifiedDate":"2022-03-28"},{"lineNumber":62,"author":{"gitId":"cwnm"},"content":"    public void test_phoneDoesNotContainKeywords_returnsFalse() {","lastModifiedDate":"2022-03-28"},{"lineNumber":63,"author":{"gitId":"cwnm"},"content":"        // Zero keywords","lastModifiedDate":"2022-03-28"},{"lineNumber":64,"author":{"gitId":"cwnm"},"content":"        BuyerPhoneContainsKeywordsPredicate predicate \u003d new BuyerPhoneContainsKeywordsPredicate(","lastModifiedDate":"2022-03-28"},{"lineNumber":65,"author":{"gitId":"cwnm"},"content":"                Collections.emptyList());","lastModifiedDate":"2022-03-28"},{"lineNumber":66,"author":{"gitId":"cwnm"},"content":"        assertFalse(predicate.test(new BuyerBuilder().withPhone(\"69696969\").build()));","lastModifiedDate":"2022-03-28"},{"lineNumber":67,"author":{"gitId":"cwnm"},"content":"","lastModifiedDate":"2022-03-28"},{"lineNumber":68,"author":{"gitId":"cwnm"},"content":"        // Non-matching keyword","lastModifiedDate":"2022-03-28"},{"lineNumber":69,"author":{"gitId":"cwnm"},"content":"        predicate \u003d new BuyerPhoneContainsKeywordsPredicate(Arrays.asList(\"Carol\"));","lastModifiedDate":"2022-03-28"},{"lineNumber":70,"author":{"gitId":"cwnm"},"content":"        assertFalse(predicate.test(new BuyerBuilder().withPhone(\"123123\").build()));","lastModifiedDate":"2022-03-28"},{"lineNumber":71,"author":{"gitId":"cwnm"},"content":"","lastModifiedDate":"2022-03-28"},{"lineNumber":72,"author":{"gitId":"cwnm"},"content":"        // Keywords match phone, email and address, but does not match phone","lastModifiedDate":"2022-03-28"},{"lineNumber":73,"author":{"gitId":"cwnm"},"content":"        predicate \u003d new BuyerPhoneContainsKeywordsPredicate(","lastModifiedDate":"2022-03-28"},{"lineNumber":74,"author":{"gitId":"cwnm"},"content":"                Arrays.asList(\"12345\", \"alice@email.com\", \"Main\", \"Street\"));","lastModifiedDate":"2022-03-28"},{"lineNumber":75,"author":{"gitId":"cwnm"},"content":"        assertFalse(predicate.test(new BuyerBuilder().withName(\"Alice\").withPhone(\"999\")","lastModifiedDate":"2022-03-28"},{"lineNumber":76,"author":{"gitId":"cwnm"},"content":"                .build()));","lastModifiedDate":"2022-03-28"},{"lineNumber":77,"author":{"gitId":"cwnm"},"content":"","lastModifiedDate":"2022-03-28"},{"lineNumber":78,"author":{"gitId":"cwnm"},"content":"    }","lastModifiedDate":"2022-03-28"},{"lineNumber":79,"author":{"gitId":"cwnm"},"content":"}","lastModifiedDate":"2022-03-28"}],"authorContributionMap":{"cwnm":79}},{"path":"src/test/java/seedu/address/model/buyer/BuyerTagsContainsKeywordsPredicateTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"cwnm"},"content":"package seedu.address.model.buyer;","lastModifiedDate":"2022-03-28"},{"lineNumber":2,"author":{"gitId":"cwnm"},"content":"","lastModifiedDate":"2022-03-28"},{"lineNumber":3,"author":{"gitId":"cwnm"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2022-03-28"},{"lineNumber":4,"author":{"gitId":"cwnm"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2022-03-28"},{"lineNumber":5,"author":{"gitId":"cwnm"},"content":"","lastModifiedDate":"2022-03-28"},{"lineNumber":6,"author":{"gitId":"cwnm"},"content":"import java.util.Arrays;","lastModifiedDate":"2022-03-28"},{"lineNumber":7,"author":{"gitId":"cwnm"},"content":"import java.util.Collections;","lastModifiedDate":"2022-03-28"},{"lineNumber":8,"author":{"gitId":"cwnm"},"content":"import java.util.List;","lastModifiedDate":"2022-03-28"},{"lineNumber":9,"author":{"gitId":"cwnm"},"content":"","lastModifiedDate":"2022-03-28"},{"lineNumber":10,"author":{"gitId":"cwnm"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2022-03-28"},{"lineNumber":11,"author":{"gitId":"cwnm"},"content":"","lastModifiedDate":"2022-03-28"},{"lineNumber":12,"author":{"gitId":"cwnm"},"content":"import seedu.address.testutil.BuyerBuilder;","lastModifiedDate":"2022-03-28"},{"lineNumber":13,"author":{"gitId":"cwnm"},"content":"","lastModifiedDate":"2022-03-28"},{"lineNumber":14,"author":{"gitId":"cwnm"},"content":"public class BuyerTagsContainsKeywordsPredicateTest {","lastModifiedDate":"2022-03-28"},{"lineNumber":15,"author":{"gitId":"cwnm"},"content":"","lastModifiedDate":"2022-03-28"},{"lineNumber":16,"author":{"gitId":"cwnm"},"content":"    @Test","lastModifiedDate":"2022-03-28"},{"lineNumber":17,"author":{"gitId":"cwnm"},"content":"    public void equals() {","lastModifiedDate":"2022-03-28"},{"lineNumber":18,"author":{"gitId":"cwnm"},"content":"        List\u003cString\u003e firstPredicateKeywordList \u003d Collections.singletonList(\"first\");","lastModifiedDate":"2022-03-28"},{"lineNumber":19,"author":{"gitId":"cwnm"},"content":"        List\u003cString\u003e secondPredicateKeywordList \u003d Arrays.asList(\"first\", \"second\");","lastModifiedDate":"2022-03-28"},{"lineNumber":20,"author":{"gitId":"cwnm"},"content":"","lastModifiedDate":"2022-03-28"},{"lineNumber":21,"author":{"gitId":"cwnm"},"content":"        BuyerTagsContainsKeywordsPredicate firstPredicate \u003d new BuyerTagsContainsKeywordsPredicate(","lastModifiedDate":"2022-03-28"},{"lineNumber":22,"author":{"gitId":"cwnm"},"content":"                firstPredicateKeywordList);","lastModifiedDate":"2022-03-28"},{"lineNumber":23,"author":{"gitId":"cwnm"},"content":"        BuyerTagsContainsKeywordsPredicate secondPredicate \u003d new BuyerTagsContainsKeywordsPredicate(","lastModifiedDate":"2022-03-28"},{"lineNumber":24,"author":{"gitId":"cwnm"},"content":"                secondPredicateKeywordList);","lastModifiedDate":"2022-03-28"},{"lineNumber":25,"author":{"gitId":"cwnm"},"content":"","lastModifiedDate":"2022-03-28"},{"lineNumber":26,"author":{"gitId":"cwnm"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2022-03-28"},{"lineNumber":27,"author":{"gitId":"cwnm"},"content":"        assertTrue(firstPredicate.equals(firstPredicate));","lastModifiedDate":"2022-03-28"},{"lineNumber":28,"author":{"gitId":"cwnm"},"content":"","lastModifiedDate":"2022-03-28"},{"lineNumber":29,"author":{"gitId":"cwnm"},"content":"        // same values -\u003e returns true","lastModifiedDate":"2022-03-28"},{"lineNumber":30,"author":{"gitId":"cwnm"},"content":"        BuyerTagsContainsKeywordsPredicate firstPredicateCopy \u003d new BuyerTagsContainsKeywordsPredicate(","lastModifiedDate":"2022-03-28"},{"lineNumber":31,"author":{"gitId":"cwnm"},"content":"                firstPredicateKeywordList);","lastModifiedDate":"2022-03-28"},{"lineNumber":32,"author":{"gitId":"cwnm"},"content":"        assertTrue(firstPredicate.equals(firstPredicateCopy));","lastModifiedDate":"2022-03-28"},{"lineNumber":33,"author":{"gitId":"cwnm"},"content":"","lastModifiedDate":"2022-03-28"},{"lineNumber":34,"author":{"gitId":"cwnm"},"content":"        // different types -\u003e returns false","lastModifiedDate":"2022-03-28"},{"lineNumber":35,"author":{"gitId":"cwnm"},"content":"        assertFalse(firstPredicate.equals(1));","lastModifiedDate":"2022-03-28"},{"lineNumber":36,"author":{"gitId":"cwnm"},"content":"","lastModifiedDate":"2022-03-28"},{"lineNumber":37,"author":{"gitId":"cwnm"},"content":"        // null -\u003e returns false","lastModifiedDate":"2022-03-28"},{"lineNumber":38,"author":{"gitId":"cwnm"},"content":"        assertFalse(firstPredicate.equals(null));","lastModifiedDate":"2022-03-28"},{"lineNumber":39,"author":{"gitId":"cwnm"},"content":"","lastModifiedDate":"2022-03-28"},{"lineNumber":40,"author":{"gitId":"cwnm"},"content":"        // different client -\u003e returns false","lastModifiedDate":"2022-03-28"},{"lineNumber":41,"author":{"gitId":"cwnm"},"content":"        assertFalse(firstPredicate.equals(secondPredicate));","lastModifiedDate":"2022-03-28"},{"lineNumber":42,"author":{"gitId":"cwnm"},"content":"    }","lastModifiedDate":"2022-03-28"},{"lineNumber":43,"author":{"gitId":"cwnm"},"content":"","lastModifiedDate":"2022-03-28"},{"lineNumber":44,"author":{"gitId":"cwnm"},"content":"    @Test","lastModifiedDate":"2022-03-28"},{"lineNumber":45,"author":{"gitId":"cwnm"},"content":"    public void test_tagContainsKeywords_returnsTrue() {","lastModifiedDate":"2022-03-28"},{"lineNumber":46,"author":{"gitId":"cwnm"},"content":"        // One keyword","lastModifiedDate":"2022-03-28"},{"lineNumber":47,"author":{"gitId":"cwnm"},"content":"        BuyerTagsContainsKeywordsPredicate predicate \u003d new BuyerTagsContainsKeywordsPredicate(","lastModifiedDate":"2022-03-28"},{"lineNumber":48,"author":{"gitId":"cwnm"},"content":"                Collections.singletonList(\"Rich\"));","lastModifiedDate":"2022-03-28"},{"lineNumber":49,"author":{"gitId":"cwnm"},"content":"        assertTrue(predicate.test(new BuyerBuilder().withTags(\"Rich\").build()));","lastModifiedDate":"2022-03-28"},{"lineNumber":50,"author":{"gitId":"cwnm"},"content":"","lastModifiedDate":"2022-03-28"},{"lineNumber":51,"author":{"gitId":"cwnm"},"content":"        // Multiple keywords","lastModifiedDate":"2022-03-28"},{"lineNumber":52,"author":{"gitId":"cwnm"},"content":"        predicate \u003d new BuyerTagsContainsKeywordsPredicate(Arrays.asList(\"r\", \"ich\"));","lastModifiedDate":"2022-03-28"},{"lineNumber":53,"author":{"gitId":"cwnm"},"content":"        assertTrue(predicate.test(new BuyerBuilder().withTags(\"Rich\").build()));","lastModifiedDate":"2022-03-28"},{"lineNumber":54,"author":{"gitId":"cwnm"},"content":"","lastModifiedDate":"2022-03-28"},{"lineNumber":55,"author":{"gitId":"cwnm"},"content":"        // Only one matching keyword","lastModifiedDate":"2022-03-28"},{"lineNumber":56,"author":{"gitId":"cwnm"},"content":"        predicate \u003d new BuyerTagsContainsKeywordsPredicate(Arrays.asList(\"rich\", \"poor\"));","lastModifiedDate":"2022-03-28"},{"lineNumber":57,"author":{"gitId":"cwnm"},"content":"        assertTrue(predicate.test(new BuyerBuilder().withTags(\"richardpoor\").build()));","lastModifiedDate":"2022-03-28"},{"lineNumber":58,"author":{"gitId":"cwnm"},"content":"","lastModifiedDate":"2022-03-28"},{"lineNumber":59,"author":{"gitId":"cwnm"},"content":"        // Mixed-case keywords","lastModifiedDate":"2022-03-28"},{"lineNumber":60,"author":{"gitId":"cwnm"},"content":"        predicate \u003d new BuyerTagsContainsKeywordsPredicate(Arrays.asList(\"rIcH\", \"pOoR\"));","lastModifiedDate":"2022-03-28"},{"lineNumber":61,"author":{"gitId":"cwnm"},"content":"        assertTrue(predicate.test(new BuyerBuilder().withTags(\"Richard\").build()));","lastModifiedDate":"2022-03-28"},{"lineNumber":62,"author":{"gitId":"cwnm"},"content":"    }","lastModifiedDate":"2022-03-28"},{"lineNumber":63,"author":{"gitId":"cwnm"},"content":"","lastModifiedDate":"2022-03-28"},{"lineNumber":64,"author":{"gitId":"cwnm"},"content":"    @Test","lastModifiedDate":"2022-03-28"},{"lineNumber":65,"author":{"gitId":"cwnm"},"content":"    public void test_tagsDoesNotContainKeywords_returnsFalse() {","lastModifiedDate":"2022-03-28"},{"lineNumber":66,"author":{"gitId":"cwnm"},"content":"        // Zero keywords","lastModifiedDate":"2022-03-28"},{"lineNumber":67,"author":{"gitId":"cwnm"},"content":"        BuyerTagsContainsKeywordsPredicate predicate \u003d new BuyerTagsContainsKeywordsPredicate(","lastModifiedDate":"2022-03-28"},{"lineNumber":68,"author":{"gitId":"cwnm"},"content":"                Collections.emptyList());","lastModifiedDate":"2022-03-28"},{"lineNumber":69,"author":{"gitId":"cwnm"},"content":"        assertFalse(predicate.test(new BuyerBuilder().withTags(\"Alice\").build()));","lastModifiedDate":"2022-03-28"},{"lineNumber":70,"author":{"gitId":"cwnm"},"content":"","lastModifiedDate":"2022-03-28"},{"lineNumber":71,"author":{"gitId":"cwnm"},"content":"        // Non-matching keyword","lastModifiedDate":"2022-03-28"},{"lineNumber":72,"author":{"gitId":"cwnm"},"content":"        predicate \u003d new BuyerTagsContainsKeywordsPredicate(Arrays.asList(\"Carol\"));","lastModifiedDate":"2022-03-28"},{"lineNumber":73,"author":{"gitId":"cwnm"},"content":"        assertFalse(predicate.test(new BuyerBuilder().withTags(\"AliceBob\").build()));","lastModifiedDate":"2022-03-28"},{"lineNumber":74,"author":{"gitId":"cwnm"},"content":"","lastModifiedDate":"2022-03-28"},{"lineNumber":75,"author":{"gitId":"cwnm"},"content":"        // Keywords match phone, email and address, but does not match Tags","lastModifiedDate":"2022-03-28"},{"lineNumber":76,"author":{"gitId":"cwnm"},"content":"        predicate \u003d new BuyerTagsContainsKeywordsPredicate(","lastModifiedDate":"2022-03-28"},{"lineNumber":77,"author":{"gitId":"cwnm"},"content":"                Arrays.asList(\"12345\", \"alice@email.com\", \"Main\", \"Street\"));","lastModifiedDate":"2022-03-28"},{"lineNumber":78,"author":{"gitId":"cwnm"},"content":"        assertFalse(predicate.test(new BuyerBuilder().withName(\"Alice\").withTags(\"LovesToSleep\")","lastModifiedDate":"2022-03-28"},{"lineNumber":79,"author":{"gitId":"cwnm"},"content":"                .build()));","lastModifiedDate":"2022-03-28"},{"lineNumber":80,"author":{"gitId":"cwnm"},"content":"    }","lastModifiedDate":"2022-03-28"},{"lineNumber":81,"author":{"gitId":"cwnm"},"content":"}","lastModifiedDate":"2022-03-28"}],"authorContributionMap":{"cwnm":81}},{"path":"src/test/java/seedu/address/model/buyer/BuyerTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"WJunHong"},"content":"package seedu.address.model.buyer;","lastModifiedDate":"2022-03-16"},{"lineNumber":2,"author":{"gitId":"WJunHong"},"content":"","lastModifiedDate":"2022-03-16"},{"lineNumber":3,"author":{"gitId":"WJunHong"},"content":"","lastModifiedDate":"2022-03-16"},{"lineNumber":4,"author":{"gitId":"WJunHong"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2022-03-16"},{"lineNumber":5,"author":{"gitId":"WJunHong"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2022-03-16"},{"lineNumber":6,"author":{"gitId":"WJunHong"},"content":"import static org.junit.jupiter.api.Assertions.assertNotEquals;","lastModifiedDate":"2022-03-16"},{"lineNumber":7,"author":{"gitId":"WJunHong"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2022-03-16"},{"lineNumber":8,"author":{"gitId":"chuashihong"},"content":"import static seedu.address.logic.commands.BuyerCommandTestUtil.VALID_NAME_BOB;","lastModifiedDate":"2022-04-07"},{"lineNumber":9,"author":{"gitId":"chuashihong"},"content":"import static seedu.address.logic.commands.BuyerCommandTestUtil.VALID_PHONE_BOB;","lastModifiedDate":"2022-04-07"},{"lineNumber":10,"author":{"gitId":"chuashihong"},"content":"import static seedu.address.logic.commands.BuyerCommandTestUtil.VALID_TAG_HUSBAND;","lastModifiedDate":"2022-04-07"},{"lineNumber":11,"author":{"gitId":"WJunHong"},"content":"import static seedu.address.testutil.Assert.assertThrows;","lastModifiedDate":"2022-03-16"},{"lineNumber":12,"author":{"gitId":"chuashihong"},"content":"import static seedu.address.testutil.TypicalBuyers.ALICE;","lastModifiedDate":"2022-04-07"},{"lineNumber":13,"author":{"gitId":"WJunHong"},"content":"import static seedu.address.testutil.TypicalBuyers.BOB;","lastModifiedDate":"2022-03-16"},{"lineNumber":14,"author":{"gitId":"WJunHong"},"content":"import static seedu.address.testutil.TypicalSellers.BENSON;","lastModifiedDate":"2022-04-07"},{"lineNumber":15,"author":{"gitId":"WJunHong"},"content":"","lastModifiedDate":"2022-03-16"},{"lineNumber":16,"author":{"gitId":"WJunHong"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2022-03-16"},{"lineNumber":17,"author":{"gitId":"WJunHong"},"content":"","lastModifiedDate":"2022-04-07"},{"lineNumber":18,"author":{"gitId":"WJunHong"},"content":"import seedu.address.model.property.House;","lastModifiedDate":"2022-03-16"},{"lineNumber":19,"author":{"gitId":"WJunHong"},"content":"import seedu.address.model.property.HouseType;","lastModifiedDate":"2022-03-16"},{"lineNumber":20,"author":{"gitId":"janald99"},"content":"import seedu.address.model.property.Location;","lastModifiedDate":"2022-03-31"},{"lineNumber":21,"author":{"gitId":"WJunHong"},"content":"import seedu.address.model.property.PriceRange;","lastModifiedDate":"2022-03-16"},{"lineNumber":22,"author":{"gitId":"WJunHong"},"content":"import seedu.address.model.property.PropertyToBuy;","lastModifiedDate":"2022-03-16"},{"lineNumber":23,"author":{"gitId":"WJunHong"},"content":"import seedu.address.model.seller.Seller;","lastModifiedDate":"2022-04-07"},{"lineNumber":24,"author":{"gitId":"WJunHong"},"content":"import seedu.address.testutil.BuyerBuilder;","lastModifiedDate":"2022-03-16"},{"lineNumber":25,"author":{"gitId":"WJunHong"},"content":"import seedu.address.testutil.SellerBuilder;","lastModifiedDate":"2022-04-07"},{"lineNumber":26,"author":{"gitId":"WJunHong"},"content":"","lastModifiedDate":"2022-03-16"},{"lineNumber":27,"author":{"gitId":"WJunHong"},"content":"","lastModifiedDate":"2022-03-16"},{"lineNumber":28,"author":{"gitId":"WJunHong"},"content":"public class BuyerTest {","lastModifiedDate":"2022-03-16"},{"lineNumber":29,"author":{"gitId":"WJunHong"},"content":"    @Test","lastModifiedDate":"2022-03-16"},{"lineNumber":30,"author":{"gitId":"WJunHong"},"content":"    public void asObservableList_modifyList_throwsUnsupportedOperationException() {","lastModifiedDate":"2022-03-16"},{"lineNumber":31,"author":{"gitId":"WJunHong"},"content":"        Buyer buyer \u003d new BuyerBuilder().build();","lastModifiedDate":"2022-03-16"},{"lineNumber":32,"author":{"gitId":"WJunHong"},"content":"        assertThrows(UnsupportedOperationException.class, () -\u003e buyer.getTags().remove(0));","lastModifiedDate":"2022-03-16"},{"lineNumber":33,"author":{"gitId":"WJunHong"},"content":"    }","lastModifiedDate":"2022-03-16"},{"lineNumber":34,"author":{"gitId":"WJunHong"},"content":"","lastModifiedDate":"2022-03-16"},{"lineNumber":35,"author":{"gitId":"WJunHong"},"content":"    @Test","lastModifiedDate":"2022-03-16"},{"lineNumber":36,"author":{"gitId":"WJunHong"},"content":"    public void isSameBuyer() {","lastModifiedDate":"2022-03-16"},{"lineNumber":37,"author":{"gitId":"WJunHong"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2022-03-16"},{"lineNumber":38,"author":{"gitId":"chuashihong"},"content":"        assertTrue(ALICE.isSameclient(ALICE));","lastModifiedDate":"2022-04-07"},{"lineNumber":39,"author":{"gitId":"WJunHong"},"content":"","lastModifiedDate":"2022-03-16"},{"lineNumber":40,"author":{"gitId":"WJunHong"},"content":"        // null -\u003e returns false","lastModifiedDate":"2022-03-16"},{"lineNumber":41,"author":{"gitId":"chuashihong"},"content":"        assertFalse(ALICE.isSameclient(null));","lastModifiedDate":"2022-04-07"},{"lineNumber":42,"author":{"gitId":"WJunHong"},"content":"","lastModifiedDate":"2022-03-16"},{"lineNumber":43,"author":{"gitId":"WJunHong"},"content":"        // same name, all other attributes different -\u003e returns true","lastModifiedDate":"2022-03-16"},{"lineNumber":44,"author":{"gitId":"chuashihong"},"content":"        Buyer editedYuqi \u003d new BuyerBuilder(ALICE).withPhone(VALID_PHONE_BOB)","lastModifiedDate":"2022-04-07"},{"lineNumber":45,"author":{"gitId":"Jacky142857"},"content":"                    .withTags(VALID_TAG_HUSBAND).build();","lastModifiedDate":"2022-03-19"},{"lineNumber":46,"author":{"gitId":"chuashihong"},"content":"        assertTrue(ALICE.isSameclient(editedYuqi));","lastModifiedDate":"2022-04-07"},{"lineNumber":47,"author":{"gitId":"WJunHong"},"content":"","lastModifiedDate":"2022-03-16"},{"lineNumber":48,"author":{"gitId":"WJunHong"},"content":"        // different name, all other attributes same -\u003e returns false","lastModifiedDate":"2022-03-16"},{"lineNumber":49,"author":{"gitId":"chuashihong"},"content":"        editedYuqi \u003d new BuyerBuilder(ALICE).withName(VALID_NAME_BOB).build();","lastModifiedDate":"2022-04-07"},{"lineNumber":50,"author":{"gitId":"chuashihong"},"content":"        assertFalse(ALICE.isSameclient(editedYuqi));","lastModifiedDate":"2022-04-07"},{"lineNumber":51,"author":{"gitId":"WJunHong"},"content":"","lastModifiedDate":"2022-03-16"},{"lineNumber":52,"author":{"gitId":"WJunHong"},"content":"        // name differs in case, all other attributes same -\u003e returns false","lastModifiedDate":"2022-03-16"},{"lineNumber":53,"author":{"gitId":"WJunHong"},"content":"        Buyer editedBob \u003d new BuyerBuilder(BOB).withName(VALID_NAME_BOB.toLowerCase()).build();","lastModifiedDate":"2022-03-16"},{"lineNumber":54,"author":{"gitId":"WJunHong"},"content":"        assertFalse(BOB.isSameclient(editedBob));","lastModifiedDate":"2022-03-16"},{"lineNumber":55,"author":{"gitId":"WJunHong"},"content":"","lastModifiedDate":"2022-03-16"},{"lineNumber":56,"author":{"gitId":"WJunHong"},"content":"        // name has trailing spaces, all other attributes same -\u003e returns false","lastModifiedDate":"2022-03-16"},{"lineNumber":57,"author":{"gitId":"WJunHong"},"content":"        String nameWithTrailingSpaces \u003d VALID_NAME_BOB + \" \";","lastModifiedDate":"2022-03-16"},{"lineNumber":58,"author":{"gitId":"WJunHong"},"content":"        editedBob \u003d new BuyerBuilder(BOB).withName(nameWithTrailingSpaces).build();","lastModifiedDate":"2022-03-16"},{"lineNumber":59,"author":{"gitId":"WJunHong"},"content":"        assertFalse(BOB.isSameclient(editedBob));","lastModifiedDate":"2022-03-16"},{"lineNumber":60,"author":{"gitId":"WJunHong"},"content":"    }","lastModifiedDate":"2022-03-16"},{"lineNumber":61,"author":{"gitId":"WJunHong"},"content":"","lastModifiedDate":"2022-03-16"},{"lineNumber":62,"author":{"gitId":"WJunHong"},"content":"    @Test","lastModifiedDate":"2022-03-16"},{"lineNumber":63,"author":{"gitId":"WJunHong"},"content":"    public void equals() {","lastModifiedDate":"2022-03-16"},{"lineNumber":64,"author":{"gitId":"WJunHong"},"content":"        // same values -\u003e returns true","lastModifiedDate":"2022-03-16"},{"lineNumber":65,"author":{"gitId":"chuashihong"},"content":"        Buyer yuqiCopy \u003d new BuyerBuilder(ALICE).build();","lastModifiedDate":"2022-04-07"},{"lineNumber":66,"author":{"gitId":"WJunHong"},"content":"        Seller yuqiSeller \u003d new SellerBuilder(BENSON).build();","lastModifiedDate":"2022-04-07"},{"lineNumber":67,"author":{"gitId":"WJunHong"},"content":"","lastModifiedDate":"2022-04-07"},{"lineNumber":68,"author":{"gitId":"chuashihong"},"content":"        assertEquals(ALICE, yuqiCopy);","lastModifiedDate":"2022-04-07"},{"lineNumber":69,"author":{"gitId":"WJunHong"},"content":"","lastModifiedDate":"2022-03-16"},{"lineNumber":70,"author":{"gitId":"WJunHong"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2022-03-16"},{"lineNumber":71,"author":{"gitId":"chuashihong"},"content":"        assertEquals(ALICE, ALICE);","lastModifiedDate":"2022-04-07"},{"lineNumber":72,"author":{"gitId":"WJunHong"},"content":"","lastModifiedDate":"2022-03-16"},{"lineNumber":73,"author":{"gitId":"WJunHong"},"content":"        // null -\u003e returns false","lastModifiedDate":"2022-03-16"},{"lineNumber":74,"author":{"gitId":"chuashihong"},"content":"        assertNotEquals(null, ALICE);","lastModifiedDate":"2022-04-07"},{"lineNumber":75,"author":{"gitId":"WJunHong"},"content":"","lastModifiedDate":"2022-03-16"},{"lineNumber":76,"author":{"gitId":"WJunHong"},"content":"        // different type -\u003e returns false","lastModifiedDate":"2022-03-16"},{"lineNumber":77,"author":{"gitId":"chuashihong"},"content":"        assertNotEquals(5, ALICE);","lastModifiedDate":"2022-04-07"},{"lineNumber":78,"author":{"gitId":"WJunHong"},"content":"","lastModifiedDate":"2022-03-16"},{"lineNumber":79,"author":{"gitId":"WJunHong"},"content":"        // different client type -\u003e returns false","lastModifiedDate":"2022-04-07"},{"lineNumber":80,"author":{"gitId":"chuashihong"},"content":"        assertNotEquals(ALICE, yuqiSeller);","lastModifiedDate":"2022-04-07"},{"lineNumber":81,"author":{"gitId":"WJunHong"},"content":"","lastModifiedDate":"2022-04-07"},{"lineNumber":82,"author":{"gitId":"WJunHong"},"content":"        // different client -\u003e returns false","lastModifiedDate":"2022-03-16"},{"lineNumber":83,"author":{"gitId":"chuashihong"},"content":"        assertNotEquals(ALICE, BOB);","lastModifiedDate":"2022-04-07"},{"lineNumber":84,"author":{"gitId":"WJunHong"},"content":"","lastModifiedDate":"2022-03-16"},{"lineNumber":85,"author":{"gitId":"WJunHong"},"content":"        // different name -\u003e returns false","lastModifiedDate":"2022-03-16"},{"lineNumber":86,"author":{"gitId":"chuashihong"},"content":"        Buyer editedYuqi \u003d new BuyerBuilder(ALICE).withName(VALID_NAME_BOB).build();","lastModifiedDate":"2022-04-07"},{"lineNumber":87,"author":{"gitId":"chuashihong"},"content":"        assertNotEquals(ALICE, editedYuqi);","lastModifiedDate":"2022-04-07"},{"lineNumber":88,"author":{"gitId":"WJunHong"},"content":"","lastModifiedDate":"2022-03-16"},{"lineNumber":89,"author":{"gitId":"WJunHong"},"content":"        // different phone -\u003e returns false","lastModifiedDate":"2022-03-16"},{"lineNumber":90,"author":{"gitId":"chuashihong"},"content":"        editedYuqi \u003d new BuyerBuilder(ALICE).withPhone(VALID_PHONE_BOB).build();","lastModifiedDate":"2022-04-07"},{"lineNumber":91,"author":{"gitId":"chuashihong"},"content":"        assertNotEquals(ALICE, editedYuqi);","lastModifiedDate":"2022-04-07"},{"lineNumber":92,"author":{"gitId":"WJunHong"},"content":"","lastModifiedDate":"2022-03-16"},{"lineNumber":93,"author":{"gitId":"WJunHong"},"content":"        // different tags -\u003e returns false","lastModifiedDate":"2022-03-16"},{"lineNumber":94,"author":{"gitId":"chuashihong"},"content":"        editedYuqi \u003d new BuyerBuilder(ALICE).withTags(VALID_TAG_HUSBAND).build();","lastModifiedDate":"2022-04-07"},{"lineNumber":95,"author":{"gitId":"chuashihong"},"content":"        assertNotEquals(ALICE, editedYuqi);","lastModifiedDate":"2022-04-07"},{"lineNumber":96,"author":{"gitId":"WJunHong"},"content":"","lastModifiedDate":"2022-03-16"},{"lineNumber":97,"author":{"gitId":"WJunHong"},"content":"","lastModifiedDate":"2022-03-16"},{"lineNumber":98,"author":{"gitId":"WJunHong"},"content":"        PriceRange pr1;","lastModifiedDate":"2022-03-16"},{"lineNumber":99,"author":{"gitId":"WJunHong"},"content":"        PriceRange pr2;","lastModifiedDate":"2022-03-16"},{"lineNumber":100,"author":{"gitId":"WJunHong"},"content":"        PriceRange pr3;","lastModifiedDate":"2022-03-16"},{"lineNumber":101,"author":{"gitId":"WJunHong"},"content":"","lastModifiedDate":"2022-03-16"},{"lineNumber":102,"author":{"gitId":"janald99"},"content":"        Location location1 \u003d new Location(\"Serangoon\");","lastModifiedDate":"2022-03-31"},{"lineNumber":103,"author":{"gitId":"janald99"},"content":"        Location location2 \u003d new Location(\"Kovan\");","lastModifiedDate":"2022-03-31"},{"lineNumber":104,"author":{"gitId":"janald99"},"content":"        Location location3 \u003d new Location(\"Bishan\");","lastModifiedDate":"2022-03-31"},{"lineNumber":105,"author":{"gitId":"WJunHong"},"content":"","lastModifiedDate":"2022-03-16"},{"lineNumber":106,"author":{"gitId":"WJunHong"},"content":"        HouseType ht1 \u003d HouseType.HDB_FLAT;","lastModifiedDate":"2022-03-16"},{"lineNumber":107,"author":{"gitId":"WJunHong"},"content":"        HouseType ht2 \u003d HouseType.BUNGALOW;","lastModifiedDate":"2022-03-16"},{"lineNumber":108,"author":{"gitId":"WJunHong"},"content":"        HouseType ht3 \u003d HouseType.APARTMENT;","lastModifiedDate":"2022-03-16"},{"lineNumber":109,"author":{"gitId":"WJunHong"},"content":"","lastModifiedDate":"2022-03-16"},{"lineNumber":110,"author":{"gitId":"WJunHong"},"content":"        House h1 \u003d new House(ht1, location1);","lastModifiedDate":"2022-03-16"},{"lineNumber":111,"author":{"gitId":"WJunHong"},"content":"        House h2 \u003d new House(ht2, location2);","lastModifiedDate":"2022-03-16"},{"lineNumber":112,"author":{"gitId":"WJunHong"},"content":"        House h3 \u003d new House(ht3, location3);","lastModifiedDate":"2022-03-16"},{"lineNumber":113,"author":{"gitId":"WJunHong"},"content":"","lastModifiedDate":"2022-03-16"},{"lineNumber":114,"author":{"gitId":"WJunHong"},"content":"        pr1 \u003d new PriceRange(100000, 200000);","lastModifiedDate":"2022-03-16"},{"lineNumber":115,"author":{"gitId":"WJunHong"},"content":"        pr2 \u003d new PriceRange(200000, 300000);","lastModifiedDate":"2022-03-16"},{"lineNumber":116,"author":{"gitId":"WJunHong"},"content":"        pr3 \u003d new PriceRange(300000, 400000);","lastModifiedDate":"2022-03-16"},{"lineNumber":117,"author":{"gitId":"WJunHong"},"content":"","lastModifiedDate":"2022-03-16"},{"lineNumber":118,"author":{"gitId":"WJunHong"},"content":"        PropertyToBuy ptb1 \u003d new PropertyToBuy(h1, pr1);","lastModifiedDate":"2022-03-16"},{"lineNumber":119,"author":{"gitId":"WJunHong"},"content":"        PropertyToBuy ptb2 \u003d new PropertyToBuy(h2, pr2);","lastModifiedDate":"2022-03-16"},{"lineNumber":120,"author":{"gitId":"WJunHong"},"content":"","lastModifiedDate":"2022-03-16"},{"lineNumber":121,"author":{"gitId":"WJunHong"},"content":"        // Same property","lastModifiedDate":"2022-03-23"},{"lineNumber":122,"author":{"gitId":"chuashihong"},"content":"        editedYuqi \u003d new BuyerBuilder(ALICE).withProperty(ptb1).build();","lastModifiedDate":"2022-04-07"},{"lineNumber":123,"author":{"gitId":"chuashihong"},"content":"        Buyer testYuqi \u003d new BuyerBuilder(ALICE).withProperty(ptb1).build();","lastModifiedDate":"2022-04-07"},{"lineNumber":124,"author":{"gitId":"WJunHong"},"content":"        assertEquals(editedYuqi, testYuqi);","lastModifiedDate":"2022-03-16"},{"lineNumber":125,"author":{"gitId":"WJunHong"},"content":"","lastModifiedDate":"2022-03-16"},{"lineNumber":126,"author":{"gitId":"WJunHong"},"content":"        // Different property","lastModifiedDate":"2022-03-23"},{"lineNumber":127,"author":{"gitId":"chuashihong"},"content":"        editedYuqi \u003d new BuyerBuilder(ALICE).withProperty(ptb1).build();","lastModifiedDate":"2022-04-07"},{"lineNumber":128,"author":{"gitId":"chuashihong"},"content":"        testYuqi \u003d new BuyerBuilder(ALICE).withProperty(ptb2).build();","lastModifiedDate":"2022-04-07"},{"lineNumber":129,"author":{"gitId":"WJunHong"},"content":"        assertNotEquals(editedYuqi, testYuqi);","lastModifiedDate":"2022-03-16"},{"lineNumber":130,"author":{"gitId":"WJunHong"},"content":"    }","lastModifiedDate":"2022-03-16"},{"lineNumber":131,"author":{"gitId":"WJunHong"},"content":"}","lastModifiedDate":"2022-03-16"}],"authorContributionMap":{"janald99":4,"WJunHong":99,"Jacky142857":1,"chuashihong":27}},{"path":"src/test/java/seedu/address/model/buyer/UniqueBuyerListTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"WJunHong"},"content":"package seedu.address.model.buyer;","lastModifiedDate":"2022-03-16"},{"lineNumber":2,"author":{"gitId":"WJunHong"},"content":"","lastModifiedDate":"2022-03-16"},{"lineNumber":3,"author":{"gitId":"WJunHong"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2022-04-07"},{"lineNumber":4,"author":{"gitId":"WJunHong"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2022-04-07"},{"lineNumber":5,"author":{"gitId":"WJunHong"},"content":"import static org.junit.jupiter.api.Assertions.assertNotEquals;","lastModifiedDate":"2022-04-07"},{"lineNumber":6,"author":{"gitId":"WJunHong"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2022-04-07"},{"lineNumber":7,"author":{"gitId":"WJunHong"},"content":"import static seedu.address.logic.commands.BuyerCommandTestUtil.VALID_TAG_HUSBAND;","lastModifiedDate":"2022-04-07"},{"lineNumber":8,"author":{"gitId":"WJunHong"},"content":"import static seedu.address.testutil.Assert.assertThrows;","lastModifiedDate":"2022-04-07"},{"lineNumber":9,"author":{"gitId":"WJunHong"},"content":"import static seedu.address.testutil.TypicalBuyers.BOB;","lastModifiedDate":"2022-04-07"},{"lineNumber":10,"author":{"gitId":"WJunHong"},"content":"import static seedu.address.testutil.TypicalBuyers.CHAD;","lastModifiedDate":"2022-04-07"},{"lineNumber":11,"author":{"gitId":"WJunHong"},"content":"","lastModifiedDate":"2022-04-07"},{"lineNumber":12,"author":{"gitId":"WJunHong"},"content":"import java.util.Arrays;","lastModifiedDate":"2022-04-07"},{"lineNumber":13,"author":{"gitId":"WJunHong"},"content":"import java.util.Collections;","lastModifiedDate":"2022-04-07"},{"lineNumber":14,"author":{"gitId":"WJunHong"},"content":"import java.util.List;","lastModifiedDate":"2022-04-07"},{"lineNumber":15,"author":{"gitId":"WJunHong"},"content":"","lastModifiedDate":"2022-04-07"},{"lineNumber":16,"author":{"gitId":"WJunHong"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2022-04-07"},{"lineNumber":17,"author":{"gitId":"WJunHong"},"content":"","lastModifiedDate":"2022-04-07"},{"lineNumber":18,"author":{"gitId":"WJunHong"},"content":"import seedu.address.model.client.exceptions.ClientNotFoundException;","lastModifiedDate":"2022-04-07"},{"lineNumber":19,"author":{"gitId":"WJunHong"},"content":"import seedu.address.model.client.exceptions.DuplicateClientException;","lastModifiedDate":"2022-04-07"},{"lineNumber":20,"author":{"gitId":"WJunHong"},"content":"import seedu.address.testutil.BuyerBuilder;","lastModifiedDate":"2022-04-07"},{"lineNumber":21,"author":{"gitId":"WJunHong"},"content":"","lastModifiedDate":"2022-04-07"},{"lineNumber":22,"author":{"gitId":"WJunHong"},"content":"// TODO: On a later date once buyer list is created","lastModifiedDate":"2022-03-16"},{"lineNumber":23,"author":{"gitId":"WJunHong"},"content":"public class UniqueBuyerListTest {","lastModifiedDate":"2022-03-16"},{"lineNumber":24,"author":{"gitId":"WJunHong"},"content":"","lastModifiedDate":"2022-04-07"},{"lineNumber":25,"author":{"gitId":"WJunHong"},"content":"    private final UniqueBuyerList uniquebuyerList \u003d new UniqueBuyerList();","lastModifiedDate":"2022-04-07"},{"lineNumber":26,"author":{"gitId":"WJunHong"},"content":"","lastModifiedDate":"2022-04-07"},{"lineNumber":27,"author":{"gitId":"WJunHong"},"content":"    @Test","lastModifiedDate":"2022-04-07"},{"lineNumber":28,"author":{"gitId":"WJunHong"},"content":"    public void contains_nullbuyer_throwsNullPointerException() {","lastModifiedDate":"2022-04-07"},{"lineNumber":29,"author":{"gitId":"WJunHong"},"content":"        assertThrows(NullPointerException.class, () -\u003e uniquebuyerList.contains(null));","lastModifiedDate":"2022-04-07"},{"lineNumber":30,"author":{"gitId":"WJunHong"},"content":"    }","lastModifiedDate":"2022-04-07"},{"lineNumber":31,"author":{"gitId":"WJunHong"},"content":"","lastModifiedDate":"2022-04-07"},{"lineNumber":32,"author":{"gitId":"WJunHong"},"content":"    @Test","lastModifiedDate":"2022-04-07"},{"lineNumber":33,"author":{"gitId":"WJunHong"},"content":"    public void contains_buyerNotInList_returnsFalse() {","lastModifiedDate":"2022-04-07"},{"lineNumber":34,"author":{"gitId":"WJunHong"},"content":"        assertFalse(uniquebuyerList.contains(CHAD));","lastModifiedDate":"2022-04-07"},{"lineNumber":35,"author":{"gitId":"WJunHong"},"content":"    }","lastModifiedDate":"2022-04-07"},{"lineNumber":36,"author":{"gitId":"WJunHong"},"content":"","lastModifiedDate":"2022-04-07"},{"lineNumber":37,"author":{"gitId":"WJunHong"},"content":"    @Test","lastModifiedDate":"2022-04-07"},{"lineNumber":38,"author":{"gitId":"WJunHong"},"content":"    public void contains_buyerInList_returnsTrue() {","lastModifiedDate":"2022-04-07"},{"lineNumber":39,"author":{"gitId":"WJunHong"},"content":"        uniquebuyerList.add(CHAD);","lastModifiedDate":"2022-04-07"},{"lineNumber":40,"author":{"gitId":"WJunHong"},"content":"        assertTrue(uniquebuyerList.contains(CHAD));","lastModifiedDate":"2022-04-07"},{"lineNumber":41,"author":{"gitId":"WJunHong"},"content":"    }","lastModifiedDate":"2022-04-07"},{"lineNumber":42,"author":{"gitId":"WJunHong"},"content":"","lastModifiedDate":"2022-04-07"},{"lineNumber":43,"author":{"gitId":"WJunHong"},"content":"    @Test","lastModifiedDate":"2022-04-07"},{"lineNumber":44,"author":{"gitId":"WJunHong"},"content":"    public void contains_buyerWithSameIdentityFieldsInList_returnsTrue() {","lastModifiedDate":"2022-04-07"},{"lineNumber":45,"author":{"gitId":"WJunHong"},"content":"        uniquebuyerList.add(CHAD);","lastModifiedDate":"2022-04-07"},{"lineNumber":46,"author":{"gitId":"WJunHong"},"content":"        Buyer editedChad \u003d new BuyerBuilder(CHAD).withTags(VALID_TAG_HUSBAND)","lastModifiedDate":"2022-04-07"},{"lineNumber":47,"author":{"gitId":"WJunHong"},"content":"                .build();","lastModifiedDate":"2022-04-07"},{"lineNumber":48,"author":{"gitId":"WJunHong"},"content":"        assertTrue(uniquebuyerList.contains(editedChad));","lastModifiedDate":"2022-04-07"},{"lineNumber":49,"author":{"gitId":"WJunHong"},"content":"    }","lastModifiedDate":"2022-04-07"},{"lineNumber":50,"author":{"gitId":"WJunHong"},"content":"","lastModifiedDate":"2022-04-07"},{"lineNumber":51,"author":{"gitId":"WJunHong"},"content":"    @Test","lastModifiedDate":"2022-04-07"},{"lineNumber":52,"author":{"gitId":"WJunHong"},"content":"    public void add_nullbuyer_throwsNullPointerException() {","lastModifiedDate":"2022-04-07"},{"lineNumber":53,"author":{"gitId":"WJunHong"},"content":"        assertThrows(NullPointerException.class, () -\u003e uniquebuyerList.add(null));","lastModifiedDate":"2022-04-07"},{"lineNumber":54,"author":{"gitId":"WJunHong"},"content":"    }","lastModifiedDate":"2022-04-07"},{"lineNumber":55,"author":{"gitId":"WJunHong"},"content":"","lastModifiedDate":"2022-04-07"},{"lineNumber":56,"author":{"gitId":"WJunHong"},"content":"    @Test","lastModifiedDate":"2022-04-07"},{"lineNumber":57,"author":{"gitId":"WJunHong"},"content":"    public void add_duplicatebuyer_throwsDuplicatebuyerException() {","lastModifiedDate":"2022-04-07"},{"lineNumber":58,"author":{"gitId":"WJunHong"},"content":"        uniquebuyerList.add(CHAD);","lastModifiedDate":"2022-04-07"},{"lineNumber":59,"author":{"gitId":"WJunHong"},"content":"        assertThrows(DuplicateClientException.class, () -\u003e uniquebuyerList.add(CHAD));","lastModifiedDate":"2022-04-07"},{"lineNumber":60,"author":{"gitId":"WJunHong"},"content":"    }","lastModifiedDate":"2022-04-07"},{"lineNumber":61,"author":{"gitId":"WJunHong"},"content":"","lastModifiedDate":"2022-04-07"},{"lineNumber":62,"author":{"gitId":"WJunHong"},"content":"    @Test","lastModifiedDate":"2022-04-07"},{"lineNumber":63,"author":{"gitId":"WJunHong"},"content":"    public void setBuyer_nullTargetbuyer_throwsNullPointerException() {","lastModifiedDate":"2022-04-07"},{"lineNumber":64,"author":{"gitId":"WJunHong"},"content":"        assertThrows(NullPointerException.class, () -\u003e uniquebuyerList.setBuyer(null, CHAD));","lastModifiedDate":"2022-04-07"},{"lineNumber":65,"author":{"gitId":"WJunHong"},"content":"    }","lastModifiedDate":"2022-04-07"},{"lineNumber":66,"author":{"gitId":"WJunHong"},"content":"","lastModifiedDate":"2022-04-07"},{"lineNumber":67,"author":{"gitId":"WJunHong"},"content":"    @Test","lastModifiedDate":"2022-04-07"},{"lineNumber":68,"author":{"gitId":"WJunHong"},"content":"    public void setBuyer_nullEditedbuyer_throwsNullPointerException() {","lastModifiedDate":"2022-04-07"},{"lineNumber":69,"author":{"gitId":"WJunHong"},"content":"        assertThrows(NullPointerException.class, () -\u003e uniquebuyerList.setBuyer(CHAD, null));","lastModifiedDate":"2022-04-07"},{"lineNumber":70,"author":{"gitId":"WJunHong"},"content":"    }","lastModifiedDate":"2022-04-07"},{"lineNumber":71,"author":{"gitId":"WJunHong"},"content":"","lastModifiedDate":"2022-04-07"},{"lineNumber":72,"author":{"gitId":"WJunHong"},"content":"    @Test","lastModifiedDate":"2022-04-07"},{"lineNumber":73,"author":{"gitId":"WJunHong"},"content":"    public void setBuyer_targetbuyerNotInList_throwsbuyerNotFoundException() {","lastModifiedDate":"2022-04-07"},{"lineNumber":74,"author":{"gitId":"WJunHong"},"content":"        assertThrows(ClientNotFoundException.class, () -\u003e uniquebuyerList.setBuyer(CHAD, CHAD));","lastModifiedDate":"2022-04-07"},{"lineNumber":75,"author":{"gitId":"WJunHong"},"content":"    }","lastModifiedDate":"2022-04-07"},{"lineNumber":76,"author":{"gitId":"WJunHong"},"content":"","lastModifiedDate":"2022-04-07"},{"lineNumber":77,"author":{"gitId":"WJunHong"},"content":"    @Test","lastModifiedDate":"2022-04-07"},{"lineNumber":78,"author":{"gitId":"WJunHong"},"content":"    public void setBuyer_editedbuyerIsSamebuyer_success() {","lastModifiedDate":"2022-04-07"},{"lineNumber":79,"author":{"gitId":"WJunHong"},"content":"        uniquebuyerList.add(CHAD);","lastModifiedDate":"2022-04-07"},{"lineNumber":80,"author":{"gitId":"WJunHong"},"content":"        uniquebuyerList.setBuyer(CHAD, CHAD);","lastModifiedDate":"2022-04-07"},{"lineNumber":81,"author":{"gitId":"WJunHong"},"content":"        UniqueBuyerList expectedUniquebuyerList \u003d new UniqueBuyerList();","lastModifiedDate":"2022-04-07"},{"lineNumber":82,"author":{"gitId":"WJunHong"},"content":"        expectedUniquebuyerList.add(CHAD);","lastModifiedDate":"2022-04-07"},{"lineNumber":83,"author":{"gitId":"WJunHong"},"content":"        assertEquals(expectedUniquebuyerList, uniquebuyerList);","lastModifiedDate":"2022-04-07"},{"lineNumber":84,"author":{"gitId":"WJunHong"},"content":"    }","lastModifiedDate":"2022-04-07"},{"lineNumber":85,"author":{"gitId":"WJunHong"},"content":"","lastModifiedDate":"2022-04-07"},{"lineNumber":86,"author":{"gitId":"WJunHong"},"content":"    @Test","lastModifiedDate":"2022-04-07"},{"lineNumber":87,"author":{"gitId":"WJunHong"},"content":"    public void setBuyer_editedbuyerHasSameIdentity_success() {","lastModifiedDate":"2022-04-07"},{"lineNumber":88,"author":{"gitId":"WJunHong"},"content":"        uniquebuyerList.add(CHAD);","lastModifiedDate":"2022-04-07"},{"lineNumber":89,"author":{"gitId":"WJunHong"},"content":"        Buyer editedChad \u003d new BuyerBuilder(CHAD).withTags(VALID_TAG_HUSBAND)","lastModifiedDate":"2022-04-07"},{"lineNumber":90,"author":{"gitId":"WJunHong"},"content":"                .build();","lastModifiedDate":"2022-04-07"},{"lineNumber":91,"author":{"gitId":"WJunHong"},"content":"        uniquebuyerList.setBuyer(CHAD, editedChad);","lastModifiedDate":"2022-04-07"},{"lineNumber":92,"author":{"gitId":"WJunHong"},"content":"        UniqueBuyerList expectedUniquebuyerList \u003d new UniqueBuyerList();","lastModifiedDate":"2022-04-07"},{"lineNumber":93,"author":{"gitId":"WJunHong"},"content":"        expectedUniquebuyerList.add(editedChad);","lastModifiedDate":"2022-04-07"},{"lineNumber":94,"author":{"gitId":"WJunHong"},"content":"        assertEquals(expectedUniquebuyerList, uniquebuyerList);","lastModifiedDate":"2022-04-07"},{"lineNumber":95,"author":{"gitId":"WJunHong"},"content":"    }","lastModifiedDate":"2022-04-07"},{"lineNumber":96,"author":{"gitId":"WJunHong"},"content":"","lastModifiedDate":"2022-04-07"},{"lineNumber":97,"author":{"gitId":"WJunHong"},"content":"    @Test","lastModifiedDate":"2022-04-07"},{"lineNumber":98,"author":{"gitId":"WJunHong"},"content":"    public void setBuyer_editedbuyerHasDifferentIdentity_success() {","lastModifiedDate":"2022-04-07"},{"lineNumber":99,"author":{"gitId":"WJunHong"},"content":"        uniquebuyerList.add(CHAD);","lastModifiedDate":"2022-04-07"},{"lineNumber":100,"author":{"gitId":"WJunHong"},"content":"        uniquebuyerList.setBuyer(CHAD, BOB);","lastModifiedDate":"2022-04-07"},{"lineNumber":101,"author":{"gitId":"WJunHong"},"content":"        UniqueBuyerList expectedUniquebuyerList \u003d new UniqueBuyerList();","lastModifiedDate":"2022-04-07"},{"lineNumber":102,"author":{"gitId":"WJunHong"},"content":"        expectedUniquebuyerList.add(BOB);","lastModifiedDate":"2022-04-07"},{"lineNumber":103,"author":{"gitId":"WJunHong"},"content":"        assertEquals(expectedUniquebuyerList, uniquebuyerList);","lastModifiedDate":"2022-04-07"},{"lineNumber":104,"author":{"gitId":"WJunHong"},"content":"    }","lastModifiedDate":"2022-04-07"},{"lineNumber":105,"author":{"gitId":"WJunHong"},"content":"","lastModifiedDate":"2022-04-07"},{"lineNumber":106,"author":{"gitId":"WJunHong"},"content":"    @Test","lastModifiedDate":"2022-04-07"},{"lineNumber":107,"author":{"gitId":"WJunHong"},"content":"    public void setBuyer_editedbuyerHasNonUniqueIdentity_throwsDuplicatebuyerException() {","lastModifiedDate":"2022-04-07"},{"lineNumber":108,"author":{"gitId":"WJunHong"},"content":"        uniquebuyerList.add(CHAD);","lastModifiedDate":"2022-04-07"},{"lineNumber":109,"author":{"gitId":"WJunHong"},"content":"        uniquebuyerList.add(BOB);","lastModifiedDate":"2022-04-07"},{"lineNumber":110,"author":{"gitId":"WJunHong"},"content":"        assertThrows(DuplicateClientException.class, () -\u003e uniquebuyerList.setBuyer(CHAD, BOB));","lastModifiedDate":"2022-04-07"},{"lineNumber":111,"author":{"gitId":"WJunHong"},"content":"    }","lastModifiedDate":"2022-04-07"},{"lineNumber":112,"author":{"gitId":"WJunHong"},"content":"","lastModifiedDate":"2022-04-07"},{"lineNumber":113,"author":{"gitId":"WJunHong"},"content":"    @Test","lastModifiedDate":"2022-04-07"},{"lineNumber":114,"author":{"gitId":"WJunHong"},"content":"    public void remove_nullbuyer_throwsNullPointerException() {","lastModifiedDate":"2022-04-07"},{"lineNumber":115,"author":{"gitId":"WJunHong"},"content":"        assertThrows(NullPointerException.class, () -\u003e uniquebuyerList.remove(null));","lastModifiedDate":"2022-04-07"},{"lineNumber":116,"author":{"gitId":"WJunHong"},"content":"    }","lastModifiedDate":"2022-04-07"},{"lineNumber":117,"author":{"gitId":"WJunHong"},"content":"","lastModifiedDate":"2022-04-07"},{"lineNumber":118,"author":{"gitId":"WJunHong"},"content":"    @Test","lastModifiedDate":"2022-04-07"},{"lineNumber":119,"author":{"gitId":"WJunHong"},"content":"    public void remove_buyerDoesNotExist_throwsbuyerNotFoundException() {","lastModifiedDate":"2022-04-07"},{"lineNumber":120,"author":{"gitId":"WJunHong"},"content":"        assertThrows(ClientNotFoundException.class, () -\u003e uniquebuyerList.remove(CHAD));","lastModifiedDate":"2022-04-07"},{"lineNumber":121,"author":{"gitId":"WJunHong"},"content":"    }","lastModifiedDate":"2022-04-07"},{"lineNumber":122,"author":{"gitId":"WJunHong"},"content":"","lastModifiedDate":"2022-04-07"},{"lineNumber":123,"author":{"gitId":"WJunHong"},"content":"    @Test","lastModifiedDate":"2022-04-07"},{"lineNumber":124,"author":{"gitId":"WJunHong"},"content":"    public void remove_existingbuyer_removesbuyer() {","lastModifiedDate":"2022-04-07"},{"lineNumber":125,"author":{"gitId":"WJunHong"},"content":"        uniquebuyerList.add(CHAD);","lastModifiedDate":"2022-04-07"},{"lineNumber":126,"author":{"gitId":"WJunHong"},"content":"        uniquebuyerList.remove(CHAD);","lastModifiedDate":"2022-04-07"},{"lineNumber":127,"author":{"gitId":"WJunHong"},"content":"        UniqueBuyerList expectedUniquebuyerList \u003d new UniqueBuyerList();","lastModifiedDate":"2022-04-07"},{"lineNumber":128,"author":{"gitId":"WJunHong"},"content":"        assertEquals(expectedUniquebuyerList, uniquebuyerList);","lastModifiedDate":"2022-04-07"},{"lineNumber":129,"author":{"gitId":"WJunHong"},"content":"    }","lastModifiedDate":"2022-04-07"},{"lineNumber":130,"author":{"gitId":"WJunHong"},"content":"","lastModifiedDate":"2022-04-07"},{"lineNumber":131,"author":{"gitId":"WJunHong"},"content":"    @Test","lastModifiedDate":"2022-04-07"},{"lineNumber":132,"author":{"gitId":"WJunHong"},"content":"    public void setBuyers_nullUniquebuyerList_throwsNullPointerException() {","lastModifiedDate":"2022-04-07"},{"lineNumber":133,"author":{"gitId":"WJunHong"},"content":"        assertThrows(NullPointerException.class, () -\u003e uniquebuyerList.setBuyers((UniqueBuyerList) null));","lastModifiedDate":"2022-04-07"},{"lineNumber":134,"author":{"gitId":"WJunHong"},"content":"    }","lastModifiedDate":"2022-04-07"},{"lineNumber":135,"author":{"gitId":"WJunHong"},"content":"","lastModifiedDate":"2022-04-07"},{"lineNumber":136,"author":{"gitId":"WJunHong"},"content":"    @Test","lastModifiedDate":"2022-04-07"},{"lineNumber":137,"author":{"gitId":"WJunHong"},"content":"    public void setBuyers_uniquebuyerList_replacesOwnListWithProvidedUniquebuyerList() {","lastModifiedDate":"2022-04-07"},{"lineNumber":138,"author":{"gitId":"WJunHong"},"content":"        uniquebuyerList.add(CHAD);","lastModifiedDate":"2022-04-07"},{"lineNumber":139,"author":{"gitId":"WJunHong"},"content":"        UniqueBuyerList expectedUniquebuyerList \u003d new UniqueBuyerList();","lastModifiedDate":"2022-04-07"},{"lineNumber":140,"author":{"gitId":"WJunHong"},"content":"        expectedUniquebuyerList.add(BOB);","lastModifiedDate":"2022-04-07"},{"lineNumber":141,"author":{"gitId":"WJunHong"},"content":"        uniquebuyerList.setBuyers(expectedUniquebuyerList);","lastModifiedDate":"2022-04-07"},{"lineNumber":142,"author":{"gitId":"WJunHong"},"content":"        assertEquals(expectedUniquebuyerList, uniquebuyerList);","lastModifiedDate":"2022-04-07"},{"lineNumber":143,"author":{"gitId":"WJunHong"},"content":"    }","lastModifiedDate":"2022-04-07"},{"lineNumber":144,"author":{"gitId":"WJunHong"},"content":"","lastModifiedDate":"2022-04-07"},{"lineNumber":145,"author":{"gitId":"WJunHong"},"content":"    @Test","lastModifiedDate":"2022-04-07"},{"lineNumber":146,"author":{"gitId":"WJunHong"},"content":"    public void setBuyers_nullList_throwsNullPointerException() {","lastModifiedDate":"2022-04-07"},{"lineNumber":147,"author":{"gitId":"WJunHong"},"content":"        assertThrows(NullPointerException.class, () -\u003e uniquebuyerList.setBuyers((List\u003cBuyer\u003e) null));","lastModifiedDate":"2022-04-07"},{"lineNumber":148,"author":{"gitId":"WJunHong"},"content":"    }","lastModifiedDate":"2022-04-07"},{"lineNumber":149,"author":{"gitId":"WJunHong"},"content":"","lastModifiedDate":"2022-04-07"},{"lineNumber":150,"author":{"gitId":"WJunHong"},"content":"    @Test","lastModifiedDate":"2022-04-07"},{"lineNumber":151,"author":{"gitId":"WJunHong"},"content":"    public void setBuyers_list_replacesOwnListWithProvidedList() {","lastModifiedDate":"2022-04-07"},{"lineNumber":152,"author":{"gitId":"WJunHong"},"content":"        uniquebuyerList.add(CHAD);","lastModifiedDate":"2022-04-07"},{"lineNumber":153,"author":{"gitId":"WJunHong"},"content":"        List\u003cBuyer\u003e buyerList \u003d Collections.singletonList(BOB);","lastModifiedDate":"2022-04-07"},{"lineNumber":154,"author":{"gitId":"WJunHong"},"content":"        uniquebuyerList.setBuyers(buyerList);","lastModifiedDate":"2022-04-07"},{"lineNumber":155,"author":{"gitId":"WJunHong"},"content":"        UniqueBuyerList expectedUniquebuyerList \u003d new UniqueBuyerList();","lastModifiedDate":"2022-04-07"},{"lineNumber":156,"author":{"gitId":"WJunHong"},"content":"        expectedUniquebuyerList.add(BOB);","lastModifiedDate":"2022-04-07"},{"lineNumber":157,"author":{"gitId":"WJunHong"},"content":"        assertEquals(expectedUniquebuyerList, uniquebuyerList);","lastModifiedDate":"2022-04-07"},{"lineNumber":158,"author":{"gitId":"WJunHong"},"content":"    }","lastModifiedDate":"2022-04-07"},{"lineNumber":159,"author":{"gitId":"WJunHong"},"content":"","lastModifiedDate":"2022-04-07"},{"lineNumber":160,"author":{"gitId":"WJunHong"},"content":"    @Test","lastModifiedDate":"2022-04-07"},{"lineNumber":161,"author":{"gitId":"WJunHong"},"content":"    public void setBuyers_listWithDuplicatebuyers_throwsDuplicatebuyerException() {","lastModifiedDate":"2022-04-07"},{"lineNumber":162,"author":{"gitId":"WJunHong"},"content":"        List\u003cBuyer\u003e listWithDuplicateClients \u003d Arrays.asList(CHAD, CHAD);","lastModifiedDate":"2022-04-07"},{"lineNumber":163,"author":{"gitId":"WJunHong"},"content":"        assertThrows(DuplicateClientException.class, () -\u003e uniquebuyerList.setBuyers(listWithDuplicateClients));","lastModifiedDate":"2022-04-07"},{"lineNumber":164,"author":{"gitId":"WJunHong"},"content":"    }","lastModifiedDate":"2022-04-07"},{"lineNumber":165,"author":{"gitId":"WJunHong"},"content":"","lastModifiedDate":"2022-04-07"},{"lineNumber":166,"author":{"gitId":"WJunHong"},"content":"    @Test","lastModifiedDate":"2022-04-07"},{"lineNumber":167,"author":{"gitId":"WJunHong"},"content":"    public void asUnmodifiableObservableList_modifyList_throwsUnsupportedOperationException() {","lastModifiedDate":"2022-04-07"},{"lineNumber":168,"author":{"gitId":"WJunHong"},"content":"        assertThrows(UnsupportedOperationException.class, ()","lastModifiedDate":"2022-04-07"},{"lineNumber":169,"author":{"gitId":"WJunHong"},"content":"            -\u003e uniquebuyerList.asUnmodifiableObservableList().remove(0));","lastModifiedDate":"2022-04-07"},{"lineNumber":170,"author":{"gitId":"WJunHong"},"content":"    }","lastModifiedDate":"2022-04-07"},{"lineNumber":171,"author":{"gitId":"WJunHong"},"content":"","lastModifiedDate":"2022-04-07"},{"lineNumber":172,"author":{"gitId":"WJunHong"},"content":"    @Test","lastModifiedDate":"2022-04-07"},{"lineNumber":173,"author":{"gitId":"WJunHong"},"content":"    public void sort_sortedBuyerList_sameSortOrder() {","lastModifiedDate":"2022-04-07"},{"lineNumber":174,"author":{"gitId":"WJunHong"},"content":"        uniquebuyerList.add(CHAD);","lastModifiedDate":"2022-04-07"},{"lineNumber":175,"author":{"gitId":"WJunHong"},"content":"        uniquebuyerList.add(BOB);","lastModifiedDate":"2022-04-07"},{"lineNumber":176,"author":{"gitId":"WJunHong"},"content":"        uniquebuyerList.sortBuyers(\"name\", \"asc\");","lastModifiedDate":"2022-04-07"},{"lineNumber":177,"author":{"gitId":"WJunHong"},"content":"        UniqueBuyerList otherUniqueBuyerList \u003d new UniqueBuyerList();","lastModifiedDate":"2022-04-07"},{"lineNumber":178,"author":{"gitId":"WJunHong"},"content":"        otherUniqueBuyerList.add(BOB);","lastModifiedDate":"2022-04-07"},{"lineNumber":179,"author":{"gitId":"WJunHong"},"content":"        otherUniqueBuyerList.add(CHAD);","lastModifiedDate":"2022-04-07"},{"lineNumber":180,"author":{"gitId":"WJunHong"},"content":"        assertEquals(otherUniqueBuyerList, uniquebuyerList);","lastModifiedDate":"2022-04-07"},{"lineNumber":181,"author":{"gitId":"WJunHong"},"content":"    }","lastModifiedDate":"2022-04-07"},{"lineNumber":182,"author":{"gitId":"WJunHong"},"content":"","lastModifiedDate":"2022-04-07"},{"lineNumber":183,"author":{"gitId":"WJunHong"},"content":"    @Test","lastModifiedDate":"2022-04-07"},{"lineNumber":184,"author":{"gitId":"WJunHong"},"content":"    public void sort_sortedBuyerList_diffSortOrder() {","lastModifiedDate":"2022-04-07"},{"lineNumber":185,"author":{"gitId":"WJunHong"},"content":"        uniquebuyerList.add(CHAD);","lastModifiedDate":"2022-04-07"},{"lineNumber":186,"author":{"gitId":"WJunHong"},"content":"        uniquebuyerList.add(BOB);","lastModifiedDate":"2022-04-07"},{"lineNumber":187,"author":{"gitId":"WJunHong"},"content":"        uniquebuyerList.sortBuyers(\"name\", \"desc\");","lastModifiedDate":"2022-04-07"},{"lineNumber":188,"author":{"gitId":"WJunHong"},"content":"        UniqueBuyerList otherUniqueBuyerList \u003d new UniqueBuyerList();","lastModifiedDate":"2022-04-07"},{"lineNumber":189,"author":{"gitId":"WJunHong"},"content":"        otherUniqueBuyerList.add(BOB);","lastModifiedDate":"2022-04-07"},{"lineNumber":190,"author":{"gitId":"WJunHong"},"content":"        otherUniqueBuyerList.add(CHAD);","lastModifiedDate":"2022-04-07"},{"lineNumber":191,"author":{"gitId":"WJunHong"},"content":"        assertNotEquals(otherUniqueBuyerList, uniquebuyerList);","lastModifiedDate":"2022-04-07"},{"lineNumber":192,"author":{"gitId":"WJunHong"},"content":"    }","lastModifiedDate":"2022-04-07"},{"lineNumber":193,"author":{"gitId":"WJunHong"},"content":"","lastModifiedDate":"2022-04-07"},{"lineNumber":194,"author":{"gitId":"WJunHong"},"content":"    @Test","lastModifiedDate":"2022-04-07"},{"lineNumber":195,"author":{"gitId":"WJunHong"},"content":"    public void sort_sortedBuyerList_sameSortOrderReverse() {","lastModifiedDate":"2022-04-07"},{"lineNumber":196,"author":{"gitId":"WJunHong"},"content":"        uniquebuyerList.add(CHAD);","lastModifiedDate":"2022-04-07"},{"lineNumber":197,"author":{"gitId":"WJunHong"},"content":"        uniquebuyerList.add(BOB);","lastModifiedDate":"2022-04-07"},{"lineNumber":198,"author":{"gitId":"WJunHong"},"content":"        uniquebuyerList.sortBuyers(\"time\", \"asc\");","lastModifiedDate":"2022-04-07"},{"lineNumber":199,"author":{"gitId":"WJunHong"},"content":"        UniqueBuyerList otherUniqueBuyerList \u003d new UniqueBuyerList();","lastModifiedDate":"2022-04-07"},{"lineNumber":200,"author":{"gitId":"WJunHong"},"content":"        otherUniqueBuyerList.add(BOB);","lastModifiedDate":"2022-04-07"},{"lineNumber":201,"author":{"gitId":"WJunHong"},"content":"        otherUniqueBuyerList.add(CHAD);","lastModifiedDate":"2022-04-07"},{"lineNumber":202,"author":{"gitId":"WJunHong"},"content":"        assertEquals(otherUniqueBuyerList, uniquebuyerList);","lastModifiedDate":"2022-04-07"},{"lineNumber":203,"author":{"gitId":"WJunHong"},"content":"    }","lastModifiedDate":"2022-04-07"},{"lineNumber":204,"author":{"gitId":"WJunHong"},"content":"","lastModifiedDate":"2022-04-07"},{"lineNumber":205,"author":{"gitId":"WJunHong"},"content":"    @Test","lastModifiedDate":"2022-04-07"},{"lineNumber":206,"author":{"gitId":"WJunHong"},"content":"    public void sort_sortedBuyerList_diffSortOrderReverse() {","lastModifiedDate":"2022-04-07"},{"lineNumber":207,"author":{"gitId":"WJunHong"},"content":"        uniquebuyerList.add(CHAD);","lastModifiedDate":"2022-04-07"},{"lineNumber":208,"author":{"gitId":"WJunHong"},"content":"        uniquebuyerList.add(BOB);","lastModifiedDate":"2022-04-07"},{"lineNumber":209,"author":{"gitId":"WJunHong"},"content":"        uniquebuyerList.sortBuyers(\"time\", \"desc\");","lastModifiedDate":"2022-04-07"},{"lineNumber":210,"author":{"gitId":"WJunHong"},"content":"        UniqueBuyerList otherUniqueBuyerList \u003d new UniqueBuyerList();","lastModifiedDate":"2022-04-07"},{"lineNumber":211,"author":{"gitId":"WJunHong"},"content":"        otherUniqueBuyerList.add(BOB);","lastModifiedDate":"2022-04-07"},{"lineNumber":212,"author":{"gitId":"WJunHong"},"content":"        otherUniqueBuyerList.add(CHAD);","lastModifiedDate":"2022-04-07"},{"lineNumber":213,"author":{"gitId":"WJunHong"},"content":"        assertNotEquals(otherUniqueBuyerList, uniquebuyerList);","lastModifiedDate":"2022-04-07"},{"lineNumber":214,"author":{"gitId":"WJunHong"},"content":"    }","lastModifiedDate":"2022-04-07"},{"lineNumber":215,"author":{"gitId":"WJunHong"},"content":"}","lastModifiedDate":"2022-03-16"}],"authorContributionMap":{"WJunHong":215}},{"path":"src/test/java/seedu/address/model/client/ClientTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"chuashihong"},"content":"//package seedu.address.model.client;","lastModifiedDate":"2022-04-07"},{"lineNumber":2,"author":{"gitId":"chuashihong"},"content":"//","lastModifiedDate":"2022-04-07"},{"lineNumber":3,"author":{"gitId":"chuashihong"},"content":"//import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2022-04-07"},{"lineNumber":4,"author":{"gitId":"chuashihong"},"content":"//import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2022-04-07"},{"lineNumber":5,"author":{"gitId":"chuashihong"},"content":"//import static seedu.address.logic.commands.CommandTestUtil.VALID_NAME_BOB;","lastModifiedDate":"2022-04-07"},{"lineNumber":6,"author":{"gitId":"chuashihong"},"content":"//import static seedu.address.logic.commands.CommandTestUtil.VALID_PHONE_BOB;","lastModifiedDate":"2022-04-07"},{"lineNumber":7,"author":{"gitId":"chuashihong"},"content":"//import static seedu.address.logic.commands.CommandTestUtil.VALID_TAG_HUSBAND;","lastModifiedDate":"2022-04-07"},{"lineNumber":8,"author":{"gitId":"chuashihong"},"content":"//import static seedu.address.testutil.Assert.assertThrows;","lastModifiedDate":"2022-04-07"},{"lineNumber":9,"author":{"gitId":"chuashihong"},"content":"//import static seedu.address.testutil.TypicalClients.ALICE;","lastModifiedDate":"2022-04-07"},{"lineNumber":10,"author":{"gitId":"chuashihong"},"content":"//import static seedu.address.testutil.TypicalClients.BOB;","lastModifiedDate":"2022-04-07"},{"lineNumber":11,"author":{"gitId":"chuashihong"},"content":"//","lastModifiedDate":"2022-04-07"},{"lineNumber":12,"author":{"gitId":"chuashihong"},"content":"//import org.junit.jupiter.api.Test;","lastModifiedDate":"2022-04-07"},{"lineNumber":13,"author":{"gitId":"chuashihong"},"content":"//","lastModifiedDate":"2022-04-07"},{"lineNumber":14,"author":{"gitId":"chuashihong"},"content":"//import seedu.address.testutil.ClientBuilder;","lastModifiedDate":"2022-04-07"},{"lineNumber":15,"author":{"gitId":"chuashihong"},"content":"//","lastModifiedDate":"2022-04-07"},{"lineNumber":16,"author":{"gitId":"chuashihong"},"content":"//public class ClientTest {","lastModifiedDate":"2022-04-07"},{"lineNumber":17,"author":{"gitId":"chuashihong"},"content":"//","lastModifiedDate":"2022-04-07"},{"lineNumber":18,"author":{"gitId":"chuashihong"},"content":"//    @Test","lastModifiedDate":"2022-04-07"},{"lineNumber":19,"author":{"gitId":"chuashihong"},"content":"//    public void asObservableList_modifyList_throwsUnsupportedOperationException() {","lastModifiedDate":"2022-04-07"},{"lineNumber":20,"author":{"gitId":"chuashihong"},"content":"//        Client client \u003d new ClientBuilder().build();","lastModifiedDate":"2022-04-07"},{"lineNumber":21,"author":{"gitId":"chuashihong"},"content":"//        assertThrows(UnsupportedOperationException.class, () -\u003e client.getTags().remove(0));","lastModifiedDate":"2022-04-07"},{"lineNumber":22,"author":{"gitId":"chuashihong"},"content":"//    }","lastModifiedDate":"2022-04-07"},{"lineNumber":23,"author":{"gitId":"chuashihong"},"content":"//","lastModifiedDate":"2022-04-07"},{"lineNumber":24,"author":{"gitId":"chuashihong"},"content":"//    @Test","lastModifiedDate":"2022-04-07"},{"lineNumber":25,"author":{"gitId":"chuashihong"},"content":"//    public void isSameclient() {","lastModifiedDate":"2022-04-07"},{"lineNumber":26,"author":{"gitId":"chuashihong"},"content":"//        // same object -\u003e returns true","lastModifiedDate":"2022-04-07"},{"lineNumber":27,"author":{"gitId":"chuashihong"},"content":"//        assertTrue(ALICE.isSameclient(ALICE));","lastModifiedDate":"2022-04-07"},{"lineNumber":28,"author":{"gitId":"chuashihong"},"content":"//","lastModifiedDate":"2022-04-07"},{"lineNumber":29,"author":{"gitId":"chuashihong"},"content":"//        // null -\u003e returns false","lastModifiedDate":"2022-04-07"},{"lineNumber":30,"author":{"gitId":"chuashihong"},"content":"//        assertFalse(ALICE.isSameclient(null));","lastModifiedDate":"2022-04-07"},{"lineNumber":31,"author":{"gitId":"chuashihong"},"content":"//","lastModifiedDate":"2022-04-07"},{"lineNumber":32,"author":{"gitId":"chuashihong"},"content":"//        // same name, all other attributes different -\u003e returns true","lastModifiedDate":"2022-04-07"},{"lineNumber":33,"author":{"gitId":"chuashihong"},"content":"//        Client editedAlice \u003d new ClientBuilder(ALICE).withPhone(VALID_PHONE_BOB)","lastModifiedDate":"2022-04-07"},{"lineNumber":34,"author":{"gitId":"chuashihong"},"content":"//                .withTags(VALID_TAG_HUSBAND).build();","lastModifiedDate":"2022-04-07"},{"lineNumber":35,"author":{"gitId":"chuashihong"},"content":"//        assertTrue(ALICE.isSameclient(editedAlice));","lastModifiedDate":"2022-04-07"},{"lineNumber":36,"author":{"gitId":"chuashihong"},"content":"//","lastModifiedDate":"2022-04-07"},{"lineNumber":37,"author":{"gitId":"chuashihong"},"content":"//        // different name, all other attributes same -\u003e returns false","lastModifiedDate":"2022-04-07"},{"lineNumber":38,"author":{"gitId":"chuashihong"},"content":"//        editedAlice \u003d new ClientBuilder(ALICE).withName(VALID_NAME_BOB).build();","lastModifiedDate":"2022-04-07"},{"lineNumber":39,"author":{"gitId":"chuashihong"},"content":"//        assertFalse(ALICE.isSameclient(editedAlice));","lastModifiedDate":"2022-04-07"},{"lineNumber":40,"author":{"gitId":"chuashihong"},"content":"//","lastModifiedDate":"2022-04-07"},{"lineNumber":41,"author":{"gitId":"chuashihong"},"content":"//        // name differs in case, all other attributes same -\u003e returns false","lastModifiedDate":"2022-04-07"},{"lineNumber":42,"author":{"gitId":"chuashihong"},"content":"//        Client editedBob \u003d new ClientBuilder(BOB).withName(VALID_NAME_BOB.toLowerCase()).build();","lastModifiedDate":"2022-04-07"},{"lineNumber":43,"author":{"gitId":"chuashihong"},"content":"//        assertFalse(BOB.isSameclient(editedBob));","lastModifiedDate":"2022-04-07"},{"lineNumber":44,"author":{"gitId":"chuashihong"},"content":"//","lastModifiedDate":"2022-04-07"},{"lineNumber":45,"author":{"gitId":"chuashihong"},"content":"//        // name has trailing spaces, all other attributes same -\u003e returns false","lastModifiedDate":"2022-04-07"},{"lineNumber":46,"author":{"gitId":"chuashihong"},"content":"//        String nameWithTrailingSpaces \u003d VALID_NAME_BOB + \" \";","lastModifiedDate":"2022-04-07"},{"lineNumber":47,"author":{"gitId":"chuashihong"},"content":"//        editedBob \u003d new ClientBuilder(BOB).withName(nameWithTrailingSpaces).build();","lastModifiedDate":"2022-04-07"},{"lineNumber":48,"author":{"gitId":"chuashihong"},"content":"//        assertFalse(BOB.isSameclient(editedBob));","lastModifiedDate":"2022-04-07"},{"lineNumber":49,"author":{"gitId":"chuashihong"},"content":"//    }","lastModifiedDate":"2022-04-07"},{"lineNumber":50,"author":{"gitId":"chuashihong"},"content":"//","lastModifiedDate":"2022-04-07"},{"lineNumber":51,"author":{"gitId":"chuashihong"},"content":"//    @Test","lastModifiedDate":"2022-04-07"},{"lineNumber":52,"author":{"gitId":"chuashihong"},"content":"//    public void equals() {","lastModifiedDate":"2022-04-07"},{"lineNumber":53,"author":{"gitId":"chuashihong"},"content":"//        // same values -\u003e returns true","lastModifiedDate":"2022-04-07"},{"lineNumber":54,"author":{"gitId":"chuashihong"},"content":"//        Client aliceCopy \u003d new ClientBuilder(ALICE).build();","lastModifiedDate":"2022-04-07"},{"lineNumber":55,"author":{"gitId":"chuashihong"},"content":"//        assertTrue(ALICE.equals(aliceCopy));","lastModifiedDate":"2022-04-07"},{"lineNumber":56,"author":{"gitId":"chuashihong"},"content":"//","lastModifiedDate":"2022-04-07"},{"lineNumber":57,"author":{"gitId":"chuashihong"},"content":"//        // same object -\u003e returns true","lastModifiedDate":"2022-04-07"},{"lineNumber":58,"author":{"gitId":"chuashihong"},"content":"//        assertTrue(ALICE.equals(ALICE));","lastModifiedDate":"2022-04-07"},{"lineNumber":59,"author":{"gitId":"chuashihong"},"content":"//","lastModifiedDate":"2022-04-07"},{"lineNumber":60,"author":{"gitId":"chuashihong"},"content":"//        // null -\u003e returns false","lastModifiedDate":"2022-04-07"},{"lineNumber":61,"author":{"gitId":"chuashihong"},"content":"//        assertFalse(ALICE.equals(null));","lastModifiedDate":"2022-04-07"},{"lineNumber":62,"author":{"gitId":"chuashihong"},"content":"//","lastModifiedDate":"2022-04-07"},{"lineNumber":63,"author":{"gitId":"chuashihong"},"content":"//        // different type -\u003e returns false","lastModifiedDate":"2022-04-07"},{"lineNumber":64,"author":{"gitId":"chuashihong"},"content":"//        assertFalse(ALICE.equals(5));","lastModifiedDate":"2022-04-07"},{"lineNumber":65,"author":{"gitId":"chuashihong"},"content":"//","lastModifiedDate":"2022-04-07"},{"lineNumber":66,"author":{"gitId":"chuashihong"},"content":"//        // different client -\u003e returns false","lastModifiedDate":"2022-04-07"},{"lineNumber":67,"author":{"gitId":"chuashihong"},"content":"//        assertFalse(ALICE.equals(BOB));","lastModifiedDate":"2022-04-07"},{"lineNumber":68,"author":{"gitId":"chuashihong"},"content":"//","lastModifiedDate":"2022-04-07"},{"lineNumber":69,"author":{"gitId":"chuashihong"},"content":"//        // different name -\u003e returns false","lastModifiedDate":"2022-04-07"},{"lineNumber":70,"author":{"gitId":"chuashihong"},"content":"//        Client editedAlice \u003d new ClientBuilder(ALICE).withName(VALID_NAME_BOB).build();","lastModifiedDate":"2022-04-07"},{"lineNumber":71,"author":{"gitId":"chuashihong"},"content":"//        assertFalse(ALICE.equals(editedAlice));","lastModifiedDate":"2022-04-07"},{"lineNumber":72,"author":{"gitId":"chuashihong"},"content":"//","lastModifiedDate":"2022-04-07"},{"lineNumber":73,"author":{"gitId":"chuashihong"},"content":"//        // different phone -\u003e returns false","lastModifiedDate":"2022-04-07"},{"lineNumber":74,"author":{"gitId":"chuashihong"},"content":"//        editedAlice \u003d new ClientBuilder(ALICE).withPhone(VALID_PHONE_BOB).build();","lastModifiedDate":"2022-04-07"},{"lineNumber":75,"author":{"gitId":"chuashihong"},"content":"//        assertFalse(ALICE.equals(editedAlice));","lastModifiedDate":"2022-04-07"},{"lineNumber":76,"author":{"gitId":"chuashihong"},"content":"//","lastModifiedDate":"2022-04-07"},{"lineNumber":77,"author":{"gitId":"chuashihong"},"content":"//        // different tags -\u003e returns false","lastModifiedDate":"2022-04-07"},{"lineNumber":78,"author":{"gitId":"chuashihong"},"content":"//        editedAlice \u003d new ClientBuilder(ALICE).withTags(VALID_TAG_HUSBAND).build();","lastModifiedDate":"2022-04-07"},{"lineNumber":79,"author":{"gitId":"chuashihong"},"content":"//        assertFalse(ALICE.equals(editedAlice));","lastModifiedDate":"2022-04-07"},{"lineNumber":80,"author":{"gitId":"chuashihong"},"content":"//    }","lastModifiedDate":"2022-04-07"},{"lineNumber":81,"author":{"gitId":"chuashihong"},"content":"//}","lastModifiedDate":"2022-04-07"}],"authorContributionMap":{"chuashihong":81}},{"path":"src/test/java/seedu/address/model/client/NameContainsKeywordsPredicateTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"cwnm"},"content":"package seedu.address.model.client;","lastModifiedDate":"2022-03-04"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.util.Arrays;","lastModifiedDate":"2017-06-12"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import java.util.Collections;","lastModifiedDate":"2017-06-12"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import java.util.List;","lastModifiedDate":"2017-06-12"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":12,"author":{"gitId":"cwnm"},"content":"import seedu.address.testutil.ClientBuilder;","lastModifiedDate":"2022-03-04"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":14,"author":{"gitId":"-"},"content":"public class NameContainsKeywordsPredicateTest {","lastModifiedDate":"2017-06-12"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-12"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    public void equals() {","lastModifiedDate":"2017-06-12"},{"lineNumber":18,"author":{"gitId":"-"},"content":"        List\u003cString\u003e firstPredicateKeywordList \u003d Collections.singletonList(\"first\");","lastModifiedDate":"2017-06-12"},{"lineNumber":19,"author":{"gitId":"-"},"content":"        List\u003cString\u003e secondPredicateKeywordList \u003d Arrays.asList(\"first\", \"second\");","lastModifiedDate":"2017-06-12"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":21,"author":{"gitId":"-"},"content":"        NameContainsKeywordsPredicate firstPredicate \u003d new NameContainsKeywordsPredicate(firstPredicateKeywordList);","lastModifiedDate":"2017-06-12"},{"lineNumber":22,"author":{"gitId":"-"},"content":"        NameContainsKeywordsPredicate secondPredicate \u003d new NameContainsKeywordsPredicate(secondPredicateKeywordList);","lastModifiedDate":"2017-06-12"},{"lineNumber":23,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":24,"author":{"gitId":"-"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2017-06-12"},{"lineNumber":25,"author":{"gitId":"-"},"content":"        assertTrue(firstPredicate.equals(firstPredicate));","lastModifiedDate":"2017-06-12"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":27,"author":{"gitId":"-"},"content":"        // same values -\u003e returns true","lastModifiedDate":"2017-06-12"},{"lineNumber":28,"author":{"gitId":"-"},"content":"        NameContainsKeywordsPredicate firstPredicateCopy \u003d new NameContainsKeywordsPredicate(firstPredicateKeywordList);","lastModifiedDate":"2017-06-12"},{"lineNumber":29,"author":{"gitId":"-"},"content":"        assertTrue(firstPredicate.equals(firstPredicateCopy));","lastModifiedDate":"2017-06-12"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":31,"author":{"gitId":"-"},"content":"        // different types -\u003e returns false","lastModifiedDate":"2017-06-12"},{"lineNumber":32,"author":{"gitId":"-"},"content":"        assertFalse(firstPredicate.equals(1));","lastModifiedDate":"2017-06-12"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":34,"author":{"gitId":"-"},"content":"        // null -\u003e returns false","lastModifiedDate":"2017-06-12"},{"lineNumber":35,"author":{"gitId":"-"},"content":"        assertFalse(firstPredicate.equals(null));","lastModifiedDate":"2017-06-12"},{"lineNumber":36,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":37,"author":{"gitId":"cwnm"},"content":"        // different client -\u003e returns false","lastModifiedDate":"2022-03-04"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        assertFalse(firstPredicate.equals(secondPredicate));","lastModifiedDate":"2017-06-12"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-12"},{"lineNumber":40,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-12"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    public void test_nameContainsKeywords_returnsTrue() {","lastModifiedDate":"2017-08-15"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        // One keyword","lastModifiedDate":"2017-06-12"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        NameContainsKeywordsPredicate predicate \u003d new NameContainsKeywordsPredicate(Collections.singletonList(\"Alice\"));","lastModifiedDate":"2017-06-12"},{"lineNumber":45,"author":{"gitId":"cwnm"},"content":"        assertTrue(predicate.test(new ClientBuilder().withName(\"Alice Bob\").build()));","lastModifiedDate":"2022-03-04"},{"lineNumber":46,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":47,"author":{"gitId":"-"},"content":"        // Multiple keywords","lastModifiedDate":"2017-06-12"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        predicate \u003d new NameContainsKeywordsPredicate(Arrays.asList(\"Alice\", \"Bob\"));","lastModifiedDate":"2017-06-12"},{"lineNumber":49,"author":{"gitId":"cwnm"},"content":"        assertTrue(predicate.test(new ClientBuilder().withName(\"Alice Bob\").build()));","lastModifiedDate":"2022-03-04"},{"lineNumber":50,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":51,"author":{"gitId":"-"},"content":"        // Only one matching keyword","lastModifiedDate":"2017-06-12"},{"lineNumber":52,"author":{"gitId":"-"},"content":"        predicate \u003d new NameContainsKeywordsPredicate(Arrays.asList(\"Bob\", \"Carol\"));","lastModifiedDate":"2017-06-12"},{"lineNumber":53,"author":{"gitId":"cwnm"},"content":"        assertTrue(predicate.test(new ClientBuilder().withName(\"Alice Carol\").build()));","lastModifiedDate":"2022-03-04"},{"lineNumber":54,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":55,"author":{"gitId":"-"},"content":"        // Mixed-case keywords","lastModifiedDate":"2017-06-12"},{"lineNumber":56,"author":{"gitId":"-"},"content":"        predicate \u003d new NameContainsKeywordsPredicate(Arrays.asList(\"aLIce\", \"bOB\"));","lastModifiedDate":"2017-06-12"},{"lineNumber":57,"author":{"gitId":"cwnm"},"content":"        assertTrue(predicate.test(new ClientBuilder().withName(\"Alice Bob\").build()));","lastModifiedDate":"2022-03-04"},{"lineNumber":58,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-12"},{"lineNumber":59,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-12"},{"lineNumber":61,"author":{"gitId":"-"},"content":"    public void test_nameDoesNotContainKeywords_returnsFalse() {","lastModifiedDate":"2017-08-15"},{"lineNumber":62,"author":{"gitId":"-"},"content":"        // Zero keywords","lastModifiedDate":"2017-06-12"},{"lineNumber":63,"author":{"gitId":"-"},"content":"        NameContainsKeywordsPredicate predicate \u003d new NameContainsKeywordsPredicate(Collections.emptyList());","lastModifiedDate":"2017-06-12"},{"lineNumber":64,"author":{"gitId":"cwnm"},"content":"        assertFalse(predicate.test(new ClientBuilder().withName(\"Alice\").build()));","lastModifiedDate":"2022-03-04"},{"lineNumber":65,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":66,"author":{"gitId":"-"},"content":"        // Non-matching keyword","lastModifiedDate":"2017-06-12"},{"lineNumber":67,"author":{"gitId":"-"},"content":"        predicate \u003d new NameContainsKeywordsPredicate(Arrays.asList(\"Carol\"));","lastModifiedDate":"2017-06-12"},{"lineNumber":68,"author":{"gitId":"cwnm"},"content":"        assertFalse(predicate.test(new ClientBuilder().withName(\"Alice Bob\").build()));","lastModifiedDate":"2022-03-04"},{"lineNumber":69,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":70,"author":{"gitId":"-"},"content":"        // Keywords match phone, email and address, but does not match name","lastModifiedDate":"2017-06-12"},{"lineNumber":71,"author":{"gitId":"-"},"content":"        predicate \u003d new NameContainsKeywordsPredicate(Arrays.asList(\"12345\", \"alice@email.com\", \"Main\", \"Street\"));","lastModifiedDate":"2017-06-12"},{"lineNumber":72,"author":{"gitId":"cwnm"},"content":"        assertFalse(predicate.test(new ClientBuilder().withName(\"Alice\").withPhone(\"12345\")","lastModifiedDate":"2022-03-04"},{"lineNumber":73,"author":{"gitId":"Jacky142857"},"content":"               .build()));","lastModifiedDate":"2022-03-19"},{"lineNumber":74,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-12"},{"lineNumber":75,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-06-12"}],"authorContributionMap":{"Jacky142857":1,"cwnm":10,"-":64}},{"path":"src/test/java/seedu/address/model/client/NameTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"cwnm"},"content":"package seedu.address.model.client;","lastModifiedDate":"2022-03-04"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-16"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.Assert.assertThrows;","lastModifiedDate":"2019-03-14"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-16"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-16"},{"lineNumber":9,"author":{"gitId":"-"},"content":"public class NameTest {","lastModifiedDate":"2017-01-16"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-16"},{"lineNumber":11,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-12-04"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    public void constructor_null_throwsNullPointerException() {","lastModifiedDate":"2017-12-04"},{"lineNumber":13,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e new Name(null));","lastModifiedDate":"2019-03-14"},{"lineNumber":14,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-12-04"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-12-04"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-30"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    public void constructor_invalidName_throwsIllegalArgumentException() {","lastModifiedDate":"2017-05-30"},{"lineNumber":18,"author":{"gitId":"-"},"content":"        String invalidName \u003d \"\";","lastModifiedDate":"2017-05-30"},{"lineNumber":19,"author":{"gitId":"-"},"content":"        assertThrows(IllegalArgumentException.class, () -\u003e new Name(invalidName));","lastModifiedDate":"2019-03-14"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-30"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-30"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-01-16"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    public void isValidName() {","lastModifiedDate":"2017-01-16"},{"lineNumber":24,"author":{"gitId":"-"},"content":"        // null name","lastModifiedDate":"2017-12-04"},{"lineNumber":25,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e Name.isValidName(null));","lastModifiedDate":"2019-03-14"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-12-04"},{"lineNumber":27,"author":{"gitId":"-"},"content":"        // invalid name","lastModifiedDate":"2017-01-16"},{"lineNumber":28,"author":{"gitId":"-"},"content":"        assertFalse(Name.isValidName(\"\")); // empty string","lastModifiedDate":"2017-01-16"},{"lineNumber":29,"author":{"gitId":"-"},"content":"        assertFalse(Name.isValidName(\" \")); // spaces only","lastModifiedDate":"2017-01-16"},{"lineNumber":30,"author":{"gitId":"-"},"content":"        assertFalse(Name.isValidName(\"^\")); // only non-alphanumeric characters","lastModifiedDate":"2017-01-16"},{"lineNumber":31,"author":{"gitId":"-"},"content":"        assertFalse(Name.isValidName(\"peter*\")); // contains non-alphanumeric characters","lastModifiedDate":"2017-01-16"},{"lineNumber":32,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-16"},{"lineNumber":33,"author":{"gitId":"-"},"content":"        // valid name","lastModifiedDate":"2017-01-16"},{"lineNumber":34,"author":{"gitId":"-"},"content":"        assertTrue(Name.isValidName(\"peter jack\")); // alphabets only","lastModifiedDate":"2017-01-16"},{"lineNumber":35,"author":{"gitId":"-"},"content":"        assertTrue(Name.isValidName(\"12345\")); // numbers only","lastModifiedDate":"2017-01-16"},{"lineNumber":36,"author":{"gitId":"-"},"content":"        assertTrue(Name.isValidName(\"peter the 2nd\")); // alphanumeric characters","lastModifiedDate":"2017-01-16"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        assertTrue(Name.isValidName(\"Capital Tan\")); // with capital letters","lastModifiedDate":"2017-01-16"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        assertTrue(Name.isValidName(\"David Roger Jackson Ray Jr 2nd\")); // long names","lastModifiedDate":"2017-01-16"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-01-16"},{"lineNumber":40,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-01-16"}],"authorContributionMap":{"cwnm":1,"-":39}},{"path":"src/test/java/seedu/address/model/client/PhoneTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"cwnm"},"content":"package seedu.address.model.client;","lastModifiedDate":"2022-03-04"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-16"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.Assert.assertThrows;","lastModifiedDate":"2019-03-14"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-16"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-16"},{"lineNumber":9,"author":{"gitId":"-"},"content":"public class PhoneTest {","lastModifiedDate":"2017-01-16"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-16"},{"lineNumber":11,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-12-04"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    public void constructor_null_throwsNullPointerException() {","lastModifiedDate":"2017-12-04"},{"lineNumber":13,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e new Phone(null));","lastModifiedDate":"2019-03-14"},{"lineNumber":14,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-12-04"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-12-04"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-30"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    public void constructor_invalidPhone_throwsIllegalArgumentException() {","lastModifiedDate":"2017-05-30"},{"lineNumber":18,"author":{"gitId":"-"},"content":"        String invalidPhone \u003d \"\";","lastModifiedDate":"2017-05-30"},{"lineNumber":19,"author":{"gitId":"-"},"content":"        assertThrows(IllegalArgumentException.class, () -\u003e new Phone(invalidPhone));","lastModifiedDate":"2019-03-14"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-30"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-30"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-01-16"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    public void isValidPhone() {","lastModifiedDate":"2017-01-16"},{"lineNumber":24,"author":{"gitId":"-"},"content":"        // null phone number","lastModifiedDate":"2017-12-04"},{"lineNumber":25,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e Phone.isValidPhone(null));","lastModifiedDate":"2019-03-14"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-12-04"},{"lineNumber":27,"author":{"gitId":"-"},"content":"        // invalid phone numbers","lastModifiedDate":"2017-01-16"},{"lineNumber":28,"author":{"gitId":"-"},"content":"        assertFalse(Phone.isValidPhone(\"\")); // empty string","lastModifiedDate":"2017-01-16"},{"lineNumber":29,"author":{"gitId":"-"},"content":"        assertFalse(Phone.isValidPhone(\" \")); // spaces only","lastModifiedDate":"2017-01-16"},{"lineNumber":30,"author":{"gitId":"-"},"content":"        assertFalse(Phone.isValidPhone(\"91\")); // less than 3 numbers","lastModifiedDate":"2017-05-04"},{"lineNumber":31,"author":{"gitId":"-"},"content":"        assertFalse(Phone.isValidPhone(\"phone\")); // non-numeric","lastModifiedDate":"2017-01-16"},{"lineNumber":32,"author":{"gitId":"-"},"content":"        assertFalse(Phone.isValidPhone(\"9011p041\")); // alphabets within digits","lastModifiedDate":"2017-01-16"},{"lineNumber":33,"author":{"gitId":"-"},"content":"        assertFalse(Phone.isValidPhone(\"9312 1534\")); // spaces within digits","lastModifiedDate":"2017-01-16"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-16"},{"lineNumber":35,"author":{"gitId":"-"},"content":"        // valid phone numbers","lastModifiedDate":"2017-01-16"},{"lineNumber":36,"author":{"gitId":"-"},"content":"        assertTrue(Phone.isValidPhone(\"911\")); // exactly 3 numbers","lastModifiedDate":"2017-05-04"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        assertTrue(Phone.isValidPhone(\"93121534\"));","lastModifiedDate":"2017-01-16"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        assertTrue(Phone.isValidPhone(\"124293842033123\")); // long phone numbers","lastModifiedDate":"2017-01-16"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-01-16"},{"lineNumber":40,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-01-16"}],"authorContributionMap":{"cwnm":1,"-":39}},{"path":"src/test/java/seedu/address/model/property/AddressTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"janald99"},"content":"package seedu.address.model.property;","lastModifiedDate":"2022-04-06"},{"lineNumber":2,"author":{"gitId":"janald99"},"content":"","lastModifiedDate":"2022-04-06"},{"lineNumber":3,"author":{"gitId":"janald99"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2022-04-06"},{"lineNumber":4,"author":{"gitId":"janald99"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2022-04-06"},{"lineNumber":5,"author":{"gitId":"janald99"},"content":"","lastModifiedDate":"2022-04-06"},{"lineNumber":6,"author":{"gitId":"janald99"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2022-04-06"},{"lineNumber":7,"author":{"gitId":"janald99"},"content":"","lastModifiedDate":"2022-04-06"},{"lineNumber":8,"author":{"gitId":"janald99"},"content":"class AddressTest {","lastModifiedDate":"2022-04-06"},{"lineNumber":9,"author":{"gitId":"janald99"},"content":"","lastModifiedDate":"2022-04-06"},{"lineNumber":10,"author":{"gitId":"janald99"},"content":"    @Test","lastModifiedDate":"2022-04-06"},{"lineNumber":11,"author":{"gitId":"janald99"},"content":"    void testEquals() {","lastModifiedDate":"2022-04-06"},{"lineNumber":12,"author":{"gitId":"janald99"},"content":"        Address a1 \u003d new Address(\"block 123\");","lastModifiedDate":"2022-04-06"},{"lineNumber":13,"author":{"gitId":"janald99"},"content":"        Address a2 \u003d new Address(\"block 123\");","lastModifiedDate":"2022-04-06"},{"lineNumber":14,"author":{"gitId":"janald99"},"content":"        Address a3 \u003d new Address(\"BLOCK 123\");","lastModifiedDate":"2022-04-06"},{"lineNumber":15,"author":{"gitId":"janald99"},"content":"","lastModifiedDate":"2022-04-06"},{"lineNumber":16,"author":{"gitId":"janald99"},"content":"        assertTrue(a1.equals(a2));","lastModifiedDate":"2022-04-06"},{"lineNumber":17,"author":{"gitId":"janald99"},"content":"","lastModifiedDate":"2022-04-06"},{"lineNumber":18,"author":{"gitId":"janald99"},"content":"        assertFalse(a1.equals(a3));","lastModifiedDate":"2022-04-06"},{"lineNumber":19,"author":{"gitId":"janald99"},"content":"    }","lastModifiedDate":"2022-04-06"},{"lineNumber":20,"author":{"gitId":"janald99"},"content":"","lastModifiedDate":"2022-04-06"},{"lineNumber":21,"author":{"gitId":"janald99"},"content":"    @Test","lastModifiedDate":"2022-04-06"},{"lineNumber":22,"author":{"gitId":"janald99"},"content":"    void isValidAddress() {","lastModifiedDate":"2022-04-06"},{"lineNumber":23,"author":{"gitId":"janald99"},"content":"        assertTrue(Address.isValidAddress(\"gibber\"));","lastModifiedDate":"2022-04-06"},{"lineNumber":24,"author":{"gitId":"janald99"},"content":"        assertTrue(Address.isValidAddress(\"2321321\"));","lastModifiedDate":"2022-04-06"},{"lineNumber":25,"author":{"gitId":"janald99"},"content":"        assertTrue(Address.isValidAddress(\"       \"));","lastModifiedDate":"2022-04-06"},{"lineNumber":26,"author":{"gitId":"janald99"},"content":"","lastModifiedDate":"2022-04-06"},{"lineNumber":27,"author":{"gitId":"janald99"},"content":"        assertFalse(Address.isValidAddress(\"\"));","lastModifiedDate":"2022-04-06"},{"lineNumber":28,"author":{"gitId":"janald99"},"content":"    }","lastModifiedDate":"2022-04-06"},{"lineNumber":29,"author":{"gitId":"janald99"},"content":"}","lastModifiedDate":"2022-04-06"}],"authorContributionMap":{"janald99":29}},{"path":"src/test/java/seedu/address/model/property/HouseTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"janald99"},"content":"package seedu.address.model.property;","lastModifiedDate":"2022-03-16"},{"lineNumber":2,"author":{"gitId":"chuashihong"},"content":"","lastModifiedDate":"2022-03-15"},{"lineNumber":3,"author":{"gitId":"chuashihong"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2022-03-15"},{"lineNumber":4,"author":{"gitId":"chuashihong"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2022-03-15"},{"lineNumber":5,"author":{"gitId":"chuashihong"},"content":"","lastModifiedDate":"2022-03-15"},{"lineNumber":6,"author":{"gitId":"chuashihong"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2022-03-15"},{"lineNumber":7,"author":{"gitId":"chuashihong"},"content":"","lastModifiedDate":"2022-03-15"},{"lineNumber":8,"author":{"gitId":"chuashihong"},"content":"class HouseTest {","lastModifiedDate":"2022-03-15"},{"lineNumber":9,"author":{"gitId":"chuashihong"},"content":"","lastModifiedDate":"2022-03-15"},{"lineNumber":10,"author":{"gitId":"janald99"},"content":"    private House h1 \u003d new House(HouseType.BUNGALOW, new Location(\"Bishan\"));","lastModifiedDate":"2022-03-31"},{"lineNumber":11,"author":{"gitId":"janald99"},"content":"    private House h2 \u003d new House(HouseType.BUNGALOW, new Location(\"Kovan\"));","lastModifiedDate":"2022-03-31"},{"lineNumber":12,"author":{"gitId":"janald99"},"content":"    private House h3 \u003d new House(HouseType.APARTMENT, new Location(\"Serangoon\"));","lastModifiedDate":"2022-03-31"},{"lineNumber":13,"author":{"gitId":"janald99"},"content":"    private House h4 \u003d new House(HouseType.BUNGALOW, new Location(\"Bishan\"));","lastModifiedDate":"2022-03-31"},{"lineNumber":14,"author":{"gitId":"janald99"},"content":"","lastModifiedDate":"2022-03-16"},{"lineNumber":15,"author":{"gitId":"chuashihong"},"content":"    @Test","lastModifiedDate":"2022-03-15"},{"lineNumber":16,"author":{"gitId":"chuashihong"},"content":"    public void testHouseEquals() {","lastModifiedDate":"2022-03-15"},{"lineNumber":17,"author":{"gitId":"chuashihong"},"content":"        assertFalse(h1.equals(h2));","lastModifiedDate":"2022-03-15"},{"lineNumber":18,"author":{"gitId":"chuashihong"},"content":"        assertFalse(h1.equals(h3));","lastModifiedDate":"2022-03-15"},{"lineNumber":19,"author":{"gitId":"chuashihong"},"content":"        assertTrue(h1.equals(h4));","lastModifiedDate":"2022-03-15"},{"lineNumber":20,"author":{"gitId":"chuashihong"},"content":"    }","lastModifiedDate":"2022-03-15"},{"lineNumber":21,"author":{"gitId":"chuashihong"},"content":"}","lastModifiedDate":"2022-03-15"}],"authorContributionMap":{"janald99":6,"chuashihong":15}},{"path":"src/test/java/seedu/address/model/property/LocationTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"janald99"},"content":"package seedu.address.model.property;","lastModifiedDate":"2022-03-16"},{"lineNumber":2,"author":{"gitId":"janald99"},"content":"","lastModifiedDate":"2022-03-16"},{"lineNumber":3,"author":{"gitId":"janald99"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2022-03-16"},{"lineNumber":4,"author":{"gitId":"janald99"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2022-03-16"},{"lineNumber":5,"author":{"gitId":"janald99"},"content":"","lastModifiedDate":"2022-03-16"},{"lineNumber":6,"author":{"gitId":"janald99"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2022-03-16"},{"lineNumber":7,"author":{"gitId":"janald99"},"content":"","lastModifiedDate":"2022-03-16"},{"lineNumber":8,"author":{"gitId":"janald99"},"content":"class LocationTest {","lastModifiedDate":"2022-03-16"},{"lineNumber":9,"author":{"gitId":"janald99"},"content":"","lastModifiedDate":"2022-03-16"},{"lineNumber":10,"author":{"gitId":"janald99"},"content":"    @Test","lastModifiedDate":"2022-03-16"},{"lineNumber":11,"author":{"gitId":"janald99"},"content":"    public void equalsTest() {","lastModifiedDate":"2022-03-16"},{"lineNumber":12,"author":{"gitId":"janald99"},"content":"        Location location \u003d new Location(\"Clementi\");","lastModifiedDate":"2022-03-16"},{"lineNumber":13,"author":{"gitId":"janald99"},"content":"        Location location2 \u003d new Location(\"Clementi\");","lastModifiedDate":"2022-03-16"},{"lineNumber":14,"author":{"gitId":"janald99"},"content":"        Location location3 \u003d new Location(\"Kent Ridge\");","lastModifiedDate":"2022-03-16"},{"lineNumber":15,"author":{"gitId":"janald99"},"content":"","lastModifiedDate":"2022-03-16"},{"lineNumber":16,"author":{"gitId":"janald99"},"content":"        assertTrue(location.equals(location2));","lastModifiedDate":"2022-03-16"},{"lineNumber":17,"author":{"gitId":"janald99"},"content":"","lastModifiedDate":"2022-03-16"},{"lineNumber":18,"author":{"gitId":"janald99"},"content":"        assertFalse(location.equals(location3));","lastModifiedDate":"2022-03-16"},{"lineNumber":19,"author":{"gitId":"janald99"},"content":"    }","lastModifiedDate":"2022-03-16"},{"lineNumber":20,"author":{"gitId":"WJunHong"},"content":"","lastModifiedDate":"2022-03-24"},{"lineNumber":21,"author":{"gitId":"WJunHong"},"content":"    @Test","lastModifiedDate":"2022-03-24"},{"lineNumber":22,"author":{"gitId":"WJunHong"},"content":"    public void isValidLocationTest() {","lastModifiedDate":"2022-03-24"},{"lineNumber":23,"author":{"gitId":"WJunHong"},"content":"        assertTrue(Location.isValidLocation(\"Serangoon\"));","lastModifiedDate":"2022-03-24"},{"lineNumber":24,"author":{"gitId":"WJunHong"},"content":"        assertTrue(Location.isValidLocation(\"random gibberish\"));","lastModifiedDate":"2022-03-24"},{"lineNumber":25,"author":{"gitId":"WJunHong"},"content":"        assertTrue(Location.isValidLocation(\"       \"));","lastModifiedDate":"2022-03-24"},{"lineNumber":26,"author":{"gitId":"WJunHong"},"content":"","lastModifiedDate":"2022-03-24"},{"lineNumber":27,"author":{"gitId":"WJunHong"},"content":"        assertFalse(Location.isValidLocation(\"\"));","lastModifiedDate":"2022-03-24"},{"lineNumber":28,"author":{"gitId":"WJunHong"},"content":"","lastModifiedDate":"2022-03-24"},{"lineNumber":29,"author":{"gitId":"WJunHong"},"content":"","lastModifiedDate":"2022-03-24"},{"lineNumber":30,"author":{"gitId":"WJunHong"},"content":"    }","lastModifiedDate":"2022-03-24"},{"lineNumber":31,"author":{"gitId":"janald99"},"content":"}","lastModifiedDate":"2022-03-16"}],"authorContributionMap":{"janald99":20,"WJunHong":11}},{"path":"src/test/java/seedu/address/model/property/PriceRangeTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"janald99"},"content":"package seedu.address.model.property;","lastModifiedDate":"2022-03-16"},{"lineNumber":2,"author":{"gitId":"chuashihong"},"content":"","lastModifiedDate":"2022-03-15"},{"lineNumber":3,"author":{"gitId":"chuashihong"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2022-03-15"},{"lineNumber":4,"author":{"gitId":"janald99"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2022-03-16"},{"lineNumber":5,"author":{"gitId":"janald99"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2022-03-16"},{"lineNumber":6,"author":{"gitId":"chuashihong"},"content":"","lastModifiedDate":"2022-03-15"},{"lineNumber":7,"author":{"gitId":"chuashihong"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2022-03-15"},{"lineNumber":8,"author":{"gitId":"janald99"},"content":"","lastModifiedDate":"2022-03-16"},{"lineNumber":9,"author":{"gitId":"janald99"},"content":"import seedu.address.commons.exceptions.IllegalValueException;","lastModifiedDate":"2022-03-16"},{"lineNumber":10,"author":{"gitId":"chuashihong"},"content":"","lastModifiedDate":"2022-03-15"},{"lineNumber":11,"author":{"gitId":"chuashihong"},"content":"class PriceRangeTest {","lastModifiedDate":"2022-03-15"},{"lineNumber":12,"author":{"gitId":"chuashihong"},"content":"","lastModifiedDate":"2022-03-15"},{"lineNumber":13,"author":{"gitId":"janald99"},"content":"    private PriceRange editablePriceRange \u003d new PriceRange(10, 20);","lastModifiedDate":"2022-03-16"},{"lineNumber":14,"author":{"gitId":"janald99"},"content":"","lastModifiedDate":"2022-03-16"},{"lineNumber":15,"author":{"gitId":"janald99"},"content":"","lastModifiedDate":"2022-03-23"},{"lineNumber":16,"author":{"gitId":"janald99"},"content":"    @Test","lastModifiedDate":"2022-03-23"},{"lineNumber":17,"author":{"gitId":"janald99"},"content":"    public void isValidPriceRangeTest() {","lastModifiedDate":"2022-03-23"},{"lineNumber":18,"author":{"gitId":"janald99"},"content":"        //lower higher than upper.","lastModifiedDate":"2022-03-23"},{"lineNumber":19,"author":{"gitId":"janald99"},"content":"        assertFalse(PriceRange.isValidPriceRange(20, 10));","lastModifiedDate":"2022-03-23"},{"lineNumber":20,"author":{"gitId":"janald99"},"content":"","lastModifiedDate":"2022-03-23"},{"lineNumber":21,"author":{"gitId":"janald99"},"content":"        //negative values.","lastModifiedDate":"2022-03-23"},{"lineNumber":22,"author":{"gitId":"janald99"},"content":"        assertFalse(PriceRange.isValidPriceRange(-10, 50));","lastModifiedDate":"2022-03-23"},{"lineNumber":23,"author":{"gitId":"janald99"},"content":"        assertFalse(PriceRange.isValidPriceRange(-100, -50));","lastModifiedDate":"2022-03-23"},{"lineNumber":24,"author":{"gitId":"janald99"},"content":"","lastModifiedDate":"2022-03-23"},{"lineNumber":25,"author":{"gitId":"janald99"},"content":"        //inclusivity is fine.","lastModifiedDate":"2022-03-23"},{"lineNumber":26,"author":{"gitId":"janald99"},"content":"        assertTrue(PriceRange.isValidPriceRange(10, 10)); //lower can equal upper.","lastModifiedDate":"2022-03-23"},{"lineNumber":27,"author":{"gitId":"janald99"},"content":"","lastModifiedDate":"2022-03-23"},{"lineNumber":28,"author":{"gitId":"janald99"},"content":"        //positive test cases.","lastModifiedDate":"2022-03-23"},{"lineNumber":29,"author":{"gitId":"janald99"},"content":"        assertTrue(PriceRange.isValidPriceRange(0, 100));","lastModifiedDate":"2022-03-23"},{"lineNumber":30,"author":{"gitId":"janald99"},"content":"        assertTrue(PriceRange.isValidPriceRange(1, 2));","lastModifiedDate":"2022-03-23"},{"lineNumber":31,"author":{"gitId":"WJunHong"},"content":"","lastModifiedDate":"2022-03-24"},{"lineNumber":32,"author":{"gitId":"WJunHong"},"content":"        assertFalse(PriceRange.isValidPriceRange(\"a,b,c\"));","lastModifiedDate":"2022-03-24"},{"lineNumber":33,"author":{"gitId":"WJunHong"},"content":"        assertFalse(PriceRange.isValidPriceRange(\"1,2,3\"));","lastModifiedDate":"2022-03-24"},{"lineNumber":34,"author":{"gitId":"WJunHong"},"content":"        assertFalse(PriceRange.isValidPriceRange(\",,\"));","lastModifiedDate":"2022-03-24"},{"lineNumber":35,"author":{"gitId":"WJunHong"},"content":"        assertFalse(PriceRange.isValidPriceRange(\"100,10\"));","lastModifiedDate":"2022-03-24"},{"lineNumber":36,"author":{"gitId":"WJunHong"},"content":"        assertTrue(PriceRange.isValidPriceRange(\"0,0\"));","lastModifiedDate":"2022-03-24"},{"lineNumber":37,"author":{"gitId":"WJunHong"},"content":"        assertTrue(PriceRange.isValidPriceRange(\"0,100\"));","lastModifiedDate":"2022-03-24"},{"lineNumber":38,"author":{"gitId":"WJunHong"},"content":"","lastModifiedDate":"2022-03-24"},{"lineNumber":39,"author":{"gitId":"janald99"},"content":"    }","lastModifiedDate":"2022-03-16"},{"lineNumber":40,"author":{"gitId":"chuashihong"},"content":"","lastModifiedDate":"2022-03-15"},{"lineNumber":41,"author":{"gitId":"chuashihong"},"content":"    @Test","lastModifiedDate":"2022-03-15"},{"lineNumber":42,"author":{"gitId":"janald99"},"content":"    public void priceRangeToStringTest() {","lastModifiedDate":"2022-03-23"},{"lineNumber":43,"author":{"gitId":"janald99"},"content":"        PriceRange pr1 \u003d new PriceRange(0, 100);","lastModifiedDate":"2022-03-16"},{"lineNumber":44,"author":{"gitId":"janald99"},"content":"        PriceRange pr2 \u003d new PriceRange(50, 100);","lastModifiedDate":"2022-03-16"},{"lineNumber":45,"author":{"gitId":"chuashihong"},"content":"        assertEquals(\"[0,100]\", pr1.toString());","lastModifiedDate":"2022-03-15"},{"lineNumber":46,"author":{"gitId":"chuashihong"},"content":"        assertEquals(\"[50,100]\", pr2.toString());","lastModifiedDate":"2022-03-15"},{"lineNumber":47,"author":{"gitId":"chuashihong"},"content":"    }","lastModifiedDate":"2022-03-15"},{"lineNumber":48,"author":{"gitId":"chuashihong"},"content":"","lastModifiedDate":"2022-03-15"},{"lineNumber":49,"author":{"gitId":"janald99"},"content":"    @Test","lastModifiedDate":"2022-03-16"},{"lineNumber":50,"author":{"gitId":"janald99"},"content":"    public void getLowerTest() {","lastModifiedDate":"2022-03-23"},{"lineNumber":51,"author":{"gitId":"janald99"},"content":"        PriceRange pr1 \u003d new PriceRange(0, 100);","lastModifiedDate":"2022-03-16"},{"lineNumber":52,"author":{"gitId":"janald99"},"content":"        PriceRange pr2 \u003d new PriceRange(50, 100);","lastModifiedDate":"2022-03-16"},{"lineNumber":53,"author":{"gitId":"janald99"},"content":"        assertEquals(0, pr1.getLower());","lastModifiedDate":"2022-03-16"},{"lineNumber":54,"author":{"gitId":"janald99"},"content":"        assertEquals(50, pr2.getLower());","lastModifiedDate":"2022-03-16"},{"lineNumber":55,"author":{"gitId":"janald99"},"content":"    }","lastModifiedDate":"2022-03-16"},{"lineNumber":56,"author":{"gitId":"janald99"},"content":"","lastModifiedDate":"2022-03-16"},{"lineNumber":57,"author":{"gitId":"janald99"},"content":"    @Test","lastModifiedDate":"2022-03-16"},{"lineNumber":58,"author":{"gitId":"janald99"},"content":"    public void getUpperTest() {","lastModifiedDate":"2022-03-23"},{"lineNumber":59,"author":{"gitId":"janald99"},"content":"        PriceRange pr1 \u003d new PriceRange(0, 100);","lastModifiedDate":"2022-03-16"},{"lineNumber":60,"author":{"gitId":"janald99"},"content":"        PriceRange pr2 \u003d new PriceRange(50, 100);","lastModifiedDate":"2022-03-16"},{"lineNumber":61,"author":{"gitId":"janald99"},"content":"        assertEquals(100, pr1.getUpper());","lastModifiedDate":"2022-03-16"},{"lineNumber":62,"author":{"gitId":"janald99"},"content":"        assertEquals(100, pr2.getUpper());","lastModifiedDate":"2022-03-16"},{"lineNumber":63,"author":{"gitId":"janald99"},"content":"    }","lastModifiedDate":"2022-03-16"},{"lineNumber":64,"author":{"gitId":"janald99"},"content":"","lastModifiedDate":"2022-03-16"},{"lineNumber":65,"author":{"gitId":"janald99"},"content":"    @Test","lastModifiedDate":"2022-03-16"},{"lineNumber":66,"author":{"gitId":"janald99"},"content":"    public void isWithinRangeTest() throws IllegalValueException {","lastModifiedDate":"2022-03-16"},{"lineNumber":67,"author":{"gitId":"janald99"},"content":"        PriceRange pr1 \u003d new PriceRange(45, 100);","lastModifiedDate":"2022-03-16"},{"lineNumber":68,"author":{"gitId":"janald99"},"content":"        PriceRange pr2 \u003d new PriceRange(50, 150);","lastModifiedDate":"2022-03-16"},{"lineNumber":69,"author":{"gitId":"janald99"},"content":"        PriceRange pr4 \u003d new PriceRange(44, 46);","lastModifiedDate":"2022-03-16"},{"lineNumber":70,"author":{"gitId":"janald99"},"content":"","lastModifiedDate":"2022-03-16"},{"lineNumber":71,"author":{"gitId":"janald99"},"content":"        //within range","lastModifiedDate":"2022-03-16"},{"lineNumber":72,"author":{"gitId":"janald99"},"content":"        assertTrue(PriceRange.isWithinRange(90, pr1));","lastModifiedDate":"2022-03-16"},{"lineNumber":73,"author":{"gitId":"janald99"},"content":"        assertTrue(PriceRange.isWithinRange(150, pr2)); //inclusive","lastModifiedDate":"2022-03-16"},{"lineNumber":74,"author":{"gitId":"janald99"},"content":"        assertTrue(PriceRange.isWithinRange(50, pr2)); //inclusive","lastModifiedDate":"2022-03-16"},{"lineNumber":75,"author":{"gitId":"janald99"},"content":"        assertTrue(PriceRange.isWithinRange(45, pr4));","lastModifiedDate":"2022-03-16"},{"lineNumber":76,"author":{"gitId":"janald99"},"content":"","lastModifiedDate":"2022-03-16"},{"lineNumber":77,"author":{"gitId":"janald99"},"content":"        //outside range","lastModifiedDate":"2022-03-16"},{"lineNumber":78,"author":{"gitId":"janald99"},"content":"        assertFalse(PriceRange.isWithinRange(30, pr1));","lastModifiedDate":"2022-03-16"},{"lineNumber":79,"author":{"gitId":"janald99"},"content":"        assertFalse(PriceRange.isWithinRange(-5, pr1));","lastModifiedDate":"2022-03-16"},{"lineNumber":80,"author":{"gitId":"janald99"},"content":"        assertFalse(PriceRange.isWithinRange(43, pr4));","lastModifiedDate":"2022-03-16"},{"lineNumber":81,"author":{"gitId":"janald99"},"content":"        assertFalse(PriceRange.isWithinRange(47, pr4));","lastModifiedDate":"2022-03-16"},{"lineNumber":82,"author":{"gitId":"janald99"},"content":"    }","lastModifiedDate":"2022-03-16"},{"lineNumber":83,"author":{"gitId":"janald99"},"content":"","lastModifiedDate":"2022-03-16"},{"lineNumber":84,"author":{"gitId":"janald99"},"content":"    @Test","lastModifiedDate":"2022-03-16"},{"lineNumber":85,"author":{"gitId":"janald99"},"content":"    public void canMatchPriceTest() throws IllegalValueException {","lastModifiedDate":"2022-03-16"},{"lineNumber":86,"author":{"gitId":"janald99"},"content":"        PriceRange pr1 \u003d new PriceRange(45, 100);","lastModifiedDate":"2022-03-16"},{"lineNumber":87,"author":{"gitId":"janald99"},"content":"        PriceRange pr2 \u003d new PriceRange(50, 150);","lastModifiedDate":"2022-03-16"},{"lineNumber":88,"author":{"gitId":"janald99"},"content":"        PriceRange pr3 \u003d new PriceRange(101, 150);","lastModifiedDate":"2022-03-16"},{"lineNumber":89,"author":{"gitId":"janald99"},"content":"        PriceRange pr4 \u003d new PriceRange(44, 46);","lastModifiedDate":"2022-03-16"},{"lineNumber":90,"author":{"gitId":"janald99"},"content":"        PriceRange pr5 \u003d new PriceRange(20, 40);","lastModifiedDate":"2022-03-27"},{"lineNumber":91,"author":{"gitId":"janald99"},"content":"        PriceRange pr6 \u003d new PriceRange(10, 100);","lastModifiedDate":"2022-03-27"},{"lineNumber":92,"author":{"gitId":"janald99"},"content":"","lastModifiedDate":"2022-03-16"},{"lineNumber":93,"author":{"gitId":"janald99"},"content":"        assertTrue(PriceRange.canMatchPrice(pr1, pr2)); //values from 50-100 are valid matches","lastModifiedDate":"2022-03-16"},{"lineNumber":94,"author":{"gitId":"janald99"},"content":"        assertTrue(PriceRange.canMatchPrice(pr2, pr1)); //other way should work also","lastModifiedDate":"2022-03-16"},{"lineNumber":95,"author":{"gitId":"janald99"},"content":"","lastModifiedDate":"2022-03-16"},{"lineNumber":96,"author":{"gitId":"janald99"},"content":"        assertTrue(PriceRange.canMatchPrice(pr3, pr2));","lastModifiedDate":"2022-03-16"},{"lineNumber":97,"author":{"gitId":"janald99"},"content":"        assertTrue(PriceRange.canMatchPrice(pr2, pr3));","lastModifiedDate":"2022-03-16"},{"lineNumber":98,"author":{"gitId":"janald99"},"content":"","lastModifiedDate":"2022-03-16"},{"lineNumber":99,"author":{"gitId":"janald99"},"content":"        assertTrue(PriceRange.canMatchPrice(pr4, pr1));","lastModifiedDate":"2022-03-16"},{"lineNumber":100,"author":{"gitId":"janald99"},"content":"        assertTrue(PriceRange.canMatchPrice(pr1, pr4)); // other way should be the same","lastModifiedDate":"2022-03-16"},{"lineNumber":101,"author":{"gitId":"janald99"},"content":"","lastModifiedDate":"2022-03-16"},{"lineNumber":102,"author":{"gitId":"janald99"},"content":"        assertFalse(PriceRange.canMatchPrice(pr1, pr3));","lastModifiedDate":"2022-03-16"},{"lineNumber":103,"author":{"gitId":"janald99"},"content":"        assertFalse(PriceRange.canMatchPrice(pr3, pr1));","lastModifiedDate":"2022-03-16"},{"lineNumber":104,"author":{"gitId":"janald99"},"content":"","lastModifiedDate":"2022-03-27"},{"lineNumber":105,"author":{"gitId":"janald99"},"content":"        assertTrue(PriceRange.canMatchPrice(pr5, pr6));","lastModifiedDate":"2022-03-27"},{"lineNumber":106,"author":{"gitId":"janald99"},"content":"        assertTrue(PriceRange.canMatchPrice(pr6, pr5));","lastModifiedDate":"2022-03-27"},{"lineNumber":107,"author":{"gitId":"janald99"},"content":"    }","lastModifiedDate":"2022-03-16"},{"lineNumber":108,"author":{"gitId":"janald99"},"content":"","lastModifiedDate":"2022-03-16"},{"lineNumber":109,"author":{"gitId":"janald99"},"content":"    @Test","lastModifiedDate":"2022-03-16"},{"lineNumber":110,"author":{"gitId":"janald99"},"content":"    public void equalTest() throws IllegalValueException {","lastModifiedDate":"2022-03-16"},{"lineNumber":111,"author":{"gitId":"janald99"},"content":"        PriceRange pr1 \u003d new PriceRange(45, 100);","lastModifiedDate":"2022-03-16"},{"lineNumber":112,"author":{"gitId":"janald99"},"content":"        PriceRange pr2 \u003d new PriceRange(45, 100);","lastModifiedDate":"2022-03-16"},{"lineNumber":113,"author":{"gitId":"janald99"},"content":"        PriceRange pr3 \u003d new PriceRange(45, 99);","lastModifiedDate":"2022-03-16"},{"lineNumber":114,"author":{"gitId":"janald99"},"content":"","lastModifiedDate":"2022-03-16"},{"lineNumber":115,"author":{"gitId":"janald99"},"content":"        assertTrue(pr1.equals(pr2));","lastModifiedDate":"2022-03-16"},{"lineNumber":116,"author":{"gitId":"janald99"},"content":"        assertTrue(pr2.equals(pr1));","lastModifiedDate":"2022-03-16"},{"lineNumber":117,"author":{"gitId":"janald99"},"content":"","lastModifiedDate":"2022-03-16"},{"lineNumber":118,"author":{"gitId":"janald99"},"content":"        assertFalse(pr1.equals(pr3));","lastModifiedDate":"2022-03-16"},{"lineNumber":119,"author":{"gitId":"janald99"},"content":"    }","lastModifiedDate":"2022-03-16"},{"lineNumber":120,"author":{"gitId":"chuashihong"},"content":"}","lastModifiedDate":"2022-03-15"}],"authorContributionMap":{"janald99":98,"WJunHong":8,"chuashihong":14}},{"path":"src/test/java/seedu/address/model/property/PropertyToBuyTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"janald99"},"content":"package seedu.address.model.property;","lastModifiedDate":"2022-03-16"},{"lineNumber":2,"author":{"gitId":"janald99"},"content":"","lastModifiedDate":"2022-03-16"},{"lineNumber":3,"author":{"gitId":"janald99"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2022-03-16"},{"lineNumber":4,"author":{"gitId":"janald99"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2022-03-16"},{"lineNumber":5,"author":{"gitId":"janald99"},"content":"","lastModifiedDate":"2022-03-16"},{"lineNumber":6,"author":{"gitId":"janald99"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2022-03-16"},{"lineNumber":7,"author":{"gitId":"janald99"},"content":"","lastModifiedDate":"2022-03-16"},{"lineNumber":8,"author":{"gitId":"janald99"},"content":"","lastModifiedDate":"2022-03-16"},{"lineNumber":9,"author":{"gitId":"janald99"},"content":"class PropertyToBuyTest {","lastModifiedDate":"2022-03-16"},{"lineNumber":10,"author":{"gitId":"janald99"},"content":"","lastModifiedDate":"2022-03-16"},{"lineNumber":11,"author":{"gitId":"janald99"},"content":"    private House houseStub1 \u003d new House(HouseType.APARTMENT, new Location(\"Serangoon\"));","lastModifiedDate":"2022-03-31"},{"lineNumber":12,"author":{"gitId":"janald99"},"content":"    private PriceRange priceRangeStub1 \u003d new PriceRange(0, 100);","lastModifiedDate":"2022-03-16"},{"lineNumber":13,"author":{"gitId":"janald99"},"content":"    private PropertyToBuy toBuy1 \u003d new PropertyToBuy(houseStub1, priceRangeStub1);","lastModifiedDate":"2022-03-16"},{"lineNumber":14,"author":{"gitId":"janald99"},"content":"","lastModifiedDate":"2022-03-16"},{"lineNumber":15,"author":{"gitId":"janald99"},"content":"    private House houseStub2 \u003d new House(HouseType.APARTMENT, new Location(\"Serangoon\"));","lastModifiedDate":"2022-03-31"},{"lineNumber":16,"author":{"gitId":"janald99"},"content":"    private PriceRange priceRangeStub2 \u003d new PriceRange(0, 100);","lastModifiedDate":"2022-03-16"},{"lineNumber":17,"author":{"gitId":"janald99"},"content":"    private PropertyToBuy toBuy2 \u003d new PropertyToBuy(houseStub2, priceRangeStub2);","lastModifiedDate":"2022-03-16"},{"lineNumber":18,"author":{"gitId":"janald99"},"content":"","lastModifiedDate":"2022-03-16"},{"lineNumber":19,"author":{"gitId":"janald99"},"content":"    private House houseStub3 \u003d new House(HouseType.APARTMENT, new Location(\"Hougang\"));","lastModifiedDate":"2022-03-31"},{"lineNumber":20,"author":{"gitId":"janald99"},"content":"    private PriceRange priceRangeStub3 \u003d new PriceRange(0, 100);","lastModifiedDate":"2022-03-16"},{"lineNumber":21,"author":{"gitId":"janald99"},"content":"    private PropertyToBuy toBuy3 \u003d new PropertyToBuy(houseStub3, priceRangeStub3);","lastModifiedDate":"2022-03-16"},{"lineNumber":22,"author":{"gitId":"janald99"},"content":"","lastModifiedDate":"2022-03-16"},{"lineNumber":23,"author":{"gitId":"janald99"},"content":"","lastModifiedDate":"2022-03-16"},{"lineNumber":24,"author":{"gitId":"janald99"},"content":"    @Test","lastModifiedDate":"2022-03-16"},{"lineNumber":25,"author":{"gitId":"janald99"},"content":"    public void equalsTest() {","lastModifiedDate":"2022-03-16"},{"lineNumber":26,"author":{"gitId":"janald99"},"content":"        assertTrue(toBuy1.equals(toBuy2));","lastModifiedDate":"2022-03-16"},{"lineNumber":27,"author":{"gitId":"janald99"},"content":"        assertTrue(toBuy2.equals(toBuy1));","lastModifiedDate":"2022-03-16"},{"lineNumber":28,"author":{"gitId":"janald99"},"content":"","lastModifiedDate":"2022-03-16"},{"lineNumber":29,"author":{"gitId":"janald99"},"content":"        assertFalse(toBuy3.equals(toBuy1));","lastModifiedDate":"2022-03-16"},{"lineNumber":30,"author":{"gitId":"janald99"},"content":"","lastModifiedDate":"2022-03-16"},{"lineNumber":31,"author":{"gitId":"janald99"},"content":"    }","lastModifiedDate":"2022-03-16"},{"lineNumber":32,"author":{"gitId":"janald99"},"content":"}","lastModifiedDate":"2022-03-16"}],"authorContributionMap":{"janald99":32}},{"path":"src/test/java/seedu/address/model/property/PropertyToSellTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"janald99"},"content":"package seedu.address.model.property;","lastModifiedDate":"2022-03-16"},{"lineNumber":2,"author":{"gitId":"janald99"},"content":"","lastModifiedDate":"2022-03-16"},{"lineNumber":3,"author":{"gitId":"janald99"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2022-03-16"},{"lineNumber":4,"author":{"gitId":"janald99"},"content":"","lastModifiedDate":"2022-03-16"},{"lineNumber":5,"author":{"gitId":"janald99"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2022-03-16"},{"lineNumber":6,"author":{"gitId":"janald99"},"content":"","lastModifiedDate":"2022-03-16"},{"lineNumber":7,"author":{"gitId":"janald99"},"content":"","lastModifiedDate":"2022-03-16"},{"lineNumber":8,"author":{"gitId":"janald99"},"content":"class PropertyToSellTest {","lastModifiedDate":"2022-03-16"},{"lineNumber":9,"author":{"gitId":"janald99"},"content":"","lastModifiedDate":"2022-03-16"},{"lineNumber":10,"author":{"gitId":"janald99"},"content":"    private House houseStub1 \u003d new House(HouseType.APARTMENT, new Location(\"Serangoon\"));","lastModifiedDate":"2022-03-31"},{"lineNumber":11,"author":{"gitId":"janald99"},"content":"    private PriceRange priceRangeStub1 \u003d new PriceRange(0, 100);","lastModifiedDate":"2022-03-16"},{"lineNumber":12,"author":{"gitId":"WJunHong"},"content":"    private PropertyToSell toSell1 \u003d new PropertyToSell(houseStub1, priceRangeStub1, new Address(\"postal 533333\"));","lastModifiedDate":"2022-03-27"},{"lineNumber":13,"author":{"gitId":"janald99"},"content":"","lastModifiedDate":"2022-03-16"},{"lineNumber":14,"author":{"gitId":"janald99"},"content":"    private House houseStub2 \u003d new House(HouseType.APARTMENT, new Location(\"Serangoon\"));","lastModifiedDate":"2022-03-31"},{"lineNumber":15,"author":{"gitId":"janald99"},"content":"    private PriceRange priceRangeStub2 \u003d new PriceRange(0, 100);","lastModifiedDate":"2022-03-16"},{"lineNumber":16,"author":{"gitId":"WJunHong"},"content":"    private PropertyToSell toSell2 \u003d new PropertyToSell(houseStub2, priceRangeStub2, new Address(\"postal 533333\"));","lastModifiedDate":"2022-03-27"},{"lineNumber":17,"author":{"gitId":"janald99"},"content":"","lastModifiedDate":"2022-03-16"},{"lineNumber":18,"author":{"gitId":"janald99"},"content":"","lastModifiedDate":"2022-03-16"},{"lineNumber":19,"author":{"gitId":"janald99"},"content":"    @Test","lastModifiedDate":"2022-03-16"},{"lineNumber":20,"author":{"gitId":"janald99"},"content":"    public void equalsTest() {","lastModifiedDate":"2022-03-16"},{"lineNumber":21,"author":{"gitId":"janald99"},"content":"        assertTrue(toSell1.equals(toSell2));","lastModifiedDate":"2022-03-16"},{"lineNumber":22,"author":{"gitId":"janald99"},"content":"        assertTrue(toSell2.equals(toSell1));","lastModifiedDate":"2022-03-16"},{"lineNumber":23,"author":{"gitId":"janald99"},"content":"    }","lastModifiedDate":"2022-03-16"},{"lineNumber":24,"author":{"gitId":"janald99"},"content":"}","lastModifiedDate":"2022-03-16"}],"authorContributionMap":{"janald99":22,"WJunHong":2}},{"path":"src/test/java/seedu/address/model/seller/AllFieldsMatchBuyerPredicateTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"janald99"},"content":"package seedu.address.model.seller;","lastModifiedDate":"2022-03-31"},{"lineNumber":2,"author":{"gitId":"janald99"},"content":"","lastModifiedDate":"2022-03-31"},{"lineNumber":3,"author":{"gitId":"janald99"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2022-03-31"},{"lineNumber":4,"author":{"gitId":"janald99"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2022-03-31"},{"lineNumber":5,"author":{"gitId":"janald99"},"content":"","lastModifiedDate":"2022-03-31"},{"lineNumber":6,"author":{"gitId":"janald99"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2022-03-31"},{"lineNumber":7,"author":{"gitId":"janald99"},"content":"","lastModifiedDate":"2022-03-31"},{"lineNumber":8,"author":{"gitId":"janald99"},"content":"import seedu.address.model.buyer.Buyer;","lastModifiedDate":"2022-03-31"},{"lineNumber":9,"author":{"gitId":"janald99"},"content":"import seedu.address.model.property.Address;","lastModifiedDate":"2022-03-31"},{"lineNumber":10,"author":{"gitId":"janald99"},"content":"import seedu.address.model.property.House;","lastModifiedDate":"2022-03-31"},{"lineNumber":11,"author":{"gitId":"janald99"},"content":"import seedu.address.model.property.HouseType;","lastModifiedDate":"2022-03-31"},{"lineNumber":12,"author":{"gitId":"janald99"},"content":"import seedu.address.model.property.Location;","lastModifiedDate":"2022-03-31"},{"lineNumber":13,"author":{"gitId":"janald99"},"content":"import seedu.address.model.property.PriceRange;","lastModifiedDate":"2022-03-31"},{"lineNumber":14,"author":{"gitId":"janald99"},"content":"import seedu.address.model.property.PropertyToBuy;","lastModifiedDate":"2022-03-31"},{"lineNumber":15,"author":{"gitId":"janald99"},"content":"import seedu.address.model.property.PropertyToSell;","lastModifiedDate":"2022-03-31"},{"lineNumber":16,"author":{"gitId":"janald99"},"content":"import seedu.address.testutil.BuyerBuilder;","lastModifiedDate":"2022-03-31"},{"lineNumber":17,"author":{"gitId":"janald99"},"content":"import seedu.address.testutil.SellerBuilder;","lastModifiedDate":"2022-03-31"},{"lineNumber":18,"author":{"gitId":"janald99"},"content":"","lastModifiedDate":"2022-03-31"},{"lineNumber":19,"author":{"gitId":"janald99"},"content":"class AllFieldsMatchBuyerPredicateTest {","lastModifiedDate":"2022-03-31"},{"lineNumber":20,"author":{"gitId":"janald99"},"content":"","lastModifiedDate":"2022-03-31"},{"lineNumber":21,"author":{"gitId":"janald99"},"content":"    private PropertyToBuy propertyToBuyStub1 \u003d new PropertyToBuy(","lastModifiedDate":"2022-03-31"},{"lineNumber":22,"author":{"gitId":"janald99"},"content":"        new House(HouseType.BUNGALOW, new Location(\"Kranji\")),","lastModifiedDate":"2022-03-31"},{"lineNumber":23,"author":{"gitId":"janald99"},"content":"        new PriceRange(100, 500));","lastModifiedDate":"2022-03-31"},{"lineNumber":24,"author":{"gitId":"janald99"},"content":"","lastModifiedDate":"2022-03-31"},{"lineNumber":25,"author":{"gitId":"janald99"},"content":"    private PropertyToBuy propertyToBuyStub2 \u003d new PropertyToBuy(","lastModifiedDate":"2022-03-31"},{"lineNumber":26,"author":{"gitId":"janald99"},"content":"        new House(HouseType.UNSPECIFIED, new Location(\"Kranji\")),","lastModifiedDate":"2022-03-31"},{"lineNumber":27,"author":{"gitId":"janald99"},"content":"        new PriceRange(100, 500));","lastModifiedDate":"2022-03-31"},{"lineNumber":28,"author":{"gitId":"janald99"},"content":"","lastModifiedDate":"2022-03-31"},{"lineNumber":29,"author":{"gitId":"janald99"},"content":"    //same fields","lastModifiedDate":"2022-03-31"},{"lineNumber":30,"author":{"gitId":"janald99"},"content":"    private PropertyToSell propertyToSellStub1 \u003d new PropertyToSell(","lastModifiedDate":"2022-03-31"},{"lineNumber":31,"author":{"gitId":"janald99"},"content":"        new House(HouseType.BUNGALOW, new Location(\"Kranji\")),","lastModifiedDate":"2022-03-31"},{"lineNumber":32,"author":{"gitId":"janald99"},"content":"        new PriceRange(100, 500), new Address(\"hey\"));","lastModifiedDate":"2022-03-31"},{"lineNumber":33,"author":{"gitId":"janald99"},"content":"","lastModifiedDate":"2022-03-31"},{"lineNumber":34,"author":{"gitId":"janald99"},"content":"    private PropertyToSell propertyToSellStub2 \u003d new PropertyToSell(","lastModifiedDate":"2022-03-31"},{"lineNumber":35,"author":{"gitId":"janald99"},"content":"        new House(HouseType.HDB_FLAT, new Location(\"Kranji\")),","lastModifiedDate":"2022-03-31"},{"lineNumber":36,"author":{"gitId":"janald99"},"content":"        new PriceRange(0, 600), new Address(\"hey\"));","lastModifiedDate":"2022-03-31"},{"lineNumber":37,"author":{"gitId":"janald99"},"content":"","lastModifiedDate":"2022-03-31"},{"lineNumber":38,"author":{"gitId":"janald99"},"content":"    //Another location","lastModifiedDate":"2022-03-31"},{"lineNumber":39,"author":{"gitId":"janald99"},"content":"    private PropertyToSell propertyToSellStub3 \u003d new PropertyToSell(","lastModifiedDate":"2022-03-31"},{"lineNumber":40,"author":{"gitId":"janald99"},"content":"        new House(HouseType.BUNGALOW, new Location(\"Another location\")),","lastModifiedDate":"2022-03-31"},{"lineNumber":41,"author":{"gitId":"janald99"},"content":"        new PriceRange(100, 500), new Address(\"hey\"));","lastModifiedDate":"2022-03-31"},{"lineNumber":42,"author":{"gitId":"janald99"},"content":"","lastModifiedDate":"2022-03-31"},{"lineNumber":43,"author":{"gitId":"janald99"},"content":"    //abit different price range but within range","lastModifiedDate":"2022-03-31"},{"lineNumber":44,"author":{"gitId":"janald99"},"content":"    private PropertyToSell propertyToSellStub4 \u003d new PropertyToSell(","lastModifiedDate":"2022-03-31"},{"lineNumber":45,"author":{"gitId":"janald99"},"content":"        new House(HouseType.BUNGALOW, new Location(\"Kranji\")),","lastModifiedDate":"2022-03-31"},{"lineNumber":46,"author":{"gitId":"janald99"},"content":"        new PriceRange(499, 501), new Address(\"hey\"));","lastModifiedDate":"2022-03-31"},{"lineNumber":47,"author":{"gitId":"janald99"},"content":"","lastModifiedDate":"2022-03-31"},{"lineNumber":48,"author":{"gitId":"janald99"},"content":"    //out of bounds PriceRange","lastModifiedDate":"2022-03-31"},{"lineNumber":49,"author":{"gitId":"janald99"},"content":"    private PropertyToSell propertyToSellStub5 \u003d new PropertyToSell(","lastModifiedDate":"2022-03-31"},{"lineNumber":50,"author":{"gitId":"janald99"},"content":"        new House(HouseType.BUNGALOW, new Location(\"Kranji\")),","lastModifiedDate":"2022-03-31"},{"lineNumber":51,"author":{"gitId":"janald99"},"content":"        new PriceRange(501, 600), new Address(\"hey\"));","lastModifiedDate":"2022-03-31"},{"lineNumber":52,"author":{"gitId":"janald99"},"content":"","lastModifiedDate":"2022-03-31"},{"lineNumber":53,"author":{"gitId":"janald99"},"content":"    //unspecified housetype but different location","lastModifiedDate":"2022-03-31"},{"lineNumber":54,"author":{"gitId":"janald99"},"content":"    private PropertyToSell propertyToSellStub6 \u003d new PropertyToSell(","lastModifiedDate":"2022-03-31"},{"lineNumber":55,"author":{"gitId":"janald99"},"content":"        new House(HouseType.UNSPECIFIED, new Location(\"Kranji\")),","lastModifiedDate":"2022-03-31"},{"lineNumber":56,"author":{"gitId":"janald99"},"content":"        new PriceRange(100, 500), new Address(\"hey\"));","lastModifiedDate":"2022-03-31"},{"lineNumber":57,"author":{"gitId":"janald99"},"content":"","lastModifiedDate":"2022-03-31"},{"lineNumber":58,"author":{"gitId":"janald99"},"content":"    private Buyer buyer1 \u003d new BuyerBuilder().withProperty(propertyToBuyStub1).build();","lastModifiedDate":"2022-03-31"},{"lineNumber":59,"author":{"gitId":"janald99"},"content":"    private Buyer buyer2 \u003d new BuyerBuilder().withProperty(propertyToBuyStub2).build();","lastModifiedDate":"2022-03-31"},{"lineNumber":60,"author":{"gitId":"janald99"},"content":"","lastModifiedDate":"2022-03-31"},{"lineNumber":61,"author":{"gitId":"janald99"},"content":"    private Seller seller1 \u003d new SellerBuilder().withProperty(propertyToSellStub1).build();","lastModifiedDate":"2022-03-31"},{"lineNumber":62,"author":{"gitId":"janald99"},"content":"    private Seller seller2 \u003d new SellerBuilder().withProperty(propertyToSellStub2).build();","lastModifiedDate":"2022-03-31"},{"lineNumber":63,"author":{"gitId":"janald99"},"content":"    private Seller seller3 \u003d new SellerBuilder().withProperty(propertyToSellStub3).build();","lastModifiedDate":"2022-03-31"},{"lineNumber":64,"author":{"gitId":"janald99"},"content":"    private Seller seller4 \u003d new SellerBuilder().withProperty(propertyToSellStub4).build();","lastModifiedDate":"2022-03-31"},{"lineNumber":65,"author":{"gitId":"janald99"},"content":"    private Seller seller5 \u003d new SellerBuilder().withProperty(propertyToSellStub5).build();","lastModifiedDate":"2022-03-31"},{"lineNumber":66,"author":{"gitId":"janald99"},"content":"    private Seller seller6 \u003d new SellerBuilder().withProperty(propertyToSellStub6).build();","lastModifiedDate":"2022-03-31"},{"lineNumber":67,"author":{"gitId":"janald99"},"content":"","lastModifiedDate":"2022-03-31"},{"lineNumber":68,"author":{"gitId":"janald99"},"content":"    private AllFieldsMatchBuyerPredicate predicate1 \u003d new AllFieldsMatchBuyerPredicate(buyer1);","lastModifiedDate":"2022-03-31"},{"lineNumber":69,"author":{"gitId":"janald99"},"content":"    private AllFieldsMatchBuyerPredicate predicate2 \u003d new AllFieldsMatchBuyerPredicate(buyer2);","lastModifiedDate":"2022-03-31"},{"lineNumber":70,"author":{"gitId":"janald99"},"content":"","lastModifiedDate":"2022-03-31"},{"lineNumber":71,"author":{"gitId":"janald99"},"content":"    @Test","lastModifiedDate":"2022-03-31"},{"lineNumber":72,"author":{"gitId":"janald99"},"content":"    void test1() {","lastModifiedDate":"2022-03-31"},{"lineNumber":73,"author":{"gitId":"janald99"},"content":"        //same fields","lastModifiedDate":"2022-03-31"},{"lineNumber":74,"author":{"gitId":"janald99"},"content":"        assertTrue(predicate1.test(seller1));","lastModifiedDate":"2022-03-31"},{"lineNumber":75,"author":{"gitId":"janald99"},"content":"","lastModifiedDate":"2022-03-31"},{"lineNumber":76,"author":{"gitId":"janald99"},"content":"        //UNSPECIFIED housetype but same location, should","lastModifiedDate":"2022-03-31"},{"lineNumber":77,"author":{"gitId":"janald99"},"content":"        // match with seller with same fields other than housetype","lastModifiedDate":"2022-03-31"},{"lineNumber":78,"author":{"gitId":"janald99"},"content":"        assertTrue(predicate2.test(seller1));","lastModifiedDate":"2022-03-31"},{"lineNumber":79,"author":{"gitId":"janald99"},"content":"","lastModifiedDate":"2022-03-31"},{"lineNumber":80,"author":{"gitId":"janald99"},"content":"        //within price range and unspecified house type","lastModifiedDate":"2022-03-31"},{"lineNumber":81,"author":{"gitId":"janald99"},"content":"        assertTrue(predicate2.test(seller1));","lastModifiedDate":"2022-03-31"},{"lineNumber":82,"author":{"gitId":"janald99"},"content":"        assertTrue(predicate2.test(seller4));","lastModifiedDate":"2022-03-31"},{"lineNumber":83,"author":{"gitId":"janald99"},"content":"","lastModifiedDate":"2022-03-31"},{"lineNumber":84,"author":{"gitId":"janald99"},"content":"        //same housetype but another location","lastModifiedDate":"2022-03-31"},{"lineNumber":85,"author":{"gitId":"janald99"},"content":"        assertFalse(predicate1.test(seller3));","lastModifiedDate":"2022-03-31"},{"lineNumber":86,"author":{"gitId":"janald99"},"content":"","lastModifiedDate":"2022-03-31"},{"lineNumber":87,"author":{"gitId":"janald99"},"content":"        //out of bounds PriceRange","lastModifiedDate":"2022-03-31"},{"lineNumber":88,"author":{"gitId":"janald99"},"content":"        assertFalse(predicate1.test(seller5));","lastModifiedDate":"2022-03-31"},{"lineNumber":89,"author":{"gitId":"janald99"},"content":"","lastModifiedDate":"2022-03-31"},{"lineNumber":90,"author":{"gitId":"janald99"},"content":"        //UNSPECIFIED housetype but diff location","lastModifiedDate":"2022-03-31"},{"lineNumber":91,"author":{"gitId":"janald99"},"content":"        assertFalse(predicate1.test(seller5));","lastModifiedDate":"2022-03-31"},{"lineNumber":92,"author":{"gitId":"janald99"},"content":"    }","lastModifiedDate":"2022-03-31"},{"lineNumber":93,"author":{"gitId":"janald99"},"content":"","lastModifiedDate":"2022-03-31"},{"lineNumber":94,"author":{"gitId":"janald99"},"content":"    @Test","lastModifiedDate":"2022-03-31"},{"lineNumber":95,"author":{"gitId":"janald99"},"content":"    void getPropertyToBuy() {","lastModifiedDate":"2022-03-31"},{"lineNumber":96,"author":{"gitId":"janald99"},"content":"        assertTrue(predicate1.getPropertyToBuy().equals(new PropertyToBuy(","lastModifiedDate":"2022-03-31"},{"lineNumber":97,"author":{"gitId":"janald99"},"content":"            new House(HouseType.BUNGALOW, new Location(\"Kranji\")),","lastModifiedDate":"2022-03-31"},{"lineNumber":98,"author":{"gitId":"janald99"},"content":"            new PriceRange(100, 500))));","lastModifiedDate":"2022-03-31"},{"lineNumber":99,"author":{"gitId":"janald99"},"content":"","lastModifiedDate":"2022-03-31"},{"lineNumber":100,"author":{"gitId":"janald99"},"content":"        assertFalse(predicate1.getPropertyToBuy().equals(new PropertyToBuy(","lastModifiedDate":"2022-03-31"},{"lineNumber":101,"author":{"gitId":"janald99"},"content":"            new House(HouseType.BUNGALOW, new Location(\"Crunchy\")),","lastModifiedDate":"2022-03-31"},{"lineNumber":102,"author":{"gitId":"janald99"},"content":"            new PriceRange(100, 500))));","lastModifiedDate":"2022-03-31"},{"lineNumber":103,"author":{"gitId":"janald99"},"content":"    }","lastModifiedDate":"2022-03-31"},{"lineNumber":104,"author":{"gitId":"janald99"},"content":"","lastModifiedDate":"2022-03-31"},{"lineNumber":105,"author":{"gitId":"janald99"},"content":"    @Test","lastModifiedDate":"2022-03-31"},{"lineNumber":106,"author":{"gitId":"janald99"},"content":"    void getPropertyToSell() {","lastModifiedDate":"2022-03-31"},{"lineNumber":107,"author":{"gitId":"janald99"},"content":"        assertTrue(predicate1.getPropertyToSell(seller1).equals(new PropertyToSell(","lastModifiedDate":"2022-03-31"},{"lineNumber":108,"author":{"gitId":"janald99"},"content":"            new House(HouseType.BUNGALOW, new Location(\"Kranji\")),","lastModifiedDate":"2022-03-31"},{"lineNumber":109,"author":{"gitId":"janald99"},"content":"            new PriceRange(100, 500), new Address(\"hey\"))));","lastModifiedDate":"2022-03-31"},{"lineNumber":110,"author":{"gitId":"janald99"},"content":"    }","lastModifiedDate":"2022-03-31"},{"lineNumber":111,"author":{"gitId":"janald99"},"content":"","lastModifiedDate":"2022-03-31"},{"lineNumber":112,"author":{"gitId":"janald99"},"content":"    @Test","lastModifiedDate":"2022-03-31"},{"lineNumber":113,"author":{"gitId":"janald99"},"content":"    void getBuyRange() {","lastModifiedDate":"2022-03-31"},{"lineNumber":114,"author":{"gitId":"janald99"},"content":"        assertTrue(predicate1.getBuyRange(propertyToBuyStub1).equals(new PriceRange(100, 500)));","lastModifiedDate":"2022-03-31"},{"lineNumber":115,"author":{"gitId":"janald99"},"content":"    }","lastModifiedDate":"2022-03-31"},{"lineNumber":116,"author":{"gitId":"janald99"},"content":"","lastModifiedDate":"2022-03-31"},{"lineNumber":117,"author":{"gitId":"janald99"},"content":"    @Test","lastModifiedDate":"2022-03-31"},{"lineNumber":118,"author":{"gitId":"janald99"},"content":"    void getSellRange() {","lastModifiedDate":"2022-03-31"},{"lineNumber":119,"author":{"gitId":"janald99"},"content":"        assertTrue(predicate1.getSellRange(propertyToSellStub1).equals(new PriceRange(100, 500)));","lastModifiedDate":"2022-03-31"},{"lineNumber":120,"author":{"gitId":"janald99"},"content":"    }","lastModifiedDate":"2022-03-31"},{"lineNumber":121,"author":{"gitId":"janald99"},"content":"","lastModifiedDate":"2022-03-31"},{"lineNumber":122,"author":{"gitId":"janald99"},"content":"}","lastModifiedDate":"2022-03-31"}],"authorContributionMap":{"janald99":122}},{"path":"src/test/java/seedu/address/model/seller/HouseTypeMatchBuyerPredicateTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"janald99"},"content":"package seedu.address.model.seller;","lastModifiedDate":"2022-04-07"},{"lineNumber":2,"author":{"gitId":"janald99"},"content":"","lastModifiedDate":"2022-04-07"},{"lineNumber":3,"author":{"gitId":"janald99"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2022-04-07"},{"lineNumber":4,"author":{"gitId":"janald99"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2022-04-07"},{"lineNumber":5,"author":{"gitId":"janald99"},"content":"","lastModifiedDate":"2022-04-07"},{"lineNumber":6,"author":{"gitId":"janald99"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2022-04-07"},{"lineNumber":7,"author":{"gitId":"janald99"},"content":"","lastModifiedDate":"2022-04-07"},{"lineNumber":8,"author":{"gitId":"janald99"},"content":"import seedu.address.model.buyer.Buyer;","lastModifiedDate":"2022-04-07"},{"lineNumber":9,"author":{"gitId":"janald99"},"content":"import seedu.address.model.property.Address;","lastModifiedDate":"2022-04-07"},{"lineNumber":10,"author":{"gitId":"janald99"},"content":"import seedu.address.model.property.House;","lastModifiedDate":"2022-04-07"},{"lineNumber":11,"author":{"gitId":"janald99"},"content":"import seedu.address.model.property.HouseType;","lastModifiedDate":"2022-04-07"},{"lineNumber":12,"author":{"gitId":"janald99"},"content":"import seedu.address.model.property.Location;","lastModifiedDate":"2022-04-07"},{"lineNumber":13,"author":{"gitId":"janald99"},"content":"import seedu.address.model.property.PriceRange;","lastModifiedDate":"2022-04-07"},{"lineNumber":14,"author":{"gitId":"janald99"},"content":"import seedu.address.model.property.PropertyToBuy;","lastModifiedDate":"2022-04-07"},{"lineNumber":15,"author":{"gitId":"janald99"},"content":"import seedu.address.model.property.PropertyToSell;","lastModifiedDate":"2022-04-07"},{"lineNumber":16,"author":{"gitId":"janald99"},"content":"import seedu.address.testutil.BuyerBuilder;","lastModifiedDate":"2022-04-07"},{"lineNumber":17,"author":{"gitId":"janald99"},"content":"import seedu.address.testutil.HouseBuilder;","lastModifiedDate":"2022-04-07"},{"lineNumber":18,"author":{"gitId":"janald99"},"content":"import seedu.address.testutil.PropertyToBuyBuilder;","lastModifiedDate":"2022-04-07"},{"lineNumber":19,"author":{"gitId":"janald99"},"content":"import seedu.address.testutil.PropertyToSellBuilder;","lastModifiedDate":"2022-04-07"},{"lineNumber":20,"author":{"gitId":"janald99"},"content":"import seedu.address.testutil.SellerBuilder;","lastModifiedDate":"2022-04-07"},{"lineNumber":21,"author":{"gitId":"janald99"},"content":"","lastModifiedDate":"2022-04-07"},{"lineNumber":22,"author":{"gitId":"janald99"},"content":"class HouseTypeMatchBuyerPredicateTest {","lastModifiedDate":"2022-04-07"},{"lineNumber":23,"author":{"gitId":"janald99"},"content":"","lastModifiedDate":"2022-04-07"},{"lineNumber":24,"author":{"gitId":"janald99"},"content":"    //property to buy","lastModifiedDate":"2022-04-07"},{"lineNumber":25,"author":{"gitId":"janald99"},"content":"    private PropertyToBuy ptbStub1 \u003d new PropertyToBuyBuilder()","lastModifiedDate":"2022-04-07"},{"lineNumber":26,"author":{"gitId":"janald99"},"content":"            .withHouse(new HouseBuilder().withHouseType(HouseType.BUNGALOW).withLocation(\"Kranji\").build())","lastModifiedDate":"2022-04-07"},{"lineNumber":27,"author":{"gitId":"janald99"},"content":"            .withPriceRange(new PriceRange(0, 100)).build();","lastModifiedDate":"2022-04-07"},{"lineNumber":28,"author":{"gitId":"janald99"},"content":"","lastModifiedDate":"2022-04-07"},{"lineNumber":29,"author":{"gitId":"janald99"},"content":"    private PropertyToBuy ptbStub2 \u003d new PropertyToBuyBuilder()","lastModifiedDate":"2022-04-07"},{"lineNumber":30,"author":{"gitId":"janald99"},"content":"        .withHouse(new HouseBuilder().withHouseType(HouseType.UNSPECIFIED).withLocation(\"Kranji\").build())","lastModifiedDate":"2022-04-07"},{"lineNumber":31,"author":{"gitId":"janald99"},"content":"        .withPriceRange(new PriceRange(0, 100)).build();","lastModifiedDate":"2022-04-07"},{"lineNumber":32,"author":{"gitId":"janald99"},"content":"","lastModifiedDate":"2022-04-07"},{"lineNumber":33,"author":{"gitId":"janald99"},"content":"    private PropertyToBuy ptbStub3 \u003d new PropertyToBuyBuilder()","lastModifiedDate":"2022-04-07"},{"lineNumber":34,"author":{"gitId":"janald99"},"content":"        .withHouse(new HouseBuilder().withHouseType(HouseType.APARTMENT).withLocation(\"Kranji\").build())","lastModifiedDate":"2022-04-07"},{"lineNumber":35,"author":{"gitId":"janald99"},"content":"        .withPriceRange(new PriceRange(0, 100)).build();","lastModifiedDate":"2022-04-07"},{"lineNumber":36,"author":{"gitId":"janald99"},"content":"","lastModifiedDate":"2022-04-07"},{"lineNumber":37,"author":{"gitId":"janald99"},"content":"    //property to sell","lastModifiedDate":"2022-04-07"},{"lineNumber":38,"author":{"gitId":"janald99"},"content":"    private PropertyToSell ptsStub1 \u003d new PropertyToSellBuilder()","lastModifiedDate":"2022-04-07"},{"lineNumber":39,"author":{"gitId":"janald99"},"content":"        .withHouse(new HouseBuilder().withHouseType(HouseType.BUNGALOW).withLocation(\"Kranji\").build())","lastModifiedDate":"2022-04-07"},{"lineNumber":40,"author":{"gitId":"janald99"},"content":"        .withPriceRange(new PriceRange(0, 100)).withAddress(\"ANY ADDRESS\").build();","lastModifiedDate":"2022-04-07"},{"lineNumber":41,"author":{"gitId":"janald99"},"content":"","lastModifiedDate":"2022-04-07"},{"lineNumber":42,"author":{"gitId":"janald99"},"content":"    private PropertyToSell ptsStub2 \u003d new PropertyToSellBuilder()","lastModifiedDate":"2022-04-07"},{"lineNumber":43,"author":{"gitId":"janald99"},"content":"        .withHouse(new HouseBuilder().withHouseType(HouseType.UNSPECIFIED).withLocation(\"Kranji\").build())","lastModifiedDate":"2022-04-07"},{"lineNumber":44,"author":{"gitId":"janald99"},"content":"        .withPriceRange(new PriceRange(0, 100)).withAddress(\"ANY ADDRESS\").build();","lastModifiedDate":"2022-04-07"},{"lineNumber":45,"author":{"gitId":"janald99"},"content":"","lastModifiedDate":"2022-04-07"},{"lineNumber":46,"author":{"gitId":"janald99"},"content":"    private PropertyToSell ptsStub3 \u003d new PropertyToSellBuilder()","lastModifiedDate":"2022-04-07"},{"lineNumber":47,"author":{"gitId":"janald99"},"content":"        .withHouse(new HouseBuilder().withHouseType(HouseType.APARTMENT).withLocation(\"Kranji\").build())","lastModifiedDate":"2022-04-07"},{"lineNumber":48,"author":{"gitId":"janald99"},"content":"        .withPriceRange(new PriceRange(0, 100)).withAddress(\"ANY ADDRESS\").build();","lastModifiedDate":"2022-04-07"},{"lineNumber":49,"author":{"gitId":"janald99"},"content":"","lastModifiedDate":"2022-04-07"},{"lineNumber":50,"author":{"gitId":"janald99"},"content":"    private PropertyToSell ptsStub4 \u003d new PropertyToSellBuilder()","lastModifiedDate":"2022-04-07"},{"lineNumber":51,"author":{"gitId":"janald99"},"content":"        .withHouse(new HouseBuilder().withHouseType(HouseType.COLONIA).withLocation(\"Kranji\").build())","lastModifiedDate":"2022-04-07"},{"lineNumber":52,"author":{"gitId":"janald99"},"content":"        .withPriceRange(new PriceRange(0, 100)).withAddress(\"ANY ADDRESS\").build();","lastModifiedDate":"2022-04-07"},{"lineNumber":53,"author":{"gitId":"janald99"},"content":"","lastModifiedDate":"2022-04-07"},{"lineNumber":54,"author":{"gitId":"janald99"},"content":"    private PropertyToSell ptsStub5 \u003d new PropertyToSellBuilder()","lastModifiedDate":"2022-04-07"},{"lineNumber":55,"author":{"gitId":"janald99"},"content":"        .withHouse(new HouseBuilder().withHouseType(HouseType.CONDOMINIUM).withLocation(\"Kranji\").build())","lastModifiedDate":"2022-04-07"},{"lineNumber":56,"author":{"gitId":"janald99"},"content":"        .withPriceRange(new PriceRange(0, 100)).withAddress(\"ANY ADDRESS\").build();","lastModifiedDate":"2022-04-07"},{"lineNumber":57,"author":{"gitId":"janald99"},"content":"","lastModifiedDate":"2022-04-07"},{"lineNumber":58,"author":{"gitId":"janald99"},"content":"    private Buyer buyer1 \u003d new BuyerBuilder().withProperty(ptbStub1).build();","lastModifiedDate":"2022-04-07"},{"lineNumber":59,"author":{"gitId":"janald99"},"content":"    private Buyer buyer2 \u003d new BuyerBuilder().withProperty(ptbStub2).build();","lastModifiedDate":"2022-04-07"},{"lineNumber":60,"author":{"gitId":"janald99"},"content":"    private Buyer buyer3 \u003d new BuyerBuilder().withProperty(ptbStub3).build();","lastModifiedDate":"2022-04-07"},{"lineNumber":61,"author":{"gitId":"janald99"},"content":"","lastModifiedDate":"2022-04-07"},{"lineNumber":62,"author":{"gitId":"janald99"},"content":"    private Seller seller1 \u003d new SellerBuilder().withProperty(ptsStub1).build();","lastModifiedDate":"2022-04-07"},{"lineNumber":63,"author":{"gitId":"janald99"},"content":"    private Seller seller2 \u003d new SellerBuilder().withProperty(ptsStub2).build();","lastModifiedDate":"2022-04-07"},{"lineNumber":64,"author":{"gitId":"janald99"},"content":"    private Seller seller3 \u003d new SellerBuilder().withProperty(ptsStub3).build();","lastModifiedDate":"2022-04-07"},{"lineNumber":65,"author":{"gitId":"janald99"},"content":"    private Seller seller4 \u003d new SellerBuilder().withProperty(ptsStub4).build();","lastModifiedDate":"2022-04-07"},{"lineNumber":66,"author":{"gitId":"janald99"},"content":"    private Seller seller5 \u003d new SellerBuilder().withProperty(ptsStub5).build();","lastModifiedDate":"2022-04-07"},{"lineNumber":67,"author":{"gitId":"janald99"},"content":"","lastModifiedDate":"2022-04-07"},{"lineNumber":68,"author":{"gitId":"janald99"},"content":"    private HouseTypeMatchBuyerPredicate predicate1 \u003d new HouseTypeMatchBuyerPredicate(buyer1);","lastModifiedDate":"2022-04-07"},{"lineNumber":69,"author":{"gitId":"janald99"},"content":"    private HouseTypeMatchBuyerPredicate predicate2 \u003d new HouseTypeMatchBuyerPredicate(buyer2);","lastModifiedDate":"2022-04-07"},{"lineNumber":70,"author":{"gitId":"janald99"},"content":"    private HouseTypeMatchBuyerPredicate predicate3 \u003d new HouseTypeMatchBuyerPredicate(buyer3);","lastModifiedDate":"2022-04-07"},{"lineNumber":71,"author":{"gitId":"janald99"},"content":"","lastModifiedDate":"2022-04-07"},{"lineNumber":72,"author":{"gitId":"janald99"},"content":"    @Test","lastModifiedDate":"2022-04-07"},{"lineNumber":73,"author":{"gitId":"janald99"},"content":"    void test1() {","lastModifiedDate":"2022-04-07"},{"lineNumber":74,"author":{"gitId":"janald99"},"content":"        //exactly the same.","lastModifiedDate":"2022-04-07"},{"lineNumber":75,"author":{"gitId":"janald99"},"content":"        assertTrue(predicate1.test(seller1));","lastModifiedDate":"2022-04-07"},{"lineNumber":76,"author":{"gitId":"janald99"},"content":"        assertTrue(predicate3.test(seller3));","lastModifiedDate":"2022-04-07"},{"lineNumber":77,"author":{"gitId":"janald99"},"content":"","lastModifiedDate":"2022-04-07"},{"lineNumber":78,"author":{"gitId":"janald99"},"content":"        //buyer is unspecified house type","lastModifiedDate":"2022-04-07"},{"lineNumber":79,"author":{"gitId":"janald99"},"content":"        assertTrue(predicate2.test(seller1));","lastModifiedDate":"2022-04-07"},{"lineNumber":80,"author":{"gitId":"janald99"},"content":"        assertTrue(predicate2.test(seller2));","lastModifiedDate":"2022-04-07"},{"lineNumber":81,"author":{"gitId":"janald99"},"content":"        assertTrue(predicate2.test(seller3));","lastModifiedDate":"2022-04-07"},{"lineNumber":82,"author":{"gitId":"janald99"},"content":"        assertTrue(predicate2.test(seller4));","lastModifiedDate":"2022-04-07"},{"lineNumber":83,"author":{"gitId":"janald99"},"content":"        assertTrue(predicate2.test(seller5));","lastModifiedDate":"2022-04-07"},{"lineNumber":84,"author":{"gitId":"janald99"},"content":"","lastModifiedDate":"2022-04-07"},{"lineNumber":85,"author":{"gitId":"janald99"},"content":"        //wrong house type","lastModifiedDate":"2022-04-07"},{"lineNumber":86,"author":{"gitId":"janald99"},"content":"        assertFalse(predicate1.test(seller3));","lastModifiedDate":"2022-04-07"},{"lineNumber":87,"author":{"gitId":"janald99"},"content":"        assertFalse(predicate1.test(seller4));","lastModifiedDate":"2022-04-07"},{"lineNumber":88,"author":{"gitId":"janald99"},"content":"        assertFalse(predicate1.test(seller5));","lastModifiedDate":"2022-04-07"},{"lineNumber":89,"author":{"gitId":"janald99"},"content":"","lastModifiedDate":"2022-04-07"},{"lineNumber":90,"author":{"gitId":"janald99"},"content":"        assertFalse(predicate3.test(seller1));","lastModifiedDate":"2022-04-07"},{"lineNumber":91,"author":{"gitId":"janald99"},"content":"        assertFalse(predicate3.test(seller2));","lastModifiedDate":"2022-04-07"},{"lineNumber":92,"author":{"gitId":"janald99"},"content":"        assertFalse(predicate3.test(seller4));","lastModifiedDate":"2022-04-07"},{"lineNumber":93,"author":{"gitId":"janald99"},"content":"        assertFalse(predicate3.test(seller5));","lastModifiedDate":"2022-04-07"},{"lineNumber":94,"author":{"gitId":"janald99"},"content":"    }","lastModifiedDate":"2022-04-07"},{"lineNumber":95,"author":{"gitId":"janald99"},"content":"","lastModifiedDate":"2022-04-07"},{"lineNumber":96,"author":{"gitId":"janald99"},"content":"    @Test","lastModifiedDate":"2022-04-07"},{"lineNumber":97,"author":{"gitId":"janald99"},"content":"    void getPropertyToBuy() {","lastModifiedDate":"2022-04-07"},{"lineNumber":98,"author":{"gitId":"janald99"},"content":"        assertTrue(predicate1.getPropertyToBuy().equals(new PropertyToBuy(","lastModifiedDate":"2022-04-07"},{"lineNumber":99,"author":{"gitId":"janald99"},"content":"            new House(HouseType.BUNGALOW, new Location(\"Kranji\")),","lastModifiedDate":"2022-04-07"},{"lineNumber":100,"author":{"gitId":"janald99"},"content":"            new PriceRange(0, 100))));","lastModifiedDate":"2022-04-07"},{"lineNumber":101,"author":{"gitId":"janald99"},"content":"","lastModifiedDate":"2022-04-07"},{"lineNumber":102,"author":{"gitId":"janald99"},"content":"        assertFalse(predicate1.getPropertyToBuy().equals(new PropertyToBuy(","lastModifiedDate":"2022-04-07"},{"lineNumber":103,"author":{"gitId":"janald99"},"content":"            new House(HouseType.BUNGALOW, new Location(\"Kranji\")),","lastModifiedDate":"2022-04-07"},{"lineNumber":104,"author":{"gitId":"janald99"},"content":"            new PriceRange(0, 200))));","lastModifiedDate":"2022-04-07"},{"lineNumber":105,"author":{"gitId":"janald99"},"content":"","lastModifiedDate":"2022-04-07"},{"lineNumber":106,"author":{"gitId":"janald99"},"content":"        assertFalse(predicate1.getPropertyToBuy().equals(new PropertyToBuy(","lastModifiedDate":"2022-04-07"},{"lineNumber":107,"author":{"gitId":"janald99"},"content":"            new House(HouseType.BUNGALOW, new Location(\"Crunchy\")),","lastModifiedDate":"2022-04-07"},{"lineNumber":108,"author":{"gitId":"janald99"},"content":"            new PriceRange(0, 100))));","lastModifiedDate":"2022-04-07"},{"lineNumber":109,"author":{"gitId":"janald99"},"content":"","lastModifiedDate":"2022-04-07"},{"lineNumber":110,"author":{"gitId":"janald99"},"content":"        assertFalse(predicate1.getPropertyToBuy().equals(new PropertyToBuy(","lastModifiedDate":"2022-04-07"},{"lineNumber":111,"author":{"gitId":"janald99"},"content":"            new House(HouseType.COLONIA, new Location(\"Kranji\")),","lastModifiedDate":"2022-04-07"},{"lineNumber":112,"author":{"gitId":"janald99"},"content":"            new PriceRange(0, 100))));","lastModifiedDate":"2022-04-07"},{"lineNumber":113,"author":{"gitId":"janald99"},"content":"    }","lastModifiedDate":"2022-04-07"},{"lineNumber":114,"author":{"gitId":"janald99"},"content":"","lastModifiedDate":"2022-04-07"},{"lineNumber":115,"author":{"gitId":"janald99"},"content":"    @Test","lastModifiedDate":"2022-04-07"},{"lineNumber":116,"author":{"gitId":"janald99"},"content":"    void getPropertyToSell() {","lastModifiedDate":"2022-04-07"},{"lineNumber":117,"author":{"gitId":"janald99"},"content":"        assertTrue(predicate1.getPropertyToSell(seller1).equals(new PropertyToSell(","lastModifiedDate":"2022-04-07"},{"lineNumber":118,"author":{"gitId":"janald99"},"content":"            new House(HouseType.BUNGALOW, new Location(\"Kranji\")),","lastModifiedDate":"2022-04-07"},{"lineNumber":119,"author":{"gitId":"janald99"},"content":"            new PriceRange(0, 100), new Address(\"ANY ADDRESS\"))));","lastModifiedDate":"2022-04-07"},{"lineNumber":120,"author":{"gitId":"janald99"},"content":"    }","lastModifiedDate":"2022-04-07"},{"lineNumber":121,"author":{"gitId":"janald99"},"content":"}","lastModifiedDate":"2022-04-07"}],"authorContributionMap":{"janald99":121}},{"path":"src/test/java/seedu/address/model/seller/LocationMatchBuyerPredicateTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"janald99"},"content":"package seedu.address.model.seller;","lastModifiedDate":"2022-04-07"},{"lineNumber":2,"author":{"gitId":"janald99"},"content":"","lastModifiedDate":"2022-04-07"},{"lineNumber":3,"author":{"gitId":"janald99"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2022-04-07"},{"lineNumber":4,"author":{"gitId":"janald99"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2022-04-07"},{"lineNumber":5,"author":{"gitId":"janald99"},"content":"","lastModifiedDate":"2022-04-07"},{"lineNumber":6,"author":{"gitId":"janald99"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2022-04-07"},{"lineNumber":7,"author":{"gitId":"janald99"},"content":"","lastModifiedDate":"2022-04-07"},{"lineNumber":8,"author":{"gitId":"janald99"},"content":"import seedu.address.model.buyer.Buyer;","lastModifiedDate":"2022-04-07"},{"lineNumber":9,"author":{"gitId":"janald99"},"content":"import seedu.address.model.property.Address;","lastModifiedDate":"2022-04-07"},{"lineNumber":10,"author":{"gitId":"janald99"},"content":"import seedu.address.model.property.House;","lastModifiedDate":"2022-04-07"},{"lineNumber":11,"author":{"gitId":"janald99"},"content":"import seedu.address.model.property.HouseType;","lastModifiedDate":"2022-04-07"},{"lineNumber":12,"author":{"gitId":"janald99"},"content":"import seedu.address.model.property.Location;","lastModifiedDate":"2022-04-07"},{"lineNumber":13,"author":{"gitId":"janald99"},"content":"import seedu.address.model.property.PriceRange;","lastModifiedDate":"2022-04-07"},{"lineNumber":14,"author":{"gitId":"janald99"},"content":"import seedu.address.model.property.PropertyToBuy;","lastModifiedDate":"2022-04-07"},{"lineNumber":15,"author":{"gitId":"janald99"},"content":"import seedu.address.model.property.PropertyToSell;","lastModifiedDate":"2022-04-07"},{"lineNumber":16,"author":{"gitId":"janald99"},"content":"import seedu.address.testutil.BuyerBuilder;","lastModifiedDate":"2022-04-07"},{"lineNumber":17,"author":{"gitId":"janald99"},"content":"import seedu.address.testutil.HouseBuilder;","lastModifiedDate":"2022-04-07"},{"lineNumber":18,"author":{"gitId":"janald99"},"content":"import seedu.address.testutil.PropertyToBuyBuilder;","lastModifiedDate":"2022-04-07"},{"lineNumber":19,"author":{"gitId":"janald99"},"content":"import seedu.address.testutil.PropertyToSellBuilder;","lastModifiedDate":"2022-04-07"},{"lineNumber":20,"author":{"gitId":"janald99"},"content":"import seedu.address.testutil.SellerBuilder;","lastModifiedDate":"2022-04-07"},{"lineNumber":21,"author":{"gitId":"janald99"},"content":"","lastModifiedDate":"2022-04-07"},{"lineNumber":22,"author":{"gitId":"janald99"},"content":"class LocationMatchBuyerPredicateTest {","lastModifiedDate":"2022-04-07"},{"lineNumber":23,"author":{"gitId":"janald99"},"content":"","lastModifiedDate":"2022-04-07"},{"lineNumber":24,"author":{"gitId":"janald99"},"content":"    //property to buy","lastModifiedDate":"2022-04-07"},{"lineNumber":25,"author":{"gitId":"janald99"},"content":"    private PropertyToBuy ptbStub1 \u003d new PropertyToBuyBuilder()","lastModifiedDate":"2022-04-07"},{"lineNumber":26,"author":{"gitId":"janald99"},"content":"        .withHouse(new HouseBuilder().withHouseType(HouseType.BUNGALOW).withLocation(\"Kranji\").build())","lastModifiedDate":"2022-04-07"},{"lineNumber":27,"author":{"gitId":"janald99"},"content":"        .withPriceRange(new PriceRange(0, 100)).build();","lastModifiedDate":"2022-04-07"},{"lineNumber":28,"author":{"gitId":"janald99"},"content":"","lastModifiedDate":"2022-04-07"},{"lineNumber":29,"author":{"gitId":"janald99"},"content":"    //property to sell","lastModifiedDate":"2022-04-07"},{"lineNumber":30,"author":{"gitId":"janald99"},"content":"    private PropertyToSell ptsStub1 \u003d new PropertyToSellBuilder()","lastModifiedDate":"2022-04-07"},{"lineNumber":31,"author":{"gitId":"janald99"},"content":"        .withHouse(new HouseBuilder().withHouseType(HouseType.BUNGALOW).withLocation(\"Kranji\").build())","lastModifiedDate":"2022-04-07"},{"lineNumber":32,"author":{"gitId":"janald99"},"content":"        .withPriceRange(new PriceRange(0, 100)).withAddress(\"ANY ADDRESS\").build();","lastModifiedDate":"2022-04-07"},{"lineNumber":33,"author":{"gitId":"janald99"},"content":"","lastModifiedDate":"2022-04-07"},{"lineNumber":34,"author":{"gitId":"janald99"},"content":"    private PropertyToSell ptsStub2 \u003d new PropertyToSellBuilder()","lastModifiedDate":"2022-04-07"},{"lineNumber":35,"author":{"gitId":"janald99"},"content":"        .withHouse(new HouseBuilder().withHouseType(HouseType.BUNGALOW).withLocation(\"Crunchy\").build())","lastModifiedDate":"2022-04-07"},{"lineNumber":36,"author":{"gitId":"janald99"},"content":"        .withPriceRange(new PriceRange(0, 100)).withAddress(\"ANY ADDRESS\").build();","lastModifiedDate":"2022-04-07"},{"lineNumber":37,"author":{"gitId":"janald99"},"content":"","lastModifiedDate":"2022-04-07"},{"lineNumber":38,"author":{"gitId":"janald99"},"content":"    private PropertyToSell ptsStub3 \u003d new PropertyToSellBuilder()","lastModifiedDate":"2022-04-07"},{"lineNumber":39,"author":{"gitId":"janald99"},"content":"        .withHouse(new HouseBuilder().withHouseType(HouseType.BUNGALOW).withLocation(\"kranji\").build())","lastModifiedDate":"2022-04-07"},{"lineNumber":40,"author":{"gitId":"janald99"},"content":"        .withPriceRange(new PriceRange(0, 100)).withAddress(\"ANY ADDRESS\").build();","lastModifiedDate":"2022-04-07"},{"lineNumber":41,"author":{"gitId":"janald99"},"content":"","lastModifiedDate":"2022-04-07"},{"lineNumber":42,"author":{"gitId":"janald99"},"content":"    private PropertyToSell ptsStub4 \u003d new PropertyToSellBuilder()","lastModifiedDate":"2022-04-07"},{"lineNumber":43,"author":{"gitId":"janald99"},"content":"        .withHouse(new HouseBuilder().withHouseType(HouseType.BUNGALOW).withLocation(\"kRaNji\").build())","lastModifiedDate":"2022-04-07"},{"lineNumber":44,"author":{"gitId":"janald99"},"content":"        .withPriceRange(new PriceRange(0, 100)).withAddress(\"ANY ADDRESS\").build();","lastModifiedDate":"2022-04-07"},{"lineNumber":45,"author":{"gitId":"janald99"},"content":"","lastModifiedDate":"2022-04-07"},{"lineNumber":46,"author":{"gitId":"janald99"},"content":"","lastModifiedDate":"2022-04-07"},{"lineNumber":47,"author":{"gitId":"janald99"},"content":"","lastModifiedDate":"2022-04-07"},{"lineNumber":48,"author":{"gitId":"janald99"},"content":"    private Buyer buyer1 \u003d new BuyerBuilder().withProperty(ptbStub1).build();","lastModifiedDate":"2022-04-07"},{"lineNumber":49,"author":{"gitId":"janald99"},"content":"","lastModifiedDate":"2022-04-07"},{"lineNumber":50,"author":{"gitId":"janald99"},"content":"    private Seller seller1 \u003d new SellerBuilder().withProperty(ptsStub1).build();","lastModifiedDate":"2022-04-07"},{"lineNumber":51,"author":{"gitId":"janald99"},"content":"    private Seller seller2 \u003d new SellerBuilder().withProperty(ptsStub2).build();","lastModifiedDate":"2022-04-07"},{"lineNumber":52,"author":{"gitId":"janald99"},"content":"    private Seller seller3 \u003d new SellerBuilder().withProperty(ptsStub3).build();","lastModifiedDate":"2022-04-07"},{"lineNumber":53,"author":{"gitId":"janald99"},"content":"    private Seller seller4 \u003d new SellerBuilder().withProperty(ptsStub4).build();","lastModifiedDate":"2022-04-07"},{"lineNumber":54,"author":{"gitId":"janald99"},"content":"","lastModifiedDate":"2022-04-07"},{"lineNumber":55,"author":{"gitId":"janald99"},"content":"    private LocationMatchBuyerPredicate predicate1 \u003d new LocationMatchBuyerPredicate(buyer1);","lastModifiedDate":"2022-04-07"},{"lineNumber":56,"author":{"gitId":"janald99"},"content":"","lastModifiedDate":"2022-04-07"},{"lineNumber":57,"author":{"gitId":"janald99"},"content":"    @Test","lastModifiedDate":"2022-04-07"},{"lineNumber":58,"author":{"gitId":"janald99"},"content":"    void test1() {","lastModifiedDate":"2022-04-07"},{"lineNumber":59,"author":{"gitId":"janald99"},"content":"        //exactly same","lastModifiedDate":"2022-04-07"},{"lineNumber":60,"author":{"gitId":"janald99"},"content":"        assertTrue(predicate1.test(seller1));","lastModifiedDate":"2022-04-07"},{"lineNumber":61,"author":{"gitId":"janald99"},"content":"","lastModifiedDate":"2022-04-07"},{"lineNumber":62,"author":{"gitId":"janald99"},"content":"        //Case INSENSITIVE.","lastModifiedDate":"2022-04-07"},{"lineNumber":63,"author":{"gitId":"janald99"},"content":"        assertTrue(predicate1.test(seller3));","lastModifiedDate":"2022-04-07"},{"lineNumber":64,"author":{"gitId":"janald99"},"content":"        assertTrue(predicate1.test(seller4));","lastModifiedDate":"2022-04-07"},{"lineNumber":65,"author":{"gitId":"janald99"},"content":"","lastModifiedDate":"2022-04-07"},{"lineNumber":66,"author":{"gitId":"janald99"},"content":"        //Different location","lastModifiedDate":"2022-04-07"},{"lineNumber":67,"author":{"gitId":"janald99"},"content":"        assertFalse(predicate1.test(seller2));","lastModifiedDate":"2022-04-07"},{"lineNumber":68,"author":{"gitId":"janald99"},"content":"    }","lastModifiedDate":"2022-04-07"},{"lineNumber":69,"author":{"gitId":"janald99"},"content":"","lastModifiedDate":"2022-04-07"},{"lineNumber":70,"author":{"gitId":"janald99"},"content":"    @Test","lastModifiedDate":"2022-04-07"},{"lineNumber":71,"author":{"gitId":"janald99"},"content":"    void getPropertyToBuy() {","lastModifiedDate":"2022-04-07"},{"lineNumber":72,"author":{"gitId":"janald99"},"content":"        assertTrue(predicate1.getPropertyToBuy().equals(new PropertyToBuy(","lastModifiedDate":"2022-04-07"},{"lineNumber":73,"author":{"gitId":"janald99"},"content":"            new House(HouseType.BUNGALOW, new Location(\"Kranji\")),","lastModifiedDate":"2022-04-07"},{"lineNumber":74,"author":{"gitId":"janald99"},"content":"            new PriceRange(0, 100))));","lastModifiedDate":"2022-04-07"},{"lineNumber":75,"author":{"gitId":"janald99"},"content":"","lastModifiedDate":"2022-04-07"},{"lineNumber":76,"author":{"gitId":"janald99"},"content":"        assertFalse(predicate1.getPropertyToBuy().equals(new PropertyToBuy(","lastModifiedDate":"2022-04-07"},{"lineNumber":77,"author":{"gitId":"janald99"},"content":"            new House(HouseType.BUNGALOW, new Location(\"Kranji\")),","lastModifiedDate":"2022-04-07"},{"lineNumber":78,"author":{"gitId":"janald99"},"content":"            new PriceRange(0, 200))));","lastModifiedDate":"2022-04-07"},{"lineNumber":79,"author":{"gitId":"janald99"},"content":"","lastModifiedDate":"2022-04-07"},{"lineNumber":80,"author":{"gitId":"janald99"},"content":"        assertFalse(predicate1.getPropertyToBuy().equals(new PropertyToBuy(","lastModifiedDate":"2022-04-07"},{"lineNumber":81,"author":{"gitId":"janald99"},"content":"            new House(HouseType.BUNGALOW, new Location(\"Crunchy\")),","lastModifiedDate":"2022-04-07"},{"lineNumber":82,"author":{"gitId":"janald99"},"content":"            new PriceRange(0, 100))));","lastModifiedDate":"2022-04-07"},{"lineNumber":83,"author":{"gitId":"janald99"},"content":"","lastModifiedDate":"2022-04-07"},{"lineNumber":84,"author":{"gitId":"janald99"},"content":"        assertFalse(predicate1.getPropertyToBuy().equals(new PropertyToBuy(","lastModifiedDate":"2022-04-07"},{"lineNumber":85,"author":{"gitId":"janald99"},"content":"            new House(HouseType.COLONIA, new Location(\"Kranji\")),","lastModifiedDate":"2022-04-07"},{"lineNumber":86,"author":{"gitId":"janald99"},"content":"            new PriceRange(0, 100))));","lastModifiedDate":"2022-04-07"},{"lineNumber":87,"author":{"gitId":"janald99"},"content":"    }","lastModifiedDate":"2022-04-07"},{"lineNumber":88,"author":{"gitId":"janald99"},"content":"","lastModifiedDate":"2022-04-07"},{"lineNumber":89,"author":{"gitId":"janald99"},"content":"    @Test","lastModifiedDate":"2022-04-07"},{"lineNumber":90,"author":{"gitId":"janald99"},"content":"    void getPropertyToSell() {","lastModifiedDate":"2022-04-07"},{"lineNumber":91,"author":{"gitId":"janald99"},"content":"        assertTrue(predicate1.getPropertyToSell(seller1).equals(new PropertyToSell(","lastModifiedDate":"2022-04-07"},{"lineNumber":92,"author":{"gitId":"janald99"},"content":"            new House(HouseType.BUNGALOW, new Location(\"Kranji\")),","lastModifiedDate":"2022-04-07"},{"lineNumber":93,"author":{"gitId":"janald99"},"content":"            new PriceRange(0, 100), new Address(\"ANY ADDRESS\"))));","lastModifiedDate":"2022-04-07"},{"lineNumber":94,"author":{"gitId":"janald99"},"content":"    }","lastModifiedDate":"2022-04-07"},{"lineNumber":95,"author":{"gitId":"janald99"},"content":"}","lastModifiedDate":"2022-04-07"}],"authorContributionMap":{"janald99":95}},{"path":"src/test/java/seedu/address/model/seller/PriceRangeMatchBuyerPredicateTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"janald99"},"content":"package seedu.address.model.seller;","lastModifiedDate":"2022-04-07"},{"lineNumber":2,"author":{"gitId":"janald99"},"content":"","lastModifiedDate":"2022-04-07"},{"lineNumber":3,"author":{"gitId":"janald99"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2022-04-07"},{"lineNumber":4,"author":{"gitId":"janald99"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2022-04-07"},{"lineNumber":5,"author":{"gitId":"janald99"},"content":"","lastModifiedDate":"2022-04-07"},{"lineNumber":6,"author":{"gitId":"janald99"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2022-04-07"},{"lineNumber":7,"author":{"gitId":"janald99"},"content":"","lastModifiedDate":"2022-04-07"},{"lineNumber":8,"author":{"gitId":"janald99"},"content":"import seedu.address.model.buyer.Buyer;","lastModifiedDate":"2022-04-07"},{"lineNumber":9,"author":{"gitId":"janald99"},"content":"import seedu.address.model.property.Address;","lastModifiedDate":"2022-04-07"},{"lineNumber":10,"author":{"gitId":"janald99"},"content":"import seedu.address.model.property.House;","lastModifiedDate":"2022-04-07"},{"lineNumber":11,"author":{"gitId":"janald99"},"content":"import seedu.address.model.property.HouseType;","lastModifiedDate":"2022-04-07"},{"lineNumber":12,"author":{"gitId":"janald99"},"content":"import seedu.address.model.property.Location;","lastModifiedDate":"2022-04-07"},{"lineNumber":13,"author":{"gitId":"janald99"},"content":"import seedu.address.model.property.PriceRange;","lastModifiedDate":"2022-04-07"},{"lineNumber":14,"author":{"gitId":"janald99"},"content":"import seedu.address.model.property.PropertyToBuy;","lastModifiedDate":"2022-04-07"},{"lineNumber":15,"author":{"gitId":"janald99"},"content":"import seedu.address.model.property.PropertyToSell;","lastModifiedDate":"2022-04-07"},{"lineNumber":16,"author":{"gitId":"janald99"},"content":"import seedu.address.testutil.BuyerBuilder;","lastModifiedDate":"2022-04-07"},{"lineNumber":17,"author":{"gitId":"janald99"},"content":"import seedu.address.testutil.HouseBuilder;","lastModifiedDate":"2022-04-07"},{"lineNumber":18,"author":{"gitId":"janald99"},"content":"import seedu.address.testutil.PropertyToBuyBuilder;","lastModifiedDate":"2022-04-07"},{"lineNumber":19,"author":{"gitId":"janald99"},"content":"import seedu.address.testutil.PropertyToSellBuilder;","lastModifiedDate":"2022-04-07"},{"lineNumber":20,"author":{"gitId":"janald99"},"content":"import seedu.address.testutil.SellerBuilder;","lastModifiedDate":"2022-04-07"},{"lineNumber":21,"author":{"gitId":"janald99"},"content":"","lastModifiedDate":"2022-04-07"},{"lineNumber":22,"author":{"gitId":"janald99"},"content":"class PriceRangeMatchBuyerPredicateTest {","lastModifiedDate":"2022-04-07"},{"lineNumber":23,"author":{"gitId":"janald99"},"content":"","lastModifiedDate":"2022-04-07"},{"lineNumber":24,"author":{"gitId":"janald99"},"content":"    //property to buy","lastModifiedDate":"2022-04-07"},{"lineNumber":25,"author":{"gitId":"janald99"},"content":"    private PropertyToBuy ptbStub1 \u003d new PropertyToBuyBuilder()","lastModifiedDate":"2022-04-07"},{"lineNumber":26,"author":{"gitId":"janald99"},"content":"        .withHouse(new HouseBuilder().withHouseType(HouseType.BUNGALOW).withLocation(\"Kranji\").build())","lastModifiedDate":"2022-04-07"},{"lineNumber":27,"author":{"gitId":"janald99"},"content":"        .withPriceRange(new PriceRange(20, 100)).build();","lastModifiedDate":"2022-04-07"},{"lineNumber":28,"author":{"gitId":"janald99"},"content":"","lastModifiedDate":"2022-04-07"},{"lineNumber":29,"author":{"gitId":"janald99"},"content":"    private PropertyToSell ptsStub1 \u003d new PropertyToSellBuilder()","lastModifiedDate":"2022-04-07"},{"lineNumber":30,"author":{"gitId":"janald99"},"content":"        .withHouse(new HouseBuilder().withHouseType(HouseType.BUNGALOW).withLocation(\"Kranji\").build())","lastModifiedDate":"2022-04-07"},{"lineNumber":31,"author":{"gitId":"janald99"},"content":"        .withPriceRange(new PriceRange(20, 100)).withAddress(\"ANY ADDRESS\").build();","lastModifiedDate":"2022-04-07"},{"lineNumber":32,"author":{"gitId":"janald99"},"content":"","lastModifiedDate":"2022-04-07"},{"lineNumber":33,"author":{"gitId":"janald99"},"content":"    private PropertyToSell ptsStub2 \u003d new PropertyToSellBuilder()","lastModifiedDate":"2022-04-07"},{"lineNumber":34,"author":{"gitId":"janald99"},"content":"        .withHouse(new HouseBuilder().withHouseType(HouseType.BUNGALOW).withLocation(\"Kranji\").build())","lastModifiedDate":"2022-04-07"},{"lineNumber":35,"author":{"gitId":"janald99"},"content":"        .withPriceRange(new PriceRange(0, 200)).withAddress(\"ANY ADDRESS\").build();","lastModifiedDate":"2022-04-07"},{"lineNumber":36,"author":{"gitId":"janald99"},"content":"","lastModifiedDate":"2022-04-07"},{"lineNumber":37,"author":{"gitId":"janald99"},"content":"    private PropertyToSell ptsStub3 \u003d new PropertyToSellBuilder()","lastModifiedDate":"2022-04-07"},{"lineNumber":38,"author":{"gitId":"janald99"},"content":"        .withHouse(new HouseBuilder().withHouseType(HouseType.BUNGALOW).withLocation(\"Kranji\").build())","lastModifiedDate":"2022-04-07"},{"lineNumber":39,"author":{"gitId":"janald99"},"content":"        .withPriceRange(new PriceRange(50, 50)).withAddress(\"ANY ADDRESS\").build();","lastModifiedDate":"2022-04-07"},{"lineNumber":40,"author":{"gitId":"janald99"},"content":"","lastModifiedDate":"2022-04-07"},{"lineNumber":41,"author":{"gitId":"janald99"},"content":"    private PropertyToSell ptsStub4 \u003d new PropertyToSellBuilder()","lastModifiedDate":"2022-04-07"},{"lineNumber":42,"author":{"gitId":"janald99"},"content":"        .withHouse(new HouseBuilder().withHouseType(HouseType.BUNGALOW).withLocation(\"Kranji\").build())","lastModifiedDate":"2022-04-07"},{"lineNumber":43,"author":{"gitId":"janald99"},"content":"        .withPriceRange(new PriceRange(18, 20)).withAddress(\"ANY ADDRESS\").build();","lastModifiedDate":"2022-04-07"},{"lineNumber":44,"author":{"gitId":"janald99"},"content":"","lastModifiedDate":"2022-04-07"},{"lineNumber":45,"author":{"gitId":"janald99"},"content":"    private PropertyToSell ptsStub5 \u003d new PropertyToSellBuilder()","lastModifiedDate":"2022-04-07"},{"lineNumber":46,"author":{"gitId":"janald99"},"content":"        .withHouse(new HouseBuilder().withHouseType(HouseType.BUNGALOW).withLocation(\"Kranji\").build())","lastModifiedDate":"2022-04-07"},{"lineNumber":47,"author":{"gitId":"janald99"},"content":"        .withPriceRange(new PriceRange(100, 100)).withAddress(\"ANY ADDRESS\").build();","lastModifiedDate":"2022-04-07"},{"lineNumber":48,"author":{"gitId":"janald99"},"content":"","lastModifiedDate":"2022-04-07"},{"lineNumber":49,"author":{"gitId":"janald99"},"content":"    private PropertyToSell ptsStub6 \u003d new PropertyToSellBuilder()","lastModifiedDate":"2022-04-07"},{"lineNumber":50,"author":{"gitId":"janald99"},"content":"        .withHouse(new HouseBuilder().withHouseType(HouseType.BUNGALOW).withLocation(\"Kranji\").build())","lastModifiedDate":"2022-04-07"},{"lineNumber":51,"author":{"gitId":"janald99"},"content":"        .withPriceRange(new PriceRange(0, 19)).withAddress(\"ANY ADDRESS\").build();","lastModifiedDate":"2022-04-07"},{"lineNumber":52,"author":{"gitId":"janald99"},"content":"","lastModifiedDate":"2022-04-07"},{"lineNumber":53,"author":{"gitId":"janald99"},"content":"    private PropertyToSell ptsStub7 \u003d new PropertyToSellBuilder()","lastModifiedDate":"2022-04-07"},{"lineNumber":54,"author":{"gitId":"janald99"},"content":"        .withHouse(new HouseBuilder().withHouseType(HouseType.BUNGALOW).withLocation(\"Kranji\").build())","lastModifiedDate":"2022-04-07"},{"lineNumber":55,"author":{"gitId":"janald99"},"content":"        .withPriceRange(new PriceRange(101, 200)).withAddress(\"ANY ADDRESS\").build();","lastModifiedDate":"2022-04-07"},{"lineNumber":56,"author":{"gitId":"janald99"},"content":"","lastModifiedDate":"2022-04-07"},{"lineNumber":57,"author":{"gitId":"janald99"},"content":"    private Buyer buyer1 \u003d new BuyerBuilder().withProperty(ptbStub1).build();","lastModifiedDate":"2022-04-07"},{"lineNumber":58,"author":{"gitId":"janald99"},"content":"","lastModifiedDate":"2022-04-07"},{"lineNumber":59,"author":{"gitId":"janald99"},"content":"    private Seller seller1 \u003d new SellerBuilder().withProperty(ptsStub1).build();","lastModifiedDate":"2022-04-07"},{"lineNumber":60,"author":{"gitId":"janald99"},"content":"    private Seller seller2 \u003d new SellerBuilder().withProperty(ptsStub2).build();","lastModifiedDate":"2022-04-07"},{"lineNumber":61,"author":{"gitId":"janald99"},"content":"    private Seller seller3 \u003d new SellerBuilder().withProperty(ptsStub3).build();","lastModifiedDate":"2022-04-07"},{"lineNumber":62,"author":{"gitId":"janald99"},"content":"    private Seller seller4 \u003d new SellerBuilder().withProperty(ptsStub4).build();","lastModifiedDate":"2022-04-07"},{"lineNumber":63,"author":{"gitId":"janald99"},"content":"    private Seller seller5 \u003d new SellerBuilder().withProperty(ptsStub5).build();","lastModifiedDate":"2022-04-07"},{"lineNumber":64,"author":{"gitId":"janald99"},"content":"    private Seller seller6 \u003d new SellerBuilder().withProperty(ptsStub6).build();","lastModifiedDate":"2022-04-07"},{"lineNumber":65,"author":{"gitId":"janald99"},"content":"    private Seller seller7 \u003d new SellerBuilder().withProperty(ptsStub7).build();","lastModifiedDate":"2022-04-07"},{"lineNumber":66,"author":{"gitId":"janald99"},"content":"","lastModifiedDate":"2022-04-07"},{"lineNumber":67,"author":{"gitId":"janald99"},"content":"    private PriceRangeMatchBuyerPredicate predicate1 \u003d new PriceRangeMatchBuyerPredicate(buyer1);","lastModifiedDate":"2022-04-07"},{"lineNumber":68,"author":{"gitId":"janald99"},"content":"","lastModifiedDate":"2022-04-07"},{"lineNumber":69,"author":{"gitId":"janald99"},"content":"    @Test","lastModifiedDate":"2022-04-07"},{"lineNumber":70,"author":{"gitId":"janald99"},"content":"    void test1() {","lastModifiedDate":"2022-04-07"},{"lineNumber":71,"author":{"gitId":"janald99"},"content":"        //price range matches","lastModifiedDate":"2022-04-07"},{"lineNumber":72,"author":{"gitId":"janald99"},"content":"        assertTrue(predicate1.test(seller1));","lastModifiedDate":"2022-04-07"},{"lineNumber":73,"author":{"gitId":"janald99"},"content":"        assertTrue(predicate1.test(seller2));","lastModifiedDate":"2022-04-07"},{"lineNumber":74,"author":{"gitId":"janald99"},"content":"        assertTrue(predicate1.test(seller3));","lastModifiedDate":"2022-04-07"},{"lineNumber":75,"author":{"gitId":"janald99"},"content":"        //boundary values should work as match is inclusive","lastModifiedDate":"2022-04-07"},{"lineNumber":76,"author":{"gitId":"janald99"},"content":"        assertTrue(predicate1.test(seller4));","lastModifiedDate":"2022-04-07"},{"lineNumber":77,"author":{"gitId":"janald99"},"content":"        assertTrue(predicate1.test(seller5));","lastModifiedDate":"2022-04-07"},{"lineNumber":78,"author":{"gitId":"janald99"},"content":"","lastModifiedDate":"2022-04-07"},{"lineNumber":79,"author":{"gitId":"janald99"},"content":"        //price range does not match","lastModifiedDate":"2022-04-07"},{"lineNumber":80,"author":{"gitId":"janald99"},"content":"        assertFalse(predicate1.test(seller6));","lastModifiedDate":"2022-04-07"},{"lineNumber":81,"author":{"gitId":"janald99"},"content":"        assertFalse(predicate1.test(seller7));","lastModifiedDate":"2022-04-07"},{"lineNumber":82,"author":{"gitId":"janald99"},"content":"    }","lastModifiedDate":"2022-04-07"},{"lineNumber":83,"author":{"gitId":"janald99"},"content":"","lastModifiedDate":"2022-04-07"},{"lineNumber":84,"author":{"gitId":"janald99"},"content":"    @Test","lastModifiedDate":"2022-04-07"},{"lineNumber":85,"author":{"gitId":"janald99"},"content":"    void getPropertyToBuy() {","lastModifiedDate":"2022-04-07"},{"lineNumber":86,"author":{"gitId":"janald99"},"content":"        assertTrue(predicate1.getPropertyToBuy().equals(new PropertyToBuy(","lastModifiedDate":"2022-04-07"},{"lineNumber":87,"author":{"gitId":"janald99"},"content":"            new House(HouseType.BUNGALOW, new Location(\"Kranji\")),","lastModifiedDate":"2022-04-07"},{"lineNumber":88,"author":{"gitId":"janald99"},"content":"            new PriceRange(20, 100))));","lastModifiedDate":"2022-04-07"},{"lineNumber":89,"author":{"gitId":"janald99"},"content":"","lastModifiedDate":"2022-04-07"},{"lineNumber":90,"author":{"gitId":"janald99"},"content":"        assertFalse(predicate1.getPropertyToBuy().equals(new PropertyToBuy(","lastModifiedDate":"2022-04-07"},{"lineNumber":91,"author":{"gitId":"janald99"},"content":"            new House(HouseType.BUNGALOW, new Location(\"Kranji\")),","lastModifiedDate":"2022-04-07"},{"lineNumber":92,"author":{"gitId":"janald99"},"content":"            new PriceRange(0, 200))));","lastModifiedDate":"2022-04-07"},{"lineNumber":93,"author":{"gitId":"janald99"},"content":"","lastModifiedDate":"2022-04-07"},{"lineNumber":94,"author":{"gitId":"janald99"},"content":"        assertFalse(predicate1.getPropertyToBuy().equals(new PropertyToBuy(","lastModifiedDate":"2022-04-07"},{"lineNumber":95,"author":{"gitId":"janald99"},"content":"            new House(HouseType.BUNGALOW, new Location(\"Kranji\")),","lastModifiedDate":"2022-04-07"},{"lineNumber":96,"author":{"gitId":"janald99"},"content":"            new PriceRange(0, 100))));","lastModifiedDate":"2022-04-07"},{"lineNumber":97,"author":{"gitId":"janald99"},"content":"","lastModifiedDate":"2022-04-07"},{"lineNumber":98,"author":{"gitId":"janald99"},"content":"        assertFalse(predicate1.getPropertyToBuy().equals(new PropertyToBuy(","lastModifiedDate":"2022-04-07"},{"lineNumber":99,"author":{"gitId":"janald99"},"content":"            new House(HouseType.BUNGALOW, new Location(\"Kranji\")),","lastModifiedDate":"2022-04-07"},{"lineNumber":100,"author":{"gitId":"janald99"},"content":"            new PriceRange(0, 20))));","lastModifiedDate":"2022-04-07"},{"lineNumber":101,"author":{"gitId":"janald99"},"content":"    }","lastModifiedDate":"2022-04-07"},{"lineNumber":102,"author":{"gitId":"janald99"},"content":"","lastModifiedDate":"2022-04-07"},{"lineNumber":103,"author":{"gitId":"janald99"},"content":"    @Test","lastModifiedDate":"2022-04-07"},{"lineNumber":104,"author":{"gitId":"janald99"},"content":"    void getPropertyToSell() {","lastModifiedDate":"2022-04-07"},{"lineNumber":105,"author":{"gitId":"janald99"},"content":"        assertTrue(predicate1.getPropertyToSell(seller1).equals(new PropertyToSell(","lastModifiedDate":"2022-04-07"},{"lineNumber":106,"author":{"gitId":"janald99"},"content":"            new House(HouseType.BUNGALOW, new Location(\"Kranji\")),","lastModifiedDate":"2022-04-07"},{"lineNumber":107,"author":{"gitId":"janald99"},"content":"            new PriceRange(20, 100), new Address(\"ANY ADDRESS\"))));","lastModifiedDate":"2022-04-07"},{"lineNumber":108,"author":{"gitId":"janald99"},"content":"    }","lastModifiedDate":"2022-04-07"},{"lineNumber":109,"author":{"gitId":"janald99"},"content":"}","lastModifiedDate":"2022-04-07"}],"authorContributionMap":{"janald99":109}},{"path":"src/test/java/seedu/address/model/seller/SellerHouseTypeContainsKeywordsPredicateTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"cwnm"},"content":"//package seedu.address.model.seller;","lastModifiedDate":"2022-03-28"},{"lineNumber":2,"author":{"gitId":"cwnm"},"content":"//","lastModifiedDate":"2022-03-28"},{"lineNumber":3,"author":{"gitId":"cwnm"},"content":"//import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2022-03-28"},{"lineNumber":4,"author":{"gitId":"cwnm"},"content":"//import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2022-03-28"},{"lineNumber":5,"author":{"gitId":"cwnm"},"content":"//","lastModifiedDate":"2022-03-28"},{"lineNumber":6,"author":{"gitId":"cwnm"},"content":"//import java.util.Arrays;","lastModifiedDate":"2022-03-28"},{"lineNumber":7,"author":{"gitId":"cwnm"},"content":"//import java.util.Collections;","lastModifiedDate":"2022-03-28"},{"lineNumber":8,"author":{"gitId":"cwnm"},"content":"//import java.util.List;","lastModifiedDate":"2022-03-28"},{"lineNumber":9,"author":{"gitId":"cwnm"},"content":"//","lastModifiedDate":"2022-03-28"},{"lineNumber":10,"author":{"gitId":"cwnm"},"content":"//import org.junit.jupiter.api.Test;","lastModifiedDate":"2022-03-28"},{"lineNumber":11,"author":{"gitId":"cwnm"},"content":"//","lastModifiedDate":"2022-03-28"},{"lineNumber":12,"author":{"gitId":"cwnm"},"content":"//import seedu.address.model.property.House;","lastModifiedDate":"2022-03-28"},{"lineNumber":13,"author":{"gitId":"cwnm"},"content":"//import seedu.address.model.property.HouseType;","lastModifiedDate":"2022-03-28"},{"lineNumber":14,"author":{"gitId":"cwnm"},"content":"//import seedu.address.model.property.PriceRange;","lastModifiedDate":"2022-03-28"},{"lineNumber":15,"author":{"gitId":"cwnm"},"content":"//import seedu.address.model.property.PropertyToSell;","lastModifiedDate":"2022-03-28"},{"lineNumber":16,"author":{"gitId":"cwnm"},"content":"//import seedu.address.testutil.SellerBuilder;","lastModifiedDate":"2022-03-28"},{"lineNumber":17,"author":{"gitId":"cwnm"},"content":"//","lastModifiedDate":"2022-03-28"},{"lineNumber":18,"author":{"gitId":"cwnm"},"content":"//public class SellerHouseTypeContainsKeywordsPredicateTest {","lastModifiedDate":"2022-03-28"},{"lineNumber":19,"author":{"gitId":"cwnm"},"content":"//","lastModifiedDate":"2022-03-28"},{"lineNumber":20,"author":{"gitId":"cwnm"},"content":"//    @Test","lastModifiedDate":"2022-03-28"},{"lineNumber":21,"author":{"gitId":"cwnm"},"content":"//    public void equals() {","lastModifiedDate":"2022-03-28"},{"lineNumber":22,"author":{"gitId":"cwnm"},"content":"//        List\u003cString\u003e firstPredicateKeywordList \u003d Collections.singletonList(\"first\");","lastModifiedDate":"2022-03-28"},{"lineNumber":23,"author":{"gitId":"cwnm"},"content":"//        List\u003cString\u003e secondPredicateKeywordList \u003d Arrays.asList(\"first\", \"second\");","lastModifiedDate":"2022-03-28"},{"lineNumber":24,"author":{"gitId":"cwnm"},"content":"//","lastModifiedDate":"2022-03-28"},{"lineNumber":25,"author":{"gitId":"cwnm"},"content":"//        SellerHouseTypeContainsKeywordsPredicate firstPredicate \u003d new SellerHouseTypeContainsKeywordsPredicate(","lastModifiedDate":"2022-03-28"},{"lineNumber":26,"author":{"gitId":"cwnm"},"content":"//                firstPredicateKeywordList);","lastModifiedDate":"2022-03-28"},{"lineNumber":27,"author":{"gitId":"cwnm"},"content":"//        SellerHouseTypeContainsKeywordsPredicate secondPredicate \u003d new SellerHouseTypeContainsKeywordsPredicate(","lastModifiedDate":"2022-03-28"},{"lineNumber":28,"author":{"gitId":"cwnm"},"content":"//                secondPredicateKeywordList);","lastModifiedDate":"2022-03-28"},{"lineNumber":29,"author":{"gitId":"cwnm"},"content":"//","lastModifiedDate":"2022-03-28"},{"lineNumber":30,"author":{"gitId":"cwnm"},"content":"//        // same object -\u003e returns true","lastModifiedDate":"2022-03-28"},{"lineNumber":31,"author":{"gitId":"cwnm"},"content":"//        assertTrue(firstPredicate.equals(firstPredicate));","lastModifiedDate":"2022-03-28"},{"lineNumber":32,"author":{"gitId":"cwnm"},"content":"//","lastModifiedDate":"2022-03-28"},{"lineNumber":33,"author":{"gitId":"cwnm"},"content":"//        // same values -\u003e returns true","lastModifiedDate":"2022-03-28"},{"lineNumber":34,"author":{"gitId":"cwnm"},"content":"//        SellerHouseTypeContainsKeywordsPredicate firstPredicateCopy \u003d new SellerHouseTypeContainsKeywordsPredicate(","lastModifiedDate":"2022-03-28"},{"lineNumber":35,"author":{"gitId":"cwnm"},"content":"//                firstPredicateKeywordList);","lastModifiedDate":"2022-03-28"},{"lineNumber":36,"author":{"gitId":"cwnm"},"content":"//        assertTrue(firstPredicate.equals(firstPredicateCopy));","lastModifiedDate":"2022-03-28"},{"lineNumber":37,"author":{"gitId":"cwnm"},"content":"//","lastModifiedDate":"2022-03-28"},{"lineNumber":38,"author":{"gitId":"cwnm"},"content":"//        // different types -\u003e returns false","lastModifiedDate":"2022-03-28"},{"lineNumber":39,"author":{"gitId":"cwnm"},"content":"//        assertFalse(firstPredicate.equals(1));","lastModifiedDate":"2022-03-28"},{"lineNumber":40,"author":{"gitId":"cwnm"},"content":"//","lastModifiedDate":"2022-03-28"},{"lineNumber":41,"author":{"gitId":"cwnm"},"content":"//        // null -\u003e returns false","lastModifiedDate":"2022-03-28"},{"lineNumber":42,"author":{"gitId":"cwnm"},"content":"//        assertFalse(firstPredicate.equals(null));","lastModifiedDate":"2022-03-28"},{"lineNumber":43,"author":{"gitId":"cwnm"},"content":"//","lastModifiedDate":"2022-03-28"},{"lineNumber":44,"author":{"gitId":"cwnm"},"content":"//        // different client -\u003e returns false","lastModifiedDate":"2022-03-28"},{"lineNumber":45,"author":{"gitId":"cwnm"},"content":"//        assertFalse(firstPredicate.equals(secondPredicate));","lastModifiedDate":"2022-03-28"},{"lineNumber":46,"author":{"gitId":"cwnm"},"content":"//    }","lastModifiedDate":"2022-03-28"},{"lineNumber":47,"author":{"gitId":"cwnm"},"content":"//","lastModifiedDate":"2022-03-28"},{"lineNumber":48,"author":{"gitId":"cwnm"},"content":"//    @Test","lastModifiedDate":"2022-03-28"},{"lineNumber":49,"author":{"gitId":"cwnm"},"content":"//    public void test_houseTypeContainsKeywords_returnsTrue() {","lastModifiedDate":"2022-03-28"},{"lineNumber":50,"author":{"gitId":"cwnm"},"content":"//        // One keyword","lastModifiedDate":"2022-03-28"},{"lineNumber":51,"author":{"gitId":"cwnm"},"content":"//        SellerHouseTypeContainsKeywordsPredicate predicate \u003d new SellerHouseTypeContainsKeywordsPredicate(","lastModifiedDate":"2022-03-28"},{"lineNumber":52,"author":{"gitId":"cwnm"},"content":"//                Collections.singletonList(\"Bungalow\"));","lastModifiedDate":"2022-03-28"},{"lineNumber":53,"author":{"gitId":"cwnm"},"content":"//        assertTrue(predicate.test(new SellerBuilder().withProperty(new PropertyToSell(","lastModifiedDate":"2022-03-28"},{"lineNumber":54,"author":{"gitId":"cwnm"},"content":"//                new House(HouseType.BUNGALOW, \"Kranji\"),","lastModifiedDate":"2022-03-28"},{"lineNumber":55,"author":{"gitId":"cwnm"},"content":"//                new PriceRange(100, 500))).build()));","lastModifiedDate":"2022-03-28"},{"lineNumber":56,"author":{"gitId":"cwnm"},"content":"//","lastModifiedDate":"2022-03-28"},{"lineNumber":57,"author":{"gitId":"cwnm"},"content":"//        // Multiple keywords","lastModifiedDate":"2022-03-28"},{"lineNumber":58,"author":{"gitId":"cwnm"},"content":"//        predicate \u003d new SellerHouseTypeContainsKeywordsPredicate(Arrays.asList(\"Bunga\", \"Low\"));","lastModifiedDate":"2022-03-28"},{"lineNumber":59,"author":{"gitId":"cwnm"},"content":"//        assertTrue(predicate.test(new SellerBuilder().withProperty(new PropertyToSell(","lastModifiedDate":"2022-03-28"},{"lineNumber":60,"author":{"gitId":"cwnm"},"content":"//                new House(HouseType.BUNGALOW, \"Kranji\"),","lastModifiedDate":"2022-03-28"},{"lineNumber":61,"author":{"gitId":"cwnm"},"content":"//                new PriceRange(100, 500))).build()));","lastModifiedDate":"2022-03-28"},{"lineNumber":62,"author":{"gitId":"cwnm"},"content":"//","lastModifiedDate":"2022-03-28"},{"lineNumber":63,"author":{"gitId":"cwnm"},"content":"//        // Only one matching keyword","lastModifiedDate":"2022-03-28"},{"lineNumber":64,"author":{"gitId":"cwnm"},"content":"//        predicate \u003d new SellerHouseTypeContainsKeywordsPredicate(Arrays.asList(\"Bunga\", \"High\"));","lastModifiedDate":"2022-03-28"},{"lineNumber":65,"author":{"gitId":"cwnm"},"content":"//        assertTrue(predicate.test(new SellerBuilder().withProperty(new PropertyToSell(","lastModifiedDate":"2022-03-28"},{"lineNumber":66,"author":{"gitId":"cwnm"},"content":"//                new House(HouseType.BUNGALOW, \"Kranji\"),","lastModifiedDate":"2022-03-28"},{"lineNumber":67,"author":{"gitId":"cwnm"},"content":"//                new PriceRange(100, 500))).build()));","lastModifiedDate":"2022-03-28"},{"lineNumber":68,"author":{"gitId":"cwnm"},"content":"//","lastModifiedDate":"2022-03-28"},{"lineNumber":69,"author":{"gitId":"cwnm"},"content":"//        // Mixed-case keywords","lastModifiedDate":"2022-03-28"},{"lineNumber":70,"author":{"gitId":"cwnm"},"content":"//        predicate \u003d new SellerHouseTypeContainsKeywordsPredicate(Arrays.asList(\"BuNg\", \"aLoW\"));","lastModifiedDate":"2022-03-28"},{"lineNumber":71,"author":{"gitId":"cwnm"},"content":"//        assertTrue(predicate.test(new SellerBuilder().withProperty(new PropertyToSell(","lastModifiedDate":"2022-03-28"},{"lineNumber":72,"author":{"gitId":"cwnm"},"content":"//                new House(HouseType.BUNGALOW, \"Kranji\"),","lastModifiedDate":"2022-03-28"},{"lineNumber":73,"author":{"gitId":"cwnm"},"content":"//                new PriceRange(100, 500))).build()));","lastModifiedDate":"2022-03-28"},{"lineNumber":74,"author":{"gitId":"cwnm"},"content":"//    }","lastModifiedDate":"2022-03-28"},{"lineNumber":75,"author":{"gitId":"cwnm"},"content":"//","lastModifiedDate":"2022-03-28"},{"lineNumber":76,"author":{"gitId":"cwnm"},"content":"//    @Test","lastModifiedDate":"2022-03-28"},{"lineNumber":77,"author":{"gitId":"cwnm"},"content":"//    public void test_houseTypeDoesNotContainKeywords_returnsFalse() {","lastModifiedDate":"2022-03-28"},{"lineNumber":78,"author":{"gitId":"cwnm"},"content":"//        // Zero keywords","lastModifiedDate":"2022-03-28"},{"lineNumber":79,"author":{"gitId":"cwnm"},"content":"//        SellerHouseTypeContainsKeywordsPredicate predicate \u003d new SellerHouseTypeContainsKeywordsPredicate(","lastModifiedDate":"2022-03-28"},{"lineNumber":80,"author":{"gitId":"cwnm"},"content":"//                Collections.emptyList());","lastModifiedDate":"2022-03-28"},{"lineNumber":81,"author":{"gitId":"cwnm"},"content":"//        assertFalse(predicate.test(new SellerBuilder().withProperty(new PropertyToSell(","lastModifiedDate":"2022-03-28"},{"lineNumber":82,"author":{"gitId":"cwnm"},"content":"//                new House(HouseType.BUNGALOW, \"Kranji\"),","lastModifiedDate":"2022-03-28"},{"lineNumber":83,"author":{"gitId":"cwnm"},"content":"//                new PriceRange(100, 500))).build()));","lastModifiedDate":"2022-03-28"},{"lineNumber":84,"author":{"gitId":"cwnm"},"content":"//","lastModifiedDate":"2022-03-28"},{"lineNumber":85,"author":{"gitId":"cwnm"},"content":"//        // Non-matching keyword","lastModifiedDate":"2022-03-28"},{"lineNumber":86,"author":{"gitId":"cwnm"},"content":"//        predicate \u003d new SellerHouseTypeContainsKeywordsPredicate(Arrays.asList(\"Carol\"));","lastModifiedDate":"2022-03-28"},{"lineNumber":87,"author":{"gitId":"cwnm"},"content":"//        assertFalse(predicate.test(new SellerBuilder().withProperty(new PropertyToSell(","lastModifiedDate":"2022-03-28"},{"lineNumber":88,"author":{"gitId":"cwnm"},"content":"//                new House(HouseType.BUNGALOW, \"Kranji\"),","lastModifiedDate":"2022-03-28"},{"lineNumber":89,"author":{"gitId":"cwnm"},"content":"//                new PriceRange(100, 500))).build()));","lastModifiedDate":"2022-03-28"},{"lineNumber":90,"author":{"gitId":"cwnm"},"content":"//","lastModifiedDate":"2022-03-28"},{"lineNumber":91,"author":{"gitId":"cwnm"},"content":"//        // Keywords match phone, email and address, but does not match House Type","lastModifiedDate":"2022-03-28"},{"lineNumber":92,"author":{"gitId":"cwnm"},"content":"//        predicate \u003d new SellerHouseTypeContainsKeywordsPredicate(","lastModifiedDate":"2022-03-28"},{"lineNumber":93,"author":{"gitId":"cwnm"},"content":"//                Arrays.asList(\"12345\", \"alice@email.com\", \"Main\", \"Street\"));","lastModifiedDate":"2022-03-28"},{"lineNumber":94,"author":{"gitId":"cwnm"},"content":"//        assertFalse(predicate.test(new SellerBuilder().withName(\"Alice\").withPhone(\"12345\")","lastModifiedDate":"2022-03-28"},{"lineNumber":95,"author":{"gitId":"cwnm"},"content":"//                .withProperty(new PropertyToSell(new House(HouseType.BUNGALOW, \"Kranji\"),","lastModifiedDate":"2022-03-28"},{"lineNumber":96,"author":{"gitId":"cwnm"},"content":"//                        new PriceRange(100, 500))).build()));","lastModifiedDate":"2022-03-28"},{"lineNumber":97,"author":{"gitId":"cwnm"},"content":"//    }","lastModifiedDate":"2022-03-28"},{"lineNumber":98,"author":{"gitId":"cwnm"},"content":"//}","lastModifiedDate":"2022-03-28"}],"authorContributionMap":{"cwnm":98}},{"path":"src/test/java/seedu/address/model/seller/SellerNameContainsKeywordsPredicateTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"cwnm"},"content":"package seedu.address.model.seller;","lastModifiedDate":"2022-03-28"},{"lineNumber":2,"author":{"gitId":"cwnm"},"content":"","lastModifiedDate":"2022-03-28"},{"lineNumber":3,"author":{"gitId":"cwnm"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2022-03-28"},{"lineNumber":4,"author":{"gitId":"cwnm"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2022-03-28"},{"lineNumber":5,"author":{"gitId":"cwnm"},"content":"","lastModifiedDate":"2022-03-28"},{"lineNumber":6,"author":{"gitId":"cwnm"},"content":"import java.util.Arrays;","lastModifiedDate":"2022-03-28"},{"lineNumber":7,"author":{"gitId":"cwnm"},"content":"import java.util.Collections;","lastModifiedDate":"2022-03-28"},{"lineNumber":8,"author":{"gitId":"cwnm"},"content":"import java.util.List;","lastModifiedDate":"2022-03-28"},{"lineNumber":9,"author":{"gitId":"cwnm"},"content":"","lastModifiedDate":"2022-03-28"},{"lineNumber":10,"author":{"gitId":"cwnm"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2022-03-28"},{"lineNumber":11,"author":{"gitId":"cwnm"},"content":"","lastModifiedDate":"2022-03-28"},{"lineNumber":12,"author":{"gitId":"cwnm"},"content":"import seedu.address.testutil.SellerBuilder;","lastModifiedDate":"2022-03-28"},{"lineNumber":13,"author":{"gitId":"cwnm"},"content":"","lastModifiedDate":"2022-03-28"},{"lineNumber":14,"author":{"gitId":"cwnm"},"content":"public class SellerNameContainsKeywordsPredicateTest {","lastModifiedDate":"2022-03-28"},{"lineNumber":15,"author":{"gitId":"cwnm"},"content":"","lastModifiedDate":"2022-03-28"},{"lineNumber":16,"author":{"gitId":"cwnm"},"content":"    @Test","lastModifiedDate":"2022-03-28"},{"lineNumber":17,"author":{"gitId":"cwnm"},"content":"    public void equals() {","lastModifiedDate":"2022-03-28"},{"lineNumber":18,"author":{"gitId":"cwnm"},"content":"        List\u003cString\u003e firstPredicateKeywordList \u003d Collections.singletonList(\"first\");","lastModifiedDate":"2022-03-28"},{"lineNumber":19,"author":{"gitId":"cwnm"},"content":"        List\u003cString\u003e secondPredicateKeywordList \u003d Arrays.asList(\"first\", \"second\");","lastModifiedDate":"2022-03-28"},{"lineNumber":20,"author":{"gitId":"cwnm"},"content":"","lastModifiedDate":"2022-03-28"},{"lineNumber":21,"author":{"gitId":"cwnm"},"content":"        SellerNameContainsKeywordsPredicate firstPredicate \u003d new SellerNameContainsKeywordsPredicate(","lastModifiedDate":"2022-03-28"},{"lineNumber":22,"author":{"gitId":"cwnm"},"content":"                firstPredicateKeywordList);","lastModifiedDate":"2022-03-28"},{"lineNumber":23,"author":{"gitId":"cwnm"},"content":"        SellerNameContainsKeywordsPredicate secondPredicate \u003d new SellerNameContainsKeywordsPredicate(","lastModifiedDate":"2022-03-28"},{"lineNumber":24,"author":{"gitId":"cwnm"},"content":"                secondPredicateKeywordList);","lastModifiedDate":"2022-03-28"},{"lineNumber":25,"author":{"gitId":"cwnm"},"content":"","lastModifiedDate":"2022-03-28"},{"lineNumber":26,"author":{"gitId":"cwnm"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2022-03-28"},{"lineNumber":27,"author":{"gitId":"cwnm"},"content":"        assertTrue(firstPredicate.equals(firstPredicate));","lastModifiedDate":"2022-03-28"},{"lineNumber":28,"author":{"gitId":"cwnm"},"content":"","lastModifiedDate":"2022-03-28"},{"lineNumber":29,"author":{"gitId":"cwnm"},"content":"        // same values -\u003e returns true","lastModifiedDate":"2022-03-28"},{"lineNumber":30,"author":{"gitId":"cwnm"},"content":"        SellerNameContainsKeywordsPredicate firstPredicateCopy \u003d new SellerNameContainsKeywordsPredicate(","lastModifiedDate":"2022-03-28"},{"lineNumber":31,"author":{"gitId":"cwnm"},"content":"                firstPredicateKeywordList);","lastModifiedDate":"2022-03-28"},{"lineNumber":32,"author":{"gitId":"cwnm"},"content":"        assertTrue(firstPredicate.equals(firstPredicateCopy));","lastModifiedDate":"2022-03-28"},{"lineNumber":33,"author":{"gitId":"cwnm"},"content":"","lastModifiedDate":"2022-03-28"},{"lineNumber":34,"author":{"gitId":"cwnm"},"content":"        // different types -\u003e returns false","lastModifiedDate":"2022-03-28"},{"lineNumber":35,"author":{"gitId":"cwnm"},"content":"        assertFalse(firstPredicate.equals(1));","lastModifiedDate":"2022-03-28"},{"lineNumber":36,"author":{"gitId":"cwnm"},"content":"","lastModifiedDate":"2022-03-28"},{"lineNumber":37,"author":{"gitId":"cwnm"},"content":"        // null -\u003e returns false","lastModifiedDate":"2022-03-28"},{"lineNumber":38,"author":{"gitId":"cwnm"},"content":"        assertFalse(firstPredicate.equals(null));","lastModifiedDate":"2022-03-28"},{"lineNumber":39,"author":{"gitId":"cwnm"},"content":"","lastModifiedDate":"2022-03-28"},{"lineNumber":40,"author":{"gitId":"cwnm"},"content":"        // different client -\u003e returns false","lastModifiedDate":"2022-03-28"},{"lineNumber":41,"author":{"gitId":"cwnm"},"content":"        assertFalse(firstPredicate.equals(secondPredicate));","lastModifiedDate":"2022-03-28"},{"lineNumber":42,"author":{"gitId":"cwnm"},"content":"    }","lastModifiedDate":"2022-03-28"},{"lineNumber":43,"author":{"gitId":"cwnm"},"content":"","lastModifiedDate":"2022-03-28"},{"lineNumber":44,"author":{"gitId":"cwnm"},"content":"    @Test","lastModifiedDate":"2022-03-28"},{"lineNumber":45,"author":{"gitId":"cwnm"},"content":"    public void test_nameContainsKeywords_returnsTrue() {","lastModifiedDate":"2022-03-28"},{"lineNumber":46,"author":{"gitId":"cwnm"},"content":"        // One keyword","lastModifiedDate":"2022-03-28"},{"lineNumber":47,"author":{"gitId":"cwnm"},"content":"        SellerNameContainsKeywordsPredicate predicate \u003d new SellerNameContainsKeywordsPredicate(","lastModifiedDate":"2022-03-28"},{"lineNumber":48,"author":{"gitId":"cwnm"},"content":"                Collections.singletonList(\"Alice\"));","lastModifiedDate":"2022-03-28"},{"lineNumber":49,"author":{"gitId":"cwnm"},"content":"        assertTrue(predicate.test(new SellerBuilder().withName(\"Alice Bob\").build()));","lastModifiedDate":"2022-03-28"},{"lineNumber":50,"author":{"gitId":"cwnm"},"content":"","lastModifiedDate":"2022-03-28"},{"lineNumber":51,"author":{"gitId":"cwnm"},"content":"        // Multiple keywords","lastModifiedDate":"2022-03-28"},{"lineNumber":52,"author":{"gitId":"cwnm"},"content":"        predicate \u003d new SellerNameContainsKeywordsPredicate(Arrays.asList(\"Alice\", \"Bob\"));","lastModifiedDate":"2022-03-28"},{"lineNumber":53,"author":{"gitId":"cwnm"},"content":"        assertTrue(predicate.test(new SellerBuilder().withName(\"Alice Bob\").build()));","lastModifiedDate":"2022-03-28"},{"lineNumber":54,"author":{"gitId":"cwnm"},"content":"","lastModifiedDate":"2022-03-28"},{"lineNumber":55,"author":{"gitId":"cwnm"},"content":"        // Only one matching keyword","lastModifiedDate":"2022-03-28"},{"lineNumber":56,"author":{"gitId":"cwnm"},"content":"        predicate \u003d new SellerNameContainsKeywordsPredicate(Arrays.asList(\"Bob\", \"Carol\"));","lastModifiedDate":"2022-03-28"},{"lineNumber":57,"author":{"gitId":"cwnm"},"content":"        assertTrue(predicate.test(new SellerBuilder().withName(\"Alice Carol\").build()));","lastModifiedDate":"2022-03-28"},{"lineNumber":58,"author":{"gitId":"cwnm"},"content":"","lastModifiedDate":"2022-03-28"},{"lineNumber":59,"author":{"gitId":"cwnm"},"content":"        // Mixed-case keywords","lastModifiedDate":"2022-03-28"},{"lineNumber":60,"author":{"gitId":"cwnm"},"content":"        predicate \u003d new SellerNameContainsKeywordsPredicate(Arrays.asList(\"aLIce\", \"bOB\"));","lastModifiedDate":"2022-03-28"},{"lineNumber":61,"author":{"gitId":"cwnm"},"content":"        assertTrue(predicate.test(new SellerBuilder().withName(\"Alice Bob\").build()));","lastModifiedDate":"2022-03-28"},{"lineNumber":62,"author":{"gitId":"cwnm"},"content":"    }","lastModifiedDate":"2022-03-28"},{"lineNumber":63,"author":{"gitId":"cwnm"},"content":"","lastModifiedDate":"2022-03-28"},{"lineNumber":64,"author":{"gitId":"cwnm"},"content":"    @Test","lastModifiedDate":"2022-03-28"},{"lineNumber":65,"author":{"gitId":"cwnm"},"content":"    public void test_nameDoesNotContainKeywords_returnsFalse() {","lastModifiedDate":"2022-03-28"},{"lineNumber":66,"author":{"gitId":"cwnm"},"content":"        // Zero keywords","lastModifiedDate":"2022-03-28"},{"lineNumber":67,"author":{"gitId":"cwnm"},"content":"        SellerNameContainsKeywordsPredicate predicate \u003d new SellerNameContainsKeywordsPredicate(","lastModifiedDate":"2022-03-28"},{"lineNumber":68,"author":{"gitId":"cwnm"},"content":"                Collections.emptyList());","lastModifiedDate":"2022-03-28"},{"lineNumber":69,"author":{"gitId":"cwnm"},"content":"        assertFalse(predicate.test(new SellerBuilder().withName(\"Alice\").build()));","lastModifiedDate":"2022-03-28"},{"lineNumber":70,"author":{"gitId":"cwnm"},"content":"","lastModifiedDate":"2022-03-28"},{"lineNumber":71,"author":{"gitId":"cwnm"},"content":"        // Non-matching keyword","lastModifiedDate":"2022-03-28"},{"lineNumber":72,"author":{"gitId":"cwnm"},"content":"        predicate \u003d new SellerNameContainsKeywordsPredicate(Arrays.asList(\"Carol\"));","lastModifiedDate":"2022-03-28"},{"lineNumber":73,"author":{"gitId":"cwnm"},"content":"        assertFalse(predicate.test(new SellerBuilder().withName(\"Alice Bob\").build()));","lastModifiedDate":"2022-03-28"},{"lineNumber":74,"author":{"gitId":"cwnm"},"content":"","lastModifiedDate":"2022-03-28"},{"lineNumber":75,"author":{"gitId":"cwnm"},"content":"        // Keywords match phone, email and address, but does not match name","lastModifiedDate":"2022-03-28"},{"lineNumber":76,"author":{"gitId":"cwnm"},"content":"        predicate \u003d new SellerNameContainsKeywordsPredicate(","lastModifiedDate":"2022-03-28"},{"lineNumber":77,"author":{"gitId":"cwnm"},"content":"                Arrays.asList(\"12345\", \"alice@email.com\", \"Main\", \"Street\"));","lastModifiedDate":"2022-03-28"},{"lineNumber":78,"author":{"gitId":"cwnm"},"content":"        assertFalse(predicate.test(new SellerBuilder().withName(\"Alice\").withPhone(\"99999\")","lastModifiedDate":"2022-03-28"},{"lineNumber":79,"author":{"gitId":"cwnm"},"content":"                .build()));","lastModifiedDate":"2022-03-28"},{"lineNumber":80,"author":{"gitId":"cwnm"},"content":"    }","lastModifiedDate":"2022-03-28"},{"lineNumber":81,"author":{"gitId":"cwnm"},"content":"}","lastModifiedDate":"2022-03-28"}],"authorContributionMap":{"cwnm":81}},{"path":"src/test/java/seedu/address/model/seller/SellerPhoneContainsKeywordsPredicateTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"cwnm"},"content":"package seedu.address.model.seller;","lastModifiedDate":"2022-03-28"},{"lineNumber":2,"author":{"gitId":"cwnm"},"content":"","lastModifiedDate":"2022-03-28"},{"lineNumber":3,"author":{"gitId":"cwnm"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2022-03-28"},{"lineNumber":4,"author":{"gitId":"cwnm"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2022-03-28"},{"lineNumber":5,"author":{"gitId":"cwnm"},"content":"","lastModifiedDate":"2022-03-28"},{"lineNumber":6,"author":{"gitId":"cwnm"},"content":"import java.util.Arrays;","lastModifiedDate":"2022-03-28"},{"lineNumber":7,"author":{"gitId":"cwnm"},"content":"import java.util.Collections;","lastModifiedDate":"2022-03-28"},{"lineNumber":8,"author":{"gitId":"cwnm"},"content":"import java.util.List;","lastModifiedDate":"2022-03-28"},{"lineNumber":9,"author":{"gitId":"cwnm"},"content":"","lastModifiedDate":"2022-03-28"},{"lineNumber":10,"author":{"gitId":"cwnm"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2022-03-28"},{"lineNumber":11,"author":{"gitId":"cwnm"},"content":"","lastModifiedDate":"2022-03-28"},{"lineNumber":12,"author":{"gitId":"cwnm"},"content":"import seedu.address.testutil.SellerBuilder;","lastModifiedDate":"2022-03-28"},{"lineNumber":13,"author":{"gitId":"cwnm"},"content":"","lastModifiedDate":"2022-03-28"},{"lineNumber":14,"author":{"gitId":"cwnm"},"content":"public class SellerPhoneContainsKeywordsPredicateTest {","lastModifiedDate":"2022-03-28"},{"lineNumber":15,"author":{"gitId":"cwnm"},"content":"","lastModifiedDate":"2022-03-28"},{"lineNumber":16,"author":{"gitId":"cwnm"},"content":"    @Test","lastModifiedDate":"2022-03-28"},{"lineNumber":17,"author":{"gitId":"cwnm"},"content":"    public void equals() {","lastModifiedDate":"2022-03-28"},{"lineNumber":18,"author":{"gitId":"cwnm"},"content":"        List\u003cString\u003e firstPredicateKeywordList \u003d Collections.singletonList(\"first\");","lastModifiedDate":"2022-03-28"},{"lineNumber":19,"author":{"gitId":"cwnm"},"content":"        List\u003cString\u003e secondPredicateKeywordList \u003d Arrays.asList(\"first\", \"second\");","lastModifiedDate":"2022-03-28"},{"lineNumber":20,"author":{"gitId":"cwnm"},"content":"","lastModifiedDate":"2022-03-28"},{"lineNumber":21,"author":{"gitId":"cwnm"},"content":"        SellerPhoneContainsKeywordsPredicate firstPredicate \u003d new SellerPhoneContainsKeywordsPredicate(","lastModifiedDate":"2022-03-28"},{"lineNumber":22,"author":{"gitId":"cwnm"},"content":"                firstPredicateKeywordList);","lastModifiedDate":"2022-03-28"},{"lineNumber":23,"author":{"gitId":"cwnm"},"content":"        SellerPhoneContainsKeywordsPredicate secondPredicate \u003d new SellerPhoneContainsKeywordsPredicate(","lastModifiedDate":"2022-03-28"},{"lineNumber":24,"author":{"gitId":"cwnm"},"content":"                secondPredicateKeywordList);","lastModifiedDate":"2022-03-28"},{"lineNumber":25,"author":{"gitId":"cwnm"},"content":"","lastModifiedDate":"2022-03-28"},{"lineNumber":26,"author":{"gitId":"cwnm"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2022-03-28"},{"lineNumber":27,"author":{"gitId":"cwnm"},"content":"        assertTrue(firstPredicate.equals(firstPredicate));","lastModifiedDate":"2022-03-28"},{"lineNumber":28,"author":{"gitId":"cwnm"},"content":"","lastModifiedDate":"2022-03-28"},{"lineNumber":29,"author":{"gitId":"cwnm"},"content":"        // same values -\u003e returns true","lastModifiedDate":"2022-03-28"},{"lineNumber":30,"author":{"gitId":"cwnm"},"content":"        SellerPhoneContainsKeywordsPredicate firstPredicateCopy \u003d new SellerPhoneContainsKeywordsPredicate(","lastModifiedDate":"2022-03-28"},{"lineNumber":31,"author":{"gitId":"cwnm"},"content":"                firstPredicateKeywordList);","lastModifiedDate":"2022-03-28"},{"lineNumber":32,"author":{"gitId":"cwnm"},"content":"        assertTrue(firstPredicate.equals(firstPredicateCopy));","lastModifiedDate":"2022-03-28"},{"lineNumber":33,"author":{"gitId":"cwnm"},"content":"","lastModifiedDate":"2022-03-28"},{"lineNumber":34,"author":{"gitId":"cwnm"},"content":"        // different types -\u003e returns false","lastModifiedDate":"2022-03-28"},{"lineNumber":35,"author":{"gitId":"cwnm"},"content":"        assertFalse(firstPredicate.equals(1));","lastModifiedDate":"2022-03-28"},{"lineNumber":36,"author":{"gitId":"cwnm"},"content":"","lastModifiedDate":"2022-03-28"},{"lineNumber":37,"author":{"gitId":"cwnm"},"content":"        // null -\u003e returns false","lastModifiedDate":"2022-03-28"},{"lineNumber":38,"author":{"gitId":"cwnm"},"content":"        assertFalse(firstPredicate.equals(null));","lastModifiedDate":"2022-03-28"},{"lineNumber":39,"author":{"gitId":"cwnm"},"content":"","lastModifiedDate":"2022-03-28"},{"lineNumber":40,"author":{"gitId":"cwnm"},"content":"        // different client -\u003e returns false","lastModifiedDate":"2022-03-28"},{"lineNumber":41,"author":{"gitId":"cwnm"},"content":"        assertFalse(firstPredicate.equals(secondPredicate));","lastModifiedDate":"2022-03-28"},{"lineNumber":42,"author":{"gitId":"cwnm"},"content":"    }","lastModifiedDate":"2022-03-28"},{"lineNumber":43,"author":{"gitId":"cwnm"},"content":"","lastModifiedDate":"2022-03-28"},{"lineNumber":44,"author":{"gitId":"cwnm"},"content":"    @Test","lastModifiedDate":"2022-03-28"},{"lineNumber":45,"author":{"gitId":"cwnm"},"content":"    public void test_phoneContainsKeywords_returnsTrue() {","lastModifiedDate":"2022-03-28"},{"lineNumber":46,"author":{"gitId":"cwnm"},"content":"        // One keyword","lastModifiedDate":"2022-03-28"},{"lineNumber":47,"author":{"gitId":"cwnm"},"content":"        SellerPhoneContainsKeywordsPredicate predicate \u003d new SellerPhoneContainsKeywordsPredicate(","lastModifiedDate":"2022-03-28"},{"lineNumber":48,"author":{"gitId":"cwnm"},"content":"                Collections.singletonList(\"12312312\"));","lastModifiedDate":"2022-03-28"},{"lineNumber":49,"author":{"gitId":"cwnm"},"content":"        assertTrue(predicate.test(new SellerBuilder().withPhone(\"12312312\").build()));","lastModifiedDate":"2022-03-28"},{"lineNumber":50,"author":{"gitId":"cwnm"},"content":"","lastModifiedDate":"2022-03-28"},{"lineNumber":51,"author":{"gitId":"cwnm"},"content":"        // Multiple keywords","lastModifiedDate":"2022-03-28"},{"lineNumber":52,"author":{"gitId":"cwnm"},"content":"        predicate \u003d new SellerPhoneContainsKeywordsPredicate(Arrays.asList(\"123\", \"12312\"));","lastModifiedDate":"2022-03-28"},{"lineNumber":53,"author":{"gitId":"cwnm"},"content":"        assertTrue(predicate.test(new SellerBuilder().withPhone(\"12312312\").build()));","lastModifiedDate":"2022-03-28"},{"lineNumber":54,"author":{"gitId":"cwnm"},"content":"","lastModifiedDate":"2022-03-28"},{"lineNumber":55,"author":{"gitId":"cwnm"},"content":"        // Only one matching keyword","lastModifiedDate":"2022-03-28"},{"lineNumber":56,"author":{"gitId":"cwnm"},"content":"        predicate \u003d new SellerPhoneContainsKeywordsPredicate(Arrays.asList(\"123\", \"99999\"));","lastModifiedDate":"2022-03-28"},{"lineNumber":57,"author":{"gitId":"cwnm"},"content":"        assertTrue(predicate.test(new SellerBuilder().withPhone(\"12312312\").build()));","lastModifiedDate":"2022-03-28"},{"lineNumber":58,"author":{"gitId":"cwnm"},"content":"","lastModifiedDate":"2022-03-28"},{"lineNumber":59,"author":{"gitId":"cwnm"},"content":"        // Mixed-case keywords","lastModifiedDate":"2022-03-28"},{"lineNumber":60,"author":{"gitId":"cwnm"},"content":"        predicate \u003d new SellerPhoneContainsKeywordsPredicate(Arrays.asList(\"123\", \"bOB\"));","lastModifiedDate":"2022-03-28"},{"lineNumber":61,"author":{"gitId":"cwnm"},"content":"        assertTrue(predicate.test(new SellerBuilder().withPhone(\"123123\").build()));","lastModifiedDate":"2022-03-28"},{"lineNumber":62,"author":{"gitId":"cwnm"},"content":"    }","lastModifiedDate":"2022-03-28"},{"lineNumber":63,"author":{"gitId":"cwnm"},"content":"","lastModifiedDate":"2022-03-28"},{"lineNumber":64,"author":{"gitId":"cwnm"},"content":"    @Test","lastModifiedDate":"2022-03-28"},{"lineNumber":65,"author":{"gitId":"cwnm"},"content":"    public void test_phoneDoesNotContainKeywords_returnsFalse() {","lastModifiedDate":"2022-03-28"},{"lineNumber":66,"author":{"gitId":"cwnm"},"content":"        // Zero keywords","lastModifiedDate":"2022-03-28"},{"lineNumber":67,"author":{"gitId":"cwnm"},"content":"        SellerPhoneContainsKeywordsPredicate predicate \u003d new SellerPhoneContainsKeywordsPredicate(","lastModifiedDate":"2022-03-28"},{"lineNumber":68,"author":{"gitId":"cwnm"},"content":"                Collections.emptyList());","lastModifiedDate":"2022-03-28"},{"lineNumber":69,"author":{"gitId":"cwnm"},"content":"        assertFalse(predicate.test(new SellerBuilder().withPhone(\"69696969\").build()));","lastModifiedDate":"2022-03-28"},{"lineNumber":70,"author":{"gitId":"cwnm"},"content":"","lastModifiedDate":"2022-03-28"},{"lineNumber":71,"author":{"gitId":"cwnm"},"content":"        // Non-matching keyword","lastModifiedDate":"2022-03-28"},{"lineNumber":72,"author":{"gitId":"cwnm"},"content":"        predicate \u003d new SellerPhoneContainsKeywordsPredicate(Arrays.asList(\"Carol\"));","lastModifiedDate":"2022-03-28"},{"lineNumber":73,"author":{"gitId":"cwnm"},"content":"        assertFalse(predicate.test(new SellerBuilder().withPhone(\"123123\").build()));","lastModifiedDate":"2022-03-28"},{"lineNumber":74,"author":{"gitId":"cwnm"},"content":"","lastModifiedDate":"2022-03-28"},{"lineNumber":75,"author":{"gitId":"cwnm"},"content":"        // Keywords match phone, email and address, but does not match phone","lastModifiedDate":"2022-03-28"},{"lineNumber":76,"author":{"gitId":"cwnm"},"content":"        predicate \u003d new SellerPhoneContainsKeywordsPredicate(","lastModifiedDate":"2022-03-28"},{"lineNumber":77,"author":{"gitId":"cwnm"},"content":"                Arrays.asList(\"12345\", \"alice@email.com\", \"Main\", \"Street\"));","lastModifiedDate":"2022-03-28"},{"lineNumber":78,"author":{"gitId":"cwnm"},"content":"        assertFalse(predicate.test(new SellerBuilder().withName(\"Alice\").withPhone(\"999\")","lastModifiedDate":"2022-03-28"},{"lineNumber":79,"author":{"gitId":"cwnm"},"content":"                .build()));","lastModifiedDate":"2022-03-28"},{"lineNumber":80,"author":{"gitId":"cwnm"},"content":"    }","lastModifiedDate":"2022-03-28"},{"lineNumber":81,"author":{"gitId":"cwnm"},"content":"}","lastModifiedDate":"2022-03-28"}],"authorContributionMap":{"cwnm":81}},{"path":"src/test/java/seedu/address/model/seller/SellerTagsContainsKeywordsPredicateTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"cwnm"},"content":"package seedu.address.model.seller;","lastModifiedDate":"2022-03-28"},{"lineNumber":2,"author":{"gitId":"cwnm"},"content":"","lastModifiedDate":"2022-03-28"},{"lineNumber":3,"author":{"gitId":"cwnm"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2022-03-28"},{"lineNumber":4,"author":{"gitId":"cwnm"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2022-03-28"},{"lineNumber":5,"author":{"gitId":"cwnm"},"content":"","lastModifiedDate":"2022-03-28"},{"lineNumber":6,"author":{"gitId":"cwnm"},"content":"import java.util.Arrays;","lastModifiedDate":"2022-03-28"},{"lineNumber":7,"author":{"gitId":"cwnm"},"content":"import java.util.Collections;","lastModifiedDate":"2022-03-28"},{"lineNumber":8,"author":{"gitId":"cwnm"},"content":"import java.util.List;","lastModifiedDate":"2022-03-28"},{"lineNumber":9,"author":{"gitId":"cwnm"},"content":"","lastModifiedDate":"2022-03-28"},{"lineNumber":10,"author":{"gitId":"cwnm"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2022-03-28"},{"lineNumber":11,"author":{"gitId":"cwnm"},"content":"","lastModifiedDate":"2022-03-28"},{"lineNumber":12,"author":{"gitId":"cwnm"},"content":"import seedu.address.testutil.SellerBuilder;","lastModifiedDate":"2022-03-28"},{"lineNumber":13,"author":{"gitId":"cwnm"},"content":"","lastModifiedDate":"2022-03-28"},{"lineNumber":14,"author":{"gitId":"cwnm"},"content":"public class SellerTagsContainsKeywordsPredicateTest {","lastModifiedDate":"2022-03-28"},{"lineNumber":15,"author":{"gitId":"cwnm"},"content":"","lastModifiedDate":"2022-03-28"},{"lineNumber":16,"author":{"gitId":"cwnm"},"content":"    @Test","lastModifiedDate":"2022-03-28"},{"lineNumber":17,"author":{"gitId":"cwnm"},"content":"    public void equals() {","lastModifiedDate":"2022-03-28"},{"lineNumber":18,"author":{"gitId":"cwnm"},"content":"        List\u003cString\u003e firstPredicateKeywordList \u003d Collections.singletonList(\"first\");","lastModifiedDate":"2022-03-28"},{"lineNumber":19,"author":{"gitId":"cwnm"},"content":"        List\u003cString\u003e secondPredicateKeywordList \u003d Arrays.asList(\"first\", \"second\");","lastModifiedDate":"2022-03-28"},{"lineNumber":20,"author":{"gitId":"cwnm"},"content":"","lastModifiedDate":"2022-03-28"},{"lineNumber":21,"author":{"gitId":"cwnm"},"content":"        SellerTagsContainsKeywordsPredicate firstPredicate \u003d new SellerTagsContainsKeywordsPredicate(","lastModifiedDate":"2022-03-28"},{"lineNumber":22,"author":{"gitId":"cwnm"},"content":"                firstPredicateKeywordList);","lastModifiedDate":"2022-03-28"},{"lineNumber":23,"author":{"gitId":"cwnm"},"content":"        SellerTagsContainsKeywordsPredicate secondPredicate \u003d new SellerTagsContainsKeywordsPredicate(","lastModifiedDate":"2022-03-28"},{"lineNumber":24,"author":{"gitId":"cwnm"},"content":"                secondPredicateKeywordList);","lastModifiedDate":"2022-03-28"},{"lineNumber":25,"author":{"gitId":"cwnm"},"content":"","lastModifiedDate":"2022-03-28"},{"lineNumber":26,"author":{"gitId":"cwnm"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2022-03-28"},{"lineNumber":27,"author":{"gitId":"cwnm"},"content":"        assertTrue(firstPredicate.equals(firstPredicate));","lastModifiedDate":"2022-03-28"},{"lineNumber":28,"author":{"gitId":"cwnm"},"content":"","lastModifiedDate":"2022-03-28"},{"lineNumber":29,"author":{"gitId":"cwnm"},"content":"        // same values -\u003e returns true","lastModifiedDate":"2022-03-28"},{"lineNumber":30,"author":{"gitId":"cwnm"},"content":"        SellerTagsContainsKeywordsPredicate firstPredicateCopy \u003d new SellerTagsContainsKeywordsPredicate(","lastModifiedDate":"2022-03-28"},{"lineNumber":31,"author":{"gitId":"cwnm"},"content":"                firstPredicateKeywordList);","lastModifiedDate":"2022-03-28"},{"lineNumber":32,"author":{"gitId":"cwnm"},"content":"        assertTrue(firstPredicate.equals(firstPredicateCopy));","lastModifiedDate":"2022-03-28"},{"lineNumber":33,"author":{"gitId":"cwnm"},"content":"","lastModifiedDate":"2022-03-28"},{"lineNumber":34,"author":{"gitId":"cwnm"},"content":"        // different types -\u003e returns false","lastModifiedDate":"2022-03-28"},{"lineNumber":35,"author":{"gitId":"cwnm"},"content":"        assertFalse(firstPredicate.equals(1));","lastModifiedDate":"2022-03-28"},{"lineNumber":36,"author":{"gitId":"cwnm"},"content":"","lastModifiedDate":"2022-03-28"},{"lineNumber":37,"author":{"gitId":"cwnm"},"content":"        // null -\u003e returns false","lastModifiedDate":"2022-03-28"},{"lineNumber":38,"author":{"gitId":"cwnm"},"content":"        assertFalse(firstPredicate.equals(null));","lastModifiedDate":"2022-03-28"},{"lineNumber":39,"author":{"gitId":"cwnm"},"content":"","lastModifiedDate":"2022-03-28"},{"lineNumber":40,"author":{"gitId":"cwnm"},"content":"        // different client -\u003e returns false","lastModifiedDate":"2022-03-28"},{"lineNumber":41,"author":{"gitId":"cwnm"},"content":"        assertFalse(firstPredicate.equals(secondPredicate));","lastModifiedDate":"2022-03-28"},{"lineNumber":42,"author":{"gitId":"cwnm"},"content":"    }","lastModifiedDate":"2022-03-28"},{"lineNumber":43,"author":{"gitId":"cwnm"},"content":"","lastModifiedDate":"2022-03-28"},{"lineNumber":44,"author":{"gitId":"cwnm"},"content":"    @Test","lastModifiedDate":"2022-03-28"},{"lineNumber":45,"author":{"gitId":"cwnm"},"content":"    public void test_tagContainsKeywords_returnsTrue() {","lastModifiedDate":"2022-03-28"},{"lineNumber":46,"author":{"gitId":"cwnm"},"content":"        // One keyword","lastModifiedDate":"2022-03-28"},{"lineNumber":47,"author":{"gitId":"cwnm"},"content":"        SellerTagsContainsKeywordsPredicate predicate \u003d new SellerTagsContainsKeywordsPredicate(","lastModifiedDate":"2022-03-28"},{"lineNumber":48,"author":{"gitId":"cwnm"},"content":"                Collections.singletonList(\"Rich\"));","lastModifiedDate":"2022-03-28"},{"lineNumber":49,"author":{"gitId":"cwnm"},"content":"        assertTrue(predicate.test(new SellerBuilder().withTags(\"Rich\").build()));","lastModifiedDate":"2022-03-28"},{"lineNumber":50,"author":{"gitId":"cwnm"},"content":"","lastModifiedDate":"2022-03-28"},{"lineNumber":51,"author":{"gitId":"cwnm"},"content":"        // Multiple keywords","lastModifiedDate":"2022-03-28"},{"lineNumber":52,"author":{"gitId":"cwnm"},"content":"        predicate \u003d new SellerTagsContainsKeywordsPredicate(Arrays.asList(\"r\", \"ich\"));","lastModifiedDate":"2022-03-28"},{"lineNumber":53,"author":{"gitId":"cwnm"},"content":"        assertTrue(predicate.test(new SellerBuilder().withTags(\"Rich\").build()));","lastModifiedDate":"2022-03-28"},{"lineNumber":54,"author":{"gitId":"cwnm"},"content":"","lastModifiedDate":"2022-03-28"},{"lineNumber":55,"author":{"gitId":"cwnm"},"content":"        // Only one matching keyword","lastModifiedDate":"2022-03-28"},{"lineNumber":56,"author":{"gitId":"cwnm"},"content":"        predicate \u003d new SellerTagsContainsKeywordsPredicate(Arrays.asList(\"rich\", \"poor\"));","lastModifiedDate":"2022-03-28"},{"lineNumber":57,"author":{"gitId":"cwnm"},"content":"        assertTrue(predicate.test(new SellerBuilder().withTags(\"richardpoor\").build()));","lastModifiedDate":"2022-03-28"},{"lineNumber":58,"author":{"gitId":"cwnm"},"content":"","lastModifiedDate":"2022-03-28"},{"lineNumber":59,"author":{"gitId":"cwnm"},"content":"        // Mixed-case keywords","lastModifiedDate":"2022-03-28"},{"lineNumber":60,"author":{"gitId":"cwnm"},"content":"        predicate \u003d new SellerTagsContainsKeywordsPredicate(Arrays.asList(\"rIcH\", \"pOoR\"));","lastModifiedDate":"2022-03-28"},{"lineNumber":61,"author":{"gitId":"cwnm"},"content":"        assertTrue(predicate.test(new SellerBuilder().withTags(\"Richard\").build()));","lastModifiedDate":"2022-03-28"},{"lineNumber":62,"author":{"gitId":"cwnm"},"content":"    }","lastModifiedDate":"2022-03-28"},{"lineNumber":63,"author":{"gitId":"cwnm"},"content":"","lastModifiedDate":"2022-03-28"},{"lineNumber":64,"author":{"gitId":"cwnm"},"content":"    @Test","lastModifiedDate":"2022-03-28"},{"lineNumber":65,"author":{"gitId":"cwnm"},"content":"    public void test_tagsDoesNotContainKeywords_returnsFalse() {","lastModifiedDate":"2022-03-28"},{"lineNumber":66,"author":{"gitId":"cwnm"},"content":"        // Zero keywords","lastModifiedDate":"2022-03-28"},{"lineNumber":67,"author":{"gitId":"cwnm"},"content":"        SellerTagsContainsKeywordsPredicate predicate \u003d new SellerTagsContainsKeywordsPredicate(","lastModifiedDate":"2022-03-28"},{"lineNumber":68,"author":{"gitId":"cwnm"},"content":"                Collections.emptyList());","lastModifiedDate":"2022-03-28"},{"lineNumber":69,"author":{"gitId":"cwnm"},"content":"        assertFalse(predicate.test(new SellerBuilder().withTags(\"Alice\").build()));","lastModifiedDate":"2022-03-28"},{"lineNumber":70,"author":{"gitId":"cwnm"},"content":"","lastModifiedDate":"2022-03-28"},{"lineNumber":71,"author":{"gitId":"cwnm"},"content":"        // Non-matching keyword","lastModifiedDate":"2022-03-28"},{"lineNumber":72,"author":{"gitId":"cwnm"},"content":"        predicate \u003d new SellerTagsContainsKeywordsPredicate(Arrays.asList(\"Carol\"));","lastModifiedDate":"2022-03-28"},{"lineNumber":73,"author":{"gitId":"cwnm"},"content":"        assertFalse(predicate.test(new SellerBuilder().withTags(\"AliceBob\").build()));","lastModifiedDate":"2022-03-28"},{"lineNumber":74,"author":{"gitId":"cwnm"},"content":"","lastModifiedDate":"2022-03-28"},{"lineNumber":75,"author":{"gitId":"cwnm"},"content":"        // Keywords match phone, email and address, but does not match Tags","lastModifiedDate":"2022-03-28"},{"lineNumber":76,"author":{"gitId":"cwnm"},"content":"        predicate \u003d new SellerTagsContainsKeywordsPredicate(","lastModifiedDate":"2022-03-28"},{"lineNumber":77,"author":{"gitId":"cwnm"},"content":"                Arrays.asList(\"12345\", \"alice@email.com\", \"Main\", \"Street\"));","lastModifiedDate":"2022-03-28"},{"lineNumber":78,"author":{"gitId":"cwnm"},"content":"        assertFalse(predicate.test(new SellerBuilder().withName(\"Alice\").withTags(\"LovesToSleep\")","lastModifiedDate":"2022-03-28"},{"lineNumber":79,"author":{"gitId":"cwnm"},"content":"                .build()));","lastModifiedDate":"2022-03-28"},{"lineNumber":80,"author":{"gitId":"cwnm"},"content":"    }","lastModifiedDate":"2022-03-28"},{"lineNumber":81,"author":{"gitId":"cwnm"},"content":"}","lastModifiedDate":"2022-03-28"}],"authorContributionMap":{"cwnm":81}},{"path":"src/test/java/seedu/address/model/seller/SellerTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"cwnm"},"content":"package seedu.address.model.seller;","lastModifiedDate":"2022-03-17"},{"lineNumber":2,"author":{"gitId":"cwnm"},"content":"","lastModifiedDate":"2022-03-17"},{"lineNumber":3,"author":{"gitId":"cwnm"},"content":"","lastModifiedDate":"2022-03-17"},{"lineNumber":4,"author":{"gitId":"cwnm"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2022-03-17"},{"lineNumber":5,"author":{"gitId":"cwnm"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2022-03-17"},{"lineNumber":6,"author":{"gitId":"cwnm"},"content":"import static org.junit.jupiter.api.Assertions.assertNotEquals;","lastModifiedDate":"2022-03-17"},{"lineNumber":7,"author":{"gitId":"cwnm"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2022-03-17"},{"lineNumber":8,"author":{"gitId":"chuashihong"},"content":"import static seedu.address.logic.commands.SellerCommandTestUtil.VALID_NAME_BOB;","lastModifiedDate":"2022-04-07"},{"lineNumber":9,"author":{"gitId":"chuashihong"},"content":"import static seedu.address.logic.commands.SellerCommandTestUtil.VALID_PHONE_BOB;","lastModifiedDate":"2022-04-07"},{"lineNumber":10,"author":{"gitId":"chuashihong"},"content":"import static seedu.address.logic.commands.SellerCommandTestUtil.VALID_TAG_HUSBAND;","lastModifiedDate":"2022-04-07"},{"lineNumber":11,"author":{"gitId":"cwnm"},"content":"import static seedu.address.testutil.Assert.assertThrows;","lastModifiedDate":"2022-03-17"},{"lineNumber":12,"author":{"gitId":"chuashihong"},"content":"import static seedu.address.testutil.TypicalSellers.ALICE;","lastModifiedDate":"2022-04-07"},{"lineNumber":13,"author":{"gitId":"cwnm"},"content":"import static seedu.address.testutil.TypicalSellers.BOB;","lastModifiedDate":"2022-03-17"},{"lineNumber":14,"author":{"gitId":"cwnm"},"content":"","lastModifiedDate":"2022-03-17"},{"lineNumber":15,"author":{"gitId":"cwnm"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2022-03-17"},{"lineNumber":16,"author":{"gitId":"WJunHong"},"content":"","lastModifiedDate":"2022-03-28"},{"lineNumber":17,"author":{"gitId":"WJunHong"},"content":"import seedu.address.model.property.Address;","lastModifiedDate":"2022-03-27"},{"lineNumber":18,"author":{"gitId":"cwnm"},"content":"import seedu.address.model.property.House;","lastModifiedDate":"2022-03-17"},{"lineNumber":19,"author":{"gitId":"cwnm"},"content":"import seedu.address.model.property.HouseType;","lastModifiedDate":"2022-03-17"},{"lineNumber":20,"author":{"gitId":"janald99"},"content":"import seedu.address.model.property.Location;","lastModifiedDate":"2022-03-31"},{"lineNumber":21,"author":{"gitId":"cwnm"},"content":"import seedu.address.model.property.PriceRange;","lastModifiedDate":"2022-03-17"},{"lineNumber":22,"author":{"gitId":"cwnm"},"content":"import seedu.address.model.property.PropertyToSell;","lastModifiedDate":"2022-03-17"},{"lineNumber":23,"author":{"gitId":"cwnm"},"content":"import seedu.address.testutil.SellerBuilder;","lastModifiedDate":"2022-03-17"},{"lineNumber":24,"author":{"gitId":"cwnm"},"content":"","lastModifiedDate":"2022-03-17"},{"lineNumber":25,"author":{"gitId":"cwnm"},"content":"","lastModifiedDate":"2022-03-17"},{"lineNumber":26,"author":{"gitId":"cwnm"},"content":"public class SellerTest {","lastModifiedDate":"2022-03-17"},{"lineNumber":27,"author":{"gitId":"cwnm"},"content":"    @Test","lastModifiedDate":"2022-03-17"},{"lineNumber":28,"author":{"gitId":"cwnm"},"content":"    public void asObservableList_modifyList_throwsUnsupportedOperationException() {","lastModifiedDate":"2022-03-17"},{"lineNumber":29,"author":{"gitId":"cwnm"},"content":"        Seller seller \u003d new SellerBuilder().build();","lastModifiedDate":"2022-03-17"},{"lineNumber":30,"author":{"gitId":"cwnm"},"content":"        assertThrows(UnsupportedOperationException.class, () -\u003e seller.getTags().remove(0));","lastModifiedDate":"2022-03-17"},{"lineNumber":31,"author":{"gitId":"cwnm"},"content":"    }","lastModifiedDate":"2022-03-17"},{"lineNumber":32,"author":{"gitId":"cwnm"},"content":"","lastModifiedDate":"2022-03-17"},{"lineNumber":33,"author":{"gitId":"cwnm"},"content":"    @Test","lastModifiedDate":"2022-03-17"},{"lineNumber":34,"author":{"gitId":"cwnm"},"content":"    public void isSameSeller() {","lastModifiedDate":"2022-03-17"},{"lineNumber":35,"author":{"gitId":"cwnm"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2022-03-17"},{"lineNumber":36,"author":{"gitId":"chuashihong"},"content":"        assertTrue(ALICE.isSameclient(ALICE));","lastModifiedDate":"2022-04-07"},{"lineNumber":37,"author":{"gitId":"cwnm"},"content":"","lastModifiedDate":"2022-03-17"},{"lineNumber":38,"author":{"gitId":"cwnm"},"content":"        // null -\u003e returns false","lastModifiedDate":"2022-03-17"},{"lineNumber":39,"author":{"gitId":"chuashihong"},"content":"        assertFalse(ALICE.isSameclient(null));","lastModifiedDate":"2022-04-07"},{"lineNumber":40,"author":{"gitId":"cwnm"},"content":"","lastModifiedDate":"2022-03-17"},{"lineNumber":41,"author":{"gitId":"cwnm"},"content":"        // same name, all other attributes different -\u003e returns true","lastModifiedDate":"2022-03-17"},{"lineNumber":42,"author":{"gitId":"chuashihong"},"content":"        Seller editedYuqi \u003d new SellerBuilder(ALICE).withPhone(VALID_PHONE_BOB).withTags(VALID_TAG_HUSBAND).build();","lastModifiedDate":"2022-04-07"},{"lineNumber":43,"author":{"gitId":"chuashihong"},"content":"        assertTrue(ALICE.isSameclient(editedYuqi));","lastModifiedDate":"2022-04-07"},{"lineNumber":44,"author":{"gitId":"cwnm"},"content":"","lastModifiedDate":"2022-03-17"},{"lineNumber":45,"author":{"gitId":"cwnm"},"content":"        // different name, all other attributes same -\u003e returns false","lastModifiedDate":"2022-03-17"},{"lineNumber":46,"author":{"gitId":"chuashihong"},"content":"        editedYuqi \u003d new SellerBuilder(ALICE).withName(VALID_NAME_BOB).build();","lastModifiedDate":"2022-04-07"},{"lineNumber":47,"author":{"gitId":"chuashihong"},"content":"        assertFalse(ALICE.isSameclient(editedYuqi));","lastModifiedDate":"2022-04-07"},{"lineNumber":48,"author":{"gitId":"cwnm"},"content":"","lastModifiedDate":"2022-03-17"},{"lineNumber":49,"author":{"gitId":"cwnm"},"content":"        // name differs in case, all other attributes same -\u003e returns false","lastModifiedDate":"2022-03-17"},{"lineNumber":50,"author":{"gitId":"cwnm"},"content":"        Seller editedBob \u003d new SellerBuilder(BOB).withName(VALID_NAME_BOB.toLowerCase()).build();","lastModifiedDate":"2022-03-17"},{"lineNumber":51,"author":{"gitId":"cwnm"},"content":"        assertFalse(BOB.isSameclient(editedBob));","lastModifiedDate":"2022-03-17"},{"lineNumber":52,"author":{"gitId":"cwnm"},"content":"","lastModifiedDate":"2022-03-17"},{"lineNumber":53,"author":{"gitId":"cwnm"},"content":"        // name has trailing spaces, all other attributes same -\u003e returns false","lastModifiedDate":"2022-03-17"},{"lineNumber":54,"author":{"gitId":"cwnm"},"content":"        String nameWithTrailingSpaces \u003d VALID_NAME_BOB + \" \";","lastModifiedDate":"2022-03-17"},{"lineNumber":55,"author":{"gitId":"cwnm"},"content":"        editedBob \u003d new SellerBuilder(BOB).withName(nameWithTrailingSpaces).build();","lastModifiedDate":"2022-03-17"},{"lineNumber":56,"author":{"gitId":"cwnm"},"content":"        assertFalse(BOB.isSameclient(editedBob));","lastModifiedDate":"2022-03-17"},{"lineNumber":57,"author":{"gitId":"cwnm"},"content":"    }","lastModifiedDate":"2022-03-17"},{"lineNumber":58,"author":{"gitId":"cwnm"},"content":"","lastModifiedDate":"2022-03-17"},{"lineNumber":59,"author":{"gitId":"cwnm"},"content":"    @Test","lastModifiedDate":"2022-03-17"},{"lineNumber":60,"author":{"gitId":"cwnm"},"content":"    public void equals() {","lastModifiedDate":"2022-03-17"},{"lineNumber":61,"author":{"gitId":"cwnm"},"content":"        // same values -\u003e returns true","lastModifiedDate":"2022-03-17"},{"lineNumber":62,"author":{"gitId":"chuashihong"},"content":"        Seller yuqiCopy \u003d new SellerBuilder(ALICE).build();","lastModifiedDate":"2022-04-07"},{"lineNumber":63,"author":{"gitId":"chuashihong"},"content":"        assertEquals(ALICE, yuqiCopy);","lastModifiedDate":"2022-04-07"},{"lineNumber":64,"author":{"gitId":"cwnm"},"content":"","lastModifiedDate":"2022-03-17"},{"lineNumber":65,"author":{"gitId":"cwnm"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2022-03-17"},{"lineNumber":66,"author":{"gitId":"chuashihong"},"content":"        assertEquals(ALICE, ALICE);","lastModifiedDate":"2022-04-07"},{"lineNumber":67,"author":{"gitId":"cwnm"},"content":"","lastModifiedDate":"2022-03-17"},{"lineNumber":68,"author":{"gitId":"cwnm"},"content":"        // null -\u003e returns false","lastModifiedDate":"2022-03-17"},{"lineNumber":69,"author":{"gitId":"chuashihong"},"content":"        assertNotEquals(null, ALICE);","lastModifiedDate":"2022-04-07"},{"lineNumber":70,"author":{"gitId":"cwnm"},"content":"","lastModifiedDate":"2022-03-17"},{"lineNumber":71,"author":{"gitId":"cwnm"},"content":"        // different type -\u003e returns false","lastModifiedDate":"2022-03-17"},{"lineNumber":72,"author":{"gitId":"chuashihong"},"content":"        assertNotEquals(5, ALICE);","lastModifiedDate":"2022-04-07"},{"lineNumber":73,"author":{"gitId":"cwnm"},"content":"","lastModifiedDate":"2022-03-17"},{"lineNumber":74,"author":{"gitId":"cwnm"},"content":"        // different client -\u003e returns false","lastModifiedDate":"2022-03-17"},{"lineNumber":75,"author":{"gitId":"chuashihong"},"content":"        assertNotEquals(ALICE, BOB);","lastModifiedDate":"2022-04-07"},{"lineNumber":76,"author":{"gitId":"cwnm"},"content":"","lastModifiedDate":"2022-03-17"},{"lineNumber":77,"author":{"gitId":"cwnm"},"content":"        // different name -\u003e returns false","lastModifiedDate":"2022-03-17"},{"lineNumber":78,"author":{"gitId":"chuashihong"},"content":"        Seller editedYuqi \u003d new SellerBuilder(ALICE).withName(VALID_NAME_BOB).build();","lastModifiedDate":"2022-04-07"},{"lineNumber":79,"author":{"gitId":"chuashihong"},"content":"        assertNotEquals(ALICE, editedYuqi);","lastModifiedDate":"2022-04-07"},{"lineNumber":80,"author":{"gitId":"cwnm"},"content":"","lastModifiedDate":"2022-03-17"},{"lineNumber":81,"author":{"gitId":"cwnm"},"content":"        // different phone -\u003e returns false","lastModifiedDate":"2022-03-17"},{"lineNumber":82,"author":{"gitId":"chuashihong"},"content":"        editedYuqi \u003d new SellerBuilder(ALICE).withPhone(VALID_PHONE_BOB).build();","lastModifiedDate":"2022-04-07"},{"lineNumber":83,"author":{"gitId":"chuashihong"},"content":"        assertNotEquals(ALICE, editedYuqi);","lastModifiedDate":"2022-04-07"},{"lineNumber":84,"author":{"gitId":"cwnm"},"content":"","lastModifiedDate":"2022-03-17"},{"lineNumber":85,"author":{"gitId":"cwnm"},"content":"        // different tags -\u003e returns false","lastModifiedDate":"2022-03-17"},{"lineNumber":86,"author":{"gitId":"chuashihong"},"content":"        editedYuqi \u003d new SellerBuilder(ALICE).withTags(VALID_TAG_HUSBAND).build();","lastModifiedDate":"2022-04-07"},{"lineNumber":87,"author":{"gitId":"chuashihong"},"content":"        assertNotEquals(ALICE, editedYuqi);","lastModifiedDate":"2022-04-07"},{"lineNumber":88,"author":{"gitId":"cwnm"},"content":"","lastModifiedDate":"2022-03-17"},{"lineNumber":89,"author":{"gitId":"cwnm"},"content":"","lastModifiedDate":"2022-03-17"},{"lineNumber":90,"author":{"gitId":"cwnm"},"content":"        PriceRange pr1;","lastModifiedDate":"2022-03-17"},{"lineNumber":91,"author":{"gitId":"cwnm"},"content":"        PriceRange pr2;","lastModifiedDate":"2022-03-17"},{"lineNumber":92,"author":{"gitId":"cwnm"},"content":"        PriceRange pr3;","lastModifiedDate":"2022-03-17"},{"lineNumber":93,"author":{"gitId":"cwnm"},"content":"","lastModifiedDate":"2022-03-17"},{"lineNumber":94,"author":{"gitId":"janald99"},"content":"        Location location1 \u003d new Location(\"Serangoon\");","lastModifiedDate":"2022-03-31"},{"lineNumber":95,"author":{"gitId":"janald99"},"content":"        Location location2 \u003d new Location(\"Kovan\");","lastModifiedDate":"2022-03-31"},{"lineNumber":96,"author":{"gitId":"janald99"},"content":"        Location location3 \u003d new Location(\"Bishan\");","lastModifiedDate":"2022-03-31"},{"lineNumber":97,"author":{"gitId":"cwnm"},"content":"","lastModifiedDate":"2022-03-17"},{"lineNumber":98,"author":{"gitId":"cwnm"},"content":"        HouseType ht1 \u003d HouseType.HDB_FLAT;","lastModifiedDate":"2022-03-17"},{"lineNumber":99,"author":{"gitId":"cwnm"},"content":"        HouseType ht2 \u003d HouseType.BUNGALOW;","lastModifiedDate":"2022-03-17"},{"lineNumber":100,"author":{"gitId":"cwnm"},"content":"        HouseType ht3 \u003d HouseType.APARTMENT;","lastModifiedDate":"2022-03-17"},{"lineNumber":101,"author":{"gitId":"cwnm"},"content":"","lastModifiedDate":"2022-03-17"},{"lineNumber":102,"author":{"gitId":"cwnm"},"content":"        House h1 \u003d new House(ht1, location1);","lastModifiedDate":"2022-03-17"},{"lineNumber":103,"author":{"gitId":"cwnm"},"content":"        House h2 \u003d new House(ht2, location2);","lastModifiedDate":"2022-03-17"},{"lineNumber":104,"author":{"gitId":"cwnm"},"content":"        House h3 \u003d new House(ht3, location3);","lastModifiedDate":"2022-03-17"},{"lineNumber":105,"author":{"gitId":"cwnm"},"content":"","lastModifiedDate":"2022-03-17"},{"lineNumber":106,"author":{"gitId":"WJunHong"},"content":"        Address a1 \u003d new Address(\"Serangoon Avenue 3 Block 201\");","lastModifiedDate":"2022-03-27"},{"lineNumber":107,"author":{"gitId":"WJunHong"},"content":"        Address a2 \u003d new Address(\"Rosyth Road 546208\");","lastModifiedDate":"2022-03-27"},{"lineNumber":108,"author":{"gitId":"WJunHong"},"content":"        Address a3 \u003d new Address(\"61 Bishan Street 21\");","lastModifiedDate":"2022-03-27"},{"lineNumber":109,"author":{"gitId":"cwnm"},"content":"","lastModifiedDate":"2022-03-17"},{"lineNumber":110,"author":{"gitId":"cwnm"},"content":"        pr1 \u003d new PriceRange(100000, 200000);","lastModifiedDate":"2022-03-17"},{"lineNumber":111,"author":{"gitId":"cwnm"},"content":"        pr2 \u003d new PriceRange(200000, 300000);","lastModifiedDate":"2022-03-17"},{"lineNumber":112,"author":{"gitId":"cwnm"},"content":"        pr3 \u003d new PriceRange(300000, 400000);","lastModifiedDate":"2022-03-17"},{"lineNumber":113,"author":{"gitId":"cwnm"},"content":"","lastModifiedDate":"2022-03-17"},{"lineNumber":114,"author":{"gitId":"cwnm"},"content":"        PropertyToSell ptb1 \u003d new PropertyToSell(h1, pr1, a1);","lastModifiedDate":"2022-03-17"},{"lineNumber":115,"author":{"gitId":"cwnm"},"content":"        PropertyToSell ptb2 \u003d new PropertyToSell(h2, pr2, a2);","lastModifiedDate":"2022-03-17"},{"lineNumber":116,"author":{"gitId":"cwnm"},"content":"        PropertyToSell ptb3 \u003d new PropertyToSell(h3, pr3, a3);","lastModifiedDate":"2022-03-17"},{"lineNumber":117,"author":{"gitId":"cwnm"},"content":"","lastModifiedDate":"2022-03-17"},{"lineNumber":118,"author":{"gitId":"cwnm"},"content":"    }","lastModifiedDate":"2022-03-17"},{"lineNumber":119,"author":{"gitId":"cwnm"},"content":"","lastModifiedDate":"2022-03-17"},{"lineNumber":120,"author":{"gitId":"cwnm"},"content":"    @Test","lastModifiedDate":"2022-03-17"},{"lineNumber":121,"author":{"gitId":"cwnm"},"content":"    public void hasSameProperties() {","lastModifiedDate":"2022-03-17"},{"lineNumber":122,"author":{"gitId":"cwnm"},"content":"        PriceRange pr1;","lastModifiedDate":"2022-03-17"},{"lineNumber":123,"author":{"gitId":"cwnm"},"content":"        PriceRange pr2;","lastModifiedDate":"2022-03-17"},{"lineNumber":124,"author":{"gitId":"cwnm"},"content":"        PriceRange pr3;","lastModifiedDate":"2022-03-17"},{"lineNumber":125,"author":{"gitId":"cwnm"},"content":"","lastModifiedDate":"2022-03-17"},{"lineNumber":126,"author":{"gitId":"janald99"},"content":"        Location location1 \u003d new Location(\"Kent Ridge\");","lastModifiedDate":"2022-03-31"},{"lineNumber":127,"author":{"gitId":"janald99"},"content":"        Location location2 \u003d new Location(\"Tampines\");","lastModifiedDate":"2022-03-31"},{"lineNumber":128,"author":{"gitId":"janald99"},"content":"        Location location3 \u003d new Location(\"Bishan\");","lastModifiedDate":"2022-03-31"},{"lineNumber":129,"author":{"gitId":"cwnm"},"content":"","lastModifiedDate":"2022-03-17"},{"lineNumber":130,"author":{"gitId":"cwnm"},"content":"        HouseType ht1 \u003d HouseType.HDB_FLAT;","lastModifiedDate":"2022-03-17"},{"lineNumber":131,"author":{"gitId":"cwnm"},"content":"        HouseType ht2 \u003d HouseType.BUNGALOW;","lastModifiedDate":"2022-03-17"},{"lineNumber":132,"author":{"gitId":"cwnm"},"content":"        HouseType ht3 \u003d HouseType.APARTMENT;","lastModifiedDate":"2022-03-17"},{"lineNumber":133,"author":{"gitId":"cwnm"},"content":"","lastModifiedDate":"2022-03-17"},{"lineNumber":134,"author":{"gitId":"cwnm"},"content":"        House h1 \u003d new House(ht1, location1);","lastModifiedDate":"2022-03-17"},{"lineNumber":135,"author":{"gitId":"cwnm"},"content":"        House h2 \u003d new House(ht2, location2);","lastModifiedDate":"2022-03-17"},{"lineNumber":136,"author":{"gitId":"cwnm"},"content":"        House h3 \u003d new House(ht3, location3);","lastModifiedDate":"2022-03-17"},{"lineNumber":137,"author":{"gitId":"cwnm"},"content":"","lastModifiedDate":"2022-03-17"},{"lineNumber":138,"author":{"gitId":"WJunHong"},"content":"        Address a1 \u003d new Address(\"Serangoon Avenue 3 Block 201\");","lastModifiedDate":"2022-03-27"},{"lineNumber":139,"author":{"gitId":"WJunHong"},"content":"        Address a2 \u003d new Address(\"Rosyth Road 546208\");","lastModifiedDate":"2022-03-27"},{"lineNumber":140,"author":{"gitId":"WJunHong"},"content":"        Address a3 \u003d new Address(\"61 Bishan Street 21\");","lastModifiedDate":"2022-03-27"},{"lineNumber":141,"author":{"gitId":"cwnm"},"content":"","lastModifiedDate":"2022-03-17"},{"lineNumber":142,"author":{"gitId":"cwnm"},"content":"        pr1 \u003d new PriceRange(100000, 200000);","lastModifiedDate":"2022-03-17"},{"lineNumber":143,"author":{"gitId":"cwnm"},"content":"        pr2 \u003d new PriceRange(200000, 300000);","lastModifiedDate":"2022-03-17"},{"lineNumber":144,"author":{"gitId":"cwnm"},"content":"        pr3 \u003d new PriceRange(300000, 400000);","lastModifiedDate":"2022-03-17"},{"lineNumber":145,"author":{"gitId":"cwnm"},"content":"","lastModifiedDate":"2022-03-17"},{"lineNumber":146,"author":{"gitId":"cwnm"},"content":"        PropertyToSell pts1 \u003d new PropertyToSell(h1, pr1, a1);","lastModifiedDate":"2022-03-17"},{"lineNumber":147,"author":{"gitId":"cwnm"},"content":"        PropertyToSell pts2 \u003d new PropertyToSell(h2, pr2, a2);","lastModifiedDate":"2022-03-17"},{"lineNumber":148,"author":{"gitId":"cwnm"},"content":"        PropertyToSell pts3 \u003d new PropertyToSell(h3, pr3, a3);","lastModifiedDate":"2022-03-17"},{"lineNumber":149,"author":{"gitId":"cwnm"},"content":"","lastModifiedDate":"2022-03-17"},{"lineNumber":150,"author":{"gitId":"cwnm"},"content":"    }","lastModifiedDate":"2022-03-17"},{"lineNumber":151,"author":{"gitId":"cwnm"},"content":"}","lastModifiedDate":"2022-03-17"}],"authorContributionMap":{"janald99":7,"WJunHong":8,"cwnm":114,"chuashihong":22}},{"path":"src/test/java/seedu/address/storage/JsonAdaptedBuyerTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"chuashihong"},"content":"package seedu.address.storage;","lastModifiedDate":"2022-03-30"},{"lineNumber":2,"author":{"gitId":"chuashihong"},"content":"","lastModifiedDate":"2022-03-30"},{"lineNumber":3,"author":{"gitId":"chuashihong"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2022-03-30"},{"lineNumber":4,"author":{"gitId":"chuashihong"},"content":"import static seedu.address.storage.JsonAdaptedBuyer.MISSING_FIELD_MESSAGE_FORMAT;","lastModifiedDate":"2022-03-30"},{"lineNumber":5,"author":{"gitId":"chuashihong"},"content":"import static seedu.address.testutil.Assert.assertThrows;","lastModifiedDate":"2022-03-30"},{"lineNumber":6,"author":{"gitId":"chuashihong"},"content":"import static seedu.address.testutil.TypicalBuyers.BENSON;","lastModifiedDate":"2022-03-30"},{"lineNumber":7,"author":{"gitId":"chuashihong"},"content":"","lastModifiedDate":"2022-03-30"},{"lineNumber":8,"author":{"gitId":"chuashihong"},"content":"import java.util.ArrayList;","lastModifiedDate":"2022-03-30"},{"lineNumber":9,"author":{"gitId":"chuashihong"},"content":"import java.util.List;","lastModifiedDate":"2022-03-30"},{"lineNumber":10,"author":{"gitId":"chuashihong"},"content":"import java.util.stream.Collectors;","lastModifiedDate":"2022-03-30"},{"lineNumber":11,"author":{"gitId":"chuashihong"},"content":"","lastModifiedDate":"2022-03-30"},{"lineNumber":12,"author":{"gitId":"chuashihong"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2022-03-30"},{"lineNumber":13,"author":{"gitId":"chuashihong"},"content":"","lastModifiedDate":"2022-03-30"},{"lineNumber":14,"author":{"gitId":"chuashihong"},"content":"import seedu.address.commons.exceptions.IllegalValueException;","lastModifiedDate":"2022-03-30"},{"lineNumber":15,"author":{"gitId":"chuashihong"},"content":"import seedu.address.model.client.Name;","lastModifiedDate":"2022-03-30"},{"lineNumber":16,"author":{"gitId":"chuashihong"},"content":"import seedu.address.model.client.Phone;","lastModifiedDate":"2022-03-30"},{"lineNumber":17,"author":{"gitId":"chuashihong"},"content":"","lastModifiedDate":"2022-03-30"},{"lineNumber":18,"author":{"gitId":"chuashihong"},"content":"public class JsonAdaptedBuyerTest {","lastModifiedDate":"2022-03-30"},{"lineNumber":19,"author":{"gitId":"chuashihong"},"content":"    private static final String INVALID_NAME \u003d \"R@chel\";","lastModifiedDate":"2022-03-30"},{"lineNumber":20,"author":{"gitId":"chuashihong"},"content":"    private static final String INVALID_PHONE \u003d \"+651234\";","lastModifiedDate":"2022-03-30"},{"lineNumber":21,"author":{"gitId":"chuashihong"},"content":"    private static final String INVALID_TAG \u003d \"#friend\";","lastModifiedDate":"2022-03-30"},{"lineNumber":22,"author":{"gitId":"chuashihong"},"content":"","lastModifiedDate":"2022-03-30"},{"lineNumber":23,"author":{"gitId":"chuashihong"},"content":"","lastModifiedDate":"2022-03-30"},{"lineNumber":24,"author":{"gitId":"chuashihong"},"content":"    private static final String VALID_NAME \u003d BENSON.getName().toString();","lastModifiedDate":"2022-03-30"},{"lineNumber":25,"author":{"gitId":"chuashihong"},"content":"    private static final String VALID_PHONE \u003d BENSON.getPhone().toString();","lastModifiedDate":"2022-03-30"},{"lineNumber":26,"author":{"gitId":"chuashihong"},"content":"    private static final List\u003cJsonAdaptedTag\u003e VALID_TAGS \u003d BENSON.getTags().stream()","lastModifiedDate":"2022-03-30"},{"lineNumber":27,"author":{"gitId":"chuashihong"},"content":"            .map(JsonAdaptedTag::new)","lastModifiedDate":"2022-03-30"},{"lineNumber":28,"author":{"gitId":"chuashihong"},"content":"            .collect(Collectors.toList());","lastModifiedDate":"2022-03-30"},{"lineNumber":29,"author":{"gitId":"chuashihong"},"content":"    private static final String VALID_APPOINTMENT \u003d BENSON.getAppointment().toString();","lastModifiedDate":"2022-03-30"},{"lineNumber":30,"author":{"gitId":"chuashihong"},"content":"    private static final JsonAdaptedPropertyToBuy VALID_PROPERTY \u003d","lastModifiedDate":"2022-04-08"},{"lineNumber":31,"author":{"gitId":"chuashihong"},"content":"            new JsonAdaptedPropertyToBuy(BENSON.getPropertyToBuy());","lastModifiedDate":"2022-03-30"},{"lineNumber":32,"author":{"gitId":"chuashihong"},"content":"    @Test","lastModifiedDate":"2022-03-30"},{"lineNumber":33,"author":{"gitId":"chuashihong"},"content":"    public void toModelType_validBuyerDetails_returnsBuyer() throws Exception {","lastModifiedDate":"2022-03-30"},{"lineNumber":34,"author":{"gitId":"chuashihong"},"content":"        JsonAdaptedBuyer buyer \u003d new JsonAdaptedBuyer(BENSON);","lastModifiedDate":"2022-03-30"},{"lineNumber":35,"author":{"gitId":"chuashihong"},"content":"        assertEquals(BENSON, buyer.toModelType());","lastModifiedDate":"2022-03-30"},{"lineNumber":36,"author":{"gitId":"chuashihong"},"content":"    }","lastModifiedDate":"2022-03-30"},{"lineNumber":37,"author":{"gitId":"chuashihong"},"content":"","lastModifiedDate":"2022-03-30"},{"lineNumber":38,"author":{"gitId":"chuashihong"},"content":"    @Test","lastModifiedDate":"2022-03-30"},{"lineNumber":39,"author":{"gitId":"chuashihong"},"content":"    public void toModelType_invalidName_throwsIllegalValueException() {","lastModifiedDate":"2022-03-30"},{"lineNumber":40,"author":{"gitId":"chuashihong"},"content":"        JsonAdaptedBuyer buyer \u003d","lastModifiedDate":"2022-03-30"},{"lineNumber":41,"author":{"gitId":"chuashihong"},"content":"                new JsonAdaptedBuyer(INVALID_NAME, VALID_PHONE, VALID_APPOINTMENT, VALID_TAGS, VALID_PROPERTY);","lastModifiedDate":"2022-04-08"},{"lineNumber":42,"author":{"gitId":"chuashihong"},"content":"        String expectedMessage \u003d Name.MESSAGE_CONSTRAINTS;","lastModifiedDate":"2022-03-30"},{"lineNumber":43,"author":{"gitId":"chuashihong"},"content":"        assertThrows(IllegalValueException.class, expectedMessage, buyer::toModelType);","lastModifiedDate":"2022-03-30"},{"lineNumber":44,"author":{"gitId":"chuashihong"},"content":"    }","lastModifiedDate":"2022-03-30"},{"lineNumber":45,"author":{"gitId":"chuashihong"},"content":"","lastModifiedDate":"2022-03-30"},{"lineNumber":46,"author":{"gitId":"chuashihong"},"content":"    @Test","lastModifiedDate":"2022-03-30"},{"lineNumber":47,"author":{"gitId":"chuashihong"},"content":"    public void toModelType_nullName_throwsIllegalValueException() {","lastModifiedDate":"2022-03-30"},{"lineNumber":48,"author":{"gitId":"chuashihong"},"content":"        JsonAdaptedBuyer buyer \u003d new JsonAdaptedBuyer(null, VALID_PHONE, VALID_APPOINTMENT, VALID_TAGS,","lastModifiedDate":"2022-03-30"},{"lineNumber":49,"author":{"gitId":"chuashihong"},"content":"                VALID_PROPERTY);","lastModifiedDate":"2022-04-08"},{"lineNumber":50,"author":{"gitId":"chuashihong"},"content":"        String expectedMessage \u003d String.format(MISSING_FIELD_MESSAGE_FORMAT, Name.class.getSimpleName());","lastModifiedDate":"2022-03-30"},{"lineNumber":51,"author":{"gitId":"chuashihong"},"content":"        assertThrows(IllegalValueException.class, expectedMessage, buyer::toModelType);","lastModifiedDate":"2022-03-30"},{"lineNumber":52,"author":{"gitId":"chuashihong"},"content":"    }","lastModifiedDate":"2022-03-30"},{"lineNumber":53,"author":{"gitId":"chuashihong"},"content":"","lastModifiedDate":"2022-03-30"},{"lineNumber":54,"author":{"gitId":"chuashihong"},"content":"    @Test","lastModifiedDate":"2022-03-30"},{"lineNumber":55,"author":{"gitId":"chuashihong"},"content":"    public void toModelType_invalidPhone_throwsIllegalValueException() {","lastModifiedDate":"2022-03-30"},{"lineNumber":56,"author":{"gitId":"chuashihong"},"content":"        JsonAdaptedBuyer buyer \u003d","lastModifiedDate":"2022-03-30"},{"lineNumber":57,"author":{"gitId":"chuashihong"},"content":"                new JsonAdaptedBuyer(VALID_NAME, INVALID_PHONE, VALID_APPOINTMENT, VALID_TAGS, VALID_PROPERTY);","lastModifiedDate":"2022-04-08"},{"lineNumber":58,"author":{"gitId":"chuashihong"},"content":"        String expectedMessage \u003d Phone.MESSAGE_CONSTRAINTS;","lastModifiedDate":"2022-03-30"},{"lineNumber":59,"author":{"gitId":"chuashihong"},"content":"        assertThrows(IllegalValueException.class, expectedMessage, buyer::toModelType);","lastModifiedDate":"2022-03-30"},{"lineNumber":60,"author":{"gitId":"chuashihong"},"content":"    }","lastModifiedDate":"2022-03-30"},{"lineNumber":61,"author":{"gitId":"chuashihong"},"content":"","lastModifiedDate":"2022-03-30"},{"lineNumber":62,"author":{"gitId":"chuashihong"},"content":"    @Test","lastModifiedDate":"2022-03-30"},{"lineNumber":63,"author":{"gitId":"chuashihong"},"content":"    public void toModelType_nullPhone_throwsIllegalValueException() {","lastModifiedDate":"2022-03-30"},{"lineNumber":64,"author":{"gitId":"chuashihong"},"content":"        JsonAdaptedBuyer buyer \u003d new JsonAdaptedBuyer(VALID_NAME, null, VALID_APPOINTMENT, VALID_TAGS,","lastModifiedDate":"2022-03-30"},{"lineNumber":65,"author":{"gitId":"chuashihong"},"content":"                VALID_PROPERTY);","lastModifiedDate":"2022-04-08"},{"lineNumber":66,"author":{"gitId":"chuashihong"},"content":"        String expectedMessage \u003d String.format(MISSING_FIELD_MESSAGE_FORMAT, Phone.class.getSimpleName());","lastModifiedDate":"2022-03-30"},{"lineNumber":67,"author":{"gitId":"chuashihong"},"content":"        assertThrows(IllegalValueException.class, expectedMessage, buyer::toModelType);","lastModifiedDate":"2022-03-30"},{"lineNumber":68,"author":{"gitId":"chuashihong"},"content":"    }","lastModifiedDate":"2022-03-30"},{"lineNumber":69,"author":{"gitId":"chuashihong"},"content":"","lastModifiedDate":"2022-03-30"},{"lineNumber":70,"author":{"gitId":"chuashihong"},"content":"    @Test","lastModifiedDate":"2022-03-30"},{"lineNumber":71,"author":{"gitId":"chuashihong"},"content":"    public void toModelType_invalidTags_throwsIllegalValueException() {","lastModifiedDate":"2022-03-30"},{"lineNumber":72,"author":{"gitId":"chuashihong"},"content":"        List\u003cJsonAdaptedTag\u003e invalidTags \u003d new ArrayList\u003c\u003e(VALID_TAGS);","lastModifiedDate":"2022-03-30"},{"lineNumber":73,"author":{"gitId":"chuashihong"},"content":"        invalidTags.add(new JsonAdaptedTag(INVALID_TAG));","lastModifiedDate":"2022-03-30"},{"lineNumber":74,"author":{"gitId":"chuashihong"},"content":"        JsonAdaptedBuyer buyer \u003d","lastModifiedDate":"2022-03-30"},{"lineNumber":75,"author":{"gitId":"chuashihong"},"content":"                new JsonAdaptedBuyer(VALID_NAME, VALID_PHONE,","lastModifiedDate":"2022-03-30"},{"lineNumber":76,"author":{"gitId":"chuashihong"},"content":"                        VALID_APPOINTMENT, invalidTags, VALID_PROPERTY);","lastModifiedDate":"2022-04-08"},{"lineNumber":77,"author":{"gitId":"chuashihong"},"content":"        assertThrows(IllegalValueException.class, buyer::toModelType);","lastModifiedDate":"2022-03-30"},{"lineNumber":78,"author":{"gitId":"chuashihong"},"content":"    }","lastModifiedDate":"2022-03-30"},{"lineNumber":79,"author":{"gitId":"chuashihong"},"content":"","lastModifiedDate":"2022-03-30"},{"lineNumber":80,"author":{"gitId":"chuashihong"},"content":"}","lastModifiedDate":"2022-03-30"}],"authorContributionMap":{"chuashihong":80}},{"path":"src/test/java/seedu/address/storage/JsonAdaptedClientTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.storage;","lastModifiedDate":"2018-08-13"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"cwnm"},"content":"import static seedu.address.storage.JsonAdaptedClient.MISSING_FIELD_MESSAGE_FORMAT;","lastModifiedDate":"2022-03-04"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.Assert.assertThrows;","lastModifiedDate":"2019-03-14"},{"lineNumber":6,"author":{"gitId":"cwnm"},"content":"import static seedu.address.testutil.TypicalClients.BENSON;","lastModifiedDate":"2022-03-04"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import java.util.ArrayList;","lastModifiedDate":"2018-08-13"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import java.util.List;","lastModifiedDate":"2018-08-13"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import java.util.stream.Collectors;","lastModifiedDate":"2018-08-13"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import seedu.address.commons.exceptions.IllegalValueException;","lastModifiedDate":"2018-08-13"},{"lineNumber":15,"author":{"gitId":"cwnm"},"content":"import seedu.address.model.client.Name;","lastModifiedDate":"2022-03-04"},{"lineNumber":16,"author":{"gitId":"cwnm"},"content":"import seedu.address.model.client.Phone;","lastModifiedDate":"2022-03-04"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":18,"author":{"gitId":"cwnm"},"content":"public class JsonAdaptedClientTest {","lastModifiedDate":"2022-03-04"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    private static final String INVALID_NAME \u003d \"R@chel\";","lastModifiedDate":"2018-08-13"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    private static final String INVALID_PHONE \u003d \"+651234\";","lastModifiedDate":"2018-08-13"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    private static final String INVALID_TAG \u003d \"#friend\";","lastModifiedDate":"2018-08-13"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":23,"author":{"gitId":"chuashihong"},"content":"","lastModifiedDate":"2022-03-02"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    private static final String VALID_NAME \u003d BENSON.getName().toString();","lastModifiedDate":"2018-08-13"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    private static final String VALID_PHONE \u003d BENSON.getPhone().toString();","lastModifiedDate":"2018-08-13"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    private static final List\u003cJsonAdaptedTag\u003e VALID_TAGS \u003d BENSON.getTags().stream()","lastModifiedDate":"2018-08-13"},{"lineNumber":27,"author":{"gitId":"-"},"content":"            .map(JsonAdaptedTag::new)","lastModifiedDate":"2018-08-13"},{"lineNumber":28,"author":{"gitId":"-"},"content":"            .collect(Collectors.toList());","lastModifiedDate":"2018-08-13"},{"lineNumber":29,"author":{"gitId":"Jacky142857"},"content":"    private static final String VALID_APPOINTMENT \u003d BENSON.getAppointment().toString();","lastModifiedDate":"2022-03-11"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-13"},{"lineNumber":31,"author":{"gitId":"cwnm"},"content":"    public void toModelType_validclientDetails_returnsclient() throws Exception {","lastModifiedDate":"2022-03-04"},{"lineNumber":32,"author":{"gitId":"cwnm"},"content":"        JsonAdaptedClient client \u003d new JsonAdaptedClient(BENSON);","lastModifiedDate":"2022-03-04"},{"lineNumber":33,"author":{"gitId":"cwnm"},"content":"        assertEquals(BENSON, client.toModelType());","lastModifiedDate":"2022-03-04"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-13"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    public void toModelType_invalidName_throwsIllegalValueException() {","lastModifiedDate":"2018-08-13"},{"lineNumber":38,"author":{"gitId":"cwnm"},"content":"        JsonAdaptedClient client \u003d","lastModifiedDate":"2022-03-04"},{"lineNumber":39,"author":{"gitId":"Jacky142857"},"content":"                new JsonAdaptedClient(INVALID_NAME, VALID_PHONE, VALID_APPOINTMENT, VALID_TAGS);","lastModifiedDate":"2022-03-19"},{"lineNumber":40,"author":{"gitId":"-"},"content":"        String expectedMessage \u003d Name.MESSAGE_CONSTRAINTS;","lastModifiedDate":"2018-08-13"},{"lineNumber":41,"author":{"gitId":"cwnm"},"content":"        assertThrows(IllegalValueException.class, expectedMessage, client::toModelType);","lastModifiedDate":"2022-03-04"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":43,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-13"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    public void toModelType_nullName_throwsIllegalValueException() {","lastModifiedDate":"2018-08-13"},{"lineNumber":46,"author":{"gitId":"Jacky142857"},"content":"        JsonAdaptedClient client \u003d new JsonAdaptedClient(null, VALID_PHONE, VALID_APPOINTMENT, VALID_TAGS);","lastModifiedDate":"2022-03-19"},{"lineNumber":47,"author":{"gitId":"-"},"content":"        String expectedMessage \u003d String.format(MISSING_FIELD_MESSAGE_FORMAT, Name.class.getSimpleName());","lastModifiedDate":"2018-08-13"},{"lineNumber":48,"author":{"gitId":"cwnm"},"content":"        assertThrows(IllegalValueException.class, expectedMessage, client::toModelType);","lastModifiedDate":"2022-03-04"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":50,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-13"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    public void toModelType_invalidPhone_throwsIllegalValueException() {","lastModifiedDate":"2018-08-13"},{"lineNumber":53,"author":{"gitId":"cwnm"},"content":"        JsonAdaptedClient client \u003d","lastModifiedDate":"2022-03-04"},{"lineNumber":54,"author":{"gitId":"Jacky142857"},"content":"                new JsonAdaptedClient(VALID_NAME, INVALID_PHONE, VALID_APPOINTMENT, VALID_TAGS);","lastModifiedDate":"2022-03-19"},{"lineNumber":55,"author":{"gitId":"-"},"content":"        String expectedMessage \u003d Phone.MESSAGE_CONSTRAINTS;","lastModifiedDate":"2018-08-13"},{"lineNumber":56,"author":{"gitId":"cwnm"},"content":"        assertThrows(IllegalValueException.class, expectedMessage, client::toModelType);","lastModifiedDate":"2022-03-04"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":58,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":59,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-13"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    public void toModelType_nullPhone_throwsIllegalValueException() {","lastModifiedDate":"2018-08-13"},{"lineNumber":61,"author":{"gitId":"Jacky142857"},"content":"        JsonAdaptedClient client \u003d new JsonAdaptedClient(VALID_NAME, null, VALID_APPOINTMENT, VALID_TAGS);","lastModifiedDate":"2022-03-19"},{"lineNumber":62,"author":{"gitId":"-"},"content":"        String expectedMessage \u003d String.format(MISSING_FIELD_MESSAGE_FORMAT, Phone.class.getSimpleName());","lastModifiedDate":"2018-08-13"},{"lineNumber":63,"author":{"gitId":"cwnm"},"content":"        assertThrows(IllegalValueException.class, expectedMessage, client::toModelType);","lastModifiedDate":"2022-03-04"},{"lineNumber":64,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":65,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":66,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-13"},{"lineNumber":67,"author":{"gitId":"-"},"content":"    public void toModelType_invalidTags_throwsIllegalValueException() {","lastModifiedDate":"2018-08-13"},{"lineNumber":68,"author":{"gitId":"-"},"content":"        List\u003cJsonAdaptedTag\u003e invalidTags \u003d new ArrayList\u003c\u003e(VALID_TAGS);","lastModifiedDate":"2018-08-13"},{"lineNumber":69,"author":{"gitId":"-"},"content":"        invalidTags.add(new JsonAdaptedTag(INVALID_TAG));","lastModifiedDate":"2018-08-13"},{"lineNumber":70,"author":{"gitId":"cwnm"},"content":"        JsonAdaptedClient client \u003d","lastModifiedDate":"2022-03-04"},{"lineNumber":71,"author":{"gitId":"Jacky142857"},"content":"                new JsonAdaptedClient(VALID_NAME, VALID_PHONE,","lastModifiedDate":"2022-03-19"},{"lineNumber":72,"author":{"gitId":"Jacky142857"},"content":"                       VALID_APPOINTMENT, invalidTags);","lastModifiedDate":"2022-03-11"},{"lineNumber":73,"author":{"gitId":"cwnm"},"content":"        assertThrows(IllegalValueException.class, client::toModelType);","lastModifiedDate":"2022-03-04"},{"lineNumber":74,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":75,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":76,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2018-08-13"}],"authorContributionMap":{"Jacky142857":7,"-":52,"cwnm":16,"chuashihong":1}},{"path":"src/test/java/seedu/address/storage/JsonAdaptedHouseTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"chuashihong"},"content":"package seedu.address.storage;","lastModifiedDate":"2022-03-26"},{"lineNumber":2,"author":{"gitId":"chuashihong"},"content":"","lastModifiedDate":"2022-03-26"},{"lineNumber":3,"author":{"gitId":"chuashihong"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2022-03-26"},{"lineNumber":4,"author":{"gitId":"chuashihong"},"content":"","lastModifiedDate":"2022-03-27"},{"lineNumber":5,"author":{"gitId":"chuashihong"},"content":"import seedu.address.commons.exceptions.IllegalValueException;","lastModifiedDate":"2022-03-26"},{"lineNumber":6,"author":{"gitId":"chuashihong"},"content":"import seedu.address.model.property.House;","lastModifiedDate":"2022-03-26"},{"lineNumber":7,"author":{"gitId":"chuashihong"},"content":"import seedu.address.model.property.HouseType;","lastModifiedDate":"2022-03-26"},{"lineNumber":8,"author":{"gitId":"janald99"},"content":"import seedu.address.model.property.Location;","lastModifiedDate":"2022-03-31"},{"lineNumber":9,"author":{"gitId":"chuashihong"},"content":"","lastModifiedDate":"2022-03-26"},{"lineNumber":10,"author":{"gitId":"chuashihong"},"content":"class JsonAdaptedHouseTest {","lastModifiedDate":"2022-03-26"},{"lineNumber":11,"author":{"gitId":"chuashihong"},"content":"","lastModifiedDate":"2022-03-26"},{"lineNumber":12,"author":{"gitId":"janald99"},"content":"    private final House house1 \u003d new House(HouseType.NULLHOUSETYPE, new Location(\"\"));","lastModifiedDate":"2022-03-31"},{"lineNumber":13,"author":{"gitId":"chuashihong"},"content":"","lastModifiedDate":"2022-03-26"},{"lineNumber":14,"author":{"gitId":"chuashihong"},"content":"    private final JsonAdaptedHouse jsonAdaptedHouse \u003d new JsonAdaptedHouse(house1);","lastModifiedDate":"2022-03-27"},{"lineNumber":15,"author":{"gitId":"chuashihong"},"content":"","lastModifiedDate":"2022-03-26"},{"lineNumber":16,"author":{"gitId":"chuashihong"},"content":"","lastModifiedDate":"2022-03-26"},{"lineNumber":17,"author":{"gitId":"chuashihong"},"content":"    @Test","lastModifiedDate":"2022-03-26"},{"lineNumber":18,"author":{"gitId":"chuashihong"},"content":"    void toModelType() throws IllegalValueException {","lastModifiedDate":"2022-03-26"},{"lineNumber":19,"author":{"gitId":"chuashihong"},"content":"    }","lastModifiedDate":"2022-03-26"},{"lineNumber":20,"author":{"gitId":"chuashihong"},"content":"}","lastModifiedDate":"2022-03-26"}],"authorContributionMap":{"janald99":2,"chuashihong":18}},{"path":"src/test/java/seedu/address/storage/JsonAdaptedPriceRangeTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"chuashihong"},"content":"package seedu.address.storage;","lastModifiedDate":"2022-03-26"},{"lineNumber":2,"author":{"gitId":"chuashihong"},"content":"","lastModifiedDate":"2022-03-26"},{"lineNumber":3,"author":{"gitId":"chuashihong"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2022-03-27"},{"lineNumber":4,"author":{"gitId":"chuashihong"},"content":"","lastModifiedDate":"2022-03-27"},{"lineNumber":5,"author":{"gitId":"chuashihong"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2022-03-26"},{"lineNumber":6,"author":{"gitId":"chuashihong"},"content":"","lastModifiedDate":"2022-03-27"},{"lineNumber":7,"author":{"gitId":"chuashihong"},"content":"import seedu.address.commons.exceptions.IllegalValueException;","lastModifiedDate":"2022-03-26"},{"lineNumber":8,"author":{"gitId":"chuashihong"},"content":"import seedu.address.model.property.PriceRange;","lastModifiedDate":"2022-03-26"},{"lineNumber":9,"author":{"gitId":"chuashihong"},"content":"","lastModifiedDate":"2022-03-26"},{"lineNumber":10,"author":{"gitId":"chuashihong"},"content":"class JsonAdaptedPriceRangeTest {","lastModifiedDate":"2022-03-26"},{"lineNumber":11,"author":{"gitId":"chuashihong"},"content":"","lastModifiedDate":"2022-03-26"},{"lineNumber":12,"author":{"gitId":"chuashihong"},"content":"    private final PriceRange priceRange1 \u003d new PriceRange(1, 100);","lastModifiedDate":"2022-03-26"},{"lineNumber":13,"author":{"gitId":"chuashihong"},"content":"    private final PriceRange priceRange2 \u003d new PriceRange(50, 100);","lastModifiedDate":"2022-03-26"},{"lineNumber":14,"author":{"gitId":"chuashihong"},"content":"","lastModifiedDate":"2022-03-26"},{"lineNumber":15,"author":{"gitId":"chuashihong"},"content":"    private final JsonAdaptedPriceRange jsonAdaptedPriceRange1 \u003d new JsonAdaptedPriceRange(\"1\", \"100\");","lastModifiedDate":"2022-03-27"},{"lineNumber":16,"author":{"gitId":"chuashihong"},"content":"    private final JsonAdaptedPriceRange jsonAdaptedPriceRange2 \u003d new JsonAdaptedPriceRange(\"50\", \"100\");","lastModifiedDate":"2022-03-27"},{"lineNumber":17,"author":{"gitId":"chuashihong"},"content":"","lastModifiedDate":"2022-03-26"},{"lineNumber":18,"author":{"gitId":"chuashihong"},"content":"","lastModifiedDate":"2022-03-26"},{"lineNumber":19,"author":{"gitId":"chuashihong"},"content":"    @Test","lastModifiedDate":"2022-03-26"},{"lineNumber":20,"author":{"gitId":"chuashihong"},"content":"    void toModelType() throws IllegalValueException {","lastModifiedDate":"2022-03-26"},{"lineNumber":21,"author":{"gitId":"chuashihong"},"content":"        assertEquals(priceRange1, jsonAdaptedPriceRange1.toModelType());","lastModifiedDate":"2022-03-26"},{"lineNumber":22,"author":{"gitId":"chuashihong"},"content":"        assertEquals(priceRange2, jsonAdaptedPriceRange2.toModelType());","lastModifiedDate":"2022-03-26"},{"lineNumber":23,"author":{"gitId":"chuashihong"},"content":"    }","lastModifiedDate":"2022-03-26"},{"lineNumber":24,"author":{"gitId":"chuashihong"},"content":"}","lastModifiedDate":"2022-03-26"}],"authorContributionMap":{"chuashihong":24}},{"path":"src/test/java/seedu/address/storage/JsonAdaptedPropertyToSellTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"chuashihong"},"content":"package seedu.address.storage;","lastModifiedDate":"2022-03-26"},{"lineNumber":2,"author":{"gitId":"chuashihong"},"content":"","lastModifiedDate":"2022-03-26"},{"lineNumber":3,"author":{"gitId":"chuashihong"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2022-03-27"},{"lineNumber":4,"author":{"gitId":"chuashihong"},"content":"","lastModifiedDate":"2022-03-27"},{"lineNumber":5,"author":{"gitId":"chuashihong"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2022-03-26"},{"lineNumber":6,"author":{"gitId":"chuashihong"},"content":"","lastModifiedDate":"2022-03-27"},{"lineNumber":7,"author":{"gitId":"chuashihong"},"content":"import seedu.address.commons.exceptions.IllegalValueException;","lastModifiedDate":"2022-03-26"},{"lineNumber":8,"author":{"gitId":"WJunHong"},"content":"import seedu.address.model.property.Address;","lastModifiedDate":"2022-03-27"},{"lineNumber":9,"author":{"gitId":"chuashihong"},"content":"import seedu.address.model.property.House;","lastModifiedDate":"2022-03-26"},{"lineNumber":10,"author":{"gitId":"chuashihong"},"content":"import seedu.address.model.property.HouseType;","lastModifiedDate":"2022-03-26"},{"lineNumber":11,"author":{"gitId":"janald99"},"content":"import seedu.address.model.property.Location;","lastModifiedDate":"2022-03-31"},{"lineNumber":12,"author":{"gitId":"chuashihong"},"content":"import seedu.address.model.property.NullPropertyToSell;","lastModifiedDate":"2022-03-26"},{"lineNumber":13,"author":{"gitId":"chuashihong"},"content":"import seedu.address.model.property.PriceRange;","lastModifiedDate":"2022-03-26"},{"lineNumber":14,"author":{"gitId":"chuashihong"},"content":"import seedu.address.model.property.PropertyToSell;","lastModifiedDate":"2022-03-26"},{"lineNumber":15,"author":{"gitId":"chuashihong"},"content":"","lastModifiedDate":"2022-03-26"},{"lineNumber":16,"author":{"gitId":"chuashihong"},"content":"class JsonAdaptedPropertyToSellTest {","lastModifiedDate":"2022-03-26"},{"lineNumber":17,"author":{"gitId":"chuashihong"},"content":"    private PriceRange priceRange1 \u003d new PriceRange(1, 100);","lastModifiedDate":"2022-03-27"},{"lineNumber":18,"author":{"gitId":"janald99"},"content":"    private House house1 \u003d new House(HouseType.BUNGALOW, new Location(\"house1_location\"));","lastModifiedDate":"2022-03-31"},{"lineNumber":19,"author":{"gitId":"chuashihong"},"content":"","lastModifiedDate":"2022-03-26"},{"lineNumber":20,"author":{"gitId":"WJunHong"},"content":"    private PropertyToSell propertyToSell1 \u003d new PropertyToSell(house1, priceRange1, new Address(\"house1_address\"));","lastModifiedDate":"2022-03-27"},{"lineNumber":21,"author":{"gitId":"chuashihong"},"content":"    private JsonAdaptedPropertyToSell jsonAdaptedPropertyToSell1 \u003d new JsonAdaptedPropertyToSell(","lastModifiedDate":"2022-03-27"},{"lineNumber":22,"author":{"gitId":"chuashihong"},"content":"            new JsonAdaptedHouse(house1),","lastModifiedDate":"2022-03-26"},{"lineNumber":23,"author":{"gitId":"chuashihong"},"content":"            new JsonAdaptedPriceRange(priceRange1),","lastModifiedDate":"2022-03-26"},{"lineNumber":24,"author":{"gitId":"chuashihong"},"content":"            \"house1_address\");","lastModifiedDate":"2022-03-26"},{"lineNumber":25,"author":{"gitId":"chuashihong"},"content":"","lastModifiedDate":"2022-03-26"},{"lineNumber":26,"author":{"gitId":"chuashihong"},"content":"    private final PropertyToSell nullPropertyToSell \u003d NullPropertyToSell.getNullPropertyToSell();","lastModifiedDate":"2022-03-27"},{"lineNumber":27,"author":{"gitId":"chuashihong"},"content":"    @Test","lastModifiedDate":"2022-03-26"},{"lineNumber":28,"author":{"gitId":"chuashihong"},"content":"    void getHouse() {","lastModifiedDate":"2022-03-26"},{"lineNumber":29,"author":{"gitId":"chuashihong"},"content":"        assertEquals(house1, propertyToSell1.getHouse());","lastModifiedDate":"2022-03-26"},{"lineNumber":30,"author":{"gitId":"chuashihong"},"content":"    }","lastModifiedDate":"2022-03-26"},{"lineNumber":31,"author":{"gitId":"chuashihong"},"content":"","lastModifiedDate":"2022-03-26"},{"lineNumber":32,"author":{"gitId":"chuashihong"},"content":"    @Test","lastModifiedDate":"2022-03-26"},{"lineNumber":33,"author":{"gitId":"chuashihong"},"content":"    void getPriceRange() throws IllegalValueException {","lastModifiedDate":"2022-03-26"},{"lineNumber":34,"author":{"gitId":"chuashihong"},"content":"        assertEquals(propertyToSell1.getPriceRange(), jsonAdaptedPropertyToSell1.getPriceRange());","lastModifiedDate":"2022-03-26"},{"lineNumber":35,"author":{"gitId":"chuashihong"},"content":"    }","lastModifiedDate":"2022-03-26"},{"lineNumber":36,"author":{"gitId":"chuashihong"},"content":"","lastModifiedDate":"2022-03-26"},{"lineNumber":37,"author":{"gitId":"chuashihong"},"content":"    @Test","lastModifiedDate":"2022-03-26"},{"lineNumber":38,"author":{"gitId":"chuashihong"},"content":"    void getAddress() throws IllegalValueException {","lastModifiedDate":"2022-03-26"},{"lineNumber":39,"author":{"gitId":"chuashihong"},"content":"        assertEquals(propertyToSell1.getAddress(), jsonAdaptedPropertyToSell1.getAddress());","lastModifiedDate":"2022-03-26"},{"lineNumber":40,"author":{"gitId":"chuashihong"},"content":"    }","lastModifiedDate":"2022-03-26"},{"lineNumber":41,"author":{"gitId":"chuashihong"},"content":"","lastModifiedDate":"2022-03-26"},{"lineNumber":42,"author":{"gitId":"chuashihong"},"content":"    @Test","lastModifiedDate":"2022-03-26"},{"lineNumber":43,"author":{"gitId":"chuashihong"},"content":"    void toModelType() throws IllegalValueException {","lastModifiedDate":"2022-03-26"},{"lineNumber":44,"author":{"gitId":"chuashihong"},"content":"        assertEquals(propertyToSell1, jsonAdaptedPropertyToSell1.toModelType());","lastModifiedDate":"2022-03-26"},{"lineNumber":45,"author":{"gitId":"chuashihong"},"content":"    }","lastModifiedDate":"2022-03-26"},{"lineNumber":46,"author":{"gitId":"chuashihong"},"content":"}","lastModifiedDate":"2022-03-26"}],"authorContributionMap":{"janald99":2,"WJunHong":2,"chuashihong":42}},{"path":"src/test/java/seedu/address/storage/JsonAdaptedSellerTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"chuashihong"},"content":"package seedu.address.storage;","lastModifiedDate":"2022-03-30"},{"lineNumber":2,"author":{"gitId":"chuashihong"},"content":"","lastModifiedDate":"2022-03-30"},{"lineNumber":3,"author":{"gitId":"chuashihong"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2022-03-30"},{"lineNumber":4,"author":{"gitId":"chuashihong"},"content":"import static seedu.address.storage.JsonAdaptedSeller.MISSING_FIELD_MESSAGE_FORMAT;","lastModifiedDate":"2022-03-30"},{"lineNumber":5,"author":{"gitId":"chuashihong"},"content":"import static seedu.address.testutil.Assert.assertThrows;","lastModifiedDate":"2022-03-30"},{"lineNumber":6,"author":{"gitId":"chuashihong"},"content":"import static seedu.address.testutil.TypicalSellers.BENSON;","lastModifiedDate":"2022-03-30"},{"lineNumber":7,"author":{"gitId":"chuashihong"},"content":"","lastModifiedDate":"2022-03-30"},{"lineNumber":8,"author":{"gitId":"chuashihong"},"content":"import java.util.ArrayList;","lastModifiedDate":"2022-03-30"},{"lineNumber":9,"author":{"gitId":"chuashihong"},"content":"import java.util.List;","lastModifiedDate":"2022-03-30"},{"lineNumber":10,"author":{"gitId":"chuashihong"},"content":"import java.util.stream.Collectors;","lastModifiedDate":"2022-03-30"},{"lineNumber":11,"author":{"gitId":"chuashihong"},"content":"","lastModifiedDate":"2022-03-30"},{"lineNumber":12,"author":{"gitId":"chuashihong"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2022-03-30"},{"lineNumber":13,"author":{"gitId":"chuashihong"},"content":"","lastModifiedDate":"2022-03-30"},{"lineNumber":14,"author":{"gitId":"chuashihong"},"content":"import seedu.address.commons.exceptions.IllegalValueException;","lastModifiedDate":"2022-03-30"},{"lineNumber":15,"author":{"gitId":"chuashihong"},"content":"import seedu.address.model.client.Name;","lastModifiedDate":"2022-03-30"},{"lineNumber":16,"author":{"gitId":"chuashihong"},"content":"import seedu.address.model.client.Phone;","lastModifiedDate":"2022-03-30"},{"lineNumber":17,"author":{"gitId":"chuashihong"},"content":"","lastModifiedDate":"2022-03-30"},{"lineNumber":18,"author":{"gitId":"chuashihong"},"content":"public class JsonAdaptedSellerTest {","lastModifiedDate":"2022-03-30"},{"lineNumber":19,"author":{"gitId":"chuashihong"},"content":"    private static final String INVALID_NAME \u003d \"R@chel\";","lastModifiedDate":"2022-03-30"},{"lineNumber":20,"author":{"gitId":"chuashihong"},"content":"    private static final String INVALID_PHONE \u003d \"+651234\";","lastModifiedDate":"2022-03-30"},{"lineNumber":21,"author":{"gitId":"chuashihong"},"content":"    private static final String INVALID_TAG \u003d \"#friend\";","lastModifiedDate":"2022-03-30"},{"lineNumber":22,"author":{"gitId":"chuashihong"},"content":"","lastModifiedDate":"2022-03-30"},{"lineNumber":23,"author":{"gitId":"chuashihong"},"content":"","lastModifiedDate":"2022-03-30"},{"lineNumber":24,"author":{"gitId":"chuashihong"},"content":"    private static final String VALID_NAME \u003d BENSON.getName().toString();","lastModifiedDate":"2022-03-30"},{"lineNumber":25,"author":{"gitId":"chuashihong"},"content":"    private static final String VALID_PHONE \u003d BENSON.getPhone().toString();","lastModifiedDate":"2022-03-30"},{"lineNumber":26,"author":{"gitId":"chuashihong"},"content":"    private static final List\u003cJsonAdaptedTag\u003e VALID_TAGS \u003d BENSON.getTags().stream()","lastModifiedDate":"2022-03-30"},{"lineNumber":27,"author":{"gitId":"chuashihong"},"content":"            .map(JsonAdaptedTag::new)","lastModifiedDate":"2022-03-30"},{"lineNumber":28,"author":{"gitId":"chuashihong"},"content":"            .collect(Collectors.toList());","lastModifiedDate":"2022-03-30"},{"lineNumber":29,"author":{"gitId":"chuashihong"},"content":"    private static final String VALID_APPOINTMENT \u003d BENSON.getAppointment().toString();","lastModifiedDate":"2022-03-30"},{"lineNumber":30,"author":{"gitId":"chuashihong"},"content":"    private static final JsonAdaptedPropertyToSell VALID_NULL_PROPERTY \u003d","lastModifiedDate":"2022-03-30"},{"lineNumber":31,"author":{"gitId":"chuashihong"},"content":"            new JsonAdaptedPropertyToSell(BENSON.getPropertyToSell());","lastModifiedDate":"2022-03-30"},{"lineNumber":32,"author":{"gitId":"chuashihong"},"content":"    @Test","lastModifiedDate":"2022-03-30"},{"lineNumber":33,"author":{"gitId":"chuashihong"},"content":"    public void toModelType_validSellerDetails_returnsSeller() throws Exception {","lastModifiedDate":"2022-03-30"},{"lineNumber":34,"author":{"gitId":"chuashihong"},"content":"        JsonAdaptedSeller seller \u003d new JsonAdaptedSeller(BENSON);","lastModifiedDate":"2022-03-30"},{"lineNumber":35,"author":{"gitId":"chuashihong"},"content":"        assertEquals(BENSON, seller.toModelType());","lastModifiedDate":"2022-03-30"},{"lineNumber":36,"author":{"gitId":"chuashihong"},"content":"    }","lastModifiedDate":"2022-03-30"},{"lineNumber":37,"author":{"gitId":"chuashihong"},"content":"","lastModifiedDate":"2022-03-30"},{"lineNumber":38,"author":{"gitId":"chuashihong"},"content":"    @Test","lastModifiedDate":"2022-03-30"},{"lineNumber":39,"author":{"gitId":"chuashihong"},"content":"    public void toModelType_invalidName_throwsIllegalValueException() {","lastModifiedDate":"2022-03-30"},{"lineNumber":40,"author":{"gitId":"chuashihong"},"content":"        JsonAdaptedSeller seller \u003d","lastModifiedDate":"2022-03-30"},{"lineNumber":41,"author":{"gitId":"chuashihong"},"content":"                new JsonAdaptedSeller(INVALID_NAME, VALID_PHONE, VALID_APPOINTMENT, VALID_TAGS, VALID_NULL_PROPERTY);","lastModifiedDate":"2022-03-30"},{"lineNumber":42,"author":{"gitId":"chuashihong"},"content":"        String expectedMessage \u003d Name.MESSAGE_CONSTRAINTS;","lastModifiedDate":"2022-03-30"},{"lineNumber":43,"author":{"gitId":"chuashihong"},"content":"        assertThrows(IllegalValueException.class, expectedMessage, seller::toModelType);","lastModifiedDate":"2022-03-30"},{"lineNumber":44,"author":{"gitId":"chuashihong"},"content":"    }","lastModifiedDate":"2022-03-30"},{"lineNumber":45,"author":{"gitId":"chuashihong"},"content":"","lastModifiedDate":"2022-03-30"},{"lineNumber":46,"author":{"gitId":"chuashihong"},"content":"    @Test","lastModifiedDate":"2022-03-30"},{"lineNumber":47,"author":{"gitId":"chuashihong"},"content":"    public void toModelType_nullName_throwsIllegalValueException() {","lastModifiedDate":"2022-03-30"},{"lineNumber":48,"author":{"gitId":"chuashihong"},"content":"        JsonAdaptedSeller seller \u003d new JsonAdaptedSeller(null, VALID_PHONE, VALID_APPOINTMENT, VALID_TAGS,","lastModifiedDate":"2022-03-30"},{"lineNumber":49,"author":{"gitId":"chuashihong"},"content":"                VALID_NULL_PROPERTY);","lastModifiedDate":"2022-03-30"},{"lineNumber":50,"author":{"gitId":"chuashihong"},"content":"        String expectedMessage \u003d String.format(MISSING_FIELD_MESSAGE_FORMAT, Name.class.getSimpleName());","lastModifiedDate":"2022-03-30"},{"lineNumber":51,"author":{"gitId":"chuashihong"},"content":"        assertThrows(IllegalValueException.class, expectedMessage, seller::toModelType);","lastModifiedDate":"2022-03-30"},{"lineNumber":52,"author":{"gitId":"chuashihong"},"content":"    }","lastModifiedDate":"2022-03-30"},{"lineNumber":53,"author":{"gitId":"chuashihong"},"content":"","lastModifiedDate":"2022-03-30"},{"lineNumber":54,"author":{"gitId":"chuashihong"},"content":"    @Test","lastModifiedDate":"2022-03-30"},{"lineNumber":55,"author":{"gitId":"chuashihong"},"content":"    public void toModelType_invalidPhone_throwsIllegalValueException() {","lastModifiedDate":"2022-03-30"},{"lineNumber":56,"author":{"gitId":"chuashihong"},"content":"        JsonAdaptedSeller seller \u003d","lastModifiedDate":"2022-03-30"},{"lineNumber":57,"author":{"gitId":"chuashihong"},"content":"                new JsonAdaptedSeller(VALID_NAME, INVALID_PHONE, VALID_APPOINTMENT, VALID_TAGS, VALID_NULL_PROPERTY);","lastModifiedDate":"2022-03-30"},{"lineNumber":58,"author":{"gitId":"chuashihong"},"content":"        String expectedMessage \u003d Phone.MESSAGE_CONSTRAINTS;","lastModifiedDate":"2022-03-30"},{"lineNumber":59,"author":{"gitId":"chuashihong"},"content":"        assertThrows(IllegalValueException.class, expectedMessage, seller::toModelType);","lastModifiedDate":"2022-03-30"},{"lineNumber":60,"author":{"gitId":"chuashihong"},"content":"    }","lastModifiedDate":"2022-03-30"},{"lineNumber":61,"author":{"gitId":"chuashihong"},"content":"","lastModifiedDate":"2022-03-30"},{"lineNumber":62,"author":{"gitId":"chuashihong"},"content":"    @Test","lastModifiedDate":"2022-03-30"},{"lineNumber":63,"author":{"gitId":"chuashihong"},"content":"    public void toModelType_nullPhone_throwsIllegalValueException() {","lastModifiedDate":"2022-03-30"},{"lineNumber":64,"author":{"gitId":"chuashihong"},"content":"        JsonAdaptedSeller seller \u003d new JsonAdaptedSeller(VALID_NAME, null, VALID_APPOINTMENT, VALID_TAGS,","lastModifiedDate":"2022-03-30"},{"lineNumber":65,"author":{"gitId":"chuashihong"},"content":"                VALID_NULL_PROPERTY);","lastModifiedDate":"2022-03-30"},{"lineNumber":66,"author":{"gitId":"chuashihong"},"content":"        String expectedMessage \u003d String.format(MISSING_FIELD_MESSAGE_FORMAT, Phone.class.getSimpleName());","lastModifiedDate":"2022-03-30"},{"lineNumber":67,"author":{"gitId":"chuashihong"},"content":"        assertThrows(IllegalValueException.class, expectedMessage, seller::toModelType);","lastModifiedDate":"2022-03-30"},{"lineNumber":68,"author":{"gitId":"chuashihong"},"content":"    }","lastModifiedDate":"2022-03-30"},{"lineNumber":69,"author":{"gitId":"chuashihong"},"content":"","lastModifiedDate":"2022-03-30"},{"lineNumber":70,"author":{"gitId":"chuashihong"},"content":"    @Test","lastModifiedDate":"2022-03-30"},{"lineNumber":71,"author":{"gitId":"chuashihong"},"content":"    public void toModelType_invalidTags_throwsIllegalValueException() {","lastModifiedDate":"2022-03-30"},{"lineNumber":72,"author":{"gitId":"chuashihong"},"content":"        List\u003cJsonAdaptedTag\u003e invalidTags \u003d new ArrayList\u003c\u003e(VALID_TAGS);","lastModifiedDate":"2022-03-30"},{"lineNumber":73,"author":{"gitId":"chuashihong"},"content":"        invalidTags.add(new JsonAdaptedTag(INVALID_TAG));","lastModifiedDate":"2022-03-30"},{"lineNumber":74,"author":{"gitId":"chuashihong"},"content":"        JsonAdaptedSeller seller \u003d","lastModifiedDate":"2022-03-30"},{"lineNumber":75,"author":{"gitId":"chuashihong"},"content":"                new JsonAdaptedSeller(VALID_NAME, VALID_PHONE,","lastModifiedDate":"2022-03-30"},{"lineNumber":76,"author":{"gitId":"chuashihong"},"content":"                        VALID_APPOINTMENT, invalidTags, VALID_NULL_PROPERTY);","lastModifiedDate":"2022-03-30"},{"lineNumber":77,"author":{"gitId":"chuashihong"},"content":"        assertThrows(IllegalValueException.class, seller::toModelType);","lastModifiedDate":"2022-03-30"},{"lineNumber":78,"author":{"gitId":"chuashihong"},"content":"    }","lastModifiedDate":"2022-03-30"},{"lineNumber":79,"author":{"gitId":"chuashihong"},"content":"","lastModifiedDate":"2022-03-30"},{"lineNumber":80,"author":{"gitId":"chuashihong"},"content":"}","lastModifiedDate":"2022-03-30"}],"authorContributionMap":{"chuashihong":80}},{"path":"src/test/java/seedu/address/storage/JsonAddressBookStorageTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.storage;","lastModifiedDate":"2018-08-13"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.Assert.assertThrows;","lastModifiedDate":"2019-03-23"},{"lineNumber":6,"author":{"gitId":"cwnm"},"content":"import static seedu.address.testutil.TypicalClients.ALICE;","lastModifiedDate":"2022-03-04"},{"lineNumber":7,"author":{"gitId":"cwnm"},"content":"import static seedu.address.testutil.TypicalClients.HOON;","lastModifiedDate":"2022-03-04"},{"lineNumber":8,"author":{"gitId":"cwnm"},"content":"import static seedu.address.testutil.TypicalClients.IDA;","lastModifiedDate":"2022-03-04"},{"lineNumber":9,"author":{"gitId":"cwnm"},"content":"import static seedu.address.testutil.TypicalClients.getTypicalAddressBook;","lastModifiedDate":"2022-03-04"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import java.io.IOException;","lastModifiedDate":"2018-08-13"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-08-13"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import java.nio.file.Paths;","lastModifiedDate":"2018-08-13"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-25"},{"lineNumber":16,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.io.TempDir;","lastModifiedDate":"2019-04-25"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":18,"author":{"gitId":"-"},"content":"import seedu.address.commons.exceptions.DataConversionException;","lastModifiedDate":"2018-08-13"},{"lineNumber":19,"author":{"gitId":"-"},"content":"import seedu.address.model.AddressBook;","lastModifiedDate":"2018-08-13"},{"lineNumber":20,"author":{"gitId":"-"},"content":"import seedu.address.model.ReadOnlyAddressBook;","lastModifiedDate":"2018-08-13"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":22,"author":{"gitId":"-"},"content":"public class JsonAddressBookStorageTest {","lastModifiedDate":"2018-08-13"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    private static final Path TEST_DATA_FOLDER \u003d Paths.get(\"src\", \"test\", \"data\", \"JsonAddressBookStorageTest\");","lastModifiedDate":"2018-08-13"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    @TempDir","lastModifiedDate":"2019-04-25"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    public Path testFolder;","lastModifiedDate":"2019-04-25"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-13"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    public void readAddressBook_nullFilePath_throwsNullPointerException() {","lastModifiedDate":"2019-03-23"},{"lineNumber":30,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e readAddressBook(null));","lastModifiedDate":"2019-03-23"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":32,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    private java.util.Optional\u003cReadOnlyAddressBook\u003e readAddressBook(String filePath) throws Exception {","lastModifiedDate":"2018-08-13"},{"lineNumber":34,"author":{"gitId":"-"},"content":"        return new JsonAddressBookStorage(Paths.get(filePath)).readAddressBook(addToTestDataPathIfNotNull(filePath));","lastModifiedDate":"2018-08-13"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":36,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    private Path addToTestDataPathIfNotNull(String prefsFileInTestDataFolder) {","lastModifiedDate":"2018-08-13"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        return prefsFileInTestDataFolder !\u003d null","lastModifiedDate":"2018-08-13"},{"lineNumber":39,"author":{"gitId":"-"},"content":"                ? TEST_DATA_FOLDER.resolve(prefsFileInTestDataFolder)","lastModifiedDate":"2018-08-13"},{"lineNumber":40,"author":{"gitId":"-"},"content":"                : null;","lastModifiedDate":"2018-08-13"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":42,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-13"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    public void read_missingFile_emptyResult() throws Exception {","lastModifiedDate":"2018-08-13"},{"lineNumber":45,"author":{"gitId":"-"},"content":"        assertFalse(readAddressBook(\"NonExistentFile.json\").isPresent());","lastModifiedDate":"2018-08-13"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":47,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-13"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    public void read_notJsonFormat_exceptionThrown() {","lastModifiedDate":"2019-03-23"},{"lineNumber":50,"author":{"gitId":"-"},"content":"        assertThrows(DataConversionException.class, () -\u003e readAddressBook(\"notJsonFormatAddressBook.json\"));","lastModifiedDate":"2019-03-23"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":52,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":53,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-13"},{"lineNumber":54,"author":{"gitId":"cwnm"},"content":"    public void readAddressBook_invalidclientAddressBook_throwDataConversionException() {","lastModifiedDate":"2022-03-04"},{"lineNumber":55,"author":{"gitId":"cwnm"},"content":"        assertThrows(DataConversionException.class, () -\u003e readAddressBook(\"invalidClientAddressBook.json\"));","lastModifiedDate":"2022-03-04"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":57,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":58,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-13"},{"lineNumber":59,"author":{"gitId":"cwnm"},"content":"    public void readAddressBook_invalidAndValidclientAddressBook_throwDataConversionException() {","lastModifiedDate":"2022-03-04"},{"lineNumber":60,"author":{"gitId":"cwnm"},"content":"        assertThrows(DataConversionException.class, () -\u003e readAddressBook(\"invalidAndValidClientAddressBook.json\"));","lastModifiedDate":"2022-03-04"},{"lineNumber":61,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":62,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":63,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-13"},{"lineNumber":64,"author":{"gitId":"-"},"content":"    public void readAndSaveAddressBook_allInOrder_success() throws Exception {","lastModifiedDate":"2018-08-13"},{"lineNumber":65,"author":{"gitId":"-"},"content":"        Path filePath \u003d testFolder.resolve(\"TempAddressBook.json\");","lastModifiedDate":"2019-04-25"},{"lineNumber":66,"author":{"gitId":"-"},"content":"        AddressBook original \u003d getTypicalAddressBook();","lastModifiedDate":"2018-08-13"},{"lineNumber":67,"author":{"gitId":"-"},"content":"        JsonAddressBookStorage jsonAddressBookStorage \u003d new JsonAddressBookStorage(filePath);","lastModifiedDate":"2018-08-13"},{"lineNumber":68,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":69,"author":{"gitId":"-"},"content":"        // Save in new file and read back","lastModifiedDate":"2018-08-13"},{"lineNumber":70,"author":{"gitId":"-"},"content":"        jsonAddressBookStorage.saveAddressBook(original, filePath);","lastModifiedDate":"2018-08-13"},{"lineNumber":71,"author":{"gitId":"-"},"content":"        ReadOnlyAddressBook readBack \u003d jsonAddressBookStorage.readAddressBook(filePath).get();","lastModifiedDate":"2018-08-13"},{"lineNumber":72,"author":{"gitId":"-"},"content":"        assertEquals(original, new AddressBook(readBack));","lastModifiedDate":"2018-08-13"},{"lineNumber":73,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":74,"author":{"gitId":"-"},"content":"        // Modify data, overwrite exiting file, and read back","lastModifiedDate":"2018-08-13"},{"lineNumber":75,"author":{"gitId":"cwnm"},"content":"        original.addclient(HOON);","lastModifiedDate":"2022-03-04"},{"lineNumber":76,"author":{"gitId":"cwnm"},"content":"        original.removeclient(ALICE);","lastModifiedDate":"2022-03-04"},{"lineNumber":77,"author":{"gitId":"-"},"content":"        jsonAddressBookStorage.saveAddressBook(original, filePath);","lastModifiedDate":"2018-08-13"},{"lineNumber":78,"author":{"gitId":"-"},"content":"        readBack \u003d jsonAddressBookStorage.readAddressBook(filePath).get();","lastModifiedDate":"2018-08-13"},{"lineNumber":79,"author":{"gitId":"-"},"content":"        assertEquals(original, new AddressBook(readBack));","lastModifiedDate":"2018-08-13"},{"lineNumber":80,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":81,"author":{"gitId":"-"},"content":"        // Save and read without specifying file path","lastModifiedDate":"2018-08-13"},{"lineNumber":82,"author":{"gitId":"cwnm"},"content":"        original.addclient(IDA);","lastModifiedDate":"2022-03-04"},{"lineNumber":83,"author":{"gitId":"-"},"content":"        jsonAddressBookStorage.saveAddressBook(original); // file path not specified","lastModifiedDate":"2018-08-13"},{"lineNumber":84,"author":{"gitId":"-"},"content":"        readBack \u003d jsonAddressBookStorage.readAddressBook().get(); // file path not specified","lastModifiedDate":"2018-08-13"},{"lineNumber":85,"author":{"gitId":"-"},"content":"        assertEquals(original, new AddressBook(readBack));","lastModifiedDate":"2018-08-13"},{"lineNumber":86,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":87,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":88,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":89,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-13"},{"lineNumber":90,"author":{"gitId":"-"},"content":"    public void saveAddressBook_nullAddressBook_throwsNullPointerException() {","lastModifiedDate":"2018-08-13"},{"lineNumber":91,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e saveAddressBook(null, \"SomeFile.json\"));","lastModifiedDate":"2019-03-23"},{"lineNumber":92,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":93,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":94,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-08-13"},{"lineNumber":95,"author":{"gitId":"-"},"content":"     * Saves {@code addressBook} at the specified {@code filePath}.","lastModifiedDate":"2018-08-13"},{"lineNumber":96,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-08-13"},{"lineNumber":97,"author":{"gitId":"-"},"content":"    private void saveAddressBook(ReadOnlyAddressBook addressBook, String filePath) {","lastModifiedDate":"2018-08-13"},{"lineNumber":98,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2018-08-13"},{"lineNumber":99,"author":{"gitId":"-"},"content":"            new JsonAddressBookStorage(Paths.get(filePath))","lastModifiedDate":"2018-08-13"},{"lineNumber":100,"author":{"gitId":"-"},"content":"                    .saveAddressBook(addressBook, addToTestDataPathIfNotNull(filePath));","lastModifiedDate":"2018-08-13"},{"lineNumber":101,"author":{"gitId":"-"},"content":"        } catch (IOException ioe) {","lastModifiedDate":"2018-08-13"},{"lineNumber":102,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"There should not be an error writing to the file.\", ioe);","lastModifiedDate":"2018-08-13"},{"lineNumber":103,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-08-13"},{"lineNumber":104,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":105,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":106,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-13"},{"lineNumber":107,"author":{"gitId":"-"},"content":"    public void saveAddressBook_nullFilePath_throwsNullPointerException() {","lastModifiedDate":"2018-08-13"},{"lineNumber":108,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e saveAddressBook(new AddressBook(), null));","lastModifiedDate":"2019-03-23"},{"lineNumber":109,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":110,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2018-08-13"}],"authorContributionMap":{"-":99,"cwnm":11}},{"path":"src/test/java/seedu/address/storage/JsonSerializableAddressBookTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.storage;","lastModifiedDate":"2018-08-13"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.Assert.assertThrows;","lastModifiedDate":"2019-03-23"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-08-13"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import java.nio.file.Paths;","lastModifiedDate":"2018-08-13"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import seedu.address.commons.exceptions.IllegalValueException;","lastModifiedDate":"2018-08-13"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import seedu.address.commons.util.JsonUtil;","lastModifiedDate":"2018-08-13"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import seedu.address.model.AddressBook;","lastModifiedDate":"2018-08-13"},{"lineNumber":14,"author":{"gitId":"cwnm"},"content":"import seedu.address.testutil.TypicalClients;","lastModifiedDate":"2022-03-04"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":16,"author":{"gitId":"-"},"content":"public class JsonSerializableAddressBookTest {","lastModifiedDate":"2018-08-13"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    private static final Path TEST_DATA_FOLDER \u003d Paths.get(\"src\", \"test\", \"data\", \"JsonSerializableAddressBookTest\");","lastModifiedDate":"2018-08-13"},{"lineNumber":19,"author":{"gitId":"cwnm"},"content":"    private static final Path TYPICAL_CLIENTS_FILE \u003d TEST_DATA_FOLDER.resolve(\"typicalClientsAddressBook.json\");","lastModifiedDate":"2022-03-04"},{"lineNumber":20,"author":{"gitId":"cwnm"},"content":"    private static final Path INVALID_CLIENT_FILE \u003d TEST_DATA_FOLDER.resolve(\"invalidClientAddressBook.json\");","lastModifiedDate":"2022-03-04"},{"lineNumber":21,"author":{"gitId":"cwnm"},"content":"    private static final Path DUPLICATE_CLIENT_FILE \u003d TEST_DATA_FOLDER.resolve(\"duplicateClientAddressBook.json\");","lastModifiedDate":"2022-03-04"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-13"},{"lineNumber":24,"author":{"gitId":"cwnm"},"content":"    public void toModelType_typicalClientsFile_success() throws Exception {","lastModifiedDate":"2022-03-04"},{"lineNumber":25,"author":{"gitId":"cwnm"},"content":"        JsonSerializableAddressBook dataFromFile \u003d JsonUtil.readJsonFile(TYPICAL_CLIENTS_FILE,","lastModifiedDate":"2022-03-04"},{"lineNumber":26,"author":{"gitId":"-"},"content":"                JsonSerializableAddressBook.class).get();","lastModifiedDate":"2018-08-13"},{"lineNumber":27,"author":{"gitId":"-"},"content":"        AddressBook addressBookFromFile \u003d dataFromFile.toModelType();","lastModifiedDate":"2018-08-13"},{"lineNumber":28,"author":{"gitId":"cwnm"},"content":"        AddressBook typicalClientsAddressBook \u003d TypicalClients.getTypicalAddressBook();","lastModifiedDate":"2022-03-04"},{"lineNumber":29,"author":{"gitId":"cwnm"},"content":"        assertEquals(addressBookFromFile, typicalClientsAddressBook);","lastModifiedDate":"2022-03-04"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":31,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-13"},{"lineNumber":33,"author":{"gitId":"cwnm"},"content":"    public void toModelType_invalidClientFile_throwsIllegalValueException() throws Exception {","lastModifiedDate":"2022-03-04"},{"lineNumber":34,"author":{"gitId":"cwnm"},"content":"        JsonSerializableAddressBook dataFromFile \u003d JsonUtil.readJsonFile(INVALID_CLIENT_FILE,","lastModifiedDate":"2022-03-04"},{"lineNumber":35,"author":{"gitId":"-"},"content":"                JsonSerializableAddressBook.class).get();","lastModifiedDate":"2018-08-13"},{"lineNumber":36,"author":{"gitId":"-"},"content":"        assertThrows(IllegalValueException.class, dataFromFile::toModelType);","lastModifiedDate":"2019-03-23"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":38,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-13"},{"lineNumber":40,"author":{"gitId":"cwnm"},"content":"    public void toModelType_duplicateClients_throwsIllegalValueException() throws Exception {","lastModifiedDate":"2022-03-04"},{"lineNumber":41,"author":{"gitId":"cwnm"},"content":"        JsonSerializableAddressBook dataFromFile \u003d JsonUtil.readJsonFile(DUPLICATE_CLIENT_FILE,","lastModifiedDate":"2022-03-04"},{"lineNumber":42,"author":{"gitId":"-"},"content":"                JsonSerializableAddressBook.class).get();","lastModifiedDate":"2018-08-13"},{"lineNumber":43,"author":{"gitId":"cwnm"},"content":"        assertThrows(IllegalValueException.class, JsonSerializableAddressBook.MESSAGE_DUPLICATE_CLIENT,","lastModifiedDate":"2022-03-04"},{"lineNumber":44,"author":{"gitId":"-"},"content":"                dataFromFile::toModelType);","lastModifiedDate":"2019-03-23"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":46,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":47,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2018-08-13"}],"authorContributionMap":{"-":34,"cwnm":13}},{"path":"src/test/java/seedu/address/storage/JsonSerializableBuyerAddressBookTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"chuashihong"},"content":"package seedu.address.storage;","lastModifiedDate":"2022-04-07"},{"lineNumber":2,"author":{"gitId":"chuashihong"},"content":"","lastModifiedDate":"2022-04-07"},{"lineNumber":3,"author":{"gitId":"chuashihong"},"content":"//import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2022-04-08"},{"lineNumber":4,"author":{"gitId":"chuashihong"},"content":"import static seedu.address.testutil.Assert.assertThrows;","lastModifiedDate":"2022-04-07"},{"lineNumber":5,"author":{"gitId":"chuashihong"},"content":"","lastModifiedDate":"2022-04-07"},{"lineNumber":6,"author":{"gitId":"chuashihong"},"content":"import java.nio.file.Path;","lastModifiedDate":"2022-04-07"},{"lineNumber":7,"author":{"gitId":"chuashihong"},"content":"import java.nio.file.Paths;","lastModifiedDate":"2022-04-07"},{"lineNumber":8,"author":{"gitId":"chuashihong"},"content":"","lastModifiedDate":"2022-04-07"},{"lineNumber":9,"author":{"gitId":"chuashihong"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2022-04-07"},{"lineNumber":10,"author":{"gitId":"chuashihong"},"content":"","lastModifiedDate":"2022-04-07"},{"lineNumber":11,"author":{"gitId":"chuashihong"},"content":"import seedu.address.commons.exceptions.IllegalValueException;","lastModifiedDate":"2022-04-07"},{"lineNumber":12,"author":{"gitId":"chuashihong"},"content":"import seedu.address.commons.util.JsonUtil;","lastModifiedDate":"2022-04-07"},{"lineNumber":13,"author":{"gitId":"chuashihong"},"content":"//import seedu.address.model.BuyerAddressBook;","lastModifiedDate":"2022-04-08"},{"lineNumber":14,"author":{"gitId":"chuashihong"},"content":"//import seedu.address.testutil.TypicalBuyers;","lastModifiedDate":"2022-04-08"},{"lineNumber":15,"author":{"gitId":"chuashihong"},"content":"","lastModifiedDate":"2022-04-07"},{"lineNumber":16,"author":{"gitId":"chuashihong"},"content":"public class JsonSerializableBuyerAddressBookTest {","lastModifiedDate":"2022-04-07"},{"lineNumber":17,"author":{"gitId":"chuashihong"},"content":"","lastModifiedDate":"2022-04-07"},{"lineNumber":18,"author":{"gitId":"chuashihong"},"content":"    private static final Path TEST_DATA_FOLDER \u003d Paths.get(\"src\", \"test\", \"data\",","lastModifiedDate":"2022-04-07"},{"lineNumber":19,"author":{"gitId":"chuashihong"},"content":"            \"JsonSerializableBuyerAddressBookTest\");","lastModifiedDate":"2022-04-07"},{"lineNumber":20,"author":{"gitId":"chuashihong"},"content":"    private static final Path TYPICAL_BUYER_FILE \u003d TEST_DATA_FOLDER.resolve(\"typicalBuyerAddressBook.json\");","lastModifiedDate":"2022-04-07"},{"lineNumber":21,"author":{"gitId":"chuashihong"},"content":"    private static final Path INVALID_BUYER_FILE \u003d TEST_DATA_FOLDER.resolve(\"invalidBuyerAddressBook.json\");","lastModifiedDate":"2022-04-07"},{"lineNumber":22,"author":{"gitId":"chuashihong"},"content":"    private static final Path DUPLICATE_BUYER_FILE \u003d TEST_DATA_FOLDER.resolve(\"duplicateBuyerAddressBook.json\");","lastModifiedDate":"2022-04-07"},{"lineNumber":23,"author":{"gitId":"chuashihong"},"content":"","lastModifiedDate":"2022-04-07"},{"lineNumber":24,"author":{"gitId":"chuashihong"},"content":"    //@Test","lastModifiedDate":"2022-04-08"},{"lineNumber":25,"author":{"gitId":"chuashihong"},"content":"    //Todo: Fix this error","lastModifiedDate":"2022-04-08"},{"lineNumber":26,"author":{"gitId":"chuashihong"},"content":"    //public void toModelType_typicalBuyersFile_success() throws Exception {","lastModifiedDate":"2022-04-08"},{"lineNumber":27,"author":{"gitId":"chuashihong"},"content":"    //    JsonSerializableBuyerAddressBook dataFromFile \u003d JsonUtil.readJsonFile(TYPICAL_BUYER_FILE,","lastModifiedDate":"2022-04-08"},{"lineNumber":28,"author":{"gitId":"chuashihong"},"content":"    //            JsonSerializableBuyerAddressBook.class).get();","lastModifiedDate":"2022-04-08"},{"lineNumber":29,"author":{"gitId":"chuashihong"},"content":"    //    BuyerAddressBook addressBookFromFile \u003d dataFromFile.toModelType();","lastModifiedDate":"2022-04-08"},{"lineNumber":30,"author":{"gitId":"chuashihong"},"content":"    //    BuyerAddressBook typicalBuyerAddressBook \u003d TypicalBuyers.getTypicalBuyerAddressBook();","lastModifiedDate":"2022-04-08"},{"lineNumber":31,"author":{"gitId":"chuashihong"},"content":"    //    assertEquals(addressBookFromFile, typicalBuyerAddressBook);","lastModifiedDate":"2022-04-08"},{"lineNumber":32,"author":{"gitId":"chuashihong"},"content":"    //}","lastModifiedDate":"2022-04-08"},{"lineNumber":33,"author":{"gitId":"chuashihong"},"content":"","lastModifiedDate":"2022-04-07"},{"lineNumber":34,"author":{"gitId":"chuashihong"},"content":"    @Test","lastModifiedDate":"2022-04-07"},{"lineNumber":35,"author":{"gitId":"chuashihong"},"content":"    public void toModelType_invalidBuyerFile_throwsIllegalValueException() throws Exception {","lastModifiedDate":"2022-04-07"},{"lineNumber":36,"author":{"gitId":"chuashihong"},"content":"        JsonSerializableBuyerAddressBook dataFromFile \u003d JsonUtil.readJsonFile(INVALID_BUYER_FILE,","lastModifiedDate":"2022-04-07"},{"lineNumber":37,"author":{"gitId":"chuashihong"},"content":"                JsonSerializableBuyerAddressBook.class).get();","lastModifiedDate":"2022-04-07"},{"lineNumber":38,"author":{"gitId":"chuashihong"},"content":"        assertThrows(IllegalValueException.class, dataFromFile::toModelType);","lastModifiedDate":"2022-04-07"},{"lineNumber":39,"author":{"gitId":"chuashihong"},"content":"    }","lastModifiedDate":"2022-04-07"},{"lineNumber":40,"author":{"gitId":"chuashihong"},"content":"","lastModifiedDate":"2022-04-07"},{"lineNumber":41,"author":{"gitId":"chuashihong"},"content":"    @Test","lastModifiedDate":"2022-04-07"},{"lineNumber":42,"author":{"gitId":"chuashihong"},"content":"    public void toModelType_duplicateBuyers_throwsIllegalValueException() throws Exception {","lastModifiedDate":"2022-04-07"},{"lineNumber":43,"author":{"gitId":"chuashihong"},"content":"        JsonSerializableBuyerAddressBook dataFromFile \u003d JsonUtil.readJsonFile(DUPLICATE_BUYER_FILE,","lastModifiedDate":"2022-04-07"},{"lineNumber":44,"author":{"gitId":"chuashihong"},"content":"                JsonSerializableBuyerAddressBook.class).get();","lastModifiedDate":"2022-04-07"},{"lineNumber":45,"author":{"gitId":"chuashihong"},"content":"        assertThrows(IllegalValueException.class, JsonSerializableBuyerAddressBook.MESSAGE_DUPLICATE_BUYER,","lastModifiedDate":"2022-04-07"},{"lineNumber":46,"author":{"gitId":"chuashihong"},"content":"                dataFromFile::toModelType);","lastModifiedDate":"2022-04-07"},{"lineNumber":47,"author":{"gitId":"chuashihong"},"content":"    }","lastModifiedDate":"2022-04-07"},{"lineNumber":48,"author":{"gitId":"chuashihong"},"content":"","lastModifiedDate":"2022-04-07"},{"lineNumber":49,"author":{"gitId":"chuashihong"},"content":"}","lastModifiedDate":"2022-04-07"}],"authorContributionMap":{"chuashihong":49}},{"path":"src/test/java/seedu/address/storage/JsonSerializableSellerAddressBookTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"chuashihong"},"content":"package seedu.address.storage;","lastModifiedDate":"2022-04-07"},{"lineNumber":2,"author":{"gitId":"chuashihong"},"content":"","lastModifiedDate":"2022-04-07"},{"lineNumber":3,"author":{"gitId":"chuashihong"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2022-04-07"},{"lineNumber":4,"author":{"gitId":"chuashihong"},"content":"import static seedu.address.testutil.Assert.assertThrows;","lastModifiedDate":"2022-04-07"},{"lineNumber":5,"author":{"gitId":"chuashihong"},"content":"","lastModifiedDate":"2022-04-07"},{"lineNumber":6,"author":{"gitId":"chuashihong"},"content":"import java.nio.file.Path;","lastModifiedDate":"2022-04-07"},{"lineNumber":7,"author":{"gitId":"chuashihong"},"content":"import java.nio.file.Paths;","lastModifiedDate":"2022-04-07"},{"lineNumber":8,"author":{"gitId":"chuashihong"},"content":"","lastModifiedDate":"2022-04-07"},{"lineNumber":9,"author":{"gitId":"chuashihong"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2022-04-07"},{"lineNumber":10,"author":{"gitId":"chuashihong"},"content":"","lastModifiedDate":"2022-04-07"},{"lineNumber":11,"author":{"gitId":"chuashihong"},"content":"import seedu.address.commons.exceptions.IllegalValueException;","lastModifiedDate":"2022-04-07"},{"lineNumber":12,"author":{"gitId":"chuashihong"},"content":"import seedu.address.commons.util.JsonUtil;","lastModifiedDate":"2022-04-07"},{"lineNumber":13,"author":{"gitId":"chuashihong"},"content":"import seedu.address.model.SellerAddressBook;","lastModifiedDate":"2022-04-07"},{"lineNumber":14,"author":{"gitId":"chuashihong"},"content":"import seedu.address.testutil.TypicalSellers;","lastModifiedDate":"2022-04-07"},{"lineNumber":15,"author":{"gitId":"chuashihong"},"content":"","lastModifiedDate":"2022-04-07"},{"lineNumber":16,"author":{"gitId":"chuashihong"},"content":"public class JsonSerializableSellerAddressBookTest {","lastModifiedDate":"2022-04-07"},{"lineNumber":17,"author":{"gitId":"chuashihong"},"content":"","lastModifiedDate":"2022-04-07"},{"lineNumber":18,"author":{"gitId":"chuashihong"},"content":"    private static final Path TEST_DATA_FOLDER \u003d Paths.get(\"src\", \"test\", \"data\",","lastModifiedDate":"2022-04-07"},{"lineNumber":19,"author":{"gitId":"chuashihong"},"content":"            \"JsonSerializableSellerAddressBookTest\");","lastModifiedDate":"2022-04-07"},{"lineNumber":20,"author":{"gitId":"chuashihong"},"content":"    private static final Path TYPICAL_SELLER_FILE \u003d TEST_DATA_FOLDER.resolve(\"typicalSellerAddressBook.json\");","lastModifiedDate":"2022-04-07"},{"lineNumber":21,"author":{"gitId":"chuashihong"},"content":"    private static final Path INVALID_SELLER_FILE \u003d TEST_DATA_FOLDER.resolve(\"invalidSellerAddressBook.json\");","lastModifiedDate":"2022-04-07"},{"lineNumber":22,"author":{"gitId":"chuashihong"},"content":"    private static final Path DUPLICATE_SELLER_FILE \u003d TEST_DATA_FOLDER.resolve(\"duplicateSellerAddressBook.json\");","lastModifiedDate":"2022-04-07"},{"lineNumber":23,"author":{"gitId":"chuashihong"},"content":"","lastModifiedDate":"2022-04-07"},{"lineNumber":24,"author":{"gitId":"chuashihong"},"content":"    @Test","lastModifiedDate":"2022-04-07"},{"lineNumber":25,"author":{"gitId":"chuashihong"},"content":"    public void toModelType_typicalSellersFile_success() throws Exception {","lastModifiedDate":"2022-04-07"},{"lineNumber":26,"author":{"gitId":"chuashihong"},"content":"        JsonSerializableSellerAddressBook dataFromFile \u003d JsonUtil.readJsonFile(TYPICAL_SELLER_FILE,","lastModifiedDate":"2022-04-07"},{"lineNumber":27,"author":{"gitId":"chuashihong"},"content":"                JsonSerializableSellerAddressBook.class).get();","lastModifiedDate":"2022-04-07"},{"lineNumber":28,"author":{"gitId":"chuashihong"},"content":"        SellerAddressBook addressBookFromFile \u003d dataFromFile.toModelType();","lastModifiedDate":"2022-04-07"},{"lineNumber":29,"author":{"gitId":"chuashihong"},"content":"        SellerAddressBook typicalSellersAddressBook \u003d TypicalSellers.getTypicalSellerAddressBook();","lastModifiedDate":"2022-04-07"},{"lineNumber":30,"author":{"gitId":"chuashihong"},"content":"        assertEquals(addressBookFromFile, typicalSellersAddressBook);","lastModifiedDate":"2022-04-07"},{"lineNumber":31,"author":{"gitId":"chuashihong"},"content":"    }","lastModifiedDate":"2022-04-07"},{"lineNumber":32,"author":{"gitId":"chuashihong"},"content":"","lastModifiedDate":"2022-04-07"},{"lineNumber":33,"author":{"gitId":"chuashihong"},"content":"    @Test","lastModifiedDate":"2022-04-07"},{"lineNumber":34,"author":{"gitId":"chuashihong"},"content":"    public void toModelType_invalidSellerFile_throwsIllegalValueException() throws Exception {","lastModifiedDate":"2022-04-07"},{"lineNumber":35,"author":{"gitId":"chuashihong"},"content":"        JsonSerializableSellerAddressBook dataFromFile \u003d JsonUtil.readJsonFile(INVALID_SELLER_FILE,","lastModifiedDate":"2022-04-07"},{"lineNumber":36,"author":{"gitId":"chuashihong"},"content":"                JsonSerializableSellerAddressBook.class).get();","lastModifiedDate":"2022-04-07"},{"lineNumber":37,"author":{"gitId":"chuashihong"},"content":"        assertThrows(IllegalValueException.class, dataFromFile::toModelType);","lastModifiedDate":"2022-04-07"},{"lineNumber":38,"author":{"gitId":"chuashihong"},"content":"    }","lastModifiedDate":"2022-04-07"},{"lineNumber":39,"author":{"gitId":"chuashihong"},"content":"","lastModifiedDate":"2022-04-07"},{"lineNumber":40,"author":{"gitId":"chuashihong"},"content":"    @Test","lastModifiedDate":"2022-04-07"},{"lineNumber":41,"author":{"gitId":"chuashihong"},"content":"    public void toModelType_duplicateBuyers_throwsIllegalValueException() throws Exception {","lastModifiedDate":"2022-04-07"},{"lineNumber":42,"author":{"gitId":"chuashihong"},"content":"        JsonSerializableSellerAddressBook dataFromFile \u003d JsonUtil.readJsonFile(DUPLICATE_SELLER_FILE,","lastModifiedDate":"2022-04-07"},{"lineNumber":43,"author":{"gitId":"chuashihong"},"content":"                JsonSerializableSellerAddressBook.class).get();","lastModifiedDate":"2022-04-07"},{"lineNumber":44,"author":{"gitId":"chuashihong"},"content":"        assertThrows(IllegalValueException.class, JsonSerializableSellerAddressBook.MESSAGE_DUPLICATE_SELLER,","lastModifiedDate":"2022-04-07"},{"lineNumber":45,"author":{"gitId":"chuashihong"},"content":"                dataFromFile::toModelType);","lastModifiedDate":"2022-04-07"},{"lineNumber":46,"author":{"gitId":"chuashihong"},"content":"    }","lastModifiedDate":"2022-04-07"},{"lineNumber":47,"author":{"gitId":"chuashihong"},"content":"","lastModifiedDate":"2022-04-07"},{"lineNumber":48,"author":{"gitId":"chuashihong"},"content":"}","lastModifiedDate":"2022-04-07"}],"authorContributionMap":{"chuashihong":48}},{"path":"src/test/java/seedu/address/storage/StorageManagerTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.storage;","lastModifiedDate":"2016-08-08"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertNotNull;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"cwnm"},"content":"import static seedu.address.testutil.TypicalClients.getTypicalAddressBook;","lastModifiedDate":"2022-03-04"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-04-21"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.BeforeEach;","lastModifiedDate":"2019-04-25"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-25"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.io.TempDir;","lastModifiedDate":"2019-04-25"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.GuiSettings;","lastModifiedDate":"2018-11-27"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import seedu.address.model.AddressBook;","lastModifiedDate":"2016-09-21"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import seedu.address.model.ReadOnlyAddressBook;","lastModifiedDate":"2016-09-21"},{"lineNumber":16,"author":{"gitId":"-"},"content":"import seedu.address.model.UserPrefs;","lastModifiedDate":"2016-09-24"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":18,"author":{"gitId":"-"},"content":"public class StorageManagerTest {","lastModifiedDate":"2016-08-08"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-28"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    @TempDir","lastModifiedDate":"2019-04-25"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    public Path testFolder;","lastModifiedDate":"2019-04-25"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    private StorageManager storageManager;","lastModifiedDate":"2017-04-01"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    @BeforeEach","lastModifiedDate":"2019-04-25"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    public void setUp() {","lastModifiedDate":"2016-10-19"},{"lineNumber":27,"author":{"gitId":"-"},"content":"        JsonAddressBookStorage addressBookStorage \u003d new JsonAddressBookStorage(getTempFilePath(\"ab\"));","lastModifiedDate":"2018-11-27"},{"lineNumber":28,"author":{"gitId":"-"},"content":"        JsonUserPrefsStorage userPrefsStorage \u003d new JsonUserPrefsStorage(getTempFilePath(\"prefs\"));","lastModifiedDate":"2017-02-25"},{"lineNumber":29,"author":{"gitId":"Jacky142857"},"content":"        JsonSellerAddressBookStorage sellerAddressBookStorage \u003d new JsonSellerAddressBookStorage(","lastModifiedDate":"2022-03-19"},{"lineNumber":30,"author":{"gitId":"Jacky142857"},"content":"                getTempFilePath(\"sab\")","lastModifiedDate":"2022-03-19"},{"lineNumber":31,"author":{"gitId":"Jacky142857"},"content":"        );","lastModifiedDate":"2022-03-19"},{"lineNumber":32,"author":{"gitId":"WJunHong"},"content":"        JsonBuyerAddressBookStorage buyerAddressBookStorage \u003d new JsonBuyerAddressBookStorage(","lastModifiedDate":"2022-03-23"},{"lineNumber":33,"author":{"gitId":"WJunHong"},"content":"                getTempFilePath(\"bab\"));","lastModifiedDate":"2022-03-23"},{"lineNumber":34,"author":{"gitId":"WJunHong"},"content":"        storageManager \u003d new StorageManager(addressBookStorage, userPrefsStorage, sellerAddressBookStorage,","lastModifiedDate":"2022-03-23"},{"lineNumber":35,"author":{"gitId":"WJunHong"},"content":"                buyerAddressBookStorage);","lastModifiedDate":"2022-03-23"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":37,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    private Path getTempFilePath(String fileName) {","lastModifiedDate":"2018-04-21"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        return testFolder.resolve(fileName);","lastModifiedDate":"2019-04-25"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-10-16"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    public void prefsReadSave() throws Exception {","lastModifiedDate":"2016-10-16"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        /*","lastModifiedDate":"2016-09-28"},{"lineNumber":45,"author":{"gitId":"-"},"content":"         * Note: This is an integration test that verifies the StorageManager is properly wired to the","lastModifiedDate":"2016-09-28"},{"lineNumber":46,"author":{"gitId":"-"},"content":"         * {@link JsonUserPrefsStorage} class.","lastModifiedDate":"2016-10-01"},{"lineNumber":47,"author":{"gitId":"-"},"content":"         * More extensive testing of UserPref saving/reading is done in {@link JsonUserPrefsStorageTest} class.","lastModifiedDate":"2016-10-01"},{"lineNumber":48,"author":{"gitId":"-"},"content":"         */","lastModifiedDate":"2016-09-28"},{"lineNumber":49,"author":{"gitId":"-"},"content":"        UserPrefs original \u003d new UserPrefs();","lastModifiedDate":"2016-09-24"},{"lineNumber":50,"author":{"gitId":"-"},"content":"        original.setGuiSettings(new GuiSettings(300, 600, 4, 6));","lastModifiedDate":"2018-11-27"},{"lineNumber":51,"author":{"gitId":"-"},"content":"        storageManager.saveUserPrefs(original);","lastModifiedDate":"2016-09-28"},{"lineNumber":52,"author":{"gitId":"-"},"content":"        UserPrefs retrieved \u003d storageManager.readUserPrefs().get();","lastModifiedDate":"2016-09-28"},{"lineNumber":53,"author":{"gitId":"-"},"content":"        assertEquals(original, retrieved);","lastModifiedDate":"2016-09-24"},{"lineNumber":54,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":55,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-08-08"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    public void addressBookReadSave() throws Exception {","lastModifiedDate":"2016-09-24"},{"lineNumber":58,"author":{"gitId":"-"},"content":"        /*","lastModifiedDate":"2016-10-16"},{"lineNumber":59,"author":{"gitId":"-"},"content":"         * Note: This is an integration test that verifies the StorageManager is properly wired to the","lastModifiedDate":"2016-10-16"},{"lineNumber":60,"author":{"gitId":"-"},"content":"         * {@link JsonAddressBookStorage} class.","lastModifiedDate":"2018-11-27"},{"lineNumber":61,"author":{"gitId":"-"},"content":"         * More extensive testing of UserPref saving/reading is done in {@link JsonAddressBookStorageTest} class.","lastModifiedDate":"2018-11-27"},{"lineNumber":62,"author":{"gitId":"-"},"content":"         */","lastModifiedDate":"2016-10-16"},{"lineNumber":63,"author":{"gitId":"-"},"content":"        AddressBook original \u003d getTypicalAddressBook();","lastModifiedDate":"2017-07-19"},{"lineNumber":64,"author":{"gitId":"-"},"content":"        storageManager.saveAddressBook(original);","lastModifiedDate":"2016-09-28"},{"lineNumber":65,"author":{"gitId":"-"},"content":"        ReadOnlyAddressBook retrieved \u003d storageManager.readAddressBook().get();","lastModifiedDate":"2016-09-28"},{"lineNumber":66,"author":{"gitId":"-"},"content":"        assertEquals(original, new AddressBook(retrieved));","lastModifiedDate":"2016-09-24"},{"lineNumber":67,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":68,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":69,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-10-01"},{"lineNumber":70,"author":{"gitId":"-"},"content":"    public void getAddressBookFilePath() {","lastModifiedDate":"2016-10-01"},{"lineNumber":71,"author":{"gitId":"-"},"content":"        assertNotNull(storageManager.getAddressBookFilePath());","lastModifiedDate":"2016-10-01"},{"lineNumber":72,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-10-01"},{"lineNumber":73,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-01"},{"lineNumber":74,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"}],"authorContributionMap":{"WJunHong":4,"Jacky142857":3,"-":66,"cwnm":1}},{"path":"src/test/java/seedu/address/testutil/AddressBookBuilder.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.testutil;","lastModifiedDate":"2016-08-08"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import seedu.address.model.AddressBook;","lastModifiedDate":"2016-09-21"},{"lineNumber":4,"author":{"gitId":"cwnm"},"content":"import seedu.address.model.client.Client;","lastModifiedDate":"2022-03-04"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":6,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-08"},{"lineNumber":7,"author":{"gitId":"-"},"content":" * A utility class to help with building Addressbook objects.","lastModifiedDate":"2016-08-08"},{"lineNumber":8,"author":{"gitId":"-"},"content":" * Example usage: \u003cbr\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":9,"author":{"gitId":"cwnm"},"content":" *     {@code AddressBook ab \u003d new AddressBookBuilder().withclient(\"John\", \"Doe\").build();}","lastModifiedDate":"2022-03-04"},{"lineNumber":10,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-08"},{"lineNumber":11,"author":{"gitId":"-"},"content":"public class AddressBookBuilder {","lastModifiedDate":"2016-08-08"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    private AddressBook addressBook;","lastModifiedDate":"2016-08-08"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":15,"author":{"gitId":"-"},"content":"    public AddressBookBuilder() {","lastModifiedDate":"2017-05-31"},{"lineNumber":16,"author":{"gitId":"-"},"content":"        addressBook \u003d new AddressBook();","lastModifiedDate":"2017-05-31"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-31"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-31"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    public AddressBookBuilder(AddressBook addressBook) {","lastModifiedDate":"2016-08-08"},{"lineNumber":20,"author":{"gitId":"-"},"content":"        this.addressBook \u003d addressBook;","lastModifiedDate":"2016-08-08"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-07-26"},{"lineNumber":24,"author":{"gitId":"cwnm"},"content":"     * Adds a new {@code client} to the {@code AddressBook} that we are building.","lastModifiedDate":"2022-03-04"},{"lineNumber":25,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-07-26"},{"lineNumber":26,"author":{"gitId":"cwnm"},"content":"    public AddressBookBuilder withclient(Client client) {","lastModifiedDate":"2022-03-04"},{"lineNumber":27,"author":{"gitId":"cwnm"},"content":"        addressBook.addclient(client);","lastModifiedDate":"2022-03-04"},{"lineNumber":28,"author":{"gitId":"-"},"content":"        return this;","lastModifiedDate":"2016-08-08"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    public AddressBook build() {","lastModifiedDate":"2016-08-08"},{"lineNumber":32,"author":{"gitId":"-"},"content":"        return addressBook;","lastModifiedDate":"2016-08-08"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":34,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"}],"authorContributionMap":{"-":29,"cwnm":5}},{"path":"src/test/java/seedu/address/testutil/BuyerBuilder.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"WJunHong"},"content":"package seedu.address.testutil;","lastModifiedDate":"2022-03-16"},{"lineNumber":2,"author":{"gitId":"WJunHong"},"content":"","lastModifiedDate":"2022-03-16"},{"lineNumber":3,"author":{"gitId":"WJunHong"},"content":"import java.util.HashSet;","lastModifiedDate":"2022-03-16"},{"lineNumber":4,"author":{"gitId":"WJunHong"},"content":"import java.util.Set;","lastModifiedDate":"2022-03-16"},{"lineNumber":5,"author":{"gitId":"WJunHong"},"content":"","lastModifiedDate":"2022-03-16"},{"lineNumber":6,"author":{"gitId":"WJunHong"},"content":"import seedu.address.model.buyer.Buyer;","lastModifiedDate":"2022-03-16"},{"lineNumber":7,"author":{"gitId":"WJunHong"},"content":"import seedu.address.model.client.Appointment;","lastModifiedDate":"2022-03-16"},{"lineNumber":8,"author":{"gitId":"WJunHong"},"content":"import seedu.address.model.client.Name;","lastModifiedDate":"2022-03-16"},{"lineNumber":9,"author":{"gitId":"WJunHong"},"content":"import seedu.address.model.client.Phone;","lastModifiedDate":"2022-03-16"},{"lineNumber":10,"author":{"gitId":"WJunHong"},"content":"import seedu.address.model.property.NullPropertyToBuy;","lastModifiedDate":"2022-03-24"},{"lineNumber":11,"author":{"gitId":"WJunHong"},"content":"import seedu.address.model.property.PropertyToBuy;","lastModifiedDate":"2022-03-16"},{"lineNumber":12,"author":{"gitId":"WJunHong"},"content":"import seedu.address.model.tag.Tag;","lastModifiedDate":"2022-03-16"},{"lineNumber":13,"author":{"gitId":"WJunHong"},"content":"import seedu.address.model.util.SampleDataUtil;","lastModifiedDate":"2022-03-16"},{"lineNumber":14,"author":{"gitId":"WJunHong"},"content":"","lastModifiedDate":"2022-03-16"},{"lineNumber":15,"author":{"gitId":"WJunHong"},"content":"/**","lastModifiedDate":"2022-03-16"},{"lineNumber":16,"author":{"gitId":"WJunHong"},"content":" * A utility class to help with building client objects.","lastModifiedDate":"2022-03-16"},{"lineNumber":17,"author":{"gitId":"WJunHong"},"content":" */","lastModifiedDate":"2022-03-16"},{"lineNumber":18,"author":{"gitId":"WJunHong"},"content":"public class BuyerBuilder {","lastModifiedDate":"2022-03-16"},{"lineNumber":19,"author":{"gitId":"WJunHong"},"content":"","lastModifiedDate":"2022-03-16"},{"lineNumber":20,"author":{"gitId":"WJunHong"},"content":"    public static final String DEFAULT_NAME \u003d \"Amy Bee\";","lastModifiedDate":"2022-03-16"},{"lineNumber":21,"author":{"gitId":"WJunHong"},"content":"    public static final String DEFAULT_PHONE \u003d \"85355255\";","lastModifiedDate":"2022-03-16"},{"lineNumber":22,"author":{"gitId":"WJunHong"},"content":"    public static final String DEFAULT_APPOINTMENT \u003d \"2022-05-01-12-00\";","lastModifiedDate":"2022-03-16"},{"lineNumber":23,"author":{"gitId":"cwnm"},"content":"    public static final PropertyToBuy DEFAULT_PROPERTY \u003d NullPropertyToBuy.getNullPropertyToBuy();","lastModifiedDate":"2022-03-29"},{"lineNumber":24,"author":{"gitId":"WJunHong"},"content":"","lastModifiedDate":"2022-03-16"},{"lineNumber":25,"author":{"gitId":"WJunHong"},"content":"    private Name name;","lastModifiedDate":"2022-03-16"},{"lineNumber":26,"author":{"gitId":"WJunHong"},"content":"    private Phone phone;","lastModifiedDate":"2022-03-16"},{"lineNumber":27,"author":{"gitId":"WJunHong"},"content":"    private Set\u003cTag\u003e tags;","lastModifiedDate":"2022-03-16"},{"lineNumber":28,"author":{"gitId":"WJunHong"},"content":"    private Appointment appointment;","lastModifiedDate":"2022-03-16"},{"lineNumber":29,"author":{"gitId":"janald99"},"content":"    private PropertyToBuy propertyToBuy;","lastModifiedDate":"2022-03-31"},{"lineNumber":30,"author":{"gitId":"chuashihong"},"content":"","lastModifiedDate":"2022-03-27"},{"lineNumber":31,"author":{"gitId":"WJunHong"},"content":"","lastModifiedDate":"2022-03-16"},{"lineNumber":32,"author":{"gitId":"WJunHong"},"content":"    /**","lastModifiedDate":"2022-03-16"},{"lineNumber":33,"author":{"gitId":"janald99"},"content":"     * Creates a {@code buyerBuilder} with the default details.","lastModifiedDate":"2022-03-31"},{"lineNumber":34,"author":{"gitId":"WJunHong"},"content":"     */","lastModifiedDate":"2022-03-16"},{"lineNumber":35,"author":{"gitId":"WJunHong"},"content":"    public BuyerBuilder() {","lastModifiedDate":"2022-03-16"},{"lineNumber":36,"author":{"gitId":"WJunHong"},"content":"        name \u003d new Name(DEFAULT_NAME);","lastModifiedDate":"2022-03-16"},{"lineNumber":37,"author":{"gitId":"WJunHong"},"content":"        phone \u003d new Phone(DEFAULT_PHONE);","lastModifiedDate":"2022-03-16"},{"lineNumber":38,"author":{"gitId":"WJunHong"},"content":"        appointment \u003d new Appointment(\"\");","lastModifiedDate":"2022-03-24"},{"lineNumber":39,"author":{"gitId":"WJunHong"},"content":"        tags \u003d new HashSet\u003c\u003e();","lastModifiedDate":"2022-03-16"},{"lineNumber":40,"author":{"gitId":"janald99"},"content":"        propertyToBuy \u003d DEFAULT_PROPERTY;","lastModifiedDate":"2022-03-31"},{"lineNumber":41,"author":{"gitId":"WJunHong"},"content":"    }","lastModifiedDate":"2022-03-16"},{"lineNumber":42,"author":{"gitId":"WJunHong"},"content":"","lastModifiedDate":"2022-03-16"},{"lineNumber":43,"author":{"gitId":"WJunHong"},"content":"    /**","lastModifiedDate":"2022-03-16"},{"lineNumber":44,"author":{"gitId":"WJunHong"},"content":"     * Initializes the clientBuilder with the data of {@code clientToCopy}.","lastModifiedDate":"2022-03-16"},{"lineNumber":45,"author":{"gitId":"WJunHong"},"content":"     */","lastModifiedDate":"2022-03-16"},{"lineNumber":46,"author":{"gitId":"WJunHong"},"content":"    public BuyerBuilder(Buyer buyerToCopy) {","lastModifiedDate":"2022-03-16"},{"lineNumber":47,"author":{"gitId":"WJunHong"},"content":"        name \u003d buyerToCopy.getName();","lastModifiedDate":"2022-03-16"},{"lineNumber":48,"author":{"gitId":"WJunHong"},"content":"        phone \u003d buyerToCopy.getPhone();","lastModifiedDate":"2022-03-16"},{"lineNumber":49,"author":{"gitId":"WJunHong"},"content":"        appointment \u003d buyerToCopy.getAppointment();","lastModifiedDate":"2022-03-16"},{"lineNumber":50,"author":{"gitId":"WJunHong"},"content":"        tags \u003d new HashSet\u003c\u003e(buyerToCopy.getTags());","lastModifiedDate":"2022-03-16"},{"lineNumber":51,"author":{"gitId":"janald99"},"content":"        propertyToBuy \u003d buyerToCopy.getPropertyToBuy();","lastModifiedDate":"2022-03-31"},{"lineNumber":52,"author":{"gitId":"WJunHong"},"content":"    }","lastModifiedDate":"2022-03-16"},{"lineNumber":53,"author":{"gitId":"WJunHong"},"content":"","lastModifiedDate":"2022-03-16"},{"lineNumber":54,"author":{"gitId":"WJunHong"},"content":"    /**","lastModifiedDate":"2022-03-16"},{"lineNumber":55,"author":{"gitId":"WJunHong"},"content":"     * Sets the {@code Name} of the {@code client} that we are building.","lastModifiedDate":"2022-03-16"},{"lineNumber":56,"author":{"gitId":"WJunHong"},"content":"     */","lastModifiedDate":"2022-03-16"},{"lineNumber":57,"author":{"gitId":"WJunHong"},"content":"    public BuyerBuilder withName(String name) {","lastModifiedDate":"2022-03-16"},{"lineNumber":58,"author":{"gitId":"WJunHong"},"content":"        this.name \u003d new Name(name);","lastModifiedDate":"2022-03-16"},{"lineNumber":59,"author":{"gitId":"WJunHong"},"content":"        return this;","lastModifiedDate":"2022-03-16"},{"lineNumber":60,"author":{"gitId":"WJunHong"},"content":"    }","lastModifiedDate":"2022-03-16"},{"lineNumber":61,"author":{"gitId":"WJunHong"},"content":"","lastModifiedDate":"2022-03-16"},{"lineNumber":62,"author":{"gitId":"WJunHong"},"content":"    /**","lastModifiedDate":"2022-03-16"},{"lineNumber":63,"author":{"gitId":"WJunHong"},"content":"     * Parses the {@code tags} into a {@code Set\u003cTag\u003e} and set it to the {@code client} that we are building.","lastModifiedDate":"2022-03-16"},{"lineNumber":64,"author":{"gitId":"WJunHong"},"content":"     */","lastModifiedDate":"2022-03-16"},{"lineNumber":65,"author":{"gitId":"WJunHong"},"content":"    public BuyerBuilder withTags(String ... tags) {","lastModifiedDate":"2022-03-16"},{"lineNumber":66,"author":{"gitId":"WJunHong"},"content":"        this.tags \u003d SampleDataUtil.getTagSet(tags);","lastModifiedDate":"2022-03-16"},{"lineNumber":67,"author":{"gitId":"WJunHong"},"content":"        return this;","lastModifiedDate":"2022-03-16"},{"lineNumber":68,"author":{"gitId":"WJunHong"},"content":"    }","lastModifiedDate":"2022-03-16"},{"lineNumber":69,"author":{"gitId":"WJunHong"},"content":"","lastModifiedDate":"2022-03-16"},{"lineNumber":70,"author":{"gitId":"WJunHong"},"content":"    /**","lastModifiedDate":"2022-03-16"},{"lineNumber":71,"author":{"gitId":"WJunHong"},"content":"     * Sets the {@code Phone} of the {@code client} that we are building.","lastModifiedDate":"2022-03-16"},{"lineNumber":72,"author":{"gitId":"WJunHong"},"content":"     */","lastModifiedDate":"2022-03-16"},{"lineNumber":73,"author":{"gitId":"WJunHong"},"content":"    public BuyerBuilder withPhone(String phone) {","lastModifiedDate":"2022-03-16"},{"lineNumber":74,"author":{"gitId":"WJunHong"},"content":"        this.phone \u003d new Phone(phone);","lastModifiedDate":"2022-03-16"},{"lineNumber":75,"author":{"gitId":"WJunHong"},"content":"        return this;","lastModifiedDate":"2022-03-16"},{"lineNumber":76,"author":{"gitId":"WJunHong"},"content":"    }","lastModifiedDate":"2022-03-16"},{"lineNumber":77,"author":{"gitId":"WJunHong"},"content":"","lastModifiedDate":"2022-03-16"},{"lineNumber":78,"author":{"gitId":"WJunHong"},"content":"    /**","lastModifiedDate":"2022-03-16"},{"lineNumber":79,"author":{"gitId":"WJunHong"},"content":"     * Sets the {@code Appointment} of the {@code client} that we are building.","lastModifiedDate":"2022-03-16"},{"lineNumber":80,"author":{"gitId":"WJunHong"},"content":"     */","lastModifiedDate":"2022-03-16"},{"lineNumber":81,"author":{"gitId":"WJunHong"},"content":"    public BuyerBuilder withAppointment(String appointment) {","lastModifiedDate":"2022-03-16"},{"lineNumber":82,"author":{"gitId":"WJunHong"},"content":"        this.appointment \u003d new Appointment(appointment);","lastModifiedDate":"2022-03-16"},{"lineNumber":83,"author":{"gitId":"WJunHong"},"content":"        return this;","lastModifiedDate":"2022-03-16"},{"lineNumber":84,"author":{"gitId":"WJunHong"},"content":"    }","lastModifiedDate":"2022-03-16"},{"lineNumber":85,"author":{"gitId":"WJunHong"},"content":"","lastModifiedDate":"2022-03-16"},{"lineNumber":86,"author":{"gitId":"WJunHong"},"content":"    /**","lastModifiedDate":"2022-03-16"},{"lineNumber":87,"author":{"gitId":"WJunHong"},"content":"     * Sets the {@code Properties} of the {@code buyer} that we are building.","lastModifiedDate":"2022-03-16"},{"lineNumber":88,"author":{"gitId":"WJunHong"},"content":"     */","lastModifiedDate":"2022-03-16"},{"lineNumber":89,"author":{"gitId":"WJunHong"},"content":"    public BuyerBuilder withProperty(PropertyToBuy property) {","lastModifiedDate":"2022-03-23"},{"lineNumber":90,"author":{"gitId":"janald99"},"content":"        this.propertyToBuy \u003d property;","lastModifiedDate":"2022-03-31"},{"lineNumber":91,"author":{"gitId":"WJunHong"},"content":"        return this;","lastModifiedDate":"2022-03-16"},{"lineNumber":92,"author":{"gitId":"WJunHong"},"content":"    }","lastModifiedDate":"2022-03-16"},{"lineNumber":93,"author":{"gitId":"WJunHong"},"content":"","lastModifiedDate":"2022-03-16"},{"lineNumber":94,"author":{"gitId":"WJunHong"},"content":"    public Buyer build() {","lastModifiedDate":"2022-03-16"},{"lineNumber":95,"author":{"gitId":"janald99"},"content":"        return new Buyer(name, phone, appointment, tags, propertyToBuy);","lastModifiedDate":"2022-03-31"},{"lineNumber":96,"author":{"gitId":"WJunHong"},"content":"    }","lastModifiedDate":"2022-03-16"},{"lineNumber":97,"author":{"gitId":"WJunHong"},"content":"","lastModifiedDate":"2022-03-16"},{"lineNumber":98,"author":{"gitId":"WJunHong"},"content":"}","lastModifiedDate":"2022-03-16"}],"authorContributionMap":{"janald99":6,"WJunHong":90,"cwnm":1,"chuashihong":1}},{"path":"src/test/java/seedu/address/testutil/BuyerUtil.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"chuashihong"},"content":"package seedu.address.testutil;","lastModifiedDate":"2022-04-07"},{"lineNumber":2,"author":{"gitId":"chuashihong"},"content":"","lastModifiedDate":"2022-04-07"},{"lineNumber":3,"author":{"gitId":"chuashihong"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_HOUSE_TYPE;","lastModifiedDate":"2022-04-07"},{"lineNumber":4,"author":{"gitId":"chuashihong"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_LOCATION;","lastModifiedDate":"2022-04-07"},{"lineNumber":5,"author":{"gitId":"chuashihong"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_NAME;","lastModifiedDate":"2022-04-07"},{"lineNumber":6,"author":{"gitId":"chuashihong"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_PHONE;","lastModifiedDate":"2022-04-07"},{"lineNumber":7,"author":{"gitId":"chuashihong"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_PRICE_RANGE;","lastModifiedDate":"2022-04-07"},{"lineNumber":8,"author":{"gitId":"chuashihong"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_TAG;","lastModifiedDate":"2022-04-07"},{"lineNumber":9,"author":{"gitId":"chuashihong"},"content":"","lastModifiedDate":"2022-04-07"},{"lineNumber":10,"author":{"gitId":"chuashihong"},"content":"import java.util.Set;","lastModifiedDate":"2022-04-07"},{"lineNumber":11,"author":{"gitId":"chuashihong"},"content":"","lastModifiedDate":"2022-04-07"},{"lineNumber":12,"author":{"gitId":"chuashihong"},"content":"import seedu.address.logic.commands.AddBuyerCommand;","lastModifiedDate":"2022-04-07"},{"lineNumber":13,"author":{"gitId":"chuashihong"},"content":"import seedu.address.logic.commands.EditBuyerCommand.EditBuyerDescriptor;","lastModifiedDate":"2022-04-07"},{"lineNumber":14,"author":{"gitId":"chuashihong"},"content":"import seedu.address.model.buyer.Buyer;","lastModifiedDate":"2022-04-07"},{"lineNumber":15,"author":{"gitId":"chuashihong"},"content":"import seedu.address.model.tag.Tag;","lastModifiedDate":"2022-04-07"},{"lineNumber":16,"author":{"gitId":"chuashihong"},"content":"","lastModifiedDate":"2022-04-07"},{"lineNumber":17,"author":{"gitId":"chuashihong"},"content":"/**","lastModifiedDate":"2022-04-07"},{"lineNumber":18,"author":{"gitId":"chuashihong"},"content":" * A utility class for client.","lastModifiedDate":"2022-04-07"},{"lineNumber":19,"author":{"gitId":"chuashihong"},"content":" */","lastModifiedDate":"2022-04-07"},{"lineNumber":20,"author":{"gitId":"chuashihong"},"content":"public class BuyerUtil {","lastModifiedDate":"2022-04-07"},{"lineNumber":21,"author":{"gitId":"chuashihong"},"content":"","lastModifiedDate":"2022-04-07"},{"lineNumber":22,"author":{"gitId":"chuashihong"},"content":"    /**","lastModifiedDate":"2022-04-07"},{"lineNumber":23,"author":{"gitId":"chuashihong"},"content":"     * Returns an add command string for adding the {@code buyer}.","lastModifiedDate":"2022-04-07"},{"lineNumber":24,"author":{"gitId":"chuashihong"},"content":"     */","lastModifiedDate":"2022-04-07"},{"lineNumber":25,"author":{"gitId":"chuashihong"},"content":"    public static String getAddBuyerCommand(Buyer buyer) {","lastModifiedDate":"2022-04-07"},{"lineNumber":26,"author":{"gitId":"chuashihong"},"content":"        return AddBuyerCommand.COMMAND_WORD + \" \" + getBuyerDetails(buyer);","lastModifiedDate":"2022-04-07"},{"lineNumber":27,"author":{"gitId":"chuashihong"},"content":"    }","lastModifiedDate":"2022-04-07"},{"lineNumber":28,"author":{"gitId":"chuashihong"},"content":"","lastModifiedDate":"2022-04-07"},{"lineNumber":29,"author":{"gitId":"chuashihong"},"content":"    /**","lastModifiedDate":"2022-04-07"},{"lineNumber":30,"author":{"gitId":"chuashihong"},"content":"     * Returns the part of the command string for the given {@code buyer}\u0027s PropertyToBuy details.","lastModifiedDate":"2022-04-07"},{"lineNumber":31,"author":{"gitId":"chuashihong"},"content":"     */","lastModifiedDate":"2022-04-07"},{"lineNumber":32,"author":{"gitId":"chuashihong"},"content":"    public static String getPropertyToBuyCommand(Buyer buyer) {","lastModifiedDate":"2022-04-07"},{"lineNumber":33,"author":{"gitId":"chuashihong"},"content":"        StringBuilder sb \u003d new StringBuilder();","lastModifiedDate":"2022-04-07"},{"lineNumber":34,"author":{"gitId":"chuashihong"},"content":"        sb.append(PREFIX_LOCATION + buyer.getPropertyToBuy().getHouse().getLocation().toString() + \" \");","lastModifiedDate":"2022-04-07"},{"lineNumber":35,"author":{"gitId":"chuashihong"},"content":"        sb.append(PREFIX_HOUSE_TYPE + buyer.getPropertyToBuy().getHouse().getHouseTypeToString() + \" \");","lastModifiedDate":"2022-04-07"},{"lineNumber":36,"author":{"gitId":"chuashihong"},"content":"        sb.append(PREFIX_PRICE_RANGE","lastModifiedDate":"2022-04-07"},{"lineNumber":37,"author":{"gitId":"chuashihong"},"content":"                + buyer.getPropertyToBuy().getPriceRange().toString().split(\"]\")[0].substring(1) + \" \");","lastModifiedDate":"2022-04-07"},{"lineNumber":38,"author":{"gitId":"chuashihong"},"content":"        return sb.toString();","lastModifiedDate":"2022-04-07"},{"lineNumber":39,"author":{"gitId":"chuashihong"},"content":"    }","lastModifiedDate":"2022-04-07"},{"lineNumber":40,"author":{"gitId":"chuashihong"},"content":"","lastModifiedDate":"2022-04-07"},{"lineNumber":41,"author":{"gitId":"chuashihong"},"content":"    /**","lastModifiedDate":"2022-04-07"},{"lineNumber":42,"author":{"gitId":"chuashihong"},"content":"     * Returns the part of command string for the given {@code buyer}\u0027s details.","lastModifiedDate":"2022-04-07"},{"lineNumber":43,"author":{"gitId":"chuashihong"},"content":"     */","lastModifiedDate":"2022-04-07"},{"lineNumber":44,"author":{"gitId":"chuashihong"},"content":"    public static String getBuyerDetails(Buyer buyer) {","lastModifiedDate":"2022-04-07"},{"lineNumber":45,"author":{"gitId":"chuashihong"},"content":"        StringBuilder sb \u003d new StringBuilder();","lastModifiedDate":"2022-04-07"},{"lineNumber":46,"author":{"gitId":"chuashihong"},"content":"        sb.append(PREFIX_NAME + buyer.getName().fullName + \" \");","lastModifiedDate":"2022-04-07"},{"lineNumber":47,"author":{"gitId":"chuashihong"},"content":"        sb.append(PREFIX_PHONE + buyer.getPhone().value + \" \");","lastModifiedDate":"2022-04-07"},{"lineNumber":48,"author":{"gitId":"chuashihong"},"content":"        buyer.getTags().stream().forEach(","lastModifiedDate":"2022-04-07"},{"lineNumber":49,"author":{"gitId":"chuashihong"},"content":"            s -\u003e sb.append(PREFIX_TAG + s.tagName + \" \")","lastModifiedDate":"2022-04-07"},{"lineNumber":50,"author":{"gitId":"chuashihong"},"content":"        );","lastModifiedDate":"2022-04-07"},{"lineNumber":51,"author":{"gitId":"chuashihong"},"content":"        return sb.toString();","lastModifiedDate":"2022-04-07"},{"lineNumber":52,"author":{"gitId":"chuashihong"},"content":"    }","lastModifiedDate":"2022-04-07"},{"lineNumber":53,"author":{"gitId":"chuashihong"},"content":"","lastModifiedDate":"2022-04-07"},{"lineNumber":54,"author":{"gitId":"chuashihong"},"content":"    /**","lastModifiedDate":"2022-04-07"},{"lineNumber":55,"author":{"gitId":"chuashihong"},"content":"     * Returns the part of command string for the given {@code EditclientDescriptor}\u0027s details.","lastModifiedDate":"2022-04-07"},{"lineNumber":56,"author":{"gitId":"chuashihong"},"content":"     */","lastModifiedDate":"2022-04-07"},{"lineNumber":57,"author":{"gitId":"chuashihong"},"content":"    public static String getEditBuyerDescriptorDetails(EditBuyerDescriptor descriptor) {","lastModifiedDate":"2022-04-07"},{"lineNumber":58,"author":{"gitId":"chuashihong"},"content":"        StringBuilder sb \u003d new StringBuilder();","lastModifiedDate":"2022-04-07"},{"lineNumber":59,"author":{"gitId":"chuashihong"},"content":"        descriptor.getName().ifPresent(name -\u003e sb.append(PREFIX_NAME).append(name.fullName).append(\" \"));","lastModifiedDate":"2022-04-07"},{"lineNumber":60,"author":{"gitId":"chuashihong"},"content":"        descriptor.getPhone().ifPresent(phone -\u003e sb.append(PREFIX_PHONE).append(phone.value).append(\" \"));","lastModifiedDate":"2022-04-07"},{"lineNumber":61,"author":{"gitId":"chuashihong"},"content":"        if (descriptor.getTags().isPresent()) {","lastModifiedDate":"2022-04-07"},{"lineNumber":62,"author":{"gitId":"chuashihong"},"content":"            Set\u003cTag\u003e tags \u003d descriptor.getTags().get();","lastModifiedDate":"2022-04-07"},{"lineNumber":63,"author":{"gitId":"chuashihong"},"content":"            if (tags.isEmpty()) {","lastModifiedDate":"2022-04-07"},{"lineNumber":64,"author":{"gitId":"chuashihong"},"content":"                sb.append(PREFIX_TAG);","lastModifiedDate":"2022-04-07"},{"lineNumber":65,"author":{"gitId":"chuashihong"},"content":"            } else {","lastModifiedDate":"2022-04-07"},{"lineNumber":66,"author":{"gitId":"chuashihong"},"content":"                tags.forEach(s -\u003e sb.append(PREFIX_TAG).append(s.tagName).append(\" \"));","lastModifiedDate":"2022-04-07"},{"lineNumber":67,"author":{"gitId":"chuashihong"},"content":"            }","lastModifiedDate":"2022-04-07"},{"lineNumber":68,"author":{"gitId":"chuashihong"},"content":"        }","lastModifiedDate":"2022-04-07"},{"lineNumber":69,"author":{"gitId":"chuashihong"},"content":"        return sb.toString();","lastModifiedDate":"2022-04-07"},{"lineNumber":70,"author":{"gitId":"chuashihong"},"content":"    }","lastModifiedDate":"2022-04-07"},{"lineNumber":71,"author":{"gitId":"chuashihong"},"content":"}","lastModifiedDate":"2022-04-07"}],"authorContributionMap":{"chuashihong":71}},{"path":"src/test/java/seedu/address/testutil/ClientBuilder.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.testutil;","lastModifiedDate":"2016-09-03"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-03"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.util.HashSet;","lastModifiedDate":"2017-12-20"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import java.util.Set;","lastModifiedDate":"2017-04-05"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-04-05"},{"lineNumber":6,"author":{"gitId":"Jacky142857"},"content":"import seedu.address.model.client.Appointment;","lastModifiedDate":"2022-03-11"},{"lineNumber":7,"author":{"gitId":"cwnm"},"content":"import seedu.address.model.client.Client;","lastModifiedDate":"2022-03-04"},{"lineNumber":8,"author":{"gitId":"cwnm"},"content":"import seedu.address.model.client.Name;","lastModifiedDate":"2022-03-04"},{"lineNumber":9,"author":{"gitId":"cwnm"},"content":"import seedu.address.model.client.Phone;","lastModifiedDate":"2022-03-04"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import seedu.address.model.tag.Tag;","lastModifiedDate":"2017-04-05"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import seedu.address.model.util.SampleDataUtil;","lastModifiedDate":"2017-04-05"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-03"},{"lineNumber":13,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-09-03"},{"lineNumber":14,"author":{"gitId":"cwnm"},"content":" * A utility class to help with building client objects.","lastModifiedDate":"2022-03-04"},{"lineNumber":15,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-09-03"},{"lineNumber":16,"author":{"gitId":"cwnm"},"content":"public class ClientBuilder {","lastModifiedDate":"2022-03-04"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-03"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    public static final String DEFAULT_NAME \u003d \"Amy Bee\";","lastModifiedDate":"2020-12-18"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    public static final String DEFAULT_PHONE \u003d \"85355255\";","lastModifiedDate":"2017-04-05"},{"lineNumber":20,"author":{"gitId":"Jacky142857"},"content":"    public static final String DEFAULT_APPOINTMENT \u003d \"2022-05-01-12-00\";","lastModifiedDate":"2022-03-11"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-04-05"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    private Name name;","lastModifiedDate":"2017-12-20"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    private Phone phone;","lastModifiedDate":"2017-12-20"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    private Set\u003cTag\u003e tags;","lastModifiedDate":"2017-12-20"},{"lineNumber":25,"author":{"gitId":"Jacky142857"},"content":"    private Appointment appointment;","lastModifiedDate":"2022-03-11"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-03"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2020-05-27"},{"lineNumber":28,"author":{"gitId":"cwnm"},"content":"     * Creates a {@code clientBuilder} with the default details.","lastModifiedDate":"2022-03-04"},{"lineNumber":29,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2020-05-27"},{"lineNumber":30,"author":{"gitId":"cwnm"},"content":"    public ClientBuilder() {","lastModifiedDate":"2022-03-04"},{"lineNumber":31,"author":{"gitId":"-"},"content":"        name \u003d new Name(DEFAULT_NAME);","lastModifiedDate":"2017-12-20"},{"lineNumber":32,"author":{"gitId":"-"},"content":"        phone \u003d new Phone(DEFAULT_PHONE);","lastModifiedDate":"2017-12-20"},{"lineNumber":33,"author":{"gitId":"Jacky142857"},"content":"        appointment \u003d new Appointment(DEFAULT_APPOINTMENT);","lastModifiedDate":"2022-03-11"},{"lineNumber":34,"author":{"gitId":"-"},"content":"        tags \u003d new HashSet\u003c\u003e();","lastModifiedDate":"2018-03-26"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-03"},{"lineNumber":36,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-03"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-12-11"},{"lineNumber":38,"author":{"gitId":"cwnm"},"content":"     * Initializes the clientBuilder with the data of {@code clientToCopy}.","lastModifiedDate":"2022-03-04"},{"lineNumber":39,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-12-11"},{"lineNumber":40,"author":{"gitId":"cwnm"},"content":"    public ClientBuilder(Client clientToCopy) {","lastModifiedDate":"2022-03-04"},{"lineNumber":41,"author":{"gitId":"cwnm"},"content":"        name \u003d clientToCopy.getName();","lastModifiedDate":"2022-03-04"},{"lineNumber":42,"author":{"gitId":"cwnm"},"content":"        phone \u003d clientToCopy.getPhone();","lastModifiedDate":"2022-03-04"},{"lineNumber":43,"author":{"gitId":"Jacky142857"},"content":"        appointment \u003d clientToCopy.getAppointment();","lastModifiedDate":"2022-03-11"},{"lineNumber":44,"author":{"gitId":"cwnm"},"content":"        tags \u003d new HashSet\u003c\u003e(clientToCopy.getTags());","lastModifiedDate":"2022-03-04"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-11"},{"lineNumber":46,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-11"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-07-26"},{"lineNumber":48,"author":{"gitId":"cwnm"},"content":"     * Sets the {@code Name} of the {@code client} that we are building.","lastModifiedDate":"2022-03-04"},{"lineNumber":49,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-07-26"},{"lineNumber":50,"author":{"gitId":"cwnm"},"content":"    public ClientBuilder withName(String name) {","lastModifiedDate":"2022-03-04"},{"lineNumber":51,"author":{"gitId":"-"},"content":"        this.name \u003d new Name(name);","lastModifiedDate":"2017-12-20"},{"lineNumber":52,"author":{"gitId":"-"},"content":"        return this;","lastModifiedDate":"2016-09-03"},{"lineNumber":53,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-03"},{"lineNumber":54,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-03"},{"lineNumber":55,"author":{"gitId":"chuashihong"},"content":"","lastModifiedDate":"2022-03-05"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-07-26"},{"lineNumber":57,"author":{"gitId":"cwnm"},"content":"     * Parses the {@code tags} into a {@code Set\u003cTag\u003e} and set it to the {@code client} that we are building.","lastModifiedDate":"2022-03-04"},{"lineNumber":58,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-07-26"},{"lineNumber":59,"author":{"gitId":"cwnm"},"content":"    public ClientBuilder withTags(String ... tags) {","lastModifiedDate":"2022-03-04"},{"lineNumber":60,"author":{"gitId":"-"},"content":"        this.tags \u003d SampleDataUtil.getTagSet(tags);","lastModifiedDate":"2017-12-20"},{"lineNumber":61,"author":{"gitId":"-"},"content":"        return this;","lastModifiedDate":"2016-09-03"},{"lineNumber":62,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-03"},{"lineNumber":63,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-03"},{"lineNumber":64,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-03"},{"lineNumber":65,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-07-26"},{"lineNumber":66,"author":{"gitId":"cwnm"},"content":"     * Sets the {@code Phone} of the {@code client} that we are building.","lastModifiedDate":"2022-03-04"},{"lineNumber":67,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-07-26"},{"lineNumber":68,"author":{"gitId":"cwnm"},"content":"    public ClientBuilder withPhone(String phone) {","lastModifiedDate":"2022-03-04"},{"lineNumber":69,"author":{"gitId":"-"},"content":"        this.phone \u003d new Phone(phone);","lastModifiedDate":"2017-12-20"},{"lineNumber":70,"author":{"gitId":"-"},"content":"        return this;","lastModifiedDate":"2016-09-03"},{"lineNumber":71,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-03"},{"lineNumber":72,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-03"},{"lineNumber":73,"author":{"gitId":"Jacky142857"},"content":"    /**","lastModifiedDate":"2022-03-11"},{"lineNumber":74,"author":{"gitId":"Jacky142857"},"content":"     * Sets the {@code Appointment} of the {@code client} that we are building.","lastModifiedDate":"2022-03-11"},{"lineNumber":75,"author":{"gitId":"Jacky142857"},"content":"     */","lastModifiedDate":"2022-03-11"},{"lineNumber":76,"author":{"gitId":"Jacky142857"},"content":"    public ClientBuilder withAppointment(String appointment) {","lastModifiedDate":"2022-03-11"},{"lineNumber":77,"author":{"gitId":"Jacky142857"},"content":"        this.appointment \u003d new Appointment(appointment);","lastModifiedDate":"2022-03-11"},{"lineNumber":78,"author":{"gitId":"Jacky142857"},"content":"        return this;","lastModifiedDate":"2022-03-11"},{"lineNumber":79,"author":{"gitId":"Jacky142857"},"content":"    }","lastModifiedDate":"2022-03-11"},{"lineNumber":80,"author":{"gitId":"Jacky142857"},"content":"","lastModifiedDate":"2022-03-11"},{"lineNumber":81,"author":{"gitId":"cwnm"},"content":"    public Client build() {","lastModifiedDate":"2022-03-04"},{"lineNumber":82,"author":{"gitId":"Jacky142857"},"content":"        return new Client(name, phone, appointment, tags);","lastModifiedDate":"2022-03-19"},{"lineNumber":83,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-03"},{"lineNumber":84,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-03"},{"lineNumber":85,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-09-03"}],"authorContributionMap":{"Jacky142857":14,"-":51,"cwnm":19,"chuashihong":1}},{"path":"src/test/java/seedu/address/testutil/ClientUtil.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"chuashihong"},"content":"//package seedu.address.testutil;","lastModifiedDate":"2022-04-07"},{"lineNumber":2,"author":{"gitId":"chuashihong"},"content":"//","lastModifiedDate":"2022-04-07"},{"lineNumber":3,"author":{"gitId":"chuashihong"},"content":"//import static seedu.address.logic.parser.CliSyntax.PREFIX_HOUSE_TYPE;","lastModifiedDate":"2022-04-07"},{"lineNumber":4,"author":{"gitId":"chuashihong"},"content":"//import static seedu.address.logic.parser.CliSyntax.PREFIX_LOCATION;","lastModifiedDate":"2022-04-07"},{"lineNumber":5,"author":{"gitId":"chuashihong"},"content":"//import static seedu.address.logic.parser.CliSyntax.PREFIX_NAME;","lastModifiedDate":"2022-04-07"},{"lineNumber":6,"author":{"gitId":"chuashihong"},"content":"//import static seedu.address.logic.parser.CliSyntax.PREFIX_PHONE;","lastModifiedDate":"2022-04-07"},{"lineNumber":7,"author":{"gitId":"chuashihong"},"content":"//import static seedu.address.logic.parser.CliSyntax.PREFIX_PRICE_RANGE;","lastModifiedDate":"2022-04-07"},{"lineNumber":8,"author":{"gitId":"chuashihong"},"content":"//import static seedu.address.logic.parser.CliSyntax.PREFIX_TAG;","lastModifiedDate":"2022-04-07"},{"lineNumber":9,"author":{"gitId":"chuashihong"},"content":"//","lastModifiedDate":"2022-04-07"},{"lineNumber":10,"author":{"gitId":"chuashihong"},"content":"//import java.util.Set;","lastModifiedDate":"2022-04-07"},{"lineNumber":11,"author":{"gitId":"chuashihong"},"content":"//","lastModifiedDate":"2022-04-07"},{"lineNumber":12,"author":{"gitId":"chuashihong"},"content":"//import seedu.address.logic.commands.AddBuyerCommand;","lastModifiedDate":"2022-04-07"},{"lineNumber":13,"author":{"gitId":"chuashihong"},"content":"//import seedu.address.logic.commands.EditCommand.EditclientDescriptor;","lastModifiedDate":"2022-04-07"},{"lineNumber":14,"author":{"gitId":"chuashihong"},"content":"//import seedu.address.model.buyer.Buyer;","lastModifiedDate":"2022-04-07"},{"lineNumber":15,"author":{"gitId":"chuashihong"},"content":"//import seedu.address.model.client.Client;","lastModifiedDate":"2022-04-07"},{"lineNumber":16,"author":{"gitId":"chuashihong"},"content":"//import seedu.address.model.tag.Tag;","lastModifiedDate":"2022-04-07"},{"lineNumber":17,"author":{"gitId":"chuashihong"},"content":"//","lastModifiedDate":"2022-04-07"},{"lineNumber":18,"author":{"gitId":"chuashihong"},"content":"///**","lastModifiedDate":"2022-04-07"},{"lineNumber":19,"author":{"gitId":"chuashihong"},"content":"// * A utility class for client.","lastModifiedDate":"2022-04-07"},{"lineNumber":20,"author":{"gitId":"chuashihong"},"content":"// */","lastModifiedDate":"2022-04-07"},{"lineNumber":21,"author":{"gitId":"chuashihong"},"content":"//public class ClientUtil {","lastModifiedDate":"2022-04-07"},{"lineNumber":22,"author":{"gitId":"chuashihong"},"content":"//","lastModifiedDate":"2022-04-07"},{"lineNumber":23,"author":{"gitId":"chuashihong"},"content":"//    /**","lastModifiedDate":"2022-04-07"},{"lineNumber":24,"author":{"gitId":"chuashihong"},"content":"//     * Returns an add command string for adding the {@code buyer}.","lastModifiedDate":"2022-04-07"},{"lineNumber":25,"author":{"gitId":"chuashihong"},"content":"//     */","lastModifiedDate":"2022-04-07"},{"lineNumber":26,"author":{"gitId":"chuashihong"},"content":"//    public static String getAddBuyerCommand(Buyer buyer) {","lastModifiedDate":"2022-04-07"},{"lineNumber":27,"author":{"gitId":"chuashihong"},"content":"//        return AddBuyerCommand.COMMAND_WORD + \" \" + getclientDetails(buyer);","lastModifiedDate":"2022-04-07"},{"lineNumber":28,"author":{"gitId":"chuashihong"},"content":"//    }","lastModifiedDate":"2022-04-07"},{"lineNumber":29,"author":{"gitId":"chuashihong"},"content":"//","lastModifiedDate":"2022-04-07"},{"lineNumber":30,"author":{"gitId":"chuashihong"},"content":"//    /**","lastModifiedDate":"2022-04-07"},{"lineNumber":31,"author":{"gitId":"chuashihong"},"content":"//     * Returns the part of the command string for the given {@code buyer}\u0027s PropertyToBuy details.","lastModifiedDate":"2022-04-07"},{"lineNumber":32,"author":{"gitId":"chuashihong"},"content":"//     */","lastModifiedDate":"2022-04-07"},{"lineNumber":33,"author":{"gitId":"chuashihong"},"content":"//    public static String getPropertyToBuyCommand(Buyer buyer) {","lastModifiedDate":"2022-04-07"},{"lineNumber":34,"author":{"gitId":"chuashihong"},"content":"//        StringBuilder sb \u003d new StringBuilder();","lastModifiedDate":"2022-04-07"},{"lineNumber":35,"author":{"gitId":"chuashihong"},"content":"//        sb.append(PREFIX_LOCATION + buyer.getPropertyToBuy().getHouse().getLocation().toString() + \" \");","lastModifiedDate":"2022-04-07"},{"lineNumber":36,"author":{"gitId":"chuashihong"},"content":"//        sb.append(PREFIX_HOUSE_TYPE + buyer.getPropertyToBuy().getHouse().getHouseTypeToString() + \" \");","lastModifiedDate":"2022-04-07"},{"lineNumber":37,"author":{"gitId":"chuashihong"},"content":"//        sb.append(PREFIX_PRICE_RANGE","lastModifiedDate":"2022-04-07"},{"lineNumber":38,"author":{"gitId":"chuashihong"},"content":"//                + buyer.getPropertyToBuy().getPriceRange().toString().split(\"]\")[0].substring(1) + \" \");","lastModifiedDate":"2022-04-07"},{"lineNumber":39,"author":{"gitId":"chuashihong"},"content":"//        return sb.toString();","lastModifiedDate":"2022-04-07"},{"lineNumber":40,"author":{"gitId":"chuashihong"},"content":"//    }","lastModifiedDate":"2022-04-07"},{"lineNumber":41,"author":{"gitId":"chuashihong"},"content":"//","lastModifiedDate":"2022-04-07"},{"lineNumber":42,"author":{"gitId":"chuashihong"},"content":"//    /**","lastModifiedDate":"2022-04-07"},{"lineNumber":43,"author":{"gitId":"chuashihong"},"content":"//     * Returns the part of command string for the given {@code client}\u0027s details.","lastModifiedDate":"2022-04-07"},{"lineNumber":44,"author":{"gitId":"chuashihong"},"content":"//     */","lastModifiedDate":"2022-04-07"},{"lineNumber":45,"author":{"gitId":"chuashihong"},"content":"//    public static String getclientDetails(Client client) {","lastModifiedDate":"2022-04-07"},{"lineNumber":46,"author":{"gitId":"chuashihong"},"content":"//        StringBuilder sb \u003d new StringBuilder();","lastModifiedDate":"2022-04-07"},{"lineNumber":47,"author":{"gitId":"chuashihong"},"content":"//        sb.append(PREFIX_NAME + client.getName().fullName + \" \");","lastModifiedDate":"2022-04-07"},{"lineNumber":48,"author":{"gitId":"chuashihong"},"content":"//        sb.append(PREFIX_PHONE + client.getPhone().value + \" \");","lastModifiedDate":"2022-04-07"},{"lineNumber":49,"author":{"gitId":"chuashihong"},"content":"//        client.getTags().stream().forEach(","lastModifiedDate":"2022-04-07"},{"lineNumber":50,"author":{"gitId":"chuashihong"},"content":"//            s -\u003e sb.append(PREFIX_TAG + s.tagName + \" \")","lastModifiedDate":"2022-04-07"},{"lineNumber":51,"author":{"gitId":"chuashihong"},"content":"//        );","lastModifiedDate":"2022-04-07"},{"lineNumber":52,"author":{"gitId":"chuashihong"},"content":"//        return sb.toString();","lastModifiedDate":"2022-04-07"},{"lineNumber":53,"author":{"gitId":"chuashihong"},"content":"//    }","lastModifiedDate":"2022-04-07"},{"lineNumber":54,"author":{"gitId":"chuashihong"},"content":"//","lastModifiedDate":"2022-04-07"},{"lineNumber":55,"author":{"gitId":"chuashihong"},"content":"//    /**","lastModifiedDate":"2022-04-07"},{"lineNumber":56,"author":{"gitId":"chuashihong"},"content":"//     * Returns the part of command string for the given {@code EditclientDescriptor}\u0027s details.","lastModifiedDate":"2022-04-07"},{"lineNumber":57,"author":{"gitId":"chuashihong"},"content":"//     */","lastModifiedDate":"2022-04-07"},{"lineNumber":58,"author":{"gitId":"chuashihong"},"content":"//    public static String getEditclientDescriptorDetails(EditclientDescriptor descriptor) {","lastModifiedDate":"2022-04-07"},{"lineNumber":59,"author":{"gitId":"chuashihong"},"content":"//        StringBuilder sb \u003d new StringBuilder();","lastModifiedDate":"2022-04-07"},{"lineNumber":60,"author":{"gitId":"chuashihong"},"content":"//        descriptor.getName().ifPresent(name -\u003e sb.append(PREFIX_NAME).append(name.fullName).append(\" \"));","lastModifiedDate":"2022-04-07"},{"lineNumber":61,"author":{"gitId":"chuashihong"},"content":"//        descriptor.getPhone().ifPresent(phone -\u003e sb.append(PREFIX_PHONE).append(phone.value).append(\" \"));","lastModifiedDate":"2022-04-07"},{"lineNumber":62,"author":{"gitId":"chuashihong"},"content":"//        if (descriptor.getTags().isPresent()) {","lastModifiedDate":"2022-04-07"},{"lineNumber":63,"author":{"gitId":"chuashihong"},"content":"//            Set\u003cTag\u003e tags \u003d descriptor.getTags().get();","lastModifiedDate":"2022-04-07"},{"lineNumber":64,"author":{"gitId":"chuashihong"},"content":"//            if (tags.isEmpty()) {","lastModifiedDate":"2022-04-07"},{"lineNumber":65,"author":{"gitId":"chuashihong"},"content":"//                sb.append(PREFIX_TAG);","lastModifiedDate":"2022-04-07"},{"lineNumber":66,"author":{"gitId":"chuashihong"},"content":"//            } else {","lastModifiedDate":"2022-04-07"},{"lineNumber":67,"author":{"gitId":"chuashihong"},"content":"//                tags.forEach(s -\u003e sb.append(PREFIX_TAG).append(s.tagName).append(\" \"));","lastModifiedDate":"2022-04-07"},{"lineNumber":68,"author":{"gitId":"chuashihong"},"content":"//            }","lastModifiedDate":"2022-04-07"},{"lineNumber":69,"author":{"gitId":"chuashihong"},"content":"//        }","lastModifiedDate":"2022-04-07"},{"lineNumber":70,"author":{"gitId":"chuashihong"},"content":"//        return sb.toString();","lastModifiedDate":"2022-04-07"},{"lineNumber":71,"author":{"gitId":"chuashihong"},"content":"//    }","lastModifiedDate":"2022-04-07"},{"lineNumber":72,"author":{"gitId":"chuashihong"},"content":"//}","lastModifiedDate":"2022-04-07"}],"authorContributionMap":{"chuashihong":72}},{"path":"src/test/java/seedu/address/testutil/EditBuyerDescriptorBuilder.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"chuashihong"},"content":"package seedu.address.testutil;","lastModifiedDate":"2022-04-07"},{"lineNumber":2,"author":{"gitId":"chuashihong"},"content":"","lastModifiedDate":"2022-04-07"},{"lineNumber":3,"author":{"gitId":"chuashihong"},"content":"import java.util.Set;","lastModifiedDate":"2022-04-07"},{"lineNumber":4,"author":{"gitId":"chuashihong"},"content":"import java.util.stream.Collectors;","lastModifiedDate":"2022-04-07"},{"lineNumber":5,"author":{"gitId":"chuashihong"},"content":"import java.util.stream.Stream;","lastModifiedDate":"2022-04-07"},{"lineNumber":6,"author":{"gitId":"chuashihong"},"content":"","lastModifiedDate":"2022-04-07"},{"lineNumber":7,"author":{"gitId":"chuashihong"},"content":"import seedu.address.logic.commands.EditBuyerCommand.EditBuyerDescriptor;","lastModifiedDate":"2022-04-07"},{"lineNumber":8,"author":{"gitId":"chuashihong"},"content":"import seedu.address.model.buyer.Buyer;","lastModifiedDate":"2022-04-07"},{"lineNumber":9,"author":{"gitId":"chuashihong"},"content":"import seedu.address.model.client.Appointment;","lastModifiedDate":"2022-04-07"},{"lineNumber":10,"author":{"gitId":"chuashihong"},"content":"import seedu.address.model.client.Name;","lastModifiedDate":"2022-04-07"},{"lineNumber":11,"author":{"gitId":"chuashihong"},"content":"import seedu.address.model.client.Phone;","lastModifiedDate":"2022-04-07"},{"lineNumber":12,"author":{"gitId":"chuashihong"},"content":"import seedu.address.model.tag.Tag;","lastModifiedDate":"2022-04-07"},{"lineNumber":13,"author":{"gitId":"chuashihong"},"content":"","lastModifiedDate":"2022-04-07"},{"lineNumber":14,"author":{"gitId":"chuashihong"},"content":"/**","lastModifiedDate":"2022-04-07"},{"lineNumber":15,"author":{"gitId":"chuashihong"},"content":" * A utility class to help with building EditclientDescriptor objects.","lastModifiedDate":"2022-04-07"},{"lineNumber":16,"author":{"gitId":"chuashihong"},"content":" */","lastModifiedDate":"2022-04-07"},{"lineNumber":17,"author":{"gitId":"chuashihong"},"content":"public class EditBuyerDescriptorBuilder {","lastModifiedDate":"2022-04-07"},{"lineNumber":18,"author":{"gitId":"chuashihong"},"content":"","lastModifiedDate":"2022-04-07"},{"lineNumber":19,"author":{"gitId":"chuashihong"},"content":"    private EditBuyerDescriptor descriptor;","lastModifiedDate":"2022-04-07"},{"lineNumber":20,"author":{"gitId":"chuashihong"},"content":"","lastModifiedDate":"2022-04-07"},{"lineNumber":21,"author":{"gitId":"chuashihong"},"content":"    public EditBuyerDescriptorBuilder() {","lastModifiedDate":"2022-04-07"},{"lineNumber":22,"author":{"gitId":"chuashihong"},"content":"        descriptor \u003d new EditBuyerDescriptor();","lastModifiedDate":"2022-04-07"},{"lineNumber":23,"author":{"gitId":"chuashihong"},"content":"    }","lastModifiedDate":"2022-04-07"},{"lineNumber":24,"author":{"gitId":"chuashihong"},"content":"","lastModifiedDate":"2022-04-07"},{"lineNumber":25,"author":{"gitId":"chuashihong"},"content":"    public EditBuyerDescriptorBuilder(EditBuyerDescriptor descriptor) {","lastModifiedDate":"2022-04-07"},{"lineNumber":26,"author":{"gitId":"chuashihong"},"content":"        this.descriptor \u003d new EditBuyerDescriptor(descriptor);","lastModifiedDate":"2022-04-07"},{"lineNumber":27,"author":{"gitId":"chuashihong"},"content":"    }","lastModifiedDate":"2022-04-07"},{"lineNumber":28,"author":{"gitId":"chuashihong"},"content":"","lastModifiedDate":"2022-04-07"},{"lineNumber":29,"author":{"gitId":"chuashihong"},"content":"    /**","lastModifiedDate":"2022-04-07"},{"lineNumber":30,"author":{"gitId":"chuashihong"},"content":"     * Returns an {@code EditclientDescriptor} with fields containing {@code buyer}\u0027s details","lastModifiedDate":"2022-04-07"},{"lineNumber":31,"author":{"gitId":"chuashihong"},"content":"     */","lastModifiedDate":"2022-04-07"},{"lineNumber":32,"author":{"gitId":"chuashihong"},"content":"    public EditBuyerDescriptorBuilder(Buyer buyer) {","lastModifiedDate":"2022-04-07"},{"lineNumber":33,"author":{"gitId":"chuashihong"},"content":"        descriptor \u003d new EditBuyerDescriptor();","lastModifiedDate":"2022-04-07"},{"lineNumber":34,"author":{"gitId":"chuashihong"},"content":"        descriptor.setName(buyer.getName());","lastModifiedDate":"2022-04-07"},{"lineNumber":35,"author":{"gitId":"chuashihong"},"content":"        descriptor.setPhone(buyer.getPhone());","lastModifiedDate":"2022-04-07"},{"lineNumber":36,"author":{"gitId":"chuashihong"},"content":"        descriptor.setTags(buyer.getTags());","lastModifiedDate":"2022-04-07"},{"lineNumber":37,"author":{"gitId":"chuashihong"},"content":"        descriptor.setAppointment(buyer.getAppointment());","lastModifiedDate":"2022-04-07"},{"lineNumber":38,"author":{"gitId":"chuashihong"},"content":"        descriptor.setPropertyToBuy(buyer.getPropertyToBuy());","lastModifiedDate":"2022-04-08"},{"lineNumber":39,"author":{"gitId":"chuashihong"},"content":"        descriptor.setHouseType(buyer.getPropertyToBuy().getHouse().getHouseType());","lastModifiedDate":"2022-04-08"},{"lineNumber":40,"author":{"gitId":"chuashihong"},"content":"        descriptor.setLocation(buyer.getPropertyToBuy().getHouse().getLocation());","lastModifiedDate":"2022-04-08"},{"lineNumber":41,"author":{"gitId":"chuashihong"},"content":"        descriptor.setPriceRange(buyer.getPropertyToBuy().getPriceRange());","lastModifiedDate":"2022-04-08"},{"lineNumber":42,"author":{"gitId":"chuashihong"},"content":"    }","lastModifiedDate":"2022-04-07"},{"lineNumber":43,"author":{"gitId":"chuashihong"},"content":"","lastModifiedDate":"2022-04-07"},{"lineNumber":44,"author":{"gitId":"chuashihong"},"content":"    /**","lastModifiedDate":"2022-04-07"},{"lineNumber":45,"author":{"gitId":"chuashihong"},"content":"     * Sets the {@code Name} of the {@code EditclientDescriptor} that we are building.","lastModifiedDate":"2022-04-07"},{"lineNumber":46,"author":{"gitId":"chuashihong"},"content":"     */","lastModifiedDate":"2022-04-07"},{"lineNumber":47,"author":{"gitId":"chuashihong"},"content":"    public EditBuyerDescriptorBuilder withName(String name) {","lastModifiedDate":"2022-04-07"},{"lineNumber":48,"author":{"gitId":"chuashihong"},"content":"        descriptor.setName(new Name(name));","lastModifiedDate":"2022-04-07"},{"lineNumber":49,"author":{"gitId":"chuashihong"},"content":"        return this;","lastModifiedDate":"2022-04-07"},{"lineNumber":50,"author":{"gitId":"chuashihong"},"content":"    }","lastModifiedDate":"2022-04-07"},{"lineNumber":51,"author":{"gitId":"chuashihong"},"content":"","lastModifiedDate":"2022-04-07"},{"lineNumber":52,"author":{"gitId":"chuashihong"},"content":"","lastModifiedDate":"2022-04-07"},{"lineNumber":53,"author":{"gitId":"chuashihong"},"content":"    /**","lastModifiedDate":"2022-04-07"},{"lineNumber":54,"author":{"gitId":"chuashihong"},"content":"     * Sets the {@code Phone} of the {@code EditclientDescriptor} that we are building.","lastModifiedDate":"2022-04-07"},{"lineNumber":55,"author":{"gitId":"chuashihong"},"content":"     */","lastModifiedDate":"2022-04-07"},{"lineNumber":56,"author":{"gitId":"chuashihong"},"content":"    public EditBuyerDescriptorBuilder withPhone(String phone) {","lastModifiedDate":"2022-04-07"},{"lineNumber":57,"author":{"gitId":"chuashihong"},"content":"        descriptor.setPhone(new Phone(phone));","lastModifiedDate":"2022-04-07"},{"lineNumber":58,"author":{"gitId":"chuashihong"},"content":"        return this;","lastModifiedDate":"2022-04-07"},{"lineNumber":59,"author":{"gitId":"chuashihong"},"content":"    }","lastModifiedDate":"2022-04-07"},{"lineNumber":60,"author":{"gitId":"chuashihong"},"content":"","lastModifiedDate":"2022-04-07"},{"lineNumber":61,"author":{"gitId":"chuashihong"},"content":"    /**","lastModifiedDate":"2022-04-07"},{"lineNumber":62,"author":{"gitId":"chuashihong"},"content":"     * Sets the {@code Appointment} of the {@code EditclientDescriptor} that we are building.","lastModifiedDate":"2022-04-07"},{"lineNumber":63,"author":{"gitId":"chuashihong"},"content":"     */","lastModifiedDate":"2022-04-07"},{"lineNumber":64,"author":{"gitId":"chuashihong"},"content":"    public EditBuyerDescriptorBuilder withAppointment(String appointment) {","lastModifiedDate":"2022-04-07"},{"lineNumber":65,"author":{"gitId":"chuashihong"},"content":"        descriptor.setAppointment(new Appointment(appointment));","lastModifiedDate":"2022-04-07"},{"lineNumber":66,"author":{"gitId":"chuashihong"},"content":"        return this;","lastModifiedDate":"2022-04-07"},{"lineNumber":67,"author":{"gitId":"chuashihong"},"content":"    }","lastModifiedDate":"2022-04-07"},{"lineNumber":68,"author":{"gitId":"chuashihong"},"content":"","lastModifiedDate":"2022-04-07"},{"lineNumber":69,"author":{"gitId":"chuashihong"},"content":"    /**","lastModifiedDate":"2022-04-07"},{"lineNumber":70,"author":{"gitId":"chuashihong"},"content":"     * Parses the {@code tags} into a {@code Set\u003cTag\u003e} and set it to the {@code EditclientDescriptor}","lastModifiedDate":"2022-04-07"},{"lineNumber":71,"author":{"gitId":"chuashihong"},"content":"     * that we are building.","lastModifiedDate":"2022-04-07"},{"lineNumber":72,"author":{"gitId":"chuashihong"},"content":"     */","lastModifiedDate":"2022-04-07"},{"lineNumber":73,"author":{"gitId":"chuashihong"},"content":"    public EditBuyerDescriptorBuilder withTags(String... tags) {","lastModifiedDate":"2022-04-07"},{"lineNumber":74,"author":{"gitId":"chuashihong"},"content":"        Set\u003cTag\u003e tagSet \u003d Stream.of(tags).map(Tag::new).collect(Collectors.toSet());","lastModifiedDate":"2022-04-07"},{"lineNumber":75,"author":{"gitId":"chuashihong"},"content":"        descriptor.setTags(tagSet);","lastModifiedDate":"2022-04-07"},{"lineNumber":76,"author":{"gitId":"chuashihong"},"content":"        return this;","lastModifiedDate":"2022-04-07"},{"lineNumber":77,"author":{"gitId":"chuashihong"},"content":"    }","lastModifiedDate":"2022-04-07"},{"lineNumber":78,"author":{"gitId":"chuashihong"},"content":"","lastModifiedDate":"2022-04-07"},{"lineNumber":79,"author":{"gitId":"chuashihong"},"content":"    public EditBuyerDescriptor build() {","lastModifiedDate":"2022-04-07"},{"lineNumber":80,"author":{"gitId":"chuashihong"},"content":"        return descriptor;","lastModifiedDate":"2022-04-07"},{"lineNumber":81,"author":{"gitId":"chuashihong"},"content":"    }","lastModifiedDate":"2022-04-07"},{"lineNumber":82,"author":{"gitId":"chuashihong"},"content":"}","lastModifiedDate":"2022-04-07"}],"authorContributionMap":{"chuashihong":82}},{"path":"src/test/java/seedu/address/testutil/EditClientDescriptorBuilder.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"chuashihong"},"content":"//package seedu.address.testutil;","lastModifiedDate":"2022-04-07"},{"lineNumber":2,"author":{"gitId":"chuashihong"},"content":"//","lastModifiedDate":"2022-04-07"},{"lineNumber":3,"author":{"gitId":"chuashihong"},"content":"//import java.util.Set;","lastModifiedDate":"2022-04-07"},{"lineNumber":4,"author":{"gitId":"chuashihong"},"content":"//import java.util.stream.Collectors;","lastModifiedDate":"2022-04-07"},{"lineNumber":5,"author":{"gitId":"chuashihong"},"content":"//import java.util.stream.Stream;","lastModifiedDate":"2022-04-07"},{"lineNumber":6,"author":{"gitId":"chuashihong"},"content":"//","lastModifiedDate":"2022-04-07"},{"lineNumber":7,"author":{"gitId":"chuashihong"},"content":"//import seedu.address.logic.commands.EditCommand.EditclientDescriptor;","lastModifiedDate":"2022-04-07"},{"lineNumber":8,"author":{"gitId":"chuashihong"},"content":"//import seedu.address.model.client.Appointment;","lastModifiedDate":"2022-04-07"},{"lineNumber":9,"author":{"gitId":"chuashihong"},"content":"//import seedu.address.model.client.Client;","lastModifiedDate":"2022-04-07"},{"lineNumber":10,"author":{"gitId":"chuashihong"},"content":"//import seedu.address.model.client.Name;","lastModifiedDate":"2022-04-07"},{"lineNumber":11,"author":{"gitId":"chuashihong"},"content":"//import seedu.address.model.client.Phone;","lastModifiedDate":"2022-04-07"},{"lineNumber":12,"author":{"gitId":"chuashihong"},"content":"//import seedu.address.model.tag.Tag;","lastModifiedDate":"2022-04-07"},{"lineNumber":13,"author":{"gitId":"chuashihong"},"content":"//","lastModifiedDate":"2022-04-07"},{"lineNumber":14,"author":{"gitId":"chuashihong"},"content":"///**","lastModifiedDate":"2022-04-07"},{"lineNumber":15,"author":{"gitId":"chuashihong"},"content":"// * A utility class to help with building EditclientDescriptor objects.","lastModifiedDate":"2022-04-07"},{"lineNumber":16,"author":{"gitId":"chuashihong"},"content":"// */","lastModifiedDate":"2022-04-07"},{"lineNumber":17,"author":{"gitId":"chuashihong"},"content":"//public class EditClientDescriptorBuilder {","lastModifiedDate":"2022-04-07"},{"lineNumber":18,"author":{"gitId":"chuashihong"},"content":"//","lastModifiedDate":"2022-04-07"},{"lineNumber":19,"author":{"gitId":"chuashihong"},"content":"//    private EditclientDescriptor descriptor;","lastModifiedDate":"2022-04-07"},{"lineNumber":20,"author":{"gitId":"chuashihong"},"content":"//","lastModifiedDate":"2022-04-07"},{"lineNumber":21,"author":{"gitId":"chuashihong"},"content":"//    public EditClientDescriptorBuilder() {","lastModifiedDate":"2022-04-07"},{"lineNumber":22,"author":{"gitId":"chuashihong"},"content":"//        descriptor \u003d new EditclientDescriptor();","lastModifiedDate":"2022-04-07"},{"lineNumber":23,"author":{"gitId":"chuashihong"},"content":"//    }","lastModifiedDate":"2022-04-07"},{"lineNumber":24,"author":{"gitId":"chuashihong"},"content":"//","lastModifiedDate":"2022-04-07"},{"lineNumber":25,"author":{"gitId":"chuashihong"},"content":"//    public EditClientDescriptorBuilder(EditclientDescriptor descriptor) {","lastModifiedDate":"2022-04-07"},{"lineNumber":26,"author":{"gitId":"chuashihong"},"content":"//        this.descriptor \u003d new EditclientDescriptor(descriptor);","lastModifiedDate":"2022-04-07"},{"lineNumber":27,"author":{"gitId":"chuashihong"},"content":"//    }","lastModifiedDate":"2022-04-07"},{"lineNumber":28,"author":{"gitId":"chuashihong"},"content":"//","lastModifiedDate":"2022-04-07"},{"lineNumber":29,"author":{"gitId":"chuashihong"},"content":"//    /**","lastModifiedDate":"2022-04-07"},{"lineNumber":30,"author":{"gitId":"chuashihong"},"content":"//     * Returns an {@code EditclientDescriptor} with fields containing {@code client}\u0027s details","lastModifiedDate":"2022-04-07"},{"lineNumber":31,"author":{"gitId":"chuashihong"},"content":"//     */","lastModifiedDate":"2022-04-07"},{"lineNumber":32,"author":{"gitId":"chuashihong"},"content":"//    public EditClientDescriptorBuilder(Client client) {","lastModifiedDate":"2022-04-07"},{"lineNumber":33,"author":{"gitId":"chuashihong"},"content":"//        descriptor \u003d new EditclientDescriptor();","lastModifiedDate":"2022-04-07"},{"lineNumber":34,"author":{"gitId":"chuashihong"},"content":"//        descriptor.setName(client.getName());","lastModifiedDate":"2022-04-07"},{"lineNumber":35,"author":{"gitId":"chuashihong"},"content":"//        descriptor.setPhone(client.getPhone());","lastModifiedDate":"2022-04-07"},{"lineNumber":36,"author":{"gitId":"chuashihong"},"content":"//        descriptor.setTags(client.getTags());","lastModifiedDate":"2022-04-07"},{"lineNumber":37,"author":{"gitId":"chuashihong"},"content":"//        descriptor.setAppointment(client.getAppointment());","lastModifiedDate":"2022-04-07"},{"lineNumber":38,"author":{"gitId":"chuashihong"},"content":"//    }","lastModifiedDate":"2022-04-07"},{"lineNumber":39,"author":{"gitId":"chuashihong"},"content":"//","lastModifiedDate":"2022-04-07"},{"lineNumber":40,"author":{"gitId":"chuashihong"},"content":"//    /**","lastModifiedDate":"2022-04-07"},{"lineNumber":41,"author":{"gitId":"chuashihong"},"content":"//     * Sets the {@code Name} of the {@code EditclientDescriptor} that we are building.","lastModifiedDate":"2022-04-07"},{"lineNumber":42,"author":{"gitId":"chuashihong"},"content":"//     */","lastModifiedDate":"2022-04-07"},{"lineNumber":43,"author":{"gitId":"chuashihong"},"content":"//    public EditClientDescriptorBuilder withName(String name) {","lastModifiedDate":"2022-04-07"},{"lineNumber":44,"author":{"gitId":"chuashihong"},"content":"//        descriptor.setName(new Name(name));","lastModifiedDate":"2022-04-07"},{"lineNumber":45,"author":{"gitId":"chuashihong"},"content":"//        return this;","lastModifiedDate":"2022-04-07"},{"lineNumber":46,"author":{"gitId":"chuashihong"},"content":"//    }","lastModifiedDate":"2022-04-07"},{"lineNumber":47,"author":{"gitId":"chuashihong"},"content":"//","lastModifiedDate":"2022-04-07"},{"lineNumber":48,"author":{"gitId":"chuashihong"},"content":"//","lastModifiedDate":"2022-04-07"},{"lineNumber":49,"author":{"gitId":"chuashihong"},"content":"//    /**","lastModifiedDate":"2022-04-07"},{"lineNumber":50,"author":{"gitId":"chuashihong"},"content":"//     * Sets the {@code Phone} of the {@code EditclientDescriptor} that we are building.","lastModifiedDate":"2022-04-07"},{"lineNumber":51,"author":{"gitId":"chuashihong"},"content":"//     */","lastModifiedDate":"2022-04-07"},{"lineNumber":52,"author":{"gitId":"chuashihong"},"content":"//    public EditClientDescriptorBuilder withPhone(String phone) {","lastModifiedDate":"2022-04-07"},{"lineNumber":53,"author":{"gitId":"chuashihong"},"content":"//        descriptor.setPhone(new Phone(phone));","lastModifiedDate":"2022-04-07"},{"lineNumber":54,"author":{"gitId":"chuashihong"},"content":"//        return this;","lastModifiedDate":"2022-04-07"},{"lineNumber":55,"author":{"gitId":"chuashihong"},"content":"//    }","lastModifiedDate":"2022-04-07"},{"lineNumber":56,"author":{"gitId":"chuashihong"},"content":"//","lastModifiedDate":"2022-04-07"},{"lineNumber":57,"author":{"gitId":"chuashihong"},"content":"//    /**","lastModifiedDate":"2022-04-07"},{"lineNumber":58,"author":{"gitId":"chuashihong"},"content":"//     * Sets the {@code Appointment} of the {@code EditclientDescriptor} that we are building.","lastModifiedDate":"2022-04-07"},{"lineNumber":59,"author":{"gitId":"chuashihong"},"content":"//     */","lastModifiedDate":"2022-04-07"},{"lineNumber":60,"author":{"gitId":"chuashihong"},"content":"//    public EditClientDescriptorBuilder withAppointment(String appointment) {","lastModifiedDate":"2022-04-07"},{"lineNumber":61,"author":{"gitId":"chuashihong"},"content":"//        descriptor.setAppointment(new Appointment(appointment));","lastModifiedDate":"2022-04-07"},{"lineNumber":62,"author":{"gitId":"chuashihong"},"content":"//        return this;","lastModifiedDate":"2022-04-07"},{"lineNumber":63,"author":{"gitId":"chuashihong"},"content":"//    }","lastModifiedDate":"2022-04-07"},{"lineNumber":64,"author":{"gitId":"chuashihong"},"content":"//","lastModifiedDate":"2022-04-07"},{"lineNumber":65,"author":{"gitId":"chuashihong"},"content":"//    /**","lastModifiedDate":"2022-04-07"},{"lineNumber":66,"author":{"gitId":"chuashihong"},"content":"//     * Parses the {@code tags} into a {@code Set\u003cTag\u003e} and set it to the {@code EditclientDescriptor}","lastModifiedDate":"2022-04-07"},{"lineNumber":67,"author":{"gitId":"chuashihong"},"content":"//     * that we are building.","lastModifiedDate":"2022-04-07"},{"lineNumber":68,"author":{"gitId":"chuashihong"},"content":"//     */","lastModifiedDate":"2022-04-07"},{"lineNumber":69,"author":{"gitId":"chuashihong"},"content":"//    public EditClientDescriptorBuilder withTags(String... tags) {","lastModifiedDate":"2022-04-07"},{"lineNumber":70,"author":{"gitId":"chuashihong"},"content":"//        Set\u003cTag\u003e tagSet \u003d Stream.of(tags).map(Tag::new).collect(Collectors.toSet());","lastModifiedDate":"2022-04-07"},{"lineNumber":71,"author":{"gitId":"chuashihong"},"content":"//        descriptor.setTags(tagSet);","lastModifiedDate":"2022-04-07"},{"lineNumber":72,"author":{"gitId":"chuashihong"},"content":"//        return this;","lastModifiedDate":"2022-04-07"},{"lineNumber":73,"author":{"gitId":"chuashihong"},"content":"//    }","lastModifiedDate":"2022-04-07"},{"lineNumber":74,"author":{"gitId":"chuashihong"},"content":"//","lastModifiedDate":"2022-04-07"},{"lineNumber":75,"author":{"gitId":"chuashihong"},"content":"//    public EditclientDescriptor build() {","lastModifiedDate":"2022-04-07"},{"lineNumber":76,"author":{"gitId":"chuashihong"},"content":"//        return descriptor;","lastModifiedDate":"2022-04-07"},{"lineNumber":77,"author":{"gitId":"chuashihong"},"content":"//    }","lastModifiedDate":"2022-04-07"},{"lineNumber":78,"author":{"gitId":"chuashihong"},"content":"//}","lastModifiedDate":"2022-04-07"}],"authorContributionMap":{"chuashihong":78}},{"path":"src/test/java/seedu/address/testutil/EditSellerDescriptorBuilder.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"chuashihong"},"content":"package seedu.address.testutil;","lastModifiedDate":"2022-04-07"},{"lineNumber":2,"author":{"gitId":"chuashihong"},"content":"","lastModifiedDate":"2022-04-07"},{"lineNumber":3,"author":{"gitId":"chuashihong"},"content":"import java.util.Set;","lastModifiedDate":"2022-04-07"},{"lineNumber":4,"author":{"gitId":"chuashihong"},"content":"import java.util.stream.Collectors;","lastModifiedDate":"2022-04-07"},{"lineNumber":5,"author":{"gitId":"chuashihong"},"content":"import java.util.stream.Stream;","lastModifiedDate":"2022-04-07"},{"lineNumber":6,"author":{"gitId":"chuashihong"},"content":"","lastModifiedDate":"2022-04-07"},{"lineNumber":7,"author":{"gitId":"chuashihong"},"content":"import seedu.address.logic.commands.EditSellerCommand.EditSellerDescriptor;","lastModifiedDate":"2022-04-07"},{"lineNumber":8,"author":{"gitId":"chuashihong"},"content":"import seedu.address.model.client.Appointment;","lastModifiedDate":"2022-04-07"},{"lineNumber":9,"author":{"gitId":"chuashihong"},"content":"import seedu.address.model.client.Name;","lastModifiedDate":"2022-04-07"},{"lineNumber":10,"author":{"gitId":"chuashihong"},"content":"import seedu.address.model.client.Phone;","lastModifiedDate":"2022-04-07"},{"lineNumber":11,"author":{"gitId":"chuashihong"},"content":"import seedu.address.model.seller.Seller;","lastModifiedDate":"2022-04-07"},{"lineNumber":12,"author":{"gitId":"chuashihong"},"content":"import seedu.address.model.tag.Tag;","lastModifiedDate":"2022-04-07"},{"lineNumber":13,"author":{"gitId":"chuashihong"},"content":"/**","lastModifiedDate":"2022-04-07"},{"lineNumber":14,"author":{"gitId":"chuashihong"},"content":" * A utility class to help with building EditclientDescriptor objects.","lastModifiedDate":"2022-04-07"},{"lineNumber":15,"author":{"gitId":"chuashihong"},"content":" */","lastModifiedDate":"2022-04-07"},{"lineNumber":16,"author":{"gitId":"chuashihong"},"content":"public class EditSellerDescriptorBuilder {","lastModifiedDate":"2022-04-07"},{"lineNumber":17,"author":{"gitId":"chuashihong"},"content":"","lastModifiedDate":"2022-04-07"},{"lineNumber":18,"author":{"gitId":"chuashihong"},"content":"    private EditSellerDescriptor descriptor;","lastModifiedDate":"2022-04-07"},{"lineNumber":19,"author":{"gitId":"chuashihong"},"content":"","lastModifiedDate":"2022-04-07"},{"lineNumber":20,"author":{"gitId":"chuashihong"},"content":"    public EditSellerDescriptorBuilder() {","lastModifiedDate":"2022-04-07"},{"lineNumber":21,"author":{"gitId":"chuashihong"},"content":"        descriptor \u003d new EditSellerDescriptor();","lastModifiedDate":"2022-04-07"},{"lineNumber":22,"author":{"gitId":"chuashihong"},"content":"    }","lastModifiedDate":"2022-04-07"},{"lineNumber":23,"author":{"gitId":"chuashihong"},"content":"","lastModifiedDate":"2022-04-07"},{"lineNumber":24,"author":{"gitId":"chuashihong"},"content":"    public EditSellerDescriptorBuilder(EditSellerDescriptor descriptor) {","lastModifiedDate":"2022-04-07"},{"lineNumber":25,"author":{"gitId":"chuashihong"},"content":"        this.descriptor \u003d new EditSellerDescriptor(descriptor);","lastModifiedDate":"2022-04-07"},{"lineNumber":26,"author":{"gitId":"chuashihong"},"content":"    }","lastModifiedDate":"2022-04-07"},{"lineNumber":27,"author":{"gitId":"chuashihong"},"content":"","lastModifiedDate":"2022-04-07"},{"lineNumber":28,"author":{"gitId":"chuashihong"},"content":"    /**","lastModifiedDate":"2022-04-07"},{"lineNumber":29,"author":{"gitId":"chuashihong"},"content":"     * Returns an {@code EditclientDescriptor} with fields containing {@code seller}\u0027s details","lastModifiedDate":"2022-04-08"},{"lineNumber":30,"author":{"gitId":"chuashihong"},"content":"     */","lastModifiedDate":"2022-04-07"},{"lineNumber":31,"author":{"gitId":"chuashihong"},"content":"    public EditSellerDescriptorBuilder(Seller seller) {","lastModifiedDate":"2022-04-08"},{"lineNumber":32,"author":{"gitId":"chuashihong"},"content":"        descriptor \u003d new EditSellerDescriptor();","lastModifiedDate":"2022-04-07"},{"lineNumber":33,"author":{"gitId":"chuashihong"},"content":"        descriptor.setName(seller.getName());","lastModifiedDate":"2022-04-08"},{"lineNumber":34,"author":{"gitId":"chuashihong"},"content":"        descriptor.setPhone(seller.getPhone());","lastModifiedDate":"2022-04-08"},{"lineNumber":35,"author":{"gitId":"chuashihong"},"content":"        descriptor.setTags(seller.getTags());","lastModifiedDate":"2022-04-08"},{"lineNumber":36,"author":{"gitId":"chuashihong"},"content":"        descriptor.setAppointment(seller.getAppointment());","lastModifiedDate":"2022-04-08"},{"lineNumber":37,"author":{"gitId":"chuashihong"},"content":"        descriptor.setPropertyToSell(seller.getPropertyToSell());","lastModifiedDate":"2022-04-08"},{"lineNumber":38,"author":{"gitId":"chuashihong"},"content":"        descriptor.setHouseType(seller.getPropertyToSell().getHouse().getHouseType());","lastModifiedDate":"2022-04-08"},{"lineNumber":39,"author":{"gitId":"chuashihong"},"content":"        descriptor.setLocation(seller.getPropertyToSell().getHouse().getLocation());","lastModifiedDate":"2022-04-08"},{"lineNumber":40,"author":{"gitId":"chuashihong"},"content":"        descriptor.setPriceRange(seller.getPropertyToSell().getPriceRange());","lastModifiedDate":"2022-04-08"},{"lineNumber":41,"author":{"gitId":"chuashihong"},"content":"        descriptor.setAddress(seller.getAddress());","lastModifiedDate":"2022-04-08"},{"lineNumber":42,"author":{"gitId":"chuashihong"},"content":"    }","lastModifiedDate":"2022-04-07"},{"lineNumber":43,"author":{"gitId":"chuashihong"},"content":"","lastModifiedDate":"2022-04-07"},{"lineNumber":44,"author":{"gitId":"chuashihong"},"content":"    /**","lastModifiedDate":"2022-04-07"},{"lineNumber":45,"author":{"gitId":"chuashihong"},"content":"     * Sets the {@code Name} of the {@code EditclientDescriptor} that we are building.","lastModifiedDate":"2022-04-07"},{"lineNumber":46,"author":{"gitId":"chuashihong"},"content":"     */","lastModifiedDate":"2022-04-07"},{"lineNumber":47,"author":{"gitId":"chuashihong"},"content":"    public EditSellerDescriptorBuilder withName(String name) {","lastModifiedDate":"2022-04-07"},{"lineNumber":48,"author":{"gitId":"chuashihong"},"content":"        descriptor.setName(new Name(name));","lastModifiedDate":"2022-04-07"},{"lineNumber":49,"author":{"gitId":"chuashihong"},"content":"        return this;","lastModifiedDate":"2022-04-07"},{"lineNumber":50,"author":{"gitId":"chuashihong"},"content":"    }","lastModifiedDate":"2022-04-07"},{"lineNumber":51,"author":{"gitId":"chuashihong"},"content":"","lastModifiedDate":"2022-04-07"},{"lineNumber":52,"author":{"gitId":"chuashihong"},"content":"","lastModifiedDate":"2022-04-07"},{"lineNumber":53,"author":{"gitId":"chuashihong"},"content":"    /**","lastModifiedDate":"2022-04-07"},{"lineNumber":54,"author":{"gitId":"chuashihong"},"content":"     * Sets the {@code Phone} of the {@code EditclientDescriptor} that we are building.","lastModifiedDate":"2022-04-07"},{"lineNumber":55,"author":{"gitId":"chuashihong"},"content":"     */","lastModifiedDate":"2022-04-07"},{"lineNumber":56,"author":{"gitId":"chuashihong"},"content":"    public EditSellerDescriptorBuilder withPhone(String phone) {","lastModifiedDate":"2022-04-07"},{"lineNumber":57,"author":{"gitId":"chuashihong"},"content":"        descriptor.setPhone(new Phone(phone));","lastModifiedDate":"2022-04-07"},{"lineNumber":58,"author":{"gitId":"chuashihong"},"content":"        return this;","lastModifiedDate":"2022-04-07"},{"lineNumber":59,"author":{"gitId":"chuashihong"},"content":"    }","lastModifiedDate":"2022-04-07"},{"lineNumber":60,"author":{"gitId":"chuashihong"},"content":"","lastModifiedDate":"2022-04-07"},{"lineNumber":61,"author":{"gitId":"chuashihong"},"content":"    /**","lastModifiedDate":"2022-04-07"},{"lineNumber":62,"author":{"gitId":"chuashihong"},"content":"     * Sets the {@code Appointment} of the {@code EditclientDescriptor} that we are building.","lastModifiedDate":"2022-04-07"},{"lineNumber":63,"author":{"gitId":"chuashihong"},"content":"     */","lastModifiedDate":"2022-04-07"},{"lineNumber":64,"author":{"gitId":"chuashihong"},"content":"    public EditSellerDescriptorBuilder withAppointment(String appointment) {","lastModifiedDate":"2022-04-07"},{"lineNumber":65,"author":{"gitId":"chuashihong"},"content":"        descriptor.setAppointment(new Appointment(appointment));","lastModifiedDate":"2022-04-07"},{"lineNumber":66,"author":{"gitId":"chuashihong"},"content":"        return this;","lastModifiedDate":"2022-04-07"},{"lineNumber":67,"author":{"gitId":"chuashihong"},"content":"    }","lastModifiedDate":"2022-04-07"},{"lineNumber":68,"author":{"gitId":"chuashihong"},"content":"","lastModifiedDate":"2022-04-07"},{"lineNumber":69,"author":{"gitId":"chuashihong"},"content":"    /**","lastModifiedDate":"2022-04-07"},{"lineNumber":70,"author":{"gitId":"chuashihong"},"content":"     * Parses the {@code tags} into a {@code Set\u003cTag\u003e} and set it to the {@code EditclientDescriptor}","lastModifiedDate":"2022-04-07"},{"lineNumber":71,"author":{"gitId":"chuashihong"},"content":"     * that we are building.","lastModifiedDate":"2022-04-07"},{"lineNumber":72,"author":{"gitId":"chuashihong"},"content":"     */","lastModifiedDate":"2022-04-07"},{"lineNumber":73,"author":{"gitId":"chuashihong"},"content":"    public EditSellerDescriptorBuilder withTags(String... tags) {","lastModifiedDate":"2022-04-07"},{"lineNumber":74,"author":{"gitId":"chuashihong"},"content":"        Set\u003cTag\u003e tagSet \u003d Stream.of(tags).map(Tag::new).collect(Collectors.toSet());","lastModifiedDate":"2022-04-07"},{"lineNumber":75,"author":{"gitId":"chuashihong"},"content":"        descriptor.setTags(tagSet);","lastModifiedDate":"2022-04-07"},{"lineNumber":76,"author":{"gitId":"chuashihong"},"content":"        return this;","lastModifiedDate":"2022-04-07"},{"lineNumber":77,"author":{"gitId":"chuashihong"},"content":"    }","lastModifiedDate":"2022-04-07"},{"lineNumber":78,"author":{"gitId":"chuashihong"},"content":"","lastModifiedDate":"2022-04-07"},{"lineNumber":79,"author":{"gitId":"chuashihong"},"content":"    public EditSellerDescriptor build() {","lastModifiedDate":"2022-04-07"},{"lineNumber":80,"author":{"gitId":"chuashihong"},"content":"        return descriptor;","lastModifiedDate":"2022-04-07"},{"lineNumber":81,"author":{"gitId":"chuashihong"},"content":"    }","lastModifiedDate":"2022-04-07"},{"lineNumber":82,"author":{"gitId":"chuashihong"},"content":"}","lastModifiedDate":"2022-04-07"}],"authorContributionMap":{"chuashihong":82}},{"path":"src/test/java/seedu/address/testutil/HouseBuilder.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"janald99"},"content":"package seedu.address.testutil;","lastModifiedDate":"2022-04-06"},{"lineNumber":2,"author":{"gitId":"janald99"},"content":"","lastModifiedDate":"2022-04-06"},{"lineNumber":3,"author":{"gitId":"janald99"},"content":"import seedu.address.model.property.House;","lastModifiedDate":"2022-04-06"},{"lineNumber":4,"author":{"gitId":"janald99"},"content":"import seedu.address.model.property.HouseType;","lastModifiedDate":"2022-04-06"},{"lineNumber":5,"author":{"gitId":"janald99"},"content":"import seedu.address.model.property.Location;","lastModifiedDate":"2022-04-06"},{"lineNumber":6,"author":{"gitId":"janald99"},"content":"","lastModifiedDate":"2022-04-06"},{"lineNumber":7,"author":{"gitId":"janald99"},"content":"/**","lastModifiedDate":"2022-04-06"},{"lineNumber":8,"author":{"gitId":"janald99"},"content":" * A utility class to help with building House objects.","lastModifiedDate":"2022-04-06"},{"lineNumber":9,"author":{"gitId":"janald99"},"content":" */","lastModifiedDate":"2022-04-06"},{"lineNumber":10,"author":{"gitId":"janald99"},"content":"public class HouseBuilder {","lastModifiedDate":"2022-04-06"},{"lineNumber":11,"author":{"gitId":"janald99"},"content":"","lastModifiedDate":"2022-04-06"},{"lineNumber":12,"author":{"gitId":"janald99"},"content":"    public static final HouseType DEFAULT_HOUSE_TYPE \u003d HouseType.BUNGALOW;","lastModifiedDate":"2022-04-06"},{"lineNumber":13,"author":{"gitId":"janald99"},"content":"    public static final String DEFAULT_LOCATION \u003d \"Clementi\";","lastModifiedDate":"2022-04-06"},{"lineNumber":14,"author":{"gitId":"janald99"},"content":"","lastModifiedDate":"2022-04-06"},{"lineNumber":15,"author":{"gitId":"janald99"},"content":"    private HouseType houseType;","lastModifiedDate":"2022-04-06"},{"lineNumber":16,"author":{"gitId":"janald99"},"content":"    private Location location;","lastModifiedDate":"2022-04-06"},{"lineNumber":17,"author":{"gitId":"janald99"},"content":"","lastModifiedDate":"2022-04-06"},{"lineNumber":18,"author":{"gitId":"janald99"},"content":"    /**","lastModifiedDate":"2022-04-06"},{"lineNumber":19,"author":{"gitId":"janald99"},"content":"     * Creates a {@code houseBuilder} with the default details.","lastModifiedDate":"2022-04-06"},{"lineNumber":20,"author":{"gitId":"janald99"},"content":"     */","lastModifiedDate":"2022-04-06"},{"lineNumber":21,"author":{"gitId":"janald99"},"content":"    public HouseBuilder() {","lastModifiedDate":"2022-04-06"},{"lineNumber":22,"author":{"gitId":"janald99"},"content":"        this.houseType \u003d DEFAULT_HOUSE_TYPE;","lastModifiedDate":"2022-04-06"},{"lineNumber":23,"author":{"gitId":"janald99"},"content":"        this.location \u003d new Location(DEFAULT_LOCATION);","lastModifiedDate":"2022-04-06"},{"lineNumber":24,"author":{"gitId":"janald99"},"content":"    }","lastModifiedDate":"2022-04-06"},{"lineNumber":25,"author":{"gitId":"janald99"},"content":"","lastModifiedDate":"2022-04-06"},{"lineNumber":26,"author":{"gitId":"janald99"},"content":"    /**","lastModifiedDate":"2022-04-06"},{"lineNumber":27,"author":{"gitId":"janald99"},"content":"     * Initializes the houseBuilder with the data of {@code houseToCopy}.","lastModifiedDate":"2022-04-06"},{"lineNumber":28,"author":{"gitId":"janald99"},"content":"     */","lastModifiedDate":"2022-04-06"},{"lineNumber":29,"author":{"gitId":"janald99"},"content":"    public HouseBuilder(House houseToCopy) {","lastModifiedDate":"2022-04-06"},{"lineNumber":30,"author":{"gitId":"janald99"},"content":"        houseType \u003d houseToCopy.getHouseType();","lastModifiedDate":"2022-04-06"},{"lineNumber":31,"author":{"gitId":"janald99"},"content":"        location \u003d houseToCopy.getLocation();","lastModifiedDate":"2022-04-06"},{"lineNumber":32,"author":{"gitId":"janald99"},"content":"    }","lastModifiedDate":"2022-04-06"},{"lineNumber":33,"author":{"gitId":"janald99"},"content":"","lastModifiedDate":"2022-04-06"},{"lineNumber":34,"author":{"gitId":"janald99"},"content":"    /**","lastModifiedDate":"2022-04-06"},{"lineNumber":35,"author":{"gitId":"janald99"},"content":"     * Sets the {@code HouseType} of the {@code House}.","lastModifiedDate":"2022-04-06"},{"lineNumber":36,"author":{"gitId":"janald99"},"content":"     */","lastModifiedDate":"2022-04-06"},{"lineNumber":37,"author":{"gitId":"janald99"},"content":"    public HouseBuilder withHouseType(HouseType houseType) {","lastModifiedDate":"2022-04-06"},{"lineNumber":38,"author":{"gitId":"janald99"},"content":"        this.houseType \u003d houseType;","lastModifiedDate":"2022-04-06"},{"lineNumber":39,"author":{"gitId":"janald99"},"content":"        return this;","lastModifiedDate":"2022-04-06"},{"lineNumber":40,"author":{"gitId":"janald99"},"content":"    }","lastModifiedDate":"2022-04-06"},{"lineNumber":41,"author":{"gitId":"janald99"},"content":"","lastModifiedDate":"2022-04-06"},{"lineNumber":42,"author":{"gitId":"janald99"},"content":"    /**","lastModifiedDate":"2022-04-06"},{"lineNumber":43,"author":{"gitId":"janald99"},"content":"     * Sets the {@code Location} of the {@code House}.","lastModifiedDate":"2022-04-06"},{"lineNumber":44,"author":{"gitId":"janald99"},"content":"     */","lastModifiedDate":"2022-04-06"},{"lineNumber":45,"author":{"gitId":"janald99"},"content":"    public HouseBuilder withLocation(String location) {","lastModifiedDate":"2022-04-07"},{"lineNumber":46,"author":{"gitId":"janald99"},"content":"        this.location \u003d new Location(location);","lastModifiedDate":"2022-04-07"},{"lineNumber":47,"author":{"gitId":"janald99"},"content":"        return this;","lastModifiedDate":"2022-04-06"},{"lineNumber":48,"author":{"gitId":"janald99"},"content":"    }","lastModifiedDate":"2022-04-06"},{"lineNumber":49,"author":{"gitId":"janald99"},"content":"","lastModifiedDate":"2022-04-06"},{"lineNumber":50,"author":{"gitId":"janald99"},"content":"    public House build() {","lastModifiedDate":"2022-04-06"},{"lineNumber":51,"author":{"gitId":"janald99"},"content":"        return new House(houseType, location);","lastModifiedDate":"2022-04-06"},{"lineNumber":52,"author":{"gitId":"janald99"},"content":"    }","lastModifiedDate":"2022-04-06"},{"lineNumber":53,"author":{"gitId":"janald99"},"content":"}","lastModifiedDate":"2022-04-06"}],"authorContributionMap":{"janald99":53}},{"path":"src/test/java/seedu/address/testutil/PropertyToBuyBuilder.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"janald99"},"content":"package seedu.address.testutil;","lastModifiedDate":"2022-04-06"},{"lineNumber":2,"author":{"gitId":"janald99"},"content":"","lastModifiedDate":"2022-04-06"},{"lineNumber":3,"author":{"gitId":"janald99"},"content":"","lastModifiedDate":"2022-04-06"},{"lineNumber":4,"author":{"gitId":"janald99"},"content":"import seedu.address.model.property.House;","lastModifiedDate":"2022-04-07"},{"lineNumber":5,"author":{"gitId":"janald99"},"content":"import seedu.address.model.property.PriceRange;","lastModifiedDate":"2022-04-07"},{"lineNumber":6,"author":{"gitId":"janald99"},"content":"import seedu.address.model.property.PropertyToBuy;","lastModifiedDate":"2022-04-07"},{"lineNumber":7,"author":{"gitId":"janald99"},"content":"","lastModifiedDate":"2022-04-06"},{"lineNumber":8,"author":{"gitId":"janald99"},"content":"/**","lastModifiedDate":"2022-04-06"},{"lineNumber":9,"author":{"gitId":"janald99"},"content":" * A utility class to help with building PropertyToBuy objects.","lastModifiedDate":"2022-04-06"},{"lineNumber":10,"author":{"gitId":"janald99"},"content":" */","lastModifiedDate":"2022-04-06"},{"lineNumber":11,"author":{"gitId":"janald99"},"content":"public class PropertyToBuyBuilder {","lastModifiedDate":"2022-04-06"},{"lineNumber":12,"author":{"gitId":"janald99"},"content":"","lastModifiedDate":"2022-04-06"},{"lineNumber":13,"author":{"gitId":"janald99"},"content":"    public static final House DEFAULT_HOUSE \u003d new HouseBuilder().build();","lastModifiedDate":"2022-04-06"},{"lineNumber":14,"author":{"gitId":"janald99"},"content":"    public static final PriceRange DEFAULT_PRICE_RANGE \u003d new PriceRange(0 , 0);","lastModifiedDate":"2022-04-06"},{"lineNumber":15,"author":{"gitId":"janald99"},"content":"","lastModifiedDate":"2022-04-06"},{"lineNumber":16,"author":{"gitId":"janald99"},"content":"    private House house;","lastModifiedDate":"2022-04-06"},{"lineNumber":17,"author":{"gitId":"janald99"},"content":"    private PriceRange priceRange;","lastModifiedDate":"2022-04-06"},{"lineNumber":18,"author":{"gitId":"janald99"},"content":"","lastModifiedDate":"2022-04-06"},{"lineNumber":19,"author":{"gitId":"janald99"},"content":"    /**","lastModifiedDate":"2022-04-06"},{"lineNumber":20,"author":{"gitId":"janald99"},"content":"     * Creates a {@code PropertyToBuyBuilder} with the default details.","lastModifiedDate":"2022-04-06"},{"lineNumber":21,"author":{"gitId":"janald99"},"content":"     */","lastModifiedDate":"2022-04-06"},{"lineNumber":22,"author":{"gitId":"janald99"},"content":"    public PropertyToBuyBuilder() {","lastModifiedDate":"2022-04-06"},{"lineNumber":23,"author":{"gitId":"janald99"},"content":"        this.house \u003d DEFAULT_HOUSE;","lastModifiedDate":"2022-04-06"},{"lineNumber":24,"author":{"gitId":"janald99"},"content":"        this.priceRange \u003d DEFAULT_PRICE_RANGE;","lastModifiedDate":"2022-04-06"},{"lineNumber":25,"author":{"gitId":"janald99"},"content":"    }","lastModifiedDate":"2022-04-06"},{"lineNumber":26,"author":{"gitId":"janald99"},"content":"","lastModifiedDate":"2022-04-06"},{"lineNumber":27,"author":{"gitId":"janald99"},"content":"    /**","lastModifiedDate":"2022-04-06"},{"lineNumber":28,"author":{"gitId":"janald99"},"content":"     * Initializes the houseBuilder with the data of {@code PropertyToBuyToCopy}.","lastModifiedDate":"2022-04-06"},{"lineNumber":29,"author":{"gitId":"janald99"},"content":"     */","lastModifiedDate":"2022-04-06"},{"lineNumber":30,"author":{"gitId":"janald99"},"content":"    public PropertyToBuyBuilder(PropertyToBuy propertyToBuyToCopy) {","lastModifiedDate":"2022-04-06"},{"lineNumber":31,"author":{"gitId":"janald99"},"content":"        this.house \u003d propertyToBuyToCopy.getHouse();","lastModifiedDate":"2022-04-06"},{"lineNumber":32,"author":{"gitId":"janald99"},"content":"        this.priceRange \u003d propertyToBuyToCopy.getPriceRange();","lastModifiedDate":"2022-04-06"},{"lineNumber":33,"author":{"gitId":"janald99"},"content":"    }","lastModifiedDate":"2022-04-06"},{"lineNumber":34,"author":{"gitId":"janald99"},"content":"","lastModifiedDate":"2022-04-06"},{"lineNumber":35,"author":{"gitId":"janald99"},"content":"    /**","lastModifiedDate":"2022-04-06"},{"lineNumber":36,"author":{"gitId":"janald99"},"content":"     * Sets the {@code House} of the {@code PropertyToBuy}.","lastModifiedDate":"2022-04-06"},{"lineNumber":37,"author":{"gitId":"janald99"},"content":"     */","lastModifiedDate":"2022-04-06"},{"lineNumber":38,"author":{"gitId":"janald99"},"content":"    public PropertyToBuyBuilder withHouse(House house) {","lastModifiedDate":"2022-04-06"},{"lineNumber":39,"author":{"gitId":"janald99"},"content":"        this.house \u003d house;","lastModifiedDate":"2022-04-06"},{"lineNumber":40,"author":{"gitId":"janald99"},"content":"        return this;","lastModifiedDate":"2022-04-06"},{"lineNumber":41,"author":{"gitId":"janald99"},"content":"    }","lastModifiedDate":"2022-04-06"},{"lineNumber":42,"author":{"gitId":"janald99"},"content":"","lastModifiedDate":"2022-04-06"},{"lineNumber":43,"author":{"gitId":"janald99"},"content":"    /**","lastModifiedDate":"2022-04-06"},{"lineNumber":44,"author":{"gitId":"janald99"},"content":"     * Sets the {@code PriceRange} of the {@code PropertyToBuy}.","lastModifiedDate":"2022-04-06"},{"lineNumber":45,"author":{"gitId":"janald99"},"content":"     */","lastModifiedDate":"2022-04-06"},{"lineNumber":46,"author":{"gitId":"janald99"},"content":"    public PropertyToBuyBuilder withPriceRange(PriceRange priceRange) {","lastModifiedDate":"2022-04-06"},{"lineNumber":47,"author":{"gitId":"janald99"},"content":"        this.priceRange \u003d priceRange;","lastModifiedDate":"2022-04-06"},{"lineNumber":48,"author":{"gitId":"janald99"},"content":"        return this;","lastModifiedDate":"2022-04-06"},{"lineNumber":49,"author":{"gitId":"janald99"},"content":"    }","lastModifiedDate":"2022-04-06"},{"lineNumber":50,"author":{"gitId":"janald99"},"content":"","lastModifiedDate":"2022-04-06"},{"lineNumber":51,"author":{"gitId":"janald99"},"content":"    public PropertyToBuy build() {","lastModifiedDate":"2022-04-06"},{"lineNumber":52,"author":{"gitId":"janald99"},"content":"        return new PropertyToBuy(house, priceRange);","lastModifiedDate":"2022-04-06"},{"lineNumber":53,"author":{"gitId":"janald99"},"content":"    }","lastModifiedDate":"2022-04-06"},{"lineNumber":54,"author":{"gitId":"janald99"},"content":"}","lastModifiedDate":"2022-04-06"}],"authorContributionMap":{"janald99":54}},{"path":"src/test/java/seedu/address/testutil/PropertyToSellBuilder.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"janald99"},"content":"package seedu.address.testutil;","lastModifiedDate":"2022-04-06"},{"lineNumber":2,"author":{"gitId":"janald99"},"content":"","lastModifiedDate":"2022-04-06"},{"lineNumber":3,"author":{"gitId":"janald99"},"content":"import seedu.address.model.property.Address;","lastModifiedDate":"2022-04-06"},{"lineNumber":4,"author":{"gitId":"janald99"},"content":"import seedu.address.model.property.House;","lastModifiedDate":"2022-04-06"},{"lineNumber":5,"author":{"gitId":"janald99"},"content":"import seedu.address.model.property.PriceRange;","lastModifiedDate":"2022-04-06"},{"lineNumber":6,"author":{"gitId":"janald99"},"content":"import seedu.address.model.property.PropertyToSell;","lastModifiedDate":"2022-04-06"},{"lineNumber":7,"author":{"gitId":"janald99"},"content":"","lastModifiedDate":"2022-04-06"},{"lineNumber":8,"author":{"gitId":"janald99"},"content":"public class PropertyToSellBuilder {","lastModifiedDate":"2022-04-06"},{"lineNumber":9,"author":{"gitId":"janald99"},"content":"","lastModifiedDate":"2022-04-06"},{"lineNumber":10,"author":{"gitId":"janald99"},"content":"    public static final House DEFAULT_HOUSE \u003d new HouseBuilder().build();","lastModifiedDate":"2022-04-06"},{"lineNumber":11,"author":{"gitId":"janald99"},"content":"    public static final PriceRange DEFAULT_PRICE_RANGE \u003d new PriceRange(0 , 0);","lastModifiedDate":"2022-04-06"},{"lineNumber":12,"author":{"gitId":"janald99"},"content":"    public static final String DEFAULT_ADDRESS \u003d \"200 Flower Road\";","lastModifiedDate":"2022-04-06"},{"lineNumber":13,"author":{"gitId":"janald99"},"content":"","lastModifiedDate":"2022-04-06"},{"lineNumber":14,"author":{"gitId":"janald99"},"content":"    private House house;","lastModifiedDate":"2022-04-06"},{"lineNumber":15,"author":{"gitId":"janald99"},"content":"    private PriceRange priceRange;","lastModifiedDate":"2022-04-06"},{"lineNumber":16,"author":{"gitId":"janald99"},"content":"    private Address address;","lastModifiedDate":"2022-04-06"},{"lineNumber":17,"author":{"gitId":"janald99"},"content":"","lastModifiedDate":"2022-04-06"},{"lineNumber":18,"author":{"gitId":"janald99"},"content":"    /**","lastModifiedDate":"2022-04-06"},{"lineNumber":19,"author":{"gitId":"janald99"},"content":"     * Creates a {@code PropertyToBuyBuilder} with the default details.","lastModifiedDate":"2022-04-06"},{"lineNumber":20,"author":{"gitId":"janald99"},"content":"     */","lastModifiedDate":"2022-04-06"},{"lineNumber":21,"author":{"gitId":"janald99"},"content":"    public PropertyToSellBuilder() {","lastModifiedDate":"2022-04-06"},{"lineNumber":22,"author":{"gitId":"janald99"},"content":"        this.house \u003d DEFAULT_HOUSE;","lastModifiedDate":"2022-04-06"},{"lineNumber":23,"author":{"gitId":"janald99"},"content":"        this.priceRange \u003d DEFAULT_PRICE_RANGE;","lastModifiedDate":"2022-04-06"},{"lineNumber":24,"author":{"gitId":"janald99"},"content":"        this.address \u003d new Address(DEFAULT_ADDRESS);","lastModifiedDate":"2022-04-06"},{"lineNumber":25,"author":{"gitId":"janald99"},"content":"    }","lastModifiedDate":"2022-04-06"},{"lineNumber":26,"author":{"gitId":"janald99"},"content":"","lastModifiedDate":"2022-04-06"},{"lineNumber":27,"author":{"gitId":"janald99"},"content":"    /**","lastModifiedDate":"2022-04-06"},{"lineNumber":28,"author":{"gitId":"janald99"},"content":"     * Initializes the houseBuilder with the data of {@code PropertyToBuyToCopy}.","lastModifiedDate":"2022-04-06"},{"lineNumber":29,"author":{"gitId":"janald99"},"content":"     */","lastModifiedDate":"2022-04-06"},{"lineNumber":30,"author":{"gitId":"janald99"},"content":"    public PropertyToSellBuilder(PropertyToSell propertyToSellToCopy) {","lastModifiedDate":"2022-04-06"},{"lineNumber":31,"author":{"gitId":"janald99"},"content":"        this.house \u003d propertyToSellToCopy.getHouse();","lastModifiedDate":"2022-04-06"},{"lineNumber":32,"author":{"gitId":"janald99"},"content":"        this.priceRange \u003d propertyToSellToCopy.getPriceRange();","lastModifiedDate":"2022-04-06"},{"lineNumber":33,"author":{"gitId":"janald99"},"content":"        this.address \u003d propertyToSellToCopy.getAddress();","lastModifiedDate":"2022-04-06"},{"lineNumber":34,"author":{"gitId":"janald99"},"content":"    }","lastModifiedDate":"2022-04-06"},{"lineNumber":35,"author":{"gitId":"janald99"},"content":"","lastModifiedDate":"2022-04-06"},{"lineNumber":36,"author":{"gitId":"janald99"},"content":"    /**","lastModifiedDate":"2022-04-06"},{"lineNumber":37,"author":{"gitId":"janald99"},"content":"     * Sets the {@code House} of the {@code PropertyToBuy}.","lastModifiedDate":"2022-04-06"},{"lineNumber":38,"author":{"gitId":"janald99"},"content":"     */","lastModifiedDate":"2022-04-06"},{"lineNumber":39,"author":{"gitId":"janald99"},"content":"    public PropertyToSellBuilder withHouse(House house) {","lastModifiedDate":"2022-04-06"},{"lineNumber":40,"author":{"gitId":"janald99"},"content":"        this.house \u003d house;","lastModifiedDate":"2022-04-06"},{"lineNumber":41,"author":{"gitId":"janald99"},"content":"        return this;","lastModifiedDate":"2022-04-06"},{"lineNumber":42,"author":{"gitId":"janald99"},"content":"    }","lastModifiedDate":"2022-04-06"},{"lineNumber":43,"author":{"gitId":"janald99"},"content":"","lastModifiedDate":"2022-04-06"},{"lineNumber":44,"author":{"gitId":"janald99"},"content":"    /**","lastModifiedDate":"2022-04-06"},{"lineNumber":45,"author":{"gitId":"janald99"},"content":"     * Sets the {@code PriceRange} of the {@code PropertyToBuy}.","lastModifiedDate":"2022-04-06"},{"lineNumber":46,"author":{"gitId":"janald99"},"content":"     */","lastModifiedDate":"2022-04-06"},{"lineNumber":47,"author":{"gitId":"janald99"},"content":"    public PropertyToSellBuilder withPriceRange(PriceRange priceRange) {","lastModifiedDate":"2022-04-06"},{"lineNumber":48,"author":{"gitId":"janald99"},"content":"        this.priceRange \u003d priceRange;","lastModifiedDate":"2022-04-06"},{"lineNumber":49,"author":{"gitId":"janald99"},"content":"        return this;","lastModifiedDate":"2022-04-06"},{"lineNumber":50,"author":{"gitId":"janald99"},"content":"    }","lastModifiedDate":"2022-04-06"},{"lineNumber":51,"author":{"gitId":"janald99"},"content":"","lastModifiedDate":"2022-04-06"},{"lineNumber":52,"author":{"gitId":"janald99"},"content":"    /**","lastModifiedDate":"2022-04-06"},{"lineNumber":53,"author":{"gitId":"janald99"},"content":"     * Sets the {@code Address} of the {@code PropertyToBuy}.","lastModifiedDate":"2022-04-06"},{"lineNumber":54,"author":{"gitId":"janald99"},"content":"     */","lastModifiedDate":"2022-04-06"},{"lineNumber":55,"author":{"gitId":"janald99"},"content":"    public PropertyToSellBuilder withAddress(String address) {","lastModifiedDate":"2022-04-07"},{"lineNumber":56,"author":{"gitId":"janald99"},"content":"        this.address \u003d new Address(address);","lastModifiedDate":"2022-04-07"},{"lineNumber":57,"author":{"gitId":"janald99"},"content":"        return this;","lastModifiedDate":"2022-04-06"},{"lineNumber":58,"author":{"gitId":"janald99"},"content":"    }","lastModifiedDate":"2022-04-06"},{"lineNumber":59,"author":{"gitId":"janald99"},"content":"","lastModifiedDate":"2022-04-06"},{"lineNumber":60,"author":{"gitId":"janald99"},"content":"    public PropertyToSell build() {","lastModifiedDate":"2022-04-06"},{"lineNumber":61,"author":{"gitId":"janald99"},"content":"        return new PropertyToSell(house, priceRange, address);","lastModifiedDate":"2022-04-06"},{"lineNumber":62,"author":{"gitId":"janald99"},"content":"    }","lastModifiedDate":"2022-04-06"},{"lineNumber":63,"author":{"gitId":"janald99"},"content":"}","lastModifiedDate":"2022-04-06"}],"authorContributionMap":{"janald99":63}},{"path":"src/test/java/seedu/address/testutil/SellerBuilder.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"cwnm"},"content":"package seedu.address.testutil;","lastModifiedDate":"2022-03-17"},{"lineNumber":2,"author":{"gitId":"cwnm"},"content":"","lastModifiedDate":"2022-03-17"},{"lineNumber":3,"author":{"gitId":"cwnm"},"content":"import java.util.HashSet;","lastModifiedDate":"2022-03-17"},{"lineNumber":4,"author":{"gitId":"cwnm"},"content":"import java.util.Set;","lastModifiedDate":"2022-03-17"},{"lineNumber":5,"author":{"gitId":"cwnm"},"content":"","lastModifiedDate":"2022-03-17"},{"lineNumber":6,"author":{"gitId":"cwnm"},"content":"import seedu.address.model.client.Appointment;","lastModifiedDate":"2022-03-17"},{"lineNumber":7,"author":{"gitId":"cwnm"},"content":"import seedu.address.model.client.Name;","lastModifiedDate":"2022-03-17"},{"lineNumber":8,"author":{"gitId":"cwnm"},"content":"import seedu.address.model.client.Phone;","lastModifiedDate":"2022-03-17"},{"lineNumber":9,"author":{"gitId":"chuashihong"},"content":"import seedu.address.model.property.Address;","lastModifiedDate":"2022-04-08"},{"lineNumber":10,"author":{"gitId":"chuashihong"},"content":"import seedu.address.model.property.House;","lastModifiedDate":"2022-04-08"},{"lineNumber":11,"author":{"gitId":"chuashihong"},"content":"import seedu.address.model.property.HouseType;","lastModifiedDate":"2022-04-08"},{"lineNumber":12,"author":{"gitId":"chuashihong"},"content":"import seedu.address.model.property.Location;","lastModifiedDate":"2022-04-08"},{"lineNumber":13,"author":{"gitId":"chuashihong"},"content":"import seedu.address.model.property.PriceRange;","lastModifiedDate":"2022-04-08"},{"lineNumber":14,"author":{"gitId":"chuashihong"},"content":"import seedu.address.model.property.PropertyToSell;","lastModifiedDate":"2022-03-26"},{"lineNumber":15,"author":{"gitId":"cwnm"},"content":"import seedu.address.model.seller.Seller;","lastModifiedDate":"2022-03-17"},{"lineNumber":16,"author":{"gitId":"cwnm"},"content":"import seedu.address.model.tag.Tag;","lastModifiedDate":"2022-03-17"},{"lineNumber":17,"author":{"gitId":"cwnm"},"content":"import seedu.address.model.util.SampleDataUtil;","lastModifiedDate":"2022-03-17"},{"lineNumber":18,"author":{"gitId":"cwnm"},"content":"","lastModifiedDate":"2022-03-17"},{"lineNumber":19,"author":{"gitId":"cwnm"},"content":"/**","lastModifiedDate":"2022-03-17"},{"lineNumber":20,"author":{"gitId":"cwnm"},"content":" * A utility class to help with building client objects.","lastModifiedDate":"2022-03-17"},{"lineNumber":21,"author":{"gitId":"cwnm"},"content":" */","lastModifiedDate":"2022-03-17"},{"lineNumber":22,"author":{"gitId":"cwnm"},"content":"public class SellerBuilder {","lastModifiedDate":"2022-03-17"},{"lineNumber":23,"author":{"gitId":"cwnm"},"content":"","lastModifiedDate":"2022-03-17"},{"lineNumber":24,"author":{"gitId":"cwnm"},"content":"    public static final String DEFAULT_NAME \u003d \"Amy Bee\";","lastModifiedDate":"2022-03-17"},{"lineNumber":25,"author":{"gitId":"cwnm"},"content":"    public static final String DEFAULT_PHONE \u003d \"85355255\";","lastModifiedDate":"2022-03-17"},{"lineNumber":26,"author":{"gitId":"cwnm"},"content":"    public static final String DEFAULT_APPOINTMENT \u003d \"2022-05-01-12-00\";","lastModifiedDate":"2022-03-17"},{"lineNumber":27,"author":{"gitId":"chuashihong"},"content":"    public static final PropertyToSell DEFAULT_PROPERTY \u003d new PropertyToSell(","lastModifiedDate":"2022-04-08"},{"lineNumber":28,"author":{"gitId":"chuashihong"},"content":"            new House(HouseType.BUNGALOW, new Location(\"bishan\")),","lastModifiedDate":"2022-04-08"},{"lineNumber":29,"author":{"gitId":"chuashihong"},"content":"            new PriceRange(10, 20),","lastModifiedDate":"2022-04-08"},{"lineNumber":30,"author":{"gitId":"chuashihong"},"content":"            new Address(\"Default address\")","lastModifiedDate":"2022-04-08"},{"lineNumber":31,"author":{"gitId":"chuashihong"},"content":"    );","lastModifiedDate":"2022-04-08"},{"lineNumber":32,"author":{"gitId":"cwnm"},"content":"","lastModifiedDate":"2022-03-17"},{"lineNumber":33,"author":{"gitId":"cwnm"},"content":"    private Name name;","lastModifiedDate":"2022-03-17"},{"lineNumber":34,"author":{"gitId":"cwnm"},"content":"    private Phone phone;","lastModifiedDate":"2022-03-17"},{"lineNumber":35,"author":{"gitId":"cwnm"},"content":"    private Set\u003cTag\u003e tags;","lastModifiedDate":"2022-03-17"},{"lineNumber":36,"author":{"gitId":"cwnm"},"content":"    private Appointment appointment;","lastModifiedDate":"2022-03-17"},{"lineNumber":37,"author":{"gitId":"janald99"},"content":"    private PropertyToSell propertyToSell;","lastModifiedDate":"2022-03-31"},{"lineNumber":38,"author":{"gitId":"cwnm"},"content":"","lastModifiedDate":"2022-03-17"},{"lineNumber":39,"author":{"gitId":"cwnm"},"content":"    /**","lastModifiedDate":"2022-03-17"},{"lineNumber":40,"author":{"gitId":"janald99"},"content":"     * Creates a {@code sellerBuilder} with the default details.","lastModifiedDate":"2022-03-31"},{"lineNumber":41,"author":{"gitId":"cwnm"},"content":"     */","lastModifiedDate":"2022-03-17"},{"lineNumber":42,"author":{"gitId":"cwnm"},"content":"    public SellerBuilder() {","lastModifiedDate":"2022-03-17"},{"lineNumber":43,"author":{"gitId":"cwnm"},"content":"        name \u003d new Name(DEFAULT_NAME);","lastModifiedDate":"2022-03-17"},{"lineNumber":44,"author":{"gitId":"cwnm"},"content":"        phone \u003d new Phone(DEFAULT_PHONE);","lastModifiedDate":"2022-03-17"},{"lineNumber":45,"author":{"gitId":"cwnm"},"content":"        appointment \u003d new Appointment(DEFAULT_APPOINTMENT);","lastModifiedDate":"2022-03-17"},{"lineNumber":46,"author":{"gitId":"cwnm"},"content":"        tags \u003d new HashSet\u003c\u003e();","lastModifiedDate":"2022-03-17"},{"lineNumber":47,"author":{"gitId":"janald99"},"content":"        propertyToSell \u003d DEFAULT_PROPERTY;","lastModifiedDate":"2022-03-31"},{"lineNumber":48,"author":{"gitId":"cwnm"},"content":"    }","lastModifiedDate":"2022-03-17"},{"lineNumber":49,"author":{"gitId":"cwnm"},"content":"","lastModifiedDate":"2022-03-17"},{"lineNumber":50,"author":{"gitId":"cwnm"},"content":"    /**","lastModifiedDate":"2022-03-17"},{"lineNumber":51,"author":{"gitId":"cwnm"},"content":"     * Initializes the clientBuilder with the data of {@code clientToCopy}.","lastModifiedDate":"2022-03-17"},{"lineNumber":52,"author":{"gitId":"cwnm"},"content":"     */","lastModifiedDate":"2022-03-17"},{"lineNumber":53,"author":{"gitId":"cwnm"},"content":"    public SellerBuilder(Seller sellerToCopy) {","lastModifiedDate":"2022-03-17"},{"lineNumber":54,"author":{"gitId":"cwnm"},"content":"        name \u003d sellerToCopy.getName();","lastModifiedDate":"2022-03-17"},{"lineNumber":55,"author":{"gitId":"cwnm"},"content":"        phone \u003d sellerToCopy.getPhone();","lastModifiedDate":"2022-03-17"},{"lineNumber":56,"author":{"gitId":"cwnm"},"content":"        appointment \u003d sellerToCopy.getAppointment();","lastModifiedDate":"2022-03-17"},{"lineNumber":57,"author":{"gitId":"cwnm"},"content":"        tags \u003d new HashSet\u003c\u003e(sellerToCopy.getTags());","lastModifiedDate":"2022-03-17"},{"lineNumber":58,"author":{"gitId":"janald99"},"content":"        propertyToSell \u003d sellerToCopy.getPropertyToSell();","lastModifiedDate":"2022-03-31"},{"lineNumber":59,"author":{"gitId":"cwnm"},"content":"    }","lastModifiedDate":"2022-03-17"},{"lineNumber":60,"author":{"gitId":"cwnm"},"content":"","lastModifiedDate":"2022-03-17"},{"lineNumber":61,"author":{"gitId":"cwnm"},"content":"    /**","lastModifiedDate":"2022-03-17"},{"lineNumber":62,"author":{"gitId":"cwnm"},"content":"     * Sets the {@code Name} of the {@code client} that we are building.","lastModifiedDate":"2022-03-17"},{"lineNumber":63,"author":{"gitId":"cwnm"},"content":"     */","lastModifiedDate":"2022-03-17"},{"lineNumber":64,"author":{"gitId":"cwnm"},"content":"    public SellerBuilder withName(String name) {","lastModifiedDate":"2022-03-17"},{"lineNumber":65,"author":{"gitId":"cwnm"},"content":"        this.name \u003d new Name(name);","lastModifiedDate":"2022-03-17"},{"lineNumber":66,"author":{"gitId":"cwnm"},"content":"        return this;","lastModifiedDate":"2022-03-17"},{"lineNumber":67,"author":{"gitId":"cwnm"},"content":"    }","lastModifiedDate":"2022-03-17"},{"lineNumber":68,"author":{"gitId":"cwnm"},"content":"","lastModifiedDate":"2022-03-17"},{"lineNumber":69,"author":{"gitId":"cwnm"},"content":"    /**","lastModifiedDate":"2022-03-17"},{"lineNumber":70,"author":{"gitId":"cwnm"},"content":"     * Parses the {@code tags} into a {@code Set\u003cTag\u003e} and set it to the {@code client} that we are building.","lastModifiedDate":"2022-03-17"},{"lineNumber":71,"author":{"gitId":"cwnm"},"content":"     */","lastModifiedDate":"2022-03-17"},{"lineNumber":72,"author":{"gitId":"cwnm"},"content":"    public SellerBuilder withTags(String ... tags) {","lastModifiedDate":"2022-03-17"},{"lineNumber":73,"author":{"gitId":"cwnm"},"content":"        this.tags \u003d SampleDataUtil.getTagSet(tags);","lastModifiedDate":"2022-03-17"},{"lineNumber":74,"author":{"gitId":"cwnm"},"content":"        return this;","lastModifiedDate":"2022-03-17"},{"lineNumber":75,"author":{"gitId":"cwnm"},"content":"    }","lastModifiedDate":"2022-03-17"},{"lineNumber":76,"author":{"gitId":"cwnm"},"content":"","lastModifiedDate":"2022-03-17"},{"lineNumber":77,"author":{"gitId":"cwnm"},"content":"    /**","lastModifiedDate":"2022-03-17"},{"lineNumber":78,"author":{"gitId":"cwnm"},"content":"     * Sets the {@code Phone} of the {@code client} that we are building.","lastModifiedDate":"2022-03-17"},{"lineNumber":79,"author":{"gitId":"cwnm"},"content":"     */","lastModifiedDate":"2022-03-17"},{"lineNumber":80,"author":{"gitId":"cwnm"},"content":"    public SellerBuilder withPhone(String phone) {","lastModifiedDate":"2022-03-17"},{"lineNumber":81,"author":{"gitId":"cwnm"},"content":"        this.phone \u003d new Phone(phone);","lastModifiedDate":"2022-03-17"},{"lineNumber":82,"author":{"gitId":"cwnm"},"content":"        return this;","lastModifiedDate":"2022-03-17"},{"lineNumber":83,"author":{"gitId":"cwnm"},"content":"    }","lastModifiedDate":"2022-03-17"},{"lineNumber":84,"author":{"gitId":"cwnm"},"content":"","lastModifiedDate":"2022-03-17"},{"lineNumber":85,"author":{"gitId":"cwnm"},"content":"    /**","lastModifiedDate":"2022-03-17"},{"lineNumber":86,"author":{"gitId":"cwnm"},"content":"     * Sets the {@code Appointment} of the {@code client} that we are building.","lastModifiedDate":"2022-03-17"},{"lineNumber":87,"author":{"gitId":"cwnm"},"content":"     */","lastModifiedDate":"2022-03-17"},{"lineNumber":88,"author":{"gitId":"cwnm"},"content":"    public SellerBuilder withAppointment(String appointment) {","lastModifiedDate":"2022-03-17"},{"lineNumber":89,"author":{"gitId":"cwnm"},"content":"        this.appointment \u003d new Appointment(appointment);","lastModifiedDate":"2022-03-17"},{"lineNumber":90,"author":{"gitId":"cwnm"},"content":"        return this;","lastModifiedDate":"2022-03-17"},{"lineNumber":91,"author":{"gitId":"cwnm"},"content":"    }","lastModifiedDate":"2022-03-17"},{"lineNumber":92,"author":{"gitId":"cwnm"},"content":"","lastModifiedDate":"2022-03-17"},{"lineNumber":93,"author":{"gitId":"cwnm"},"content":"    /**","lastModifiedDate":"2022-03-29"},{"lineNumber":94,"author":{"gitId":"cwnm"},"content":"     * Sets the {@code Properties} of the {@code buyer} that we are building.","lastModifiedDate":"2022-03-29"},{"lineNumber":95,"author":{"gitId":"cwnm"},"content":"     */","lastModifiedDate":"2022-03-29"},{"lineNumber":96,"author":{"gitId":"cwnm"},"content":"    public SellerBuilder withProperty(PropertyToSell property) {","lastModifiedDate":"2022-03-29"},{"lineNumber":97,"author":{"gitId":"janald99"},"content":"        this.propertyToSell \u003d property;","lastModifiedDate":"2022-03-31"},{"lineNumber":98,"author":{"gitId":"cwnm"},"content":"        return this;","lastModifiedDate":"2022-03-29"},{"lineNumber":99,"author":{"gitId":"cwnm"},"content":"    }","lastModifiedDate":"2022-03-29"},{"lineNumber":100,"author":{"gitId":"cwnm"},"content":"","lastModifiedDate":"2022-03-29"},{"lineNumber":101,"author":{"gitId":"cwnm"},"content":"    public Seller build() {","lastModifiedDate":"2022-03-17"},{"lineNumber":102,"author":{"gitId":"janald99"},"content":"        return new Seller(name, phone, appointment, tags, propertyToSell);","lastModifiedDate":"2022-03-31"},{"lineNumber":103,"author":{"gitId":"cwnm"},"content":"    }","lastModifiedDate":"2022-03-17"},{"lineNumber":104,"author":{"gitId":"cwnm"},"content":"","lastModifiedDate":"2022-03-17"},{"lineNumber":105,"author":{"gitId":"cwnm"},"content":"}","lastModifiedDate":"2022-03-17"}],"authorContributionMap":{"janald99":6,"cwnm":88,"chuashihong":11}},{"path":"src/test/java/seedu/address/testutil/SellerUtil.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"chuashihong"},"content":"package seedu.address.testutil;","lastModifiedDate":"2022-04-07"},{"lineNumber":2,"author":{"gitId":"chuashihong"},"content":"","lastModifiedDate":"2022-04-07"},{"lineNumber":3,"author":{"gitId":"chuashihong"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_HOUSE_TYPE;","lastModifiedDate":"2022-04-07"},{"lineNumber":4,"author":{"gitId":"chuashihong"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_LOCATION;","lastModifiedDate":"2022-04-07"},{"lineNumber":5,"author":{"gitId":"chuashihong"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_NAME;","lastModifiedDate":"2022-04-07"},{"lineNumber":6,"author":{"gitId":"chuashihong"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_PHONE;","lastModifiedDate":"2022-04-07"},{"lineNumber":7,"author":{"gitId":"chuashihong"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_PRICE_RANGE;","lastModifiedDate":"2022-04-07"},{"lineNumber":8,"author":{"gitId":"chuashihong"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_TAG;","lastModifiedDate":"2022-04-07"},{"lineNumber":9,"author":{"gitId":"chuashihong"},"content":"","lastModifiedDate":"2022-04-07"},{"lineNumber":10,"author":{"gitId":"chuashihong"},"content":"import java.util.Set;","lastModifiedDate":"2022-04-07"},{"lineNumber":11,"author":{"gitId":"chuashihong"},"content":"","lastModifiedDate":"2022-04-07"},{"lineNumber":12,"author":{"gitId":"chuashihong"},"content":"import seedu.address.logic.commands.AddSellerCommand;","lastModifiedDate":"2022-04-07"},{"lineNumber":13,"author":{"gitId":"chuashihong"},"content":"import seedu.address.logic.commands.EditSellerCommand.EditSellerDescriptor;","lastModifiedDate":"2022-04-07"},{"lineNumber":14,"author":{"gitId":"chuashihong"},"content":"import seedu.address.model.buyer.Buyer;","lastModifiedDate":"2022-04-07"},{"lineNumber":15,"author":{"gitId":"chuashihong"},"content":"import seedu.address.model.seller.Seller;","lastModifiedDate":"2022-04-07"},{"lineNumber":16,"author":{"gitId":"chuashihong"},"content":"import seedu.address.model.tag.Tag;","lastModifiedDate":"2022-04-07"},{"lineNumber":17,"author":{"gitId":"chuashihong"},"content":"","lastModifiedDate":"2022-04-07"},{"lineNumber":18,"author":{"gitId":"chuashihong"},"content":"/**","lastModifiedDate":"2022-04-07"},{"lineNumber":19,"author":{"gitId":"chuashihong"},"content":" * A utility class for client.","lastModifiedDate":"2022-04-07"},{"lineNumber":20,"author":{"gitId":"chuashihong"},"content":" */","lastModifiedDate":"2022-04-07"},{"lineNumber":21,"author":{"gitId":"chuashihong"},"content":"public class SellerUtil {","lastModifiedDate":"2022-04-07"},{"lineNumber":22,"author":{"gitId":"chuashihong"},"content":"","lastModifiedDate":"2022-04-07"},{"lineNumber":23,"author":{"gitId":"chuashihong"},"content":"    /**","lastModifiedDate":"2022-04-07"},{"lineNumber":24,"author":{"gitId":"chuashihong"},"content":"     * Returns an add command string for adding the {@code seller}.","lastModifiedDate":"2022-04-07"},{"lineNumber":25,"author":{"gitId":"chuashihong"},"content":"     */","lastModifiedDate":"2022-04-07"},{"lineNumber":26,"author":{"gitId":"chuashihong"},"content":"    public static String getAddSellerCommand(Seller seller) {","lastModifiedDate":"2022-04-07"},{"lineNumber":27,"author":{"gitId":"chuashihong"},"content":"        return AddSellerCommand.COMMAND_WORD + \" \" + getSellerDetails(seller);","lastModifiedDate":"2022-04-07"},{"lineNumber":28,"author":{"gitId":"chuashihong"},"content":"    }","lastModifiedDate":"2022-04-07"},{"lineNumber":29,"author":{"gitId":"chuashihong"},"content":"","lastModifiedDate":"2022-04-07"},{"lineNumber":30,"author":{"gitId":"chuashihong"},"content":"    /**","lastModifiedDate":"2022-04-07"},{"lineNumber":31,"author":{"gitId":"chuashihong"},"content":"     * Returns the part of the command string for the given {@code buyer}\u0027s PropertyToBuy details.","lastModifiedDate":"2022-04-07"},{"lineNumber":32,"author":{"gitId":"chuashihong"},"content":"     */","lastModifiedDate":"2022-04-07"},{"lineNumber":33,"author":{"gitId":"chuashihong"},"content":"    public static String getPropertyToBuyCommand(Buyer buyer) {","lastModifiedDate":"2022-04-07"},{"lineNumber":34,"author":{"gitId":"chuashihong"},"content":"        StringBuilder sb \u003d new StringBuilder();","lastModifiedDate":"2022-04-07"},{"lineNumber":35,"author":{"gitId":"chuashihong"},"content":"        sb.append(PREFIX_LOCATION + buyer.getPropertyToBuy().getHouse().getLocation().toString() + \" \");","lastModifiedDate":"2022-04-07"},{"lineNumber":36,"author":{"gitId":"chuashihong"},"content":"        sb.append(PREFIX_HOUSE_TYPE + buyer.getPropertyToBuy().getHouse().getHouseTypeToString() + \" \");","lastModifiedDate":"2022-04-07"},{"lineNumber":37,"author":{"gitId":"chuashihong"},"content":"        sb.append(PREFIX_PRICE_RANGE","lastModifiedDate":"2022-04-07"},{"lineNumber":38,"author":{"gitId":"chuashihong"},"content":"                + buyer.getPropertyToBuy().getPriceRange().toString().split(\"]\")[0].substring(1) + \" \");","lastModifiedDate":"2022-04-07"},{"lineNumber":39,"author":{"gitId":"chuashihong"},"content":"        return sb.toString();","lastModifiedDate":"2022-04-07"},{"lineNumber":40,"author":{"gitId":"chuashihong"},"content":"    }","lastModifiedDate":"2022-04-07"},{"lineNumber":41,"author":{"gitId":"chuashihong"},"content":"","lastModifiedDate":"2022-04-07"},{"lineNumber":42,"author":{"gitId":"chuashihong"},"content":"    /**","lastModifiedDate":"2022-04-07"},{"lineNumber":43,"author":{"gitId":"chuashihong"},"content":"     * Returns the part of command string for the given {@code seller}\u0027s details.","lastModifiedDate":"2022-04-07"},{"lineNumber":44,"author":{"gitId":"chuashihong"},"content":"     */","lastModifiedDate":"2022-04-07"},{"lineNumber":45,"author":{"gitId":"chuashihong"},"content":"    public static String getSellerDetails(Seller seller) {","lastModifiedDate":"2022-04-07"},{"lineNumber":46,"author":{"gitId":"chuashihong"},"content":"        StringBuilder sb \u003d new StringBuilder();","lastModifiedDate":"2022-04-07"},{"lineNumber":47,"author":{"gitId":"chuashihong"},"content":"        sb.append(PREFIX_NAME + seller.getName().fullName + \" \");","lastModifiedDate":"2022-04-07"},{"lineNumber":48,"author":{"gitId":"chuashihong"},"content":"        sb.append(PREFIX_PHONE + seller.getPhone().value + \" \");","lastModifiedDate":"2022-04-07"},{"lineNumber":49,"author":{"gitId":"chuashihong"},"content":"        seller.getTags().stream().forEach(","lastModifiedDate":"2022-04-07"},{"lineNumber":50,"author":{"gitId":"chuashihong"},"content":"            s -\u003e sb.append(PREFIX_TAG + s.tagName + \" \")","lastModifiedDate":"2022-04-07"},{"lineNumber":51,"author":{"gitId":"chuashihong"},"content":"        );","lastModifiedDate":"2022-04-07"},{"lineNumber":52,"author":{"gitId":"chuashihong"},"content":"        return sb.toString();","lastModifiedDate":"2022-04-07"},{"lineNumber":53,"author":{"gitId":"chuashihong"},"content":"    }","lastModifiedDate":"2022-04-07"},{"lineNumber":54,"author":{"gitId":"chuashihong"},"content":"","lastModifiedDate":"2022-04-07"},{"lineNumber":55,"author":{"gitId":"chuashihong"},"content":"    /**","lastModifiedDate":"2022-04-07"},{"lineNumber":56,"author":{"gitId":"chuashihong"},"content":"     * Returns the part of command string for the given {@code EditclientDescriptor}\u0027s details.","lastModifiedDate":"2022-04-07"},{"lineNumber":57,"author":{"gitId":"chuashihong"},"content":"     */","lastModifiedDate":"2022-04-07"},{"lineNumber":58,"author":{"gitId":"chuashihong"},"content":"    public static String getEditSellerDescriptorDetails(EditSellerDescriptor descriptor) {","lastModifiedDate":"2022-04-07"},{"lineNumber":59,"author":{"gitId":"chuashihong"},"content":"        StringBuilder sb \u003d new StringBuilder();","lastModifiedDate":"2022-04-07"},{"lineNumber":60,"author":{"gitId":"chuashihong"},"content":"        descriptor.getName().ifPresent(name -\u003e sb.append(PREFIX_NAME).append(name.fullName).append(\" \"));","lastModifiedDate":"2022-04-07"},{"lineNumber":61,"author":{"gitId":"chuashihong"},"content":"        descriptor.getPhone().ifPresent(phone -\u003e sb.append(PREFIX_PHONE).append(phone.value).append(\" \"));","lastModifiedDate":"2022-04-07"},{"lineNumber":62,"author":{"gitId":"chuashihong"},"content":"        if (descriptor.getTags().isPresent()) {","lastModifiedDate":"2022-04-07"},{"lineNumber":63,"author":{"gitId":"chuashihong"},"content":"            Set\u003cTag\u003e tags \u003d descriptor.getTags().get();","lastModifiedDate":"2022-04-07"},{"lineNumber":64,"author":{"gitId":"chuashihong"},"content":"            if (tags.isEmpty()) {","lastModifiedDate":"2022-04-07"},{"lineNumber":65,"author":{"gitId":"chuashihong"},"content":"                sb.append(PREFIX_TAG);","lastModifiedDate":"2022-04-07"},{"lineNumber":66,"author":{"gitId":"chuashihong"},"content":"            } else {","lastModifiedDate":"2022-04-07"},{"lineNumber":67,"author":{"gitId":"chuashihong"},"content":"                tags.forEach(s -\u003e sb.append(PREFIX_TAG).append(s.tagName).append(\" \"));","lastModifiedDate":"2022-04-07"},{"lineNumber":68,"author":{"gitId":"chuashihong"},"content":"            }","lastModifiedDate":"2022-04-07"},{"lineNumber":69,"author":{"gitId":"chuashihong"},"content":"        }","lastModifiedDate":"2022-04-07"},{"lineNumber":70,"author":{"gitId":"chuashihong"},"content":"        return sb.toString();","lastModifiedDate":"2022-04-07"},{"lineNumber":71,"author":{"gitId":"chuashihong"},"content":"    }","lastModifiedDate":"2022-04-07"},{"lineNumber":72,"author":{"gitId":"chuashihong"},"content":"}","lastModifiedDate":"2022-04-07"}],"authorContributionMap":{"chuashihong":72}},{"path":"src/test/java/seedu/address/testutil/TestUtil.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.testutil;","lastModifiedDate":"2016-08-08"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.io.IOException;","lastModifiedDate":"2017-01-19"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import java.nio.file.Files;","lastModifiedDate":"2018-04-21"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-04-21"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.nio.file.Paths;","lastModifiedDate":"2018-04-21"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.index.Index;","lastModifiedDate":"2017-07-30"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2017-07-30"},{"lineNumber":10,"author":{"gitId":"cwnm"},"content":"import seedu.address.model.client.Client;","lastModifiedDate":"2022-03-04"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":12,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-08"},{"lineNumber":13,"author":{"gitId":"-"},"content":" * A utility class for test cases.","lastModifiedDate":"2016-08-08"},{"lineNumber":14,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-08"},{"lineNumber":15,"author":{"gitId":"-"},"content":"public class TestUtil {","lastModifiedDate":"2016-08-08"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-10-16"},{"lineNumber":18,"author":{"gitId":"-"},"content":"     * Folder used for temp files created during testing. Ignored by Git.","lastModifiedDate":"2016-10-16"},{"lineNumber":19,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-10-16"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    private static final Path SANDBOX_FOLDER \u003d Paths.get(\"src\", \"test\", \"data\", \"sandbox\");","lastModifiedDate":"2018-04-21"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-08"},{"lineNumber":23,"author":{"gitId":"-"},"content":"     * Appends {@code fileName} to the sandbox folder path and returns the resulting path.","lastModifiedDate":"2018-04-21"},{"lineNumber":24,"author":{"gitId":"-"},"content":"     * Creates the sandbox folder if it doesn\u0027t exist.","lastModifiedDate":"2016-09-28"},{"lineNumber":25,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-08"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    public static Path getFilePathInSandboxFolder(String fileName) {","lastModifiedDate":"2018-04-21"},{"lineNumber":27,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2016-09-28"},{"lineNumber":28,"author":{"gitId":"-"},"content":"            Files.createDirectories(SANDBOX_FOLDER);","lastModifiedDate":"2018-04-21"},{"lineNumber":29,"author":{"gitId":"-"},"content":"        } catch (IOException e) {","lastModifiedDate":"2016-09-28"},{"lineNumber":30,"author":{"gitId":"-"},"content":"            throw new RuntimeException(e);","lastModifiedDate":"2016-09-28"},{"lineNumber":31,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-09-28"},{"lineNumber":32,"author":{"gitId":"-"},"content":"        return SANDBOX_FOLDER.resolve(fileName);","lastModifiedDate":"2018-04-21"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-07-30"},{"lineNumber":36,"author":{"gitId":"cwnm"},"content":"     * Returns the middle index of the client in the {@code model}\u0027s client list.","lastModifiedDate":"2022-03-04"},{"lineNumber":37,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-07-30"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    public static Index getMidIndex(Model model) {","lastModifiedDate":"2017-07-30"},{"lineNumber":39,"author":{"gitId":"cwnm"},"content":"        return Index.fromOneBased(model.getFilteredClientList().size() / 2);","lastModifiedDate":"2022-03-04"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-07-30"},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-30"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-07-30"},{"lineNumber":43,"author":{"gitId":"cwnm"},"content":"     * Returns the last index of the client in the {@code model}\u0027s client list.","lastModifiedDate":"2022-03-04"},{"lineNumber":44,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-07-30"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    public static Index getLastIndex(Model model) {","lastModifiedDate":"2017-07-30"},{"lineNumber":46,"author":{"gitId":"cwnm"},"content":"        return Index.fromOneBased(model.getFilteredClientList().size());","lastModifiedDate":"2022-03-04"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-07-30"},{"lineNumber":48,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-30"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-07-30"},{"lineNumber":50,"author":{"gitId":"cwnm"},"content":"     * Returns the client in the {@code model}\u0027s client list at {@code index}.","lastModifiedDate":"2022-03-04"},{"lineNumber":51,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-07-30"},{"lineNumber":52,"author":{"gitId":"cwnm"},"content":"    public static Client getclient(Model model, Index index) {","lastModifiedDate":"2022-03-04"},{"lineNumber":53,"author":{"gitId":"cwnm"},"content":"        return model.getFilteredClientList().get(index.getZeroBased());","lastModifiedDate":"2022-03-04"},{"lineNumber":54,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-07-30"},{"lineNumber":55,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"}],"authorContributionMap":{"-":47,"cwnm":8}},{"path":"src/test/java/seedu/address/testutil/TypicalBuyers.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"WJunHong"},"content":"package seedu.address.testutil;","lastModifiedDate":"2022-03-16"},{"lineNumber":2,"author":{"gitId":"WJunHong"},"content":"","lastModifiedDate":"2022-03-16"},{"lineNumber":3,"author":{"gitId":"chuashihong"},"content":"import static seedu.address.logic.commands.BuyerCommandTestUtil.VALID_APPOINTMENT_AMY;","lastModifiedDate":"2022-04-07"},{"lineNumber":4,"author":{"gitId":"chuashihong"},"content":"import static seedu.address.logic.commands.BuyerCommandTestUtil.VALID_APPOINTMENT_BOB;","lastModifiedDate":"2022-04-07"},{"lineNumber":5,"author":{"gitId":"chuashihong"},"content":"import static seedu.address.logic.commands.BuyerCommandTestUtil.VALID_APPOINTMENT_CHAD;","lastModifiedDate":"2022-04-07"},{"lineNumber":6,"author":{"gitId":"chuashihong"},"content":"import static seedu.address.logic.commands.BuyerCommandTestUtil.VALID_NAME_AMY;","lastModifiedDate":"2022-04-07"},{"lineNumber":7,"author":{"gitId":"chuashihong"},"content":"import static seedu.address.logic.commands.BuyerCommandTestUtil.VALID_NAME_BOB;","lastModifiedDate":"2022-04-07"},{"lineNumber":8,"author":{"gitId":"chuashihong"},"content":"import static seedu.address.logic.commands.BuyerCommandTestUtil.VALID_NAME_CHAD;","lastModifiedDate":"2022-04-07"},{"lineNumber":9,"author":{"gitId":"chuashihong"},"content":"import static seedu.address.logic.commands.BuyerCommandTestUtil.VALID_PHONE_AMY;","lastModifiedDate":"2022-04-07"},{"lineNumber":10,"author":{"gitId":"chuashihong"},"content":"import static seedu.address.logic.commands.BuyerCommandTestUtil.VALID_PHONE_BOB;","lastModifiedDate":"2022-04-07"},{"lineNumber":11,"author":{"gitId":"chuashihong"},"content":"import static seedu.address.logic.commands.BuyerCommandTestUtil.VALID_PHONE_CHAD;","lastModifiedDate":"2022-04-07"},{"lineNumber":12,"author":{"gitId":"chuashihong"},"content":"import static seedu.address.logic.commands.BuyerCommandTestUtil.VALID_PROPERTY_BUY_CHAD;","lastModifiedDate":"2022-04-07"},{"lineNumber":13,"author":{"gitId":"chuashihong"},"content":"import static seedu.address.logic.commands.BuyerCommandTestUtil.VALID_TAG_FRIEND;","lastModifiedDate":"2022-04-07"},{"lineNumber":14,"author":{"gitId":"chuashihong"},"content":"import static seedu.address.logic.commands.BuyerCommandTestUtil.VALID_TAG_HUSBAND;","lastModifiedDate":"2022-04-07"},{"lineNumber":15,"author":{"gitId":"WJunHong"},"content":"","lastModifiedDate":"2022-03-16"},{"lineNumber":16,"author":{"gitId":"WJunHong"},"content":"import java.util.ArrayList;","lastModifiedDate":"2022-03-16"},{"lineNumber":17,"author":{"gitId":"WJunHong"},"content":"import java.util.Arrays;","lastModifiedDate":"2022-03-16"},{"lineNumber":18,"author":{"gitId":"WJunHong"},"content":"import java.util.List;","lastModifiedDate":"2022-03-16"},{"lineNumber":19,"author":{"gitId":"WJunHong"},"content":"","lastModifiedDate":"2022-03-16"},{"lineNumber":20,"author":{"gitId":"WJunHong"},"content":"import seedu.address.model.BuyerAddressBook;","lastModifiedDate":"2022-03-29"},{"lineNumber":21,"author":{"gitId":"WJunHong"},"content":"import seedu.address.model.buyer.Buyer;","lastModifiedDate":"2022-03-16"},{"lineNumber":22,"author":{"gitId":"janald99"},"content":"import seedu.address.model.property.HouseType;","lastModifiedDate":"2022-04-07"},{"lineNumber":23,"author":{"gitId":"janald99"},"content":"import seedu.address.model.property.PriceRange;","lastModifiedDate":"2022-04-07"},{"lineNumber":24,"author":{"gitId":"WJunHong"},"content":"","lastModifiedDate":"2022-03-16"},{"lineNumber":25,"author":{"gitId":"WJunHong"},"content":"/**","lastModifiedDate":"2022-03-16"},{"lineNumber":26,"author":{"gitId":"WJunHong"},"content":" * A utility class containing a list of {@code client} objects to be used in tests.","lastModifiedDate":"2022-03-16"},{"lineNumber":27,"author":{"gitId":"WJunHong"},"content":" */","lastModifiedDate":"2022-03-16"},{"lineNumber":28,"author":{"gitId":"WJunHong"},"content":"public class TypicalBuyers {","lastModifiedDate":"2022-03-16"},{"lineNumber":29,"author":{"gitId":"WJunHong"},"content":"","lastModifiedDate":"2022-03-16"},{"lineNumber":30,"author":{"gitId":"WJunHong"},"content":"    // Buyers who are yet to indicate any properties to buy","lastModifiedDate":"2022-03-16"},{"lineNumber":31,"author":{"gitId":"chuashihong"},"content":"    public static final Buyer ALICE \u003d new BuyerBuilder().withName(\"Alice Pauline\")","lastModifiedDate":"2022-04-07"},{"lineNumber":32,"author":{"gitId":"Jacky142857"},"content":"            .withPhone(\"94351253\").withAppointment(\"2022-05-01-12-00\")","lastModifiedDate":"2022-03-19"},{"lineNumber":33,"author":{"gitId":"chuashihong"},"content":"            .withTags(\"friends\").withProperty(","lastModifiedDate":"2022-04-08"},{"lineNumber":34,"author":{"gitId":"chuashihong"},"content":"            new PropertyToBuyBuilder().withHouse(","lastModifiedDate":"2022-04-08"},{"lineNumber":35,"author":{"gitId":"chuashihong"},"content":"                new HouseBuilder().withHouseType(HouseType.BUNGALOW).withLocation(\"clementi\").build())","lastModifiedDate":"2022-04-08"},{"lineNumber":36,"author":{"gitId":"chuashihong"},"content":"            .withPriceRange(new PriceRange(0, 20)).build()).build();","lastModifiedDate":"2022-04-08"},{"lineNumber":37,"author":{"gitId":"chuashihong"},"content":"    public static final Buyer BENSON \u003d new BuyerBuilder().withName(\"Benson Meier\")","lastModifiedDate":"2022-03-30"},{"lineNumber":38,"author":{"gitId":"Jacky142857"},"content":"            .withPhone(\"98765432\").withAppointment(\"2022-05-04-09-00\")","lastModifiedDate":"2022-03-19"},{"lineNumber":39,"author":{"gitId":"chuashihong"},"content":"            .withTags(\"owesMoney\", \"friends\").withProperty(","lastModifiedDate":"2022-04-08"},{"lineNumber":40,"author":{"gitId":"chuashihong"},"content":"            new PropertyToBuyBuilder().withHouse(","lastModifiedDate":"2022-04-08"},{"lineNumber":41,"author":{"gitId":"chuashihong"},"content":"                new HouseBuilder().withHouseType(HouseType.CONDOMINIUM).withLocation(\"utown\").build())","lastModifiedDate":"2022-04-08"},{"lineNumber":42,"author":{"gitId":"chuashihong"},"content":"            .withPriceRange(new PriceRange(0, 20)).build()).build();;","lastModifiedDate":"2022-04-08"},{"lineNumber":43,"author":{"gitId":"chuashihong"},"content":"    public static final Buyer CARL \u003d new BuyerBuilder().withName(\"Carl Kurz\")","lastModifiedDate":"2022-04-07"},{"lineNumber":44,"author":{"gitId":"janald99"},"content":"            .withPhone(\"95352563\").withProperty(","lastModifiedDate":"2022-04-07"},{"lineNumber":45,"author":{"gitId":"janald99"},"content":"            new PropertyToBuyBuilder().withHouse(","lastModifiedDate":"2022-04-07"},{"lineNumber":46,"author":{"gitId":"chuashihong"},"content":"                new HouseBuilder().withHouseType(HouseType.UNSPECIFIED).withLocation(\"bishan\").build())","lastModifiedDate":"2022-04-08"},{"lineNumber":47,"author":{"gitId":"janald99"},"content":"                    .withPriceRange(new PriceRange(0, 20)).build()).build();","lastModifiedDate":"2022-04-07"},{"lineNumber":48,"author":{"gitId":"chuashihong"},"content":"    public static final Buyer DANIEL \u003d new BuyerBuilder().withName(\"Daniel Meier\")","lastModifiedDate":"2022-04-07"},{"lineNumber":49,"author":{"gitId":"Jacky142857"},"content":"            .withPhone(\"87652533\").withTags(\"friends\").build();","lastModifiedDate":"2022-03-19"},{"lineNumber":50,"author":{"gitId":"chuashihong"},"content":"    public static final Buyer ELLE \u003d new BuyerBuilder().withName(\"Elle Meyer\")","lastModifiedDate":"2022-04-07"},{"lineNumber":51,"author":{"gitId":"Jacky142857"},"content":"            .withPhone(\"9482224\").build();","lastModifiedDate":"2022-03-19"},{"lineNumber":52,"author":{"gitId":"chuashihong"},"content":"    public static final Buyer FIONA \u003d new BuyerBuilder().withName(\"Fiona Kunz\")","lastModifiedDate":"2022-04-07"},{"lineNumber":53,"author":{"gitId":"Jacky142857"},"content":"            .withPhone(\"9482427\").build();","lastModifiedDate":"2022-03-19"},{"lineNumber":54,"author":{"gitId":"chuashihong"},"content":"    public static final Buyer GEORGE \u003d new BuyerBuilder().withName(\"George Best\")","lastModifiedDate":"2022-04-07"},{"lineNumber":55,"author":{"gitId":"Jacky142857"},"content":"            .withPhone(\"9482442\").build();","lastModifiedDate":"2022-03-19"},{"lineNumber":56,"author":{"gitId":"WJunHong"},"content":"","lastModifiedDate":"2022-03-16"},{"lineNumber":57,"author":{"gitId":"WJunHong"},"content":"    // Manually added","lastModifiedDate":"2022-03-16"},{"lineNumber":58,"author":{"gitId":"WJunHong"},"content":"    public static final Buyer HOON \u003d new BuyerBuilder().withName(\"Hoon Meier\")","lastModifiedDate":"2022-03-16"},{"lineNumber":59,"author":{"gitId":"Jacky142857"},"content":"            .withPhone(\"8482424\").build();","lastModifiedDate":"2022-03-19"},{"lineNumber":60,"author":{"gitId":"Jacky142857"},"content":"    public static final Buyer IDA \u003d new BuyerBuilder().withName(\"Ida Mueller\").withPhone(\"8482131\").build();","lastModifiedDate":"2022-03-19"},{"lineNumber":61,"author":{"gitId":"WJunHong"},"content":"","lastModifiedDate":"2022-03-16"},{"lineNumber":62,"author":{"gitId":"WJunHong"},"content":"    // Manually added - client\u0027s details found in {@code CommandTestUtil}","lastModifiedDate":"2022-03-16"},{"lineNumber":63,"author":{"gitId":"Jacky142857"},"content":"    public static final Buyer AMY \u003d new BuyerBuilder()","lastModifiedDate":"2022-03-19"},{"lineNumber":64,"author":{"gitId":"WJunHong"},"content":"            .withName(VALID_NAME_AMY).withPhone(VALID_PHONE_AMY)","lastModifiedDate":"2022-03-16"},{"lineNumber":65,"author":{"gitId":"WJunHong"},"content":"            .withAppointment(VALID_APPOINTMENT_AMY).withTags(VALID_TAG_FRIEND).build();","lastModifiedDate":"2022-03-16"},{"lineNumber":66,"author":{"gitId":"Jacky142857"},"content":"    public static final Buyer BOB \u003d new BuyerBuilder()","lastModifiedDate":"2022-03-19"},{"lineNumber":67,"author":{"gitId":"WJunHong"},"content":"            .withName(VALID_NAME_BOB).withPhone(VALID_PHONE_BOB)","lastModifiedDate":"2022-03-16"},{"lineNumber":68,"author":{"gitId":"WJunHong"},"content":"            .withAppointment(VALID_APPOINTMENT_BOB).withTags(VALID_TAG_HUSBAND, VALID_TAG_FRIEND).build();","lastModifiedDate":"2022-03-16"},{"lineNumber":69,"author":{"gitId":"WJunHong"},"content":"","lastModifiedDate":"2022-03-16"},{"lineNumber":70,"author":{"gitId":"WJunHong"},"content":"    public static final Buyer CHAD \u003d new BuyerBuilder()","lastModifiedDate":"2022-03-28"},{"lineNumber":71,"author":{"gitId":"WJunHong"},"content":"            .withName(VALID_NAME_CHAD).withPhone(VALID_PHONE_CHAD)","lastModifiedDate":"2022-03-28"},{"lineNumber":72,"author":{"gitId":"WJunHong"},"content":"            .withAppointment(VALID_APPOINTMENT_CHAD).withTags(VALID_TAG_HUSBAND, VALID_TAG_FRIEND)","lastModifiedDate":"2022-03-28"},{"lineNumber":73,"author":{"gitId":"WJunHong"},"content":"            .withProperty(VALID_PROPERTY_BUY_CHAD).build();","lastModifiedDate":"2022-03-28"},{"lineNumber":74,"author":{"gitId":"WJunHong"},"content":"","lastModifiedDate":"2022-03-28"},{"lineNumber":75,"author":{"gitId":"WJunHong"},"content":"    public static final String KEYWORD_MATCHING_MEIER \u003d \"Meier\"; // A keyword that matches MEIER","lastModifiedDate":"2022-03-16"},{"lineNumber":76,"author":{"gitId":"WJunHong"},"content":"","lastModifiedDate":"2022-03-16"},{"lineNumber":77,"author":{"gitId":"WJunHong"},"content":"    private TypicalBuyers() {} // prevents instantiation","lastModifiedDate":"2022-03-16"},{"lineNumber":78,"author":{"gitId":"WJunHong"},"content":"","lastModifiedDate":"2022-03-16"},{"lineNumber":79,"author":{"gitId":"WJunHong"},"content":"    /**","lastModifiedDate":"2022-03-16"},{"lineNumber":80,"author":{"gitId":"chuashihong"},"content":"     * Returns an {@code BuyerAddressBook} with all the typical buyers.","lastModifiedDate":"2022-03-30"},{"lineNumber":81,"author":{"gitId":"WJunHong"},"content":"     */","lastModifiedDate":"2022-03-16"},{"lineNumber":82,"author":{"gitId":"chuashihong"},"content":"    public static BuyerAddressBook getTypicalBuyerAddressBook() {","lastModifiedDate":"2022-03-30"},{"lineNumber":83,"author":{"gitId":"WJunHong"},"content":"        BuyerAddressBook ab \u003d new BuyerAddressBook();","lastModifiedDate":"2022-03-29"},{"lineNumber":84,"author":{"gitId":"WJunHong"},"content":"        for (Buyer buyer : getTypicalBuyers()) {","lastModifiedDate":"2022-03-16"},{"lineNumber":85,"author":{"gitId":"WJunHong"},"content":"            ab.addBuyer(buyer);","lastModifiedDate":"2022-03-29"},{"lineNumber":86,"author":{"gitId":"WJunHong"},"content":"        }","lastModifiedDate":"2022-03-16"},{"lineNumber":87,"author":{"gitId":"WJunHong"},"content":"        return ab;","lastModifiedDate":"2022-03-16"},{"lineNumber":88,"author":{"gitId":"WJunHong"},"content":"    }","lastModifiedDate":"2022-03-16"},{"lineNumber":89,"author":{"gitId":"WJunHong"},"content":"","lastModifiedDate":"2022-03-16"},{"lineNumber":90,"author":{"gitId":"WJunHong"},"content":"    public static List\u003cBuyer\u003e getTypicalBuyers() {","lastModifiedDate":"2022-03-16"},{"lineNumber":91,"author":{"gitId":"chuashihong"},"content":"        return new ArrayList\u003c\u003e(Arrays.asList(ALICE, BENSON, CARL, DANIEL, ELLE, FIONA, GEORGE));","lastModifiedDate":"2022-04-07"},{"lineNumber":92,"author":{"gitId":"WJunHong"},"content":"    }","lastModifiedDate":"2022-03-16"},{"lineNumber":93,"author":{"gitId":"WJunHong"},"content":"}","lastModifiedDate":"2022-03-16"}],"authorContributionMap":{"janald99":5,"WJunHong":47,"Jacky142857":10,"chuashihong":31}},{"path":"src/test/java/seedu/address/testutil/TypicalClients.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.testutil;","lastModifiedDate":"2016-09-13"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-13"},{"lineNumber":3,"author":{"gitId":"chuashihong"},"content":"//import static seedu.address.logic.commands.CommandTestUtil.VALID_APPOINTMENT_AMY;","lastModifiedDate":"2022-04-07"},{"lineNumber":4,"author":{"gitId":"chuashihong"},"content":"//import static seedu.address.logic.commands.CommandTestUtil.VALID_APPOINTMENT_BOB;","lastModifiedDate":"2022-04-07"},{"lineNumber":5,"author":{"gitId":"chuashihong"},"content":"//import static seedu.address.logic.commands.CommandTestUtil.VALID_NAME_AMY;","lastModifiedDate":"2022-04-07"},{"lineNumber":6,"author":{"gitId":"chuashihong"},"content":"//import static seedu.address.logic.commands.CommandTestUtil.VALID_NAME_BOB;","lastModifiedDate":"2022-04-07"},{"lineNumber":7,"author":{"gitId":"chuashihong"},"content":"//import static seedu.address.logic.commands.CommandTestUtil.VALID_PHONE_AMY;","lastModifiedDate":"2022-04-07"},{"lineNumber":8,"author":{"gitId":"chuashihong"},"content":"//import static seedu.address.logic.commands.CommandTestUtil.VALID_PHONE_BOB;","lastModifiedDate":"2022-04-07"},{"lineNumber":9,"author":{"gitId":"chuashihong"},"content":"//import static seedu.address.logic.commands.CommandTestUtil.VALID_TAG_FRIEND;","lastModifiedDate":"2022-04-07"},{"lineNumber":10,"author":{"gitId":"chuashihong"},"content":"//import static seedu.address.logic.commands.CommandTestUtil.VALID_TAG_HUSBAND;","lastModifiedDate":"2022-04-07"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-08-22"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import java.util.ArrayList;","lastModifiedDate":"2017-08-07"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import java.util.Arrays;","lastModifiedDate":"2017-08-07"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import java.util.List;","lastModifiedDate":"2017-08-07"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-08-07"},{"lineNumber":16,"author":{"gitId":"-"},"content":"import seedu.address.model.AddressBook;","lastModifiedDate":"2016-09-21"},{"lineNumber":17,"author":{"gitId":"cwnm"},"content":"import seedu.address.model.client.Client;","lastModifiedDate":"2022-03-04"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-13"},{"lineNumber":19,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-09-13"},{"lineNumber":20,"author":{"gitId":"cwnm"},"content":" * A utility class containing a list of {@code client} objects to be used in tests.","lastModifiedDate":"2022-03-04"},{"lineNumber":21,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-09-13"},{"lineNumber":22,"author":{"gitId":"cwnm"},"content":"public class TypicalClients {","lastModifiedDate":"2022-03-04"},{"lineNumber":23,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-13"},{"lineNumber":24,"author":{"gitId":"cwnm"},"content":"    public static final Client ALICE \u003d new ClientBuilder().withName(\"Alice Pauline\")","lastModifiedDate":"2022-03-04"},{"lineNumber":25,"author":{"gitId":"Jacky142857"},"content":"            .withPhone(\"94351253\").withAppointment(\"2022-05-01-12-00\")","lastModifiedDate":"2022-03-19"},{"lineNumber":26,"author":{"gitId":"-"},"content":"            .withTags(\"friends\").build();","lastModifiedDate":"2016-09-13"},{"lineNumber":27,"author":{"gitId":"cwnm"},"content":"    public static final Client BENSON \u003d new ClientBuilder().withName(\"Benson Meier\")","lastModifiedDate":"2022-03-04"},{"lineNumber":28,"author":{"gitId":"Jacky142857"},"content":"            .withPhone(\"98765432\").withAppointment(\"2022-05-04-09-00\")","lastModifiedDate":"2022-03-19"},{"lineNumber":29,"author":{"gitId":"-"},"content":"            .withTags(\"owesMoney\", \"friends\").build();","lastModifiedDate":"2016-09-13"},{"lineNumber":30,"author":{"gitId":"chuashihong"},"content":"    public static final Client CARL \u003d new ClientBuilder().withName(\"Carl Kurz\")","lastModifiedDate":"2022-03-05"},{"lineNumber":31,"author":{"gitId":"Jacky142857"},"content":"            .withPhone(\"95352563\").build();","lastModifiedDate":"2022-03-19"},{"lineNumber":32,"author":{"gitId":"chuashihong"},"content":"    public static final Client DANIEL \u003d new ClientBuilder().withName(\"Daniel Meier\")","lastModifiedDate":"2022-03-05"},{"lineNumber":33,"author":{"gitId":"Jacky142857"},"content":"            .withPhone(\"87652533\").withTags(\"friends\").build();","lastModifiedDate":"2022-03-19"},{"lineNumber":34,"author":{"gitId":"chuashihong"},"content":"    public static final Client ELLE \u003d new ClientBuilder().withName(\"Elle Meyer\")","lastModifiedDate":"2022-03-05"},{"lineNumber":35,"author":{"gitId":"Jacky142857"},"content":"            .withPhone(\"9482224\").build();","lastModifiedDate":"2022-03-19"},{"lineNumber":36,"author":{"gitId":"chuashihong"},"content":"    public static final Client FIONA \u003d new ClientBuilder().withName(\"Fiona Kunz\")","lastModifiedDate":"2022-03-05"},{"lineNumber":37,"author":{"gitId":"Jacky142857"},"content":"            .withPhone(\"9482427\").build();","lastModifiedDate":"2022-03-19"},{"lineNumber":38,"author":{"gitId":"chuashihong"},"content":"    public static final Client GEORGE \u003d new ClientBuilder().withName(\"George Best\")","lastModifiedDate":"2022-03-05"},{"lineNumber":39,"author":{"gitId":"Jacky142857"},"content":"            .withPhone(\"9482442\").build();","lastModifiedDate":"2022-03-19"},{"lineNumber":40,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-13"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    // Manually added","lastModifiedDate":"2016-09-13"},{"lineNumber":42,"author":{"gitId":"chuashihong"},"content":"    public static final Client HOON \u003d new ClientBuilder().withName(\"Hoon Meier\")","lastModifiedDate":"2022-03-05"},{"lineNumber":43,"author":{"gitId":"Jacky142857"},"content":"            .withPhone(\"8482424\").build();","lastModifiedDate":"2022-03-19"},{"lineNumber":44,"author":{"gitId":"Jacky142857"},"content":"    public static final Client IDA \u003d new ClientBuilder().withName(\"Ida Mueller\")","lastModifiedDate":"2022-03-19"},{"lineNumber":45,"author":{"gitId":"Jacky142857"},"content":"            .withPhone(\"8482131\").build();","lastModifiedDate":"2022-03-19"},{"lineNumber":46,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-08-22"},{"lineNumber":47,"author":{"gitId":"cwnm"},"content":"    // Manually added - client\u0027s details found in {@code CommandTestUtil}","lastModifiedDate":"2022-03-04"},{"lineNumber":48,"author":{"gitId":"chuashihong"},"content":"    //public static final Client AMY \u003d new ClientBuilder()","lastModifiedDate":"2022-04-07"},{"lineNumber":49,"author":{"gitId":"chuashihong"},"content":"    //        .withName(VALID_NAME_AMY).withPhone(VALID_PHONE_AMY)","lastModifiedDate":"2022-04-07"},{"lineNumber":50,"author":{"gitId":"chuashihong"},"content":"    //        .withAppointment(VALID_APPOINTMENT_AMY).withTags(VALID_TAG_FRIEND).build();","lastModifiedDate":"2022-04-07"},{"lineNumber":51,"author":{"gitId":"chuashihong"},"content":"    //public static final Client BOB \u003d new ClientBuilder()","lastModifiedDate":"2022-04-07"},{"lineNumber":52,"author":{"gitId":"chuashihong"},"content":"    //        .withName(VALID_NAME_BOB).withPhone(VALID_PHONE_BOB)","lastModifiedDate":"2022-04-07"},{"lineNumber":53,"author":{"gitId":"chuashihong"},"content":"    //        .withAppointment(VALID_APPOINTMENT_BOB).withTags(VALID_TAG_HUSBAND, VALID_TAG_FRIEND).build();","lastModifiedDate":"2022-04-07"},{"lineNumber":54,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-09-21"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    public static final String KEYWORD_MATCHING_MEIER \u003d \"Meier\"; // A keyword that matches MEIER","lastModifiedDate":"2017-09-21"},{"lineNumber":56,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-13"},{"lineNumber":57,"author":{"gitId":"cwnm"},"content":"    private TypicalClients() {} // prevents instantiation","lastModifiedDate":"2022-03-04"},{"lineNumber":58,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-20"},{"lineNumber":59,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-07-26"},{"lineNumber":60,"author":{"gitId":"cwnm"},"content":"     * Returns an {@code AddressBook} with all the typical clients.","lastModifiedDate":"2022-03-04"},{"lineNumber":61,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-07-26"},{"lineNumber":62,"author":{"gitId":"-"},"content":"    public static AddressBook getTypicalAddressBook() {","lastModifiedDate":"2017-08-05"},{"lineNumber":63,"author":{"gitId":"-"},"content":"        AddressBook ab \u003d new AddressBook();","lastModifiedDate":"2017-08-05"},{"lineNumber":64,"author":{"gitId":"cwnm"},"content":"        for (Client client : getTypicalclients()) {","lastModifiedDate":"2022-03-04"},{"lineNumber":65,"author":{"gitId":"cwnm"},"content":"            ab.addclient(client);","lastModifiedDate":"2022-03-04"},{"lineNumber":66,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-09-13"},{"lineNumber":67,"author":{"gitId":"-"},"content":"        return ab;","lastModifiedDate":"2016-09-24"},{"lineNumber":68,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":69,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-08-04"},{"lineNumber":70,"author":{"gitId":"cwnm"},"content":"    public static List\u003cClient\u003e getTypicalclients() {","lastModifiedDate":"2022-03-04"},{"lineNumber":71,"author":{"gitId":"-"},"content":"        return new ArrayList\u003c\u003e(Arrays.asList(ALICE, BENSON, CARL, DANIEL, ELLE, FIONA, GEORGE));","lastModifiedDate":"2017-08-07"},{"lineNumber":72,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-08-04"},{"lineNumber":73,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-09-13"}],"authorContributionMap":{"Jacky142857":10,"-":32,"cwnm":11,"chuashihong":20}},{"path":"src/test/java/seedu/address/testutil/TypicalIndexes.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.testutil;","lastModifiedDate":"2017-08-05"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-08-05"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.index.Index;","lastModifiedDate":"2017-08-05"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-08-05"},{"lineNumber":5,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-08-05"},{"lineNumber":6,"author":{"gitId":"-"},"content":" * A utility class containing a list of {@code Index} objects to be used in tests.","lastModifiedDate":"2017-08-05"},{"lineNumber":7,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-08-05"},{"lineNumber":8,"author":{"gitId":"-"},"content":"public class TypicalIndexes {","lastModifiedDate":"2017-08-05"},{"lineNumber":9,"author":{"gitId":"cwnm"},"content":"    public static final Index INDEX_FIRST_CLIENT \u003d Index.fromOneBased(1);","lastModifiedDate":"2022-03-04"},{"lineNumber":10,"author":{"gitId":"cwnm"},"content":"    public static final Index INDEX_SECOND_CLIENT \u003d Index.fromOneBased(2);","lastModifiedDate":"2022-03-04"},{"lineNumber":11,"author":{"gitId":"cwnm"},"content":"    public static final Index INDEX_THIRD_CLIENT \u003d Index.fromOneBased(3);","lastModifiedDate":"2022-03-04"},{"lineNumber":12,"author":{"gitId":"chuashihong"},"content":"    public static final Index INDEX_FIRST_BUYER \u003d Index.fromOneBased(1);","lastModifiedDate":"2022-03-30"},{"lineNumber":13,"author":{"gitId":"chuashihong"},"content":"    public static final Index INDEX_SECOND_BUYER \u003d Index.fromOneBased(2);","lastModifiedDate":"2022-03-30"},{"lineNumber":14,"author":{"gitId":"chuashihong"},"content":"    public static final Index INDEX_THIRD_BUYER \u003d Index.fromOneBased(3);","lastModifiedDate":"2022-03-30"},{"lineNumber":15,"author":{"gitId":"chuashihong"},"content":"    public static final Index INDEX_FORTH_BUYER \u003d Index.fromOneBased(4);","lastModifiedDate":"2022-04-08"},{"lineNumber":16,"author":{"gitId":"chuashihong"},"content":"    public static final Index INDEX_FIRST_SELLER \u003d Index.fromOneBased(1);","lastModifiedDate":"2022-03-30"},{"lineNumber":17,"author":{"gitId":"chuashihong"},"content":"    public static final Index INDEX_SECOND_SELLER \u003d Index.fromOneBased(2);","lastModifiedDate":"2022-03-30"},{"lineNumber":18,"author":{"gitId":"chuashihong"},"content":"    public static final Index INDEX_THIRD_SELLER \u003d Index.fromOneBased(3);","lastModifiedDate":"2022-03-30"},{"lineNumber":19,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-08-05"}],"authorContributionMap":{"-":9,"cwnm":3,"chuashihong":7}},{"path":"src/test/java/seedu/address/testutil/TypicalPropertyToBuy.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"WJunHong"},"content":"package seedu.address.testutil;","lastModifiedDate":"2022-04-07"},{"lineNumber":2,"author":{"gitId":"WJunHong"},"content":"","lastModifiedDate":"2022-04-07"},{"lineNumber":3,"author":{"gitId":"WJunHong"},"content":"import static seedu.address.logic.commands.PropertyCommandsTestUtil.VALID_HOUSE_TYPE_COL;","lastModifiedDate":"2022-04-07"},{"lineNumber":4,"author":{"gitId":"WJunHong"},"content":"import static seedu.address.logic.commands.PropertyCommandsTestUtil.VALID_HOUSE_TYPE_CONDO;","lastModifiedDate":"2022-04-07"},{"lineNumber":5,"author":{"gitId":"WJunHong"},"content":"import static seedu.address.logic.commands.PropertyCommandsTestUtil.VALID_HOUSE_TYPE_HDB;","lastModifiedDate":"2022-04-07"},{"lineNumber":6,"author":{"gitId":"WJunHong"},"content":"import static seedu.address.logic.commands.PropertyCommandsTestUtil.VALID_HOUSE_TYPE_MAN;","lastModifiedDate":"2022-04-07"},{"lineNumber":7,"author":{"gitId":"WJunHong"},"content":"import static seedu.address.logic.commands.PropertyCommandsTestUtil.VALID_HOUSE_TYPE_UND;","lastModifiedDate":"2022-04-07"},{"lineNumber":8,"author":{"gitId":"WJunHong"},"content":"import static seedu.address.logic.commands.PropertyCommandsTestUtil.VALID_LOCATION_1;","lastModifiedDate":"2022-04-07"},{"lineNumber":9,"author":{"gitId":"WJunHong"},"content":"import static seedu.address.logic.commands.PropertyCommandsTestUtil.VALID_LOCATION_2;","lastModifiedDate":"2022-04-07"},{"lineNumber":10,"author":{"gitId":"WJunHong"},"content":"import static seedu.address.logic.commands.PropertyCommandsTestUtil.VALID_LOCATION_3;","lastModifiedDate":"2022-04-07"},{"lineNumber":11,"author":{"gitId":"WJunHong"},"content":"import static seedu.address.logic.commands.PropertyCommandsTestUtil.VALID_LOCATION_4;","lastModifiedDate":"2022-04-07"},{"lineNumber":12,"author":{"gitId":"WJunHong"},"content":"import static seedu.address.logic.commands.PropertyCommandsTestUtil.VALID_PR_BIG;","lastModifiedDate":"2022-04-07"},{"lineNumber":13,"author":{"gitId":"WJunHong"},"content":"import static seedu.address.logic.commands.PropertyCommandsTestUtil.VALID_PR_MAX;","lastModifiedDate":"2022-04-07"},{"lineNumber":14,"author":{"gitId":"WJunHong"},"content":"import static seedu.address.logic.commands.PropertyCommandsTestUtil.VALID_PR_NORMAL;","lastModifiedDate":"2022-04-07"},{"lineNumber":15,"author":{"gitId":"WJunHong"},"content":"import static seedu.address.logic.commands.PropertyCommandsTestUtil.VALID_PR_ZERO;","lastModifiedDate":"2022-04-07"},{"lineNumber":16,"author":{"gitId":"WJunHong"},"content":"","lastModifiedDate":"2022-04-07"},{"lineNumber":17,"author":{"gitId":"WJunHong"},"content":"import seedu.address.model.property.House;","lastModifiedDate":"2022-04-07"},{"lineNumber":18,"author":{"gitId":"WJunHong"},"content":"import seedu.address.model.property.PropertyToBuy;","lastModifiedDate":"2022-04-07"},{"lineNumber":19,"author":{"gitId":"WJunHong"},"content":"","lastModifiedDate":"2022-04-07"},{"lineNumber":20,"author":{"gitId":"WJunHong"},"content":"public class TypicalPropertyToBuy {","lastModifiedDate":"2022-04-07"},{"lineNumber":21,"author":{"gitId":"WJunHong"},"content":"","lastModifiedDate":"2022-04-07"},{"lineNumber":22,"author":{"gitId":"WJunHong"},"content":"    public static final House HOUSE_ONE \u003d new HouseBuilder().withHouseType(VALID_HOUSE_TYPE_CONDO)","lastModifiedDate":"2022-04-07"},{"lineNumber":23,"author":{"gitId":"WJunHong"},"content":"            .withLocation(VALID_LOCATION_1).build();","lastModifiedDate":"2022-04-07"},{"lineNumber":24,"author":{"gitId":"WJunHong"},"content":"    public static final House HOUSE_TWO \u003d new HouseBuilder().withHouseType(VALID_HOUSE_TYPE_COL)","lastModifiedDate":"2022-04-07"},{"lineNumber":25,"author":{"gitId":"WJunHong"},"content":"            .withLocation(VALID_LOCATION_2).build();","lastModifiedDate":"2022-04-07"},{"lineNumber":26,"author":{"gitId":"WJunHong"},"content":"    public static final House HOUSE_THREE \u003d new HouseBuilder().withHouseType(VALID_HOUSE_TYPE_HDB)","lastModifiedDate":"2022-04-07"},{"lineNumber":27,"author":{"gitId":"WJunHong"},"content":"            .withLocation(VALID_LOCATION_3).build();","lastModifiedDate":"2022-04-07"},{"lineNumber":28,"author":{"gitId":"WJunHong"},"content":"    public static final House HOUSE_FOUR \u003d new HouseBuilder().withHouseType(VALID_HOUSE_TYPE_MAN)","lastModifiedDate":"2022-04-07"},{"lineNumber":29,"author":{"gitId":"WJunHong"},"content":"            .withLocation(VALID_LOCATION_4).build();","lastModifiedDate":"2022-04-07"},{"lineNumber":30,"author":{"gitId":"WJunHong"},"content":"    public static final House HOUSE_FIVE \u003d new HouseBuilder().withHouseType(VALID_HOUSE_TYPE_UND)","lastModifiedDate":"2022-04-07"},{"lineNumber":31,"author":{"gitId":"WJunHong"},"content":"            .withLocation(VALID_LOCATION_1).build();","lastModifiedDate":"2022-04-07"},{"lineNumber":32,"author":{"gitId":"WJunHong"},"content":"","lastModifiedDate":"2022-04-07"},{"lineNumber":33,"author":{"gitId":"WJunHong"},"content":"    public static final PropertyToBuy PROPERTY_TO_BUY_ONE \u003d new PropertyToBuyBuilder().withHouse(HOUSE_ONE)","lastModifiedDate":"2022-04-07"},{"lineNumber":34,"author":{"gitId":"WJunHong"},"content":"            .withPriceRange(VALID_PR_ZERO).build();","lastModifiedDate":"2022-04-07"},{"lineNumber":35,"author":{"gitId":"WJunHong"},"content":"    public static final PropertyToBuy PROPERTY_TO_BUY_TWO \u003d new PropertyToBuyBuilder().withHouse(HOUSE_TWO)","lastModifiedDate":"2022-04-07"},{"lineNumber":36,"author":{"gitId":"WJunHong"},"content":"            .withPriceRange(VALID_PR_NORMAL).build();","lastModifiedDate":"2022-04-07"},{"lineNumber":37,"author":{"gitId":"WJunHong"},"content":"    public static final PropertyToBuy PROPERTY_TO_BUY_THREE \u003d new PropertyToBuyBuilder().withHouse(HOUSE_THREE)","lastModifiedDate":"2022-04-07"},{"lineNumber":38,"author":{"gitId":"WJunHong"},"content":"            .withPriceRange(VALID_PR_NORMAL).build();","lastModifiedDate":"2022-04-07"},{"lineNumber":39,"author":{"gitId":"WJunHong"},"content":"    public static final PropertyToBuy PROPERTY_TO_BUY_FOUR \u003d new PropertyToBuyBuilder().withHouse(HOUSE_FOUR)","lastModifiedDate":"2022-04-07"},{"lineNumber":40,"author":{"gitId":"WJunHong"},"content":"            .withPriceRange(VALID_PR_BIG).build();","lastModifiedDate":"2022-04-07"},{"lineNumber":41,"author":{"gitId":"WJunHong"},"content":"    public static final PropertyToBuy PROPERTY_TO_BUY_FIVE \u003d new PropertyToBuyBuilder().withHouse(HOUSE_FIVE)","lastModifiedDate":"2022-04-07"},{"lineNumber":42,"author":{"gitId":"WJunHong"},"content":"            .withPriceRange(VALID_PR_MAX).build();","lastModifiedDate":"2022-04-07"},{"lineNumber":43,"author":{"gitId":"WJunHong"},"content":"}","lastModifiedDate":"2022-04-07"}],"authorContributionMap":{"WJunHong":43}},{"path":"src/test/java/seedu/address/testutil/TypicalPropertyToSell.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"WJunHong"},"content":"package seedu.address.testutil;","lastModifiedDate":"2022-04-07"},{"lineNumber":2,"author":{"gitId":"WJunHong"},"content":"","lastModifiedDate":"2022-04-07"},{"lineNumber":3,"author":{"gitId":"WJunHong"},"content":"import static seedu.address.logic.commands.PropertyCommandsTestUtil.VALID_ADDRESS_1;","lastModifiedDate":"2022-04-07"},{"lineNumber":4,"author":{"gitId":"WJunHong"},"content":"import static seedu.address.logic.commands.PropertyCommandsTestUtil.VALID_ADDRESS_2;","lastModifiedDate":"2022-04-07"},{"lineNumber":5,"author":{"gitId":"WJunHong"},"content":"import static seedu.address.logic.commands.PropertyCommandsTestUtil.VALID_ADDRESS_3;","lastModifiedDate":"2022-04-07"},{"lineNumber":6,"author":{"gitId":"WJunHong"},"content":"import static seedu.address.logic.commands.PropertyCommandsTestUtil.VALID_ADDRESS_4;","lastModifiedDate":"2022-04-07"},{"lineNumber":7,"author":{"gitId":"WJunHong"},"content":"import static seedu.address.logic.commands.PropertyCommandsTestUtil.VALID_HOUSE_TYPE_COL;","lastModifiedDate":"2022-04-07"},{"lineNumber":8,"author":{"gitId":"WJunHong"},"content":"import static seedu.address.logic.commands.PropertyCommandsTestUtil.VALID_HOUSE_TYPE_CONDO;","lastModifiedDate":"2022-04-07"},{"lineNumber":9,"author":{"gitId":"WJunHong"},"content":"import static seedu.address.logic.commands.PropertyCommandsTestUtil.VALID_HOUSE_TYPE_HDB;","lastModifiedDate":"2022-04-07"},{"lineNumber":10,"author":{"gitId":"WJunHong"},"content":"import static seedu.address.logic.commands.PropertyCommandsTestUtil.VALID_HOUSE_TYPE_MAN;","lastModifiedDate":"2022-04-07"},{"lineNumber":11,"author":{"gitId":"WJunHong"},"content":"import static seedu.address.logic.commands.PropertyCommandsTestUtil.VALID_HOUSE_TYPE_UND;","lastModifiedDate":"2022-04-07"},{"lineNumber":12,"author":{"gitId":"WJunHong"},"content":"import static seedu.address.logic.commands.PropertyCommandsTestUtil.VALID_LOCATION_1;","lastModifiedDate":"2022-04-07"},{"lineNumber":13,"author":{"gitId":"WJunHong"},"content":"import static seedu.address.logic.commands.PropertyCommandsTestUtil.VALID_LOCATION_2;","lastModifiedDate":"2022-04-07"},{"lineNumber":14,"author":{"gitId":"WJunHong"},"content":"import static seedu.address.logic.commands.PropertyCommandsTestUtil.VALID_LOCATION_3;","lastModifiedDate":"2022-04-07"},{"lineNumber":15,"author":{"gitId":"WJunHong"},"content":"import static seedu.address.logic.commands.PropertyCommandsTestUtil.VALID_LOCATION_4;","lastModifiedDate":"2022-04-07"},{"lineNumber":16,"author":{"gitId":"WJunHong"},"content":"import static seedu.address.logic.commands.PropertyCommandsTestUtil.VALID_PR_BIG;","lastModifiedDate":"2022-04-07"},{"lineNumber":17,"author":{"gitId":"WJunHong"},"content":"import static seedu.address.logic.commands.PropertyCommandsTestUtil.VALID_PR_MAX;","lastModifiedDate":"2022-04-07"},{"lineNumber":18,"author":{"gitId":"WJunHong"},"content":"import static seedu.address.logic.commands.PropertyCommandsTestUtil.VALID_PR_NORMAL;","lastModifiedDate":"2022-04-07"},{"lineNumber":19,"author":{"gitId":"WJunHong"},"content":"import static seedu.address.logic.commands.PropertyCommandsTestUtil.VALID_PR_ZERO;","lastModifiedDate":"2022-04-07"},{"lineNumber":20,"author":{"gitId":"WJunHong"},"content":"","lastModifiedDate":"2022-04-07"},{"lineNumber":21,"author":{"gitId":"WJunHong"},"content":"import seedu.address.model.property.House;","lastModifiedDate":"2022-04-07"},{"lineNumber":22,"author":{"gitId":"WJunHong"},"content":"import seedu.address.model.property.PropertyToSell;","lastModifiedDate":"2022-04-07"},{"lineNumber":23,"author":{"gitId":"WJunHong"},"content":"","lastModifiedDate":"2022-04-07"},{"lineNumber":24,"author":{"gitId":"WJunHong"},"content":"public class TypicalPropertyToSell {","lastModifiedDate":"2022-04-07"},{"lineNumber":25,"author":{"gitId":"WJunHong"},"content":"","lastModifiedDate":"2022-04-07"},{"lineNumber":26,"author":{"gitId":"WJunHong"},"content":"    public static final House HOUSE_ONE \u003d new HouseBuilder().withHouseType(VALID_HOUSE_TYPE_CONDO)","lastModifiedDate":"2022-04-07"},{"lineNumber":27,"author":{"gitId":"WJunHong"},"content":"            .withLocation(VALID_LOCATION_1).build();","lastModifiedDate":"2022-04-07"},{"lineNumber":28,"author":{"gitId":"WJunHong"},"content":"    public static final House HOUSE_TWO \u003d new HouseBuilder().withHouseType(VALID_HOUSE_TYPE_COL)","lastModifiedDate":"2022-04-07"},{"lineNumber":29,"author":{"gitId":"WJunHong"},"content":"            .withLocation(VALID_LOCATION_2).build();","lastModifiedDate":"2022-04-07"},{"lineNumber":30,"author":{"gitId":"WJunHong"},"content":"    public static final House HOUSE_THREE \u003d new HouseBuilder().withHouseType(VALID_HOUSE_TYPE_HDB)","lastModifiedDate":"2022-04-07"},{"lineNumber":31,"author":{"gitId":"WJunHong"},"content":"            .withLocation(VALID_LOCATION_3).build();","lastModifiedDate":"2022-04-07"},{"lineNumber":32,"author":{"gitId":"WJunHong"},"content":"    public static final House HOUSE_FOUR \u003d new HouseBuilder().withHouseType(VALID_HOUSE_TYPE_MAN)","lastModifiedDate":"2022-04-07"},{"lineNumber":33,"author":{"gitId":"WJunHong"},"content":"            .withLocation(VALID_LOCATION_4).build();","lastModifiedDate":"2022-04-07"},{"lineNumber":34,"author":{"gitId":"WJunHong"},"content":"    public static final House HOUSE_FIVE \u003d new HouseBuilder().withHouseType(VALID_HOUSE_TYPE_UND)","lastModifiedDate":"2022-04-07"},{"lineNumber":35,"author":{"gitId":"WJunHong"},"content":"            .withLocation(VALID_LOCATION_1).build();","lastModifiedDate":"2022-04-07"},{"lineNumber":36,"author":{"gitId":"WJunHong"},"content":"","lastModifiedDate":"2022-04-07"},{"lineNumber":37,"author":{"gitId":"WJunHong"},"content":"    public static final PropertyToSell PROPERTY_TO_SELL_ONE \u003d new PropertyToSellBuilder().withHouse(HOUSE_ONE)","lastModifiedDate":"2022-04-07"},{"lineNumber":38,"author":{"gitId":"WJunHong"},"content":"            .withPriceRange(VALID_PR_ZERO).withAddress(VALID_ADDRESS_1).build();","lastModifiedDate":"2022-04-07"},{"lineNumber":39,"author":{"gitId":"WJunHong"},"content":"    public static final PropertyToSell PROPERTY_TO_SELL_TWO \u003d new PropertyToSellBuilder().withHouse(HOUSE_TWO)","lastModifiedDate":"2022-04-07"},{"lineNumber":40,"author":{"gitId":"WJunHong"},"content":"            .withPriceRange(VALID_PR_NORMAL).withAddress(VALID_ADDRESS_2).build();","lastModifiedDate":"2022-04-07"},{"lineNumber":41,"author":{"gitId":"WJunHong"},"content":"    public static final PropertyToSell PROPERTY_TO_SELL_THREE \u003d new PropertyToSellBuilder().withHouse(HOUSE_THREE)","lastModifiedDate":"2022-04-07"},{"lineNumber":42,"author":{"gitId":"WJunHong"},"content":"            .withPriceRange(VALID_PR_NORMAL).withAddress(VALID_ADDRESS_3).build();","lastModifiedDate":"2022-04-07"},{"lineNumber":43,"author":{"gitId":"WJunHong"},"content":"    public static final PropertyToSell PROPERTY_TO_SELL_FOUR \u003d new PropertyToSellBuilder().withHouse(HOUSE_FOUR)","lastModifiedDate":"2022-04-07"},{"lineNumber":44,"author":{"gitId":"WJunHong"},"content":"            .withPriceRange(VALID_PR_BIG).withAddress(VALID_ADDRESS_4).build();","lastModifiedDate":"2022-04-07"},{"lineNumber":45,"author":{"gitId":"WJunHong"},"content":"    public static final PropertyToSell PROPERTY_TO_SELL_FIVE \u003d new PropertyToSellBuilder().withHouse(HOUSE_FIVE)","lastModifiedDate":"2022-04-07"},{"lineNumber":46,"author":{"gitId":"WJunHong"},"content":"            .withPriceRange(VALID_PR_MAX).withAddress(VALID_ADDRESS_1).build();","lastModifiedDate":"2022-04-07"},{"lineNumber":47,"author":{"gitId":"WJunHong"},"content":"}","lastModifiedDate":"2022-04-07"}],"authorContributionMap":{"WJunHong":47}},{"path":"src/test/java/seedu/address/testutil/TypicalSellers.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"cwnm"},"content":"package seedu.address.testutil;","lastModifiedDate":"2022-03-17"},{"lineNumber":2,"author":{"gitId":"cwnm"},"content":"","lastModifiedDate":"2022-03-17"},{"lineNumber":3,"author":{"gitId":"chuashihong"},"content":"import static seedu.address.logic.commands.SellerCommandTestUtil.VALID_APPOINTMENT_AMY;","lastModifiedDate":"2022-04-07"},{"lineNumber":4,"author":{"gitId":"chuashihong"},"content":"import static seedu.address.logic.commands.SellerCommandTestUtil.VALID_APPOINTMENT_BOB;","lastModifiedDate":"2022-04-07"},{"lineNumber":5,"author":{"gitId":"chuashihong"},"content":"import static seedu.address.logic.commands.SellerCommandTestUtil.VALID_NAME_AMY;","lastModifiedDate":"2022-04-07"},{"lineNumber":6,"author":{"gitId":"chuashihong"},"content":"import static seedu.address.logic.commands.SellerCommandTestUtil.VALID_NAME_BOB;","lastModifiedDate":"2022-04-07"},{"lineNumber":7,"author":{"gitId":"chuashihong"},"content":"import static seedu.address.logic.commands.SellerCommandTestUtil.VALID_PHONE_AMY;","lastModifiedDate":"2022-04-07"},{"lineNumber":8,"author":{"gitId":"chuashihong"},"content":"import static seedu.address.logic.commands.SellerCommandTestUtil.VALID_PHONE_BOB;","lastModifiedDate":"2022-04-07"},{"lineNumber":9,"author":{"gitId":"chuashihong"},"content":"import static seedu.address.logic.commands.SellerCommandTestUtil.VALID_TAG_FRIEND;","lastModifiedDate":"2022-04-07"},{"lineNumber":10,"author":{"gitId":"chuashihong"},"content":"import static seedu.address.logic.commands.SellerCommandTestUtil.VALID_TAG_HUSBAND;","lastModifiedDate":"2022-04-07"},{"lineNumber":11,"author":{"gitId":"cwnm"},"content":"","lastModifiedDate":"2022-03-17"},{"lineNumber":12,"author":{"gitId":"cwnm"},"content":"import java.util.ArrayList;","lastModifiedDate":"2022-03-17"},{"lineNumber":13,"author":{"gitId":"cwnm"},"content":"import java.util.Arrays;","lastModifiedDate":"2022-03-17"},{"lineNumber":14,"author":{"gitId":"cwnm"},"content":"import java.util.List;","lastModifiedDate":"2022-03-17"},{"lineNumber":15,"author":{"gitId":"cwnm"},"content":"","lastModifiedDate":"2022-03-17"},{"lineNumber":16,"author":{"gitId":"chuashihong"},"content":"import seedu.address.model.SellerAddressBook;","lastModifiedDate":"2022-03-30"},{"lineNumber":17,"author":{"gitId":"janald99"},"content":"import seedu.address.model.property.HouseType;","lastModifiedDate":"2022-04-07"},{"lineNumber":18,"author":{"gitId":"janald99"},"content":"import seedu.address.model.property.PriceRange;","lastModifiedDate":"2022-04-07"},{"lineNumber":19,"author":{"gitId":"cwnm"},"content":"import seedu.address.model.seller.Seller;","lastModifiedDate":"2022-03-17"},{"lineNumber":20,"author":{"gitId":"cwnm"},"content":"","lastModifiedDate":"2022-03-17"},{"lineNumber":21,"author":{"gitId":"cwnm"},"content":"/**","lastModifiedDate":"2022-03-17"},{"lineNumber":22,"author":{"gitId":"cwnm"},"content":" * A utility class containing a list of {@code client} objects to be used in tests.","lastModifiedDate":"2022-03-17"},{"lineNumber":23,"author":{"gitId":"cwnm"},"content":" */","lastModifiedDate":"2022-03-17"},{"lineNumber":24,"author":{"gitId":"cwnm"},"content":"public class TypicalSellers {","lastModifiedDate":"2022-03-17"},{"lineNumber":25,"author":{"gitId":"cwnm"},"content":"","lastModifiedDate":"2022-03-17"},{"lineNumber":26,"author":{"gitId":"cwnm"},"content":"    // Sellers who are yet to indicate any properties to sell","lastModifiedDate":"2022-03-17"},{"lineNumber":27,"author":{"gitId":"chuashihong"},"content":"    public static final Seller ALICE \u003d new SellerBuilder().withName(\"Alice Pauline\")","lastModifiedDate":"2022-04-07"},{"lineNumber":28,"author":{"gitId":"Jacky142857"},"content":"            .withPhone(\"94351253\").withAppointment(\"2022-05-01-12-00\")","lastModifiedDate":"2022-03-19"},{"lineNumber":29,"author":{"gitId":"janald99"},"content":"            .withTags(\"friends\").withProperty(","lastModifiedDate":"2022-04-07"},{"lineNumber":30,"author":{"gitId":"janald99"},"content":"                    new PropertyToSellBuilder().withHouse(","lastModifiedDate":"2022-04-07"},{"lineNumber":31,"author":{"gitId":"chuashihong"},"content":"                            new HouseBuilder().withHouseType(HouseType.BUNGALOW).withLocation(\"bishan\").build())","lastModifiedDate":"2022-04-07"},{"lineNumber":32,"author":{"gitId":"janald99"},"content":"                                    .withAddress(\"Bishan Street 5\")","lastModifiedDate":"2022-04-07"},{"lineNumber":33,"author":{"gitId":"janald99"},"content":"                                            .withPriceRange(new PriceRange(10, 20)).build()).build();","lastModifiedDate":"2022-04-07"},{"lineNumber":34,"author":{"gitId":"janald99"},"content":"","lastModifiedDate":"2022-04-07"},{"lineNumber":35,"author":{"gitId":"chuashihong"},"content":"    public static final Seller BENSON \u003d new SellerBuilder().withName(\"Benson Meier\")","lastModifiedDate":"2022-03-30"},{"lineNumber":36,"author":{"gitId":"Jacky142857"},"content":"            .withPhone(\"98765432\").withAppointment(\"2022-05-04-09-00\")","lastModifiedDate":"2022-03-19"},{"lineNumber":37,"author":{"gitId":"janald99"},"content":"            .withTags(\"owesMoney\", \"friends\").withProperty(","lastModifiedDate":"2022-04-07"},{"lineNumber":38,"author":{"gitId":"janald99"},"content":"            new PropertyToSellBuilder().withHouse(","lastModifiedDate":"2022-04-07"},{"lineNumber":39,"author":{"gitId":"chuashihong"},"content":"                new HouseBuilder().withHouseType(HouseType.HDB_FLAT).withLocation(\"bishan\").build())","lastModifiedDate":"2022-04-07"},{"lineNumber":40,"author":{"gitId":"janald99"},"content":"                .withAddress(\"Bishan Ave 3 Blk 123\")","lastModifiedDate":"2022-04-07"},{"lineNumber":41,"author":{"gitId":"janald99"},"content":"                .withPriceRange(new PriceRange(10, 20)).build()).build();","lastModifiedDate":"2022-04-07"},{"lineNumber":42,"author":{"gitId":"janald99"},"content":"","lastModifiedDate":"2022-04-07"},{"lineNumber":43,"author":{"gitId":"chuashihong"},"content":"    public static final Seller CARL \u003d new SellerBuilder().withName(\"Carl Kurz\")","lastModifiedDate":"2022-04-07"},{"lineNumber":44,"author":{"gitId":"janald99"},"content":"            .withPhone(\"95352563\").withProperty(","lastModifiedDate":"2022-04-07"},{"lineNumber":45,"author":{"gitId":"janald99"},"content":"            new PropertyToSellBuilder().withHouse(","lastModifiedDate":"2022-04-07"},{"lineNumber":46,"author":{"gitId":"chuashihong"},"content":"                new HouseBuilder().withHouseType(HouseType.COLONIA).withLocation(\"clementi\").build())","lastModifiedDate":"2022-04-07"},{"lineNumber":47,"author":{"gitId":"janald99"},"content":"                .withAddress(\"Clementi Town block 7\")","lastModifiedDate":"2022-04-07"},{"lineNumber":48,"author":{"gitId":"janald99"},"content":"                .withPriceRange(new PriceRange(10, 20)).build()).build();","lastModifiedDate":"2022-04-07"},{"lineNumber":49,"author":{"gitId":"janald99"},"content":"","lastModifiedDate":"2022-04-07"},{"lineNumber":50,"author":{"gitId":"chuashihong"},"content":"    public static final Seller DANIEL \u003d new SellerBuilder().withName(\"Daniel Meier\")","lastModifiedDate":"2022-04-07"},{"lineNumber":51,"author":{"gitId":"janald99"},"content":"            .withPhone(\"87652533\").withTags(\"friends\").withProperty(","lastModifiedDate":"2022-04-07"},{"lineNumber":52,"author":{"gitId":"janald99"},"content":"            new PropertyToSellBuilder().withHouse(","lastModifiedDate":"2022-04-07"},{"lineNumber":53,"author":{"gitId":"chuashihong"},"content":"                new HouseBuilder().withHouseType(HouseType.BUNGALOW).withLocation(\"bishan\").build())","lastModifiedDate":"2022-04-07"},{"lineNumber":54,"author":{"gitId":"janald99"},"content":"                .withAddress(\"Bishan District 8\")","lastModifiedDate":"2022-04-07"},{"lineNumber":55,"author":{"gitId":"janald99"},"content":"                .withPriceRange(new PriceRange(30, 50)).build()).build();","lastModifiedDate":"2022-04-07"},{"lineNumber":56,"author":{"gitId":"janald99"},"content":"","lastModifiedDate":"2022-04-07"},{"lineNumber":57,"author":{"gitId":"chuashihong"},"content":"    public static final Seller ELLE \u003d new SellerBuilder().withName(\"Elle Meyer\")","lastModifiedDate":"2022-04-07"},{"lineNumber":58,"author":{"gitId":"janald99"},"content":"            .withPhone(\"9482224\").withProperty(","lastModifiedDate":"2022-04-07"},{"lineNumber":59,"author":{"gitId":"janald99"},"content":"            new PropertyToSellBuilder().withHouse(","lastModifiedDate":"2022-04-07"},{"lineNumber":60,"author":{"gitId":"chuashihong"},"content":"                new HouseBuilder().withHouseType(HouseType.APARTMENT).withLocation(\"ang mo kio\").build())","lastModifiedDate":"2022-04-07"},{"lineNumber":61,"author":{"gitId":"janald99"},"content":"                .withAddress(\"Ang Mo Kio Ave 3\")","lastModifiedDate":"2022-04-07"},{"lineNumber":62,"author":{"gitId":"janald99"},"content":"                .withPriceRange(new PriceRange(10, 20)).build()).build();","lastModifiedDate":"2022-04-07"},{"lineNumber":63,"author":{"gitId":"janald99"},"content":"","lastModifiedDate":"2022-04-07"},{"lineNumber":64,"author":{"gitId":"chuashihong"},"content":"    public static final Seller FIONA \u003d new SellerBuilder().withName(\"Fiona Kunz\")","lastModifiedDate":"2022-04-07"},{"lineNumber":65,"author":{"gitId":"janald99"},"content":"            .withPhone(\"9482427\").withProperty(","lastModifiedDate":"2022-04-07"},{"lineNumber":66,"author":{"gitId":"janald99"},"content":"            new PropertyToSellBuilder().withHouse(","lastModifiedDate":"2022-04-07"},{"lineNumber":67,"author":{"gitId":"chuashihong"},"content":"                new HouseBuilder().withHouseType(HouseType.BUNGALOW).withLocation(\"bishan\").build())","lastModifiedDate":"2022-04-07"},{"lineNumber":68,"author":{"gitId":"janald99"},"content":"                .withAddress(\"Bishan Street 11\")","lastModifiedDate":"2022-04-07"},{"lineNumber":69,"author":{"gitId":"janald99"},"content":"                .withPriceRange(new PriceRange(20, 25)).build()).build();","lastModifiedDate":"2022-04-07"},{"lineNumber":70,"author":{"gitId":"janald99"},"content":"","lastModifiedDate":"2022-04-07"},{"lineNumber":71,"author":{"gitId":"chuashihong"},"content":"    public static final Seller GEORGE \u003d new SellerBuilder().withName(\"George Best\")","lastModifiedDate":"2022-04-07"},{"lineNumber":72,"author":{"gitId":"Jacky142857"},"content":"            .withPhone(\"9482442\").build();","lastModifiedDate":"2022-03-19"},{"lineNumber":73,"author":{"gitId":"cwnm"},"content":"","lastModifiedDate":"2022-03-17"},{"lineNumber":74,"author":{"gitId":"cwnm"},"content":"    // Manually added","lastModifiedDate":"2022-03-17"},{"lineNumber":75,"author":{"gitId":"cwnm"},"content":"    public static final Seller HOON \u003d new SellerBuilder().withName(\"Hoon Meier\")","lastModifiedDate":"2022-03-17"},{"lineNumber":76,"author":{"gitId":"Jacky142857"},"content":"            .withPhone(\"8482424\").build();","lastModifiedDate":"2022-03-19"},{"lineNumber":77,"author":{"gitId":"cwnm"},"content":"    public static final Seller IDA \u003d new SellerBuilder().withName(\"Ida Mueller\").withPhone(\"8482131\")","lastModifiedDate":"2022-03-17"},{"lineNumber":78,"author":{"gitId":"Jacky142857"},"content":"            .build();","lastModifiedDate":"2022-03-19"},{"lineNumber":79,"author":{"gitId":"cwnm"},"content":"","lastModifiedDate":"2022-03-17"},{"lineNumber":80,"author":{"gitId":"cwnm"},"content":"    // Manually added - client\u0027s details found in {@code CommandTestUtil}","lastModifiedDate":"2022-03-17"},{"lineNumber":81,"author":{"gitId":"Jacky142857"},"content":"    public static final Seller AMY \u003d new SellerBuilder()","lastModifiedDate":"2022-03-19"},{"lineNumber":82,"author":{"gitId":"cwnm"},"content":"            .withName(VALID_NAME_AMY).withPhone(VALID_PHONE_AMY)","lastModifiedDate":"2022-03-17"},{"lineNumber":83,"author":{"gitId":"cwnm"},"content":"            .withAppointment(VALID_APPOINTMENT_AMY).withTags(VALID_TAG_FRIEND).build();","lastModifiedDate":"2022-03-17"},{"lineNumber":84,"author":{"gitId":"Jacky142857"},"content":"    public static final Seller BOB \u003d new SellerBuilder()","lastModifiedDate":"2022-03-19"},{"lineNumber":85,"author":{"gitId":"cwnm"},"content":"            .withName(VALID_NAME_BOB).withPhone(VALID_PHONE_BOB)","lastModifiedDate":"2022-03-17"},{"lineNumber":86,"author":{"gitId":"cwnm"},"content":"            .withAppointment(VALID_APPOINTMENT_BOB).withTags(VALID_TAG_HUSBAND, VALID_TAG_FRIEND).build();","lastModifiedDate":"2022-03-17"},{"lineNumber":87,"author":{"gitId":"cwnm"},"content":"","lastModifiedDate":"2022-03-17"},{"lineNumber":88,"author":{"gitId":"cwnm"},"content":"    public static final String KEYWORD_MATCHING_MEIER \u003d \"Meier\"; // A keyword that matches MEIER","lastModifiedDate":"2022-03-17"},{"lineNumber":89,"author":{"gitId":"cwnm"},"content":"","lastModifiedDate":"2022-03-17"},{"lineNumber":90,"author":{"gitId":"cwnm"},"content":"    private TypicalSellers() {} // prevents instantiation","lastModifiedDate":"2022-03-17"},{"lineNumber":91,"author":{"gitId":"cwnm"},"content":"","lastModifiedDate":"2022-03-17"},{"lineNumber":92,"author":{"gitId":"cwnm"},"content":"    /**","lastModifiedDate":"2022-03-17"},{"lineNumber":93,"author":{"gitId":"chuashihong"},"content":"     * Returns an {@code SellerAddressBook} with all the typical sellers.","lastModifiedDate":"2022-03-30"},{"lineNumber":94,"author":{"gitId":"cwnm"},"content":"     */","lastModifiedDate":"2022-03-17"},{"lineNumber":95,"author":{"gitId":"chuashihong"},"content":"    public static SellerAddressBook getTypicalSellerAddressBook() {","lastModifiedDate":"2022-03-30"},{"lineNumber":96,"author":{"gitId":"chuashihong"},"content":"        SellerAddressBook ab \u003d new SellerAddressBook();","lastModifiedDate":"2022-03-30"},{"lineNumber":97,"author":{"gitId":"cwnm"},"content":"        for (Seller seller : getTypicalSellers()) {","lastModifiedDate":"2022-03-17"},{"lineNumber":98,"author":{"gitId":"chuashihong"},"content":"            ab.addSeller(seller);","lastModifiedDate":"2022-03-30"},{"lineNumber":99,"author":{"gitId":"cwnm"},"content":"        }","lastModifiedDate":"2022-03-17"},{"lineNumber":100,"author":{"gitId":"cwnm"},"content":"        return ab;","lastModifiedDate":"2022-03-17"},{"lineNumber":101,"author":{"gitId":"cwnm"},"content":"    }","lastModifiedDate":"2022-03-17"},{"lineNumber":102,"author":{"gitId":"cwnm"},"content":"","lastModifiedDate":"2022-03-17"},{"lineNumber":103,"author":{"gitId":"chuashihong"},"content":"","lastModifiedDate":"2022-03-30"},{"lineNumber":104,"author":{"gitId":"cwnm"},"content":"    public static List\u003cSeller\u003e getTypicalSellers() {","lastModifiedDate":"2022-03-17"},{"lineNumber":105,"author":{"gitId":"chuashihong"},"content":"        return new ArrayList\u003c\u003e(Arrays.asList(ALICE, BENSON, CARL, DANIEL, ELLE, FIONA, GEORGE));","lastModifiedDate":"2022-04-07"},{"lineNumber":106,"author":{"gitId":"cwnm"},"content":"    }","lastModifiedDate":"2022-03-17"},{"lineNumber":107,"author":{"gitId":"cwnm"},"content":"}","lastModifiedDate":"2022-03-17"}],"authorContributionMap":{"janald99":32,"Jacky142857":7,"cwnm":40,"chuashihong":28}}]
