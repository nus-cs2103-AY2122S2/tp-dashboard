[{"path":"README.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"hieunm1821"},"content":"[![CI Status](https://github.com/AY2122S2-CS2103-F10-2/tp/workflows/Java%20CI/badge.svg)](https://github.com/AY2122S2-CS2103-F10-2/tp/actions)","lastModifiedDate":"2022-03-03"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":3,"author":{"gitId":"zxgoh"},"content":"\u003cimg src\u003d\"docs/images/FoodOnWheels.png\" width\u003d65% height\u003d65%\u003e","lastModifiedDate":"2022-02-24"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":5,"author":{"gitId":"xzzz3"},"content":"* This is **a project for Food Delivery Managers**.\u003cbr\u003e","lastModifiedDate":"2022-02-24"},{"lineNumber":6,"author":{"gitId":"-"},"content":"  Example usages:","lastModifiedDate":"2020-05-23"},{"lineNumber":7,"author":{"gitId":"xzzz3"},"content":"  * as a delivery management application","lastModifiedDate":"2022-02-24"},{"lineNumber":8,"author":{"gitId":"-"},"content":"  * as a case study","lastModifiedDate":"2020-05-23"},{"lineNumber":9,"author":{"gitId":"xzzz3"},"content":"* The project simulates an ongoing software project for a desktop application (called _FoodOnWheels_) used for managing food deliveries.","lastModifiedDate":"2022-02-24"},{"lineNumber":10,"author":{"gitId":"-"},"content":"  * It is **written in OOP fashion**. It provides a **reasonably well-written** code base **bigger** (around 6 KLoC) than what students usually write in beginner-level SE modules, without being overwhelmingly big.","lastModifiedDate":"2020-05-23"},{"lineNumber":11,"author":{"gitId":"-"},"content":"  * It comes with a **reasonable level of user and developer documentation**.","lastModifiedDate":"2020-05-23"},{"lineNumber":12,"author":{"gitId":"xzzz3"},"content":"* It is named `FoodOnWheels` (`FOW` for short) because it is made for the management of food deliveries.","lastModifiedDate":"2022-02-24"},{"lineNumber":13,"author":{"gitId":"-"},"content":"* For the detailed documentation of this project, see the **[Address Book Product Website](https://se-education.org/addressbook-level3)**.","lastModifiedDate":"2020-05-23"},{"lineNumber":14,"author":{"gitId":"-"},"content":"* This project is a **part of the se-education.org** initiative. If you would like to contribute code to this project, see [se-education.org](https://se-education.org#https://se-education.org/#contributing) for more info.","lastModifiedDate":"2020-05-23"},{"lineNumber":15,"author":{"gitId":"zxgoh"},"content":"","lastModifiedDate":"2022-03-04"}],"authorContributionMap":{"hieunm1821":1,"xzzz3":4,"-":8,"zxgoh":2}},{"path":"build.gradle","fileType":"other","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"plugins {","lastModifiedDate":"2016-08-29"},{"lineNumber":2,"author":{"gitId":"-"},"content":"    id \u0027java\u0027","lastModifiedDate":"2017-12-05"},{"lineNumber":3,"author":{"gitId":"-"},"content":"    id \u0027checkstyle\u0027","lastModifiedDate":"2017-12-05"},{"lineNumber":4,"author":{"gitId":"-"},"content":"    id \u0027com.github.johnrengelman.shadow\u0027 version \u00274.0.4\u0027","lastModifiedDate":"2019-02-28"},{"lineNumber":5,"author":{"gitId":"-"},"content":"    id \u0027application\u0027","lastModifiedDate":"2016-12-08"},{"lineNumber":6,"author":{"gitId":"-"},"content":"    id \u0027jacoco\u0027","lastModifiedDate":"2020-08-07"},{"lineNumber":7,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-29"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-29"},{"lineNumber":9,"author":{"gitId":"-"},"content":"mainClassName \u003d \u0027seedu.address.Main\u0027","lastModifiedDate":"2019-02-08"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-08"},{"lineNumber":11,"author":{"gitId":"-"},"content":"sourceCompatibility \u003d JavaVersion.VERSION_11","lastModifiedDate":"2019-02-20"},{"lineNumber":12,"author":{"gitId":"-"},"content":"targetCompatibility \u003d JavaVersion.VERSION_11","lastModifiedDate":"2019-02-20"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":14,"author":{"gitId":"-"},"content":"repositories {","lastModifiedDate":"2016-08-08"},{"lineNumber":15,"author":{"gitId":"-"},"content":"    mavenCentral()","lastModifiedDate":"2016-08-08"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    maven { url \u0027https://oss.sonatype.org/content/repositories/snapshots/\u0027 }","lastModifiedDate":"2018-04-11"},{"lineNumber":17,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":19,"author":{"gitId":"-"},"content":"checkstyle {","lastModifiedDate":"2016-10-12"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    toolVersion \u003d \u00278.29\u0027","lastModifiedDate":"2020-05-27"},{"lineNumber":21,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-10-12"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-12"},{"lineNumber":23,"author":{"gitId":"-"},"content":"test {","lastModifiedDate":"2018-03-23"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    useJUnitPlatform()","lastModifiedDate":"2018-03-23"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    finalizedBy jacocoTestReport","lastModifiedDate":"2020-08-07"},{"lineNumber":26,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-08-07"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-08-07"},{"lineNumber":28,"author":{"gitId":"-"},"content":"task coverage(type: JacocoReport) {","lastModifiedDate":"2020-08-07"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    sourceDirectories.from files(sourceSets.main.allSource.srcDirs)","lastModifiedDate":"2020-08-07"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    classDirectories.from files(sourceSets.main.output)","lastModifiedDate":"2020-08-07"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    executionData.from files(jacocoTestReport.executionData)","lastModifiedDate":"2020-08-07"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    afterEvaluate {","lastModifiedDate":"2020-08-07"},{"lineNumber":33,"author":{"gitId":"-"},"content":"        classDirectories.from files(classDirectories.files.collect {","lastModifiedDate":"2020-08-07"},{"lineNumber":34,"author":{"gitId":"-"},"content":"            fileTree(dir: it, exclude: [\u0027**/*.jar\u0027])","lastModifiedDate":"2020-08-07"},{"lineNumber":35,"author":{"gitId":"-"},"content":"        })","lastModifiedDate":"2020-08-07"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2020-08-07"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    reports {","lastModifiedDate":"2020-08-07"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        html.enabled \u003d true","lastModifiedDate":"2020-08-07"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        xml.enabled \u003d true","lastModifiedDate":"2020-08-07"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2020-08-07"},{"lineNumber":41,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2018-03-23"},{"lineNumber":42,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-03-23"},{"lineNumber":43,"author":{"gitId":"-"},"content":"dependencies {","lastModifiedDate":"2016-08-08"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    String jUnitVersion \u003d \u00275.4.0\u0027","lastModifiedDate":"2019-02-10"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    String javaFxVersion \u003d \u002711\u0027","lastModifiedDate":"2019-02-08"},{"lineNumber":46,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-02-08"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027win\u0027","lastModifiedDate":"2019-02-19"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027mac\u0027","lastModifiedDate":"2019-02-19"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027linux\u0027","lastModifiedDate":"2019-02-19"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027win\u0027","lastModifiedDate":"2019-02-19"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027mac\u0027","lastModifiedDate":"2019-02-19"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027linux\u0027","lastModifiedDate":"2019-02-19"},{"lineNumber":53,"author":{"gitId":"-"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027win\u0027","lastModifiedDate":"2019-02-19"},{"lineNumber":54,"author":{"gitId":"-"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027mac\u0027","lastModifiedDate":"2019-02-19"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027linux\u0027","lastModifiedDate":"2019-02-19"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027win\u0027","lastModifiedDate":"2019-02-19"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027mac\u0027","lastModifiedDate":"2019-02-19"},{"lineNumber":58,"author":{"gitId":"-"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027linux\u0027","lastModifiedDate":"2019-02-19"},{"lineNumber":59,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-12-05"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    implementation group: \u0027com.fasterxml.jackson.core\u0027, name: \u0027jackson-databind\u0027, version: \u00272.7.0\u0027","lastModifiedDate":"2018-03-29"},{"lineNumber":61,"author":{"gitId":"-"},"content":"    implementation group: \u0027com.fasterxml.jackson.datatype\u0027, name: \u0027jackson-datatype-jsr310\u0027, version: \u00272.7.4\u0027","lastModifiedDate":"2018-03-29"},{"lineNumber":62,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-12-05"},{"lineNumber":63,"author":{"gitId":"-"},"content":"    testImplementation group: \u0027org.junit.jupiter\u0027, name: \u0027junit-jupiter-api\u0027, version: jUnitVersion","lastModifiedDate":"2018-03-23"},{"lineNumber":64,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-03-23"},{"lineNumber":65,"author":{"gitId":"-"},"content":"    testRuntimeOnly group: \u0027org.junit.jupiter\u0027, name: \u0027junit-jupiter-engine\u0027, version: jUnitVersion","lastModifiedDate":"2018-03-23"},{"lineNumber":66,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":67,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-29"},{"lineNumber":68,"author":{"gitId":"-"},"content":"shadowJar {","lastModifiedDate":"2016-08-29"},{"lineNumber":69,"author":{"gitId":"hieunm1821"},"content":"    archiveName \u003d \u0027FoodOnWheels.jar\u0027","lastModifiedDate":"2022-04-01"},{"lineNumber":70,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-29"},{"lineNumber":71,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":72,"author":{"gitId":"hieunm1821"},"content":"run {","lastModifiedDate":"2022-03-22"},{"lineNumber":73,"author":{"gitId":"hieunm1821"},"content":"    enableAssertions \u003d true","lastModifiedDate":"2022-03-22"},{"lineNumber":74,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2022-03-22"},{"lineNumber":75,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-03-22"},{"lineNumber":76,"author":{"gitId":"-"},"content":"defaultTasks \u0027clean\u0027, \u0027test\u0027","lastModifiedDate":"2020-05-23"}],"authorContributionMap":{"hieunm1821":3,"-":73}},{"path":"config/checkstyle/checkstyle.xml","fileType":"other","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":2,"author":{"gitId":"-"},"content":"\u003c!DOCTYPE module PUBLIC","lastModifiedDate":"2016-08-08"},{"lineNumber":3,"author":{"gitId":"-"},"content":"    \"-//Checkstyle//DTD Checkstyle Configuration 1.3//EN\"","lastModifiedDate":"2019-03-06"},{"lineNumber":4,"author":{"gitId":"-"},"content":"    \"https://checkstyle.org/dtds/configuration_1_3.dtd\"\u003e","lastModifiedDate":"2019-03-06"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":6,"author":{"gitId":"-"},"content":"\u003c!--","lastModifiedDate":"2016-08-08"},{"lineNumber":7,"author":{"gitId":"-"},"content":"    This configuration file enforces rules for a modified version of the module\u0027s code standard at","lastModifiedDate":"2016-10-12"},{"lineNumber":8,"author":{"gitId":"-"},"content":"    https://oss-generic.github.io/process/codingstandards/coding-standards-java.html","lastModifiedDate":"2016-10-12"},{"lineNumber":9,"author":{"gitId":"-"},"content":"--\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":11,"author":{"gitId":"-"},"content":"\u003cmodule name\u003d\"Checker\"\u003e","lastModifiedDate":"2022-03-16"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":13,"author":{"gitId":"-"},"content":"  \u003cmodule name\u003d\"FileTabCharacter\"\u003e","lastModifiedDate":"2022-03-16"},{"lineNumber":14,"author":{"gitId":"-"},"content":"    \u003c!-- Checks that there are no tab characters in the file. --\u003e","lastModifiedDate":"2016-10-12"},{"lineNumber":15,"author":{"gitId":"-"},"content":"  \u003c/module\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":17,"author":{"gitId":"-"},"content":"  \u003cmodule name\u003d\"NewlineAtEndOfFile\"\u003e","lastModifiedDate":"2022-03-16"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    \u003c!-- Accept LF, CR or CRLF to accomodate devs who prefer different line endings --\u003e","lastModifiedDate":"2016-12-10"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    \u003cproperty name\u003d\"lineSeparator\" value\u003d\"lf_cr_crlf\"/\u003e","lastModifiedDate":"2022-03-16"},{"lineNumber":20,"author":{"gitId":"-"},"content":"  \u003c/module\u003e","lastModifiedDate":"2016-12-10"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":22,"author":{"gitId":"-"},"content":"  \u003cmodule name\u003d\"RegexpSingleline\"\u003e","lastModifiedDate":"2022-03-16"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    \u003c!-- Checks that FIXME is not used in comments.  TODO is preferred. --\u003e","lastModifiedDate":"2016-10-12"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    \u003cproperty name\u003d\"format\" value\u003d\"((//.*)|(\\*.*))FIXME\" /\u003e","lastModifiedDate":"2022-03-16"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    \u003cproperty name\u003d\"message\" value\u003d\u0027TODO is preferred to FIXME.\"\u0027 /\u003e","lastModifiedDate":"2022-03-16"},{"lineNumber":26,"author":{"gitId":"-"},"content":"  \u003c/module\u003e","lastModifiedDate":"2016-10-12"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-12"},{"lineNumber":28,"author":{"gitId":"-"},"content":"  \u003cmodule name\u003d\"SuppressionFilter\"\u003e","lastModifiedDate":"2022-03-16"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    \u003cproperty name\u003d\"file\" value\u003d\"${config_loc}/suppressions.xml\"/\u003e","lastModifiedDate":"2022-03-16"},{"lineNumber":30,"author":{"gitId":"-"},"content":"  \u003c/module\u003e","lastModifiedDate":"2017-08-20"},{"lineNumber":31,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-08-20"},{"lineNumber":32,"author":{"gitId":"-"},"content":"  \u003cmodule name\u003d\"LineLength\"\u003e","lastModifiedDate":"2022-03-16"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    \u003c!-- Checks if a line is too long. --\u003e","lastModifiedDate":"2020-05-27"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    \u003cproperty name\u003d\"max\" value\u003d\"120\"/\u003e","lastModifiedDate":"2022-03-16"},{"lineNumber":35,"author":{"gitId":"-"},"content":"  \u003c/module\u003e","lastModifiedDate":"2020-05-27"},{"lineNumber":36,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-08-20"},{"lineNumber":37,"author":{"gitId":"-"},"content":"  \u003c!-- All Java AST specific tests live under TreeWalker module. --\u003e","lastModifiedDate":"2017-08-05"},{"lineNumber":38,"author":{"gitId":"-"},"content":"  \u003cmodule name\u003d\"TreeWalker\"\u003e","lastModifiedDate":"2022-03-16"},{"lineNumber":39,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-08-05"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    \u003c!-- Required to allow exceptions in code style --\u003e","lastModifiedDate":"2016-10-12"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    \u003cmodule name\u003d\"SuppressionCommentFilter\"\u003e","lastModifiedDate":"2022-03-16"},{"lineNumber":42,"author":{"gitId":"-"},"content":"      \u003cproperty name\u003d\"offCommentFormat\" value\u003d\"CHECKSTYLE.OFF\\: ([\\w\\|]+)\"/\u003e","lastModifiedDate":"2022-03-16"},{"lineNumber":43,"author":{"gitId":"-"},"content":"      \u003cproperty name\u003d\"onCommentFormat\" value\u003d\"CHECKSTYLE.ON\\: ([\\w\\|]+)\"/\u003e","lastModifiedDate":"2022-03-16"},{"lineNumber":44,"author":{"gitId":"-"},"content":"      \u003cproperty name\u003d\"checkFormat\" value\u003d\"$1\"/\u003e","lastModifiedDate":"2022-03-16"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    \u003c/module\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":46,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    \u003c!--","lastModifiedDate":"2016-10-12"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    IMPORT CHECKS","lastModifiedDate":"2016-08-08"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    --\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":50,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    \u003c!-- Checks the ordering of import statements follow the rules that the default Eclipse formatter uses.","lastModifiedDate":"2017-01-19"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    The order rule \"STATIC###STANDARD_JAVA_PACKAGE###SPECIAL_IMPORTS###THIRD_PARTY_PACKAGE\" consists of:","lastModifiedDate":"2017-01-19"},{"lineNumber":53,"author":{"gitId":"-"},"content":"      1. STATIC: static imports","lastModifiedDate":"2017-01-19"},{"lineNumber":54,"author":{"gitId":"-"},"content":"      2. STANDARD_JAVA_PACKAGE: standard java/javax imports","lastModifiedDate":"2017-01-19"},{"lineNumber":55,"author":{"gitId":"-"},"content":"      3. SPECIAL_IMPORTS: defined as org imports","lastModifiedDate":"2017-01-19"},{"lineNumber":56,"author":{"gitId":"-"},"content":"      4. THIRD_PARTY_PACKAGE: defined as com imports","lastModifiedDate":"2017-01-19"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    --\u003e","lastModifiedDate":"2017-01-19"},{"lineNumber":58,"author":{"gitId":"-"},"content":"    \u003cmodule name\u003d\"CustomImportOrder\"\u003e","lastModifiedDate":"2022-03-16"},{"lineNumber":59,"author":{"gitId":"-"},"content":"        \u003cproperty name\u003d\"customImportOrderRules\"","lastModifiedDate":"2022-03-16"},{"lineNumber":60,"author":{"gitId":"-"},"content":"            value\u003d\"STATIC###STANDARD_JAVA_PACKAGE###SPECIAL_IMPORTS###THIRD_PARTY_PACKAGE\"/\u003e","lastModifiedDate":"2017-01-19"},{"lineNumber":61,"author":{"gitId":"-"},"content":"        \u003cproperty name\u003d\"specialImportsRegExp\" value\u003d\"^org\\.\"/\u003e","lastModifiedDate":"2022-03-16"},{"lineNumber":62,"author":{"gitId":"-"},"content":"        \u003cproperty name\u003d\"thirdPartyPackageRegExp\" value\u003d\"^com\\.\"/\u003e","lastModifiedDate":"2022-03-16"},{"lineNumber":63,"author":{"gitId":"-"},"content":"        \u003cproperty name\u003d\"sortImportsInGroupAlphabetically\" value\u003d\"true\"/\u003e","lastModifiedDate":"2022-03-16"},{"lineNumber":64,"author":{"gitId":"-"},"content":"    \u003c/module\u003e","lastModifiedDate":"2017-01-19"},{"lineNumber":65,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":66,"author":{"gitId":"-"},"content":"    \u003c!-- Checks for redundant import statements.","lastModifiedDate":"2017-01-19"},{"lineNumber":67,"author":{"gitId":"-"},"content":"    An import statement is redundant if:","lastModifiedDate":"2017-01-19"},{"lineNumber":68,"author":{"gitId":"-"},"content":"      * It is a duplicate of another import. This is, when a class is imported more than once.","lastModifiedDate":"2017-01-19"},{"lineNumber":69,"author":{"gitId":"-"},"content":"      * The class non-statically imported is from the java.lang package, e.g. importing java.lang.String.","lastModifiedDate":"2017-01-19"},{"lineNumber":70,"author":{"gitId":"-"},"content":"      * The class non-statically imported is from the same package as the current package.","lastModifiedDate":"2017-01-19"},{"lineNumber":71,"author":{"gitId":"-"},"content":"    --\u003e","lastModifiedDate":"2017-01-19"},{"lineNumber":72,"author":{"gitId":"-"},"content":"    \u003cmodule name\u003d\"RedundantImport\"/\u003e","lastModifiedDate":"2022-03-16"},{"lineNumber":73,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":74,"author":{"gitId":"-"},"content":"    \u003c!-- Checks for unused import statements.","lastModifiedDate":"2017-01-19"},{"lineNumber":75,"author":{"gitId":"-"},"content":"    An import statement is unused if:","lastModifiedDate":"2017-01-19"},{"lineNumber":76,"author":{"gitId":"-"},"content":"      It\u0027s not referenced in the file.","lastModifiedDate":"2017-01-19"},{"lineNumber":77,"author":{"gitId":"-"},"content":"    --\u003e","lastModifiedDate":"2017-01-19"},{"lineNumber":78,"author":{"gitId":"-"},"content":"    \u003cmodule name\u003d\"UnusedImports\"/\u003e","lastModifiedDate":"2022-03-16"},{"lineNumber":79,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":80,"author":{"gitId":"-"},"content":"    \u003cmodule name\u003d\"AvoidStarImport\"/\u003e","lastModifiedDate":"2022-03-16"},{"lineNumber":81,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-18"},{"lineNumber":82,"author":{"gitId":"-"},"content":"    \u003c!--","lastModifiedDate":"2016-08-08"},{"lineNumber":83,"author":{"gitId":"-"},"content":"    NAMING CHECKS","lastModifiedDate":"2016-08-08"},{"lineNumber":84,"author":{"gitId":"-"},"content":"    --\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":85,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":86,"author":{"gitId":"-"},"content":"    \u003c!-- Validate abbreviations (consecutive capital letters) length in identifier name --\u003e","lastModifiedDate":"2022-03-16"},{"lineNumber":87,"author":{"gitId":"-"},"content":"    \u003cmodule name\u003d\"AbbreviationAsWordInName\"\u003e","lastModifiedDate":"2022-03-16"},{"lineNumber":88,"author":{"gitId":"-"},"content":"      \u003cproperty name\u003d\"ignoreFinal\" value\u003d\"false\"/\u003e","lastModifiedDate":"2022-03-16"},{"lineNumber":89,"author":{"gitId":"-"},"content":"      \u003cproperty name\u003d\"allowedAbbreviationLength\" value\u003d\"1\"/\u003e","lastModifiedDate":"2022-03-16"},{"lineNumber":90,"author":{"gitId":"-"},"content":"    \u003c/module\u003e","lastModifiedDate":"2017-04-07"},{"lineNumber":91,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-04-07"},{"lineNumber":92,"author":{"gitId":"-"},"content":"    \u003cmodule name\u003d\"PackageName\"\u003e","lastModifiedDate":"2022-03-16"},{"lineNumber":93,"author":{"gitId":"-"},"content":"      \u003c!-- Validates identifiers for package names against the supplied expression. --\u003e","lastModifiedDate":"2016-10-12"},{"lineNumber":94,"author":{"gitId":"-"},"content":"      \u003cproperty name\u003d\"format\" value\u003d\"^[a-z]+(\\.[a-z][a-z0-9]{1,})*$\"/\u003e","lastModifiedDate":"2022-03-16"},{"lineNumber":95,"author":{"gitId":"-"},"content":"      \u003cproperty name\u003d\"severity\" value\u003d\"warning\"/\u003e","lastModifiedDate":"2022-03-16"},{"lineNumber":96,"author":{"gitId":"-"},"content":"    \u003c/module\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":97,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":98,"author":{"gitId":"-"},"content":"    \u003cmodule name\u003d\"TypeName\"\u003e","lastModifiedDate":"2022-03-16"},{"lineNumber":99,"author":{"gitId":"-"},"content":"      \u003c!-- Validates static, final fields against the expression \"^[A-Z][a-zA-Z0-9]*$\". --\u003e","lastModifiedDate":"2016-10-12"},{"lineNumber":100,"author":{"gitId":"-"},"content":"      \u003cmetadata name\u003d\"altname\" value\u003d\"TypeName\"/\u003e","lastModifiedDate":"2022-03-16"},{"lineNumber":101,"author":{"gitId":"-"},"content":"      \u003cproperty name\u003d\"severity\" value\u003d\"warning\"/\u003e","lastModifiedDate":"2022-03-16"},{"lineNumber":102,"author":{"gitId":"-"},"content":"    \u003c/module\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":103,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":104,"author":{"gitId":"-"},"content":"    \u003cmodule name\u003d\"ConstantName\"\u003e","lastModifiedDate":"2022-03-16"},{"lineNumber":105,"author":{"gitId":"-"},"content":"      \u003c!-- Validates non-private, static, final fields against the expression \"^[A-Z][A-Z0-9]*(_[A-Z0-9]+)*$\". --\u003e","lastModifiedDate":"2016-10-12"},{"lineNumber":106,"author":{"gitId":"-"},"content":"      \u003cmetadata name\u003d\"altname\" value\u003d\"ConstantName\"/\u003e","lastModifiedDate":"2022-03-16"},{"lineNumber":107,"author":{"gitId":"-"},"content":"      \u003cproperty name\u003d\"applyToPrivate\" value\u003d\"false\"/\u003e","lastModifiedDate":"2022-03-16"},{"lineNumber":108,"author":{"gitId":"-"},"content":"      \u003cmessage key\u003d\"name.invalidPattern\"","lastModifiedDate":"2022-03-16"},{"lineNumber":109,"author":{"gitId":"-"},"content":"               value\u003d\"Variable \u0027\u0027{0}\u0027\u0027 should be in ALL_CAPS (if it is a constant) or be private (otherwise).\"/\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":110,"author":{"gitId":"-"},"content":"      \u003cproperty name\u003d\"severity\" value\u003d\"warning\"/\u003e","lastModifiedDate":"2022-03-16"},{"lineNumber":111,"author":{"gitId":"-"},"content":"    \u003c/module\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":112,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":113,"author":{"gitId":"-"},"content":"    \u003cmodule name\u003d\"StaticVariableName\"\u003e","lastModifiedDate":"2022-03-16"},{"lineNumber":114,"author":{"gitId":"-"},"content":"      \u003c!-- Validates static, non-final fields against the supplied expression. --\u003e","lastModifiedDate":"2016-10-12"},{"lineNumber":115,"author":{"gitId":"-"},"content":"      \u003cmetadata name\u003d\"altname\" value\u003d\"StaticVariableName\"/\u003e","lastModifiedDate":"2022-03-16"},{"lineNumber":116,"author":{"gitId":"-"},"content":"      \u003cproperty name\u003d\"format\" value\u003d\"^[a-z][a-zA-Z0-9]*_?$\"/\u003e","lastModifiedDate":"2022-03-16"},{"lineNumber":117,"author":{"gitId":"-"},"content":"      \u003cproperty name\u003d\"severity\" value\u003d\"warning\"/\u003e","lastModifiedDate":"2022-03-16"},{"lineNumber":118,"author":{"gitId":"-"},"content":"    \u003c/module\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":119,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":120,"author":{"gitId":"-"},"content":"    \u003cmodule name\u003d\"MemberName\"\u003e","lastModifiedDate":"2022-03-16"},{"lineNumber":121,"author":{"gitId":"-"},"content":"      \u003c!-- Validates non-static members against the supplied expression. --\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":122,"author":{"gitId":"-"},"content":"      \u003cmetadata name\u003d\"altname\" value\u003d\"MemberName\"/\u003e","lastModifiedDate":"2022-03-16"},{"lineNumber":123,"author":{"gitId":"-"},"content":"      \u003cproperty name\u003d\"format\" value\u003d\"^[a-z][a-zA-Z0-9]*$\"/\u003e","lastModifiedDate":"2022-03-16"},{"lineNumber":124,"author":{"gitId":"-"},"content":"      \u003cproperty name\u003d\"severity\" value\u003d\"warning\"/\u003e","lastModifiedDate":"2022-03-16"},{"lineNumber":125,"author":{"gitId":"-"},"content":"    \u003c/module\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":126,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":127,"author":{"gitId":"-"},"content":"    \u003cmodule name\u003d\"MethodName\"\u003e","lastModifiedDate":"2022-03-16"},{"lineNumber":128,"author":{"gitId":"-"},"content":"      \u003c!-- Validates identifiers for method names against the supplied expression. --\u003e","lastModifiedDate":"2016-10-12"},{"lineNumber":129,"author":{"gitId":"-"},"content":"      \u003cmetadata name\u003d\"altname\" value\u003d\"MethodName\"/\u003e","lastModifiedDate":"2022-03-16"},{"lineNumber":130,"author":{"gitId":"-"},"content":"      \u003cproperty name\u003d\"format\" value\u003d\"^[a-z][a-zA-Z0-9]*(_[a-z][a-zA-Z0-9]+){0,2}$\"/\u003e","lastModifiedDate":"2022-03-16"},{"lineNumber":131,"author":{"gitId":"-"},"content":"    \u003c/module\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":132,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":133,"author":{"gitId":"-"},"content":"    \u003cmodule name\u003d\"ParameterName\"\u003e","lastModifiedDate":"2022-03-16"},{"lineNumber":134,"author":{"gitId":"-"},"content":"      \u003c!-- Validates identifiers for method parameters against the expression \"^[a-z][a-zA-Z0-9]*$\". --\u003e","lastModifiedDate":"2016-10-12"},{"lineNumber":135,"author":{"gitId":"-"},"content":"      \u003cproperty name\u003d\"severity\" value\u003d\"warning\"/\u003e","lastModifiedDate":"2022-03-16"},{"lineNumber":136,"author":{"gitId":"-"},"content":"    \u003c/module\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":137,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":138,"author":{"gitId":"-"},"content":"    \u003cmodule name\u003d\"LocalFinalVariableName\"\u003e","lastModifiedDate":"2022-03-16"},{"lineNumber":139,"author":{"gitId":"-"},"content":"      \u003c!-- Validates identifiers for local final variables against the expression \"^[a-z][a-zA-Z0-9]*$\". --\u003e","lastModifiedDate":"2016-10-12"},{"lineNumber":140,"author":{"gitId":"-"},"content":"      \u003cproperty name\u003d\"severity\" value\u003d\"warning\"/\u003e","lastModifiedDate":"2022-03-16"},{"lineNumber":141,"author":{"gitId":"-"},"content":"    \u003c/module\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":142,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":143,"author":{"gitId":"-"},"content":"    \u003cmodule name\u003d\"LocalVariableName\"\u003e","lastModifiedDate":"2022-03-16"},{"lineNumber":144,"author":{"gitId":"-"},"content":"      \u003c!-- Validates identifiers for local variables against the expression \"^[a-z][a-zA-Z0-9]*$\". --\u003e","lastModifiedDate":"2016-10-12"},{"lineNumber":145,"author":{"gitId":"-"},"content":"      \u003cproperty name\u003d\"severity\" value\u003d\"warning\"/\u003e","lastModifiedDate":"2022-03-16"},{"lineNumber":146,"author":{"gitId":"-"},"content":"    \u003c/module\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":147,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":148,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":149,"author":{"gitId":"-"},"content":"    \u003c!--","lastModifiedDate":"2016-08-08"},{"lineNumber":150,"author":{"gitId":"-"},"content":"    LENGTH and CODING CHECKS","lastModifiedDate":"2016-08-08"},{"lineNumber":151,"author":{"gitId":"-"},"content":"    --\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":152,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":153,"author":{"gitId":"-"},"content":"    \u003c!-- Checks that array type declarations follow Java Style","lastModifiedDate":"2017-04-01"},{"lineNumber":154,"author":{"gitId":"-"},"content":"      Java style: public static void main(String[] args) // Allowed","lastModifiedDate":"2017-04-01"},{"lineNumber":155,"author":{"gitId":"-"},"content":"      C style:    public static void main(String args[]) // Not allowed","lastModifiedDate":"2017-04-01"},{"lineNumber":156,"author":{"gitId":"-"},"content":"    --\u003e","lastModifiedDate":"2017-04-01"},{"lineNumber":157,"author":{"gitId":"-"},"content":"    \u003cmodule name\u003d\"ArrayTypeStyle\"/\u003e","lastModifiedDate":"2022-03-16"},{"lineNumber":158,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-04-01"},{"lineNumber":159,"author":{"gitId":"-"},"content":"    \u003c!-- Checks if a catch block is empty and does not contain any comments. --\u003e","lastModifiedDate":"2017-04-03"},{"lineNumber":160,"author":{"gitId":"-"},"content":"    \u003cmodule name\u003d\"EmptyCatchBlock\"/\u003e","lastModifiedDate":"2022-03-16"},{"lineNumber":161,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-04-03"},{"lineNumber":162,"author":{"gitId":"-"},"content":"    \u003cmodule name\u003d\"LeftCurly\"\u003e","lastModifiedDate":"2022-03-16"},{"lineNumber":163,"author":{"gitId":"-"},"content":"      \u003c!-- Checks for placement of the left curly brace (\u0027{\u0027). --\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":164,"author":{"gitId":"-"},"content":"      \u003cproperty name\u003d\"severity\" value\u003d\"warning\"/\u003e","lastModifiedDate":"2022-03-16"},{"lineNumber":165,"author":{"gitId":"-"},"content":"    \u003c/module\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":166,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":167,"author":{"gitId":"-"},"content":"    \u003cmodule name\u003d\"RightCurly\"\u003e","lastModifiedDate":"2022-03-16"},{"lineNumber":168,"author":{"gitId":"-"},"content":"      \u003c!-- Checks right curlies on CATCH, ELSE, and TRY blocks are on","lastModifiedDate":"2016-08-08"},{"lineNumber":169,"author":{"gitId":"-"},"content":"      the same line. e.g., the following example is fine:","lastModifiedDate":"2016-08-08"},{"lineNumber":170,"author":{"gitId":"-"},"content":"      \u003cpre\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":171,"author":{"gitId":"-"},"content":"        if {","lastModifiedDate":"2016-08-08"},{"lineNumber":172,"author":{"gitId":"-"},"content":"          ...","lastModifiedDate":"2016-08-08"},{"lineNumber":173,"author":{"gitId":"-"},"content":"        } else","lastModifiedDate":"2016-08-08"},{"lineNumber":174,"author":{"gitId":"-"},"content":"      \u003c/pre\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":175,"author":{"gitId":"-"},"content":"      --\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":176,"author":{"gitId":"-"},"content":"      \u003c!-- This next example is not fine:","lastModifiedDate":"2016-08-08"},{"lineNumber":177,"author":{"gitId":"-"},"content":"      \u003cpre\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":178,"author":{"gitId":"-"},"content":"        if {","lastModifiedDate":"2016-08-08"},{"lineNumber":179,"author":{"gitId":"-"},"content":"          ...","lastModifiedDate":"2016-08-08"},{"lineNumber":180,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-08-08"},{"lineNumber":181,"author":{"gitId":"-"},"content":"        else","lastModifiedDate":"2016-08-08"},{"lineNumber":182,"author":{"gitId":"-"},"content":"      \u003c/pre\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":183,"author":{"gitId":"-"},"content":"      --\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":184,"author":{"gitId":"-"},"content":"      \u003cproperty name\u003d\"severity\" value\u003d\"warning\"/\u003e","lastModifiedDate":"2022-03-16"},{"lineNumber":185,"author":{"gitId":"-"},"content":"    \u003c/module\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":186,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":187,"author":{"gitId":"-"},"content":"    \u003c!-- Checks for braces around loop blocks --\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":188,"author":{"gitId":"-"},"content":"    \u003cmodule name\u003d\"NeedBraces\"\u003e","lastModifiedDate":"2022-03-16"},{"lineNumber":189,"author":{"gitId":"-"},"content":"      \u003c!--","lastModifiedDate":"2016-08-08"},{"lineNumber":190,"author":{"gitId":"-"},"content":"      if (true) return 1; // Not allowed","lastModifiedDate":"2017-04-05"},{"lineNumber":191,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":192,"author":{"gitId":"-"},"content":"      if (true) { return 1; } // Not allowed","lastModifiedDate":"2016-10-12"},{"lineNumber":193,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":194,"author":{"gitId":"-"},"content":"      else if {","lastModifiedDate":"2016-08-08"},{"lineNumber":195,"author":{"gitId":"-"},"content":"        return 1; // else if should always be multi line","lastModifiedDate":"2016-08-08"},{"lineNumber":196,"author":{"gitId":"-"},"content":"      }","lastModifiedDate":"2016-08-08"},{"lineNumber":197,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":198,"author":{"gitId":"-"},"content":"      if (true)","lastModifiedDate":"2016-08-08"},{"lineNumber":199,"author":{"gitId":"-"},"content":"        return 1; // Not allowed","lastModifiedDate":"2016-08-08"},{"lineNumber":200,"author":{"gitId":"-"},"content":"      --\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":201,"author":{"gitId":"-"},"content":"      \u003cproperty name\u003d\"allowEmptyLoopBody\" value\u003d\"true\"/\u003e","lastModifiedDate":"2022-03-16"},{"lineNumber":202,"author":{"gitId":"-"},"content":"    \u003c/module\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":203,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":204,"author":{"gitId":"-"},"content":"    \u003c!-- Checks that each variable declaration is in its own statement and on its own line. --\u003e","lastModifiedDate":"2017-09-21"},{"lineNumber":205,"author":{"gitId":"-"},"content":"    \u003cmodule name\u003d\"MultipleVariableDeclarations\"/\u003e","lastModifiedDate":"2022-03-16"},{"lineNumber":206,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-09-21"},{"lineNumber":207,"author":{"gitId":"-"},"content":"    \u003cmodule name\u003d\"OneStatementPerLine\"/\u003e","lastModifiedDate":"2022-03-16"},{"lineNumber":208,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-09-17"},{"lineNumber":209,"author":{"gitId":"-"},"content":"    \u003c!-- Checks that long constants are defined with an upper ell.--\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":210,"author":{"gitId":"-"},"content":"    \u003cmodule name\u003d\"UpperEll\" /\u003e","lastModifiedDate":"2022-03-16"},{"lineNumber":211,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":212,"author":{"gitId":"-"},"content":"    \u003cmodule name\u003d\"FallThrough\"\u003e","lastModifiedDate":"2022-03-16"},{"lineNumber":213,"author":{"gitId":"-"},"content":"      \u003c!-- Warn about falling through to the next case statement.  Similar to","lastModifiedDate":"2016-08-08"},{"lineNumber":214,"author":{"gitId":"-"},"content":"      javac -Xlint:fallthrough, but the check is suppressed if a single-line comment","lastModifiedDate":"2016-08-08"},{"lineNumber":215,"author":{"gitId":"-"},"content":"      on the last non-blank line preceding the fallen-into case contains \u0027fall through\u0027 (or","lastModifiedDate":"2016-08-08"},{"lineNumber":216,"author":{"gitId":"-"},"content":"      some other variants which we don\u0027t publicized to promote consistency).","lastModifiedDate":"2016-08-08"},{"lineNumber":217,"author":{"gitId":"-"},"content":"      --\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":218,"author":{"gitId":"-"},"content":"      \u003cproperty name\u003d\"reliefPattern\"","lastModifiedDate":"2022-03-16"},{"lineNumber":219,"author":{"gitId":"-"},"content":"       value\u003d\"fall through|Fall through|fallthru|Fallthru|falls through|Falls through|fallthrough|Fallthrough|No break|NO break|no break|continue on\"/\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":220,"author":{"gitId":"-"},"content":"    \u003c/module\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":221,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":222,"author":{"gitId":"-"},"content":"    \u003cmodule name\u003d\"MissingSwitchDefault\"/\u003e","lastModifiedDate":"2022-03-16"},{"lineNumber":223,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":224,"author":{"gitId":"-"},"content":"    \u003c!-- Checks that Class variables should never be declared public. --\u003e","lastModifiedDate":"2017-04-13"},{"lineNumber":225,"author":{"gitId":"-"},"content":"    \u003cmodule name\u003d\"VisibilityModifier\"\u003e","lastModifiedDate":"2022-03-16"},{"lineNumber":226,"author":{"gitId":"-"},"content":"      \u003cproperty name\u003d\"protectedAllowed\" value\u003d\"true\"/\u003e","lastModifiedDate":"2022-03-16"},{"lineNumber":227,"author":{"gitId":"-"},"content":"      \u003cproperty name\u003d\"allowPublicFinalFields\" value\u003d\"true\"/\u003e","lastModifiedDate":"2022-03-16"},{"lineNumber":228,"author":{"gitId":"-"},"content":"      \u003cproperty name\u003d\"ignoreAnnotationCanonicalNames\" value\u003d\"RegisterExtension, TempDir\"/\u003e","lastModifiedDate":"2022-03-16"},{"lineNumber":229,"author":{"gitId":"-"},"content":"    \u003c/module\u003e","lastModifiedDate":"2017-04-13"},{"lineNumber":230,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-04-13"},{"lineNumber":231,"author":{"gitId":"-"},"content":"    \u003c!--","lastModifiedDate":"2016-08-08"},{"lineNumber":232,"author":{"gitId":"-"},"content":"    ORDER CHECKS","lastModifiedDate":"2017-01-16"},{"lineNumber":233,"author":{"gitId":"-"},"content":"    --\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":234,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":235,"author":{"gitId":"-"},"content":"    \u003c!-- Checks that the order of at-clauses follows the tagOrder default property value order.","lastModifiedDate":"2017-04-07"},{"lineNumber":236,"author":{"gitId":"-"},"content":"         @author, @version, @param, @return, @throws, @exception, @see, @since, @serial, @serialField, @serialData, @deprecated","lastModifiedDate":"2017-04-07"},{"lineNumber":237,"author":{"gitId":"-"},"content":"    --\u003e","lastModifiedDate":"2017-04-07"},{"lineNumber":238,"author":{"gitId":"-"},"content":"    \u003cmodule name\u003d\"AtclauseOrder\"/\u003e","lastModifiedDate":"2022-03-16"},{"lineNumber":239,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-04-07"},{"lineNumber":240,"author":{"gitId":"-"},"content":"    \u003c!-- Checks if the Class and Interface declarations is organized in this order","lastModifiedDate":"2017-04-01"},{"lineNumber":241,"author":{"gitId":"-"},"content":"      1. Class (static) variables. Order: public, protected, package level (no access modifier), private.","lastModifiedDate":"2017-04-01"},{"lineNumber":242,"author":{"gitId":"-"},"content":"      2. Instance variables. Order: public, protected, package level (no access modifier), private.","lastModifiedDate":"2017-04-01"},{"lineNumber":243,"author":{"gitId":"-"},"content":"      3. Constructors","lastModifiedDate":"2017-04-01"},{"lineNumber":244,"author":{"gitId":"-"},"content":"      4. Methods","lastModifiedDate":"2017-04-01"},{"lineNumber":245,"author":{"gitId":"-"},"content":"    --\u003e","lastModifiedDate":"2017-04-01"},{"lineNumber":246,"author":{"gitId":"-"},"content":"    \u003cmodule name \u003d\"DeclarationOrder\"/\u003e","lastModifiedDate":"2022-03-16"},{"lineNumber":247,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-04-01"},{"lineNumber":248,"author":{"gitId":"-"},"content":"    \u003cmodule name\u003d\"ModifierOrder\"\u003e","lastModifiedDate":"2022-03-16"},{"lineNumber":249,"author":{"gitId":"-"},"content":"      \u003c!-- Warn if modifier order is inconsistent with JLS3 8.1.1, 8.3.1, and","lastModifiedDate":"2016-08-08"},{"lineNumber":250,"author":{"gitId":"-"},"content":"           8.4.3.  The prescribed order is:","lastModifiedDate":"2016-08-08"},{"lineNumber":251,"author":{"gitId":"-"},"content":"           public, protected, private, abstract, static, final, transient, volatile,","lastModifiedDate":"2016-08-08"},{"lineNumber":252,"author":{"gitId":"-"},"content":"           synchronized, native, strictfp","lastModifiedDate":"2016-08-08"},{"lineNumber":253,"author":{"gitId":"-"},"content":"        --\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":254,"author":{"gitId":"-"},"content":"    \u003c/module\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":255,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":256,"author":{"gitId":"-"},"content":"    \u003cmodule name\u003d\"OverloadMethodsDeclarationOrder\"/\u003e","lastModifiedDate":"2022-03-16"},{"lineNumber":257,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":258,"author":{"gitId":"-"},"content":"    \u003c!--","lastModifiedDate":"2016-08-08"},{"lineNumber":259,"author":{"gitId":"-"},"content":"    WHITESPACE CHECKS","lastModifiedDate":"2016-08-08"},{"lineNumber":260,"author":{"gitId":"-"},"content":"    --\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":261,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":262,"author":{"gitId":"-"},"content":"    \u003c!-- Checks that comments are indented relative to their position in the code --\u003e","lastModifiedDate":"2017-04-03"},{"lineNumber":263,"author":{"gitId":"-"},"content":"    \u003cmodule name\u003d\"CommentsIndentation\"/\u003e","lastModifiedDate":"2022-03-16"},{"lineNumber":264,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-04-03"},{"lineNumber":265,"author":{"gitId":"-"},"content":"    \u003cmodule name\u003d\"WhitespaceAround\"\u003e","lastModifiedDate":"2022-03-16"},{"lineNumber":266,"author":{"gitId":"-"},"content":"      \u003c!-- Checks that various tokens are surrounded by whitespace.","lastModifiedDate":"2016-08-08"},{"lineNumber":267,"author":{"gitId":"-"},"content":"           This includes most binary operators and keywords followed","lastModifiedDate":"2016-08-08"},{"lineNumber":268,"author":{"gitId":"-"},"content":"           by regular or curly braces.","lastModifiedDate":"2016-08-08"},{"lineNumber":269,"author":{"gitId":"-"},"content":"      --\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":270,"author":{"gitId":"-"},"content":"      \u003cproperty name\u003d\"tokens\" value\u003d\"ASSIGN, BAND, BAND_ASSIGN, BOR,","lastModifiedDate":"2022-03-16"},{"lineNumber":271,"author":{"gitId":"-"},"content":"        BOR_ASSIGN, BSR, BSR_ASSIGN, BXOR, BXOR_ASSIGN, COLON, DIV, DIV_ASSIGN,","lastModifiedDate":"2016-08-08"},{"lineNumber":272,"author":{"gitId":"-"},"content":"        EQUAL, GE, GT, LAND, LCURLY, LE, LITERAL_CATCH, LITERAL_DO, LITERAL_ELSE,","lastModifiedDate":"2016-12-10"},{"lineNumber":273,"author":{"gitId":"-"},"content":"        LITERAL_FINALLY, LITERAL_FOR, LITERAL_IF, LITERAL_RETURN,","lastModifiedDate":"2016-08-08"},{"lineNumber":274,"author":{"gitId":"-"},"content":"        LITERAL_SYNCHRONIZED, LITERAL_TRY, LITERAL_WHILE, LOR, LT, MINUS,","lastModifiedDate":"2016-08-08"},{"lineNumber":275,"author":{"gitId":"-"},"content":"        MINUS_ASSIGN, MOD, MOD_ASSIGN, NOT_EQUAL, PLUS, PLUS_ASSIGN, QUESTION,","lastModifiedDate":"2016-08-08"},{"lineNumber":276,"author":{"gitId":"-"},"content":"        RCURLY, SL, SLIST, SL_ASSIGN, SR_ASSIGN, STAR, STAR_ASSIGN\"/\u003e","lastModifiedDate":"2016-12-10"},{"lineNumber":277,"author":{"gitId":"-"},"content":"      \u003c!-- Allow empty constructors e.g. MyClass() {} --\u003e","lastModifiedDate":"2016-12-10"},{"lineNumber":278,"author":{"gitId":"-"},"content":"      \u003cproperty name\u003d\"allowEmptyConstructors\" value\u003d\"true\" /\u003e","lastModifiedDate":"2022-03-16"},{"lineNumber":279,"author":{"gitId":"-"},"content":"      \u003c!-- Allow empty methods e.g. void func() {} --\u003e","lastModifiedDate":"2016-12-10"},{"lineNumber":280,"author":{"gitId":"-"},"content":"      \u003cproperty name\u003d\"allowEmptyMethods\" value\u003d\"true\" /\u003e","lastModifiedDate":"2022-03-16"},{"lineNumber":281,"author":{"gitId":"-"},"content":"      \u003c!-- Allow empty types e.g. class Foo {}, enum Foo {} --\u003e","lastModifiedDate":"2016-12-10"},{"lineNumber":282,"author":{"gitId":"-"},"content":"      \u003cproperty name\u003d\"allowEmptyTypes\" value\u003d\"true\" /\u003e","lastModifiedDate":"2022-03-16"},{"lineNumber":283,"author":{"gitId":"-"},"content":"      \u003c!-- Allow empty loops e.g. for (int i \u003d 1; i \u003e 1; i++) {} --\u003e","lastModifiedDate":"2016-12-10"},{"lineNumber":284,"author":{"gitId":"-"},"content":"      \u003cproperty name\u003d\"allowEmptyLoops\" value\u003d\"true\" /\u003e","lastModifiedDate":"2022-03-16"},{"lineNumber":285,"author":{"gitId":"-"},"content":"      \u003c!-- Allow empty lambdas e.g. () -\u003e {} --\u003e","lastModifiedDate":"2016-12-10"},{"lineNumber":286,"author":{"gitId":"-"},"content":"      \u003cproperty name\u003d\"allowEmptyLambdas\" value\u003d\"true\" /\u003e","lastModifiedDate":"2022-03-16"},{"lineNumber":287,"author":{"gitId":"-"},"content":"    \u003c/module\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":288,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":289,"author":{"gitId":"-"},"content":"    \u003cmodule name\u003d\"WhitespaceAfter\"\u003e","lastModifiedDate":"2022-03-16"},{"lineNumber":290,"author":{"gitId":"-"},"content":"      \u003c!-- Checks that commas, semicolons and typecasts are followed by whitespace. --\u003e","lastModifiedDate":"2016-10-12"},{"lineNumber":291,"author":{"gitId":"-"},"content":"      \u003cproperty name\u003d\"tokens\" value\u003d\"COMMA, SEMI, TYPECAST\"/\u003e","lastModifiedDate":"2022-03-16"},{"lineNumber":292,"author":{"gitId":"-"},"content":"    \u003c/module\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":293,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":294,"author":{"gitId":"-"},"content":"    \u003cmodule name\u003d\"NoWhitespaceAfter\"\u003e","lastModifiedDate":"2022-03-16"},{"lineNumber":295,"author":{"gitId":"-"},"content":"      \u003c!-- Checks that there is no whitespace after various unary operators. Linebreaks are allowed. --\u003e","lastModifiedDate":"2016-10-12"},{"lineNumber":296,"author":{"gitId":"-"},"content":"      \u003cproperty name\u003d\"tokens\" value\u003d\"BNOT, DEC, DOT, INC, LNOT, UNARY_MINUS,","lastModifiedDate":"2022-03-16"},{"lineNumber":297,"author":{"gitId":"-"},"content":"        UNARY_PLUS\"/\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":298,"author":{"gitId":"-"},"content":"      \u003cproperty name\u003d\"allowLineBreaks\" value\u003d\"true\"/\u003e","lastModifiedDate":"2022-03-16"},{"lineNumber":299,"author":{"gitId":"-"},"content":"    \u003c/module\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":300,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":301,"author":{"gitId":"-"},"content":"    \u003c!-- No trailing whitespace --\u003e","lastModifiedDate":"2016-12-08"},{"lineNumber":302,"author":{"gitId":"-"},"content":"    \u003cmodule name\u003d\"Regexp\"\u003e","lastModifiedDate":"2022-03-16"},{"lineNumber":303,"author":{"gitId":"-"},"content":"      \u003cproperty name\u003d\"format\" value\u003d\"[ \\t]+$\"/\u003e","lastModifiedDate":"2022-03-16"},{"lineNumber":304,"author":{"gitId":"-"},"content":"      \u003cproperty name\u003d\"illegalPattern\" value\u003d\"true\"/\u003e","lastModifiedDate":"2022-03-16"},{"lineNumber":305,"author":{"gitId":"-"},"content":"      \u003cproperty name\u003d\"message\" value\u003d\"Trailing whitespace\"/\u003e","lastModifiedDate":"2022-03-16"},{"lineNumber":306,"author":{"gitId":"-"},"content":"    \u003c/module\u003e","lastModifiedDate":"2016-12-08"},{"lineNumber":307,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-08"},{"lineNumber":308,"author":{"gitId":"-"},"content":"    \u003cmodule name\u003d\"OperatorWrap\"\u003e","lastModifiedDate":"2022-03-16"},{"lineNumber":309,"author":{"gitId":"-"},"content":"      \u003c!-- Checks that the non-assignment type operator is at the next line in a line wrap.","lastModifiedDate":"2017-05-22"},{"lineNumber":310,"author":{"gitId":"-"},"content":"           This includes \"?\", \":\", \"\u003d\u003d\", \"!\u003d\", \"/\", \"+\", \"-\", \"*\", \"%\", \"\u003e\u003e\", \"\u003e\u003e\u003e\",","lastModifiedDate":"2017-05-22"},{"lineNumber":311,"author":{"gitId":"-"},"content":"           \"\u003e\u003d\", \"\u003e\", \"\u003c\u003c\", \"\u003c\u003d\", \"\u003c\", \"^\", \"|\", \"||\", \"\u0026\", \"\u0026\u0026\", \"instanceof\",","lastModifiedDate":"2017-05-22"},{"lineNumber":312,"author":{"gitId":"-"},"content":"           \"\u0026\" when used in a generic upper or lower bounds constraints,","lastModifiedDate":"2017-05-22"},{"lineNumber":313,"author":{"gitId":"-"},"content":"             e.g. \u003cT extends Foo \u0026 Bar\u003e","lastModifiedDate":"2017-05-22"},{"lineNumber":314,"author":{"gitId":"-"},"content":"           \"::\" when used as a reference to a method or constructor without arguments.","lastModifiedDate":"2017-05-22"},{"lineNumber":315,"author":{"gitId":"-"},"content":"             e.g. String::compareToIgnoreCase","lastModifiedDate":"2017-05-22"},{"lineNumber":316,"author":{"gitId":"-"},"content":"      --\u003e","lastModifiedDate":"2017-05-22"},{"lineNumber":317,"author":{"gitId":"-"},"content":"      \u003cproperty name\u003d\"tokens\" value\u003d\"QUESTION, COLON, EQUAL, NOT_EQUAL, DIV, PLUS, MINUS, STAR, MOD, SR, BSR,","lastModifiedDate":"2022-03-16"},{"lineNumber":318,"author":{"gitId":"-"},"content":"        GE, GT, SL, LE, LT, BXOR, BOR, LOR, BAND, LAND, LITERAL_INSTANCEOF, TYPE_EXTENSION_AND, METHOD_REF\"/\u003e","lastModifiedDate":"2017-05-22"},{"lineNumber":319,"author":{"gitId":"-"},"content":"      \u003cproperty name\u003d\"option\" value\u003d\"nl\"/\u003e","lastModifiedDate":"2022-03-16"},{"lineNumber":320,"author":{"gitId":"-"},"content":"    \u003c/module\u003e","lastModifiedDate":"2017-05-22"},{"lineNumber":321,"author":{"gitId":"-"},"content":"    \u003cmodule name\u003d\"OperatorWrap\"\u003e","lastModifiedDate":"2022-03-16"},{"lineNumber":322,"author":{"gitId":"-"},"content":"      \u003c!-- Checks that the assignment type operator is at the previous end of line in a line wrap.","lastModifiedDate":"2017-05-22"},{"lineNumber":323,"author":{"gitId":"-"},"content":"           This includes \"\u003d\", \"/\u003d\", \"+\u003d\", \"-\u003d\", \"*\u003d\", \"%\u003d\", \"\u003e\u003e\u003d\", \"\u003e\u003e\u003e\u003d\", \"\u003c\u003c\u003d\", \"^\u003d\", \"\u0026\u003d\".","lastModifiedDate":"2017-05-22"},{"lineNumber":324,"author":{"gitId":"-"},"content":"      --\u003e","lastModifiedDate":"2017-05-22"},{"lineNumber":325,"author":{"gitId":"-"},"content":"      \u003cproperty name\u003d\"tokens\" value\u003d\"ASSIGN, DIV_ASSIGN, PLUS_ASSIGN, MINUS_ASSIGN, STAR_ASSIGN, MOD_ASSIGN,","lastModifiedDate":"2022-03-16"},{"lineNumber":326,"author":{"gitId":"-"},"content":"        SR_ASSIGN, BSR_ASSIGN, SL_ASSIGN, BXOR_ASSIGN, BOR_ASSIGN, BAND_ASSIGN\"/\u003e","lastModifiedDate":"2017-05-22"},{"lineNumber":327,"author":{"gitId":"-"},"content":"      \u003cproperty name\u003d\"option\" value\u003d\"eol\"/\u003e","lastModifiedDate":"2022-03-16"},{"lineNumber":328,"author":{"gitId":"-"},"content":"    \u003c/module\u003e","lastModifiedDate":"2017-05-22"},{"lineNumber":329,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":330,"author":{"gitId":"-"},"content":"    \u003cmodule name\u003d\"SeparatorWrap\"\u003e","lastModifiedDate":"2022-03-16"},{"lineNumber":331,"author":{"gitId":"-"},"content":"      \u003c!-- Checks that the \".\", \"@\" is at the next line in a line wrap. --\u003e","lastModifiedDate":"2017-04-14"},{"lineNumber":332,"author":{"gitId":"-"},"content":"      \u003cproperty name\u003d\"tokens\" value\u003d\"DOT, AT\"/\u003e","lastModifiedDate":"2022-03-16"},{"lineNumber":333,"author":{"gitId":"-"},"content":"      \u003cproperty name\u003d\"option\" value\u003d\"nl\"/\u003e","lastModifiedDate":"2022-03-16"},{"lineNumber":334,"author":{"gitId":"-"},"content":"    \u003c/module\u003e","lastModifiedDate":"2017-04-14"},{"lineNumber":335,"author":{"gitId":"-"},"content":"    \u003cmodule name\u003d\"SeparatorWrap\"\u003e","lastModifiedDate":"2022-03-16"},{"lineNumber":336,"author":{"gitId":"-"},"content":"      \u003c!-- Checks that the \",\", \"]\", \"[\", \"...\", \";\", \"(\" is at the previous end of line in a line wrap. --\u003e","lastModifiedDate":"2017-04-14"},{"lineNumber":337,"author":{"gitId":"-"},"content":"      \u003cproperty name\u003d\"tokens\" value\u003d\"COMMA, RBRACK, ARRAY_DECLARATOR, ELLIPSIS, SEMI, LPAREN\"/\u003e","lastModifiedDate":"2022-03-16"},{"lineNumber":338,"author":{"gitId":"-"},"content":"      \u003cproperty name\u003d\"option\" value\u003d\"eol\"/\u003e","lastModifiedDate":"2022-03-16"},{"lineNumber":339,"author":{"gitId":"-"},"content":"    \u003c/module\u003e","lastModifiedDate":"2017-04-14"},{"lineNumber":340,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-04-14"},{"lineNumber":341,"author":{"gitId":"-"},"content":"    \u003cmodule name\u003d\"Indentation\"\u003e","lastModifiedDate":"2022-03-16"},{"lineNumber":342,"author":{"gitId":"-"},"content":"      \u003cproperty name\u003d\"caseIndent\" value\u003d\"0\" /\u003e","lastModifiedDate":"2022-03-16"},{"lineNumber":343,"author":{"gitId":"-"},"content":"    \u003c/module\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":344,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":345,"author":{"gitId":"-"},"content":"    \u003cmodule name\u003d\"NoWhitespaceBefore\"\u003e","lastModifiedDate":"2022-03-16"},{"lineNumber":346,"author":{"gitId":"-"},"content":"      \u003c!-- Checks that there is no whitespace before various unary operators. Linebreaks are allowed. --\u003e","lastModifiedDate":"2016-10-12"},{"lineNumber":347,"author":{"gitId":"-"},"content":"      \u003cproperty name\u003d\"tokens\" value\u003d\"SEMI, DOT, POST_DEC, POST_INC\"/\u003e","lastModifiedDate":"2022-03-16"},{"lineNumber":348,"author":{"gitId":"-"},"content":"      \u003cproperty name\u003d\"allowLineBreaks\" value\u003d\"true\"/\u003e","lastModifiedDate":"2022-03-16"},{"lineNumber":349,"author":{"gitId":"-"},"content":"    \u003c/module\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":350,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":351,"author":{"gitId":"-"},"content":"    \u003cmodule name\u003d\"ParenPad\"\u003e","lastModifiedDate":"2022-03-16"},{"lineNumber":352,"author":{"gitId":"-"},"content":"      \u003c!-- Checks that there is no whitespace before close parenthesis or after open parenthesis. --\u003e","lastModifiedDate":"2016-10-12"},{"lineNumber":353,"author":{"gitId":"-"},"content":"      \u003cproperty name\u003d\"severity\" value\u003d\"warning\"/\u003e","lastModifiedDate":"2022-03-16"},{"lineNumber":354,"author":{"gitId":"-"},"content":"    \u003c/module\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":355,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":356,"author":{"gitId":"-"},"content":"    \u003c!-- Checks that non-whitespace characters are separated by no more than one whitespace character.","lastModifiedDate":"2018-08-15"},{"lineNumber":357,"author":{"gitId":"-"},"content":"         a \u003d 1; // Allowed","lastModifiedDate":"2018-08-15"},{"lineNumber":358,"author":{"gitId":"-"},"content":"         a  \u003d 1; // Not allowed (more than one space before \u003d)","lastModifiedDate":"2018-08-15"},{"lineNumber":359,"author":{"gitId":"-"},"content":"    --\u003e","lastModifiedDate":"2018-08-15"},{"lineNumber":360,"author":{"gitId":"-"},"content":"    \u003cmodule name\u003d\"SingleSpaceSeparator\"\u003e","lastModifiedDate":"2022-03-16"},{"lineNumber":361,"author":{"gitId":"-"},"content":"      \u003c!-- Validate whitespace surrounding comments as well.","lastModifiedDate":"2018-08-15"},{"lineNumber":362,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-15"},{"lineNumber":363,"author":{"gitId":"-"},"content":"           a \u003d 1; // Allowed (single space before start of comment)","lastModifiedDate":"2018-08-15"},{"lineNumber":364,"author":{"gitId":"-"},"content":"           a \u003d 1; /* Allowed (single space before start of comment) */","lastModifiedDate":"2018-08-15"},{"lineNumber":365,"author":{"gitId":"-"},"content":"           /* Allowed (single space after end of comment) */ a \u003d 1;","lastModifiedDate":"2018-08-15"},{"lineNumber":366,"author":{"gitId":"-"},"content":"           a \u003d 1;  // Not allowed (more than one space before start of comment)","lastModifiedDate":"2018-08-15"},{"lineNumber":367,"author":{"gitId":"-"},"content":"           a \u003d 1;  /* Not allowed (more than one space before start of comment) */","lastModifiedDate":"2018-08-15"},{"lineNumber":368,"author":{"gitId":"-"},"content":"           /* Not allowed (more than one space after end of comment) */  a \u003d 1;","lastModifiedDate":"2018-08-15"},{"lineNumber":369,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-15"},{"lineNumber":370,"author":{"gitId":"-"},"content":"           This doesn\u0027t validate whitespace within comments so a comment /* like  this */ is allowed.","lastModifiedDate":"2018-08-15"},{"lineNumber":371,"author":{"gitId":"-"},"content":"      --\u003e","lastModifiedDate":"2018-08-15"},{"lineNumber":372,"author":{"gitId":"-"},"content":"      \u003cproperty name\u003d\"validateComments\" value\u003d\"true\"/\u003e","lastModifiedDate":"2022-03-16"},{"lineNumber":373,"author":{"gitId":"-"},"content":"    \u003c/module\u003e","lastModifiedDate":"2018-08-15"},{"lineNumber":374,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-15"},{"lineNumber":375,"author":{"gitId":"-"},"content":"    \u003c!--","lastModifiedDate":"2017-08-20"},{"lineNumber":376,"author":{"gitId":"-"},"content":"    JAVADOC CHECKS","lastModifiedDate":"2017-08-20"},{"lineNumber":377,"author":{"gitId":"-"},"content":"    --\u003e","lastModifiedDate":"2017-08-20"},{"lineNumber":378,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-08-20"},{"lineNumber":379,"author":{"gitId":"-"},"content":"    \u003c!-- Checks that every class, enumeration and interface have a header comment. --\u003e","lastModifiedDate":"2017-08-20"},{"lineNumber":380,"author":{"gitId":"-"},"content":"    \u003cmodule name\u003d\"JavadocType\"\u003e","lastModifiedDate":"2022-03-16"},{"lineNumber":381,"author":{"gitId":"-"},"content":"      \u003cproperty name\u003d\"allowMissingParamTags\" value\u003d\"true\"/\u003e","lastModifiedDate":"2022-03-16"},{"lineNumber":382,"author":{"gitId":"-"},"content":"    \u003c/module\u003e","lastModifiedDate":"2017-08-20"},{"lineNumber":383,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-08-20"},{"lineNumber":384,"author":{"gitId":"-"},"content":"    \u003c!-- Checks that every public method (excluding getters, setters and constructors) has a header comment. --\u003e","lastModifiedDate":"2017-08-20"},{"lineNumber":385,"author":{"gitId":"-"},"content":"    \u003cmodule name\u003d\"JavadocMethod\"\u003e","lastModifiedDate":"2022-03-16"},{"lineNumber":386,"author":{"gitId":"zxgoh"},"content":"      \u003cproperty name\u003d\"allowedAnnotations\"","lastModifiedDate":"2022-03-16"},{"lineNumber":387,"author":{"gitId":"zxgoh"},"content":"                value\u003d\"Override, Test, BeforeAll, BeforeEach, AfterAll, AfterEach, Subscribe\"/\u003e","lastModifiedDate":"2022-03-16"},{"lineNumber":388,"author":{"gitId":"-"},"content":"      \u003cproperty name\u003d\"scope\" value\u003d\"public\"/\u003e","lastModifiedDate":"2022-03-16"},{"lineNumber":389,"author":{"gitId":"-"},"content":"      \u003cproperty name\u003d\"validateThrows\" value\u003d\"false\"/\u003e","lastModifiedDate":"2022-03-16"},{"lineNumber":390,"author":{"gitId":"-"},"content":"      \u003cproperty name\u003d\"allowMissingParamTags\" value\u003d\"true\"/\u003e","lastModifiedDate":"2022-03-16"},{"lineNumber":391,"author":{"gitId":"-"},"content":"      \u003cproperty name\u003d\"allowMissingReturnTag\" value\u003d\"true\"/\u003e","lastModifiedDate":"2022-03-16"},{"lineNumber":392,"author":{"gitId":"-"},"content":"      \u003cproperty name\u003d\"tokens\" value\u003d\"METHOD_DEF, ANNOTATION_FIELD_DEF\"/\u003e","lastModifiedDate":"2022-03-16"},{"lineNumber":393,"author":{"gitId":"-"},"content":"    \u003c/module\u003e","lastModifiedDate":"2022-03-16"},{"lineNumber":394,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-03-16"},{"lineNumber":395,"author":{"gitId":"-"},"content":"    \u003cmodule name\u003d\"InvalidJavadocPosition\"/\u003e","lastModifiedDate":"2022-03-16"},{"lineNumber":396,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-03-16"},{"lineNumber":397,"author":{"gitId":"-"},"content":"    \u003cmodule name\u003d\"MissingJavadocMethodCheck\"\u003e","lastModifiedDate":"2022-03-16"},{"lineNumber":398,"author":{"gitId":"-"},"content":"      \u003cproperty name\u003d\"minLineCount\" value\u003d\"1\"/\u003e","lastModifiedDate":"2022-03-16"},{"lineNumber":399,"author":{"gitId":"-"},"content":"      \u003cproperty name\u003d\"allowMissingPropertyJavadoc\" value\u003d\"true\"/\u003e","lastModifiedDate":"2022-03-16"},{"lineNumber":400,"author":{"gitId":"-"},"content":"      \u003cproperty name\u003d\"ignoreMethodNamesRegex\" value\u003d\"(set.*|get.*)\"/\u003e","lastModifiedDate":"2022-03-16"},{"lineNumber":401,"author":{"gitId":"-"},"content":"    \u003c/module\u003e","lastModifiedDate":"2017-08-20"},{"lineNumber":402,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-08-20"},{"lineNumber":403,"author":{"gitId":"-"},"content":"  \u003c/module\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":404,"author":{"gitId":"-"},"content":"\u003c/module\u003e","lastModifiedDate":"2016-08-08"}],"authorContributionMap":{"-":402,"zxgoh":2}},{"path":"docs/AboutUs.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"---","lastModifiedDate":"2020-05-23"},{"lineNumber":2,"author":{"gitId":"-"},"content":"layout: page","lastModifiedDate":"2020-05-23"},{"lineNumber":3,"author":{"gitId":"-"},"content":"title: About Us","lastModifiedDate":"2020-05-23"},{"lineNumber":4,"author":{"gitId":"-"},"content":"---","lastModifiedDate":"2020-05-23"},{"lineNumber":5,"author":{"gitId":"zxgoh"},"content":"## FoodOnWheels","lastModifiedDate":"2022-02-23"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":7,"author":{"gitId":"-"},"content":"We are a team based in the [School of Computing, National University of Singapore](http://www.comp.nus.edu.sg).","lastModifiedDate":"2020-05-23"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":9,"author":{"gitId":"-"},"content":"You can reach us at the email `seer[at]comp.nus.edu.sg`","lastModifiedDate":"2020-06-17"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-06-17"},{"lineNumber":11,"author":{"gitId":"-"},"content":"## Project team","lastModifiedDate":"2020-06-07"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":13,"author":{"gitId":"zxgoh"},"content":"### Jaegar Poon Yu Yao","lastModifiedDate":"2022-02-23"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":15,"author":{"gitId":"jaegarpoon"},"content":"\u003cimg src\u003d\"images/jaegarpoon.png\" width\u003d\"200px\"\u003e","lastModifiedDate":"2022-03-04"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":17,"author":{"gitId":"jaegarpoon"},"content":"[[github](https://github.com/jaegarpoon)] [[portfolio](team/jaegarpoon.md)]","lastModifiedDate":"2022-03-04"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":19,"author":{"gitId":"zxgoh"},"content":"* Role: ","lastModifiedDate":"2022-02-23"},{"lineNumber":20,"author":{"gitId":"zxgoh"},"content":"* Responsibilities: ","lastModifiedDate":"2022-02-23"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":22,"author":{"gitId":"zxgoh"},"content":"### Goh Zi Xuan","lastModifiedDate":"2022-02-23"},{"lineNumber":23,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":24,"author":{"gitId":"zxgoh"},"content":"\u003cimg src\u003d\"images/zxgoh.png\" width\u003d\"200px\"\u003e","lastModifiedDate":"2022-03-06"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":26,"author":{"gitId":"zxgoh"},"content":"[[github](https://github.com/zxgoh)] [[portfolio](team/zxgoh.md)]","lastModifiedDate":"2022-02-23"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":28,"author":{"gitId":"zxgoh"},"content":"* Role: ","lastModifiedDate":"2022-02-23"},{"lineNumber":29,"author":{"gitId":"zxgoh"},"content":"* Responsibilities: ","lastModifiedDate":"2022-02-23"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":31,"author":{"gitId":"zxgoh"},"content":"### Nguyen Minh Hieu","lastModifiedDate":"2022-02-23"},{"lineNumber":32,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":33,"author":{"gitId":"hieunm1821"},"content":"\u003cimg src\u003d\"images/hieunm1821.png\" width\u003d\"200px\"\u003e","lastModifiedDate":"2022-02-26"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":35,"author":{"gitId":"hieunm1821"},"content":"[[github](http://github.com/hieunm1821)]","lastModifiedDate":"2022-02-26"},{"lineNumber":36,"author":{"gitId":"hieunm1821"},"content":"[[portfolio](team/hieunm1821.md)]","lastModifiedDate":"2022-02-26"},{"lineNumber":37,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":38,"author":{"gitId":"zxgoh"},"content":"* Role: ","lastModifiedDate":"2022-02-23"},{"lineNumber":39,"author":{"gitId":"zxgoh"},"content":"* Responsibilities: ","lastModifiedDate":"2022-02-23"},{"lineNumber":40,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":41,"author":{"gitId":"zxgoh"},"content":"### Xing Zheng","lastModifiedDate":"2022-02-23"},{"lineNumber":42,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":43,"author":{"gitId":"zxgoh"},"content":"\u003cimg src\u003d\"images/xzzz3.png\" width\u003d\"200px\"\u003e","lastModifiedDate":"2022-02-25"},{"lineNumber":44,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":45,"author":{"gitId":"xzzz3"},"content":"[[github](http://github.com/xzzz3)]","lastModifiedDate":"2022-02-24"},{"lineNumber":46,"author":{"gitId":"xzzz3"},"content":"[[portfolio](team/xzzz3.md)]","lastModifiedDate":"2022-02-24"},{"lineNumber":47,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":48,"author":{"gitId":"zxgoh"},"content":"* Role: ","lastModifiedDate":"2022-02-23"},{"lineNumber":49,"author":{"gitId":"zxgoh"},"content":"* Responsibilities: ","lastModifiedDate":"2022-02-23"}],"authorContributionMap":{"hieunm1821":3,"xzzz3":2,"jaegarpoon":2,"-":26,"zxgoh":16}},{"path":"docs/DeveloperGuide.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"---","lastModifiedDate":"2020-05-23"},{"lineNumber":2,"author":{"gitId":"-"},"content":"layout: page","lastModifiedDate":"2020-05-23"},{"lineNumber":3,"author":{"gitId":"-"},"content":"title: Developer Guide","lastModifiedDate":"2020-05-23"},{"lineNumber":4,"author":{"gitId":"-"},"content":"---","lastModifiedDate":"2020-05-23"},{"lineNumber":5,"author":{"gitId":"-"},"content":"* Table of Contents","lastModifiedDate":"2020-05-23"},{"lineNumber":6,"author":{"gitId":"-"},"content":"{:toc}","lastModifiedDate":"2020-05-23"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":8,"author":{"gitId":"-"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2020-05-23"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-30"},{"lineNumber":10,"author":{"gitId":"-"},"content":"## **Acknowledgements**","lastModifiedDate":"2021-07-30"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-30"},{"lineNumber":12,"author":{"gitId":"jaegarpoon"},"content":"* This project is based on the AddressBook-Level3 project created by the [SE-EDU initiative](https://se-education.org).","lastModifiedDate":"2022-03-24"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-30"},{"lineNumber":14,"author":{"gitId":"-"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2021-07-30"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":16,"author":{"gitId":"-"},"content":"## **Setting up, getting started**","lastModifiedDate":"2020-05-23"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":18,"author":{"gitId":"-"},"content":"Refer to the guide [_Setting up and getting started_](SettingUp.md).","lastModifiedDate":"2020-05-23"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":20,"author":{"gitId":"-"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2020-05-23"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":22,"author":{"gitId":"-"},"content":"## **Design**","lastModifiedDate":"2020-05-23"},{"lineNumber":23,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":24,"author":{"gitId":"-"},"content":"\u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-primary\"\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":26,"author":{"gitId":"-"},"content":":bulb: **Tip:** The `.puml` files used to create diagrams in this document can be found in the [diagrams](https://github.com/se-edu/addressbook-level3/tree/master/docs/diagrams/) folder. Refer to the [_PlantUML Tutorial_ at se-edu/guides](https://se-education.org/guides/tutorials/plantUml.html) to learn how to create and edit diagrams.","lastModifiedDate":"2021-07-31"},{"lineNumber":27,"author":{"gitId":"-"},"content":"\u003c/div\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":29,"author":{"gitId":"-"},"content":"### Architecture","lastModifiedDate":"2021-07-31"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":31,"author":{"gitId":"-"},"content":"\u003cimg src\u003d\"images/ArchitectureDiagram.png\" width\u003d\"280\" /\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":32,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":33,"author":{"gitId":"-"},"content":"The ***Architecture Diagram*** given above explains the high-level design of the App.","lastModifiedDate":"2021-07-31"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":35,"author":{"gitId":"-"},"content":"Given below is a quick overview of main components and how they interact with each other.","lastModifiedDate":"2021-07-31"},{"lineNumber":36,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":37,"author":{"gitId":"-"},"content":"**Main components of the architecture**","lastModifiedDate":"2021-07-31"},{"lineNumber":38,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":39,"author":{"gitId":"-"},"content":"**`Main`** has two classes called [`Main`](https://github.com/se-edu/addressbook-level3/tree/master/src/main/java/seedu/address/Main.java) and [`MainApp`](https://github.com/se-edu/addressbook-level3/tree/master/src/main/java/seedu/address/MainApp.java). It is responsible for,","lastModifiedDate":"2020-05-23"},{"lineNumber":40,"author":{"gitId":"-"},"content":"* At app launch: Initializes the components in the correct sequence, and connects them up with each other.","lastModifiedDate":"2020-05-23"},{"lineNumber":41,"author":{"gitId":"-"},"content":"* At shut down: Shuts down the components and invokes cleanup methods where necessary.","lastModifiedDate":"2020-05-23"},{"lineNumber":42,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":43,"author":{"gitId":"-"},"content":"[**`Commons`**](#common-classes) represents a collection of classes used by multiple other components.","lastModifiedDate":"2020-05-23"},{"lineNumber":44,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":45,"author":{"gitId":"-"},"content":"The rest of the App consists of four components.","lastModifiedDate":"2020-05-23"},{"lineNumber":46,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":47,"author":{"gitId":"-"},"content":"* [**`UI`**](#ui-component): The UI of the App.","lastModifiedDate":"2020-05-23"},{"lineNumber":48,"author":{"gitId":"-"},"content":"* [**`Logic`**](#logic-component): The command executor.","lastModifiedDate":"2020-05-23"},{"lineNumber":49,"author":{"gitId":"-"},"content":"* [**`Model`**](#model-component): Holds the data of the App in memory.","lastModifiedDate":"2020-05-23"},{"lineNumber":50,"author":{"gitId":"-"},"content":"* [**`Storage`**](#storage-component): Reads data from, and writes data to, the hard disk.","lastModifiedDate":"2020-05-23"},{"lineNumber":51,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":52,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":53,"author":{"gitId":"-"},"content":"**How the architecture components interact with each other**","lastModifiedDate":"2020-05-23"},{"lineNumber":54,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":55,"author":{"gitId":"-"},"content":"The *Sequence Diagram* below shows how the components interact with each other for the scenario where the user issues the command `delete 1`.","lastModifiedDate":"2020-05-23"},{"lineNumber":56,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":57,"author":{"gitId":"-"},"content":"\u003cimg src\u003d\"images/ArchitectureSequenceDiagram.png\" width\u003d\"574\" /\u003e","lastModifiedDate":"2020-06-07"},{"lineNumber":58,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":59,"author":{"gitId":"-"},"content":"Each of the four main components (also shown in the diagram above),","lastModifiedDate":"2021-07-31"},{"lineNumber":60,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":61,"author":{"gitId":"-"},"content":"* defines its *API* in an `interface` with the same name as the Component.","lastModifiedDate":"2021-07-31"},{"lineNumber":62,"author":{"gitId":"-"},"content":"* implements its functionality using a concrete `{Component Name}Manager` class (which follows the corresponding API `interface` mentioned in the previous point.","lastModifiedDate":"2021-07-31"},{"lineNumber":63,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":64,"author":{"gitId":"-"},"content":"For example, the `Logic` component defines its API in the `Logic.java` interface and implements its functionality using the `LogicManager.java` class which follows the `Logic` interface. Other components interact with a given component through its interface rather than the concrete class (reason: to prevent outside component\u0027s being coupled to the implementation of a component), as illustrated in the (partial) class diagram below.","lastModifiedDate":"2021-07-31"},{"lineNumber":65,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":66,"author":{"gitId":"-"},"content":"\u003cimg src\u003d\"images/ComponentManagers.png\" width\u003d\"300\" /\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":67,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":68,"author":{"gitId":"-"},"content":"The sections below give more details of each component.","lastModifiedDate":"2020-05-23"},{"lineNumber":69,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":70,"author":{"gitId":"-"},"content":"### UI component","lastModifiedDate":"2020-05-23"},{"lineNumber":71,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":72,"author":{"gitId":"-"},"content":"The **API** of this component is specified in [`Ui.java`](https://github.com/se-edu/addressbook-level3/tree/master/src/main/java/seedu/address/ui/Ui.java)","lastModifiedDate":"2021-07-31"},{"lineNumber":73,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":74,"author":{"gitId":"-"},"content":"![Structure of the UI Component](images/UiClassDiagram.png)","lastModifiedDate":"2021-07-31"},{"lineNumber":75,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":76,"author":{"gitId":"jaegarpoon"},"content":"The UI consists of a `MainWindow` that is made up of parts e.g.`CommandBox`, `ResultDisplay`, `ListPanel`, `StatusBarFooter` etc. All these, including the `MainWindow`, inherit from the abstract `UiPart` class which captures the commonalities between classes that represent parts of the visible GUI.","lastModifiedDate":"2022-03-24"},{"lineNumber":77,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":78,"author":{"gitId":"-"},"content":"The `UI` component uses the JavaFx UI framework. The layout of these UI parts are defined in matching `.fxml` files that are in the `src/main/resources/view` folder. For example, the layout of the [`MainWindow`](https://github.com/se-edu/addressbook-level3/tree/master/src/main/java/seedu/address/ui/MainWindow.java) is specified in [`MainWindow.fxml`](https://github.com/se-edu/addressbook-level3/tree/master/src/main/resources/view/MainWindow.fxml)","lastModifiedDate":"2021-07-31"},{"lineNumber":79,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":80,"author":{"gitId":"-"},"content":"The `UI` component,","lastModifiedDate":"2020-05-23"},{"lineNumber":81,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":82,"author":{"gitId":"-"},"content":"* executes user commands using the `Logic` component.","lastModifiedDate":"2021-07-31"},{"lineNumber":83,"author":{"gitId":"-"},"content":"* listens for changes to `Model` data so that the UI can be updated with the modified data.","lastModifiedDate":"2021-07-31"},{"lineNumber":84,"author":{"gitId":"-"},"content":"* keeps a reference to the `Logic` component, because the `UI` relies on the `Logic` to execute commands.","lastModifiedDate":"2021-07-31"},{"lineNumber":85,"author":{"gitId":"-"},"content":"* depends on some classes in the `Model` component, as it displays `Person` object residing in the `Model`.","lastModifiedDate":"2021-07-31"},{"lineNumber":86,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":87,"author":{"gitId":"-"},"content":"### Logic component","lastModifiedDate":"2020-05-23"},{"lineNumber":88,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":89,"author":{"gitId":"-"},"content":"**API** : [`Logic.java`](https://github.com/se-edu/addressbook-level3/tree/master/src/main/java/seedu/address/logic/Logic.java)","lastModifiedDate":"2021-07-31"},{"lineNumber":90,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":91,"author":{"gitId":"-"},"content":"Here\u0027s a (partial) class diagram of the `Logic` component:","lastModifiedDate":"2021-07-31"},{"lineNumber":92,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":93,"author":{"gitId":"-"},"content":"\u003cimg src\u003d\"images/LogicClassDiagram.png\" width\u003d\"550\"/\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":94,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":95,"author":{"gitId":"-"},"content":"How the `Logic` component works:","lastModifiedDate":"2021-07-31"},{"lineNumber":96,"author":{"gitId":"-"},"content":"1. When `Logic` is called upon to execute a command, it uses the `AddressBookParser` class to parse the user command.","lastModifiedDate":"2021-07-31"},{"lineNumber":97,"author":{"gitId":"-"},"content":"1. This results in a `Command` object (more precisely, an object of one of its subclasses e.g., `AddCommand`) which is executed by the `LogicManager`.","lastModifiedDate":"2021-07-31"},{"lineNumber":98,"author":{"gitId":"-"},"content":"1. The command can communicate with the `Model` when it is executed (e.g. to add a person).","lastModifiedDate":"2021-07-31"},{"lineNumber":99,"author":{"gitId":"-"},"content":"1. The result of the command execution is encapsulated as a `CommandResult` object which is returned back from `Logic`.","lastModifiedDate":"2021-07-31"},{"lineNumber":100,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":101,"author":{"gitId":"-"},"content":"The Sequence Diagram below illustrates the interactions within the `Logic` component for the `execute(\"delete 1\")` API call.","lastModifiedDate":"2021-07-31"},{"lineNumber":102,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":103,"author":{"gitId":"-"},"content":"![Interactions Inside the Logic Component for the `delete 1` Command](images/DeleteSequenceDiagram.png)","lastModifiedDate":"2020-05-23"},{"lineNumber":104,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":105,"author":{"gitId":"-"},"content":"\u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-info\"\u003e:information_source: **Note:** The lifeline for `DeleteCommandParser` should end at the destroy marker (X) but due to a limitation of PlantUML, the lifeline reaches the end of diagram.","lastModifiedDate":"2020-05-23"},{"lineNumber":106,"author":{"gitId":"-"},"content":"\u003c/div\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":107,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":108,"author":{"gitId":"-"},"content":"Here are the other classes in `Logic` (omitted from the class diagram above) that are used for parsing a user command:","lastModifiedDate":"2021-07-31"},{"lineNumber":109,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":110,"author":{"gitId":"-"},"content":"\u003cimg src\u003d\"images/ParserClasses.png\" width\u003d\"600\"/\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":111,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":112,"author":{"gitId":"-"},"content":"How the parsing works:","lastModifiedDate":"2021-07-31"},{"lineNumber":113,"author":{"gitId":"-"},"content":"* When called upon to parse a user command, the `AddressBookParser` class creates an `XYZCommandParser` (`XYZ` is a placeholder for the specific command name e.g., `AddCommandParser`) which uses the other classes shown above to parse the user command and create a `XYZCommand` object (e.g., `AddCommand`) which the `AddressBookParser` returns back as a `Command` object.","lastModifiedDate":"2021-07-31"},{"lineNumber":114,"author":{"gitId":"-"},"content":"* All `XYZCommandParser` classes (e.g., `AddCommandParser`, `DeleteCommandParser`, ...) inherit from the `Parser` interface so that they can be treated similarly where possible e.g, during testing.","lastModifiedDate":"2021-07-31"},{"lineNumber":115,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":116,"author":{"gitId":"-"},"content":"### Model component","lastModifiedDate":"2021-07-31"},{"lineNumber":117,"author":{"gitId":"-"},"content":"**API** : [`Model.java`](https://github.com/se-edu/addressbook-level3/tree/master/src/main/java/seedu/address/model/Model.java)","lastModifiedDate":"2020-05-23"},{"lineNumber":118,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":119,"author":{"gitId":"jaegarpoon"},"content":"","lastModifiedDate":"2022-03-24"},{"lineNumber":120,"author":{"gitId":"jaegarpoon"},"content":"(todo: Update Model Class Diagram)","lastModifiedDate":"2022-03-24"},{"lineNumber":121,"author":{"gitId":"-"},"content":"\u003cimg src\u003d\"images/ModelClassDiagram.png\" width\u003d\"450\" /\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":122,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":123,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":124,"author":{"gitId":"-"},"content":"The `Model` component,","lastModifiedDate":"2021-07-31"},{"lineNumber":125,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":126,"author":{"gitId":"jaegarpoon"},"content":"* stores the FoodOnWheels data i.e., all `Dish/Customer/Driver/Order` objects (`Dish` objects are contained in a `UniqueDishList` object, `Customer` objects are contained in a `UniqueCustomerList` object, etc.).","lastModifiedDate":"2022-03-24"},{"lineNumber":127,"author":{"gitId":"jaegarpoon"},"content":"* stores the currently \u0027selected\u0027 `Dish/Customer/Driver/Order` objects (e.g., results of a search query) as a separate _filtered_ list which is exposed to outsiders as an unmodifiable `ObservableList\u003c\u003e` that can be \u0027observed\u0027 e.g. the UI can be bound to this list so that the UI automatically updates when the data in the list change.","lastModifiedDate":"2022-03-24"},{"lineNumber":128,"author":{"gitId":"-"},"content":"* stores a `UserPref` object that represents the user’s preferences. This is exposed to the outside as a `ReadOnlyUserPref` objects.","lastModifiedDate":"2021-07-31"},{"lineNumber":129,"author":{"gitId":"-"},"content":"* does not depend on any of the other three components (as the `Model` represents data entities of the domain, they should make sense on their own without depending on other components)","lastModifiedDate":"2021-07-31"},{"lineNumber":130,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":131,"author":{"gitId":"-"},"content":"\u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-info\"\u003e:information_source: **Note:** An alternative (arguably, a more OOP) model is given below. It has a `Tag` list in the `AddressBook`, which `Person` references. This allows `AddressBook` to only require one `Tag` object per unique tag, instead of each `Person` needing their own `Tag` objects.\u003cbr\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":132,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":133,"author":{"gitId":"-"},"content":"\u003cimg src\u003d\"images/BetterModelClassDiagram.png\" width\u003d\"450\" /\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":134,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":135,"author":{"gitId":"-"},"content":"\u003c/div\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":136,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":137,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":138,"author":{"gitId":"-"},"content":"### Storage component","lastModifiedDate":"2020-05-23"},{"lineNumber":139,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":140,"author":{"gitId":"-"},"content":"**API** : [`Storage.java`](https://github.com/se-edu/addressbook-level3/tree/master/src/main/java/seedu/address/storage/Storage.java)","lastModifiedDate":"2020-05-23"},{"lineNumber":141,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":142,"author":{"gitId":"jaegarpoon"},"content":"(todo: update storage class diagram)","lastModifiedDate":"2022-03-24"},{"lineNumber":143,"author":{"gitId":"-"},"content":"\u003cimg src\u003d\"images/StorageClassDiagram.png\" width\u003d\"550\" /\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":144,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":145,"author":{"gitId":"-"},"content":"The `Storage` component,","lastModifiedDate":"2020-05-23"},{"lineNumber":146,"author":{"gitId":"-"},"content":"* can save both address book data and user preference data in json format, and read them back into corresponding objects.","lastModifiedDate":"2021-07-31"},{"lineNumber":147,"author":{"gitId":"-"},"content":"* inherits from both `AddressBookStorage` and `UserPrefStorage`, which means it can be treated as either one (if only the functionality of only one is needed).","lastModifiedDate":"2021-07-31"},{"lineNumber":148,"author":{"gitId":"-"},"content":"* depends on some classes in the `Model` component (because the `Storage` component\u0027s job is to save/retrieve objects that belong to the `Model`)","lastModifiedDate":"2021-07-21"},{"lineNumber":149,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":150,"author":{"gitId":"-"},"content":"### Common classes","lastModifiedDate":"2020-05-23"},{"lineNumber":151,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":152,"author":{"gitId":"-"},"content":"Classes used by multiple components are in the `seedu.addressbook.commons` package.","lastModifiedDate":"2020-05-23"},{"lineNumber":153,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":154,"author":{"gitId":"-"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2020-05-23"},{"lineNumber":155,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":156,"author":{"gitId":"zxgoh"},"content":"","lastModifiedDate":"2022-03-25"},{"lineNumber":157,"author":{"gitId":"-"},"content":"## **Implementation**","lastModifiedDate":"2020-05-23"},{"lineNumber":158,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":159,"author":{"gitId":"-"},"content":"This section describes some noteworthy details on how certain features are implemented.","lastModifiedDate":"2020-05-23"},{"lineNumber":160,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":161,"author":{"gitId":"hieunm1821"},"content":"","lastModifiedDate":"2022-03-26"},{"lineNumber":162,"author":{"gitId":"hieunm1821"},"content":"### Add/Delete Driver feature","lastModifiedDate":"2022-03-24"},{"lineNumber":163,"author":{"gitId":"hieunm1821"},"content":"","lastModifiedDate":"2022-03-24"},{"lineNumber":164,"author":{"gitId":"hieunm1821"},"content":"#### Implementation","lastModifiedDate":"2022-03-24"},{"lineNumber":165,"author":{"gitId":"hieunm1821"},"content":"","lastModifiedDate":"2022-03-24"},{"lineNumber":166,"author":{"gitId":"hieunm1821"},"content":"The add/delete/list driver feature are commands which inherits from `Command`. These are the basic commands","lastModifiedDate":"2022-03-24"},{"lineNumber":167,"author":{"gitId":"hieunm1821"},"content":"to add, remove or view `Driver` objects.","lastModifiedDate":"2022-03-24"},{"lineNumber":168,"author":{"gitId":"hieunm1821"},"content":"","lastModifiedDate":"2022-03-24"},{"lineNumber":169,"author":{"gitId":"hieunm1821"},"content":"#### Example run-through","lastModifiedDate":"2022-03-24"},{"lineNumber":170,"author":{"gitId":"hieunm1821"},"content":"","lastModifiedDate":"2022-03-24"},{"lineNumber":171,"author":{"gitId":"hieunm1821"},"content":"(todo: sequence diagram for add/delete/list driver)","lastModifiedDate":"2022-03-24"},{"lineNumber":172,"author":{"gitId":"hieunm1821"},"content":"A sample run-through is shown below in the sequence diagram:","lastModifiedDate":"2022-03-24"},{"lineNumber":173,"author":{"gitId":"hieunm1821"},"content":"","lastModifiedDate":"2022-03-24"},{"lineNumber":174,"author":{"gitId":"hieunm1821"},"content":"### List Driver feature","lastModifiedDate":"2022-03-24"},{"lineNumber":175,"author":{"gitId":"hieunm1821"},"content":"","lastModifiedDate":"2022-03-24"},{"lineNumber":176,"author":{"gitId":"hieunm1821"},"content":"#### Implementation","lastModifiedDate":"2022-03-24"},{"lineNumber":177,"author":{"gitId":"hieunm1821"},"content":"","lastModifiedDate":"2022-03-24"},{"lineNumber":178,"author":{"gitId":"hieunm1821"},"content":"The list driver feature is a command which inherits from `FindCommand`. It is the basic command ","lastModifiedDate":"2022-03-24"},{"lineNumber":179,"author":{"gitId":"hieunm1821"},"content":"to find `Driver` objects which have the status match with the argument in the command.","lastModifiedDate":"2022-03-24"},{"lineNumber":180,"author":{"gitId":"hieunm1821"},"content":"","lastModifiedDate":"2022-03-24"},{"lineNumber":181,"author":{"gitId":"hieunm1821"},"content":"#### Example run-through","lastModifiedDate":"2022-03-24"},{"lineNumber":182,"author":{"gitId":"hieunm1821"},"content":"","lastModifiedDate":"2022-03-24"},{"lineNumber":183,"author":{"gitId":"hieunm1821"},"content":"(todo: sequence diagram for add/delete/list driver)","lastModifiedDate":"2022-03-24"},{"lineNumber":184,"author":{"gitId":"hieunm1821"},"content":"A sample run-through is shown below in the sequence diagram:","lastModifiedDate":"2022-03-24"},{"lineNumber":185,"author":{"gitId":"hieunm1821"},"content":"","lastModifiedDate":"2022-03-24"},{"lineNumber":186,"author":{"gitId":"zxgoh"},"content":"### Add Customer feature","lastModifiedDate":"2022-03-25"},{"lineNumber":187,"author":{"gitId":"zxgoh"},"content":"","lastModifiedDate":"2022-03-25"},{"lineNumber":188,"author":{"gitId":"zxgoh"},"content":"#### Implementation","lastModifiedDate":"2022-03-25"},{"lineNumber":189,"author":{"gitId":"zxgoh"},"content":"","lastModifiedDate":"2022-03-25"},{"lineNumber":190,"author":{"gitId":"zxgoh"},"content":"The add customer mechanism is facilitated by `Customer`. It is a model in the application and some of its important","lastModifiedDate":"2022-03-25"},{"lineNumber":191,"author":{"gitId":"zxgoh"},"content":"attributes include:","lastModifiedDate":"2022-03-25"},{"lineNumber":192,"author":{"gitId":"zxgoh"},"content":"","lastModifiedDate":"2022-03-25"},{"lineNumber":193,"author":{"gitId":"zxgoh"},"content":"* `NameCustomer`  — Contains the name of the given customer","lastModifiedDate":"2022-03-25"},{"lineNumber":194,"author":{"gitId":"zxgoh"},"content":"* `PhoneCustomer`  — Contains the phone number of the given customer","lastModifiedDate":"2022-03-25"},{"lineNumber":195,"author":{"gitId":"zxgoh"},"content":"* `AddressCustomer`  — Contains the address of the given customer","lastModifiedDate":"2022-03-25"},{"lineNumber":196,"author":{"gitId":"zxgoh"},"content":"","lastModifiedDate":"2022-03-25"},{"lineNumber":197,"author":{"gitId":"zxgoh"},"content":"These attributes are used in the `customer#Customer()` instantiation, which is called to create a new Customer when the","lastModifiedDate":"2022-03-25"},{"lineNumber":198,"author":{"gitId":"zxgoh"},"content":"add customer  ","lastModifiedDate":"2022-03-25"},{"lineNumber":199,"author":{"gitId":"zxgoh"},"content":"command is called.","lastModifiedDate":"2022-03-25"},{"lineNumber":200,"author":{"gitId":"zxgoh"},"content":"","lastModifiedDate":"2022-03-25"},{"lineNumber":201,"author":{"gitId":"zxgoh"},"content":"Given below is an example usage scenario and how the add customer mechanism behaves at each step.","lastModifiedDate":"2022-03-25"},{"lineNumber":202,"author":{"gitId":"zxgoh"},"content":"","lastModifiedDate":"2022-03-25"},{"lineNumber":203,"author":{"gitId":"zxgoh"},"content":"Step 1. The user executes the `addcustomer n/john p/12345678 a/nus` command in the application to add a given","lastModifiedDate":"2022-03-25"},{"lineNumber":204,"author":{"gitId":"zxgoh"},"content":"customer, which is handled by `Logic#execute`.","lastModifiedDate":"2022-03-25"},{"lineNumber":205,"author":{"gitId":"zxgoh"},"content":"The `addcustomer` command is parsed by the `AddressBookParser#parseCommand` and `AddCustomerCommandParser#parse` to","lastModifiedDate":"2022-03-25"},{"lineNumber":206,"author":{"gitId":"zxgoh"},"content":"create a new","lastModifiedDate":"2022-03-25"},{"lineNumber":207,"author":{"gitId":"zxgoh"},"content":"`AddCustomerCommand` with the given phone number and dishes.","lastModifiedDate":"2022-03-25"},{"lineNumber":208,"author":{"gitId":"zxgoh"},"content":"","lastModifiedDate":"2022-03-25"},{"lineNumber":209,"author":{"gitId":"zxgoh"},"content":"Step 2. The `Logic` then executes the `AddCustomerCommand#execute()` with a `Customer` object","lastModifiedDate":"2022-03-25"},{"lineNumber":210,"author":{"gitId":"zxgoh"},"content":"","lastModifiedDate":"2022-03-25"},{"lineNumber":211,"author":{"gitId":"zxgoh"},"content":"Step 3. The `Customer` object, which contains the following attributes `NameCustomer` `PhoneCustomer`","lastModifiedDate":"2022-03-25"},{"lineNumber":212,"author":{"gitId":"zxgoh"},"content":"`AddressCustomer` is added to the `Model` with","lastModifiedDate":"2022-03-25"},{"lineNumber":213,"author":{"gitId":"zxgoh"},"content":"`Model#addCustomer()`.","lastModifiedDate":"2022-03-25"},{"lineNumber":214,"author":{"gitId":"zxgoh"},"content":"","lastModifiedDate":"2022-03-25"},{"lineNumber":215,"author":{"gitId":"zxgoh"},"content":"Step 5. A new `CommandResult` with the success message is returned to `Logic` and returned as the output.","lastModifiedDate":"2022-03-25"},{"lineNumber":216,"author":{"gitId":"zxgoh"},"content":"","lastModifiedDate":"2022-03-25"},{"lineNumber":217,"author":{"gitId":"zxgoh"},"content":"#### Design considerations:","lastModifiedDate":"2022-03-25"},{"lineNumber":218,"author":{"gitId":"zxgoh"},"content":"* The `Customer` ensures that the value of the customer name, phone number and address is enclosed by the","lastModifiedDate":"2022-03-25"},{"lineNumber":219,"author":{"gitId":"zxgoh"},"content":"  `NameCustomer` `PhoneCustomer` `AddressCustomer` classes instead of `Name` `Phone` `Address` respectively in order to","lastModifiedDate":"2022-03-25"},{"lineNumber":220,"author":{"gitId":"zxgoh"},"content":"  ensure","lastModifiedDate":"2022-03-25"},{"lineNumber":221,"author":{"gitId":"zxgoh"},"content":"  greater level of encapsulation of data being handled.","lastModifiedDate":"2022-03-25"},{"lineNumber":222,"author":{"gitId":"zxgoh"},"content":"","lastModifiedDate":"2022-03-25"},{"lineNumber":223,"author":{"gitId":"zxgoh"},"content":"![AddCustomerSequenceDiagram](images/AddCustomerSequenceDiagram.png)","lastModifiedDate":"2022-03-25"},{"lineNumber":224,"author":{"gitId":"zxgoh"},"content":"","lastModifiedDate":"2022-03-25"},{"lineNumber":225,"author":{"gitId":"zxgoh"},"content":"### Delete Customer feature","lastModifiedDate":"2022-03-25"},{"lineNumber":226,"author":{"gitId":"zxgoh"},"content":"","lastModifiedDate":"2022-03-25"},{"lineNumber":227,"author":{"gitId":"zxgoh"},"content":"#### Implementation","lastModifiedDate":"2022-03-25"},{"lineNumber":228,"author":{"gitId":"zxgoh"},"content":"","lastModifiedDate":"2022-03-25"},{"lineNumber":229,"author":{"gitId":"zxgoh"},"content":"The delete customer mechanism is faciliated by `Customer`.","lastModifiedDate":"2022-03-25"},{"lineNumber":230,"author":{"gitId":"zxgoh"},"content":"","lastModifiedDate":"2022-03-25"},{"lineNumber":231,"author":{"gitId":"zxgoh"},"content":"Given below is an example usage scenario and how the delete customer mechanism behaves at each step.","lastModifiedDate":"2022-03-25"},{"lineNumber":232,"author":{"gitId":"zxgoh"},"content":"","lastModifiedDate":"2022-03-25"},{"lineNumber":233,"author":{"gitId":"zxgoh"},"content":"Step 1. The user executes the `deletecustomer 3` command in the application to delete the customer represented with","lastModifiedDate":"2022-03-25"},{"lineNumber":234,"author":{"gitId":"zxgoh"},"content":"the index 3.","lastModifiedDate":"2022-03-25"},{"lineNumber":235,"author":{"gitId":"zxgoh"},"content":"The `deletecustomer` keyword is parsed by the `AddressBookParser#parseCommand` and","lastModifiedDate":"2022-03-25"},{"lineNumber":236,"author":{"gitId":"zxgoh"},"content":"`DeleteCustomerCommandParser#parse` to","lastModifiedDate":"2022-03-25"},{"lineNumber":237,"author":{"gitId":"zxgoh"},"content":"create a new `DeleteCustomerCommand` with the given index.","lastModifiedDate":"2022-03-25"},{"lineNumber":238,"author":{"gitId":"zxgoh"},"content":"","lastModifiedDate":"2022-03-25"},{"lineNumber":239,"author":{"gitId":"zxgoh"},"content":"Step 2. The `Logic` then executes the `DeleteCustomerCommand#execute()`.","lastModifiedDate":"2022-03-25"},{"lineNumber":240,"author":{"gitId":"zxgoh"},"content":"","lastModifiedDate":"2022-03-25"},{"lineNumber":241,"author":{"gitId":"zxgoh"},"content":"Step 3. The `DeleteCustomerCommand` finds the `Customer` using the given index from the `Model#filteredCustomers`and","lastModifiedDate":"2022-03-25"},{"lineNumber":242,"author":{"gitId":"zxgoh"},"content":"calls","lastModifiedDate":"2022-03-25"},{"lineNumber":243,"author":{"gitId":"zxgoh"},"content":"its","lastModifiedDate":"2022-03-25"},{"lineNumber":244,"author":{"gitId":"zxgoh"},"content":"`Model#deleteCustomer()`","lastModifiedDate":"2022-03-25"},{"lineNumber":245,"author":{"gitId":"zxgoh"},"content":"method to delete the customer.","lastModifiedDate":"2022-03-25"},{"lineNumber":246,"author":{"gitId":"zxgoh"},"content":"","lastModifiedDate":"2022-03-25"},{"lineNumber":247,"author":{"gitId":"zxgoh"},"content":"Step 4. A new `CommandResult` with the success message is returned to `Logic` and returned as the output.","lastModifiedDate":"2022-03-25"},{"lineNumber":248,"author":{"gitId":"zxgoh"},"content":"","lastModifiedDate":"2022-03-25"},{"lineNumber":249,"author":{"gitId":"zxgoh"},"content":"![DeleteCustomerSequenceDiagram](images/DeleteCustomerSequenceDiagram.png)","lastModifiedDate":"2022-03-25"},{"lineNumber":250,"author":{"gitId":"zxgoh"},"content":"","lastModifiedDate":"2022-03-25"},{"lineNumber":251,"author":{"gitId":"hieunm1821"},"content":"","lastModifiedDate":"2022-03-26"},{"lineNumber":252,"author":{"gitId":"jaegarpoon"},"content":"### Add/Delete/List Dish feature","lastModifiedDate":"2022-03-24"},{"lineNumber":253,"author":{"gitId":"jaegarpoon"},"content":"","lastModifiedDate":"2022-03-24"},{"lineNumber":254,"author":{"gitId":"jaegarpoon"},"content":"#### Implementation","lastModifiedDate":"2022-03-24"},{"lineNumber":255,"author":{"gitId":"jaegarpoon"},"content":"","lastModifiedDate":"2022-03-24"},{"lineNumber":256,"author":{"gitId":"jaegarpoon"},"content":"The add/delete/list dish feature are commands which inherits from `Command`. These are the basic commands","lastModifiedDate":"2022-03-24"},{"lineNumber":257,"author":{"gitId":"jaegarpoon"},"content":"to add, remove or view `Dish` objects.","lastModifiedDate":"2022-03-24"},{"lineNumber":258,"author":{"gitId":"jaegarpoon"},"content":"","lastModifiedDate":"2022-03-24"},{"lineNumber":259,"author":{"gitId":"jaegarpoon"},"content":"#### Example run-through","lastModifiedDate":"2022-03-24"},{"lineNumber":260,"author":{"gitId":"jaegarpoon"},"content":"","lastModifiedDate":"2022-03-24"},{"lineNumber":261,"author":{"gitId":"jaegarpoon"},"content":"(todo: sequence diagram for add/delete/list dish)","lastModifiedDate":"2022-03-24"},{"lineNumber":262,"author":{"gitId":"jaegarpoon"},"content":"A sample run-through is shown below in the sequence diagram:","lastModifiedDate":"2022-03-24"},{"lineNumber":263,"author":{"gitId":"jaegarpoon"},"content":"","lastModifiedDate":"2022-03-24"},{"lineNumber":264,"author":{"gitId":"jaegarpoon"},"content":"","lastModifiedDate":"2022-03-24"},{"lineNumber":265,"author":{"gitId":"jaegarpoon"},"content":"### Tab Display feature","lastModifiedDate":"2022-03-24"},{"lineNumber":266,"author":{"gitId":"jaegarpoon"},"content":"","lastModifiedDate":"2022-03-24"},{"lineNumber":267,"author":{"gitId":"jaegarpoon"},"content":"`TabDisplay` was implemented as an additional feature to the UI component. ","lastModifiedDate":"2022-03-24"},{"lineNumber":268,"author":{"gitId":"jaegarpoon"},"content":"It extends from `UiPart` and exists within `MainWindow`. The Tab Display feature was implemented with the","lastModifiedDate":"2022-03-24"},{"lineNumber":269,"author":{"gitId":"jaegarpoon"},"content":"intention to show which component in FoodOnWheels the user is interacting with, and has four different tabs","lastModifiedDate":"2022-03-24"},{"lineNumber":270,"author":{"gitId":"jaegarpoon"},"content":"representing the four main models:","lastModifiedDate":"2022-03-24"},{"lineNumber":271,"author":{"gitId":"jaegarpoon"},"content":"","lastModifiedDate":"2022-03-24"},{"lineNumber":272,"author":{"gitId":"jaegarpoon"},"content":"* `Customer`","lastModifiedDate":"2022-03-24"},{"lineNumber":273,"author":{"gitId":"jaegarpoon"},"content":"* `Driver`","lastModifiedDate":"2022-03-24"},{"lineNumber":274,"author":{"gitId":"jaegarpoon"},"content":"* `Order`","lastModifiedDate":"2022-03-24"},{"lineNumber":275,"author":{"gitId":"jaegarpoon"},"content":"* `Dish`","lastModifiedDate":"2022-03-24"},{"lineNumber":276,"author":{"gitId":"jaegarpoon"},"content":"","lastModifiedDate":"2022-03-24"},{"lineNumber":277,"author":{"gitId":"jaegarpoon"},"content":"It implements the following operations:","lastModifiedDate":"2022-03-24"},{"lineNumber":278,"author":{"gitId":"jaegarpoon"},"content":"* TabDisplay#setFocus() - Bolds the focusItem (`Driver`/`Customer`/`Dish`/`Order`) in the Tab Display, ","lastModifiedDate":"2022-03-24"},{"lineNumber":279,"author":{"gitId":"jaegarpoon"},"content":"identifying it as the current focus of the `ListPanel`","lastModifiedDate":"2022-03-24"},{"lineNumber":280,"author":{"gitId":"jaegarpoon"},"content":"","lastModifiedDate":"2022-03-24"},{"lineNumber":281,"author":{"gitId":"jaegarpoon"},"content":"The operation `TabDisplay#setFocus()` is exposed in the `MainWindow` class ","lastModifiedDate":"2022-03-24"},{"lineNumber":282,"author":{"gitId":"jaegarpoon"},"content":"in `MainWindow#handleDish()`, `MainWindow#handleDriver()`, `MainWindow#handleOrder()`, `MainWindow#handleCustomer()`","lastModifiedDate":"2022-03-24"},{"lineNumber":283,"author":{"gitId":"jaegarpoon"},"content":"`MainWindow#fillInnerParts()` and `MainWindow#executeCommand()`.","lastModifiedDate":"2022-03-24"},{"lineNumber":284,"author":{"gitId":"jaegarpoon"},"content":"","lastModifiedDate":"2022-03-24"},{"lineNumber":285,"author":{"gitId":"jaegarpoon"},"content":"#### Example run-through","lastModifiedDate":"2022-03-24"},{"lineNumber":286,"author":{"gitId":"jaegarpoon"},"content":"A sample run-through is shown below in the sequence diagram:","lastModifiedDate":"2022-03-24"},{"lineNumber":287,"author":{"gitId":"jaegarpoon"},"content":"","lastModifiedDate":"2022-03-24"},{"lineNumber":288,"author":{"gitId":"jaegarpoon"},"content":"\u003cimg src\u003d\"images/TabDisplaySequenceDiagram.png\" width\u003d\"550\" /\u003e","lastModifiedDate":"2022-03-24"},{"lineNumber":289,"author":{"gitId":"jaegarpoon"},"content":"","lastModifiedDate":"2022-03-24"},{"lineNumber":290,"author":{"gitId":"jaegarpoon"},"content":"Explanation:","lastModifiedDate":"2022-03-24"},{"lineNumber":291,"author":{"gitId":"jaegarpoon"},"content":"","lastModifiedDate":"2022-03-24"},{"lineNumber":292,"author":{"gitId":"jaegarpoon"},"content":"1. Command is called -\u003e `TabDisplay` set to default, which is `Customer` tab","lastModifiedDate":"2022-03-24"},{"lineNumber":293,"author":{"gitId":"jaegarpoon"},"content":"2. When a `CommandResult` is returned, it `CommandResult#isDish()` will be evaluated to true,","lastModifiedDate":"2022-03-24"},{"lineNumber":294,"author":{"gitId":"jaegarpoon"},"content":"since the command is related to a dish","lastModifiedDate":"2022-03-24"},{"lineNumber":295,"author":{"gitId":"jaegarpoon"},"content":"3. `TabDisplay` is then set to `Dish`, as seen from the second time `TabDisplay#setFocus()` is called","lastModifiedDate":"2022-03-24"},{"lineNumber":296,"author":{"gitId":"jaegarpoon"},"content":"","lastModifiedDate":"2022-03-24"},{"lineNumber":297,"author":{"gitId":"jaegarpoon"},"content":"","lastModifiedDate":"2022-03-24"},{"lineNumber":298,"author":{"gitId":"-"},"content":"### \\[Proposed\\] Undo/redo feature","lastModifiedDate":"2020-06-07"},{"lineNumber":299,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":300,"author":{"gitId":"-"},"content":"#### Proposed Implementation","lastModifiedDate":"2020-05-23"},{"lineNumber":301,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":302,"author":{"gitId":"-"},"content":"The proposed undo/redo mechanism is facilitated by `VersionedAddressBook`. It extends `AddressBook` with an undo/redo history, stored internally as an `addressBookStateList` and `currentStatePointer`. Additionally, it implements the following operations:","lastModifiedDate":"2020-05-23"},{"lineNumber":303,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":304,"author":{"gitId":"-"},"content":"* `VersionedAddressBook#commit()` — Saves the current address book state in its history.","lastModifiedDate":"2020-05-23"},{"lineNumber":305,"author":{"gitId":"-"},"content":"* `VersionedAddressBook#undo()` — Restores the previous address book state from its history.","lastModifiedDate":"2020-05-23"},{"lineNumber":306,"author":{"gitId":"-"},"content":"* `VersionedAddressBook#redo()` — Restores a previously undone address book state from its history.","lastModifiedDate":"2020-05-23"},{"lineNumber":307,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":308,"author":{"gitId":"-"},"content":"These operations are exposed in the `Model` interface as `Model#commitAddressBook()`, `Model#undoAddressBook()` and `Model#redoAddressBook()` respectively.","lastModifiedDate":"2020-05-23"},{"lineNumber":309,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":310,"author":{"gitId":"-"},"content":"Given below is an example usage scenario and how the undo/redo mechanism behaves at each step.","lastModifiedDate":"2020-05-23"},{"lineNumber":311,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":312,"author":{"gitId":"-"},"content":"Step 1. The user launches the application for the first time. The `VersionedAddressBook` will be initialized with the initial address book state, and the `currentStatePointer` pointing to that single address book state.","lastModifiedDate":"2020-05-23"},{"lineNumber":313,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":314,"author":{"gitId":"-"},"content":"![UndoRedoState0](images/UndoRedoState0.png)","lastModifiedDate":"2020-05-23"},{"lineNumber":315,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":316,"author":{"gitId":"-"},"content":"Step 2. The user executes `delete 5` command to delete the 5th person in the address book. The `delete` command calls `Model#commitAddressBook()`, causing the modified state of the address book after the `delete 5` command executes to be saved in the `addressBookStateList`, and the `currentStatePointer` is shifted to the newly inserted address book state.","lastModifiedDate":"2020-05-23"},{"lineNumber":317,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":318,"author":{"gitId":"-"},"content":"![UndoRedoState1](images/UndoRedoState1.png)","lastModifiedDate":"2020-05-23"},{"lineNumber":319,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":320,"author":{"gitId":"-"},"content":"Step 3. The user executes `add n/David …​` to add a new person. The `add` command also calls `Model#commitAddressBook()`, causing another modified address book state to be saved into the `addressBookStateList`.","lastModifiedDate":"2020-05-23"},{"lineNumber":321,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":322,"author":{"gitId":"-"},"content":"![UndoRedoState2](images/UndoRedoState2.png)","lastModifiedDate":"2020-05-23"},{"lineNumber":323,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":324,"author":{"gitId":"-"},"content":"\u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-info\"\u003e:information_source: **Note:** If a command fails its execution, it will not call `Model#commitAddressBook()`, so the address book state will not be saved into the `addressBookStateList`.","lastModifiedDate":"2020-05-23"},{"lineNumber":325,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":326,"author":{"gitId":"-"},"content":"\u003c/div\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":327,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":328,"author":{"gitId":"-"},"content":"Step 4. The user now decides that adding the person was a mistake, and decides to undo that action by executing the `undo` command. The `undo` command will call `Model#undoAddressBook()`, which will shift the `currentStatePointer` once to the left, pointing it to the previous address book state, and restores the address book to that state.","lastModifiedDate":"2020-05-23"},{"lineNumber":329,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":330,"author":{"gitId":"-"},"content":"![UndoRedoState3](images/UndoRedoState3.png)","lastModifiedDate":"2020-05-23"},{"lineNumber":331,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":332,"author":{"gitId":"-"},"content":"\u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-info\"\u003e:information_source: **Note:** If the `currentStatePointer` is at index 0, pointing to the initial AddressBook state, then there are no previous AddressBook states to restore. The `undo` command uses `Model#canUndoAddressBook()` to check if this is the case. If so, it will return an error to the user rather","lastModifiedDate":"2020-05-23"},{"lineNumber":333,"author":{"gitId":"-"},"content":"than attempting to perform the undo.","lastModifiedDate":"2020-05-23"},{"lineNumber":334,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":335,"author":{"gitId":"-"},"content":"\u003c/div\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":336,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":337,"author":{"gitId":"-"},"content":"The following sequence diagram shows how the undo operation works:","lastModifiedDate":"2020-05-23"},{"lineNumber":338,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":339,"author":{"gitId":"-"},"content":"![UndoSequenceDiagram](images/UndoSequenceDiagram.png)","lastModifiedDate":"2020-05-23"},{"lineNumber":340,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":341,"author":{"gitId":"-"},"content":"\u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-info\"\u003e:information_source: **Note:** The lifeline for `UndoCommand` should end at the destroy marker (X) but due to a limitation of PlantUML, the lifeline reaches the end of diagram.","lastModifiedDate":"2020-05-23"},{"lineNumber":342,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":343,"author":{"gitId":"-"},"content":"\u003c/div\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":344,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":345,"author":{"gitId":"-"},"content":"The `redo` command does the opposite — it calls `Model#redoAddressBook()`, which shifts the `currentStatePointer` once to the right, pointing to the previously undone state, and restores the address book to that state.","lastModifiedDate":"2020-05-23"},{"lineNumber":346,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":347,"author":{"gitId":"-"},"content":"\u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-info\"\u003e:information_source: **Note:** If the `currentStatePointer` is at index `addressBookStateList.size() - 1`, pointing to the latest address book state, then there are no undone AddressBook states to restore. The `redo` command uses `Model#canRedoAddressBook()` to check if this is the case. If so, it will return an error to the user rather than attempting to perform the redo.","lastModifiedDate":"2020-05-23"},{"lineNumber":348,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":349,"author":{"gitId":"-"},"content":"\u003c/div\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":350,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":351,"author":{"gitId":"-"},"content":"Step 5. The user then decides to execute the command `list`. Commands that do not modify the address book, such as `list`, will usually not call `Model#commitAddressBook()`, `Model#undoAddressBook()` or `Model#redoAddressBook()`. Thus, the `addressBookStateList` remains unchanged.","lastModifiedDate":"2020-05-23"},{"lineNumber":352,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":353,"author":{"gitId":"-"},"content":"![UndoRedoState4](images/UndoRedoState4.png)","lastModifiedDate":"2020-05-23"},{"lineNumber":354,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":355,"author":{"gitId":"-"},"content":"Step 6. The user executes `clear`, which calls `Model#commitAddressBook()`. Since the `currentStatePointer` is not pointing at the end of the `addressBookStateList`, all address book states after the `currentStatePointer` will be purged. Reason: It no longer makes sense to redo the `add n/David …​` command. This is the behavior that most modern desktop applications follow.","lastModifiedDate":"2020-05-23"},{"lineNumber":356,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":357,"author":{"gitId":"-"},"content":"![UndoRedoState5](images/UndoRedoState5.png)","lastModifiedDate":"2020-05-23"},{"lineNumber":358,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":359,"author":{"gitId":"-"},"content":"The following activity diagram summarizes what happens when a user executes a new command:","lastModifiedDate":"2020-05-23"},{"lineNumber":360,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":361,"author":{"gitId":"-"},"content":"\u003cimg src\u003d\"images/CommitActivityDiagram.png\" width\u003d\"250\" /\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":362,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":363,"author":{"gitId":"-"},"content":"#### Design considerations:","lastModifiedDate":"2021-07-31"},{"lineNumber":364,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":365,"author":{"gitId":"-"},"content":"**Aspect: How undo \u0026 redo executes:**","lastModifiedDate":"2021-07-31"},{"lineNumber":366,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":367,"author":{"gitId":"-"},"content":"* **Alternative 1 (current choice):** Saves the entire address book.","lastModifiedDate":"2020-05-23"},{"lineNumber":368,"author":{"gitId":"-"},"content":"  * Pros: Easy to implement.","lastModifiedDate":"2020-05-23"},{"lineNumber":369,"author":{"gitId":"-"},"content":"  * Cons: May have performance issues in terms of memory usage.","lastModifiedDate":"2020-05-23"},{"lineNumber":370,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":371,"author":{"gitId":"-"},"content":"* **Alternative 2:** Individual command knows how to undo/redo by","lastModifiedDate":"2020-05-23"},{"lineNumber":372,"author":{"gitId":"-"},"content":"  itself.","lastModifiedDate":"2020-05-23"},{"lineNumber":373,"author":{"gitId":"-"},"content":"  * Pros: Will use less memory (e.g. for `delete`, just save the person being deleted).","lastModifiedDate":"2020-05-23"},{"lineNumber":374,"author":{"gitId":"-"},"content":"  * Cons: We must ensure that the implementation of each individual command are correct.","lastModifiedDate":"2020-05-23"},{"lineNumber":375,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":376,"author":{"gitId":"-"},"content":"_{more aspects and alternatives to be added}_","lastModifiedDate":"2020-05-23"},{"lineNumber":377,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":378,"author":{"gitId":"-"},"content":"### \\[Proposed\\] Data archiving","lastModifiedDate":"2020-05-23"},{"lineNumber":379,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":380,"author":{"gitId":"-"},"content":"_{Explain here how the data archiving feature will be implemented}_","lastModifiedDate":"2020-05-23"},{"lineNumber":381,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":382,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":383,"author":{"gitId":"xzzz3"},"content":"","lastModifiedDate":"2022-03-24"},{"lineNumber":384,"author":{"gitId":"xzzz3"},"content":"### Add Order feature","lastModifiedDate":"2022-03-24"},{"lineNumber":385,"author":{"gitId":"xzzz3"},"content":"","lastModifiedDate":"2022-03-24"},{"lineNumber":386,"author":{"gitId":"xzzz3"},"content":"#### Implementation","lastModifiedDate":"2022-03-24"},{"lineNumber":387,"author":{"gitId":"xzzz3"},"content":"","lastModifiedDate":"2022-03-24"},{"lineNumber":388,"author":{"gitId":"xzzz3"},"content":"The add order mechanism is facilitated by `Order`. It is a model in the application and some of its important attributes include:","lastModifiedDate":"2022-03-24"},{"lineNumber":389,"author":{"gitId":"xzzz3"},"content":"","lastModifiedDate":"2022-03-24"},{"lineNumber":390,"author":{"gitId":"xzzz3"},"content":"* `customer`  — Holds the Customer object who ordered the given Order.","lastModifiedDate":"2022-03-24"},{"lineNumber":391,"author":{"gitId":"xzzz3"},"content":"* `driver`  — Holds the Driver object who will be delivering the given Order.","lastModifiedDate":"2022-03-24"},{"lineNumber":392,"author":{"gitId":"xzzz3"},"content":"* `dishes`  — Holds the Dish objects that are included in the given Order.","lastModifiedDate":"2022-03-24"},{"lineNumber":393,"author":{"gitId":"xzzz3"},"content":"","lastModifiedDate":"2022-03-24"},{"lineNumber":394,"author":{"gitId":"xzzz3"},"content":"![OrderClassDiagram](images/OrderClassDiagram.png)","lastModifiedDate":"2022-03-24"},{"lineNumber":395,"author":{"gitId":"xzzz3"},"content":"","lastModifiedDate":"2022-03-24"},{"lineNumber":396,"author":{"gitId":"xzzz3"},"content":"These attributes are used in the `Order#Order()` instantiation, which is called to create a new Order when the add order command is called.","lastModifiedDate":"2022-03-24"},{"lineNumber":397,"author":{"gitId":"xzzz3"},"content":"","lastModifiedDate":"2022-03-24"},{"lineNumber":398,"author":{"gitId":"xzzz3"},"content":"Given below is an example usage scenario and how the add order mechanism behaves at each step.","lastModifiedDate":"2022-03-24"},{"lineNumber":399,"author":{"gitId":"xzzz3"},"content":"","lastModifiedDate":"2022-03-24"},{"lineNumber":400,"author":{"gitId":"xzzz3"},"content":"Step 1. The user executes the `addorder p/ 123 d/ sushi` command in the application to add an order of sushi for a registered Customer with phone number 123, which is handled by `Logic#execute`. ","lastModifiedDate":"2022-03-24"},{"lineNumber":401,"author":{"gitId":"xzzz3"},"content":"The `addorder` command is parsed by the `AddressBookParser#parseCommand` and `AddOrderCommandParser#parse` to create a new `AddOrderCommand` with the given phone number and dishes.","lastModifiedDate":"2022-03-24"},{"lineNumber":402,"author":{"gitId":"xzzz3"},"content":"","lastModifiedDate":"2022-03-24"},{"lineNumber":403,"author":{"gitId":"xzzz3"},"content":"Step 2. The `Logic` then executes the `AddOrderCommand#execute()` with the stored lists using `Logic#getFilteredCustomerList()`, `Logic#getFilteredDriverList` and `Logic#getFilteredDishList`.","lastModifiedDate":"2022-03-24"},{"lineNumber":404,"author":{"gitId":"xzzz3"},"content":"","lastModifiedDate":"2022-03-24"},{"lineNumber":405,"author":{"gitId":"xzzz3"},"content":"Step 3. `AddOrderCommand#Execute` uses the lists to find the `Customer` object with the given phone number (i.e. 123) , a free `Driver` object, and all the `Dish` objects with the given names (i.e. sushi). It then creates an `Order` with them.","lastModifiedDate":"2022-03-24"},{"lineNumber":406,"author":{"gitId":"xzzz3"},"content":"","lastModifiedDate":"2022-03-24"},{"lineNumber":407,"author":{"gitId":"xzzz3"},"content":"Step 4. The `Order` is added to the `Model` with `Model#addOrder()`.","lastModifiedDate":"2022-03-24"},{"lineNumber":408,"author":{"gitId":"xzzz3"},"content":"","lastModifiedDate":"2022-03-24"},{"lineNumber":409,"author":{"gitId":"xzzz3"},"content":"Step 5. A new `CommandResult` with the success message is returned to `Logic` and returned as the output.","lastModifiedDate":"2022-03-24"},{"lineNumber":410,"author":{"gitId":"xzzz3"},"content":"","lastModifiedDate":"2022-03-24"},{"lineNumber":411,"author":{"gitId":"xzzz3"},"content":"#### Design considerations:","lastModifiedDate":"2022-03-24"},{"lineNumber":412,"author":{"gitId":"xzzz3"},"content":"* The `Order` stores its component objects directly, in order to make future implementation easier. Future updates that targets the different parts of an `Order` can easily be implemented in this way.","lastModifiedDate":"2022-03-24"},{"lineNumber":413,"author":{"gitId":"xzzz3"},"content":"","lastModifiedDate":"2022-03-24"},{"lineNumber":414,"author":{"gitId":"xzzz3"},"content":"### Edit Order Status feature","lastModifiedDate":"2022-03-24"},{"lineNumber":415,"author":{"gitId":"xzzz3"},"content":"","lastModifiedDate":"2022-03-24"},{"lineNumber":416,"author":{"gitId":"xzzz3"},"content":"#### Implementation","lastModifiedDate":"2022-03-24"},{"lineNumber":417,"author":{"gitId":"xzzz3"},"content":"","lastModifiedDate":"2022-03-24"},{"lineNumber":418,"author":{"gitId":"xzzz3"},"content":"The edit order status mechanism is faciliated by `Order` and `OrderStatus`. The latter is an enumeration class to include the possible statuses.","lastModifiedDate":"2022-03-24"},{"lineNumber":419,"author":{"gitId":"xzzz3"},"content":"This mechanism also relies on the method `Order#updateStatus()` which updates the status of the given Order.","lastModifiedDate":"2022-03-24"},{"lineNumber":420,"author":{"gitId":"xzzz3"},"content":"","lastModifiedDate":"2022-03-24"},{"lineNumber":421,"author":{"gitId":"xzzz3"},"content":"Given below is an example usage scenario and how the edit order status mechanism behaves at each step.","lastModifiedDate":"2022-03-24"},{"lineNumber":422,"author":{"gitId":"xzzz3"},"content":"","lastModifiedDate":"2022-03-24"},{"lineNumber":423,"author":{"gitId":"xzzz3"},"content":"Step 1. The user executes the `mark 1 s/ delivered` command in the application to mark the first order in the list as delivered.","lastModifiedDate":"2022-03-24"},{"lineNumber":424,"author":{"gitId":"xzzz3"},"content":"The `mark` keyword is parsed by the `AddressBookParser#parseCommand` and `EditOrderStatusCommandParser#parse` to create a new `EditOrderStatusCommand` with the given index and status.","lastModifiedDate":"2022-03-24"},{"lineNumber":425,"author":{"gitId":"xzzz3"},"content":"","lastModifiedDate":"2022-03-24"},{"lineNumber":426,"author":{"gitId":"xzzz3"},"content":"Step 2. The `Logic` then executes the `EditOrderStatusCommand#execute()`. ","lastModifiedDate":"2022-03-24"},{"lineNumber":427,"author":{"gitId":"xzzz3"},"content":"","lastModifiedDate":"2022-03-24"},{"lineNumber":428,"author":{"gitId":"xzzz3"},"content":"Step 3. The `EditOrderStatusCommand` finds the `Order` using the given index and calls its `Order#updateStatus()` method to update the status to the given new status.","lastModifiedDate":"2022-03-24"},{"lineNumber":429,"author":{"gitId":"xzzz3"},"content":"","lastModifiedDate":"2022-03-24"},{"lineNumber":430,"author":{"gitId":"xzzz3"},"content":"Step 4. A new `CommandResult` with the success message is returned to `Logic` and returned as the output.","lastModifiedDate":"2022-03-24"},{"lineNumber":431,"author":{"gitId":"xzzz3"},"content":"","lastModifiedDate":"2022-03-24"},{"lineNumber":432,"author":{"gitId":"xzzz3"},"content":"![EditOrderStatusSequenceDiagram](images/EditOrderStatusSequenceDiagram.png)","lastModifiedDate":"2022-03-24"},{"lineNumber":433,"author":{"gitId":"xzzz3"},"content":"","lastModifiedDate":"2022-03-24"},{"lineNumber":434,"author":{"gitId":"-"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2020-05-23"},{"lineNumber":435,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":436,"author":{"gitId":"-"},"content":"## **Documentation, logging, testing, configuration, dev-ops**","lastModifiedDate":"2020-06-07"},{"lineNumber":437,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":438,"author":{"gitId":"-"},"content":"* [Documentation guide](Documentation.md)","lastModifiedDate":"2020-06-07"},{"lineNumber":439,"author":{"gitId":"-"},"content":"* [Testing guide](Testing.md)","lastModifiedDate":"2020-06-07"},{"lineNumber":440,"author":{"gitId":"-"},"content":"* [Logging guide](Logging.md)","lastModifiedDate":"2020-06-07"},{"lineNumber":441,"author":{"gitId":"-"},"content":"* [Configuration guide](Configuration.md)","lastModifiedDate":"2020-06-07"},{"lineNumber":442,"author":{"gitId":"-"},"content":"* [DevOps guide](DevOps.md)","lastModifiedDate":"2020-06-07"},{"lineNumber":443,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":444,"author":{"gitId":"-"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2020-05-23"},{"lineNumber":445,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":446,"author":{"gitId":"-"},"content":"## **Appendix: Requirements**","lastModifiedDate":"2020-05-23"},{"lineNumber":447,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":448,"author":{"gitId":"-"},"content":"### Product scope","lastModifiedDate":"2020-05-23"},{"lineNumber":449,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":450,"author":{"gitId":"-"},"content":"**Target user profile**:","lastModifiedDate":"2020-05-23"},{"lineNumber":451,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":452,"author":{"gitId":"xzzz3"},"content":"* has a need to manage a significant number of delivery orders","lastModifiedDate":"2022-02-24"},{"lineNumber":453,"author":{"gitId":"-"},"content":"* prefer desktop apps over other types","lastModifiedDate":"2020-05-23"},{"lineNumber":454,"author":{"gitId":"-"},"content":"* can type fast","lastModifiedDate":"2020-05-23"},{"lineNumber":455,"author":{"gitId":"-"},"content":"* prefers typing to mouse interactions","lastModifiedDate":"2020-05-26"},{"lineNumber":456,"author":{"gitId":"-"},"content":"* is reasonably comfortable using CLI apps","lastModifiedDate":"2020-05-23"},{"lineNumber":457,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":458,"author":{"gitId":"xzzz3"},"content":"**Value proposition**: manage delivery orders faster than a typical mouse/GUI driven app","lastModifiedDate":"2022-02-24"},{"lineNumber":459,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":460,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":461,"author":{"gitId":"-"},"content":"### User stories","lastModifiedDate":"2020-06-07"},{"lineNumber":462,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":463,"author":{"gitId":"-"},"content":"Priorities: High (must have) - `* * *`, Medium (nice to have) - `* *`, Low (unlikely to have) - `*`","lastModifiedDate":"2020-05-23"},{"lineNumber":464,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":465,"author":{"gitId":"-"},"content":"| Priority | As a …​                                 | I want to …​                                                                                       | So that I can…​                                                     |","lastModifiedDate":"2020-05-23"},{"lineNumber":466,"author":{"gitId":"jaegarpoon"},"content":"|-------| ------------------------------------------ |----------------------------------------------------------------------------------------------------| ---------------------------------------------------------------------- |","lastModifiedDate":"2022-03-02"},{"lineNumber":467,"author":{"gitId":"zxgoh"},"content":"| `* * *` | new user                            | view all the possible commands                                                                     | easily refer to the commands without needing to remember them          |","lastModifiedDate":"2022-02-25"},{"lineNumber":468,"author":{"gitId":"-"},"content":"| `* * *` | new user                                   | see usage instructions                                                                             | refer to instructions when I forget how to use the App                 |","lastModifiedDate":"2020-05-23"},{"lineNumber":469,"author":{"gitId":"-"},"content":"| `* * *` | user                                       | add a new person                                                                                   |                                                                        |","lastModifiedDate":"2020-05-23"},{"lineNumber":470,"author":{"gitId":"-"},"content":"| `* * *` | user                                       | delete a person                                                                                    | remove entries that I no longer need                                   |","lastModifiedDate":"2020-05-23"},{"lineNumber":471,"author":{"gitId":"-"},"content":"| `* * *` | user                                       | find a person by name                                                                              | locate details of persons without having to go through the entire list |","lastModifiedDate":"2020-05-23"},{"lineNumber":472,"author":{"gitId":"zxgoh"},"content":"| `* * *` | experienced user                           | view a list of previous delivery orders                                                            | review the previous transactions\u0027 details in case they\u0027re needed (e.g. if the driver accidentally clicks delivered and the task disappears) |","lastModifiedDate":"2022-02-25"},{"lineNumber":473,"author":{"gitId":"zxgoh"},"content":"| `* * *` | experienced user                        | view a list of current delivery orders                                                             | know the details of the delivery orders and respond to them. |","lastModifiedDate":"2022-02-25"},{"lineNumber":474,"author":{"gitId":"zxgoh"},"content":"| `* * *` | basic user                                       | view a list of free drivers                                                                        | assign them to delivery orders","lastModifiedDate":"2022-02-25"},{"lineNumber":475,"author":{"gitId":"jaegarpoon"},"content":"| `* * *` | basic user                                       | add information of a driver                                                                        |","lastModifiedDate":"2022-03-02"},{"lineNumber":476,"author":{"gitId":"jaegarpoon"},"content":"| `* * *` | basic user                                       | delete information of a driver                                                                     |","lastModifiedDate":"2022-03-02"},{"lineNumber":477,"author":{"gitId":"jaegarpoon"},"content":"| `* * *` | basic user                                       | add information of a repeat customer                                                               |","lastModifiedDate":"2022-03-02"},{"lineNumber":478,"author":{"gitId":"jaegarpoon"},"content":"| `* * *` | basic user                                       | delete information of a repeat customer                                                            |","lastModifiedDate":"2022-03-02"},{"lineNumber":479,"author":{"gitId":"jaegarpoon"},"content":"| `* * *` | basic user                                       | add a new delivery order                                                                           | I can store the information of food, customer and driver.","lastModifiedDate":"2022-03-02"},{"lineNumber":480,"author":{"gitId":"jaegarpoon"},"content":"| `* * *` | basic user                                       | edit the status of the order (done/ not done, customer not respond, ...)                           | I can keep track of the order status.","lastModifiedDate":"2022-03-02"},{"lineNumber":481,"author":{"gitId":"jaegarpoon"},"content":"| `* *` | experienced user                                       | view my revenue for the day                                                                        | report to the accountant of the company or show my managers the earnings of the delivery orders.               |","lastModifiedDate":"2022-03-30"},{"lineNumber":482,"author":{"gitId":"zxgoh"},"content":"| `* *` | experienced user                                       | undo a previous action                                                                             | deal with mistakes when keying in   ","lastModifiedDate":"2022-02-25"},{"lineNumber":483,"author":{"gitId":"zxgoh"},"content":"| `* *` | experienced user                                       | view the delivery orders of a single restaurant (of the chain)                                     | have a better idea of which ones are more popular at the current time              |","lastModifiedDate":"2022-02-25"},{"lineNumber":484,"author":{"gitId":"-"},"content":"| `* *` | user                                       | hide private contact details                                                                       | minimize chance of someone else seeing them by accident                |","lastModifiedDate":"2020-05-23"},{"lineNumber":485,"author":{"gitId":"jaegarpoon"},"content":"| `* *` | basic user                                       | edit information of a driver                                                                       | I can have a new driver in the database","lastModifiedDate":"2022-03-02"},{"lineNumber":486,"author":{"gitId":"jaegarpoon"},"content":"| `* *` | basic user                                       | edit information of a repeat customer                                                              |I can make the new order faster and update the customer information","lastModifiedDate":"2022-03-02"},{"lineNumber":487,"author":{"gitId":"jaegarpoon"},"content":"| `* *` | basic user                                       | automatically detect when a repeat customer registers                                              |I can reduce duplicates in the system","lastModifiedDate":"2022-03-02"},{"lineNumber":488,"author":{"gitId":"xzzz3"},"content":"| `* *` | potential user                             | view the app with dummy data filled in                                                             | assess the suitability of the app for my needs           |","lastModifiedDate":"2022-02-24"},{"lineNumber":489,"author":{"gitId":"xzzz3"},"content":"| `* *` | user ready to use the app                  | purge dummy data from the app                                                                      | begin to use the app                                                   |","lastModifiedDate":"2022-02-24"},{"lineNumber":490,"author":{"gitId":"xzzz3"},"content":"| `* *` | user who uses hardcopy tracking            | annotate delivery orders                                                                           | follow the conventions previously set in the restaurant                |","lastModifiedDate":"2022-02-24"},{"lineNumber":491,"author":{"gitId":"xzzz3"},"content":"| `* *` | first time user                            | view a step-by-step tutorial                                                                       | pick up the knowledge necessary for me to operate the application      |","lastModifiedDate":"2022-02-24"},{"lineNumber":492,"author":{"gitId":"xzzz3"},"content":"| `* *` | returning user                             | rewatch the tutorial                                                                               | refresh my memory on how to use the application                        |","lastModifiedDate":"2022-02-24"},{"lineNumber":493,"author":{"gitId":"zxgoh"},"content":"| `*`   | first time user                            | use the application through a clean and easy interface                                             | not be overwhelmed by the application           |","lastModifiedDate":"2022-02-25"},{"lineNumber":494,"author":{"gitId":"zxgoh"},"content":"| `*`   | experienced user                                       | use shortcuts instead of the normal commands to add order or assign driver                         | save time      |","lastModifiedDate":"2022-02-25"},{"lineNumber":495,"author":{"gitId":"zxgoh"},"content":"| `*`   | experienced user                                       | view a summary of the past month\u0027s order (e.g. most popular delivery region, most popular dishes)  | better plan the future deliveries and report the findings to my managers      |","lastModifiedDate":"2022-02-25"},{"lineNumber":496,"author":{"gitId":"zxgoh"},"content":"| `*`   | experienced user                                       | remove (at least visually) the functions that are cluttering the interface but not frequently used | easily navigate the app interface      |","lastModifiedDate":"2022-02-25"},{"lineNumber":497,"author":{"gitId":"xzzz3"},"content":"| `*`   | forgetful user                             | retrieve password                                                                                  | recover my account when I forget my password                           |","lastModifiedDate":"2022-02-24"},{"lineNumber":498,"author":{"gitId":"xzzz3"},"content":"| `*`   | impatient user                             | navigate functionalities from a single page                                                        | easily access the different functionalities directly     |","lastModifiedDate":"2022-02-24"},{"lineNumber":499,"author":{"gitId":"xzzz3"},"content":"| `*`   | user who uses other management tools       | migrate into the platform without major restructuring                                              | transition from one app to another              |","lastModifiedDate":"2022-02-24"},{"lineNumber":500,"author":{"gitId":"zxgoh"},"content":"| `*`   | user with many persons in the address book | sort persons by name                                                                               | locate a person easily                                                 |","lastModifiedDate":"2022-02-25"},{"lineNumber":501,"author":{"gitId":"jaegarpoon"},"content":"| `*`   | basic user                                       | View the detail of a driver (e.g. number, car plate number, current order)                         | I can contact the drivers in case of emergency","lastModifiedDate":"2022-03-02"},{"lineNumber":502,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":503,"author":{"gitId":"-"},"content":"*{More to be added}*","lastModifiedDate":"2020-05-23"},{"lineNumber":504,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":505,"author":{"gitId":"-"},"content":"### Use cases","lastModifiedDate":"2020-06-07"},{"lineNumber":506,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":507,"author":{"gitId":"xzzz3"},"content":"(For all use cases below, the **System** is the `FoodOnWheels` application and the **Actor** is the `user`, unless specified otherwise)","lastModifiedDate":"2022-02-24"},{"lineNumber":508,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":509,"author":{"gitId":"-"},"content":"**Extensions**","lastModifiedDate":"2022-02-25"},{"lineNumber":510,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-02-25"},{"lineNumber":511,"author":{"gitId":"-"},"content":"* 2a. The list is empty.","lastModifiedDate":"2022-02-25"},{"lineNumber":512,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-02-25"},{"lineNumber":513,"author":{"gitId":"-"},"content":"  Use case ends.","lastModifiedDate":"2022-02-25"},{"lineNumber":514,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-02-25"},{"lineNumber":515,"author":{"gitId":"-"},"content":"* 3a. The given index is invalid.","lastModifiedDate":"2022-02-25"},{"lineNumber":516,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-02-25"},{"lineNumber":517,"author":{"gitId":"-"},"content":"    * 3a1. AddressBook shows an error message.","lastModifiedDate":"2022-02-25"},{"lineNumber":518,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-02-25"},{"lineNumber":519,"author":{"gitId":"-"},"content":"      Use case resumes at step 2.","lastModifiedDate":"2022-02-25"},{"lineNumber":520,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-02-25"},{"lineNumber":521,"author":{"gitId":"zxgoh"},"content":"**Use case: Add a customer**","lastModifiedDate":"2022-02-25"},{"lineNumber":522,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":523,"author":{"gitId":"-"},"content":"**MSS**","lastModifiedDate":"2020-05-23"},{"lineNumber":524,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":525,"author":{"gitId":"zxgoh"},"content":"1.  User requests to add customer by providing the required info (name, address, phone number)","lastModifiedDate":"2022-02-25"},{"lineNumber":526,"author":{"gitId":"zxgoh"},"content":"2.  FoodOnWheels adds the customer","lastModifiedDate":"2022-02-25"},{"lineNumber":527,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":528,"author":{"gitId":"-"},"content":"    Use case ends.","lastModifiedDate":"2020-05-23"},{"lineNumber":529,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":530,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":531,"author":{"gitId":"zxgoh"},"content":"**Use case: Delete a customer**","lastModifiedDate":"2022-02-25"},{"lineNumber":532,"author":{"gitId":"zxgoh"},"content":"","lastModifiedDate":"2022-02-25"},{"lineNumber":533,"author":{"gitId":"zxgoh"},"content":"**MSS**","lastModifiedDate":"2022-02-25"},{"lineNumber":534,"author":{"gitId":"zxgoh"},"content":"","lastModifiedDate":"2022-02-25"},{"lineNumber":535,"author":{"gitId":"zxgoh"},"content":"1.  User requests to delete customer by providing the required info (name, address, phone number)","lastModifiedDate":"2022-02-25"},{"lineNumber":536,"author":{"gitId":"zxgoh"},"content":"2.  FoodOnWheels deletes the customer","lastModifiedDate":"2022-02-25"},{"lineNumber":537,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":538,"author":{"gitId":"-"},"content":"    Use case ends.","lastModifiedDate":"2020-05-23"},{"lineNumber":539,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":540,"author":{"gitId":"zxgoh"},"content":"**Use case: List current orders**","lastModifiedDate":"2022-02-25"},{"lineNumber":541,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":542,"author":{"gitId":"zxgoh"},"content":"**MSS**","lastModifiedDate":"2022-02-25"},{"lineNumber":543,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":544,"author":{"gitId":"zxgoh"},"content":"1.  User requests to view a list of current orders using `listorders`","lastModifiedDate":"2022-02-25"},{"lineNumber":545,"author":{"gitId":"zxgoh"},"content":"2.  FoodOnWheels displays all the current orders","lastModifiedDate":"2022-02-25"},{"lineNumber":546,"author":{"gitId":"zxgoh"},"content":"","lastModifiedDate":"2022-02-25"},{"lineNumber":547,"author":{"gitId":"zxgoh"},"content":"    Use case ends.","lastModifiedDate":"2022-02-25"},{"lineNumber":548,"author":{"gitId":"zxgoh"},"content":"          ","lastModifiedDate":"2022-02-25"},{"lineNumber":549,"author":{"gitId":"zxgoh"},"content":"**Use case: List previous orders**","lastModifiedDate":"2022-02-25"},{"lineNumber":550,"author":{"gitId":"zxgoh"},"content":"","lastModifiedDate":"2022-02-25"},{"lineNumber":551,"author":{"gitId":"zxgoh"},"content":"**MSS**","lastModifiedDate":"2022-02-25"},{"lineNumber":552,"author":{"gitId":"zxgoh"},"content":"","lastModifiedDate":"2022-02-25"},{"lineNumber":553,"author":{"gitId":"zxgoh"},"content":"1.  User requests to view a list of previous orders using `listprevorders`","lastModifiedDate":"2022-02-25"},{"lineNumber":554,"author":{"gitId":"zxgoh"},"content":"2.  FoodOnWheels displays all the previous orders","lastModifiedDate":"2022-02-25"},{"lineNumber":555,"author":{"gitId":"zxgoh"},"content":"","lastModifiedDate":"2022-02-25"},{"lineNumber":556,"author":{"gitId":"zxgoh"},"content":"    Use case ends.","lastModifiedDate":"2022-02-25"},{"lineNumber":557,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":558,"author":{"gitId":"xzzz3"},"content":"**Use case: View all commands**","lastModifiedDate":"2022-02-24"},{"lineNumber":559,"author":{"gitId":"xzzz3"},"content":"","lastModifiedDate":"2022-02-24"},{"lineNumber":560,"author":{"gitId":"xzzz3"},"content":"**MSS**","lastModifiedDate":"2022-02-24"},{"lineNumber":561,"author":{"gitId":"xzzz3"},"content":"","lastModifiedDate":"2022-02-24"},{"lineNumber":562,"author":{"gitId":"xzzz3"},"content":"1.  User requests to view the list of all commands","lastModifiedDate":"2022-02-24"},{"lineNumber":563,"author":{"gitId":"xzzz3"},"content":"2.  FoodOnWheels shows a list of commands","lastModifiedDate":"2022-02-24"},{"lineNumber":564,"author":{"gitId":"xzzz3"},"content":"","lastModifiedDate":"2022-02-24"},{"lineNumber":565,"author":{"gitId":"xzzz3"},"content":"    Use case ends.","lastModifiedDate":"2022-02-24"},{"lineNumber":566,"author":{"gitId":"xzzz3"},"content":"","lastModifiedDate":"2022-02-24"},{"lineNumber":567,"author":{"gitId":"-"},"content":"*{More to be added}*","lastModifiedDate":"2020-05-23"},{"lineNumber":568,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":569,"author":{"gitId":"-"},"content":"### Non-Functional Requirements","lastModifiedDate":"2020-05-23"},{"lineNumber":570,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":571,"author":{"gitId":"-"},"content":"1.  Should work on any _mainstream OS_ as long as it has Java `11` or above installed.","lastModifiedDate":"2020-05-23"},{"lineNumber":572,"author":{"gitId":"xzzz3"},"content":"2.  Should be able to hold up to 1000 orders without a noticeable sluggishness in performance for typical usage.","lastModifiedDate":"2022-02-24"},{"lineNumber":573,"author":{"gitId":"-"},"content":"3.  A user with above average typing speed for regular English text (i.e. not code, not system admin commands) should be able to accomplish most of the tasks faster using commands than using the mouse.","lastModifiedDate":"2020-05-23"},{"lineNumber":574,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":575,"author":{"gitId":"-"},"content":"*{More to be added}*","lastModifiedDate":"2020-05-23"},{"lineNumber":576,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":577,"author":{"gitId":"-"},"content":"### Glossary","lastModifiedDate":"2020-05-23"},{"lineNumber":578,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":579,"author":{"gitId":"-"},"content":"* **Mainstream OS**: Windows, Linux, Unix, OS-X","lastModifiedDate":"2020-05-23"},{"lineNumber":580,"author":{"gitId":"-"},"content":"* **Private contact detail**: A contact detail that is not meant to be shared with others","lastModifiedDate":"2020-05-23"},{"lineNumber":581,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":582,"author":{"gitId":"-"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2020-05-23"},{"lineNumber":583,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":584,"author":{"gitId":"-"},"content":"## **Appendix: Instructions for manual testing**","lastModifiedDate":"2020-05-23"},{"lineNumber":585,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":586,"author":{"gitId":"-"},"content":"Given below are instructions to test the app manually.","lastModifiedDate":"2020-05-23"},{"lineNumber":587,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":588,"author":{"gitId":"-"},"content":"\u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-info\"\u003e:information_source: **Note:** These instructions only provide a starting point for testers to work on;","lastModifiedDate":"2020-05-23"},{"lineNumber":589,"author":{"gitId":"-"},"content":"testers are expected to do more *exploratory* testing.","lastModifiedDate":"2020-05-23"},{"lineNumber":590,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":591,"author":{"gitId":"-"},"content":"\u003c/div\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":592,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":593,"author":{"gitId":"-"},"content":"### Launch and shutdown","lastModifiedDate":"2020-05-23"},{"lineNumber":594,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":595,"author":{"gitId":"-"},"content":"1. Initial launch","lastModifiedDate":"2020-05-23"},{"lineNumber":596,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":597,"author":{"gitId":"-"},"content":"   1. Download the jar file and copy into an empty folder","lastModifiedDate":"2020-05-23"},{"lineNumber":598,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":599,"author":{"gitId":"-"},"content":"   1. Double-click the jar file Expected: Shows the GUI with a set of sample contacts. The window size may not be optimum.","lastModifiedDate":"2020-05-23"},{"lineNumber":600,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":601,"author":{"gitId":"-"},"content":"1. Saving window preferences","lastModifiedDate":"2020-05-23"},{"lineNumber":602,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":603,"author":{"gitId":"-"},"content":"   1. Resize the window to an optimum size. Move the window to a different location. Close the window.","lastModifiedDate":"2020-05-23"},{"lineNumber":604,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":605,"author":{"gitId":"-"},"content":"   1. Re-launch the app by double-clicking the jar file.\u003cbr\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":606,"author":{"gitId":"-"},"content":"       Expected: The most recent window size and location is retained.","lastModifiedDate":"2020-05-23"},{"lineNumber":607,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":608,"author":{"gitId":"-"},"content":"1. _{ more test cases …​ }_","lastModifiedDate":"2020-05-23"},{"lineNumber":609,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":610,"author":{"gitId":"-"},"content":"### Deleting a person","lastModifiedDate":"2020-05-23"},{"lineNumber":611,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":612,"author":{"gitId":"-"},"content":"1. Deleting a person while all persons are being shown","lastModifiedDate":"2020-05-23"},{"lineNumber":613,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":614,"author":{"gitId":"-"},"content":"   1. Prerequisites: List all persons using the `list` command. Multiple persons in the list.","lastModifiedDate":"2020-05-23"},{"lineNumber":615,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":616,"author":{"gitId":"-"},"content":"   1. Test case: `delete 1`\u003cbr\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":617,"author":{"gitId":"-"},"content":"      Expected: First contact is deleted from the list. Details of the deleted contact shown in the status message. Timestamp in the status bar is updated.","lastModifiedDate":"2020-05-23"},{"lineNumber":618,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":619,"author":{"gitId":"-"},"content":"   1. Test case: `delete 0`\u003cbr\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":620,"author":{"gitId":"-"},"content":"      Expected: No person is deleted. Error details shown in the status message. Status bar remains the same.","lastModifiedDate":"2020-05-23"},{"lineNumber":621,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":622,"author":{"gitId":"-"},"content":"   1. Other incorrect delete commands to try: `delete`, `delete x`, `...` (where x is larger than the list size)\u003cbr\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":623,"author":{"gitId":"-"},"content":"      Expected: Similar to previous.","lastModifiedDate":"2020-05-23"},{"lineNumber":624,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":625,"author":{"gitId":"-"},"content":"1. _{ more test cases …​ }_","lastModifiedDate":"2020-05-23"},{"lineNumber":626,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":627,"author":{"gitId":"-"},"content":"### Saving data","lastModifiedDate":"2020-05-23"},{"lineNumber":628,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":629,"author":{"gitId":"-"},"content":"1. Dealing with missing/corrupted data files","lastModifiedDate":"2020-05-23"},{"lineNumber":630,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":631,"author":{"gitId":"-"},"content":"   1. _{explain how to simulate a missing/corrupted file, and the expected behavior}_","lastModifiedDate":"2020-05-23"},{"lineNumber":632,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":633,"author":{"gitId":"-"},"content":"1. _{ more test cases …​ }_","lastModifiedDate":"2020-05-23"}],"authorContributionMap":{"hieunm1821":26,"xzzz3":72,"jaegarpoon":65,"-":369,"zxgoh":101}},{"path":"docs/UserGuide.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"---","lastModifiedDate":"2020-05-23"},{"lineNumber":2,"author":{"gitId":"-"},"content":"layout: page","lastModifiedDate":"2020-05-23"},{"lineNumber":3,"author":{"gitId":"-"},"content":"title: User Guide","lastModifiedDate":"2020-05-23"},{"lineNumber":4,"author":{"gitId":"-"},"content":"---","lastModifiedDate":"2020-05-23"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":6,"author":{"gitId":"xzzz3"},"content":"FoodOnWheels (FOW) is a **desktop app for managing delivery orders, optimized for use via a Command Line Interface** (CLI) while still having the benefits of a Graphical User Interface (GUI). If you can type fast, FOW can get your order management tasks done faster than traditional GUI apps.","lastModifiedDate":"2022-02-24"},{"lineNumber":7,"author":{"gitId":"jaegarpoon"},"content":"","lastModifiedDate":"2022-02-24"},{"lineNumber":8,"author":{"gitId":"jaegarpoon"},"content":"This project is based on the AddressBook-Level3 project created by the [SE-EDU initiative](https://se-education.org).","lastModifiedDate":"2022-02-24"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":10,"author":{"gitId":"-"},"content":"* Table of Contents","lastModifiedDate":"2020-05-23"},{"lineNumber":11,"author":{"gitId":"-"},"content":"  {:toc}","lastModifiedDate":"2020-05-23"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":13,"author":{"gitId":"-"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2020-05-23"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":15,"author":{"gitId":"-"},"content":"## Quick start","lastModifiedDate":"2020-05-23"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":17,"author":{"gitId":"-"},"content":"1. Ensure you have Java `11` or above installed in your Computer.","lastModifiedDate":"2020-05-23"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":19,"author":{"gitId":"jaegarpoon"},"content":"2. Download the latest `foodonwheels.jar` from [here](https://github.com/AY2122S2-CS2103-F10-2/tp) (to be updated).","lastModifiedDate":"2022-02-24"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":21,"author":{"gitId":"jaegarpoon"},"content":"3. Copy the file to the folder you want to use as the _home folder_ for your FoodOnWheels.","lastModifiedDate":"2022-02-24"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":23,"author":{"gitId":"jaegarpoon"},"content":"4. Double-click the file to start the app. The GUI similar to the below should appear in a few seconds. Note how the app contains some sample data.\u003cbr\u003e","lastModifiedDate":"2022-02-24"},{"lineNumber":24,"author":{"gitId":"jaegarpoon"},"content":"   (to be updated)","lastModifiedDate":"2022-03-27"},{"lineNumber":25,"author":{"gitId":"jaegarpoon"},"content":"","lastModifiedDate":"2022-03-27"},{"lineNumber":26,"author":{"gitId":"zxgoh"},"content":"   \u003cimg src\u003d\"images/FoodOnWheels.png\" width\u003d65% height\u003d65%\u003e","lastModifiedDate":"2022-02-25"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":28,"author":{"gitId":"jaegarpoon"},"content":"5. Type the command in the command box and press Enter to execute it. e.g. typing **`help`** and pressing Enter will open the help window.\u003cbr\u003e","lastModifiedDate":"2022-02-24"},{"lineNumber":29,"author":{"gitId":"hieunm1821"},"content":"","lastModifiedDate":"2022-03-31"},{"lineNumber":30,"author":{"gitId":"hieunm1821"},"content":"6. Some data has been added for you to try the app. Please use command `clear` to use your own data.","lastModifiedDate":"2022-03-31"},{"lineNumber":31,"author":{"gitId":"hieunm1821"},"content":"### Some example commands you can try:","lastModifiedDate":"2022-03-31"},{"lineNumber":32,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":33,"author":{"gitId":"jaegarpoon"},"content":"### Commands relating to `Dish`","lastModifiedDate":"2022-03-27"},{"lineNumber":34,"author":{"gitId":"jaegarpoon"},"content":"* **`adddish`**`n/Crab Pasta $/15.50` : Adds a dish named `Crab Pasta` with price `15.50` to the restaurant\u0027s menu.","lastModifiedDate":"2022-03-27"},{"lineNumber":35,"author":{"gitId":"jaegarpoon"},"content":"","lastModifiedDate":"2022-02-24"},{"lineNumber":36,"author":{"gitId":"jaegarpoon"},"content":"* **`deletedish`**`1` : Deletes a dish named with index 1 displayed on filtered dish list.","lastModifiedDate":"2022-03-30"},{"lineNumber":37,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":38,"author":{"gitId":"jaegarpoon"},"content":"* **`listdish`** : Lists all existing dishes on restaurant\u0027s menu.","lastModifiedDate":"2022-03-27"},{"lineNumber":39,"author":{"gitId":"jaegarpoon"},"content":"","lastModifiedDate":"2022-03-27"},{"lineNumber":40,"author":{"gitId":"jaegarpoon"},"content":"### Commands relating to `Order`","lastModifiedDate":"2022-03-27"},{"lineNumber":41,"author":{"gitId":"jaegarpoon"},"content":"","lastModifiedDate":"2022-03-31"},{"lineNumber":42,"author":{"gitId":"xzzz3"},"content":"* **`addorder`**`p/98765432 d/Sushi, Pasta` : Adds an order of `Sushi, Pasta` for customer with phone number `98765432`.","lastModifiedDate":"2022-03-30"},{"lineNumber":43,"author":{"gitId":"xzzz3"},"content":"","lastModifiedDate":"2022-03-30"},{"lineNumber":44,"author":{"gitId":"xzzz3"},"content":"* **`mark`**`1 s/delivered` : Edits the status of the order at index `1` to `delivered`.","lastModifiedDate":"2022-03-30"},{"lineNumber":45,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-03-30"},{"lineNumber":46,"author":{"gitId":"jaegarpoon"},"content":"* **`listorder all`** : Lists all the current orders in the system.","lastModifiedDate":"2022-03-30"},{"lineNumber":47,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":48,"author":{"gitId":"jaegarpoon"},"content":"* **`listorder in progress`** : Lists all the in-progress orders in the system.","lastModifiedDate":"2022-03-30"},{"lineNumber":49,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":50,"author":{"gitId":"jaegarpoon"},"content":"### Commands relating to `Driver`","lastModifiedDate":"2022-03-27"},{"lineNumber":51,"author":{"gitId":"hieunm1821"},"content":"* **`adddriver`**`n/Joe p/98765432` : Adds a new driver with name `Joe` and phone number `98765432`.","lastModifiedDate":"2022-03-31"},{"lineNumber":52,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-03-31"},{"lineNumber":53,"author":{"gitId":"zxgoh"},"content":"* **`deletedriver`**`1` : Deletes the driver at index `1`.","lastModifiedDate":"2022-04-01"},{"lineNumber":54,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-04-01"},{"lineNumber":55,"author":{"gitId":"hieunm1821"},"content":"* **`editdriver`**`1 s/absent` : Edits the status of the driver at index `1` to `absent`.","lastModifiedDate":"2022-03-31"},{"lineNumber":56,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-03-27"},{"lineNumber":57,"author":{"gitId":"hieunm1821"},"content":"* **`listdriver all`** : Lists all the drivers in the system.","lastModifiedDate":"2022-03-31"},{"lineNumber":58,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-03-31"},{"lineNumber":59,"author":{"gitId":"hieunm1821"},"content":"* **`listdriver free`** : Lists all the free drivers in the system.","lastModifiedDate":"2022-03-31"},{"lineNumber":60,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":61,"author":{"gitId":"zxgoh"},"content":"### Commands relating to `Customer`","lastModifiedDate":"2022-04-01"},{"lineNumber":62,"author":{"gitId":"zxgoh"},"content":"* **`addcustomer`**`n/Joe p/98765432 a/home` : Adds a new driver with name `Joe` and phone number `98765432`.","lastModifiedDate":"2022-04-01"},{"lineNumber":63,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":64,"author":{"gitId":"zxgoh"},"content":"* **`deletecustomer`**`1` : Deletes the customer at index `1`.","lastModifiedDate":"2022-04-01"},{"lineNumber":65,"author":{"gitId":"jaegarpoon"},"content":"","lastModifiedDate":"2022-02-24"},{"lineNumber":66,"author":{"gitId":"zxgoh"},"content":"* **`editcustomer`**`1 n/Jack` : Edits the customer at index `1` and replaces name with `Jack`.","lastModifiedDate":"2022-04-01"},{"lineNumber":67,"author":{"gitId":"jaegarpoon"},"content":"","lastModifiedDate":"2022-02-24"},{"lineNumber":68,"author":{"gitId":"zxgoh"},"content":"* **`listcustomer`** : Lists all the customers in the system.","lastModifiedDate":"2022-04-01"},{"lineNumber":69,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-02-24"},{"lineNumber":70,"author":{"gitId":"-"},"content":"1. Refer to the [Features](#features) below for details of each command.","lastModifiedDate":"2020-05-23"},{"lineNumber":71,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":72,"author":{"gitId":"-"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2020-05-23"},{"lineNumber":73,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":74,"author":{"gitId":"-"},"content":"## Features","lastModifiedDate":"2020-05-23"},{"lineNumber":75,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":76,"author":{"gitId":"-"},"content":"\u003cdiv markdown\u003d\"block\" class\u003d\"alert alert-info\"\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":77,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":78,"author":{"gitId":"-"},"content":"**:information_source: Notes about the command format:**\u003cbr\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":79,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":80,"author":{"gitId":"-"},"content":"* Words in `UPPER_CASE` are the parameters to be supplied by the user.\u003cbr\u003e","lastModifiedDate":"2022-03-30"},{"lineNumber":81,"author":{"gitId":"jaegarpoon"},"content":"  e.g. in `adddish n/NAME $/PRICE`, `name` and `price` are parameters which can be used as `adddish n/Crab Pasta $/15.50`.","lastModifiedDate":"2022-03-30"},{"lineNumber":82,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":83,"author":{"gitId":"-"},"content":"* Items in square brackets are optional.\u003cbr\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":84,"author":{"gitId":"-"},"content":"  e.g `n/NAME [t/TAG]` can be used as `n/John Doe t/friend` or as `n/John Doe`.","lastModifiedDate":"2022-03-30"},{"lineNumber":85,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":86,"author":{"gitId":"xzzz3"},"content":"* Items with `…`​ after them can have multiple inputs.\u003cbr\u003e","lastModifiedDate":"2022-03-30"},{"lineNumber":87,"author":{"gitId":"xzzz3"},"content":"  e.g. `t/friend`, `t/friend, family` etc.","lastModifiedDate":"2022-03-30"},{"lineNumber":88,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":89,"author":{"gitId":"-"},"content":"* Parameters can be in any order.\u003cbr\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":90,"author":{"gitId":"jaegarpoon"},"content":"  e.g. if the command specifies `n/NAME p/PHONE`, `p/PHONE n/NAME` is also acceptable.","lastModifiedDate":"2022-03-30"},{"lineNumber":91,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":92,"author":{"gitId":"-"},"content":"* If a parameter is expected only once in the command but you specified it multiple times, only the last occurrence of the parameter will be taken.\u003cbr\u003e","lastModifiedDate":"2021-02-04"},{"lineNumber":93,"author":{"gitId":"zxgoh"},"content":"  e.g. if you specify `p/81232323 p/91823232`, only `p/91823232` will be taken.","lastModifiedDate":"2022-04-01"},{"lineNumber":94,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-02-04"},{"lineNumber":95,"author":{"gitId":"jaegarpoon"},"content":"* Extraneous parameters for commands that do not take in parameters (such as `help`, `listdish`, `exit` and `clear`) will be ignored.\u003cbr\u003e","lastModifiedDate":"2022-03-27"},{"lineNumber":96,"author":{"gitId":"-"},"content":"  e.g. if the command specifies `help 123`, it will be interpreted as `help`.","lastModifiedDate":"2021-02-03"},{"lineNumber":97,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-02-03"},{"lineNumber":98,"author":{"gitId":"-"},"content":"\u003c/div\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":99,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":100,"author":{"gitId":"zxgoh"},"content":"## Customer features","lastModifiedDate":"2022-02-25"},{"lineNumber":101,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-02-25"},{"lineNumber":102,"author":{"gitId":"zxgoh"},"content":"### Adding a customer: `addcustomer`","lastModifiedDate":"2022-03-30"},{"lineNumber":103,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-02-25"},{"lineNumber":104,"author":{"gitId":"zxgoh"},"content":"Adds a customer to the database.","lastModifiedDate":"2022-03-30"},{"lineNumber":105,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-02-25"},{"lineNumber":106,"author":{"gitId":"zxgoh"},"content":"Format: `addcustomer n/{name} a/{address} p/{phone}`","lastModifiedDate":"2022-03-30"},{"lineNumber":107,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-02-25"},{"lineNumber":108,"author":{"gitId":"zxgoh"},"content":"Examples:","lastModifiedDate":"2022-02-25"},{"lineNumber":109,"author":{"gitId":"zxgoh"},"content":"* `addcustomer n/John Doe a/John street, block 123, #01-01 p/98765432`","lastModifiedDate":"2022-03-30"},{"lineNumber":110,"author":{"gitId":"zxgoh"},"content":"* `addcustomer n/Betsy Crowe a/Newgate Prison p/82943423`","lastModifiedDate":"2022-04-01"},{"lineNumber":111,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-02-25"},{"lineNumber":112,"author":{"gitId":"zxgoh"},"content":"### Deleting a customer: `deletecustomer`","lastModifiedDate":"2022-03-30"},{"lineNumber":113,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-02-25"},{"lineNumber":114,"author":{"gitId":"zxgoh"},"content":"Deletes a customer from the database.","lastModifiedDate":"2022-03-30"},{"lineNumber":115,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-02-25"},{"lineNumber":116,"author":{"gitId":"zxgoh"},"content":"Format: `deletecustomer {index}`","lastModifiedDate":"2022-03-30"},{"lineNumber":117,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-02-25"},{"lineNumber":118,"author":{"gitId":"zxgoh"},"content":"Examples:","lastModifiedDate":"2022-02-25"},{"lineNumber":119,"author":{"gitId":"zxgoh"},"content":"* `deletecustomer 1`","lastModifiedDate":"2022-03-30"},{"lineNumber":120,"author":{"gitId":"zxgoh"},"content":"","lastModifiedDate":"2022-03-30"},{"lineNumber":121,"author":{"gitId":"zxgoh"},"content":"### Editing a customer: `editcustomer`","lastModifiedDate":"2022-03-30"},{"lineNumber":122,"author":{"gitId":"zxgoh"},"content":"","lastModifiedDate":"2022-03-30"},{"lineNumber":123,"author":{"gitId":"jaegarpoon"},"content":"Edits a customer from the database.","lastModifiedDate":"2022-03-31"},{"lineNumber":124,"author":{"gitId":"zxgoh"},"content":"","lastModifiedDate":"2022-03-30"},{"lineNumber":125,"author":{"gitId":"zxgoh"},"content":"Format: `editcustomer {index} n/{name} p/{phone} a/{address}`","lastModifiedDate":"2022-03-30"},{"lineNumber":126,"author":{"gitId":"zxgoh"},"content":"","lastModifiedDate":"2022-03-30"},{"lineNumber":127,"author":{"gitId":"zxgoh"},"content":"Examples:","lastModifiedDate":"2022-03-30"},{"lineNumber":128,"author":{"gitId":"zxgoh"},"content":"* `editcustomer 1 n/John Doe a/Sentosa Cove`","lastModifiedDate":"2022-03-30"},{"lineNumber":129,"author":{"gitId":"zxgoh"},"content":"* `editcustomer 3 p/81234567 a/Sentosa Cove`","lastModifiedDate":"2022-03-30"},{"lineNumber":130,"author":{"gitId":"zxgoh"},"content":"* `editcustomer 2 n/John Doe p/81234567`","lastModifiedDate":"2022-03-30"},{"lineNumber":131,"author":{"gitId":"zxgoh"},"content":"","lastModifiedDate":"2022-03-30"},{"lineNumber":132,"author":{"gitId":"zxgoh"},"content":"### Editing a customer: `editcustomer`","lastModifiedDate":"2022-04-01"},{"lineNumber":133,"author":{"gitId":"zxgoh"},"content":"","lastModifiedDate":"2022-04-01"},{"lineNumber":134,"author":{"gitId":"zxgoh"},"content":"Lists all customers from the database.","lastModifiedDate":"2022-04-01"},{"lineNumber":135,"author":{"gitId":"zxgoh"},"content":"","lastModifiedDate":"2022-04-01"},{"lineNumber":136,"author":{"gitId":"zxgoh"},"content":"Format: `listcustomer`","lastModifiedDate":"2022-04-01"},{"lineNumber":137,"author":{"gitId":"zxgoh"},"content":"","lastModifiedDate":"2022-02-25"},{"lineNumber":138,"author":{"gitId":"hieunm1821"},"content":"## Driver features","lastModifiedDate":"2022-02-26"},{"lineNumber":139,"author":{"gitId":"zxgoh"},"content":"","lastModifiedDate":"2022-02-25"},{"lineNumber":140,"author":{"gitId":"hieunm1821"},"content":"### Adding a driver: `adddriver`","lastModifiedDate":"2022-02-26"},{"lineNumber":141,"author":{"gitId":"zxgoh"},"content":"","lastModifiedDate":"2022-02-25"},{"lineNumber":142,"author":{"gitId":"hieunm1821"},"content":"Adds a driver to the database.","lastModifiedDate":"2022-02-26"},{"lineNumber":143,"author":{"gitId":"hieunm1821"},"content":"","lastModifiedDate":"2022-02-26"},{"lineNumber":144,"author":{"gitId":"jaegarpoon"},"content":"Format: ` adddriver n/NAME p/PHONE`","lastModifiedDate":"2022-03-30"},{"lineNumber":145,"author":{"gitId":"hieunm1821"},"content":"","lastModifiedDate":"2022-02-26"},{"lineNumber":146,"author":{"gitId":"hieunm1821"},"content":"Examples:","lastModifiedDate":"2022-02-26"},{"lineNumber":147,"author":{"gitId":"hieunm1821"},"content":"* `adddriver n/John Doe p/98765432 `","lastModifiedDate":"2022-02-26"},{"lineNumber":148,"author":{"gitId":"zxgoh"},"content":"* `adddriver n/Betsy Crowe p/82345671 `","lastModifiedDate":"2022-04-01"},{"lineNumber":149,"author":{"gitId":"hieunm1821"},"content":"","lastModifiedDate":"2022-02-26"},{"lineNumber":150,"author":{"gitId":"hieunm1821"},"content":"### Deleting a driver: `deletedriver`","lastModifiedDate":"2022-02-26"},{"lineNumber":151,"author":{"gitId":"hieunm1821"},"content":"","lastModifiedDate":"2022-02-26"},{"lineNumber":152,"author":{"gitId":"hieunm1821"},"content":"Deletes a driver from the database, together with his/her information.","lastModifiedDate":"2022-02-26"},{"lineNumber":153,"author":{"gitId":"hieunm1821"},"content":"","lastModifiedDate":"2022-02-26"},{"lineNumber":154,"author":{"gitId":"hieunm1821"},"content":"Format: `deletedriver INDEX`, where `INDEX` denotes the index of the drivers.","lastModifiedDate":"2022-03-31"},{"lineNumber":155,"author":{"gitId":"hieunm1821"},"content":"* Please use the index `INDEX` shown from the list retrieved from the command `listdriver all`","lastModifiedDate":"2022-03-31"},{"lineNumber":156,"author":{"gitId":"hieunm1821"},"content":"","lastModifiedDate":"2022-02-26"},{"lineNumber":157,"author":{"gitId":"hieunm1821"},"content":"Examples:","lastModifiedDate":"2022-02-26"},{"lineNumber":158,"author":{"gitId":"hieunm1821"},"content":"* `deletedriver 1`","lastModifiedDate":"2022-03-31"},{"lineNumber":159,"author":{"gitId":"hieunm1821"},"content":"","lastModifiedDate":"2022-02-26"},{"lineNumber":160,"author":{"gitId":"hieunm1821"},"content":"### List all drivers: `listdriver all`","lastModifiedDate":"2022-03-31"},{"lineNumber":161,"author":{"gitId":"hieunm1821"},"content":"","lastModifiedDate":"2022-02-26"},{"lineNumber":162,"author":{"gitId":"hieunm1821"},"content":"Lists all drivers in the database.","lastModifiedDate":"2022-03-31"},{"lineNumber":163,"author":{"gitId":"hieunm1821"},"content":"","lastModifiedDate":"2022-02-26"},{"lineNumber":164,"author":{"gitId":"hieunm1821"},"content":"Format: `listdriver all`","lastModifiedDate":"2022-03-31"},{"lineNumber":165,"author":{"gitId":"zxgoh"},"content":"","lastModifiedDate":"2022-02-25"},{"lineNumber":166,"author":{"gitId":"hieunm1821"},"content":"### List driver with specific status: `listdriver`","lastModifiedDate":"2022-03-14"},{"lineNumber":167,"author":{"gitId":"hieunm1821"},"content":"","lastModifiedDate":"2022-03-14"},{"lineNumber":168,"author":{"gitId":"hieunm1821"},"content":"Lists drivers having a specific status at that time.","lastModifiedDate":"2022-03-14"},{"lineNumber":169,"author":{"gitId":"hieunm1821"},"content":"","lastModifiedDate":"2022-03-14"},{"lineNumber":170,"author":{"gitId":"hieunm1821"},"content":"Format: `listdriver [STATUS]`","lastModifiedDate":"2022-03-14"},{"lineNumber":171,"author":{"gitId":"hieunm1821"},"content":"","lastModifiedDate":"2022-03-14"},{"lineNumber":172,"author":{"gitId":"hieunm1821"},"content":"Action | Feature type","lastModifiedDate":"2022-03-31"},{"lineNumber":173,"author":{"gitId":"hieunm1821"},"content":"--------|--------------  ","lastModifiedDate":"2022-03-31"},{"lineNumber":174,"author":{"gitId":"hieunm1821"},"content":"**FREE** | Drivers who are not delivering any order and can receive new orders.","lastModifiedDate":"2022-03-31"},{"lineNumber":175,"author":{"gitId":"hieunm1821"},"content":"**BUSY** | Drivers who are delivering order and cannot receive new orders.","lastModifiedDate":"2022-03-31"},{"lineNumber":176,"author":{"gitId":"hieunm1821"},"content":"**ABSENT** | Drivers who are out of work and cannot receive new orders.","lastModifiedDate":"2022-03-31"},{"lineNumber":177,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-03-31"},{"lineNumber":178,"author":{"gitId":"-"},"content":"Examples:","lastModifiedDate":"2022-03-14"},{"lineNumber":179,"author":{"gitId":"hieunm1821"},"content":"* `listdriver free`","lastModifiedDate":"2022-03-14"},{"lineNumber":180,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-03-14"},{"lineNumber":181,"author":{"gitId":"hieunm1821"},"content":"### Editing a driver: `editdriver`","lastModifiedDate":"2022-03-31"},{"lineNumber":182,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-03-31"},{"lineNumber":183,"author":{"gitId":"hieunm1821"},"content":"Edits a driver\u0027s information","lastModifiedDate":"2022-03-31"},{"lineNumber":184,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-03-31"},{"lineNumber":185,"author":{"gitId":"hieunm1821"},"content":"Format: `editdriver INDEX [n/NAME] [p/PHONE] [s/STATUS]`, where `INDEX` denotes the index of the drivers.","lastModifiedDate":"2022-03-31"},{"lineNumber":186,"author":{"gitId":"hieunm1821"},"content":"* Please use the index `INDEX` shown from the list retrieved from the command `listdriver all`","lastModifiedDate":"2022-03-31"},{"lineNumber":187,"author":{"gitId":"hieunm1821"},"content":"* `STATUS` cannot be changed to `BUSY`.","lastModifiedDate":"2022-03-31"},{"lineNumber":188,"author":{"gitId":"hieunm1821"},"content":"* `STATUS` only can be changed when the driver is `FREE`.","lastModifiedDate":"2022-03-31"},{"lineNumber":189,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-03-31"},{"lineNumber":190,"author":{"gitId":"hieunm1821"},"content":"Examples:","lastModifiedDate":"2022-03-31"},{"lineNumber":191,"author":{"gitId":"hieunm1821"},"content":"* `editdish 1 n/Adam`","lastModifiedDate":"2022-03-31"},{"lineNumber":192,"author":{"gitId":"hieunm1821"},"content":"* `editdish 2 p/99998888`","lastModifiedDate":"2022-03-31"},{"lineNumber":193,"author":{"gitId":"hieunm1821"},"content":"* `editdish 2 s/absent`","lastModifiedDate":"2022-03-31"},{"lineNumber":194,"author":{"gitId":"zxgoh"},"content":"## Dish features","lastModifiedDate":"2022-02-25"},{"lineNumber":195,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-02-25"},{"lineNumber":196,"author":{"gitId":"jaegarpoon"},"content":"### Adding a dish: `adddish`","lastModifiedDate":"2022-02-24"},{"lineNumber":197,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-02-24"},{"lineNumber":198,"author":{"gitId":"jaegarpoon"},"content":"Adds a dish to the restaurant’s menu. Dishes of the same name cannot be added.","lastModifiedDate":"2022-03-27"},{"lineNumber":199,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-02-24"},{"lineNumber":200,"author":{"gitId":"jaegarpoon"},"content":"Format: `adddish n/NAME $/PRICE`","lastModifiedDate":"2022-03-30"},{"lineNumber":201,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-02-24"},{"lineNumber":202,"author":{"gitId":"-"},"content":"Examples:","lastModifiedDate":"2022-02-24"},{"lineNumber":203,"author":{"gitId":"jaegarpoon"},"content":"* `add dish n/Crab Pasta $/15.50`","lastModifiedDate":"2022-03-27"},{"lineNumber":204,"author":{"gitId":"jaegarpoon"},"content":"* `add dish n/Kimchi Fried Rice $/10.00`","lastModifiedDate":"2022-03-27"},{"lineNumber":205,"author":{"gitId":"jaegarpoon"},"content":"","lastModifiedDate":"2022-02-24"},{"lineNumber":206,"author":{"gitId":"jaegarpoon"},"content":"### Deleting a dish: `deletedish`","lastModifiedDate":"2022-02-24"},{"lineNumber":207,"author":{"gitId":"jaegarpoon"},"content":"","lastModifiedDate":"2022-02-24"},{"lineNumber":208,"author":{"gitId":"jaegarpoon"},"content":"Deletes a dish from the restaurant’s menu.","lastModifiedDate":"2022-02-24"},{"lineNumber":209,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-02-24"},{"lineNumber":210,"author":{"gitId":"jaegarpoon"},"content":"Format: `deletedish INDEX`, where `INDEX` denotes the index of the dish shown on FoodOnWheels","lastModifiedDate":"2022-03-30"},{"lineNumber":211,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-02-24"},{"lineNumber":212,"author":{"gitId":"jaegarpoon"},"content":"Examples:","lastModifiedDate":"2022-02-24"},{"lineNumber":213,"author":{"gitId":"jaegarpoon"},"content":"* `deletedish 1`","lastModifiedDate":"2022-03-27"},{"lineNumber":214,"author":{"gitId":"jaegarpoon"},"content":"* `deletedish 2`","lastModifiedDate":"2022-03-27"},{"lineNumber":215,"author":{"gitId":"jaegarpoon"},"content":"","lastModifiedDate":"2022-02-24"},{"lineNumber":216,"author":{"gitId":"jaegarpoon"},"content":"### Editing a dish: `editdish`","lastModifiedDate":"2022-03-30"},{"lineNumber":217,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-02-24"},{"lineNumber":218,"author":{"gitId":"jaegarpoon"},"content":"Edits a dish from the restaurant’s menu.","lastModifiedDate":"2022-03-30"},{"lineNumber":219,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-02-24"},{"lineNumber":220,"author":{"gitId":"jaegarpoon"},"content":"Format: `editdish INDEX [n/NAME] [$/PRICE]`, where `INDEX` denotes the index of the dish shown on FoodOnWheels","lastModifiedDate":"2022-03-30"},{"lineNumber":221,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-02-24"},{"lineNumber":222,"author":{"gitId":"-"},"content":"Examples:","lastModifiedDate":"2022-03-30"},{"lineNumber":223,"author":{"gitId":"jaegarpoon"},"content":"* `editdish 1 n/Limchi Fried Rice`","lastModifiedDate":"2022-03-30"},{"lineNumber":224,"author":{"gitId":"jaegarpoon"},"content":"* `editdish 2 $/10.00`","lastModifiedDate":"2022-03-30"},{"lineNumber":225,"author":{"gitId":"jaegarpoon"},"content":"* `editdish 2 n/Limchi Fried Rice $/10.00`","lastModifiedDate":"2022-03-30"},{"lineNumber":226,"author":{"gitId":"jaegarpoon"},"content":"","lastModifiedDate":"2022-03-30"},{"lineNumber":227,"author":{"gitId":"xzzz3"},"content":"## Order Features","lastModifiedDate":"2022-02-24"},{"lineNumber":228,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-03-30"},{"lineNumber":229,"author":{"gitId":"xzzz3"},"content":"### Adding a new Delivery Order: `addorder`","lastModifiedDate":"2022-02-24"},{"lineNumber":230,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-03-30"},{"lineNumber":231,"author":{"gitId":"xzzz3"},"content":"Adds a new delivery order to the list of orders.","lastModifiedDate":"2022-02-24"},{"lineNumber":232,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-03-30"},{"lineNumber":233,"author":{"gitId":"jaegarpoon"},"content":"Format: `addorder p/PHONE d/DISHES_SEPARATED_BY_COMMA...`","lastModifiedDate":"2022-03-31"},{"lineNumber":234,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-03-30"},{"lineNumber":235,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-03-30"},{"lineNumber":236,"author":{"gitId":"-"},"content":"Examples:","lastModifiedDate":"2020-05-23"},{"lineNumber":237,"author":{"gitId":"jaegarpoon"},"content":"* `addorder p/81234567 d/Fried Rice, Pasta`","lastModifiedDate":"2022-03-31"},{"lineNumber":238,"author":{"gitId":"jaegarpoon"},"content":"* `addorder p/86471627 d/Sushi`","lastModifiedDate":"2022-03-31"},{"lineNumber":239,"author":{"gitId":"jaegarpoon"},"content":"","lastModifiedDate":"2022-02-24"},{"lineNumber":240,"author":{"gitId":"xzzz3"},"content":"### Edit the status of a Delivery Order: `mark`","lastModifiedDate":"2022-02-24"},{"lineNumber":241,"author":{"gitId":"jaegarpoon"},"content":"","lastModifiedDate":"2022-02-24"},{"lineNumber":242,"author":{"gitId":"xzzz3"},"content":"Edit the status of a delivery order in the list using its index.","lastModifiedDate":"2022-02-24"},{"lineNumber":243,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":244,"author":{"gitId":"jaegarpoon"},"content":"Format: `mark INDEX s/STATUS`","lastModifiedDate":"2022-03-31"},{"lineNumber":245,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":246,"author":{"gitId":"-"},"content":"Examples:","lastModifiedDate":"2020-05-23"},{"lineNumber":247,"author":{"gitId":"xzzz3"},"content":"* `mark 1 s/delivered`","lastModifiedDate":"2022-03-30"},{"lineNumber":248,"author":{"gitId":"xzzz3"},"content":"* `mark 3 s/in progress`","lastModifiedDate":"2022-03-30"},{"lineNumber":249,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":250,"author":{"gitId":"xzzz3"},"content":"### Edit the details of a Delivery Order: `editorder`","lastModifiedDate":"2022-03-30"},{"lineNumber":251,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":252,"author":{"gitId":"xzzz3"},"content":"Edit the customer and dishes details of a delivery order in the list using its index.","lastModifiedDate":"2022-03-30"},{"lineNumber":253,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":254,"author":{"gitId":"jaegarpoon"},"content":"Format: `editorder INDEX [p/PHONE] [d/DISHES_SEPARATED_BY_COMMA...]`","lastModifiedDate":"2022-03-31"},{"lineNumber":255,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":256,"author":{"gitId":"-"},"content":"Examples:","lastModifiedDate":"2020-05-23"},{"lineNumber":257,"author":{"gitId":"xzzz3"},"content":"* `editorder 1 p/87264512 d/kimchi, fried rice`","lastModifiedDate":"2022-03-30"},{"lineNumber":258,"author":{"gitId":"xzzz3"},"content":"* `editorder 3 p/87654321`","lastModifiedDate":"2022-03-30"},{"lineNumber":259,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":260,"author":{"gitId":"xzzz3"},"content":"### Search for an Order by Phone Number: `findorder`","lastModifiedDate":"2022-02-24"},{"lineNumber":261,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":262,"author":{"gitId":"xzzz3"},"content":"Search for an order with the phone number provided in the list of orders.","lastModifiedDate":"2022-02-24"},{"lineNumber":263,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":264,"author":{"gitId":"jaegarpoon"},"content":"Format: `find p/PHONE`","lastModifiedDate":"2022-03-31"},{"lineNumber":265,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":266,"author":{"gitId":"-"},"content":"Examples:","lastModifiedDate":"2020-05-23"},{"lineNumber":267,"author":{"gitId":"xzzz3"},"content":"* `find p/81234567`","lastModifiedDate":"2022-03-30"},{"lineNumber":268,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":269,"author":{"gitId":"jaegarpoon"},"content":"### Listing orders: `listorder`","lastModifiedDate":"2022-03-31"},{"lineNumber":270,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":271,"author":{"gitId":"jaegarpoon"},"content":"Lists the orders in the system based on the keyword entered.","lastModifiedDate":"2022-03-31"},{"lineNumber":272,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":273,"author":{"gitId":"jaegarpoon"},"content":"Format: `listorder KEYWORD`. KEYWORD is one of \u0027all\u0027, \u0027in_progress\u0027","lastModifiedDate":"2022-03-31"},{"lineNumber":274,"author":{"gitId":"jaegarpoon"},"content":"OR \u0027in progress\u0027, \u0027delivered\u0027, \u0027cancelled\u0027 (not case-sensitive)","lastModifiedDate":"2022-03-31"},{"lineNumber":275,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":276,"author":{"gitId":"jaegarpoon"},"content":"### Revenue for the day: `revenue`","lastModifiedDate":"2022-03-31"},{"lineNumber":277,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":278,"author":{"gitId":"jaegarpoon"},"content":"Obtains revenue generated in the current day based on the date","lastModifiedDate":"2022-03-31"},{"lineNumber":279,"author":{"gitId":"jaegarpoon"},"content":"on the operating system. All orders in FoodOnWheels will be listed.","lastModifiedDate":"2022-03-31"},{"lineNumber":280,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":281,"author":{"gitId":"jaegarpoon"},"content":"Format: `revenue`","lastModifiedDate":"2022-03-31"},{"lineNumber":282,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":283,"author":{"gitId":"jaegarpoon"},"content":"(to be updated)","lastModifiedDate":"2022-03-31"},{"lineNumber":284,"author":{"gitId":"xzzz3"},"content":"### Viewing help : `help`","lastModifiedDate":"2022-03-30"},{"lineNumber":285,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":286,"author":{"gitId":"xzzz3"},"content":"Shows a message explaning how to access the help page.","lastModifiedDate":"2022-03-30"},{"lineNumber":287,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":288,"author":{"gitId":"jaegarpoon"},"content":"![help message](images/helpMessage.png)","lastModifiedDate":"2022-03-31"},{"lineNumber":289,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":290,"author":{"gitId":"xzzz3"},"content":"Format: `help`","lastModifiedDate":"2022-03-30"},{"lineNumber":291,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":292,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":293,"author":{"gitId":"-"},"content":"### Exiting the program : `exit`","lastModifiedDate":"2020-05-23"},{"lineNumber":294,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":295,"author":{"gitId":"-"},"content":"Exits the program.","lastModifiedDate":"2020-05-23"},{"lineNumber":296,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":297,"author":{"gitId":"-"},"content":"Format: `exit`","lastModifiedDate":"2020-05-23"},{"lineNumber":298,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":299,"author":{"gitId":"jaegarpoon"},"content":"","lastModifiedDate":"2022-02-24"},{"lineNumber":300,"author":{"gitId":"-"},"content":"### Saving the data","lastModifiedDate":"2020-05-23"},{"lineNumber":301,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":302,"author":{"gitId":"jaegarpoon"},"content":"FoodOnWheels data are saved in the hard disk automatically after any command that changes the data. There is no need to save manually.","lastModifiedDate":"2022-02-24"},{"lineNumber":303,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":304,"author":{"gitId":"-"},"content":"### Editing the data file","lastModifiedDate":"2021-02-04"},{"lineNumber":305,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-02-04"},{"lineNumber":306,"author":{"gitId":"jaegarpoon"},"content":"FoodOnWheels data are saved as a JSON file `[JAR file location]/data/addressbook.json` (to be updated). Advanced users are welcome to update data directly by editing that data file.","lastModifiedDate":"2022-02-24"},{"lineNumber":307,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-02-04"},{"lineNumber":308,"author":{"gitId":"-"},"content":"\u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-warning\"\u003e:exclamation: **Caution:**","lastModifiedDate":"2021-02-04"},{"lineNumber":309,"author":{"gitId":"-"},"content":"If your changes to the data file makes its format invalid, AddressBook will discard all data and start with an empty data file at the next run.","lastModifiedDate":"2021-02-04"},{"lineNumber":310,"author":{"gitId":"-"},"content":"\u003c/div\u003e","lastModifiedDate":"2021-02-04"},{"lineNumber":311,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-02-04"},{"lineNumber":312,"author":{"gitId":"-"},"content":"### Archiving data files `[coming in v2.0]`","lastModifiedDate":"2020-05-23"},{"lineNumber":313,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":314,"author":{"gitId":"-"},"content":"_Details coming soon ..._","lastModifiedDate":"2021-02-04"},{"lineNumber":315,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":316,"author":{"gitId":"-"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2020-05-23"},{"lineNumber":317,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":318,"author":{"gitId":"-"},"content":"## FAQ","lastModifiedDate":"2020-05-23"},{"lineNumber":319,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":320,"author":{"gitId":"-"},"content":"**Q**: How do I transfer my data to another Computer?\u003cbr\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":321,"author":{"gitId":"jaegarpoon"},"content":"**A**: Install the app in the other computer and overwrite the empty data file it creates with the file that contains the data of your previous FoodOnWheels home folder.","lastModifiedDate":"2022-02-24"},{"lineNumber":322,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":323,"author":{"gitId":"-"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2020-05-23"},{"lineNumber":324,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":325,"author":{"gitId":"-"},"content":"## Command summary","lastModifiedDate":"2020-05-23"},{"lineNumber":326,"author":{"gitId":"jaegarpoon"},"content":"(to be updated)","lastModifiedDate":"2022-02-24"},{"lineNumber":327,"author":{"gitId":"jaegarpoon"},"content":"","lastModifiedDate":"2022-02-24"},{"lineNumber":328,"author":{"gitId":"jaegarpoon"},"content":"Action | Feature type | Format, Examples","lastModifiedDate":"2022-02-24"},{"lineNumber":329,"author":{"gitId":"jaegarpoon"},"content":"--------|--------------|------------------","lastModifiedDate":"2022-02-24"},{"lineNumber":330,"author":{"gitId":"zxgoh"},"content":"**Add** | **Customer** |`addcustomer n/NAME a/ADDRESS p/PHONE` \u003cbr\u003e e.g,`addcustomer n/James Ho a/123, Clementi Rd, 1234665 p/88884444`","lastModifiedDate":"2022-04-01"},{"lineNumber":331,"author":{"gitId":"jaegarpoon"},"content":"**Delete** | **Customer** |`deletecustomer INDEX` \u003cbr\u003e e.g,`deletecustomer 1`","lastModifiedDate":"2022-03-31"},{"lineNumber":332,"author":{"gitId":"zxgoh"},"content":"**Edit** | **Customer** |`editcustomer INDEX [n/NAME] [a/ADDRESS] [p/PHONE]`\u003cbr\u003e e.g,`editcustomer 1 n/James Ho a/123, Clementi Rd, 1234665 p/99994444`","lastModifiedDate":"2022-04-01"},{"lineNumber":333,"author":{"gitId":"jaegarpoon"},"content":"**Add** | **Driver**   |`adddriver n/NAME p/PHONE` \u003cbr\u003e e.g,`add driver n/John Doe p/98765432`","lastModifiedDate":"2022-03-30"},{"lineNumber":334,"author":{"gitId":"jaegarpoon"},"content":"**Delete** | **Driver**   |`deletedriver n/NAME p/PHONE` \u003cbr\u003e e.g,`delete driver n/John Doe p/98765432`","lastModifiedDate":"2022-03-30"},{"lineNumber":335,"author":{"gitId":"hieunm1821"},"content":"**List (all drivers)** | **Driver**   |`listdriver all`","lastModifiedDate":"2022-03-31"},{"lineNumber":336,"author":{"gitId":"hieunm1821"},"content":"**List** | **Driver**   |`listdriver [STATUS]` \u003cbr\u003e e.g `listdriver free`","lastModifiedDate":"2022-03-31"},{"lineNumber":337,"author":{"gitId":"hieunm1821"},"content":"**Edit** | **Driver** |``editdriver INDEX [n/NAME] [p/PHONE] [s/STATUS]``\u003cbr\u003e e.g,`editdriver 3 s/absent`","lastModifiedDate":"2022-03-31"},{"lineNumber":338,"author":{"gitId":"jaegarpoon"},"content":"**Add** | **Dish**     | `adddish n/NAME $/PRICE` \u003cbr\u003e e.g., `adddish n/Crab Pasta $/15.50`","lastModifiedDate":"2022-03-30"},{"lineNumber":339,"author":{"gitId":"jaegarpoon"},"content":"**Delete** | **Dish**     | `deletedish INDEX` \u003cbr\u003e e.g., `deletedish 1`","lastModifiedDate":"2022-03-30"},{"lineNumber":340,"author":{"gitId":"jaegarpoon"},"content":"**Add** | **Order**    | `addorder p/PHONE d/DISHES_SEPARATED_BY_COMMA…` \u003cbr\u003e e.g., `addorder p/82224567 d/kimchi fried rice, sushi`","lastModifiedDate":"2022-03-31"},{"lineNumber":341,"author":{"gitId":"jaegarpoon"},"content":"**Edit** | **Order (status)** | `mark INDEX s/STATUS` \u003cbr\u003e e.g., `mark 1 s/delivered`","lastModifiedDate":"2022-03-31"},{"lineNumber":342,"author":{"gitId":"jaegarpoon"},"content":"**Edit** | **Order** | `editorder INDEX [p/PHONE] [d/DISHES_SEPARATED_BY_COMMA...]` \u003cbr\u003e e.g., `editorder 2 p/675827361 d/burger`","lastModifiedDate":"2022-03-31"},{"lineNumber":343,"author":{"gitId":"jaegarpoon"},"content":"**Find** | **Order** | `find p/PHONE` \u003cbr\u003e e.g., `find p/87654321`","lastModifiedDate":"2022-03-31"},{"lineNumber":344,"author":{"gitId":"jaegarpoon"},"content":"**List (all orders)** | **Order**    | `listorder all` (keyword `all` not case-sensitve)","lastModifiedDate":"2022-03-30"},{"lineNumber":345,"author":{"gitId":"jaegarpoon"},"content":"**List (in-progress orders)** | **Order**    | `listorder in progress` OR `listorder in_progress` (keyword `in progress` OR `in_progress` not case-sensitve)","lastModifiedDate":"2022-03-30"},{"lineNumber":346,"author":{"gitId":"jaegarpoon"},"content":"**List (delivered orders)** | **Order**    | `listorder delivered` (keyword `delivered` not case-sensitve)","lastModifiedDate":"2022-03-30"},{"lineNumber":347,"author":{"gitId":"jaegarpoon"},"content":"**List (cancelled orders)** | **Order**    | `listorder cancelled` (keyword `cancelled` not case-sensitve)","lastModifiedDate":"2022-03-30"},{"lineNumber":348,"author":{"gitId":"jaegarpoon"},"content":"**Revenue (for the day)** | **Order**    | `revenue`","lastModifiedDate":"2022-03-30"},{"lineNumber":349,"author":{"gitId":"jaegarpoon"},"content":"","lastModifiedDate":"2022-02-24"},{"lineNumber":350,"author":{"gitId":"jaegarpoon"},"content":"","lastModifiedDate":"2022-02-24"},{"lineNumber":351,"author":{"gitId":"jaegarpoon"},"content":"[//]: # (**Add** |              | `add n/NAME p/PHONE_NUMBER e/EMAIL a/ADDRESS [t/TAG]…​` \u003cbr\u003e e.g., `add n/James Ho p/22224444 e/jamesho@example.com a/123, Clementi Rd, 1234665 t/friend t/colleague`)","lastModifiedDate":"2022-02-24"},{"lineNumber":352,"author":{"gitId":"jaegarpoon"},"content":"","lastModifiedDate":"2022-02-24"},{"lineNumber":353,"author":{"gitId":"jaegarpoon"},"content":"[//]: # (**Clear** |              | `clear`                                                                                                                     )","lastModifiedDate":"2022-02-24"},{"lineNumber":354,"author":{"gitId":"jaegarpoon"},"content":"","lastModifiedDate":"2022-02-24"},{"lineNumber":355,"author":{"gitId":"jaegarpoon"},"content":"[//]: # (**Delete** |              | `delete INDEX`\u003cbr\u003e e.g., `delete 3`                                                                                         )","lastModifiedDate":"2022-02-24"},{"lineNumber":356,"author":{"gitId":"jaegarpoon"},"content":"","lastModifiedDate":"2022-02-24"},{"lineNumber":357,"author":{"gitId":"jaegarpoon"},"content":"[//]: # (**Edit** |              | `edit INDEX [n/NAME] [p/PHONE_NUMBER] [e/EMAIL] [a/ADDRESS] [t/TAG]…​`\u003cbr\u003e e.g.,`edit 2 n/James Lee e/jameslee@example.com` )","lastModifiedDate":"2022-02-24"},{"lineNumber":358,"author":{"gitId":"jaegarpoon"},"content":"","lastModifiedDate":"2022-02-24"},{"lineNumber":359,"author":{"gitId":"jaegarpoon"},"content":"[//]: # (**Find** |              | `find KEYWORD [MORE_KEYWORDS]`\u003cbr\u003e e.g., `find James Jake`                                                                  )","lastModifiedDate":"2022-02-24"},{"lineNumber":360,"author":{"gitId":"jaegarpoon"},"content":"","lastModifiedDate":"2022-02-24"},{"lineNumber":361,"author":{"gitId":"jaegarpoon"},"content":"[//]: # (**List** |              | `list`                                                                                                                      )","lastModifiedDate":"2022-02-24"},{"lineNumber":362,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":363,"author":{"gitId":"jaegarpoon"},"content":"[//]: # (**Help** |              | `help`                                                                                                                      )","lastModifiedDate":"2022-02-24"}],"authorContributionMap":{"xzzz3":23,"hieunm1821":55,"jaegarpoon":101,"-":140,"zxgoh":44}},{"path":"docs/_sass/minima/_base.scss","fileType":"other","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"html {","lastModifiedDate":"2020-05-23"},{"lineNumber":2,"author":{"gitId":"-"},"content":"  font-size: $base-font-size;","lastModifiedDate":"2020-05-23"},{"lineNumber":3,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":5,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2020-05-23"},{"lineNumber":6,"author":{"gitId":"-"},"content":" * Reset some basic elements","lastModifiedDate":"2020-05-23"},{"lineNumber":7,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2020-05-23"},{"lineNumber":8,"author":{"gitId":"-"},"content":"body, h1, h2, h3, h4, h5, h6,","lastModifiedDate":"2020-05-23"},{"lineNumber":9,"author":{"gitId":"-"},"content":"p, blockquote, pre, hr,","lastModifiedDate":"2020-05-23"},{"lineNumber":10,"author":{"gitId":"-"},"content":"dl, dd, ol, ul, figure {","lastModifiedDate":"2020-05-23"},{"lineNumber":11,"author":{"gitId":"-"},"content":"  margin: 0;","lastModifiedDate":"2020-05-23"},{"lineNumber":12,"author":{"gitId":"-"},"content":"  padding: 0;","lastModifiedDate":"2020-05-23"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":14,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":18,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2020-05-23"},{"lineNumber":19,"author":{"gitId":"-"},"content":" * Basic styling","lastModifiedDate":"2020-05-23"},{"lineNumber":20,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2020-05-23"},{"lineNumber":21,"author":{"gitId":"-"},"content":"body {","lastModifiedDate":"2020-05-23"},{"lineNumber":22,"author":{"gitId":"-"},"content":"  font: $base-font-weight #{$base-font-size}/#{$base-line-height} $base-font-family;","lastModifiedDate":"2020-05-23"},{"lineNumber":23,"author":{"gitId":"-"},"content":"  color: $text-color;","lastModifiedDate":"2020-05-23"},{"lineNumber":24,"author":{"gitId":"-"},"content":"  background-color: $background-color;","lastModifiedDate":"2020-05-23"},{"lineNumber":25,"author":{"gitId":"-"},"content":"  -webkit-text-size-adjust: 100%;","lastModifiedDate":"2020-05-23"},{"lineNumber":26,"author":{"gitId":"-"},"content":"  -webkit-font-feature-settings: \"kern\" 1;","lastModifiedDate":"2020-05-23"},{"lineNumber":27,"author":{"gitId":"-"},"content":"     -moz-font-feature-settings: \"kern\" 1;","lastModifiedDate":"2020-05-23"},{"lineNumber":28,"author":{"gitId":"-"},"content":"       -o-font-feature-settings: \"kern\" 1;","lastModifiedDate":"2020-05-23"},{"lineNumber":29,"author":{"gitId":"-"},"content":"          font-feature-settings: \"kern\" 1;","lastModifiedDate":"2020-05-23"},{"lineNumber":30,"author":{"gitId":"-"},"content":"  font-kerning: normal;","lastModifiedDate":"2020-05-23"},{"lineNumber":31,"author":{"gitId":"-"},"content":"  display: flex;","lastModifiedDate":"2020-05-23"},{"lineNumber":32,"author":{"gitId":"-"},"content":"  min-height: 100vh;","lastModifiedDate":"2020-05-23"},{"lineNumber":33,"author":{"gitId":"-"},"content":"  flex-direction: column;","lastModifiedDate":"2020-05-23"},{"lineNumber":34,"author":{"gitId":"-"},"content":"  overflow-wrap: break-word;","lastModifiedDate":"2020-05-23"},{"lineNumber":35,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":36,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":37,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":38,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":39,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2020-05-23"},{"lineNumber":40,"author":{"gitId":"-"},"content":" * Set `margin-bottom` to maintain vertical rhythm","lastModifiedDate":"2020-05-23"},{"lineNumber":41,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2020-05-23"},{"lineNumber":42,"author":{"gitId":"-"},"content":"h1, h2, h3, h4, h5, h6,","lastModifiedDate":"2020-05-23"},{"lineNumber":43,"author":{"gitId":"-"},"content":"p, blockquote, pre,","lastModifiedDate":"2020-05-23"},{"lineNumber":44,"author":{"gitId":"-"},"content":"ul, ol, dl, figure,","lastModifiedDate":"2020-05-23"},{"lineNumber":45,"author":{"gitId":"-"},"content":"%vertical-rhythm {","lastModifiedDate":"2020-05-23"},{"lineNumber":46,"author":{"gitId":"-"},"content":"  margin-bottom: $spacing-unit / 2;","lastModifiedDate":"2020-05-23"},{"lineNumber":47,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":48,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":49,"author":{"gitId":"-"},"content":"hr {","lastModifiedDate":"2020-05-23"},{"lineNumber":50,"author":{"gitId":"-"},"content":"  margin-top: $spacing-unit;","lastModifiedDate":"2020-05-23"},{"lineNumber":51,"author":{"gitId":"-"},"content":"  margin-bottom: $spacing-unit;","lastModifiedDate":"2020-05-23"},{"lineNumber":52,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":53,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":54,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2020-05-23"},{"lineNumber":55,"author":{"gitId":"-"},"content":" * `main` element","lastModifiedDate":"2020-05-23"},{"lineNumber":56,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2020-05-23"},{"lineNumber":57,"author":{"gitId":"-"},"content":"main {","lastModifiedDate":"2020-05-23"},{"lineNumber":58,"author":{"gitId":"-"},"content":"  display: block; /* Default value of `display` of `main` element is \u0027inline\u0027 in IE 11. */","lastModifiedDate":"2020-05-23"},{"lineNumber":59,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":60,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":61,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":62,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":63,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2020-05-23"},{"lineNumber":64,"author":{"gitId":"-"},"content":" * Images","lastModifiedDate":"2020-05-23"},{"lineNumber":65,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2020-05-23"},{"lineNumber":66,"author":{"gitId":"-"},"content":"img {","lastModifiedDate":"2020-05-23"},{"lineNumber":67,"author":{"gitId":"-"},"content":"  max-width: 100%;","lastModifiedDate":"2020-05-23"},{"lineNumber":68,"author":{"gitId":"-"},"content":"  vertical-align: middle;","lastModifiedDate":"2020-05-23"},{"lineNumber":69,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":70,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":71,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":72,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":73,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2020-05-23"},{"lineNumber":74,"author":{"gitId":"-"},"content":" * Figures","lastModifiedDate":"2020-05-23"},{"lineNumber":75,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2020-05-23"},{"lineNumber":76,"author":{"gitId":"-"},"content":"figure \u003e img {","lastModifiedDate":"2020-05-23"},{"lineNumber":77,"author":{"gitId":"-"},"content":"  display: block;","lastModifiedDate":"2020-05-23"},{"lineNumber":78,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":79,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":80,"author":{"gitId":"-"},"content":"figcaption {","lastModifiedDate":"2020-05-23"},{"lineNumber":81,"author":{"gitId":"-"},"content":"  font-size: $small-font-size;","lastModifiedDate":"2020-05-23"},{"lineNumber":82,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":83,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":84,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":85,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":86,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2020-05-23"},{"lineNumber":87,"author":{"gitId":"-"},"content":" * Lists","lastModifiedDate":"2020-05-23"},{"lineNumber":88,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2020-05-23"},{"lineNumber":89,"author":{"gitId":"-"},"content":"ul, ol {","lastModifiedDate":"2020-05-23"},{"lineNumber":90,"author":{"gitId":"-"},"content":"  margin-left: $spacing-unit;","lastModifiedDate":"2020-05-23"},{"lineNumber":91,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":92,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":93,"author":{"gitId":"-"},"content":"li {","lastModifiedDate":"2020-05-23"},{"lineNumber":94,"author":{"gitId":"-"},"content":"  \u003e ul,","lastModifiedDate":"2020-05-23"},{"lineNumber":95,"author":{"gitId":"-"},"content":"  \u003e ol {","lastModifiedDate":"2020-05-23"},{"lineNumber":96,"author":{"gitId":"-"},"content":"    margin-bottom: 0;","lastModifiedDate":"2020-05-23"},{"lineNumber":97,"author":{"gitId":"-"},"content":"  }","lastModifiedDate":"2020-05-23"},{"lineNumber":98,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":99,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":100,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":101,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":102,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2020-05-23"},{"lineNumber":103,"author":{"gitId":"-"},"content":" * Headings","lastModifiedDate":"2020-05-23"},{"lineNumber":104,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2020-05-23"},{"lineNumber":105,"author":{"gitId":"-"},"content":"h1, h2, h3, h4, h5, h6 {","lastModifiedDate":"2020-05-23"},{"lineNumber":106,"author":{"gitId":"-"},"content":"  font-weight: $base-font-weight;","lastModifiedDate":"2020-05-23"},{"lineNumber":107,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":108,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":109,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":110,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":111,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2020-05-23"},{"lineNumber":112,"author":{"gitId":"-"},"content":" * Links","lastModifiedDate":"2020-05-23"},{"lineNumber":113,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2020-05-23"},{"lineNumber":114,"author":{"gitId":"-"},"content":"a {","lastModifiedDate":"2020-05-23"},{"lineNumber":115,"author":{"gitId":"-"},"content":"  color: $link-base-color;","lastModifiedDate":"2020-05-23"},{"lineNumber":116,"author":{"gitId":"-"},"content":"  text-decoration: none;","lastModifiedDate":"2020-05-23"},{"lineNumber":117,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":118,"author":{"gitId":"-"},"content":"  \u0026:visited {","lastModifiedDate":"2020-05-23"},{"lineNumber":119,"author":{"gitId":"-"},"content":"    color: $link-visited-color;","lastModifiedDate":"2020-05-23"},{"lineNumber":120,"author":{"gitId":"-"},"content":"  }","lastModifiedDate":"2020-05-23"},{"lineNumber":121,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":122,"author":{"gitId":"-"},"content":"  \u0026:hover {","lastModifiedDate":"2020-05-23"},{"lineNumber":123,"author":{"gitId":"-"},"content":"    color: $text-color;","lastModifiedDate":"2020-05-23"},{"lineNumber":124,"author":{"gitId":"-"},"content":"    text-decoration: underline;","lastModifiedDate":"2020-05-23"},{"lineNumber":125,"author":{"gitId":"-"},"content":"  }","lastModifiedDate":"2020-05-23"},{"lineNumber":126,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":127,"author":{"gitId":"xzzz3"},"content":"","lastModifiedDate":"2022-02-24"},{"lineNumber":128,"author":{"gitId":"-"},"content":"  .social-media-list \u0026:hover {","lastModifiedDate":"2020-05-23"},{"lineNumber":129,"author":{"gitId":"-"},"content":"    text-decoration: none;","lastModifiedDate":"2020-05-23"},{"lineNumber":130,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":131,"author":{"gitId":"-"},"content":"    .username {","lastModifiedDate":"2020-05-23"},{"lineNumber":132,"author":{"gitId":"-"},"content":"      text-decoration: underline;","lastModifiedDate":"2020-05-23"},{"lineNumber":133,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2020-05-23"},{"lineNumber":134,"author":{"gitId":"-"},"content":"  }","lastModifiedDate":"2020-05-23"},{"lineNumber":135,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":136,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":137,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":138,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2020-05-23"},{"lineNumber":139,"author":{"gitId":"-"},"content":" * Blockquotes","lastModifiedDate":"2020-05-23"},{"lineNumber":140,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2020-05-23"},{"lineNumber":141,"author":{"gitId":"-"},"content":"blockquote {","lastModifiedDate":"2020-05-23"},{"lineNumber":142,"author":{"gitId":"-"},"content":"  color: $brand-color;","lastModifiedDate":"2020-05-23"},{"lineNumber":143,"author":{"gitId":"-"},"content":"  border-left: 4px solid $brand-color-light;","lastModifiedDate":"2020-05-23"},{"lineNumber":144,"author":{"gitId":"-"},"content":"  padding-left: $spacing-unit / 2;","lastModifiedDate":"2020-05-23"},{"lineNumber":145,"author":{"gitId":"-"},"content":"  @include relative-font-size(1.125);","lastModifiedDate":"2020-05-23"},{"lineNumber":146,"author":{"gitId":"-"},"content":"  font-style: italic;","lastModifiedDate":"2020-05-23"},{"lineNumber":147,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":148,"author":{"gitId":"-"},"content":"  \u003e :last-child {","lastModifiedDate":"2020-05-23"},{"lineNumber":149,"author":{"gitId":"-"},"content":"    margin-bottom: 0;","lastModifiedDate":"2020-05-23"},{"lineNumber":150,"author":{"gitId":"-"},"content":"  }","lastModifiedDate":"2020-05-23"},{"lineNumber":151,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":152,"author":{"gitId":"-"},"content":"  i, em {","lastModifiedDate":"2020-05-23"},{"lineNumber":153,"author":{"gitId":"-"},"content":"    font-style: normal;","lastModifiedDate":"2020-05-23"},{"lineNumber":154,"author":{"gitId":"-"},"content":"  }","lastModifiedDate":"2020-05-23"},{"lineNumber":155,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":156,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":157,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":158,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":159,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2020-05-23"},{"lineNumber":160,"author":{"gitId":"-"},"content":" * Code formatting","lastModifiedDate":"2020-05-23"},{"lineNumber":161,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2020-05-23"},{"lineNumber":162,"author":{"gitId":"-"},"content":"pre,","lastModifiedDate":"2020-05-23"},{"lineNumber":163,"author":{"gitId":"-"},"content":"code {","lastModifiedDate":"2020-05-23"},{"lineNumber":164,"author":{"gitId":"-"},"content":"  font-family: $code-font-family;","lastModifiedDate":"2020-05-23"},{"lineNumber":165,"author":{"gitId":"-"},"content":"  font-size: 0.9375em;","lastModifiedDate":"2020-05-23"},{"lineNumber":166,"author":{"gitId":"-"},"content":"  border: 1px solid $brand-color-light;","lastModifiedDate":"2020-05-23"},{"lineNumber":167,"author":{"gitId":"-"},"content":"  border-radius: 3px;","lastModifiedDate":"2020-05-23"},{"lineNumber":168,"author":{"gitId":"-"},"content":"  background-color: $code-background-color;","lastModifiedDate":"2020-05-23"},{"lineNumber":169,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":170,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":171,"author":{"gitId":"-"},"content":"code {","lastModifiedDate":"2020-05-23"},{"lineNumber":172,"author":{"gitId":"-"},"content":"  padding: 1px 5px;","lastModifiedDate":"2020-05-23"},{"lineNumber":173,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":174,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":175,"author":{"gitId":"-"},"content":"pre {","lastModifiedDate":"2020-05-23"},{"lineNumber":176,"author":{"gitId":"-"},"content":"  padding: 8px 12px;","lastModifiedDate":"2020-05-23"},{"lineNumber":177,"author":{"gitId":"-"},"content":"  overflow-x: auto;","lastModifiedDate":"2020-05-23"},{"lineNumber":178,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":179,"author":{"gitId":"-"},"content":"  \u003e code {","lastModifiedDate":"2020-05-23"},{"lineNumber":180,"author":{"gitId":"-"},"content":"    border: 0;","lastModifiedDate":"2020-05-23"},{"lineNumber":181,"author":{"gitId":"-"},"content":"    padding-right: 0;","lastModifiedDate":"2020-05-23"},{"lineNumber":182,"author":{"gitId":"-"},"content":"    padding-left: 0;","lastModifiedDate":"2020-05-23"},{"lineNumber":183,"author":{"gitId":"-"},"content":"  }","lastModifiedDate":"2020-05-23"},{"lineNumber":184,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":185,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":186,"author":{"gitId":"-"},"content":".highlight {","lastModifiedDate":"2020-05-23"},{"lineNumber":187,"author":{"gitId":"-"},"content":"  border-radius: 3px;","lastModifiedDate":"2020-05-23"},{"lineNumber":188,"author":{"gitId":"-"},"content":"  background: $code-background-color;","lastModifiedDate":"2020-05-23"},{"lineNumber":189,"author":{"gitId":"-"},"content":"  @extend %vertical-rhythm;","lastModifiedDate":"2020-05-23"},{"lineNumber":190,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":191,"author":{"gitId":"-"},"content":"  .highlighter-rouge \u0026 {","lastModifiedDate":"2020-05-23"},{"lineNumber":192,"author":{"gitId":"-"},"content":"    background: $code-background-color;","lastModifiedDate":"2020-05-23"},{"lineNumber":193,"author":{"gitId":"-"},"content":"  }","lastModifiedDate":"2020-05-23"},{"lineNumber":194,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":195,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":196,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":197,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":198,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2020-05-23"},{"lineNumber":199,"author":{"gitId":"-"},"content":" * Wrapper","lastModifiedDate":"2020-05-23"},{"lineNumber":200,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2020-05-23"},{"lineNumber":201,"author":{"gitId":"-"},"content":".wrapper {","lastModifiedDate":"2020-05-23"},{"lineNumber":202,"author":{"gitId":"-"},"content":"  max-width: calc(#{$content-width} - (#{$spacing-unit}));","lastModifiedDate":"2020-05-23"},{"lineNumber":203,"author":{"gitId":"-"},"content":"  margin-right: auto;","lastModifiedDate":"2020-05-23"},{"lineNumber":204,"author":{"gitId":"-"},"content":"  margin-left: auto;","lastModifiedDate":"2020-05-23"},{"lineNumber":205,"author":{"gitId":"-"},"content":"  padding-right: $spacing-unit / 2;","lastModifiedDate":"2020-05-23"},{"lineNumber":206,"author":{"gitId":"-"},"content":"  padding-left: $spacing-unit / 2;","lastModifiedDate":"2020-05-23"},{"lineNumber":207,"author":{"gitId":"-"},"content":"  @extend %clearfix;","lastModifiedDate":"2020-05-23"},{"lineNumber":208,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":209,"author":{"gitId":"-"},"content":"  @media screen and (min-width: $on-large) {","lastModifiedDate":"2020-05-23"},{"lineNumber":210,"author":{"gitId":"-"},"content":"    max-width: calc(#{$content-width} - (#{$spacing-unit} * 2));","lastModifiedDate":"2020-05-23"},{"lineNumber":211,"author":{"gitId":"-"},"content":"    padding-right: $spacing-unit;","lastModifiedDate":"2020-05-23"},{"lineNumber":212,"author":{"gitId":"-"},"content":"    padding-left: $spacing-unit;","lastModifiedDate":"2020-05-23"},{"lineNumber":213,"author":{"gitId":"-"},"content":"  }","lastModifiedDate":"2020-05-23"},{"lineNumber":214,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":215,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":216,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":217,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":218,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2020-05-23"},{"lineNumber":219,"author":{"gitId":"-"},"content":" * Clearfix","lastModifiedDate":"2020-05-23"},{"lineNumber":220,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2020-05-23"},{"lineNumber":221,"author":{"gitId":"-"},"content":"%clearfix:after {","lastModifiedDate":"2020-05-23"},{"lineNumber":222,"author":{"gitId":"-"},"content":"  content: \"\";","lastModifiedDate":"2020-05-23"},{"lineNumber":223,"author":{"gitId":"-"},"content":"  display: table;","lastModifiedDate":"2020-05-23"},{"lineNumber":224,"author":{"gitId":"-"},"content":"  clear: both;","lastModifiedDate":"2020-05-23"},{"lineNumber":225,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":226,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":227,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":228,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":229,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2020-05-23"},{"lineNumber":230,"author":{"gitId":"-"},"content":" * Icons","lastModifiedDate":"2020-05-23"},{"lineNumber":231,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2020-05-23"},{"lineNumber":232,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":233,"author":{"gitId":"-"},"content":".orange {","lastModifiedDate":"2020-05-23"},{"lineNumber":234,"author":{"gitId":"-"},"content":"  color: #f66a0a;","lastModifiedDate":"2020-05-23"},{"lineNumber":235,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":236,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":237,"author":{"gitId":"-"},"content":".grey {","lastModifiedDate":"2020-05-23"},{"lineNumber":238,"author":{"gitId":"-"},"content":"  color: #828282;","lastModifiedDate":"2020-05-23"},{"lineNumber":239,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":240,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":241,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2020-05-23"},{"lineNumber":242,"author":{"gitId":"-"},"content":" * Tables","lastModifiedDate":"2020-05-23"},{"lineNumber":243,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2020-05-23"},{"lineNumber":244,"author":{"gitId":"-"},"content":"table {","lastModifiedDate":"2020-05-23"},{"lineNumber":245,"author":{"gitId":"-"},"content":"  margin-bottom: $spacing-unit;","lastModifiedDate":"2020-05-23"},{"lineNumber":246,"author":{"gitId":"-"},"content":"  width: 100%;","lastModifiedDate":"2020-05-23"},{"lineNumber":247,"author":{"gitId":"-"},"content":"  text-align: $table-text-align;","lastModifiedDate":"2020-05-23"},{"lineNumber":248,"author":{"gitId":"-"},"content":"  color: $table-text-color;","lastModifiedDate":"2020-05-23"},{"lineNumber":249,"author":{"gitId":"-"},"content":"  border-collapse: collapse;","lastModifiedDate":"2020-05-23"},{"lineNumber":250,"author":{"gitId":"-"},"content":"  border: 1px solid $table-border-color;","lastModifiedDate":"2020-05-23"},{"lineNumber":251,"author":{"gitId":"-"},"content":"  tr {","lastModifiedDate":"2020-05-23"},{"lineNumber":252,"author":{"gitId":"-"},"content":"    \u0026:nth-child(even) {","lastModifiedDate":"2020-05-23"},{"lineNumber":253,"author":{"gitId":"-"},"content":"      background-color: $table-zebra-color;","lastModifiedDate":"2020-05-23"},{"lineNumber":254,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2020-05-23"},{"lineNumber":255,"author":{"gitId":"-"},"content":"  }","lastModifiedDate":"2020-05-23"},{"lineNumber":256,"author":{"gitId":"-"},"content":"  th, td {","lastModifiedDate":"2020-05-23"},{"lineNumber":257,"author":{"gitId":"-"},"content":"    padding: ($spacing-unit / 3) ($spacing-unit / 2);","lastModifiedDate":"2020-05-23"},{"lineNumber":258,"author":{"gitId":"-"},"content":"  }","lastModifiedDate":"2020-05-23"},{"lineNumber":259,"author":{"gitId":"-"},"content":"  th {","lastModifiedDate":"2020-05-23"},{"lineNumber":260,"author":{"gitId":"-"},"content":"    background-color: $table-header-bg-color;","lastModifiedDate":"2020-05-23"},{"lineNumber":261,"author":{"gitId":"-"},"content":"    border: 1px solid $table-header-border;","lastModifiedDate":"2020-05-23"},{"lineNumber":262,"author":{"gitId":"-"},"content":"  }","lastModifiedDate":"2020-05-23"},{"lineNumber":263,"author":{"gitId":"-"},"content":"  td {","lastModifiedDate":"2020-05-23"},{"lineNumber":264,"author":{"gitId":"-"},"content":"    border: 1px solid $table-border-color;","lastModifiedDate":"2020-05-23"},{"lineNumber":265,"author":{"gitId":"-"},"content":"  }","lastModifiedDate":"2020-05-23"},{"lineNumber":266,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":267,"author":{"gitId":"-"},"content":"  @include media-query($on-laptop) {","lastModifiedDate":"2020-05-23"},{"lineNumber":268,"author":{"gitId":"-"},"content":"    display: block;","lastModifiedDate":"2020-05-23"},{"lineNumber":269,"author":{"gitId":"-"},"content":"    overflow-x: auto;","lastModifiedDate":"2020-05-23"},{"lineNumber":270,"author":{"gitId":"-"},"content":"    -webkit-overflow-scrolling: touch;","lastModifiedDate":"2020-05-23"},{"lineNumber":271,"author":{"gitId":"-"},"content":"            -ms-overflow-style: -ms-autohiding-scrollbar;","lastModifiedDate":"2020-05-23"},{"lineNumber":272,"author":{"gitId":"-"},"content":"  }","lastModifiedDate":"2020-05-23"},{"lineNumber":273,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":274,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-01-11"},{"lineNumber":275,"author":{"gitId":"-"},"content":"@media print {","lastModifiedDate":"2021-01-12"},{"lineNumber":276,"author":{"gitId":"-"},"content":"  /**","lastModifiedDate":"2021-01-11"},{"lineNumber":277,"author":{"gitId":"-"},"content":"  * Prevents page break from cutting through content when printing","lastModifiedDate":"2021-01-12"},{"lineNumber":278,"author":{"gitId":"-"},"content":"  */","lastModifiedDate":"2021-01-11"},{"lineNumber":279,"author":{"gitId":"-"},"content":"  body {","lastModifiedDate":"2021-01-11"},{"lineNumber":280,"author":{"gitId":"-"},"content":"    display: block;","lastModifiedDate":"2021-01-11"},{"lineNumber":281,"author":{"gitId":"-"},"content":"  }","lastModifiedDate":"2021-01-11"},{"lineNumber":282,"author":{"gitId":"-"},"content":"  /**","lastModifiedDate":"2021-01-12"},{"lineNumber":283,"author":{"gitId":"-"},"content":"  * Replaces the top navigation menu with the project name when printing","lastModifiedDate":"2021-01-12"},{"lineNumber":284,"author":{"gitId":"-"},"content":"  */","lastModifiedDate":"2021-01-12"},{"lineNumber":285,"author":{"gitId":"-"},"content":"  .site-header .wrapper {","lastModifiedDate":"2021-01-12"},{"lineNumber":286,"author":{"gitId":"-"},"content":"    display: none;","lastModifiedDate":"2021-01-12"},{"lineNumber":287,"author":{"gitId":"-"},"content":"  }","lastModifiedDate":"2021-01-12"},{"lineNumber":288,"author":{"gitId":"-"},"content":"  .site-header {","lastModifiedDate":"2021-01-12"},{"lineNumber":289,"author":{"gitId":"-"},"content":"    text-align: center;","lastModifiedDate":"2021-01-12"},{"lineNumber":290,"author":{"gitId":"-"},"content":"  }","lastModifiedDate":"2021-01-12"},{"lineNumber":291,"author":{"gitId":"-"},"content":"  .site-header:before {","lastModifiedDate":"2021-01-12"},{"lineNumber":292,"author":{"gitId":"xzzz3"},"content":"    content: \"FoodOnWheels\";","lastModifiedDate":"2022-02-24"},{"lineNumber":293,"author":{"gitId":"-"},"content":"    font-size: 32px;","lastModifiedDate":"2021-01-12"},{"lineNumber":294,"author":{"gitId":"-"},"content":"  }","lastModifiedDate":"2021-01-11"},{"lineNumber":295,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2021-01-12"},{"lineNumber":296,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-01-12"}],"authorContributionMap":{"xzzz3":2,"-":294}},{"path":"docs/diagrams/AddCustomerSequenceDiagram.puml","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"zxgoh"},"content":"@startuml","lastModifiedDate":"2022-03-25"},{"lineNumber":2,"author":{"gitId":"zxgoh"},"content":"!include style.puml","lastModifiedDate":"2022-03-25"},{"lineNumber":3,"author":{"gitId":"zxgoh"},"content":"","lastModifiedDate":"2022-03-25"},{"lineNumber":4,"author":{"gitId":"zxgoh"},"content":"box Logic LOGIC_COLOR_T1","lastModifiedDate":"2022-03-25"},{"lineNumber":5,"author":{"gitId":"zxgoh"},"content":"participant \":LogicManager\" as LogicManager LOGIC_COLOR","lastModifiedDate":"2022-03-25"},{"lineNumber":6,"author":{"gitId":"zxgoh"},"content":"participant \":AddressBookParser\" as AddressBookParser LOGIC_COLOR","lastModifiedDate":"2022-03-25"},{"lineNumber":7,"author":{"gitId":"zxgoh"},"content":"participant \":AddCustomerCommandParser\" as AddCustomerCommandParser LOGIC_COLOR","lastModifiedDate":"2022-03-25"},{"lineNumber":8,"author":{"gitId":"zxgoh"},"content":"participant \"d:AddCustomerCommand\" as AddCustomerCommand LOGIC_COLOR","lastModifiedDate":"2022-03-25"},{"lineNumber":9,"author":{"gitId":"zxgoh"},"content":"participant \":CommandResult\" as CommandResult LOGIC_COLOR","lastModifiedDate":"2022-03-25"},{"lineNumber":10,"author":{"gitId":"zxgoh"},"content":"end box","lastModifiedDate":"2022-03-25"},{"lineNumber":11,"author":{"gitId":"zxgoh"},"content":"","lastModifiedDate":"2022-03-25"},{"lineNumber":12,"author":{"gitId":"zxgoh"},"content":"box Model MODEL_COLOR_T1","lastModifiedDate":"2022-03-25"},{"lineNumber":13,"author":{"gitId":"zxgoh"},"content":"participant \":Model\" as Model MODEL_COLOR","lastModifiedDate":"2022-03-25"},{"lineNumber":14,"author":{"gitId":"zxgoh"},"content":"end box","lastModifiedDate":"2022-03-25"},{"lineNumber":15,"author":{"gitId":"zxgoh"},"content":"","lastModifiedDate":"2022-03-25"},{"lineNumber":16,"author":{"gitId":"zxgoh"},"content":"[-\u003e LogicManager : execute(\"addcustomer n/john p/12345678 a/nus\")","lastModifiedDate":"2022-03-25"},{"lineNumber":17,"author":{"gitId":"zxgoh"},"content":"activate LogicManager","lastModifiedDate":"2022-03-25"},{"lineNumber":18,"author":{"gitId":"zxgoh"},"content":"","lastModifiedDate":"2022-03-25"},{"lineNumber":19,"author":{"gitId":"zxgoh"},"content":"LogicManager -\u003e AddressBookParser : parseCommand(\"addcustomer n/john p/12345678 a/nus\")","lastModifiedDate":"2022-03-25"},{"lineNumber":20,"author":{"gitId":"zxgoh"},"content":"activate AddressBookParser","lastModifiedDate":"2022-03-25"},{"lineNumber":21,"author":{"gitId":"zxgoh"},"content":"","lastModifiedDate":"2022-03-25"},{"lineNumber":22,"author":{"gitId":"zxgoh"},"content":"create AddCustomerCommandParser","lastModifiedDate":"2022-03-25"},{"lineNumber":23,"author":{"gitId":"zxgoh"},"content":"AddressBookParser -\u003e AddCustomerCommandParser","lastModifiedDate":"2022-03-25"},{"lineNumber":24,"author":{"gitId":"zxgoh"},"content":"activate AddCustomerCommandParser","lastModifiedDate":"2022-03-25"},{"lineNumber":25,"author":{"gitId":"zxgoh"},"content":"","lastModifiedDate":"2022-03-25"},{"lineNumber":26,"author":{"gitId":"zxgoh"},"content":"AddCustomerCommandParser --\u003e AddressBookParser","lastModifiedDate":"2022-03-25"},{"lineNumber":27,"author":{"gitId":"zxgoh"},"content":"deactivate AddCustomerCommandParser","lastModifiedDate":"2022-03-25"},{"lineNumber":28,"author":{"gitId":"zxgoh"},"content":"","lastModifiedDate":"2022-03-25"},{"lineNumber":29,"author":{"gitId":"zxgoh"},"content":"AddressBookParser -\u003e AddCustomerCommandParser : parse(\"n/john p/12345678 a/nus\")","lastModifiedDate":"2022-03-25"},{"lineNumber":30,"author":{"gitId":"zxgoh"},"content":"activate AddCustomerCommandParser","lastModifiedDate":"2022-03-25"},{"lineNumber":31,"author":{"gitId":"zxgoh"},"content":"","lastModifiedDate":"2022-03-25"},{"lineNumber":32,"author":{"gitId":"zxgoh"},"content":"create AddCustomerCommand","lastModifiedDate":"2022-03-25"},{"lineNumber":33,"author":{"gitId":"zxgoh"},"content":"AddCustomerCommandParser -\u003e AddCustomerCommand","lastModifiedDate":"2022-03-25"},{"lineNumber":34,"author":{"gitId":"zxgoh"},"content":"activate AddCustomerCommand","lastModifiedDate":"2022-03-25"},{"lineNumber":35,"author":{"gitId":"zxgoh"},"content":"","lastModifiedDate":"2022-03-25"},{"lineNumber":36,"author":{"gitId":"zxgoh"},"content":"AddCustomerCommand --\u003e AddCustomerCommandParser : d","lastModifiedDate":"2022-03-25"},{"lineNumber":37,"author":{"gitId":"zxgoh"},"content":"deactivate AddCustomerCommand","lastModifiedDate":"2022-03-25"},{"lineNumber":38,"author":{"gitId":"zxgoh"},"content":"","lastModifiedDate":"2022-03-25"},{"lineNumber":39,"author":{"gitId":"zxgoh"},"content":"AddCustomerCommandParser --\u003e AddressBookParser : d","lastModifiedDate":"2022-03-25"},{"lineNumber":40,"author":{"gitId":"zxgoh"},"content":"deactivate AddCustomerCommandParser","lastModifiedDate":"2022-03-25"},{"lineNumber":41,"author":{"gitId":"zxgoh"},"content":"\u0027Hidden arrow to position the destroy marker below the end of the activation bar.","lastModifiedDate":"2022-03-25"},{"lineNumber":42,"author":{"gitId":"zxgoh"},"content":"AddCustomerCommandParser -[hidden]-\u003e AddressBookParser","lastModifiedDate":"2022-03-25"},{"lineNumber":43,"author":{"gitId":"zxgoh"},"content":"destroy AddCustomerCommandParser","lastModifiedDate":"2022-03-25"},{"lineNumber":44,"author":{"gitId":"zxgoh"},"content":"","lastModifiedDate":"2022-03-25"},{"lineNumber":45,"author":{"gitId":"zxgoh"},"content":"AddressBookParser --\u003e LogicManager : d","lastModifiedDate":"2022-03-25"},{"lineNumber":46,"author":{"gitId":"zxgoh"},"content":"deactivate AddressBookParser","lastModifiedDate":"2022-03-25"},{"lineNumber":47,"author":{"gitId":"zxgoh"},"content":"","lastModifiedDate":"2022-03-25"},{"lineNumber":48,"author":{"gitId":"zxgoh"},"content":"LogicManager -\u003e AddCustomerCommand : execute()","lastModifiedDate":"2022-03-25"},{"lineNumber":49,"author":{"gitId":"zxgoh"},"content":"activate AddCustomerCommand","lastModifiedDate":"2022-03-25"},{"lineNumber":50,"author":{"gitId":"zxgoh"},"content":"","lastModifiedDate":"2022-03-25"},{"lineNumber":51,"author":{"gitId":"zxgoh"},"content":"AddCustomerCommand -\u003e Model : addCustomer(customer)","lastModifiedDate":"2022-03-25"},{"lineNumber":52,"author":{"gitId":"zxgoh"},"content":"activate Model","lastModifiedDate":"2022-03-25"},{"lineNumber":53,"author":{"gitId":"zxgoh"},"content":"","lastModifiedDate":"2022-03-25"},{"lineNumber":54,"author":{"gitId":"zxgoh"},"content":"Model --\u003e AddCustomerCommand","lastModifiedDate":"2022-03-25"},{"lineNumber":55,"author":{"gitId":"zxgoh"},"content":"deactivate Model","lastModifiedDate":"2022-03-25"},{"lineNumber":56,"author":{"gitId":"zxgoh"},"content":"","lastModifiedDate":"2022-03-25"},{"lineNumber":57,"author":{"gitId":"zxgoh"},"content":"create CommandResult","lastModifiedDate":"2022-03-25"},{"lineNumber":58,"author":{"gitId":"zxgoh"},"content":"AddCustomerCommand -\u003e CommandResult","lastModifiedDate":"2022-03-25"},{"lineNumber":59,"author":{"gitId":"zxgoh"},"content":"activate CommandResult","lastModifiedDate":"2022-03-25"},{"lineNumber":60,"author":{"gitId":"zxgoh"},"content":"","lastModifiedDate":"2022-03-25"},{"lineNumber":61,"author":{"gitId":"zxgoh"},"content":"CommandResult --\u003e AddCustomerCommand","lastModifiedDate":"2022-03-25"},{"lineNumber":62,"author":{"gitId":"zxgoh"},"content":"deactivate CommandResult","lastModifiedDate":"2022-03-25"},{"lineNumber":63,"author":{"gitId":"zxgoh"},"content":"","lastModifiedDate":"2022-03-25"},{"lineNumber":64,"author":{"gitId":"zxgoh"},"content":"AddCustomerCommand --\u003e LogicManager : result","lastModifiedDate":"2022-03-25"},{"lineNumber":65,"author":{"gitId":"zxgoh"},"content":"deactivate AddCustomerCommand","lastModifiedDate":"2022-03-25"},{"lineNumber":66,"author":{"gitId":"zxgoh"},"content":"","lastModifiedDate":"2022-03-25"},{"lineNumber":67,"author":{"gitId":"zxgoh"},"content":"[\u003c--LogicManager","lastModifiedDate":"2022-03-25"},{"lineNumber":68,"author":{"gitId":"zxgoh"},"content":"deactivate LogicManager","lastModifiedDate":"2022-03-25"},{"lineNumber":69,"author":{"gitId":"zxgoh"},"content":"@enduml","lastModifiedDate":"2022-03-25"}],"authorContributionMap":{"zxgoh":69}},{"path":"docs/diagrams/DeleteCustomerSequenceDiagram.puml","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"zxgoh"},"content":"@startuml","lastModifiedDate":"2022-03-25"},{"lineNumber":2,"author":{"gitId":"zxgoh"},"content":"!include style.puml","lastModifiedDate":"2022-03-25"},{"lineNumber":3,"author":{"gitId":"zxgoh"},"content":"","lastModifiedDate":"2022-03-25"},{"lineNumber":4,"author":{"gitId":"zxgoh"},"content":"box Logic LOGIC_COLOR_T1","lastModifiedDate":"2022-03-25"},{"lineNumber":5,"author":{"gitId":"zxgoh"},"content":"participant \":LogicManager\" as LogicManager LOGIC_COLOR","lastModifiedDate":"2022-03-25"},{"lineNumber":6,"author":{"gitId":"zxgoh"},"content":"participant \":AddressBookParser\" as AddressBookParser LOGIC_COLOR","lastModifiedDate":"2022-03-25"},{"lineNumber":7,"author":{"gitId":"zxgoh"},"content":"participant \":DeleteCustomerCommandParser\" as DeleteCustomerCommandParser LOGIC_COLOR","lastModifiedDate":"2022-03-25"},{"lineNumber":8,"author":{"gitId":"zxgoh"},"content":"participant \"d:DeleteCustomerCommand\" as DeleteCustomerCommand LOGIC_COLOR","lastModifiedDate":"2022-03-25"},{"lineNumber":9,"author":{"gitId":"zxgoh"},"content":"participant \":CommandResult\" as CommandResult LOGIC_COLOR","lastModifiedDate":"2022-03-25"},{"lineNumber":10,"author":{"gitId":"zxgoh"},"content":"end box","lastModifiedDate":"2022-03-25"},{"lineNumber":11,"author":{"gitId":"zxgoh"},"content":"","lastModifiedDate":"2022-03-25"},{"lineNumber":12,"author":{"gitId":"zxgoh"},"content":"box Model MODEL_COLOR_T1","lastModifiedDate":"2022-03-25"},{"lineNumber":13,"author":{"gitId":"zxgoh"},"content":"participant \":Model\" as Model MODEL_COLOR","lastModifiedDate":"2022-03-25"},{"lineNumber":14,"author":{"gitId":"zxgoh"},"content":"end box","lastModifiedDate":"2022-03-25"},{"lineNumber":15,"author":{"gitId":"zxgoh"},"content":"","lastModifiedDate":"2022-03-25"},{"lineNumber":16,"author":{"gitId":"zxgoh"},"content":"[-\u003e LogicManager : execute(\"deletecustomer 3\")","lastModifiedDate":"2022-03-25"},{"lineNumber":17,"author":{"gitId":"zxgoh"},"content":"activate LogicManager","lastModifiedDate":"2022-03-25"},{"lineNumber":18,"author":{"gitId":"zxgoh"},"content":"","lastModifiedDate":"2022-03-25"},{"lineNumber":19,"author":{"gitId":"zxgoh"},"content":"LogicManager -\u003e AddressBookParser : parseCommand(\"deletecustomer 3\")","lastModifiedDate":"2022-03-25"},{"lineNumber":20,"author":{"gitId":"zxgoh"},"content":"activate AddressBookParser","lastModifiedDate":"2022-03-25"},{"lineNumber":21,"author":{"gitId":"zxgoh"},"content":"","lastModifiedDate":"2022-03-25"},{"lineNumber":22,"author":{"gitId":"zxgoh"},"content":"create DeleteCustomerCommandParser","lastModifiedDate":"2022-03-25"},{"lineNumber":23,"author":{"gitId":"zxgoh"},"content":"AddressBookParser -\u003e DeleteCustomerCommandParser","lastModifiedDate":"2022-03-25"},{"lineNumber":24,"author":{"gitId":"zxgoh"},"content":"activate DeleteCustomerCommandParser","lastModifiedDate":"2022-03-25"},{"lineNumber":25,"author":{"gitId":"zxgoh"},"content":"","lastModifiedDate":"2022-03-25"},{"lineNumber":26,"author":{"gitId":"zxgoh"},"content":"DeleteCustomerCommandParser --\u003e AddressBookParser","lastModifiedDate":"2022-03-25"},{"lineNumber":27,"author":{"gitId":"zxgoh"},"content":"deactivate DeleteCustomerCommandParser","lastModifiedDate":"2022-03-25"},{"lineNumber":28,"author":{"gitId":"zxgoh"},"content":"","lastModifiedDate":"2022-03-25"},{"lineNumber":29,"author":{"gitId":"zxgoh"},"content":"AddressBookParser -\u003e DeleteCustomerCommandParser : parse(\"3\")","lastModifiedDate":"2022-03-25"},{"lineNumber":30,"author":{"gitId":"zxgoh"},"content":"activate DeleteCustomerCommandParser","lastModifiedDate":"2022-03-25"},{"lineNumber":31,"author":{"gitId":"zxgoh"},"content":"","lastModifiedDate":"2022-03-25"},{"lineNumber":32,"author":{"gitId":"zxgoh"},"content":"create DeleteCustomerCommand","lastModifiedDate":"2022-03-25"},{"lineNumber":33,"author":{"gitId":"zxgoh"},"content":"DeleteCustomerCommandParser -\u003e DeleteCustomerCommand","lastModifiedDate":"2022-03-25"},{"lineNumber":34,"author":{"gitId":"zxgoh"},"content":"activate DeleteCustomerCommand","lastModifiedDate":"2022-03-25"},{"lineNumber":35,"author":{"gitId":"zxgoh"},"content":"","lastModifiedDate":"2022-03-25"},{"lineNumber":36,"author":{"gitId":"zxgoh"},"content":"DeleteCustomerCommand --\u003e DeleteCustomerCommandParser : d","lastModifiedDate":"2022-03-25"},{"lineNumber":37,"author":{"gitId":"zxgoh"},"content":"deactivate DeleteCustomerCommand","lastModifiedDate":"2022-03-25"},{"lineNumber":38,"author":{"gitId":"zxgoh"},"content":"","lastModifiedDate":"2022-03-25"},{"lineNumber":39,"author":{"gitId":"zxgoh"},"content":"DeleteCustomerCommandParser --\u003e AddressBookParser : d","lastModifiedDate":"2022-03-25"},{"lineNumber":40,"author":{"gitId":"zxgoh"},"content":"deactivate DeleteCustomerCommandParser","lastModifiedDate":"2022-03-25"},{"lineNumber":41,"author":{"gitId":"zxgoh"},"content":"\u0027Hidden arrow to position the destroy marker below the end of the activation bar.","lastModifiedDate":"2022-03-25"},{"lineNumber":42,"author":{"gitId":"zxgoh"},"content":"DeleteCustomerCommandParser -[hidden]-\u003e AddressBookParser","lastModifiedDate":"2022-03-25"},{"lineNumber":43,"author":{"gitId":"zxgoh"},"content":"destroy DeleteCustomerCommandParser","lastModifiedDate":"2022-03-25"},{"lineNumber":44,"author":{"gitId":"zxgoh"},"content":"","lastModifiedDate":"2022-03-25"},{"lineNumber":45,"author":{"gitId":"zxgoh"},"content":"AddressBookParser --\u003e LogicManager : d","lastModifiedDate":"2022-03-25"},{"lineNumber":46,"author":{"gitId":"zxgoh"},"content":"deactivate AddressBookParser","lastModifiedDate":"2022-03-25"},{"lineNumber":47,"author":{"gitId":"zxgoh"},"content":"","lastModifiedDate":"2022-03-25"},{"lineNumber":48,"author":{"gitId":"zxgoh"},"content":"LogicManager -\u003e DeleteCustomerCommand : execute()","lastModifiedDate":"2022-03-25"},{"lineNumber":49,"author":{"gitId":"zxgoh"},"content":"activate DeleteCustomerCommand","lastModifiedDate":"2022-03-25"},{"lineNumber":50,"author":{"gitId":"zxgoh"},"content":"","lastModifiedDate":"2022-03-25"},{"lineNumber":51,"author":{"gitId":"zxgoh"},"content":"DeleteCustomerCommand -\u003e Model : deleteCustomer(3)","lastModifiedDate":"2022-03-25"},{"lineNumber":52,"author":{"gitId":"zxgoh"},"content":"activate Model","lastModifiedDate":"2022-03-25"},{"lineNumber":53,"author":{"gitId":"zxgoh"},"content":"","lastModifiedDate":"2022-03-25"},{"lineNumber":54,"author":{"gitId":"zxgoh"},"content":"Model --\u003e DeleteCustomerCommand","lastModifiedDate":"2022-03-25"},{"lineNumber":55,"author":{"gitId":"zxgoh"},"content":"deactivate Model","lastModifiedDate":"2022-03-25"},{"lineNumber":56,"author":{"gitId":"zxgoh"},"content":"","lastModifiedDate":"2022-03-25"},{"lineNumber":57,"author":{"gitId":"zxgoh"},"content":"create CommandResult","lastModifiedDate":"2022-03-25"},{"lineNumber":58,"author":{"gitId":"zxgoh"},"content":"DeleteCustomerCommand -\u003e CommandResult","lastModifiedDate":"2022-03-25"},{"lineNumber":59,"author":{"gitId":"zxgoh"},"content":"activate CommandResult","lastModifiedDate":"2022-03-25"},{"lineNumber":60,"author":{"gitId":"zxgoh"},"content":"","lastModifiedDate":"2022-03-25"},{"lineNumber":61,"author":{"gitId":"zxgoh"},"content":"CommandResult --\u003e DeleteCustomerCommand","lastModifiedDate":"2022-03-25"},{"lineNumber":62,"author":{"gitId":"zxgoh"},"content":"deactivate CommandResult","lastModifiedDate":"2022-03-25"},{"lineNumber":63,"author":{"gitId":"zxgoh"},"content":"","lastModifiedDate":"2022-03-25"},{"lineNumber":64,"author":{"gitId":"zxgoh"},"content":"DeleteCustomerCommand --\u003e LogicManager : result","lastModifiedDate":"2022-03-25"},{"lineNumber":65,"author":{"gitId":"zxgoh"},"content":"deactivate DeleteCustomerCommand","lastModifiedDate":"2022-03-25"},{"lineNumber":66,"author":{"gitId":"zxgoh"},"content":"","lastModifiedDate":"2022-03-25"},{"lineNumber":67,"author":{"gitId":"zxgoh"},"content":"[\u003c--LogicManager","lastModifiedDate":"2022-03-25"},{"lineNumber":68,"author":{"gitId":"zxgoh"},"content":"deactivate LogicManager","lastModifiedDate":"2022-03-25"},{"lineNumber":69,"author":{"gitId":"zxgoh"},"content":"@enduml","lastModifiedDate":"2022-03-25"}],"authorContributionMap":{"zxgoh":69}},{"path":"docs/diagrams/EditOrderStatusSequenceDiagram.puml","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"xzzz3"},"content":"@startuml","lastModifiedDate":"2022-03-24"},{"lineNumber":2,"author":{"gitId":"xzzz3"},"content":"!include style.puml","lastModifiedDate":"2022-03-24"},{"lineNumber":3,"author":{"gitId":"xzzz3"},"content":"","lastModifiedDate":"2022-03-24"},{"lineNumber":4,"author":{"gitId":"xzzz3"},"content":"box Logic LOGIC_COLOR_T1","lastModifiedDate":"2022-03-24"},{"lineNumber":5,"author":{"gitId":"xzzz3"},"content":"participant \":LogicManager\" as LogicManager LOGIC_COLOR","lastModifiedDate":"2022-03-24"},{"lineNumber":6,"author":{"gitId":"xzzz3"},"content":"participant \":AddressBookParser\" as AddressBookParser LOGIC_COLOR","lastModifiedDate":"2022-03-24"},{"lineNumber":7,"author":{"gitId":"xzzz3"},"content":"participant \"e:EditOrderStatusCommand\" as EditOrderStatusCommand LOGIC_COLOR","lastModifiedDate":"2022-03-24"},{"lineNumber":8,"author":{"gitId":"xzzz3"},"content":"end box","lastModifiedDate":"2022-03-24"},{"lineNumber":9,"author":{"gitId":"xzzz3"},"content":"","lastModifiedDate":"2022-03-24"},{"lineNumber":10,"author":{"gitId":"xzzz3"},"content":"box Model MODEL_COLOR_T1","lastModifiedDate":"2022-03-24"},{"lineNumber":11,"author":{"gitId":"xzzz3"},"content":"participant \":Model\" as Model MODEL_COLOR","lastModifiedDate":"2022-03-24"},{"lineNumber":12,"author":{"gitId":"xzzz3"},"content":"participant \"l:lastShownList\" as lastShownList MODEL_COLOR","lastModifiedDate":"2022-03-24"},{"lineNumber":13,"author":{"gitId":"xzzz3"},"content":"participant \"o:order\" as order MODEL_COLOR","lastModifiedDate":"2022-03-24"},{"lineNumber":14,"author":{"gitId":"xzzz3"},"content":"end box","lastModifiedDate":"2022-03-24"},{"lineNumber":15,"author":{"gitId":"xzzz3"},"content":"","lastModifiedDate":"2022-03-24"},{"lineNumber":16,"author":{"gitId":"xzzz3"},"content":"[-\u003e LogicManager : execute(mark)","lastModifiedDate":"2022-03-24"},{"lineNumber":17,"author":{"gitId":"xzzz3"},"content":"activate LogicManager","lastModifiedDate":"2022-03-24"},{"lineNumber":18,"author":{"gitId":"xzzz3"},"content":"","lastModifiedDate":"2022-03-24"},{"lineNumber":19,"author":{"gitId":"xzzz3"},"content":"LogicManager -\u003e AddressBookParser : parseCommand(mark)","lastModifiedDate":"2022-03-24"},{"lineNumber":20,"author":{"gitId":"xzzz3"},"content":"activate AddressBookParser","lastModifiedDate":"2022-03-24"},{"lineNumber":21,"author":{"gitId":"xzzz3"},"content":"","lastModifiedDate":"2022-03-24"},{"lineNumber":22,"author":{"gitId":"xzzz3"},"content":"create EditOrderStatusCommand","lastModifiedDate":"2022-03-24"},{"lineNumber":23,"author":{"gitId":"xzzz3"},"content":"AddressBookParser -\u003e EditOrderStatusCommand","lastModifiedDate":"2022-03-24"},{"lineNumber":24,"author":{"gitId":"xzzz3"},"content":"activate EditOrderStatusCommand","lastModifiedDate":"2022-03-24"},{"lineNumber":25,"author":{"gitId":"xzzz3"},"content":"","lastModifiedDate":"2022-03-24"},{"lineNumber":26,"author":{"gitId":"xzzz3"},"content":"EditOrderStatusCommand --\u003e AddressBookParser","lastModifiedDate":"2022-03-24"},{"lineNumber":27,"author":{"gitId":"xzzz3"},"content":"deactivate EditOrderStatusCommand","lastModifiedDate":"2022-03-24"},{"lineNumber":28,"author":{"gitId":"xzzz3"},"content":"","lastModifiedDate":"2022-03-24"},{"lineNumber":29,"author":{"gitId":"xzzz3"},"content":"AddressBookParser --\u003e LogicManager : e","lastModifiedDate":"2022-03-24"},{"lineNumber":30,"author":{"gitId":"xzzz3"},"content":"deactivate AddressBookParser","lastModifiedDate":"2022-03-24"},{"lineNumber":31,"author":{"gitId":"xzzz3"},"content":"","lastModifiedDate":"2022-03-24"},{"lineNumber":32,"author":{"gitId":"xzzz3"},"content":"LogicManager -\u003e EditOrderStatusCommand : execute()","lastModifiedDate":"2022-03-24"},{"lineNumber":33,"author":{"gitId":"xzzz3"},"content":"activate EditOrderStatusCommand","lastModifiedDate":"2022-03-24"},{"lineNumber":34,"author":{"gitId":"xzzz3"},"content":"","lastModifiedDate":"2022-03-24"},{"lineNumber":35,"author":{"gitId":"xzzz3"},"content":"EditOrderStatusCommand -\u003e Model : getFilteredOrderList()","lastModifiedDate":"2022-03-24"},{"lineNumber":36,"author":{"gitId":"xzzz3"},"content":"activate Model","lastModifiedDate":"2022-03-24"},{"lineNumber":37,"author":{"gitId":"xzzz3"},"content":"","lastModifiedDate":"2022-03-24"},{"lineNumber":38,"author":{"gitId":"xzzz3"},"content":"Model --\u003e EditOrderStatusCommand : l","lastModifiedDate":"2022-03-24"},{"lineNumber":39,"author":{"gitId":"xzzz3"},"content":"deactivate Model","lastModifiedDate":"2022-03-24"},{"lineNumber":40,"author":{"gitId":"xzzz3"},"content":"","lastModifiedDate":"2022-03-24"},{"lineNumber":41,"author":{"gitId":"xzzz3"},"content":"EditOrderStatusCommand -\u003e lastShownList : get()","lastModifiedDate":"2022-03-24"},{"lineNumber":42,"author":{"gitId":"xzzz3"},"content":"activate lastShownList","lastModifiedDate":"2022-03-24"},{"lineNumber":43,"author":{"gitId":"xzzz3"},"content":"","lastModifiedDate":"2022-03-24"},{"lineNumber":44,"author":{"gitId":"xzzz3"},"content":"lastShownList --\u003e EditOrderStatusCommand : o","lastModifiedDate":"2022-03-24"},{"lineNumber":45,"author":{"gitId":"xzzz3"},"content":"deactivate lastShownList","lastModifiedDate":"2022-03-24"},{"lineNumber":46,"author":{"gitId":"xzzz3"},"content":"","lastModifiedDate":"2022-03-24"},{"lineNumber":47,"author":{"gitId":"xzzz3"},"content":"EditOrderStatusCommand -\u003e order : updateStatus()","lastModifiedDate":"2022-03-24"},{"lineNumber":48,"author":{"gitId":"xzzz3"},"content":"activate order","lastModifiedDate":"2022-03-24"},{"lineNumber":49,"author":{"gitId":"xzzz3"},"content":"","lastModifiedDate":"2022-03-24"},{"lineNumber":50,"author":{"gitId":"xzzz3"},"content":"order --\u003e EditOrderStatusCommand : editedOrder","lastModifiedDate":"2022-03-24"},{"lineNumber":51,"author":{"gitId":"xzzz3"},"content":"deactivate order","lastModifiedDate":"2022-03-24"},{"lineNumber":52,"author":{"gitId":"xzzz3"},"content":"","lastModifiedDate":"2022-03-24"},{"lineNumber":53,"author":{"gitId":"xzzz3"},"content":"","lastModifiedDate":"2022-03-24"},{"lineNumber":54,"author":{"gitId":"xzzz3"},"content":"EditOrderStatusCommand --\u003e LogicManager : result","lastModifiedDate":"2022-03-24"},{"lineNumber":55,"author":{"gitId":"xzzz3"},"content":"deactivate EditOrderStatusCommand","lastModifiedDate":"2022-03-24"},{"lineNumber":56,"author":{"gitId":"xzzz3"},"content":"EditOrderStatusCommand -[hidden]-\u003e LogicManager : result","lastModifiedDate":"2022-03-24"},{"lineNumber":57,"author":{"gitId":"xzzz3"},"content":"destroy EditOrderStatusCommand","lastModifiedDate":"2022-03-24"},{"lineNumber":58,"author":{"gitId":"xzzz3"},"content":"","lastModifiedDate":"2022-03-24"},{"lineNumber":59,"author":{"gitId":"xzzz3"},"content":"[\u003c--LogicManager","lastModifiedDate":"2022-03-24"},{"lineNumber":60,"author":{"gitId":"xzzz3"},"content":"deactivate LogicManager","lastModifiedDate":"2022-03-24"},{"lineNumber":61,"author":{"gitId":"xzzz3"},"content":"@enduml","lastModifiedDate":"2022-03-24"}],"authorContributionMap":{"xzzz3":61}},{"path":"docs/diagrams/OrderClassDiagram.puml","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"xzzz3"},"content":"@startuml","lastModifiedDate":"2022-03-24"},{"lineNumber":2,"author":{"gitId":"xzzz3"},"content":"\u0027https://plantuml.com/class-diagram","lastModifiedDate":"2022-03-24"},{"lineNumber":3,"author":{"gitId":"xzzz3"},"content":"","lastModifiedDate":"2022-03-24"},{"lineNumber":4,"author":{"gitId":"xzzz3"},"content":"Order o--\u003e \"1\" Customer : ordered by \u003e","lastModifiedDate":"2022-03-24"},{"lineNumber":5,"author":{"gitId":"xzzz3"},"content":"Order o--\u003e \"1\" Driver : delivering by \u003e","lastModifiedDate":"2022-03-24"},{"lineNumber":6,"author":{"gitId":"xzzz3"},"content":"Order o--\u003e \"1...*\" Dish : includes \u003e","lastModifiedDate":"2022-03-24"},{"lineNumber":7,"author":{"gitId":"xzzz3"},"content":"","lastModifiedDate":"2022-03-24"},{"lineNumber":8,"author":{"gitId":"xzzz3"},"content":"class Order {","lastModifiedDate":"2022-03-24"},{"lineNumber":9,"author":{"gitId":"xzzz3"},"content":"}","lastModifiedDate":"2022-03-24"},{"lineNumber":10,"author":{"gitId":"xzzz3"},"content":"","lastModifiedDate":"2022-03-24"},{"lineNumber":11,"author":{"gitId":"xzzz3"},"content":"class Customer {","lastModifiedDate":"2022-03-24"},{"lineNumber":12,"author":{"gitId":"xzzz3"},"content":"NameCustomer name","lastModifiedDate":"2022-03-24"},{"lineNumber":13,"author":{"gitId":"xzzz3"},"content":"PhoneCustomer phone","lastModifiedDate":"2022-03-24"},{"lineNumber":14,"author":{"gitId":"xzzz3"},"content":"AddressCustomer address","lastModifiedDate":"2022-03-24"},{"lineNumber":15,"author":{"gitId":"xzzz3"},"content":"}","lastModifiedDate":"2022-03-24"},{"lineNumber":16,"author":{"gitId":"xzzz3"},"content":"","lastModifiedDate":"2022-03-24"},{"lineNumber":17,"author":{"gitId":"xzzz3"},"content":"class Driver {","lastModifiedDate":"2022-03-24"},{"lineNumber":18,"author":{"gitId":"xzzz3"},"content":"NameDriver name","lastModifiedDate":"2022-03-24"},{"lineNumber":19,"author":{"gitId":"xzzz3"},"content":"PhoneDriver phone","lastModifiedDate":"2022-03-24"},{"lineNumber":20,"author":{"gitId":"xzzz3"},"content":"String status","lastModifiedDate":"2022-03-24"},{"lineNumber":21,"author":{"gitId":"xzzz3"},"content":"}","lastModifiedDate":"2022-03-24"},{"lineNumber":22,"author":{"gitId":"xzzz3"},"content":"","lastModifiedDate":"2022-03-24"},{"lineNumber":23,"author":{"gitId":"xzzz3"},"content":"class Dish {","lastModifiedDate":"2022-03-24"},{"lineNumber":24,"author":{"gitId":"xzzz3"},"content":"Name name","lastModifiedDate":"2022-03-24"},{"lineNumber":25,"author":{"gitId":"xzzz3"},"content":"}","lastModifiedDate":"2022-03-24"},{"lineNumber":26,"author":{"gitId":"xzzz3"},"content":"","lastModifiedDate":"2022-03-24"},{"lineNumber":27,"author":{"gitId":"xzzz3"},"content":"@enduml","lastModifiedDate":"2022-03-24"}],"authorContributionMap":{"xzzz3":27}},{"path":"docs/diagrams/TabDisplaySequenceDiagram.puml","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"jaegarpoon"},"content":"@startuml","lastModifiedDate":"2022-03-24"},{"lineNumber":2,"author":{"gitId":"jaegarpoon"},"content":"!include style.puml","lastModifiedDate":"2022-03-24"},{"lineNumber":3,"author":{"gitId":"jaegarpoon"},"content":"","lastModifiedDate":"2022-03-24"},{"lineNumber":4,"author":{"gitId":"jaegarpoon"},"content":"box Ui LOGIC_COLOR_T1","lastModifiedDate":"2022-03-24"},{"lineNumber":5,"author":{"gitId":"jaegarpoon"},"content":"participant \":MainWindow\" as MainWindow LOGIC_COLOR","lastModifiedDate":"2022-03-24"},{"lineNumber":6,"author":{"gitId":"jaegarpoon"},"content":"participant \":TabDisplay\" as TabDisplay LOGIC_COLOR","lastModifiedDate":"2022-03-24"},{"lineNumber":7,"author":{"gitId":"jaegarpoon"},"content":"end box","lastModifiedDate":"2022-03-24"},{"lineNumber":8,"author":{"gitId":"jaegarpoon"},"content":"","lastModifiedDate":"2022-03-24"},{"lineNumber":9,"author":{"gitId":"jaegarpoon"},"content":"","lastModifiedDate":"2022-03-24"},{"lineNumber":10,"author":{"gitId":"jaegarpoon"},"content":"[-\u003e MainWindow : execute(\"deletedish 1\")","lastModifiedDate":"2022-03-24"},{"lineNumber":11,"author":{"gitId":"jaegarpoon"},"content":"activate MainWindow","lastModifiedDate":"2022-03-24"},{"lineNumber":12,"author":{"gitId":"jaegarpoon"},"content":"","lastModifiedDate":"2022-03-24"},{"lineNumber":13,"author":{"gitId":"jaegarpoon"},"content":"MainWindow -\u003e TabDisplay : setFocus(DEFAULT_TAB_DISPLAY_FOCUS)","lastModifiedDate":"2022-03-24"},{"lineNumber":14,"author":{"gitId":"jaegarpoon"},"content":"activate TabDisplay","lastModifiedDate":"2022-03-24"},{"lineNumber":15,"author":{"gitId":"jaegarpoon"},"content":"","lastModifiedDate":"2022-03-24"},{"lineNumber":16,"author":{"gitId":"jaegarpoon"},"content":"TabDisplay --\u003e MainWindow","lastModifiedDate":"2022-03-24"},{"lineNumber":17,"author":{"gitId":"jaegarpoon"},"content":"deactivate TabDisplay","lastModifiedDate":"2022-03-24"},{"lineNumber":18,"author":{"gitId":"jaegarpoon"},"content":"","lastModifiedDate":"2022-03-24"},{"lineNumber":19,"author":{"gitId":"jaegarpoon"},"content":"MainWindow -\u003e TabDisplay : setFocus(DISH_TAB_DISPLAY_FOCUS)","lastModifiedDate":"2022-03-24"},{"lineNumber":20,"author":{"gitId":"jaegarpoon"},"content":"activate TabDisplay","lastModifiedDate":"2022-03-24"},{"lineNumber":21,"author":{"gitId":"jaegarpoon"},"content":"","lastModifiedDate":"2022-03-24"},{"lineNumber":22,"author":{"gitId":"jaegarpoon"},"content":"TabDisplay --\u003e MainWindow","lastModifiedDate":"2022-03-24"},{"lineNumber":23,"author":{"gitId":"jaegarpoon"},"content":"deactivate TabDisplay","lastModifiedDate":"2022-03-24"},{"lineNumber":24,"author":{"gitId":"jaegarpoon"},"content":"","lastModifiedDate":"2022-03-24"},{"lineNumber":25,"author":{"gitId":"jaegarpoon"},"content":"[\u003c--MainWindow","lastModifiedDate":"2022-03-24"},{"lineNumber":26,"author":{"gitId":"jaegarpoon"},"content":"deactivate MainWindow","lastModifiedDate":"2022-03-24"},{"lineNumber":27,"author":{"gitId":"jaegarpoon"},"content":"@enduml","lastModifiedDate":"2022-03-24"}],"authorContributionMap":{"jaegarpoon":27}},{"path":"docs/diagrams/UiClassDiagram.puml","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"@startuml","lastModifiedDate":"2019-07-03"},{"lineNumber":2,"author":{"gitId":"-"},"content":"!include style.puml","lastModifiedDate":"2019-07-03"},{"lineNumber":3,"author":{"gitId":"-"},"content":"skinparam arrowThickness 1.1","lastModifiedDate":"2019-07-03"},{"lineNumber":4,"author":{"gitId":"-"},"content":"skinparam arrowColor UI_COLOR_T4","lastModifiedDate":"2019-07-03"},{"lineNumber":5,"author":{"gitId":"-"},"content":"skinparam classBackgroundColor UI_COLOR","lastModifiedDate":"2019-07-03"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":7,"author":{"gitId":"-"},"content":"package UI \u003c\u003cRectangle\u003e\u003e{","lastModifiedDate":"2019-07-03"},{"lineNumber":8,"author":{"gitId":"-"},"content":"Class \"\u003c\u003cinterface\u003e\u003e\\nUi\" as Ui","lastModifiedDate":"2022-01-03"},{"lineNumber":9,"author":{"gitId":"-"},"content":"Class \"{abstract}\\nUiPart\" as UiPart","lastModifiedDate":"2019-07-03"},{"lineNumber":10,"author":{"gitId":"-"},"content":"Class UiManager","lastModifiedDate":"2019-07-03"},{"lineNumber":11,"author":{"gitId":"-"},"content":"Class MainWindow","lastModifiedDate":"2019-07-03"},{"lineNumber":12,"author":{"gitId":"-"},"content":"Class HelpWindow","lastModifiedDate":"2019-07-03"},{"lineNumber":13,"author":{"gitId":"-"},"content":"Class ResultDisplay","lastModifiedDate":"2019-07-03"},{"lineNumber":14,"author":{"gitId":"jaegarpoon"},"content":"Class ListPanel","lastModifiedDate":"2022-03-24"},{"lineNumber":15,"author":{"gitId":"jaegarpoon"},"content":"Class DishListPanel","lastModifiedDate":"2022-03-24"},{"lineNumber":16,"author":{"gitId":"jaegarpoon"},"content":"Class DishCard","lastModifiedDate":"2022-03-24"},{"lineNumber":17,"author":{"gitId":"jaegarpoon"},"content":"Class DriverListPanel","lastModifiedDate":"2022-03-24"},{"lineNumber":18,"author":{"gitId":"jaegarpoon"},"content":"Class DriverCard","lastModifiedDate":"2022-03-24"},{"lineNumber":19,"author":{"gitId":"jaegarpoon"},"content":"Class OrderListPanel","lastModifiedDate":"2022-03-24"},{"lineNumber":20,"author":{"gitId":"jaegarpoon"},"content":"Class OrderCard","lastModifiedDate":"2022-03-24"},{"lineNumber":21,"author":{"gitId":"jaegarpoon"},"content":"Class CustomerListPanel","lastModifiedDate":"2022-03-24"},{"lineNumber":22,"author":{"gitId":"jaegarpoon"},"content":"Class CustomerCard","lastModifiedDate":"2022-03-24"},{"lineNumber":23,"author":{"gitId":"-"},"content":"Class StatusBarFooter","lastModifiedDate":"2019-07-03"},{"lineNumber":24,"author":{"gitId":"-"},"content":"Class CommandBox","lastModifiedDate":"2019-07-03"},{"lineNumber":25,"author":{"gitId":"jaegarpoon"},"content":"Class TabDisplay","lastModifiedDate":"2022-03-24"},{"lineNumber":26,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2019-07-03"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":28,"author":{"gitId":"-"},"content":"package Model \u003c\u003cRectangle\u003e\u003e {","lastModifiedDate":"2019-07-03"},{"lineNumber":29,"author":{"gitId":"-"},"content":"Class HiddenModel #FFFFFF","lastModifiedDate":"2019-07-03"},{"lineNumber":30,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2019-07-03"},{"lineNumber":31,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":32,"author":{"gitId":"-"},"content":"package Logic \u003c\u003cRectangle\u003e\u003e {","lastModifiedDate":"2019-07-03"},{"lineNumber":33,"author":{"gitId":"-"},"content":"Class HiddenLogic #FFFFFF","lastModifiedDate":"2019-07-03"},{"lineNumber":34,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2019-07-03"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":36,"author":{"gitId":"-"},"content":"Class HiddenOutside #FFFFFF","lastModifiedDate":"2019-07-03"},{"lineNumber":37,"author":{"gitId":"-"},"content":"HiddenOutside ..\u003e Ui","lastModifiedDate":"2019-07-03"},{"lineNumber":38,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":39,"author":{"gitId":"-"},"content":"UiManager .left.|\u003e Ui","lastModifiedDate":"2019-07-03"},{"lineNumber":40,"author":{"gitId":"-"},"content":"UiManager -down-\u003e \"1\" MainWindow","lastModifiedDate":"2021-07-31"},{"lineNumber":41,"author":{"gitId":"-"},"content":"MainWindow *-down-\u003e  \"1\" CommandBox","lastModifiedDate":"2021-07-31"},{"lineNumber":42,"author":{"gitId":"-"},"content":"MainWindow *-down-\u003e \"1\" ResultDisplay","lastModifiedDate":"2021-07-31"},{"lineNumber":43,"author":{"gitId":"jaegarpoon"},"content":"MainWindow *-down-\u003e \"1\" ListPanel","lastModifiedDate":"2022-03-24"},{"lineNumber":44,"author":{"gitId":"-"},"content":"MainWindow *-down-\u003e \"1\" StatusBarFooter","lastModifiedDate":"2021-07-31"},{"lineNumber":45,"author":{"gitId":"jaegarpoon"},"content":"MainWindow *-down-\u003e \"1\" TabDisplay","lastModifiedDate":"2022-03-24"},{"lineNumber":46,"author":{"gitId":"-"},"content":"MainWindow --\u003e \"0..1\" HelpWindow","lastModifiedDate":"2021-07-31"},{"lineNumber":47,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":48,"author":{"gitId":"jaegarpoon"},"content":"DishListPanel -down-\u003e \"*\" DishCard","lastModifiedDate":"2022-03-24"},{"lineNumber":49,"author":{"gitId":"jaegarpoon"},"content":"OrderListPanel -down-\u003e \"*\" OrderCard","lastModifiedDate":"2022-03-24"},{"lineNumber":50,"author":{"gitId":"jaegarpoon"},"content":"CustomerListPanel -down-\u003e \"*\" CustomerCard","lastModifiedDate":"2022-03-24"},{"lineNumber":51,"author":{"gitId":"jaegarpoon"},"content":"DriverListPanel -down-\u003e \"*\" DriverCard","lastModifiedDate":"2022-03-24"},{"lineNumber":52,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":53,"author":{"gitId":"-"},"content":"MainWindow -left-|\u003e UiPart","lastModifiedDate":"2019-07-03"},{"lineNumber":54,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":55,"author":{"gitId":"-"},"content":"ResultDisplay --|\u003e UiPart","lastModifiedDate":"2019-07-03"},{"lineNumber":56,"author":{"gitId":"jaegarpoon"},"content":"TabDisplay --|\u003e UiPart","lastModifiedDate":"2022-03-24"},{"lineNumber":57,"author":{"gitId":"-"},"content":"CommandBox --|\u003e UiPart","lastModifiedDate":"2019-07-03"},{"lineNumber":58,"author":{"gitId":"jaegarpoon"},"content":"DishListPanel -up-|\u003e ListPanel","lastModifiedDate":"2022-03-24"},{"lineNumber":59,"author":{"gitId":"jaegarpoon"},"content":"DishCard --|\u003e UiPart","lastModifiedDate":"2022-03-24"},{"lineNumber":60,"author":{"gitId":"jaegarpoon"},"content":"OrderListPanel -up-|\u003e ListPanel","lastModifiedDate":"2022-03-24"},{"lineNumber":61,"author":{"gitId":"jaegarpoon"},"content":"OrderCard --|\u003e UiPart","lastModifiedDate":"2022-03-24"},{"lineNumber":62,"author":{"gitId":"jaegarpoon"},"content":"DriverListPanel -up-|\u003e ListPanel","lastModifiedDate":"2022-03-24"},{"lineNumber":63,"author":{"gitId":"jaegarpoon"},"content":"DriverCard --|\u003e UiPart","lastModifiedDate":"2022-03-24"},{"lineNumber":64,"author":{"gitId":"jaegarpoon"},"content":"CustomerListPanel -up-|\u003e ListPanel","lastModifiedDate":"2022-03-24"},{"lineNumber":65,"author":{"gitId":"jaegarpoon"},"content":"CustomerCard --|\u003e UiPart","lastModifiedDate":"2022-03-24"},{"lineNumber":66,"author":{"gitId":"-"},"content":"StatusBarFooter --|\u003e UiPart","lastModifiedDate":"2019-07-03"},{"lineNumber":67,"author":{"gitId":"-"},"content":"HelpWindow --|\u003e UiPart","lastModifiedDate":"2021-07-31"},{"lineNumber":68,"author":{"gitId":"jaegarpoon"},"content":"ListPanel --|\u003e UiPart","lastModifiedDate":"2022-03-24"},{"lineNumber":69,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":70,"author":{"gitId":"jaegarpoon"},"content":"DishCard ..\u003e Model","lastModifiedDate":"2022-03-24"},{"lineNumber":71,"author":{"gitId":"jaegarpoon"},"content":"OrderCard ..\u003e Model","lastModifiedDate":"2022-03-24"},{"lineNumber":72,"author":{"gitId":"jaegarpoon"},"content":"CustomerCard ..\u003e Model","lastModifiedDate":"2022-03-24"},{"lineNumber":73,"author":{"gitId":"jaegarpoon"},"content":"DriverCard ..\u003e Model","lastModifiedDate":"2022-03-24"},{"lineNumber":74,"author":{"gitId":"-"},"content":"UiManager -right-\u003e Logic","lastModifiedDate":"2019-07-03"},{"lineNumber":75,"author":{"gitId":"-"},"content":"MainWindow -left-\u003e Logic","lastModifiedDate":"2019-07-03"},{"lineNumber":76,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":77,"author":{"gitId":"jaegarpoon"},"content":"DishListPanel -[hidden]left- HelpWindow","lastModifiedDate":"2022-03-24"},{"lineNumber":78,"author":{"gitId":"-"},"content":"HelpWindow -[hidden]left- CommandBox","lastModifiedDate":"2019-07-03"},{"lineNumber":79,"author":{"gitId":"-"},"content":"CommandBox -[hidden]left- ResultDisplay","lastModifiedDate":"2019-07-03"},{"lineNumber":80,"author":{"gitId":"-"},"content":"ResultDisplay -[hidden]left- StatusBarFooter","lastModifiedDate":"2019-07-30"},{"lineNumber":81,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":82,"author":{"gitId":"-"},"content":"MainWindow -[hidden]-|\u003e UiPart","lastModifiedDate":"2019-07-03"},{"lineNumber":83,"author":{"gitId":"-"},"content":"@enduml","lastModifiedDate":"2019-07-03"}],"authorContributionMap":{"jaegarpoon":31,"-":52}},{"path":"docs/index.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"---","lastModifiedDate":"2020-05-23"},{"lineNumber":2,"author":{"gitId":"-"},"content":"layout: page","lastModifiedDate":"2020-05-23"},{"lineNumber":3,"author":{"gitId":"zxgoh"},"content":"title: FoodOnWheels","lastModifiedDate":"2022-02-25"},{"lineNumber":4,"author":{"gitId":"-"},"content":"---","lastModifiedDate":"2020-05-23"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":6,"author":{"gitId":"-"},"content":"[![CI Status](https://github.com/se-edu/addressbook-level3/workflows/Java%20CI/badge.svg)](https://github.com/se-edu/addressbook-level3/actions)","lastModifiedDate":"2020-05-23"},{"lineNumber":7,"author":{"gitId":"-"},"content":"[![codecov](https://codecov.io/gh/se-edu/addressbook-level3/branch/master/graph/badge.svg)](https://codecov.io/gh/se-edu/addressbook-level3)","lastModifiedDate":"2020-08-07"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":9,"author":{"gitId":"zxgoh"},"content":"![Ui](images/FoodOnWheels.png)","lastModifiedDate":"2022-02-25"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":11,"author":{"gitId":"zxgoh"},"content":"**FoodOnWheels is a desktop application for managing your contact details.** While it has a GUI, most of the user interactions happen using a CLI (Command Line Interface).","lastModifiedDate":"2022-02-25"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":13,"author":{"gitId":"-"},"content":"* If you are interested in using AddressBook, head over to the [_Quick Start_ section of the **User Guide**](UserGuide.html#quick-start).","lastModifiedDate":"2020-05-23"},{"lineNumber":14,"author":{"gitId":"-"},"content":"* If you are interested about developing AddressBook, the [**Developer Guide**](DeveloperGuide.html) is a good place to start.","lastModifiedDate":"2020-05-23"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":17,"author":{"gitId":"-"},"content":"**Acknowledgements**","lastModifiedDate":"2020-05-23"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":19,"author":{"gitId":"-"},"content":"* Libraries used: [JavaFX](https://openjfx.io/), [Jackson](https://github.com/FasterXML/jackson), [JUnit5](https://github.com/junit-team/junit5)","lastModifiedDate":"2020-05-23"}],"authorContributionMap":{"-":16,"zxgoh":3}},{"path":"docs/team/hieunm1821.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"hieunm1821"},"content":"---","lastModifiedDate":"2022-02-26"},{"lineNumber":2,"author":{"gitId":"hieunm1821"},"content":"layout: page","lastModifiedDate":"2022-02-26"},{"lineNumber":3,"author":{"gitId":"hieunm1821"},"content":"title: Nguyen Minh Hieu\u0027s Project Portfolio Page","lastModifiedDate":"2022-02-26"},{"lineNumber":4,"author":{"gitId":"hieunm1821"},"content":"---","lastModifiedDate":"2022-02-26"},{"lineNumber":5,"author":{"gitId":"hieunm1821"},"content":"","lastModifiedDate":"2022-02-26"},{"lineNumber":6,"author":{"gitId":"hieunm1821"},"content":"### Project: FoodOnWheels","lastModifiedDate":"2022-02-26"},{"lineNumber":7,"author":{"gitId":"hieunm1821"},"content":"","lastModifiedDate":"2022-02-26"},{"lineNumber":8,"author":{"gitId":"hieunm1821"},"content":"FoodOnWheels is a desktop application used to delivery orders for a restaurant by tracking and providing updates of the status of delivery orders. The user interacts with it using a CLI, and it has a GUI created with JavaFX. It is written in Java, and has about xxx kLoC.","lastModifiedDate":"2022-02-26"},{"lineNumber":9,"author":{"gitId":"hieunm1821"},"content":"","lastModifiedDate":"2022-02-26"},{"lineNumber":10,"author":{"gitId":"hieunm1821"},"content":"Given below are my contributions to the project.","lastModifiedDate":"2022-02-26"},{"lineNumber":11,"author":{"gitId":"hieunm1821"},"content":"","lastModifiedDate":"2022-02-26"},{"lineNumber":12,"author":{"gitId":"hieunm1821"},"content":"* **New Feature**:","lastModifiedDate":"2022-02-26"},{"lineNumber":13,"author":{"gitId":"hieunm1821"},"content":"","lastModifiedDate":"2022-02-26"},{"lineNumber":14,"author":{"gitId":"hieunm1821"},"content":"","lastModifiedDate":"2022-02-26"},{"lineNumber":15,"author":{"gitId":"hieunm1821"},"content":"* **Code contributed**: [RepoSense link](https://nus-cs2103-ay2122s2.github.io/tp-dashboard/?search\u003dhieunm1821\u0026breakdown\u003dtrue)","lastModifiedDate":"2022-02-26"},{"lineNumber":16,"author":{"gitId":"hieunm1821"},"content":"","lastModifiedDate":"2022-02-26"},{"lineNumber":17,"author":{"gitId":"hieunm1821"},"content":"","lastModifiedDate":"2022-02-26"},{"lineNumber":18,"author":{"gitId":"hieunm1821"},"content":"* **Project management**:","lastModifiedDate":"2022-02-26"},{"lineNumber":19,"author":{"gitId":"hieunm1821"},"content":"","lastModifiedDate":"2022-02-26"},{"lineNumber":20,"author":{"gitId":"hieunm1821"},"content":"* **Enhancements to existing features**:","lastModifiedDate":"2022-02-26"},{"lineNumber":21,"author":{"gitId":"hieunm1821"},"content":"","lastModifiedDate":"2022-02-26"},{"lineNumber":22,"author":{"gitId":"hieunm1821"},"content":"","lastModifiedDate":"2022-02-26"},{"lineNumber":23,"author":{"gitId":"hieunm1821"},"content":"* **Documentation**:","lastModifiedDate":"2022-02-26"},{"lineNumber":24,"author":{"gitId":"hieunm1821"},"content":"  * User Guide:","lastModifiedDate":"2022-02-26"},{"lineNumber":25,"author":{"gitId":"hieunm1821"},"content":"    * Documentation on Driver-related Features","lastModifiedDate":"2022-02-26"},{"lineNumber":26,"author":{"gitId":"hieunm1821"},"content":"","lastModifiedDate":"2022-02-26"},{"lineNumber":27,"author":{"gitId":"hieunm1821"},"content":"  * Developer Guide:","lastModifiedDate":"2022-02-26"},{"lineNumber":28,"author":{"gitId":"hieunm1821"},"content":"","lastModifiedDate":"2022-02-26"},{"lineNumber":29,"author":{"gitId":"hieunm1821"},"content":"","lastModifiedDate":"2022-02-26"},{"lineNumber":30,"author":{"gitId":"hieunm1821"},"content":"* **Community**:","lastModifiedDate":"2022-02-26"},{"lineNumber":31,"author":{"gitId":"hieunm1821"},"content":"","lastModifiedDate":"2022-02-26"},{"lineNumber":32,"author":{"gitId":"hieunm1821"},"content":"","lastModifiedDate":"2022-02-26"},{"lineNumber":33,"author":{"gitId":"hieunm1821"},"content":"* **Tools**:","lastModifiedDate":"2022-02-26"},{"lineNumber":34,"author":{"gitId":"hieunm1821"},"content":"","lastModifiedDate":"2022-02-26"},{"lineNumber":35,"author":{"gitId":"hieunm1821"},"content":"","lastModifiedDate":"2022-02-26"}],"authorContributionMap":{"hieunm1821":35}},{"path":"docs/team/jaegarpoon.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"jaegarpoon"},"content":"---","lastModifiedDate":"2022-02-24"},{"lineNumber":2,"author":{"gitId":"jaegarpoon"},"content":"layout: page","lastModifiedDate":"2022-02-24"},{"lineNumber":3,"author":{"gitId":"jaegarpoon"},"content":"title: Jaegar\u0027s Project Portfolio Page","lastModifiedDate":"2022-02-24"},{"lineNumber":4,"author":{"gitId":"jaegarpoon"},"content":"---","lastModifiedDate":"2022-02-24"},{"lineNumber":5,"author":{"gitId":"jaegarpoon"},"content":"","lastModifiedDate":"2022-02-24"},{"lineNumber":6,"author":{"gitId":"jaegarpoon"},"content":"### Project: FoodOnWheels","lastModifiedDate":"2022-02-24"},{"lineNumber":7,"author":{"gitId":"jaegarpoon"},"content":"","lastModifiedDate":"2022-02-24"},{"lineNumber":8,"author":{"gitId":"jaegarpoon"},"content":"FoodOnWheels is a desktop application used to delivery orders for a restaurant by tracking and providing updates of the status of delivery orders. The user interacts with it using a CLI, and it has a GUI created with JavaFX. It is written in Java, and has about xxx kLoC.","lastModifiedDate":"2022-02-24"},{"lineNumber":9,"author":{"gitId":"jaegarpoon"},"content":"","lastModifiedDate":"2022-02-24"},{"lineNumber":10,"author":{"gitId":"jaegarpoon"},"content":"Given below are my contributions to the project.","lastModifiedDate":"2022-02-24"},{"lineNumber":11,"author":{"gitId":"jaegarpoon"},"content":"","lastModifiedDate":"2022-02-24"},{"lineNumber":12,"author":{"gitId":"jaegarpoon"},"content":"* **New Feature**: to be added soon","lastModifiedDate":"2022-02-24"},{"lineNumber":13,"author":{"gitId":"jaegarpoon"},"content":"  ","lastModifiedDate":"2022-02-24"},{"lineNumber":14,"author":{"gitId":"jaegarpoon"},"content":"* **Documentation**: to be added soon","lastModifiedDate":"2022-02-24"},{"lineNumber":15,"author":{"gitId":"jaegarpoon"},"content":"","lastModifiedDate":"2022-02-24"},{"lineNumber":16,"author":{"gitId":"jaegarpoon"},"content":"","lastModifiedDate":"2022-02-24"},{"lineNumber":17,"author":{"gitId":"jaegarpoon"},"content":"","lastModifiedDate":"2022-02-24"}],"authorContributionMap":{"jaegarpoon":17}},{"path":"docs/team/xzzz3.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"xzzz3"},"content":"---","lastModifiedDate":"2022-02-24"},{"lineNumber":2,"author":{"gitId":"xzzz3"},"content":"layout: page","lastModifiedDate":"2022-02-24"},{"lineNumber":3,"author":{"gitId":"xzzz3"},"content":"title: Xing Zheng\u0027s Project Portfolio Page","lastModifiedDate":"2022-02-24"},{"lineNumber":4,"author":{"gitId":"xzzz3"},"content":"---","lastModifiedDate":"2022-02-24"},{"lineNumber":5,"author":{"gitId":"xzzz3"},"content":"","lastModifiedDate":"2022-02-24"},{"lineNumber":6,"author":{"gitId":"xzzz3"},"content":"### Project: FoodOnWheels","lastModifiedDate":"2022-02-24"},{"lineNumber":7,"author":{"gitId":"xzzz3"},"content":"","lastModifiedDate":"2022-02-24"},{"lineNumber":8,"author":{"gitId":"xzzz3"},"content":"FoodOnWheels is a desktop application used to delivery orders for a restaurant by tracking and providing updates of the status of delivery orders. The user interacts with it using a CLI, and it has a GUI created with JavaFX. It is written in Java, and has about xxx kLoC.","lastModifiedDate":"2022-02-24"},{"lineNumber":9,"author":{"gitId":"xzzz3"},"content":"","lastModifiedDate":"2022-02-24"},{"lineNumber":10,"author":{"gitId":"xzzz3"},"content":"Given below are my contributions to the project.","lastModifiedDate":"2022-02-24"},{"lineNumber":11,"author":{"gitId":"xzzz3"},"content":"","lastModifiedDate":"2022-02-24"},{"lineNumber":12,"author":{"gitId":"xzzz3"},"content":"* **New Feature**: ","lastModifiedDate":"2022-02-24"},{"lineNumber":13,"author":{"gitId":"xzzz3"},"content":"  ","lastModifiedDate":"2022-02-24"},{"lineNumber":14,"author":{"gitId":"xzzz3"},"content":"","lastModifiedDate":"2022-02-24"},{"lineNumber":15,"author":{"gitId":"xzzz3"},"content":"* **Code contributed**: [RepoSense link](https://nus-cs2103-ay2122s2.github.io/tp-dashboard/?search\u003dxzzz3\u0026breakdown\u003dtrue)","lastModifiedDate":"2022-02-24"},{"lineNumber":16,"author":{"gitId":"xzzz3"},"content":"","lastModifiedDate":"2022-02-24"},{"lineNumber":17,"author":{"gitId":"xzzz3"},"content":"","lastModifiedDate":"2022-02-24"},{"lineNumber":18,"author":{"gitId":"xzzz3"},"content":"* **Project management**:","lastModifiedDate":"2022-02-24"},{"lineNumber":19,"author":{"gitId":"xzzz3"},"content":"  * Setting up GitHub team organization and managing the Repository","lastModifiedDate":"2022-02-24"},{"lineNumber":20,"author":{"gitId":"xzzz3"},"content":"  * Maintaining issue trackers and milestones","lastModifiedDate":"2022-02-24"},{"lineNumber":21,"author":{"gitId":"xzzz3"},"content":"  * Release Management  ","lastModifiedDate":"2022-02-24"},{"lineNumber":22,"author":{"gitId":"xzzz3"},"content":"    ","lastModifiedDate":"2022-02-24"},{"lineNumber":23,"author":{"gitId":"xzzz3"},"content":"","lastModifiedDate":"2022-02-24"},{"lineNumber":24,"author":{"gitId":"xzzz3"},"content":"* **Enhancements to existing features**:","lastModifiedDate":"2022-02-24"},{"lineNumber":25,"author":{"gitId":"xzzz3"},"content":"  ","lastModifiedDate":"2022-02-24"},{"lineNumber":26,"author":{"gitId":"xzzz3"},"content":"","lastModifiedDate":"2022-02-24"},{"lineNumber":27,"author":{"gitId":"xzzz3"},"content":"* **Documentation**:","lastModifiedDate":"2022-02-24"},{"lineNumber":28,"author":{"gitId":"xzzz3"},"content":"  * User Guide:","lastModifiedDate":"2022-02-24"},{"lineNumber":29,"author":{"gitId":"xzzz3"},"content":"      * Documentation on Order-related Features","lastModifiedDate":"2022-02-24"},{"lineNumber":30,"author":{"gitId":"xzzz3"},"content":"    ","lastModifiedDate":"2022-02-24"},{"lineNumber":31,"author":{"gitId":"xzzz3"},"content":"  * Developer Guide:","lastModifiedDate":"2022-02-24"},{"lineNumber":32,"author":{"gitId":"xzzz3"},"content":"","lastModifiedDate":"2022-02-24"},{"lineNumber":33,"author":{"gitId":"xzzz3"},"content":"","lastModifiedDate":"2022-02-24"},{"lineNumber":34,"author":{"gitId":"xzzz3"},"content":"* **Community**:","lastModifiedDate":"2022-02-24"},{"lineNumber":35,"author":{"gitId":"xzzz3"},"content":"  ","lastModifiedDate":"2022-02-24"},{"lineNumber":36,"author":{"gitId":"xzzz3"},"content":"","lastModifiedDate":"2022-02-24"},{"lineNumber":37,"author":{"gitId":"xzzz3"},"content":"* **Tools**:","lastModifiedDate":"2022-02-24"},{"lineNumber":38,"author":{"gitId":"xzzz3"},"content":"","lastModifiedDate":"2022-02-24"},{"lineNumber":39,"author":{"gitId":"xzzz3"},"content":"","lastModifiedDate":"2022-02-24"}],"authorContributionMap":{"xzzz3":39}},{"path":"docs/team/zxgoh.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"zxgoh"},"content":"---","lastModifiedDate":"2022-02-23"},{"lineNumber":2,"author":{"gitId":"zxgoh"},"content":"layout: page","lastModifiedDate":"2022-02-23"},{"lineNumber":3,"author":{"gitId":"zxgoh"},"content":"title: Goh Zi Xuan\u0027s Project Portfolio Page","lastModifiedDate":"2022-02-23"},{"lineNumber":4,"author":{"gitId":"zxgoh"},"content":"---","lastModifiedDate":"2022-02-23"},{"lineNumber":5,"author":{"gitId":"zxgoh"},"content":"","lastModifiedDate":"2022-02-23"},{"lineNumber":6,"author":{"gitId":"zxgoh"},"content":"### Project: FoodOnWheels","lastModifiedDate":"2022-02-23"},{"lineNumber":7,"author":{"gitId":"zxgoh"},"content":"","lastModifiedDate":"2022-02-23"},{"lineNumber":8,"author":{"gitId":"zxgoh"},"content":"FoodOnWheels is a desktop application used to delivery orders for a restaurant by tracking and providing updates of the status of delivery orders. The user interacts with it using a CLI, and it has a GUI created with JavaFX. It is written in Java, and has about xxx kLoC.","lastModifiedDate":"2022-02-23"},{"lineNumber":9,"author":{"gitId":"zxgoh"},"content":"","lastModifiedDate":"2022-02-23"},{"lineNumber":10,"author":{"gitId":"zxgoh"},"content":"Given below are my contributions to the project.","lastModifiedDate":"2022-02-23"},{"lineNumber":11,"author":{"gitId":"zxgoh"},"content":"","lastModifiedDate":"2022-02-23"},{"lineNumber":12,"author":{"gitId":"zxgoh"},"content":"* **New Feature**:","lastModifiedDate":"2022-02-23"},{"lineNumber":13,"author":{"gitId":"zxgoh"},"content":"  ","lastModifiedDate":"2022-02-23"},{"lineNumber":14,"author":{"gitId":"zxgoh"},"content":"* **Code contributed**: [RepoSense link](https://github.com/AY2122S2-CS2103-F10-2/tp)","lastModifiedDate":"2022-02-23"},{"lineNumber":15,"author":{"gitId":"zxgoh"},"content":"","lastModifiedDate":"2022-02-23"},{"lineNumber":16,"author":{"gitId":"zxgoh"},"content":"* **Project management**:","lastModifiedDate":"2022-02-23"},{"lineNumber":17,"author":{"gitId":"zxgoh"},"content":"  * Managed releases ","lastModifiedDate":"2022-02-23"},{"lineNumber":18,"author":{"gitId":"zxgoh"},"content":"","lastModifiedDate":"2022-02-23"},{"lineNumber":19,"author":{"gitId":"zxgoh"},"content":"* **Enhancements to existing features**:","lastModifiedDate":"2022-02-23"},{"lineNumber":20,"author":{"gitId":"zxgoh"},"content":"","lastModifiedDate":"2022-02-23"},{"lineNumber":21,"author":{"gitId":"zxgoh"},"content":"","lastModifiedDate":"2022-02-23"},{"lineNumber":22,"author":{"gitId":"zxgoh"},"content":"* **Documentation**:","lastModifiedDate":"2022-02-23"},{"lineNumber":23,"author":{"gitId":"zxgoh"},"content":"  * User Guide:","lastModifiedDate":"2022-02-23"},{"lineNumber":24,"author":{"gitId":"zxgoh"},"content":"","lastModifiedDate":"2022-02-23"},{"lineNumber":25,"author":{"gitId":"zxgoh"},"content":"  * Developer Guide:","lastModifiedDate":"2022-02-23"},{"lineNumber":26,"author":{"gitId":"zxgoh"},"content":"","lastModifiedDate":"2022-02-23"},{"lineNumber":27,"author":{"gitId":"zxgoh"},"content":"  * Developer Guide:","lastModifiedDate":"2022-02-23"},{"lineNumber":28,"author":{"gitId":"zxgoh"},"content":"    * Created a mockup of the user interface using Figma ","lastModifiedDate":"2022-02-23"},{"lineNumber":29,"author":{"gitId":"zxgoh"},"content":"","lastModifiedDate":"2022-02-23"},{"lineNumber":30,"author":{"gitId":"zxgoh"},"content":"","lastModifiedDate":"2022-02-23"},{"lineNumber":31,"author":{"gitId":"zxgoh"},"content":"","lastModifiedDate":"2022-02-23"},{"lineNumber":32,"author":{"gitId":"zxgoh"},"content":"* **Community**:","lastModifiedDate":"2022-02-23"},{"lineNumber":33,"author":{"gitId":"zxgoh"},"content":"","lastModifiedDate":"2022-02-23"},{"lineNumber":34,"author":{"gitId":"zxgoh"},"content":"","lastModifiedDate":"2022-02-23"},{"lineNumber":35,"author":{"gitId":"zxgoh"},"content":"* **Tools**:","lastModifiedDate":"2022-02-23"},{"lineNumber":36,"author":{"gitId":"zxgoh"},"content":"","lastModifiedDate":"2022-02-23"},{"lineNumber":37,"author":{"gitId":"zxgoh"},"content":"","lastModifiedDate":"2022-02-23"},{"lineNumber":38,"author":{"gitId":"zxgoh"},"content":"* _{you can add/remove categories in the list above}_","lastModifiedDate":"2022-02-23"}],"authorContributionMap":{"zxgoh":38}},{"path":"docs/tutorials/AddRemark.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"---","lastModifiedDate":"2020-07-29"},{"lineNumber":2,"author":{"gitId":"-"},"content":"layout: page","lastModifiedDate":"2020-07-29"},{"lineNumber":3,"author":{"gitId":"-"},"content":"title: \"Tutorial: Adding a command\"","lastModifiedDate":"2020-07-29"},{"lineNumber":4,"author":{"gitId":"-"},"content":"---","lastModifiedDate":"2020-07-29"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":6,"author":{"gitId":"-"},"content":"Let\u0027s walk you through the implementation of a new command — `remark`.","lastModifiedDate":"2020-07-29"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":8,"author":{"gitId":"-"},"content":"This command allows users of the AddressBook application to add optional remarks to people in their address book and edit it if required. The command should have the following format:","lastModifiedDate":"2020-07-29"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":10,"author":{"gitId":"-"},"content":"`remark INDEX r/REMARK` (e.g., `remark 2 r/Likes baseball`)","lastModifiedDate":"2020-07-29"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":12,"author":{"gitId":"-"},"content":"We’ll assume that you have already set up the development environment as outlined in the Developer’s Guide.","lastModifiedDate":"2020-07-29"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":15,"author":{"gitId":"-"},"content":"## Create a new `remark` command","lastModifiedDate":"2020-07-29"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":17,"author":{"gitId":"-"},"content":"Looking in the `logic.command` package, you will notice that each existing command have their own class. All the commands inherit from the abstract class `Command` which means that they must override `execute()`. Each `Command` returns an instance of `CommandResult` upon success and `CommandResult#feedbackToUser` is printed to the `ResultDisplay`.","lastModifiedDate":"2020-07-29"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":19,"author":{"gitId":"-"},"content":"Let’s start by creating a new `RemarkCommand` class in the `src/main/java/seedu/address/logic/command` directory.","lastModifiedDate":"2020-07-29"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":21,"author":{"gitId":"-"},"content":"For now, let’s keep `RemarkCommand` as simple as possible and print some output. We accomplish that by returning a `CommandResult` with an accompanying message.","lastModifiedDate":"2020-07-29"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":23,"author":{"gitId":"-"},"content":"**`RemarkCommand.java`:**","lastModifiedDate":"2020-07-29"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":25,"author":{"gitId":"-"},"content":"``` java","lastModifiedDate":"2020-07-29"},{"lineNumber":26,"author":{"gitId":"-"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2020-07-29"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":28,"author":{"gitId":"-"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2020-07-29"},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":30,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2020-07-29"},{"lineNumber":31,"author":{"gitId":"-"},"content":" * Changes the remark of an existing person in the address book.","lastModifiedDate":"2020-07-29"},{"lineNumber":32,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2020-07-29"},{"lineNumber":33,"author":{"gitId":"-"},"content":"public class RemarkCommand extends Command {","lastModifiedDate":"2020-07-29"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    public static final String COMMAND_WORD \u003d \"remark\";","lastModifiedDate":"2020-07-29"},{"lineNumber":36,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2020-07-29"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    public CommandResult execute(Model model) {","lastModifiedDate":"2020-07-29"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        return new CommandResult(\"Hello from remark\");","lastModifiedDate":"2020-07-29"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2020-07-29"},{"lineNumber":41,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-07-29"},{"lineNumber":42,"author":{"gitId":"-"},"content":"```","lastModifiedDate":"2020-07-29"},{"lineNumber":43,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":44,"author":{"gitId":"-"},"content":"### Hook `RemarkCommand` into the application","lastModifiedDate":"2020-07-29"},{"lineNumber":45,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":46,"author":{"gitId":"-"},"content":"Now that we have our `RemarkCommand` ready to be executed, we need to update `AddressBookParser#parseCommand()` to recognize the `remark` keyword. Add the new command to the `switch` block by creating a new `case` that returns a new instance of `RemarkCommand`.","lastModifiedDate":"2020-07-29"},{"lineNumber":47,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":48,"author":{"gitId":"-"},"content":"You can refer to the changes in this [diff](https://github.com/se-edu/addressbook-level3/commit/35eb7286f18a029d39cb7a29df8f172a001e4fd8#diff-399c284cb892c20b7c04a69116fcff6ccc0666c5230a1db8e4a9145def8fa4ee).","lastModifiedDate":"2022-01-02"},{"lineNumber":49,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":50,"author":{"gitId":"-"},"content":"### Run the application","lastModifiedDate":"2020-07-29"},{"lineNumber":51,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":52,"author":{"gitId":"-"},"content":"Run `Main#main` and try out your new `RemarkCommand`. If everything went well, you should see something like this:","lastModifiedDate":"2020-07-29"},{"lineNumber":53,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":54,"author":{"gitId":"-"},"content":"![Output displayed](../images/add-remark/RemarkHello.png)","lastModifiedDate":"2020-07-29"},{"lineNumber":55,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":56,"author":{"gitId":"-"},"content":"## Change `RemarkCommand` to throw an exception","lastModifiedDate":"2020-07-29"},{"lineNumber":57,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":58,"author":{"gitId":"-"},"content":"While we have successfully printed a message to `ResultDisplay`, the command does not do what it is supposed to do. Let’s change the command to throw a `CommandException` to accurately reflect that our command is still a work in progress.","lastModifiedDate":"2020-12-12"},{"lineNumber":59,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":60,"author":{"gitId":"-"},"content":"![The relationship between RemarkCommand and Command](../images/add-remark/CommandInterface.png)","lastModifiedDate":"2020-07-29"},{"lineNumber":61,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":62,"author":{"gitId":"-"},"content":"Following the convention in other commands, we add relevant messages as constants and use them.","lastModifiedDate":"2020-07-29"},{"lineNumber":63,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":64,"author":{"gitId":"-"},"content":"**`RemarkCommand.java`:**","lastModifiedDate":"2020-07-29"},{"lineNumber":65,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":66,"author":{"gitId":"-"},"content":"``` java","lastModifiedDate":"2020-07-29"},{"lineNumber":67,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_USAGE \u003d COMMAND_WORD","lastModifiedDate":"2021-08-01"},{"lineNumber":68,"author":{"gitId":"-"},"content":"            + \": Edits the remark of the person identified \"","lastModifiedDate":"2021-08-01"},{"lineNumber":69,"author":{"gitId":"-"},"content":"            + \"by the index number used in the last person listing. \"","lastModifiedDate":"2020-07-29"},{"lineNumber":70,"author":{"gitId":"-"},"content":"            + \"Existing remark will be overwritten by the input.\\n\"","lastModifiedDate":"2020-07-29"},{"lineNumber":71,"author":{"gitId":"-"},"content":"            + \"Parameters: INDEX (must be a positive integer) \"","lastModifiedDate":"2020-07-29"},{"lineNumber":72,"author":{"gitId":"-"},"content":"            + \"r/ [REMARK]\\n\"","lastModifiedDate":"2020-07-29"},{"lineNumber":73,"author":{"gitId":"-"},"content":"            + \"Example: \" + COMMAND_WORD + \" 1 \"","lastModifiedDate":"2020-07-29"},{"lineNumber":74,"author":{"gitId":"-"},"content":"            + \"r/ Likes to swim.\";","lastModifiedDate":"2020-07-29"},{"lineNumber":75,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":76,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_NOT_IMPLEMENTED_YET \u003d","lastModifiedDate":"2021-08-01"},{"lineNumber":77,"author":{"gitId":"-"},"content":"            \"Remark command not implemented yet\";","lastModifiedDate":"2021-08-01"},{"lineNumber":78,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":79,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2020-07-29"},{"lineNumber":80,"author":{"gitId":"-"},"content":"    public CommandResult execute(Model model) throws CommandException {","lastModifiedDate":"2020-07-29"},{"lineNumber":81,"author":{"gitId":"-"},"content":"        throw new CommandException(MESSAGE_NOT_IMPLEMENTED_YET);","lastModifiedDate":"2020-07-29"},{"lineNumber":82,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2020-07-29"},{"lineNumber":83,"author":{"gitId":"-"},"content":"```","lastModifiedDate":"2020-07-29"},{"lineNumber":84,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":85,"author":{"gitId":"-"},"content":"## Enhancing `RemarkCommand`","lastModifiedDate":"2020-07-29"},{"lineNumber":86,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":87,"author":{"gitId":"-"},"content":"Let’s change `RemarkCommand` to parse input from the user.","lastModifiedDate":"2020-07-29"},{"lineNumber":88,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":89,"author":{"gitId":"-"},"content":"### Make the command accept parameters","lastModifiedDate":"2020-07-29"},{"lineNumber":90,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":91,"author":{"gitId":"-"},"content":"We start by modifying the constructor of `RemarkCommand` to accept an `Index` and a `String`. While we are at it, let’s change the error message to echo the values. While this is not a replacement for tests, it is an obvious way to tell if our code is functioning as intended.","lastModifiedDate":"2020-07-29"},{"lineNumber":92,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":93,"author":{"gitId":"-"},"content":"``` java","lastModifiedDate":"2020-07-29"},{"lineNumber":94,"author":{"gitId":"-"},"content":"import static seedu.address.commons.util.CollectionUtil.requireAllNonNull;","lastModifiedDate":"2020-07-29"},{"lineNumber":95,"author":{"gitId":"-"},"content":"//...","lastModifiedDate":"2020-07-29"},{"lineNumber":96,"author":{"gitId":"-"},"content":"public class RemarkCommand extends Command {","lastModifiedDate":"2020-07-29"},{"lineNumber":97,"author":{"gitId":"-"},"content":"    //...","lastModifiedDate":"2020-07-29"},{"lineNumber":98,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_ARGUMENTS \u003d \"Index: %1$d, Remark: %2$s\";","lastModifiedDate":"2020-07-29"},{"lineNumber":99,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":100,"author":{"gitId":"-"},"content":"    private final Index index;","lastModifiedDate":"2020-07-29"},{"lineNumber":101,"author":{"gitId":"-"},"content":"    private final String remark;","lastModifiedDate":"2020-07-29"},{"lineNumber":102,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":103,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2020-07-29"},{"lineNumber":104,"author":{"gitId":"-"},"content":"     * @param index of the person in the filtered person list to edit the remark","lastModifiedDate":"2020-07-29"},{"lineNumber":105,"author":{"gitId":"-"},"content":"     * @param remark of the person to be updated to","lastModifiedDate":"2020-07-29"},{"lineNumber":106,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2020-07-29"},{"lineNumber":107,"author":{"gitId":"-"},"content":"    public RemarkCommand(Index index, String remark) {","lastModifiedDate":"2020-07-29"},{"lineNumber":108,"author":{"gitId":"-"},"content":"        requireAllNonNull(index, remark);","lastModifiedDate":"2020-07-29"},{"lineNumber":109,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":110,"author":{"gitId":"-"},"content":"        this.index \u003d index;","lastModifiedDate":"2020-07-29"},{"lineNumber":111,"author":{"gitId":"-"},"content":"        this.remark \u003d remark;","lastModifiedDate":"2020-07-29"},{"lineNumber":112,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2020-07-29"},{"lineNumber":113,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2020-07-29"},{"lineNumber":114,"author":{"gitId":"-"},"content":"    public CommandResult execute(Model model) throws CommandException {","lastModifiedDate":"2020-07-29"},{"lineNumber":115,"author":{"gitId":"-"},"content":"        throw new CommandException(","lastModifiedDate":"2021-08-01"},{"lineNumber":116,"author":{"gitId":"-"},"content":"                String.format(MESSAGE_ARGUMENTS, index.getOneBased(), remark));","lastModifiedDate":"2021-08-01"},{"lineNumber":117,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2020-07-29"},{"lineNumber":118,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":119,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2020-07-29"},{"lineNumber":120,"author":{"gitId":"-"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2020-07-29"},{"lineNumber":121,"author":{"gitId":"-"},"content":"        // short circuit if same object","lastModifiedDate":"2020-07-29"},{"lineNumber":122,"author":{"gitId":"-"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2020-07-29"},{"lineNumber":123,"author":{"gitId":"-"},"content":"            return true;","lastModifiedDate":"2020-07-29"},{"lineNumber":124,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2020-07-29"},{"lineNumber":125,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":126,"author":{"gitId":"-"},"content":"        // instanceof handles nulls","lastModifiedDate":"2020-07-29"},{"lineNumber":127,"author":{"gitId":"-"},"content":"        if (!(other instanceof RemarkCommand)) {","lastModifiedDate":"2020-07-29"},{"lineNumber":128,"author":{"gitId":"-"},"content":"            return false;","lastModifiedDate":"2020-07-29"},{"lineNumber":129,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2020-07-29"},{"lineNumber":130,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":131,"author":{"gitId":"-"},"content":"        // state check","lastModifiedDate":"2020-07-29"},{"lineNumber":132,"author":{"gitId":"-"},"content":"        RemarkCommand e \u003d (RemarkCommand) other;","lastModifiedDate":"2020-07-29"},{"lineNumber":133,"author":{"gitId":"-"},"content":"        return index.equals(e.index)","lastModifiedDate":"2020-07-29"},{"lineNumber":134,"author":{"gitId":"-"},"content":"                \u0026\u0026 remark.equals(e.remark);","lastModifiedDate":"2020-07-29"},{"lineNumber":135,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2020-07-29"},{"lineNumber":136,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-07-29"},{"lineNumber":137,"author":{"gitId":"-"},"content":"```","lastModifiedDate":"2020-07-29"},{"lineNumber":138,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":139,"author":{"gitId":"-"},"content":"Your code should look something like [this](https://github.com/se-edu/addressbook-level3/commit/dc6d5139d08f6403da0ec624ea32bd79a2ae0cbf#diff-a8e35af8f9c251525063fae36c9852922a7e7195763018eacec60f3a4d87c594) after you are done.","lastModifiedDate":"2022-01-02"},{"lineNumber":140,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":141,"author":{"gitId":"-"},"content":"### Parse user input","lastModifiedDate":"2020-07-29"},{"lineNumber":142,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":143,"author":{"gitId":"-"},"content":"Now let’s move on to writing a parser that will extract the index and remark from the input provided by the user.","lastModifiedDate":"2020-07-29"},{"lineNumber":144,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":145,"author":{"gitId":"-"},"content":"Create a `RemarkCommandParser` class in the `seedu.address.logic.parser` package. The class must extend the `Parser` interface.","lastModifiedDate":"2020-07-29"},{"lineNumber":146,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":147,"author":{"gitId":"-"},"content":"![The relationship between Parser and RemarkCommandParser](../images/add-remark/ParserInterface.png)","lastModifiedDate":"2020-07-29"},{"lineNumber":148,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":149,"author":{"gitId":"-"},"content":"Thankfully, `ArgumentTokenizer#tokenize()` makes it trivial to parse user input. Let’s take a look at the JavaDoc provided for the function to understand what it does.","lastModifiedDate":"2020-07-29"},{"lineNumber":150,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":151,"author":{"gitId":"-"},"content":"**`ArgumentTokenizer.java`:**","lastModifiedDate":"2020-07-29"},{"lineNumber":152,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":153,"author":{"gitId":"-"},"content":"``` java","lastModifiedDate":"2020-07-29"},{"lineNumber":154,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2020-07-29"},{"lineNumber":155,"author":{"gitId":"-"},"content":" * Tokenizes an arguments string and returns an {@code ArgumentMultimap}","lastModifiedDate":"2020-07-29"},{"lineNumber":156,"author":{"gitId":"-"},"content":" * object that maps prefixes to their respective argument values. Only the","lastModifiedDate":"2020-07-29"},{"lineNumber":157,"author":{"gitId":"-"},"content":" * given prefixes will be recognized in the arguments string.","lastModifiedDate":"2020-07-29"},{"lineNumber":158,"author":{"gitId":"-"},"content":" *","lastModifiedDate":"2020-07-29"},{"lineNumber":159,"author":{"gitId":"-"},"content":" * @param argsString Arguments string of the form:","lastModifiedDate":"2020-07-29"},{"lineNumber":160,"author":{"gitId":"-"},"content":" * {@code preamble \u003cprefix\u003evalue \u003cprefix\u003evalue ...}","lastModifiedDate":"2020-07-29"},{"lineNumber":161,"author":{"gitId":"-"},"content":" * @param prefixes   Prefixes to tokenize the arguments string with","lastModifiedDate":"2020-07-29"},{"lineNumber":162,"author":{"gitId":"-"},"content":" * @return           ArgumentMultimap object that maps prefixes to their","lastModifiedDate":"2020-07-29"},{"lineNumber":163,"author":{"gitId":"-"},"content":" * arguments","lastModifiedDate":"2020-07-29"},{"lineNumber":164,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2020-07-29"},{"lineNumber":165,"author":{"gitId":"-"},"content":"```","lastModifiedDate":"2020-07-29"},{"lineNumber":166,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":167,"author":{"gitId":"-"},"content":"We can tell `ArgumentTokenizer#tokenize()` to look out for our new prefix `r/` and it will return us an instance of `ArgumentMultimap`. Now let’s find out what we need to do in order to obtain the Index and String that we need. Let’s look through `ArgumentMultimap` :","lastModifiedDate":"2020-07-29"},{"lineNumber":168,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":169,"author":{"gitId":"-"},"content":"**`ArgumentMultimap.java`:**","lastModifiedDate":"2020-07-29"},{"lineNumber":170,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":171,"author":{"gitId":"-"},"content":"``` java","lastModifiedDate":"2020-07-29"},{"lineNumber":172,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2020-07-29"},{"lineNumber":173,"author":{"gitId":"-"},"content":" * Returns the last value of {@code prefix}.","lastModifiedDate":"2020-07-29"},{"lineNumber":174,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2020-07-29"},{"lineNumber":175,"author":{"gitId":"-"},"content":"public Optional\u003cString\u003e getValue(Prefix prefix) {","lastModifiedDate":"2020-07-29"},{"lineNumber":176,"author":{"gitId":"-"},"content":"    List\u003cString\u003e values \u003d getAllValues(prefix);","lastModifiedDate":"2020-07-29"},{"lineNumber":177,"author":{"gitId":"-"},"content":"    return values.isEmpty() ? Optional.empty() :","lastModifiedDate":"2020-07-29"},{"lineNumber":178,"author":{"gitId":"-"},"content":"        Optional.of(values.get(values.size() - 1));","lastModifiedDate":"2020-07-29"},{"lineNumber":179,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-07-29"},{"lineNumber":180,"author":{"gitId":"-"},"content":"```","lastModifiedDate":"2020-07-29"},{"lineNumber":181,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":182,"author":{"gitId":"-"},"content":"This appears to be what we need to get a String of the remark. But what about the Index? Let\u0027s take a quick peek at existing `Command` that uses an index to see how it is done.","lastModifiedDate":"2020-07-29"},{"lineNumber":183,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":184,"author":{"gitId":"-"},"content":"**`DeleteCommandParser.java`:**","lastModifiedDate":"2020-07-29"},{"lineNumber":185,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":186,"author":{"gitId":"-"},"content":"``` java","lastModifiedDate":"2020-07-29"},{"lineNumber":187,"author":{"gitId":"-"},"content":"Index index \u003d ParserUtil.parseIndex(args);","lastModifiedDate":"2020-07-29"},{"lineNumber":188,"author":{"gitId":"-"},"content":"return new DeleteCommand(index);","lastModifiedDate":"2020-07-29"},{"lineNumber":189,"author":{"gitId":"-"},"content":"```","lastModifiedDate":"2020-07-29"},{"lineNumber":190,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":191,"author":{"gitId":"-"},"content":"There appears to be another utility class that obtains an `Index` from the input provided by the user.","lastModifiedDate":"2020-07-29"},{"lineNumber":192,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":193,"author":{"gitId":"-"},"content":"Now that we have the know-how to extract the data that we need from the user’s input, we can parse the user command and create a new instance of `RemarkCommand`, as given below.","lastModifiedDate":"2020-07-29"},{"lineNumber":194,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":195,"author":{"gitId":"-"},"content":"**`RemarkCommandParser.java`:**","lastModifiedDate":"2020-07-29"},{"lineNumber":196,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":197,"author":{"gitId":"-"},"content":"``` java","lastModifiedDate":"2020-07-29"},{"lineNumber":198,"author":{"gitId":"-"},"content":"public RemarkCommand parse(String args) throws ParseException {","lastModifiedDate":"2020-07-29"},{"lineNumber":199,"author":{"gitId":"-"},"content":"    requireNonNull(args);","lastModifiedDate":"2020-07-29"},{"lineNumber":200,"author":{"gitId":"-"},"content":"    ArgumentMultimap argMultimap \u003d ArgumentTokenizer.tokenize(args,","lastModifiedDate":"2020-07-29"},{"lineNumber":201,"author":{"gitId":"-"},"content":"        PREFIX_REMARK);","lastModifiedDate":"2020-07-29"},{"lineNumber":202,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":203,"author":{"gitId":"-"},"content":"    Index index;","lastModifiedDate":"2020-07-29"},{"lineNumber":204,"author":{"gitId":"-"},"content":"    try {","lastModifiedDate":"2020-07-29"},{"lineNumber":205,"author":{"gitId":"-"},"content":"        index \u003d ParserUtil.parseIndex(argMultimap.getPreamble());","lastModifiedDate":"2020-07-29"},{"lineNumber":206,"author":{"gitId":"-"},"content":"    } catch (IllegalValueException ive) {","lastModifiedDate":"2020-07-29"},{"lineNumber":207,"author":{"gitId":"-"},"content":"        throw new ParseException(String.format(MESSAGE_INVALID_COMMAND_FORMAT,","lastModifiedDate":"2020-07-29"},{"lineNumber":208,"author":{"gitId":"-"},"content":"            RemarkCommand.MESSAGE_USAGE), ive);","lastModifiedDate":"2020-07-29"},{"lineNumber":209,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2020-07-29"},{"lineNumber":210,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":211,"author":{"gitId":"-"},"content":"    String remark \u003d argMultimap.getValue(PREFIX_REMARK).orElse(\"\");","lastModifiedDate":"2020-07-29"},{"lineNumber":212,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":213,"author":{"gitId":"-"},"content":"    return new RemarkCommand(index, remark);","lastModifiedDate":"2020-07-29"},{"lineNumber":214,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-07-29"},{"lineNumber":215,"author":{"gitId":"-"},"content":"```","lastModifiedDate":"2020-07-29"},{"lineNumber":216,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":217,"author":{"gitId":"-"},"content":"\u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-primary\"\u003e","lastModifiedDate":"2020-07-29"},{"lineNumber":218,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":219,"author":{"gitId":"-"},"content":":information_source: Don’t forget to update `AddressBookParser` to use our new `RemarkCommandParser`!","lastModifiedDate":"2020-07-29"},{"lineNumber":220,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":221,"author":{"gitId":"-"},"content":"\u003c/div\u003e","lastModifiedDate":"2020-07-29"},{"lineNumber":222,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":223,"author":{"gitId":"-"},"content":"If you are stuck, check out the sample","lastModifiedDate":"2020-07-29"},{"lineNumber":224,"author":{"gitId":"-"},"content":"[here](https://github.com/se-edu/addressbook-level3/commit/dc6d5139d08f6403da0ec624ea32bd79a2ae0cbf#diff-8bf239e8e9529369b577701303ddd96af93178b4ed6735f91c2d8488b20c6b4a).","lastModifiedDate":"2022-01-02"},{"lineNumber":225,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":226,"author":{"gitId":"-"},"content":"## Add `Remark` to the model","lastModifiedDate":"2020-07-29"},{"lineNumber":227,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":228,"author":{"gitId":"-"},"content":"Now that we have all the information that we need, let’s lay the groundwork for propagating the remarks added into the in-memory storage of person data. We achieve that by working with the `Person` model. Each field in a Person is implemented as a separate class (e.g. a `Name` object represents the person’s name). That means we should add a `Remark` class so that we can use a `Remark` object to represent a remark given to a person.","lastModifiedDate":"2020-07-29"},{"lineNumber":229,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":230,"author":{"gitId":"-"},"content":"### Add a new `Remark` class","lastModifiedDate":"2020-07-29"},{"lineNumber":231,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":232,"author":{"gitId":"jaegarpoon"},"content":"Create a new `Remark` in `seedu.address.model.item`. Since a `Remark` is a field that is similar to `Address`, we can reuse a significant bit of code.","lastModifiedDate":"2022-03-11"},{"lineNumber":233,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":234,"author":{"gitId":"-"},"content":"A copy-paste and search-replace later, you should have something like [this](https://github.com/se-edu/addressbook-level3/commit/4516e099699baa9e2d51801bd26f016d812dedcc#diff-41bb13c581e280c686198251ad6cc337cd5e27032772f06ed9bf7f1440995ece). Note how `Remark` has no constrains and thus does not require input","lastModifiedDate":"2022-01-02"},{"lineNumber":235,"author":{"gitId":"-"},"content":"validation.","lastModifiedDate":"2020-07-29"},{"lineNumber":236,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":237,"author":{"gitId":"-"},"content":"### Make use of `Remark`","lastModifiedDate":"2020-07-29"},{"lineNumber":238,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":239,"author":{"gitId":"-"},"content":"Let’s change `RemarkCommand` and `RemarkCommandParser` to use the new `Remark` class instead of plain `String`. These should be relatively simple changes.","lastModifiedDate":"2020-07-29"},{"lineNumber":240,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":241,"author":{"gitId":"-"},"content":"## Add a placeholder element for remark to the UI","lastModifiedDate":"2020-07-29"},{"lineNumber":242,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":243,"author":{"gitId":"-"},"content":"Without getting too deep into `fxml`, let’s go on a 5 minute adventure to get some placeholder text to show up for each person.","lastModifiedDate":"2020-07-29"},{"lineNumber":244,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":245,"author":{"gitId":"-"},"content":"Simply add the following to [`seedu.address.ui.PersonCard`](https://github.com/se-edu/addressbook-level3/commit/850b78879582f38accb05dd20c245963c65ea599#diff-639834f1e05afe2276a86372adf0fe5f69314642c2d93cfa543d614ce5a76688).","lastModifiedDate":"2022-01-02"},{"lineNumber":246,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":247,"author":{"gitId":"-"},"content":"**`PersonCard.java`:**","lastModifiedDate":"2020-07-29"},{"lineNumber":248,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":249,"author":{"gitId":"-"},"content":"``` java","lastModifiedDate":"2020-07-29"},{"lineNumber":250,"author":{"gitId":"-"},"content":"@FXML","lastModifiedDate":"2020-07-29"},{"lineNumber":251,"author":{"gitId":"-"},"content":"private Label remark;","lastModifiedDate":"2020-07-29"},{"lineNumber":252,"author":{"gitId":"-"},"content":"```","lastModifiedDate":"2020-07-29"},{"lineNumber":253,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":254,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":255,"author":{"gitId":"-"},"content":"`@FXML` is an annotation that marks a private or protected field and makes it accessible to FXML. It might sound like Greek to you right now, don’t worry — we will get back to it later.","lastModifiedDate":"2020-07-29"},{"lineNumber":256,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":257,"author":{"gitId":"-"},"content":"Then insert the following into [`main/resources/view/PersonListCard.fxml`](https://github.com/se-edu/addressbook-level3/commit/850b78879582f38accb05dd20c245963c65ea599#diff-d44c4f51c24f6253c277a2bb9bc440b8064d9c15ad7cb7ceda280bca032efce9).","lastModifiedDate":"2022-01-02"},{"lineNumber":258,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":259,"author":{"gitId":"-"},"content":"**`PersonListCard.fxml`:**","lastModifiedDate":"2020-07-29"},{"lineNumber":260,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":261,"author":{"gitId":"-"},"content":"``` xml","lastModifiedDate":"2020-07-29"},{"lineNumber":262,"author":{"gitId":"-"},"content":"\u003cLabel fx:id\u003d\"remark\" styleClass\u003d\"cell_small_label\" text\u003d\"\\$remark\" /\u003e","lastModifiedDate":"2020-07-29"},{"lineNumber":263,"author":{"gitId":"-"},"content":"```","lastModifiedDate":"2020-07-29"},{"lineNumber":264,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":265,"author":{"gitId":"-"},"content":"That’s it! Fire up the application again and you should see something like this:","lastModifiedDate":"2020-07-29"},{"lineNumber":266,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":267,"author":{"gitId":"-"},"content":"![$remark shows up in each entry](../images/add-remark/$Remark.png)","lastModifiedDate":"2020-07-29"},{"lineNumber":268,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":269,"author":{"gitId":"-"},"content":"## Modify `Person` to support a `Remark` field","lastModifiedDate":"2020-07-29"},{"lineNumber":270,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":271,"author":{"gitId":"-"},"content":"Since `PersonCard` displays data from a `Person`, we need to update `Person` to get our `Remark` displayed!","lastModifiedDate":"2020-07-29"},{"lineNumber":272,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":273,"author":{"gitId":"-"},"content":"### Modify `Person`","lastModifiedDate":"2020-07-29"},{"lineNumber":274,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":275,"author":{"gitId":"-"},"content":"We change the constructor of `Person` to take a `Remark`. We will also need to define new fields and accessors accordingly to store our new addition.","lastModifiedDate":"2020-07-29"},{"lineNumber":276,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":277,"author":{"gitId":"-"},"content":"### Update other usages of `Person`","lastModifiedDate":"2020-07-29"},{"lineNumber":278,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":279,"author":{"gitId":"-"},"content":"Unfortunately, a change to `Person` will cause other commands to break, you will have to modify these commands to use the updated `Person`!","lastModifiedDate":"2020-07-29"},{"lineNumber":280,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":281,"author":{"gitId":"-"},"content":"\u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-primary\"\u003e","lastModifiedDate":"2020-07-29"},{"lineNumber":282,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":283,"author":{"gitId":"-"},"content":":bulb: Use the `Find Usages` feature in IntelliJ IDEA on the `Person` class to find these commands.","lastModifiedDate":"2020-07-29"},{"lineNumber":284,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":285,"author":{"gitId":"-"},"content":"\u003c/div\u003e","lastModifiedDate":"2020-07-29"},{"lineNumber":286,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":287,"author":{"gitId":"-"},"content":"Refer to [this commit](https://github.com/se-edu/addressbook-level3/commit/ce998c37e65b92d35c91d28c7822cd139c2c0a5c) and check that you have got everything in order!","lastModifiedDate":"2020-07-29"},{"lineNumber":288,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":289,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":290,"author":{"gitId":"-"},"content":"## Updating Storage","lastModifiedDate":"2020-07-29"},{"lineNumber":291,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":292,"author":{"gitId":"-"},"content":"AddressBook stores data by serializing `JsonAdaptedPerson` into `json` with the help of an external library — Jackson. Let’s update `JsonAdaptedPerson` to work with our new `Person`!","lastModifiedDate":"2020-07-29"},{"lineNumber":293,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":294,"author":{"gitId":"-"},"content":"While the changes to code may be minimal, the test data will have to be updated as well.","lastModifiedDate":"2020-07-29"},{"lineNumber":295,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":296,"author":{"gitId":"-"},"content":"\u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-warning\"\u003e","lastModifiedDate":"2020-07-29"},{"lineNumber":297,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":298,"author":{"gitId":"-"},"content":":exclamation: You must delete AddressBook’s storage file located at `/data/addressbook.json` before running it! Not doing so will cause AddressBook to default to an empty address book!","lastModifiedDate":"2020-07-29"},{"lineNumber":299,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":300,"author":{"gitId":"-"},"content":"\u003c/div\u003e","lastModifiedDate":"2020-07-29"},{"lineNumber":301,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":302,"author":{"gitId":"-"},"content":"Check out [this commit](https://github.com/se-edu/addressbook-level3/commit/556cbd0e03ff224d7a68afba171ad2eb0ce56bbf)","lastModifiedDate":"2020-07-29"},{"lineNumber":303,"author":{"gitId":"-"},"content":"to see what the changes entail.","lastModifiedDate":"2020-07-29"},{"lineNumber":304,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":305,"author":{"gitId":"-"},"content":"## Finalizing the UI","lastModifiedDate":"2020-07-29"},{"lineNumber":306,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":307,"author":{"gitId":"-"},"content":"Now that we have finalized the `Person` class and its dependencies, we can now bind the `Remark` field to the UI.","lastModifiedDate":"2020-07-29"},{"lineNumber":308,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":309,"author":{"gitId":"-"},"content":"Just add [this one line of code!](https://github.com/se-edu/addressbook-level3/commit/5b98fee11b6b3f5749b6b943c4f3bd3aa049b692)","lastModifiedDate":"2020-07-29"},{"lineNumber":310,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":311,"author":{"gitId":"-"},"content":"**`PersonCard.java`:**","lastModifiedDate":"2020-07-29"},{"lineNumber":312,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":313,"author":{"gitId":"-"},"content":"``` java","lastModifiedDate":"2020-07-29"},{"lineNumber":314,"author":{"gitId":"-"},"content":"public PersonCard(Person person, int displayedIndex) {","lastModifiedDate":"2020-07-29"},{"lineNumber":315,"author":{"gitId":"-"},"content":"    //...","lastModifiedDate":"2020-07-29"},{"lineNumber":316,"author":{"gitId":"-"},"content":"    remark.setText(person.getRemark().value);","lastModifiedDate":"2020-07-29"},{"lineNumber":317,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-07-29"},{"lineNumber":318,"author":{"gitId":"-"},"content":"```","lastModifiedDate":"2020-07-29"},{"lineNumber":319,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":320,"author":{"gitId":"-"},"content":"![The remark label is bound properly!](../images/add-remark/RemarkBound.png)","lastModifiedDate":"2020-07-29"},{"lineNumber":321,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":322,"author":{"gitId":"-"},"content":"## Putting everything together","lastModifiedDate":"2020-07-29"},{"lineNumber":323,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":324,"author":{"gitId":"-"},"content":"After the previous step, we notice a peculiar regression — we went from displaying something to nothing at all. However, this is expected behavior as we are yet to update the `RemarkCommand` to make use of the code we\u0027ve been adding in the last few steps.","lastModifiedDate":"2020-07-29"},{"lineNumber":325,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":326,"author":{"gitId":"-"},"content":"### Update `RemarkCommand` and `RemarkCommandParser`","lastModifiedDate":"2020-07-29"},{"lineNumber":327,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":328,"author":{"gitId":"-"},"content":"In this last step, we modify `RemarkCommand#execute()` to change the `Remark` of a `Person`. Since all fields in a `Person` are immutable, we create a new instance of a `Person` with the values that we want and","lastModifiedDate":"2020-07-29"},{"lineNumber":329,"author":{"gitId":"-"},"content":"save it with `Model#setPerson()`.","lastModifiedDate":"2020-07-29"},{"lineNumber":330,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":331,"author":{"gitId":"-"},"content":"**`RemarkCommand.java`:**","lastModifiedDate":"2020-07-29"},{"lineNumber":332,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":333,"author":{"gitId":"-"},"content":"``` java","lastModifiedDate":"2020-07-29"},{"lineNumber":334,"author":{"gitId":"-"},"content":"//...","lastModifiedDate":"2020-07-29"},{"lineNumber":335,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_ADD_REMARK_SUCCESS \u003d \"Added remark to Person: %1$s\";","lastModifiedDate":"2020-07-29"},{"lineNumber":336,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_DELETE_REMARK_SUCCESS \u003d \"Removed remark from Person: %1$s\";","lastModifiedDate":"2020-07-29"},{"lineNumber":337,"author":{"gitId":"-"},"content":"//...","lastModifiedDate":"2020-07-29"},{"lineNumber":338,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2020-07-29"},{"lineNumber":339,"author":{"gitId":"-"},"content":"    public CommandResult execute(Model model) throws CommandException {","lastModifiedDate":"2020-07-29"},{"lineNumber":340,"author":{"gitId":"-"},"content":"        List\u003cPerson\u003e lastShownList \u003d model.getFilteredPersonList();","lastModifiedDate":"2020-07-29"},{"lineNumber":341,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":342,"author":{"gitId":"-"},"content":"        if (index.getZeroBased() \u003e\u003d lastShownList.size()) {","lastModifiedDate":"2020-07-29"},{"lineNumber":343,"author":{"gitId":"-"},"content":"            throw new CommandException(Messages.MESSAGE_INVALID_PERSON_DISPLAYED_INDEX);","lastModifiedDate":"2020-07-29"},{"lineNumber":344,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2020-07-29"},{"lineNumber":345,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":346,"author":{"gitId":"-"},"content":"        Person personToEdit \u003d lastShownList.get(index.getZeroBased());","lastModifiedDate":"2020-07-29"},{"lineNumber":347,"author":{"gitId":"-"},"content":"        Person editedPerson \u003d new Person(","lastModifiedDate":"2021-08-01"},{"lineNumber":348,"author":{"gitId":"-"},"content":"                personToEdit.getName(), personToEdit.getPhone(), personToEdit.getEmail(),","lastModifiedDate":"2021-08-01"},{"lineNumber":349,"author":{"gitId":"-"},"content":"                personToEdit.getAddress(), remark, personToEdit.getTags());","lastModifiedDate":"2020-07-29"},{"lineNumber":350,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":351,"author":{"gitId":"-"},"content":"        model.setPerson(personToEdit, editedPerson);","lastModifiedDate":"2020-07-29"},{"lineNumber":352,"author":{"gitId":"-"},"content":"        model.updateFilteredPersonList(PREDICATE_SHOW_ALL_PERSONS);","lastModifiedDate":"2020-07-29"},{"lineNumber":353,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":354,"author":{"gitId":"-"},"content":"        return new CommandResult(generateSuccessMessage(editedPerson));","lastModifiedDate":"2020-07-29"},{"lineNumber":355,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2020-07-29"},{"lineNumber":356,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":357,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2020-07-29"},{"lineNumber":358,"author":{"gitId":"-"},"content":"     * Generates a command execution success message based on whether","lastModifiedDate":"2021-08-01"},{"lineNumber":359,"author":{"gitId":"-"},"content":"     * the remark is added to or removed from","lastModifiedDate":"2021-08-01"},{"lineNumber":360,"author":{"gitId":"-"},"content":"     * {@code personToEdit}.","lastModifiedDate":"2020-07-29"},{"lineNumber":361,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2020-07-29"},{"lineNumber":362,"author":{"gitId":"-"},"content":"    private String generateSuccessMessage(Person personToEdit) {","lastModifiedDate":"2020-07-29"},{"lineNumber":363,"author":{"gitId":"-"},"content":"        String message \u003d !remark.value.isEmpty() ? MESSAGE_ADD_REMARK_SUCCESS : MESSAGE_DELETE_REMARK_SUCCESS;","lastModifiedDate":"2020-07-29"},{"lineNumber":364,"author":{"gitId":"-"},"content":"        return String.format(message, personToEdit);","lastModifiedDate":"2020-07-29"},{"lineNumber":365,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2020-07-29"},{"lineNumber":366,"author":{"gitId":"-"},"content":"```","lastModifiedDate":"2020-07-29"},{"lineNumber":367,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":368,"author":{"gitId":"-"},"content":"![Congratulations!](../images/add-remark/RemarkComplete.png)","lastModifiedDate":"2020-07-29"},{"lineNumber":369,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":370,"author":{"gitId":"-"},"content":"## Writing tests","lastModifiedDate":"2020-07-29"},{"lineNumber":371,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":372,"author":{"gitId":"-"},"content":"Tests are crucial to ensuring that bugs don’t slip into the codebase unnoticed. This is especially true for large code bases where a change might lead to unintended behavior.","lastModifiedDate":"2020-07-29"},{"lineNumber":373,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":374,"author":{"gitId":"-"},"content":"Let’s verify the correctness of our code by writing some tests!","lastModifiedDate":"2020-07-29"},{"lineNumber":375,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":376,"author":{"gitId":"-"},"content":"Of course you can simply add the test cases manually, like you\u0027ve been doing all along this tutorial. The result would be like the test cases in [here](https://github.com/se-edu/addressbook-level3/commit/fac8f3fd855d55831ca0cc73313b5943d49d4d6e#diff-ff58f7c10338b34f76645df49b71ecb2bafaf7611b20e7ff59ebc98475538a01). Alternatively, you can get the help of IntelliJ to generate the skeletons of the test cases, as explained in the next section.","lastModifiedDate":"2022-01-02"},{"lineNumber":377,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-08-01"},{"lineNumber":378,"author":{"gitId":"-"},"content":"### Automatically generating tests","lastModifiedDate":"2020-07-29"},{"lineNumber":379,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":380,"author":{"gitId":"-"},"content":"The goal is to write effective and efficient tests to ensure that `RemarkCommand#execute()` behaves as expected.","lastModifiedDate":"2020-07-29"},{"lineNumber":381,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":382,"author":{"gitId":"-"},"content":"The convention for test names is `methodName_testScenario_expectedResult`. An example would be","lastModifiedDate":"2020-07-29"},{"lineNumber":383,"author":{"gitId":"-"},"content":"`execute_filteredList_success`.","lastModifiedDate":"2020-07-29"},{"lineNumber":384,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":385,"author":{"gitId":"-"},"content":"Let’s create a test for `RemarkCommand#execute()` to test that adding a remark works. On `IntelliJ IDEA` you can bring up the context menu and choose to `Go To` \\\u003e `Test` or use the appropriate keyboard shortcut.","lastModifiedDate":"2020-07-29"},{"lineNumber":386,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":387,"author":{"gitId":"-"},"content":"![Using the context menu to jump to tests](../images/add-remark/ContextMenu.png)","lastModifiedDate":"2020-07-29"},{"lineNumber":388,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":389,"author":{"gitId":"-"},"content":"Then, create a test for the `execute` method.","lastModifiedDate":"2020-07-29"},{"lineNumber":390,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":391,"author":{"gitId":"-"},"content":"![Creating a test for `execute`.](../images/add-remark/CreateTest.png)","lastModifiedDate":"2020-07-29"},{"lineNumber":392,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":393,"author":{"gitId":"-"},"content":"Following convention, let’s change the name of the generated method to `execute_addRemarkUnfilteredList_success`.","lastModifiedDate":"2020-07-29"},{"lineNumber":394,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":395,"author":{"gitId":"-"},"content":"Let’s use the utility functions provided in `CommandTestUtil`. The functions ensure that commands produce the expected `CommandResult` and output the correct message. In this case, `CommandTestUtil#assertCommandSuccess` is the best fit as we are testing that a `RemarkCommand` will successfully add a `Remark`.","lastModifiedDate":"2020-07-29"},{"lineNumber":396,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":397,"author":{"gitId":"-"},"content":"You should end up with a test that looks something like [this](https://github.com/se-edu/addressbook-level3/commit/fac8f3fd855d55831ca0cc73313b5943d49d4d6e#diff-ff58f7c10338b34f76645df49b71ecb2bafaf7611b20e7ff59ebc98475538a01R36-R49).","lastModifiedDate":"2022-01-02"},{"lineNumber":398,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":399,"author":{"gitId":"-"},"content":"## Conclusion","lastModifiedDate":"2020-07-29"},{"lineNumber":400,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":401,"author":{"gitId":"-"},"content":"This concludes the tutorial for adding a new `Command` to AddressBook.","lastModifiedDate":"2020-07-29"}],"authorContributionMap":{"jaegarpoon":1,"-":400}},{"path":"docs/tutorials/RemovingFields.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"---","lastModifiedDate":"2020-05-23"},{"lineNumber":2,"author":{"gitId":"-"},"content":"layout: page","lastModifiedDate":"2020-05-23"},{"lineNumber":3,"author":{"gitId":"-"},"content":"title: \"Tutorial: Removing Fields\"","lastModifiedDate":"2020-05-23"},{"lineNumber":4,"author":{"gitId":"-"},"content":"---","lastModifiedDate":"2020-05-23"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":6,"author":{"gitId":"-"},"content":"\u003e Perfection is achieved, not when there is nothing more to add, but when there is nothing left to take away.","lastModifiedDate":"2020-05-23"},{"lineNumber":7,"author":{"gitId":"-"},"content":"\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":8,"author":{"gitId":"-"},"content":"\u003e —  Antoine de Saint-Exupery","lastModifiedDate":"2020-05-23"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":10,"author":{"gitId":"-"},"content":"When working on an existing code base, you will most likely find that some features that are no longer necessary.","lastModifiedDate":"2021-08-01"},{"lineNumber":11,"author":{"gitId":"-"},"content":"This tutorial aims to give you some practice on such a code \u0027removal\u0027 activity by removing the `address` field from `Person` class.","lastModifiedDate":"2021-08-01"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-08-01"},{"lineNumber":13,"author":{"gitId":"-"},"content":"\u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-success\"\u003e","lastModifiedDate":"2021-08-01"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-08-01"},{"lineNumber":15,"author":{"gitId":"-"},"content":"**If you have done the [Add `remark` command tutorial](AddRemark.html)  already**, you should know where the code had to be updated to add the field `remark`. From that experience, you can deduce where the code needs to be changed to _remove_ that field too. The removing of the `address` field can be done similarly.","lastModifiedDate":"2021-08-01"},{"lineNumber":16,"author":{"gitId":"-"},"content":"\u003cbr\u003e","lastModifiedDate":"2021-08-01"},{"lineNumber":17,"author":{"gitId":"-"},"content":"\u003cbr\u003e","lastModifiedDate":"2021-08-01"},{"lineNumber":18,"author":{"gitId":"-"},"content":"However, if you have no such prior knowledge, removing a field can take a quite a bit of detective work. This tutorial takes you through that process. **At least have a read even if you don\u0027t actually do the steps yourself.**","lastModifiedDate":"2021-08-01"},{"lineNumber":19,"author":{"gitId":"-"},"content":"\u003c/div\u003e","lastModifiedDate":"2021-08-01"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":22,"author":{"gitId":"-"},"content":"* Table of Contents","lastModifiedDate":"2020-05-23"},{"lineNumber":23,"author":{"gitId":"-"},"content":"{:toc}","lastModifiedDate":"2020-05-23"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":25,"author":{"gitId":"-"},"content":"## Safely deleting `Address`","lastModifiedDate":"2020-05-23"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":27,"author":{"gitId":"-"},"content":"IntelliJ IDEA provides a refactoring tool that can identify *most* parts of a removal easily. Let’s try to use it as much as we can.","lastModifiedDate":"2021-08-01"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":29,"author":{"gitId":"-"},"content":"### Assisted refactoring","lastModifiedDate":"2020-05-23"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":31,"author":{"gitId":"jaegarpoon"},"content":"The `address` field in `Person` is actually an instance of the `seedu.address.model.item.Address` class. Since removing the `Address` class will break the application, we start by identifying `Address`\u0027s usages. This allows us to see code that depends on `Address` to function properly and edit them on a case-by-case basis. Right-click the `Address` class and select `Refactor` \\\u003e `Safe Delete` through the menu.","lastModifiedDate":"2022-03-11"},{"lineNumber":32,"author":{"gitId":"-"},"content":"* :bulb: To make things simpler, you can unselect the options `Search in comments and strings` and `Search for text occurrences`","lastModifiedDate":"2021-08-01"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":34,"author":{"gitId":"-"},"content":"![Usages detected](../images/remove/UnsafeDelete.png)","lastModifiedDate":"2020-05-23"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":36,"author":{"gitId":"-"},"content":"Choose to `View Usages` and you should be presented with a list of `Safe Delete Conflicts`. These conflicts describe locations in which the `Address` class is used.","lastModifiedDate":"2020-05-23"},{"lineNumber":37,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":38,"author":{"gitId":"-"},"content":"![List of conflicts](../images/remove/SafeDeleteConflicts.png)","lastModifiedDate":"2020-05-23"},{"lineNumber":39,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":40,"author":{"gitId":"-"},"content":"Remove usages of `Address` by performing `Safe Delete`s on each entry i.e., double-click on the entry (which takes you to the code in concern, right-click on that entity, and choose `Refactor` -\u003e `Safe delete` as before). You will need to exercise discretion when removing usages of `Address`. Functions like `ParserUtil#parseAddress()` can be safely removed but its usages must be removed as well. Other usages like in `EditPersonDescriptor` may require more careful inspection.","lastModifiedDate":"2021-08-01"},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":42,"author":{"gitId":"-"},"content":"Let’s try removing references to `Address` in `EditPersonDescriptor`.","lastModifiedDate":"2020-05-23"},{"lineNumber":43,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":44,"author":{"gitId":"-"},"content":"1. Safe delete the field `address` in `EditPersonDescriptor`.","lastModifiedDate":"2020-05-23"},{"lineNumber":45,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":46,"author":{"gitId":"-"},"content":"1. Select `Yes` when prompted to remove getters and setters.","lastModifiedDate":"2020-05-23"},{"lineNumber":47,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":48,"author":{"gitId":"-"},"content":"1. Select `View Usages` again.\u003cbr\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":49,"author":{"gitId":"-"},"content":"   ![UnsafeDeleteOnField](../images/remove/UnsafeDeleteOnField.png)","lastModifiedDate":"2020-05-23"},{"lineNumber":50,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":51,"author":{"gitId":"-"},"content":"1. Remove the usages of `address` and select `Do refactor` when you are done.","lastModifiedDate":"2020-05-23"},{"lineNumber":52,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":53,"author":{"gitId":"-"},"content":"   \u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-primary\"\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":54,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":55,"author":{"gitId":"-"},"content":"   :bulb: **Tip:** Removing usages may result in errors. Exercise discretion and fix them. For example, removing the `address` field from the `Person` class will require you to modify its constructor.","lastModifiedDate":"2020-05-23"},{"lineNumber":56,"author":{"gitId":"-"},"content":"   \u003c/div\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":57,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":58,"author":{"gitId":"-"},"content":"1. Repeat the steps for the remaining usages of `Address`","lastModifiedDate":"2020-05-23"},{"lineNumber":59,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":60,"author":{"gitId":"-"},"content":"After you are done, verify that the application still works by compiling and running it again.","lastModifiedDate":"2020-05-23"},{"lineNumber":61,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":62,"author":{"gitId":"-"},"content":"### Manual refactoring","lastModifiedDate":"2020-05-23"},{"lineNumber":63,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":64,"author":{"gitId":"-"},"content":"Unfortunately, there are usages of `Address` that IntelliJ IDEA cannot identify. You can find them by searching for instances of the word `address` in your code (`Edit` \\\u003e `Find` \\\u003e `Find in path`).","lastModifiedDate":"2020-05-23"},{"lineNumber":65,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":66,"author":{"gitId":"-"},"content":"Places of interest to look out for would be resources used by the application. `main/resources` contains images and `fxml` files used by the application and `test/resources` contains test data. For example, there is a `$address` in each `PersonCard` that has not been removed nor identified.","lastModifiedDate":"2020-05-23"},{"lineNumber":67,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":68,"author":{"gitId":"-"},"content":"![$address](../images/remove/$address.png)","lastModifiedDate":"2020-05-23"},{"lineNumber":69,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":70,"author":{"gitId":"-"},"content":"A quick look at the `PersonCard` class and its `fxml` file quickly reveals why it slipped past the automated refactoring.","lastModifiedDate":"2020-05-23"},{"lineNumber":71,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":72,"author":{"gitId":"-"},"content":"**`PersonCard.java`**","lastModifiedDate":"2020-05-23"},{"lineNumber":73,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":74,"author":{"gitId":"-"},"content":"``` java","lastModifiedDate":"2020-05-23"},{"lineNumber":75,"author":{"gitId":"-"},"content":"...","lastModifiedDate":"2020-05-23"},{"lineNumber":76,"author":{"gitId":"-"},"content":"@FXML","lastModifiedDate":"2020-05-23"},{"lineNumber":77,"author":{"gitId":"-"},"content":"private Label address;","lastModifiedDate":"2020-05-23"},{"lineNumber":78,"author":{"gitId":"-"},"content":"...","lastModifiedDate":"2020-05-23"},{"lineNumber":79,"author":{"gitId":"-"},"content":"```","lastModifiedDate":"2020-05-23"},{"lineNumber":80,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":81,"author":{"gitId":"-"},"content":"**`PersonCard.fxml`**","lastModifiedDate":"2020-05-23"},{"lineNumber":82,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":83,"author":{"gitId":"-"},"content":"``` xml","lastModifiedDate":"2020-05-23"},{"lineNumber":84,"author":{"gitId":"-"},"content":"...","lastModifiedDate":"2020-05-23"},{"lineNumber":85,"author":{"gitId":"-"},"content":"\u003cLabel fx:id\u003d\"phone\" styleClass\u003d\"cell_small_label\" text\u003d\"\\$phone\" /\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":86,"author":{"gitId":"-"},"content":"\u003cLabel fx:id\u003d\"address\" styleClass\u003d\"cell_small_label\" text\u003d\"\\$address\" /\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":87,"author":{"gitId":"-"},"content":"\u003cLabel fx:id\u003d\"email\" styleClass\u003d\"cell_small_label\" text\u003d\"\\$email\" /\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":88,"author":{"gitId":"-"},"content":"...","lastModifiedDate":"2020-05-23"},{"lineNumber":89,"author":{"gitId":"-"},"content":"```","lastModifiedDate":"2020-05-23"},{"lineNumber":90,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":91,"author":{"gitId":"-"},"content":"After removing the `Label`, we can proceed to formally test our code. If everything went well, you should have most of your tests pass. Fix any remaining errors until the tests all pass.","lastModifiedDate":"2020-05-23"},{"lineNumber":92,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":93,"author":{"gitId":"-"},"content":"## Tidying up","lastModifiedDate":"2020-05-23"},{"lineNumber":94,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":95,"author":{"gitId":"-"},"content":"At this point, your application is working as intended and all your tests are passing. What’s left to do is to clean up references to `Address` in test data and documentation.","lastModifiedDate":"2020-05-23"},{"lineNumber":96,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":97,"author":{"gitId":"-"},"content":"In `src/test/data/`, data meant for testing purposes are stored. While keeping the `address` field in the json files does not cause the tests to fail, it is not good practice to let cruft from old features accumulate.","lastModifiedDate":"2020-05-23"},{"lineNumber":98,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":99,"author":{"gitId":"-"},"content":"**`invalidPersonAddressBook.json`:**","lastModifiedDate":"2020-05-23"},{"lineNumber":100,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":101,"author":{"gitId":"-"},"content":"```json","lastModifiedDate":"2020-05-23"},{"lineNumber":102,"author":{"gitId":"-"},"content":"{","lastModifiedDate":"2020-05-23"},{"lineNumber":103,"author":{"gitId":"-"},"content":"  \"persons\": [ {","lastModifiedDate":"2020-05-23"},{"lineNumber":104,"author":{"gitId":"-"},"content":"    \"name\": \"Person with invalid name field: Ha!ns Mu@ster\",","lastModifiedDate":"2020-05-23"},{"lineNumber":105,"author":{"gitId":"-"},"content":"    \"phone\": \"9482424\",","lastModifiedDate":"2020-05-23"},{"lineNumber":106,"author":{"gitId":"-"},"content":"    \"email\": \"hans@example.com\",","lastModifiedDate":"2020-05-23"},{"lineNumber":107,"author":{"gitId":"-"},"content":"    \"address\": \"4th street\"","lastModifiedDate":"2020-05-23"},{"lineNumber":108,"author":{"gitId":"-"},"content":"  } ]","lastModifiedDate":"2020-05-23"},{"lineNumber":109,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":110,"author":{"gitId":"-"},"content":"```","lastModifiedDate":"2020-05-23"},{"lineNumber":111,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":112,"author":{"gitId":"-"},"content":"You can go through each individual `json` file and manually remove the `address` field.","lastModifiedDate":"2020-05-23"}],"authorContributionMap":{"jaegarpoon":1,"-":111}},{"path":"docs/tutorials/TracingCode.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"---","lastModifiedDate":"2020-05-23"},{"lineNumber":2,"author":{"gitId":"-"},"content":"layout: page","lastModifiedDate":"2020-05-23"},{"lineNumber":3,"author":{"gitId":"-"},"content":"title: \"Tutorial: Tracing code\"","lastModifiedDate":"2020-05-23"},{"lineNumber":4,"author":{"gitId":"-"},"content":"---","lastModifiedDate":"2020-05-23"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":6,"author":{"gitId":"-"},"content":"\u003e Indeed, the ratio of time spent reading versus writing is well over 10 to 1. We are constantly reading old code as part of the effort to write new code. …​\\[Therefore,\\] making it easy to read makes it easier to write.","lastModifiedDate":"2020-05-23"},{"lineNumber":7,"author":{"gitId":"-"},"content":"\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":8,"author":{"gitId":"-"},"content":"\u003e —  Robert C. Martin Clean Code: A Handbook of Agile Software Craftsmanship","lastModifiedDate":"2020-05-23"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":10,"author":{"gitId":"-"},"content":"When trying to understand an unfamiliar code base, one common strategy used is to trace some representative execution path through the code base. One easy way to trace an execution path is to use a debugger to step through the code. In this tutorial, you will be using the IntelliJ IDEA’s debugger to trace the execution path of a specific user command.","lastModifiedDate":"2020-05-23"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":12,"author":{"gitId":"-"},"content":"* Table of Contents","lastModifiedDate":"2020-05-23"},{"lineNumber":13,"author":{"gitId":"-"},"content":"{:toc}","lastModifiedDate":"2020-05-23"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":15,"author":{"gitId":"-"},"content":"## Before we start","lastModifiedDate":"2020-05-23"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":17,"author":{"gitId":"-"},"content":"Before we jump into the code, it is useful to get an idea of the overall structure and the high-level behavior of the application. This is provided in the \u0027Architecture\u0027 section of the developer guide. In particular, the architecture diagram (reproduced below), tells us that the App consists of several components.","lastModifiedDate":"2020-05-23"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":19,"author":{"gitId":"-"},"content":"![ArchitectureDiagram](../images/ArchitectureDiagram.png)","lastModifiedDate":"2020-05-23"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":21,"author":{"gitId":"-"},"content":"It also has a sequence diagram (reproduced below) that tells us how a command propagates through the App.","lastModifiedDate":"2020-05-23"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":23,"author":{"gitId":"-"},"content":"\u003cimg src\u003d\"../images/ArchitectureSequenceDiagram.png\" width\u003d\"550\" /\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":25,"author":{"gitId":"-"},"content":"Note how the diagram shows only the execution flows _between_ the main components. That is, it does not show details of the execution path *inside* each component. By hiding those details, the diagram aims to inform the reader about the overall execution path of a command without overwhelming the reader with too much details. In this tutorial, you aim to find those omitted details so that you get a more in-depth understanding of how the code works.","lastModifiedDate":"2021-07-31"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":27,"author":{"gitId":"-"},"content":"Before we proceed, ensure that you have done the following:","lastModifiedDate":"2020-05-23"},{"lineNumber":28,"author":{"gitId":"-"},"content":"1. Read the [*Architecture* section of the DG](../DeveloperGuide.md#architecture)","lastModifiedDate":"2020-05-23"},{"lineNumber":29,"author":{"gitId":"-"},"content":"1. Set up the project in Intellij IDEA","lastModifiedDate":"2020-05-23"},{"lineNumber":30,"author":{"gitId":"-"},"content":"1. Learn basic debugging features of Intellij IDEA","lastModifiedDate":"2020-05-23"},{"lineNumber":31,"author":{"gitId":"-"},"content":"   * If you are using a different IDE, we\u0027ll leave it to you to figure out the equivalent feature to use in your IDE.","lastModifiedDate":"2021-07-31"},{"lineNumber":32,"author":{"gitId":"-"},"content":"   * If you are not using an IDE, we\u0027ll let you figure out how to achieve the same using your coding toolchain.","lastModifiedDate":"2021-07-31"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":34,"author":{"gitId":"-"},"content":"## Setting a breakpoint","lastModifiedDate":"2020-05-23"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":36,"author":{"gitId":"-"},"content":"As you know, the first step of debugging is to put in a breakpoint where you want the debugger to pause the execution. For example, if you are trying to understand how the App starts up, you would put a breakpoint in the first statement of the `main` method.","lastModifiedDate":"2021-07-31"},{"lineNumber":37,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":38,"author":{"gitId":"-"},"content":"In our case, we would want to begin the tracing at the very point where the App start processing user input (i.e., somewhere in the UI component), and then trace through how the execution proceeds through the UI component. However, the execution path through a GUI is often somewhat obscure due to various *event-driven mechanisms* used by GUI frameworks, which happens to be the case here too. Therefore, let us put the breakpoint where the `UI` transfers control to the `Logic` component.","lastModifiedDate":"2021-07-31"},{"lineNumber":39,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":40,"author":{"gitId":"-"},"content":"\u003cimg src\u003d\"../images/ArchitectureSequenceDiagram.png\" width\u003d\"550\" /\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":42,"author":{"gitId":"-"},"content":"According to the sequence diagram you saw earlier (and repeated above for reference), the `UI` component yields control to the `Logic` component through a method named `execute`. Searching through the code base for an `execute()` method that belongs to the `Logic` component yields a promising candidate in `seedu.address.logic.Logic`.","lastModifiedDate":"2021-07-31"},{"lineNumber":43,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":44,"author":{"gitId":"-"},"content":"\u003cimg src\u003d\"../images/tracing/searchResultsForExecuteMethod.png\" /\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":45,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":46,"author":{"gitId":"-"},"content":"\u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-primary\"\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":47,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":48,"author":{"gitId":"-"},"content":":bulb: **Intellij Tip:** The [\u0027**Search Everywhere**\u0027 feature](https://www.jetbrains.com/help/idea/searching-everywhere.html) can be used here. In particular, the \u0027**Find Symbol**\u0027 (\u0027Symbol\u0027 here refers to methods, variables, classes etc.) variant of that feature is quite useful here as we are looking for a _method_ named `execute`, not simply the text `execute`.","lastModifiedDate":"2021-07-31"},{"lineNumber":49,"author":{"gitId":"-"},"content":"\u003c/div\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":50,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":51,"author":{"gitId":"-"},"content":"A quick look at the `seedu.address.logic.Logic` (an extract given below) confirms that this indeed might be what we’re looking for.","lastModifiedDate":"2021-07-31"},{"lineNumber":52,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":53,"author":{"gitId":"-"},"content":"```java","lastModifiedDate":"2021-07-31"},{"lineNumber":54,"author":{"gitId":"-"},"content":"public interface Logic {","lastModifiedDate":"2021-07-31"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2021-07-31"},{"lineNumber":56,"author":{"gitId":"-"},"content":"     * Executes the command and returns the result.","lastModifiedDate":"2021-07-31"},{"lineNumber":57,"author":{"gitId":"-"},"content":"     * @param commandText The command as entered by the user.","lastModifiedDate":"2021-07-31"},{"lineNumber":58,"author":{"gitId":"-"},"content":"     * @return the result of the command execution.","lastModifiedDate":"2021-07-31"},{"lineNumber":59,"author":{"gitId":"-"},"content":"     * @throws CommandException If an error occurs during command execution.","lastModifiedDate":"2021-07-31"},{"lineNumber":60,"author":{"gitId":"-"},"content":"     * @throws ParseException If an error occurs during parsing.","lastModifiedDate":"2021-07-31"},{"lineNumber":61,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2021-07-31"},{"lineNumber":62,"author":{"gitId":"-"},"content":"    CommandResult execute(String commandText) throws CommandException, ParseException;","lastModifiedDate":"2021-07-31"},{"lineNumber":63,"author":{"gitId":"-"},"content":"...","lastModifiedDate":"2021-07-31"},{"lineNumber":64,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2021-07-31"},{"lineNumber":65,"author":{"gitId":"-"},"content":"```","lastModifiedDate":"2021-07-31"},{"lineNumber":66,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":67,"author":{"gitId":"-"},"content":"But apparently, this is an interface, not a concrete implementation.","lastModifiedDate":"2021-07-31"},{"lineNumber":68,"author":{"gitId":"-"},"content":"That should be fine because the [Architecture section of the Developer Guide](../DeveloperGuide.html#architecture) tells us that components interact through interfaces. Here\u0027s the relevant diagram:","lastModifiedDate":"2021-07-31"},{"lineNumber":69,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":70,"author":{"gitId":"-"},"content":"\u003cimg src\u003d\"../images/ComponentManagers.png\" width\u003d\"300\" /\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":71,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":72,"author":{"gitId":"-"},"content":"Next, let\u0027s find out which statement(s) in the `UI` code is calling this method, thus transferring control from the `UI` to the `Logic`.","lastModifiedDate":"2021-07-31"},{"lineNumber":73,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":74,"author":{"gitId":"-"},"content":"\u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-primary\"\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":75,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":76,"author":{"gitId":"-"},"content":":bulb: **Intellij Tip:** The [\u0027**Find Usages**\u0027 feature](https://www.jetbrains.com/help/idea/find-highlight-usages.html#find-usages) can find from which parts of the code a class/method/variable is being used.","lastModifiedDate":"2021-07-31"},{"lineNumber":77,"author":{"gitId":"-"},"content":"\u003c/div\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":78,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":79,"author":{"gitId":"-"},"content":"![`Find Usages` tool window. `Edit` \\\u003e `Find` \\\u003e `Find Usages`.](../images/tracing/FindUsages.png)","lastModifiedDate":"2020-05-23"},{"lineNumber":80,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":81,"author":{"gitId":"-"},"content":"Bingo\\! `MainWindow#executeCommand()` seems to be exactly what we’re looking for\\!","lastModifiedDate":"2020-05-23"},{"lineNumber":82,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":83,"author":{"gitId":"-"},"content":"Now let’s set the breakpoint. First, double-click the item to reach the corresponding code. Once there, click on the left gutter to set a breakpoint, as shown below.","lastModifiedDate":"2020-05-23"},{"lineNumber":84,"author":{"gitId":"-"},"content":" ![LeftGutter](../images/tracing/LeftGutter.png)","lastModifiedDate":"2020-05-23"},{"lineNumber":85,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":86,"author":{"gitId":"-"},"content":"## Tracing the execution path","lastModifiedDate":"2020-05-23"},{"lineNumber":87,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":88,"author":{"gitId":"-"},"content":"Recall from the User Guide that the `edit` command has the format: `edit INDEX [n/NAME] [p/PHONE] [e/EMAIL] [a/ADDRESS] [t/TAG]…​` For this tutorial we will be issuing the command `edit 1 n/Alice Yeoh`.","lastModifiedDate":"2020-05-23"},{"lineNumber":89,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":90,"author":{"gitId":"-"},"content":"\u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-primary\"\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":91,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":92,"author":{"gitId":"-"},"content":":bulb: **Tip:** Over the course of the debugging session, you will encounter every major component in the application. Try to keep track of what happens inside the component and where the execution transfers to another component.","lastModifiedDate":"2021-07-31"},{"lineNumber":93,"author":{"gitId":"-"},"content":"\u003c/div\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":94,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":95,"author":{"gitId":"-"},"content":"1. To start the debugging session, simply `Run` \\\u003e `Debug Main`","lastModifiedDate":"2020-05-23"},{"lineNumber":96,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":97,"author":{"gitId":"-"},"content":"1. When the GUI appears, enter `edit 1 n/Alice Yeoh` into the command box and press `Enter`.","lastModifiedDate":"2021-07-31"},{"lineNumber":98,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":99,"author":{"gitId":"-"},"content":"1. The Debugger tool window should show up and show something like this:\u003cbr\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":100,"author":{"gitId":"-"},"content":"   ![DebuggerStep1](../images/tracing/DebuggerStep1.png)","lastModifiedDate":"2020-05-23"},{"lineNumber":101,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":102,"author":{"gitId":"-"},"content":"1. Use the _Show execution point_ feature to jump to the line of code that we stopped at:\u003cbr\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":103,"author":{"gitId":"-"},"content":"   ![ShowExecutionPoint](../images/tracing/ShowExecutionPoint.png)\u003cbr\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":104,"author":{"gitId":"-"},"content":"   `CommandResult commandResult \u003d logic.execute(commandText);` is the line that you end up at (i.e., the place where we put the breakpoint).","lastModifiedDate":"2021-07-31"},{"lineNumber":105,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":106,"author":{"gitId":"-"},"content":"1. We are interested in the `logic.execute(commandText)` portion of that line so let’s _Step in_ into that method call:\u003cbr\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":107,"author":{"gitId":"-"},"content":"    ![StepInto](../images/tracing/StepInto.png)","lastModifiedDate":"2020-05-23"},{"lineNumber":108,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":109,"author":{"gitId":"-"},"content":"1. We end up in `LogicManager#execute()` (not `Logic#execute` -- but this is expected because we know the `execute()` method in the `Logic` interface is actually implemented by the `LogicManager` class). Let’s take a look at the body of the method. Given below is the same code, with additional explanatory comments.","lastModifiedDate":"2021-07-31"},{"lineNumber":110,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":111,"author":{"gitId":"-"},"content":"   **LogicManager\\#execute().**","lastModifiedDate":"2020-05-23"},{"lineNumber":112,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":113,"author":{"gitId":"-"},"content":"   ``` java","lastModifiedDate":"2020-05-23"},{"lineNumber":114,"author":{"gitId":"-"},"content":"   @Override","lastModifiedDate":"2020-05-23"},{"lineNumber":115,"author":{"gitId":"-"},"content":"   public CommandResult execute(String commandText)","lastModifiedDate":"2020-05-23"},{"lineNumber":116,"author":{"gitId":"-"},"content":"           throws CommandException, ParseException {","lastModifiedDate":"2020-05-23"},{"lineNumber":117,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":118,"author":{"gitId":"-"},"content":"        //Logging, safe to ignore","lastModifiedDate":"2020-05-23"},{"lineNumber":119,"author":{"gitId":"-"},"content":"        logger.info(\"----------------[USER COMMAND][\" + commandText + \"]\");","lastModifiedDate":"2020-05-23"},{"lineNumber":120,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":121,"author":{"gitId":"-"},"content":"        CommandResult commandResult;","lastModifiedDate":"2020-05-23"},{"lineNumber":122,"author":{"gitId":"-"},"content":"        //Parse user input from String to a Command","lastModifiedDate":"2020-05-23"},{"lineNumber":123,"author":{"gitId":"-"},"content":"        Command command \u003d addressBookParser.parseCommand(commandText);","lastModifiedDate":"2020-05-23"},{"lineNumber":124,"author":{"gitId":"-"},"content":"        //Executes the Command and stores the result","lastModifiedDate":"2020-05-23"},{"lineNumber":125,"author":{"gitId":"-"},"content":"        commandResult \u003d command.execute(model);","lastModifiedDate":"2020-05-23"},{"lineNumber":126,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":127,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2020-05-23"},{"lineNumber":128,"author":{"gitId":"-"},"content":"            //We can deduce that the previous line of code modifies model in some way","lastModifiedDate":"2020-05-23"},{"lineNumber":129,"author":{"gitId":"-"},"content":"            // since it\u0027s being stored here.","lastModifiedDate":"2020-05-23"},{"lineNumber":130,"author":{"gitId":"-"},"content":"            storage.saveAddressBook(model.getAddressBook());","lastModifiedDate":"2020-05-23"},{"lineNumber":131,"author":{"gitId":"-"},"content":"        } catch (IOException ioe) {","lastModifiedDate":"2020-05-23"},{"lineNumber":132,"author":{"gitId":"-"},"content":"            throw new CommandException(FILE_OPS_ERROR_MESSAGE + ioe, ioe);","lastModifiedDate":"2020-05-23"},{"lineNumber":133,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2020-05-23"},{"lineNumber":134,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":135,"author":{"gitId":"-"},"content":"        return commandResult;","lastModifiedDate":"2020-05-23"},{"lineNumber":136,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2020-05-23"},{"lineNumber":137,"author":{"gitId":"-"},"content":"   ```","lastModifiedDate":"2020-05-23"},{"lineNumber":138,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":139,"author":{"gitId":"-"},"content":"1. `LogicManager#execute()` appears to delegate most of the heavy lifting to other components. Let’s take a closer look at each one.","lastModifiedDate":"2020-05-23"},{"lineNumber":140,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":141,"author":{"gitId":"-"},"content":"1. _Step over_ the logging code since it is of no interest to us now.","lastModifiedDate":"2021-07-31"},{"lineNumber":142,"author":{"gitId":"-"},"content":"   ![StepOver](../images/tracing/StepOver.png)","lastModifiedDate":"2021-07-31"},{"lineNumber":143,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":144,"author":{"gitId":"-"},"content":"1. _Step into_ the line where user input in parsed from a String to a Command, which should bring you to the `AddressBookParser#parseCommand()` method (partial code given below):","lastModifiedDate":"2021-07-31"},{"lineNumber":145,"author":{"gitId":"-"},"content":"   ``` java","lastModifiedDate":"2020-05-23"},{"lineNumber":146,"author":{"gitId":"-"},"content":"   public Command parseCommand(String userInput) throws ParseException {","lastModifiedDate":"2020-05-23"},{"lineNumber":147,"author":{"gitId":"-"},"content":"       ...","lastModifiedDate":"2020-05-23"},{"lineNumber":148,"author":{"gitId":"-"},"content":"       final String commandWord \u003d matcher.group(\"commandWord\");","lastModifiedDate":"2020-05-23"},{"lineNumber":149,"author":{"gitId":"-"},"content":"       final String arguments \u003d matcher.group(\"arguments\");","lastModifiedDate":"2020-05-23"},{"lineNumber":150,"author":{"gitId":"-"},"content":"       ...","lastModifiedDate":"2020-05-23"},{"lineNumber":151,"author":{"gitId":"-"},"content":"   ```","lastModifiedDate":"2020-05-23"},{"lineNumber":152,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":153,"author":{"gitId":"-"},"content":"1. _Step over_ the statements in that method until you reach the `switch` statement. The \u0027Variables\u0027 window now shows the value of both `commandWord` and `arguments`:\u003cbr\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":154,"author":{"gitId":"-"},"content":"    ![Variables](../images/tracing/Variables.png)","lastModifiedDate":"2020-05-23"},{"lineNumber":155,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":156,"author":{"gitId":"-"},"content":"1. We see that the value of `commandWord` is now `edit` but `arguments` is still not processed in any meaningful way.","lastModifiedDate":"2020-05-23"},{"lineNumber":157,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":158,"author":{"gitId":"-"},"content":"1. Stepping through the `switch` block, we end up at a call to `EditCommandParser().parse()` as expected (because the command we typed is an edit command).","lastModifiedDate":"2021-07-31"},{"lineNumber":159,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":160,"author":{"gitId":"-"},"content":"    ``` java","lastModifiedDate":"2020-05-23"},{"lineNumber":161,"author":{"gitId":"-"},"content":"    ...","lastModifiedDate":"2020-05-23"},{"lineNumber":162,"author":{"gitId":"-"},"content":"    case EditCommand.COMMAND_WORD:","lastModifiedDate":"2020-05-23"},{"lineNumber":163,"author":{"gitId":"-"},"content":"        return new EditCommandParser().parse(arguments);","lastModifiedDate":"2020-05-23"},{"lineNumber":164,"author":{"gitId":"-"},"content":"    ...","lastModifiedDate":"2020-05-23"},{"lineNumber":165,"author":{"gitId":"-"},"content":"    ```","lastModifiedDate":"2020-05-23"},{"lineNumber":166,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":167,"author":{"gitId":"-"},"content":"1. Let’s see what `EditCommandParser#parse()` does by stepping into it. You might have to click the \u0027step into\u0027 button multiple times here because there are two method calls in that statement: `EditCommandParser()` and `parse()`.","lastModifiedDate":"2021-07-31"},{"lineNumber":168,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":169,"author":{"gitId":"-"},"content":"   \u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-primary\"\u003e:bulb: **Intellij Tip:** Sometimes, you might end up stepping into functions that are not of interest. Simply use the `step out` button to get out of them!","lastModifiedDate":"2021-07-31"},{"lineNumber":170,"author":{"gitId":"-"},"content":"   \u003c/div\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":171,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":172,"author":{"gitId":"-"},"content":"1. Stepping through the method shows that it calls `ArgumentTokenizer#tokenize()` and `ParserUtil#parseIndex()` to obtain the arguments and index required.","lastModifiedDate":"2021-07-31"},{"lineNumber":173,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":174,"author":{"gitId":"-"},"content":"1. The rest of the method seems to exhaustively check for the existence of each possible parameter of the `edit` command and store any possible changes in an `EditPersonDescriptor`. Recall that we can verify the contents of `editPersonDesciptor` through the \u0027Variables\u0027 window.\u003cbr\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":175,"author":{"gitId":"-"},"content":"   ![EditCommand](../images/tracing/EditCommand.png)","lastModifiedDate":"2020-05-23"},{"lineNumber":176,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":177,"author":{"gitId":"-"},"content":"1. As you just traced through some code involved in parsing a command, you can take a look at this class diagram to see where the various parsing-related classes you encountered fit into the design of the `Logic` component.","lastModifiedDate":"2021-07-31"},{"lineNumber":178,"author":{"gitId":"-"},"content":"   \u003cimg src\u003d\"../images/ParserClasses.png\" width\u003d\"600\"/\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":179,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":180,"author":{"gitId":"-"},"content":"1. Let’s continue stepping through until we return to `LogicManager#execute()`.","lastModifiedDate":"2020-05-23"},{"lineNumber":181,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":182,"author":{"gitId":"-"},"content":"    The sequence diagram below shows the details of the execution path through the Logic component. Does the execution path you traced in the code so far match the diagram?\u003cbr\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":183,"author":{"gitId":"-"},"content":"    ![Tracing an `edit` command through the Logic component](../images/tracing/LogicSequenceDiagram.png)","lastModifiedDate":"2020-05-23"},{"lineNumber":184,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":185,"author":{"gitId":"-"},"content":"1. Now, step over until you read the statement that calls the `execute()` method of the `EditCommand` object received, and step into that `execute()` method (partial code given below):","lastModifiedDate":"2021-07-31"},{"lineNumber":186,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":187,"author":{"gitId":"-"},"content":"   **`EditCommand#execute()`:**","lastModifiedDate":"2021-07-31"},{"lineNumber":188,"author":{"gitId":"-"},"content":"   ``` java","lastModifiedDate":"2020-05-23"},{"lineNumber":189,"author":{"gitId":"-"},"content":"   @Override","lastModifiedDate":"2020-05-23"},{"lineNumber":190,"author":{"gitId":"-"},"content":"   public CommandResult execute(Model model) throws CommandException {","lastModifiedDate":"2020-05-23"},{"lineNumber":191,"author":{"gitId":"-"},"content":"       ...","lastModifiedDate":"2020-05-23"},{"lineNumber":192,"author":{"gitId":"-"},"content":"       Person personToEdit \u003d lastShownList.get(index.getZeroBased());","lastModifiedDate":"2020-05-23"},{"lineNumber":193,"author":{"gitId":"zxgoh"},"content":"       Person editedPerson \u003d createEditedPerson(personToEdit, editCustomerDescriptor);","lastModifiedDate":"2022-03-30"},{"lineNumber":194,"author":{"gitId":"-"},"content":"       if (!personToEdit.isSamePerson(editedPerson) \u0026\u0026 model.hasPerson(editedPerson)) {","lastModifiedDate":"2020-05-23"},{"lineNumber":195,"author":{"gitId":"-"},"content":"           throw new CommandException(MESSAGE_DUPLICATE_PERSON);","lastModifiedDate":"2020-05-23"},{"lineNumber":196,"author":{"gitId":"-"},"content":"       }","lastModifiedDate":"2020-05-23"},{"lineNumber":197,"author":{"gitId":"-"},"content":"       model.setPerson(personToEdit, editedPerson);","lastModifiedDate":"2020-05-23"},{"lineNumber":198,"author":{"gitId":"-"},"content":"       model.updateFilteredPersonList(PREDICATE_SHOW_ALL_PERSONS);","lastModifiedDate":"2020-05-23"},{"lineNumber":199,"author":{"gitId":"-"},"content":"       return new CommandResult(String.format(MESSAGE_EDIT_PERSON_SUCCESS, editedPerson));","lastModifiedDate":"2020-05-23"},{"lineNumber":200,"author":{"gitId":"-"},"content":"   }","lastModifiedDate":"2020-05-23"},{"lineNumber":201,"author":{"gitId":"-"},"content":"   ```","lastModifiedDate":"2020-05-23"},{"lineNumber":202,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":203,"author":{"gitId":"-"},"content":"1. As suspected, `command#execute()` does indeed make changes to the `model` object. Specifically,","lastModifiedDate":"2021-07-31"},{"lineNumber":204,"author":{"gitId":"-"},"content":"   * it uses the `setPerson()` method (defined in the interface `Model` and implemented in `ModelManager` as per the usual pattern) to update the person data.","lastModifiedDate":"2021-07-31"},{"lineNumber":205,"author":{"gitId":"-"},"content":"   * it uses the `updateFilteredPersonList` method to ask the `Model` to populate the \u0027filtered list\u0027 with _all_ persons.\u003cbr\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":206,"author":{"gitId":"-"},"content":"     FYI, The \u0027filtered list\u0027 is the list of persons resulting from the most recent operation that will be shown to the user immediately after. For the `edit` command, we populate it with all the persons so that the user can see the edited person along with all other persons. If this was a `find` command, we would be setting that list to contain the search results instead.\u003cbr\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":207,"author":{"gitId":"-"},"content":"     To provide some context, given below is the class diagram of the `Model` component. See if you can figure out where the \u0027filtered list\u0027 of persons is being tracked.","lastModifiedDate":"2021-07-31"},{"lineNumber":208,"author":{"gitId":"-"},"content":"     \u003cimg src\u003d\"../images/ModelClassDiagram.png\" width\u003d\"450\" /\u003e\u003cbr\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":209,"author":{"gitId":"-"},"content":"   * :bulb: This may be a good time to read through the [`Model` component section of the DG](../DeveloperGuide.html#model-component)","lastModifiedDate":"2021-07-31"},{"lineNumber":210,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":211,"author":{"gitId":"-"},"content":"1. As you step through the rest of the statements in the `EditCommand#execute()` method, you\u0027ll see that it creates a `CommandResult` object (containing information about the result of the execution) and returns it.\u003cbr\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":212,"author":{"gitId":"-"},"content":"   Advancing the debugger by one more step should take you back to the middle of the `LogicManager#execute()` method.\u003cbr\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":213,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":214,"author":{"gitId":"-"},"content":"1. Given that you have already seen quite a few classes in the `Logic` component in action, see if you can identify in this partial class diagram some of the classes you\u0027ve encountered so far, and see how they fit into the class structure of the `Logic` component:","lastModifiedDate":"2021-07-31"},{"lineNumber":215,"author":{"gitId":"-"},"content":"    \u003cimg src\u003d\"../images/LogicClassDiagram.png\" width\u003d\"550\"/\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":216,"author":{"gitId":"-"},"content":"   * :bulb: This may be a good time to read through the [`Logic` component section of the DG](../DeveloperGuide.html#logic-component)","lastModifiedDate":"2021-07-31"},{"lineNumber":217,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":218,"author":{"gitId":"-"},"content":"1. Similar to before, you can step over/into statements in the `LogicManager#execute()` method to examine how the control is transferred to the `Storage` component and what happens inside that component.","lastModifiedDate":"2021-07-31"},{"lineNumber":219,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":220,"author":{"gitId":"-"},"content":"   \u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-primary\"\u003e:bulb: **Intellij Tip:** When trying to step into a statement such as `storage.saveAddressBook(model.getAddressBook())` which contains multiple method calls, Intellij will let you choose (by clicking) which one you want to step into.","lastModifiedDate":"2021-07-31"},{"lineNumber":221,"author":{"gitId":"-"},"content":"   \u003c/div\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":222,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":223,"author":{"gitId":"-"},"content":"1.  As you step through the code inside the `Storage` component, you will eventually arrive at the `JsonAddressBook#saveAddressBook()` method which calls the `JsonSerializableAddressBook` constructor, to create an object that can be _serialized_ (i.e., stored in storage medium) in JSON format. That constructor is given below (with added line breaks for easier readability):","lastModifiedDate":"2021-07-31"},{"lineNumber":224,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":225,"author":{"gitId":"-"},"content":"    **`JsonSerializableAddressBook` constructor:**","lastModifiedDate":"2021-07-31"},{"lineNumber":226,"author":{"gitId":"-"},"content":"    ``` java","lastModifiedDate":"2020-05-23"},{"lineNumber":227,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2020-05-23"},{"lineNumber":228,"author":{"gitId":"-"},"content":"     * Converts a given {@code ReadOnlyAddressBook} into this class for Jackson use.","lastModifiedDate":"2020-05-23"},{"lineNumber":229,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2020-05-23"},{"lineNumber":230,"author":{"gitId":"-"},"content":"     * @param source future changes to this will not affect the created","lastModifiedDate":"2020-05-23"},{"lineNumber":231,"author":{"gitId":"-"},"content":"     * {@code JsonSerializableAddressBook}.","lastModifiedDate":"2020-05-23"},{"lineNumber":232,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2020-05-23"},{"lineNumber":233,"author":{"gitId":"-"},"content":"    public JsonSerializableAddressBook(ReadOnlyAddressBook source) {","lastModifiedDate":"2020-05-23"},{"lineNumber":234,"author":{"gitId":"-"},"content":"        persons.addAll(","lastModifiedDate":"2020-05-23"},{"lineNumber":235,"author":{"gitId":"-"},"content":"            source.getPersonList()","lastModifiedDate":"2020-05-23"},{"lineNumber":236,"author":{"gitId":"-"},"content":"                  .stream()","lastModifiedDate":"2020-05-23"},{"lineNumber":237,"author":{"gitId":"-"},"content":"                  .map(JsonAdaptedPerson::new)","lastModifiedDate":"2020-05-23"},{"lineNumber":238,"author":{"gitId":"-"},"content":"                  .collect(Collectors.toList()));","lastModifiedDate":"2020-05-23"},{"lineNumber":239,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2020-05-23"},{"lineNumber":240,"author":{"gitId":"-"},"content":"    ```","lastModifiedDate":"2020-05-23"},{"lineNumber":241,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":242,"author":{"gitId":"-"},"content":"1. It appears that a `JsonAdaptedPerson` is created for each `Person` and then added to the `JsonSerializableAddressBook`.","lastModifiedDate":"2020-05-23"},{"lineNumber":243,"author":{"gitId":"-"},"content":"   This is because regular Java objects need to go through an _adaptation_ for them to be suitable to be saved in JSON format.","lastModifiedDate":"2021-07-31"},{"lineNumber":244,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":245,"author":{"gitId":"-"},"content":"1. While you are stepping through the classes in the `Storage` component, here is the component\u0027s class diagram to help you understand how those classes fit into the structure of the component.\u003cbr\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":246,"author":{"gitId":"-"},"content":"   \u003cimg src\u003d\"../images/StorageClassDiagram.png\" width\u003d\"550\" /\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":247,"author":{"gitId":"-"},"content":"   * :bulb: This may be a good time to read through the [`Storage` component section of the DG](../DeveloperGuide.html#storage-component)","lastModifiedDate":"2021-07-31"},{"lineNumber":248,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":249,"author":{"gitId":"-"},"content":"1. We can continue to step through until you reach the end of the `LogicManager#execute()` method and return to the `MainWindow#executeCommand()` method (the place where we put the original breakpoint).","lastModifiedDate":"2021-07-31"},{"lineNumber":250,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":251,"author":{"gitId":"-"},"content":"1. Stepping into `resultDisplay.setFeedbackToUser(commandResult.getFeedbackToUser());`, we end up in:","lastModifiedDate":"2021-07-31"},{"lineNumber":252,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":253,"author":{"gitId":"-"},"content":"    **`ResultDisplay#setFeedbackToUser()`**","lastModifiedDate":"2021-07-31"},{"lineNumber":254,"author":{"gitId":"-"},"content":"    ``` java","lastModifiedDate":"2020-05-23"},{"lineNumber":255,"author":{"gitId":"-"},"content":"    public void setFeedbackToUser(String feedbackToUser) {","lastModifiedDate":"2020-05-23"},{"lineNumber":256,"author":{"gitId":"-"},"content":"        requireNonNull(feedbackToUser);","lastModifiedDate":"2020-05-23"},{"lineNumber":257,"author":{"gitId":"-"},"content":"        resultDisplay.setText(feedbackToUser);","lastModifiedDate":"2020-05-23"},{"lineNumber":258,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2020-05-23"},{"lineNumber":259,"author":{"gitId":"-"},"content":"    ```","lastModifiedDate":"2020-05-23"},{"lineNumber":260,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":261,"author":{"gitId":"-"},"content":"1. Finally, you can step through until you reach the end of`MainWindow#executeCommand()`.\u003cbr\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":262,"author":{"gitId":"-"},"content":"   :bulb: This may be a good time to read through the [`UI` component section of the DG](../DeveloperGuide.html#ui-component)","lastModifiedDate":"2021-07-31"},{"lineNumber":263,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":264,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":265,"author":{"gitId":"-"},"content":"## Conclusion","lastModifiedDate":"2020-05-23"},{"lineNumber":266,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":267,"author":{"gitId":"-"},"content":"In this tutorial, we traced a valid edit command from raw user input to the result being displayed to the user. From this tutorial, you learned more about how the various components work together to produce a response to a user command.","lastModifiedDate":"2021-07-31"},{"lineNumber":268,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":269,"author":{"gitId":"-"},"content":"Here are some quick questions you can try to answer based on your execution path tracing. In some cases, you can do further tracing for the given commands to find exactly what happens.","lastModifiedDate":"2021-07-31"},{"lineNumber":270,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":271,"author":{"gitId":"-"},"content":"1.  In this tutorial, we traced the \"happy path\" (i.e., no errors). What","lastModifiedDate":"2020-05-23"},{"lineNumber":272,"author":{"gitId":"-"},"content":"    do you think will happen if we traced the following commands","lastModifiedDate":"2020-05-23"},{"lineNumber":273,"author":{"gitId":"-"},"content":"    instead? What exceptions do you think will be thrown (if any), where","lastModifiedDate":"2020-05-23"},{"lineNumber":274,"author":{"gitId":"-"},"content":"    will the exceptions be thrown and where will they be handled?","lastModifiedDate":"2020-05-23"},{"lineNumber":275,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":276,"author":{"gitId":"-"},"content":"    1.  `redit 1 n/Alice Yu`","lastModifiedDate":"2020-05-23"},{"lineNumber":277,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":278,"author":{"gitId":"-"},"content":"    2.  `edit 0 n/Alice Yu`","lastModifiedDate":"2020-05-23"},{"lineNumber":279,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":280,"author":{"gitId":"-"},"content":"    3.  `edit 1 n/Alex Yeoh`","lastModifiedDate":"2020-05-23"},{"lineNumber":281,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":282,"author":{"gitId":"-"},"content":"    4.  `edit 1`","lastModifiedDate":"2020-05-23"},{"lineNumber":283,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":284,"author":{"gitId":"-"},"content":"    5.  `edit 1 n/アリス ユー`","lastModifiedDate":"2020-05-23"},{"lineNumber":285,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":286,"author":{"gitId":"-"},"content":"    6.  `edit 1 t/one t/two t/three t/one`","lastModifiedDate":"2020-05-23"},{"lineNumber":287,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":288,"author":{"gitId":"-"},"content":"2.  What components will you have to modify to perform the following","lastModifiedDate":"2020-05-23"},{"lineNumber":289,"author":{"gitId":"-"},"content":"    enhancements to the application?","lastModifiedDate":"2020-05-23"},{"lineNumber":290,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":291,"author":{"gitId":"-"},"content":"    1.  Make command words case-insensitive","lastModifiedDate":"2020-05-23"},{"lineNumber":292,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":293,"author":{"gitId":"-"},"content":"    2.  Allow `delete` to remove more than one index at a time","lastModifiedDate":"2020-05-23"},{"lineNumber":294,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":295,"author":{"gitId":"-"},"content":"    3.  Save the address book in the CSV format instead","lastModifiedDate":"2020-05-23"},{"lineNumber":296,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":297,"author":{"gitId":"-"},"content":"    4.  Add a new command","lastModifiedDate":"2020-05-23"},{"lineNumber":298,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":299,"author":{"gitId":"-"},"content":"    5.  Add a new field to `Person`","lastModifiedDate":"2020-05-23"},{"lineNumber":300,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":301,"author":{"gitId":"-"},"content":"    6.  Add a new entity to the address book","lastModifiedDate":"2020-05-23"}],"authorContributionMap":{"-":300,"zxgoh":1}},{"path":"src/main/java/seedu/address/MainApp.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address;","lastModifiedDate":"2016-08-08"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.io.IOException;","lastModifiedDate":"2017-01-19"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-04-21"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.util.Optional;","lastModifiedDate":"2017-01-19"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.util.logging.Logger;","lastModifiedDate":"2017-01-19"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import javafx.application.Application;","lastModifiedDate":"2016-08-26"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import javafx.stage.Stage;","lastModifiedDate":"2016-08-26"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.Config;","lastModifiedDate":"2016-09-24"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.LogsCenter;","lastModifiedDate":"2016-09-24"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.Version;","lastModifiedDate":"2016-09-24"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import seedu.address.commons.exceptions.DataConversionException;","lastModifiedDate":"2016-09-24"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import seedu.address.commons.util.ConfigUtil;","lastModifiedDate":"2016-10-07"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import seedu.address.commons.util.StringUtil;","lastModifiedDate":"2016-09-24"},{"lineNumber":16,"author":{"gitId":"-"},"content":"import seedu.address.logic.Logic;","lastModifiedDate":"2016-09-25"},{"lineNumber":17,"author":{"gitId":"-"},"content":"import seedu.address.logic.LogicManager;","lastModifiedDate":"2016-09-24"},{"lineNumber":18,"author":{"gitId":"-"},"content":"import seedu.address.model.AddressBook;","lastModifiedDate":"2017-01-18"},{"lineNumber":19,"author":{"gitId":"-"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2017-01-18"},{"lineNumber":20,"author":{"gitId":"-"},"content":"import seedu.address.model.ModelManager;","lastModifiedDate":"2017-01-18"},{"lineNumber":21,"author":{"gitId":"-"},"content":"import seedu.address.model.ReadOnlyAddressBook;","lastModifiedDate":"2017-01-18"},{"lineNumber":22,"author":{"gitId":"-"},"content":"import seedu.address.model.ReadOnlyUserPrefs;","lastModifiedDate":"2018-12-06"},{"lineNumber":23,"author":{"gitId":"-"},"content":"import seedu.address.model.UserPrefs;","lastModifiedDate":"2017-01-18"},{"lineNumber":24,"author":{"gitId":"-"},"content":"import seedu.address.model.util.SampleDataUtil;","lastModifiedDate":"2016-12-20"},{"lineNumber":25,"author":{"gitId":"-"},"content":"import seedu.address.storage.AddressBookStorage;","lastModifiedDate":"2017-02-25"},{"lineNumber":26,"author":{"gitId":"-"},"content":"import seedu.address.storage.JsonAddressBookStorage;","lastModifiedDate":"2018-11-27"},{"lineNumber":27,"author":{"gitId":"-"},"content":"import seedu.address.storage.JsonUserPrefsStorage;","lastModifiedDate":"2017-02-25"},{"lineNumber":28,"author":{"gitId":"-"},"content":"import seedu.address.storage.Storage;","lastModifiedDate":"2016-09-25"},{"lineNumber":29,"author":{"gitId":"-"},"content":"import seedu.address.storage.StorageManager;","lastModifiedDate":"2016-08-08"},{"lineNumber":30,"author":{"gitId":"-"},"content":"import seedu.address.storage.UserPrefsStorage;","lastModifiedDate":"2017-02-25"},{"lineNumber":31,"author":{"gitId":"-"},"content":"import seedu.address.ui.Ui;","lastModifiedDate":"2016-09-25"},{"lineNumber":32,"author":{"gitId":"-"},"content":"import seedu.address.ui.UiManager;","lastModifiedDate":"2016-09-24"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":34,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-08"},{"lineNumber":35,"author":{"gitId":"-"},"content":" * Runs the application.","lastModifiedDate":"2019-02-08"},{"lineNumber":36,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-08"},{"lineNumber":37,"author":{"gitId":"-"},"content":"public class MainApp extends Application {","lastModifiedDate":"2016-08-08"},{"lineNumber":38,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":39,"author":{"gitId":"xzzz3"},"content":"    public static final Version VERSION \u003d new Version(1, 2, 1, true);","lastModifiedDate":"2022-03-24"},{"lineNumber":40,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    private static final Logger logger \u003d LogsCenter.getLogger(MainApp.class);","lastModifiedDate":"2017-04-01"},{"lineNumber":42,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-04-01"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    protected Ui ui;","lastModifiedDate":"2016-09-25"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    protected Logic logic;","lastModifiedDate":"2016-09-25"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    protected Storage storage;","lastModifiedDate":"2016-09-25"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    protected Model model;","lastModifiedDate":"2016-09-25"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    protected Config config;","lastModifiedDate":"2016-08-08"},{"lineNumber":48,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-08"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    public void init() throws Exception {","lastModifiedDate":"2016-08-08"},{"lineNumber":51,"author":{"gitId":"zxgoh"},"content":"        logger.info(\"\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d[ Initializing FoodOnWheels ]\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\");","lastModifiedDate":"2022-03-16"},{"lineNumber":52,"author":{"gitId":"-"},"content":"        super.init();","lastModifiedDate":"2016-08-08"},{"lineNumber":53,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":54,"author":{"gitId":"-"},"content":"        AppParameters appParameters \u003d AppParameters.parse(getParameters());","lastModifiedDate":"2018-04-21"},{"lineNumber":55,"author":{"gitId":"-"},"content":"        config \u003d initConfig(appParameters.getConfigPath());","lastModifiedDate":"2018-04-21"},{"lineNumber":56,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-25"},{"lineNumber":57,"author":{"gitId":"-"},"content":"        UserPrefsStorage userPrefsStorage \u003d new JsonUserPrefsStorage(config.getUserPrefsFilePath());","lastModifiedDate":"2017-02-25"},{"lineNumber":58,"author":{"gitId":"-"},"content":"        UserPrefs userPrefs \u003d initPrefs(userPrefsStorage);","lastModifiedDate":"2018-12-06"},{"lineNumber":59,"author":{"gitId":"-"},"content":"        AddressBookStorage addressBookStorage \u003d new JsonAddressBookStorage(userPrefs.getAddressBookFilePath());","lastModifiedDate":"2018-11-27"},{"lineNumber":60,"author":{"gitId":"-"},"content":"        storage \u003d new StorageManager(addressBookStorage, userPrefsStorage);","lastModifiedDate":"2017-02-25"},{"lineNumber":61,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":62,"author":{"gitId":"-"},"content":"        initLogging(config);","lastModifiedDate":"2016-09-24"},{"lineNumber":63,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":64,"author":{"gitId":"-"},"content":"        model \u003d initModelManager(storage, userPrefs);","lastModifiedDate":"2016-09-25"},{"lineNumber":65,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":66,"author":{"gitId":"-"},"content":"        logic \u003d new LogicManager(model, storage);","lastModifiedDate":"2018-12-09"},{"lineNumber":67,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":68,"author":{"gitId":"-"},"content":"        ui \u003d new UiManager(logic);","lastModifiedDate":"2018-12-08"},{"lineNumber":69,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":70,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":71,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-08-16"},{"lineNumber":72,"author":{"gitId":"-"},"content":"     * Returns a {@code ModelManager} with the data from {@code storage}\u0027s address book and {@code userPrefs}. \u003cbr\u003e","lastModifiedDate":"2017-08-16"},{"lineNumber":73,"author":{"gitId":"-"},"content":"     * The data from the sample address book will be used instead if {@code storage}\u0027s address book is not found,","lastModifiedDate":"2017-08-16"},{"lineNumber":74,"author":{"gitId":"-"},"content":"     * or an empty address book will be used instead if errors occur when reading {@code storage}\u0027s address book.","lastModifiedDate":"2017-08-16"},{"lineNumber":75,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-08-16"},{"lineNumber":76,"author":{"gitId":"-"},"content":"    private Model initModelManager(Storage storage, ReadOnlyUserPrefs userPrefs) {","lastModifiedDate":"2018-12-06"},{"lineNumber":77,"author":{"gitId":"-"},"content":"        Optional\u003cReadOnlyAddressBook\u003e addressBookOptional;","lastModifiedDate":"2016-09-24"},{"lineNumber":78,"author":{"gitId":"-"},"content":"        ReadOnlyAddressBook initialData;","lastModifiedDate":"2016-09-24"},{"lineNumber":79,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2016-09-24"},{"lineNumber":80,"author":{"gitId":"-"},"content":"            addressBookOptional \u003d storage.readAddressBook();","lastModifiedDate":"2016-09-25"},{"lineNumber":81,"author":{"gitId":"-"},"content":"            if (!addressBookOptional.isPresent()) {","lastModifiedDate":"2016-09-24"},{"lineNumber":82,"author":{"gitId":"-"},"content":"                logger.info(\"Data file not found. Will be starting with a sample AddressBook\");","lastModifiedDate":"2016-12-20"},{"lineNumber":83,"author":{"gitId":"-"},"content":"            }","lastModifiedDate":"2016-09-24"},{"lineNumber":84,"author":{"gitId":"-"},"content":"            initialData \u003d addressBookOptional.orElseGet(SampleDataUtil::getSampleAddressBook);","lastModifiedDate":"2016-12-20"},{"lineNumber":85,"author":{"gitId":"-"},"content":"        } catch (DataConversionException e) {","lastModifiedDate":"2016-09-24"},{"lineNumber":86,"author":{"gitId":"-"},"content":"            logger.warning(\"Data file not in the correct format. Will be starting with an empty AddressBook\");","lastModifiedDate":"2016-09-24"},{"lineNumber":87,"author":{"gitId":"-"},"content":"            initialData \u003d new AddressBook();","lastModifiedDate":"2016-09-24"},{"lineNumber":88,"author":{"gitId":"-"},"content":"        } catch (IOException e) {","lastModifiedDate":"2016-10-01"},{"lineNumber":89,"author":{"gitId":"-"},"content":"            logger.warning(\"Problem while reading from the file. Will be starting with an empty AddressBook\");","lastModifiedDate":"2016-10-12"},{"lineNumber":90,"author":{"gitId":"-"},"content":"            initialData \u003d new AddressBook();","lastModifiedDate":"2016-09-24"},{"lineNumber":91,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-08-08"},{"lineNumber":92,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":93,"author":{"gitId":"-"},"content":"        return new ModelManager(initialData, userPrefs);","lastModifiedDate":"2016-09-25"},{"lineNumber":94,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":95,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":96,"author":{"gitId":"-"},"content":"    private void initLogging(Config config) {","lastModifiedDate":"2016-09-24"},{"lineNumber":97,"author":{"gitId":"-"},"content":"        LogsCenter.init(config);","lastModifiedDate":"2016-09-23"},{"lineNumber":98,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":99,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":100,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-08-16"},{"lineNumber":101,"author":{"gitId":"-"},"content":"     * Returns a {@code Config} using the file at {@code configFilePath}. \u003cbr\u003e","lastModifiedDate":"2017-08-16"},{"lineNumber":102,"author":{"gitId":"-"},"content":"     * The default file path {@code Config#DEFAULT_CONFIG_FILE} will be used instead","lastModifiedDate":"2017-08-16"},{"lineNumber":103,"author":{"gitId":"-"},"content":"     * if {@code configFilePath} is null.","lastModifiedDate":"2017-08-16"},{"lineNumber":104,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-08-16"},{"lineNumber":105,"author":{"gitId":"-"},"content":"    protected Config initConfig(Path configFilePath) {","lastModifiedDate":"2018-04-21"},{"lineNumber":106,"author":{"gitId":"-"},"content":"        Config initializedConfig;","lastModifiedDate":"2016-09-24"},{"lineNumber":107,"author":{"gitId":"-"},"content":"        Path configFilePathUsed;","lastModifiedDate":"2018-04-21"},{"lineNumber":108,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":109,"author":{"gitId":"-"},"content":"        configFilePathUsed \u003d Config.DEFAULT_CONFIG_FILE;","lastModifiedDate":"2016-09-24"},{"lineNumber":110,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":111,"author":{"gitId":"-"},"content":"        if (configFilePath !\u003d null) {","lastModifiedDate":"2016-09-24"},{"lineNumber":112,"author":{"gitId":"-"},"content":"            logger.info(\"Custom Config file specified \" + configFilePath);","lastModifiedDate":"2016-09-24"},{"lineNumber":113,"author":{"gitId":"-"},"content":"            configFilePathUsed \u003d configFilePath;","lastModifiedDate":"2016-09-24"},{"lineNumber":114,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-08-08"},{"lineNumber":115,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":116,"author":{"gitId":"-"},"content":"        logger.info(\"Using config file : \" + configFilePathUsed);","lastModifiedDate":"2016-09-24"},{"lineNumber":117,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":118,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2016-09-24"},{"lineNumber":119,"author":{"gitId":"-"},"content":"            Optional\u003cConfig\u003e configOptional \u003d ConfigUtil.readConfig(configFilePathUsed);","lastModifiedDate":"2016-09-24"},{"lineNumber":120,"author":{"gitId":"-"},"content":"            initializedConfig \u003d configOptional.orElse(new Config());","lastModifiedDate":"2016-09-24"},{"lineNumber":121,"author":{"gitId":"-"},"content":"        } catch (DataConversionException e) {","lastModifiedDate":"2016-09-24"},{"lineNumber":122,"author":{"gitId":"-"},"content":"            logger.warning(\"Config file at \" + configFilePathUsed + \" is not in the correct format. \"","lastModifiedDate":"2017-05-22"},{"lineNumber":123,"author":{"gitId":"-"},"content":"                    + \"Using default config properties\");","lastModifiedDate":"2017-05-22"},{"lineNumber":124,"author":{"gitId":"-"},"content":"            initializedConfig \u003d new Config();","lastModifiedDate":"2016-09-24"},{"lineNumber":125,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-09-24"},{"lineNumber":126,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":127,"author":{"gitId":"-"},"content":"        //Update config file in case it was missing to begin with or there are new/unused fields","lastModifiedDate":"2016-09-24"},{"lineNumber":128,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2016-09-24"},{"lineNumber":129,"author":{"gitId":"-"},"content":"            ConfigUtil.saveConfig(initializedConfig, configFilePathUsed);","lastModifiedDate":"2016-09-24"},{"lineNumber":130,"author":{"gitId":"-"},"content":"        } catch (IOException e) {","lastModifiedDate":"2016-09-24"},{"lineNumber":131,"author":{"gitId":"-"},"content":"            logger.warning(\"Failed to save config file : \" + StringUtil.getDetails(e));","lastModifiedDate":"2016-09-24"},{"lineNumber":132,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-09-24"},{"lineNumber":133,"author":{"gitId":"-"},"content":"        return initializedConfig;","lastModifiedDate":"2016-09-24"},{"lineNumber":134,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":135,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":136,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-08-16"},{"lineNumber":137,"author":{"gitId":"-"},"content":"     * Returns a {@code UserPrefs} using the file at {@code storage}\u0027s user prefs file path,","lastModifiedDate":"2017-08-16"},{"lineNumber":138,"author":{"gitId":"-"},"content":"     * or a new {@code UserPrefs} with default configuration if errors occur when","lastModifiedDate":"2017-08-16"},{"lineNumber":139,"author":{"gitId":"-"},"content":"     * reading from the file.","lastModifiedDate":"2017-08-16"},{"lineNumber":140,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-08-16"},{"lineNumber":141,"author":{"gitId":"-"},"content":"    protected UserPrefs initPrefs(UserPrefsStorage storage) {","lastModifiedDate":"2017-02-25"},{"lineNumber":142,"author":{"gitId":"-"},"content":"        Path prefsFilePath \u003d storage.getUserPrefsFilePath();","lastModifiedDate":"2018-04-21"},{"lineNumber":143,"author":{"gitId":"-"},"content":"        logger.info(\"Using prefs file : \" + prefsFilePath);","lastModifiedDate":"2016-09-24"},{"lineNumber":144,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":145,"author":{"gitId":"-"},"content":"        UserPrefs initializedPrefs;","lastModifiedDate":"2016-09-24"},{"lineNumber":146,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2016-09-24"},{"lineNumber":147,"author":{"gitId":"-"},"content":"            Optional\u003cUserPrefs\u003e prefsOptional \u003d storage.readUserPrefs();","lastModifiedDate":"2016-09-25"},{"lineNumber":148,"author":{"gitId":"-"},"content":"            initializedPrefs \u003d prefsOptional.orElse(new UserPrefs());","lastModifiedDate":"2016-09-24"},{"lineNumber":149,"author":{"gitId":"-"},"content":"        } catch (DataConversionException e) {","lastModifiedDate":"2016-09-24"},{"lineNumber":150,"author":{"gitId":"-"},"content":"            logger.warning(\"UserPrefs file at \" + prefsFilePath + \" is not in the correct format. \"","lastModifiedDate":"2017-05-22"},{"lineNumber":151,"author":{"gitId":"-"},"content":"                    + \"Using default user prefs\");","lastModifiedDate":"2017-05-22"},{"lineNumber":152,"author":{"gitId":"-"},"content":"            initializedPrefs \u003d new UserPrefs();","lastModifiedDate":"2016-09-24"},{"lineNumber":153,"author":{"gitId":"-"},"content":"        } catch (IOException e) {","lastModifiedDate":"2016-09-24"},{"lineNumber":154,"author":{"gitId":"-"},"content":"            logger.warning(\"Problem while reading from the file. Will be starting with an empty AddressBook\");","lastModifiedDate":"2016-10-12"},{"lineNumber":155,"author":{"gitId":"-"},"content":"            initializedPrefs \u003d new UserPrefs();","lastModifiedDate":"2016-09-24"},{"lineNumber":156,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-08-08"},{"lineNumber":157,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":158,"author":{"gitId":"-"},"content":"        //Update prefs file in case it was missing to begin with or there are new/unused fields","lastModifiedDate":"2016-09-24"},{"lineNumber":159,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2016-09-24"},{"lineNumber":160,"author":{"gitId":"-"},"content":"            storage.saveUserPrefs(initializedPrefs);","lastModifiedDate":"2016-09-25"},{"lineNumber":161,"author":{"gitId":"-"},"content":"        } catch (IOException e) {","lastModifiedDate":"2016-09-24"},{"lineNumber":162,"author":{"gitId":"-"},"content":"            logger.warning(\"Failed to save config file : \" + StringUtil.getDetails(e));","lastModifiedDate":"2016-09-24"},{"lineNumber":163,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-09-24"},{"lineNumber":164,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":165,"author":{"gitId":"-"},"content":"        return initializedPrefs;","lastModifiedDate":"2016-09-24"},{"lineNumber":166,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":167,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":168,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-08"},{"lineNumber":169,"author":{"gitId":"-"},"content":"    public void start(Stage primaryStage) {","lastModifiedDate":"2016-08-08"},{"lineNumber":170,"author":{"gitId":"-"},"content":"        logger.info(\"Starting AddressBook \" + MainApp.VERSION);","lastModifiedDate":"2016-09-29"},{"lineNumber":171,"author":{"gitId":"-"},"content":"        ui.start(primaryStage);","lastModifiedDate":"2016-09-25"},{"lineNumber":172,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":173,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":174,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-08"},{"lineNumber":175,"author":{"gitId":"-"},"content":"    public void stop() {","lastModifiedDate":"2016-08-08"},{"lineNumber":176,"author":{"gitId":"zxgoh"},"content":"        logger.info(\"\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d [ Stopping FoodOnWheels ] \u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\");","lastModifiedDate":"2022-03-16"},{"lineNumber":177,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2016-09-24"},{"lineNumber":178,"author":{"gitId":"-"},"content":"            storage.saveUserPrefs(model.getUserPrefs());","lastModifiedDate":"2018-12-06"},{"lineNumber":179,"author":{"gitId":"-"},"content":"        } catch (IOException e) {","lastModifiedDate":"2016-09-24"},{"lineNumber":180,"author":{"gitId":"-"},"content":"            logger.severe(\"Failed to save preferences \" + StringUtil.getDetails(e));","lastModifiedDate":"2016-09-24"},{"lineNumber":181,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-08-08"},{"lineNumber":182,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-26"},{"lineNumber":183,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"}],"authorContributionMap":{"xzzz3":1,"-":180,"zxgoh":2}},{"path":"src/main/java/seedu/address/commons/core/Messages.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.commons.core;","lastModifiedDate":"2016-09-23"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":3,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-24"},{"lineNumber":4,"author":{"gitId":"-"},"content":" * Container for user visible messages.","lastModifiedDate":"2016-08-24"},{"lineNumber":5,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-24"},{"lineNumber":6,"author":{"gitId":"-"},"content":"public class Messages {","lastModifiedDate":"2016-08-24"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":8,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_UNKNOWN_COMMAND \u003d \"Unknown command\";","lastModifiedDate":"2016-09-21"},{"lineNumber":9,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_INVALID_COMMAND_FORMAT \u003d \"Invalid command format! \\n%1$s\";","lastModifiedDate":"2016-08-24"},{"lineNumber":10,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_INVALID_PERSON_DISPLAYED_INDEX \u003d \"The person index provided is invalid\";","lastModifiedDate":"2022-03-16"},{"lineNumber":11,"author":{"gitId":"zxgoh"},"content":"    public static final String MESSAGE_INVALID_ORDER_DISPLAYED_INDEX \u003d \"The order index provided is invalid\";","lastModifiedDate":"2022-03-16"},{"lineNumber":12,"author":{"gitId":"zxgoh"},"content":"    public static final String MESSAGE_INVALID_DRIVER_DISPLAYED_INDEX \u003d \"The driver index provided is invalid\";","lastModifiedDate":"2022-03-16"},{"lineNumber":13,"author":{"gitId":"zxgoh"},"content":"    public static final String MESSAGE_INVALID_DISH_DISPLAYED_INDEX \u003d \"The dish index provided is invalid\";","lastModifiedDate":"2022-03-16"},{"lineNumber":14,"author":{"gitId":"zxgoh"},"content":"    public static final String MESSAGE_ORDERS_LISTED_OVERVIEW \u003d \"%1$d orders listed!\";","lastModifiedDate":"2022-03-16"},{"lineNumber":15,"author":{"gitId":"zxgoh"},"content":"    public static final String MESSAGE_DRIVERS_LISTED_OVERVIEW \u003d \"%1$d drivers listed!\";","lastModifiedDate":"2022-03-16"},{"lineNumber":16,"author":{"gitId":"zxgoh"},"content":"    public static final String MESSAGE_INVALID_CUSTOMER_DISPLAYED_INDEX \u003d \"The customer index provided is invalid\";","lastModifiedDate":"2022-03-14"},{"lineNumber":17,"author":{"gitId":"zxgoh"},"content":"    public static final String MESSAGE_CUSTOMERS_LISTED_OVERVIEW \u003d \"%1$d customers listed!\";","lastModifiedDate":"2022-03-14"},{"lineNumber":18,"author":{"gitId":"xzzz3"},"content":"    public static final String MESSAGE_INVALID_ORDER_STATUS \u003d \"The order status provided is invalid\";","lastModifiedDate":"2022-03-28"},{"lineNumber":19,"author":{"gitId":"xzzz3"},"content":"    public static final String MESSAGE_INVALID_CUSTOMER_PHONE \u003d \"The phone number provided does not \"","lastModifiedDate":"2022-03-29"},{"lineNumber":20,"author":{"gitId":"xzzz3"},"content":"            + \"belong to an existing customer. Please first create the customer.\";","lastModifiedDate":"2022-03-29"},{"lineNumber":21,"author":{"gitId":"xzzz3"},"content":"    public static final String MESSAGE_NO_FREE_DRIVER \u003d \"There is no free driver right now\";","lastModifiedDate":"2022-03-29"},{"lineNumber":22,"author":{"gitId":"xzzz3"},"content":"    public static final String MESSAGE_INVALID_DISH_INPUT \u003d \"Some of the dishes provided does not \"","lastModifiedDate":"2022-03-29"},{"lineNumber":23,"author":{"gitId":"xzzz3"},"content":"            + \"match any of the existing dishes. Please first create the dish.\";","lastModifiedDate":"2022-03-29"},{"lineNumber":24,"author":{"gitId":"xzzz3"},"content":"    public static final String MESSAGE_DRIVER_BUSY \u003d \"The selected driver is currently busy. \"","lastModifiedDate":"2022-03-29"},{"lineNumber":25,"author":{"gitId":"xzzz3"},"content":"            + \"Please create a new order.\";","lastModifiedDate":"2022-03-29"},{"lineNumber":26,"author":{"gitId":"xzzz3"},"content":"    public static final String MESSAGE_NO_ORDERS_FOUND \u003d \"There are no orders that match the provided phone number.\";","lastModifiedDate":"2022-03-29"},{"lineNumber":27,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-24"}],"authorContributionMap":{"xzzz3":9,"-":11,"zxgoh":7}},{"path":"src/main/java/seedu/address/commons/core/Version.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.commons.core;","lastModifiedDate":"2016-09-23"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.util.regex.Matcher;","lastModifiedDate":"2016-08-08"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import java.util.regex.Pattern;","lastModifiedDate":"2016-08-08"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import com.fasterxml.jackson.annotation.JsonCreator;","lastModifiedDate":"2017-01-19"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import com.fasterxml.jackson.annotation.JsonValue;","lastModifiedDate":"2017-01-19"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":9,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-08"},{"lineNumber":10,"author":{"gitId":"-"},"content":" * Represents a version with major, minor and patch number","lastModifiedDate":"2016-08-08"},{"lineNumber":11,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-08"},{"lineNumber":12,"author":{"gitId":"-"},"content":"public class Version implements Comparable\u003cVersion\u003e {","lastModifiedDate":"2016-08-08"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":14,"author":{"gitId":"-"},"content":"    public static final String VERSION_REGEX \u003d \"V(\\\\d+)\\\\.(\\\\d+)\\\\.(\\\\d+)(ea)?\";","lastModifiedDate":"2016-08-08"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    private static final String EXCEPTION_STRING_NOT_VERSION \u003d \"String is not a valid Version. %s\";","lastModifiedDate":"2016-08-08"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    private static final Pattern VERSION_PATTERN \u003d Pattern.compile(VERSION_REGEX);","lastModifiedDate":"2016-08-08"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    private final int major;","lastModifiedDate":"2016-08-08"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    private final int minor;","lastModifiedDate":"2016-08-08"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    private final int patch;","lastModifiedDate":"2016-08-08"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    private final boolean isEarlyAccess;","lastModifiedDate":"2016-08-08"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2020-05-27"},{"lineNumber":26,"author":{"gitId":"-"},"content":"     * Constructs a {@code Version} with the given version details.","lastModifiedDate":"2020-05-27"},{"lineNumber":27,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2020-05-27"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    public Version(int major, int minor, int patch, boolean isEarlyAccess) {","lastModifiedDate":"2016-08-08"},{"lineNumber":29,"author":{"gitId":"-"},"content":"        this.major \u003d major;","lastModifiedDate":"2016-08-08"},{"lineNumber":30,"author":{"gitId":"-"},"content":"        this.minor \u003d minor;","lastModifiedDate":"2016-08-08"},{"lineNumber":31,"author":{"gitId":"-"},"content":"        this.patch \u003d patch;","lastModifiedDate":"2016-08-08"},{"lineNumber":32,"author":{"gitId":"-"},"content":"        this.isEarlyAccess \u003d isEarlyAccess;","lastModifiedDate":"2016-08-08"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    public int getMajor() {","lastModifiedDate":"2016-08-08"},{"lineNumber":36,"author":{"gitId":"-"},"content":"        return major;","lastModifiedDate":"2016-08-08"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":38,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    public int getMinor() {","lastModifiedDate":"2016-08-08"},{"lineNumber":40,"author":{"gitId":"-"},"content":"        return minor;","lastModifiedDate":"2016-08-08"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":42,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    public int getPatch() {","lastModifiedDate":"2016-08-08"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        return patch;","lastModifiedDate":"2016-08-08"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":46,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    public boolean isEarlyAccess() {","lastModifiedDate":"2016-08-08"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        return isEarlyAccess;","lastModifiedDate":"2016-08-08"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":50,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-08"},{"lineNumber":52,"author":{"gitId":"-"},"content":"     * Parses a version number string in the format V1.2.3.","lastModifiedDate":"2016-08-08"},{"lineNumber":53,"author":{"gitId":"-"},"content":"     * @param versionString version number string","lastModifiedDate":"2016-08-08"},{"lineNumber":54,"author":{"gitId":"-"},"content":"     * @return a Version object","lastModifiedDate":"2016-08-08"},{"lineNumber":55,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-08"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    @JsonCreator","lastModifiedDate":"2016-08-08"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    public static Version fromString(String versionString) throws IllegalArgumentException {","lastModifiedDate":"2016-08-08"},{"lineNumber":58,"author":{"gitId":"-"},"content":"        Matcher versionMatcher \u003d VERSION_PATTERN.matcher(versionString);","lastModifiedDate":"2016-08-08"},{"lineNumber":59,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":60,"author":{"gitId":"-"},"content":"        if (!versionMatcher.find()) {","lastModifiedDate":"2016-08-08"},{"lineNumber":61,"author":{"gitId":"-"},"content":"            throw new IllegalArgumentException(String.format(EXCEPTION_STRING_NOT_VERSION, versionString));","lastModifiedDate":"2016-08-08"},{"lineNumber":62,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-08-08"},{"lineNumber":63,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":64,"author":{"gitId":"-"},"content":"        return new Version(Integer.parseInt(versionMatcher.group(1)),","lastModifiedDate":"2016-08-08"},{"lineNumber":65,"author":{"gitId":"-"},"content":"                Integer.parseInt(versionMatcher.group(2)),","lastModifiedDate":"2016-08-08"},{"lineNumber":66,"author":{"gitId":"-"},"content":"                Integer.parseInt(versionMatcher.group(3)),","lastModifiedDate":"2016-08-08"},{"lineNumber":67,"author":{"gitId":"zxgoh"},"content":"                versionMatcher.group(4) !\u003d null);","lastModifiedDate":"2022-03-16"},{"lineNumber":68,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":69,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":70,"author":{"gitId":"-"},"content":"    @JsonValue","lastModifiedDate":"2016-08-08"},{"lineNumber":71,"author":{"gitId":"-"},"content":"    public String toString() {","lastModifiedDate":"2016-08-08"},{"lineNumber":72,"author":{"gitId":"-"},"content":"        return String.format(\"V%d.%d.%d%s\", major, minor, patch, isEarlyAccess ? \"ea\" : \"\");","lastModifiedDate":"2016-08-08"},{"lineNumber":73,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":74,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":75,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-08"},{"lineNumber":76,"author":{"gitId":"-"},"content":"    public int compareTo(Version other) {","lastModifiedDate":"2016-08-08"},{"lineNumber":77,"author":{"gitId":"-"},"content":"        if (major !\u003d other.major) {","lastModifiedDate":"2018-08-14"},{"lineNumber":78,"author":{"gitId":"-"},"content":"            return major - other.major;","lastModifiedDate":"2018-08-14"},{"lineNumber":79,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-22"},{"lineNumber":80,"author":{"gitId":"-"},"content":"        if (minor !\u003d other.minor) {","lastModifiedDate":"2018-08-14"},{"lineNumber":81,"author":{"gitId":"-"},"content":"            return minor - other.minor;","lastModifiedDate":"2018-08-14"},{"lineNumber":82,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-22"},{"lineNumber":83,"author":{"gitId":"-"},"content":"        if (patch !\u003d other.patch) {","lastModifiedDate":"2018-08-14"},{"lineNumber":84,"author":{"gitId":"-"},"content":"            return patch - other.patch;","lastModifiedDate":"2018-08-14"},{"lineNumber":85,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-22"},{"lineNumber":86,"author":{"gitId":"-"},"content":"        if (isEarlyAccess \u003d\u003d other.isEarlyAccess()) {","lastModifiedDate":"2018-08-14"},{"lineNumber":87,"author":{"gitId":"-"},"content":"            return 0;","lastModifiedDate":"2017-05-22"},{"lineNumber":88,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-22"},{"lineNumber":89,"author":{"gitId":"-"},"content":"        if (isEarlyAccess) {","lastModifiedDate":"2018-08-14"},{"lineNumber":90,"author":{"gitId":"-"},"content":"            return -1;","lastModifiedDate":"2017-05-22"},{"lineNumber":91,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-22"},{"lineNumber":92,"author":{"gitId":"-"},"content":"        return 1;","lastModifiedDate":"2017-05-22"},{"lineNumber":93,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":94,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":95,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-08"},{"lineNumber":96,"author":{"gitId":"-"},"content":"    public boolean equals(Object obj) {","lastModifiedDate":"2016-08-08"},{"lineNumber":97,"author":{"gitId":"-"},"content":"        if (obj \u003d\u003d null) {","lastModifiedDate":"2016-08-08"},{"lineNumber":98,"author":{"gitId":"-"},"content":"            return false;","lastModifiedDate":"2016-08-08"},{"lineNumber":99,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-08-08"},{"lineNumber":100,"author":{"gitId":"-"},"content":"        if (!(obj instanceof Version)) {","lastModifiedDate":"2016-08-08"},{"lineNumber":101,"author":{"gitId":"-"},"content":"            return false;","lastModifiedDate":"2016-08-08"},{"lineNumber":102,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-08-08"},{"lineNumber":103,"author":{"gitId":"-"},"content":"        final Version other \u003d (Version) obj;","lastModifiedDate":"2016-08-08"},{"lineNumber":104,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":105,"author":{"gitId":"-"},"content":"        return compareTo(other) \u003d\u003d 0;","lastModifiedDate":"2018-08-14"},{"lineNumber":106,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":107,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":108,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-08"},{"lineNumber":109,"author":{"gitId":"-"},"content":"    public int hashCode() {","lastModifiedDate":"2016-08-08"},{"lineNumber":110,"author":{"gitId":"-"},"content":"        String hash \u003d String.format(\"%03d%03d%03d\", major, minor, patch);","lastModifiedDate":"2016-08-08"},{"lineNumber":111,"author":{"gitId":"-"},"content":"        if (!isEarlyAccess) {","lastModifiedDate":"2016-08-08"},{"lineNumber":112,"author":{"gitId":"-"},"content":"            hash \u003d \"1\" + hash;","lastModifiedDate":"2016-08-08"},{"lineNumber":113,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-08-08"},{"lineNumber":114,"author":{"gitId":"-"},"content":"        return Integer.parseInt(hash);","lastModifiedDate":"2016-08-08"},{"lineNumber":115,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":116,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"}],"authorContributionMap":{"-":115,"zxgoh":1}},{"path":"src/main/java/seedu/address/commons/core/index/Index.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.commons.core.index;","lastModifiedDate":"2017-05-24"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-24"},{"lineNumber":3,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-05-24"},{"lineNumber":4,"author":{"gitId":"-"},"content":" * Represents a zero-based or one-based index.","lastModifiedDate":"2017-05-24"},{"lineNumber":5,"author":{"gitId":"-"},"content":" *","lastModifiedDate":"2017-05-24"},{"lineNumber":6,"author":{"gitId":"-"},"content":" * {@code Index} should be used right from the start (when parsing in a new user input), so that if the current","lastModifiedDate":"2017-05-24"},{"lineNumber":7,"author":{"gitId":"-"},"content":" * component wants to communicate with another component, it can send an {@code Index} to avoid having to know what","lastModifiedDate":"2017-05-24"},{"lineNumber":8,"author":{"gitId":"-"},"content":" * base the other component is using for its index. However, after receiving the {@code Index}, that component can","lastModifiedDate":"2017-05-24"},{"lineNumber":9,"author":{"gitId":"-"},"content":" * convert it back to an int if the index will not be passed to a different component again.","lastModifiedDate":"2017-05-24"},{"lineNumber":10,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-05-24"},{"lineNumber":11,"author":{"gitId":"-"},"content":"public class Index {","lastModifiedDate":"2017-05-24"},{"lineNumber":12,"author":{"gitId":"zxgoh"},"content":"    private final int zeroBasedIndex;","lastModifiedDate":"2022-03-16"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-24"},{"lineNumber":14,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-05-24"},{"lineNumber":15,"author":{"gitId":"-"},"content":"     * Index can only be created by calling {@link Index#fromZeroBased(int)} or","lastModifiedDate":"2017-05-24"},{"lineNumber":16,"author":{"gitId":"-"},"content":"     * {@link Index#fromOneBased(int)}.","lastModifiedDate":"2017-05-24"},{"lineNumber":17,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-05-24"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    private Index(int zeroBasedIndex) {","lastModifiedDate":"2017-05-24"},{"lineNumber":19,"author":{"gitId":"-"},"content":"        if (zeroBasedIndex \u003c 0) {","lastModifiedDate":"2017-05-24"},{"lineNumber":20,"author":{"gitId":"-"},"content":"            throw new IndexOutOfBoundsException();","lastModifiedDate":"2017-05-24"},{"lineNumber":21,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-24"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-24"},{"lineNumber":23,"author":{"gitId":"-"},"content":"        this.zeroBasedIndex \u003d zeroBasedIndex;","lastModifiedDate":"2017-05-24"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-24"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-24"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    public int getZeroBased() {","lastModifiedDate":"2017-05-24"},{"lineNumber":27,"author":{"gitId":"-"},"content":"        return zeroBasedIndex;","lastModifiedDate":"2017-05-24"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-24"},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-24"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    public int getOneBased() {","lastModifiedDate":"2017-05-24"},{"lineNumber":31,"author":{"gitId":"-"},"content":"        return zeroBasedIndex + 1;","lastModifiedDate":"2017-05-24"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-24"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-24"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-05-24"},{"lineNumber":35,"author":{"gitId":"-"},"content":"     * Creates a new {@code Index} using a zero-based index.","lastModifiedDate":"2017-05-24"},{"lineNumber":36,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-05-24"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    public static Index fromZeroBased(int zeroBasedIndex) {","lastModifiedDate":"2017-05-24"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        return new Index(zeroBasedIndex);","lastModifiedDate":"2017-05-24"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-24"},{"lineNumber":40,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-24"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-05-24"},{"lineNumber":42,"author":{"gitId":"-"},"content":"     * Creates a new {@code Index} using a one-based index.","lastModifiedDate":"2017-05-24"},{"lineNumber":43,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-05-24"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    public static Index fromOneBased(int oneBasedIndex) {","lastModifiedDate":"2017-05-24"},{"lineNumber":45,"author":{"gitId":"-"},"content":"        return new Index(oneBasedIndex - 1);","lastModifiedDate":"2017-05-24"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-24"},{"lineNumber":47,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-24"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2017-05-24"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2017-05-24"},{"lineNumber":50,"author":{"gitId":"-"},"content":"        return other \u003d\u003d this // short circuit if same object","lastModifiedDate":"2017-05-24"},{"lineNumber":51,"author":{"gitId":"-"},"content":"                || (other instanceof Index // instanceof handles nulls","lastModifiedDate":"2017-05-24"},{"lineNumber":52,"author":{"gitId":"-"},"content":"                \u0026\u0026 zeroBasedIndex \u003d\u003d ((Index) other).zeroBasedIndex); // state check","lastModifiedDate":"2018-08-14"},{"lineNumber":53,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-24"},{"lineNumber":54,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-05-24"}],"authorContributionMap":{"-":53,"zxgoh":1}},{"path":"src/main/java/seedu/address/commons/util/JsonUtil.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.commons.util;","lastModifiedDate":"2016-09-23"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2017-05-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.io.IOException;","lastModifiedDate":"2017-01-19"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.nio.file.Files;","lastModifiedDate":"2018-04-21"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-04-21"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import java.util.Optional;","lastModifiedDate":"2017-01-19"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import java.util.logging.Level;","lastModifiedDate":"2017-01-19"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import java.util.logging.Logger;","lastModifiedDate":"2017-01-19"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import com.fasterxml.jackson.annotation.JsonAutoDetect;","lastModifiedDate":"2016-08-08"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import com.fasterxml.jackson.annotation.PropertyAccessor;","lastModifiedDate":"2016-08-08"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import com.fasterxml.jackson.core.JsonProcessingException;","lastModifiedDate":"2016-08-08"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import com.fasterxml.jackson.databind.DeserializationContext;","lastModifiedDate":"2016-08-08"},{"lineNumber":16,"author":{"gitId":"-"},"content":"import com.fasterxml.jackson.databind.DeserializationFeature;","lastModifiedDate":"2016-09-24"},{"lineNumber":17,"author":{"gitId":"-"},"content":"import com.fasterxml.jackson.databind.ObjectMapper;","lastModifiedDate":"2016-08-08"},{"lineNumber":18,"author":{"gitId":"-"},"content":"import com.fasterxml.jackson.databind.SerializationFeature;","lastModifiedDate":"2016-08-08"},{"lineNumber":19,"author":{"gitId":"-"},"content":"import com.fasterxml.jackson.databind.deser.std.FromStringDeserializer;","lastModifiedDate":"2016-08-08"},{"lineNumber":20,"author":{"gitId":"-"},"content":"import com.fasterxml.jackson.databind.module.SimpleModule;","lastModifiedDate":"2016-08-08"},{"lineNumber":21,"author":{"gitId":"-"},"content":"import com.fasterxml.jackson.databind.ser.std.ToStringSerializer;","lastModifiedDate":"2016-08-08"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":23,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.LogsCenter;","lastModifiedDate":"2016-10-07"},{"lineNumber":24,"author":{"gitId":"-"},"content":"import seedu.address.commons.exceptions.DataConversionException;","lastModifiedDate":"2016-10-07"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":26,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-08"},{"lineNumber":27,"author":{"gitId":"-"},"content":" * Converts a Java object instance to JSON and vice versa","lastModifiedDate":"2016-08-08"},{"lineNumber":28,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-08"},{"lineNumber":29,"author":{"gitId":"-"},"content":"public class JsonUtil {","lastModifiedDate":"2016-08-08"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-07"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    private static final Logger logger \u003d LogsCenter.getLogger(JsonUtil.class);","lastModifiedDate":"2016-10-07"},{"lineNumber":32,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-07"},{"lineNumber":33,"author":{"gitId":"zxgoh"},"content":"    private static final ObjectMapper objectMapper \u003d new ObjectMapper().findAndRegisterModules()","lastModifiedDate":"2022-03-16"},{"lineNumber":34,"author":{"gitId":"-"},"content":"            .configure(SerializationFeature.WRITE_DATES_AS_TIMESTAMPS, false)","lastModifiedDate":"2016-10-19"},{"lineNumber":35,"author":{"gitId":"-"},"content":"            .configure(DeserializationFeature.FAIL_ON_UNKNOWN_PROPERTIES, false)","lastModifiedDate":"2016-10-19"},{"lineNumber":36,"author":{"gitId":"-"},"content":"            .setVisibility(PropertyAccessor.ALL, JsonAutoDetect.Visibility.NONE)","lastModifiedDate":"2016-10-19"},{"lineNumber":37,"author":{"gitId":"-"},"content":"            .setVisibility(PropertyAccessor.FIELD, JsonAutoDetect.Visibility.ANY)","lastModifiedDate":"2016-10-19"},{"lineNumber":38,"author":{"gitId":"-"},"content":"            .registerModule(new SimpleModule(\"SimpleModule\")","lastModifiedDate":"2016-10-19"},{"lineNumber":39,"author":{"gitId":"-"},"content":"                    .addSerializer(Level.class, new ToStringSerializer())","lastModifiedDate":"2016-10-19"},{"lineNumber":40,"author":{"gitId":"-"},"content":"                    .addDeserializer(Level.class, new LevelDeserializer(Level.class)));","lastModifiedDate":"2016-10-19"},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-19"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    static \u003cT\u003e void serializeObjectToJsonFile(Path jsonFile, T objectToSerialize) throws IOException {","lastModifiedDate":"2018-04-21"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        FileUtil.writeToFile(jsonFile, toJsonString(objectToSerialize));","lastModifiedDate":"2016-10-07"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-10-07"},{"lineNumber":45,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-07"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    static \u003cT\u003e T deserializeObjectFromJsonFile(Path jsonFile, Class\u003cT\u003e classOfObjectToDeserialize)","lastModifiedDate":"2018-04-21"},{"lineNumber":47,"author":{"gitId":"-"},"content":"            throws IOException {","lastModifiedDate":"2016-10-07"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        return fromJsonString(FileUtil.readFromFile(jsonFile), classOfObjectToDeserialize);","lastModifiedDate":"2016-10-07"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-10-07"},{"lineNumber":50,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-07"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-10-07"},{"lineNumber":52,"author":{"gitId":"-"},"content":"     * Returns the Json object from the given file or {@code Optional.empty()} object if the file is not found.","lastModifiedDate":"2016-10-07"},{"lineNumber":53,"author":{"gitId":"-"},"content":"     * If any values are missing from the file, default values will be used, as long as the file is a valid json file.","lastModifiedDate":"2016-10-07"},{"lineNumber":54,"author":{"gitId":"-"},"content":"     * @param filePath cannot be null.","lastModifiedDate":"2016-10-07"},{"lineNumber":55,"author":{"gitId":"-"},"content":"     * @param classOfObjectToDeserialize Json file has to correspond to the structure in the class given here.","lastModifiedDate":"2016-10-07"},{"lineNumber":56,"author":{"gitId":"-"},"content":"     * @throws DataConversionException if the file format is not as expected.","lastModifiedDate":"2016-10-07"},{"lineNumber":57,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-10-07"},{"lineNumber":58,"author":{"gitId":"-"},"content":"    public static \u003cT\u003e Optional\u003cT\u003e readJsonFile(","lastModifiedDate":"2016-10-07"},{"lineNumber":59,"author":{"gitId":"-"},"content":"            Path filePath, Class\u003cT\u003e classOfObjectToDeserialize) throws DataConversionException {","lastModifiedDate":"2018-04-21"},{"lineNumber":60,"author":{"gitId":"-"},"content":"        requireNonNull(filePath);","lastModifiedDate":"2017-05-15"},{"lineNumber":61,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-07"},{"lineNumber":62,"author":{"gitId":"-"},"content":"        if (!Files.exists(filePath)) {","lastModifiedDate":"2018-04-21"},{"lineNumber":63,"author":{"gitId":"-"},"content":"            logger.info(\"Json file \" + filePath + \" not found\");","lastModifiedDate":"2018-04-21"},{"lineNumber":64,"author":{"gitId":"-"},"content":"            return Optional.empty();","lastModifiedDate":"2016-10-07"},{"lineNumber":65,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-10-07"},{"lineNumber":66,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-07"},{"lineNumber":67,"author":{"gitId":"-"},"content":"        T jsonFile;","lastModifiedDate":"2016-10-07"},{"lineNumber":68,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-07"},{"lineNumber":69,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2016-10-07"},{"lineNumber":70,"author":{"gitId":"-"},"content":"            jsonFile \u003d deserializeObjectFromJsonFile(filePath, classOfObjectToDeserialize);","lastModifiedDate":"2018-04-21"},{"lineNumber":71,"author":{"gitId":"-"},"content":"        } catch (IOException e) {","lastModifiedDate":"2016-10-07"},{"lineNumber":72,"author":{"gitId":"-"},"content":"            logger.warning(\"Error reading from jsonFile file \" + filePath + \": \" + e);","lastModifiedDate":"2018-04-21"},{"lineNumber":73,"author":{"gitId":"-"},"content":"            throw new DataConversionException(e);","lastModifiedDate":"2016-10-07"},{"lineNumber":74,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-10-07"},{"lineNumber":75,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-07"},{"lineNumber":76,"author":{"gitId":"-"},"content":"        return Optional.of(jsonFile);","lastModifiedDate":"2016-10-07"},{"lineNumber":77,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-10-07"},{"lineNumber":78,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-07"},{"lineNumber":79,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-10-07"},{"lineNumber":80,"author":{"gitId":"-"},"content":"     * Saves the Json object to the specified file.","lastModifiedDate":"2016-10-07"},{"lineNumber":81,"author":{"gitId":"-"},"content":"     * Overwrites existing file if it exists, creates a new file if it doesn\u0027t.","lastModifiedDate":"2016-10-07"},{"lineNumber":82,"author":{"gitId":"-"},"content":"     * @param jsonFile cannot be null","lastModifiedDate":"2016-10-07"},{"lineNumber":83,"author":{"gitId":"-"},"content":"     * @param filePath cannot be null","lastModifiedDate":"2016-10-07"},{"lineNumber":84,"author":{"gitId":"-"},"content":"     * @throws IOException if there was an error during writing to the file","lastModifiedDate":"2016-10-07"},{"lineNumber":85,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-10-07"},{"lineNumber":86,"author":{"gitId":"-"},"content":"    public static \u003cT\u003e void saveJsonFile(T jsonFile, Path filePath) throws IOException {","lastModifiedDate":"2018-04-21"},{"lineNumber":87,"author":{"gitId":"-"},"content":"        requireNonNull(filePath);","lastModifiedDate":"2017-05-15"},{"lineNumber":88,"author":{"gitId":"-"},"content":"        requireNonNull(jsonFile);","lastModifiedDate":"2017-05-15"},{"lineNumber":89,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-07"},{"lineNumber":90,"author":{"gitId":"-"},"content":"        serializeObjectToJsonFile(filePath, jsonFile);","lastModifiedDate":"2018-04-21"},{"lineNumber":91,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-10-07"},{"lineNumber":92,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-07"},{"lineNumber":93,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-19"},{"lineNumber":94,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-10-19"},{"lineNumber":95,"author":{"gitId":"-"},"content":"     * Converts a given string representation of a JSON data to instance of a class","lastModifiedDate":"2016-10-19"},{"lineNumber":96,"author":{"gitId":"-"},"content":"     * @param \u003cT\u003e The generic type to create an instance of","lastModifiedDate":"2016-10-19"},{"lineNumber":97,"author":{"gitId":"-"},"content":"     * @return The instance of T with the specified values in the JSON string","lastModifiedDate":"2016-10-19"},{"lineNumber":98,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-10-19"},{"lineNumber":99,"author":{"gitId":"-"},"content":"    public static \u003cT\u003e T fromJsonString(String json, Class\u003cT\u003e instanceClass) throws IOException {","lastModifiedDate":"2016-10-19"},{"lineNumber":100,"author":{"gitId":"-"},"content":"        return objectMapper.readValue(json, instanceClass);","lastModifiedDate":"2016-10-19"},{"lineNumber":101,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-10-19"},{"lineNumber":102,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-19"},{"lineNumber":103,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-10-19"},{"lineNumber":104,"author":{"gitId":"-"},"content":"     * Converts a given instance of a class into its JSON data string representation","lastModifiedDate":"2016-10-19"},{"lineNumber":105,"author":{"gitId":"-"},"content":"     * @param instance The T object to be converted into the JSON string","lastModifiedDate":"2016-10-19"},{"lineNumber":106,"author":{"gitId":"-"},"content":"     * @param \u003cT\u003e The generic type to create an instance of","lastModifiedDate":"2016-10-19"},{"lineNumber":107,"author":{"gitId":"-"},"content":"     * @return JSON data representation of the given class instance, in string","lastModifiedDate":"2016-10-19"},{"lineNumber":108,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-10-19"},{"lineNumber":109,"author":{"gitId":"-"},"content":"    public static \u003cT\u003e String toJsonString(T instance) throws JsonProcessingException {","lastModifiedDate":"2016-10-19"},{"lineNumber":110,"author":{"gitId":"-"},"content":"        return objectMapper.writerWithDefaultPrettyPrinter().writeValueAsString(instance);","lastModifiedDate":"2016-10-19"},{"lineNumber":111,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-10-19"},{"lineNumber":112,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-19"},{"lineNumber":113,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-08-16"},{"lineNumber":114,"author":{"gitId":"-"},"content":"     * Contains methods that retrieve logging level from serialized string.","lastModifiedDate":"2017-08-16"},{"lineNumber":115,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-08-16"},{"lineNumber":116,"author":{"gitId":"-"},"content":"    private static class LevelDeserializer extends FromStringDeserializer\u003cLevel\u003e {","lastModifiedDate":"2016-08-08"},{"lineNumber":117,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":118,"author":{"gitId":"-"},"content":"        protected LevelDeserializer(Class\u003c?\u003e vc) {","lastModifiedDate":"2016-08-08"},{"lineNumber":119,"author":{"gitId":"-"},"content":"            super(vc);","lastModifiedDate":"2016-08-08"},{"lineNumber":120,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-08-08"},{"lineNumber":121,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":122,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2016-08-08"},{"lineNumber":123,"author":{"gitId":"-"},"content":"        protected Level _deserialize(String value, DeserializationContext ctxt) {","lastModifiedDate":"2018-08-08"},{"lineNumber":124,"author":{"gitId":"-"},"content":"            return getLoggingLevel(value);","lastModifiedDate":"2016-08-08"},{"lineNumber":125,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-08-08"},{"lineNumber":126,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":127,"author":{"gitId":"-"},"content":"        /**","lastModifiedDate":"2016-08-08"},{"lineNumber":128,"author":{"gitId":"-"},"content":"         * Gets the logging level that matches loggingLevelString","lastModifiedDate":"2016-08-08"},{"lineNumber":129,"author":{"gitId":"-"},"content":"         * \u003cp\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":130,"author":{"gitId":"-"},"content":"         * Returns null if there are no matches","lastModifiedDate":"2016-08-08"},{"lineNumber":131,"author":{"gitId":"-"},"content":"         *","lastModifiedDate":"2016-08-08"},{"lineNumber":132,"author":{"gitId":"-"},"content":"         */","lastModifiedDate":"2016-08-08"},{"lineNumber":133,"author":{"gitId":"-"},"content":"        private Level getLoggingLevel(String loggingLevelString) {","lastModifiedDate":"2016-08-08"},{"lineNumber":134,"author":{"gitId":"-"},"content":"            return Level.parse(loggingLevelString);","lastModifiedDate":"2016-09-09"},{"lineNumber":135,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-08-08"},{"lineNumber":136,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":137,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2016-08-08"},{"lineNumber":138,"author":{"gitId":"-"},"content":"        public Class\u003cLevel\u003e handledType() {","lastModifiedDate":"2016-08-08"},{"lineNumber":139,"author":{"gitId":"-"},"content":"            return Level.class;","lastModifiedDate":"2016-08-08"},{"lineNumber":140,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-08-08"},{"lineNumber":141,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":142,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":143,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"}],"authorContributionMap":{"-":142,"zxgoh":1}},{"path":"src/main/java/seedu/address/commons/util/StringUtil.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.commons.util;","lastModifiedDate":"2016-09-23"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2017-05-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static seedu.address.commons.util.AppUtil.checkArgument;","lastModifiedDate":"2017-05-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-15"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.io.PrintWriter;","lastModifiedDate":"2016-09-21"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import java.io.StringWriter;","lastModifiedDate":"2016-09-21"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import java.util.Arrays;","lastModifiedDate":"2018-01-21"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-19"},{"lineNumber":10,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-08"},{"lineNumber":11,"author":{"gitId":"-"},"content":" * Helper functions for handling strings.","lastModifiedDate":"2016-08-08"},{"lineNumber":12,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-08"},{"lineNumber":13,"author":{"gitId":"-"},"content":"public class StringUtil {","lastModifiedDate":"2016-08-08"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-13"},{"lineNumber":15,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-10-13"},{"lineNumber":16,"author":{"gitId":"-"},"content":"     * Returns true if the {@code sentence} contains the {@code word}.","lastModifiedDate":"2016-10-13"},{"lineNumber":17,"author":{"gitId":"-"},"content":"     *   Ignores case, but a full word match is required.","lastModifiedDate":"2016-10-13"},{"lineNumber":18,"author":{"gitId":"-"},"content":"     *   \u003cbr\u003eexamples:\u003cpre\u003e","lastModifiedDate":"2016-10-13"},{"lineNumber":19,"author":{"gitId":"-"},"content":"     *       containsWordIgnoreCase(\"ABc def\", \"abc\") \u003d\u003d true","lastModifiedDate":"2016-10-13"},{"lineNumber":20,"author":{"gitId":"-"},"content":"     *       containsWordIgnoreCase(\"ABc def\", \"DEF\") \u003d\u003d true","lastModifiedDate":"2016-10-13"},{"lineNumber":21,"author":{"gitId":"-"},"content":"     *       containsWordIgnoreCase(\"ABc def\", \"AB\") \u003d\u003d false //not a full word match","lastModifiedDate":"2016-10-13"},{"lineNumber":22,"author":{"gitId":"-"},"content":"     *       \u003c/pre\u003e","lastModifiedDate":"2016-10-13"},{"lineNumber":23,"author":{"gitId":"-"},"content":"     * @param sentence cannot be null","lastModifiedDate":"2016-10-13"},{"lineNumber":24,"author":{"gitId":"-"},"content":"     * @param word cannot be null, cannot be empty, must be a single word","lastModifiedDate":"2016-10-13"},{"lineNumber":25,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-10-13"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    public static boolean containsWordIgnoreCase(String sentence, String word) {","lastModifiedDate":"2016-10-13"},{"lineNumber":27,"author":{"gitId":"-"},"content":"        requireNonNull(sentence);","lastModifiedDate":"2017-05-15"},{"lineNumber":28,"author":{"gitId":"-"},"content":"        requireNonNull(word);","lastModifiedDate":"2017-05-15"},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-13"},{"lineNumber":30,"author":{"gitId":"-"},"content":"        String preppedWord \u003d word.trim();","lastModifiedDate":"2016-10-13"},{"lineNumber":31,"author":{"gitId":"-"},"content":"        checkArgument(!preppedWord.isEmpty(), \"Word parameter cannot be empty\");","lastModifiedDate":"2017-05-15"},{"lineNumber":32,"author":{"gitId":"-"},"content":"        checkArgument(preppedWord.split(\"\\\\s+\").length \u003d\u003d 1, \"Word parameter should be a single word\");","lastModifiedDate":"2017-05-15"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-13"},{"lineNumber":34,"author":{"gitId":"-"},"content":"        String preppedSentence \u003d sentence;","lastModifiedDate":"2016-10-13"},{"lineNumber":35,"author":{"gitId":"-"},"content":"        String[] wordsInPreppedSentence \u003d preppedSentence.split(\"\\\\s+\");","lastModifiedDate":"2016-10-13"},{"lineNumber":36,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-13"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        return Arrays.stream(wordsInPreppedSentence)","lastModifiedDate":"2018-01-21"},{"lineNumber":38,"author":{"gitId":"-"},"content":"                .anyMatch(preppedWord::equalsIgnoreCase);","lastModifiedDate":"2018-01-21"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":40,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-09-21"},{"lineNumber":42,"author":{"gitId":"-"},"content":"     * Returns a detailed message of the t, including the stack trace.","lastModifiedDate":"2016-09-21"},{"lineNumber":43,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-09-21"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    public static String getDetails(Throwable t) {","lastModifiedDate":"2016-09-21"},{"lineNumber":45,"author":{"gitId":"-"},"content":"        requireNonNull(t);","lastModifiedDate":"2017-05-15"},{"lineNumber":46,"author":{"gitId":"-"},"content":"        StringWriter sw \u003d new StringWriter();","lastModifiedDate":"2016-09-21"},{"lineNumber":47,"author":{"gitId":"-"},"content":"        t.printStackTrace(new PrintWriter(sw));","lastModifiedDate":"2016-09-21"},{"lineNumber":48,"author":{"gitId":"zxgoh"},"content":"        return t.getMessage() + \"\\n\" + sw;","lastModifiedDate":"2022-03-16"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-21"},{"lineNumber":50,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-09-22"},{"lineNumber":52,"author":{"gitId":"-"},"content":"     * Returns true if {@code s} represents a non-zero unsigned integer","lastModifiedDate":"2017-06-02"},{"lineNumber":53,"author":{"gitId":"-"},"content":"     * e.g. 1, 2, 3, ..., {@code Integer.MAX_VALUE} \u003cbr\u003e","lastModifiedDate":"2017-06-02"},{"lineNumber":54,"author":{"gitId":"-"},"content":"     * Will return false for any other non-null string input","lastModifiedDate":"2017-06-02"},{"lineNumber":55,"author":{"gitId":"-"},"content":"     * e.g. empty string, \"-1\", \"0\", \"+1\", and \" 2 \" (untrimmed), \"3 0\" (contains whitespace), \"1 a\" (contains letters)","lastModifiedDate":"2017-06-02"},{"lineNumber":56,"author":{"gitId":"-"},"content":"     * @throws NullPointerException if {@code s} is null.","lastModifiedDate":"2017-06-02"},{"lineNumber":57,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-09-22"},{"lineNumber":58,"author":{"gitId":"-"},"content":"    public static boolean isNonZeroUnsignedInteger(String s) {","lastModifiedDate":"2017-06-02"},{"lineNumber":59,"author":{"gitId":"-"},"content":"        requireNonNull(s);","lastModifiedDate":"2017-06-02"},{"lineNumber":60,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-02"},{"lineNumber":61,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2017-06-02"},{"lineNumber":62,"author":{"gitId":"-"},"content":"            int value \u003d Integer.parseInt(s);","lastModifiedDate":"2017-06-02"},{"lineNumber":63,"author":{"gitId":"-"},"content":"            return value \u003e 0 \u0026\u0026 !s.startsWith(\"+\"); // \"+1\" is successfully parsed by Integer#parseInt(String)","lastModifiedDate":"2017-06-02"},{"lineNumber":64,"author":{"gitId":"-"},"content":"        } catch (NumberFormatException nfe) {","lastModifiedDate":"2017-06-02"},{"lineNumber":65,"author":{"gitId":"-"},"content":"            return false;","lastModifiedDate":"2017-06-02"},{"lineNumber":66,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-06-02"},{"lineNumber":67,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-22"},{"lineNumber":68,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"}],"authorContributionMap":{"-":67,"zxgoh":1}},{"path":"src/main/java/seedu/address/logic/Logic.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic;","lastModifiedDate":"2016-09-25"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-11-27"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2016-09-25"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.GuiSettings;","lastModifiedDate":"2018-11-27"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.CommandResult;","lastModifiedDate":"2016-09-25"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.exceptions.CommandException;","lastModifiedDate":"2017-02-05"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import seedu.address.logic.parser.exceptions.ParseException;","lastModifiedDate":"2017-03-11"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import seedu.address.model.ReadOnlyAddressBook;","lastModifiedDate":"2018-12-03"},{"lineNumber":11,"author":{"gitId":"zxgoh"},"content":"import seedu.address.model.customer.Customer;","lastModifiedDate":"2022-03-14"},{"lineNumber":12,"author":{"gitId":"jaegarpoon"},"content":"import seedu.address.model.dish.Dish;","lastModifiedDate":"2022-03-24"},{"lineNumber":13,"author":{"gitId":"jaegarpoon"},"content":"import seedu.address.model.driver.Driver;","lastModifiedDate":"2022-03-27"},{"lineNumber":14,"author":{"gitId":"zxgoh"},"content":"import seedu.address.model.item.Person;","lastModifiedDate":"2022-03-16"},{"lineNumber":15,"author":{"gitId":"zxgoh"},"content":"import seedu.address.model.order.Order;","lastModifiedDate":"2022-03-16"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":17,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-09-25"},{"lineNumber":18,"author":{"gitId":"-"},"content":" * API of the Logic component","lastModifiedDate":"2016-09-25"},{"lineNumber":19,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-09-25"},{"lineNumber":20,"author":{"gitId":"-"},"content":"public interface Logic {","lastModifiedDate":"2016-09-25"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-09-25"},{"lineNumber":22,"author":{"gitId":"-"},"content":"     * Executes the command and returns the result.","lastModifiedDate":"2016-09-25"},{"lineNumber":23,"author":{"gitId":"-"},"content":"     * @param commandText The command as entered by the user.","lastModifiedDate":"2016-09-25"},{"lineNumber":24,"author":{"gitId":"-"},"content":"     * @return the result of the command execution.","lastModifiedDate":"2016-09-25"},{"lineNumber":25,"author":{"gitId":"-"},"content":"     * @throws CommandException If an error occurs during command execution.","lastModifiedDate":"2017-02-05"},{"lineNumber":26,"author":{"gitId":"-"},"content":"     * @throws ParseException If an error occurs during parsing.","lastModifiedDate":"2017-03-11"},{"lineNumber":27,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-09-25"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    CommandResult execute(String commandText) throws CommandException, ParseException;","lastModifiedDate":"2017-03-11"},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-12-03"},{"lineNumber":31,"author":{"gitId":"-"},"content":"     * Returns the AddressBook.","lastModifiedDate":"2018-12-03"},{"lineNumber":32,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2018-12-03"},{"lineNumber":33,"author":{"gitId":"-"},"content":"     * @see seedu.address.model.Model#getAddressBook()","lastModifiedDate":"2018-12-03"},{"lineNumber":34,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-12-03"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    ReadOnlyAddressBook getAddressBook();","lastModifiedDate":"2018-12-03"},{"lineNumber":36,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-03"},{"lineNumber":37,"author":{"gitId":"zxgoh"},"content":"    /** Returns an unmodifiable view of the filtered list of customers */","lastModifiedDate":"2022-03-14"},{"lineNumber":38,"author":{"gitId":"zxgoh"},"content":"    ObservableList\u003cCustomer\u003e getFilteredCustomerList();","lastModifiedDate":"2022-03-14"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    /** Returns an unmodifiable view of the filtered list of persons */","lastModifiedDate":"2022-03-16"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    ObservableList\u003cPerson\u003e getFilteredPersonList();","lastModifiedDate":"2022-03-16"},{"lineNumber":41,"author":{"gitId":"zxgoh"},"content":"    ObservableList\u003cDriver\u003e getFilteredDriverList();","lastModifiedDate":"2022-03-16"},{"lineNumber":42,"author":{"gitId":"zxgoh"},"content":"","lastModifiedDate":"2022-03-16"},{"lineNumber":43,"author":{"gitId":"zxgoh"},"content":"    /** Returns an unmodifiable view of the filtered list of dishes */","lastModifiedDate":"2022-03-16"},{"lineNumber":44,"author":{"gitId":"zxgoh"},"content":"    ObservableList\u003cDish\u003e getFilteredDishList();","lastModifiedDate":"2022-03-16"},{"lineNumber":45,"author":{"gitId":"zxgoh"},"content":"","lastModifiedDate":"2022-03-16"},{"lineNumber":46,"author":{"gitId":"zxgoh"},"content":"    /** Returns an unmodifiable view of the filtered list of orders */","lastModifiedDate":"2022-03-16"},{"lineNumber":47,"author":{"gitId":"zxgoh"},"content":"    ObservableList\u003cOrder\u003e getFilteredOrderList();","lastModifiedDate":"2022-03-16"},{"lineNumber":48,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-26"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-11-27"},{"lineNumber":50,"author":{"gitId":"-"},"content":"     * Returns the user prefs\u0027 address book file path.","lastModifiedDate":"2018-11-27"},{"lineNumber":51,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-11-27"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    Path getAddressBookFilePath();","lastModifiedDate":"2018-11-27"},{"lineNumber":53,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":54,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-11-27"},{"lineNumber":55,"author":{"gitId":"-"},"content":"     * Returns the user prefs\u0027 GUI settings.","lastModifiedDate":"2018-11-27"},{"lineNumber":56,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-11-27"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    GuiSettings getGuiSettings();","lastModifiedDate":"2018-11-27"},{"lineNumber":58,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":59,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-11-27"},{"lineNumber":60,"author":{"gitId":"-"},"content":"     * Set the user prefs\u0027 GUI settings.","lastModifiedDate":"2018-11-27"},{"lineNumber":61,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-11-27"},{"lineNumber":62,"author":{"gitId":"-"},"content":"    void setGuiSettings(GuiSettings guiSettings);","lastModifiedDate":"2018-11-27"},{"lineNumber":63,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-09-25"}],"authorContributionMap":{"jaegarpoon":2,"-":49,"zxgoh":12}},{"path":"src/main/java/seedu/address/logic/LogicManager.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic;","lastModifiedDate":"2016-09-21"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.io.IOException;","lastModifiedDate":"2018-12-09"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-11-27"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.util.logging.Logger;","lastModifiedDate":"2017-01-19"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2016-09-24"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.GuiSettings;","lastModifiedDate":"2018-11-27"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.LogsCenter;","lastModifiedDate":"2016-09-29"},{"lineNumber":10,"author":{"gitId":"xzzz3"},"content":"import seedu.address.logic.commands.AddOrderCommand;","lastModifiedDate":"2022-03-17"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.Command;","lastModifiedDate":"2016-09-22"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.CommandResult;","lastModifiedDate":"2016-09-22"},{"lineNumber":13,"author":{"gitId":"xzzz3"},"content":"import seedu.address.logic.commands.EditOrderCommand;","lastModifiedDate":"2022-03-28"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.exceptions.CommandException;","lastModifiedDate":"2017-02-05"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import seedu.address.logic.parser.AddressBookParser;","lastModifiedDate":"2017-07-07"},{"lineNumber":16,"author":{"gitId":"-"},"content":"import seedu.address.logic.parser.exceptions.ParseException;","lastModifiedDate":"2017-03-11"},{"lineNumber":17,"author":{"gitId":"-"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2016-09-25"},{"lineNumber":18,"author":{"gitId":"-"},"content":"import seedu.address.model.ReadOnlyAddressBook;","lastModifiedDate":"2018-12-03"},{"lineNumber":19,"author":{"gitId":"zxgoh"},"content":"import seedu.address.model.customer.Customer;","lastModifiedDate":"2022-03-14"},{"lineNumber":20,"author":{"gitId":"jaegarpoon"},"content":"import seedu.address.model.dish.Dish;","lastModifiedDate":"2022-03-24"},{"lineNumber":21,"author":{"gitId":"jaegarpoon"},"content":"import seedu.address.model.driver.Driver;","lastModifiedDate":"2022-03-27"},{"lineNumber":22,"author":{"gitId":"zxgoh"},"content":"import seedu.address.model.item.Person;","lastModifiedDate":"2022-03-16"},{"lineNumber":23,"author":{"gitId":"zxgoh"},"content":"import seedu.address.model.order.Order;","lastModifiedDate":"2022-03-16"},{"lineNumber":24,"author":{"gitId":"-"},"content":"import seedu.address.storage.Storage;","lastModifiedDate":"2018-12-09"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":26,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-09-21"},{"lineNumber":27,"author":{"gitId":"-"},"content":" * The main LogicManager of the app.","lastModifiedDate":"2016-09-22"},{"lineNumber":28,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-09-21"},{"lineNumber":29,"author":{"gitId":"zxgoh"},"content":"@SuppressWarnings(\"checkstyle:Regexp\")","lastModifiedDate":"2022-03-16"},{"lineNumber":30,"author":{"gitId":"-"},"content":"public class LogicManager implements Logic {","lastModifiedDate":"2018-12-09"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    public static final String FILE_OPS_ERROR_MESSAGE \u003d \"Could not save data to file: \";","lastModifiedDate":"2018-12-09"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    private final Logger logger \u003d LogsCenter.getLogger(LogicManager.class);","lastModifiedDate":"2016-09-29"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-28"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    private final Model model;","lastModifiedDate":"2016-09-25"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    private final Storage storage;","lastModifiedDate":"2018-12-09"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    private final AddressBookParser addressBookParser;","lastModifiedDate":"2017-07-07"},{"lineNumber":37,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2020-05-27"},{"lineNumber":39,"author":{"gitId":"-"},"content":"     * Constructs a {@code LogicManager} with the given {@code Model} and {@code Storage}.","lastModifiedDate":"2020-05-27"},{"lineNumber":40,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2020-05-27"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    public LogicManager(Model model, Storage storage) {","lastModifiedDate":"2018-12-09"},{"lineNumber":42,"author":{"gitId":"-"},"content":"        this.model \u003d model;","lastModifiedDate":"2016-09-25"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        this.storage \u003d storage;","lastModifiedDate":"2018-12-09"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        addressBookParser \u003d new AddressBookParser();","lastModifiedDate":"2018-01-25"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-21"},{"lineNumber":46,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-25"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    public CommandResult execute(String commandText) throws CommandException, ParseException {","lastModifiedDate":"2017-03-11"},{"lineNumber":49,"author":{"gitId":"-"},"content":"        logger.info(\"----------------[USER COMMAND][\" + commandText + \"]\");","lastModifiedDate":"2016-09-29"},{"lineNumber":50,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":51,"author":{"gitId":"-"},"content":"        CommandResult commandResult;","lastModifiedDate":"2018-12-09"},{"lineNumber":52,"author":{"gitId":"-"},"content":"        Command command \u003d addressBookParser.parseCommand(commandText);","lastModifiedDate":"2017-07-07"},{"lineNumber":53,"author":{"gitId":"xzzz3"},"content":"","lastModifiedDate":"2022-03-17"},{"lineNumber":54,"author":{"gitId":"xzzz3"},"content":"        if (command instanceof AddOrderCommand) {","lastModifiedDate":"2022-03-17"},{"lineNumber":55,"author":{"gitId":"xzzz3"},"content":"            AddOrderCommand inputCommand \u003d (AddOrderCommand) command;","lastModifiedDate":"2022-03-17"},{"lineNumber":56,"author":{"gitId":"xzzz3"},"content":"            commandResult \u003d inputCommand.execute(model,","lastModifiedDate":"2022-03-17"},{"lineNumber":57,"author":{"gitId":"xzzz3"},"content":"                    getFilteredCustomerList(), getFilteredDriverList(), getFilteredDishList());","lastModifiedDate":"2022-03-17"},{"lineNumber":58,"author":{"gitId":"xzzz3"},"content":"        } else if (command instanceof EditOrderCommand) {","lastModifiedDate":"2022-03-28"},{"lineNumber":59,"author":{"gitId":"xzzz3"},"content":"            EditOrderCommand editOrderCommand \u003d (EditOrderCommand) command;","lastModifiedDate":"2022-03-28"},{"lineNumber":60,"author":{"gitId":"xzzz3"},"content":"            commandResult \u003d editOrderCommand.execute(model,","lastModifiedDate":"2022-03-28"},{"lineNumber":61,"author":{"gitId":"xzzz3"},"content":"                    getFilteredCustomerList(), getFilteredDishList());","lastModifiedDate":"2022-03-28"},{"lineNumber":62,"author":{"gitId":"xzzz3"},"content":"        } else {","lastModifiedDate":"2022-03-17"},{"lineNumber":63,"author":{"gitId":"-"},"content":"            commandResult \u003d command.execute(model);","lastModifiedDate":"2019-01-25"},{"lineNumber":64,"author":{"gitId":"xzzz3"},"content":"        }","lastModifiedDate":"2022-03-17"},{"lineNumber":65,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":66,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2018-12-09"},{"lineNumber":67,"author":{"gitId":"-"},"content":"            storage.saveAddressBook(model.getAddressBook());","lastModifiedDate":"2018-12-09"},{"lineNumber":68,"author":{"gitId":"-"},"content":"        } catch (IOException ioe) {","lastModifiedDate":"2018-12-09"},{"lineNumber":69,"author":{"gitId":"-"},"content":"            throw new CommandException(FILE_OPS_ERROR_MESSAGE + ioe, ioe);","lastModifiedDate":"2018-12-09"},{"lineNumber":70,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-12-09"},{"lineNumber":71,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":72,"author":{"gitId":"-"},"content":"        return commandResult;","lastModifiedDate":"2018-12-09"},{"lineNumber":73,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-21"},{"lineNumber":74,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":75,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2018-12-03"},{"lineNumber":76,"author":{"gitId":"-"},"content":"    public ReadOnlyAddressBook getAddressBook() {","lastModifiedDate":"2018-12-03"},{"lineNumber":77,"author":{"gitId":"-"},"content":"        return model.getAddressBook();","lastModifiedDate":"2018-12-03"},{"lineNumber":78,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-12-03"},{"lineNumber":79,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-03"},{"lineNumber":80,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-25"},{"lineNumber":81,"author":{"gitId":"zxgoh"},"content":"    public ObservableList\u003cCustomer\u003e getFilteredCustomerList() {","lastModifiedDate":"2022-03-14"},{"lineNumber":82,"author":{"gitId":"zxgoh"},"content":"        return model.getFilteredCustomerList();","lastModifiedDate":"2022-03-14"},{"lineNumber":83,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":84,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-29"},{"lineNumber":85,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2022-03-16"},{"lineNumber":86,"author":{"gitId":"-"},"content":"    public ObservableList\u003cPerson\u003e getFilteredPersonList() {","lastModifiedDate":"2022-03-16"},{"lineNumber":87,"author":{"gitId":"zxgoh"},"content":"        return null;","lastModifiedDate":"2022-03-16"},{"lineNumber":88,"author":{"gitId":"zxgoh"},"content":"    }","lastModifiedDate":"2022-03-16"},{"lineNumber":89,"author":{"gitId":"zxgoh"},"content":"","lastModifiedDate":"2022-03-16"},{"lineNumber":90,"author":{"gitId":"zxgoh"},"content":"    @Override","lastModifiedDate":"2022-03-16"},{"lineNumber":91,"author":{"gitId":"zxgoh"},"content":"    public ObservableList\u003cDriver\u003e getFilteredDriverList() {","lastModifiedDate":"2022-03-16"},{"lineNumber":92,"author":{"gitId":"zxgoh"},"content":"        return model.getFilteredDriverList();","lastModifiedDate":"2022-03-16"},{"lineNumber":93,"author":{"gitId":"zxgoh"},"content":"    }","lastModifiedDate":"2022-03-16"},{"lineNumber":94,"author":{"gitId":"zxgoh"},"content":"    @Override","lastModifiedDate":"2022-03-16"},{"lineNumber":95,"author":{"gitId":"zxgoh"},"content":"    public ObservableList\u003cDish\u003e getFilteredDishList() {","lastModifiedDate":"2022-03-16"},{"lineNumber":96,"author":{"gitId":"zxgoh"},"content":"        return model.getFilteredDishList();","lastModifiedDate":"2022-03-16"},{"lineNumber":97,"author":{"gitId":"zxgoh"},"content":"    }","lastModifiedDate":"2022-03-16"},{"lineNumber":98,"author":{"gitId":"zxgoh"},"content":"","lastModifiedDate":"2022-03-16"},{"lineNumber":99,"author":{"gitId":"zxgoh"},"content":"    @Override","lastModifiedDate":"2022-03-16"},{"lineNumber":100,"author":{"gitId":"zxgoh"},"content":"    public ObservableList\u003cOrder\u003e getFilteredOrderList() {","lastModifiedDate":"2022-03-16"},{"lineNumber":101,"author":{"gitId":"zxgoh"},"content":"        return model.getFilteredOrderList();","lastModifiedDate":"2022-03-16"},{"lineNumber":102,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2022-03-16"},{"lineNumber":103,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-03-16"},{"lineNumber":104,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2018-11-27"},{"lineNumber":105,"author":{"gitId":"-"},"content":"    public Path getAddressBookFilePath() {","lastModifiedDate":"2018-11-27"},{"lineNumber":106,"author":{"gitId":"-"},"content":"        return model.getAddressBookFilePath();","lastModifiedDate":"2018-11-27"},{"lineNumber":107,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":108,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":109,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2018-11-27"},{"lineNumber":110,"author":{"gitId":"-"},"content":"    public GuiSettings getGuiSettings() {","lastModifiedDate":"2018-11-27"},{"lineNumber":111,"author":{"gitId":"-"},"content":"        return model.getGuiSettings();","lastModifiedDate":"2018-11-27"},{"lineNumber":112,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":113,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":114,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2018-11-27"},{"lineNumber":115,"author":{"gitId":"-"},"content":"    public void setGuiSettings(GuiSettings guiSettings) {","lastModifiedDate":"2018-11-27"},{"lineNumber":116,"author":{"gitId":"-"},"content":"        model.setGuiSettings(guiSettings);","lastModifiedDate":"2018-11-27"},{"lineNumber":117,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":118,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-09-21"}],"authorContributionMap":{"xzzz3":13,"jaegarpoon":2,"-":82,"zxgoh":21}},{"path":"src/main/java/seedu/address/logic/commands/AddCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2016-09-22"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2017-05-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_ADDRESS;","lastModifiedDate":"2017-05-09"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_EMAIL;","lastModifiedDate":"2017-05-09"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_NAME;","lastModifiedDate":"2017-06-06"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_PHONE;","lastModifiedDate":"2017-05-09"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_TAG;","lastModifiedDate":"2017-05-09"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-09"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.exceptions.CommandException;","lastModifiedDate":"2017-02-05"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2018-08-08"},{"lineNumber":12,"author":{"gitId":"jaegarpoon"},"content":"import seedu.address.model.item.Person;","lastModifiedDate":"2022-03-11"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":14,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-24"},{"lineNumber":15,"author":{"gitId":"-"},"content":" * Adds a person to the address book.","lastModifiedDate":"2016-08-24"},{"lineNumber":16,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-24"},{"lineNumber":17,"author":{"gitId":"-"},"content":"public class AddCommand extends Command {","lastModifiedDate":"2018-04-19"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    public static final String COMMAND_WORD \u003d \"add\";","lastModifiedDate":"2016-08-24"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_USAGE \u003d COMMAND_WORD + \": Adds a person to the address book. \"","lastModifiedDate":"2016-08-24"},{"lineNumber":22,"author":{"gitId":"-"},"content":"            + \"Parameters: \"","lastModifiedDate":"2017-06-06"},{"lineNumber":23,"author":{"gitId":"-"},"content":"            + PREFIX_NAME + \"NAME \"","lastModifiedDate":"2017-06-06"},{"lineNumber":24,"author":{"gitId":"-"},"content":"            + PREFIX_PHONE + \"PHONE \"","lastModifiedDate":"2017-05-09"},{"lineNumber":25,"author":{"gitId":"-"},"content":"            + PREFIX_EMAIL + \"EMAIL \"","lastModifiedDate":"2017-05-09"},{"lineNumber":26,"author":{"gitId":"-"},"content":"            + PREFIX_ADDRESS + \"ADDRESS \"","lastModifiedDate":"2017-05-09"},{"lineNumber":27,"author":{"gitId":"-"},"content":"            + \"[\" + PREFIX_TAG + \"TAG]...\\n\"","lastModifiedDate":"2017-05-09"},{"lineNumber":28,"author":{"gitId":"-"},"content":"            + \"Example: \" + COMMAND_WORD + \" \"","lastModifiedDate":"2017-06-06"},{"lineNumber":29,"author":{"gitId":"-"},"content":"            + PREFIX_NAME + \"John Doe \"","lastModifiedDate":"2017-06-06"},{"lineNumber":30,"author":{"gitId":"-"},"content":"            + PREFIX_PHONE + \"98765432 \"","lastModifiedDate":"2017-05-09"},{"lineNumber":31,"author":{"gitId":"-"},"content":"            + PREFIX_EMAIL + \"johnd@example.com \"","lastModifiedDate":"2017-05-09"},{"lineNumber":32,"author":{"gitId":"-"},"content":"            + PREFIX_ADDRESS + \"311, Clementi Ave 2, #02-25 \"","lastModifiedDate":"2017-05-09"},{"lineNumber":33,"author":{"gitId":"-"},"content":"            + PREFIX_TAG + \"friends \"","lastModifiedDate":"2017-05-09"},{"lineNumber":34,"author":{"gitId":"-"},"content":"            + PREFIX_TAG + \"owesMoney\";","lastModifiedDate":"2017-05-09"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_SUCCESS \u003d \"New person added: %1$s\";","lastModifiedDate":"2016-08-24"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_DUPLICATE_PERSON \u003d \"This person already exists in the address book\";","lastModifiedDate":"2016-08-24"},{"lineNumber":38,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    private final Person toAdd;","lastModifiedDate":"2016-08-24"},{"lineNumber":40,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-09-21"},{"lineNumber":42,"author":{"gitId":"-"},"content":"     * Creates an AddCommand to add the specified {@code Person}","lastModifiedDate":"2018-01-10"},{"lineNumber":43,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-09-21"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    public AddCommand(Person person) {","lastModifiedDate":"2018-01-10"},{"lineNumber":45,"author":{"gitId":"-"},"content":"        requireNonNull(person);","lastModifiedDate":"2018-01-10"},{"lineNumber":46,"author":{"gitId":"-"},"content":"        toAdd \u003d person;","lastModifiedDate":"2018-01-10"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-21"},{"lineNumber":48,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-24"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    public CommandResult execute(Model model) throws CommandException {","lastModifiedDate":"2019-01-25"},{"lineNumber":51,"author":{"gitId":"-"},"content":"        requireNonNull(model);","lastModifiedDate":"2017-05-15"},{"lineNumber":52,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-07"},{"lineNumber":53,"author":{"gitId":"-"},"content":"        if (model.hasPerson(toAdd)) {","lastModifiedDate":"2018-08-07"},{"lineNumber":54,"author":{"gitId":"-"},"content":"            throw new CommandException(MESSAGE_DUPLICATE_PERSON);","lastModifiedDate":"2018-08-07"},{"lineNumber":55,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-08-07"},{"lineNumber":56,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-07"},{"lineNumber":57,"author":{"gitId":"-"},"content":"        model.addPerson(toAdd);","lastModifiedDate":"2016-09-25"},{"lineNumber":58,"author":{"gitId":"-"},"content":"        return new CommandResult(String.format(MESSAGE_SUCCESS, toAdd));","lastModifiedDate":"2016-08-24"},{"lineNumber":59,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":60,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":61,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2017-06-22"},{"lineNumber":62,"author":{"gitId":"-"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2017-06-22"},{"lineNumber":63,"author":{"gitId":"-"},"content":"        return other \u003d\u003d this // short circuit if same object","lastModifiedDate":"2017-06-22"},{"lineNumber":64,"author":{"gitId":"-"},"content":"                || (other instanceof AddCommand // instanceof handles nulls","lastModifiedDate":"2017-06-22"},{"lineNumber":65,"author":{"gitId":"-"},"content":"                \u0026\u0026 toAdd.equals(((AddCommand) other).toAdd));","lastModifiedDate":"2017-06-22"},{"lineNumber":66,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-22"},{"lineNumber":67,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-24"}],"authorContributionMap":{"jaegarpoon":1,"-":66}},{"path":"src/main/java/seedu/address/logic/commands/AddCustomerCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"zxgoh"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2022-03-14"},{"lineNumber":2,"author":{"gitId":"zxgoh"},"content":"","lastModifiedDate":"2022-03-14"},{"lineNumber":3,"author":{"gitId":"zxgoh"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2022-03-14"},{"lineNumber":4,"author":{"gitId":"zxgoh"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_ADDRESS;","lastModifiedDate":"2022-03-14"},{"lineNumber":5,"author":{"gitId":"zxgoh"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_NAME;","lastModifiedDate":"2022-03-14"},{"lineNumber":6,"author":{"gitId":"zxgoh"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_PHONE;","lastModifiedDate":"2022-03-14"},{"lineNumber":7,"author":{"gitId":"zxgoh"},"content":"","lastModifiedDate":"2022-03-14"},{"lineNumber":8,"author":{"gitId":"zxgoh"},"content":"import seedu.address.logic.commands.exceptions.CommandException;","lastModifiedDate":"2022-03-14"},{"lineNumber":9,"author":{"gitId":"zxgoh"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2022-03-14"},{"lineNumber":10,"author":{"gitId":"zxgoh"},"content":"import seedu.address.model.customer.Customer;","lastModifiedDate":"2022-03-14"},{"lineNumber":11,"author":{"gitId":"zxgoh"},"content":"","lastModifiedDate":"2022-03-14"},{"lineNumber":12,"author":{"gitId":"zxgoh"},"content":"/**","lastModifiedDate":"2022-03-14"},{"lineNumber":13,"author":{"gitId":"zxgoh"},"content":" * Adds a customer to the address book.","lastModifiedDate":"2022-03-14"},{"lineNumber":14,"author":{"gitId":"zxgoh"},"content":" */","lastModifiedDate":"2022-03-14"},{"lineNumber":15,"author":{"gitId":"zxgoh"},"content":"public class AddCustomerCommand extends Command {","lastModifiedDate":"2022-03-14"},{"lineNumber":16,"author":{"gitId":"zxgoh"},"content":"","lastModifiedDate":"2022-03-14"},{"lineNumber":17,"author":{"gitId":"zxgoh"},"content":"    public static final String COMMAND_WORD \u003d \"addcustomer\";","lastModifiedDate":"2022-03-14"},{"lineNumber":18,"author":{"gitId":"zxgoh"},"content":"","lastModifiedDate":"2022-03-14"},{"lineNumber":19,"author":{"gitId":"zxgoh"},"content":"    public static final String MESSAGE_USAGE \u003d COMMAND_WORD + \": Adds a customer to the address book. \"","lastModifiedDate":"2022-03-14"},{"lineNumber":20,"author":{"gitId":"zxgoh"},"content":"            + \"Parameters: \"","lastModifiedDate":"2022-03-14"},{"lineNumber":21,"author":{"gitId":"zxgoh"},"content":"            + PREFIX_NAME + \"NAME \"","lastModifiedDate":"2022-03-14"},{"lineNumber":22,"author":{"gitId":"zxgoh"},"content":"            + PREFIX_PHONE + \"PHONE \"","lastModifiedDate":"2022-03-14"},{"lineNumber":23,"author":{"gitId":"zxgoh"},"content":"            + PREFIX_ADDRESS + \"ADDRESS \\n\"","lastModifiedDate":"2022-03-14"},{"lineNumber":24,"author":{"gitId":"zxgoh"},"content":"            + \"Example: \" + COMMAND_WORD + \" \"","lastModifiedDate":"2022-03-14"},{"lineNumber":25,"author":{"gitId":"zxgoh"},"content":"            + PREFIX_NAME + \"John Doe \"","lastModifiedDate":"2022-03-14"},{"lineNumber":26,"author":{"gitId":"zxgoh"},"content":"            + PREFIX_PHONE + \"98765432 \"","lastModifiedDate":"2022-03-14"},{"lineNumber":27,"author":{"gitId":"zxgoh"},"content":"            + PREFIX_ADDRESS + \"311, Clementi Ave 2, #02-25 \";","lastModifiedDate":"2022-03-14"},{"lineNumber":28,"author":{"gitId":"zxgoh"},"content":"","lastModifiedDate":"2022-03-14"},{"lineNumber":29,"author":{"gitId":"zxgoh"},"content":"    public static final String MESSAGE_SUCCESS \u003d \"New customer added: %1$s\";","lastModifiedDate":"2022-03-14"},{"lineNumber":30,"author":{"gitId":"zxgoh"},"content":"    public static final String MESSAGE_DUPLICATE_CUSTOMER \u003d \"This customer already exists in the address book\";","lastModifiedDate":"2022-03-14"},{"lineNumber":31,"author":{"gitId":"zxgoh"},"content":"","lastModifiedDate":"2022-03-14"},{"lineNumber":32,"author":{"gitId":"zxgoh"},"content":"    private final Customer toAdd;","lastModifiedDate":"2022-03-14"},{"lineNumber":33,"author":{"gitId":"zxgoh"},"content":"","lastModifiedDate":"2022-03-14"},{"lineNumber":34,"author":{"gitId":"zxgoh"},"content":"    /**","lastModifiedDate":"2022-03-14"},{"lineNumber":35,"author":{"gitId":"zxgoh"},"content":"     * Creates an AddCustomerCommand to add the specified {@code Customer}","lastModifiedDate":"2022-03-14"},{"lineNumber":36,"author":{"gitId":"zxgoh"},"content":"     */","lastModifiedDate":"2022-03-14"},{"lineNumber":37,"author":{"gitId":"zxgoh"},"content":"    public AddCustomerCommand(Customer customer) {","lastModifiedDate":"2022-03-14"},{"lineNumber":38,"author":{"gitId":"zxgoh"},"content":"        requireNonNull(customer);","lastModifiedDate":"2022-03-14"},{"lineNumber":39,"author":{"gitId":"zxgoh"},"content":"        toAdd \u003d customer;","lastModifiedDate":"2022-03-14"},{"lineNumber":40,"author":{"gitId":"zxgoh"},"content":"    }","lastModifiedDate":"2022-03-14"},{"lineNumber":41,"author":{"gitId":"zxgoh"},"content":"","lastModifiedDate":"2022-03-14"},{"lineNumber":42,"author":{"gitId":"zxgoh"},"content":"    @Override","lastModifiedDate":"2022-03-14"},{"lineNumber":43,"author":{"gitId":"zxgoh"},"content":"    public CommandResult execute(Model model) throws CommandException {","lastModifiedDate":"2022-03-14"},{"lineNumber":44,"author":{"gitId":"zxgoh"},"content":"        requireNonNull(model);","lastModifiedDate":"2022-03-14"},{"lineNumber":45,"author":{"gitId":"zxgoh"},"content":"","lastModifiedDate":"2022-03-14"},{"lineNumber":46,"author":{"gitId":"zxgoh"},"content":"        if (model.hasCustomer(toAdd)) {","lastModifiedDate":"2022-03-14"},{"lineNumber":47,"author":{"gitId":"zxgoh"},"content":"            throw new CommandException(MESSAGE_DUPLICATE_CUSTOMER);","lastModifiedDate":"2022-03-14"},{"lineNumber":48,"author":{"gitId":"zxgoh"},"content":"        }","lastModifiedDate":"2022-03-14"},{"lineNumber":49,"author":{"gitId":"zxgoh"},"content":"","lastModifiedDate":"2022-03-14"},{"lineNumber":50,"author":{"gitId":"zxgoh"},"content":"        model.addCustomer(toAdd);","lastModifiedDate":"2022-03-14"},{"lineNumber":51,"author":{"gitId":"zxgoh"},"content":"        return new CommandResult(String.format(MESSAGE_SUCCESS, toAdd));","lastModifiedDate":"2022-03-14"},{"lineNumber":52,"author":{"gitId":"zxgoh"},"content":"    }","lastModifiedDate":"2022-03-14"},{"lineNumber":53,"author":{"gitId":"zxgoh"},"content":"","lastModifiedDate":"2022-03-14"},{"lineNumber":54,"author":{"gitId":"zxgoh"},"content":"    @Override","lastModifiedDate":"2022-03-14"},{"lineNumber":55,"author":{"gitId":"zxgoh"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2022-03-14"},{"lineNumber":56,"author":{"gitId":"zxgoh"},"content":"        return other \u003d\u003d this // short circuit if same object","lastModifiedDate":"2022-03-14"},{"lineNumber":57,"author":{"gitId":"zxgoh"},"content":"                || (other instanceof AddCustomerCommand // instanceof handles nulls","lastModifiedDate":"2022-03-14"},{"lineNumber":58,"author":{"gitId":"zxgoh"},"content":"                \u0026\u0026 toAdd.equals(((AddCustomerCommand) other).toAdd));","lastModifiedDate":"2022-03-14"},{"lineNumber":59,"author":{"gitId":"zxgoh"},"content":"    }","lastModifiedDate":"2022-03-14"},{"lineNumber":60,"author":{"gitId":"zxgoh"},"content":"}","lastModifiedDate":"2022-03-14"}],"authorContributionMap":{"zxgoh":60}},{"path":"src/main/java/seedu/address/logic/commands/AddDishCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"jaegarpoon"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2022-03-10"},{"lineNumber":2,"author":{"gitId":"jaegarpoon"},"content":"","lastModifiedDate":"2022-03-10"},{"lineNumber":3,"author":{"gitId":"jaegarpoon"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2022-03-10"},{"lineNumber":4,"author":{"gitId":"jaegarpoon"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_NAME;","lastModifiedDate":"2022-03-10"},{"lineNumber":5,"author":{"gitId":"jaegarpoon"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_PRICE;","lastModifiedDate":"2022-03-30"},{"lineNumber":6,"author":{"gitId":"jaegarpoon"},"content":"","lastModifiedDate":"2022-03-10"},{"lineNumber":7,"author":{"gitId":"jaegarpoon"},"content":"import seedu.address.logic.commands.exceptions.CommandException;","lastModifiedDate":"2022-03-10"},{"lineNumber":8,"author":{"gitId":"jaegarpoon"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2022-03-10"},{"lineNumber":9,"author":{"gitId":"jaegarpoon"},"content":"import seedu.address.model.dish.Dish;","lastModifiedDate":"2022-03-24"},{"lineNumber":10,"author":{"gitId":"jaegarpoon"},"content":"","lastModifiedDate":"2022-03-10"},{"lineNumber":11,"author":{"gitId":"jaegarpoon"},"content":"/**","lastModifiedDate":"2022-03-10"},{"lineNumber":12,"author":{"gitId":"jaegarpoon"},"content":" * Adds a person to the address book.","lastModifiedDate":"2022-03-10"},{"lineNumber":13,"author":{"gitId":"jaegarpoon"},"content":" */","lastModifiedDate":"2022-03-10"},{"lineNumber":14,"author":{"gitId":"jaegarpoon"},"content":"public class AddDishCommand extends Command {","lastModifiedDate":"2022-03-10"},{"lineNumber":15,"author":{"gitId":"jaegarpoon"},"content":"","lastModifiedDate":"2022-03-10"},{"lineNumber":16,"author":{"gitId":"jaegarpoon"},"content":"    public static final String COMMAND_WORD \u003d \"adddish\";","lastModifiedDate":"2022-03-10"},{"lineNumber":17,"author":{"gitId":"jaegarpoon"},"content":"","lastModifiedDate":"2022-03-10"},{"lineNumber":18,"author":{"gitId":"jaegarpoon"},"content":"    public static final String MESSAGE_USAGE \u003d COMMAND_WORD + \": Adds a dish to the address book. \"","lastModifiedDate":"2022-03-10"},{"lineNumber":19,"author":{"gitId":"jaegarpoon"},"content":"            + \"Parameters: \"","lastModifiedDate":"2022-03-10"},{"lineNumber":20,"author":{"gitId":"jaegarpoon"},"content":"            + PREFIX_NAME + \"NAME \"","lastModifiedDate":"2022-03-10"},{"lineNumber":21,"author":{"gitId":"jaegarpoon"},"content":"            + PREFIX_PRICE + \"PRICE \"","lastModifiedDate":"2022-03-30"},{"lineNumber":22,"author":{"gitId":"jaegarpoon"},"content":"            + \"Example: \" + COMMAND_WORD + \" \"","lastModifiedDate":"2022-03-10"},{"lineNumber":23,"author":{"gitId":"jaegarpoon"},"content":"            + PREFIX_NAME + \"Kimchi Fried Rice \"","lastModifiedDate":"2022-03-30"},{"lineNumber":24,"author":{"gitId":"jaegarpoon"},"content":"            + PREFIX_PRICE + \"15.50 \";","lastModifiedDate":"2022-03-30"},{"lineNumber":25,"author":{"gitId":"jaegarpoon"},"content":"","lastModifiedDate":"2022-03-10"},{"lineNumber":26,"author":{"gitId":"jaegarpoon"},"content":"    public static final String MESSAGE_SUCCESS \u003d \"New dish added: %1$s\";","lastModifiedDate":"2022-03-10"},{"lineNumber":27,"author":{"gitId":"jaegarpoon"},"content":"    public static final String MESSAGE_DUPLICATE_DISH \u003d \"This dish already exists in FoodOnWheels\";","lastModifiedDate":"2022-03-10"},{"lineNumber":28,"author":{"gitId":"jaegarpoon"},"content":"","lastModifiedDate":"2022-03-10"},{"lineNumber":29,"author":{"gitId":"jaegarpoon"},"content":"    private final Dish toAdd;","lastModifiedDate":"2022-03-10"},{"lineNumber":30,"author":{"gitId":"jaegarpoon"},"content":"","lastModifiedDate":"2022-03-10"},{"lineNumber":31,"author":{"gitId":"jaegarpoon"},"content":"    /**","lastModifiedDate":"2022-03-10"},{"lineNumber":32,"author":{"gitId":"jaegarpoon"},"content":"     * Creates an AddCommand to add the specified {@code Person}","lastModifiedDate":"2022-03-10"},{"lineNumber":33,"author":{"gitId":"jaegarpoon"},"content":"     */","lastModifiedDate":"2022-03-10"},{"lineNumber":34,"author":{"gitId":"jaegarpoon"},"content":"    public AddDishCommand(Dish dish) {","lastModifiedDate":"2022-03-10"},{"lineNumber":35,"author":{"gitId":"jaegarpoon"},"content":"        requireNonNull(dish);","lastModifiedDate":"2022-03-10"},{"lineNumber":36,"author":{"gitId":"jaegarpoon"},"content":"        toAdd \u003d dish;","lastModifiedDate":"2022-03-10"},{"lineNumber":37,"author":{"gitId":"jaegarpoon"},"content":"    }","lastModifiedDate":"2022-03-10"},{"lineNumber":38,"author":{"gitId":"jaegarpoon"},"content":"","lastModifiedDate":"2022-03-10"},{"lineNumber":39,"author":{"gitId":"jaegarpoon"},"content":"    @Override","lastModifiedDate":"2022-03-10"},{"lineNumber":40,"author":{"gitId":"jaegarpoon"},"content":"    public CommandResult execute(Model model) throws CommandException {","lastModifiedDate":"2022-03-10"},{"lineNumber":41,"author":{"gitId":"jaegarpoon"},"content":"        requireNonNull(model);","lastModifiedDate":"2022-03-10"},{"lineNumber":42,"author":{"gitId":"jaegarpoon"},"content":"","lastModifiedDate":"2022-03-10"},{"lineNumber":43,"author":{"gitId":"jaegarpoon"},"content":"        if (model.hasDish(toAdd)) {","lastModifiedDate":"2022-03-10"},{"lineNumber":44,"author":{"gitId":"jaegarpoon"},"content":"            throw new CommandException(MESSAGE_DUPLICATE_DISH);","lastModifiedDate":"2022-03-10"},{"lineNumber":45,"author":{"gitId":"jaegarpoon"},"content":"        }","lastModifiedDate":"2022-03-10"},{"lineNumber":46,"author":{"gitId":"jaegarpoon"},"content":"","lastModifiedDate":"2022-03-10"},{"lineNumber":47,"author":{"gitId":"jaegarpoon"},"content":"        model.addDish(toAdd);","lastModifiedDate":"2022-03-10"},{"lineNumber":48,"author":{"gitId":"jaegarpoon"},"content":"        return new CommandResult(String.format(MESSAGE_SUCCESS, toAdd), false, false, true, false, false);","lastModifiedDate":"2022-03-11"},{"lineNumber":49,"author":{"gitId":"jaegarpoon"},"content":"    }","lastModifiedDate":"2022-03-10"},{"lineNumber":50,"author":{"gitId":"jaegarpoon"},"content":"","lastModifiedDate":"2022-03-10"},{"lineNumber":51,"author":{"gitId":"jaegarpoon"},"content":"    @Override","lastModifiedDate":"2022-03-10"},{"lineNumber":52,"author":{"gitId":"jaegarpoon"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2022-03-10"},{"lineNumber":53,"author":{"gitId":"jaegarpoon"},"content":"        return other \u003d\u003d this // short circuit if same object","lastModifiedDate":"2022-03-10"},{"lineNumber":54,"author":{"gitId":"jaegarpoon"},"content":"                || (other instanceof AddDishCommand // instanceof handles nulls","lastModifiedDate":"2022-03-10"},{"lineNumber":55,"author":{"gitId":"jaegarpoon"},"content":"                \u0026\u0026 toAdd.equals(((AddDishCommand) other).toAdd));","lastModifiedDate":"2022-03-10"},{"lineNumber":56,"author":{"gitId":"jaegarpoon"},"content":"    }","lastModifiedDate":"2022-03-10"},{"lineNumber":57,"author":{"gitId":"jaegarpoon"},"content":"}","lastModifiedDate":"2022-03-10"},{"lineNumber":58,"author":{"gitId":"jaegarpoon"},"content":"","lastModifiedDate":"2022-03-10"}],"authorContributionMap":{"jaegarpoon":58}},{"path":"src/main/java/seedu/address/logic/commands/AddDriverCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"hieunm1821"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2022-03-10"},{"lineNumber":2,"author":{"gitId":"hieunm1821"},"content":"","lastModifiedDate":"2022-03-10"},{"lineNumber":3,"author":{"gitId":"hieunm1821"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2022-03-10"},{"lineNumber":4,"author":{"gitId":"hieunm1821"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_NAME;","lastModifiedDate":"2022-03-10"},{"lineNumber":5,"author":{"gitId":"hieunm1821"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_PHONE;","lastModifiedDate":"2022-03-10"},{"lineNumber":6,"author":{"gitId":"hieunm1821"},"content":"","lastModifiedDate":"2022-03-10"},{"lineNumber":7,"author":{"gitId":"hieunm1821"},"content":"import seedu.address.logic.commands.exceptions.CommandException;","lastModifiedDate":"2022-03-10"},{"lineNumber":8,"author":{"gitId":"hieunm1821"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2022-03-10"},{"lineNumber":9,"author":{"gitId":"hieunm1821"},"content":"import seedu.address.model.driver.Driver;","lastModifiedDate":"2022-03-10"},{"lineNumber":10,"author":{"gitId":"hieunm1821"},"content":"","lastModifiedDate":"2022-03-10"},{"lineNumber":11,"author":{"gitId":"hieunm1821"},"content":"/**","lastModifiedDate":"2022-03-11"},{"lineNumber":12,"author":{"gitId":"hieunm1821"},"content":" * Adds a driver to the database.","lastModifiedDate":"2022-03-11"},{"lineNumber":13,"author":{"gitId":"hieunm1821"},"content":" */","lastModifiedDate":"2022-03-11"},{"lineNumber":14,"author":{"gitId":"hieunm1821"},"content":"public class AddDriverCommand extends Command {","lastModifiedDate":"2022-03-10"},{"lineNumber":15,"author":{"gitId":"hieunm1821"},"content":"    public static final String COMMAND_WORD \u003d \"adddriver\";","lastModifiedDate":"2022-03-10"},{"lineNumber":16,"author":{"gitId":"hieunm1821"},"content":"","lastModifiedDate":"2022-03-10"},{"lineNumber":17,"author":{"gitId":"hieunm1821"},"content":"    public static final String MESSAGE_USAGE \u003d COMMAND_WORD + \": Adds a driver to the database. \"","lastModifiedDate":"2022-03-10"},{"lineNumber":18,"author":{"gitId":"hieunm1821"},"content":"            + \"Parameters: \"","lastModifiedDate":"2022-03-10"},{"lineNumber":19,"author":{"gitId":"hieunm1821"},"content":"            + PREFIX_NAME + \"NAME \"","lastModifiedDate":"2022-03-10"},{"lineNumber":20,"author":{"gitId":"hieunm1821"},"content":"            + PREFIX_PHONE + \"PHONE \"","lastModifiedDate":"2022-03-10"},{"lineNumber":21,"author":{"gitId":"hieunm1821"},"content":"            + \"Example: \" + COMMAND_WORD + \" \"","lastModifiedDate":"2022-03-10"},{"lineNumber":22,"author":{"gitId":"hieunm1821"},"content":"            + PREFIX_NAME + \"John Doe \"","lastModifiedDate":"2022-03-10"},{"lineNumber":23,"author":{"gitId":"hieunm1821"},"content":"            + PREFIX_PHONE + \"98765432 \";","lastModifiedDate":"2022-03-10"},{"lineNumber":24,"author":{"gitId":"hieunm1821"},"content":"","lastModifiedDate":"2022-03-10"},{"lineNumber":25,"author":{"gitId":"hieunm1821"},"content":"    public static final String MESSAGE_SUCCESS \u003d \"New driver added: %1$s\";","lastModifiedDate":"2022-03-10"},{"lineNumber":26,"author":{"gitId":"hieunm1821"},"content":"    public static final String MESSAGE_DUPLICATE_DRIVER \u003d \"This driver already exists in the database\";","lastModifiedDate":"2022-03-10"},{"lineNumber":27,"author":{"gitId":"hieunm1821"},"content":"","lastModifiedDate":"2022-03-10"},{"lineNumber":28,"author":{"gitId":"hieunm1821"},"content":"    private final Driver toAdd;","lastModifiedDate":"2022-03-10"},{"lineNumber":29,"author":{"gitId":"hieunm1821"},"content":"","lastModifiedDate":"2022-03-10"},{"lineNumber":30,"author":{"gitId":"hieunm1821"},"content":"    /**","lastModifiedDate":"2022-03-11"},{"lineNumber":31,"author":{"gitId":"hieunm1821"},"content":"     * Creates an AddDriverCommand to add the specified {@code Driver}","lastModifiedDate":"2022-03-11"},{"lineNumber":32,"author":{"gitId":"hieunm1821"},"content":"     */","lastModifiedDate":"2022-03-11"},{"lineNumber":33,"author":{"gitId":"hieunm1821"},"content":"    public AddDriverCommand(Driver driver) {","lastModifiedDate":"2022-03-10"},{"lineNumber":34,"author":{"gitId":"hieunm1821"},"content":"        requireNonNull(driver);","lastModifiedDate":"2022-03-10"},{"lineNumber":35,"author":{"gitId":"hieunm1821"},"content":"        toAdd \u003d driver;","lastModifiedDate":"2022-03-10"},{"lineNumber":36,"author":{"gitId":"hieunm1821"},"content":"    }","lastModifiedDate":"2022-03-10"},{"lineNumber":37,"author":{"gitId":"hieunm1821"},"content":"","lastModifiedDate":"2022-03-10"},{"lineNumber":38,"author":{"gitId":"hieunm1821"},"content":"    @Override","lastModifiedDate":"2022-03-10"},{"lineNumber":39,"author":{"gitId":"hieunm1821"},"content":"    public CommandResult execute(Model model) throws CommandException {","lastModifiedDate":"2022-03-10"},{"lineNumber":40,"author":{"gitId":"hieunm1821"},"content":"        requireNonNull(model);","lastModifiedDate":"2022-03-10"},{"lineNumber":41,"author":{"gitId":"hieunm1821"},"content":"","lastModifiedDate":"2022-03-10"},{"lineNumber":42,"author":{"gitId":"hieunm1821"},"content":"        if (model.hasDriver(toAdd)) {","lastModifiedDate":"2022-03-10"},{"lineNumber":43,"author":{"gitId":"hieunm1821"},"content":"            throw new CommandException(MESSAGE_DUPLICATE_DRIVER);","lastModifiedDate":"2022-03-10"},{"lineNumber":44,"author":{"gitId":"hieunm1821"},"content":"        }","lastModifiedDate":"2022-03-10"},{"lineNumber":45,"author":{"gitId":"hieunm1821"},"content":"","lastModifiedDate":"2022-03-10"},{"lineNumber":46,"author":{"gitId":"hieunm1821"},"content":"        model.addDriver(toAdd);","lastModifiedDate":"2022-03-10"},{"lineNumber":47,"author":{"gitId":"hieunm1821"},"content":"        return new CommandResult(String.format(MESSAGE_SUCCESS, toAdd), false, false, false, true, false);","lastModifiedDate":"2022-03-14"},{"lineNumber":48,"author":{"gitId":"hieunm1821"},"content":"    }","lastModifiedDate":"2022-03-10"},{"lineNumber":49,"author":{"gitId":"hieunm1821"},"content":"","lastModifiedDate":"2022-03-10"},{"lineNumber":50,"author":{"gitId":"hieunm1821"},"content":"    @Override","lastModifiedDate":"2022-03-10"},{"lineNumber":51,"author":{"gitId":"hieunm1821"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2022-03-10"},{"lineNumber":52,"author":{"gitId":"hieunm1821"},"content":"        return other \u003d\u003d this // short circuit if same object","lastModifiedDate":"2022-03-10"},{"lineNumber":53,"author":{"gitId":"hieunm1821"},"content":"                || (other instanceof AddDriverCommand // instanceof handles nulls","lastModifiedDate":"2022-03-10"},{"lineNumber":54,"author":{"gitId":"hieunm1821"},"content":"                \u0026\u0026 toAdd.equals(((AddDriverCommand) other).toAdd));","lastModifiedDate":"2022-03-10"},{"lineNumber":55,"author":{"gitId":"hieunm1821"},"content":"    }","lastModifiedDate":"2022-03-10"},{"lineNumber":56,"author":{"gitId":"hieunm1821"},"content":"}","lastModifiedDate":"2022-03-10"}],"authorContributionMap":{"hieunm1821":56}},{"path":"src/main/java/seedu/address/logic/commands/AddOrderCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"xzzz3"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2022-03-10"},{"lineNumber":2,"author":{"gitId":"xzzz3"},"content":"","lastModifiedDate":"2022-03-10"},{"lineNumber":3,"author":{"gitId":"xzzz3"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2022-03-10"},{"lineNumber":4,"author":{"gitId":"xzzz3"},"content":"import static seedu.address.commons.core.Messages.MESSAGE_INVALID_CUSTOMER_PHONE;","lastModifiedDate":"2022-03-29"},{"lineNumber":5,"author":{"gitId":"xzzz3"},"content":"import static seedu.address.commons.core.Messages.MESSAGE_INVALID_DISH_INPUT;","lastModifiedDate":"2022-03-29"},{"lineNumber":6,"author":{"gitId":"xzzz3"},"content":"import static seedu.address.commons.core.Messages.MESSAGE_NO_FREE_DRIVER;","lastModifiedDate":"2022-03-29"},{"lineNumber":7,"author":{"gitId":"xzzz3"},"content":"import static seedu.address.commons.util.CollectionUtil.requireAllNonNull;","lastModifiedDate":"2022-03-10"},{"lineNumber":8,"author":{"gitId":"xzzz3"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_DISH;","lastModifiedDate":"2022-03-28"},{"lineNumber":9,"author":{"gitId":"xzzz3"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_PHONE;","lastModifiedDate":"2022-03-28"},{"lineNumber":10,"author":{"gitId":"jaegarpoon"},"content":"import static seedu.address.model.Model.PREDICATE_SHOW_ALL_ORDERS;","lastModifiedDate":"2022-03-30"},{"lineNumber":11,"author":{"gitId":"xzzz3"},"content":"","lastModifiedDate":"2022-03-10"},{"lineNumber":12,"author":{"gitId":"xzzz3"},"content":"import java.util.ArrayList;","lastModifiedDate":"2022-03-17"},{"lineNumber":13,"author":{"gitId":"xzzz3"},"content":"import java.util.Arrays;","lastModifiedDate":"2022-03-17"},{"lineNumber":14,"author":{"gitId":"xzzz3"},"content":"import java.util.List;","lastModifiedDate":"2022-03-17"},{"lineNumber":15,"author":{"gitId":"xzzz3"},"content":"","lastModifiedDate":"2022-03-17"},{"lineNumber":16,"author":{"gitId":"xzzz3"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2022-03-17"},{"lineNumber":17,"author":{"gitId":"xzzz3"},"content":"import seedu.address.logic.commands.exceptions.CommandException;","lastModifiedDate":"2022-03-28"},{"lineNumber":18,"author":{"gitId":"xzzz3"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2022-03-12"},{"lineNumber":19,"author":{"gitId":"xzzz3"},"content":"import seedu.address.model.customer.Customer;","lastModifiedDate":"2022-03-17"},{"lineNumber":20,"author":{"gitId":"jaegarpoon"},"content":"import seedu.address.model.dish.Dish;","lastModifiedDate":"2022-03-24"},{"lineNumber":21,"author":{"gitId":"jaegarpoon"},"content":"import seedu.address.model.driver.Driver;","lastModifiedDate":"2022-03-27"},{"lineNumber":22,"author":{"gitId":"xzzz3"},"content":"import seedu.address.model.order.Order;","lastModifiedDate":"2022-03-12"},{"lineNumber":23,"author":{"gitId":"xzzz3"},"content":"","lastModifiedDate":"2022-03-12"},{"lineNumber":24,"author":{"gitId":"xzzz3"},"content":"public class AddOrderCommand extends Command {","lastModifiedDate":"2022-03-10"},{"lineNumber":25,"author":{"gitId":"xzzz3"},"content":"","lastModifiedDate":"2022-03-10"},{"lineNumber":26,"author":{"gitId":"xzzz3"},"content":"    public static final String COMMAND_WORD \u003d \"addorder\";","lastModifiedDate":"2022-03-10"},{"lineNumber":27,"author":{"gitId":"xzzz3"},"content":"","lastModifiedDate":"2022-03-10"},{"lineNumber":28,"author":{"gitId":"xzzz3"},"content":"    public static final String MESSAGE_USAGE \u003d COMMAND_WORD","lastModifiedDate":"2022-03-10"},{"lineNumber":29,"author":{"gitId":"xzzz3"},"content":"            + \": Adds an order.\\n\"","lastModifiedDate":"2022-03-10"},{"lineNumber":30,"author":{"gitId":"xzzz3"},"content":"            + \"Parameters: \" + PREFIX_PHONE","lastModifiedDate":"2022-03-28"},{"lineNumber":31,"author":{"gitId":"xzzz3"},"content":"            + \"PHONE \" + PREFIX_DISH + \"DISHES\\n\"","lastModifiedDate":"2022-03-30"},{"lineNumber":32,"author":{"gitId":"xzzz3"},"content":"            + \"Example: \" + COMMAND_WORD","lastModifiedDate":"2022-03-10"},{"lineNumber":33,"author":{"gitId":"xzzz3"},"content":"            + PREFIX_PHONE","lastModifiedDate":"2022-03-28"},{"lineNumber":34,"author":{"gitId":"xzzz3"},"content":"            + \"87654321 \" + PREFIX_DISH + \"Chicken Pasta, Fries\";","lastModifiedDate":"2022-03-28"},{"lineNumber":35,"author":{"gitId":"xzzz3"},"content":"","lastModifiedDate":"2022-03-10"},{"lineNumber":36,"author":{"gitId":"xzzz3"},"content":"    public static final String MESSAGE_SUCCESS \u003d \"New order added: %1$s\";","lastModifiedDate":"2022-03-10"},{"lineNumber":37,"author":{"gitId":"xzzz3"},"content":"    public static final String MESSAGE_DUPLICATE_ORDER \u003d \"This order already exists!\";","lastModifiedDate":"2022-03-10"},{"lineNumber":38,"author":{"gitId":"xzzz3"},"content":"","lastModifiedDate":"2022-03-10"},{"lineNumber":39,"author":{"gitId":"xzzz3"},"content":"","lastModifiedDate":"2022-03-10"},{"lineNumber":40,"author":{"gitId":"xzzz3"},"content":"    private final String phoneInput;","lastModifiedDate":"2022-03-17"},{"lineNumber":41,"author":{"gitId":"xzzz3"},"content":"    private final String[] dishesInput;","lastModifiedDate":"2022-03-17"},{"lineNumber":42,"author":{"gitId":"xzzz3"},"content":"","lastModifiedDate":"2022-03-10"},{"lineNumber":43,"author":{"gitId":"xzzz3"},"content":"    /**","lastModifiedDate":"2022-03-10"},{"lineNumber":44,"author":{"gitId":"xzzz3"},"content":"     * Creates an AddCommand to add the specified {@code Order}","lastModifiedDate":"2022-03-10"},{"lineNumber":45,"author":{"gitId":"xzzz3"},"content":"     */","lastModifiedDate":"2022-03-10"},{"lineNumber":46,"author":{"gitId":"xzzz3"},"content":"    public AddOrderCommand(String phone, String ... dishes) {","lastModifiedDate":"2022-03-10"},{"lineNumber":47,"author":{"gitId":"xzzz3"},"content":"        requireAllNonNull(phone, dishes);","lastModifiedDate":"2022-03-10"},{"lineNumber":48,"author":{"gitId":"xzzz3"},"content":"        this.phoneInput \u003d phone;","lastModifiedDate":"2022-03-17"},{"lineNumber":49,"author":{"gitId":"xzzz3"},"content":"        this.dishesInput \u003d dishes;","lastModifiedDate":"2022-03-17"},{"lineNumber":50,"author":{"gitId":"xzzz3"},"content":"    }","lastModifiedDate":"2022-03-10"},{"lineNumber":51,"author":{"gitId":"xzzz3"},"content":"","lastModifiedDate":"2022-03-10"},{"lineNumber":52,"author":{"gitId":"xzzz3"},"content":"    @Override","lastModifiedDate":"2022-03-10"},{"lineNumber":53,"author":{"gitId":"xzzz3"},"content":"    public CommandResult execute(Model model) {","lastModifiedDate":"2022-03-10"},{"lineNumber":54,"author":{"gitId":"xzzz3"},"content":"        requireNonNull(model);","lastModifiedDate":"2022-03-10"},{"lineNumber":55,"author":{"gitId":"jaegarpoon"},"content":"        model.updateFilteredOrderList(PREDICATE_SHOW_ALL_ORDERS);","lastModifiedDate":"2022-03-30"},{"lineNumber":56,"author":{"gitId":"xzzz3"},"content":"        return new CommandResult(MESSAGE_SUCCESS,","lastModifiedDate":"2022-03-28"},{"lineNumber":57,"author":{"gitId":"xzzz3"},"content":"                false, false, false, false, true);","lastModifiedDate":"2022-03-17"},{"lineNumber":58,"author":{"gitId":"xzzz3"},"content":"    }","lastModifiedDate":"2022-03-17"},{"lineNumber":59,"author":{"gitId":"xzzz3"},"content":"","lastModifiedDate":"2022-03-17"},{"lineNumber":60,"author":{"gitId":"xzzz3"},"content":"    /**","lastModifiedDate":"2022-03-17"},{"lineNumber":61,"author":{"gitId":"xzzz3"},"content":"     * Executes the AddOrderCommand and returns the result message.","lastModifiedDate":"2022-03-17"},{"lineNumber":62,"author":{"gitId":"xzzz3"},"content":"     */","lastModifiedDate":"2022-03-17"},{"lineNumber":63,"author":{"gitId":"xzzz3"},"content":"    public CommandResult execute(Model model,","lastModifiedDate":"2022-03-17"},{"lineNumber":64,"author":{"gitId":"xzzz3"},"content":"                                 ObservableList\u003cCustomer\u003e customers, ObservableList\u003cDriver\u003e drivers,","lastModifiedDate":"2022-03-17"},{"lineNumber":65,"author":{"gitId":"xzzz3"},"content":"                                 ObservableList\u003cDish\u003e dishes) throws CommandException {","lastModifiedDate":"2022-03-28"},{"lineNumber":66,"author":{"gitId":"xzzz3"},"content":"        requireAllNonNull(model, customers, drivers, dishes);","lastModifiedDate":"2022-03-17"},{"lineNumber":67,"author":{"gitId":"xzzz3"},"content":"","lastModifiedDate":"2022-03-17"},{"lineNumber":68,"author":{"gitId":"xzzz3"},"content":"        // checking for free driver to assign for the newly created order","lastModifiedDate":"2022-03-17"},{"lineNumber":69,"author":{"gitId":"xzzz3"},"content":"        Driver freeDriver \u003d null;","lastModifiedDate":"2022-03-17"},{"lineNumber":70,"author":{"gitId":"xzzz3"},"content":"        for (Driver driver : drivers) {","lastModifiedDate":"2022-03-17"},{"lineNumber":71,"author":{"gitId":"xzzz3"},"content":"            if (driver.isFree()) {","lastModifiedDate":"2022-03-17"},{"lineNumber":72,"author":{"gitId":"xzzz3"},"content":"                freeDriver \u003d driver;","lastModifiedDate":"2022-03-17"},{"lineNumber":73,"author":{"gitId":"xzzz3"},"content":"                break;","lastModifiedDate":"2022-03-17"},{"lineNumber":74,"author":{"gitId":"xzzz3"},"content":"            }","lastModifiedDate":"2022-03-17"},{"lineNumber":75,"author":{"gitId":"xzzz3"},"content":"        }","lastModifiedDate":"2022-03-17"},{"lineNumber":76,"author":{"gitId":"xzzz3"},"content":"","lastModifiedDate":"2022-03-17"},{"lineNumber":77,"author":{"gitId":"xzzz3"},"content":"        if (freeDriver \u003d\u003d null) {","lastModifiedDate":"2022-03-17"},{"lineNumber":78,"author":{"gitId":"xzzz3"},"content":"            throw new CommandException(MESSAGE_NO_FREE_DRIVER);","lastModifiedDate":"2022-03-29"},{"lineNumber":79,"author":{"gitId":"xzzz3"},"content":"        }","lastModifiedDate":"2022-03-17"},{"lineNumber":80,"author":{"gitId":"xzzz3"},"content":"","lastModifiedDate":"2022-03-17"},{"lineNumber":81,"author":{"gitId":"xzzz3"},"content":"        // matching customer phone number in input to the actual customer in stored data","lastModifiedDate":"2022-03-17"},{"lineNumber":82,"author":{"gitId":"xzzz3"},"content":"        Customer customer \u003d null;","lastModifiedDate":"2022-03-17"},{"lineNumber":83,"author":{"gitId":"xzzz3"},"content":"        for (Customer storedCustomer : customers) {","lastModifiedDate":"2022-03-17"},{"lineNumber":84,"author":{"gitId":"xzzz3"},"content":"            if (storedCustomer.getPhone().toString().equals(phoneInput)) {","lastModifiedDate":"2022-03-17"},{"lineNumber":85,"author":{"gitId":"xzzz3"},"content":"                customer \u003d storedCustomer;","lastModifiedDate":"2022-03-17"},{"lineNumber":86,"author":{"gitId":"xzzz3"},"content":"                break;","lastModifiedDate":"2022-03-17"},{"lineNumber":87,"author":{"gitId":"xzzz3"},"content":"            }","lastModifiedDate":"2022-03-17"},{"lineNumber":88,"author":{"gitId":"xzzz3"},"content":"        }","lastModifiedDate":"2022-03-17"},{"lineNumber":89,"author":{"gitId":"xzzz3"},"content":"","lastModifiedDate":"2022-03-17"},{"lineNumber":90,"author":{"gitId":"xzzz3"},"content":"        if (customer \u003d\u003d null) {","lastModifiedDate":"2022-03-17"},{"lineNumber":91,"author":{"gitId":"xzzz3"},"content":"            throw new CommandException(MESSAGE_INVALID_CUSTOMER_PHONE);","lastModifiedDate":"2022-03-29"},{"lineNumber":92,"author":{"gitId":"xzzz3"},"content":"        }","lastModifiedDate":"2022-03-17"},{"lineNumber":93,"author":{"gitId":"xzzz3"},"content":"","lastModifiedDate":"2022-03-17"},{"lineNumber":94,"author":{"gitId":"xzzz3"},"content":"        // matching dishes in string in the input to the actual dishes in menu","lastModifiedDate":"2022-03-17"},{"lineNumber":95,"author":{"gitId":"xzzz3"},"content":"        ArrayList\u003cDish\u003e addedDishes \u003d new ArrayList\u003cDish\u003e ();","lastModifiedDate":"2022-03-17"},{"lineNumber":96,"author":{"gitId":"xzzz3"},"content":"","lastModifiedDate":"2022-03-17"},{"lineNumber":97,"author":{"gitId":"xzzz3"},"content":"        List\u003cString\u003e dishesInputList \u003d Arrays.asList(dishesInput);","lastModifiedDate":"2022-03-17"},{"lineNumber":98,"author":{"gitId":"xzzz3"},"content":"        for (Dish dish : dishes) {","lastModifiedDate":"2022-03-17"},{"lineNumber":99,"author":{"gitId":"xzzz3"},"content":"            if (dishesInputList.contains(dish.toString())) {","lastModifiedDate":"2022-03-17"},{"lineNumber":100,"author":{"gitId":"xzzz3"},"content":"                addedDishes.add(dish);","lastModifiedDate":"2022-03-28"},{"lineNumber":101,"author":{"gitId":"xzzz3"},"content":"            }","lastModifiedDate":"2022-03-17"},{"lineNumber":102,"author":{"gitId":"xzzz3"},"content":"        }","lastModifiedDate":"2022-03-17"},{"lineNumber":103,"author":{"gitId":"xzzz3"},"content":"","lastModifiedDate":"2022-03-17"},{"lineNumber":104,"author":{"gitId":"xzzz3"},"content":"        if (dishesInputList.size() !\u003d addedDishes.size()) {","lastModifiedDate":"2022-03-17"},{"lineNumber":105,"author":{"gitId":"xzzz3"},"content":"            throw new CommandException(MESSAGE_INVALID_DISH_INPUT);","lastModifiedDate":"2022-03-29"},{"lineNumber":106,"author":{"gitId":"xzzz3"},"content":"        }","lastModifiedDate":"2022-03-17"},{"lineNumber":107,"author":{"gitId":"xzzz3"},"content":"","lastModifiedDate":"2022-03-17"},{"lineNumber":108,"author":{"gitId":"xzzz3"},"content":"        Order toAdd \u003d new Order(customer, freeDriver, addedDishes.toArray(new Dish[0]));","lastModifiedDate":"2022-03-17"},{"lineNumber":109,"author":{"gitId":"xzzz3"},"content":"","lastModifiedDate":"2022-03-28"},{"lineNumber":110,"author":{"gitId":"xzzz3"},"content":"        if (model.hasOrder(toAdd)) {","lastModifiedDate":"2022-03-28"},{"lineNumber":111,"author":{"gitId":"xzzz3"},"content":"            throw new CommandException(MESSAGE_DUPLICATE_ORDER);","lastModifiedDate":"2022-03-28"},{"lineNumber":112,"author":{"gitId":"xzzz3"},"content":"        }","lastModifiedDate":"2022-03-28"},{"lineNumber":113,"author":{"gitId":"xzzz3"},"content":"","lastModifiedDate":"2022-03-28"},{"lineNumber":114,"author":{"gitId":"xzzz3"},"content":"        model.addOrder(toAdd);","lastModifiedDate":"2022-03-10"},{"lineNumber":115,"author":{"gitId":"xzzz3"},"content":"        return new CommandResult(String.format(MESSAGE_SUCCESS, toAdd),","lastModifiedDate":"2022-03-14"},{"lineNumber":116,"author":{"gitId":"xzzz3"},"content":"                false, false, false, false, true);","lastModifiedDate":"2022-03-14"},{"lineNumber":117,"author":{"gitId":"xzzz3"},"content":"    }","lastModifiedDate":"2022-03-10"},{"lineNumber":118,"author":{"gitId":"xzzz3"},"content":"","lastModifiedDate":"2022-03-17"},{"lineNumber":119,"author":{"gitId":"xzzz3"},"content":"","lastModifiedDate":"2022-03-17"},{"lineNumber":120,"author":{"gitId":"xzzz3"},"content":"}","lastModifiedDate":"2022-03-10"}],"authorContributionMap":{"xzzz3":116,"jaegarpoon":4}},{"path":"src/main/java/seedu/address/logic/commands/ClearCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2016-09-22"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2017-05-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import seedu.address.model.AddressBook;","lastModifiedDate":"2016-09-22"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2018-08-08"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":8,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-24"},{"lineNumber":9,"author":{"gitId":"-"},"content":" * Clears the address book.","lastModifiedDate":"2016-08-24"},{"lineNumber":10,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-24"},{"lineNumber":11,"author":{"gitId":"-"},"content":"public class ClearCommand extends Command {","lastModifiedDate":"2018-04-19"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    public static final String COMMAND_WORD \u003d \"clear\";","lastModifiedDate":"2016-08-24"},{"lineNumber":14,"author":{"gitId":"hieunm1821"},"content":"    public static final String MESSAGE_SUCCESS \u003d \"Database has been cleared!\";","lastModifiedDate":"2022-03-30"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-24"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    public CommandResult execute(Model model) {","lastModifiedDate":"2019-01-25"},{"lineNumber":19,"author":{"gitId":"-"},"content":"        requireNonNull(model);","lastModifiedDate":"2017-05-15"},{"lineNumber":20,"author":{"gitId":"-"},"content":"        model.setAddressBook(new AddressBook());","lastModifiedDate":"2018-11-27"},{"lineNumber":21,"author":{"gitId":"-"},"content":"        return new CommandResult(MESSAGE_SUCCESS);","lastModifiedDate":"2016-08-24"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":23,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-24"}],"authorContributionMap":{"hieunm1821":1,"-":22}},{"path":"src/main/java/seedu/address/logic/commands/CommandResult.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2016-09-22"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2017-05-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.util.Objects;","lastModifiedDate":"2018-12-09"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":7,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-24"},{"lineNumber":8,"author":{"gitId":"-"},"content":" * Represents the result of a command execution.","lastModifiedDate":"2016-08-24"},{"lineNumber":9,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-24"},{"lineNumber":10,"author":{"gitId":"-"},"content":"public class CommandResult {","lastModifiedDate":"2016-08-24"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-28"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    private final String feedbackToUser;","lastModifiedDate":"2018-12-09"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":14,"author":{"gitId":"-"},"content":"    /** Help information should be shown to the user. */","lastModifiedDate":"2018-12-09"},{"lineNumber":15,"author":{"gitId":"-"},"content":"    private final boolean showHelp;","lastModifiedDate":"2018-12-09"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    /** The application should exit. */","lastModifiedDate":"2018-12-09"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    private final boolean exit;","lastModifiedDate":"2018-12-09"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":20,"author":{"gitId":"jaegarpoon"},"content":"    /** Command related to dish **/","lastModifiedDate":"2022-03-11"},{"lineNumber":21,"author":{"gitId":"jaegarpoon"},"content":"    private final boolean isDish;","lastModifiedDate":"2022-03-11"},{"lineNumber":22,"author":{"gitId":"jaegarpoon"},"content":"","lastModifiedDate":"2022-03-11"},{"lineNumber":23,"author":{"gitId":"jaegarpoon"},"content":"    /** Command related to driver **/","lastModifiedDate":"2022-03-11"},{"lineNumber":24,"author":{"gitId":"jaegarpoon"},"content":"    private final boolean isDriver;","lastModifiedDate":"2022-03-11"},{"lineNumber":25,"author":{"gitId":"jaegarpoon"},"content":"","lastModifiedDate":"2022-03-11"},{"lineNumber":26,"author":{"gitId":"jaegarpoon"},"content":"    /** Command related to order **/","lastModifiedDate":"2022-03-11"},{"lineNumber":27,"author":{"gitId":"jaegarpoon"},"content":"    private final boolean isOrder;","lastModifiedDate":"2022-03-11"},{"lineNumber":28,"author":{"gitId":"jaegarpoon"},"content":"","lastModifiedDate":"2022-03-11"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-12-09"},{"lineNumber":30,"author":{"gitId":"-"},"content":"     * Constructs a {@code CommandResult} with the specified fields.","lastModifiedDate":"2018-12-09"},{"lineNumber":31,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-12-09"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    public CommandResult(String feedbackToUser, boolean showHelp, boolean exit) {","lastModifiedDate":"2018-12-09"},{"lineNumber":33,"author":{"gitId":"-"},"content":"        this.feedbackToUser \u003d requireNonNull(feedbackToUser);","lastModifiedDate":"2017-05-15"},{"lineNumber":34,"author":{"gitId":"-"},"content":"        this.showHelp \u003d showHelp;","lastModifiedDate":"2018-12-09"},{"lineNumber":35,"author":{"gitId":"-"},"content":"        this.exit \u003d exit;","lastModifiedDate":"2018-12-09"},{"lineNumber":36,"author":{"gitId":"jaegarpoon"},"content":"        this.isDish \u003d false;","lastModifiedDate":"2022-03-11"},{"lineNumber":37,"author":{"gitId":"jaegarpoon"},"content":"        this.isDriver \u003d false;","lastModifiedDate":"2022-03-11"},{"lineNumber":38,"author":{"gitId":"jaegarpoon"},"content":"        this.isOrder \u003d false;","lastModifiedDate":"2022-03-11"},{"lineNumber":39,"author":{"gitId":"jaegarpoon"},"content":"    }","lastModifiedDate":"2022-03-11"},{"lineNumber":40,"author":{"gitId":"jaegarpoon"},"content":"","lastModifiedDate":"2022-03-11"},{"lineNumber":41,"author":{"gitId":"jaegarpoon"},"content":"    /**","lastModifiedDate":"2022-03-11"},{"lineNumber":42,"author":{"gitId":"jaegarpoon"},"content":"     * Constructs a {@code CommandResult} with the specified fields, for FoodOnWheels.","lastModifiedDate":"2022-03-11"},{"lineNumber":43,"author":{"gitId":"jaegarpoon"},"content":"     */","lastModifiedDate":"2022-03-11"},{"lineNumber":44,"author":{"gitId":"jaegarpoon"},"content":"    public CommandResult(String feedbackToUser, boolean showHelp,","lastModifiedDate":"2022-03-11"},{"lineNumber":45,"author":{"gitId":"jaegarpoon"},"content":"            boolean exit, boolean isDish, boolean isDriver, boolean isOrder) {","lastModifiedDate":"2022-03-11"},{"lineNumber":46,"author":{"gitId":"jaegarpoon"},"content":"        this.feedbackToUser \u003d requireNonNull(feedbackToUser);","lastModifiedDate":"2022-03-11"},{"lineNumber":47,"author":{"gitId":"jaegarpoon"},"content":"        this.showHelp \u003d showHelp;","lastModifiedDate":"2022-03-11"},{"lineNumber":48,"author":{"gitId":"jaegarpoon"},"content":"        this.exit \u003d exit;","lastModifiedDate":"2022-03-11"},{"lineNumber":49,"author":{"gitId":"jaegarpoon"},"content":"        this.isDish \u003d isDish;","lastModifiedDate":"2022-03-11"},{"lineNumber":50,"author":{"gitId":"jaegarpoon"},"content":"        this.isDriver \u003d isDriver;","lastModifiedDate":"2022-03-11"},{"lineNumber":51,"author":{"gitId":"jaegarpoon"},"content":"        this.isOrder \u003d isOrder;","lastModifiedDate":"2022-03-11"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-12-09"},{"lineNumber":53,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":54,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-12-09"},{"lineNumber":55,"author":{"gitId":"-"},"content":"     * Constructs a {@code CommandResult} with the specified {@code feedbackToUser},","lastModifiedDate":"2018-12-09"},{"lineNumber":56,"author":{"gitId":"-"},"content":"     * and other fields set to their default value.","lastModifiedDate":"2018-12-09"},{"lineNumber":57,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-12-09"},{"lineNumber":58,"author":{"gitId":"-"},"content":"    public CommandResult(String feedbackToUser) {","lastModifiedDate":"2018-12-09"},{"lineNumber":59,"author":{"gitId":"-"},"content":"        this(feedbackToUser, false, false);","lastModifiedDate":"2018-12-09"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":61,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":62,"author":{"gitId":"-"},"content":"    public String getFeedbackToUser() {","lastModifiedDate":"2018-12-09"},{"lineNumber":63,"author":{"gitId":"-"},"content":"        return feedbackToUser;","lastModifiedDate":"2018-12-09"},{"lineNumber":64,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-12-09"},{"lineNumber":65,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":66,"author":{"gitId":"-"},"content":"    public boolean isShowHelp() {","lastModifiedDate":"2018-12-09"},{"lineNumber":67,"author":{"gitId":"-"},"content":"        return showHelp;","lastModifiedDate":"2018-12-09"},{"lineNumber":68,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-12-09"},{"lineNumber":69,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":70,"author":{"gitId":"-"},"content":"    public boolean isExit() {","lastModifiedDate":"2018-12-09"},{"lineNumber":71,"author":{"gitId":"-"},"content":"        return exit;","lastModifiedDate":"2018-12-09"},{"lineNumber":72,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-12-09"},{"lineNumber":73,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":74,"author":{"gitId":"jaegarpoon"},"content":"    public boolean isDish() {","lastModifiedDate":"2022-03-11"},{"lineNumber":75,"author":{"gitId":"jaegarpoon"},"content":"        return isDish;","lastModifiedDate":"2022-03-11"},{"lineNumber":76,"author":{"gitId":"jaegarpoon"},"content":"    }","lastModifiedDate":"2022-03-11"},{"lineNumber":77,"author":{"gitId":"jaegarpoon"},"content":"","lastModifiedDate":"2022-03-11"},{"lineNumber":78,"author":{"gitId":"jaegarpoon"},"content":"    public boolean isDriver() {","lastModifiedDate":"2022-03-11"},{"lineNumber":79,"author":{"gitId":"jaegarpoon"},"content":"        return isDriver;","lastModifiedDate":"2022-03-11"},{"lineNumber":80,"author":{"gitId":"jaegarpoon"},"content":"    }","lastModifiedDate":"2022-03-11"},{"lineNumber":81,"author":{"gitId":"jaegarpoon"},"content":"","lastModifiedDate":"2022-03-11"},{"lineNumber":82,"author":{"gitId":"jaegarpoon"},"content":"    public boolean isOrder() {","lastModifiedDate":"2022-03-11"},{"lineNumber":83,"author":{"gitId":"jaegarpoon"},"content":"        return isOrder;","lastModifiedDate":"2022-03-11"},{"lineNumber":84,"author":{"gitId":"jaegarpoon"},"content":"    }","lastModifiedDate":"2022-03-11"},{"lineNumber":85,"author":{"gitId":"jaegarpoon"},"content":"","lastModifiedDate":"2022-03-11"},{"lineNumber":86,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2018-12-09"},{"lineNumber":87,"author":{"gitId":"-"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2018-12-09"},{"lineNumber":88,"author":{"gitId":"-"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2018-12-09"},{"lineNumber":89,"author":{"gitId":"-"},"content":"            return true;","lastModifiedDate":"2018-12-09"},{"lineNumber":90,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-12-09"},{"lineNumber":91,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":92,"author":{"gitId":"-"},"content":"        // instanceof handles nulls","lastModifiedDate":"2018-12-09"},{"lineNumber":93,"author":{"gitId":"-"},"content":"        if (!(other instanceof CommandResult)) {","lastModifiedDate":"2018-12-09"},{"lineNumber":94,"author":{"gitId":"-"},"content":"            return false;","lastModifiedDate":"2018-12-09"},{"lineNumber":95,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-12-09"},{"lineNumber":96,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":97,"author":{"gitId":"-"},"content":"        CommandResult otherCommandResult \u003d (CommandResult) other;","lastModifiedDate":"2018-12-09"},{"lineNumber":98,"author":{"gitId":"-"},"content":"        return feedbackToUser.equals(otherCommandResult.feedbackToUser)","lastModifiedDate":"2018-12-09"},{"lineNumber":99,"author":{"gitId":"-"},"content":"                \u0026\u0026 showHelp \u003d\u003d otherCommandResult.showHelp","lastModifiedDate":"2018-12-09"},{"lineNumber":100,"author":{"gitId":"-"},"content":"                \u0026\u0026 exit \u003d\u003d otherCommandResult.exit;","lastModifiedDate":"2018-12-09"},{"lineNumber":101,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-12-09"},{"lineNumber":102,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":103,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2018-12-09"},{"lineNumber":104,"author":{"gitId":"-"},"content":"    public int hashCode() {","lastModifiedDate":"2018-12-09"},{"lineNumber":105,"author":{"gitId":"-"},"content":"        return Objects.hash(feedbackToUser, showHelp, exit);","lastModifiedDate":"2018-12-09"},{"lineNumber":106,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-12-09"},{"lineNumber":107,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":108,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-24"}],"authorContributionMap":{"jaegarpoon":37,"-":71}},{"path":"src/main/java/seedu/address/logic/commands/DeleteCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2016-09-22"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2018-08-08"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.util.List;","lastModifiedDate":"2017-09-01"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-09-01"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.Messages;","lastModifiedDate":"2016-09-23"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.index.Index;","lastModifiedDate":"2017-05-25"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.exceptions.CommandException;","lastModifiedDate":"2017-02-05"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2018-08-08"},{"lineNumber":11,"author":{"gitId":"jaegarpoon"},"content":"import seedu.address.model.item.Person;","lastModifiedDate":"2022-03-11"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":13,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-24"},{"lineNumber":14,"author":{"gitId":"-"},"content":" * Deletes a person identified using it\u0027s displayed index from the address book.","lastModifiedDate":"2018-04-01"},{"lineNumber":15,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-24"},{"lineNumber":16,"author":{"gitId":"-"},"content":"public class DeleteCommand extends Command {","lastModifiedDate":"2018-04-19"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    public static final String COMMAND_WORD \u003d \"delete\";","lastModifiedDate":"2016-08-24"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_USAGE \u003d COMMAND_WORD","lastModifiedDate":"2016-08-24"},{"lineNumber":21,"author":{"gitId":"-"},"content":"            + \": Deletes the person identified by the index number used in the displayed person list.\\n\"","lastModifiedDate":"2018-04-01"},{"lineNumber":22,"author":{"gitId":"-"},"content":"            + \"Parameters: INDEX (must be a positive integer)\\n\"","lastModifiedDate":"2016-09-29"},{"lineNumber":23,"author":{"gitId":"-"},"content":"            + \"Example: \" + COMMAND_WORD + \" 1\";","lastModifiedDate":"2016-08-24"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_DELETE_PERSON_SUCCESS \u003d \"Deleted Person: %1$s\";","lastModifiedDate":"2016-08-24"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    private final Index targetIndex;","lastModifiedDate":"2017-06-27"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    public DeleteCommand(Index targetIndex) {","lastModifiedDate":"2017-05-25"},{"lineNumber":30,"author":{"gitId":"-"},"content":"        this.targetIndex \u003d targetIndex;","lastModifiedDate":"2016-09-22"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":32,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-24"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    public CommandResult execute(Model model) throws CommandException {","lastModifiedDate":"2019-01-25"},{"lineNumber":35,"author":{"gitId":"-"},"content":"        requireNonNull(model);","lastModifiedDate":"2018-08-08"},{"lineNumber":36,"author":{"gitId":"-"},"content":"        List\u003cPerson\u003e lastShownList \u003d model.getFilteredPersonList();","lastModifiedDate":"2018-04-19"},{"lineNumber":37,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        if (targetIndex.getZeroBased() \u003e\u003d lastShownList.size()) {","lastModifiedDate":"2018-04-19"},{"lineNumber":39,"author":{"gitId":"-"},"content":"            throw new CommandException(Messages.MESSAGE_INVALID_PERSON_DISPLAYED_INDEX);","lastModifiedDate":"2018-04-19"},{"lineNumber":40,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-04-19"},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":42,"author":{"gitId":"-"},"content":"        Person personToDelete \u003d lastShownList.get(targetIndex.getZeroBased());","lastModifiedDate":"2018-04-19"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        model.deletePerson(personToDelete);","lastModifiedDate":"2016-09-25"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        return new CommandResult(String.format(MESSAGE_DELETE_PERSON_SUCCESS, personToDelete));","lastModifiedDate":"2016-09-22"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":46,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-28"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2017-06-27"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2017-06-27"},{"lineNumber":49,"author":{"gitId":"-"},"content":"        return other \u003d\u003d this // short circuit if same object","lastModifiedDate":"2017-06-27"},{"lineNumber":50,"author":{"gitId":"-"},"content":"                || (other instanceof DeleteCommand // instanceof handles nulls","lastModifiedDate":"2017-06-27"},{"lineNumber":51,"author":{"gitId":"-"},"content":"                \u0026\u0026 targetIndex.equals(((DeleteCommand) other).targetIndex)); // state check","lastModifiedDate":"2018-08-14"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-27"},{"lineNumber":53,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-24"}],"authorContributionMap":{"jaegarpoon":1,"-":52}},{"path":"src/main/java/seedu/address/logic/commands/DeleteCustomerCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"zxgoh"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2022-03-14"},{"lineNumber":2,"author":{"gitId":"zxgoh"},"content":"","lastModifiedDate":"2022-03-14"},{"lineNumber":3,"author":{"gitId":"zxgoh"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2022-03-14"},{"lineNumber":4,"author":{"gitId":"zxgoh"},"content":"","lastModifiedDate":"2022-03-14"},{"lineNumber":5,"author":{"gitId":"zxgoh"},"content":"import java.util.List;","lastModifiedDate":"2022-03-14"},{"lineNumber":6,"author":{"gitId":"zxgoh"},"content":"","lastModifiedDate":"2022-03-14"},{"lineNumber":7,"author":{"gitId":"zxgoh"},"content":"import seedu.address.commons.core.Messages;","lastModifiedDate":"2022-03-14"},{"lineNumber":8,"author":{"gitId":"zxgoh"},"content":"import seedu.address.commons.core.index.Index;","lastModifiedDate":"2022-03-14"},{"lineNumber":9,"author":{"gitId":"zxgoh"},"content":"import seedu.address.logic.commands.exceptions.CommandException;","lastModifiedDate":"2022-03-14"},{"lineNumber":10,"author":{"gitId":"zxgoh"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2022-03-14"},{"lineNumber":11,"author":{"gitId":"zxgoh"},"content":"import seedu.address.model.customer.Customer;","lastModifiedDate":"2022-03-14"},{"lineNumber":12,"author":{"gitId":"zxgoh"},"content":"","lastModifiedDate":"2022-03-14"},{"lineNumber":13,"author":{"gitId":"zxgoh"},"content":"/**","lastModifiedDate":"2022-03-14"},{"lineNumber":14,"author":{"gitId":"zxgoh"},"content":" * Deletes a customer identified using it\u0027s displayed index from the address book.","lastModifiedDate":"2022-03-14"},{"lineNumber":15,"author":{"gitId":"zxgoh"},"content":" */","lastModifiedDate":"2022-03-14"},{"lineNumber":16,"author":{"gitId":"zxgoh"},"content":"public class DeleteCustomerCommand extends Command {","lastModifiedDate":"2022-03-14"},{"lineNumber":17,"author":{"gitId":"zxgoh"},"content":"","lastModifiedDate":"2022-03-14"},{"lineNumber":18,"author":{"gitId":"zxgoh"},"content":"    public static final String COMMAND_WORD \u003d \"deletecustomer\";","lastModifiedDate":"2022-03-14"},{"lineNumber":19,"author":{"gitId":"zxgoh"},"content":"","lastModifiedDate":"2022-03-14"},{"lineNumber":20,"author":{"gitId":"zxgoh"},"content":"    public static final String MESSAGE_USAGE \u003d COMMAND_WORD","lastModifiedDate":"2022-03-14"},{"lineNumber":21,"author":{"gitId":"zxgoh"},"content":"            + \": Deletes the customer identified by the index number used in the displayed customer list.\\n\"","lastModifiedDate":"2022-03-14"},{"lineNumber":22,"author":{"gitId":"zxgoh"},"content":"            + \"Parameters: INDEX (must be a positive integer)\\n\"","lastModifiedDate":"2022-03-14"},{"lineNumber":23,"author":{"gitId":"zxgoh"},"content":"            + \"Example: \" + COMMAND_WORD + \" 1\";","lastModifiedDate":"2022-03-14"},{"lineNumber":24,"author":{"gitId":"zxgoh"},"content":"","lastModifiedDate":"2022-03-14"},{"lineNumber":25,"author":{"gitId":"zxgoh"},"content":"    public static final String MESSAGE_DELETE_CUSTOMER_SUCCESS \u003d \"Deleted Customer: %1$s\";","lastModifiedDate":"2022-03-14"},{"lineNumber":26,"author":{"gitId":"zxgoh"},"content":"","lastModifiedDate":"2022-03-14"},{"lineNumber":27,"author":{"gitId":"zxgoh"},"content":"    private final Index targetIndex;","lastModifiedDate":"2022-03-14"},{"lineNumber":28,"author":{"gitId":"zxgoh"},"content":"","lastModifiedDate":"2022-03-14"},{"lineNumber":29,"author":{"gitId":"zxgoh"},"content":"    public DeleteCustomerCommand(Index targetIndex) {","lastModifiedDate":"2022-03-14"},{"lineNumber":30,"author":{"gitId":"zxgoh"},"content":"        this.targetIndex \u003d targetIndex;","lastModifiedDate":"2022-03-14"},{"lineNumber":31,"author":{"gitId":"zxgoh"},"content":"    }","lastModifiedDate":"2022-03-14"},{"lineNumber":32,"author":{"gitId":"zxgoh"},"content":"","lastModifiedDate":"2022-03-14"},{"lineNumber":33,"author":{"gitId":"zxgoh"},"content":"    @Override","lastModifiedDate":"2022-03-14"},{"lineNumber":34,"author":{"gitId":"zxgoh"},"content":"    public CommandResult execute(Model model) throws CommandException {","lastModifiedDate":"2022-03-14"},{"lineNumber":35,"author":{"gitId":"zxgoh"},"content":"        requireNonNull(model);","lastModifiedDate":"2022-03-14"},{"lineNumber":36,"author":{"gitId":"zxgoh"},"content":"        List\u003cCustomer\u003e lastShownList \u003d model.getFilteredCustomerList();","lastModifiedDate":"2022-03-14"},{"lineNumber":37,"author":{"gitId":"zxgoh"},"content":"","lastModifiedDate":"2022-03-14"},{"lineNumber":38,"author":{"gitId":"zxgoh"},"content":"        if (targetIndex.getZeroBased() \u003e\u003d lastShownList.size()) {","lastModifiedDate":"2022-03-14"},{"lineNumber":39,"author":{"gitId":"zxgoh"},"content":"            throw new CommandException(Messages.MESSAGE_INVALID_CUSTOMER_DISPLAYED_INDEX);","lastModifiedDate":"2022-03-14"},{"lineNumber":40,"author":{"gitId":"zxgoh"},"content":"        }","lastModifiedDate":"2022-03-14"},{"lineNumber":41,"author":{"gitId":"zxgoh"},"content":"","lastModifiedDate":"2022-03-14"},{"lineNumber":42,"author":{"gitId":"zxgoh"},"content":"        Customer customerToDelete \u003d lastShownList.get(targetIndex.getZeroBased());","lastModifiedDate":"2022-03-14"},{"lineNumber":43,"author":{"gitId":"zxgoh"},"content":"        model.deleteCustomer(customerToDelete);","lastModifiedDate":"2022-03-14"},{"lineNumber":44,"author":{"gitId":"zxgoh"},"content":"        return new CommandResult(String.format(MESSAGE_DELETE_CUSTOMER_SUCCESS, customerToDelete));","lastModifiedDate":"2022-03-14"},{"lineNumber":45,"author":{"gitId":"zxgoh"},"content":"    }","lastModifiedDate":"2022-03-14"},{"lineNumber":46,"author":{"gitId":"zxgoh"},"content":"","lastModifiedDate":"2022-03-14"},{"lineNumber":47,"author":{"gitId":"zxgoh"},"content":"    @Override","lastModifiedDate":"2022-03-14"},{"lineNumber":48,"author":{"gitId":"zxgoh"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2022-03-14"},{"lineNumber":49,"author":{"gitId":"zxgoh"},"content":"        return other \u003d\u003d this // short circuit if same object","lastModifiedDate":"2022-03-14"},{"lineNumber":50,"author":{"gitId":"zxgoh"},"content":"                || (other instanceof DeleteCustomerCommand // instanceof handles nulls","lastModifiedDate":"2022-03-14"},{"lineNumber":51,"author":{"gitId":"zxgoh"},"content":"                \u0026\u0026 targetIndex.equals(((DeleteCustomerCommand) other).targetIndex)); // state check","lastModifiedDate":"2022-03-14"},{"lineNumber":52,"author":{"gitId":"zxgoh"},"content":"    }","lastModifiedDate":"2022-03-14"},{"lineNumber":53,"author":{"gitId":"zxgoh"},"content":"}","lastModifiedDate":"2022-03-14"}],"authorContributionMap":{"zxgoh":53}},{"path":"src/main/java/seedu/address/logic/commands/DeleteDishCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"jaegarpoon"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2022-03-11"},{"lineNumber":2,"author":{"gitId":"jaegarpoon"},"content":"","lastModifiedDate":"2022-03-11"},{"lineNumber":3,"author":{"gitId":"jaegarpoon"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2022-03-11"},{"lineNumber":4,"author":{"gitId":"jaegarpoon"},"content":"","lastModifiedDate":"2022-03-11"},{"lineNumber":5,"author":{"gitId":"jaegarpoon"},"content":"import java.util.List;","lastModifiedDate":"2022-03-11"},{"lineNumber":6,"author":{"gitId":"jaegarpoon"},"content":"","lastModifiedDate":"2022-03-11"},{"lineNumber":7,"author":{"gitId":"jaegarpoon"},"content":"import seedu.address.commons.core.Messages;","lastModifiedDate":"2022-03-11"},{"lineNumber":8,"author":{"gitId":"jaegarpoon"},"content":"import seedu.address.commons.core.index.Index;","lastModifiedDate":"2022-03-11"},{"lineNumber":9,"author":{"gitId":"jaegarpoon"},"content":"import seedu.address.logic.commands.exceptions.CommandException;","lastModifiedDate":"2022-03-11"},{"lineNumber":10,"author":{"gitId":"jaegarpoon"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2022-03-11"},{"lineNumber":11,"author":{"gitId":"jaegarpoon"},"content":"import seedu.address.model.dish.Dish;","lastModifiedDate":"2022-03-24"},{"lineNumber":12,"author":{"gitId":"jaegarpoon"},"content":"","lastModifiedDate":"2022-03-11"},{"lineNumber":13,"author":{"gitId":"jaegarpoon"},"content":"/**","lastModifiedDate":"2022-03-11"},{"lineNumber":14,"author":{"gitId":"jaegarpoon"},"content":" * Deletes a person identified using it\u0027s displayed index from the address book.","lastModifiedDate":"2022-03-11"},{"lineNumber":15,"author":{"gitId":"jaegarpoon"},"content":" */","lastModifiedDate":"2022-03-11"},{"lineNumber":16,"author":{"gitId":"jaegarpoon"},"content":"public class DeleteDishCommand extends Command {","lastModifiedDate":"2022-03-11"},{"lineNumber":17,"author":{"gitId":"jaegarpoon"},"content":"","lastModifiedDate":"2022-03-11"},{"lineNumber":18,"author":{"gitId":"jaegarpoon"},"content":"    public static final String COMMAND_WORD \u003d \"deletedish\";","lastModifiedDate":"2022-03-11"},{"lineNumber":19,"author":{"gitId":"jaegarpoon"},"content":"","lastModifiedDate":"2022-03-11"},{"lineNumber":20,"author":{"gitId":"jaegarpoon"},"content":"    public static final String MESSAGE_USAGE \u003d COMMAND_WORD","lastModifiedDate":"2022-03-11"},{"lineNumber":21,"author":{"gitId":"jaegarpoon"},"content":"            + \": Deletes the dish identified by the index number used in the displayed dish list.\\n\"","lastModifiedDate":"2022-03-11"},{"lineNumber":22,"author":{"gitId":"jaegarpoon"},"content":"            + \"Parameters: INDEX (must be a positive integer)\\n\"","lastModifiedDate":"2022-03-11"},{"lineNumber":23,"author":{"gitId":"jaegarpoon"},"content":"            + \"Example: \" + COMMAND_WORD + \" 1\";","lastModifiedDate":"2022-03-11"},{"lineNumber":24,"author":{"gitId":"jaegarpoon"},"content":"","lastModifiedDate":"2022-03-11"},{"lineNumber":25,"author":{"gitId":"jaegarpoon"},"content":"    public static final String MESSAGE_DELETE_DISH_SUCCESS \u003d \"Deleted Dish: %1$s\";","lastModifiedDate":"2022-03-11"},{"lineNumber":26,"author":{"gitId":"jaegarpoon"},"content":"","lastModifiedDate":"2022-03-11"},{"lineNumber":27,"author":{"gitId":"jaegarpoon"},"content":"    private final Index targetIndex;","lastModifiedDate":"2022-03-11"},{"lineNumber":28,"author":{"gitId":"jaegarpoon"},"content":"","lastModifiedDate":"2022-03-11"},{"lineNumber":29,"author":{"gitId":"jaegarpoon"},"content":"    public DeleteDishCommand(Index targetIndex) {","lastModifiedDate":"2022-03-11"},{"lineNumber":30,"author":{"gitId":"jaegarpoon"},"content":"        this.targetIndex \u003d targetIndex;","lastModifiedDate":"2022-03-11"},{"lineNumber":31,"author":{"gitId":"jaegarpoon"},"content":"    }","lastModifiedDate":"2022-03-11"},{"lineNumber":32,"author":{"gitId":"jaegarpoon"},"content":"","lastModifiedDate":"2022-03-11"},{"lineNumber":33,"author":{"gitId":"jaegarpoon"},"content":"    @Override","lastModifiedDate":"2022-03-11"},{"lineNumber":34,"author":{"gitId":"jaegarpoon"},"content":"    public CommandResult execute(Model model) throws CommandException {","lastModifiedDate":"2022-03-11"},{"lineNumber":35,"author":{"gitId":"jaegarpoon"},"content":"        requireNonNull(model);","lastModifiedDate":"2022-03-11"},{"lineNumber":36,"author":{"gitId":"jaegarpoon"},"content":"        List\u003cDish\u003e lastShownList \u003d model.getFilteredDishList();","lastModifiedDate":"2022-03-11"},{"lineNumber":37,"author":{"gitId":"jaegarpoon"},"content":"","lastModifiedDate":"2022-03-11"},{"lineNumber":38,"author":{"gitId":"jaegarpoon"},"content":"        if (targetIndex.getZeroBased() \u003e\u003d lastShownList.size()) {","lastModifiedDate":"2022-03-11"},{"lineNumber":39,"author":{"gitId":"jaegarpoon"},"content":"            throw new CommandException(Messages.MESSAGE_INVALID_DISH_DISPLAYED_INDEX);","lastModifiedDate":"2022-03-11"},{"lineNumber":40,"author":{"gitId":"jaegarpoon"},"content":"        }","lastModifiedDate":"2022-03-11"},{"lineNumber":41,"author":{"gitId":"jaegarpoon"},"content":"","lastModifiedDate":"2022-03-11"},{"lineNumber":42,"author":{"gitId":"jaegarpoon"},"content":"        Dish dishToDelete \u003d lastShownList.get(targetIndex.getZeroBased());","lastModifiedDate":"2022-03-11"},{"lineNumber":43,"author":{"gitId":"jaegarpoon"},"content":"        model.deleteDish(dishToDelete);","lastModifiedDate":"2022-03-11"},{"lineNumber":44,"author":{"gitId":"jaegarpoon"},"content":"        return new CommandResult(String.format(MESSAGE_DELETE_DISH_SUCCESS, dishToDelete),","lastModifiedDate":"2022-03-11"},{"lineNumber":45,"author":{"gitId":"jaegarpoon"},"content":"                false, false, true, false, false);","lastModifiedDate":"2022-03-11"},{"lineNumber":46,"author":{"gitId":"jaegarpoon"},"content":"    }","lastModifiedDate":"2022-03-11"},{"lineNumber":47,"author":{"gitId":"jaegarpoon"},"content":"","lastModifiedDate":"2022-03-11"},{"lineNumber":48,"author":{"gitId":"jaegarpoon"},"content":"    @Override","lastModifiedDate":"2022-03-11"},{"lineNumber":49,"author":{"gitId":"jaegarpoon"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2022-03-11"},{"lineNumber":50,"author":{"gitId":"jaegarpoon"},"content":"        return other \u003d\u003d this // short circuit if same object","lastModifiedDate":"2022-03-11"},{"lineNumber":51,"author":{"gitId":"jaegarpoon"},"content":"                || (other instanceof DeleteDishCommand // instanceof handles nulls","lastModifiedDate":"2022-03-11"},{"lineNumber":52,"author":{"gitId":"jaegarpoon"},"content":"                \u0026\u0026 targetIndex.equals(((DeleteDishCommand) other).targetIndex)); // state check","lastModifiedDate":"2022-03-11"},{"lineNumber":53,"author":{"gitId":"jaegarpoon"},"content":"    }","lastModifiedDate":"2022-03-11"},{"lineNumber":54,"author":{"gitId":"jaegarpoon"},"content":"}","lastModifiedDate":"2022-03-11"},{"lineNumber":55,"author":{"gitId":"jaegarpoon"},"content":"","lastModifiedDate":"2022-03-11"}],"authorContributionMap":{"jaegarpoon":55}},{"path":"src/main/java/seedu/address/logic/commands/DeleteDriverCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"hieunm1821"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2022-03-10"},{"lineNumber":2,"author":{"gitId":"hieunm1821"},"content":"","lastModifiedDate":"2022-03-10"},{"lineNumber":3,"author":{"gitId":"hieunm1821"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2022-03-10"},{"lineNumber":4,"author":{"gitId":"hieunm1821"},"content":"","lastModifiedDate":"2022-03-10"},{"lineNumber":5,"author":{"gitId":"hieunm1821"},"content":"import java.util.List;","lastModifiedDate":"2022-03-10"},{"lineNumber":6,"author":{"gitId":"hieunm1821"},"content":"","lastModifiedDate":"2022-03-10"},{"lineNumber":7,"author":{"gitId":"hieunm1821"},"content":"import seedu.address.commons.core.Messages;","lastModifiedDate":"2022-03-10"},{"lineNumber":8,"author":{"gitId":"hieunm1821"},"content":"import seedu.address.commons.core.index.Index;","lastModifiedDate":"2022-03-10"},{"lineNumber":9,"author":{"gitId":"hieunm1821"},"content":"import seedu.address.logic.commands.exceptions.CommandException;","lastModifiedDate":"2022-03-10"},{"lineNumber":10,"author":{"gitId":"hieunm1821"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2022-03-10"},{"lineNumber":11,"author":{"gitId":"hieunm1821"},"content":"import seedu.address.model.driver.Driver;","lastModifiedDate":"2022-03-10"},{"lineNumber":12,"author":{"gitId":"hieunm1821"},"content":"","lastModifiedDate":"2022-03-10"},{"lineNumber":13,"author":{"gitId":"hieunm1821"},"content":"/**","lastModifiedDate":"2022-03-11"},{"lineNumber":14,"author":{"gitId":"hieunm1821"},"content":" * Deletes a person identified using it\u0027s displayed index from the database.","lastModifiedDate":"2022-03-11"},{"lineNumber":15,"author":{"gitId":"hieunm1821"},"content":" */","lastModifiedDate":"2022-03-11"},{"lineNumber":16,"author":{"gitId":"hieunm1821"},"content":"public class DeleteDriverCommand extends Command {","lastModifiedDate":"2022-03-10"},{"lineNumber":17,"author":{"gitId":"hieunm1821"},"content":"    public static final String COMMAND_WORD \u003d \"deletedriver\";","lastModifiedDate":"2022-03-10"},{"lineNumber":18,"author":{"gitId":"hieunm1821"},"content":"","lastModifiedDate":"2022-03-10"},{"lineNumber":19,"author":{"gitId":"hieunm1821"},"content":"    public static final String MESSAGE_USAGE \u003d COMMAND_WORD","lastModifiedDate":"2022-03-10"},{"lineNumber":20,"author":{"gitId":"hieunm1821"},"content":"            + \": Deletes the driver identified by the index number used in the displayed person list.\\n\"","lastModifiedDate":"2022-03-10"},{"lineNumber":21,"author":{"gitId":"hieunm1821"},"content":"            + \"Parameters: INDEX (must be a positive integer)\\n\"","lastModifiedDate":"2022-03-10"},{"lineNumber":22,"author":{"gitId":"hieunm1821"},"content":"            + \"Example: \" + COMMAND_WORD + \" 1\";","lastModifiedDate":"2022-03-10"},{"lineNumber":23,"author":{"gitId":"hieunm1821"},"content":"","lastModifiedDate":"2022-03-10"},{"lineNumber":24,"author":{"gitId":"hieunm1821"},"content":"    public static final String MESSAGE_DELETE_DRIVER_SUCCESS \u003d \"Deleted Driver: %1$s\";","lastModifiedDate":"2022-03-10"},{"lineNumber":25,"author":{"gitId":"hieunm1821"},"content":"    public static final String MESSAGE_DELETE_DRIVER_FAIL_BUSY \u003d \"Delete Driver: %1$s \"","lastModifiedDate":"2022-03-27"},{"lineNumber":26,"author":{"gitId":"hieunm1821"},"content":"            + \"failed because driver is not free\";","lastModifiedDate":"2022-03-27"},{"lineNumber":27,"author":{"gitId":"hieunm1821"},"content":"","lastModifiedDate":"2022-03-10"},{"lineNumber":28,"author":{"gitId":"hieunm1821"},"content":"    private final Index targetIndex;","lastModifiedDate":"2022-03-10"},{"lineNumber":29,"author":{"gitId":"hieunm1821"},"content":"","lastModifiedDate":"2022-03-10"},{"lineNumber":30,"author":{"gitId":"hieunm1821"},"content":"    public DeleteDriverCommand(Index targetIndex) {","lastModifiedDate":"2022-03-10"},{"lineNumber":31,"author":{"gitId":"hieunm1821"},"content":"        this.targetIndex \u003d targetIndex;","lastModifiedDate":"2022-03-10"},{"lineNumber":32,"author":{"gitId":"hieunm1821"},"content":"    }","lastModifiedDate":"2022-03-10"},{"lineNumber":33,"author":{"gitId":"hieunm1821"},"content":"","lastModifiedDate":"2022-03-10"},{"lineNumber":34,"author":{"gitId":"hieunm1821"},"content":"    @Override","lastModifiedDate":"2022-03-10"},{"lineNumber":35,"author":{"gitId":"hieunm1821"},"content":"    public CommandResult execute(Model model) throws CommandException {","lastModifiedDate":"2022-03-10"},{"lineNumber":36,"author":{"gitId":"hieunm1821"},"content":"        requireNonNull(model);","lastModifiedDate":"2022-03-10"},{"lineNumber":37,"author":{"gitId":"hieunm1821"},"content":"        List\u003cDriver\u003e lastShownList \u003d model.getFilteredDriverList();","lastModifiedDate":"2022-03-10"},{"lineNumber":38,"author":{"gitId":"hieunm1821"},"content":"","lastModifiedDate":"2022-03-10"},{"lineNumber":39,"author":{"gitId":"hieunm1821"},"content":"        if (targetIndex.getZeroBased() \u003e\u003d lastShownList.size()) {","lastModifiedDate":"2022-03-10"},{"lineNumber":40,"author":{"gitId":"hieunm1821"},"content":"            throw new CommandException(Messages.MESSAGE_INVALID_DRIVER_DISPLAYED_INDEX);","lastModifiedDate":"2022-03-10"},{"lineNumber":41,"author":{"gitId":"hieunm1821"},"content":"        }","lastModifiedDate":"2022-03-10"},{"lineNumber":42,"author":{"gitId":"hieunm1821"},"content":"","lastModifiedDate":"2022-03-10"},{"lineNumber":43,"author":{"gitId":"hieunm1821"},"content":"        Driver driverToDelete \u003d lastShownList.get(targetIndex.getZeroBased());","lastModifiedDate":"2022-03-10"},{"lineNumber":44,"author":{"gitId":"hieunm1821"},"content":"        if (driverToDelete.isBusy()) {","lastModifiedDate":"2022-03-27"},{"lineNumber":45,"author":{"gitId":"hieunm1821"},"content":"            throw new CommandException(String.format(MESSAGE_DELETE_DRIVER_FAIL_BUSY, driverToDelete));","lastModifiedDate":"2022-03-27"},{"lineNumber":46,"author":{"gitId":"hieunm1821"},"content":"        }","lastModifiedDate":"2022-03-27"},{"lineNumber":47,"author":{"gitId":"hieunm1821"},"content":"","lastModifiedDate":"2022-03-27"},{"lineNumber":48,"author":{"gitId":"hieunm1821"},"content":"        model.deleteDriver(driverToDelete);","lastModifiedDate":"2022-03-27"},{"lineNumber":49,"author":{"gitId":"hieunm1821"},"content":"        return new CommandResult(String.format(MESSAGE_DELETE_DRIVER_SUCCESS, driverToDelete), false,","lastModifiedDate":"2022-03-14"},{"lineNumber":50,"author":{"gitId":"hieunm1821"},"content":"                false, false, true, false);","lastModifiedDate":"2022-03-14"},{"lineNumber":51,"author":{"gitId":"hieunm1821"},"content":"    }","lastModifiedDate":"2022-03-10"},{"lineNumber":52,"author":{"gitId":"hieunm1821"},"content":"","lastModifiedDate":"2022-03-10"},{"lineNumber":53,"author":{"gitId":"hieunm1821"},"content":"    @Override","lastModifiedDate":"2022-03-10"},{"lineNumber":54,"author":{"gitId":"hieunm1821"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2022-03-10"},{"lineNumber":55,"author":{"gitId":"hieunm1821"},"content":"        return other \u003d\u003d this // short circuit if same object","lastModifiedDate":"2022-03-10"},{"lineNumber":56,"author":{"gitId":"hieunm1821"},"content":"                || (other instanceof DeleteDriverCommand // instanceof handles nulls","lastModifiedDate":"2022-03-10"},{"lineNumber":57,"author":{"gitId":"hieunm1821"},"content":"                \u0026\u0026 targetIndex.equals(((DeleteDriverCommand) other).targetIndex)); // state check","lastModifiedDate":"2022-03-10"},{"lineNumber":58,"author":{"gitId":"hieunm1821"},"content":"    }","lastModifiedDate":"2022-03-10"},{"lineNumber":59,"author":{"gitId":"hieunm1821"},"content":"","lastModifiedDate":"2022-03-10"},{"lineNumber":60,"author":{"gitId":"hieunm1821"},"content":"}","lastModifiedDate":"2022-03-10"}],"authorContributionMap":{"hieunm1821":60}},{"path":"src/main/java/seedu/address/logic/commands/EditCustomerCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2016-12-26"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2017-05-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_ADDRESS;","lastModifiedDate":"2017-05-09"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_NAME;","lastModifiedDate":"2017-06-06"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_PHONE;","lastModifiedDate":"2017-05-09"},{"lineNumber":7,"author":{"gitId":"zxgoh"},"content":"import static seedu.address.model.Model.PREDICATE_SHOW_ALL_CUSTOMERS;","lastModifiedDate":"2022-03-14"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-09"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import java.util.List;","lastModifiedDate":"2016-12-26"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import java.util.Optional;","lastModifiedDate":"2016-12-26"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.Messages;","lastModifiedDate":"2016-12-26"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.index.Index;","lastModifiedDate":"2017-05-25"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import seedu.address.commons.util.CollectionUtil;","lastModifiedDate":"2016-12-26"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.exceptions.CommandException;","lastModifiedDate":"2017-02-05"},{"lineNumber":16,"author":{"gitId":"-"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2018-08-08"},{"lineNumber":17,"author":{"gitId":"zxgoh"},"content":"import seedu.address.model.customer.AddressCustomer;","lastModifiedDate":"2022-03-15"},{"lineNumber":18,"author":{"gitId":"zxgoh"},"content":"import seedu.address.model.customer.Customer;","lastModifiedDate":"2022-03-14"},{"lineNumber":19,"author":{"gitId":"zxgoh"},"content":"import seedu.address.model.customer.NameCustomer;","lastModifiedDate":"2022-03-15"},{"lineNumber":20,"author":{"gitId":"zxgoh"},"content":"import seedu.address.model.customer.PhoneCustomer;","lastModifiedDate":"2022-03-15"},{"lineNumber":21,"author":{"gitId":"zxgoh"},"content":"","lastModifiedDate":"2022-03-30"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":23,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-12-26"},{"lineNumber":24,"author":{"gitId":"zxgoh"},"content":" * Edits the details of an existing customer in the address book.","lastModifiedDate":"2022-03-30"},{"lineNumber":25,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-12-26"},{"lineNumber":26,"author":{"gitId":"zxgoh"},"content":"public class EditCustomerCommand extends Command {","lastModifiedDate":"2022-03-30"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":28,"author":{"gitId":"zxgoh"},"content":"    public static final String COMMAND_WORD \u003d \"editcustomer\";","lastModifiedDate":"2022-03-30"},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":30,"author":{"gitId":"zxgoh"},"content":"    public static final String MESSAGE_USAGE \u003d COMMAND_WORD + \": Edits the details of the customer identified \"","lastModifiedDate":"2022-03-14"},{"lineNumber":31,"author":{"gitId":"zxgoh"},"content":"            + \"by the index number used in the displayed customer list. \"","lastModifiedDate":"2022-03-14"},{"lineNumber":32,"author":{"gitId":"-"},"content":"            + \"Existing values will be overwritten by the input values.\\n\"","lastModifiedDate":"2016-12-26"},{"lineNumber":33,"author":{"gitId":"-"},"content":"            + \"Parameters: INDEX (must be a positive integer) \"","lastModifiedDate":"2017-06-06"},{"lineNumber":34,"author":{"gitId":"-"},"content":"            + \"[\" + PREFIX_NAME + \"NAME] \"","lastModifiedDate":"2017-06-06"},{"lineNumber":35,"author":{"gitId":"-"},"content":"            + \"[\" + PREFIX_PHONE + \"PHONE] \"","lastModifiedDate":"2017-05-09"},{"lineNumber":36,"author":{"gitId":"zxgoh"},"content":"            + \"[\" + PREFIX_ADDRESS + \"ADDRESS] \\n\"","lastModifiedDate":"2022-03-30"},{"lineNumber":37,"author":{"gitId":"-"},"content":"            + \"Example: \" + COMMAND_WORD + \" 1 \"","lastModifiedDate":"2017-05-09"},{"lineNumber":38,"author":{"gitId":"zxgoh"},"content":"            + PREFIX_PHONE + \"91234567 \";","lastModifiedDate":"2022-03-30"},{"lineNumber":39,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":40,"author":{"gitId":"zxgoh"},"content":"    public static final String MESSAGE_EDIT_CUSTOMER_SUCCESS \u003d \"Edited Customer: %1$s\";","lastModifiedDate":"2022-03-14"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_NOT_EDITED \u003d \"At least one field to edit must be provided.\";","lastModifiedDate":"2016-12-26"},{"lineNumber":42,"author":{"gitId":"zxgoh"},"content":"    public static final String MESSAGE_DUPLICATE_CUSTOMER \u003d \"This customer already exists in the address book.\";","lastModifiedDate":"2022-03-30"},{"lineNumber":43,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    private final Index index;","lastModifiedDate":"2017-05-25"},{"lineNumber":45,"author":{"gitId":"zxgoh"},"content":"    private final EditCustomerDescriptor editCustomerDescriptor;","lastModifiedDate":"2022-03-30"},{"lineNumber":46,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-12-26"},{"lineNumber":48,"author":{"gitId":"zxgoh"},"content":"     * @param index of the customer in the filtered customer list to edit","lastModifiedDate":"2022-03-14"},{"lineNumber":49,"author":{"gitId":"zxgoh"},"content":"     * @param editCustomerDescriptor details to edit the customer with","lastModifiedDate":"2022-03-30"},{"lineNumber":50,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-12-26"},{"lineNumber":51,"author":{"gitId":"zxgoh"},"content":"    public EditCustomerCommand(Index index, EditCustomerDescriptor editCustomerDescriptor) {","lastModifiedDate":"2022-03-30"},{"lineNumber":52,"author":{"gitId":"-"},"content":"        requireNonNull(index);","lastModifiedDate":"2017-05-25"},{"lineNumber":53,"author":{"gitId":"zxgoh"},"content":"        requireNonNull(editCustomerDescriptor);","lastModifiedDate":"2022-03-30"},{"lineNumber":54,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":55,"author":{"gitId":"-"},"content":"        this.index \u003d index;","lastModifiedDate":"2017-05-25"},{"lineNumber":56,"author":{"gitId":"zxgoh"},"content":"        this.editCustomerDescriptor \u003d new EditCustomerDescriptor(editCustomerDescriptor);","lastModifiedDate":"2022-03-30"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-26"},{"lineNumber":58,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":59,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-12-26"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    public CommandResult execute(Model model) throws CommandException {","lastModifiedDate":"2019-01-25"},{"lineNumber":61,"author":{"gitId":"-"},"content":"        requireNonNull(model);","lastModifiedDate":"2018-08-08"},{"lineNumber":62,"author":{"gitId":"zxgoh"},"content":"        List\u003cCustomer\u003e lastShownList \u003d model.getFilteredCustomerList();","lastModifiedDate":"2022-03-14"},{"lineNumber":63,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":64,"author":{"gitId":"-"},"content":"        if (index.getZeroBased() \u003e\u003d lastShownList.size()) {","lastModifiedDate":"2018-04-19"},{"lineNumber":65,"author":{"gitId":"zxgoh"},"content":"            throw new CommandException(Messages.MESSAGE_INVALID_CUSTOMER_DISPLAYED_INDEX);","lastModifiedDate":"2022-03-14"},{"lineNumber":66,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-04-19"},{"lineNumber":67,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":68,"author":{"gitId":"zxgoh"},"content":"        Customer customerToEdit \u003d lastShownList.get(index.getZeroBased());","lastModifiedDate":"2022-03-14"},{"lineNumber":69,"author":{"gitId":"zxgoh"},"content":"        Customer editedCustomer \u003d createEditedCustomer(customerToEdit, editCustomerDescriptor);","lastModifiedDate":"2022-03-30"},{"lineNumber":70,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":71,"author":{"gitId":"zxgoh"},"content":"        if (!customerToEdit.isSameCustomer(editedCustomer) \u0026\u0026 model.hasCustomer(editedCustomer)) {","lastModifiedDate":"2022-03-14"},{"lineNumber":72,"author":{"gitId":"zxgoh"},"content":"            throw new CommandException(MESSAGE_DUPLICATE_CUSTOMER);","lastModifiedDate":"2022-03-14"},{"lineNumber":73,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-08-07"},{"lineNumber":74,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-07"},{"lineNumber":75,"author":{"gitId":"zxgoh"},"content":"        model.setCustomer(customerToEdit, editedCustomer);","lastModifiedDate":"2022-03-14"},{"lineNumber":76,"author":{"gitId":"zxgoh"},"content":"        model.updateFilteredCustomerList(PREDICATE_SHOW_ALL_CUSTOMERS);","lastModifiedDate":"2022-03-14"},{"lineNumber":77,"author":{"gitId":"zxgoh"},"content":"        return new CommandResult(String.format(MESSAGE_EDIT_CUSTOMER_SUCCESS, editedCustomer));","lastModifiedDate":"2022-03-14"},{"lineNumber":78,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-26"},{"lineNumber":79,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":80,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-12-26"},{"lineNumber":81,"author":{"gitId":"zxgoh"},"content":"     * Creates and returns a {@code Customer} with the details of {@code customerToEdit}","lastModifiedDate":"2022-03-14"},{"lineNumber":82,"author":{"gitId":"zxgoh"},"content":"     * edited with {@code editCustomerDescriptor}.","lastModifiedDate":"2022-03-30"},{"lineNumber":83,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-12-26"},{"lineNumber":84,"author":{"gitId":"zxgoh"},"content":"    private static Customer createEditedCustomer(Customer customerToEdit,","lastModifiedDate":"2022-03-14"},{"lineNumber":85,"author":{"gitId":"zxgoh"},"content":"                                                 EditCustomerDescriptor editCustomerDescriptor) {","lastModifiedDate":"2022-03-30"},{"lineNumber":86,"author":{"gitId":"zxgoh"},"content":"        assert customerToEdit !\u003d null;","lastModifiedDate":"2022-03-14"},{"lineNumber":87,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":88,"author":{"gitId":"zxgoh"},"content":"        NameCustomer updatedName \u003d editCustomerDescriptor.getName().orElse(customerToEdit.getName());","lastModifiedDate":"2022-03-30"},{"lineNumber":89,"author":{"gitId":"zxgoh"},"content":"        PhoneCustomer updatedPhone \u003d editCustomerDescriptor.getPhone().orElse(customerToEdit.getPhone());","lastModifiedDate":"2022-03-30"},{"lineNumber":90,"author":{"gitId":"zxgoh"},"content":"        AddressCustomer updatedAddress \u003d editCustomerDescriptor.getAddress().orElse(customerToEdit.getAddress());","lastModifiedDate":"2022-03-30"},{"lineNumber":91,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":92,"author":{"gitId":"zxgoh"},"content":"        return new Customer(updatedName, updatedPhone, updatedAddress);","lastModifiedDate":"2022-03-30"},{"lineNumber":93,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-26"},{"lineNumber":94,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":95,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2017-05-08"},{"lineNumber":96,"author":{"gitId":"-"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2017-05-08"},{"lineNumber":97,"author":{"gitId":"-"},"content":"        // short circuit if same object","lastModifiedDate":"2017-05-08"},{"lineNumber":98,"author":{"gitId":"-"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2017-05-08"},{"lineNumber":99,"author":{"gitId":"-"},"content":"            return true;","lastModifiedDate":"2017-05-08"},{"lineNumber":100,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-08"},{"lineNumber":101,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-08"},{"lineNumber":102,"author":{"gitId":"-"},"content":"        // instanceof handles nulls","lastModifiedDate":"2017-05-08"},{"lineNumber":103,"author":{"gitId":"zxgoh"},"content":"        if (!(other instanceof EditCustomerCommand)) {","lastModifiedDate":"2022-03-30"},{"lineNumber":104,"author":{"gitId":"-"},"content":"            return false;","lastModifiedDate":"2017-05-08"},{"lineNumber":105,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-08"},{"lineNumber":106,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-08"},{"lineNumber":107,"author":{"gitId":"-"},"content":"        // state check","lastModifiedDate":"2017-05-08"},{"lineNumber":108,"author":{"gitId":"zxgoh"},"content":"        EditCustomerCommand e \u003d (EditCustomerCommand) other;","lastModifiedDate":"2022-03-30"},{"lineNumber":109,"author":{"gitId":"-"},"content":"        return index.equals(e.index)","lastModifiedDate":"2017-05-25"},{"lineNumber":110,"author":{"gitId":"zxgoh"},"content":"                \u0026\u0026 editCustomerDescriptor.equals(e.editCustomerDescriptor);","lastModifiedDate":"2022-03-30"},{"lineNumber":111,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-08"},{"lineNumber":112,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-08"},{"lineNumber":113,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-12-26"},{"lineNumber":114,"author":{"gitId":"zxgoh"},"content":"     * Stores the details to edit the customer with. Each non-empty field value will replace the","lastModifiedDate":"2022-03-14"},{"lineNumber":115,"author":{"gitId":"zxgoh"},"content":"     * corresponding field value of the customer.","lastModifiedDate":"2022-03-14"},{"lineNumber":116,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-12-26"},{"lineNumber":117,"author":{"gitId":"zxgoh"},"content":"    public static class EditCustomerDescriptor {","lastModifiedDate":"2022-03-30"},{"lineNumber":118,"author":{"gitId":"zxgoh"},"content":"        private NameCustomer name;","lastModifiedDate":"2022-03-30"},{"lineNumber":119,"author":{"gitId":"zxgoh"},"content":"        private PhoneCustomer phone;","lastModifiedDate":"2022-03-30"},{"lineNumber":120,"author":{"gitId":"zxgoh"},"content":"        private AddressCustomer address;","lastModifiedDate":"2022-03-30"},{"lineNumber":121,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":122,"author":{"gitId":"zxgoh"},"content":"        public EditCustomerDescriptor() {}","lastModifiedDate":"2022-03-30"},{"lineNumber":123,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":124,"author":{"gitId":"-"},"content":"        /**","lastModifiedDate":"2018-01-11"},{"lineNumber":125,"author":{"gitId":"-"},"content":"         * Copy constructor.","lastModifiedDate":"2018-01-11"},{"lineNumber":126,"author":{"gitId":"-"},"content":"         * A defensive copy of {@code tags} is used internally.","lastModifiedDate":"2018-01-11"},{"lineNumber":127,"author":{"gitId":"-"},"content":"         */","lastModifiedDate":"2018-01-11"},{"lineNumber":128,"author":{"gitId":"zxgoh"},"content":"        public EditCustomerDescriptor(EditCustomerDescriptor toCopy) {","lastModifiedDate":"2022-03-30"},{"lineNumber":129,"author":{"gitId":"zxgoh"},"content":"            setName(toCopy.name);","lastModifiedDate":"2022-03-30"},{"lineNumber":130,"author":{"gitId":"zxgoh"},"content":"            setPhone(toCopy.phone);","lastModifiedDate":"2022-03-30"},{"lineNumber":131,"author":{"gitId":"zxgoh"},"content":"            setAddress(toCopy.address);","lastModifiedDate":"2022-03-30"},{"lineNumber":132,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-12-26"},{"lineNumber":133,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":134,"author":{"gitId":"-"},"content":"        /**","lastModifiedDate":"2016-12-26"},{"lineNumber":135,"author":{"gitId":"-"},"content":"         * Returns true if at least one field is edited.","lastModifiedDate":"2016-12-26"},{"lineNumber":136,"author":{"gitId":"-"},"content":"         */","lastModifiedDate":"2016-12-26"},{"lineNumber":137,"author":{"gitId":"-"},"content":"        public boolean isAnyFieldEdited() {","lastModifiedDate":"2016-12-26"},{"lineNumber":138,"author":{"gitId":"zxgoh"},"content":"            return CollectionUtil.isAnyNonNull(name, phone, address);","lastModifiedDate":"2022-03-30"},{"lineNumber":139,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-12-26"},{"lineNumber":140,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":141,"author":{"gitId":"zxgoh"},"content":"        public void setName(NameCustomer name) {","lastModifiedDate":"2022-03-30"},{"lineNumber":142,"author":{"gitId":"zxgoh"},"content":"            this.name \u003d name;","lastModifiedDate":"2022-03-30"},{"lineNumber":143,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-12-26"},{"lineNumber":144,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":145,"author":{"gitId":"zxgoh"},"content":"        public Optional\u003cNameCustomer\u003e getName() {","lastModifiedDate":"2022-03-15"},{"lineNumber":146,"author":{"gitId":"zxgoh"},"content":"            return Optional.ofNullable(name);","lastModifiedDate":"2022-03-30"},{"lineNumber":147,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-12-26"},{"lineNumber":148,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":149,"author":{"gitId":"zxgoh"},"content":"        public void setPhone(PhoneCustomer phone) {","lastModifiedDate":"2022-03-30"},{"lineNumber":150,"author":{"gitId":"zxgoh"},"content":"            this.phone \u003d phone;","lastModifiedDate":"2022-03-30"},{"lineNumber":151,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-12-26"},{"lineNumber":152,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":153,"author":{"gitId":"zxgoh"},"content":"        public Optional\u003cPhoneCustomer\u003e getPhone() {","lastModifiedDate":"2022-03-15"},{"lineNumber":154,"author":{"gitId":"zxgoh"},"content":"            return Optional.ofNullable(phone);","lastModifiedDate":"2022-03-30"},{"lineNumber":155,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-12-26"},{"lineNumber":156,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":157,"author":{"gitId":"zxgoh"},"content":"        public void setAddress(AddressCustomer address) {","lastModifiedDate":"2022-03-30"},{"lineNumber":158,"author":{"gitId":"zxgoh"},"content":"            this.address \u003d address;","lastModifiedDate":"2022-03-30"},{"lineNumber":159,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-12-26"},{"lineNumber":160,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":161,"author":{"gitId":"zxgoh"},"content":"        public Optional\u003cAddressCustomer\u003e getAddress() {","lastModifiedDate":"2022-03-15"},{"lineNumber":162,"author":{"gitId":"zxgoh"},"content":"            return Optional.ofNullable(address);","lastModifiedDate":"2022-03-30"},{"lineNumber":163,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-12-26"},{"lineNumber":164,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":165,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2017-05-05"},{"lineNumber":166,"author":{"gitId":"-"},"content":"        public boolean equals(Object other) {","lastModifiedDate":"2017-05-05"},{"lineNumber":167,"author":{"gitId":"-"},"content":"            // short circuit if same object","lastModifiedDate":"2017-05-05"},{"lineNumber":168,"author":{"gitId":"-"},"content":"            if (other \u003d\u003d this) {","lastModifiedDate":"2017-05-05"},{"lineNumber":169,"author":{"gitId":"-"},"content":"                return true;","lastModifiedDate":"2017-05-05"},{"lineNumber":170,"author":{"gitId":"-"},"content":"            }","lastModifiedDate":"2017-05-05"},{"lineNumber":171,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":172,"author":{"gitId":"-"},"content":"            // instanceof handles nulls","lastModifiedDate":"2017-05-05"},{"lineNumber":173,"author":{"gitId":"zxgoh"},"content":"            if (!(other instanceof EditCustomerDescriptor)) {","lastModifiedDate":"2022-03-30"},{"lineNumber":174,"author":{"gitId":"-"},"content":"                return false;","lastModifiedDate":"2017-05-05"},{"lineNumber":175,"author":{"gitId":"-"},"content":"            }","lastModifiedDate":"2017-05-05"},{"lineNumber":176,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":177,"author":{"gitId":"-"},"content":"            // state check","lastModifiedDate":"2017-05-05"},{"lineNumber":178,"author":{"gitId":"zxgoh"},"content":"            EditCustomerDescriptor e \u003d (EditCustomerDescriptor) other;","lastModifiedDate":"2022-03-30"},{"lineNumber":179,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-21"},{"lineNumber":180,"author":{"gitId":"-"},"content":"            return getName().equals(e.getName())","lastModifiedDate":"2017-06-21"},{"lineNumber":181,"author":{"gitId":"-"},"content":"                    \u0026\u0026 getPhone().equals(e.getPhone())","lastModifiedDate":"2017-06-21"},{"lineNumber":182,"author":{"gitId":"zxgoh"},"content":"                    \u0026\u0026 getAddress().equals(e.getAddress());","lastModifiedDate":"2022-03-30"},{"lineNumber":183,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-05"},{"lineNumber":184,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-26"},{"lineNumber":185,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-12-26"}],"authorContributionMap":{"-":116,"zxgoh":69}},{"path":"src/main/java/seedu/address/logic/commands/EditDishCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"jaegarpoon"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2022-03-27"},{"lineNumber":2,"author":{"gitId":"jaegarpoon"},"content":"","lastModifiedDate":"2022-03-27"},{"lineNumber":3,"author":{"gitId":"jaegarpoon"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2022-03-27"},{"lineNumber":4,"author":{"gitId":"jaegarpoon"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_NAME;","lastModifiedDate":"2022-03-27"},{"lineNumber":5,"author":{"gitId":"jaegarpoon"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_PRICE;","lastModifiedDate":"2022-03-27"},{"lineNumber":6,"author":{"gitId":"jaegarpoon"},"content":"import static seedu.address.model.Model.PREDICATE_SHOW_ALL_DISHES;","lastModifiedDate":"2022-03-27"},{"lineNumber":7,"author":{"gitId":"jaegarpoon"},"content":"","lastModifiedDate":"2022-03-27"},{"lineNumber":8,"author":{"gitId":"jaegarpoon"},"content":"import java.util.List;","lastModifiedDate":"2022-03-27"},{"lineNumber":9,"author":{"gitId":"jaegarpoon"},"content":"import java.util.Optional;","lastModifiedDate":"2022-03-27"},{"lineNumber":10,"author":{"gitId":"jaegarpoon"},"content":"","lastModifiedDate":"2022-03-27"},{"lineNumber":11,"author":{"gitId":"jaegarpoon"},"content":"import seedu.address.commons.core.Messages;","lastModifiedDate":"2022-03-27"},{"lineNumber":12,"author":{"gitId":"jaegarpoon"},"content":"import seedu.address.commons.core.index.Index;","lastModifiedDate":"2022-03-27"},{"lineNumber":13,"author":{"gitId":"jaegarpoon"},"content":"import seedu.address.commons.util.CollectionUtil;","lastModifiedDate":"2022-03-27"},{"lineNumber":14,"author":{"gitId":"jaegarpoon"},"content":"import seedu.address.logic.commands.exceptions.CommandException;","lastModifiedDate":"2022-03-27"},{"lineNumber":15,"author":{"gitId":"jaegarpoon"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2022-03-27"},{"lineNumber":16,"author":{"gitId":"jaegarpoon"},"content":"import seedu.address.model.dish.Dish;","lastModifiedDate":"2022-03-27"},{"lineNumber":17,"author":{"gitId":"jaegarpoon"},"content":"import seedu.address.model.dish.NameDish;","lastModifiedDate":"2022-03-27"},{"lineNumber":18,"author":{"gitId":"jaegarpoon"},"content":"import seedu.address.model.dish.PriceDish;","lastModifiedDate":"2022-03-27"},{"lineNumber":19,"author":{"gitId":"jaegarpoon"},"content":"","lastModifiedDate":"2022-03-27"},{"lineNumber":20,"author":{"gitId":"jaegarpoon"},"content":"/**","lastModifiedDate":"2022-03-27"},{"lineNumber":21,"author":{"gitId":"jaegarpoon"},"content":" * Edits the details of an existing dish in FoodOnWheels.","lastModifiedDate":"2022-03-27"},{"lineNumber":22,"author":{"gitId":"jaegarpoon"},"content":" */","lastModifiedDate":"2022-03-27"},{"lineNumber":23,"author":{"gitId":"jaegarpoon"},"content":"public class EditDishCommand extends Command {","lastModifiedDate":"2022-03-27"},{"lineNumber":24,"author":{"gitId":"jaegarpoon"},"content":"","lastModifiedDate":"2022-03-27"},{"lineNumber":25,"author":{"gitId":"jaegarpoon"},"content":"    public static final String COMMAND_WORD \u003d \"editdish\";","lastModifiedDate":"2022-03-27"},{"lineNumber":26,"author":{"gitId":"jaegarpoon"},"content":"","lastModifiedDate":"2022-03-27"},{"lineNumber":27,"author":{"gitId":"jaegarpoon"},"content":"    public static final String MESSAGE_USAGE \u003d COMMAND_WORD + \": Edits the details of the dish identified \"","lastModifiedDate":"2022-03-27"},{"lineNumber":28,"author":{"gitId":"jaegarpoon"},"content":"            + \"by the index number used in the displayed dish list. \"","lastModifiedDate":"2022-03-27"},{"lineNumber":29,"author":{"gitId":"jaegarpoon"},"content":"            + \"Existing values will be overwritten by the input values.\\n\"","lastModifiedDate":"2022-03-27"},{"lineNumber":30,"author":{"gitId":"jaegarpoon"},"content":"            + \"Parameters: INDEX (must be a positive integer) \"","lastModifiedDate":"2022-03-27"},{"lineNumber":31,"author":{"gitId":"jaegarpoon"},"content":"            + \"[\" + PREFIX_NAME + \"NAME] \"","lastModifiedDate":"2022-03-27"},{"lineNumber":32,"author":{"gitId":"jaegarpoon"},"content":"            + \"[\" + PREFIX_PRICE + \"PRICE]\\n\"","lastModifiedDate":"2022-03-27"},{"lineNumber":33,"author":{"gitId":"jaegarpoon"},"content":"            + \"Example: \" + COMMAND_WORD + \" 1 \"","lastModifiedDate":"2022-03-27"},{"lineNumber":34,"author":{"gitId":"jaegarpoon"},"content":"            + PREFIX_NAME + \"Crab Fried Rice \"","lastModifiedDate":"2022-03-27"},{"lineNumber":35,"author":{"gitId":"jaegarpoon"},"content":"            + PREFIX_PRICE + \"19.90\";","lastModifiedDate":"2022-03-27"},{"lineNumber":36,"author":{"gitId":"jaegarpoon"},"content":"","lastModifiedDate":"2022-03-27"},{"lineNumber":37,"author":{"gitId":"jaegarpoon"},"content":"    public static final String MESSAGE_EDIT_DISH_SUCCESS \u003d \"Edited Dish: %1$s\";","lastModifiedDate":"2022-03-27"},{"lineNumber":38,"author":{"gitId":"jaegarpoon"},"content":"    public static final String MESSAGE_NOT_EDITED \u003d \"At least one field to edit \"","lastModifiedDate":"2022-03-27"},{"lineNumber":39,"author":{"gitId":"jaegarpoon"},"content":"            + \"must be provided and field to edit should not be the same as existing field.\";","lastModifiedDate":"2022-03-27"},{"lineNumber":40,"author":{"gitId":"jaegarpoon"},"content":"    public static final String MESSAGE_DUPLICATE_DISH \u003d \"This dish already exists in FoodOnWheels.\";","lastModifiedDate":"2022-03-27"},{"lineNumber":41,"author":{"gitId":"jaegarpoon"},"content":"","lastModifiedDate":"2022-03-27"},{"lineNumber":42,"author":{"gitId":"jaegarpoon"},"content":"    private final Index index;","lastModifiedDate":"2022-03-27"},{"lineNumber":43,"author":{"gitId":"jaegarpoon"},"content":"    private final EditDishDescriptor editDishDescriptor;","lastModifiedDate":"2022-03-27"},{"lineNumber":44,"author":{"gitId":"jaegarpoon"},"content":"","lastModifiedDate":"2022-03-27"},{"lineNumber":45,"author":{"gitId":"jaegarpoon"},"content":"    /**","lastModifiedDate":"2022-03-27"},{"lineNumber":46,"author":{"gitId":"jaegarpoon"},"content":"     * @param index of the dish in the filtered dish list to edit","lastModifiedDate":"2022-03-29"},{"lineNumber":47,"author":{"gitId":"jaegarpoon"},"content":"     * @param editDishDescriptor details to edit the dish with","lastModifiedDate":"2022-03-27"},{"lineNumber":48,"author":{"gitId":"jaegarpoon"},"content":"     */","lastModifiedDate":"2022-03-27"},{"lineNumber":49,"author":{"gitId":"jaegarpoon"},"content":"    public EditDishCommand(Index index, EditDishDescriptor editDishDescriptor) {","lastModifiedDate":"2022-03-27"},{"lineNumber":50,"author":{"gitId":"jaegarpoon"},"content":"        requireNonNull(index);","lastModifiedDate":"2022-03-27"},{"lineNumber":51,"author":{"gitId":"jaegarpoon"},"content":"        requireNonNull(editDishDescriptor);","lastModifiedDate":"2022-03-27"},{"lineNumber":52,"author":{"gitId":"jaegarpoon"},"content":"","lastModifiedDate":"2022-03-27"},{"lineNumber":53,"author":{"gitId":"jaegarpoon"},"content":"        this.index \u003d index;","lastModifiedDate":"2022-03-27"},{"lineNumber":54,"author":{"gitId":"jaegarpoon"},"content":"        this.editDishDescriptor \u003d new EditDishDescriptor(editDishDescriptor);","lastModifiedDate":"2022-03-27"},{"lineNumber":55,"author":{"gitId":"jaegarpoon"},"content":"    }","lastModifiedDate":"2022-03-27"},{"lineNumber":56,"author":{"gitId":"jaegarpoon"},"content":"","lastModifiedDate":"2022-03-27"},{"lineNumber":57,"author":{"gitId":"jaegarpoon"},"content":"    @Override","lastModifiedDate":"2022-03-27"},{"lineNumber":58,"author":{"gitId":"jaegarpoon"},"content":"    public CommandResult execute(Model model) throws CommandException {","lastModifiedDate":"2022-03-27"},{"lineNumber":59,"author":{"gitId":"jaegarpoon"},"content":"        requireNonNull(model);","lastModifiedDate":"2022-03-27"},{"lineNumber":60,"author":{"gitId":"jaegarpoon"},"content":"        List\u003cDish\u003e lastShownList \u003d model.getFilteredDishList();","lastModifiedDate":"2022-03-27"},{"lineNumber":61,"author":{"gitId":"jaegarpoon"},"content":"","lastModifiedDate":"2022-03-27"},{"lineNumber":62,"author":{"gitId":"jaegarpoon"},"content":"        if (index.getZeroBased() \u003e\u003d lastShownList.size()) {","lastModifiedDate":"2022-03-27"},{"lineNumber":63,"author":{"gitId":"jaegarpoon"},"content":"            throw new CommandException(Messages.MESSAGE_INVALID_DISH_DISPLAYED_INDEX);","lastModifiedDate":"2022-03-27"},{"lineNumber":64,"author":{"gitId":"jaegarpoon"},"content":"        }","lastModifiedDate":"2022-03-27"},{"lineNumber":65,"author":{"gitId":"jaegarpoon"},"content":"","lastModifiedDate":"2022-03-27"},{"lineNumber":66,"author":{"gitId":"jaegarpoon"},"content":"        Dish dishToEdit \u003d lastShownList.get(index.getZeroBased());","lastModifiedDate":"2022-03-27"},{"lineNumber":67,"author":{"gitId":"jaegarpoon"},"content":"        Dish editedDish \u003d createEditedDish(dishToEdit, editDishDescriptor);","lastModifiedDate":"2022-03-27"},{"lineNumber":68,"author":{"gitId":"jaegarpoon"},"content":"","lastModifiedDate":"2022-03-27"},{"lineNumber":69,"author":{"gitId":"jaegarpoon"},"content":"        if (dishToEdit.equals(editedDish)) {","lastModifiedDate":"2022-03-27"},{"lineNumber":70,"author":{"gitId":"jaegarpoon"},"content":"            throw new CommandException(MESSAGE_NOT_EDITED);","lastModifiedDate":"2022-03-27"},{"lineNumber":71,"author":{"gitId":"jaegarpoon"},"content":"        }","lastModifiedDate":"2022-03-27"},{"lineNumber":72,"author":{"gitId":"jaegarpoon"},"content":"","lastModifiedDate":"2022-03-27"},{"lineNumber":73,"author":{"gitId":"jaegarpoon"},"content":"        if (!dishToEdit.isSameDish(editedDish) \u0026\u0026 model.hasDish(editedDish)) {","lastModifiedDate":"2022-03-27"},{"lineNumber":74,"author":{"gitId":"jaegarpoon"},"content":"            throw new CommandException(MESSAGE_DUPLICATE_DISH);","lastModifiedDate":"2022-03-27"},{"lineNumber":75,"author":{"gitId":"jaegarpoon"},"content":"        }","lastModifiedDate":"2022-03-27"},{"lineNumber":76,"author":{"gitId":"jaegarpoon"},"content":"","lastModifiedDate":"2022-03-27"},{"lineNumber":77,"author":{"gitId":"jaegarpoon"},"content":"        model.setDish(dishToEdit, editedDish);","lastModifiedDate":"2022-03-27"},{"lineNumber":78,"author":{"gitId":"jaegarpoon"},"content":"        model.updateFilteredDishList(PREDICATE_SHOW_ALL_DISHES);","lastModifiedDate":"2022-03-27"},{"lineNumber":79,"author":{"gitId":"jaegarpoon"},"content":"        return new CommandResult(String.format(MESSAGE_EDIT_DISH_SUCCESS, editedDish),","lastModifiedDate":"2022-03-27"},{"lineNumber":80,"author":{"gitId":"jaegarpoon"},"content":"                false, false, true, false, false);","lastModifiedDate":"2022-03-27"},{"lineNumber":81,"author":{"gitId":"jaegarpoon"},"content":"    }","lastModifiedDate":"2022-03-27"},{"lineNumber":82,"author":{"gitId":"jaegarpoon"},"content":"","lastModifiedDate":"2022-03-27"},{"lineNumber":83,"author":{"gitId":"jaegarpoon"},"content":"    /**","lastModifiedDate":"2022-03-27"},{"lineNumber":84,"author":{"gitId":"jaegarpoon"},"content":"     * Creates and returns a {@code Dish} with the details of {@code dishToEdit}","lastModifiedDate":"2022-03-27"},{"lineNumber":85,"author":{"gitId":"jaegarpoon"},"content":"     * edited with {@code editDishDescriptor}.","lastModifiedDate":"2022-03-27"},{"lineNumber":86,"author":{"gitId":"jaegarpoon"},"content":"     */","lastModifiedDate":"2022-03-27"},{"lineNumber":87,"author":{"gitId":"jaegarpoon"},"content":"    private static Dish createEditedDish(Dish dishToEdit,","lastModifiedDate":"2022-03-27"},{"lineNumber":88,"author":{"gitId":"jaegarpoon"},"content":"            EditDishDescriptor editDishDescriptor) {","lastModifiedDate":"2022-03-27"},{"lineNumber":89,"author":{"gitId":"jaegarpoon"},"content":"        assert dishToEdit !\u003d null;","lastModifiedDate":"2022-03-27"},{"lineNumber":90,"author":{"gitId":"jaegarpoon"},"content":"","lastModifiedDate":"2022-03-27"},{"lineNumber":91,"author":{"gitId":"jaegarpoon"},"content":"        NameDish updatedNameDish \u003d editDishDescriptor.getName().orElse(dishToEdit.getName());","lastModifiedDate":"2022-03-27"},{"lineNumber":92,"author":{"gitId":"jaegarpoon"},"content":"        PriceDish updatedPriceDish \u003d editDishDescriptor.getPrice().orElse(dishToEdit.getPrice());","lastModifiedDate":"2022-03-27"},{"lineNumber":93,"author":{"gitId":"jaegarpoon"},"content":"","lastModifiedDate":"2022-03-27"},{"lineNumber":94,"author":{"gitId":"jaegarpoon"},"content":"        return new Dish(updatedNameDish, updatedPriceDish);","lastModifiedDate":"2022-03-27"},{"lineNumber":95,"author":{"gitId":"jaegarpoon"},"content":"    }","lastModifiedDate":"2022-03-27"},{"lineNumber":96,"author":{"gitId":"jaegarpoon"},"content":"","lastModifiedDate":"2022-03-27"},{"lineNumber":97,"author":{"gitId":"jaegarpoon"},"content":"    @Override","lastModifiedDate":"2022-03-27"},{"lineNumber":98,"author":{"gitId":"jaegarpoon"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2022-03-27"},{"lineNumber":99,"author":{"gitId":"jaegarpoon"},"content":"        // short circuit if same object","lastModifiedDate":"2022-03-27"},{"lineNumber":100,"author":{"gitId":"jaegarpoon"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2022-03-27"},{"lineNumber":101,"author":{"gitId":"jaegarpoon"},"content":"            return true;","lastModifiedDate":"2022-03-27"},{"lineNumber":102,"author":{"gitId":"jaegarpoon"},"content":"        }","lastModifiedDate":"2022-03-27"},{"lineNumber":103,"author":{"gitId":"jaegarpoon"},"content":"","lastModifiedDate":"2022-03-27"},{"lineNumber":104,"author":{"gitId":"jaegarpoon"},"content":"        // instanceof handles nulls","lastModifiedDate":"2022-03-27"},{"lineNumber":105,"author":{"gitId":"jaegarpoon"},"content":"        if (!(other instanceof EditDishCommand)) {","lastModifiedDate":"2022-03-27"},{"lineNumber":106,"author":{"gitId":"jaegarpoon"},"content":"            return false;","lastModifiedDate":"2022-03-27"},{"lineNumber":107,"author":{"gitId":"jaegarpoon"},"content":"        }","lastModifiedDate":"2022-03-27"},{"lineNumber":108,"author":{"gitId":"jaegarpoon"},"content":"","lastModifiedDate":"2022-03-27"},{"lineNumber":109,"author":{"gitId":"jaegarpoon"},"content":"        // state check","lastModifiedDate":"2022-03-27"},{"lineNumber":110,"author":{"gitId":"jaegarpoon"},"content":"        EditDishCommand e \u003d (EditDishCommand) other;","lastModifiedDate":"2022-03-27"},{"lineNumber":111,"author":{"gitId":"jaegarpoon"},"content":"        return index.equals(e.index)","lastModifiedDate":"2022-03-27"},{"lineNumber":112,"author":{"gitId":"jaegarpoon"},"content":"                \u0026\u0026 editDishDescriptor.equals(e.editDishDescriptor);","lastModifiedDate":"2022-03-27"},{"lineNumber":113,"author":{"gitId":"jaegarpoon"},"content":"    }","lastModifiedDate":"2022-03-27"},{"lineNumber":114,"author":{"gitId":"jaegarpoon"},"content":"","lastModifiedDate":"2022-03-27"},{"lineNumber":115,"author":{"gitId":"jaegarpoon"},"content":"    /**","lastModifiedDate":"2022-03-27"},{"lineNumber":116,"author":{"gitId":"jaegarpoon"},"content":"     * Stores the details to edit the dish with. Each non-empty field value will replace the","lastModifiedDate":"2022-03-27"},{"lineNumber":117,"author":{"gitId":"jaegarpoon"},"content":"     * corresponding field value of the dish.","lastModifiedDate":"2022-03-27"},{"lineNumber":118,"author":{"gitId":"jaegarpoon"},"content":"     */","lastModifiedDate":"2022-03-27"},{"lineNumber":119,"author":{"gitId":"jaegarpoon"},"content":"    public static class EditDishDescriptor {","lastModifiedDate":"2022-03-27"},{"lineNumber":120,"author":{"gitId":"jaegarpoon"},"content":"        private NameDish nameDish;","lastModifiedDate":"2022-03-27"},{"lineNumber":121,"author":{"gitId":"jaegarpoon"},"content":"        private PriceDish priceDish;","lastModifiedDate":"2022-03-27"},{"lineNumber":122,"author":{"gitId":"jaegarpoon"},"content":"","lastModifiedDate":"2022-03-27"},{"lineNumber":123,"author":{"gitId":"jaegarpoon"},"content":"        public EditDishDescriptor() {}","lastModifiedDate":"2022-03-27"},{"lineNumber":124,"author":{"gitId":"jaegarpoon"},"content":"","lastModifiedDate":"2022-03-27"},{"lineNumber":125,"author":{"gitId":"jaegarpoon"},"content":"        /**","lastModifiedDate":"2022-03-27"},{"lineNumber":126,"author":{"gitId":"jaegarpoon"},"content":"         * Copy constructor.","lastModifiedDate":"2022-03-27"},{"lineNumber":127,"author":{"gitId":"jaegarpoon"},"content":"         */","lastModifiedDate":"2022-03-27"},{"lineNumber":128,"author":{"gitId":"jaegarpoon"},"content":"        public EditDishDescriptor(EditDishDescriptor toCopy) {","lastModifiedDate":"2022-03-27"},{"lineNumber":129,"author":{"gitId":"jaegarpoon"},"content":"            setName(toCopy.nameDish);","lastModifiedDate":"2022-03-27"},{"lineNumber":130,"author":{"gitId":"jaegarpoon"},"content":"            setPrice(toCopy.priceDish);","lastModifiedDate":"2022-03-27"},{"lineNumber":131,"author":{"gitId":"jaegarpoon"},"content":"        }","lastModifiedDate":"2022-03-27"},{"lineNumber":132,"author":{"gitId":"jaegarpoon"},"content":"","lastModifiedDate":"2022-03-27"},{"lineNumber":133,"author":{"gitId":"jaegarpoon"},"content":"        /**","lastModifiedDate":"2022-03-27"},{"lineNumber":134,"author":{"gitId":"jaegarpoon"},"content":"         * Returns true if at least one field is edited.","lastModifiedDate":"2022-03-27"},{"lineNumber":135,"author":{"gitId":"jaegarpoon"},"content":"         */","lastModifiedDate":"2022-03-27"},{"lineNumber":136,"author":{"gitId":"jaegarpoon"},"content":"        public boolean isAnyFieldEdited() {","lastModifiedDate":"2022-03-27"},{"lineNumber":137,"author":{"gitId":"jaegarpoon"},"content":"            return CollectionUtil.isAnyNonNull(nameDish, priceDish);","lastModifiedDate":"2022-03-27"},{"lineNumber":138,"author":{"gitId":"jaegarpoon"},"content":"        }","lastModifiedDate":"2022-03-27"},{"lineNumber":139,"author":{"gitId":"jaegarpoon"},"content":"","lastModifiedDate":"2022-03-27"},{"lineNumber":140,"author":{"gitId":"jaegarpoon"},"content":"        public void setName(NameDish nameDish) {","lastModifiedDate":"2022-03-27"},{"lineNumber":141,"author":{"gitId":"jaegarpoon"},"content":"            this.nameDish \u003d nameDish;","lastModifiedDate":"2022-03-27"},{"lineNumber":142,"author":{"gitId":"jaegarpoon"},"content":"        }","lastModifiedDate":"2022-03-27"},{"lineNumber":143,"author":{"gitId":"jaegarpoon"},"content":"","lastModifiedDate":"2022-03-27"},{"lineNumber":144,"author":{"gitId":"jaegarpoon"},"content":"        public Optional\u003cNameDish\u003e getName() {","lastModifiedDate":"2022-03-27"},{"lineNumber":145,"author":{"gitId":"jaegarpoon"},"content":"            return Optional.ofNullable(nameDish);","lastModifiedDate":"2022-03-27"},{"lineNumber":146,"author":{"gitId":"jaegarpoon"},"content":"        }","lastModifiedDate":"2022-03-27"},{"lineNumber":147,"author":{"gitId":"jaegarpoon"},"content":"","lastModifiedDate":"2022-03-27"},{"lineNumber":148,"author":{"gitId":"jaegarpoon"},"content":"        public void setPrice(PriceDish priceDish) {","lastModifiedDate":"2022-03-27"},{"lineNumber":149,"author":{"gitId":"jaegarpoon"},"content":"            this.priceDish \u003d priceDish;","lastModifiedDate":"2022-03-27"},{"lineNumber":150,"author":{"gitId":"jaegarpoon"},"content":"        }","lastModifiedDate":"2022-03-27"},{"lineNumber":151,"author":{"gitId":"jaegarpoon"},"content":"","lastModifiedDate":"2022-03-27"},{"lineNumber":152,"author":{"gitId":"jaegarpoon"},"content":"        public Optional\u003cPriceDish\u003e getPrice() {","lastModifiedDate":"2022-03-27"},{"lineNumber":153,"author":{"gitId":"jaegarpoon"},"content":"            return Optional.ofNullable(priceDish);","lastModifiedDate":"2022-03-27"},{"lineNumber":154,"author":{"gitId":"jaegarpoon"},"content":"        }","lastModifiedDate":"2022-03-27"},{"lineNumber":155,"author":{"gitId":"jaegarpoon"},"content":"","lastModifiedDate":"2022-03-27"},{"lineNumber":156,"author":{"gitId":"jaegarpoon"},"content":"        @Override","lastModifiedDate":"2022-03-27"},{"lineNumber":157,"author":{"gitId":"jaegarpoon"},"content":"        public boolean equals(Object other) {","lastModifiedDate":"2022-03-27"},{"lineNumber":158,"author":{"gitId":"jaegarpoon"},"content":"            // short circuit if same object","lastModifiedDate":"2022-03-27"},{"lineNumber":159,"author":{"gitId":"jaegarpoon"},"content":"            if (other \u003d\u003d this) {","lastModifiedDate":"2022-03-27"},{"lineNumber":160,"author":{"gitId":"jaegarpoon"},"content":"                return true;","lastModifiedDate":"2022-03-27"},{"lineNumber":161,"author":{"gitId":"jaegarpoon"},"content":"            }","lastModifiedDate":"2022-03-27"},{"lineNumber":162,"author":{"gitId":"jaegarpoon"},"content":"","lastModifiedDate":"2022-03-27"},{"lineNumber":163,"author":{"gitId":"jaegarpoon"},"content":"            // instanceof handles nulls","lastModifiedDate":"2022-03-27"},{"lineNumber":164,"author":{"gitId":"jaegarpoon"},"content":"            if (!(other instanceof EditDishDescriptor)) {","lastModifiedDate":"2022-03-27"},{"lineNumber":165,"author":{"gitId":"jaegarpoon"},"content":"                return false;","lastModifiedDate":"2022-03-27"},{"lineNumber":166,"author":{"gitId":"jaegarpoon"},"content":"            }","lastModifiedDate":"2022-03-27"},{"lineNumber":167,"author":{"gitId":"jaegarpoon"},"content":"","lastModifiedDate":"2022-03-27"},{"lineNumber":168,"author":{"gitId":"jaegarpoon"},"content":"            // state check","lastModifiedDate":"2022-03-27"},{"lineNumber":169,"author":{"gitId":"jaegarpoon"},"content":"            EditDishDescriptor e \u003d (EditDishDescriptor) other;","lastModifiedDate":"2022-03-27"},{"lineNumber":170,"author":{"gitId":"jaegarpoon"},"content":"","lastModifiedDate":"2022-03-27"},{"lineNumber":171,"author":{"gitId":"jaegarpoon"},"content":"            return getName().equals(e.getName())","lastModifiedDate":"2022-03-27"},{"lineNumber":172,"author":{"gitId":"jaegarpoon"},"content":"                    \u0026\u0026 getPrice().equals(e.getPrice());","lastModifiedDate":"2022-03-27"},{"lineNumber":173,"author":{"gitId":"jaegarpoon"},"content":"        }","lastModifiedDate":"2022-03-27"},{"lineNumber":174,"author":{"gitId":"jaegarpoon"},"content":"    }","lastModifiedDate":"2022-03-27"},{"lineNumber":175,"author":{"gitId":"jaegarpoon"},"content":"}","lastModifiedDate":"2022-03-27"},{"lineNumber":176,"author":{"gitId":"jaegarpoon"},"content":"","lastModifiedDate":"2022-03-27"}],"authorContributionMap":{"jaegarpoon":176}},{"path":"src/main/java/seedu/address/logic/commands/EditDriverCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"hieunm1821"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2022-03-27"},{"lineNumber":2,"author":{"gitId":"hieunm1821"},"content":"","lastModifiedDate":"2022-03-27"},{"lineNumber":3,"author":{"gitId":"hieunm1821"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2022-03-27"},{"lineNumber":4,"author":{"gitId":"hieunm1821"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_NAME;","lastModifiedDate":"2022-03-27"},{"lineNumber":5,"author":{"gitId":"hieunm1821"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_PHONE;","lastModifiedDate":"2022-03-27"},{"lineNumber":6,"author":{"gitId":"hieunm1821"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_STATUS;","lastModifiedDate":"2022-03-27"},{"lineNumber":7,"author":{"gitId":"hieunm1821"},"content":"import static seedu.address.model.Model.PREDICATE_SHOW_ALL_DRIVERS;","lastModifiedDate":"2022-03-28"},{"lineNumber":8,"author":{"gitId":"hieunm1821"},"content":"","lastModifiedDate":"2022-03-27"},{"lineNumber":9,"author":{"gitId":"hieunm1821"},"content":"import java.util.List;","lastModifiedDate":"2022-03-27"},{"lineNumber":10,"author":{"gitId":"hieunm1821"},"content":"import java.util.Optional;","lastModifiedDate":"2022-03-27"},{"lineNumber":11,"author":{"gitId":"hieunm1821"},"content":"","lastModifiedDate":"2022-03-27"},{"lineNumber":12,"author":{"gitId":"hieunm1821"},"content":"import seedu.address.commons.core.Messages;","lastModifiedDate":"2022-03-27"},{"lineNumber":13,"author":{"gitId":"hieunm1821"},"content":"import seedu.address.commons.core.index.Index;","lastModifiedDate":"2022-03-27"},{"lineNumber":14,"author":{"gitId":"hieunm1821"},"content":"import seedu.address.commons.util.CollectionUtil;","lastModifiedDate":"2022-03-27"},{"lineNumber":15,"author":{"gitId":"hieunm1821"},"content":"import seedu.address.logic.commands.exceptions.CommandException;","lastModifiedDate":"2022-03-27"},{"lineNumber":16,"author":{"gitId":"hieunm1821"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2022-03-27"},{"lineNumber":17,"author":{"gitId":"hieunm1821"},"content":"import seedu.address.model.driver.Driver;","lastModifiedDate":"2022-03-27"},{"lineNumber":18,"author":{"gitId":"hieunm1821"},"content":"import seedu.address.model.driver.DriverStatus;","lastModifiedDate":"2022-03-27"},{"lineNumber":19,"author":{"gitId":"hieunm1821"},"content":"import seedu.address.model.driver.NameDriver;","lastModifiedDate":"2022-03-27"},{"lineNumber":20,"author":{"gitId":"hieunm1821"},"content":"import seedu.address.model.driver.PhoneDriver;","lastModifiedDate":"2022-03-27"},{"lineNumber":21,"author":{"gitId":"hieunm1821"},"content":"","lastModifiedDate":"2022-03-27"},{"lineNumber":22,"author":{"gitId":"hieunm1821"},"content":"","lastModifiedDate":"2022-03-27"},{"lineNumber":23,"author":{"gitId":"hieunm1821"},"content":"/**","lastModifiedDate":"2022-03-27"},{"lineNumber":24,"author":{"gitId":"hieunm1821"},"content":" * Edits the details of an existing driver in the database.","lastModifiedDate":"2022-03-27"},{"lineNumber":25,"author":{"gitId":"hieunm1821"},"content":" */","lastModifiedDate":"2022-03-27"},{"lineNumber":26,"author":{"gitId":"hieunm1821"},"content":"public class EditDriverCommand extends Command {","lastModifiedDate":"2022-03-27"},{"lineNumber":27,"author":{"gitId":"hieunm1821"},"content":"    public static final String COMMAND_WORD \u003d \"editdriver\";","lastModifiedDate":"2022-03-27"},{"lineNumber":28,"author":{"gitId":"hieunm1821"},"content":"","lastModifiedDate":"2022-03-27"},{"lineNumber":29,"author":{"gitId":"hieunm1821"},"content":"    public static final String MESSAGE_USAGE \u003d COMMAND_WORD + \": Edits the details of the driver identified \"","lastModifiedDate":"2022-03-27"},{"lineNumber":30,"author":{"gitId":"hieunm1821"},"content":"            + \"by the index number used in the displayed driver list. \"","lastModifiedDate":"2022-03-27"},{"lineNumber":31,"author":{"gitId":"hieunm1821"},"content":"            + \"Existing values will be overwritten by the input values.\\n\"","lastModifiedDate":"2022-03-27"},{"lineNumber":32,"author":{"gitId":"hieunm1821"},"content":"            + \"Driver\u0027s status can only be changed when the driver is free.\\n\"","lastModifiedDate":"2022-03-27"},{"lineNumber":33,"author":{"gitId":"hieunm1821"},"content":"            + \"Parameters: INDEX (must be a positive integer) \"","lastModifiedDate":"2022-03-27"},{"lineNumber":34,"author":{"gitId":"hieunm1821"},"content":"            + \"[\" + PREFIX_NAME + \"NAME] \"","lastModifiedDate":"2022-03-27"},{"lineNumber":35,"author":{"gitId":"hieunm1821"},"content":"            + \"[\" + PREFIX_PHONE + \"PHONE] \"","lastModifiedDate":"2022-03-27"},{"lineNumber":36,"author":{"gitId":"hieunm1821"},"content":"            + \"[\" + PREFIX_STATUS + \"STATUS]\\n\"","lastModifiedDate":"2022-03-27"},{"lineNumber":37,"author":{"gitId":"hieunm1821"},"content":"            + \"Example: \" + COMMAND_WORD + \" 1 \"","lastModifiedDate":"2022-03-27"},{"lineNumber":38,"author":{"gitId":"hieunm1821"},"content":"            + PREFIX_PHONE + \"91234567 \";","lastModifiedDate":"2022-03-27"},{"lineNumber":39,"author":{"gitId":"hieunm1821"},"content":"","lastModifiedDate":"2022-03-27"},{"lineNumber":40,"author":{"gitId":"hieunm1821"},"content":"    public static final String MESSAGE_EDIT_DRIVER_SUCCESS \u003d \"Edited Driver: %1$s\";","lastModifiedDate":"2022-03-27"},{"lineNumber":41,"author":{"gitId":"hieunm1821"},"content":"    public static final String MESSAGE_NOT_EDITED \u003d \"At least one field to edit must be provided.\";","lastModifiedDate":"2022-03-27"},{"lineNumber":42,"author":{"gitId":"hieunm1821"},"content":"    public static final String MESSAGE_DUPLICATE_DRIVER \u003d \"This driver already exists in the database.\";","lastModifiedDate":"2022-03-27"},{"lineNumber":43,"author":{"gitId":"hieunm1821"},"content":"    public static final String MESSAGE_UPDATE_TO_BUSY_FAIL \u003d \"Editing Driver: %1$s \"","lastModifiedDate":"2022-03-31"},{"lineNumber":44,"author":{"gitId":"hieunm1821"},"content":"            + \"failed because cannot update the status of driver to BUSY\";","lastModifiedDate":"2022-03-31"},{"lineNumber":45,"author":{"gitId":"hieunm1821"},"content":"    public static final String MESSAGE_DELETE_DRIVER_FAIL_BUSY \u003d \"Editing Driver: %1$s \"","lastModifiedDate":"2022-03-31"},{"lineNumber":46,"author":{"gitId":"hieunm1821"},"content":"            + \"failed because driver is not free\";","lastModifiedDate":"2022-03-27"},{"lineNumber":47,"author":{"gitId":"hieunm1821"},"content":"","lastModifiedDate":"2022-03-27"},{"lineNumber":48,"author":{"gitId":"hieunm1821"},"content":"    private final Index index;","lastModifiedDate":"2022-03-27"},{"lineNumber":49,"author":{"gitId":"hieunm1821"},"content":"    private final EditDriverDescriptor editDriverDescriptor;","lastModifiedDate":"2022-03-27"},{"lineNumber":50,"author":{"gitId":"hieunm1821"},"content":"","lastModifiedDate":"2022-03-27"},{"lineNumber":51,"author":{"gitId":"hieunm1821"},"content":"    /**","lastModifiedDate":"2022-03-27"},{"lineNumber":52,"author":{"gitId":"hieunm1821"},"content":"     * @param index of the driver in the filtered driver list to edit","lastModifiedDate":"2022-03-27"},{"lineNumber":53,"author":{"gitId":"hieunm1821"},"content":"     * @param editDriverDescriptor details to edit the driver with","lastModifiedDate":"2022-03-27"},{"lineNumber":54,"author":{"gitId":"hieunm1821"},"content":"     */","lastModifiedDate":"2022-03-27"},{"lineNumber":55,"author":{"gitId":"hieunm1821"},"content":"    public EditDriverCommand(Index index, EditDriverDescriptor editDriverDescriptor) {","lastModifiedDate":"2022-03-27"},{"lineNumber":56,"author":{"gitId":"hieunm1821"},"content":"        requireNonNull(index);","lastModifiedDate":"2022-03-27"},{"lineNumber":57,"author":{"gitId":"hieunm1821"},"content":"        requireNonNull(editDriverDescriptor);","lastModifiedDate":"2022-03-27"},{"lineNumber":58,"author":{"gitId":"hieunm1821"},"content":"","lastModifiedDate":"2022-03-27"},{"lineNumber":59,"author":{"gitId":"hieunm1821"},"content":"        this.index \u003d index;","lastModifiedDate":"2022-03-27"},{"lineNumber":60,"author":{"gitId":"hieunm1821"},"content":"        this.editDriverDescriptor \u003d new EditDriverDescriptor(editDriverDescriptor);","lastModifiedDate":"2022-03-27"},{"lineNumber":61,"author":{"gitId":"hieunm1821"},"content":"    }","lastModifiedDate":"2022-03-27"},{"lineNumber":62,"author":{"gitId":"hieunm1821"},"content":"","lastModifiedDate":"2022-03-27"},{"lineNumber":63,"author":{"gitId":"hieunm1821"},"content":"    @Override","lastModifiedDate":"2022-03-27"},{"lineNumber":64,"author":{"gitId":"hieunm1821"},"content":"    public CommandResult execute(Model model) throws CommandException {","lastModifiedDate":"2022-03-27"},{"lineNumber":65,"author":{"gitId":"hieunm1821"},"content":"        requireNonNull(model);","lastModifiedDate":"2022-03-27"},{"lineNumber":66,"author":{"gitId":"hieunm1821"},"content":"        List\u003cDriver\u003e lastShownList \u003d model.getFilteredDriverList();","lastModifiedDate":"2022-03-27"},{"lineNumber":67,"author":{"gitId":"hieunm1821"},"content":"","lastModifiedDate":"2022-03-27"},{"lineNumber":68,"author":{"gitId":"hieunm1821"},"content":"        if (index.getZeroBased() \u003e\u003d lastShownList.size()) {","lastModifiedDate":"2022-03-27"},{"lineNumber":69,"author":{"gitId":"hieunm1821"},"content":"            throw new CommandException(Messages.MESSAGE_INVALID_DRIVER_DISPLAYED_INDEX);","lastModifiedDate":"2022-03-27"},{"lineNumber":70,"author":{"gitId":"hieunm1821"},"content":"        }","lastModifiedDate":"2022-03-27"},{"lineNumber":71,"author":{"gitId":"hieunm1821"},"content":"","lastModifiedDate":"2022-03-27"},{"lineNumber":72,"author":{"gitId":"hieunm1821"},"content":"        Driver driverToEdit \u003d lastShownList.get(index.getZeroBased());","lastModifiedDate":"2022-03-27"},{"lineNumber":73,"author":{"gitId":"hieunm1821"},"content":"        Driver editedDriver \u003d createEditedDriver(driverToEdit, editDriverDescriptor);","lastModifiedDate":"2022-03-27"},{"lineNumber":74,"author":{"gitId":"hieunm1821"},"content":"","lastModifiedDate":"2022-03-27"},{"lineNumber":75,"author":{"gitId":"hieunm1821"},"content":"        if (!driverToEdit.isSameDriver(editedDriver) \u0026\u0026 model.hasDriver(editedDriver)) {","lastModifiedDate":"2022-03-27"},{"lineNumber":76,"author":{"gitId":"hieunm1821"},"content":"            throw new CommandException(MESSAGE_DUPLICATE_DRIVER);","lastModifiedDate":"2022-03-27"},{"lineNumber":77,"author":{"gitId":"hieunm1821"},"content":"        }","lastModifiedDate":"2022-03-27"},{"lineNumber":78,"author":{"gitId":"hieunm1821"},"content":"","lastModifiedDate":"2022-03-27"},{"lineNumber":79,"author":{"gitId":"hieunm1821"},"content":"        if (editedDriver.isBusy()) {","lastModifiedDate":"2022-03-31"},{"lineNumber":80,"author":{"gitId":"hieunm1821"},"content":"            throw new CommandException(String.format(MESSAGE_UPDATE_TO_BUSY_FAIL, driverToEdit));","lastModifiedDate":"2022-04-01"},{"lineNumber":81,"author":{"gitId":"hieunm1821"},"content":"        }","lastModifiedDate":"2022-03-31"},{"lineNumber":82,"author":{"gitId":"hieunm1821"},"content":"","lastModifiedDate":"2022-03-31"},{"lineNumber":83,"author":{"gitId":"hieunm1821"},"content":"        if (driverToEdit.isBusy()) {","lastModifiedDate":"2022-03-27"},{"lineNumber":84,"author":{"gitId":"hieunm1821"},"content":"            throw new CommandException(String.format(MESSAGE_DELETE_DRIVER_FAIL_BUSY, driverToEdit));","lastModifiedDate":"2022-03-27"},{"lineNumber":85,"author":{"gitId":"hieunm1821"},"content":"        }","lastModifiedDate":"2022-03-27"},{"lineNumber":86,"author":{"gitId":"hieunm1821"},"content":"","lastModifiedDate":"2022-03-27"},{"lineNumber":87,"author":{"gitId":"hieunm1821"},"content":"        model.setDriver(driverToEdit, editedDriver);","lastModifiedDate":"2022-03-27"},{"lineNumber":88,"author":{"gitId":"hieunm1821"},"content":"        model.updateFilteredDriverList(PREDICATE_SHOW_ALL_DRIVERS);","lastModifiedDate":"2022-03-28"},{"lineNumber":89,"author":{"gitId":"hieunm1821"},"content":"        return new CommandResult(String.format(MESSAGE_EDIT_DRIVER_SUCCESS, editedDriver), false,","lastModifiedDate":"2022-03-27"},{"lineNumber":90,"author":{"gitId":"hieunm1821"},"content":"                false, false, true, false);","lastModifiedDate":"2022-03-27"},{"lineNumber":91,"author":{"gitId":"hieunm1821"},"content":"    }","lastModifiedDate":"2022-03-27"},{"lineNumber":92,"author":{"gitId":"hieunm1821"},"content":"","lastModifiedDate":"2022-03-27"},{"lineNumber":93,"author":{"gitId":"hieunm1821"},"content":"    /**","lastModifiedDate":"2022-03-27"},{"lineNumber":94,"author":{"gitId":"hieunm1821"},"content":"     * Creates and returns a {@code Driver} with the details of {@code driverToEdit}","lastModifiedDate":"2022-03-27"},{"lineNumber":95,"author":{"gitId":"hieunm1821"},"content":"     * edited with {@code editDriverDescriptor}.","lastModifiedDate":"2022-03-27"},{"lineNumber":96,"author":{"gitId":"hieunm1821"},"content":"     */","lastModifiedDate":"2022-03-27"},{"lineNumber":97,"author":{"gitId":"hieunm1821"},"content":"    private static Driver createEditedDriver(Driver driverToEdit,","lastModifiedDate":"2022-03-27"},{"lineNumber":98,"author":{"gitId":"hieunm1821"},"content":"                                               EditDriverDescriptor editDriverDescriptor) {","lastModifiedDate":"2022-03-27"},{"lineNumber":99,"author":{"gitId":"hieunm1821"},"content":"        assert driverToEdit !\u003d null;","lastModifiedDate":"2022-03-27"},{"lineNumber":100,"author":{"gitId":"hieunm1821"},"content":"","lastModifiedDate":"2022-03-27"},{"lineNumber":101,"author":{"gitId":"hieunm1821"},"content":"        NameDriver updatedNameDriver \u003d editDriverDescriptor.getName().orElse(driverToEdit.getName());","lastModifiedDate":"2022-03-27"},{"lineNumber":102,"author":{"gitId":"hieunm1821"},"content":"        PhoneDriver updatedPhoneDriver \u003d editDriverDescriptor.getPhone().orElse(driverToEdit.getPhone());","lastModifiedDate":"2022-03-27"},{"lineNumber":103,"author":{"gitId":"hieunm1821"},"content":"        DriverStatus updatedStatusDriver \u003d editDriverDescriptor","lastModifiedDate":"2022-03-27"},{"lineNumber":104,"author":{"gitId":"hieunm1821"},"content":"                .getStatus().orElse(driverToEdit.getStatus());","lastModifiedDate":"2022-03-27"},{"lineNumber":105,"author":{"gitId":"hieunm1821"},"content":"","lastModifiedDate":"2022-03-27"},{"lineNumber":106,"author":{"gitId":"hieunm1821"},"content":"        return new Driver(updatedNameDriver, updatedPhoneDriver, updatedStatusDriver);","lastModifiedDate":"2022-03-27"},{"lineNumber":107,"author":{"gitId":"hieunm1821"},"content":"    }","lastModifiedDate":"2022-03-27"},{"lineNumber":108,"author":{"gitId":"hieunm1821"},"content":"","lastModifiedDate":"2022-03-27"},{"lineNumber":109,"author":{"gitId":"hieunm1821"},"content":"    @Override","lastModifiedDate":"2022-03-27"},{"lineNumber":110,"author":{"gitId":"hieunm1821"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2022-03-27"},{"lineNumber":111,"author":{"gitId":"hieunm1821"},"content":"        // short circuit if same object","lastModifiedDate":"2022-03-27"},{"lineNumber":112,"author":{"gitId":"hieunm1821"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2022-03-27"},{"lineNumber":113,"author":{"gitId":"hieunm1821"},"content":"            return true;","lastModifiedDate":"2022-03-27"},{"lineNumber":114,"author":{"gitId":"hieunm1821"},"content":"        }","lastModifiedDate":"2022-03-27"},{"lineNumber":115,"author":{"gitId":"hieunm1821"},"content":"","lastModifiedDate":"2022-03-27"},{"lineNumber":116,"author":{"gitId":"hieunm1821"},"content":"        // instanceof handles nulls","lastModifiedDate":"2022-03-27"},{"lineNumber":117,"author":{"gitId":"hieunm1821"},"content":"        if (!(other instanceof EditDriverCommand)) {","lastModifiedDate":"2022-03-27"},{"lineNumber":118,"author":{"gitId":"hieunm1821"},"content":"            return false;","lastModifiedDate":"2022-03-27"},{"lineNumber":119,"author":{"gitId":"hieunm1821"},"content":"        }","lastModifiedDate":"2022-03-27"},{"lineNumber":120,"author":{"gitId":"hieunm1821"},"content":"","lastModifiedDate":"2022-03-27"},{"lineNumber":121,"author":{"gitId":"hieunm1821"},"content":"        // state check","lastModifiedDate":"2022-03-27"},{"lineNumber":122,"author":{"gitId":"hieunm1821"},"content":"        EditDriverCommand e \u003d (EditDriverCommand) other;","lastModifiedDate":"2022-03-27"},{"lineNumber":123,"author":{"gitId":"hieunm1821"},"content":"        return index.equals(e.index)","lastModifiedDate":"2022-03-27"},{"lineNumber":124,"author":{"gitId":"hieunm1821"},"content":"                \u0026\u0026 editDriverDescriptor.equals(e.editDriverDescriptor);","lastModifiedDate":"2022-03-27"},{"lineNumber":125,"author":{"gitId":"hieunm1821"},"content":"    }","lastModifiedDate":"2022-03-27"},{"lineNumber":126,"author":{"gitId":"hieunm1821"},"content":"","lastModifiedDate":"2022-03-27"},{"lineNumber":127,"author":{"gitId":"hieunm1821"},"content":"","lastModifiedDate":"2022-03-27"},{"lineNumber":128,"author":{"gitId":"hieunm1821"},"content":"    /**","lastModifiedDate":"2022-03-27"},{"lineNumber":129,"author":{"gitId":"hieunm1821"},"content":"     * Stores the details to edit the driver with each non-empty field value will replace the","lastModifiedDate":"2022-03-27"},{"lineNumber":130,"author":{"gitId":"hieunm1821"},"content":"     * corresponding field value of the driver.","lastModifiedDate":"2022-03-28"},{"lineNumber":131,"author":{"gitId":"hieunm1821"},"content":"     */","lastModifiedDate":"2022-03-27"},{"lineNumber":132,"author":{"gitId":"hieunm1821"},"content":"    public static class EditDriverDescriptor {","lastModifiedDate":"2022-03-27"},{"lineNumber":133,"author":{"gitId":"hieunm1821"},"content":"        private NameDriver nameDriver;","lastModifiedDate":"2022-03-27"},{"lineNumber":134,"author":{"gitId":"hieunm1821"},"content":"        private PhoneDriver phoneDriver;","lastModifiedDate":"2022-03-27"},{"lineNumber":135,"author":{"gitId":"hieunm1821"},"content":"        private DriverStatus driverStatus;","lastModifiedDate":"2022-03-27"},{"lineNumber":136,"author":{"gitId":"hieunm1821"},"content":"","lastModifiedDate":"2022-03-27"},{"lineNumber":137,"author":{"gitId":"hieunm1821"},"content":"        public EditDriverDescriptor() {}","lastModifiedDate":"2022-03-27"},{"lineNumber":138,"author":{"gitId":"hieunm1821"},"content":"","lastModifiedDate":"2022-03-27"},{"lineNumber":139,"author":{"gitId":"hieunm1821"},"content":"        /**","lastModifiedDate":"2022-03-27"},{"lineNumber":140,"author":{"gitId":"hieunm1821"},"content":"         * Copy constructor.","lastModifiedDate":"2022-03-27"},{"lineNumber":141,"author":{"gitId":"hieunm1821"},"content":"         * A defensive copy of {@code tags} is used internally.","lastModifiedDate":"2022-03-27"},{"lineNumber":142,"author":{"gitId":"hieunm1821"},"content":"         */","lastModifiedDate":"2022-03-27"},{"lineNumber":143,"author":{"gitId":"hieunm1821"},"content":"        public EditDriverDescriptor(EditDriverDescriptor toCopy) {","lastModifiedDate":"2022-03-27"},{"lineNumber":144,"author":{"gitId":"hieunm1821"},"content":"            setName(toCopy.nameDriver);","lastModifiedDate":"2022-03-27"},{"lineNumber":145,"author":{"gitId":"hieunm1821"},"content":"            setPhone(toCopy.phoneDriver);","lastModifiedDate":"2022-03-27"},{"lineNumber":146,"author":{"gitId":"hieunm1821"},"content":"            setStatus(toCopy.driverStatus);","lastModifiedDate":"2022-03-27"},{"lineNumber":147,"author":{"gitId":"hieunm1821"},"content":"        }","lastModifiedDate":"2022-03-27"},{"lineNumber":148,"author":{"gitId":"hieunm1821"},"content":"","lastModifiedDate":"2022-03-27"},{"lineNumber":149,"author":{"gitId":"hieunm1821"},"content":"        /**","lastModifiedDate":"2022-03-27"},{"lineNumber":150,"author":{"gitId":"hieunm1821"},"content":"         * Returns true if at least one field is edited.","lastModifiedDate":"2022-03-27"},{"lineNumber":151,"author":{"gitId":"hieunm1821"},"content":"         */","lastModifiedDate":"2022-03-27"},{"lineNumber":152,"author":{"gitId":"hieunm1821"},"content":"        public boolean isAnyFieldEdited() {","lastModifiedDate":"2022-03-27"},{"lineNumber":153,"author":{"gitId":"hieunm1821"},"content":"            return CollectionUtil.isAnyNonNull(nameDriver, phoneDriver, driverStatus);","lastModifiedDate":"2022-03-27"},{"lineNumber":154,"author":{"gitId":"hieunm1821"},"content":"        }","lastModifiedDate":"2022-03-27"},{"lineNumber":155,"author":{"gitId":"hieunm1821"},"content":"","lastModifiedDate":"2022-03-27"},{"lineNumber":156,"author":{"gitId":"hieunm1821"},"content":"        public void setName(NameDriver nameDriver) {","lastModifiedDate":"2022-03-27"},{"lineNumber":157,"author":{"gitId":"hieunm1821"},"content":"            this.nameDriver \u003d nameDriver;","lastModifiedDate":"2022-03-27"},{"lineNumber":158,"author":{"gitId":"hieunm1821"},"content":"        }","lastModifiedDate":"2022-03-27"},{"lineNumber":159,"author":{"gitId":"hieunm1821"},"content":"","lastModifiedDate":"2022-03-27"},{"lineNumber":160,"author":{"gitId":"hieunm1821"},"content":"        public Optional\u003cNameDriver\u003e getName() {","lastModifiedDate":"2022-03-27"},{"lineNumber":161,"author":{"gitId":"hieunm1821"},"content":"            return Optional.ofNullable(nameDriver);","lastModifiedDate":"2022-03-27"},{"lineNumber":162,"author":{"gitId":"hieunm1821"},"content":"        }","lastModifiedDate":"2022-03-27"},{"lineNumber":163,"author":{"gitId":"hieunm1821"},"content":"","lastModifiedDate":"2022-03-27"},{"lineNumber":164,"author":{"gitId":"hieunm1821"},"content":"        public void setPhone(PhoneDriver phoneDriver) {","lastModifiedDate":"2022-03-27"},{"lineNumber":165,"author":{"gitId":"hieunm1821"},"content":"            this.phoneDriver \u003d phoneDriver;","lastModifiedDate":"2022-03-27"},{"lineNumber":166,"author":{"gitId":"hieunm1821"},"content":"        }","lastModifiedDate":"2022-03-27"},{"lineNumber":167,"author":{"gitId":"hieunm1821"},"content":"","lastModifiedDate":"2022-03-27"},{"lineNumber":168,"author":{"gitId":"hieunm1821"},"content":"        public Optional\u003cPhoneDriver\u003e getPhone() {","lastModifiedDate":"2022-03-27"},{"lineNumber":169,"author":{"gitId":"hieunm1821"},"content":"            return Optional.ofNullable(phoneDriver);","lastModifiedDate":"2022-03-27"},{"lineNumber":170,"author":{"gitId":"hieunm1821"},"content":"        }","lastModifiedDate":"2022-03-27"},{"lineNumber":171,"author":{"gitId":"hieunm1821"},"content":"","lastModifiedDate":"2022-03-27"},{"lineNumber":172,"author":{"gitId":"hieunm1821"},"content":"        public void setStatus(DriverStatus driverStatus) {","lastModifiedDate":"2022-03-27"},{"lineNumber":173,"author":{"gitId":"hieunm1821"},"content":"            this.driverStatus \u003d driverStatus;","lastModifiedDate":"2022-03-27"},{"lineNumber":174,"author":{"gitId":"hieunm1821"},"content":"        }","lastModifiedDate":"2022-03-27"},{"lineNumber":175,"author":{"gitId":"hieunm1821"},"content":"","lastModifiedDate":"2022-03-27"},{"lineNumber":176,"author":{"gitId":"hieunm1821"},"content":"        public Optional\u003cDriverStatus\u003e getStatus() {","lastModifiedDate":"2022-03-27"},{"lineNumber":177,"author":{"gitId":"hieunm1821"},"content":"            return Optional.ofNullable(driverStatus);","lastModifiedDate":"2022-03-27"},{"lineNumber":178,"author":{"gitId":"hieunm1821"},"content":"        }","lastModifiedDate":"2022-03-27"},{"lineNumber":179,"author":{"gitId":"hieunm1821"},"content":"","lastModifiedDate":"2022-03-27"},{"lineNumber":180,"author":{"gitId":"hieunm1821"},"content":"        @Override","lastModifiedDate":"2022-03-27"},{"lineNumber":181,"author":{"gitId":"hieunm1821"},"content":"        public boolean equals(Object other) {","lastModifiedDate":"2022-03-27"},{"lineNumber":182,"author":{"gitId":"hieunm1821"},"content":"            // short circuit if same object","lastModifiedDate":"2022-03-27"},{"lineNumber":183,"author":{"gitId":"hieunm1821"},"content":"            if (other \u003d\u003d this) {","lastModifiedDate":"2022-03-27"},{"lineNumber":184,"author":{"gitId":"hieunm1821"},"content":"                return true;","lastModifiedDate":"2022-03-27"},{"lineNumber":185,"author":{"gitId":"hieunm1821"},"content":"            }","lastModifiedDate":"2022-03-27"},{"lineNumber":186,"author":{"gitId":"hieunm1821"},"content":"","lastModifiedDate":"2022-03-27"},{"lineNumber":187,"author":{"gitId":"hieunm1821"},"content":"            // instanceof handles nulls","lastModifiedDate":"2022-03-27"},{"lineNumber":188,"author":{"gitId":"hieunm1821"},"content":"            if (!(other instanceof EditDriverDescriptor)) {","lastModifiedDate":"2022-03-27"},{"lineNumber":189,"author":{"gitId":"hieunm1821"},"content":"                return false;","lastModifiedDate":"2022-03-27"},{"lineNumber":190,"author":{"gitId":"hieunm1821"},"content":"            }","lastModifiedDate":"2022-03-27"},{"lineNumber":191,"author":{"gitId":"hieunm1821"},"content":"","lastModifiedDate":"2022-03-27"},{"lineNumber":192,"author":{"gitId":"hieunm1821"},"content":"            // state check","lastModifiedDate":"2022-03-27"},{"lineNumber":193,"author":{"gitId":"hieunm1821"},"content":"            EditDriverDescriptor e \u003d (EditDriverDescriptor) other;","lastModifiedDate":"2022-03-27"},{"lineNumber":194,"author":{"gitId":"hieunm1821"},"content":"","lastModifiedDate":"2022-03-27"},{"lineNumber":195,"author":{"gitId":"hieunm1821"},"content":"            return getName().equals(e.getName())","lastModifiedDate":"2022-03-27"},{"lineNumber":196,"author":{"gitId":"hieunm1821"},"content":"                    \u0026\u0026 getPhone().equals(e.getPhone())","lastModifiedDate":"2022-03-27"},{"lineNumber":197,"author":{"gitId":"hieunm1821"},"content":"                    \u0026\u0026 getStatus().equals(e.getStatus());","lastModifiedDate":"2022-03-27"},{"lineNumber":198,"author":{"gitId":"hieunm1821"},"content":"        }","lastModifiedDate":"2022-03-27"},{"lineNumber":199,"author":{"gitId":"hieunm1821"},"content":"    }","lastModifiedDate":"2022-03-27"},{"lineNumber":200,"author":{"gitId":"hieunm1821"},"content":"}","lastModifiedDate":"2022-03-27"}],"authorContributionMap":{"hieunm1821":200}},{"path":"src/main/java/seedu/address/logic/commands/EditOrderCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"xzzz3"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2022-03-28"},{"lineNumber":2,"author":{"gitId":"xzzz3"},"content":"","lastModifiedDate":"2022-03-28"},{"lineNumber":3,"author":{"gitId":"xzzz3"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2022-03-28"},{"lineNumber":4,"author":{"gitId":"xzzz3"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_DISH;","lastModifiedDate":"2022-03-28"},{"lineNumber":5,"author":{"gitId":"xzzz3"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_PHONE;","lastModifiedDate":"2022-03-28"},{"lineNumber":6,"author":{"gitId":"xzzz3"},"content":"import static seedu.address.model.Model.PREDICATE_SHOW_ALL_ORDERS;","lastModifiedDate":"2022-03-28"},{"lineNumber":7,"author":{"gitId":"xzzz3"},"content":"","lastModifiedDate":"2022-03-28"},{"lineNumber":8,"author":{"gitId":"xzzz3"},"content":"import java.util.ArrayList;","lastModifiedDate":"2022-03-28"},{"lineNumber":9,"author":{"gitId":"xzzz3"},"content":"import java.util.List;","lastModifiedDate":"2022-03-28"},{"lineNumber":10,"author":{"gitId":"xzzz3"},"content":"import java.util.Optional;","lastModifiedDate":"2022-03-28"},{"lineNumber":11,"author":{"gitId":"xzzz3"},"content":"","lastModifiedDate":"2022-03-28"},{"lineNumber":12,"author":{"gitId":"xzzz3"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2022-03-28"},{"lineNumber":13,"author":{"gitId":"xzzz3"},"content":"import seedu.address.commons.core.Messages;","lastModifiedDate":"2022-03-28"},{"lineNumber":14,"author":{"gitId":"xzzz3"},"content":"import seedu.address.commons.core.index.Index;","lastModifiedDate":"2022-03-28"},{"lineNumber":15,"author":{"gitId":"xzzz3"},"content":"import seedu.address.commons.util.CollectionUtil;","lastModifiedDate":"2022-03-28"},{"lineNumber":16,"author":{"gitId":"xzzz3"},"content":"import seedu.address.logic.commands.exceptions.CommandException;","lastModifiedDate":"2022-03-28"},{"lineNumber":17,"author":{"gitId":"xzzz3"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2022-03-28"},{"lineNumber":18,"author":{"gitId":"xzzz3"},"content":"import seedu.address.model.customer.Customer;","lastModifiedDate":"2022-03-28"},{"lineNumber":19,"author":{"gitId":"xzzz3"},"content":"import seedu.address.model.customer.exceptions.CustomerNotFoundException;","lastModifiedDate":"2022-03-28"},{"lineNumber":20,"author":{"gitId":"xzzz3"},"content":"import seedu.address.model.dish.Dish;","lastModifiedDate":"2022-03-28"},{"lineNumber":21,"author":{"gitId":"jaegarpoon"},"content":"import seedu.address.model.dish.exception.DishNotFoundException;","lastModifiedDate":"2022-03-30"},{"lineNumber":22,"author":{"gitId":"jaegarpoon"},"content":"import seedu.address.model.driver.Driver;","lastModifiedDate":"2022-03-30"},{"lineNumber":23,"author":{"gitId":"xzzz3"},"content":"import seedu.address.model.order.Order;","lastModifiedDate":"2022-03-28"},{"lineNumber":24,"author":{"gitId":"xzzz3"},"content":"","lastModifiedDate":"2022-03-28"},{"lineNumber":25,"author":{"gitId":"xzzz3"},"content":"/**","lastModifiedDate":"2022-03-28"},{"lineNumber":26,"author":{"gitId":"xzzz3"},"content":" * Edits the details of an existing order in the order list.","lastModifiedDate":"2022-03-28"},{"lineNumber":27,"author":{"gitId":"xzzz3"},"content":" */","lastModifiedDate":"2022-03-28"},{"lineNumber":28,"author":{"gitId":"xzzz3"},"content":"public class EditOrderCommand extends Command {","lastModifiedDate":"2022-03-28"},{"lineNumber":29,"author":{"gitId":"xzzz3"},"content":"","lastModifiedDate":"2022-03-28"},{"lineNumber":30,"author":{"gitId":"xzzz3"},"content":"    public static final String COMMAND_WORD \u003d \"editorder\";","lastModifiedDate":"2022-03-28"},{"lineNumber":31,"author":{"gitId":"xzzz3"},"content":"","lastModifiedDate":"2022-03-28"},{"lineNumber":32,"author":{"gitId":"xzzz3"},"content":"    public static final String MESSAGE_USAGE \u003d COMMAND_WORD + \": Edits the customer and dish details of \"","lastModifiedDate":"2022-03-29"},{"lineNumber":33,"author":{"gitId":"xzzz3"},"content":"            + \"the order identified by the index number used in the displayed order list. \"","lastModifiedDate":"2022-03-29"},{"lineNumber":34,"author":{"gitId":"xzzz3"},"content":"            + \"Existing values will be overwritten by the input values.\\n\"","lastModifiedDate":"2022-03-28"},{"lineNumber":35,"author":{"gitId":"xzzz3"},"content":"            + \"Parameters: INDEX (must be a positive integer) \"","lastModifiedDate":"2022-03-28"},{"lineNumber":36,"author":{"gitId":"xzzz3"},"content":"            + \"[\" + PREFIX_PHONE + \"PHONE] \"","lastModifiedDate":"2022-03-28"},{"lineNumber":37,"author":{"gitId":"xzzz3"},"content":"            + \"[\" + PREFIX_DISH + \"DISHES]...\\n\"","lastModifiedDate":"2022-03-28"},{"lineNumber":38,"author":{"gitId":"xzzz3"},"content":"            + \"Example: \" + COMMAND_WORD + \" 1 \"","lastModifiedDate":"2022-03-28"},{"lineNumber":39,"author":{"gitId":"xzzz3"},"content":"            + PREFIX_PHONE + \"91234567 \"","lastModifiedDate":"2022-03-28"},{"lineNumber":40,"author":{"gitId":"xzzz3"},"content":"            + PREFIX_DISH + \"kimchi sushi\";","lastModifiedDate":"2022-03-28"},{"lineNumber":41,"author":{"gitId":"xzzz3"},"content":"","lastModifiedDate":"2022-03-28"},{"lineNumber":42,"author":{"gitId":"xzzz3"},"content":"    public static final String MESSAGE_EDIT_ORDER_SUCCESS \u003d \"Edited Order: %1$s\";","lastModifiedDate":"2022-03-28"},{"lineNumber":43,"author":{"gitId":"xzzz3"},"content":"    public static final String MESSAGE_NOT_EDITED \u003d \"At least one field to edit must be provided.\";","lastModifiedDate":"2022-03-28"},{"lineNumber":44,"author":{"gitId":"xzzz3"},"content":"    public static final String MESSAGE_DUPLICATE_ORDER \u003d \"This order already exists in the order list.\";","lastModifiedDate":"2022-03-28"},{"lineNumber":45,"author":{"gitId":"xzzz3"},"content":"","lastModifiedDate":"2022-03-28"},{"lineNumber":46,"author":{"gitId":"xzzz3"},"content":"    private final Index index;","lastModifiedDate":"2022-03-28"},{"lineNumber":47,"author":{"gitId":"xzzz3"},"content":"    private final EditOrderDescriptor editOrderDescriptor;","lastModifiedDate":"2022-03-28"},{"lineNumber":48,"author":{"gitId":"xzzz3"},"content":"","lastModifiedDate":"2022-03-28"},{"lineNumber":49,"author":{"gitId":"xzzz3"},"content":"    /**","lastModifiedDate":"2022-03-28"},{"lineNumber":50,"author":{"gitId":"xzzz3"},"content":"     * @param index of the order in the filtered order list to edit","lastModifiedDate":"2022-03-28"},{"lineNumber":51,"author":{"gitId":"xzzz3"},"content":"     * @param editOrderDescriptor details to edit the order with","lastModifiedDate":"2022-03-28"},{"lineNumber":52,"author":{"gitId":"xzzz3"},"content":"     */","lastModifiedDate":"2022-03-28"},{"lineNumber":53,"author":{"gitId":"xzzz3"},"content":"    public EditOrderCommand(Index index, EditOrderDescriptor editOrderDescriptor) {","lastModifiedDate":"2022-03-28"},{"lineNumber":54,"author":{"gitId":"xzzz3"},"content":"        requireNonNull(index);","lastModifiedDate":"2022-03-28"},{"lineNumber":55,"author":{"gitId":"xzzz3"},"content":"        requireNonNull(editOrderDescriptor);","lastModifiedDate":"2022-03-28"},{"lineNumber":56,"author":{"gitId":"xzzz3"},"content":"","lastModifiedDate":"2022-03-28"},{"lineNumber":57,"author":{"gitId":"xzzz3"},"content":"        this.index \u003d index;","lastModifiedDate":"2022-03-28"},{"lineNumber":58,"author":{"gitId":"xzzz3"},"content":"        this.editOrderDescriptor \u003d editOrderDescriptor;","lastModifiedDate":"2022-03-28"},{"lineNumber":59,"author":{"gitId":"xzzz3"},"content":"    }","lastModifiedDate":"2022-03-28"},{"lineNumber":60,"author":{"gitId":"xzzz3"},"content":"","lastModifiedDate":"2022-03-28"},{"lineNumber":61,"author":{"gitId":"xzzz3"},"content":"    @Override","lastModifiedDate":"2022-03-28"},{"lineNumber":62,"author":{"gitId":"xzzz3"},"content":"    public CommandResult execute(Model model) {","lastModifiedDate":"2022-03-28"},{"lineNumber":63,"author":{"gitId":"xzzz3"},"content":"        requireNonNull(model);","lastModifiedDate":"2022-03-28"},{"lineNumber":64,"author":{"gitId":"xzzz3"},"content":"        return new CommandResult(MESSAGE_EDIT_ORDER_SUCCESS,","lastModifiedDate":"2022-03-29"},{"lineNumber":65,"author":{"gitId":"xzzz3"},"content":"                false, false, false, false, true);","lastModifiedDate":"2022-03-28"},{"lineNumber":66,"author":{"gitId":"xzzz3"},"content":"    }","lastModifiedDate":"2022-03-28"},{"lineNumber":67,"author":{"gitId":"xzzz3"},"content":"","lastModifiedDate":"2022-03-28"},{"lineNumber":68,"author":{"gitId":"xzzz3"},"content":"    /**","lastModifiedDate":"2022-03-28"},{"lineNumber":69,"author":{"gitId":"xzzz3"},"content":"     * Executes the EditOrderCommand and returns the result message.","lastModifiedDate":"2022-03-28"},{"lineNumber":70,"author":{"gitId":"xzzz3"},"content":"     */","lastModifiedDate":"2022-03-28"},{"lineNumber":71,"author":{"gitId":"xzzz3"},"content":"    public CommandResult execute(Model model, ObservableList\u003cCustomer\u003e customers,","lastModifiedDate":"2022-03-28"},{"lineNumber":72,"author":{"gitId":"xzzz3"},"content":"                                 ObservableList\u003cDish\u003e dishes) throws CommandException {","lastModifiedDate":"2022-03-28"},{"lineNumber":73,"author":{"gitId":"xzzz3"},"content":"        requireNonNull(model);","lastModifiedDate":"2022-03-28"},{"lineNumber":74,"author":{"gitId":"xzzz3"},"content":"        List\u003cOrder\u003e lastShownList \u003d model.getFilteredOrderList();","lastModifiedDate":"2022-03-28"},{"lineNumber":75,"author":{"gitId":"xzzz3"},"content":"","lastModifiedDate":"2022-03-28"},{"lineNumber":76,"author":{"gitId":"xzzz3"},"content":"        if (index.getZeroBased() \u003e\u003d lastShownList.size()) {","lastModifiedDate":"2022-03-28"},{"lineNumber":77,"author":{"gitId":"xzzz3"},"content":"            throw new CommandException(Messages.MESSAGE_INVALID_ORDER_DISPLAYED_INDEX);","lastModifiedDate":"2022-03-28"},{"lineNumber":78,"author":{"gitId":"xzzz3"},"content":"        }","lastModifiedDate":"2022-03-28"},{"lineNumber":79,"author":{"gitId":"xzzz3"},"content":"","lastModifiedDate":"2022-03-28"},{"lineNumber":80,"author":{"gitId":"xzzz3"},"content":"        Order orderToEdit \u003d lastShownList.get(index.getZeroBased());","lastModifiedDate":"2022-03-28"},{"lineNumber":81,"author":{"gitId":"xzzz3"},"content":"        Order editedOrder \u003d createEditedOrder(orderToEdit, editOrderDescriptor, customers, dishes);","lastModifiedDate":"2022-03-28"},{"lineNumber":82,"author":{"gitId":"xzzz3"},"content":"","lastModifiedDate":"2022-03-28"},{"lineNumber":83,"author":{"gitId":"xzzz3"},"content":"        if (!orderToEdit.equals(editedOrder) \u0026\u0026 model.hasOrder(editedOrder)) {","lastModifiedDate":"2022-03-28"},{"lineNumber":84,"author":{"gitId":"xzzz3"},"content":"            throw new CommandException(MESSAGE_DUPLICATE_ORDER);","lastModifiedDate":"2022-03-28"},{"lineNumber":85,"author":{"gitId":"xzzz3"},"content":"        }","lastModifiedDate":"2022-03-28"},{"lineNumber":86,"author":{"gitId":"xzzz3"},"content":"","lastModifiedDate":"2022-03-28"},{"lineNumber":87,"author":{"gitId":"xzzz3"},"content":"        model.setOrder(orderToEdit, editedOrder);","lastModifiedDate":"2022-03-28"},{"lineNumber":88,"author":{"gitId":"xzzz3"},"content":"        model.updateFilteredOrderList(PREDICATE_SHOW_ALL_ORDERS);","lastModifiedDate":"2022-03-28"},{"lineNumber":89,"author":{"gitId":"xzzz3"},"content":"        return new CommandResult(String.format(MESSAGE_EDIT_ORDER_SUCCESS, editedOrder),","lastModifiedDate":"2022-03-28"},{"lineNumber":90,"author":{"gitId":"xzzz3"},"content":"                false, false, false, false, true);","lastModifiedDate":"2022-03-28"},{"lineNumber":91,"author":{"gitId":"xzzz3"},"content":"    }","lastModifiedDate":"2022-03-28"},{"lineNumber":92,"author":{"gitId":"xzzz3"},"content":"","lastModifiedDate":"2022-03-28"},{"lineNumber":93,"author":{"gitId":"xzzz3"},"content":"    /**","lastModifiedDate":"2022-03-28"},{"lineNumber":94,"author":{"gitId":"xzzz3"},"content":"     * Creates and returns a {@code Order} with the details of {@code orderToEdit}","lastModifiedDate":"2022-03-28"},{"lineNumber":95,"author":{"gitId":"xzzz3"},"content":"     * edited with {@code editOrderDescriptor}.","lastModifiedDate":"2022-03-28"},{"lineNumber":96,"author":{"gitId":"xzzz3"},"content":"     */","lastModifiedDate":"2022-03-28"},{"lineNumber":97,"author":{"gitId":"xzzz3"},"content":"    private static Order createEditedOrder(Order orderToEdit,","lastModifiedDate":"2022-03-28"},{"lineNumber":98,"author":{"gitId":"xzzz3"},"content":"                                           EditOrderDescriptor editOrderDescriptor,","lastModifiedDate":"2022-03-28"},{"lineNumber":99,"author":{"gitId":"xzzz3"},"content":"                                           ObservableList\u003cCustomer\u003e customers,","lastModifiedDate":"2022-03-28"},{"lineNumber":100,"author":{"gitId":"xzzz3"},"content":"                                           ObservableList\u003cDish\u003e dishes) {","lastModifiedDate":"2022-03-28"},{"lineNumber":101,"author":{"gitId":"xzzz3"},"content":"        assert orderToEdit !\u003d null;","lastModifiedDate":"2022-03-28"},{"lineNumber":102,"author":{"gitId":"xzzz3"},"content":"","lastModifiedDate":"2022-03-28"},{"lineNumber":103,"author":{"gitId":"xzzz3"},"content":"        Customer updatedCustomer \u003d orderToEdit.getCustomer();","lastModifiedDate":"2022-03-28"},{"lineNumber":104,"author":{"gitId":"xzzz3"},"content":"","lastModifiedDate":"2022-03-28"},{"lineNumber":105,"author":{"gitId":"xzzz3"},"content":"        if (editOrderDescriptor.getCustomerPhone().isPresent()) {","lastModifiedDate":"2022-03-28"},{"lineNumber":106,"author":{"gitId":"xzzz3"},"content":"            boolean customerFound \u003d false;","lastModifiedDate":"2022-03-28"},{"lineNumber":107,"author":{"gitId":"xzzz3"},"content":"            // matching customer phone number in input to the actual customer in stored data","lastModifiedDate":"2022-03-28"},{"lineNumber":108,"author":{"gitId":"xzzz3"},"content":"            for (Customer storedCustomer : customers) {","lastModifiedDate":"2022-03-28"},{"lineNumber":109,"author":{"gitId":"xzzz3"},"content":"                if (storedCustomer.getPhone().toString().equals(editOrderDescriptor.customerPhone)) {","lastModifiedDate":"2022-03-28"},{"lineNumber":110,"author":{"gitId":"xzzz3"},"content":"                    updatedCustomer \u003d storedCustomer;","lastModifiedDate":"2022-03-28"},{"lineNumber":111,"author":{"gitId":"xzzz3"},"content":"                    customerFound \u003d true;","lastModifiedDate":"2022-03-28"},{"lineNumber":112,"author":{"gitId":"xzzz3"},"content":"                    break;","lastModifiedDate":"2022-03-28"},{"lineNumber":113,"author":{"gitId":"xzzz3"},"content":"                }","lastModifiedDate":"2022-03-28"},{"lineNumber":114,"author":{"gitId":"xzzz3"},"content":"            }","lastModifiedDate":"2022-03-28"},{"lineNumber":115,"author":{"gitId":"xzzz3"},"content":"","lastModifiedDate":"2022-03-28"},{"lineNumber":116,"author":{"gitId":"xzzz3"},"content":"            if (!customerFound) {","lastModifiedDate":"2022-03-28"},{"lineNumber":117,"author":{"gitId":"xzzz3"},"content":"                throw new CustomerNotFoundException();","lastModifiedDate":"2022-03-28"},{"lineNumber":118,"author":{"gitId":"xzzz3"},"content":"            }","lastModifiedDate":"2022-03-28"},{"lineNumber":119,"author":{"gitId":"xzzz3"},"content":"        }","lastModifiedDate":"2022-03-28"},{"lineNumber":120,"author":{"gitId":"xzzz3"},"content":"","lastModifiedDate":"2022-03-28"},{"lineNumber":121,"author":{"gitId":"xzzz3"},"content":"        Driver updatedDriver \u003d orderToEdit.getDriver();","lastModifiedDate":"2022-03-28"},{"lineNumber":122,"author":{"gitId":"xzzz3"},"content":"","lastModifiedDate":"2022-03-28"},{"lineNumber":123,"author":{"gitId":"xzzz3"},"content":"        ArrayList\u003cDish\u003e updatedDishes \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2022-03-28"},{"lineNumber":124,"author":{"gitId":"xzzz3"},"content":"        if (editOrderDescriptor.getDishes().isPresent()) {","lastModifiedDate":"2022-03-28"},{"lineNumber":125,"author":{"gitId":"xzzz3"},"content":"            List\u003cString\u003e dishesInputList \u003d editOrderDescriptor.getDishes().get();","lastModifiedDate":"2022-03-28"},{"lineNumber":126,"author":{"gitId":"xzzz3"},"content":"            for (Dish dish : dishes) {","lastModifiedDate":"2022-03-28"},{"lineNumber":127,"author":{"gitId":"xzzz3"},"content":"                if (dishesInputList.contains(dish.toString())) {","lastModifiedDate":"2022-03-28"},{"lineNumber":128,"author":{"gitId":"xzzz3"},"content":"                    updatedDishes.add(dish);","lastModifiedDate":"2022-03-29"},{"lineNumber":129,"author":{"gitId":"xzzz3"},"content":"                }","lastModifiedDate":"2022-03-28"},{"lineNumber":130,"author":{"gitId":"xzzz3"},"content":"            }","lastModifiedDate":"2022-03-28"},{"lineNumber":131,"author":{"gitId":"xzzz3"},"content":"","lastModifiedDate":"2022-03-28"},{"lineNumber":132,"author":{"gitId":"xzzz3"},"content":"            if (dishesInputList.size() !\u003d updatedDishes.size()) {","lastModifiedDate":"2022-03-28"},{"lineNumber":133,"author":{"gitId":"xzzz3"},"content":"                throw new DishNotFoundException();","lastModifiedDate":"2022-03-28"},{"lineNumber":134,"author":{"gitId":"xzzz3"},"content":"            }","lastModifiedDate":"2022-03-28"},{"lineNumber":135,"author":{"gitId":"xzzz3"},"content":"        } else {","lastModifiedDate":"2022-03-28"},{"lineNumber":136,"author":{"gitId":"xzzz3"},"content":"            updatedDishes \u003d orderToEdit.getDishes();","lastModifiedDate":"2022-03-28"},{"lineNumber":137,"author":{"gitId":"xzzz3"},"content":"        }","lastModifiedDate":"2022-03-28"},{"lineNumber":138,"author":{"gitId":"xzzz3"},"content":"","lastModifiedDate":"2022-03-28"},{"lineNumber":139,"author":{"gitId":"xzzz3"},"content":"        return new Order(updatedCustomer, updatedDriver, orderToEdit.getTime(),","lastModifiedDate":"2022-03-28"},{"lineNumber":140,"author":{"gitId":"xzzz3"},"content":"                orderToEdit.getOrderNumber(), updatedDishes.toArray(new Dish[0]));","lastModifiedDate":"2022-03-28"},{"lineNumber":141,"author":{"gitId":"xzzz3"},"content":"    }","lastModifiedDate":"2022-03-28"},{"lineNumber":142,"author":{"gitId":"xzzz3"},"content":"","lastModifiedDate":"2022-03-28"},{"lineNumber":143,"author":{"gitId":"xzzz3"},"content":"    @Override","lastModifiedDate":"2022-03-28"},{"lineNumber":144,"author":{"gitId":"xzzz3"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2022-03-28"},{"lineNumber":145,"author":{"gitId":"xzzz3"},"content":"        // short circuit if same object","lastModifiedDate":"2022-03-28"},{"lineNumber":146,"author":{"gitId":"xzzz3"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2022-03-28"},{"lineNumber":147,"author":{"gitId":"xzzz3"},"content":"            return true;","lastModifiedDate":"2022-03-28"},{"lineNumber":148,"author":{"gitId":"xzzz3"},"content":"        }","lastModifiedDate":"2022-03-28"},{"lineNumber":149,"author":{"gitId":"xzzz3"},"content":"","lastModifiedDate":"2022-03-28"},{"lineNumber":150,"author":{"gitId":"xzzz3"},"content":"        // instanceof handles nulls","lastModifiedDate":"2022-03-28"},{"lineNumber":151,"author":{"gitId":"xzzz3"},"content":"        if (!(other instanceof EditOrderCommand)) {","lastModifiedDate":"2022-03-28"},{"lineNumber":152,"author":{"gitId":"xzzz3"},"content":"            return false;","lastModifiedDate":"2022-03-28"},{"lineNumber":153,"author":{"gitId":"xzzz3"},"content":"        }","lastModifiedDate":"2022-03-28"},{"lineNumber":154,"author":{"gitId":"xzzz3"},"content":"","lastModifiedDate":"2022-03-28"},{"lineNumber":155,"author":{"gitId":"xzzz3"},"content":"        // state check","lastModifiedDate":"2022-03-28"},{"lineNumber":156,"author":{"gitId":"xzzz3"},"content":"        EditOrderCommand e \u003d (EditOrderCommand) other;","lastModifiedDate":"2022-03-28"},{"lineNumber":157,"author":{"gitId":"xzzz3"},"content":"        return index.equals(e.index)","lastModifiedDate":"2022-03-28"},{"lineNumber":158,"author":{"gitId":"xzzz3"},"content":"                \u0026\u0026 editOrderDescriptor.equals(e.editOrderDescriptor);","lastModifiedDate":"2022-03-28"},{"lineNumber":159,"author":{"gitId":"xzzz3"},"content":"    }","lastModifiedDate":"2022-03-28"},{"lineNumber":160,"author":{"gitId":"xzzz3"},"content":"","lastModifiedDate":"2022-03-28"},{"lineNumber":161,"author":{"gitId":"xzzz3"},"content":"    /**","lastModifiedDate":"2022-03-28"},{"lineNumber":162,"author":{"gitId":"xzzz3"},"content":"     * Stores the details to edit the order with. Each non-empty field value will replace the","lastModifiedDate":"2022-03-28"},{"lineNumber":163,"author":{"gitId":"xzzz3"},"content":"     * corresponding field value of the order.","lastModifiedDate":"2022-03-28"},{"lineNumber":164,"author":{"gitId":"xzzz3"},"content":"     */","lastModifiedDate":"2022-03-28"},{"lineNumber":165,"author":{"gitId":"xzzz3"},"content":"    public static class EditOrderDescriptor {","lastModifiedDate":"2022-03-28"},{"lineNumber":166,"author":{"gitId":"xzzz3"},"content":"        private String customerPhone;","lastModifiedDate":"2022-03-28"},{"lineNumber":167,"author":{"gitId":"xzzz3"},"content":"        private String[] dishes;","lastModifiedDate":"2022-03-28"},{"lineNumber":168,"author":{"gitId":"xzzz3"},"content":"","lastModifiedDate":"2022-03-28"},{"lineNumber":169,"author":{"gitId":"xzzz3"},"content":"        public EditOrderDescriptor() {}","lastModifiedDate":"2022-03-28"},{"lineNumber":170,"author":{"gitId":"xzzz3"},"content":"","lastModifiedDate":"2022-03-28"},{"lineNumber":171,"author":{"gitId":"xzzz3"},"content":"        /**","lastModifiedDate":"2022-03-28"},{"lineNumber":172,"author":{"gitId":"xzzz3"},"content":"         * Returns true if at least one field is edited.","lastModifiedDate":"2022-03-28"},{"lineNumber":173,"author":{"gitId":"xzzz3"},"content":"         */","lastModifiedDate":"2022-03-28"},{"lineNumber":174,"author":{"gitId":"xzzz3"},"content":"        public boolean isAnyFieldEdited() {","lastModifiedDate":"2022-03-28"},{"lineNumber":175,"author":{"gitId":"xzzz3"},"content":"            return CollectionUtil.isAnyNonNull(customerPhone, dishes);","lastModifiedDate":"2022-03-28"},{"lineNumber":176,"author":{"gitId":"xzzz3"},"content":"        }","lastModifiedDate":"2022-03-28"},{"lineNumber":177,"author":{"gitId":"xzzz3"},"content":"","lastModifiedDate":"2022-03-28"},{"lineNumber":178,"author":{"gitId":"xzzz3"},"content":"        public void setCustomerPhone(String phoneInput) {","lastModifiedDate":"2022-03-28"},{"lineNumber":179,"author":{"gitId":"xzzz3"},"content":"            customerPhone \u003d phoneInput;","lastModifiedDate":"2022-03-28"},{"lineNumber":180,"author":{"gitId":"xzzz3"},"content":"        }","lastModifiedDate":"2022-03-28"},{"lineNumber":181,"author":{"gitId":"xzzz3"},"content":"","lastModifiedDate":"2022-03-28"},{"lineNumber":182,"author":{"gitId":"xzzz3"},"content":"        public Optional\u003cString\u003e getCustomerPhone() {","lastModifiedDate":"2022-03-28"},{"lineNumber":183,"author":{"gitId":"xzzz3"},"content":"            return Optional.ofNullable(customerPhone);","lastModifiedDate":"2022-03-28"},{"lineNumber":184,"author":{"gitId":"xzzz3"},"content":"        }","lastModifiedDate":"2022-03-28"},{"lineNumber":185,"author":{"gitId":"xzzz3"},"content":"","lastModifiedDate":"2022-03-28"},{"lineNumber":186,"author":{"gitId":"xzzz3"},"content":"        public void setDishes(String ... dishesInput) {","lastModifiedDate":"2022-03-28"},{"lineNumber":187,"author":{"gitId":"xzzz3"},"content":"            this.dishes \u003d dishesInput;","lastModifiedDate":"2022-03-28"},{"lineNumber":188,"author":{"gitId":"xzzz3"},"content":"        }","lastModifiedDate":"2022-03-28"},{"lineNumber":189,"author":{"gitId":"xzzz3"},"content":"","lastModifiedDate":"2022-03-28"},{"lineNumber":190,"author":{"gitId":"xzzz3"},"content":"        /**","lastModifiedDate":"2022-03-28"},{"lineNumber":191,"author":{"gitId":"xzzz3"},"content":"         * Returns an unmodifiable dishes list, which throws {@code UnsupportedOperationException}","lastModifiedDate":"2022-03-28"},{"lineNumber":192,"author":{"gitId":"xzzz3"},"content":"         * if modification is attempted.","lastModifiedDate":"2022-03-28"},{"lineNumber":193,"author":{"gitId":"xzzz3"},"content":"         * Returns {@code Optional#empty()} if {@code dishes} is null.","lastModifiedDate":"2022-03-28"},{"lineNumber":194,"author":{"gitId":"xzzz3"},"content":"         */","lastModifiedDate":"2022-03-28"},{"lineNumber":195,"author":{"gitId":"xzzz3"},"content":"        public Optional\u003cList\u003cString\u003e\u003e getDishes() {","lastModifiedDate":"2022-03-28"},{"lineNumber":196,"author":{"gitId":"xzzz3"},"content":"            return (dishes !\u003d null) ? Optional.of(List.of(dishes)) : Optional.empty();","lastModifiedDate":"2022-03-28"},{"lineNumber":197,"author":{"gitId":"xzzz3"},"content":"        }","lastModifiedDate":"2022-03-28"},{"lineNumber":198,"author":{"gitId":"xzzz3"},"content":"","lastModifiedDate":"2022-03-28"},{"lineNumber":199,"author":{"gitId":"xzzz3"},"content":"        @Override","lastModifiedDate":"2022-03-28"},{"lineNumber":200,"author":{"gitId":"xzzz3"},"content":"        public boolean equals(Object other) {","lastModifiedDate":"2022-03-28"},{"lineNumber":201,"author":{"gitId":"xzzz3"},"content":"            // short circuit if same object","lastModifiedDate":"2022-03-28"},{"lineNumber":202,"author":{"gitId":"xzzz3"},"content":"            if (other \u003d\u003d this) {","lastModifiedDate":"2022-03-28"},{"lineNumber":203,"author":{"gitId":"xzzz3"},"content":"                return true;","lastModifiedDate":"2022-03-28"},{"lineNumber":204,"author":{"gitId":"xzzz3"},"content":"            }","lastModifiedDate":"2022-03-28"},{"lineNumber":205,"author":{"gitId":"xzzz3"},"content":"","lastModifiedDate":"2022-03-28"},{"lineNumber":206,"author":{"gitId":"xzzz3"},"content":"            // instanceof handles nulls","lastModifiedDate":"2022-03-28"},{"lineNumber":207,"author":{"gitId":"xzzz3"},"content":"            if (!(other instanceof EditOrderCommand.EditOrderDescriptor)) {","lastModifiedDate":"2022-03-28"},{"lineNumber":208,"author":{"gitId":"xzzz3"},"content":"                return false;","lastModifiedDate":"2022-03-28"},{"lineNumber":209,"author":{"gitId":"xzzz3"},"content":"            }","lastModifiedDate":"2022-03-28"},{"lineNumber":210,"author":{"gitId":"xzzz3"},"content":"","lastModifiedDate":"2022-03-28"},{"lineNumber":211,"author":{"gitId":"xzzz3"},"content":"            // state check","lastModifiedDate":"2022-03-28"},{"lineNumber":212,"author":{"gitId":"xzzz3"},"content":"            EditOrderCommand.EditOrderDescriptor e \u003d (EditOrderCommand.EditOrderDescriptor) other;","lastModifiedDate":"2022-03-28"},{"lineNumber":213,"author":{"gitId":"xzzz3"},"content":"","lastModifiedDate":"2022-03-28"},{"lineNumber":214,"author":{"gitId":"xzzz3"},"content":"            return getCustomerPhone().equals(e.getCustomerPhone())","lastModifiedDate":"2022-03-28"},{"lineNumber":215,"author":{"gitId":"xzzz3"},"content":"                    \u0026\u0026 getDishes().equals(e.getDishes());","lastModifiedDate":"2022-03-28"},{"lineNumber":216,"author":{"gitId":"xzzz3"},"content":"        }","lastModifiedDate":"2022-03-28"},{"lineNumber":217,"author":{"gitId":"xzzz3"},"content":"    }","lastModifiedDate":"2022-03-28"},{"lineNumber":218,"author":{"gitId":"xzzz3"},"content":"}","lastModifiedDate":"2022-03-28"}],"authorContributionMap":{"xzzz3":216,"jaegarpoon":2}},{"path":"src/main/java/seedu/address/logic/commands/EditOrderStatusCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"xzzz3"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2022-03-11"},{"lineNumber":2,"author":{"gitId":"xzzz3"},"content":"","lastModifiedDate":"2022-03-11"},{"lineNumber":3,"author":{"gitId":"xzzz3"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2022-03-12"},{"lineNumber":4,"author":{"gitId":"xzzz3"},"content":"import static seedu.address.commons.core.Messages.MESSAGE_DRIVER_BUSY;","lastModifiedDate":"2022-03-29"},{"lineNumber":5,"author":{"gitId":"xzzz3"},"content":"import static seedu.address.commons.core.Messages.MESSAGE_INVALID_ORDER_STATUS;","lastModifiedDate":"2022-03-28"},{"lineNumber":6,"author":{"gitId":"xzzz3"},"content":"import static seedu.address.commons.util.CollectionUtil.requireAllNonNull;","lastModifiedDate":"2022-03-12"},{"lineNumber":7,"author":{"gitId":"xzzz3"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_STATUS;","lastModifiedDate":"2022-03-12"},{"lineNumber":8,"author":{"gitId":"xzzz3"},"content":"import static seedu.address.model.Model.PREDICATE_SHOW_ALL_DRIVERS;","lastModifiedDate":"2022-03-29"},{"lineNumber":9,"author":{"gitId":"xzzz3"},"content":"import static seedu.address.model.Model.PREDICATE_SHOW_ALL_ORDERS;","lastModifiedDate":"2022-03-29"},{"lineNumber":10,"author":{"gitId":"xzzz3"},"content":"","lastModifiedDate":"2022-03-12"},{"lineNumber":11,"author":{"gitId":"xzzz3"},"content":"import java.util.List;","lastModifiedDate":"2022-03-12"},{"lineNumber":12,"author":{"gitId":"xzzz3"},"content":"","lastModifiedDate":"2022-03-12"},{"lineNumber":13,"author":{"gitId":"xzzz3"},"content":"import seedu.address.commons.core.Messages;","lastModifiedDate":"2022-03-11"},{"lineNumber":14,"author":{"gitId":"xzzz3"},"content":"import seedu.address.commons.core.index.Index;","lastModifiedDate":"2022-03-11"},{"lineNumber":15,"author":{"gitId":"xzzz3"},"content":"import seedu.address.logic.commands.exceptions.CommandException;","lastModifiedDate":"2022-03-11"},{"lineNumber":16,"author":{"gitId":"xzzz3"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2022-03-11"},{"lineNumber":17,"author":{"gitId":"xzzz3"},"content":"import seedu.address.model.driver.DriverStatus;","lastModifiedDate":"2022-03-29"},{"lineNumber":18,"author":{"gitId":"xzzz3"},"content":"import seedu.address.model.order.Order;","lastModifiedDate":"2022-03-11"},{"lineNumber":19,"author":{"gitId":"xzzz3"},"content":"import seedu.address.model.order.OrderStatus;","lastModifiedDate":"2022-03-29"},{"lineNumber":20,"author":{"gitId":"xzzz3"},"content":"import seedu.address.model.order.exception.NoSuchOrderStatusException;","lastModifiedDate":"2022-03-28"},{"lineNumber":21,"author":{"gitId":"xzzz3"},"content":"","lastModifiedDate":"2022-03-11"},{"lineNumber":22,"author":{"gitId":"xzzz3"},"content":"public class EditOrderStatusCommand extends Command {","lastModifiedDate":"2022-03-11"},{"lineNumber":23,"author":{"gitId":"xzzz3"},"content":"","lastModifiedDate":"2022-03-11"},{"lineNumber":24,"author":{"gitId":"xzzz3"},"content":"    public static final String COMMAND_WORD \u003d \"mark\";","lastModifiedDate":"2022-03-11"},{"lineNumber":25,"author":{"gitId":"xzzz3"},"content":"","lastModifiedDate":"2022-03-11"},{"lineNumber":26,"author":{"gitId":"xzzz3"},"content":"    public static final String MESSAGE_USAGE \u003d COMMAND_WORD","lastModifiedDate":"2022-03-11"},{"lineNumber":27,"author":{"gitId":"xzzz3"},"content":"            + \": Edits an order status.\\n\"","lastModifiedDate":"2022-03-11"},{"lineNumber":28,"author":{"gitId":"xzzz3"},"content":"            + \"Parameters: \"","lastModifiedDate":"2022-03-11"},{"lineNumber":29,"author":{"gitId":"xzzz3"},"content":"            + \"INDEX \" + PREFIX_STATUS + \"STATUS\\n\"","lastModifiedDate":"2022-03-11"},{"lineNumber":30,"author":{"gitId":"xzzz3"},"content":"            + \"Example: \" + COMMAND_WORD","lastModifiedDate":"2022-03-11"},{"lineNumber":31,"author":{"gitId":"xzzz3"},"content":"            + \" 1 \" + PREFIX_STATUS + \"delivered\";","lastModifiedDate":"2022-03-28"},{"lineNumber":32,"author":{"gitId":"xzzz3"},"content":"","lastModifiedDate":"2022-03-11"},{"lineNumber":33,"author":{"gitId":"xzzz3"},"content":"    public static final String MESSAGE_SUCCESS \u003d \"Order edited: %1$s\";","lastModifiedDate":"2022-03-29"},{"lineNumber":34,"author":{"gitId":"xzzz3"},"content":"    public static final String MESSAGE_DUPLICATE_ORDER \u003d \"This order already exists in the address book.\";","lastModifiedDate":"2022-03-11"},{"lineNumber":35,"author":{"gitId":"xzzz3"},"content":"","lastModifiedDate":"2022-03-11"},{"lineNumber":36,"author":{"gitId":"xzzz3"},"content":"","lastModifiedDate":"2022-03-11"},{"lineNumber":37,"author":{"gitId":"xzzz3"},"content":"    private final Index index;","lastModifiedDate":"2022-03-11"},{"lineNumber":38,"author":{"gitId":"xzzz3"},"content":"    private final String status;","lastModifiedDate":"2022-03-11"},{"lineNumber":39,"author":{"gitId":"xzzz3"},"content":"","lastModifiedDate":"2022-03-11"},{"lineNumber":40,"author":{"gitId":"xzzz3"},"content":"    /**","lastModifiedDate":"2022-03-11"},{"lineNumber":41,"author":{"gitId":"xzzz3"},"content":"     * Creates an AddCommand to add the specified {@code Order}","lastModifiedDate":"2022-03-11"},{"lineNumber":42,"author":{"gitId":"xzzz3"},"content":"     */","lastModifiedDate":"2022-03-11"},{"lineNumber":43,"author":{"gitId":"xzzz3"},"content":"    public EditOrderStatusCommand(Index index, String status) {","lastModifiedDate":"2022-03-11"},{"lineNumber":44,"author":{"gitId":"xzzz3"},"content":"        requireAllNonNull(index, status);","lastModifiedDate":"2022-03-11"},{"lineNumber":45,"author":{"gitId":"xzzz3"},"content":"        this.index \u003d index;","lastModifiedDate":"2022-03-11"},{"lineNumber":46,"author":{"gitId":"xzzz3"},"content":"        this.status \u003d status;","lastModifiedDate":"2022-03-11"},{"lineNumber":47,"author":{"gitId":"xzzz3"},"content":"    }","lastModifiedDate":"2022-03-11"},{"lineNumber":48,"author":{"gitId":"xzzz3"},"content":"","lastModifiedDate":"2022-03-11"},{"lineNumber":49,"author":{"gitId":"xzzz3"},"content":"    @Override","lastModifiedDate":"2022-03-11"},{"lineNumber":50,"author":{"gitId":"xzzz3"},"content":"    public CommandResult execute(Model model) throws CommandException {","lastModifiedDate":"2022-03-11"},{"lineNumber":51,"author":{"gitId":"xzzz3"},"content":"        requireNonNull(model);","lastModifiedDate":"2022-03-11"},{"lineNumber":52,"author":{"gitId":"xzzz3"},"content":"        List\u003cOrder\u003e lastShownList \u003d model.getFilteredOrderList();","lastModifiedDate":"2022-03-11"},{"lineNumber":53,"author":{"gitId":"xzzz3"},"content":"","lastModifiedDate":"2022-03-11"},{"lineNumber":54,"author":{"gitId":"xzzz3"},"content":"        if (index.getZeroBased() \u003e\u003d lastShownList.size()) {","lastModifiedDate":"2022-03-11"},{"lineNumber":55,"author":{"gitId":"xzzz3"},"content":"            throw new CommandException(Messages.MESSAGE_INVALID_ORDER_DISPLAYED_INDEX);","lastModifiedDate":"2022-03-11"},{"lineNumber":56,"author":{"gitId":"xzzz3"},"content":"        }","lastModifiedDate":"2022-03-11"},{"lineNumber":57,"author":{"gitId":"xzzz3"},"content":"","lastModifiedDate":"2022-03-11"},{"lineNumber":58,"author":{"gitId":"xzzz3"},"content":"        Order orderToEdit \u003d lastShownList.get(index.getZeroBased());","lastModifiedDate":"2022-03-11"},{"lineNumber":59,"author":{"gitId":"xzzz3"},"content":"        OrderStatus oldStatus \u003d orderToEdit.getStatus();","lastModifiedDate":"2022-03-29"},{"lineNumber":60,"author":{"gitId":"xzzz3"},"content":"        try {","lastModifiedDate":"2022-03-28"},{"lineNumber":61,"author":{"gitId":"xzzz3"},"content":"            orderToEdit.updateStatus(status);","lastModifiedDate":"2022-03-28"},{"lineNumber":62,"author":{"gitId":"xzzz3"},"content":"        } catch (NoSuchOrderStatusException ex) {","lastModifiedDate":"2022-03-28"},{"lineNumber":63,"author":{"gitId":"xzzz3"},"content":"            throw new CommandException(MESSAGE_INVALID_ORDER_STATUS);","lastModifiedDate":"2022-03-28"},{"lineNumber":64,"author":{"gitId":"xzzz3"},"content":"        }","lastModifiedDate":"2022-03-28"},{"lineNumber":65,"author":{"gitId":"xzzz3"},"content":"","lastModifiedDate":"2022-03-28"},{"lineNumber":66,"author":{"gitId":"xzzz3"},"content":"        Order editedOrder \u003d orderToEdit.updateStatus(status);","lastModifiedDate":"2022-03-11"},{"lineNumber":67,"author":{"gitId":"xzzz3"},"content":"","lastModifiedDate":"2022-03-11"},{"lineNumber":68,"author":{"gitId":"xzzz3"},"content":"        if (!editedOrder.equals(orderToEdit) \u0026\u0026 model.hasOrder(editedOrder)) {","lastModifiedDate":"2022-03-11"},{"lineNumber":69,"author":{"gitId":"xzzz3"},"content":"            throw new CommandException(MESSAGE_DUPLICATE_ORDER);","lastModifiedDate":"2022-03-11"},{"lineNumber":70,"author":{"gitId":"xzzz3"},"content":"        }","lastModifiedDate":"2022-03-11"},{"lineNumber":71,"author":{"gitId":"xzzz3"},"content":"","lastModifiedDate":"2022-03-11"},{"lineNumber":72,"author":{"gitId":"xzzz3"},"content":"        model.updateFilteredOrderList(PREDICATE_SHOW_ALL_ORDERS);","lastModifiedDate":"2022-03-29"},{"lineNumber":73,"author":{"gitId":"xzzz3"},"content":"","lastModifiedDate":"2022-03-29"},{"lineNumber":74,"author":{"gitId":"xzzz3"},"content":"        System.out.println(status);","lastModifiedDate":"2022-03-29"},{"lineNumber":75,"author":{"gitId":"xzzz3"},"content":"        System.out.println(oldStatus);","lastModifiedDate":"2022-03-29"},{"lineNumber":76,"author":{"gitId":"xzzz3"},"content":"        // if editing an order from in progress to delivered or cancelled, the driver will be set to free","lastModifiedDate":"2022-03-29"},{"lineNumber":77,"author":{"gitId":"xzzz3"},"content":"        if ((status.equalsIgnoreCase(\"delivered\") || status.equalsIgnoreCase(\"cancelled\"))","lastModifiedDate":"2022-03-29"},{"lineNumber":78,"author":{"gitId":"xzzz3"},"content":"                \u0026\u0026 oldStatus.toString().equalsIgnoreCase(\"in_progress\")) {","lastModifiedDate":"2022-03-29"},{"lineNumber":79,"author":{"gitId":"xzzz3"},"content":"            editedOrder.getDriver().setStatus(DriverStatus.FREE);","lastModifiedDate":"2022-03-29"},{"lineNumber":80,"author":{"gitId":"xzzz3"},"content":"            model.setDriver(editedOrder.getDriver(), orderToEdit.getDriver());","lastModifiedDate":"2022-03-29"},{"lineNumber":81,"author":{"gitId":"xzzz3"},"content":"        }","lastModifiedDate":"2022-03-29"},{"lineNumber":82,"author":{"gitId":"xzzz3"},"content":"","lastModifiedDate":"2022-03-29"},{"lineNumber":83,"author":{"gitId":"xzzz3"},"content":"        // if editing an order from delivered or cancelled to in progress, the driver will be set to busy","lastModifiedDate":"2022-03-29"},{"lineNumber":84,"author":{"gitId":"xzzz3"},"content":"        if (status.equalsIgnoreCase(\"in progress\")","lastModifiedDate":"2022-03-29"},{"lineNumber":85,"author":{"gitId":"xzzz3"},"content":"                \u0026\u0026 (oldStatus.toString().equalsIgnoreCase(\"delivered\")","lastModifiedDate":"2022-03-29"},{"lineNumber":86,"author":{"gitId":"xzzz3"},"content":"                || oldStatus.toString().equalsIgnoreCase(\"cancelled\"))) {","lastModifiedDate":"2022-03-29"},{"lineNumber":87,"author":{"gitId":"xzzz3"},"content":"            if (orderToEdit.getDriver().isBusy()) {","lastModifiedDate":"2022-03-29"},{"lineNumber":88,"author":{"gitId":"xzzz3"},"content":"                editedOrder \u003d editedOrder.updateStatus(oldStatus.name());","lastModifiedDate":"2022-03-29"},{"lineNumber":89,"author":{"gitId":"xzzz3"},"content":"                throw new CommandException(MESSAGE_DRIVER_BUSY);","lastModifiedDate":"2022-03-29"},{"lineNumber":90,"author":{"gitId":"xzzz3"},"content":"            }","lastModifiedDate":"2022-03-29"},{"lineNumber":91,"author":{"gitId":"xzzz3"},"content":"            editedOrder.getDriver().setStatus(DriverStatus.BUSY);","lastModifiedDate":"2022-03-29"},{"lineNumber":92,"author":{"gitId":"xzzz3"},"content":"            model.setDriver(editedOrder.getDriver(), orderToEdit.getDriver());","lastModifiedDate":"2022-03-29"},{"lineNumber":93,"author":{"gitId":"xzzz3"},"content":"        }","lastModifiedDate":"2022-03-29"},{"lineNumber":94,"author":{"gitId":"xzzz3"},"content":"","lastModifiedDate":"2022-03-29"},{"lineNumber":95,"author":{"gitId":"xzzz3"},"content":"        model.updateFilteredDriverList(PREDICATE_SHOW_ALL_DRIVERS);","lastModifiedDate":"2022-03-29"},{"lineNumber":96,"author":{"gitId":"xzzz3"},"content":"        return new CommandResult(String.format(MESSAGE_SUCCESS, editedOrder),","lastModifiedDate":"2022-03-14"},{"lineNumber":97,"author":{"gitId":"xzzz3"},"content":"                false, false, false, false, true);","lastModifiedDate":"2022-03-14"},{"lineNumber":98,"author":{"gitId":"xzzz3"},"content":"    }","lastModifiedDate":"2022-03-11"},{"lineNumber":99,"author":{"gitId":"xzzz3"},"content":"}","lastModifiedDate":"2022-03-11"}],"authorContributionMap":{"xzzz3":99}},{"path":"src/main/java/seedu/address/logic/commands/ExitCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2016-09-22"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2018-08-08"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":5,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-09-22"},{"lineNumber":6,"author":{"gitId":"-"},"content":" * Terminates the program.","lastModifiedDate":"2016-09-22"},{"lineNumber":7,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-09-22"},{"lineNumber":8,"author":{"gitId":"-"},"content":"public class ExitCommand extends Command {","lastModifiedDate":"2016-09-22"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":10,"author":{"gitId":"-"},"content":"    public static final String COMMAND_WORD \u003d \"exit\";","lastModifiedDate":"2016-09-22"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":12,"author":{"gitId":"zxgoh"},"content":"    public static final String MESSAGE_EXIT_ACKNOWLEDGEMENT \u003d \"Exiting AddressCustomer Book as requested ...\";","lastModifiedDate":"2022-03-15"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":14,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-22"},{"lineNumber":15,"author":{"gitId":"-"},"content":"    public CommandResult execute(Model model) {","lastModifiedDate":"2019-01-25"},{"lineNumber":16,"author":{"gitId":"-"},"content":"        return new CommandResult(MESSAGE_EXIT_ACKNOWLEDGEMENT, false, true);","lastModifiedDate":"2018-12-09"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-22"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":19,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-09-22"}],"authorContributionMap":{"-":18,"zxgoh":1}},{"path":"src/main/java/seedu/address/logic/commands/FindCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2016-09-22"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2018-08-08"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.Messages;","lastModifiedDate":"2018-04-01"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2018-08-08"},{"lineNumber":7,"author":{"gitId":"zxgoh"},"content":"import seedu.address.model.customer.NameCustomerContainsKeywordsPredicate;","lastModifiedDate":"2022-03-15"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":9,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-09-22"},{"lineNumber":10,"author":{"gitId":"zxgoh"},"content":" * Finds and lists all customers in address book whose name contains any of the argument keywords.","lastModifiedDate":"2022-03-14"},{"lineNumber":11,"author":{"gitId":"-"},"content":" * Keyword matching is case insensitive.","lastModifiedDate":"2018-04-01"},{"lineNumber":12,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-09-22"},{"lineNumber":13,"author":{"gitId":"-"},"content":"public class FindCommand extends Command {","lastModifiedDate":"2016-09-22"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":15,"author":{"gitId":"-"},"content":"    public static final String COMMAND_WORD \u003d \"find\";","lastModifiedDate":"2016-09-22"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":17,"author":{"gitId":"zxgoh"},"content":"    public static final String MESSAGE_USAGE \u003d COMMAND_WORD + \": Finds all customers whose names contain any of \"","lastModifiedDate":"2022-03-14"},{"lineNumber":18,"author":{"gitId":"-"},"content":"            + \"the specified keywords (case-insensitive) and displays them as a list with index numbers.\\n\"","lastModifiedDate":"2018-04-01"},{"lineNumber":19,"author":{"gitId":"-"},"content":"            + \"Parameters: KEYWORD [MORE_KEYWORDS]...\\n\"","lastModifiedDate":"2016-09-22"},{"lineNumber":20,"author":{"gitId":"-"},"content":"            + \"Example: \" + COMMAND_WORD + \" alice bob charlie\";","lastModifiedDate":"2016-09-22"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":22,"author":{"gitId":"zxgoh"},"content":"    private final NameCustomerContainsKeywordsPredicate predicate;","lastModifiedDate":"2022-03-15"},{"lineNumber":23,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":24,"author":{"gitId":"zxgoh"},"content":"    public FindCommand(NameCustomerContainsKeywordsPredicate predicate) {","lastModifiedDate":"2022-03-15"},{"lineNumber":25,"author":{"gitId":"-"},"content":"        this.predicate \u003d predicate;","lastModifiedDate":"2017-06-12"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-22"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-22"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    public CommandResult execute(Model model) {","lastModifiedDate":"2019-01-25"},{"lineNumber":30,"author":{"gitId":"-"},"content":"        requireNonNull(model);","lastModifiedDate":"2018-08-08"},{"lineNumber":31,"author":{"gitId":"zxgoh"},"content":"        model.updateFilteredCustomerList(predicate);","lastModifiedDate":"2022-03-14"},{"lineNumber":32,"author":{"gitId":"-"},"content":"        return new CommandResult(","lastModifiedDate":"2018-04-01"},{"lineNumber":33,"author":{"gitId":"zxgoh"},"content":"                String.format(Messages.MESSAGE_CUSTOMERS_LISTED_OVERVIEW, model.getFilteredCustomerList().size()));","lastModifiedDate":"2022-03-14"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-22"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2017-06-27"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2017-06-27"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        return other \u003d\u003d this // short circuit if same object","lastModifiedDate":"2017-06-27"},{"lineNumber":39,"author":{"gitId":"-"},"content":"                || (other instanceof FindCommand // instanceof handles nulls","lastModifiedDate":"2017-06-27"},{"lineNumber":40,"author":{"gitId":"-"},"content":"                \u0026\u0026 predicate.equals(((FindCommand) other).predicate)); // state check","lastModifiedDate":"2018-08-14"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-27"},{"lineNumber":42,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-09-22"}],"authorContributionMap":{"-":35,"zxgoh":7}},{"path":"src/main/java/seedu/address/logic/commands/FindOrderCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"xzzz3"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2022-03-11"},{"lineNumber":2,"author":{"gitId":"xzzz3"},"content":"","lastModifiedDate":"2022-03-11"},{"lineNumber":3,"author":{"gitId":"xzzz3"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2022-03-11"},{"lineNumber":4,"author":{"gitId":"xzzz3"},"content":"import static seedu.address.commons.core.Messages.MESSAGE_NO_ORDERS_FOUND;","lastModifiedDate":"2022-03-29"},{"lineNumber":5,"author":{"gitId":"xzzz3"},"content":"","lastModifiedDate":"2022-03-11"},{"lineNumber":6,"author":{"gitId":"xzzz3"},"content":"import seedu.address.commons.core.Messages;","lastModifiedDate":"2022-03-11"},{"lineNumber":7,"author":{"gitId":"xzzz3"},"content":"import seedu.address.logic.commands.exceptions.CommandException;","lastModifiedDate":"2022-03-29"},{"lineNumber":8,"author":{"gitId":"xzzz3"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2022-03-11"},{"lineNumber":9,"author":{"gitId":"xzzz3"},"content":"import seedu.address.model.order.OrderContainsKeywordsPredicate;","lastModifiedDate":"2022-03-11"},{"lineNumber":10,"author":{"gitId":"xzzz3"},"content":"","lastModifiedDate":"2022-03-11"},{"lineNumber":11,"author":{"gitId":"xzzz3"},"content":"/**","lastModifiedDate":"2022-03-11"},{"lineNumber":12,"author":{"gitId":"xzzz3"},"content":" * Finds and lists all orders in address book who contains the phone number.","lastModifiedDate":"2022-03-11"},{"lineNumber":13,"author":{"gitId":"xzzz3"},"content":" */","lastModifiedDate":"2022-03-11"},{"lineNumber":14,"author":{"gitId":"xzzz3"},"content":"public class FindOrderCommand extends Command {","lastModifiedDate":"2022-03-11"},{"lineNumber":15,"author":{"gitId":"xzzz3"},"content":"","lastModifiedDate":"2022-03-11"},{"lineNumber":16,"author":{"gitId":"xzzz3"},"content":"    public static final String COMMAND_WORD \u003d \"findorder\";","lastModifiedDate":"2022-03-11"},{"lineNumber":17,"author":{"gitId":"xzzz3"},"content":"","lastModifiedDate":"2022-03-11"},{"lineNumber":18,"author":{"gitId":"xzzz3"},"content":"    public static final String MESSAGE_USAGE \u003d COMMAND_WORD + \": Finds all orders whose names contain any of \"","lastModifiedDate":"2022-03-11"},{"lineNumber":19,"author":{"gitId":"xzzz3"},"content":"            + \"the specified phone number and displays them as a list with index numbers.\\n\"","lastModifiedDate":"2022-03-11"},{"lineNumber":20,"author":{"gitId":"xzzz3"},"content":"            + \"Parameters: PHONENUMBER \\n\"","lastModifiedDate":"2022-03-11"},{"lineNumber":21,"author":{"gitId":"xzzz3"},"content":"            + \"Example: \" + COMMAND_WORD + \" 81234567\";","lastModifiedDate":"2022-03-11"},{"lineNumber":22,"author":{"gitId":"xzzz3"},"content":"","lastModifiedDate":"2022-03-11"},{"lineNumber":23,"author":{"gitId":"xzzz3"},"content":"    public final OrderContainsKeywordsPredicate predicate;","lastModifiedDate":"2022-03-11"},{"lineNumber":24,"author":{"gitId":"xzzz3"},"content":"","lastModifiedDate":"2022-03-11"},{"lineNumber":25,"author":{"gitId":"xzzz3"},"content":"    public FindOrderCommand(OrderContainsKeywordsPredicate predicate) {","lastModifiedDate":"2022-03-11"},{"lineNumber":26,"author":{"gitId":"xzzz3"},"content":"        this.predicate \u003d predicate;","lastModifiedDate":"2022-03-11"},{"lineNumber":27,"author":{"gitId":"xzzz3"},"content":"    }","lastModifiedDate":"2022-03-11"},{"lineNumber":28,"author":{"gitId":"xzzz3"},"content":"","lastModifiedDate":"2022-03-11"},{"lineNumber":29,"author":{"gitId":"xzzz3"},"content":"    @Override","lastModifiedDate":"2022-03-11"},{"lineNumber":30,"author":{"gitId":"xzzz3"},"content":"    public CommandResult execute(Model model) throws CommandException {","lastModifiedDate":"2022-03-29"},{"lineNumber":31,"author":{"gitId":"xzzz3"},"content":"        requireNonNull(model);","lastModifiedDate":"2022-03-11"},{"lineNumber":32,"author":{"gitId":"xzzz3"},"content":"        model.updateFilteredOrderList(predicate);","lastModifiedDate":"2022-03-11"},{"lineNumber":33,"author":{"gitId":"xzzz3"},"content":"        if (model.getFilteredOrderList().isEmpty()) {","lastModifiedDate":"2022-03-29"},{"lineNumber":34,"author":{"gitId":"xzzz3"},"content":"            throw new CommandException(MESSAGE_NO_ORDERS_FOUND);","lastModifiedDate":"2022-03-29"},{"lineNumber":35,"author":{"gitId":"xzzz3"},"content":"        }","lastModifiedDate":"2022-03-29"},{"lineNumber":36,"author":{"gitId":"xzzz3"},"content":"        return new CommandResult(","lastModifiedDate":"2022-03-11"},{"lineNumber":37,"author":{"gitId":"xzzz3"},"content":"                String.format(Messages.MESSAGE_ORDERS_LISTED_OVERVIEW, model.getFilteredOrderList().size()),","lastModifiedDate":"2022-03-14"},{"lineNumber":38,"author":{"gitId":"xzzz3"},"content":"                false, false, false, false, true);","lastModifiedDate":"2022-03-14"},{"lineNumber":39,"author":{"gitId":"xzzz3"},"content":"    }","lastModifiedDate":"2022-03-11"},{"lineNumber":40,"author":{"gitId":"xzzz3"},"content":"","lastModifiedDate":"2022-03-11"},{"lineNumber":41,"author":{"gitId":"xzzz3"},"content":"    @Override","lastModifiedDate":"2022-03-11"},{"lineNumber":42,"author":{"gitId":"xzzz3"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2022-03-11"},{"lineNumber":43,"author":{"gitId":"xzzz3"},"content":"        return other \u003d\u003d this","lastModifiedDate":"2022-03-11"},{"lineNumber":44,"author":{"gitId":"xzzz3"},"content":"                || (other instanceof FindCommand)","lastModifiedDate":"2022-03-11"},{"lineNumber":45,"author":{"gitId":"xzzz3"},"content":"                \u0026\u0026 predicate.equals(((FindOrderCommand) other).predicate);","lastModifiedDate":"2022-03-11"},{"lineNumber":46,"author":{"gitId":"xzzz3"},"content":"    }","lastModifiedDate":"2022-03-11"},{"lineNumber":47,"author":{"gitId":"xzzz3"},"content":"}","lastModifiedDate":"2022-03-11"}],"authorContributionMap":{"xzzz3":47}},{"path":"src/main/java/seedu/address/logic/commands/ListCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2016-09-22"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2018-08-08"},{"lineNumber":4,"author":{"gitId":"zxgoh"},"content":"import static seedu.address.model.Model.PREDICATE_SHOW_ALL_CUSTOMERS;","lastModifiedDate":"2022-03-14"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2018-08-08"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":8,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-24"},{"lineNumber":9,"author":{"gitId":"zxgoh"},"content":" * Lists all customers in the address book to the user.","lastModifiedDate":"2022-03-14"},{"lineNumber":10,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-24"},{"lineNumber":11,"author":{"gitId":"-"},"content":"public class ListCommand extends Command {","lastModifiedDate":"2016-09-21"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    public static final String COMMAND_WORD \u003d \"list\";","lastModifiedDate":"2016-08-24"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":15,"author":{"gitId":"zxgoh"},"content":"    public static final String MESSAGE_SUCCESS \u003d \"Listed all customers\";","lastModifiedDate":"2022-03-14"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-24"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    public CommandResult execute(Model model) {","lastModifiedDate":"2019-01-25"},{"lineNumber":20,"author":{"gitId":"-"},"content":"        requireNonNull(model);","lastModifiedDate":"2018-08-08"},{"lineNumber":21,"author":{"gitId":"zxgoh"},"content":"        model.updateFilteredCustomerList(PREDICATE_SHOW_ALL_CUSTOMERS);","lastModifiedDate":"2022-03-14"},{"lineNumber":22,"author":{"gitId":"-"},"content":"        return new CommandResult(MESSAGE_SUCCESS);","lastModifiedDate":"2016-09-22"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":24,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-24"}],"authorContributionMap":{"-":20,"zxgoh":4}},{"path":"src/main/java/seedu/address/logic/commands/ListDishCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"jaegarpoon"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2022-03-10"},{"lineNumber":2,"author":{"gitId":"jaegarpoon"},"content":"","lastModifiedDate":"2022-03-10"},{"lineNumber":3,"author":{"gitId":"jaegarpoon"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2022-03-10"},{"lineNumber":4,"author":{"gitId":"jaegarpoon"},"content":"import static seedu.address.model.Model.PREDICATE_SHOW_ALL_DISHES;","lastModifiedDate":"2022-03-12"},{"lineNumber":5,"author":{"gitId":"jaegarpoon"},"content":"","lastModifiedDate":"2022-03-10"},{"lineNumber":6,"author":{"gitId":"jaegarpoon"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2022-03-10"},{"lineNumber":7,"author":{"gitId":"jaegarpoon"},"content":"","lastModifiedDate":"2022-03-10"},{"lineNumber":8,"author":{"gitId":"jaegarpoon"},"content":"/**","lastModifiedDate":"2022-03-10"},{"lineNumber":9,"author":{"gitId":"jaegarpoon"},"content":" * Lists all persons in the address book to the user.","lastModifiedDate":"2022-03-10"},{"lineNumber":10,"author":{"gitId":"jaegarpoon"},"content":" */","lastModifiedDate":"2022-03-10"},{"lineNumber":11,"author":{"gitId":"jaegarpoon"},"content":"public class ListDishCommand extends Command {","lastModifiedDate":"2022-03-10"},{"lineNumber":12,"author":{"gitId":"jaegarpoon"},"content":"","lastModifiedDate":"2022-03-10"},{"lineNumber":13,"author":{"gitId":"jaegarpoon"},"content":"    public static final String COMMAND_WORD \u003d \"listdish\";","lastModifiedDate":"2022-03-10"},{"lineNumber":14,"author":{"gitId":"jaegarpoon"},"content":"","lastModifiedDate":"2022-03-10"},{"lineNumber":15,"author":{"gitId":"jaegarpoon"},"content":"    public static final String MESSAGE_SUCCESS \u003d \"Listed all dishes\";","lastModifiedDate":"2022-03-10"},{"lineNumber":16,"author":{"gitId":"jaegarpoon"},"content":"","lastModifiedDate":"2022-03-10"},{"lineNumber":17,"author":{"gitId":"jaegarpoon"},"content":"","lastModifiedDate":"2022-03-10"},{"lineNumber":18,"author":{"gitId":"jaegarpoon"},"content":"    @Override","lastModifiedDate":"2022-03-10"},{"lineNumber":19,"author":{"gitId":"jaegarpoon"},"content":"    public CommandResult execute(Model model) {","lastModifiedDate":"2022-03-10"},{"lineNumber":20,"author":{"gitId":"jaegarpoon"},"content":"        requireNonNull(model);","lastModifiedDate":"2022-03-10"},{"lineNumber":21,"author":{"gitId":"jaegarpoon"},"content":"        model.updateFilteredDishList(PREDICATE_SHOW_ALL_DISHES);","lastModifiedDate":"2022-03-12"},{"lineNumber":22,"author":{"gitId":"jaegarpoon"},"content":"        return new CommandResult(MESSAGE_SUCCESS, false, false, true, false, false);","lastModifiedDate":"2022-03-12"},{"lineNumber":23,"author":{"gitId":"jaegarpoon"},"content":"    }","lastModifiedDate":"2022-03-10"},{"lineNumber":24,"author":{"gitId":"jaegarpoon"},"content":"}","lastModifiedDate":"2022-03-10"}],"authorContributionMap":{"jaegarpoon":24}},{"path":"src/main/java/seedu/address/logic/commands/ListDriverCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"hieunm1821"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2022-03-10"},{"lineNumber":2,"author":{"gitId":"hieunm1821"},"content":"","lastModifiedDate":"2022-03-10"},{"lineNumber":3,"author":{"gitId":"hieunm1821"},"content":"","lastModifiedDate":"2022-03-10"},{"lineNumber":4,"author":{"gitId":"hieunm1821"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2022-03-10"},{"lineNumber":5,"author":{"gitId":"hieunm1821"},"content":"","lastModifiedDate":"2022-03-10"},{"lineNumber":6,"author":{"gitId":"hieunm1821"},"content":"import seedu.address.commons.core.Messages;","lastModifiedDate":"2022-03-10"},{"lineNumber":7,"author":{"gitId":"hieunm1821"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2022-03-10"},{"lineNumber":8,"author":{"gitId":"hieunm1821"},"content":"import seedu.address.model.driver.StatusContainsKeywordsPredicate;","lastModifiedDate":"2022-03-10"},{"lineNumber":9,"author":{"gitId":"hieunm1821"},"content":"","lastModifiedDate":"2022-03-10"},{"lineNumber":10,"author":{"gitId":"hieunm1821"},"content":"/**","lastModifiedDate":"2022-03-11"},{"lineNumber":11,"author":{"gitId":"hieunm1821"},"content":" * Finds and lists all drivers whose status contains any of the argument keywords.","lastModifiedDate":"2022-03-11"},{"lineNumber":12,"author":{"gitId":"hieunm1821"},"content":" */","lastModifiedDate":"2022-03-11"},{"lineNumber":13,"author":{"gitId":"hieunm1821"},"content":"public class ListDriverCommand extends Command {","lastModifiedDate":"2022-03-10"},{"lineNumber":14,"author":{"gitId":"hieunm1821"},"content":"    public static final String COMMAND_WORD \u003d \"listdriver\";","lastModifiedDate":"2022-03-10"},{"lineNumber":15,"author":{"gitId":"hieunm1821"},"content":"","lastModifiedDate":"2022-03-10"},{"lineNumber":16,"author":{"gitId":"hieunm1821"},"content":"    public static final String MESSAGE_USAGE \u003d COMMAND_WORD + \": Finds all free drivers who are not deliver any orders \"","lastModifiedDate":"2022-03-10"},{"lineNumber":17,"author":{"gitId":"hieunm1821"},"content":"            + \"now and displays them as a list with index numbers.\\n\"","lastModifiedDate":"2022-03-10"},{"lineNumber":18,"author":{"gitId":"hieunm1821"},"content":"            + \"The status of driver: FREE, BUSY, ABSENT.\\n\"","lastModifiedDate":"2022-03-31"},{"lineNumber":19,"author":{"gitId":"hieunm1821"},"content":"            + \"Parameters: STATUS...\\n\"","lastModifiedDate":"2022-03-31"},{"lineNumber":20,"author":{"gitId":"hieunm1821"},"content":"            + \"Example: \" + COMMAND_WORD + \" free\";","lastModifiedDate":"2022-03-10"},{"lineNumber":21,"author":{"gitId":"hieunm1821"},"content":"","lastModifiedDate":"2022-03-10"},{"lineNumber":22,"author":{"gitId":"hieunm1821"},"content":"    private final StatusContainsKeywordsPredicate predicate;","lastModifiedDate":"2022-03-10"},{"lineNumber":23,"author":{"gitId":"hieunm1821"},"content":"","lastModifiedDate":"2022-03-10"},{"lineNumber":24,"author":{"gitId":"hieunm1821"},"content":"    public ListDriverCommand(StatusContainsKeywordsPredicate predicate) {","lastModifiedDate":"2022-03-10"},{"lineNumber":25,"author":{"gitId":"hieunm1821"},"content":"        this.predicate \u003d predicate;","lastModifiedDate":"2022-03-10"},{"lineNumber":26,"author":{"gitId":"hieunm1821"},"content":"    }","lastModifiedDate":"2022-03-10"},{"lineNumber":27,"author":{"gitId":"hieunm1821"},"content":"","lastModifiedDate":"2022-03-10"},{"lineNumber":28,"author":{"gitId":"hieunm1821"},"content":"    @Override","lastModifiedDate":"2022-03-10"},{"lineNumber":29,"author":{"gitId":"hieunm1821"},"content":"    public CommandResult execute(Model model) {","lastModifiedDate":"2022-03-10"},{"lineNumber":30,"author":{"gitId":"hieunm1821"},"content":"        requireNonNull(model);","lastModifiedDate":"2022-03-10"},{"lineNumber":31,"author":{"gitId":"hieunm1821"},"content":"        if (predicate.getKeywords().get(0).equalsIgnoreCase(\"all\")) {","lastModifiedDate":"2022-03-27"},{"lineNumber":32,"author":{"gitId":"hieunm1821"},"content":"            model.updateFilteredDriverList(Model.PREDICATE_SHOW_ALL_DRIVERS);","lastModifiedDate":"2022-03-27"},{"lineNumber":33,"author":{"gitId":"hieunm1821"},"content":"        } else {","lastModifiedDate":"2022-03-27"},{"lineNumber":34,"author":{"gitId":"hieunm1821"},"content":"            model.updateFilteredDriverList(predicate);","lastModifiedDate":"2022-03-10"},{"lineNumber":35,"author":{"gitId":"hieunm1821"},"content":"        }","lastModifiedDate":"2022-03-27"},{"lineNumber":36,"author":{"gitId":"hieunm1821"},"content":"        return new CommandResult(","lastModifiedDate":"2022-03-10"},{"lineNumber":37,"author":{"gitId":"xzzz3"},"content":"                String.format(Messages.MESSAGE_DRIVERS_LISTED_OVERVIEW,","lastModifiedDate":"2022-03-29"},{"lineNumber":38,"author":{"gitId":"xzzz3"},"content":"                        model.getFilteredDriverList().size()), false,","lastModifiedDate":"2022-03-29"},{"lineNumber":39,"author":{"gitId":"hieunm1821"},"content":"                false, false, true, false);","lastModifiedDate":"2022-03-14"},{"lineNumber":40,"author":{"gitId":"hieunm1821"},"content":"    }","lastModifiedDate":"2022-03-10"},{"lineNumber":41,"author":{"gitId":"hieunm1821"},"content":"","lastModifiedDate":"2022-03-10"},{"lineNumber":42,"author":{"gitId":"hieunm1821"},"content":"    @Override","lastModifiedDate":"2022-03-10"},{"lineNumber":43,"author":{"gitId":"hieunm1821"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2022-03-10"},{"lineNumber":44,"author":{"gitId":"hieunm1821"},"content":"        return other \u003d\u003d this // short circuit if same object","lastModifiedDate":"2022-03-10"},{"lineNumber":45,"author":{"gitId":"hieunm1821"},"content":"                || (other instanceof ListDriverCommand // instanceof handles nulls","lastModifiedDate":"2022-03-10"},{"lineNumber":46,"author":{"gitId":"hieunm1821"},"content":"                \u0026\u0026 predicate.equals(((ListDriverCommand) other).predicate)); // state check","lastModifiedDate":"2022-03-10"},{"lineNumber":47,"author":{"gitId":"hieunm1821"},"content":"    }","lastModifiedDate":"2022-03-10"},{"lineNumber":48,"author":{"gitId":"hieunm1821"},"content":"}","lastModifiedDate":"2022-03-10"}],"authorContributionMap":{"hieunm1821":46,"xzzz3":2}},{"path":"src/main/java/seedu/address/logic/commands/ListOrderCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"jaegarpoon"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2022-03-29"},{"lineNumber":2,"author":{"gitId":"jaegarpoon"},"content":"","lastModifiedDate":"2022-03-29"},{"lineNumber":3,"author":{"gitId":"jaegarpoon"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2022-03-29"},{"lineNumber":4,"author":{"gitId":"jaegarpoon"},"content":"","lastModifiedDate":"2022-03-29"},{"lineNumber":5,"author":{"gitId":"jaegarpoon"},"content":"import seedu.address.commons.core.Messages;","lastModifiedDate":"2022-03-29"},{"lineNumber":6,"author":{"gitId":"jaegarpoon"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2022-03-29"},{"lineNumber":7,"author":{"gitId":"jaegarpoon"},"content":"import seedu.address.model.order.OrderStatusContainsKeywordsPredicate;","lastModifiedDate":"2022-03-29"},{"lineNumber":8,"author":{"gitId":"jaegarpoon"},"content":"","lastModifiedDate":"2022-03-29"},{"lineNumber":9,"author":{"gitId":"jaegarpoon"},"content":"/**","lastModifiedDate":"2022-03-29"},{"lineNumber":10,"author":{"gitId":"jaegarpoon"},"content":" * Finds and lists all orders whose status contains any of the argument keywords.","lastModifiedDate":"2022-03-29"},{"lineNumber":11,"author":{"gitId":"jaegarpoon"},"content":" */","lastModifiedDate":"2022-03-29"},{"lineNumber":12,"author":{"gitId":"jaegarpoon"},"content":"public class ListOrderCommand extends Command {","lastModifiedDate":"2022-03-29"},{"lineNumber":13,"author":{"gitId":"jaegarpoon"},"content":"    public static final String COMMAND_WORD \u003d \"listorder\";","lastModifiedDate":"2022-03-29"},{"lineNumber":14,"author":{"gitId":"jaegarpoon"},"content":"","lastModifiedDate":"2022-03-29"},{"lineNumber":15,"author":{"gitId":"jaegarpoon"},"content":"    public static final String MESSAGE_USAGE \u003d COMMAND_WORD + \": Finds all orders based on parameter listed \"","lastModifiedDate":"2022-03-29"},{"lineNumber":16,"author":{"gitId":"jaegarpoon"},"content":"            + \"and displays them as a list with index numbers.\\n\"","lastModifiedDate":"2022-03-29"},{"lineNumber":17,"author":{"gitId":"jaegarpoon"},"content":"            + \"Parameters: KEYWORD\\n\"","lastModifiedDate":"2022-03-29"},{"lineNumber":18,"author":{"gitId":"jaegarpoon"},"content":"            + \"where KEYWORD is one of \u0027all\u0027, \u0027in_progress\u0027 or \u0027in progress\u0027, \u0027delivered\u0027, \u0027cancelled\u0027 \"","lastModifiedDate":"2022-03-30"},{"lineNumber":19,"author":{"gitId":"jaegarpoon"},"content":"            + \"(not case-sensitive)\\n\"","lastModifiedDate":"2022-03-30"},{"lineNumber":20,"author":{"gitId":"jaegarpoon"},"content":"            + \"Example: \" + COMMAND_WORD + \" all\";","lastModifiedDate":"2022-03-29"},{"lineNumber":21,"author":{"gitId":"jaegarpoon"},"content":"","lastModifiedDate":"2022-03-29"},{"lineNumber":22,"author":{"gitId":"jaegarpoon"},"content":"    private final OrderStatusContainsKeywordsPredicate predicate;","lastModifiedDate":"2022-03-29"},{"lineNumber":23,"author":{"gitId":"jaegarpoon"},"content":"","lastModifiedDate":"2022-03-29"},{"lineNumber":24,"author":{"gitId":"jaegarpoon"},"content":"    public ListOrderCommand(OrderStatusContainsKeywordsPredicate predicate) {","lastModifiedDate":"2022-03-29"},{"lineNumber":25,"author":{"gitId":"jaegarpoon"},"content":"        this.predicate \u003d predicate;","lastModifiedDate":"2022-03-29"},{"lineNumber":26,"author":{"gitId":"jaegarpoon"},"content":"    }","lastModifiedDate":"2022-03-29"},{"lineNumber":27,"author":{"gitId":"jaegarpoon"},"content":"","lastModifiedDate":"2022-03-29"},{"lineNumber":28,"author":{"gitId":"jaegarpoon"},"content":"    @Override","lastModifiedDate":"2022-03-29"},{"lineNumber":29,"author":{"gitId":"jaegarpoon"},"content":"    public CommandResult execute(Model model) {","lastModifiedDate":"2022-03-29"},{"lineNumber":30,"author":{"gitId":"jaegarpoon"},"content":"        requireNonNull(model);","lastModifiedDate":"2022-03-29"},{"lineNumber":31,"author":{"gitId":"jaegarpoon"},"content":"        if (predicate.getKeywords().get(0).equalsIgnoreCase(\"all\")) {","lastModifiedDate":"2022-03-29"},{"lineNumber":32,"author":{"gitId":"jaegarpoon"},"content":"            model.updateFilteredOrderList(Model.PREDICATE_SHOW_ALL_ORDERS);","lastModifiedDate":"2022-03-29"},{"lineNumber":33,"author":{"gitId":"jaegarpoon"},"content":"        } else {","lastModifiedDate":"2022-03-29"},{"lineNumber":34,"author":{"gitId":"jaegarpoon"},"content":"            model.updateFilteredOrderList(predicate);","lastModifiedDate":"2022-03-29"},{"lineNumber":35,"author":{"gitId":"jaegarpoon"},"content":"        }","lastModifiedDate":"2022-03-29"},{"lineNumber":36,"author":{"gitId":"jaegarpoon"},"content":"        return new CommandResult(","lastModifiedDate":"2022-03-29"},{"lineNumber":37,"author":{"gitId":"jaegarpoon"},"content":"                String.format(Messages.MESSAGE_ORDERS_LISTED_OVERVIEW, model.getFilteredOrderList().size()), false,","lastModifiedDate":"2022-03-29"},{"lineNumber":38,"author":{"gitId":"jaegarpoon"},"content":"                false, false, false, true);","lastModifiedDate":"2022-03-29"},{"lineNumber":39,"author":{"gitId":"jaegarpoon"},"content":"    }","lastModifiedDate":"2022-03-29"},{"lineNumber":40,"author":{"gitId":"jaegarpoon"},"content":"","lastModifiedDate":"2022-03-29"},{"lineNumber":41,"author":{"gitId":"jaegarpoon"},"content":"    @Override","lastModifiedDate":"2022-03-29"},{"lineNumber":42,"author":{"gitId":"jaegarpoon"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2022-03-29"},{"lineNumber":43,"author":{"gitId":"jaegarpoon"},"content":"        return other \u003d\u003d this // short circuit if same object","lastModifiedDate":"2022-03-29"},{"lineNumber":44,"author":{"gitId":"jaegarpoon"},"content":"                || (other instanceof ListOrderCommand // instanceof handles nulls","lastModifiedDate":"2022-03-29"},{"lineNumber":45,"author":{"gitId":"jaegarpoon"},"content":"                \u0026\u0026 predicate.equals(((ListOrderCommand) other).predicate)); // state check","lastModifiedDate":"2022-03-29"},{"lineNumber":46,"author":{"gitId":"jaegarpoon"},"content":"    }","lastModifiedDate":"2022-03-29"},{"lineNumber":47,"author":{"gitId":"jaegarpoon"},"content":"}","lastModifiedDate":"2022-03-29"},{"lineNumber":48,"author":{"gitId":"jaegarpoon"},"content":"","lastModifiedDate":"2022-03-29"}],"authorContributionMap":{"jaegarpoon":48}},{"path":"src/main/java/seedu/address/logic/commands/RevenueCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"jaegarpoon"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2022-03-30"},{"lineNumber":2,"author":{"gitId":"jaegarpoon"},"content":"","lastModifiedDate":"2022-03-30"},{"lineNumber":3,"author":{"gitId":"jaegarpoon"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2022-03-30"},{"lineNumber":4,"author":{"gitId":"jaegarpoon"},"content":"import static seedu.address.model.Model.PREDICATE_SHOW_ALL_ORDERS;","lastModifiedDate":"2022-03-30"},{"lineNumber":5,"author":{"gitId":"jaegarpoon"},"content":"","lastModifiedDate":"2022-03-30"},{"lineNumber":6,"author":{"gitId":"jaegarpoon"},"content":"import java.time.LocalDate;","lastModifiedDate":"2022-03-30"},{"lineNumber":7,"author":{"gitId":"jaegarpoon"},"content":"import java.util.List;","lastModifiedDate":"2022-03-30"},{"lineNumber":8,"author":{"gitId":"jaegarpoon"},"content":"","lastModifiedDate":"2022-03-30"},{"lineNumber":9,"author":{"gitId":"jaegarpoon"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2022-03-30"},{"lineNumber":10,"author":{"gitId":"jaegarpoon"},"content":"import seedu.address.model.order.OrderDeliveredAndFromDatePredicate;","lastModifiedDate":"2022-03-30"},{"lineNumber":11,"author":{"gitId":"jaegarpoon"},"content":"","lastModifiedDate":"2022-03-30"},{"lineNumber":12,"author":{"gitId":"jaegarpoon"},"content":"/**","lastModifiedDate":"2022-03-30"},{"lineNumber":13,"author":{"gitId":"jaegarpoon"},"content":" * Finds and lists all orders in FoodOnWheels, and displays the total","lastModifiedDate":"2022-03-30"},{"lineNumber":14,"author":{"gitId":"jaegarpoon"},"content":" * revenue generated in the current day based on the date on the operating system.","lastModifiedDate":"2022-03-30"},{"lineNumber":15,"author":{"gitId":"jaegarpoon"},"content":" *","lastModifiedDate":"2022-03-30"},{"lineNumber":16,"author":{"gitId":"jaegarpoon"},"content":" * The total revenue is calculated based on all the delivered orders in the current","lastModifiedDate":"2022-03-30"},{"lineNumber":17,"author":{"gitId":"jaegarpoon"},"content":" * day.","lastModifiedDate":"2022-03-30"},{"lineNumber":18,"author":{"gitId":"jaegarpoon"},"content":" */","lastModifiedDate":"2022-03-30"},{"lineNumber":19,"author":{"gitId":"jaegarpoon"},"content":"public class RevenueCommand extends Command {","lastModifiedDate":"2022-03-30"},{"lineNumber":20,"author":{"gitId":"jaegarpoon"},"content":"    public static final String COMMAND_WORD \u003d \"revenue\";","lastModifiedDate":"2022-03-30"},{"lineNumber":21,"author":{"gitId":"jaegarpoon"},"content":"","lastModifiedDate":"2022-03-30"},{"lineNumber":22,"author":{"gitId":"jaegarpoon"},"content":"    public static final String MESSAGE_USAGE \u003d COMMAND_WORD + \": Finds the total revenue \"","lastModifiedDate":"2022-03-30"},{"lineNumber":23,"author":{"gitId":"jaegarpoon"},"content":"            + \"of the current day \"","lastModifiedDate":"2022-03-30"},{"lineNumber":24,"author":{"gitId":"jaegarpoon"},"content":"            + \"and displays all orders as a list with index numbers.\\n\";","lastModifiedDate":"2022-03-30"},{"lineNumber":25,"author":{"gitId":"jaegarpoon"},"content":"","lastModifiedDate":"2022-03-30"},{"lineNumber":26,"author":{"gitId":"jaegarpoon"},"content":"    public static final String MESSAGE_SUCCESS \u003d \"Total revenue: $\";","lastModifiedDate":"2022-03-30"},{"lineNumber":27,"author":{"gitId":"jaegarpoon"},"content":"","lastModifiedDate":"2022-03-30"},{"lineNumber":28,"author":{"gitId":"jaegarpoon"},"content":"    private final OrderDeliveredAndFromDatePredicate predicate \u003d","lastModifiedDate":"2022-03-30"},{"lineNumber":29,"author":{"gitId":"jaegarpoon"},"content":"            new OrderDeliveredAndFromDatePredicate(List.of(LocalDate.now()));","lastModifiedDate":"2022-03-30"},{"lineNumber":30,"author":{"gitId":"jaegarpoon"},"content":"","lastModifiedDate":"2022-03-30"},{"lineNumber":31,"author":{"gitId":"jaegarpoon"},"content":"    @Override","lastModifiedDate":"2022-03-30"},{"lineNumber":32,"author":{"gitId":"jaegarpoon"},"content":"    public CommandResult execute(Model model) {","lastModifiedDate":"2022-03-30"},{"lineNumber":33,"author":{"gitId":"jaegarpoon"},"content":"        requireNonNull(model);","lastModifiedDate":"2022-03-30"},{"lineNumber":34,"author":{"gitId":"jaegarpoon"},"content":"        model.updateFilteredOrderList(predicate);","lastModifiedDate":"2022-03-30"},{"lineNumber":35,"author":{"gitId":"jaegarpoon"},"content":"        double revenue \u003d model.getFilteredOrderList().stream()","lastModifiedDate":"2022-03-30"},{"lineNumber":36,"author":{"gitId":"jaegarpoon"},"content":"                .mapToDouble(x -\u003e x.getTotalPrice()).sum();","lastModifiedDate":"2022-03-30"},{"lineNumber":37,"author":{"gitId":"jaegarpoon"},"content":"        model.updateFilteredOrderList(PREDICATE_SHOW_ALL_ORDERS);","lastModifiedDate":"2022-03-30"},{"lineNumber":38,"author":{"gitId":"jaegarpoon"},"content":"        return new CommandResult(MESSAGE_SUCCESS","lastModifiedDate":"2022-03-30"},{"lineNumber":39,"author":{"gitId":"jaegarpoon"},"content":"                + String.format(\"%.2f\", revenue), false, false, false, false, true);","lastModifiedDate":"2022-03-30"},{"lineNumber":40,"author":{"gitId":"jaegarpoon"},"content":"    }","lastModifiedDate":"2022-03-30"},{"lineNumber":41,"author":{"gitId":"jaegarpoon"},"content":"","lastModifiedDate":"2022-03-30"},{"lineNumber":42,"author":{"gitId":"jaegarpoon"},"content":"    @Override","lastModifiedDate":"2022-03-30"},{"lineNumber":43,"author":{"gitId":"jaegarpoon"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2022-03-30"},{"lineNumber":44,"author":{"gitId":"jaegarpoon"},"content":"        return other \u003d\u003d this // short circuit if same object","lastModifiedDate":"2022-03-30"},{"lineNumber":45,"author":{"gitId":"jaegarpoon"},"content":"                || (other instanceof RevenueCommand // instanceof handles nulls","lastModifiedDate":"2022-03-30"},{"lineNumber":46,"author":{"gitId":"jaegarpoon"},"content":"                \u0026\u0026 predicate.equals(((RevenueCommand) other).predicate)); // state check","lastModifiedDate":"2022-03-30"},{"lineNumber":47,"author":{"gitId":"jaegarpoon"},"content":"    }","lastModifiedDate":"2022-03-30"},{"lineNumber":48,"author":{"gitId":"jaegarpoon"},"content":"}","lastModifiedDate":"2022-03-30"}],"authorContributionMap":{"jaegarpoon":48}},{"path":"src/main/java/seedu/address/logic/parser/AddCommandParser.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2022-03-16"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-03-16"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static seedu.address.commons.core.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2022-03-16"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_ADDRESS;","lastModifiedDate":"2022-03-16"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_EMAIL;","lastModifiedDate":"2022-03-16"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_NAME;","lastModifiedDate":"2022-03-16"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_PHONE;","lastModifiedDate":"2022-03-16"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_TAG;","lastModifiedDate":"2022-03-16"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-03-16"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import java.util.Set;","lastModifiedDate":"2022-03-16"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import java.util.stream.Stream;","lastModifiedDate":"2022-03-16"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-03-16"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.AddCommand;","lastModifiedDate":"2022-03-16"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import seedu.address.logic.parser.exceptions.ParseException;","lastModifiedDate":"2022-03-16"},{"lineNumber":15,"author":{"gitId":"zxgoh"},"content":"import seedu.address.model.item.Address;","lastModifiedDate":"2022-03-16"},{"lineNumber":16,"author":{"gitId":"zxgoh"},"content":"import seedu.address.model.item.Email;","lastModifiedDate":"2022-03-16"},{"lineNumber":17,"author":{"gitId":"zxgoh"},"content":"import seedu.address.model.item.Name;","lastModifiedDate":"2022-03-16"},{"lineNumber":18,"author":{"gitId":"zxgoh"},"content":"import seedu.address.model.item.Person;","lastModifiedDate":"2022-03-16"},{"lineNumber":19,"author":{"gitId":"zxgoh"},"content":"import seedu.address.model.item.Phone;","lastModifiedDate":"2022-03-16"},{"lineNumber":20,"author":{"gitId":"-"},"content":"import seedu.address.model.tag.Tag;","lastModifiedDate":"2022-03-16"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-03-16"},{"lineNumber":22,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2022-03-16"},{"lineNumber":23,"author":{"gitId":"-"},"content":" * Parses input arguments and creates a new AddCommand object","lastModifiedDate":"2022-03-16"},{"lineNumber":24,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2022-03-16"},{"lineNumber":25,"author":{"gitId":"-"},"content":"public class AddCommandParser implements Parser\u003cAddCommand\u003e {","lastModifiedDate":"2022-03-16"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-03-16"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2022-03-16"},{"lineNumber":28,"author":{"gitId":"-"},"content":"     * Parses the given {@code String} of arguments in the context of the AddCommand","lastModifiedDate":"2022-03-16"},{"lineNumber":29,"author":{"gitId":"-"},"content":"     * and returns an AddCommand object for execution.","lastModifiedDate":"2022-03-16"},{"lineNumber":30,"author":{"gitId":"-"},"content":"     * @throws ParseException if the user input does not conform the expected format","lastModifiedDate":"2022-03-16"},{"lineNumber":31,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2022-03-16"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    public AddCommand parse(String args) throws ParseException {","lastModifiedDate":"2022-03-16"},{"lineNumber":33,"author":{"gitId":"-"},"content":"        ArgumentMultimap argMultimap \u003d","lastModifiedDate":"2022-03-16"},{"lineNumber":34,"author":{"gitId":"-"},"content":"                ArgumentTokenizer.tokenize(args, PREFIX_NAME, PREFIX_PHONE, PREFIX_EMAIL, PREFIX_ADDRESS, PREFIX_TAG);","lastModifiedDate":"2022-03-16"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-03-16"},{"lineNumber":36,"author":{"gitId":"-"},"content":"        if (!arePrefixesPresent(argMultimap, PREFIX_NAME, PREFIX_ADDRESS, PREFIX_PHONE, PREFIX_EMAIL)","lastModifiedDate":"2022-03-16"},{"lineNumber":37,"author":{"gitId":"-"},"content":"                || !argMultimap.getPreamble().isEmpty()) {","lastModifiedDate":"2022-03-16"},{"lineNumber":38,"author":{"gitId":"-"},"content":"            throw new ParseException(String.format(MESSAGE_INVALID_COMMAND_FORMAT, AddCommand.MESSAGE_USAGE));","lastModifiedDate":"2022-03-16"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2022-03-16"},{"lineNumber":40,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-03-16"},{"lineNumber":41,"author":{"gitId":"zxgoh"},"content":"        Name name \u003d null;","lastModifiedDate":"2022-03-16"},{"lineNumber":42,"author":{"gitId":"zxgoh"},"content":"        Phone phone \u003d null;","lastModifiedDate":"2022-03-16"},{"lineNumber":43,"author":{"gitId":"zxgoh"},"content":"        Email email \u003d null;","lastModifiedDate":"2022-03-16"},{"lineNumber":44,"author":{"gitId":"zxgoh"},"content":"        Address address \u003d null;","lastModifiedDate":"2022-03-16"},{"lineNumber":45,"author":{"gitId":"-"},"content":"        Set\u003cTag\u003e tagList \u003d ParserUtil.parseTags(argMultimap.getAllValues(PREFIX_TAG));","lastModifiedDate":"2022-03-16"},{"lineNumber":46,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-03-16"},{"lineNumber":47,"author":{"gitId":"-"},"content":"        Person person \u003d new Person(name, phone, email, address, tagList);","lastModifiedDate":"2022-03-16"},{"lineNumber":48,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-03-16"},{"lineNumber":49,"author":{"gitId":"-"},"content":"        return new AddCommand(person);","lastModifiedDate":"2022-03-16"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2022-03-16"},{"lineNumber":51,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-03-16"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2022-03-16"},{"lineNumber":53,"author":{"gitId":"-"},"content":"     * Returns true if none of the prefixes contains empty {@code Optional} values in the given","lastModifiedDate":"2022-03-16"},{"lineNumber":54,"author":{"gitId":"-"},"content":"     * {@code ArgumentMultimap}.","lastModifiedDate":"2022-03-16"},{"lineNumber":55,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2022-03-16"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    private static boolean arePrefixesPresent(ArgumentMultimap argumentMultimap, Prefix... prefixes) {","lastModifiedDate":"2022-03-16"},{"lineNumber":57,"author":{"gitId":"-"},"content":"        return Stream.of(prefixes).allMatch(prefix -\u003e argumentMultimap.getValue(prefix).isPresent());","lastModifiedDate":"2022-03-16"},{"lineNumber":58,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2022-03-16"},{"lineNumber":59,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-03-16"},{"lineNumber":60,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2022-03-16"}],"authorContributionMap":{"-":51,"zxgoh":9}},{"path":"src/main/java/seedu/address/logic/parser/AddCustomerCommandParser.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"zxgoh"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2022-03-14"},{"lineNumber":2,"author":{"gitId":"zxgoh"},"content":"","lastModifiedDate":"2022-03-14"},{"lineNumber":3,"author":{"gitId":"zxgoh"},"content":"import static seedu.address.commons.core.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2022-03-14"},{"lineNumber":4,"author":{"gitId":"zxgoh"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_ADDRESS;","lastModifiedDate":"2022-03-14"},{"lineNumber":5,"author":{"gitId":"zxgoh"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_NAME;","lastModifiedDate":"2022-03-14"},{"lineNumber":6,"author":{"gitId":"zxgoh"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_PHONE;","lastModifiedDate":"2022-03-14"},{"lineNumber":7,"author":{"gitId":"zxgoh"},"content":"","lastModifiedDate":"2022-03-14"},{"lineNumber":8,"author":{"gitId":"zxgoh"},"content":"import java.util.stream.Stream;","lastModifiedDate":"2022-03-14"},{"lineNumber":9,"author":{"gitId":"zxgoh"},"content":"","lastModifiedDate":"2022-03-14"},{"lineNumber":10,"author":{"gitId":"zxgoh"},"content":"import seedu.address.logic.commands.AddCustomerCommand;","lastModifiedDate":"2022-03-14"},{"lineNumber":11,"author":{"gitId":"zxgoh"},"content":"import seedu.address.logic.parser.exceptions.ParseException;","lastModifiedDate":"2022-03-14"},{"lineNumber":12,"author":{"gitId":"zxgoh"},"content":"import seedu.address.model.customer.AddressCustomer;","lastModifiedDate":"2022-03-15"},{"lineNumber":13,"author":{"gitId":"zxgoh"},"content":"import seedu.address.model.customer.Customer;","lastModifiedDate":"2022-03-14"},{"lineNumber":14,"author":{"gitId":"zxgoh"},"content":"import seedu.address.model.customer.NameCustomer;","lastModifiedDate":"2022-03-15"},{"lineNumber":15,"author":{"gitId":"zxgoh"},"content":"import seedu.address.model.customer.PhoneCustomer;","lastModifiedDate":"2022-03-15"},{"lineNumber":16,"author":{"gitId":"zxgoh"},"content":"","lastModifiedDate":"2022-03-14"},{"lineNumber":17,"author":{"gitId":"zxgoh"},"content":"/**","lastModifiedDate":"2022-03-14"},{"lineNumber":18,"author":{"gitId":"zxgoh"},"content":" * Parses input arguments and creates a new AddCustomerCommand object","lastModifiedDate":"2022-03-14"},{"lineNumber":19,"author":{"gitId":"zxgoh"},"content":" */","lastModifiedDate":"2022-03-14"},{"lineNumber":20,"author":{"gitId":"zxgoh"},"content":"public class AddCustomerCommandParser implements Parser\u003cAddCustomerCommand\u003e {","lastModifiedDate":"2022-03-14"},{"lineNumber":21,"author":{"gitId":"zxgoh"},"content":"","lastModifiedDate":"2022-03-14"},{"lineNumber":22,"author":{"gitId":"zxgoh"},"content":"    /**","lastModifiedDate":"2022-03-14"},{"lineNumber":23,"author":{"gitId":"zxgoh"},"content":"     * Parses the given {@code String} of arguments in the context of the AddCustomerCommand","lastModifiedDate":"2022-03-14"},{"lineNumber":24,"author":{"gitId":"zxgoh"},"content":"     * and returns an AddCustomerCommand object for execution.","lastModifiedDate":"2022-03-14"},{"lineNumber":25,"author":{"gitId":"zxgoh"},"content":"     * @throws ParseException if the user input does not conform the expected format","lastModifiedDate":"2022-03-14"},{"lineNumber":26,"author":{"gitId":"zxgoh"},"content":"     */","lastModifiedDate":"2022-03-14"},{"lineNumber":27,"author":{"gitId":"zxgoh"},"content":"    public AddCustomerCommand parse(String args) throws ParseException {","lastModifiedDate":"2022-03-14"},{"lineNumber":28,"author":{"gitId":"zxgoh"},"content":"        ArgumentMultimap argMultimap \u003d","lastModifiedDate":"2022-03-14"},{"lineNumber":29,"author":{"gitId":"zxgoh"},"content":"                ArgumentTokenizer.tokenize(args, PREFIX_NAME, PREFIX_PHONE, PREFIX_ADDRESS);","lastModifiedDate":"2022-03-14"},{"lineNumber":30,"author":{"gitId":"zxgoh"},"content":"","lastModifiedDate":"2022-03-14"},{"lineNumber":31,"author":{"gitId":"zxgoh"},"content":"        if (!arePrefixesPresent(argMultimap, PREFIX_NAME, PREFIX_ADDRESS, PREFIX_PHONE)","lastModifiedDate":"2022-03-14"},{"lineNumber":32,"author":{"gitId":"zxgoh"},"content":"                || !argMultimap.getPreamble().isEmpty()) {","lastModifiedDate":"2022-03-14"},{"lineNumber":33,"author":{"gitId":"zxgoh"},"content":"            throw new ParseException(String.format(MESSAGE_INVALID_COMMAND_FORMAT, AddCustomerCommand.MESSAGE_USAGE));","lastModifiedDate":"2022-03-14"},{"lineNumber":34,"author":{"gitId":"zxgoh"},"content":"        }","lastModifiedDate":"2022-03-14"},{"lineNumber":35,"author":{"gitId":"zxgoh"},"content":"","lastModifiedDate":"2022-03-14"},{"lineNumber":36,"author":{"gitId":"zxgoh"},"content":"        NameCustomer nameCustomer \u003d ParserUtil.parseNameCustomer(argMultimap.getValue(PREFIX_NAME).get());","lastModifiedDate":"2022-03-31"},{"lineNumber":37,"author":{"gitId":"zxgoh"},"content":"        PhoneCustomer phoneCustomer \u003d ParserUtil.parsePhoneCustomer(argMultimap.getValue(PREFIX_PHONE).get());","lastModifiedDate":"2022-03-31"},{"lineNumber":38,"author":{"gitId":"zxgoh"},"content":"        AddressCustomer addressCustomer \u003d ParserUtil.parseAddressCustomer(argMultimap.getValue(PREFIX_ADDRESS).get());","lastModifiedDate":"2022-03-31"},{"lineNumber":39,"author":{"gitId":"zxgoh"},"content":"","lastModifiedDate":"2022-03-14"},{"lineNumber":40,"author":{"gitId":"zxgoh"},"content":"        Customer customer \u003d new Customer(nameCustomer, phoneCustomer, addressCustomer);","lastModifiedDate":"2022-03-15"},{"lineNumber":41,"author":{"gitId":"zxgoh"},"content":"","lastModifiedDate":"2022-03-14"},{"lineNumber":42,"author":{"gitId":"zxgoh"},"content":"        return new AddCustomerCommand(customer);","lastModifiedDate":"2022-03-14"},{"lineNumber":43,"author":{"gitId":"zxgoh"},"content":"    }","lastModifiedDate":"2022-03-14"},{"lineNumber":44,"author":{"gitId":"zxgoh"},"content":"","lastModifiedDate":"2022-03-14"},{"lineNumber":45,"author":{"gitId":"zxgoh"},"content":"    /**","lastModifiedDate":"2022-03-14"},{"lineNumber":46,"author":{"gitId":"zxgoh"},"content":"     * Returns true if none of the prefixes contains empty {@code Optional} values in the given","lastModifiedDate":"2022-03-14"},{"lineNumber":47,"author":{"gitId":"zxgoh"},"content":"     * {@code ArgumentMultimap}.","lastModifiedDate":"2022-03-14"},{"lineNumber":48,"author":{"gitId":"zxgoh"},"content":"     */","lastModifiedDate":"2022-03-14"},{"lineNumber":49,"author":{"gitId":"zxgoh"},"content":"    private static boolean arePrefixesPresent(ArgumentMultimap argumentMultimap, Prefix... prefixes) {","lastModifiedDate":"2022-03-14"},{"lineNumber":50,"author":{"gitId":"zxgoh"},"content":"        return Stream.of(prefixes).allMatch(prefix -\u003e argumentMultimap.getValue(prefix).isPresent());","lastModifiedDate":"2022-03-14"},{"lineNumber":51,"author":{"gitId":"zxgoh"},"content":"    }","lastModifiedDate":"2022-03-14"},{"lineNumber":52,"author":{"gitId":"zxgoh"},"content":"","lastModifiedDate":"2022-03-14"},{"lineNumber":53,"author":{"gitId":"zxgoh"},"content":"}","lastModifiedDate":"2022-03-14"}],"authorContributionMap":{"zxgoh":53}},{"path":"src/main/java/seedu/address/logic/parser/AddDishCommandParser.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"zxgoh"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2022-03-16"},{"lineNumber":2,"author":{"gitId":"zxgoh"},"content":"","lastModifiedDate":"2022-03-16"},{"lineNumber":3,"author":{"gitId":"zxgoh"},"content":"import static seedu.address.commons.core.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2022-03-16"},{"lineNumber":4,"author":{"gitId":"zxgoh"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_NAME;","lastModifiedDate":"2022-03-16"},{"lineNumber":5,"author":{"gitId":"jaegarpoon"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_PRICE;","lastModifiedDate":"2022-03-27"},{"lineNumber":6,"author":{"gitId":"zxgoh"},"content":"","lastModifiedDate":"2022-03-16"},{"lineNumber":7,"author":{"gitId":"zxgoh"},"content":"import java.util.stream.Stream;","lastModifiedDate":"2022-03-16"},{"lineNumber":8,"author":{"gitId":"zxgoh"},"content":"","lastModifiedDate":"2022-03-16"},{"lineNumber":9,"author":{"gitId":"zxgoh"},"content":"import seedu.address.logic.commands.AddDishCommand;","lastModifiedDate":"2022-03-16"},{"lineNumber":10,"author":{"gitId":"zxgoh"},"content":"import seedu.address.logic.parser.exceptions.ParseException;","lastModifiedDate":"2022-03-16"},{"lineNumber":11,"author":{"gitId":"jaegarpoon"},"content":"import seedu.address.model.dish.Dish;","lastModifiedDate":"2022-03-24"},{"lineNumber":12,"author":{"gitId":"jaegarpoon"},"content":"import seedu.address.model.dish.NameDish;","lastModifiedDate":"2022-03-27"},{"lineNumber":13,"author":{"gitId":"jaegarpoon"},"content":"import seedu.address.model.dish.PriceDish;","lastModifiedDate":"2022-03-27"},{"lineNumber":14,"author":{"gitId":"zxgoh"},"content":"","lastModifiedDate":"2022-03-16"},{"lineNumber":15,"author":{"gitId":"zxgoh"},"content":"/**","lastModifiedDate":"2022-03-16"},{"lineNumber":16,"author":{"gitId":"zxgoh"},"content":" * Parses input arguments and creates a new AddDishCommand object","lastModifiedDate":"2022-03-16"},{"lineNumber":17,"author":{"gitId":"zxgoh"},"content":" */","lastModifiedDate":"2022-03-16"},{"lineNumber":18,"author":{"gitId":"zxgoh"},"content":"public class AddDishCommandParser implements Parser\u003cAddDishCommand\u003e {","lastModifiedDate":"2022-03-16"},{"lineNumber":19,"author":{"gitId":"zxgoh"},"content":"","lastModifiedDate":"2022-03-16"},{"lineNumber":20,"author":{"gitId":"zxgoh"},"content":"    /**","lastModifiedDate":"2022-03-16"},{"lineNumber":21,"author":{"gitId":"zxgoh"},"content":"     * Parses the given {@code String} of arguments in the context of the AddDishCommand","lastModifiedDate":"2022-03-16"},{"lineNumber":22,"author":{"gitId":"zxgoh"},"content":"     * and returns an AddDishCommand object for execution.","lastModifiedDate":"2022-03-16"},{"lineNumber":23,"author":{"gitId":"zxgoh"},"content":"     * @throws ParseException if the user input does not conform the expected format","lastModifiedDate":"2022-03-16"},{"lineNumber":24,"author":{"gitId":"zxgoh"},"content":"     */","lastModifiedDate":"2022-03-16"},{"lineNumber":25,"author":{"gitId":"zxgoh"},"content":"    public AddDishCommand parse(String args) throws ParseException {","lastModifiedDate":"2022-03-16"},{"lineNumber":26,"author":{"gitId":"zxgoh"},"content":"        ArgumentMultimap argMultimap \u003d","lastModifiedDate":"2022-03-16"},{"lineNumber":27,"author":{"gitId":"jaegarpoon"},"content":"                ArgumentTokenizer.tokenize(args, PREFIX_NAME, PREFIX_PRICE);","lastModifiedDate":"2022-03-27"},{"lineNumber":28,"author":{"gitId":"zxgoh"},"content":"","lastModifiedDate":"2022-03-16"},{"lineNumber":29,"author":{"gitId":"jaegarpoon"},"content":"        if (!arePrefixesPresent(argMultimap, PREFIX_NAME, PREFIX_PRICE)","lastModifiedDate":"2022-03-27"},{"lineNumber":30,"author":{"gitId":"zxgoh"},"content":"                || !argMultimap.getPreamble().isEmpty()) {","lastModifiedDate":"2022-03-16"},{"lineNumber":31,"author":{"gitId":"zxgoh"},"content":"            throw new ParseException(String.format(MESSAGE_INVALID_COMMAND_FORMAT, AddDishCommand.MESSAGE_USAGE));","lastModifiedDate":"2022-03-16"},{"lineNumber":32,"author":{"gitId":"zxgoh"},"content":"        }","lastModifiedDate":"2022-03-16"},{"lineNumber":33,"author":{"gitId":"zxgoh"},"content":"","lastModifiedDate":"2022-03-16"},{"lineNumber":34,"author":{"gitId":"jaegarpoon"},"content":"        NameDish name \u003d ParserUtil.parseDishName(argMultimap.getValue(PREFIX_NAME).get());","lastModifiedDate":"2022-03-27"},{"lineNumber":35,"author":{"gitId":"jaegarpoon"},"content":"        PriceDish price \u003d ParserUtil.parsePrice(argMultimap.getValue(PREFIX_PRICE).get());","lastModifiedDate":"2022-03-27"},{"lineNumber":36,"author":{"gitId":"zxgoh"},"content":"","lastModifiedDate":"2022-03-16"},{"lineNumber":37,"author":{"gitId":"jaegarpoon"},"content":"        Dish dish \u003d new Dish(name, price);","lastModifiedDate":"2022-03-27"},{"lineNumber":38,"author":{"gitId":"zxgoh"},"content":"","lastModifiedDate":"2022-03-16"},{"lineNumber":39,"author":{"gitId":"zxgoh"},"content":"        return new AddDishCommand(dish);","lastModifiedDate":"2022-03-16"},{"lineNumber":40,"author":{"gitId":"zxgoh"},"content":"    }","lastModifiedDate":"2022-03-16"},{"lineNumber":41,"author":{"gitId":"zxgoh"},"content":"","lastModifiedDate":"2022-03-16"},{"lineNumber":42,"author":{"gitId":"zxgoh"},"content":"    /**","lastModifiedDate":"2022-03-16"},{"lineNumber":43,"author":{"gitId":"zxgoh"},"content":"     * Returns true if none of the prefixes contains empty {@code Optional} values in the given","lastModifiedDate":"2022-03-16"},{"lineNumber":44,"author":{"gitId":"zxgoh"},"content":"     * {@code ArgumentMultimap}.","lastModifiedDate":"2022-03-16"},{"lineNumber":45,"author":{"gitId":"zxgoh"},"content":"     */","lastModifiedDate":"2022-03-16"},{"lineNumber":46,"author":{"gitId":"zxgoh"},"content":"    private static boolean arePrefixesPresent(ArgumentMultimap argumentMultimap, Prefix... prefixes) {","lastModifiedDate":"2022-03-16"},{"lineNumber":47,"author":{"gitId":"zxgoh"},"content":"        return Stream.of(prefixes).allMatch(prefix -\u003e argumentMultimap.getValue(prefix).isPresent());","lastModifiedDate":"2022-03-16"},{"lineNumber":48,"author":{"gitId":"zxgoh"},"content":"    }","lastModifiedDate":"2022-03-16"},{"lineNumber":49,"author":{"gitId":"zxgoh"},"content":"","lastModifiedDate":"2022-03-16"},{"lineNumber":50,"author":{"gitId":"zxgoh"},"content":"}","lastModifiedDate":"2022-03-16"},{"lineNumber":51,"author":{"gitId":"zxgoh"},"content":"","lastModifiedDate":"2022-03-16"}],"authorContributionMap":{"jaegarpoon":9,"zxgoh":42}},{"path":"src/main/java/seedu/address/logic/parser/AddDriverCommandParser.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"hieunm1821"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2022-03-10"},{"lineNumber":2,"author":{"gitId":"hieunm1821"},"content":"","lastModifiedDate":"2022-03-10"},{"lineNumber":3,"author":{"gitId":"hieunm1821"},"content":"import static seedu.address.commons.core.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2022-03-10"},{"lineNumber":4,"author":{"gitId":"hieunm1821"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_NAME;","lastModifiedDate":"2022-03-10"},{"lineNumber":5,"author":{"gitId":"hieunm1821"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_PHONE;","lastModifiedDate":"2022-03-10"},{"lineNumber":6,"author":{"gitId":"hieunm1821"},"content":"","lastModifiedDate":"2022-03-10"},{"lineNumber":7,"author":{"gitId":"hieunm1821"},"content":"import java.util.stream.Stream;","lastModifiedDate":"2022-03-10"},{"lineNumber":8,"author":{"gitId":"hieunm1821"},"content":"","lastModifiedDate":"2022-03-10"},{"lineNumber":9,"author":{"gitId":"hieunm1821"},"content":"import seedu.address.logic.commands.AddDriverCommand;","lastModifiedDate":"2022-03-10"},{"lineNumber":10,"author":{"gitId":"hieunm1821"},"content":"import seedu.address.logic.parser.exceptions.ParseException;","lastModifiedDate":"2022-03-10"},{"lineNumber":11,"author":{"gitId":"hieunm1821"},"content":"import seedu.address.model.driver.Driver;","lastModifiedDate":"2022-03-10"},{"lineNumber":12,"author":{"gitId":"hieunm1821"},"content":"import seedu.address.model.driver.NameDriver;","lastModifiedDate":"2022-03-10"},{"lineNumber":13,"author":{"gitId":"hieunm1821"},"content":"import seedu.address.model.driver.PhoneDriver;","lastModifiedDate":"2022-03-10"},{"lineNumber":14,"author":{"gitId":"hieunm1821"},"content":"","lastModifiedDate":"2022-03-10"},{"lineNumber":15,"author":{"gitId":"hieunm1821"},"content":"/**","lastModifiedDate":"2022-03-11"},{"lineNumber":16,"author":{"gitId":"hieunm1821"},"content":" * Parses input arguments and creates a new AddDriverCommandParser object","lastModifiedDate":"2022-03-11"},{"lineNumber":17,"author":{"gitId":"hieunm1821"},"content":" */","lastModifiedDate":"2022-03-11"},{"lineNumber":18,"author":{"gitId":"hieunm1821"},"content":"public class AddDriverCommandParser implements Parser\u003cAddDriverCommand\u003e {","lastModifiedDate":"2022-03-10"},{"lineNumber":19,"author":{"gitId":"hieunm1821"},"content":"","lastModifiedDate":"2022-03-11"},{"lineNumber":20,"author":{"gitId":"hieunm1821"},"content":"    /**","lastModifiedDate":"2022-03-11"},{"lineNumber":21,"author":{"gitId":"hieunm1821"},"content":"     * Parses the given {@code String} of arguments in the context of the AddDriverCommand","lastModifiedDate":"2022-03-11"},{"lineNumber":22,"author":{"gitId":"hieunm1821"},"content":"     * and returns an AddDriverCommand object for execution.","lastModifiedDate":"2022-03-11"},{"lineNumber":23,"author":{"gitId":"hieunm1821"},"content":"     * @throws ParseException if the user input does not conform the expected format","lastModifiedDate":"2022-03-11"},{"lineNumber":24,"author":{"gitId":"hieunm1821"},"content":"     */","lastModifiedDate":"2022-03-11"},{"lineNumber":25,"author":{"gitId":"hieunm1821"},"content":"    public AddDriverCommand parse(String args) throws ParseException {","lastModifiedDate":"2022-03-10"},{"lineNumber":26,"author":{"gitId":"hieunm1821"},"content":"        ArgumentMultimap argMultimap \u003d ArgumentTokenizer.tokenize(args, PREFIX_NAME, PREFIX_PHONE);","lastModifiedDate":"2022-03-10"},{"lineNumber":27,"author":{"gitId":"hieunm1821"},"content":"","lastModifiedDate":"2022-03-10"},{"lineNumber":28,"author":{"gitId":"hieunm1821"},"content":"        if (!arePrefixesPresent(argMultimap, PREFIX_NAME, PREFIX_PHONE)","lastModifiedDate":"2022-03-10"},{"lineNumber":29,"author":{"gitId":"hieunm1821"},"content":"                || !argMultimap.getPreamble().isEmpty()) {","lastModifiedDate":"2022-03-10"},{"lineNumber":30,"author":{"gitId":"hieunm1821"},"content":"            throw new ParseException(String.format(MESSAGE_INVALID_COMMAND_FORMAT, AddDriverCommand.MESSAGE_USAGE));","lastModifiedDate":"2022-03-10"},{"lineNumber":31,"author":{"gitId":"hieunm1821"},"content":"        }","lastModifiedDate":"2022-03-10"},{"lineNumber":32,"author":{"gitId":"hieunm1821"},"content":"","lastModifiedDate":"2022-03-10"},{"lineNumber":33,"author":{"gitId":"hieunm1821"},"content":"        NameDriver name \u003d ParserUtil.parseNameDriver(argMultimap.getValue(PREFIX_NAME).get());","lastModifiedDate":"2022-03-10"},{"lineNumber":34,"author":{"gitId":"hieunm1821"},"content":"        PhoneDriver phone \u003d ParserUtil.parsePhoneDriver(argMultimap.getValue(PREFIX_PHONE).get());","lastModifiedDate":"2022-03-10"},{"lineNumber":35,"author":{"gitId":"hieunm1821"},"content":"","lastModifiedDate":"2022-03-10"},{"lineNumber":36,"author":{"gitId":"hieunm1821"},"content":"        Driver driver \u003d new Driver(name, phone);","lastModifiedDate":"2022-03-10"},{"lineNumber":37,"author":{"gitId":"hieunm1821"},"content":"","lastModifiedDate":"2022-03-10"},{"lineNumber":38,"author":{"gitId":"hieunm1821"},"content":"        return new AddDriverCommand(driver);","lastModifiedDate":"2022-03-10"},{"lineNumber":39,"author":{"gitId":"hieunm1821"},"content":"    }","lastModifiedDate":"2022-03-10"},{"lineNumber":40,"author":{"gitId":"hieunm1821"},"content":"","lastModifiedDate":"2022-03-10"},{"lineNumber":41,"author":{"gitId":"hieunm1821"},"content":"    /**","lastModifiedDate":"2022-03-10"},{"lineNumber":42,"author":{"gitId":"hieunm1821"},"content":"     * Returns true if none of the prefixes contains empty {@code Optional} values in the given","lastModifiedDate":"2022-03-10"},{"lineNumber":43,"author":{"gitId":"hieunm1821"},"content":"     * {@code ArgumentMultimap}.","lastModifiedDate":"2022-03-10"},{"lineNumber":44,"author":{"gitId":"hieunm1821"},"content":"     */","lastModifiedDate":"2022-03-10"},{"lineNumber":45,"author":{"gitId":"hieunm1821"},"content":"    private static boolean arePrefixesPresent(ArgumentMultimap argumentMultimap, Prefix... prefixes) {","lastModifiedDate":"2022-03-10"},{"lineNumber":46,"author":{"gitId":"hieunm1821"},"content":"        return Stream.of(prefixes).allMatch(prefix -\u003e argumentMultimap.getValue(prefix).isPresent());","lastModifiedDate":"2022-03-10"},{"lineNumber":47,"author":{"gitId":"hieunm1821"},"content":"    }","lastModifiedDate":"2022-03-10"},{"lineNumber":48,"author":{"gitId":"hieunm1821"},"content":"","lastModifiedDate":"2022-03-11"},{"lineNumber":49,"author":{"gitId":"hieunm1821"},"content":"}","lastModifiedDate":"2022-03-10"}],"authorContributionMap":{"hieunm1821":49}},{"path":"src/main/java/seedu/address/logic/parser/AddOrderCommandParser.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"xzzz3"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2022-03-10"},{"lineNumber":2,"author":{"gitId":"xzzz3"},"content":"","lastModifiedDate":"2022-03-10"},{"lineNumber":3,"author":{"gitId":"xzzz3"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2022-03-10"},{"lineNumber":4,"author":{"gitId":"xzzz3"},"content":"import static seedu.address.commons.core.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2022-03-10"},{"lineNumber":5,"author":{"gitId":"xzzz3"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_DISH;","lastModifiedDate":"2022-03-10"},{"lineNumber":6,"author":{"gitId":"xzzz3"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_PHONE;","lastModifiedDate":"2022-03-10"},{"lineNumber":7,"author":{"gitId":"xzzz3"},"content":"","lastModifiedDate":"2022-03-10"},{"lineNumber":8,"author":{"gitId":"xzzz3"},"content":"import java.util.stream.Stream;","lastModifiedDate":"2022-03-14"},{"lineNumber":9,"author":{"gitId":"xzzz3"},"content":"","lastModifiedDate":"2022-03-14"},{"lineNumber":10,"author":{"gitId":"xzzz3"},"content":"import seedu.address.logic.commands.AddOrderCommand;","lastModifiedDate":"2022-03-10"},{"lineNumber":11,"author":{"gitId":"xzzz3"},"content":"import seedu.address.logic.parser.exceptions.ParseException;","lastModifiedDate":"2022-03-10"},{"lineNumber":12,"author":{"gitId":"xzzz3"},"content":"","lastModifiedDate":"2022-03-10"},{"lineNumber":13,"author":{"gitId":"xzzz3"},"content":"/**","lastModifiedDate":"2022-03-12"},{"lineNumber":14,"author":{"gitId":"xzzz3"},"content":" * Parses input arguments and creates a new AddOrderCommand object","lastModifiedDate":"2022-03-12"},{"lineNumber":15,"author":{"gitId":"xzzz3"},"content":" */","lastModifiedDate":"2022-03-12"},{"lineNumber":16,"author":{"gitId":"xzzz3"},"content":"public class AddOrderCommandParser {","lastModifiedDate":"2022-03-10"},{"lineNumber":17,"author":{"gitId":"xzzz3"},"content":"","lastModifiedDate":"2022-03-10"},{"lineNumber":18,"author":{"gitId":"xzzz3"},"content":"    /**","lastModifiedDate":"2022-03-12"},{"lineNumber":19,"author":{"gitId":"xzzz3"},"content":"     * Parses the given {@code String} of arguments in the context of the AddOrderCommand","lastModifiedDate":"2022-03-12"},{"lineNumber":20,"author":{"gitId":"xzzz3"},"content":"     * and returns an AddOrderCommand object for execution.","lastModifiedDate":"2022-03-12"},{"lineNumber":21,"author":{"gitId":"xzzz3"},"content":"     * @throws ParseException if the user input does not conform the expected format","lastModifiedDate":"2022-03-12"},{"lineNumber":22,"author":{"gitId":"xzzz3"},"content":"     */","lastModifiedDate":"2022-03-12"},{"lineNumber":23,"author":{"gitId":"xzzz3"},"content":"    public AddOrderCommand parse(String args) throws ParseException {","lastModifiedDate":"2022-03-10"},{"lineNumber":24,"author":{"gitId":"xzzz3"},"content":"        requireNonNull(args);","lastModifiedDate":"2022-03-10"},{"lineNumber":25,"author":{"gitId":"xzzz3"},"content":"        ArgumentMultimap argMultimap \u003d ArgumentTokenizer.tokenize(args,","lastModifiedDate":"2022-03-10"},{"lineNumber":26,"author":{"gitId":"xzzz3"},"content":"                PREFIX_PHONE, PREFIX_DISH);","lastModifiedDate":"2022-03-10"},{"lineNumber":27,"author":{"gitId":"xzzz3"},"content":"","lastModifiedDate":"2022-03-10"},{"lineNumber":28,"author":{"gitId":"xzzz3"},"content":"        if (!arePrefixesPresent(argMultimap, PREFIX_PHONE, PREFIX_DISH)","lastModifiedDate":"2022-03-14"},{"lineNumber":29,"author":{"gitId":"xzzz3"},"content":"                || !argMultimap.getPreamble().isEmpty()) {","lastModifiedDate":"2022-03-14"},{"lineNumber":30,"author":{"gitId":"xzzz3"},"content":"            throw new ParseException(String.format(MESSAGE_INVALID_COMMAND_FORMAT, AddOrderCommand.MESSAGE_USAGE));","lastModifiedDate":"2022-03-14"},{"lineNumber":31,"author":{"gitId":"xzzz3"},"content":"        }","lastModifiedDate":"2022-03-10"},{"lineNumber":32,"author":{"gitId":"xzzz3"},"content":"","lastModifiedDate":"2022-03-10"},{"lineNumber":33,"author":{"gitId":"xzzz3"},"content":"        String phone \u003d argMultimap.getValue(PREFIX_PHONE).orElse(\"\");","lastModifiedDate":"2022-03-10"},{"lineNumber":34,"author":{"gitId":"xzzz3"},"content":"        String[] dishes \u003d argMultimap.getValue(PREFIX_DISH).orElse(\"\").split(\"\\\\s*,\\\\s*\");","lastModifiedDate":"2022-03-28"},{"lineNumber":35,"author":{"gitId":"xzzz3"},"content":"","lastModifiedDate":"2022-03-10"},{"lineNumber":36,"author":{"gitId":"xzzz3"},"content":"        return new AddOrderCommand(phone, dishes);","lastModifiedDate":"2022-03-10"},{"lineNumber":37,"author":{"gitId":"xzzz3"},"content":"    }","lastModifiedDate":"2022-03-10"},{"lineNumber":38,"author":{"gitId":"xzzz3"},"content":"","lastModifiedDate":"2022-03-14"},{"lineNumber":39,"author":{"gitId":"xzzz3"},"content":"    /**","lastModifiedDate":"2022-03-14"},{"lineNumber":40,"author":{"gitId":"xzzz3"},"content":"     * Returns true if none of the prefixes contains empty {@code Optional} values in the given","lastModifiedDate":"2022-03-14"},{"lineNumber":41,"author":{"gitId":"xzzz3"},"content":"     * {@code ArgumentMultimap}.","lastModifiedDate":"2022-03-14"},{"lineNumber":42,"author":{"gitId":"xzzz3"},"content":"     */","lastModifiedDate":"2022-03-14"},{"lineNumber":43,"author":{"gitId":"xzzz3"},"content":"    private static boolean arePrefixesPresent(ArgumentMultimap argumentMultimap, Prefix... prefixes) {","lastModifiedDate":"2022-03-14"},{"lineNumber":44,"author":{"gitId":"xzzz3"},"content":"        return Stream.of(prefixes).allMatch(prefix -\u003e argumentMultimap.getValue(prefix).isPresent());","lastModifiedDate":"2022-03-14"},{"lineNumber":45,"author":{"gitId":"xzzz3"},"content":"    }","lastModifiedDate":"2022-03-14"},{"lineNumber":46,"author":{"gitId":"xzzz3"},"content":"}","lastModifiedDate":"2022-03-10"}],"authorContributionMap":{"xzzz3":46}},{"path":"src/main/java/seedu/address/logic/parser/AddressBookParser.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2016-09-22"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static seedu.address.commons.core.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2017-01-19"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static seedu.address.commons.core.Messages.MESSAGE_UNKNOWN_COMMAND;","lastModifiedDate":"2017-01-19"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.util.regex.Matcher;","lastModifiedDate":"2017-01-19"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import java.util.regex.Pattern;","lastModifiedDate":"2017-01-19"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":9,"author":{"gitId":"zxgoh"},"content":"import seedu.address.logic.commands.AddCustomerCommand;","lastModifiedDate":"2022-03-14"},{"lineNumber":10,"author":{"gitId":"zxgoh"},"content":"import seedu.address.logic.commands.AddDishCommand;","lastModifiedDate":"2022-03-16"},{"lineNumber":11,"author":{"gitId":"zxgoh"},"content":"import seedu.address.logic.commands.AddDriverCommand;","lastModifiedDate":"2022-03-16"},{"lineNumber":12,"author":{"gitId":"zxgoh"},"content":"import seedu.address.logic.commands.AddOrderCommand;","lastModifiedDate":"2022-03-16"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.ClearCommand;","lastModifiedDate":"2017-01-18"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.Command;","lastModifiedDate":"2017-01-18"},{"lineNumber":15,"author":{"gitId":"zxgoh"},"content":"import seedu.address.logic.commands.DeleteCustomerCommand;","lastModifiedDate":"2022-03-14"},{"lineNumber":16,"author":{"gitId":"zxgoh"},"content":"import seedu.address.logic.commands.DeleteDishCommand;","lastModifiedDate":"2022-03-16"},{"lineNumber":17,"author":{"gitId":"zxgoh"},"content":"import seedu.address.logic.commands.DeleteDriverCommand;","lastModifiedDate":"2022-03-16"},{"lineNumber":18,"author":{"gitId":"zxgoh"},"content":"import seedu.address.logic.commands.EditCustomerCommand;","lastModifiedDate":"2022-03-30"},{"lineNumber":19,"author":{"gitId":"jaegarpoon"},"content":"import seedu.address.logic.commands.EditDishCommand;","lastModifiedDate":"2022-03-27"},{"lineNumber":20,"author":{"gitId":"hieunm1821"},"content":"import seedu.address.logic.commands.EditDriverCommand;","lastModifiedDate":"2022-03-27"},{"lineNumber":21,"author":{"gitId":"xzzz3"},"content":"import seedu.address.logic.commands.EditOrderCommand;","lastModifiedDate":"2022-03-28"},{"lineNumber":22,"author":{"gitId":"zxgoh"},"content":"import seedu.address.logic.commands.EditOrderStatusCommand;","lastModifiedDate":"2022-03-16"},{"lineNumber":23,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.ExitCommand;","lastModifiedDate":"2017-01-18"},{"lineNumber":24,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.FindCommand;","lastModifiedDate":"2017-01-18"},{"lineNumber":25,"author":{"gitId":"zxgoh"},"content":"import seedu.address.logic.commands.FindOrderCommand;","lastModifiedDate":"2022-03-16"},{"lineNumber":26,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.HelpCommand;","lastModifiedDate":"2017-01-18"},{"lineNumber":27,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.ListCommand;","lastModifiedDate":"2017-01-18"},{"lineNumber":28,"author":{"gitId":"zxgoh"},"content":"import seedu.address.logic.commands.ListDishCommand;","lastModifiedDate":"2022-03-16"},{"lineNumber":29,"author":{"gitId":"zxgoh"},"content":"import seedu.address.logic.commands.ListDriverCommand;","lastModifiedDate":"2022-03-16"},{"lineNumber":30,"author":{"gitId":"jaegarpoon"},"content":"import seedu.address.logic.commands.ListOrderCommand;","lastModifiedDate":"2022-03-29"},{"lineNumber":31,"author":{"gitId":"jaegarpoon"},"content":"import seedu.address.logic.commands.RevenueCommand;","lastModifiedDate":"2022-03-30"},{"lineNumber":32,"author":{"gitId":"-"},"content":"import seedu.address.logic.parser.exceptions.ParseException;","lastModifiedDate":"2017-03-11"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":34,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-24"},{"lineNumber":35,"author":{"gitId":"-"},"content":" * Parses user input.","lastModifiedDate":"2016-08-24"},{"lineNumber":36,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-24"},{"lineNumber":37,"author":{"gitId":"-"},"content":"public class AddressBookParser {","lastModifiedDate":"2017-07-07"},{"lineNumber":38,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-24"},{"lineNumber":40,"author":{"gitId":"-"},"content":"     * Used for initial separation of command word and args.","lastModifiedDate":"2016-08-24"},{"lineNumber":41,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-24"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    private static final Pattern BASIC_COMMAND_FORMAT \u003d Pattern.compile(\"(?\u003ccommandWord\u003e\\\\S+)(?\u003carguments\u003e.*)\");","lastModifiedDate":"2016-09-22"},{"lineNumber":43,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-24"},{"lineNumber":45,"author":{"gitId":"-"},"content":"     * Parses user input into command for execution.","lastModifiedDate":"2016-08-24"},{"lineNumber":46,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2016-08-24"},{"lineNumber":47,"author":{"gitId":"-"},"content":"     * @param userInput full user input string","lastModifiedDate":"2016-08-24"},{"lineNumber":48,"author":{"gitId":"-"},"content":"     * @return the command based on the user input","lastModifiedDate":"2016-08-24"},{"lineNumber":49,"author":{"gitId":"-"},"content":"     * @throws ParseException if the user input does not conform the expected format","lastModifiedDate":"2017-03-11"},{"lineNumber":50,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-24"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    public Command parseCommand(String userInput) throws ParseException {","lastModifiedDate":"2017-03-11"},{"lineNumber":52,"author":{"gitId":"-"},"content":"        final Matcher matcher \u003d BASIC_COMMAND_FORMAT.matcher(userInput.trim());","lastModifiedDate":"2016-08-24"},{"lineNumber":53,"author":{"gitId":"-"},"content":"        if (!matcher.matches()) {","lastModifiedDate":"2016-08-24"},{"lineNumber":54,"author":{"gitId":"-"},"content":"            throw new ParseException(String.format(MESSAGE_INVALID_COMMAND_FORMAT, HelpCommand.MESSAGE_USAGE));","lastModifiedDate":"2017-03-11"},{"lineNumber":55,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-08-24"},{"lineNumber":56,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":57,"author":{"gitId":"-"},"content":"        final String commandWord \u003d matcher.group(\"commandWord\");","lastModifiedDate":"2016-08-24"},{"lineNumber":58,"author":{"gitId":"-"},"content":"        final String arguments \u003d matcher.group(\"arguments\");","lastModifiedDate":"2016-08-24"},{"lineNumber":59,"author":{"gitId":"-"},"content":"        switch (commandWord) {","lastModifiedDate":"2016-08-24"},{"lineNumber":60,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":61,"author":{"gitId":"zxgoh"},"content":"        case AddCustomerCommand.COMMAND_WORD:","lastModifiedDate":"2022-03-14"},{"lineNumber":62,"author":{"gitId":"zxgoh"},"content":"            return new AddCustomerCommandParser().parse(arguments);","lastModifiedDate":"2022-03-14"},{"lineNumber":63,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":64,"author":{"gitId":"zxgoh"},"content":"        case AddDishCommand.COMMAND_WORD:","lastModifiedDate":"2022-03-16"},{"lineNumber":65,"author":{"gitId":"zxgoh"},"content":"            return new AddDishCommandParser().parse(arguments);","lastModifiedDate":"2022-03-16"},{"lineNumber":66,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-03-16"},{"lineNumber":67,"author":{"gitId":"zxgoh"},"content":"        case EditCustomerCommand.COMMAND_WORD:","lastModifiedDate":"2022-03-30"},{"lineNumber":68,"author":{"gitId":"zxgoh"},"content":"            return new EditCustomerCommandParser().parse(arguments);","lastModifiedDate":"2022-03-30"},{"lineNumber":69,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-21"},{"lineNumber":70,"author":{"gitId":"jaegarpoon"},"content":"        case EditDishCommand.COMMAND_WORD:","lastModifiedDate":"2022-03-27"},{"lineNumber":71,"author":{"gitId":"jaegarpoon"},"content":"            return new EditDishCommandParser().parse(arguments);","lastModifiedDate":"2022-03-27"},{"lineNumber":72,"author":{"gitId":"jaegarpoon"},"content":"","lastModifiedDate":"2022-03-27"},{"lineNumber":73,"author":{"gitId":"zxgoh"},"content":"        case DeleteCustomerCommand.COMMAND_WORD:","lastModifiedDate":"2022-03-14"},{"lineNumber":74,"author":{"gitId":"zxgoh"},"content":"            return new DeleteCustomerCommandParser().parse(arguments);","lastModifiedDate":"2022-03-14"},{"lineNumber":75,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":76,"author":{"gitId":"zxgoh"},"content":"        case DeleteDishCommand.COMMAND_WORD:","lastModifiedDate":"2022-03-16"},{"lineNumber":77,"author":{"gitId":"zxgoh"},"content":"            return new DeleteDishCommandParser().parse(arguments);","lastModifiedDate":"2022-03-16"},{"lineNumber":78,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-03-16"},{"lineNumber":79,"author":{"gitId":"-"},"content":"        case ClearCommand.COMMAND_WORD:","lastModifiedDate":"2016-09-21"},{"lineNumber":80,"author":{"gitId":"-"},"content":"            return new ClearCommand();","lastModifiedDate":"2016-09-21"},{"lineNumber":81,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":82,"author":{"gitId":"-"},"content":"        case FindCommand.COMMAND_WORD:","lastModifiedDate":"2016-09-21"},{"lineNumber":83,"author":{"gitId":"-"},"content":"            return new FindCommandParser().parse(arguments);","lastModifiedDate":"2017-01-26"},{"lineNumber":84,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":85,"author":{"gitId":"-"},"content":"        case ListCommand.COMMAND_WORD:","lastModifiedDate":"2016-09-21"},{"lineNumber":86,"author":{"gitId":"-"},"content":"            return new ListCommand();","lastModifiedDate":"2016-09-21"},{"lineNumber":87,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":88,"author":{"gitId":"zxgoh"},"content":"        case ListDishCommand.COMMAND_WORD:","lastModifiedDate":"2022-03-16"},{"lineNumber":89,"author":{"gitId":"zxgoh"},"content":"            return new ListDishCommand();","lastModifiedDate":"2022-03-16"},{"lineNumber":90,"author":{"gitId":"zxgoh"},"content":"","lastModifiedDate":"2022-03-16"},{"lineNumber":91,"author":{"gitId":"-"},"content":"        case ExitCommand.COMMAND_WORD:","lastModifiedDate":"2016-08-24"},{"lineNumber":92,"author":{"gitId":"-"},"content":"            return new ExitCommand();","lastModifiedDate":"2016-08-24"},{"lineNumber":93,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":94,"author":{"gitId":"-"},"content":"        case HelpCommand.COMMAND_WORD:","lastModifiedDate":"2016-08-26"},{"lineNumber":95,"author":{"gitId":"-"},"content":"            return new HelpCommand();","lastModifiedDate":"2016-08-24"},{"lineNumber":96,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-14"},{"lineNumber":97,"author":{"gitId":"zxgoh"},"content":"        case AddOrderCommand.COMMAND_WORD:","lastModifiedDate":"2022-03-16"},{"lineNumber":98,"author":{"gitId":"zxgoh"},"content":"            return new AddOrderCommandParser().parse(arguments);","lastModifiedDate":"2022-03-16"},{"lineNumber":99,"author":{"gitId":"zxgoh"},"content":"","lastModifiedDate":"2022-03-16"},{"lineNumber":100,"author":{"gitId":"zxgoh"},"content":"        case EditOrderStatusCommand.COMMAND_WORD:","lastModifiedDate":"2022-03-16"},{"lineNumber":101,"author":{"gitId":"zxgoh"},"content":"            return new EditOrderStatusCommandParser().parse(arguments);","lastModifiedDate":"2022-03-16"},{"lineNumber":102,"author":{"gitId":"zxgoh"},"content":"","lastModifiedDate":"2022-03-16"},{"lineNumber":103,"author":{"gitId":"xzzz3"},"content":"        case EditOrderCommand.COMMAND_WORD:","lastModifiedDate":"2022-03-28"},{"lineNumber":104,"author":{"gitId":"xzzz3"},"content":"            return new EditOrderCommandParser().parse(arguments);","lastModifiedDate":"2022-03-28"},{"lineNumber":105,"author":{"gitId":"xzzz3"},"content":"","lastModifiedDate":"2022-03-28"},{"lineNumber":106,"author":{"gitId":"zxgoh"},"content":"        case FindOrderCommand.COMMAND_WORD:","lastModifiedDate":"2022-03-16"},{"lineNumber":107,"author":{"gitId":"zxgoh"},"content":"            return new FindOrderCommandParser().parse(arguments);","lastModifiedDate":"2022-03-16"},{"lineNumber":108,"author":{"gitId":"zxgoh"},"content":"","lastModifiedDate":"2022-03-16"},{"lineNumber":109,"author":{"gitId":"jaegarpoon"},"content":"        case ListOrderCommand.COMMAND_WORD:","lastModifiedDate":"2022-03-29"},{"lineNumber":110,"author":{"gitId":"jaegarpoon"},"content":"            return new ListOrderCommandParser().parse(arguments);","lastModifiedDate":"2022-03-29"},{"lineNumber":111,"author":{"gitId":"jaegarpoon"},"content":"","lastModifiedDate":"2022-03-29"},{"lineNumber":112,"author":{"gitId":"zxgoh"},"content":"        case AddDriverCommand.COMMAND_WORD:","lastModifiedDate":"2022-03-16"},{"lineNumber":113,"author":{"gitId":"zxgoh"},"content":"            return new AddDriverCommandParser().parse(arguments);","lastModifiedDate":"2022-03-16"},{"lineNumber":114,"author":{"gitId":"zxgoh"},"content":"","lastModifiedDate":"2022-03-16"},{"lineNumber":115,"author":{"gitId":"zxgoh"},"content":"        case DeleteDriverCommand.COMMAND_WORD:","lastModifiedDate":"2022-03-16"},{"lineNumber":116,"author":{"gitId":"zxgoh"},"content":"            return new DeleteDriverCommandParser().parse(arguments);","lastModifiedDate":"2022-03-16"},{"lineNumber":117,"author":{"gitId":"zxgoh"},"content":"","lastModifiedDate":"2022-03-16"},{"lineNumber":118,"author":{"gitId":"zxgoh"},"content":"        case ListDriverCommand.COMMAND_WORD:","lastModifiedDate":"2022-03-16"},{"lineNumber":119,"author":{"gitId":"zxgoh"},"content":"            return new ListDriverCommandParser().parse(arguments);","lastModifiedDate":"2022-03-16"},{"lineNumber":120,"author":{"gitId":"zxgoh"},"content":"","lastModifiedDate":"2022-03-16"},{"lineNumber":121,"author":{"gitId":"hieunm1821"},"content":"        case EditDriverCommand.COMMAND_WORD:","lastModifiedDate":"2022-03-27"},{"lineNumber":122,"author":{"gitId":"hieunm1821"},"content":"            return new EditDriverCommandParser().parse(arguments);","lastModifiedDate":"2022-03-27"},{"lineNumber":123,"author":{"gitId":"hieunm1821"},"content":"","lastModifiedDate":"2022-03-27"},{"lineNumber":124,"author":{"gitId":"jaegarpoon"},"content":"        case RevenueCommand.COMMAND_WORD:","lastModifiedDate":"2022-03-30"},{"lineNumber":125,"author":{"gitId":"jaegarpoon"},"content":"            return new RevenueCommand();","lastModifiedDate":"2022-03-30"},{"lineNumber":126,"author":{"gitId":"jaegarpoon"},"content":"","lastModifiedDate":"2022-03-30"},{"lineNumber":127,"author":{"gitId":"-"},"content":"        default:","lastModifiedDate":"2016-08-26"},{"lineNumber":128,"author":{"gitId":"-"},"content":"            throw new ParseException(MESSAGE_UNKNOWN_COMMAND);","lastModifiedDate":"2017-03-11"},{"lineNumber":129,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-08-24"},{"lineNumber":130,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":131,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":132,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-24"}],"authorContributionMap":{"hieunm1821":4,"xzzz3":4,"jaegarpoon":12,"-":69,"zxgoh":43}},{"path":"src/main/java/seedu/address/logic/parser/ArgumentTokenizer.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2016-10-16"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.util.ArrayList;","lastModifiedDate":"2017-01-18"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import java.util.Arrays;","lastModifiedDate":"2018-01-21"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.util.List;","lastModifiedDate":"2017-01-18"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.util.stream.Collectors;","lastModifiedDate":"2018-01-21"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":8,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-10-16"},{"lineNumber":9,"author":{"gitId":"-"},"content":" * Tokenizes arguments string of the form: {@code preamble \u003cprefix\u003evalue \u003cprefix\u003evalue ...}\u003cbr\u003e","lastModifiedDate":"2016-10-16"},{"lineNumber":10,"author":{"gitId":"-"},"content":" *     e.g. {@code some preamble text t/ 11.00 t/12.00 k/ m/ July}  where prefixes are {@code t/ k/ m/}.\u003cbr\u003e","lastModifiedDate":"2017-05-19"},{"lineNumber":11,"author":{"gitId":"-"},"content":" * 1. An argument\u0027s value can be an empty string e.g. the value of {@code k/} in the above example.\u003cbr\u003e","lastModifiedDate":"2017-03-25"},{"lineNumber":12,"author":{"gitId":"-"},"content":" * 2. Leading and trailing whitespaces of an argument value will be discarded.\u003cbr\u003e","lastModifiedDate":"2016-10-16"},{"lineNumber":13,"author":{"gitId":"-"},"content":" * 3. An argument may be repeated and all its values will be accumulated e.g. the value of {@code t/}","lastModifiedDate":"2017-05-19"},{"lineNumber":14,"author":{"gitId":"-"},"content":" *    in the above example.\u003cbr\u003e","lastModifiedDate":"2016-10-16"},{"lineNumber":15,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-10-16"},{"lineNumber":16,"author":{"gitId":"-"},"content":"public class ArgumentTokenizer {","lastModifiedDate":"2016-10-16"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-10-16"},{"lineNumber":19,"author":{"gitId":"-"},"content":"     * Tokenizes an arguments string and returns an {@code ArgumentMultimap} object that maps prefixes to their","lastModifiedDate":"2017-03-08"},{"lineNumber":20,"author":{"gitId":"-"},"content":"     * respective argument values. Only the given prefixes will be recognized in the arguments string.","lastModifiedDate":"2017-03-20"},{"lineNumber":21,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2017-03-08"},{"lineNumber":22,"author":{"gitId":"-"},"content":"     * @param argsString Arguments string of the form: {@code preamble \u003cprefix\u003evalue \u003cprefix\u003evalue ...}","lastModifiedDate":"2017-03-08"},{"lineNumber":23,"author":{"gitId":"-"},"content":"     * @param prefixes   Prefixes to tokenize the arguments string with","lastModifiedDate":"2017-03-20"},{"lineNumber":24,"author":{"gitId":"-"},"content":"     * @return           ArgumentMultimap object that maps prefixes to their arguments","lastModifiedDate":"2017-03-08"},{"lineNumber":25,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-10-16"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    public static ArgumentMultimap tokenize(String argsString, Prefix... prefixes) {","lastModifiedDate":"2017-03-20"},{"lineNumber":27,"author":{"gitId":"-"},"content":"        List\u003cPrefixPosition\u003e positions \u003d findAllPrefixPositions(argsString, prefixes);","lastModifiedDate":"2017-03-20"},{"lineNumber":28,"author":{"gitId":"-"},"content":"        return extractArguments(argsString, positions);","lastModifiedDate":"2017-03-08"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-10-16"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-10-16"},{"lineNumber":32,"author":{"gitId":"-"},"content":"     * Finds all zero-based prefix positions in the given arguments string.","lastModifiedDate":"2017-03-08"},{"lineNumber":33,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2017-03-08"},{"lineNumber":34,"author":{"gitId":"-"},"content":"     * @param argsString Arguments string of the form: {@code preamble \u003cprefix\u003evalue \u003cprefix\u003evalue ...}","lastModifiedDate":"2017-03-08"},{"lineNumber":35,"author":{"gitId":"-"},"content":"     * @param prefixes   Prefixes to find in the arguments string","lastModifiedDate":"2017-03-20"},{"lineNumber":36,"author":{"gitId":"-"},"content":"     * @return           List of zero-based prefix positions in the given arguments string","lastModifiedDate":"2017-03-08"},{"lineNumber":37,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-10-16"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    private static List\u003cPrefixPosition\u003e findAllPrefixPositions(String argsString, Prefix... prefixes) {","lastModifiedDate":"2017-03-20"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        return Arrays.stream(prefixes)","lastModifiedDate":"2018-01-21"},{"lineNumber":40,"author":{"gitId":"-"},"content":"                .flatMap(prefix -\u003e findPrefixPositions(argsString, prefix).stream())","lastModifiedDate":"2018-01-21"},{"lineNumber":41,"author":{"gitId":"-"},"content":"                .collect(Collectors.toList());","lastModifiedDate":"2018-01-21"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-10-16"},{"lineNumber":43,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-10-16"},{"lineNumber":45,"author":{"gitId":"-"},"content":"     * {@see findAllPrefixPositions}","lastModifiedDate":"2017-03-08"},{"lineNumber":46,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-10-16"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    private static List\u003cPrefixPosition\u003e findPrefixPositions(String argsString, Prefix prefix) {","lastModifiedDate":"2017-03-20"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        List\u003cPrefixPosition\u003e positions \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2016-10-16"},{"lineNumber":49,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":50,"author":{"gitId":"-"},"content":"        int prefixPosition \u003d findPrefixPosition(argsString, prefix.getPrefix(), 0);","lastModifiedDate":"2017-05-19"},{"lineNumber":51,"author":{"gitId":"-"},"content":"        while (prefixPosition !\u003d -1) {","lastModifiedDate":"2017-05-19"},{"lineNumber":52,"author":{"gitId":"-"},"content":"            PrefixPosition extendedPrefix \u003d new PrefixPosition(prefix, prefixPosition);","lastModifiedDate":"2017-05-19"},{"lineNumber":53,"author":{"gitId":"-"},"content":"            positions.add(extendedPrefix);","lastModifiedDate":"2016-10-16"},{"lineNumber":54,"author":{"gitId":"-"},"content":"            prefixPosition \u003d findPrefixPosition(argsString, prefix.getPrefix(), prefixPosition);","lastModifiedDate":"2017-05-19"},{"lineNumber":55,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-10-16"},{"lineNumber":56,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":57,"author":{"gitId":"-"},"content":"        return positions;","lastModifiedDate":"2016-10-16"},{"lineNumber":58,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-10-16"},{"lineNumber":59,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-05-19"},{"lineNumber":61,"author":{"gitId":"-"},"content":"     * Returns the index of the first occurrence of {@code prefix} in","lastModifiedDate":"2017-05-19"},{"lineNumber":62,"author":{"gitId":"-"},"content":"     * {@code argsString} starting from index {@code fromIndex}. An occurrence","lastModifiedDate":"2017-05-19"},{"lineNumber":63,"author":{"gitId":"-"},"content":"     * is valid if there is a whitespace before {@code prefix}. Returns -1 if no","lastModifiedDate":"2017-05-19"},{"lineNumber":64,"author":{"gitId":"-"},"content":"     * such occurrence can be found.","lastModifiedDate":"2017-05-19"},{"lineNumber":65,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2017-05-19"},{"lineNumber":66,"author":{"gitId":"-"},"content":"     * E.g if {@code argsString} \u003d \"e/hip/900\", {@code prefix} \u003d \"p/\" and","lastModifiedDate":"2017-05-19"},{"lineNumber":67,"author":{"gitId":"-"},"content":"     * {@code fromIndex} \u003d 0, this method returns -1 as there are no valid","lastModifiedDate":"2017-05-19"},{"lineNumber":68,"author":{"gitId":"-"},"content":"     * occurrences of \"p/\" with whitespace before it. However, if","lastModifiedDate":"2017-05-19"},{"lineNumber":69,"author":{"gitId":"-"},"content":"     * {@code argsString} \u003d \"e/hi p/900\", {@code prefix} \u003d \"p/\" and","lastModifiedDate":"2017-05-19"},{"lineNumber":70,"author":{"gitId":"-"},"content":"     * {@code fromIndex} \u003d 0, this method returns 5.","lastModifiedDate":"2017-05-19"},{"lineNumber":71,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-05-19"},{"lineNumber":72,"author":{"gitId":"-"},"content":"    private static int findPrefixPosition(String argsString, String prefix, int fromIndex) {","lastModifiedDate":"2017-05-19"},{"lineNumber":73,"author":{"gitId":"-"},"content":"        int prefixIndex \u003d argsString.indexOf(\" \" + prefix, fromIndex);","lastModifiedDate":"2017-05-19"},{"lineNumber":74,"author":{"gitId":"-"},"content":"        return prefixIndex \u003d\u003d -1 ? -1","lastModifiedDate":"2017-05-19"},{"lineNumber":75,"author":{"gitId":"-"},"content":"                : prefixIndex + 1; // +1 as offset for whitespace","lastModifiedDate":"2017-05-19"},{"lineNumber":76,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-19"},{"lineNumber":77,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-19"},{"lineNumber":78,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-10-16"},{"lineNumber":79,"author":{"gitId":"-"},"content":"     * Extracts prefixes and their argument values, and returns an {@code ArgumentMultimap} object that maps the","lastModifiedDate":"2017-03-08"},{"lineNumber":80,"author":{"gitId":"-"},"content":"     * extracted prefixes to their respective arguments. Prefixes are extracted based on their zero-based positions in","lastModifiedDate":"2017-03-08"},{"lineNumber":81,"author":{"gitId":"-"},"content":"     * {@code argsString}.","lastModifiedDate":"2017-03-08"},{"lineNumber":82,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2017-03-08"},{"lineNumber":83,"author":{"gitId":"-"},"content":"     * @param argsString      Arguments string of the form: {@code preamble \u003cprefix\u003evalue \u003cprefix\u003evalue ...}","lastModifiedDate":"2017-03-08"},{"lineNumber":84,"author":{"gitId":"-"},"content":"     * @param prefixPositions Zero-based positions of all prefixes in {@code argsString}","lastModifiedDate":"2017-03-08"},{"lineNumber":85,"author":{"gitId":"-"},"content":"     * @return                ArgumentMultimap object that maps prefixes to their arguments","lastModifiedDate":"2017-03-08"},{"lineNumber":86,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-10-16"},{"lineNumber":87,"author":{"gitId":"-"},"content":"    private static ArgumentMultimap extractArguments(String argsString, List\u003cPrefixPosition\u003e prefixPositions) {","lastModifiedDate":"2017-03-20"},{"lineNumber":88,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":89,"author":{"gitId":"-"},"content":"        // Sort by start position","lastModifiedDate":"2016-10-16"},{"lineNumber":90,"author":{"gitId":"-"},"content":"        prefixPositions.sort((prefix1, prefix2) -\u003e prefix1.getStartPosition() - prefix2.getStartPosition());","lastModifiedDate":"2016-10-16"},{"lineNumber":91,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":92,"author":{"gitId":"-"},"content":"        // Insert a PrefixPosition to represent the preamble","lastModifiedDate":"2016-10-16"},{"lineNumber":93,"author":{"gitId":"-"},"content":"        PrefixPosition preambleMarker \u003d new PrefixPosition(new Prefix(\"\"), 0);","lastModifiedDate":"2016-10-16"},{"lineNumber":94,"author":{"gitId":"-"},"content":"        prefixPositions.add(0, preambleMarker);","lastModifiedDate":"2016-10-16"},{"lineNumber":95,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":96,"author":{"gitId":"-"},"content":"        // Add a dummy PrefixPosition to represent the end of the string","lastModifiedDate":"2016-10-16"},{"lineNumber":97,"author":{"gitId":"-"},"content":"        PrefixPosition endPositionMarker \u003d new PrefixPosition(new Prefix(\"\"), argsString.length());","lastModifiedDate":"2016-10-16"},{"lineNumber":98,"author":{"gitId":"-"},"content":"        prefixPositions.add(endPositionMarker);","lastModifiedDate":"2016-10-16"},{"lineNumber":99,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":100,"author":{"gitId":"-"},"content":"        // Map prefixes to their argument values (if any)","lastModifiedDate":"2017-03-08"},{"lineNumber":101,"author":{"gitId":"-"},"content":"        ArgumentMultimap argMultimap \u003d new ArgumentMultimap();","lastModifiedDate":"2017-03-08"},{"lineNumber":102,"author":{"gitId":"-"},"content":"        for (int i \u003d 0; i \u003c prefixPositions.size() - 1; i++) {","lastModifiedDate":"2016-10-16"},{"lineNumber":103,"author":{"gitId":"-"},"content":"            // Extract and store prefixes and their arguments","lastModifiedDate":"2017-03-08"},{"lineNumber":104,"author":{"gitId":"-"},"content":"            Prefix argPrefix \u003d prefixPositions.get(i).getPrefix();","lastModifiedDate":"2017-03-08"},{"lineNumber":105,"author":{"gitId":"-"},"content":"            String argValue \u003d extractArgumentValue(argsString, prefixPositions.get(i), prefixPositions.get(i + 1));","lastModifiedDate":"2016-10-16"},{"lineNumber":106,"author":{"gitId":"-"},"content":"            argMultimap.put(argPrefix, argValue);","lastModifiedDate":"2017-03-08"},{"lineNumber":107,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-10-16"},{"lineNumber":108,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":109,"author":{"gitId":"-"},"content":"        return argMultimap;","lastModifiedDate":"2017-03-08"},{"lineNumber":110,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-10-16"},{"lineNumber":111,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":112,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-10-16"},{"lineNumber":113,"author":{"gitId":"-"},"content":"     * Returns the trimmed value of the argument in the arguments string specified by {@code currentPrefixPosition}.","lastModifiedDate":"2017-03-08"},{"lineNumber":114,"author":{"gitId":"-"},"content":"     * The end position of the value is determined by {@code nextPrefixPosition}.","lastModifiedDate":"2017-03-08"},{"lineNumber":115,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-10-16"},{"lineNumber":116,"author":{"gitId":"-"},"content":"    private static String extractArgumentValue(String argsString,","lastModifiedDate":"2017-03-20"},{"lineNumber":117,"author":{"gitId":"-"},"content":"                                        PrefixPosition currentPrefixPosition,","lastModifiedDate":"2016-10-16"},{"lineNumber":118,"author":{"gitId":"-"},"content":"                                        PrefixPosition nextPrefixPosition) {","lastModifiedDate":"2016-10-16"},{"lineNumber":119,"author":{"gitId":"-"},"content":"        Prefix prefix \u003d currentPrefixPosition.getPrefix();","lastModifiedDate":"2016-10-16"},{"lineNumber":120,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":121,"author":{"gitId":"-"},"content":"        int valueStartPos \u003d currentPrefixPosition.getStartPosition() + prefix.getPrefix().length();","lastModifiedDate":"2016-10-16"},{"lineNumber":122,"author":{"gitId":"-"},"content":"        String value \u003d argsString.substring(valueStartPos, nextPrefixPosition.getStartPosition());","lastModifiedDate":"2016-10-16"},{"lineNumber":123,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":124,"author":{"gitId":"-"},"content":"        return value.trim();","lastModifiedDate":"2016-10-16"},{"lineNumber":125,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-10-16"},{"lineNumber":126,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":127,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-10-16"},{"lineNumber":128,"author":{"gitId":"-"},"content":"     * Represents a prefix\u0027s position in an arguments string.","lastModifiedDate":"2017-03-08"},{"lineNumber":129,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-10-19"},{"lineNumber":130,"author":{"gitId":"-"},"content":"    private static class PrefixPosition {","lastModifiedDate":"2017-03-20"},{"lineNumber":131,"author":{"gitId":"zxgoh"},"content":"        private final int startPosition;","lastModifiedDate":"2022-03-16"},{"lineNumber":132,"author":{"gitId":"-"},"content":"        private final Prefix prefix;","lastModifiedDate":"2016-10-19"},{"lineNumber":133,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-19"},{"lineNumber":134,"author":{"gitId":"-"},"content":"        PrefixPosition(Prefix prefix, int startPosition) {","lastModifiedDate":"2016-10-19"},{"lineNumber":135,"author":{"gitId":"-"},"content":"            this.prefix \u003d prefix;","lastModifiedDate":"2016-10-19"},{"lineNumber":136,"author":{"gitId":"-"},"content":"            this.startPosition \u003d startPosition;","lastModifiedDate":"2016-10-19"},{"lineNumber":137,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-10-19"},{"lineNumber":138,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-19"},{"lineNumber":139,"author":{"gitId":"-"},"content":"        int getStartPosition() {","lastModifiedDate":"2016-10-19"},{"lineNumber":140,"author":{"gitId":"-"},"content":"            return startPosition;","lastModifiedDate":"2018-08-14"},{"lineNumber":141,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-10-19"},{"lineNumber":142,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-19"},{"lineNumber":143,"author":{"gitId":"-"},"content":"        Prefix getPrefix() {","lastModifiedDate":"2016-10-19"},{"lineNumber":144,"author":{"gitId":"-"},"content":"            return prefix;","lastModifiedDate":"2018-08-14"},{"lineNumber":145,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-10-19"},{"lineNumber":146,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-10-19"},{"lineNumber":147,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-19"},{"lineNumber":148,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-10-16"}],"authorContributionMap":{"-":147,"zxgoh":1}},{"path":"src/main/java/seedu/address/logic/parser/CliSyntax.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2017-02-11"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-11"},{"lineNumber":3,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-02-11"},{"lineNumber":4,"author":{"gitId":"-"},"content":" * Contains Command Line Interface (CLI) syntax definitions common to multiple commands","lastModifiedDate":"2017-02-11"},{"lineNumber":5,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-02-11"},{"lineNumber":6,"author":{"gitId":"-"},"content":"public class CliSyntax {","lastModifiedDate":"2017-02-11"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-11"},{"lineNumber":8,"author":{"gitId":"-"},"content":"    /* Prefix definitions */","lastModifiedDate":"2017-02-11"},{"lineNumber":9,"author":{"gitId":"-"},"content":"    public static final Prefix PREFIX_NAME \u003d new Prefix(\"n/\");","lastModifiedDate":"2017-06-06"},{"lineNumber":10,"author":{"gitId":"-"},"content":"    public static final Prefix PREFIX_PHONE \u003d new Prefix(\"p/\");","lastModifiedDate":"2017-02-11"},{"lineNumber":11,"author":{"gitId":"-"},"content":"    public static final Prefix PREFIX_EMAIL \u003d new Prefix(\"e/\");","lastModifiedDate":"2017-02-11"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    public static final Prefix PREFIX_ADDRESS \u003d new Prefix(\"a/\");","lastModifiedDate":"2017-02-11"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    public static final Prefix PREFIX_TAG \u003d new Prefix(\"t/\");","lastModifiedDate":"2017-02-11"},{"lineNumber":14,"author":{"gitId":"xzzz3"},"content":"    public static final Prefix PREFIX_DISH \u003d new Prefix(\"d/\");","lastModifiedDate":"2022-03-10"},{"lineNumber":15,"author":{"gitId":"xzzz3"},"content":"    public static final Prefix PREFIX_STATUS \u003d new Prefix(\"s/\");","lastModifiedDate":"2022-03-11"},{"lineNumber":16,"author":{"gitId":"jaegarpoon"},"content":"    public static final Prefix PREFIX_PRICE \u003d new Prefix(\"$/\");","lastModifiedDate":"2022-03-27"},{"lineNumber":17,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-02-11"}],"authorContributionMap":{"xzzz3":2,"jaegarpoon":1,"-":14}},{"path":"src/main/java/seedu/address/logic/parser/DeleteCustomerCommandParser.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"zxgoh"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2022-03-14"},{"lineNumber":2,"author":{"gitId":"zxgoh"},"content":"","lastModifiedDate":"2022-03-14"},{"lineNumber":3,"author":{"gitId":"zxgoh"},"content":"import static seedu.address.commons.core.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2022-03-14"},{"lineNumber":4,"author":{"gitId":"zxgoh"},"content":"","lastModifiedDate":"2022-03-14"},{"lineNumber":5,"author":{"gitId":"zxgoh"},"content":"import seedu.address.commons.core.index.Index;","lastModifiedDate":"2022-03-14"},{"lineNumber":6,"author":{"gitId":"zxgoh"},"content":"import seedu.address.logic.commands.DeleteCustomerCommand;","lastModifiedDate":"2022-03-14"},{"lineNumber":7,"author":{"gitId":"zxgoh"},"content":"import seedu.address.logic.parser.exceptions.ParseException;","lastModifiedDate":"2022-03-14"},{"lineNumber":8,"author":{"gitId":"zxgoh"},"content":"","lastModifiedDate":"2022-03-14"},{"lineNumber":9,"author":{"gitId":"zxgoh"},"content":"/**","lastModifiedDate":"2022-03-14"},{"lineNumber":10,"author":{"gitId":"zxgoh"},"content":" * Parses input arguments and creates a new DeleteCustomerCommand object","lastModifiedDate":"2022-03-14"},{"lineNumber":11,"author":{"gitId":"zxgoh"},"content":" */","lastModifiedDate":"2022-03-14"},{"lineNumber":12,"author":{"gitId":"zxgoh"},"content":"public class DeleteCustomerCommandParser implements Parser\u003cDeleteCustomerCommand\u003e {","lastModifiedDate":"2022-03-14"},{"lineNumber":13,"author":{"gitId":"zxgoh"},"content":"","lastModifiedDate":"2022-03-14"},{"lineNumber":14,"author":{"gitId":"zxgoh"},"content":"    /**","lastModifiedDate":"2022-03-14"},{"lineNumber":15,"author":{"gitId":"zxgoh"},"content":"     * Parses the given {@code String} of arguments in the context of the DeleteCustomerCommand","lastModifiedDate":"2022-03-14"},{"lineNumber":16,"author":{"gitId":"zxgoh"},"content":"     * and returns a DeleteCustomerCommand object for execution.","lastModifiedDate":"2022-03-14"},{"lineNumber":17,"author":{"gitId":"zxgoh"},"content":"     * @throws ParseException if the user input does not conform the expected format","lastModifiedDate":"2022-03-14"},{"lineNumber":18,"author":{"gitId":"zxgoh"},"content":"     */","lastModifiedDate":"2022-03-14"},{"lineNumber":19,"author":{"gitId":"zxgoh"},"content":"    public DeleteCustomerCommand parse(String args) throws ParseException {","lastModifiedDate":"2022-03-14"},{"lineNumber":20,"author":{"gitId":"zxgoh"},"content":"        try {","lastModifiedDate":"2022-03-14"},{"lineNumber":21,"author":{"gitId":"zxgoh"},"content":"            Index index \u003d ParserUtil.parseIndex(args);","lastModifiedDate":"2022-03-14"},{"lineNumber":22,"author":{"gitId":"zxgoh"},"content":"            return new DeleteCustomerCommand(index);","lastModifiedDate":"2022-03-14"},{"lineNumber":23,"author":{"gitId":"zxgoh"},"content":"        } catch (ParseException pe) {","lastModifiedDate":"2022-03-14"},{"lineNumber":24,"author":{"gitId":"zxgoh"},"content":"            throw new ParseException(","lastModifiedDate":"2022-03-14"},{"lineNumber":25,"author":{"gitId":"zxgoh"},"content":"                    String.format(MESSAGE_INVALID_COMMAND_FORMAT, DeleteCustomerCommand.MESSAGE_USAGE), pe);","lastModifiedDate":"2022-03-14"},{"lineNumber":26,"author":{"gitId":"zxgoh"},"content":"        }","lastModifiedDate":"2022-03-14"},{"lineNumber":27,"author":{"gitId":"zxgoh"},"content":"    }","lastModifiedDate":"2022-03-14"},{"lineNumber":28,"author":{"gitId":"zxgoh"},"content":"","lastModifiedDate":"2022-03-14"},{"lineNumber":29,"author":{"gitId":"zxgoh"},"content":"}","lastModifiedDate":"2022-03-14"}],"authorContributionMap":{"zxgoh":29}},{"path":"src/main/java/seedu/address/logic/parser/DeleteDishCommandParser.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2022-03-11"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-03-11"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static seedu.address.commons.core.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2022-03-11"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-03-11"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.index.Index;","lastModifiedDate":"2022-03-11"},{"lineNumber":6,"author":{"gitId":"jaegarpoon"},"content":"import seedu.address.logic.commands.DeleteDishCommand;","lastModifiedDate":"2022-03-11"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import seedu.address.logic.parser.exceptions.ParseException;","lastModifiedDate":"2022-03-11"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-03-11"},{"lineNumber":9,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2022-03-11"},{"lineNumber":10,"author":{"gitId":"-"},"content":" * Parses input arguments and creates a new DeleteCommand object","lastModifiedDate":"2022-03-11"},{"lineNumber":11,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2022-03-11"},{"lineNumber":12,"author":{"gitId":"jaegarpoon"},"content":"public class DeleteDishCommandParser implements Parser\u003cDeleteDishCommand\u003e {","lastModifiedDate":"2022-03-11"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-03-11"},{"lineNumber":14,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2022-03-11"},{"lineNumber":15,"author":{"gitId":"-"},"content":"     * Parses the given {@code String} of arguments in the context of the DeleteCommand","lastModifiedDate":"2022-03-11"},{"lineNumber":16,"author":{"gitId":"-"},"content":"     * and returns a DeleteCommand object for execution.","lastModifiedDate":"2022-03-11"},{"lineNumber":17,"author":{"gitId":"-"},"content":"     * @throws ParseException if the user input does not conform the expected format","lastModifiedDate":"2022-03-11"},{"lineNumber":18,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2022-03-11"},{"lineNumber":19,"author":{"gitId":"jaegarpoon"},"content":"    public DeleteDishCommand parse(String args) throws ParseException {","lastModifiedDate":"2022-03-11"},{"lineNumber":20,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2022-03-11"},{"lineNumber":21,"author":{"gitId":"-"},"content":"            Index index \u003d ParserUtil.parseIndex(args);","lastModifiedDate":"2022-03-11"},{"lineNumber":22,"author":{"gitId":"jaegarpoon"},"content":"            return new DeleteDishCommand(index);","lastModifiedDate":"2022-03-11"},{"lineNumber":23,"author":{"gitId":"-"},"content":"        } catch (ParseException pe) {","lastModifiedDate":"2022-03-11"},{"lineNumber":24,"author":{"gitId":"-"},"content":"            throw new ParseException(","lastModifiedDate":"2022-03-11"},{"lineNumber":25,"author":{"gitId":"jaegarpoon"},"content":"                    String.format(MESSAGE_INVALID_COMMAND_FORMAT, DeleteDishCommand.MESSAGE_USAGE), pe);","lastModifiedDate":"2022-03-11"},{"lineNumber":26,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2022-03-11"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2022-03-11"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-03-11"},{"lineNumber":29,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2022-03-11"}],"authorContributionMap":{"jaegarpoon":5,"-":24}},{"path":"src/main/java/seedu/address/logic/parser/DeleteDriverCommandParser.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"hieunm1821"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2022-03-10"},{"lineNumber":2,"author":{"gitId":"hieunm1821"},"content":"","lastModifiedDate":"2022-03-10"},{"lineNumber":3,"author":{"gitId":"hieunm1821"},"content":"import static seedu.address.commons.core.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2022-03-10"},{"lineNumber":4,"author":{"gitId":"hieunm1821"},"content":"","lastModifiedDate":"2022-03-10"},{"lineNumber":5,"author":{"gitId":"hieunm1821"},"content":"import seedu.address.commons.core.index.Index;","lastModifiedDate":"2022-03-10"},{"lineNumber":6,"author":{"gitId":"hieunm1821"},"content":"import seedu.address.logic.commands.DeleteDriverCommand;","lastModifiedDate":"2022-03-10"},{"lineNumber":7,"author":{"gitId":"hieunm1821"},"content":"import seedu.address.logic.parser.exceptions.ParseException;","lastModifiedDate":"2022-03-10"},{"lineNumber":8,"author":{"gitId":"hieunm1821"},"content":"","lastModifiedDate":"2022-03-10"},{"lineNumber":9,"author":{"gitId":"hieunm1821"},"content":"public class DeleteDriverCommandParser implements Parser\u003cDeleteDriverCommand\u003e {","lastModifiedDate":"2022-03-10"},{"lineNumber":10,"author":{"gitId":"hieunm1821"},"content":"","lastModifiedDate":"2022-03-11"},{"lineNumber":11,"author":{"gitId":"hieunm1821"},"content":"    /**","lastModifiedDate":"2022-03-11"},{"lineNumber":12,"author":{"gitId":"hieunm1821"},"content":"     * Parses the given {@code String} of arguments in the context of the DeleteDriverCommand","lastModifiedDate":"2022-03-11"},{"lineNumber":13,"author":{"gitId":"hieunm1821"},"content":"     * and returns a DeleteDriverCommand object for execution.","lastModifiedDate":"2022-03-11"},{"lineNumber":14,"author":{"gitId":"hieunm1821"},"content":"     * @throws ParseException if the user input does not conform the expected format","lastModifiedDate":"2022-03-11"},{"lineNumber":15,"author":{"gitId":"hieunm1821"},"content":"     */","lastModifiedDate":"2022-03-11"},{"lineNumber":16,"author":{"gitId":"hieunm1821"},"content":"    public DeleteDriverCommand parse(String args) throws ParseException {","lastModifiedDate":"2022-03-10"},{"lineNumber":17,"author":{"gitId":"hieunm1821"},"content":"        try {","lastModifiedDate":"2022-03-10"},{"lineNumber":18,"author":{"gitId":"hieunm1821"},"content":"            Index index \u003d ParserUtil.parseIndex(args);","lastModifiedDate":"2022-03-10"},{"lineNumber":19,"author":{"gitId":"hieunm1821"},"content":"            return new DeleteDriverCommand(index);","lastModifiedDate":"2022-03-10"},{"lineNumber":20,"author":{"gitId":"hieunm1821"},"content":"        } catch (ParseException pe) {","lastModifiedDate":"2022-03-10"},{"lineNumber":21,"author":{"gitId":"hieunm1821"},"content":"            throw new ParseException(","lastModifiedDate":"2022-03-10"},{"lineNumber":22,"author":{"gitId":"hieunm1821"},"content":"                    String.format(MESSAGE_INVALID_COMMAND_FORMAT, DeleteDriverCommand.MESSAGE_USAGE), pe);","lastModifiedDate":"2022-03-10"},{"lineNumber":23,"author":{"gitId":"hieunm1821"},"content":"        }","lastModifiedDate":"2022-03-10"},{"lineNumber":24,"author":{"gitId":"hieunm1821"},"content":"    }","lastModifiedDate":"2022-03-10"},{"lineNumber":25,"author":{"gitId":"hieunm1821"},"content":"}","lastModifiedDate":"2022-03-10"}],"authorContributionMap":{"hieunm1821":25}},{"path":"src/main/java/seedu/address/logic/parser/EditCustomerCommandParser.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2017-01-26"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2017-05-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static seedu.address.commons.core.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2017-01-26"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_ADDRESS;","lastModifiedDate":"2017-01-26"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_NAME;","lastModifiedDate":"2017-06-06"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_PHONE;","lastModifiedDate":"2017-01-26"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.index.Index;","lastModifiedDate":"2017-05-25"},{"lineNumber":10,"author":{"gitId":"zxgoh"},"content":"import seedu.address.logic.commands.EditCustomerCommand;","lastModifiedDate":"2022-03-30"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import seedu.address.logic.parser.exceptions.ParseException;","lastModifiedDate":"2017-03-11"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":13,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-01-26"},{"lineNumber":14,"author":{"gitId":"zxgoh"},"content":" * Parses input arguments and creates a new EditCustomerCommand object","lastModifiedDate":"2022-03-30"},{"lineNumber":15,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-01-26"},{"lineNumber":16,"author":{"gitId":"zxgoh"},"content":"public class EditCustomerCommandParser implements Parser\u003cEditCustomerCommand\u003e {","lastModifiedDate":"2022-03-30"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-01-26"},{"lineNumber":19,"author":{"gitId":"zxgoh"},"content":"     * Parses the given {@code String} of arguments in the context of the EditCustomerCommand","lastModifiedDate":"2022-03-30"},{"lineNumber":20,"author":{"gitId":"zxgoh"},"content":"     * and returns an EditCustomerCommand object for execution.","lastModifiedDate":"2022-03-30"},{"lineNumber":21,"author":{"gitId":"-"},"content":"     * @throws ParseException if the user input does not conform the expected format","lastModifiedDate":"2017-03-11"},{"lineNumber":22,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-01-26"},{"lineNumber":23,"author":{"gitId":"zxgoh"},"content":"    public EditCustomerCommand parse(String args) throws ParseException {","lastModifiedDate":"2022-03-30"},{"lineNumber":24,"author":{"gitId":"-"},"content":"        requireNonNull(args);","lastModifiedDate":"2017-05-15"},{"lineNumber":25,"author":{"gitId":"-"},"content":"        ArgumentMultimap argMultimap \u003d","lastModifiedDate":"2017-03-20"},{"lineNumber":26,"author":{"gitId":"zxgoh"},"content":"                ArgumentTokenizer.tokenize(args, PREFIX_NAME, PREFIX_PHONE, PREFIX_ADDRESS);","lastModifiedDate":"2022-03-31"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-15"},{"lineNumber":28,"author":{"gitId":"-"},"content":"        Index index;","lastModifiedDate":"2017-05-25"},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-15"},{"lineNumber":30,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2017-05-15"},{"lineNumber":31,"author":{"gitId":"-"},"content":"            index \u003d ParserUtil.parseIndex(argMultimap.getPreamble());","lastModifiedDate":"2017-06-06"},{"lineNumber":32,"author":{"gitId":"-"},"content":"        } catch (ParseException pe) {","lastModifiedDate":"2018-07-10"},{"lineNumber":33,"author":{"gitId":"zxgoh"},"content":"            throw new ParseException(String.format(MESSAGE_INVALID_COMMAND_FORMAT,","lastModifiedDate":"2022-03-30"},{"lineNumber":34,"author":{"gitId":"zxgoh"},"content":"                    EditCustomerCommand.MESSAGE_USAGE), pe);","lastModifiedDate":"2022-03-30"},{"lineNumber":35,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-01-26"},{"lineNumber":36,"author":{"gitId":"zxgoh"},"content":"        EditCustomerCommand.EditCustomerDescriptor editCustomerDescriptor \u003d","lastModifiedDate":"2022-03-30"},{"lineNumber":37,"author":{"gitId":"zxgoh"},"content":"                new EditCustomerCommand.EditCustomerDescriptor();","lastModifiedDate":"2022-03-30"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        if (argMultimap.getValue(PREFIX_NAME).isPresent()) {","lastModifiedDate":"2018-07-10"},{"lineNumber":39,"author":{"gitId":"zxgoh"},"content":"            editCustomerDescriptor.setName(ParserUtil.parseNameCustomer(argMultimap.getValue(PREFIX_NAME).get()));","lastModifiedDate":"2022-03-31"},{"lineNumber":40,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-07-10"},{"lineNumber":41,"author":{"gitId":"-"},"content":"        if (argMultimap.getValue(PREFIX_PHONE).isPresent()) {","lastModifiedDate":"2018-07-10"},{"lineNumber":42,"author":{"gitId":"zxgoh"},"content":"            editCustomerDescriptor.setPhone(ParserUtil.parsePhoneCustomer(argMultimap.getValue(PREFIX_PHONE).get()));","lastModifiedDate":"2022-03-31"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-07-10"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        if (argMultimap.getValue(PREFIX_ADDRESS).isPresent()) {","lastModifiedDate":"2018-07-10"},{"lineNumber":45,"author":{"gitId":"zxgoh"},"content":"            editCustomerDescriptor.setAddress(","lastModifiedDate":"2022-03-31"},{"lineNumber":46,"author":{"gitId":"zxgoh"},"content":"                    ParserUtil.parseAddressCustomer(argMultimap.getValue(PREFIX_ADDRESS).get()));","lastModifiedDate":"2022-03-31"},{"lineNumber":47,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-07-10"},{"lineNumber":48,"author":{"gitId":"zxgoh"},"content":"        if (!editCustomerDescriptor.isAnyFieldEdited()) {","lastModifiedDate":"2022-03-30"},{"lineNumber":49,"author":{"gitId":"zxgoh"},"content":"            throw new ParseException(EditCustomerCommand.MESSAGE_NOT_EDITED);","lastModifiedDate":"2022-03-30"},{"lineNumber":50,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-01-26"},{"lineNumber":51,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":52,"author":{"gitId":"zxgoh"},"content":"        return new EditCustomerCommand(index, editCustomerDescriptor);","lastModifiedDate":"2022-03-30"},{"lineNumber":53,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-01-26"},{"lineNumber":54,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":55,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":56,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-01-26"}],"authorContributionMap":{"-":38,"zxgoh":18}},{"path":"src/main/java/seedu/address/logic/parser/EditDishCommandParser.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"jaegarpoon"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2022-03-27"},{"lineNumber":2,"author":{"gitId":"jaegarpoon"},"content":"","lastModifiedDate":"2022-03-27"},{"lineNumber":3,"author":{"gitId":"jaegarpoon"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2022-03-27"},{"lineNumber":4,"author":{"gitId":"jaegarpoon"},"content":"import static seedu.address.commons.core.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2022-03-27"},{"lineNumber":5,"author":{"gitId":"jaegarpoon"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_NAME;","lastModifiedDate":"2022-03-27"},{"lineNumber":6,"author":{"gitId":"jaegarpoon"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_PRICE;","lastModifiedDate":"2022-03-27"},{"lineNumber":7,"author":{"gitId":"jaegarpoon"},"content":"","lastModifiedDate":"2022-03-27"},{"lineNumber":8,"author":{"gitId":"jaegarpoon"},"content":"import seedu.address.commons.core.index.Index;","lastModifiedDate":"2022-03-27"},{"lineNumber":9,"author":{"gitId":"jaegarpoon"},"content":"import seedu.address.logic.commands.EditDishCommand;","lastModifiedDate":"2022-03-27"},{"lineNumber":10,"author":{"gitId":"jaegarpoon"},"content":"import seedu.address.logic.commands.EditDishCommand.EditDishDescriptor;","lastModifiedDate":"2022-03-27"},{"lineNumber":11,"author":{"gitId":"jaegarpoon"},"content":"import seedu.address.logic.parser.exceptions.ParseException;","lastModifiedDate":"2022-03-27"},{"lineNumber":12,"author":{"gitId":"jaegarpoon"},"content":"","lastModifiedDate":"2022-03-27"},{"lineNumber":13,"author":{"gitId":"jaegarpoon"},"content":"/**","lastModifiedDate":"2022-03-27"},{"lineNumber":14,"author":{"gitId":"zxgoh"},"content":" * Parses input arguments and creates a new EditDishCommand object","lastModifiedDate":"2022-03-31"},{"lineNumber":15,"author":{"gitId":"jaegarpoon"},"content":" */","lastModifiedDate":"2022-03-27"},{"lineNumber":16,"author":{"gitId":"jaegarpoon"},"content":"public class EditDishCommandParser implements Parser\u003cEditDishCommand\u003e {","lastModifiedDate":"2022-03-27"},{"lineNumber":17,"author":{"gitId":"jaegarpoon"},"content":"","lastModifiedDate":"2022-03-27"},{"lineNumber":18,"author":{"gitId":"jaegarpoon"},"content":"    /**","lastModifiedDate":"2022-03-27"},{"lineNumber":19,"author":{"gitId":"jaegarpoon"},"content":"     * Parses the given {@code String} of arguments in the context of the EditDishCommand","lastModifiedDate":"2022-03-27"},{"lineNumber":20,"author":{"gitId":"jaegarpoon"},"content":"     * and returns an EditDishCommand object for execution.","lastModifiedDate":"2022-03-27"},{"lineNumber":21,"author":{"gitId":"jaegarpoon"},"content":"     * @throws ParseException if the user input does not conform the expected format","lastModifiedDate":"2022-03-27"},{"lineNumber":22,"author":{"gitId":"jaegarpoon"},"content":"     */","lastModifiedDate":"2022-03-27"},{"lineNumber":23,"author":{"gitId":"jaegarpoon"},"content":"    public EditDishCommand parse(String args) throws ParseException {","lastModifiedDate":"2022-03-27"},{"lineNumber":24,"author":{"gitId":"jaegarpoon"},"content":"        requireNonNull(args);","lastModifiedDate":"2022-03-27"},{"lineNumber":25,"author":{"gitId":"jaegarpoon"},"content":"        ArgumentMultimap argMultimap \u003d","lastModifiedDate":"2022-03-27"},{"lineNumber":26,"author":{"gitId":"jaegarpoon"},"content":"                ArgumentTokenizer.tokenize(args, PREFIX_NAME, PREFIX_PRICE);","lastModifiedDate":"2022-03-27"},{"lineNumber":27,"author":{"gitId":"jaegarpoon"},"content":"","lastModifiedDate":"2022-03-27"},{"lineNumber":28,"author":{"gitId":"jaegarpoon"},"content":"        Index index;","lastModifiedDate":"2022-03-27"},{"lineNumber":29,"author":{"gitId":"jaegarpoon"},"content":"","lastModifiedDate":"2022-03-27"},{"lineNumber":30,"author":{"gitId":"jaegarpoon"},"content":"        try {","lastModifiedDate":"2022-03-27"},{"lineNumber":31,"author":{"gitId":"jaegarpoon"},"content":"            index \u003d ParserUtil.parseIndex(argMultimap.getPreamble());","lastModifiedDate":"2022-03-27"},{"lineNumber":32,"author":{"gitId":"jaegarpoon"},"content":"        } catch (ParseException pe) {","lastModifiedDate":"2022-03-27"},{"lineNumber":33,"author":{"gitId":"jaegarpoon"},"content":"            throw new ParseException(String.format(MESSAGE_INVALID_COMMAND_FORMAT, EditDishCommand.MESSAGE_USAGE), pe);","lastModifiedDate":"2022-03-27"},{"lineNumber":34,"author":{"gitId":"jaegarpoon"},"content":"        }","lastModifiedDate":"2022-03-27"},{"lineNumber":35,"author":{"gitId":"jaegarpoon"},"content":"","lastModifiedDate":"2022-03-27"},{"lineNumber":36,"author":{"gitId":"jaegarpoon"},"content":"        EditDishDescriptor editDishDescriptor \u003d new EditDishDescriptor();","lastModifiedDate":"2022-03-27"},{"lineNumber":37,"author":{"gitId":"jaegarpoon"},"content":"        if (argMultimap.getValue(PREFIX_NAME).isPresent()) {","lastModifiedDate":"2022-03-27"},{"lineNumber":38,"author":{"gitId":"jaegarpoon"},"content":"            editDishDescriptor.setName(ParserUtil.parseDishName(argMultimap.getValue(PREFIX_NAME).get()));","lastModifiedDate":"2022-03-27"},{"lineNumber":39,"author":{"gitId":"jaegarpoon"},"content":"        }","lastModifiedDate":"2022-03-27"},{"lineNumber":40,"author":{"gitId":"jaegarpoon"},"content":"        if (argMultimap.getValue(PREFIX_PRICE).isPresent()) {","lastModifiedDate":"2022-03-27"},{"lineNumber":41,"author":{"gitId":"jaegarpoon"},"content":"            editDishDescriptor.setPrice(ParserUtil.parsePrice(argMultimap.getValue(PREFIX_PRICE).get()));","lastModifiedDate":"2022-03-27"},{"lineNumber":42,"author":{"gitId":"jaegarpoon"},"content":"        }","lastModifiedDate":"2022-03-27"},{"lineNumber":43,"author":{"gitId":"jaegarpoon"},"content":"","lastModifiedDate":"2022-03-27"},{"lineNumber":44,"author":{"gitId":"jaegarpoon"},"content":"        return new EditDishCommand(index, editDishDescriptor);","lastModifiedDate":"2022-03-27"},{"lineNumber":45,"author":{"gitId":"jaegarpoon"},"content":"    }","lastModifiedDate":"2022-03-27"},{"lineNumber":46,"author":{"gitId":"jaegarpoon"},"content":"}","lastModifiedDate":"2022-03-27"}],"authorContributionMap":{"jaegarpoon":45,"zxgoh":1}},{"path":"src/main/java/seedu/address/logic/parser/EditDriverCommandParser.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"hieunm1821"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2022-03-27"},{"lineNumber":2,"author":{"gitId":"hieunm1821"},"content":"","lastModifiedDate":"2022-03-27"},{"lineNumber":3,"author":{"gitId":"hieunm1821"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2022-03-27"},{"lineNumber":4,"author":{"gitId":"hieunm1821"},"content":"import static seedu.address.commons.core.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2022-03-27"},{"lineNumber":5,"author":{"gitId":"hieunm1821"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_NAME;","lastModifiedDate":"2022-03-27"},{"lineNumber":6,"author":{"gitId":"hieunm1821"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_PHONE;","lastModifiedDate":"2022-03-27"},{"lineNumber":7,"author":{"gitId":"hieunm1821"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_STATUS;","lastModifiedDate":"2022-03-27"},{"lineNumber":8,"author":{"gitId":"hieunm1821"},"content":"","lastModifiedDate":"2022-03-27"},{"lineNumber":9,"author":{"gitId":"hieunm1821"},"content":"import seedu.address.commons.core.index.Index;","lastModifiedDate":"2022-03-27"},{"lineNumber":10,"author":{"gitId":"hieunm1821"},"content":"import seedu.address.logic.commands.EditDriverCommand;","lastModifiedDate":"2022-03-27"},{"lineNumber":11,"author":{"gitId":"hieunm1821"},"content":"import seedu.address.logic.commands.EditDriverCommand.EditDriverDescriptor;","lastModifiedDate":"2022-03-27"},{"lineNumber":12,"author":{"gitId":"hieunm1821"},"content":"import seedu.address.logic.parser.exceptions.ParseException;","lastModifiedDate":"2022-03-27"},{"lineNumber":13,"author":{"gitId":"hieunm1821"},"content":"","lastModifiedDate":"2022-03-27"},{"lineNumber":14,"author":{"gitId":"hieunm1821"},"content":"","lastModifiedDate":"2022-03-27"},{"lineNumber":15,"author":{"gitId":"hieunm1821"},"content":"/**","lastModifiedDate":"2022-03-27"},{"lineNumber":16,"author":{"gitId":"hieunm1821"},"content":" * Parses input arguments and creates a new EditDriverCommand object","lastModifiedDate":"2022-03-27"},{"lineNumber":17,"author":{"gitId":"hieunm1821"},"content":" */","lastModifiedDate":"2022-03-27"},{"lineNumber":18,"author":{"gitId":"hieunm1821"},"content":"public class EditDriverCommandParser implements Parser\u003cEditDriverCommand\u003e {","lastModifiedDate":"2022-03-27"},{"lineNumber":19,"author":{"gitId":"hieunm1821"},"content":"    /**","lastModifiedDate":"2022-03-27"},{"lineNumber":20,"author":{"gitId":"hieunm1821"},"content":"     * Parses the given {@code String} of arguments in the context of the EditDriverCommand","lastModifiedDate":"2022-03-27"},{"lineNumber":21,"author":{"gitId":"hieunm1821"},"content":"     * and returns an EditDriverCommand object for execution.","lastModifiedDate":"2022-03-27"},{"lineNumber":22,"author":{"gitId":"hieunm1821"},"content":"     * @throws ParseException if the user input does not conform the expected format","lastModifiedDate":"2022-03-27"},{"lineNumber":23,"author":{"gitId":"hieunm1821"},"content":"     */","lastModifiedDate":"2022-03-27"},{"lineNumber":24,"author":{"gitId":"hieunm1821"},"content":"    public EditDriverCommand parse(String args) throws ParseException {","lastModifiedDate":"2022-03-27"},{"lineNumber":25,"author":{"gitId":"hieunm1821"},"content":"        requireNonNull(args);","lastModifiedDate":"2022-03-27"},{"lineNumber":26,"author":{"gitId":"hieunm1821"},"content":"        ArgumentMultimap argMultimap \u003d ArgumentTokenizer.tokenize(args, PREFIX_NAME, PREFIX_PHONE, PREFIX_STATUS);","lastModifiedDate":"2022-03-27"},{"lineNumber":27,"author":{"gitId":"hieunm1821"},"content":"","lastModifiedDate":"2022-03-27"},{"lineNumber":28,"author":{"gitId":"hieunm1821"},"content":"        Index index;","lastModifiedDate":"2022-03-27"},{"lineNumber":29,"author":{"gitId":"hieunm1821"},"content":"","lastModifiedDate":"2022-03-27"},{"lineNumber":30,"author":{"gitId":"hieunm1821"},"content":"        try {","lastModifiedDate":"2022-03-27"},{"lineNumber":31,"author":{"gitId":"hieunm1821"},"content":"            index \u003d ParserUtil.parseIndex(argMultimap.getPreamble());","lastModifiedDate":"2022-03-27"},{"lineNumber":32,"author":{"gitId":"hieunm1821"},"content":"        } catch (ParseException pe) {","lastModifiedDate":"2022-03-27"},{"lineNumber":33,"author":{"gitId":"hieunm1821"},"content":"            throw new ParseException(String.format(MESSAGE_INVALID_COMMAND_FORMAT,","lastModifiedDate":"2022-03-27"},{"lineNumber":34,"author":{"gitId":"hieunm1821"},"content":"                    EditDriverCommand.MESSAGE_USAGE), pe);","lastModifiedDate":"2022-03-27"},{"lineNumber":35,"author":{"gitId":"hieunm1821"},"content":"        }","lastModifiedDate":"2022-03-27"},{"lineNumber":36,"author":{"gitId":"hieunm1821"},"content":"","lastModifiedDate":"2022-03-27"},{"lineNumber":37,"author":{"gitId":"hieunm1821"},"content":"        EditDriverDescriptor editDriverDescriptor \u003d new EditDriverDescriptor();","lastModifiedDate":"2022-03-27"},{"lineNumber":38,"author":{"gitId":"hieunm1821"},"content":"        if (argMultimap.getValue(PREFIX_NAME).isPresent()) {","lastModifiedDate":"2022-03-27"},{"lineNumber":39,"author":{"gitId":"hieunm1821"},"content":"            editDriverDescriptor.setName(ParserUtil.parseNameDriver(argMultimap.getValue(PREFIX_NAME).get()));","lastModifiedDate":"2022-03-27"},{"lineNumber":40,"author":{"gitId":"hieunm1821"},"content":"        }","lastModifiedDate":"2022-03-27"},{"lineNumber":41,"author":{"gitId":"hieunm1821"},"content":"        if (argMultimap.getValue(PREFIX_PHONE).isPresent()) {","lastModifiedDate":"2022-03-27"},{"lineNumber":42,"author":{"gitId":"hieunm1821"},"content":"            editDriverDescriptor.setPhone(ParserUtil.parsePhoneDriver(argMultimap.getValue(PREFIX_PHONE).get()));","lastModifiedDate":"2022-03-27"},{"lineNumber":43,"author":{"gitId":"hieunm1821"},"content":"        }","lastModifiedDate":"2022-03-27"},{"lineNumber":44,"author":{"gitId":"hieunm1821"},"content":"        if (argMultimap.getValue(PREFIX_STATUS).isPresent()) {","lastModifiedDate":"2022-03-27"},{"lineNumber":45,"author":{"gitId":"hieunm1821"},"content":"            editDriverDescriptor.setStatus(ParserUtil.parseDriverStatus(argMultimap.getValue(PREFIX_STATUS).get()));","lastModifiedDate":"2022-03-27"},{"lineNumber":46,"author":{"gitId":"hieunm1821"},"content":"        }","lastModifiedDate":"2022-03-27"},{"lineNumber":47,"author":{"gitId":"hieunm1821"},"content":"","lastModifiedDate":"2022-03-27"},{"lineNumber":48,"author":{"gitId":"hieunm1821"},"content":"        if (!editDriverDescriptor.isAnyFieldEdited()) {","lastModifiedDate":"2022-03-27"},{"lineNumber":49,"author":{"gitId":"hieunm1821"},"content":"            throw new ParseException(EditDriverCommand.MESSAGE_NOT_EDITED);","lastModifiedDate":"2022-03-27"},{"lineNumber":50,"author":{"gitId":"hieunm1821"},"content":"        }","lastModifiedDate":"2022-03-27"},{"lineNumber":51,"author":{"gitId":"hieunm1821"},"content":"","lastModifiedDate":"2022-03-27"},{"lineNumber":52,"author":{"gitId":"hieunm1821"},"content":"        return new EditDriverCommand(index, editDriverDescriptor);","lastModifiedDate":"2022-03-27"},{"lineNumber":53,"author":{"gitId":"hieunm1821"},"content":"    }","lastModifiedDate":"2022-03-27"},{"lineNumber":54,"author":{"gitId":"hieunm1821"},"content":"}","lastModifiedDate":"2022-03-27"}],"authorContributionMap":{"hieunm1821":54}},{"path":"src/main/java/seedu/address/logic/parser/EditOrderCommandParser.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"xzzz3"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2022-03-28"},{"lineNumber":2,"author":{"gitId":"xzzz3"},"content":"","lastModifiedDate":"2022-03-28"},{"lineNumber":3,"author":{"gitId":"xzzz3"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2022-03-28"},{"lineNumber":4,"author":{"gitId":"xzzz3"},"content":"import static seedu.address.commons.core.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2022-03-28"},{"lineNumber":5,"author":{"gitId":"xzzz3"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_DISH;","lastModifiedDate":"2022-03-28"},{"lineNumber":6,"author":{"gitId":"xzzz3"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_PHONE;","lastModifiedDate":"2022-03-28"},{"lineNumber":7,"author":{"gitId":"xzzz3"},"content":"","lastModifiedDate":"2022-03-28"},{"lineNumber":8,"author":{"gitId":"xzzz3"},"content":"import seedu.address.commons.core.index.Index;","lastModifiedDate":"2022-03-28"},{"lineNumber":9,"author":{"gitId":"xzzz3"},"content":"import seedu.address.logic.commands.EditOrderCommand;","lastModifiedDate":"2022-03-28"},{"lineNumber":10,"author":{"gitId":"xzzz3"},"content":"import seedu.address.logic.parser.exceptions.ParseException;","lastModifiedDate":"2022-03-28"},{"lineNumber":11,"author":{"gitId":"xzzz3"},"content":"","lastModifiedDate":"2022-03-28"},{"lineNumber":12,"author":{"gitId":"xzzz3"},"content":"/**","lastModifiedDate":"2022-03-28"},{"lineNumber":13,"author":{"gitId":"xzzz3"},"content":" * Parses input arguments and creates a new EditOrderCommand object","lastModifiedDate":"2022-03-28"},{"lineNumber":14,"author":{"gitId":"xzzz3"},"content":" */","lastModifiedDate":"2022-03-28"},{"lineNumber":15,"author":{"gitId":"xzzz3"},"content":"public class EditOrderCommandParser implements Parser\u003cEditOrderCommand\u003e {","lastModifiedDate":"2022-03-28"},{"lineNumber":16,"author":{"gitId":"xzzz3"},"content":"","lastModifiedDate":"2022-03-28"},{"lineNumber":17,"author":{"gitId":"xzzz3"},"content":"    /**","lastModifiedDate":"2022-03-28"},{"lineNumber":18,"author":{"gitId":"xzzz3"},"content":"     * Parses the given {@code String} of arguments in the context of the EditOrderCommand","lastModifiedDate":"2022-03-28"},{"lineNumber":19,"author":{"gitId":"xzzz3"},"content":"     * and returns an EditOrderCommand object for execution.","lastModifiedDate":"2022-03-28"},{"lineNumber":20,"author":{"gitId":"xzzz3"},"content":"     * @throws ParseException if the user input does not conform the expected format","lastModifiedDate":"2022-03-28"},{"lineNumber":21,"author":{"gitId":"xzzz3"},"content":"     */","lastModifiedDate":"2022-03-28"},{"lineNumber":22,"author":{"gitId":"xzzz3"},"content":"    public EditOrderCommand parse(String args) throws ParseException {","lastModifiedDate":"2022-03-28"},{"lineNumber":23,"author":{"gitId":"xzzz3"},"content":"        requireNonNull(args);","lastModifiedDate":"2022-03-28"},{"lineNumber":24,"author":{"gitId":"xzzz3"},"content":"        ArgumentMultimap argMultimap \u003d","lastModifiedDate":"2022-03-28"},{"lineNumber":25,"author":{"gitId":"xzzz3"},"content":"                ArgumentTokenizer.tokenize(args, PREFIX_PHONE, PREFIX_DISH);","lastModifiedDate":"2022-03-28"},{"lineNumber":26,"author":{"gitId":"xzzz3"},"content":"","lastModifiedDate":"2022-03-28"},{"lineNumber":27,"author":{"gitId":"xzzz3"},"content":"        Index index;","lastModifiedDate":"2022-03-28"},{"lineNumber":28,"author":{"gitId":"xzzz3"},"content":"","lastModifiedDate":"2022-03-28"},{"lineNumber":29,"author":{"gitId":"xzzz3"},"content":"        try {","lastModifiedDate":"2022-03-28"},{"lineNumber":30,"author":{"gitId":"xzzz3"},"content":"            index \u003d ParserUtil.parseIndex(argMultimap.getPreamble());","lastModifiedDate":"2022-03-28"},{"lineNumber":31,"author":{"gitId":"xzzz3"},"content":"        } catch (ParseException pe) {","lastModifiedDate":"2022-03-28"},{"lineNumber":32,"author":{"gitId":"xzzz3"},"content":"            throw new ParseException(String.format(MESSAGE_INVALID_COMMAND_FORMAT, EditOrderCommand.MESSAGE_USAGE), pe);","lastModifiedDate":"2022-03-28"},{"lineNumber":33,"author":{"gitId":"xzzz3"},"content":"        }","lastModifiedDate":"2022-03-28"},{"lineNumber":34,"author":{"gitId":"xzzz3"},"content":"","lastModifiedDate":"2022-03-28"},{"lineNumber":35,"author":{"gitId":"xzzz3"},"content":"        EditOrderCommand.EditOrderDescriptor editOrderDescriptor \u003d new EditOrderCommand.EditOrderDescriptor();","lastModifiedDate":"2022-03-28"},{"lineNumber":36,"author":{"gitId":"xzzz3"},"content":"        if (argMultimap.getValue(PREFIX_PHONE).isPresent()) {","lastModifiedDate":"2022-03-28"},{"lineNumber":37,"author":{"gitId":"xzzz3"},"content":"            editOrderDescriptor.setCustomerPhone(argMultimap.getValue(PREFIX_PHONE).get());","lastModifiedDate":"2022-03-28"},{"lineNumber":38,"author":{"gitId":"xzzz3"},"content":"        }","lastModifiedDate":"2022-03-28"},{"lineNumber":39,"author":{"gitId":"xzzz3"},"content":"        if (argMultimap.getValue(PREFIX_DISH).isPresent()) {","lastModifiedDate":"2022-03-28"},{"lineNumber":40,"author":{"gitId":"xzzz3"},"content":"            editOrderDescriptor.setDishes(argMultimap.getValue(PREFIX_DISH).get().split(\"\\\\s*,\\\\s*\"));","lastModifiedDate":"2022-03-28"},{"lineNumber":41,"author":{"gitId":"xzzz3"},"content":"        }","lastModifiedDate":"2022-03-28"},{"lineNumber":42,"author":{"gitId":"xzzz3"},"content":"","lastModifiedDate":"2022-03-28"},{"lineNumber":43,"author":{"gitId":"xzzz3"},"content":"        if (!editOrderDescriptor.isAnyFieldEdited()) {","lastModifiedDate":"2022-03-28"},{"lineNumber":44,"author":{"gitId":"xzzz3"},"content":"            throw new ParseException(EditOrderCommand.MESSAGE_NOT_EDITED);","lastModifiedDate":"2022-03-29"},{"lineNumber":45,"author":{"gitId":"xzzz3"},"content":"        }","lastModifiedDate":"2022-03-28"},{"lineNumber":46,"author":{"gitId":"xzzz3"},"content":"","lastModifiedDate":"2022-03-28"},{"lineNumber":47,"author":{"gitId":"xzzz3"},"content":"        return new EditOrderCommand(index, editOrderDescriptor);","lastModifiedDate":"2022-03-28"},{"lineNumber":48,"author":{"gitId":"xzzz3"},"content":"    }","lastModifiedDate":"2022-03-28"},{"lineNumber":49,"author":{"gitId":"xzzz3"},"content":"","lastModifiedDate":"2022-03-28"},{"lineNumber":50,"author":{"gitId":"xzzz3"},"content":"}","lastModifiedDate":"2022-03-28"}],"authorContributionMap":{"xzzz3":50}},{"path":"src/main/java/seedu/address/logic/parser/EditOrderStatusCommandParser.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"xzzz3"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2022-03-11"},{"lineNumber":2,"author":{"gitId":"xzzz3"},"content":"","lastModifiedDate":"2022-03-11"},{"lineNumber":3,"author":{"gitId":"xzzz3"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2022-03-12"},{"lineNumber":4,"author":{"gitId":"xzzz3"},"content":"import static seedu.address.commons.core.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2022-03-12"},{"lineNumber":5,"author":{"gitId":"xzzz3"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_STATUS;","lastModifiedDate":"2022-03-12"},{"lineNumber":6,"author":{"gitId":"xzzz3"},"content":"","lastModifiedDate":"2022-03-12"},{"lineNumber":7,"author":{"gitId":"xzzz3"},"content":"import seedu.address.commons.core.index.Index;","lastModifiedDate":"2022-03-11"},{"lineNumber":8,"author":{"gitId":"xzzz3"},"content":"import seedu.address.commons.exceptions.IllegalValueException;","lastModifiedDate":"2022-03-11"},{"lineNumber":9,"author":{"gitId":"xzzz3"},"content":"import seedu.address.logic.commands.EditOrderStatusCommand;","lastModifiedDate":"2022-03-11"},{"lineNumber":10,"author":{"gitId":"xzzz3"},"content":"import seedu.address.logic.parser.exceptions.ParseException;","lastModifiedDate":"2022-03-11"},{"lineNumber":11,"author":{"gitId":"xzzz3"},"content":"","lastModifiedDate":"2022-03-11"},{"lineNumber":12,"author":{"gitId":"xzzz3"},"content":"/**","lastModifiedDate":"2022-03-12"},{"lineNumber":13,"author":{"gitId":"xzzz3"},"content":" * Parses input arguments and creates a new EditOrderStatusCommand object","lastModifiedDate":"2022-03-12"},{"lineNumber":14,"author":{"gitId":"xzzz3"},"content":" */","lastModifiedDate":"2022-03-12"},{"lineNumber":15,"author":{"gitId":"xzzz3"},"content":"public class EditOrderStatusCommandParser {","lastModifiedDate":"2022-03-11"},{"lineNumber":16,"author":{"gitId":"xzzz3"},"content":"","lastModifiedDate":"2022-03-12"},{"lineNumber":17,"author":{"gitId":"xzzz3"},"content":"    /**","lastModifiedDate":"2022-03-12"},{"lineNumber":18,"author":{"gitId":"xzzz3"},"content":"","lastModifiedDate":"2022-03-14"},{"lineNumber":19,"author":{"gitId":"xzzz3"},"content":"     * Parses the given {@code String} of arguments in the context of the EditOrderStatusCommand","lastModifiedDate":"2022-03-12"},{"lineNumber":20,"author":{"gitId":"xzzz3"},"content":"     * and returns an EditOrderStatusCommand object for execution.","lastModifiedDate":"2022-03-12"},{"lineNumber":21,"author":{"gitId":"xzzz3"},"content":"     * @throws ParseException if the user input does not conform the expected format","lastModifiedDate":"2022-03-12"},{"lineNumber":22,"author":{"gitId":"xzzz3"},"content":"     */","lastModifiedDate":"2022-03-12"},{"lineNumber":23,"author":{"gitId":"xzzz3"},"content":"    public EditOrderStatusCommand parse(String args) throws ParseException {","lastModifiedDate":"2022-03-11"},{"lineNumber":24,"author":{"gitId":"xzzz3"},"content":"        requireNonNull(args);","lastModifiedDate":"2022-03-11"},{"lineNumber":25,"author":{"gitId":"xzzz3"},"content":"        ArgumentMultimap argMultimap \u003d ArgumentTokenizer.tokenize(args,","lastModifiedDate":"2022-03-11"},{"lineNumber":26,"author":{"gitId":"xzzz3"},"content":"                PREFIX_STATUS);","lastModifiedDate":"2022-03-11"},{"lineNumber":27,"author":{"gitId":"xzzz3"},"content":"","lastModifiedDate":"2022-03-11"},{"lineNumber":28,"author":{"gitId":"xzzz3"},"content":"        Index index;","lastModifiedDate":"2022-03-11"},{"lineNumber":29,"author":{"gitId":"xzzz3"},"content":"        try {","lastModifiedDate":"2022-03-11"},{"lineNumber":30,"author":{"gitId":"xzzz3"},"content":"            index \u003d ParserUtil.parseIndex(argMultimap.getPreamble());","lastModifiedDate":"2022-03-11"},{"lineNumber":31,"author":{"gitId":"xzzz3"},"content":"        } catch (IllegalValueException ive) {","lastModifiedDate":"2022-03-11"},{"lineNumber":32,"author":{"gitId":"xzzz3"},"content":"            throw new ParseException(String.format(MESSAGE_INVALID_COMMAND_FORMAT,","lastModifiedDate":"2022-03-11"},{"lineNumber":33,"author":{"gitId":"xzzz3"},"content":"                    EditOrderStatusCommand.MESSAGE_USAGE), ive);","lastModifiedDate":"2022-03-11"},{"lineNumber":34,"author":{"gitId":"xzzz3"},"content":"        }","lastModifiedDate":"2022-03-11"},{"lineNumber":35,"author":{"gitId":"xzzz3"},"content":"","lastModifiedDate":"2022-03-11"},{"lineNumber":36,"author":{"gitId":"xzzz3"},"content":"        String newStatus \u003d argMultimap.getValue(PREFIX_STATUS).orElse(\"\");","lastModifiedDate":"2022-03-11"},{"lineNumber":37,"author":{"gitId":"xzzz3"},"content":"","lastModifiedDate":"2022-03-11"},{"lineNumber":38,"author":{"gitId":"xzzz3"},"content":"        return new EditOrderStatusCommand(index, newStatus);","lastModifiedDate":"2022-03-11"},{"lineNumber":39,"author":{"gitId":"xzzz3"},"content":"    }","lastModifiedDate":"2022-03-11"},{"lineNumber":40,"author":{"gitId":"xzzz3"},"content":"}","lastModifiedDate":"2022-03-11"}],"authorContributionMap":{"xzzz3":40}},{"path":"src/main/java/seedu/address/logic/parser/FindCommandParser.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2017-01-26"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static seedu.address.commons.core.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2017-01-26"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.util.Arrays;","lastModifiedDate":"2017-01-26"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.FindCommand;","lastModifiedDate":"2017-01-26"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import seedu.address.logic.parser.exceptions.ParseException;","lastModifiedDate":"2017-03-11"},{"lineNumber":9,"author":{"gitId":"zxgoh"},"content":"import seedu.address.model.customer.NameCustomerContainsKeywordsPredicate;","lastModifiedDate":"2022-03-15"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":11,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-01-26"},{"lineNumber":12,"author":{"gitId":"-"},"content":" * Parses input arguments and creates a new FindCommand object","lastModifiedDate":"2017-01-26"},{"lineNumber":13,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-01-26"},{"lineNumber":14,"author":{"gitId":"-"},"content":"public class FindCommandParser implements Parser\u003cFindCommand\u003e {","lastModifiedDate":"2017-07-06"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-01-26"},{"lineNumber":17,"author":{"gitId":"-"},"content":"     * Parses the given {@code String} of arguments in the context of the FindCommand","lastModifiedDate":"2017-01-26"},{"lineNumber":18,"author":{"gitId":"-"},"content":"     * and returns a FindCommand object for execution.","lastModifiedDate":"2019-05-11"},{"lineNumber":19,"author":{"gitId":"-"},"content":"     * @throws ParseException if the user input does not conform the expected format","lastModifiedDate":"2017-03-11"},{"lineNumber":20,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-01-26"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    public FindCommand parse(String args) throws ParseException {","lastModifiedDate":"2017-03-11"},{"lineNumber":22,"author":{"gitId":"-"},"content":"        String trimmedArgs \u003d args.trim();","lastModifiedDate":"2017-02-12"},{"lineNumber":23,"author":{"gitId":"-"},"content":"        if (trimmedArgs.isEmpty()) {","lastModifiedDate":"2017-02-12"},{"lineNumber":24,"author":{"gitId":"-"},"content":"            throw new ParseException(","lastModifiedDate":"2017-03-11"},{"lineNumber":25,"author":{"gitId":"-"},"content":"                    String.format(MESSAGE_INVALID_COMMAND_FORMAT, FindCommand.MESSAGE_USAGE));","lastModifiedDate":"2017-01-26"},{"lineNumber":26,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-01-26"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":28,"author":{"gitId":"-"},"content":"        String[] nameKeywords \u003d trimmedArgs.split(\"\\\\s+\");","lastModifiedDate":"2017-06-12"},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":30,"author":{"gitId":"zxgoh"},"content":"        return new FindCommand(new NameCustomerContainsKeywordsPredicate(Arrays.asList(nameKeywords)));","lastModifiedDate":"2022-03-15"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-01-26"},{"lineNumber":32,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":33,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-01-26"}],"authorContributionMap":{"-":31,"zxgoh":2}},{"path":"src/main/java/seedu/address/logic/parser/FindOrderCommandParser.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"xzzz3"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2022-03-11"},{"lineNumber":2,"author":{"gitId":"xzzz3"},"content":"","lastModifiedDate":"2022-03-11"},{"lineNumber":3,"author":{"gitId":"xzzz3"},"content":"import static seedu.address.commons.core.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2022-03-11"},{"lineNumber":4,"author":{"gitId":"xzzz3"},"content":"","lastModifiedDate":"2022-03-11"},{"lineNumber":5,"author":{"gitId":"xzzz3"},"content":"import java.util.Arrays;","lastModifiedDate":"2022-03-11"},{"lineNumber":6,"author":{"gitId":"xzzz3"},"content":"","lastModifiedDate":"2022-03-11"},{"lineNumber":7,"author":{"gitId":"xzzz3"},"content":"import seedu.address.logic.commands.FindOrderCommand;","lastModifiedDate":"2022-03-11"},{"lineNumber":8,"author":{"gitId":"xzzz3"},"content":"import seedu.address.logic.parser.exceptions.ParseException;","lastModifiedDate":"2022-03-11"},{"lineNumber":9,"author":{"gitId":"xzzz3"},"content":"import seedu.address.model.order.OrderContainsKeywordsPredicate;","lastModifiedDate":"2022-03-11"},{"lineNumber":10,"author":{"gitId":"xzzz3"},"content":"","lastModifiedDate":"2022-03-11"},{"lineNumber":11,"author":{"gitId":"xzzz3"},"content":"/**","lastModifiedDate":"2022-03-11"},{"lineNumber":12,"author":{"gitId":"xzzz3"},"content":" * Parses input arguments and creates a new FindOrderCommand object","lastModifiedDate":"2022-03-11"},{"lineNumber":13,"author":{"gitId":"xzzz3"},"content":" */","lastModifiedDate":"2022-03-11"},{"lineNumber":14,"author":{"gitId":"xzzz3"},"content":"public class FindOrderCommandParser implements Parser\u003cFindOrderCommand\u003e {","lastModifiedDate":"2022-03-11"},{"lineNumber":15,"author":{"gitId":"xzzz3"},"content":"","lastModifiedDate":"2022-03-11"},{"lineNumber":16,"author":{"gitId":"xzzz3"},"content":"    /**","lastModifiedDate":"2022-03-11"},{"lineNumber":17,"author":{"gitId":"xzzz3"},"content":"     * Parses the given {@code String} of arguments in the context of the FindOrderCommand","lastModifiedDate":"2022-03-11"},{"lineNumber":18,"author":{"gitId":"xzzz3"},"content":"     * and returns a FindOrderCommand object for execution.","lastModifiedDate":"2022-03-11"},{"lineNumber":19,"author":{"gitId":"xzzz3"},"content":"     * @throws ParseException if the user input does not conform the expected format","lastModifiedDate":"2022-03-11"},{"lineNumber":20,"author":{"gitId":"xzzz3"},"content":"     */","lastModifiedDate":"2022-03-11"},{"lineNumber":21,"author":{"gitId":"xzzz3"},"content":"    public FindOrderCommand parse(String args) throws ParseException {","lastModifiedDate":"2022-03-11"},{"lineNumber":22,"author":{"gitId":"xzzz3"},"content":"        String trimmedArgs \u003d args.trim();","lastModifiedDate":"2022-03-11"},{"lineNumber":23,"author":{"gitId":"xzzz3"},"content":"        if (trimmedArgs.isEmpty()) {","lastModifiedDate":"2022-03-11"},{"lineNumber":24,"author":{"gitId":"xzzz3"},"content":"            throw new ParseException(","lastModifiedDate":"2022-03-11"},{"lineNumber":25,"author":{"gitId":"xzzz3"},"content":"                    String.format(MESSAGE_INVALID_COMMAND_FORMAT, FindOrderCommand.MESSAGE_USAGE));","lastModifiedDate":"2022-03-11"},{"lineNumber":26,"author":{"gitId":"xzzz3"},"content":"        }","lastModifiedDate":"2022-03-11"},{"lineNumber":27,"author":{"gitId":"xzzz3"},"content":"","lastModifiedDate":"2022-03-11"},{"lineNumber":28,"author":{"gitId":"xzzz3"},"content":"        String[] keywords \u003d trimmedArgs.split(\"\\\\s+\");","lastModifiedDate":"2022-03-11"},{"lineNumber":29,"author":{"gitId":"xzzz3"},"content":"","lastModifiedDate":"2022-03-11"},{"lineNumber":30,"author":{"gitId":"xzzz3"},"content":"        return new FindOrderCommand(new OrderContainsKeywordsPredicate(Arrays.asList(keywords)));","lastModifiedDate":"2022-03-11"},{"lineNumber":31,"author":{"gitId":"xzzz3"},"content":"    }","lastModifiedDate":"2022-03-11"},{"lineNumber":32,"author":{"gitId":"xzzz3"},"content":"}","lastModifiedDate":"2022-03-11"}],"authorContributionMap":{"xzzz3":32}},{"path":"src/main/java/seedu/address/logic/parser/ListDriverCommandParser.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"hieunm1821"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2022-03-10"},{"lineNumber":2,"author":{"gitId":"hieunm1821"},"content":"","lastModifiedDate":"2022-03-10"},{"lineNumber":3,"author":{"gitId":"hieunm1821"},"content":"import static seedu.address.commons.core.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2022-03-10"},{"lineNumber":4,"author":{"gitId":"hieunm1821"},"content":"","lastModifiedDate":"2022-03-10"},{"lineNumber":5,"author":{"gitId":"hieunm1821"},"content":"import java.util.Arrays;","lastModifiedDate":"2022-03-10"},{"lineNumber":6,"author":{"gitId":"hieunm1821"},"content":"","lastModifiedDate":"2022-03-10"},{"lineNumber":7,"author":{"gitId":"hieunm1821"},"content":"import seedu.address.logic.commands.ListDriverCommand;","lastModifiedDate":"2022-03-10"},{"lineNumber":8,"author":{"gitId":"hieunm1821"},"content":"import seedu.address.logic.parser.exceptions.ParseException;","lastModifiedDate":"2022-03-10"},{"lineNumber":9,"author":{"gitId":"hieunm1821"},"content":"import seedu.address.model.driver.DriverStatus;","lastModifiedDate":"2022-03-31"},{"lineNumber":10,"author":{"gitId":"hieunm1821"},"content":"import seedu.address.model.driver.StatusContainsKeywordsPredicate;","lastModifiedDate":"2022-03-10"},{"lineNumber":11,"author":{"gitId":"hieunm1821"},"content":"","lastModifiedDate":"2022-03-10"},{"lineNumber":12,"author":{"gitId":"hieunm1821"},"content":"/**","lastModifiedDate":"2022-03-11"},{"lineNumber":13,"author":{"gitId":"jaegarpoon"},"content":" * Parses input arguments and creates a new ListDriverCommand object","lastModifiedDate":"2022-03-29"},{"lineNumber":14,"author":{"gitId":"hieunm1821"},"content":" */","lastModifiedDate":"2022-03-11"},{"lineNumber":15,"author":{"gitId":"hieunm1821"},"content":"public class ListDriverCommandParser implements Parser\u003cListDriverCommand\u003e {","lastModifiedDate":"2022-03-10"},{"lineNumber":16,"author":{"gitId":"hieunm1821"},"content":"","lastModifiedDate":"2022-03-10"},{"lineNumber":17,"author":{"gitId":"hieunm1821"},"content":"    /**","lastModifiedDate":"2022-03-11"},{"lineNumber":18,"author":{"gitId":"hieunm1821"},"content":"     * Parses the given {@code String} of arguments in the context of the ListDriverCommand","lastModifiedDate":"2022-03-11"},{"lineNumber":19,"author":{"gitId":"hieunm1821"},"content":"     * and returns a ListDriverCommand object for execution.","lastModifiedDate":"2022-03-11"},{"lineNumber":20,"author":{"gitId":"hieunm1821"},"content":"     * @throws ParseException if the user input does not conform the expected format","lastModifiedDate":"2022-03-11"},{"lineNumber":21,"author":{"gitId":"hieunm1821"},"content":"     */","lastModifiedDate":"2022-03-11"},{"lineNumber":22,"author":{"gitId":"hieunm1821"},"content":"    public ListDriverCommand parse(String args) throws ParseException {","lastModifiedDate":"2022-03-10"},{"lineNumber":23,"author":{"gitId":"hieunm1821"},"content":"        String trimmedArgs \u003d args.trim();","lastModifiedDate":"2022-03-10"},{"lineNumber":24,"author":{"gitId":"hieunm1821"},"content":"        if (trimmedArgs.isEmpty()) {","lastModifiedDate":"2022-03-10"},{"lineNumber":25,"author":{"gitId":"hieunm1821"},"content":"            throw new ParseException(","lastModifiedDate":"2022-03-10"},{"lineNumber":26,"author":{"gitId":"hieunm1821"},"content":"                    String.format(MESSAGE_INVALID_COMMAND_FORMAT, ListDriverCommand.MESSAGE_USAGE));","lastModifiedDate":"2022-03-10"},{"lineNumber":27,"author":{"gitId":"hieunm1821"},"content":"        }","lastModifiedDate":"2022-03-10"},{"lineNumber":28,"author":{"gitId":"hieunm1821"},"content":"","lastModifiedDate":"2022-03-10"},{"lineNumber":29,"author":{"gitId":"hieunm1821"},"content":"        String[] nameKeywords \u003d trimmedArgs.split(\"\\\\s+\");","lastModifiedDate":"2022-03-10"},{"lineNumber":30,"author":{"gitId":"hieunm1821"},"content":"","lastModifiedDate":"2022-03-10"},{"lineNumber":31,"author":{"gitId":"hieunm1821"},"content":"        if (nameKeywords.length \u003e 1) {","lastModifiedDate":"2022-03-31"},{"lineNumber":32,"author":{"gitId":"hieunm1821"},"content":"            throw new ParseException(","lastModifiedDate":"2022-03-31"},{"lineNumber":33,"author":{"gitId":"hieunm1821"},"content":"                    String.format(MESSAGE_INVALID_COMMAND_FORMAT, ListDriverCommand.MESSAGE_USAGE));","lastModifiedDate":"2022-03-31"},{"lineNumber":34,"author":{"gitId":"hieunm1821"},"content":"        }","lastModifiedDate":"2022-03-31"},{"lineNumber":35,"author":{"gitId":"hieunm1821"},"content":"","lastModifiedDate":"2022-03-31"},{"lineNumber":36,"author":{"gitId":"hieunm1821"},"content":"        if (!driverStatusHasKeyword(nameKeywords[0])) {","lastModifiedDate":"2022-03-31"},{"lineNumber":37,"author":{"gitId":"hieunm1821"},"content":"            throw new ParseException(","lastModifiedDate":"2022-03-31"},{"lineNumber":38,"author":{"gitId":"hieunm1821"},"content":"                    String.format(MESSAGE_INVALID_COMMAND_FORMAT, ListDriverCommand.MESSAGE_USAGE));","lastModifiedDate":"2022-03-31"},{"lineNumber":39,"author":{"gitId":"hieunm1821"},"content":"        }","lastModifiedDate":"2022-03-31"},{"lineNumber":40,"author":{"gitId":"hieunm1821"},"content":"        return new ListDriverCommand(new StatusContainsKeywordsPredicate(Arrays.asList(nameKeywords)));","lastModifiedDate":"2022-03-10"},{"lineNumber":41,"author":{"gitId":"hieunm1821"},"content":"    }","lastModifiedDate":"2022-03-10"},{"lineNumber":42,"author":{"gitId":"hieunm1821"},"content":"    /**","lastModifiedDate":"2022-03-31"},{"lineNumber":43,"author":{"gitId":"hieunm1821"},"content":"     * Checks the given {@code String} argument and","lastModifiedDate":"2022-03-31"},{"lineNumber":44,"author":{"gitId":"hieunm1821"},"content":"     * returns a boolean representing if enum DriverStatus contains argument or","lastModifiedDate":"2022-03-31"},{"lineNumber":45,"author":{"gitId":"hieunm1821"},"content":"     * argument is equal to \"all\" (not case-sensitive)","lastModifiedDate":"2022-03-31"},{"lineNumber":46,"author":{"gitId":"hieunm1821"},"content":"     */","lastModifiedDate":"2022-03-31"},{"lineNumber":47,"author":{"gitId":"hieunm1821"},"content":"    private boolean driverStatusHasKeyword (String keyword) {","lastModifiedDate":"2022-03-31"},{"lineNumber":48,"author":{"gitId":"hieunm1821"},"content":"        if (keyword.toUpperCase().equals(\"ALL\")) {","lastModifiedDate":"2022-03-31"},{"lineNumber":49,"author":{"gitId":"hieunm1821"},"content":"            return true;","lastModifiedDate":"2022-03-31"},{"lineNumber":50,"author":{"gitId":"hieunm1821"},"content":"        }","lastModifiedDate":"2022-03-31"},{"lineNumber":51,"author":{"gitId":"hieunm1821"},"content":"        boolean hasKeyword \u003d false;","lastModifiedDate":"2022-03-31"},{"lineNumber":52,"author":{"gitId":"hieunm1821"},"content":"        for (DriverStatus status : DriverStatus.values()) {","lastModifiedDate":"2022-03-31"},{"lineNumber":53,"author":{"gitId":"hieunm1821"},"content":"            if (status.name().equals(keyword.toUpperCase())) {","lastModifiedDate":"2022-03-31"},{"lineNumber":54,"author":{"gitId":"hieunm1821"},"content":"                hasKeyword \u003d true;","lastModifiedDate":"2022-03-31"},{"lineNumber":55,"author":{"gitId":"hieunm1821"},"content":"                break;","lastModifiedDate":"2022-03-31"},{"lineNumber":56,"author":{"gitId":"hieunm1821"},"content":"            }","lastModifiedDate":"2022-03-31"},{"lineNumber":57,"author":{"gitId":"hieunm1821"},"content":"        }","lastModifiedDate":"2022-03-31"},{"lineNumber":58,"author":{"gitId":"hieunm1821"},"content":"","lastModifiedDate":"2022-03-10"},{"lineNumber":59,"author":{"gitId":"hieunm1821"},"content":"        return hasKeyword;","lastModifiedDate":"2022-03-31"},{"lineNumber":60,"author":{"gitId":"hieunm1821"},"content":"    }","lastModifiedDate":"2022-03-31"},{"lineNumber":61,"author":{"gitId":"hieunm1821"},"content":"}","lastModifiedDate":"2022-03-10"}],"authorContributionMap":{"hieunm1821":60,"jaegarpoon":1}},{"path":"src/main/java/seedu/address/logic/parser/ListOrderCommandParser.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"jaegarpoon"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2022-03-29"},{"lineNumber":2,"author":{"gitId":"jaegarpoon"},"content":"","lastModifiedDate":"2022-03-29"},{"lineNumber":3,"author":{"gitId":"jaegarpoon"},"content":"import static seedu.address.commons.core.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2022-03-29"},{"lineNumber":4,"author":{"gitId":"jaegarpoon"},"content":"","lastModifiedDate":"2022-03-29"},{"lineNumber":5,"author":{"gitId":"jaegarpoon"},"content":"import java.util.Arrays;","lastModifiedDate":"2022-03-29"},{"lineNumber":6,"author":{"gitId":"jaegarpoon"},"content":"","lastModifiedDate":"2022-03-29"},{"lineNumber":7,"author":{"gitId":"jaegarpoon"},"content":"import seedu.address.logic.commands.ListOrderCommand;","lastModifiedDate":"2022-03-29"},{"lineNumber":8,"author":{"gitId":"jaegarpoon"},"content":"import seedu.address.logic.parser.exceptions.ParseException;","lastModifiedDate":"2022-03-29"},{"lineNumber":9,"author":{"gitId":"jaegarpoon"},"content":"import seedu.address.model.order.OrderStatus;","lastModifiedDate":"2022-03-29"},{"lineNumber":10,"author":{"gitId":"jaegarpoon"},"content":"import seedu.address.model.order.OrderStatusContainsKeywordsPredicate;","lastModifiedDate":"2022-03-29"},{"lineNumber":11,"author":{"gitId":"jaegarpoon"},"content":"","lastModifiedDate":"2022-03-29"},{"lineNumber":12,"author":{"gitId":"jaegarpoon"},"content":"/**","lastModifiedDate":"2022-03-29"},{"lineNumber":13,"author":{"gitId":"jaegarpoon"},"content":" * Parses input arguments and creates a new ListOrderCommand object","lastModifiedDate":"2022-03-29"},{"lineNumber":14,"author":{"gitId":"jaegarpoon"},"content":" */","lastModifiedDate":"2022-03-29"},{"lineNumber":15,"author":{"gitId":"jaegarpoon"},"content":"public class ListOrderCommandParser implements Parser\u003cListOrderCommand\u003e {","lastModifiedDate":"2022-03-29"},{"lineNumber":16,"author":{"gitId":"jaegarpoon"},"content":"","lastModifiedDate":"2022-03-29"},{"lineNumber":17,"author":{"gitId":"jaegarpoon"},"content":"    /**","lastModifiedDate":"2022-03-29"},{"lineNumber":18,"author":{"gitId":"jaegarpoon"},"content":"     * Parses the given {@code String} of arguments in the context of the ListOrderCommand","lastModifiedDate":"2022-03-29"},{"lineNumber":19,"author":{"gitId":"jaegarpoon"},"content":"     * and returns a ListOrderCommand object for execution.","lastModifiedDate":"2022-03-29"},{"lineNumber":20,"author":{"gitId":"jaegarpoon"},"content":"     * @throws ParseException if the user input does not conform the expected format","lastModifiedDate":"2022-03-29"},{"lineNumber":21,"author":{"gitId":"jaegarpoon"},"content":"     */","lastModifiedDate":"2022-03-29"},{"lineNumber":22,"author":{"gitId":"jaegarpoon"},"content":"    public ListOrderCommand parse(String args) throws ParseException {","lastModifiedDate":"2022-03-29"},{"lineNumber":23,"author":{"gitId":"jaegarpoon"},"content":"        String trimmedArgs \u003d args.trim();","lastModifiedDate":"2022-03-29"},{"lineNumber":24,"author":{"gitId":"jaegarpoon"},"content":"        if (trimmedArgs.isEmpty()) {","lastModifiedDate":"2022-03-29"},{"lineNumber":25,"author":{"gitId":"jaegarpoon"},"content":"            throw new ParseException(","lastModifiedDate":"2022-03-29"},{"lineNumber":26,"author":{"gitId":"jaegarpoon"},"content":"                    String.format(MESSAGE_INVALID_COMMAND_FORMAT, ListOrderCommand.MESSAGE_USAGE));","lastModifiedDate":"2022-03-29"},{"lineNumber":27,"author":{"gitId":"jaegarpoon"},"content":"        }","lastModifiedDate":"2022-03-29"},{"lineNumber":28,"author":{"gitId":"jaegarpoon"},"content":"","lastModifiedDate":"2022-03-29"},{"lineNumber":29,"author":{"gitId":"jaegarpoon"},"content":"        if (trimmedArgs.equals(\"in progress\")) {","lastModifiedDate":"2022-03-30"},{"lineNumber":30,"author":{"gitId":"jaegarpoon"},"content":"            trimmedArgs \u003d \"in_progress\";","lastModifiedDate":"2022-03-30"},{"lineNumber":31,"author":{"gitId":"jaegarpoon"},"content":"        }","lastModifiedDate":"2022-03-30"},{"lineNumber":32,"author":{"gitId":"jaegarpoon"},"content":"","lastModifiedDate":"2022-03-30"},{"lineNumber":33,"author":{"gitId":"jaegarpoon"},"content":"        String[] nameKeywords \u003d trimmedArgs.split(\"\\\\s+\");","lastModifiedDate":"2022-03-29"},{"lineNumber":34,"author":{"gitId":"jaegarpoon"},"content":"","lastModifiedDate":"2022-03-29"},{"lineNumber":35,"author":{"gitId":"jaegarpoon"},"content":"        if (nameKeywords.length \u003e 1) {","lastModifiedDate":"2022-03-29"},{"lineNumber":36,"author":{"gitId":"jaegarpoon"},"content":"            throw new ParseException(","lastModifiedDate":"2022-03-29"},{"lineNumber":37,"author":{"gitId":"jaegarpoon"},"content":"                    String.format(MESSAGE_INVALID_COMMAND_FORMAT, ListOrderCommand.MESSAGE_USAGE));","lastModifiedDate":"2022-03-29"},{"lineNumber":38,"author":{"gitId":"jaegarpoon"},"content":"        }","lastModifiedDate":"2022-03-29"},{"lineNumber":39,"author":{"gitId":"jaegarpoon"},"content":"","lastModifiedDate":"2022-03-29"},{"lineNumber":40,"author":{"gitId":"jaegarpoon"},"content":"        if (!orderStatusHasKeyword(nameKeywords[0])) {","lastModifiedDate":"2022-03-29"},{"lineNumber":41,"author":{"gitId":"jaegarpoon"},"content":"            throw new ParseException(","lastModifiedDate":"2022-03-29"},{"lineNumber":42,"author":{"gitId":"jaegarpoon"},"content":"                    String.format(MESSAGE_INVALID_COMMAND_FORMAT, ListOrderCommand.MESSAGE_USAGE));","lastModifiedDate":"2022-03-29"},{"lineNumber":43,"author":{"gitId":"jaegarpoon"},"content":"        }","lastModifiedDate":"2022-03-29"},{"lineNumber":44,"author":{"gitId":"jaegarpoon"},"content":"","lastModifiedDate":"2022-03-29"},{"lineNumber":45,"author":{"gitId":"jaegarpoon"},"content":"        return new ListOrderCommand(new OrderStatusContainsKeywordsPredicate(Arrays.asList(nameKeywords)));","lastModifiedDate":"2022-03-29"},{"lineNumber":46,"author":{"gitId":"jaegarpoon"},"content":"    }","lastModifiedDate":"2022-03-29"},{"lineNumber":47,"author":{"gitId":"jaegarpoon"},"content":"","lastModifiedDate":"2022-03-29"},{"lineNumber":48,"author":{"gitId":"jaegarpoon"},"content":"    /**","lastModifiedDate":"2022-03-29"},{"lineNumber":49,"author":{"gitId":"jaegarpoon"},"content":"     * Checks the given {@code String} argument and","lastModifiedDate":"2022-03-29"},{"lineNumber":50,"author":{"gitId":"jaegarpoon"},"content":"     * returns a boolean representing if enum OrderStatus contains argument or","lastModifiedDate":"2022-03-29"},{"lineNumber":51,"author":{"gitId":"jaegarpoon"},"content":"     * argument is equal to \"all\" (not case-sensitive)","lastModifiedDate":"2022-03-29"},{"lineNumber":52,"author":{"gitId":"jaegarpoon"},"content":"     */","lastModifiedDate":"2022-03-29"},{"lineNumber":53,"author":{"gitId":"jaegarpoon"},"content":"    private boolean orderStatusHasKeyword (String keyword) {","lastModifiedDate":"2022-03-29"},{"lineNumber":54,"author":{"gitId":"jaegarpoon"},"content":"        if (keyword.toUpperCase().equals(\"ALL\")) {","lastModifiedDate":"2022-03-29"},{"lineNumber":55,"author":{"gitId":"jaegarpoon"},"content":"            return true;","lastModifiedDate":"2022-03-29"},{"lineNumber":56,"author":{"gitId":"jaegarpoon"},"content":"        }","lastModifiedDate":"2022-03-29"},{"lineNumber":57,"author":{"gitId":"jaegarpoon"},"content":"        boolean hasKeyword \u003d false;","lastModifiedDate":"2022-03-29"},{"lineNumber":58,"author":{"gitId":"jaegarpoon"},"content":"        for (OrderStatus status : OrderStatus.values()) {","lastModifiedDate":"2022-03-29"},{"lineNumber":59,"author":{"gitId":"jaegarpoon"},"content":"            if (status.name().equals(keyword.toUpperCase())) {","lastModifiedDate":"2022-03-29"},{"lineNumber":60,"author":{"gitId":"jaegarpoon"},"content":"                hasKeyword \u003d true;","lastModifiedDate":"2022-03-29"},{"lineNumber":61,"author":{"gitId":"jaegarpoon"},"content":"                break;","lastModifiedDate":"2022-03-29"},{"lineNumber":62,"author":{"gitId":"jaegarpoon"},"content":"            }","lastModifiedDate":"2022-03-29"},{"lineNumber":63,"author":{"gitId":"jaegarpoon"},"content":"        }","lastModifiedDate":"2022-03-29"},{"lineNumber":64,"author":{"gitId":"jaegarpoon"},"content":"","lastModifiedDate":"2022-03-29"},{"lineNumber":65,"author":{"gitId":"jaegarpoon"},"content":"        return hasKeyword;","lastModifiedDate":"2022-03-29"},{"lineNumber":66,"author":{"gitId":"jaegarpoon"},"content":"    }","lastModifiedDate":"2022-03-29"},{"lineNumber":67,"author":{"gitId":"jaegarpoon"},"content":"","lastModifiedDate":"2022-03-29"},{"lineNumber":68,"author":{"gitId":"jaegarpoon"},"content":"}","lastModifiedDate":"2022-03-29"},{"lineNumber":69,"author":{"gitId":"jaegarpoon"},"content":"","lastModifiedDate":"2022-03-29"}],"authorContributionMap":{"jaegarpoon":69}},{"path":"src/main/java/seedu/address/logic/parser/ParserUtil.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2017-02-11"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-11"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2017-05-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.util.Collection;","lastModifiedDate":"2017-02-11"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.util.HashSet;","lastModifiedDate":"2017-02-11"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import java.util.Set;","lastModifiedDate":"2017-02-11"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-11"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.index.Index;","lastModifiedDate":"2017-05-25"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import seedu.address.commons.util.StringUtil;","lastModifiedDate":"2017-02-11"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import seedu.address.logic.parser.exceptions.ParseException;","lastModifiedDate":"2018-07-10"},{"lineNumber":12,"author":{"gitId":"zxgoh"},"content":"import seedu.address.model.customer.AddressCustomer;","lastModifiedDate":"2022-03-15"},{"lineNumber":13,"author":{"gitId":"zxgoh"},"content":"import seedu.address.model.customer.EmailCustomer;","lastModifiedDate":"2022-03-15"},{"lineNumber":14,"author":{"gitId":"zxgoh"},"content":"import seedu.address.model.customer.NameCustomer;","lastModifiedDate":"2022-03-15"},{"lineNumber":15,"author":{"gitId":"zxgoh"},"content":"import seedu.address.model.customer.PhoneCustomer;","lastModifiedDate":"2022-03-15"},{"lineNumber":16,"author":{"gitId":"jaegarpoon"},"content":"import seedu.address.model.dish.NameDish;","lastModifiedDate":"2022-03-27"},{"lineNumber":17,"author":{"gitId":"jaegarpoon"},"content":"import seedu.address.model.dish.PriceDish;","lastModifiedDate":"2022-03-27"},{"lineNumber":18,"author":{"gitId":"hieunm1821"},"content":"import seedu.address.model.driver.DriverStatus;","lastModifiedDate":"2022-03-28"},{"lineNumber":19,"author":{"gitId":"zxgoh"},"content":"import seedu.address.model.driver.NameDriver;","lastModifiedDate":"2022-03-16"},{"lineNumber":20,"author":{"gitId":"zxgoh"},"content":"import seedu.address.model.driver.PhoneDriver;","lastModifiedDate":"2022-03-16"},{"lineNumber":21,"author":{"gitId":"zxgoh"},"content":"import seedu.address.model.item.Name;","lastModifiedDate":"2022-03-16"},{"lineNumber":22,"author":{"gitId":"-"},"content":"import seedu.address.model.tag.Tag;","lastModifiedDate":"2017-02-11"},{"lineNumber":23,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-11"},{"lineNumber":24,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-02-11"},{"lineNumber":25,"author":{"gitId":"-"},"content":" * Contains utility methods used for parsing strings in the various *Parser classes.","lastModifiedDate":"2017-07-18"},{"lineNumber":26,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-02-11"},{"lineNumber":27,"author":{"gitId":"-"},"content":"public class ParserUtil {","lastModifiedDate":"2017-02-11"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-11"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_INVALID_INDEX \u003d \"Index is not a non-zero unsigned integer.\";","lastModifiedDate":"2017-06-02"},{"lineNumber":30,"author":{"gitId":"hieunm1821"},"content":"    public static final String MESSAGE_INVALID_DRIVER_STATUS \u003d \"This driver status is invalid.\";","lastModifiedDate":"2022-03-27"},{"lineNumber":31,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-02"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-02-11"},{"lineNumber":33,"author":{"gitId":"-"},"content":"     * Parses {@code oneBasedIndex} into an {@code Index} and returns it. Leading and trailing whitespaces will be","lastModifiedDate":"2017-05-25"},{"lineNumber":34,"author":{"gitId":"-"},"content":"     * trimmed.","lastModifiedDate":"2017-05-25"},{"lineNumber":35,"author":{"gitId":"-"},"content":"     * @throws ParseException if the specified index is invalid (not non-zero unsigned integer).","lastModifiedDate":"2018-07-10"},{"lineNumber":36,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-02-11"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    public static Index parseIndex(String oneBasedIndex) throws ParseException {","lastModifiedDate":"2018-07-10"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        String trimmedIndex \u003d oneBasedIndex.trim();","lastModifiedDate":"2017-05-25"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        if (!StringUtil.isNonZeroUnsignedInteger(trimmedIndex)) {","lastModifiedDate":"2017-06-02"},{"lineNumber":40,"author":{"gitId":"-"},"content":"            throw new ParseException(MESSAGE_INVALID_INDEX);","lastModifiedDate":"2018-07-10"},{"lineNumber":41,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-02-11"},{"lineNumber":42,"author":{"gitId":"-"},"content":"        return Index.fromOneBased(Integer.parseInt(trimmedIndex));","lastModifiedDate":"2017-05-25"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-02-11"},{"lineNumber":44,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-11"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-05-29"},{"lineNumber":46,"author":{"gitId":"zxgoh"},"content":"     * Parses a {@code String name} into a {@code NameCustomer}.","lastModifiedDate":"2022-03-15"},{"lineNumber":47,"author":{"gitId":"-"},"content":"     * Leading and trailing whitespaces will be trimmed.","lastModifiedDate":"2017-05-29"},{"lineNumber":48,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2017-05-29"},{"lineNumber":49,"author":{"gitId":"-"},"content":"     * @throws ParseException if the given {@code name} is invalid.","lastModifiedDate":"2018-07-10"},{"lineNumber":50,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-05-29"},{"lineNumber":51,"author":{"gitId":"zxgoh"},"content":"    public static NameCustomer parseNameCustomer(String name) throws ParseException {","lastModifiedDate":"2022-03-31"},{"lineNumber":52,"author":{"gitId":"-"},"content":"        requireNonNull(name);","lastModifiedDate":"2017-05-29"},{"lineNumber":53,"author":{"gitId":"-"},"content":"        String trimmedName \u003d name.trim();","lastModifiedDate":"2017-05-29"},{"lineNumber":54,"author":{"gitId":"zxgoh"},"content":"        if (!NameCustomer.isValidName(trimmedName)) {","lastModifiedDate":"2022-03-15"},{"lineNumber":55,"author":{"gitId":"zxgoh"},"content":"            throw new ParseException(NameCustomer.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2022-03-15"},{"lineNumber":56,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-30"},{"lineNumber":57,"author":{"gitId":"zxgoh"},"content":"        return new NameCustomer(trimmedName);","lastModifiedDate":"2022-03-15"},{"lineNumber":58,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-29"},{"lineNumber":59,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-29"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2022-03-16"},{"lineNumber":61,"author":{"gitId":"-"},"content":"     * Parses a {@code String name} into a {@code Name}.","lastModifiedDate":"2022-03-16"},{"lineNumber":62,"author":{"gitId":"-"},"content":"     * Leading and trailing whitespaces will be trimmed.","lastModifiedDate":"2022-03-16"},{"lineNumber":63,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2022-03-16"},{"lineNumber":64,"author":{"gitId":"-"},"content":"     * @throws ParseException if the given {@code name} is invalid.","lastModifiedDate":"2022-03-16"},{"lineNumber":65,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2022-03-16"},{"lineNumber":66,"author":{"gitId":"jaegarpoon"},"content":"    public static NameDish parseDishName(String name) throws ParseException {","lastModifiedDate":"2022-03-27"},{"lineNumber":67,"author":{"gitId":"-"},"content":"        requireNonNull(name);","lastModifiedDate":"2022-03-16"},{"lineNumber":68,"author":{"gitId":"-"},"content":"        String trimmedName \u003d name.trim();","lastModifiedDate":"2022-03-16"},{"lineNumber":69,"author":{"gitId":"jaegarpoon"},"content":"        if (!NameDish.isValidName(trimmedName)) {","lastModifiedDate":"2022-03-27"},{"lineNumber":70,"author":{"gitId":"-"},"content":"            throw new ParseException(Name.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2022-03-16"},{"lineNumber":71,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2022-03-16"},{"lineNumber":72,"author":{"gitId":"jaegarpoon"},"content":"        return new NameDish(trimmedName);","lastModifiedDate":"2022-03-27"},{"lineNumber":73,"author":{"gitId":"zxgoh"},"content":"    }","lastModifiedDate":"2022-03-16"},{"lineNumber":74,"author":{"gitId":"zxgoh"},"content":"","lastModifiedDate":"2022-03-16"},{"lineNumber":75,"author":{"gitId":"zxgoh"},"content":"","lastModifiedDate":"2022-03-16"},{"lineNumber":76,"author":{"gitId":"zxgoh"},"content":"    /**","lastModifiedDate":"2022-03-16"},{"lineNumber":77,"author":{"gitId":"zxgoh"},"content":"     * Parses a {@code String name} into a {@code NameDriver}.","lastModifiedDate":"2022-03-16"},{"lineNumber":78,"author":{"gitId":"zxgoh"},"content":"     * Leading and trailing whitespaces will be trimmed.","lastModifiedDate":"2022-03-16"},{"lineNumber":79,"author":{"gitId":"zxgoh"},"content":"     *","lastModifiedDate":"2022-03-16"},{"lineNumber":80,"author":{"gitId":"zxgoh"},"content":"     * @throws ParseException if the given {@code name} is invalid.","lastModifiedDate":"2022-03-16"},{"lineNumber":81,"author":{"gitId":"zxgoh"},"content":"     */","lastModifiedDate":"2022-03-16"},{"lineNumber":82,"author":{"gitId":"zxgoh"},"content":"    public static NameDriver parseNameDriver(String name) throws ParseException {","lastModifiedDate":"2022-03-16"},{"lineNumber":83,"author":{"gitId":"zxgoh"},"content":"        requireNonNull(name);","lastModifiedDate":"2022-03-16"},{"lineNumber":84,"author":{"gitId":"zxgoh"},"content":"        String trimmedName \u003d name.trim();","lastModifiedDate":"2022-03-16"},{"lineNumber":85,"author":{"gitId":"zxgoh"},"content":"        if (!NameDriver.isValidName(trimmedName)) {","lastModifiedDate":"2022-03-16"},{"lineNumber":86,"author":{"gitId":"zxgoh"},"content":"            throw new ParseException(NameDriver.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2022-03-16"},{"lineNumber":87,"author":{"gitId":"zxgoh"},"content":"        }","lastModifiedDate":"2022-03-16"},{"lineNumber":88,"author":{"gitId":"zxgoh"},"content":"        return new NameDriver(trimmedName);","lastModifiedDate":"2022-03-16"},{"lineNumber":89,"author":{"gitId":"zxgoh"},"content":"    }","lastModifiedDate":"2022-03-16"},{"lineNumber":90,"author":{"gitId":"zxgoh"},"content":"","lastModifiedDate":"2022-03-16"},{"lineNumber":91,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-05-30"},{"lineNumber":92,"author":{"gitId":"zxgoh"},"content":"     * Parses a {@code String phone} into a {@code PhoneCustomer}.","lastModifiedDate":"2022-03-15"},{"lineNumber":93,"author":{"gitId":"-"},"content":"     * Leading and trailing whitespaces will be trimmed.","lastModifiedDate":"2017-05-30"},{"lineNumber":94,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2017-05-30"},{"lineNumber":95,"author":{"gitId":"-"},"content":"     * @throws ParseException if the given {@code phone} is invalid.","lastModifiedDate":"2018-07-10"},{"lineNumber":96,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-05-30"},{"lineNumber":97,"author":{"gitId":"zxgoh"},"content":"    public static PhoneCustomer parsePhoneCustomer(String phone) throws ParseException {","lastModifiedDate":"2022-03-31"},{"lineNumber":98,"author":{"gitId":"-"},"content":"        requireNonNull(phone);","lastModifiedDate":"2017-05-30"},{"lineNumber":99,"author":{"gitId":"-"},"content":"        String trimmedPhone \u003d phone.trim();","lastModifiedDate":"2017-05-30"},{"lineNumber":100,"author":{"gitId":"zxgoh"},"content":"        if (!PhoneCustomer.isValidPhone(trimmedPhone)) {","lastModifiedDate":"2022-03-15"},{"lineNumber":101,"author":{"gitId":"zxgoh"},"content":"            throw new ParseException(PhoneCustomer.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2022-03-15"},{"lineNumber":102,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-30"},{"lineNumber":103,"author":{"gitId":"zxgoh"},"content":"        return new PhoneCustomer(trimmedPhone);","lastModifiedDate":"2022-03-15"},{"lineNumber":104,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-30"},{"lineNumber":105,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-03-16"},{"lineNumber":106,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2022-03-16"},{"lineNumber":107,"author":{"gitId":"zxgoh"},"content":"     * Parses a {@code String phone} into a {@code PhoneDriver}.","lastModifiedDate":"2022-03-16"},{"lineNumber":108,"author":{"gitId":"-"},"content":"     * Leading and trailing whitespaces will be trimmed.","lastModifiedDate":"2022-03-16"},{"lineNumber":109,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2022-03-16"},{"lineNumber":110,"author":{"gitId":"-"},"content":"     * @throws ParseException if the given {@code phone} is invalid.","lastModifiedDate":"2022-03-16"},{"lineNumber":111,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2022-03-16"},{"lineNumber":112,"author":{"gitId":"zxgoh"},"content":"    public static PhoneDriver parsePhoneDriver(String phone) throws ParseException {","lastModifiedDate":"2022-03-16"},{"lineNumber":113,"author":{"gitId":"-"},"content":"        requireNonNull(phone);","lastModifiedDate":"2022-03-16"},{"lineNumber":114,"author":{"gitId":"-"},"content":"        String trimmedPhone \u003d phone.trim();","lastModifiedDate":"2022-03-16"},{"lineNumber":115,"author":{"gitId":"zxgoh"},"content":"        if (!PhoneDriver.isValidPhone(trimmedPhone)) {","lastModifiedDate":"2022-03-16"},{"lineNumber":116,"author":{"gitId":"zxgoh"},"content":"            throw new ParseException(PhoneDriver.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2022-03-16"},{"lineNumber":117,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2022-03-16"},{"lineNumber":118,"author":{"gitId":"zxgoh"},"content":"        return new PhoneDriver(trimmedPhone);","lastModifiedDate":"2022-03-16"},{"lineNumber":119,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2022-03-16"},{"lineNumber":120,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-30"},{"lineNumber":121,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2022-03-27"},{"lineNumber":122,"author":{"gitId":"hieunm1821"},"content":"     * Parses a {@code String status} into a {@code DriverStatus}.","lastModifiedDate":"2022-03-27"},{"lineNumber":123,"author":{"gitId":"hieunm1821"},"content":"     * Leading and trailing whitespaces will be trimmed.","lastModifiedDate":"2022-03-27"},{"lineNumber":124,"author":{"gitId":"hieunm1821"},"content":"     *","lastModifiedDate":"2022-03-27"},{"lineNumber":125,"author":{"gitId":"hieunm1821"},"content":"     * @throws ParseException if the given {@code status} is invalid.","lastModifiedDate":"2022-03-27"},{"lineNumber":126,"author":{"gitId":"hieunm1821"},"content":"     */","lastModifiedDate":"2022-03-27"},{"lineNumber":127,"author":{"gitId":"hieunm1821"},"content":"    public static DriverStatus parseDriverStatus (String status) throws ParseException {","lastModifiedDate":"2022-03-27"},{"lineNumber":128,"author":{"gitId":"hieunm1821"},"content":"        requireNonNull(status);","lastModifiedDate":"2022-03-27"},{"lineNumber":129,"author":{"gitId":"hieunm1821"},"content":"        String trimmedStatus \u003d status.trim();","lastModifiedDate":"2022-03-27"},{"lineNumber":130,"author":{"gitId":"hieunm1821"},"content":"        for (DriverStatus driverStatus : DriverStatus.values()) {","lastModifiedDate":"2022-03-27"},{"lineNumber":131,"author":{"gitId":"hieunm1821"},"content":"            if (driverStatus.name().equalsIgnoreCase(trimmedStatus)) {","lastModifiedDate":"2022-03-27"},{"lineNumber":132,"author":{"gitId":"hieunm1821"},"content":"                return DriverStatus.valueOf(trimmedStatus.toUpperCase());","lastModifiedDate":"2022-03-27"},{"lineNumber":133,"author":{"gitId":"hieunm1821"},"content":"            }","lastModifiedDate":"2022-03-27"},{"lineNumber":134,"author":{"gitId":"hieunm1821"},"content":"        }","lastModifiedDate":"2022-03-27"},{"lineNumber":135,"author":{"gitId":"hieunm1821"},"content":"        throw new ParseException(MESSAGE_INVALID_DRIVER_STATUS);","lastModifiedDate":"2022-03-27"},{"lineNumber":136,"author":{"gitId":"hieunm1821"},"content":"    }","lastModifiedDate":"2022-03-27"},{"lineNumber":137,"author":{"gitId":"hieunm1821"},"content":"","lastModifiedDate":"2022-03-27"},{"lineNumber":138,"author":{"gitId":"hieunm1821"},"content":"","lastModifiedDate":"2022-03-27"},{"lineNumber":139,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-05-30"},{"lineNumber":140,"author":{"gitId":"zxgoh"},"content":"     * Parses a {@code String address} into an {@code AddressCustomer}.","lastModifiedDate":"2022-03-15"},{"lineNumber":141,"author":{"gitId":"-"},"content":"     * Leading and trailing whitespaces will be trimmed.","lastModifiedDate":"2017-05-30"},{"lineNumber":142,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2017-05-30"},{"lineNumber":143,"author":{"gitId":"-"},"content":"     * @throws ParseException if the given {@code address} is invalid.","lastModifiedDate":"2018-07-10"},{"lineNumber":144,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-05-30"},{"lineNumber":145,"author":{"gitId":"zxgoh"},"content":"    public static AddressCustomer parseAddressCustomer(String address) throws ParseException {","lastModifiedDate":"2022-03-31"},{"lineNumber":146,"author":{"gitId":"-"},"content":"        requireNonNull(address);","lastModifiedDate":"2017-05-30"},{"lineNumber":147,"author":{"gitId":"-"},"content":"        String trimmedAddress \u003d address.trim();","lastModifiedDate":"2017-05-30"},{"lineNumber":148,"author":{"gitId":"zxgoh"},"content":"        if (!AddressCustomer.isValidAddress(trimmedAddress)) {","lastModifiedDate":"2022-03-15"},{"lineNumber":149,"author":{"gitId":"zxgoh"},"content":"            throw new ParseException(AddressCustomer.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2022-03-15"},{"lineNumber":150,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-30"},{"lineNumber":151,"author":{"gitId":"zxgoh"},"content":"        return new AddressCustomer(trimmedAddress);","lastModifiedDate":"2022-03-15"},{"lineNumber":152,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-30"},{"lineNumber":153,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-30"},{"lineNumber":154,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-05-30"},{"lineNumber":155,"author":{"gitId":"zxgoh"},"content":"     * Parses a {@code String email} into an {@code EmailCustomer}.","lastModifiedDate":"2022-03-15"},{"lineNumber":156,"author":{"gitId":"-"},"content":"     * Leading and trailing whitespaces will be trimmed.","lastModifiedDate":"2017-05-30"},{"lineNumber":157,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2017-05-30"},{"lineNumber":158,"author":{"gitId":"-"},"content":"     * @throws ParseException if the given {@code email} is invalid.","lastModifiedDate":"2018-07-10"},{"lineNumber":159,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-05-30"},{"lineNumber":160,"author":{"gitId":"zxgoh"},"content":"    public static EmailCustomer parseEmail(String email) throws ParseException {","lastModifiedDate":"2022-03-15"},{"lineNumber":161,"author":{"gitId":"-"},"content":"        requireNonNull(email);","lastModifiedDate":"2017-05-30"},{"lineNumber":162,"author":{"gitId":"-"},"content":"        String trimmedEmail \u003d email.trim();","lastModifiedDate":"2017-05-30"},{"lineNumber":163,"author":{"gitId":"zxgoh"},"content":"        if (!EmailCustomer.isValidEmail(trimmedEmail)) {","lastModifiedDate":"2022-03-15"},{"lineNumber":164,"author":{"gitId":"zxgoh"},"content":"            throw new ParseException(EmailCustomer.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2022-03-15"},{"lineNumber":165,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-30"},{"lineNumber":166,"author":{"gitId":"zxgoh"},"content":"        return new EmailCustomer(trimmedEmail);","lastModifiedDate":"2022-03-15"},{"lineNumber":167,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-30"},{"lineNumber":168,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-30"},{"lineNumber":169,"author":{"gitId":"jaegarpoon"},"content":"    /**","lastModifiedDate":"2022-03-27"},{"lineNumber":170,"author":{"gitId":"jaegarpoon"},"content":"     * Parses a {@code String price} into a {@code PriceDish}.","lastModifiedDate":"2022-03-27"},{"lineNumber":171,"author":{"gitId":"jaegarpoon"},"content":"     * Leading and trailing whitespaces will be trimmed.","lastModifiedDate":"2022-03-27"},{"lineNumber":172,"author":{"gitId":"jaegarpoon"},"content":"     *","lastModifiedDate":"2022-03-27"},{"lineNumber":173,"author":{"gitId":"jaegarpoon"},"content":"     * @throws ParseException if the given {@code price} is invalid.","lastModifiedDate":"2022-03-27"},{"lineNumber":174,"author":{"gitId":"jaegarpoon"},"content":"     */","lastModifiedDate":"2022-03-27"},{"lineNumber":175,"author":{"gitId":"jaegarpoon"},"content":"    public static PriceDish parsePrice(String price) throws ParseException {","lastModifiedDate":"2022-03-27"},{"lineNumber":176,"author":{"gitId":"jaegarpoon"},"content":"        requireNonNull(price);","lastModifiedDate":"2022-03-27"},{"lineNumber":177,"author":{"gitId":"jaegarpoon"},"content":"        String trimmedPrice \u003d price.trim();","lastModifiedDate":"2022-03-27"},{"lineNumber":178,"author":{"gitId":"jaegarpoon"},"content":"        if (!PriceDish.isValidPrice(trimmedPrice)) {","lastModifiedDate":"2022-03-27"},{"lineNumber":179,"author":{"gitId":"jaegarpoon"},"content":"            throw new ParseException(PriceDish.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2022-03-27"},{"lineNumber":180,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2022-03-27"},{"lineNumber":181,"author":{"gitId":"jaegarpoon"},"content":"        return new PriceDish(trimmedPrice);","lastModifiedDate":"2022-03-27"},{"lineNumber":182,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2022-03-27"},{"lineNumber":183,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-03-27"},{"lineNumber":184,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-05-30"},{"lineNumber":185,"author":{"gitId":"-"},"content":"     * Parses a {@code String tag} into a {@code Tag}.","lastModifiedDate":"2017-05-30"},{"lineNumber":186,"author":{"gitId":"-"},"content":"     * Leading and trailing whitespaces will be trimmed.","lastModifiedDate":"2017-05-30"},{"lineNumber":187,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2017-05-30"},{"lineNumber":188,"author":{"gitId":"-"},"content":"     * @throws ParseException if the given {@code tag} is invalid.","lastModifiedDate":"2018-07-10"},{"lineNumber":189,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-05-30"},{"lineNumber":190,"author":{"gitId":"-"},"content":"    public static Tag parseTag(String tag) throws ParseException {","lastModifiedDate":"2018-07-10"},{"lineNumber":191,"author":{"gitId":"-"},"content":"        requireNonNull(tag);","lastModifiedDate":"2017-05-30"},{"lineNumber":192,"author":{"gitId":"-"},"content":"        String trimmedTag \u003d tag.trim();","lastModifiedDate":"2017-05-30"},{"lineNumber":193,"author":{"gitId":"-"},"content":"        if (!Tag.isValidTagName(trimmedTag)) {","lastModifiedDate":"2017-05-30"},{"lineNumber":194,"author":{"gitId":"-"},"content":"            throw new ParseException(Tag.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2018-09-22"},{"lineNumber":195,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-30"},{"lineNumber":196,"author":{"gitId":"-"},"content":"        return new Tag(trimmedTag);","lastModifiedDate":"2017-05-30"},{"lineNumber":197,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-30"},{"lineNumber":198,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-30"},{"lineNumber":199,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-02-11"},{"lineNumber":200,"author":{"gitId":"-"},"content":"     * Parses {@code Collection\u003cString\u003e tags} into a {@code Set\u003cTag\u003e}.","lastModifiedDate":"2017-03-07"},{"lineNumber":201,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-02-11"},{"lineNumber":202,"author":{"gitId":"-"},"content":"    public static Set\u003cTag\u003e parseTags(Collection\u003cString\u003e tags) throws ParseException {","lastModifiedDate":"2018-07-10"},{"lineNumber":203,"author":{"gitId":"-"},"content":"        requireNonNull(tags);","lastModifiedDate":"2017-05-15"},{"lineNumber":204,"author":{"gitId":"-"},"content":"        final Set\u003cTag\u003e tagSet \u003d new HashSet\u003c\u003e();","lastModifiedDate":"2017-02-11"},{"lineNumber":205,"author":{"gitId":"-"},"content":"        for (String tagName : tags) {","lastModifiedDate":"2017-02-11"},{"lineNumber":206,"author":{"gitId":"-"},"content":"            tagSet.add(parseTag(tagName));","lastModifiedDate":"2017-05-30"},{"lineNumber":207,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-02-11"},{"lineNumber":208,"author":{"gitId":"-"},"content":"        return tagSet;","lastModifiedDate":"2017-03-07"},{"lineNumber":209,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-02-11"},{"lineNumber":210,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-02-11"}],"authorContributionMap":{"hieunm1821":19,"jaegarpoon":17,"-":124,"zxgoh":50}},{"path":"src/main/java/seedu/address/model/AddressBook.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.model;","lastModifiedDate":"2016-09-21"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2017-05-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.util.List;","lastModifiedDate":"2017-01-19"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2017-01-19"},{"lineNumber":8,"author":{"gitId":"zxgoh"},"content":"import seedu.address.model.customer.Customer;","lastModifiedDate":"2022-03-14"},{"lineNumber":9,"author":{"gitId":"zxgoh"},"content":"import seedu.address.model.customer.UniqueCustomerList;","lastModifiedDate":"2022-03-14"},{"lineNumber":10,"author":{"gitId":"jaegarpoon"},"content":"import seedu.address.model.dish.Dish;","lastModifiedDate":"2022-03-27"},{"lineNumber":11,"author":{"gitId":"jaegarpoon"},"content":"import seedu.address.model.dish.UniqueDishList;","lastModifiedDate":"2022-03-27"},{"lineNumber":12,"author":{"gitId":"zxgoh"},"content":"import seedu.address.model.driver.Driver;","lastModifiedDate":"2022-03-16"},{"lineNumber":13,"author":{"gitId":"zxgoh"},"content":"import seedu.address.model.driver.UniqueDriverList;","lastModifiedDate":"2022-03-16"},{"lineNumber":14,"author":{"gitId":"zxgoh"},"content":"import seedu.address.model.item.Person;","lastModifiedDate":"2022-03-16"},{"lineNumber":15,"author":{"gitId":"zxgoh"},"content":"import seedu.address.model.item.UniquePersonList;","lastModifiedDate":"2022-03-16"},{"lineNumber":16,"author":{"gitId":"zxgoh"},"content":"import seedu.address.model.order.Order;","lastModifiedDate":"2022-03-16"},{"lineNumber":17,"author":{"gitId":"zxgoh"},"content":"import seedu.address.model.order.UniqueOrderList;","lastModifiedDate":"2022-03-16"},{"lineNumber":18,"author":{"gitId":"zxgoh"},"content":"","lastModifiedDate":"2022-03-16"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":20,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-08"},{"lineNumber":21,"author":{"gitId":"-"},"content":" * Wraps all data at the address-book level","lastModifiedDate":"2016-08-08"},{"lineNumber":22,"author":{"gitId":"zxgoh"},"content":" * Duplicates are not allowed (by .isSameCustomer comparison)","lastModifiedDate":"2022-03-14"},{"lineNumber":23,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-08"},{"lineNumber":24,"author":{"gitId":"-"},"content":"public class AddressBook implements ReadOnlyAddressBook {","lastModifiedDate":"2016-08-08"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":26,"author":{"gitId":"zxgoh"},"content":"    private final UniqueCustomerList customers;","lastModifiedDate":"2022-03-14"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    private final UniquePersonList persons;","lastModifiedDate":"2022-03-16"},{"lineNumber":28,"author":{"gitId":"zxgoh"},"content":"    private final UniqueOrderList orders;","lastModifiedDate":"2022-03-16"},{"lineNumber":29,"author":{"gitId":"zxgoh"},"content":"    private final UniqueDishList dishes;","lastModifiedDate":"2022-03-16"},{"lineNumber":30,"author":{"gitId":"zxgoh"},"content":"    private final UniqueDriverList drivers;","lastModifiedDate":"2022-03-16"},{"lineNumber":31,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    /*","lastModifiedDate":"2016-10-19"},{"lineNumber":33,"author":{"gitId":"-"},"content":"     * The \u0027unusual\u0027 code block below is a non-static initialization block, sometimes used to avoid duplication","lastModifiedDate":"2019-05-11"},{"lineNumber":34,"author":{"gitId":"-"},"content":"     * between constructors. See https://docs.oracle.com/javase/tutorial/java/javaOO/initial.html","lastModifiedDate":"2016-10-19"},{"lineNumber":35,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2016-10-19"},{"lineNumber":36,"author":{"gitId":"-"},"content":"     * Note that non-static init blocks are not recommended to use. There are other ways to avoid duplication","lastModifiedDate":"2016-10-19"},{"lineNumber":37,"author":{"gitId":"-"},"content":"     *   among constructors.","lastModifiedDate":"2016-10-19"},{"lineNumber":38,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-10-19"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    {","lastModifiedDate":"2016-08-08"},{"lineNumber":40,"author":{"gitId":"zxgoh"},"content":"        customers \u003d new UniqueCustomerList();","lastModifiedDate":"2022-03-14"},{"lineNumber":41,"author":{"gitId":"-"},"content":"        persons \u003d new UniquePersonList();","lastModifiedDate":"2022-03-16"},{"lineNumber":42,"author":{"gitId":"zxgoh"},"content":"        orders \u003d new UniqueOrderList();","lastModifiedDate":"2022-03-16"},{"lineNumber":43,"author":{"gitId":"zxgoh"},"content":"        dishes \u003d new UniqueDishList();","lastModifiedDate":"2022-03-16"},{"lineNumber":44,"author":{"gitId":"zxgoh"},"content":"        drivers \u003d new UniqueDriverList();","lastModifiedDate":"2022-03-16"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":46,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    public AddressBook() {}","lastModifiedDate":"2016-08-08"},{"lineNumber":48,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-08"},{"lineNumber":50,"author":{"gitId":"zxgoh"},"content":"     * Creates an AddressBook using the Customers in the {@code toBeCopied}","lastModifiedDate":"2022-03-14"},{"lineNumber":51,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-08"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    public AddressBook(ReadOnlyAddressBook toBeCopied) {","lastModifiedDate":"2016-08-08"},{"lineNumber":53,"author":{"gitId":"-"},"content":"        this();","lastModifiedDate":"2016-12-24"},{"lineNumber":54,"author":{"gitId":"-"},"content":"        resetData(toBeCopied);","lastModifiedDate":"2016-12-24"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-22"},{"lineNumber":56,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    //// list overwrite operations","lastModifiedDate":"2016-08-08"},{"lineNumber":58,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":59,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-08-07"},{"lineNumber":60,"author":{"gitId":"zxgoh"},"content":"     * Replaces the contents of the customer list with {@code customers}.","lastModifiedDate":"2022-03-14"},{"lineNumber":61,"author":{"gitId":"zxgoh"},"content":"     * {@code customers} must not contain duplicate customers.","lastModifiedDate":"2022-03-14"},{"lineNumber":62,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-08-07"},{"lineNumber":63,"author":{"gitId":"zxgoh"},"content":"    public void setCustomers(List\u003cCustomer\u003e customers) {","lastModifiedDate":"2022-03-14"},{"lineNumber":64,"author":{"gitId":"zxgoh"},"content":"        this.customers.setCustomers(customers);","lastModifiedDate":"2022-03-14"},{"lineNumber":65,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":66,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":67,"author":{"gitId":"zxgoh"},"content":"    /**","lastModifiedDate":"2022-03-16"},{"lineNumber":68,"author":{"gitId":"zxgoh"},"content":"     * Replaces the contents of the dish list with {@code dishes}.","lastModifiedDate":"2022-03-16"},{"lineNumber":69,"author":{"gitId":"zxgoh"},"content":"     * {@code dishes} must not contain duplicate dishes.","lastModifiedDate":"2022-03-16"},{"lineNumber":70,"author":{"gitId":"zxgoh"},"content":"     */","lastModifiedDate":"2022-03-16"},{"lineNumber":71,"author":{"gitId":"zxgoh"},"content":"    public void setDishes(List\u003cDish\u003e dishes) {","lastModifiedDate":"2022-03-16"},{"lineNumber":72,"author":{"gitId":"zxgoh"},"content":"        this.dishes.setDishes(dishes);","lastModifiedDate":"2022-03-16"},{"lineNumber":73,"author":{"gitId":"zxgoh"},"content":"    }","lastModifiedDate":"2022-03-16"},{"lineNumber":74,"author":{"gitId":"zxgoh"},"content":"","lastModifiedDate":"2022-03-16"},{"lineNumber":75,"author":{"gitId":"zxgoh"},"content":"    /**","lastModifiedDate":"2022-03-16"},{"lineNumber":76,"author":{"gitId":"zxgoh"},"content":"     * Replaces the contents of the driver list with {@code drivers}.","lastModifiedDate":"2022-03-16"},{"lineNumber":77,"author":{"gitId":"zxgoh"},"content":"     * {@code drivers} must not contain duplicate drivers.","lastModifiedDate":"2022-03-16"},{"lineNumber":78,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2022-03-16"},{"lineNumber":79,"author":{"gitId":"zxgoh"},"content":"    public void setDrivers(List\u003cDriver\u003e drivers) {","lastModifiedDate":"2022-03-16"},{"lineNumber":80,"author":{"gitId":"zxgoh"},"content":"        this.drivers.setDrivers(drivers);","lastModifiedDate":"2022-03-16"},{"lineNumber":81,"author":{"gitId":"zxgoh"},"content":"    }","lastModifiedDate":"2022-03-16"},{"lineNumber":82,"author":{"gitId":"zxgoh"},"content":"","lastModifiedDate":"2022-03-16"},{"lineNumber":83,"author":{"gitId":"zxgoh"},"content":"    /**","lastModifiedDate":"2022-03-16"},{"lineNumber":84,"author":{"gitId":"zxgoh"},"content":"     * Replaces the contents of the order list with {@code orders}.","lastModifiedDate":"2022-03-16"},{"lineNumber":85,"author":{"gitId":"zxgoh"},"content":"     * {@code orders} must not contain duplicate orders.","lastModifiedDate":"2022-03-16"},{"lineNumber":86,"author":{"gitId":"zxgoh"},"content":"     */","lastModifiedDate":"2022-03-16"},{"lineNumber":87,"author":{"gitId":"zxgoh"},"content":"    public void setOrders(List\u003cOrder\u003e orders) {","lastModifiedDate":"2022-03-16"},{"lineNumber":88,"author":{"gitId":"zxgoh"},"content":"        this.orders.setOrders(orders);","lastModifiedDate":"2022-03-16"},{"lineNumber":89,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2022-03-16"},{"lineNumber":90,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-03-16"},{"lineNumber":91,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-08-16"},{"lineNumber":92,"author":{"gitId":"-"},"content":"     * Resets the existing data of this {@code AddressBook} with {@code newData}.","lastModifiedDate":"2017-08-16"},{"lineNumber":93,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-08-16"},{"lineNumber":94,"author":{"gitId":"-"},"content":"    public void resetData(ReadOnlyAddressBook newData) {","lastModifiedDate":"2016-08-08"},{"lineNumber":95,"author":{"gitId":"-"},"content":"        requireNonNull(newData);","lastModifiedDate":"2017-05-15"},{"lineNumber":96,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-12-20"},{"lineNumber":97,"author":{"gitId":"zxgoh"},"content":"        setCustomers(newData.getCustomerList());","lastModifiedDate":"2022-03-14"},{"lineNumber":98,"author":{"gitId":"zxgoh"},"content":"        setDishes(newData.getDishList());","lastModifiedDate":"2022-03-16"},{"lineNumber":99,"author":{"gitId":"zxgoh"},"content":"        setDrivers(newData.getDriverList());","lastModifiedDate":"2022-03-16"},{"lineNumber":100,"author":{"gitId":"zxgoh"},"content":"        setOrders(newData.getOrderList());","lastModifiedDate":"2022-03-16"},{"lineNumber":101,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":102,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":103,"author":{"gitId":"zxgoh"},"content":"    //// customer-level operations","lastModifiedDate":"2022-03-14"},{"lineNumber":104,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":105,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-08-06"},{"lineNumber":106,"author":{"gitId":"zxgoh"},"content":"     * Returns true if a customer with the same identity as {@code customer} exists in the address book.","lastModifiedDate":"2022-03-14"},{"lineNumber":107,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-08-06"},{"lineNumber":108,"author":{"gitId":"zxgoh"},"content":"    public boolean hasCustomer(Customer customer) {","lastModifiedDate":"2022-03-14"},{"lineNumber":109,"author":{"gitId":"zxgoh"},"content":"        requireNonNull(customer);","lastModifiedDate":"2022-03-14"},{"lineNumber":110,"author":{"gitId":"zxgoh"},"content":"        return customers.contains(customer);","lastModifiedDate":"2022-03-14"},{"lineNumber":111,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-06"},{"lineNumber":112,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-06"},{"lineNumber":113,"author":{"gitId":"zxgoh"},"content":"    /**","lastModifiedDate":"2022-03-16"},{"lineNumber":114,"author":{"gitId":"zxgoh"},"content":"     * Returns true if a driver with the same identity as {@code driver} exists in the database","lastModifiedDate":"2022-03-16"},{"lineNumber":115,"author":{"gitId":"zxgoh"},"content":"     */","lastModifiedDate":"2022-03-16"},{"lineNumber":116,"author":{"gitId":"zxgoh"},"content":"    public boolean hasDriver(Driver driver) {","lastModifiedDate":"2022-03-16"},{"lineNumber":117,"author":{"gitId":"zxgoh"},"content":"        requireNonNull(driver);","lastModifiedDate":"2022-03-16"},{"lineNumber":118,"author":{"gitId":"zxgoh"},"content":"        return drivers.contains(driver);","lastModifiedDate":"2022-03-16"},{"lineNumber":119,"author":{"gitId":"zxgoh"},"content":"    }","lastModifiedDate":"2022-03-16"},{"lineNumber":120,"author":{"gitId":"zxgoh"},"content":"","lastModifiedDate":"2022-03-16"},{"lineNumber":121,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-09-21"},{"lineNumber":122,"author":{"gitId":"zxgoh"},"content":"     * Adds a customer to the address book.","lastModifiedDate":"2022-03-14"},{"lineNumber":123,"author":{"gitId":"zxgoh"},"content":"     * The customer must not already exist in the address book.","lastModifiedDate":"2022-03-14"},{"lineNumber":124,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-09-21"},{"lineNumber":125,"author":{"gitId":"zxgoh"},"content":"    public void addCustomer(Customer p) {","lastModifiedDate":"2022-03-14"},{"lineNumber":126,"author":{"gitId":"zxgoh"},"content":"        customers.add(p);","lastModifiedDate":"2022-03-14"},{"lineNumber":127,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":128,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":129,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2022-03-16"},{"lineNumber":130,"author":{"gitId":"-"},"content":"     * Adds a person to the address book.","lastModifiedDate":"2022-03-16"},{"lineNumber":131,"author":{"gitId":"-"},"content":"     * The person must not already exist in the address book.","lastModifiedDate":"2022-03-16"},{"lineNumber":132,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2022-03-16"},{"lineNumber":133,"author":{"gitId":"-"},"content":"    public void addPerson(Person p) {","lastModifiedDate":"2022-03-16"},{"lineNumber":134,"author":{"gitId":"-"},"content":"        persons.add(p);","lastModifiedDate":"2022-03-16"},{"lineNumber":135,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2022-03-16"},{"lineNumber":136,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-03-16"},{"lineNumber":137,"author":{"gitId":"zxgoh"},"content":"    public void addDriver(Driver d) {","lastModifiedDate":"2022-03-16"},{"lineNumber":138,"author":{"gitId":"zxgoh"},"content":"        drivers.add(d);","lastModifiedDate":"2022-03-16"},{"lineNumber":139,"author":{"gitId":"zxgoh"},"content":"    }","lastModifiedDate":"2022-03-16"},{"lineNumber":140,"author":{"gitId":"zxgoh"},"content":"","lastModifiedDate":"2022-03-16"},{"lineNumber":141,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-12-13"},{"lineNumber":142,"author":{"gitId":"zxgoh"},"content":"     * Replaces the given customer {@code target} in the list with {@code editedCustomer}.","lastModifiedDate":"2022-03-14"},{"lineNumber":143,"author":{"gitId":"-"},"content":"     * {@code target} must exist in the address book.","lastModifiedDate":"2018-08-07"},{"lineNumber":144,"author":{"gitId":"zxgoh"},"content":"     * The customer identity of {@code editedCustomer} must not be the same as","lastModifiedDate":"2022-03-14"},{"lineNumber":145,"author":{"gitId":"zxgoh"},"content":"     * another existing customer in the address book.","lastModifiedDate":"2022-03-14"},{"lineNumber":146,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-12-13"},{"lineNumber":147,"author":{"gitId":"zxgoh"},"content":"    public void setCustomer(Customer target, Customer editedCustomer) {","lastModifiedDate":"2022-03-14"},{"lineNumber":148,"author":{"gitId":"zxgoh"},"content":"        requireNonNull(editedCustomer);","lastModifiedDate":"2022-03-14"},{"lineNumber":149,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-13"},{"lineNumber":150,"author":{"gitId":"zxgoh"},"content":"        customers.setCustomer(target, editedCustomer);","lastModifiedDate":"2022-03-14"},{"lineNumber":151,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-21"},{"lineNumber":152,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":153,"author":{"gitId":"hieunm1821"},"content":"    public void setDriver(Driver target, Driver editedDriver) {","lastModifiedDate":"2022-03-27"},{"lineNumber":154,"author":{"gitId":"hieunm1821"},"content":"        requireNonNull(editedDriver);","lastModifiedDate":"2022-03-27"},{"lineNumber":155,"author":{"gitId":"hieunm1821"},"content":"        drivers.setDriver(target, editedDriver);","lastModifiedDate":"2022-03-27"},{"lineNumber":156,"author":{"gitId":"hieunm1821"},"content":"    }","lastModifiedDate":"2022-03-27"},{"lineNumber":157,"author":{"gitId":"hieunm1821"},"content":"","lastModifiedDate":"2022-03-27"},{"lineNumber":158,"author":{"gitId":"jaegarpoon"},"content":"    /**","lastModifiedDate":"2022-03-27"},{"lineNumber":159,"author":{"gitId":"jaegarpoon"},"content":"     * Replaces the given dish {@code target} in the list with {@code editedDish}.","lastModifiedDate":"2022-03-27"},{"lineNumber":160,"author":{"gitId":"jaegarpoon"},"content":"     * {@code target} must exist in FoodOnWheels.","lastModifiedDate":"2022-03-27"},{"lineNumber":161,"author":{"gitId":"jaegarpoon"},"content":"     * The dish identity of {@code editedDish} must not be the same as","lastModifiedDate":"2022-03-27"},{"lineNumber":162,"author":{"gitId":"jaegarpoon"},"content":"     * another existing dish in FoodOnWheels.","lastModifiedDate":"2022-03-27"},{"lineNumber":163,"author":{"gitId":"jaegarpoon"},"content":"     */","lastModifiedDate":"2022-03-27"},{"lineNumber":164,"author":{"gitId":"jaegarpoon"},"content":"    public void setDish(Dish target, Dish editedDish) {","lastModifiedDate":"2022-03-27"},{"lineNumber":165,"author":{"gitId":"jaegarpoon"},"content":"        requireNonNull(editedDish);","lastModifiedDate":"2022-03-27"},{"lineNumber":166,"author":{"gitId":"jaegarpoon"},"content":"","lastModifiedDate":"2022-03-27"},{"lineNumber":167,"author":{"gitId":"jaegarpoon"},"content":"        dishes.setDish(target, editedDish);","lastModifiedDate":"2022-03-27"},{"lineNumber":168,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2022-03-27"},{"lineNumber":169,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-03-27"},{"lineNumber":170,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-08-16"},{"lineNumber":171,"author":{"gitId":"-"},"content":"     * Removes {@code key} from this {@code AddressBook}.","lastModifiedDate":"2017-08-16"},{"lineNumber":172,"author":{"gitId":"-"},"content":"     * {@code key} must exist in the address book.","lastModifiedDate":"2018-08-07"},{"lineNumber":173,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-08-16"},{"lineNumber":174,"author":{"gitId":"zxgoh"},"content":"    public void removeCustomer(Customer key) {","lastModifiedDate":"2022-03-14"},{"lineNumber":175,"author":{"gitId":"zxgoh"},"content":"        customers.remove(key);","lastModifiedDate":"2022-03-14"},{"lineNumber":176,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":177,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":178,"author":{"gitId":"zxgoh"},"content":"    public void removeDriver(Driver key) {","lastModifiedDate":"2022-03-16"},{"lineNumber":179,"author":{"gitId":"zxgoh"},"content":"        drivers.remove(key);","lastModifiedDate":"2022-03-16"},{"lineNumber":180,"author":{"gitId":"zxgoh"},"content":"    }","lastModifiedDate":"2022-03-16"},{"lineNumber":181,"author":{"gitId":"zxgoh"},"content":"","lastModifiedDate":"2022-03-16"},{"lineNumber":182,"author":{"gitId":"zxgoh"},"content":"    /**","lastModifiedDate":"2022-03-16"},{"lineNumber":183,"author":{"gitId":"zxgoh"},"content":"     * Returns true if a dish with the same identity as {@code dish} exists in the address book.","lastModifiedDate":"2022-03-16"},{"lineNumber":184,"author":{"gitId":"zxgoh"},"content":"     */","lastModifiedDate":"2022-03-16"},{"lineNumber":185,"author":{"gitId":"zxgoh"},"content":"    public boolean hasDish(Dish dish) {","lastModifiedDate":"2022-03-16"},{"lineNumber":186,"author":{"gitId":"zxgoh"},"content":"        requireNonNull(dish);","lastModifiedDate":"2022-03-16"},{"lineNumber":187,"author":{"gitId":"zxgoh"},"content":"        return dishes.contains(dish);","lastModifiedDate":"2022-03-16"},{"lineNumber":188,"author":{"gitId":"zxgoh"},"content":"    }","lastModifiedDate":"2022-03-16"},{"lineNumber":189,"author":{"gitId":"zxgoh"},"content":"","lastModifiedDate":"2022-03-16"},{"lineNumber":190,"author":{"gitId":"zxgoh"},"content":"    /**","lastModifiedDate":"2022-03-16"},{"lineNumber":191,"author":{"gitId":"zxgoh"},"content":"     * Adds a dish to FoodOnWheels.","lastModifiedDate":"2022-03-16"},{"lineNumber":192,"author":{"gitId":"zxgoh"},"content":"     * The dish must not already exist in FoodOnWheels.","lastModifiedDate":"2022-03-16"},{"lineNumber":193,"author":{"gitId":"zxgoh"},"content":"     */","lastModifiedDate":"2022-03-16"},{"lineNumber":194,"author":{"gitId":"zxgoh"},"content":"    public void addDish(Dish d) {","lastModifiedDate":"2022-03-16"},{"lineNumber":195,"author":{"gitId":"zxgoh"},"content":"        dishes.add(d);","lastModifiedDate":"2022-03-16"},{"lineNumber":196,"author":{"gitId":"zxgoh"},"content":"    }","lastModifiedDate":"2022-03-16"},{"lineNumber":197,"author":{"gitId":"zxgoh"},"content":"","lastModifiedDate":"2022-03-16"},{"lineNumber":198,"author":{"gitId":"zxgoh"},"content":"    /**","lastModifiedDate":"2022-03-16"},{"lineNumber":199,"author":{"gitId":"zxgoh"},"content":"     * Removes {@code key} from this {@code AddressBook}.","lastModifiedDate":"2022-03-16"},{"lineNumber":200,"author":{"gitId":"zxgoh"},"content":"     * {@code key} must exist in the address book.","lastModifiedDate":"2022-03-16"},{"lineNumber":201,"author":{"gitId":"zxgoh"},"content":"     */","lastModifiedDate":"2022-03-16"},{"lineNumber":202,"author":{"gitId":"zxgoh"},"content":"    public void removeDish(Dish key) {","lastModifiedDate":"2022-03-16"},{"lineNumber":203,"author":{"gitId":"zxgoh"},"content":"        dishes.remove(key);","lastModifiedDate":"2022-03-16"},{"lineNumber":204,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2022-03-16"},{"lineNumber":205,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-03-16"},{"lineNumber":206,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":207,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-08"},{"lineNumber":208,"author":{"gitId":"-"},"content":"    public String toString() {","lastModifiedDate":"2016-08-08"},{"lineNumber":209,"author":{"gitId":"-"},"content":"        // TODO: refine later","lastModifiedDate":"2016-08-08"},{"lineNumber":210,"author":{"gitId":"zxgoh"},"content":"        return customers.asUnmodifiableObservableList().size() + \" customers\"","lastModifiedDate":"2022-03-16"},{"lineNumber":211,"author":{"gitId":"zxgoh"},"content":"                + persons.asUnmodifiableObservableList().size() + \" persons \"","lastModifiedDate":"2022-03-16"},{"lineNumber":212,"author":{"gitId":"zxgoh"},"content":"                + dishes.asUnmodifiableObservableList().size() + \" dishes \"","lastModifiedDate":"2022-03-16"},{"lineNumber":213,"author":{"gitId":"zxgoh"},"content":"                + drivers.asUnmodifiableObservableList().size() + \" drivers\";","lastModifiedDate":"2022-03-16"},{"lineNumber":214,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":215,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":216,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-08"},{"lineNumber":217,"author":{"gitId":"zxgoh"},"content":"    public ObservableList\u003cCustomer\u003e getCustomerList() {","lastModifiedDate":"2022-03-14"},{"lineNumber":218,"author":{"gitId":"zxgoh"},"content":"        return customers.asUnmodifiableObservableList();","lastModifiedDate":"2022-03-14"},{"lineNumber":219,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-01"},{"lineNumber":220,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-01"},{"lineNumber":221,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2022-03-16"},{"lineNumber":222,"author":{"gitId":"-"},"content":"    public ObservableList\u003cPerson\u003e getPersonList() {","lastModifiedDate":"2022-03-16"},{"lineNumber":223,"author":{"gitId":"zxgoh"},"content":"        return persons.asUnmodifiableObservableList(); }","lastModifiedDate":"2022-03-16"},{"lineNumber":224,"author":{"gitId":"zxgoh"},"content":"","lastModifiedDate":"2022-03-16"},{"lineNumber":225,"author":{"gitId":"zxgoh"},"content":"    @Override","lastModifiedDate":"2022-03-16"},{"lineNumber":226,"author":{"gitId":"zxgoh"},"content":"    public ObservableList\u003cDriver\u003e getDriverList() {","lastModifiedDate":"2022-03-16"},{"lineNumber":227,"author":{"gitId":"zxgoh"},"content":"        return drivers.asUnmodifiableObservableList();","lastModifiedDate":"2022-03-16"},{"lineNumber":228,"author":{"gitId":"zxgoh"},"content":"    }","lastModifiedDate":"2022-03-16"},{"lineNumber":229,"author":{"gitId":"zxgoh"},"content":"    @Override","lastModifiedDate":"2022-03-16"},{"lineNumber":230,"author":{"gitId":"zxgoh"},"content":"    public ObservableList\u003cDish\u003e getDishList() {","lastModifiedDate":"2022-03-16"},{"lineNumber":231,"author":{"gitId":"zxgoh"},"content":"        return dishes.asUnmodifiableObservableList();","lastModifiedDate":"2022-03-16"},{"lineNumber":232,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2022-03-16"},{"lineNumber":233,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-03-16"},{"lineNumber":234,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-21"},{"lineNumber":235,"author":{"gitId":"-"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2016-09-21"},{"lineNumber":236,"author":{"gitId":"-"},"content":"        return other \u003d\u003d this // short circuit if same object","lastModifiedDate":"2016-09-21"},{"lineNumber":237,"author":{"gitId":"-"},"content":"                || (other instanceof AddressBook // instanceof handles nulls","lastModifiedDate":"2016-09-21"},{"lineNumber":238,"author":{"gitId":"zxgoh"},"content":"                \u0026\u0026 customers.equals(((AddressBook) other).customers));","lastModifiedDate":"2022-03-14"},{"lineNumber":239,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-21"},{"lineNumber":240,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":241,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-21"},{"lineNumber":242,"author":{"gitId":"-"},"content":"    public int hashCode() {","lastModifiedDate":"2016-09-21"},{"lineNumber":243,"author":{"gitId":"zxgoh"},"content":"        return customers.hashCode();","lastModifiedDate":"2022-03-14"},{"lineNumber":244,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-21"},{"lineNumber":245,"author":{"gitId":"zxgoh"},"content":"","lastModifiedDate":"2022-03-16"},{"lineNumber":246,"author":{"gitId":"zxgoh"},"content":"    /**","lastModifiedDate":"2022-03-16"},{"lineNumber":247,"author":{"gitId":"zxgoh"},"content":"     * Adds an order.","lastModifiedDate":"2022-03-16"},{"lineNumber":248,"author":{"gitId":"zxgoh"},"content":"     */","lastModifiedDate":"2022-03-16"},{"lineNumber":249,"author":{"gitId":"zxgoh"},"content":"    public void addOrder(Order order) {","lastModifiedDate":"2022-03-16"},{"lineNumber":250,"author":{"gitId":"zxgoh"},"content":"        orders.add(order);","lastModifiedDate":"2022-03-16"},{"lineNumber":251,"author":{"gitId":"zxgoh"},"content":"    }","lastModifiedDate":"2022-03-16"},{"lineNumber":252,"author":{"gitId":"zxgoh"},"content":"","lastModifiedDate":"2022-03-16"},{"lineNumber":253,"author":{"gitId":"zxgoh"},"content":"    @Override","lastModifiedDate":"2022-03-16"},{"lineNumber":254,"author":{"gitId":"zxgoh"},"content":"    public ObservableList\u003cOrder\u003e getOrderList() {","lastModifiedDate":"2022-03-16"},{"lineNumber":255,"author":{"gitId":"zxgoh"},"content":"        return orders.asUnmodifiableObservableList();","lastModifiedDate":"2022-03-16"},{"lineNumber":256,"author":{"gitId":"zxgoh"},"content":"    }","lastModifiedDate":"2022-03-16"},{"lineNumber":257,"author":{"gitId":"zxgoh"},"content":"","lastModifiedDate":"2022-03-16"},{"lineNumber":258,"author":{"gitId":"zxgoh"},"content":"    /**","lastModifiedDate":"2022-03-16"},{"lineNumber":259,"author":{"gitId":"zxgoh"},"content":"     * Returns true if an order with the same identity as {@code order} exists in the address book.","lastModifiedDate":"2022-03-16"},{"lineNumber":260,"author":{"gitId":"zxgoh"},"content":"     */","lastModifiedDate":"2022-03-16"},{"lineNumber":261,"author":{"gitId":"zxgoh"},"content":"    public boolean hasOrder(Order order) {","lastModifiedDate":"2022-03-16"},{"lineNumber":262,"author":{"gitId":"zxgoh"},"content":"        requireNonNull(order);","lastModifiedDate":"2022-03-16"},{"lineNumber":263,"author":{"gitId":"zxgoh"},"content":"        return orders.contains(order);","lastModifiedDate":"2022-03-16"},{"lineNumber":264,"author":{"gitId":"zxgoh"},"content":"    }","lastModifiedDate":"2022-03-16"},{"lineNumber":265,"author":{"gitId":"xzzz3"},"content":"","lastModifiedDate":"2022-03-28"},{"lineNumber":266,"author":{"gitId":"xzzz3"},"content":"    /**","lastModifiedDate":"2022-03-28"},{"lineNumber":267,"author":{"gitId":"xzzz3"},"content":"     * Replaces the given order {@code target} in the list with {@code editedOrder}.","lastModifiedDate":"2022-03-28"},{"lineNumber":268,"author":{"gitId":"xzzz3"},"content":"     * {@code target} must exist in the app.","lastModifiedDate":"2022-03-28"},{"lineNumber":269,"author":{"gitId":"xzzz3"},"content":"     * The order identity of {@code editedOrder} must not be the same as","lastModifiedDate":"2022-03-28"},{"lineNumber":270,"author":{"gitId":"xzzz3"},"content":"     * another existing order in the app.","lastModifiedDate":"2022-03-28"},{"lineNumber":271,"author":{"gitId":"xzzz3"},"content":"     */","lastModifiedDate":"2022-03-28"},{"lineNumber":272,"author":{"gitId":"xzzz3"},"content":"    public void setOrder(Order target, Order editedOrder) {","lastModifiedDate":"2022-03-28"},{"lineNumber":273,"author":{"gitId":"xzzz3"},"content":"        requireNonNull(editedOrder);","lastModifiedDate":"2022-03-28"},{"lineNumber":274,"author":{"gitId":"xzzz3"},"content":"","lastModifiedDate":"2022-03-28"},{"lineNumber":275,"author":{"gitId":"xzzz3"},"content":"        orders.setOrder(target, editedOrder);","lastModifiedDate":"2022-03-28"},{"lineNumber":276,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2022-03-28"},{"lineNumber":277,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"}],"authorContributionMap":{"hieunm1821":5,"xzzz3":11,"jaegarpoon":12,"-":109,"zxgoh":140}},{"path":"src/main/java/seedu/address/model/Model.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.model;","lastModifiedDate":"2016-09-25"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-11-27"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import java.util.function.Predicate;","lastModifiedDate":"2017-06-12"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2017-09-01"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.GuiSettings;","lastModifiedDate":"2018-11-27"},{"lineNumber":8,"author":{"gitId":"zxgoh"},"content":"import seedu.address.model.customer.Customer;","lastModifiedDate":"2022-03-14"},{"lineNumber":9,"author":{"gitId":"jaegarpoon"},"content":"import seedu.address.model.dish.Dish;","lastModifiedDate":"2022-03-24"},{"lineNumber":10,"author":{"gitId":"jaegarpoon"},"content":"import seedu.address.model.driver.Driver;","lastModifiedDate":"2022-03-27"},{"lineNumber":11,"author":{"gitId":"zxgoh"},"content":"import seedu.address.model.item.Person;","lastModifiedDate":"2022-03-16"},{"lineNumber":12,"author":{"gitId":"zxgoh"},"content":"import seedu.address.model.order.Order;","lastModifiedDate":"2022-03-16"},{"lineNumber":13,"author":{"gitId":"zxgoh"},"content":"","lastModifiedDate":"2022-03-16"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":15,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-09-25"},{"lineNumber":16,"author":{"gitId":"-"},"content":" * The API of the Model component.","lastModifiedDate":"2016-09-25"},{"lineNumber":17,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-09-25"},{"lineNumber":18,"author":{"gitId":"-"},"content":"public interface Model {","lastModifiedDate":"2016-09-25"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    /** {@code Predicate} that always evaluate to true */","lastModifiedDate":"2017-08-05"},{"lineNumber":20,"author":{"gitId":"zxgoh"},"content":"    Predicate\u003cCustomer\u003e PREDICATE_SHOW_ALL_CUSTOMERS \u003d unused -\u003e true;","lastModifiedDate":"2022-03-14"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    Predicate\u003cPerson\u003e PREDICATE_SHOW_ALL_PERSONS \u003d unused -\u003e true;","lastModifiedDate":"2022-03-16"},{"lineNumber":22,"author":{"gitId":"zxgoh"},"content":"    Predicate\u003cDriver\u003e PREDICATE_SHOW_ALL_DRIVERS \u003d unused -\u003e true;","lastModifiedDate":"2022-03-16"},{"lineNumber":23,"author":{"gitId":"xzzz3"},"content":"    Predicate\u003cOrder\u003e PREDICATE_SHOW_ALL_ORDERS \u003d unused -\u003e true;","lastModifiedDate":"2022-03-28"},{"lineNumber":24,"author":{"gitId":"zxgoh"},"content":"","lastModifiedDate":"2022-03-16"},{"lineNumber":25,"author":{"gitId":"zxgoh"},"content":"    /** {@code Predicate} that always evaluate to true */","lastModifiedDate":"2022-03-16"},{"lineNumber":26,"author":{"gitId":"zxgoh"},"content":"    Predicate\u003cDish\u003e PREDICATE_SHOW_ALL_DISHES \u003d unused -\u003e true;","lastModifiedDate":"2022-03-16"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-08-05"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-11-27"},{"lineNumber":29,"author":{"gitId":"-"},"content":"     * Replaces user prefs data with the data in {@code userPrefs}.","lastModifiedDate":"2018-12-06"},{"lineNumber":30,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-11-27"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    void setUserPrefs(ReadOnlyUserPrefs userPrefs);","lastModifiedDate":"2018-12-06"},{"lineNumber":32,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-11-27"},{"lineNumber":34,"author":{"gitId":"-"},"content":"     * Returns the user prefs.","lastModifiedDate":"2018-11-27"},{"lineNumber":35,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-11-27"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    ReadOnlyUserPrefs getUserPrefs();","lastModifiedDate":"2018-11-27"},{"lineNumber":37,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-11-27"},{"lineNumber":39,"author":{"gitId":"-"},"content":"     * Returns the user prefs\u0027 GUI settings.","lastModifiedDate":"2018-11-27"},{"lineNumber":40,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-11-27"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    GuiSettings getGuiSettings();","lastModifiedDate":"2018-11-27"},{"lineNumber":42,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-11-27"},{"lineNumber":44,"author":{"gitId":"-"},"content":"     * Sets the user prefs\u0027 GUI settings.","lastModifiedDate":"2018-11-27"},{"lineNumber":45,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-11-27"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    void setGuiSettings(GuiSettings guiSettings);","lastModifiedDate":"2018-11-27"},{"lineNumber":47,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-11-27"},{"lineNumber":49,"author":{"gitId":"-"},"content":"     * Returns the user prefs\u0027 address book file path.","lastModifiedDate":"2018-11-27"},{"lineNumber":50,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-11-27"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    Path getAddressBookFilePath();","lastModifiedDate":"2018-11-27"},{"lineNumber":52,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":53,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-11-27"},{"lineNumber":54,"author":{"gitId":"-"},"content":"     * Sets the user prefs\u0027 address book file path.","lastModifiedDate":"2018-11-27"},{"lineNumber":55,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-11-27"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    void setAddressBookFilePath(Path addressBookFilePath);","lastModifiedDate":"2018-11-27"},{"lineNumber":57,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":58,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-11-27"},{"lineNumber":59,"author":{"gitId":"-"},"content":"     * Replaces address book data with the data in {@code addressBook}.","lastModifiedDate":"2018-11-27"},{"lineNumber":60,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-11-27"},{"lineNumber":61,"author":{"gitId":"-"},"content":"    void setAddressBook(ReadOnlyAddressBook addressBook);","lastModifiedDate":"2018-11-27"},{"lineNumber":62,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":63,"author":{"gitId":"-"},"content":"    /** Returns the AddressBook */","lastModifiedDate":"2016-09-25"},{"lineNumber":64,"author":{"gitId":"-"},"content":"    ReadOnlyAddressBook getAddressBook();","lastModifiedDate":"2016-09-25"},{"lineNumber":65,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":66,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-08-06"},{"lineNumber":67,"author":{"gitId":"zxgoh"},"content":"     * Returns true if a customer with the same identity as {@code customer} exists in the address book.","lastModifiedDate":"2022-03-14"},{"lineNumber":68,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-08-06"},{"lineNumber":69,"author":{"gitId":"zxgoh"},"content":"    boolean hasCustomer(Customer customer);","lastModifiedDate":"2022-03-14"},{"lineNumber":70,"author":{"gitId":"-"},"content":"    boolean hasPerson(Person person);","lastModifiedDate":"2022-03-16"},{"lineNumber":71,"author":{"gitId":"zxgoh"},"content":"    boolean hasDriver(Driver driver);","lastModifiedDate":"2022-03-16"},{"lineNumber":72,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-06"},{"lineNumber":73,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-08-07"},{"lineNumber":74,"author":{"gitId":"zxgoh"},"content":"     * Deletes the given customer.","lastModifiedDate":"2022-03-14"},{"lineNumber":75,"author":{"gitId":"zxgoh"},"content":"     * The customer must exist in the address book.","lastModifiedDate":"2022-03-14"},{"lineNumber":76,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-08-07"},{"lineNumber":77,"author":{"gitId":"zxgoh"},"content":"    void deleteCustomer(Customer target);","lastModifiedDate":"2022-03-14"},{"lineNumber":78,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":79,"author":{"gitId":"zxgoh"},"content":"    void deletePerson(Person target);","lastModifiedDate":"2022-03-16"},{"lineNumber":80,"author":{"gitId":"zxgoh"},"content":"    void deleteDriver(Driver driverToDelete);","lastModifiedDate":"2022-03-16"},{"lineNumber":81,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-08-07"},{"lineNumber":82,"author":{"gitId":"zxgoh"},"content":"     * Adds the given customer.","lastModifiedDate":"2022-03-14"},{"lineNumber":83,"author":{"gitId":"zxgoh"},"content":"     * {@code customer} must not already exist in the address book.","lastModifiedDate":"2022-03-14"},{"lineNumber":84,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-08-07"},{"lineNumber":85,"author":{"gitId":"zxgoh"},"content":"    void addCustomer(Customer customer);","lastModifiedDate":"2022-03-14"},{"lineNumber":86,"author":{"gitId":"-"},"content":"    void addPerson(Person person);","lastModifiedDate":"2022-03-16"},{"lineNumber":87,"author":{"gitId":"zxgoh"},"content":"    void addDriver(Driver driver);","lastModifiedDate":"2022-03-16"},{"lineNumber":88,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":89,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-12-13"},{"lineNumber":90,"author":{"gitId":"zxgoh"},"content":"     * Replaces the given customer {@code target} with {@code editedCustomer}.","lastModifiedDate":"2022-03-14"},{"lineNumber":91,"author":{"gitId":"-"},"content":"     * {@code target} must exist in the address book.","lastModifiedDate":"2018-08-07"},{"lineNumber":92,"author":{"gitId":"zxgoh"},"content":"     * The customer identity of {@code editedCustomer} must not be the same as","lastModifiedDate":"2022-03-14"},{"lineNumber":93,"author":{"gitId":"zxgoh"},"content":"     * another existing customer in the address book.","lastModifiedDate":"2022-03-14"},{"lineNumber":94,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-12-13"},{"lineNumber":95,"author":{"gitId":"zxgoh"},"content":"    void setCustomer(Customer target, Customer editedCustomer);","lastModifiedDate":"2022-03-14"},{"lineNumber":96,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-13"},{"lineNumber":97,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2022-03-27"},{"lineNumber":98,"author":{"gitId":"jaegarpoon"},"content":"     * Replaces the given dish {@code target} with {@code editedDish}.","lastModifiedDate":"2022-03-27"},{"lineNumber":99,"author":{"gitId":"-"},"content":"     * {@code target} must exist in the address book.","lastModifiedDate":"2022-03-27"},{"lineNumber":100,"author":{"gitId":"jaegarpoon"},"content":"     * The dish identity of {@code editedDish} must not be the same as","lastModifiedDate":"2022-03-27"},{"lineNumber":101,"author":{"gitId":"jaegarpoon"},"content":"     * another existing dish in FoodOnWheels.","lastModifiedDate":"2022-03-27"},{"lineNumber":102,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2022-03-27"},{"lineNumber":103,"author":{"gitId":"jaegarpoon"},"content":"    void setDish(Dish target, Dish editedDish);","lastModifiedDate":"2022-03-27"},{"lineNumber":104,"author":{"gitId":"jaegarpoon"},"content":"","lastModifiedDate":"2022-03-27"},{"lineNumber":105,"author":{"gitId":"hieunm1821"},"content":"    void setDriver(Driver target, Driver editedDriver);","lastModifiedDate":"2022-03-27"},{"lineNumber":106,"author":{"gitId":"hieunm1821"},"content":"","lastModifiedDate":"2022-03-27"},{"lineNumber":107,"author":{"gitId":"jaegarpoon"},"content":"","lastModifiedDate":"2022-03-29"},{"lineNumber":108,"author":{"gitId":"zxgoh"},"content":"    /** Returns an unmodifiable view of the filtered customer list */","lastModifiedDate":"2022-03-14"},{"lineNumber":109,"author":{"gitId":"zxgoh"},"content":"    ObservableList\u003cCustomer\u003e getFilteredCustomerList();","lastModifiedDate":"2022-03-14"},{"lineNumber":110,"author":{"gitId":"zxgoh"},"content":"    /**","lastModifiedDate":"2022-03-16"},{"lineNumber":111,"author":{"gitId":"zxgoh"},"content":"     * Returns true if a dish with the same identity as {@code dish} exists in FoodOnWheels.","lastModifiedDate":"2022-03-16"},{"lineNumber":112,"author":{"gitId":"zxgoh"},"content":"     */","lastModifiedDate":"2022-03-16"},{"lineNumber":113,"author":{"gitId":"zxgoh"},"content":"    boolean hasDish(Dish dish);","lastModifiedDate":"2022-03-16"},{"lineNumber":114,"author":{"gitId":"zxgoh"},"content":"","lastModifiedDate":"2022-03-16"},{"lineNumber":115,"author":{"gitId":"zxgoh"},"content":"    /**","lastModifiedDate":"2022-03-16"},{"lineNumber":116,"author":{"gitId":"zxgoh"},"content":"     * Deletes the given dish.","lastModifiedDate":"2022-03-16"},{"lineNumber":117,"author":{"gitId":"zxgoh"},"content":"     * The dish must exist in the address book.","lastModifiedDate":"2022-03-16"},{"lineNumber":118,"author":{"gitId":"zxgoh"},"content":"     */","lastModifiedDate":"2022-03-16"},{"lineNumber":119,"author":{"gitId":"zxgoh"},"content":"    void deleteDish(Dish target);","lastModifiedDate":"2022-03-16"},{"lineNumber":120,"author":{"gitId":"zxgoh"},"content":"","lastModifiedDate":"2022-03-16"},{"lineNumber":121,"author":{"gitId":"zxgoh"},"content":"    /**","lastModifiedDate":"2022-03-16"},{"lineNumber":122,"author":{"gitId":"zxgoh"},"content":"     * Adds the given person.","lastModifiedDate":"2022-03-16"},{"lineNumber":123,"author":{"gitId":"zxgoh"},"content":"     * {@code person} must not already exist in the address book.","lastModifiedDate":"2022-03-16"},{"lineNumber":124,"author":{"gitId":"zxgoh"},"content":"     */","lastModifiedDate":"2022-03-16"},{"lineNumber":125,"author":{"gitId":"zxgoh"},"content":"    void addDish(Dish dish);","lastModifiedDate":"2022-03-16"},{"lineNumber":126,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-03-16"},{"lineNumber":127,"author":{"gitId":"-"},"content":"    /** Returns an unmodifiable view of the filtered person list */","lastModifiedDate":"2022-03-16"},{"lineNumber":128,"author":{"gitId":"-"},"content":"    ObservableList\u003cPerson\u003e getFilteredPersonList();","lastModifiedDate":"2022-03-16"},{"lineNumber":129,"author":{"gitId":"zxgoh"},"content":"    ObservableList\u003cDriver\u003e getFilteredDriverList();","lastModifiedDate":"2022-03-16"},{"lineNumber":130,"author":{"gitId":"zxgoh"},"content":"","lastModifiedDate":"2022-03-16"},{"lineNumber":131,"author":{"gitId":"zxgoh"},"content":"    /** Returns an unmodifiable view of the filtered dish list */","lastModifiedDate":"2022-03-16"},{"lineNumber":132,"author":{"gitId":"zxgoh"},"content":"    ObservableList\u003cDish\u003e getFilteredDishList();","lastModifiedDate":"2022-03-16"},{"lineNumber":133,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":134,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-08-05"},{"lineNumber":135,"author":{"gitId":"zxgoh"},"content":"     * Updates the filter of the filtered customer list to filter by the given {@code predicate}.","lastModifiedDate":"2022-03-14"},{"lineNumber":136,"author":{"gitId":"-"},"content":"     * @throws NullPointerException if {@code predicate} is null.","lastModifiedDate":"2017-08-05"},{"lineNumber":137,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-08-05"},{"lineNumber":138,"author":{"gitId":"zxgoh"},"content":"    void updateFilteredCustomerList(Predicate\u003cCustomer\u003e predicate);","lastModifiedDate":"2022-03-14"},{"lineNumber":139,"author":{"gitId":"-"},"content":"    void updateFilteredPersonList(Predicate\u003cPerson\u003e predicate);","lastModifiedDate":"2022-03-16"},{"lineNumber":140,"author":{"gitId":"zxgoh"},"content":"","lastModifiedDate":"2022-03-16"},{"lineNumber":141,"author":{"gitId":"zxgoh"},"content":"    /**","lastModifiedDate":"2022-03-16"},{"lineNumber":142,"author":{"gitId":"zxgoh"},"content":"     * Adds the given order.","lastModifiedDate":"2022-03-16"},{"lineNumber":143,"author":{"gitId":"zxgoh"},"content":"     */","lastModifiedDate":"2022-03-16"},{"lineNumber":144,"author":{"gitId":"zxgoh"},"content":"    void addOrder(Order order);","lastModifiedDate":"2022-03-16"},{"lineNumber":145,"author":{"gitId":"zxgoh"},"content":"","lastModifiedDate":"2022-03-16"},{"lineNumber":146,"author":{"gitId":"zxgoh"},"content":"    /** Returns an unmodifiable view of the filtered Order list */","lastModifiedDate":"2022-03-16"},{"lineNumber":147,"author":{"gitId":"zxgoh"},"content":"    ObservableList\u003cOrder\u003e getFilteredOrderList();","lastModifiedDate":"2022-03-16"},{"lineNumber":148,"author":{"gitId":"zxgoh"},"content":"","lastModifiedDate":"2022-03-16"},{"lineNumber":149,"author":{"gitId":"zxgoh"},"content":"    /**","lastModifiedDate":"2022-03-16"},{"lineNumber":150,"author":{"gitId":"zxgoh"},"content":"     * Returns true if an order with the same identity as {@code order} exists in the address book.","lastModifiedDate":"2022-03-16"},{"lineNumber":151,"author":{"gitId":"zxgoh"},"content":"     */","lastModifiedDate":"2022-03-16"},{"lineNumber":152,"author":{"gitId":"zxgoh"},"content":"    boolean hasOrder(Order order);","lastModifiedDate":"2022-03-16"},{"lineNumber":153,"author":{"gitId":"zxgoh"},"content":"","lastModifiedDate":"2022-03-16"},{"lineNumber":154,"author":{"gitId":"zxgoh"},"content":"    /**","lastModifiedDate":"2022-03-16"},{"lineNumber":155,"author":{"gitId":"zxgoh"},"content":"     * Updates the filter of the filtered order list to filter by the given {@code predicate}.","lastModifiedDate":"2022-03-16"},{"lineNumber":156,"author":{"gitId":"zxgoh"},"content":"     * @throws NullPointerException if {@code predicate} is null.","lastModifiedDate":"2022-03-16"},{"lineNumber":157,"author":{"gitId":"zxgoh"},"content":"     */","lastModifiedDate":"2022-03-16"},{"lineNumber":158,"author":{"gitId":"zxgoh"},"content":"    void updateFilteredOrderList(Predicate\u003cOrder\u003e predicate);","lastModifiedDate":"2022-03-16"},{"lineNumber":159,"author":{"gitId":"zxgoh"},"content":"","lastModifiedDate":"2022-03-16"},{"lineNumber":160,"author":{"gitId":"zxgoh"},"content":"","lastModifiedDate":"2022-03-16"},{"lineNumber":161,"author":{"gitId":"zxgoh"},"content":"    void updateFilteredDriverList(Predicate\u003cDriver\u003e driver);","lastModifiedDate":"2022-03-16"},{"lineNumber":162,"author":{"gitId":"zxgoh"},"content":"","lastModifiedDate":"2022-03-16"},{"lineNumber":163,"author":{"gitId":"zxgoh"},"content":"    /**","lastModifiedDate":"2022-03-16"},{"lineNumber":164,"author":{"gitId":"zxgoh"},"content":"     * Updates the filter of the filtered dish list to filter by the given {@code predicate}.","lastModifiedDate":"2022-03-16"},{"lineNumber":165,"author":{"gitId":"zxgoh"},"content":"     * @throws NullPointerException if {@code predicate} is null.","lastModifiedDate":"2022-03-16"},{"lineNumber":166,"author":{"gitId":"zxgoh"},"content":"     */","lastModifiedDate":"2022-03-16"},{"lineNumber":167,"author":{"gitId":"zxgoh"},"content":"    void updateFilteredDishList(Predicate\u003cDish\u003e predicate);","lastModifiedDate":"2022-03-16"},{"lineNumber":168,"author":{"gitId":"xzzz3"},"content":"","lastModifiedDate":"2022-03-28"},{"lineNumber":169,"author":{"gitId":"xzzz3"},"content":"    /**","lastModifiedDate":"2022-03-28"},{"lineNumber":170,"author":{"gitId":"xzzz3"},"content":"     * Replaces the given order {@code target} with {@code editedOrder}.","lastModifiedDate":"2022-03-28"},{"lineNumber":171,"author":{"gitId":"xzzz3"},"content":"     * {@code target} must exist in the app.","lastModifiedDate":"2022-03-28"},{"lineNumber":172,"author":{"gitId":"xzzz3"},"content":"     * The order identity of {@code editedOrder} must not be the same as","lastModifiedDate":"2022-03-28"},{"lineNumber":173,"author":{"gitId":"xzzz3"},"content":"     * another existing order in the address book.","lastModifiedDate":"2022-03-28"},{"lineNumber":174,"author":{"gitId":"xzzz3"},"content":"     */","lastModifiedDate":"2022-03-28"},{"lineNumber":175,"author":{"gitId":"xzzz3"},"content":"    void setOrder(Order target, Order editedOrder);","lastModifiedDate":"2022-03-28"},{"lineNumber":176,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-09-25"}],"authorContributionMap":{"xzzz3":9,"hieunm1821":2,"jaegarpoon":8,"-":80,"zxgoh":77}},{"path":"src/main/java/seedu/address/model/ModelManager.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.model;","lastModifiedDate":"2016-08-08"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2017-08-05"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static seedu.address.commons.util.CollectionUtil.requireAllNonNull;","lastModifiedDate":"2017-05-19"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-15"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-11-27"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import java.util.function.Predicate;","lastModifiedDate":"2017-06-12"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import java.util.logging.Logger;","lastModifiedDate":"2017-01-19"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2017-09-01"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import javafx.collections.transformation.FilteredList;","lastModifiedDate":"2016-08-26"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.GuiSettings;","lastModifiedDate":"2018-11-27"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.LogsCenter;","lastModifiedDate":"2016-09-23"},{"lineNumber":14,"author":{"gitId":"zxgoh"},"content":"import seedu.address.model.customer.Customer;","lastModifiedDate":"2022-03-14"},{"lineNumber":15,"author":{"gitId":"jaegarpoon"},"content":"import seedu.address.model.dish.Dish;","lastModifiedDate":"2022-03-24"},{"lineNumber":16,"author":{"gitId":"jaegarpoon"},"content":"import seedu.address.model.driver.Driver;","lastModifiedDate":"2022-03-27"},{"lineNumber":17,"author":{"gitId":"zxgoh"},"content":"import seedu.address.model.item.Person;","lastModifiedDate":"2022-03-16"},{"lineNumber":18,"author":{"gitId":"zxgoh"},"content":"import seedu.address.model.order.Order;","lastModifiedDate":"2022-03-16"},{"lineNumber":19,"author":{"gitId":"zxgoh"},"content":"","lastModifiedDate":"2022-03-16"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":21,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-08"},{"lineNumber":22,"author":{"gitId":"-"},"content":" * Represents the in-memory model of the address book data.","lastModifiedDate":"2016-08-08"},{"lineNumber":23,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-08"},{"lineNumber":24,"author":{"gitId":"-"},"content":"public class ModelManager implements Model {","lastModifiedDate":"2018-12-09"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    private static final Logger logger \u003d LogsCenter.getLogger(ModelManager.class);","lastModifiedDate":"2016-09-23"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    private final AddressBook addressBook;","lastModifiedDate":"2019-01-25"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    private final UserPrefs userPrefs;","lastModifiedDate":"2018-12-06"},{"lineNumber":29,"author":{"gitId":"zxgoh"},"content":"    private final FilteredList\u003cCustomer\u003e filteredCustomers;","lastModifiedDate":"2022-03-14"},{"lineNumber":30,"author":{"gitId":"zxgoh"},"content":"    private final FilteredList\u003cOrder\u003e filteredOrders;","lastModifiedDate":"2022-03-16"},{"lineNumber":31,"author":{"gitId":"zxgoh"},"content":"    private final FilteredList\u003cDriver\u003e filteredDrivers;","lastModifiedDate":"2022-03-16"},{"lineNumber":32,"author":{"gitId":"zxgoh"},"content":"    private final FilteredList\u003cDish\u003e filteredDishes;","lastModifiedDate":"2022-03-16"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-08"},{"lineNumber":35,"author":{"gitId":"-"},"content":"     * Initializes a ModelManager with the given addressBook and userPrefs.","lastModifiedDate":"2016-12-24"},{"lineNumber":36,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-08"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    public ModelManager(ReadOnlyAddressBook addressBook, ReadOnlyUserPrefs userPrefs) {","lastModifiedDate":"2018-12-06"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        requireAllNonNull(addressBook, userPrefs);","lastModifiedDate":"2017-05-19"},{"lineNumber":39,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":40,"author":{"gitId":"-"},"content":"        logger.fine(\"Initializing with address book: \" + addressBook + \" and user prefs \" + userPrefs);","lastModifiedDate":"2016-12-24"},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":42,"author":{"gitId":"-"},"content":"        this.addressBook \u003d new AddressBook(addressBook);","lastModifiedDate":"2019-01-25"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        this.userPrefs \u003d new UserPrefs(userPrefs);","lastModifiedDate":"2018-12-06"},{"lineNumber":44,"author":{"gitId":"zxgoh"},"content":"        filteredCustomers \u003d new FilteredList\u003c\u003e(this.addressBook.getCustomerList());","lastModifiedDate":"2022-03-14"},{"lineNumber":45,"author":{"gitId":"zxgoh"},"content":"        filteredOrders \u003d new FilteredList\u003c\u003e(this.addressBook.getOrderList());","lastModifiedDate":"2022-03-16"},{"lineNumber":46,"author":{"gitId":"zxgoh"},"content":"        filteredDrivers \u003d new FilteredList\u003c\u003e(this.addressBook.getDriverList());","lastModifiedDate":"2022-03-16"},{"lineNumber":47,"author":{"gitId":"zxgoh"},"content":"        filteredDishes \u003d new FilteredList\u003c\u003e(this.addressBook.getDishList());","lastModifiedDate":"2022-03-16"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":49,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    public ModelManager() {","lastModifiedDate":"2016-09-22"},{"lineNumber":51,"author":{"gitId":"-"},"content":"        this(new AddressBook(), new UserPrefs());","lastModifiedDate":"2016-09-25"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":53,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":54,"author":{"gitId":"-"},"content":"    //\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d UserPrefs \u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d","lastModifiedDate":"2018-11-27"},{"lineNumber":55,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2018-11-27"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    public void setUserPrefs(ReadOnlyUserPrefs userPrefs) {","lastModifiedDate":"2018-12-06"},{"lineNumber":58,"author":{"gitId":"-"},"content":"        requireNonNull(userPrefs);","lastModifiedDate":"2018-11-27"},{"lineNumber":59,"author":{"gitId":"-"},"content":"        this.userPrefs.resetData(userPrefs);","lastModifiedDate":"2018-12-06"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":61,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":62,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2018-11-27"},{"lineNumber":63,"author":{"gitId":"-"},"content":"    public ReadOnlyUserPrefs getUserPrefs() {","lastModifiedDate":"2018-11-27"},{"lineNumber":64,"author":{"gitId":"-"},"content":"        return userPrefs;","lastModifiedDate":"2018-11-27"},{"lineNumber":65,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":66,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":67,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2018-11-27"},{"lineNumber":68,"author":{"gitId":"-"},"content":"    public GuiSettings getGuiSettings() {","lastModifiedDate":"2018-11-27"},{"lineNumber":69,"author":{"gitId":"-"},"content":"        return userPrefs.getGuiSettings();","lastModifiedDate":"2018-11-27"},{"lineNumber":70,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":71,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":72,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2018-11-27"},{"lineNumber":73,"author":{"gitId":"-"},"content":"    public void setGuiSettings(GuiSettings guiSettings) {","lastModifiedDate":"2018-11-27"},{"lineNumber":74,"author":{"gitId":"-"},"content":"        requireNonNull(guiSettings);","lastModifiedDate":"2018-11-27"},{"lineNumber":75,"author":{"gitId":"-"},"content":"        userPrefs.setGuiSettings(guiSettings);","lastModifiedDate":"2018-11-27"},{"lineNumber":76,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":77,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":78,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2018-11-27"},{"lineNumber":79,"author":{"gitId":"-"},"content":"    public Path getAddressBookFilePath() {","lastModifiedDate":"2018-11-27"},{"lineNumber":80,"author":{"gitId":"-"},"content":"        return userPrefs.getAddressBookFilePath();","lastModifiedDate":"2018-11-27"},{"lineNumber":81,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":82,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":83,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2018-11-27"},{"lineNumber":84,"author":{"gitId":"-"},"content":"    public void setAddressBookFilePath(Path addressBookFilePath) {","lastModifiedDate":"2018-11-27"},{"lineNumber":85,"author":{"gitId":"-"},"content":"        requireNonNull(addressBookFilePath);","lastModifiedDate":"2018-11-27"},{"lineNumber":86,"author":{"gitId":"-"},"content":"        userPrefs.setAddressBookFilePath(addressBookFilePath);","lastModifiedDate":"2018-11-27"},{"lineNumber":87,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":88,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":89,"author":{"gitId":"-"},"content":"    //\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d AddressBook \u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d","lastModifiedDate":"2018-11-27"},{"lineNumber":90,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":91,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-25"},{"lineNumber":92,"author":{"gitId":"-"},"content":"    public void setAddressBook(ReadOnlyAddressBook addressBook) {","lastModifiedDate":"2018-11-27"},{"lineNumber":93,"author":{"gitId":"-"},"content":"        this.addressBook.resetData(addressBook);","lastModifiedDate":"2019-01-25"},{"lineNumber":94,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":95,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":96,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-25"},{"lineNumber":97,"author":{"gitId":"-"},"content":"    public ReadOnlyAddressBook getAddressBook() {","lastModifiedDate":"2016-09-21"},{"lineNumber":98,"author":{"gitId":"-"},"content":"        return addressBook;","lastModifiedDate":"2019-01-25"},{"lineNumber":99,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-21"},{"lineNumber":100,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":101,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2018-08-06"},{"lineNumber":102,"author":{"gitId":"zxgoh"},"content":"    public boolean hasCustomer(Customer customer) {","lastModifiedDate":"2022-03-14"},{"lineNumber":103,"author":{"gitId":"zxgoh"},"content":"        requireNonNull(customer);","lastModifiedDate":"2022-03-14"},{"lineNumber":104,"author":{"gitId":"zxgoh"},"content":"        return addressBook.hasCustomer(customer);","lastModifiedDate":"2022-03-14"},{"lineNumber":105,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-06"},{"lineNumber":106,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-06"},{"lineNumber":107,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2022-03-16"},{"lineNumber":108,"author":{"gitId":"-"},"content":"    public boolean hasPerson(Person person) {","lastModifiedDate":"2022-03-16"},{"lineNumber":109,"author":{"gitId":"zxgoh"},"content":"        return false;","lastModifiedDate":"2022-03-16"},{"lineNumber":110,"author":{"gitId":"zxgoh"},"content":"    }","lastModifiedDate":"2022-03-16"},{"lineNumber":111,"author":{"gitId":"zxgoh"},"content":"","lastModifiedDate":"2022-03-16"},{"lineNumber":112,"author":{"gitId":"zxgoh"},"content":"    @Override","lastModifiedDate":"2022-03-16"},{"lineNumber":113,"author":{"gitId":"zxgoh"},"content":"    public boolean hasDriver(Driver driver) {","lastModifiedDate":"2022-03-16"},{"lineNumber":114,"author":{"gitId":"zxgoh"},"content":"        requireNonNull(driver);","lastModifiedDate":"2022-03-16"},{"lineNumber":115,"author":{"gitId":"zxgoh"},"content":"        return addressBook.hasDriver(driver);","lastModifiedDate":"2022-03-16"},{"lineNumber":116,"author":{"gitId":"zxgoh"},"content":"    }","lastModifiedDate":"2022-03-16"},{"lineNumber":117,"author":{"gitId":"zxgoh"},"content":"","lastModifiedDate":"2022-03-16"},{"lineNumber":118,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-25"},{"lineNumber":119,"author":{"gitId":"zxgoh"},"content":"    public void deleteCustomer(Customer target) {","lastModifiedDate":"2022-03-14"},{"lineNumber":120,"author":{"gitId":"zxgoh"},"content":"        addressBook.removeCustomer(target);","lastModifiedDate":"2022-03-14"},{"lineNumber":121,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":122,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":123,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2022-03-16"},{"lineNumber":124,"author":{"gitId":"-"},"content":"    public void deletePerson(Person target) {","lastModifiedDate":"2022-03-16"},{"lineNumber":125,"author":{"gitId":"zxgoh"},"content":"","lastModifiedDate":"2022-03-16"},{"lineNumber":126,"author":{"gitId":"zxgoh"},"content":"    }","lastModifiedDate":"2022-03-16"},{"lineNumber":127,"author":{"gitId":"zxgoh"},"content":"","lastModifiedDate":"2022-03-16"},{"lineNumber":128,"author":{"gitId":"zxgoh"},"content":"    @Override","lastModifiedDate":"2022-03-16"},{"lineNumber":129,"author":{"gitId":"zxgoh"},"content":"    public void deleteDriver(Driver target) {","lastModifiedDate":"2022-03-16"},{"lineNumber":130,"author":{"gitId":"zxgoh"},"content":"        addressBook.removeDriver(target);","lastModifiedDate":"2022-03-16"},{"lineNumber":131,"author":{"gitId":"zxgoh"},"content":"    }","lastModifiedDate":"2022-03-16"},{"lineNumber":132,"author":{"gitId":"zxgoh"},"content":"","lastModifiedDate":"2022-03-16"},{"lineNumber":133,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-25"},{"lineNumber":134,"author":{"gitId":"zxgoh"},"content":"    public void addCustomer(Customer customer) {","lastModifiedDate":"2022-03-14"},{"lineNumber":135,"author":{"gitId":"zxgoh"},"content":"        addressBook.addCustomer(customer);","lastModifiedDate":"2022-03-14"},{"lineNumber":136,"author":{"gitId":"zxgoh"},"content":"        updateFilteredCustomerList(PREDICATE_SHOW_ALL_CUSTOMERS);","lastModifiedDate":"2022-03-14"},{"lineNumber":137,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-26"},{"lineNumber":138,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-26"},{"lineNumber":139,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2022-03-16"},{"lineNumber":140,"author":{"gitId":"-"},"content":"    public void addPerson(Person person) {","lastModifiedDate":"2022-03-16"},{"lineNumber":141,"author":{"gitId":"zxgoh"},"content":"","lastModifiedDate":"2022-03-16"},{"lineNumber":142,"author":{"gitId":"zxgoh"},"content":"    }","lastModifiedDate":"2022-03-16"},{"lineNumber":143,"author":{"gitId":"zxgoh"},"content":"","lastModifiedDate":"2022-03-16"},{"lineNumber":144,"author":{"gitId":"zxgoh"},"content":"    @Override","lastModifiedDate":"2022-03-16"},{"lineNumber":145,"author":{"gitId":"zxgoh"},"content":"    public void addDriver(Driver driver) {","lastModifiedDate":"2022-03-16"},{"lineNumber":146,"author":{"gitId":"zxgoh"},"content":"        addressBook.addDriver(driver);","lastModifiedDate":"2022-03-16"},{"lineNumber":147,"author":{"gitId":"zxgoh"},"content":"        updateFilteredDriverList(PREDICATE_SHOW_ALL_DRIVERS);","lastModifiedDate":"2022-03-16"},{"lineNumber":148,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2022-03-16"},{"lineNumber":149,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-03-16"},{"lineNumber":150,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-12-13"},{"lineNumber":151,"author":{"gitId":"zxgoh"},"content":"    public void setCustomer(Customer target, Customer editedCustomer) {","lastModifiedDate":"2022-03-14"},{"lineNumber":152,"author":{"gitId":"zxgoh"},"content":"        requireAllNonNull(target, editedCustomer);","lastModifiedDate":"2022-03-14"},{"lineNumber":153,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-13"},{"lineNumber":154,"author":{"gitId":"zxgoh"},"content":"        addressBook.setCustomer(target, editedCustomer);","lastModifiedDate":"2022-03-14"},{"lineNumber":155,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-13"},{"lineNumber":156,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-13"},{"lineNumber":157,"author":{"gitId":"jaegarpoon"},"content":"    @Override","lastModifiedDate":"2022-03-27"},{"lineNumber":158,"author":{"gitId":"jaegarpoon"},"content":"","lastModifiedDate":"2022-03-29"},{"lineNumber":159,"author":{"gitId":"jaegarpoon"},"content":"    public void setDish(Dish target, Dish editedDish) {","lastModifiedDate":"2022-03-27"},{"lineNumber":160,"author":{"gitId":"jaegarpoon"},"content":"        requireAllNonNull(target, editedDish);","lastModifiedDate":"2022-03-27"},{"lineNumber":161,"author":{"gitId":"jaegarpoon"},"content":"","lastModifiedDate":"2022-03-27"},{"lineNumber":162,"author":{"gitId":"jaegarpoon"},"content":"        addressBook.setDish(target, editedDish);","lastModifiedDate":"2022-03-27"},{"lineNumber":163,"author":{"gitId":"jaegarpoon"},"content":"    }","lastModifiedDate":"2022-03-27"},{"lineNumber":164,"author":{"gitId":"jaegarpoon"},"content":"","lastModifiedDate":"2022-03-27"},{"lineNumber":165,"author":{"gitId":"hieunm1821"},"content":"    public void setDriver(Driver target, Driver editedDriver) {","lastModifiedDate":"2022-03-27"},{"lineNumber":166,"author":{"gitId":"hieunm1821"},"content":"        requireAllNonNull(target, editedDriver);","lastModifiedDate":"2022-03-27"},{"lineNumber":167,"author":{"gitId":"hieunm1821"},"content":"        addressBook.setDriver(target, editedDriver);","lastModifiedDate":"2022-03-27"},{"lineNumber":168,"author":{"gitId":"hieunm1821"},"content":"    }","lastModifiedDate":"2022-03-27"},{"lineNumber":169,"author":{"gitId":"hieunm1821"},"content":"","lastModifiedDate":"2022-03-27"},{"lineNumber":170,"author":{"gitId":"zxgoh"},"content":"    //\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d Filtered Dish List Accessors \u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d","lastModifiedDate":"2022-03-16"},{"lineNumber":171,"author":{"gitId":"zxgoh"},"content":"    @Override","lastModifiedDate":"2022-03-16"},{"lineNumber":172,"author":{"gitId":"zxgoh"},"content":"    public boolean hasDish(Dish dish) {","lastModifiedDate":"2022-03-16"},{"lineNumber":173,"author":{"gitId":"zxgoh"},"content":"        requireNonNull(dish);","lastModifiedDate":"2022-03-16"},{"lineNumber":174,"author":{"gitId":"zxgoh"},"content":"        return addressBook.hasDish(dish);","lastModifiedDate":"2022-03-16"},{"lineNumber":175,"author":{"gitId":"zxgoh"},"content":"    }","lastModifiedDate":"2022-03-16"},{"lineNumber":176,"author":{"gitId":"zxgoh"},"content":"","lastModifiedDate":"2022-03-16"},{"lineNumber":177,"author":{"gitId":"zxgoh"},"content":"    @Override","lastModifiedDate":"2022-03-16"},{"lineNumber":178,"author":{"gitId":"zxgoh"},"content":"    public void deleteDish(Dish target) {","lastModifiedDate":"2022-03-16"},{"lineNumber":179,"author":{"gitId":"zxgoh"},"content":"        addressBook.removeDish(target);","lastModifiedDate":"2022-03-16"},{"lineNumber":180,"author":{"gitId":"zxgoh"},"content":"    }","lastModifiedDate":"2022-03-16"},{"lineNumber":181,"author":{"gitId":"zxgoh"},"content":"","lastModifiedDate":"2022-03-16"},{"lineNumber":182,"author":{"gitId":"zxgoh"},"content":"    @Override","lastModifiedDate":"2022-03-16"},{"lineNumber":183,"author":{"gitId":"zxgoh"},"content":"    public void addDish(Dish dish) {","lastModifiedDate":"2022-03-16"},{"lineNumber":184,"author":{"gitId":"zxgoh"},"content":"        addressBook.addDish(dish);","lastModifiedDate":"2022-03-16"},{"lineNumber":185,"author":{"gitId":"zxgoh"},"content":"        updateFilteredCustomerList(PREDICATE_SHOW_ALL_CUSTOMERS);","lastModifiedDate":"2022-03-16"},{"lineNumber":186,"author":{"gitId":"zxgoh"},"content":"    }","lastModifiedDate":"2022-03-16"},{"lineNumber":187,"author":{"gitId":"zxgoh"},"content":"","lastModifiedDate":"2022-03-16"},{"lineNumber":188,"author":{"gitId":"zxgoh"},"content":"    @Override","lastModifiedDate":"2022-03-16"},{"lineNumber":189,"author":{"gitId":"zxgoh"},"content":"    public ObservableList\u003cPerson\u003e getFilteredPersonList() {","lastModifiedDate":"2022-03-16"},{"lineNumber":190,"author":{"gitId":"zxgoh"},"content":"        return null;","lastModifiedDate":"2022-03-16"},{"lineNumber":191,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2022-03-16"},{"lineNumber":192,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-03-16"},{"lineNumber":193,"author":{"gitId":"zxgoh"},"content":"    //\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d Filtered Customer List Accessors \u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d","lastModifiedDate":"2022-03-14"},{"lineNumber":194,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":195,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-05-19"},{"lineNumber":196,"author":{"gitId":"zxgoh"},"content":"     * Returns an unmodifiable view of the list of {@code Customer} backed by the internal list of","lastModifiedDate":"2022-03-14"},{"lineNumber":197,"author":{"gitId":"-"},"content":"     * {@code versionedAddressBook}","lastModifiedDate":"2018-06-11"},{"lineNumber":198,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-05-19"},{"lineNumber":199,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-25"},{"lineNumber":200,"author":{"gitId":"zxgoh"},"content":"    public ObservableList\u003cCustomer\u003e getFilteredCustomerList() {","lastModifiedDate":"2022-03-14"},{"lineNumber":201,"author":{"gitId":"zxgoh"},"content":"        return filteredCustomers;","lastModifiedDate":"2022-03-14"},{"lineNumber":202,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-22"},{"lineNumber":203,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":204,"author":{"gitId":"zxgoh"},"content":"    /**","lastModifiedDate":"2022-03-16"},{"lineNumber":205,"author":{"gitId":"zxgoh"},"content":"     * Returns an unmodifiable view of the list of {@code Dish} backed by the internal list of","lastModifiedDate":"2022-03-16"},{"lineNumber":206,"author":{"gitId":"zxgoh"},"content":"     * {@code versionedAddressBook}","lastModifiedDate":"2022-03-16"},{"lineNumber":207,"author":{"gitId":"zxgoh"},"content":"     */","lastModifiedDate":"2022-03-16"},{"lineNumber":208,"author":{"gitId":"zxgoh"},"content":"    @Override","lastModifiedDate":"2022-03-16"},{"lineNumber":209,"author":{"gitId":"zxgoh"},"content":"    public ObservableList\u003cDish\u003e getFilteredDishList() {","lastModifiedDate":"2022-03-16"},{"lineNumber":210,"author":{"gitId":"zxgoh"},"content":"        return filteredDishes;","lastModifiedDate":"2022-03-16"},{"lineNumber":211,"author":{"gitId":"zxgoh"},"content":"    }","lastModifiedDate":"2022-03-16"},{"lineNumber":212,"author":{"gitId":"zxgoh"},"content":"","lastModifiedDate":"2022-03-16"},{"lineNumber":213,"author":{"gitId":"zxgoh"},"content":"    @Override","lastModifiedDate":"2022-03-16"},{"lineNumber":214,"author":{"gitId":"zxgoh"},"content":"    public ObservableList\u003cDriver\u003e getFilteredDriverList() {","lastModifiedDate":"2022-03-16"},{"lineNumber":215,"author":{"gitId":"zxgoh"},"content":"        return filteredDrivers;","lastModifiedDate":"2022-03-16"},{"lineNumber":216,"author":{"gitId":"zxgoh"},"content":"    }","lastModifiedDate":"2022-03-16"},{"lineNumber":217,"author":{"gitId":"zxgoh"},"content":"","lastModifiedDate":"2022-03-16"},{"lineNumber":218,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-25"},{"lineNumber":219,"author":{"gitId":"zxgoh"},"content":"    public void updateFilteredCustomerList(Predicate\u003cCustomer\u003e predicate) {","lastModifiedDate":"2022-03-14"},{"lineNumber":220,"author":{"gitId":"-"},"content":"        requireNonNull(predicate);","lastModifiedDate":"2017-08-05"},{"lineNumber":221,"author":{"gitId":"zxgoh"},"content":"        filteredCustomers.setPredicate(predicate);","lastModifiedDate":"2022-03-14"},{"lineNumber":222,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-22"},{"lineNumber":223,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":224,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2022-03-16"},{"lineNumber":225,"author":{"gitId":"-"},"content":"    public void updateFilteredPersonList(Predicate\u003cPerson\u003e predicate) {","lastModifiedDate":"2022-03-16"},{"lineNumber":226,"author":{"gitId":"zxgoh"},"content":"","lastModifiedDate":"2022-03-16"},{"lineNumber":227,"author":{"gitId":"zxgoh"},"content":"    }","lastModifiedDate":"2022-03-16"},{"lineNumber":228,"author":{"gitId":"zxgoh"},"content":"","lastModifiedDate":"2022-03-16"},{"lineNumber":229,"author":{"gitId":"zxgoh"},"content":"    @Override","lastModifiedDate":"2022-03-16"},{"lineNumber":230,"author":{"gitId":"zxgoh"},"content":"    public void updateFilteredDriverList(Predicate\u003cDriver\u003e predicate) {","lastModifiedDate":"2022-03-16"},{"lineNumber":231,"author":{"gitId":"zxgoh"},"content":"        requireNonNull(predicate);","lastModifiedDate":"2022-03-16"},{"lineNumber":232,"author":{"gitId":"zxgoh"},"content":"        filteredDrivers.setPredicate(predicate);","lastModifiedDate":"2022-03-16"},{"lineNumber":233,"author":{"gitId":"zxgoh"},"content":"    }","lastModifiedDate":"2022-03-16"},{"lineNumber":234,"author":{"gitId":"zxgoh"},"content":"    @Override","lastModifiedDate":"2022-03-16"},{"lineNumber":235,"author":{"gitId":"zxgoh"},"content":"    public void updateFilteredDishList(Predicate\u003cDish\u003e predicate) {","lastModifiedDate":"2022-03-16"},{"lineNumber":236,"author":{"gitId":"-"},"content":"        requireNonNull(predicate);","lastModifiedDate":"2022-03-16"},{"lineNumber":237,"author":{"gitId":"zxgoh"},"content":"        filteredDishes.setPredicate(predicate);","lastModifiedDate":"2022-03-16"},{"lineNumber":238,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2022-03-16"},{"lineNumber":239,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-03-16"},{"lineNumber":240,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2017-05-31"},{"lineNumber":241,"author":{"gitId":"-"},"content":"    public boolean equals(Object obj) {","lastModifiedDate":"2017-05-31"},{"lineNumber":242,"author":{"gitId":"-"},"content":"        // short circuit if same object","lastModifiedDate":"2017-05-31"},{"lineNumber":243,"author":{"gitId":"-"},"content":"        if (obj \u003d\u003d this) {","lastModifiedDate":"2017-05-31"},{"lineNumber":244,"author":{"gitId":"-"},"content":"            return true;","lastModifiedDate":"2017-05-31"},{"lineNumber":245,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-31"},{"lineNumber":246,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-31"},{"lineNumber":247,"author":{"gitId":"-"},"content":"        // instanceof handles nulls","lastModifiedDate":"2017-05-31"},{"lineNumber":248,"author":{"gitId":"-"},"content":"        if (!(obj instanceof ModelManager)) {","lastModifiedDate":"2017-05-31"},{"lineNumber":249,"author":{"gitId":"-"},"content":"            return false;","lastModifiedDate":"2017-05-31"},{"lineNumber":250,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-31"},{"lineNumber":251,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-31"},{"lineNumber":252,"author":{"gitId":"-"},"content":"        // state check","lastModifiedDate":"2017-05-31"},{"lineNumber":253,"author":{"gitId":"-"},"content":"        ModelManager other \u003d (ModelManager) obj;","lastModifiedDate":"2017-05-31"},{"lineNumber":254,"author":{"gitId":"-"},"content":"        return addressBook.equals(other.addressBook)","lastModifiedDate":"2019-01-25"},{"lineNumber":255,"author":{"gitId":"-"},"content":"                \u0026\u0026 userPrefs.equals(other.userPrefs)","lastModifiedDate":"2018-11-27"},{"lineNumber":256,"author":{"gitId":"zxgoh"},"content":"                \u0026\u0026 filteredCustomers.equals(other.filteredCustomers)","lastModifiedDate":"2022-03-16"},{"lineNumber":257,"author":{"gitId":"zxgoh"},"content":"                \u0026\u0026 filteredDishes.equals(other.filteredDishes);","lastModifiedDate":"2022-03-16"},{"lineNumber":258,"author":{"gitId":"zxgoh"},"content":"    }","lastModifiedDate":"2022-03-16"},{"lineNumber":259,"author":{"gitId":"zxgoh"},"content":"","lastModifiedDate":"2022-03-16"},{"lineNumber":260,"author":{"gitId":"xzzz3"},"content":"    //\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d Order features \u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d","lastModifiedDate":"2022-03-29"},{"lineNumber":261,"author":{"gitId":"zxgoh"},"content":"    @Override","lastModifiedDate":"2022-03-16"},{"lineNumber":262,"author":{"gitId":"zxgoh"},"content":"    public void addOrder(Order order) {","lastModifiedDate":"2022-03-16"},{"lineNumber":263,"author":{"gitId":"zxgoh"},"content":"        addressBook.addOrder(order);","lastModifiedDate":"2022-03-16"},{"lineNumber":264,"author":{"gitId":"zxgoh"},"content":"        updateFilteredCustomerList(PREDICATE_SHOW_ALL_CUSTOMERS);","lastModifiedDate":"2022-03-16"},{"lineNumber":265,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-31"},{"lineNumber":266,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-31"},{"lineNumber":267,"author":{"gitId":"zxgoh"},"content":"    /**","lastModifiedDate":"2022-03-16"},{"lineNumber":268,"author":{"gitId":"zxgoh"},"content":"     * Returns an unmodifiable view of the list of {@code Order} backed by the internal list of","lastModifiedDate":"2022-03-16"},{"lineNumber":269,"author":{"gitId":"zxgoh"},"content":"     * {@code versionedAddressBook}","lastModifiedDate":"2022-03-16"},{"lineNumber":270,"author":{"gitId":"zxgoh"},"content":"     */","lastModifiedDate":"2022-03-16"},{"lineNumber":271,"author":{"gitId":"zxgoh"},"content":"    @Override","lastModifiedDate":"2022-03-16"},{"lineNumber":272,"author":{"gitId":"zxgoh"},"content":"    public ObservableList\u003cOrder\u003e getFilteredOrderList() {","lastModifiedDate":"2022-03-16"},{"lineNumber":273,"author":{"gitId":"zxgoh"},"content":"        return filteredOrders;","lastModifiedDate":"2022-03-16"},{"lineNumber":274,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2022-03-16"},{"lineNumber":275,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-03-16"},{"lineNumber":276,"author":{"gitId":"zxgoh"},"content":"    @Override","lastModifiedDate":"2022-03-16"},{"lineNumber":277,"author":{"gitId":"zxgoh"},"content":"    public boolean hasOrder(Order order) {","lastModifiedDate":"2022-03-16"},{"lineNumber":278,"author":{"gitId":"zxgoh"},"content":"        requireNonNull(order);","lastModifiedDate":"2022-03-16"},{"lineNumber":279,"author":{"gitId":"zxgoh"},"content":"        return addressBook.hasOrder(order);","lastModifiedDate":"2022-03-16"},{"lineNumber":280,"author":{"gitId":"zxgoh"},"content":"    }","lastModifiedDate":"2022-03-16"},{"lineNumber":281,"author":{"gitId":"zxgoh"},"content":"","lastModifiedDate":"2022-03-16"},{"lineNumber":282,"author":{"gitId":"zxgoh"},"content":"    @Override","lastModifiedDate":"2022-03-16"},{"lineNumber":283,"author":{"gitId":"zxgoh"},"content":"    public void updateFilteredOrderList(Predicate\u003cOrder\u003e predicate) {","lastModifiedDate":"2022-03-16"},{"lineNumber":284,"author":{"gitId":"zxgoh"},"content":"        requireNonNull(predicate);","lastModifiedDate":"2022-03-16"},{"lineNumber":285,"author":{"gitId":"zxgoh"},"content":"        filteredOrders.setPredicate(predicate);","lastModifiedDate":"2022-03-16"},{"lineNumber":286,"author":{"gitId":"zxgoh"},"content":"    }","lastModifiedDate":"2022-03-16"},{"lineNumber":287,"author":{"gitId":"xzzz3"},"content":"","lastModifiedDate":"2022-03-28"},{"lineNumber":288,"author":{"gitId":"xzzz3"},"content":"    @Override","lastModifiedDate":"2022-03-28"},{"lineNumber":289,"author":{"gitId":"xzzz3"},"content":"    public void setOrder(Order target, Order editedOrder) {","lastModifiedDate":"2022-03-28"},{"lineNumber":290,"author":{"gitId":"xzzz3"},"content":"        requireAllNonNull(target, editedOrder);","lastModifiedDate":"2022-03-28"},{"lineNumber":291,"author":{"gitId":"xzzz3"},"content":"","lastModifiedDate":"2022-03-28"},{"lineNumber":292,"author":{"gitId":"xzzz3"},"content":"        addressBook.setOrder(target, editedOrder);","lastModifiedDate":"2022-03-28"},{"lineNumber":293,"author":{"gitId":"xzzz3"},"content":"    }","lastModifiedDate":"2022-03-28"},{"lineNumber":294,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"}],"authorContributionMap":{"hieunm1821":5,"xzzz3":8,"jaegarpoon":10,"-":146,"zxgoh":125}},{"path":"src/main/java/seedu/address/model/ReadOnlyAddressBook.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.model;","lastModifiedDate":"2016-09-21"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2017-01-19"},{"lineNumber":4,"author":{"gitId":"zxgoh"},"content":"import seedu.address.model.customer.Customer;","lastModifiedDate":"2022-03-14"},{"lineNumber":5,"author":{"gitId":"jaegarpoon"},"content":"import seedu.address.model.dish.Dish;","lastModifiedDate":"2022-03-24"},{"lineNumber":6,"author":{"gitId":"jaegarpoon"},"content":"import seedu.address.model.driver.Driver;","lastModifiedDate":"2022-03-27"},{"lineNumber":7,"author":{"gitId":"zxgoh"},"content":"import seedu.address.model.item.Person;","lastModifiedDate":"2022-03-16"},{"lineNumber":8,"author":{"gitId":"zxgoh"},"content":"import seedu.address.model.order.Order;","lastModifiedDate":"2022-03-16"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":10,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-08"},{"lineNumber":11,"author":{"gitId":"-"},"content":" * Unmodifiable view of an address book","lastModifiedDate":"2016-08-08"},{"lineNumber":12,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-08"},{"lineNumber":13,"author":{"gitId":"-"},"content":"public interface ReadOnlyAddressBook {","lastModifiedDate":"2019-01-25"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":15,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-08"},{"lineNumber":16,"author":{"gitId":"zxgoh"},"content":"     * Returns an unmodifiable view of the customers list.","lastModifiedDate":"2022-03-14"},{"lineNumber":17,"author":{"gitId":"zxgoh"},"content":"     * This list will not contain any duplicate customers.","lastModifiedDate":"2022-03-14"},{"lineNumber":18,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-08"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    ObservableList\u003cPerson\u003e getPersonList();","lastModifiedDate":"2022-03-16"},{"lineNumber":20,"author":{"gitId":"zxgoh"},"content":"    ObservableList\u003cDriver\u003e getDriverList();","lastModifiedDate":"2022-03-16"},{"lineNumber":21,"author":{"gitId":"zxgoh"},"content":"    ObservableList\u003cDish\u003e getDishList();","lastModifiedDate":"2022-03-16"},{"lineNumber":22,"author":{"gitId":"zxgoh"},"content":"","lastModifiedDate":"2022-03-16"},{"lineNumber":23,"author":{"gitId":"zxgoh"},"content":"    /**","lastModifiedDate":"2022-03-16"},{"lineNumber":24,"author":{"gitId":"zxgoh"},"content":"     * Returns an unmodifiable view of the orders list.","lastModifiedDate":"2022-03-16"},{"lineNumber":25,"author":{"gitId":"zxgoh"},"content":"     * This list will not contain any duplicate orders.","lastModifiedDate":"2022-03-16"},{"lineNumber":26,"author":{"gitId":"zxgoh"},"content":"     */","lastModifiedDate":"2022-03-16"},{"lineNumber":27,"author":{"gitId":"zxgoh"},"content":"    ObservableList\u003cOrder\u003e getOrderList();","lastModifiedDate":"2022-03-16"},{"lineNumber":28,"author":{"gitId":"zxgoh"},"content":"    ObservableList\u003cCustomer\u003e getCustomerList();","lastModifiedDate":"2022-03-14"},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":30,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"}],"authorContributionMap":{"jaegarpoon":2,"-":14,"zxgoh":14}},{"path":"src/main/java/seedu/address/model/customer/AddressCustomer.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"zxgoh"},"content":"package seedu.address.model.customer;","lastModifiedDate":"2022-03-14"},{"lineNumber":2,"author":{"gitId":"zxgoh"},"content":"","lastModifiedDate":"2022-03-14"},{"lineNumber":3,"author":{"gitId":"zxgoh"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2022-03-14"},{"lineNumber":4,"author":{"gitId":"zxgoh"},"content":"import static seedu.address.commons.util.AppUtil.checkArgument;","lastModifiedDate":"2022-03-14"},{"lineNumber":5,"author":{"gitId":"zxgoh"},"content":"","lastModifiedDate":"2022-03-14"},{"lineNumber":6,"author":{"gitId":"zxgoh"},"content":"/**","lastModifiedDate":"2022-03-14"},{"lineNumber":7,"author":{"gitId":"zxgoh"},"content":" * Represents a Customer\u0027s address in the address book.","lastModifiedDate":"2022-03-14"},{"lineNumber":8,"author":{"gitId":"zxgoh"},"content":" * Guarantees: immutable; is valid as declared in {@link #isValidAddress(String)}","lastModifiedDate":"2022-03-14"},{"lineNumber":9,"author":{"gitId":"zxgoh"},"content":" */","lastModifiedDate":"2022-03-14"},{"lineNumber":10,"author":{"gitId":"zxgoh"},"content":"public class AddressCustomer {","lastModifiedDate":"2022-03-15"},{"lineNumber":11,"author":{"gitId":"zxgoh"},"content":"","lastModifiedDate":"2022-03-14"},{"lineNumber":12,"author":{"gitId":"zxgoh"},"content":"    public static final String MESSAGE_CONSTRAINTS \u003d \"Addresses can take any values, and it should not be blank\";","lastModifiedDate":"2022-03-14"},{"lineNumber":13,"author":{"gitId":"zxgoh"},"content":"","lastModifiedDate":"2022-03-14"},{"lineNumber":14,"author":{"gitId":"zxgoh"},"content":"    /*","lastModifiedDate":"2022-03-14"},{"lineNumber":15,"author":{"gitId":"zxgoh"},"content":"     * The first character of the address must not be a whitespace,","lastModifiedDate":"2022-03-14"},{"lineNumber":16,"author":{"gitId":"zxgoh"},"content":"     * otherwise \" \" (a blank string) becomes a valid input.","lastModifiedDate":"2022-03-14"},{"lineNumber":17,"author":{"gitId":"zxgoh"},"content":"     */","lastModifiedDate":"2022-03-14"},{"lineNumber":18,"author":{"gitId":"zxgoh"},"content":"    public static final String VALIDATION_REGEX \u003d \"[^\\\\s].*\";","lastModifiedDate":"2022-03-14"},{"lineNumber":19,"author":{"gitId":"zxgoh"},"content":"","lastModifiedDate":"2022-03-14"},{"lineNumber":20,"author":{"gitId":"zxgoh"},"content":"    public final String value;","lastModifiedDate":"2022-03-14"},{"lineNumber":21,"author":{"gitId":"zxgoh"},"content":"","lastModifiedDate":"2022-03-14"},{"lineNumber":22,"author":{"gitId":"zxgoh"},"content":"    /**","lastModifiedDate":"2022-03-14"},{"lineNumber":23,"author":{"gitId":"zxgoh"},"content":"     * Constructs an {@code AddressCustomer}.","lastModifiedDate":"2022-03-15"},{"lineNumber":24,"author":{"gitId":"zxgoh"},"content":"     *","lastModifiedDate":"2022-03-14"},{"lineNumber":25,"author":{"gitId":"zxgoh"},"content":"     * @param address A valid address.","lastModifiedDate":"2022-03-14"},{"lineNumber":26,"author":{"gitId":"zxgoh"},"content":"     */","lastModifiedDate":"2022-03-14"},{"lineNumber":27,"author":{"gitId":"zxgoh"},"content":"    public AddressCustomer(String address) {","lastModifiedDate":"2022-03-15"},{"lineNumber":28,"author":{"gitId":"zxgoh"},"content":"        requireNonNull(address);","lastModifiedDate":"2022-03-14"},{"lineNumber":29,"author":{"gitId":"zxgoh"},"content":"        checkArgument(isValidAddress(address), MESSAGE_CONSTRAINTS);","lastModifiedDate":"2022-03-14"},{"lineNumber":30,"author":{"gitId":"zxgoh"},"content":"        value \u003d address;","lastModifiedDate":"2022-03-14"},{"lineNumber":31,"author":{"gitId":"zxgoh"},"content":"    }","lastModifiedDate":"2022-03-14"},{"lineNumber":32,"author":{"gitId":"zxgoh"},"content":"","lastModifiedDate":"2022-03-14"},{"lineNumber":33,"author":{"gitId":"zxgoh"},"content":"    /**","lastModifiedDate":"2022-03-14"},{"lineNumber":34,"author":{"gitId":"zxgoh"},"content":"     * Returns true if a given string is a valid email.","lastModifiedDate":"2022-03-14"},{"lineNumber":35,"author":{"gitId":"zxgoh"},"content":"     */","lastModifiedDate":"2022-03-14"},{"lineNumber":36,"author":{"gitId":"zxgoh"},"content":"    public static boolean isValidAddress(String test) {","lastModifiedDate":"2022-03-14"},{"lineNumber":37,"author":{"gitId":"zxgoh"},"content":"        return test.matches(VALIDATION_REGEX);","lastModifiedDate":"2022-03-14"},{"lineNumber":38,"author":{"gitId":"zxgoh"},"content":"    }","lastModifiedDate":"2022-03-14"},{"lineNumber":39,"author":{"gitId":"zxgoh"},"content":"","lastModifiedDate":"2022-03-14"},{"lineNumber":40,"author":{"gitId":"zxgoh"},"content":"    @Override","lastModifiedDate":"2022-03-14"},{"lineNumber":41,"author":{"gitId":"zxgoh"},"content":"    public String toString() {","lastModifiedDate":"2022-03-14"},{"lineNumber":42,"author":{"gitId":"zxgoh"},"content":"        return value;","lastModifiedDate":"2022-03-14"},{"lineNumber":43,"author":{"gitId":"zxgoh"},"content":"    }","lastModifiedDate":"2022-03-14"},{"lineNumber":44,"author":{"gitId":"zxgoh"},"content":"","lastModifiedDate":"2022-03-14"},{"lineNumber":45,"author":{"gitId":"zxgoh"},"content":"    @Override","lastModifiedDate":"2022-03-14"},{"lineNumber":46,"author":{"gitId":"zxgoh"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2022-03-14"},{"lineNumber":47,"author":{"gitId":"zxgoh"},"content":"        return other \u003d\u003d this // short circuit if same object","lastModifiedDate":"2022-03-14"},{"lineNumber":48,"author":{"gitId":"zxgoh"},"content":"                || (other instanceof AddressCustomer // instanceof handles nulls","lastModifiedDate":"2022-03-15"},{"lineNumber":49,"author":{"gitId":"zxgoh"},"content":"                \u0026\u0026 value.equals(((AddressCustomer) other).value)); // state check","lastModifiedDate":"2022-03-15"},{"lineNumber":50,"author":{"gitId":"zxgoh"},"content":"    }","lastModifiedDate":"2022-03-14"},{"lineNumber":51,"author":{"gitId":"zxgoh"},"content":"","lastModifiedDate":"2022-03-14"},{"lineNumber":52,"author":{"gitId":"zxgoh"},"content":"    @Override","lastModifiedDate":"2022-03-14"},{"lineNumber":53,"author":{"gitId":"zxgoh"},"content":"    public int hashCode() {","lastModifiedDate":"2022-03-14"},{"lineNumber":54,"author":{"gitId":"zxgoh"},"content":"        return value.hashCode();","lastModifiedDate":"2022-03-14"},{"lineNumber":55,"author":{"gitId":"zxgoh"},"content":"    }","lastModifiedDate":"2022-03-14"},{"lineNumber":56,"author":{"gitId":"zxgoh"},"content":"","lastModifiedDate":"2022-03-14"},{"lineNumber":57,"author":{"gitId":"zxgoh"},"content":"}","lastModifiedDate":"2022-03-14"}],"authorContributionMap":{"zxgoh":57}},{"path":"src/main/java/seedu/address/model/customer/Customer.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"zxgoh"},"content":"package seedu.address.model.customer;","lastModifiedDate":"2022-03-14"},{"lineNumber":2,"author":{"gitId":"zxgoh"},"content":"","lastModifiedDate":"2022-03-14"},{"lineNumber":3,"author":{"gitId":"zxgoh"},"content":"import static seedu.address.commons.util.CollectionUtil.requireAllNonNull;","lastModifiedDate":"2022-03-14"},{"lineNumber":4,"author":{"gitId":"zxgoh"},"content":"","lastModifiedDate":"2022-03-14"},{"lineNumber":5,"author":{"gitId":"zxgoh"},"content":"import java.util.Objects;","lastModifiedDate":"2022-03-14"},{"lineNumber":6,"author":{"gitId":"zxgoh"},"content":"","lastModifiedDate":"2022-03-14"},{"lineNumber":7,"author":{"gitId":"zxgoh"},"content":"/**","lastModifiedDate":"2022-03-14"},{"lineNumber":8,"author":{"gitId":"zxgoh"},"content":" * Represents a Customer in the addressCustomer book.","lastModifiedDate":"2022-03-15"},{"lineNumber":9,"author":{"gitId":"zxgoh"},"content":" * Guarantees: details are present and not null, field values are validated, immutable.","lastModifiedDate":"2022-03-14"},{"lineNumber":10,"author":{"gitId":"zxgoh"},"content":" */","lastModifiedDate":"2022-03-14"},{"lineNumber":11,"author":{"gitId":"zxgoh"},"content":"public class Customer {","lastModifiedDate":"2022-03-14"},{"lineNumber":12,"author":{"gitId":"zxgoh"},"content":"","lastModifiedDate":"2022-03-14"},{"lineNumber":13,"author":{"gitId":"zxgoh"},"content":"    // Identity fields","lastModifiedDate":"2022-03-14"},{"lineNumber":14,"author":{"gitId":"zxgoh"},"content":"    private final NameCustomer nameCustomer;","lastModifiedDate":"2022-03-15"},{"lineNumber":15,"author":{"gitId":"zxgoh"},"content":"    private final PhoneCustomer phoneCustomer;","lastModifiedDate":"2022-03-15"},{"lineNumber":16,"author":{"gitId":"zxgoh"},"content":"","lastModifiedDate":"2022-03-14"},{"lineNumber":17,"author":{"gitId":"zxgoh"},"content":"    // Data fields","lastModifiedDate":"2022-03-14"},{"lineNumber":18,"author":{"gitId":"zxgoh"},"content":"    private final AddressCustomer addressCustomer;","lastModifiedDate":"2022-03-15"},{"lineNumber":19,"author":{"gitId":"zxgoh"},"content":"","lastModifiedDate":"2022-03-14"},{"lineNumber":20,"author":{"gitId":"zxgoh"},"content":"    /**","lastModifiedDate":"2022-03-14"},{"lineNumber":21,"author":{"gitId":"zxgoh"},"content":"     * Every field must be present and not null.","lastModifiedDate":"2022-03-14"},{"lineNumber":22,"author":{"gitId":"zxgoh"},"content":"     */","lastModifiedDate":"2022-03-14"},{"lineNumber":23,"author":{"gitId":"zxgoh"},"content":"    public Customer(NameCustomer nameCustomer, PhoneCustomer phoneCustomer, AddressCustomer addressCustomer) {","lastModifiedDate":"2022-03-15"},{"lineNumber":24,"author":{"gitId":"zxgoh"},"content":"        requireAllNonNull(nameCustomer, phoneCustomer, addressCustomer);","lastModifiedDate":"2022-03-15"},{"lineNumber":25,"author":{"gitId":"zxgoh"},"content":"        this.nameCustomer \u003d nameCustomer;","lastModifiedDate":"2022-03-15"},{"lineNumber":26,"author":{"gitId":"zxgoh"},"content":"        this.phoneCustomer \u003d phoneCustomer;","lastModifiedDate":"2022-03-15"},{"lineNumber":27,"author":{"gitId":"zxgoh"},"content":"        this.addressCustomer \u003d addressCustomer;","lastModifiedDate":"2022-03-15"},{"lineNumber":28,"author":{"gitId":"zxgoh"},"content":"    }","lastModifiedDate":"2022-03-14"},{"lineNumber":29,"author":{"gitId":"zxgoh"},"content":"","lastModifiedDate":"2022-03-14"},{"lineNumber":30,"author":{"gitId":"zxgoh"},"content":"    public NameCustomer getName() {","lastModifiedDate":"2022-03-15"},{"lineNumber":31,"author":{"gitId":"zxgoh"},"content":"        return nameCustomer;","lastModifiedDate":"2022-03-15"},{"lineNumber":32,"author":{"gitId":"zxgoh"},"content":"    }","lastModifiedDate":"2022-03-14"},{"lineNumber":33,"author":{"gitId":"zxgoh"},"content":"","lastModifiedDate":"2022-03-14"},{"lineNumber":34,"author":{"gitId":"zxgoh"},"content":"    public PhoneCustomer getPhone() {","lastModifiedDate":"2022-03-15"},{"lineNumber":35,"author":{"gitId":"zxgoh"},"content":"        return phoneCustomer;","lastModifiedDate":"2022-03-15"},{"lineNumber":36,"author":{"gitId":"zxgoh"},"content":"    }","lastModifiedDate":"2022-03-14"},{"lineNumber":37,"author":{"gitId":"zxgoh"},"content":"","lastModifiedDate":"2022-03-14"},{"lineNumber":38,"author":{"gitId":"zxgoh"},"content":"    public AddressCustomer getAddress() {","lastModifiedDate":"2022-03-15"},{"lineNumber":39,"author":{"gitId":"zxgoh"},"content":"        return addressCustomer;","lastModifiedDate":"2022-03-15"},{"lineNumber":40,"author":{"gitId":"zxgoh"},"content":"    }","lastModifiedDate":"2022-03-14"},{"lineNumber":41,"author":{"gitId":"zxgoh"},"content":"","lastModifiedDate":"2022-03-14"},{"lineNumber":42,"author":{"gitId":"zxgoh"},"content":"    /**","lastModifiedDate":"2022-03-14"},{"lineNumber":43,"author":{"gitId":"zxgoh"},"content":"     * Returns true if both customers have the same nameCustomer.","lastModifiedDate":"2022-03-15"},{"lineNumber":44,"author":{"gitId":"zxgoh"},"content":"     * This defines a weaker notion of equality between two customers.","lastModifiedDate":"2022-03-14"},{"lineNumber":45,"author":{"gitId":"zxgoh"},"content":"     */","lastModifiedDate":"2022-03-14"},{"lineNumber":46,"author":{"gitId":"zxgoh"},"content":"    public boolean isSameCustomer(Customer otherCustomer) {","lastModifiedDate":"2022-03-14"},{"lineNumber":47,"author":{"gitId":"zxgoh"},"content":"        if (otherCustomer \u003d\u003d this) {","lastModifiedDate":"2022-03-14"},{"lineNumber":48,"author":{"gitId":"zxgoh"},"content":"            return true;","lastModifiedDate":"2022-03-14"},{"lineNumber":49,"author":{"gitId":"zxgoh"},"content":"        }","lastModifiedDate":"2022-03-14"},{"lineNumber":50,"author":{"gitId":"zxgoh"},"content":"","lastModifiedDate":"2022-03-14"},{"lineNumber":51,"author":{"gitId":"zxgoh"},"content":"        return otherCustomer !\u003d null","lastModifiedDate":"2022-03-14"},{"lineNumber":52,"author":{"gitId":"xzzz3"},"content":"                \u0026\u0026 (otherCustomer.getName().equals(getName())","lastModifiedDate":"2022-03-30"},{"lineNumber":53,"author":{"gitId":"xzzz3"},"content":"                || otherCustomer.getPhone().equals(getPhone()));","lastModifiedDate":"2022-03-30"},{"lineNumber":54,"author":{"gitId":"zxgoh"},"content":"    }","lastModifiedDate":"2022-03-14"},{"lineNumber":55,"author":{"gitId":"zxgoh"},"content":"","lastModifiedDate":"2022-03-14"},{"lineNumber":56,"author":{"gitId":"zxgoh"},"content":"    /**","lastModifiedDate":"2022-03-14"},{"lineNumber":57,"author":{"gitId":"zxgoh"},"content":"     * Returns true if both customers have the same identity and data fields.","lastModifiedDate":"2022-03-14"},{"lineNumber":58,"author":{"gitId":"zxgoh"},"content":"     * This defines a stronger notion of equality between two customers.","lastModifiedDate":"2022-03-14"},{"lineNumber":59,"author":{"gitId":"zxgoh"},"content":"     */","lastModifiedDate":"2022-03-14"},{"lineNumber":60,"author":{"gitId":"zxgoh"},"content":"    @Override","lastModifiedDate":"2022-03-14"},{"lineNumber":61,"author":{"gitId":"zxgoh"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2022-03-14"},{"lineNumber":62,"author":{"gitId":"zxgoh"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2022-03-14"},{"lineNumber":63,"author":{"gitId":"zxgoh"},"content":"            return true;","lastModifiedDate":"2022-03-14"},{"lineNumber":64,"author":{"gitId":"zxgoh"},"content":"        }","lastModifiedDate":"2022-03-14"},{"lineNumber":65,"author":{"gitId":"zxgoh"},"content":"","lastModifiedDate":"2022-03-14"},{"lineNumber":66,"author":{"gitId":"zxgoh"},"content":"        if (!(other instanceof Customer)) {","lastModifiedDate":"2022-03-14"},{"lineNumber":67,"author":{"gitId":"zxgoh"},"content":"            return false;","lastModifiedDate":"2022-03-14"},{"lineNumber":68,"author":{"gitId":"zxgoh"},"content":"        }","lastModifiedDate":"2022-03-14"},{"lineNumber":69,"author":{"gitId":"zxgoh"},"content":"","lastModifiedDate":"2022-03-14"},{"lineNumber":70,"author":{"gitId":"zxgoh"},"content":"        Customer otherCustomer \u003d (Customer) other;","lastModifiedDate":"2022-03-14"},{"lineNumber":71,"author":{"gitId":"zxgoh"},"content":"        return otherCustomer.getName().equals(getName())","lastModifiedDate":"2022-03-14"},{"lineNumber":72,"author":{"gitId":"zxgoh"},"content":"                \u0026\u0026 otherCustomer.getPhone().equals(getPhone())","lastModifiedDate":"2022-03-14"},{"lineNumber":73,"author":{"gitId":"zxgoh"},"content":"                \u0026\u0026 otherCustomer.getAddress().equals(getAddress());","lastModifiedDate":"2022-03-14"},{"lineNumber":74,"author":{"gitId":"zxgoh"},"content":"    }","lastModifiedDate":"2022-03-14"},{"lineNumber":75,"author":{"gitId":"zxgoh"},"content":"","lastModifiedDate":"2022-03-14"},{"lineNumber":76,"author":{"gitId":"zxgoh"},"content":"    @Override","lastModifiedDate":"2022-03-14"},{"lineNumber":77,"author":{"gitId":"zxgoh"},"content":"    public int hashCode() {","lastModifiedDate":"2022-03-14"},{"lineNumber":78,"author":{"gitId":"zxgoh"},"content":"        // use this method for custom fields hashing instead of implementing your own","lastModifiedDate":"2022-03-14"},{"lineNumber":79,"author":{"gitId":"zxgoh"},"content":"        return Objects.hash(nameCustomer, phoneCustomer, addressCustomer);","lastModifiedDate":"2022-03-15"},{"lineNumber":80,"author":{"gitId":"zxgoh"},"content":"    }","lastModifiedDate":"2022-03-14"},{"lineNumber":81,"author":{"gitId":"zxgoh"},"content":"","lastModifiedDate":"2022-03-14"},{"lineNumber":82,"author":{"gitId":"zxgoh"},"content":"    @Override","lastModifiedDate":"2022-03-14"},{"lineNumber":83,"author":{"gitId":"zxgoh"},"content":"    public String toString() {","lastModifiedDate":"2022-03-14"},{"lineNumber":84,"author":{"gitId":"zxgoh"},"content":"        final StringBuilder builder \u003d new StringBuilder();","lastModifiedDate":"2022-03-14"},{"lineNumber":85,"author":{"gitId":"zxgoh"},"content":"        builder.append(getName())","lastModifiedDate":"2022-03-14"},{"lineNumber":86,"author":{"gitId":"zxgoh"},"content":"                .append(\"; PhoneCustomer: \")","lastModifiedDate":"2022-03-15"},{"lineNumber":87,"author":{"gitId":"zxgoh"},"content":"                .append(getPhone())","lastModifiedDate":"2022-03-14"},{"lineNumber":88,"author":{"gitId":"zxgoh"},"content":"                .append(\"; AddressCustomer: \")","lastModifiedDate":"2022-03-15"},{"lineNumber":89,"author":{"gitId":"zxgoh"},"content":"                .append(getAddress());","lastModifiedDate":"2022-03-14"},{"lineNumber":90,"author":{"gitId":"zxgoh"},"content":"","lastModifiedDate":"2022-03-14"},{"lineNumber":91,"author":{"gitId":"zxgoh"},"content":"        return builder.toString();","lastModifiedDate":"2022-03-14"},{"lineNumber":92,"author":{"gitId":"zxgoh"},"content":"    }","lastModifiedDate":"2022-03-14"},{"lineNumber":93,"author":{"gitId":"zxgoh"},"content":"","lastModifiedDate":"2022-03-14"},{"lineNumber":94,"author":{"gitId":"zxgoh"},"content":"}","lastModifiedDate":"2022-03-14"}],"authorContributionMap":{"xzzz3":2,"zxgoh":92}},{"path":"src/main/java/seedu/address/model/customer/EmailCustomer.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"zxgoh"},"content":"package seedu.address.model.customer;","lastModifiedDate":"2022-03-14"},{"lineNumber":2,"author":{"gitId":"zxgoh"},"content":"","lastModifiedDate":"2022-03-14"},{"lineNumber":3,"author":{"gitId":"zxgoh"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2022-03-14"},{"lineNumber":4,"author":{"gitId":"zxgoh"},"content":"import static seedu.address.commons.util.AppUtil.checkArgument;","lastModifiedDate":"2022-03-14"},{"lineNumber":5,"author":{"gitId":"zxgoh"},"content":"","lastModifiedDate":"2022-03-14"},{"lineNumber":6,"author":{"gitId":"zxgoh"},"content":"/**","lastModifiedDate":"2022-03-14"},{"lineNumber":7,"author":{"gitId":"zxgoh"},"content":" * Represents a Customer\u0027s email in the address book.","lastModifiedDate":"2022-03-14"},{"lineNumber":8,"author":{"gitId":"zxgoh"},"content":" * Guarantees: immutable; is valid as declared in {@link #isValidEmail(String)}","lastModifiedDate":"2022-03-14"},{"lineNumber":9,"author":{"gitId":"zxgoh"},"content":" */","lastModifiedDate":"2022-03-14"},{"lineNumber":10,"author":{"gitId":"zxgoh"},"content":"public class EmailCustomer {","lastModifiedDate":"2022-03-15"},{"lineNumber":11,"author":{"gitId":"zxgoh"},"content":"","lastModifiedDate":"2022-03-14"},{"lineNumber":12,"author":{"gitId":"zxgoh"},"content":"    private static final String SPECIAL_CHARACTERS \u003d \"+_.-\";","lastModifiedDate":"2022-03-14"},{"lineNumber":13,"author":{"gitId":"zxgoh"},"content":"    public static final String MESSAGE_CONSTRAINTS \u003d \"Emails should be of the format local-part@domain \"","lastModifiedDate":"2022-03-14"},{"lineNumber":14,"author":{"gitId":"zxgoh"},"content":"            + \"and adhere to the following constraints:\\n\"","lastModifiedDate":"2022-03-14"},{"lineNumber":15,"author":{"gitId":"zxgoh"},"content":"            + \"1. The local-part should only contain alphanumeric characters and these special characters, excluding \"","lastModifiedDate":"2022-03-14"},{"lineNumber":16,"author":{"gitId":"zxgoh"},"content":"            + \"the parentheses, (\" + SPECIAL_CHARACTERS + \"). The local-part may not start or end with any special \"","lastModifiedDate":"2022-03-14"},{"lineNumber":17,"author":{"gitId":"zxgoh"},"content":"            + \"characters.\\n\"","lastModifiedDate":"2022-03-14"},{"lineNumber":18,"author":{"gitId":"zxgoh"},"content":"            + \"2. This is followed by a \u0027@\u0027 and then a domain name. The domain name is made up of domain labels \"","lastModifiedDate":"2022-03-14"},{"lineNumber":19,"author":{"gitId":"zxgoh"},"content":"            + \"separated by periods.\\n\"","lastModifiedDate":"2022-03-14"},{"lineNumber":20,"author":{"gitId":"zxgoh"},"content":"            + \"The domain name must:\\n\"","lastModifiedDate":"2022-03-14"},{"lineNumber":21,"author":{"gitId":"zxgoh"},"content":"            + \"    - end with a domain label at least 2 characters long\\n\"","lastModifiedDate":"2022-03-14"},{"lineNumber":22,"author":{"gitId":"zxgoh"},"content":"            + \"    - have each domain label start and end with alphanumeric characters\\n\"","lastModifiedDate":"2022-03-14"},{"lineNumber":23,"author":{"gitId":"zxgoh"},"content":"            + \"    - have each domain label consist of alphanumeric characters, separated only by hyphens, if any.\";","lastModifiedDate":"2022-03-14"},{"lineNumber":24,"author":{"gitId":"zxgoh"},"content":"    // alphanumeric and special characters","lastModifiedDate":"2022-03-14"},{"lineNumber":25,"author":{"gitId":"zxgoh"},"content":"    private static final String ALPHANUMERIC_NO_UNDERSCORE \u003d \"[^\\\\W_]+\"; // alphanumeric characters except underscore","lastModifiedDate":"2022-03-14"},{"lineNumber":26,"author":{"gitId":"zxgoh"},"content":"    private static final String LOCAL_PART_REGEX \u003d \"^\" + ALPHANUMERIC_NO_UNDERSCORE + \"([\" + SPECIAL_CHARACTERS + \"]\"","lastModifiedDate":"2022-03-14"},{"lineNumber":27,"author":{"gitId":"zxgoh"},"content":"            + ALPHANUMERIC_NO_UNDERSCORE + \")*\";","lastModifiedDate":"2022-03-14"},{"lineNumber":28,"author":{"gitId":"zxgoh"},"content":"    private static final String DOMAIN_PART_REGEX \u003d ALPHANUMERIC_NO_UNDERSCORE","lastModifiedDate":"2022-03-14"},{"lineNumber":29,"author":{"gitId":"zxgoh"},"content":"            + \"(-\" + ALPHANUMERIC_NO_UNDERSCORE + \")*\";","lastModifiedDate":"2022-03-14"},{"lineNumber":30,"author":{"gitId":"zxgoh"},"content":"    private static final String DOMAIN_LAST_PART_REGEX \u003d \"(\" + DOMAIN_PART_REGEX + \"){2,}$\"; // At least two chars","lastModifiedDate":"2022-03-14"},{"lineNumber":31,"author":{"gitId":"zxgoh"},"content":"    private static final String DOMAIN_REGEX \u003d \"(\" + DOMAIN_PART_REGEX + \"\\\\.)*\" + DOMAIN_LAST_PART_REGEX;","lastModifiedDate":"2022-03-14"},{"lineNumber":32,"author":{"gitId":"zxgoh"},"content":"    public static final String VALIDATION_REGEX \u003d LOCAL_PART_REGEX + \"@\" + DOMAIN_REGEX;","lastModifiedDate":"2022-03-14"},{"lineNumber":33,"author":{"gitId":"zxgoh"},"content":"","lastModifiedDate":"2022-03-14"},{"lineNumber":34,"author":{"gitId":"zxgoh"},"content":"    public final String value;","lastModifiedDate":"2022-03-14"},{"lineNumber":35,"author":{"gitId":"zxgoh"},"content":"","lastModifiedDate":"2022-03-14"},{"lineNumber":36,"author":{"gitId":"zxgoh"},"content":"    /**","lastModifiedDate":"2022-03-14"},{"lineNumber":37,"author":{"gitId":"zxgoh"},"content":"     * Constructs an {@code EmailCustomer}.","lastModifiedDate":"2022-03-15"},{"lineNumber":38,"author":{"gitId":"zxgoh"},"content":"     *","lastModifiedDate":"2022-03-14"},{"lineNumber":39,"author":{"gitId":"zxgoh"},"content":"     * @param email A valid email address.","lastModifiedDate":"2022-03-14"},{"lineNumber":40,"author":{"gitId":"zxgoh"},"content":"     */","lastModifiedDate":"2022-03-14"},{"lineNumber":41,"author":{"gitId":"zxgoh"},"content":"    public EmailCustomer(String email) {","lastModifiedDate":"2022-03-15"},{"lineNumber":42,"author":{"gitId":"zxgoh"},"content":"        requireNonNull(email);","lastModifiedDate":"2022-03-14"},{"lineNumber":43,"author":{"gitId":"zxgoh"},"content":"        checkArgument(isValidEmail(email), MESSAGE_CONSTRAINTS);","lastModifiedDate":"2022-03-14"},{"lineNumber":44,"author":{"gitId":"zxgoh"},"content":"        value \u003d email;","lastModifiedDate":"2022-03-14"},{"lineNumber":45,"author":{"gitId":"zxgoh"},"content":"    }","lastModifiedDate":"2022-03-14"},{"lineNumber":46,"author":{"gitId":"zxgoh"},"content":"","lastModifiedDate":"2022-03-14"},{"lineNumber":47,"author":{"gitId":"zxgoh"},"content":"    /**","lastModifiedDate":"2022-03-14"},{"lineNumber":48,"author":{"gitId":"zxgoh"},"content":"     * Returns if a given string is a valid email.","lastModifiedDate":"2022-03-14"},{"lineNumber":49,"author":{"gitId":"zxgoh"},"content":"     */","lastModifiedDate":"2022-03-14"},{"lineNumber":50,"author":{"gitId":"zxgoh"},"content":"    public static boolean isValidEmail(String test) {","lastModifiedDate":"2022-03-14"},{"lineNumber":51,"author":{"gitId":"zxgoh"},"content":"        return test.matches(VALIDATION_REGEX);","lastModifiedDate":"2022-03-14"},{"lineNumber":52,"author":{"gitId":"zxgoh"},"content":"    }","lastModifiedDate":"2022-03-14"},{"lineNumber":53,"author":{"gitId":"zxgoh"},"content":"","lastModifiedDate":"2022-03-14"},{"lineNumber":54,"author":{"gitId":"zxgoh"},"content":"    @Override","lastModifiedDate":"2022-03-14"},{"lineNumber":55,"author":{"gitId":"zxgoh"},"content":"    public String toString() {","lastModifiedDate":"2022-03-14"},{"lineNumber":56,"author":{"gitId":"zxgoh"},"content":"        return value;","lastModifiedDate":"2022-03-14"},{"lineNumber":57,"author":{"gitId":"zxgoh"},"content":"    }","lastModifiedDate":"2022-03-14"},{"lineNumber":58,"author":{"gitId":"zxgoh"},"content":"","lastModifiedDate":"2022-03-14"},{"lineNumber":59,"author":{"gitId":"zxgoh"},"content":"    @Override","lastModifiedDate":"2022-03-14"},{"lineNumber":60,"author":{"gitId":"zxgoh"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2022-03-14"},{"lineNumber":61,"author":{"gitId":"zxgoh"},"content":"        return other \u003d\u003d this // short circuit if same object","lastModifiedDate":"2022-03-14"},{"lineNumber":62,"author":{"gitId":"zxgoh"},"content":"                || (other instanceof EmailCustomer // instanceof handles nulls","lastModifiedDate":"2022-03-15"},{"lineNumber":63,"author":{"gitId":"zxgoh"},"content":"                \u0026\u0026 value.equals(((EmailCustomer) other).value)); // state check","lastModifiedDate":"2022-03-15"},{"lineNumber":64,"author":{"gitId":"zxgoh"},"content":"    }","lastModifiedDate":"2022-03-14"},{"lineNumber":65,"author":{"gitId":"zxgoh"},"content":"","lastModifiedDate":"2022-03-14"},{"lineNumber":66,"author":{"gitId":"zxgoh"},"content":"    @Override","lastModifiedDate":"2022-03-14"},{"lineNumber":67,"author":{"gitId":"zxgoh"},"content":"    public int hashCode() {","lastModifiedDate":"2022-03-14"},{"lineNumber":68,"author":{"gitId":"zxgoh"},"content":"        return value.hashCode();","lastModifiedDate":"2022-03-14"},{"lineNumber":69,"author":{"gitId":"zxgoh"},"content":"    }","lastModifiedDate":"2022-03-14"},{"lineNumber":70,"author":{"gitId":"zxgoh"},"content":"","lastModifiedDate":"2022-03-14"},{"lineNumber":71,"author":{"gitId":"zxgoh"},"content":"}","lastModifiedDate":"2022-03-14"}],"authorContributionMap":{"zxgoh":71}},{"path":"src/main/java/seedu/address/model/customer/NameCustomer.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"zxgoh"},"content":"package seedu.address.model.customer;","lastModifiedDate":"2022-03-14"},{"lineNumber":2,"author":{"gitId":"zxgoh"},"content":"","lastModifiedDate":"2022-03-14"},{"lineNumber":3,"author":{"gitId":"zxgoh"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2022-03-14"},{"lineNumber":4,"author":{"gitId":"zxgoh"},"content":"import static seedu.address.commons.util.AppUtil.checkArgument;","lastModifiedDate":"2022-03-14"},{"lineNumber":5,"author":{"gitId":"zxgoh"},"content":"","lastModifiedDate":"2022-03-14"},{"lineNumber":6,"author":{"gitId":"zxgoh"},"content":"/**","lastModifiedDate":"2022-03-14"},{"lineNumber":7,"author":{"gitId":"zxgoh"},"content":" * Represents a Customer\u0027s name in the address book.","lastModifiedDate":"2022-03-14"},{"lineNumber":8,"author":{"gitId":"zxgoh"},"content":" * Guarantees: immutable; is valid as declared in {@link #isValidName(String)}","lastModifiedDate":"2022-03-14"},{"lineNumber":9,"author":{"gitId":"zxgoh"},"content":" */","lastModifiedDate":"2022-03-14"},{"lineNumber":10,"author":{"gitId":"zxgoh"},"content":"public class NameCustomer {","lastModifiedDate":"2022-03-15"},{"lineNumber":11,"author":{"gitId":"zxgoh"},"content":"","lastModifiedDate":"2022-03-14"},{"lineNumber":12,"author":{"gitId":"zxgoh"},"content":"    public static final String MESSAGE_CONSTRAINTS \u003d","lastModifiedDate":"2022-03-14"},{"lineNumber":13,"author":{"gitId":"zxgoh"},"content":"            \"Names should only contain alphanumeric characters and spaces, and it should not be blank\";","lastModifiedDate":"2022-03-14"},{"lineNumber":14,"author":{"gitId":"zxgoh"},"content":"","lastModifiedDate":"2022-03-14"},{"lineNumber":15,"author":{"gitId":"zxgoh"},"content":"    /*","lastModifiedDate":"2022-03-14"},{"lineNumber":16,"author":{"gitId":"zxgoh"},"content":"     * The first character of the address must not be a whitespace,","lastModifiedDate":"2022-03-14"},{"lineNumber":17,"author":{"gitId":"zxgoh"},"content":"     * otherwise \" \" (a blank string) becomes a valid input.","lastModifiedDate":"2022-03-14"},{"lineNumber":18,"author":{"gitId":"zxgoh"},"content":"     */","lastModifiedDate":"2022-03-14"},{"lineNumber":19,"author":{"gitId":"zxgoh"},"content":"    public static final String VALIDATION_REGEX \u003d \"[\\\\p{Alnum}][\\\\p{Alnum} ]*\";","lastModifiedDate":"2022-03-14"},{"lineNumber":20,"author":{"gitId":"zxgoh"},"content":"","lastModifiedDate":"2022-03-14"},{"lineNumber":21,"author":{"gitId":"zxgoh"},"content":"    public final String fullName;","lastModifiedDate":"2022-03-14"},{"lineNumber":22,"author":{"gitId":"zxgoh"},"content":"","lastModifiedDate":"2022-03-14"},{"lineNumber":23,"author":{"gitId":"zxgoh"},"content":"    /**","lastModifiedDate":"2022-03-14"},{"lineNumber":24,"author":{"gitId":"zxgoh"},"content":"     * Constructs a {@code NameCustomer}.","lastModifiedDate":"2022-03-15"},{"lineNumber":25,"author":{"gitId":"zxgoh"},"content":"     *","lastModifiedDate":"2022-03-14"},{"lineNumber":26,"author":{"gitId":"zxgoh"},"content":"     * @param name A valid name.","lastModifiedDate":"2022-03-14"},{"lineNumber":27,"author":{"gitId":"zxgoh"},"content":"     */","lastModifiedDate":"2022-03-14"},{"lineNumber":28,"author":{"gitId":"zxgoh"},"content":"    public NameCustomer(String name) {","lastModifiedDate":"2022-03-15"},{"lineNumber":29,"author":{"gitId":"zxgoh"},"content":"        requireNonNull(name);","lastModifiedDate":"2022-03-14"},{"lineNumber":30,"author":{"gitId":"zxgoh"},"content":"        checkArgument(isValidName(name), MESSAGE_CONSTRAINTS);","lastModifiedDate":"2022-03-14"},{"lineNumber":31,"author":{"gitId":"zxgoh"},"content":"        fullName \u003d name;","lastModifiedDate":"2022-03-14"},{"lineNumber":32,"author":{"gitId":"zxgoh"},"content":"    }","lastModifiedDate":"2022-03-14"},{"lineNumber":33,"author":{"gitId":"zxgoh"},"content":"","lastModifiedDate":"2022-03-14"},{"lineNumber":34,"author":{"gitId":"zxgoh"},"content":"    /**","lastModifiedDate":"2022-03-14"},{"lineNumber":35,"author":{"gitId":"zxgoh"},"content":"     * Returns true if a given string is a valid name.","lastModifiedDate":"2022-03-14"},{"lineNumber":36,"author":{"gitId":"zxgoh"},"content":"     */","lastModifiedDate":"2022-03-14"},{"lineNumber":37,"author":{"gitId":"zxgoh"},"content":"    public static boolean isValidName(String test) {","lastModifiedDate":"2022-03-14"},{"lineNumber":38,"author":{"gitId":"zxgoh"},"content":"        return test.matches(VALIDATION_REGEX);","lastModifiedDate":"2022-03-14"},{"lineNumber":39,"author":{"gitId":"zxgoh"},"content":"    }","lastModifiedDate":"2022-03-14"},{"lineNumber":40,"author":{"gitId":"zxgoh"},"content":"","lastModifiedDate":"2022-03-14"},{"lineNumber":41,"author":{"gitId":"zxgoh"},"content":"","lastModifiedDate":"2022-03-14"},{"lineNumber":42,"author":{"gitId":"zxgoh"},"content":"    @Override","lastModifiedDate":"2022-03-14"},{"lineNumber":43,"author":{"gitId":"zxgoh"},"content":"    public String toString() {","lastModifiedDate":"2022-03-14"},{"lineNumber":44,"author":{"gitId":"zxgoh"},"content":"        return fullName;","lastModifiedDate":"2022-03-14"},{"lineNumber":45,"author":{"gitId":"zxgoh"},"content":"    }","lastModifiedDate":"2022-03-14"},{"lineNumber":46,"author":{"gitId":"zxgoh"},"content":"","lastModifiedDate":"2022-03-14"},{"lineNumber":47,"author":{"gitId":"zxgoh"},"content":"    @Override","lastModifiedDate":"2022-03-14"},{"lineNumber":48,"author":{"gitId":"zxgoh"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2022-03-14"},{"lineNumber":49,"author":{"gitId":"zxgoh"},"content":"        return other \u003d\u003d this // short circuit if same object","lastModifiedDate":"2022-03-14"},{"lineNumber":50,"author":{"gitId":"zxgoh"},"content":"                || (other instanceof NameCustomer // instanceof handles nulls","lastModifiedDate":"2022-03-15"},{"lineNumber":51,"author":{"gitId":"zxgoh"},"content":"                \u0026\u0026 fullName.equals(((NameCustomer) other).fullName)); // state check","lastModifiedDate":"2022-03-15"},{"lineNumber":52,"author":{"gitId":"zxgoh"},"content":"    }","lastModifiedDate":"2022-03-14"},{"lineNumber":53,"author":{"gitId":"zxgoh"},"content":"","lastModifiedDate":"2022-03-14"},{"lineNumber":54,"author":{"gitId":"zxgoh"},"content":"    @Override","lastModifiedDate":"2022-03-14"},{"lineNumber":55,"author":{"gitId":"zxgoh"},"content":"    public int hashCode() {","lastModifiedDate":"2022-03-14"},{"lineNumber":56,"author":{"gitId":"zxgoh"},"content":"        return fullName.hashCode();","lastModifiedDate":"2022-03-14"},{"lineNumber":57,"author":{"gitId":"zxgoh"},"content":"    }","lastModifiedDate":"2022-03-14"},{"lineNumber":58,"author":{"gitId":"zxgoh"},"content":"","lastModifiedDate":"2022-03-14"},{"lineNumber":59,"author":{"gitId":"zxgoh"},"content":"}","lastModifiedDate":"2022-03-14"}],"authorContributionMap":{"zxgoh":59}},{"path":"src/main/java/seedu/address/model/customer/NameCustomerContainsKeywordsPredicate.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"zxgoh"},"content":"package seedu.address.model.customer;","lastModifiedDate":"2022-03-14"},{"lineNumber":2,"author":{"gitId":"zxgoh"},"content":"","lastModifiedDate":"2022-03-14"},{"lineNumber":3,"author":{"gitId":"zxgoh"},"content":"import java.util.List;","lastModifiedDate":"2022-03-14"},{"lineNumber":4,"author":{"gitId":"zxgoh"},"content":"import java.util.function.Predicate;","lastModifiedDate":"2022-03-14"},{"lineNumber":5,"author":{"gitId":"zxgoh"},"content":"","lastModifiedDate":"2022-03-14"},{"lineNumber":6,"author":{"gitId":"zxgoh"},"content":"import seedu.address.commons.util.StringUtil;","lastModifiedDate":"2022-03-14"},{"lineNumber":7,"author":{"gitId":"zxgoh"},"content":"","lastModifiedDate":"2022-03-14"},{"lineNumber":8,"author":{"gitId":"zxgoh"},"content":"/**","lastModifiedDate":"2022-03-14"},{"lineNumber":9,"author":{"gitId":"zxgoh"},"content":" * Tests that a {@code Customer}\u0027s {@code NameCustomer} matches any of the keywords given.","lastModifiedDate":"2022-03-15"},{"lineNumber":10,"author":{"gitId":"zxgoh"},"content":" */","lastModifiedDate":"2022-03-14"},{"lineNumber":11,"author":{"gitId":"zxgoh"},"content":"public class NameCustomerContainsKeywordsPredicate implements Predicate\u003cCustomer\u003e {","lastModifiedDate":"2022-03-15"},{"lineNumber":12,"author":{"gitId":"zxgoh"},"content":"    private final List\u003cString\u003e keywords;","lastModifiedDate":"2022-03-14"},{"lineNumber":13,"author":{"gitId":"zxgoh"},"content":"","lastModifiedDate":"2022-03-14"},{"lineNumber":14,"author":{"gitId":"zxgoh"},"content":"    public NameCustomerContainsKeywordsPredicate(List\u003cString\u003e keywords) {","lastModifiedDate":"2022-03-15"},{"lineNumber":15,"author":{"gitId":"zxgoh"},"content":"        this.keywords \u003d keywords;","lastModifiedDate":"2022-03-14"},{"lineNumber":16,"author":{"gitId":"zxgoh"},"content":"    }","lastModifiedDate":"2022-03-14"},{"lineNumber":17,"author":{"gitId":"zxgoh"},"content":"","lastModifiedDate":"2022-03-14"},{"lineNumber":18,"author":{"gitId":"zxgoh"},"content":"    @Override","lastModifiedDate":"2022-03-14"},{"lineNumber":19,"author":{"gitId":"zxgoh"},"content":"    public boolean test(Customer customer) {","lastModifiedDate":"2022-03-14"},{"lineNumber":20,"author":{"gitId":"zxgoh"},"content":"        return keywords.stream()","lastModifiedDate":"2022-03-14"},{"lineNumber":21,"author":{"gitId":"zxgoh"},"content":"                .anyMatch(keyword -\u003e StringUtil.containsWordIgnoreCase(customer.getName().fullName, keyword));","lastModifiedDate":"2022-03-14"},{"lineNumber":22,"author":{"gitId":"zxgoh"},"content":"    }","lastModifiedDate":"2022-03-14"},{"lineNumber":23,"author":{"gitId":"zxgoh"},"content":"","lastModifiedDate":"2022-03-14"},{"lineNumber":24,"author":{"gitId":"zxgoh"},"content":"    @Override","lastModifiedDate":"2022-03-14"},{"lineNumber":25,"author":{"gitId":"zxgoh"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2022-03-14"},{"lineNumber":26,"author":{"gitId":"zxgoh"},"content":"        return other \u003d\u003d this // short circuit if same object","lastModifiedDate":"2022-03-14"},{"lineNumber":27,"author":{"gitId":"zxgoh"},"content":"                || (other instanceof NameCustomerContainsKeywordsPredicate // instanceof handles nulls","lastModifiedDate":"2022-03-15"},{"lineNumber":28,"author":{"gitId":"zxgoh"},"content":"                \u0026\u0026 keywords.equals(((NameCustomerContainsKeywordsPredicate) other).keywords)); // state check","lastModifiedDate":"2022-03-15"},{"lineNumber":29,"author":{"gitId":"zxgoh"},"content":"    }","lastModifiedDate":"2022-03-14"},{"lineNumber":30,"author":{"gitId":"zxgoh"},"content":"","lastModifiedDate":"2022-03-14"},{"lineNumber":31,"author":{"gitId":"zxgoh"},"content":"}","lastModifiedDate":"2022-03-14"}],"authorContributionMap":{"zxgoh":31}},{"path":"src/main/java/seedu/address/model/customer/PhoneCustomer.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"zxgoh"},"content":"package seedu.address.model.customer;","lastModifiedDate":"2022-03-14"},{"lineNumber":2,"author":{"gitId":"zxgoh"},"content":"","lastModifiedDate":"2022-03-14"},{"lineNumber":3,"author":{"gitId":"zxgoh"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2022-03-14"},{"lineNumber":4,"author":{"gitId":"zxgoh"},"content":"import static seedu.address.commons.util.AppUtil.checkArgument;","lastModifiedDate":"2022-03-14"},{"lineNumber":5,"author":{"gitId":"zxgoh"},"content":"","lastModifiedDate":"2022-03-14"},{"lineNumber":6,"author":{"gitId":"zxgoh"},"content":"","lastModifiedDate":"2022-03-31"},{"lineNumber":7,"author":{"gitId":"zxgoh"},"content":"","lastModifiedDate":"2022-03-31"},{"lineNumber":8,"author":{"gitId":"zxgoh"},"content":"/**","lastModifiedDate":"2022-03-14"},{"lineNumber":9,"author":{"gitId":"zxgoh"},"content":" * Represents a Customer\u0027s phone number in the address book.","lastModifiedDate":"2022-03-14"},{"lineNumber":10,"author":{"gitId":"zxgoh"},"content":" * Guarantees: immutable; is valid as declared in {@link #isValidPhone(String)}","lastModifiedDate":"2022-03-14"},{"lineNumber":11,"author":{"gitId":"zxgoh"},"content":" */","lastModifiedDate":"2022-03-14"},{"lineNumber":12,"author":{"gitId":"zxgoh"},"content":"public class PhoneCustomer {","lastModifiedDate":"2022-03-15"},{"lineNumber":13,"author":{"gitId":"zxgoh"},"content":"","lastModifiedDate":"2022-03-14"},{"lineNumber":14,"author":{"gitId":"zxgoh"},"content":"    public static final String MESSAGE_CONSTRAINTS \u003d","lastModifiedDate":"2022-03-14"},{"lineNumber":15,"author":{"gitId":"hieunm1821"},"content":"            \"Customer phone number should only contain numbers, and it should be only 8 digits long and start\"","lastModifiedDate":"2022-04-01"},{"lineNumber":16,"author":{"gitId":"hieunm1821"},"content":"                    + \" with 8 or 9\";","lastModifiedDate":"2022-04-01"},{"lineNumber":17,"author":{"gitId":"zxgoh"},"content":"","lastModifiedDate":"2022-03-31"},{"lineNumber":18,"author":{"gitId":"zxgoh"},"content":"    public static final String VALIDATION_REGEX \u003d \"[8-9][0-9]{7}\";","lastModifiedDate":"2022-03-31"},{"lineNumber":19,"author":{"gitId":"zxgoh"},"content":"    public final String value;","lastModifiedDate":"2022-03-14"},{"lineNumber":20,"author":{"gitId":"zxgoh"},"content":"","lastModifiedDate":"2022-03-14"},{"lineNumber":21,"author":{"gitId":"zxgoh"},"content":"    /**","lastModifiedDate":"2022-03-14"},{"lineNumber":22,"author":{"gitId":"zxgoh"},"content":"     * Constructs a {@code PhoneCustomer}.","lastModifiedDate":"2022-03-15"},{"lineNumber":23,"author":{"gitId":"zxgoh"},"content":"     *","lastModifiedDate":"2022-03-14"},{"lineNumber":24,"author":{"gitId":"zxgoh"},"content":"     * @param phone A valid phone number.","lastModifiedDate":"2022-03-14"},{"lineNumber":25,"author":{"gitId":"zxgoh"},"content":"     */","lastModifiedDate":"2022-03-14"},{"lineNumber":26,"author":{"gitId":"zxgoh"},"content":"    public PhoneCustomer(String phone) {","lastModifiedDate":"2022-03-15"},{"lineNumber":27,"author":{"gitId":"zxgoh"},"content":"        requireNonNull(phone);","lastModifiedDate":"2022-03-14"},{"lineNumber":28,"author":{"gitId":"zxgoh"},"content":"        checkArgument(isValidPhone(phone), MESSAGE_CONSTRAINTS);","lastModifiedDate":"2022-03-14"},{"lineNumber":29,"author":{"gitId":"zxgoh"},"content":"        value \u003d phone;","lastModifiedDate":"2022-03-14"},{"lineNumber":30,"author":{"gitId":"zxgoh"},"content":"    }","lastModifiedDate":"2022-03-14"},{"lineNumber":31,"author":{"gitId":"zxgoh"},"content":"","lastModifiedDate":"2022-03-14"},{"lineNumber":32,"author":{"gitId":"zxgoh"},"content":"    /**","lastModifiedDate":"2022-03-14"},{"lineNumber":33,"author":{"gitId":"zxgoh"},"content":"     * Returns true if a given string is a valid phone number.","lastModifiedDate":"2022-03-14"},{"lineNumber":34,"author":{"gitId":"zxgoh"},"content":"     */","lastModifiedDate":"2022-03-14"},{"lineNumber":35,"author":{"gitId":"zxgoh"},"content":"    public static boolean isValidPhone(String test) {","lastModifiedDate":"2022-03-14"},{"lineNumber":36,"author":{"gitId":"zxgoh"},"content":"        return test.matches(VALIDATION_REGEX);","lastModifiedDate":"2022-03-14"},{"lineNumber":37,"author":{"gitId":"zxgoh"},"content":"    }","lastModifiedDate":"2022-03-14"},{"lineNumber":38,"author":{"gitId":"zxgoh"},"content":"","lastModifiedDate":"2022-03-14"},{"lineNumber":39,"author":{"gitId":"zxgoh"},"content":"","lastModifiedDate":"2022-03-31"},{"lineNumber":40,"author":{"gitId":"zxgoh"},"content":"    @Override","lastModifiedDate":"2022-03-14"},{"lineNumber":41,"author":{"gitId":"zxgoh"},"content":"    public String toString() {","lastModifiedDate":"2022-03-14"},{"lineNumber":42,"author":{"gitId":"zxgoh"},"content":"        return value;","lastModifiedDate":"2022-03-14"},{"lineNumber":43,"author":{"gitId":"zxgoh"},"content":"    }","lastModifiedDate":"2022-03-14"},{"lineNumber":44,"author":{"gitId":"zxgoh"},"content":"","lastModifiedDate":"2022-03-14"},{"lineNumber":45,"author":{"gitId":"zxgoh"},"content":"    @Override","lastModifiedDate":"2022-03-14"},{"lineNumber":46,"author":{"gitId":"zxgoh"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2022-03-14"},{"lineNumber":47,"author":{"gitId":"zxgoh"},"content":"        return other \u003d\u003d this // short circuit if same object","lastModifiedDate":"2022-03-14"},{"lineNumber":48,"author":{"gitId":"zxgoh"},"content":"                || (other instanceof PhoneCustomer // instanceof handles nulls","lastModifiedDate":"2022-03-15"},{"lineNumber":49,"author":{"gitId":"zxgoh"},"content":"                \u0026\u0026 value.equals(((PhoneCustomer) other).value)); // state check","lastModifiedDate":"2022-03-15"},{"lineNumber":50,"author":{"gitId":"zxgoh"},"content":"    }","lastModifiedDate":"2022-03-14"},{"lineNumber":51,"author":{"gitId":"zxgoh"},"content":"","lastModifiedDate":"2022-03-14"},{"lineNumber":52,"author":{"gitId":"zxgoh"},"content":"    @Override","lastModifiedDate":"2022-03-14"},{"lineNumber":53,"author":{"gitId":"zxgoh"},"content":"    public int hashCode() {","lastModifiedDate":"2022-03-14"},{"lineNumber":54,"author":{"gitId":"zxgoh"},"content":"        return value.hashCode();","lastModifiedDate":"2022-03-14"},{"lineNumber":55,"author":{"gitId":"zxgoh"},"content":"    }","lastModifiedDate":"2022-03-14"},{"lineNumber":56,"author":{"gitId":"zxgoh"},"content":"","lastModifiedDate":"2022-03-14"},{"lineNumber":57,"author":{"gitId":"zxgoh"},"content":"}","lastModifiedDate":"2022-03-14"}],"authorContributionMap":{"hieunm1821":2,"zxgoh":55}},{"path":"src/main/java/seedu/address/model/customer/UniqueCustomerList.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"zxgoh"},"content":"package seedu.address.model.customer;","lastModifiedDate":"2022-03-14"},{"lineNumber":2,"author":{"gitId":"zxgoh"},"content":"","lastModifiedDate":"2022-03-14"},{"lineNumber":3,"author":{"gitId":"zxgoh"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2022-03-14"},{"lineNumber":4,"author":{"gitId":"zxgoh"},"content":"import static seedu.address.commons.util.CollectionUtil.requireAllNonNull;","lastModifiedDate":"2022-03-14"},{"lineNumber":5,"author":{"gitId":"zxgoh"},"content":"","lastModifiedDate":"2022-03-14"},{"lineNumber":6,"author":{"gitId":"zxgoh"},"content":"import java.util.Iterator;","lastModifiedDate":"2022-03-14"},{"lineNumber":7,"author":{"gitId":"zxgoh"},"content":"import java.util.List;","lastModifiedDate":"2022-03-14"},{"lineNumber":8,"author":{"gitId":"zxgoh"},"content":"","lastModifiedDate":"2022-03-14"},{"lineNumber":9,"author":{"gitId":"zxgoh"},"content":"import javafx.collections.FXCollections;","lastModifiedDate":"2022-03-14"},{"lineNumber":10,"author":{"gitId":"zxgoh"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2022-03-14"},{"lineNumber":11,"author":{"gitId":"zxgoh"},"content":"import seedu.address.model.customer.exceptions.CustomerNotFoundException;","lastModifiedDate":"2022-03-14"},{"lineNumber":12,"author":{"gitId":"zxgoh"},"content":"import seedu.address.model.customer.exceptions.DuplicateCustomerException;","lastModifiedDate":"2022-03-14"},{"lineNumber":13,"author":{"gitId":"zxgoh"},"content":"","lastModifiedDate":"2022-03-14"},{"lineNumber":14,"author":{"gitId":"zxgoh"},"content":"/**","lastModifiedDate":"2022-03-14"},{"lineNumber":15,"author":{"gitId":"zxgoh"},"content":" * A list of customers that enforces uniqueness between its elements and does not allow nulls.","lastModifiedDate":"2022-03-14"},{"lineNumber":16,"author":{"gitId":"zxgoh"},"content":" * A customer is considered unique by comparing using {@code Customer#isSameCustomer(Customer)}.","lastModifiedDate":"2022-03-14"},{"lineNumber":17,"author":{"gitId":"zxgoh"},"content":" * As such, adding and updating of","lastModifiedDate":"2022-03-14"},{"lineNumber":18,"author":{"gitId":"zxgoh"},"content":" * customers uses Customer#isSameCustomer(Customer) for equality so as to","lastModifiedDate":"2022-03-14"},{"lineNumber":19,"author":{"gitId":"zxgoh"},"content":" * ensure that the customer being added or updated is","lastModifiedDate":"2022-03-14"},{"lineNumber":20,"author":{"gitId":"zxgoh"},"content":" * unique in terms of identity in the UniqueCustomerList. However,","lastModifiedDate":"2022-03-14"},{"lineNumber":21,"author":{"gitId":"zxgoh"},"content":" * the removal of a customer uses Customer#equals(Object) so","lastModifiedDate":"2022-03-14"},{"lineNumber":22,"author":{"gitId":"zxgoh"},"content":" * as to ensure that the customer with exactly the same fields will be removed.","lastModifiedDate":"2022-03-14"},{"lineNumber":23,"author":{"gitId":"zxgoh"},"content":" *","lastModifiedDate":"2022-03-14"},{"lineNumber":24,"author":{"gitId":"zxgoh"},"content":" * Supports a minimal set of list operations.","lastModifiedDate":"2022-03-14"},{"lineNumber":25,"author":{"gitId":"zxgoh"},"content":" *","lastModifiedDate":"2022-03-14"},{"lineNumber":26,"author":{"gitId":"zxgoh"},"content":" * @see Customer#isSameCustomer(Customer)","lastModifiedDate":"2022-03-14"},{"lineNumber":27,"author":{"gitId":"zxgoh"},"content":" */","lastModifiedDate":"2022-03-14"},{"lineNumber":28,"author":{"gitId":"zxgoh"},"content":"public class UniqueCustomerList implements Iterable\u003cCustomer\u003e {","lastModifiedDate":"2022-03-14"},{"lineNumber":29,"author":{"gitId":"zxgoh"},"content":"","lastModifiedDate":"2022-03-14"},{"lineNumber":30,"author":{"gitId":"zxgoh"},"content":"    private final ObservableList\u003cCustomer\u003e internalList \u003d FXCollections.observableArrayList();","lastModifiedDate":"2022-03-14"},{"lineNumber":31,"author":{"gitId":"zxgoh"},"content":"    private final ObservableList\u003cCustomer\u003e internalUnmodifiableList \u003d","lastModifiedDate":"2022-03-14"},{"lineNumber":32,"author":{"gitId":"zxgoh"},"content":"            FXCollections.unmodifiableObservableList(internalList);","lastModifiedDate":"2022-03-14"},{"lineNumber":33,"author":{"gitId":"zxgoh"},"content":"","lastModifiedDate":"2022-03-14"},{"lineNumber":34,"author":{"gitId":"zxgoh"},"content":"    /**","lastModifiedDate":"2022-03-14"},{"lineNumber":35,"author":{"gitId":"zxgoh"},"content":"     * Returns true if the list contains an equivalent customer as the given argument.","lastModifiedDate":"2022-03-14"},{"lineNumber":36,"author":{"gitId":"zxgoh"},"content":"     */","lastModifiedDate":"2022-03-14"},{"lineNumber":37,"author":{"gitId":"zxgoh"},"content":"    public boolean contains(Customer toCheck) {","lastModifiedDate":"2022-03-14"},{"lineNumber":38,"author":{"gitId":"zxgoh"},"content":"        requireNonNull(toCheck);","lastModifiedDate":"2022-03-14"},{"lineNumber":39,"author":{"gitId":"zxgoh"},"content":"        return internalList.stream().anyMatch(toCheck::isSameCustomer);","lastModifiedDate":"2022-03-14"},{"lineNumber":40,"author":{"gitId":"zxgoh"},"content":"    }","lastModifiedDate":"2022-03-14"},{"lineNumber":41,"author":{"gitId":"zxgoh"},"content":"","lastModifiedDate":"2022-03-14"},{"lineNumber":42,"author":{"gitId":"zxgoh"},"content":"    /**","lastModifiedDate":"2022-03-14"},{"lineNumber":43,"author":{"gitId":"zxgoh"},"content":"     * Adds a customer to the list.","lastModifiedDate":"2022-03-14"},{"lineNumber":44,"author":{"gitId":"zxgoh"},"content":"     * The customer must not already exist in the list.","lastModifiedDate":"2022-03-14"},{"lineNumber":45,"author":{"gitId":"zxgoh"},"content":"     */","lastModifiedDate":"2022-03-14"},{"lineNumber":46,"author":{"gitId":"zxgoh"},"content":"    public void add(Customer toAdd) {","lastModifiedDate":"2022-03-14"},{"lineNumber":47,"author":{"gitId":"zxgoh"},"content":"        requireNonNull(toAdd);","lastModifiedDate":"2022-03-14"},{"lineNumber":48,"author":{"gitId":"zxgoh"},"content":"        if (contains(toAdd)) {","lastModifiedDate":"2022-03-14"},{"lineNumber":49,"author":{"gitId":"zxgoh"},"content":"            throw new DuplicateCustomerException();","lastModifiedDate":"2022-03-14"},{"lineNumber":50,"author":{"gitId":"zxgoh"},"content":"        }","lastModifiedDate":"2022-03-14"},{"lineNumber":51,"author":{"gitId":"zxgoh"},"content":"        internalList.add(toAdd);","lastModifiedDate":"2022-03-14"},{"lineNumber":52,"author":{"gitId":"zxgoh"},"content":"    }","lastModifiedDate":"2022-03-14"},{"lineNumber":53,"author":{"gitId":"zxgoh"},"content":"","lastModifiedDate":"2022-03-14"},{"lineNumber":54,"author":{"gitId":"zxgoh"},"content":"    /**","lastModifiedDate":"2022-03-14"},{"lineNumber":55,"author":{"gitId":"zxgoh"},"content":"     * Replaces the customer {@code target} in the list with {@code editedCustomer}.","lastModifiedDate":"2022-03-14"},{"lineNumber":56,"author":{"gitId":"zxgoh"},"content":"     * {@code target} must exist in the list.","lastModifiedDate":"2022-03-14"},{"lineNumber":57,"author":{"gitId":"zxgoh"},"content":"     * The customer identity of {@code editedCustomer} must not be the same as another existing customer in the list.","lastModifiedDate":"2022-03-14"},{"lineNumber":58,"author":{"gitId":"zxgoh"},"content":"     */","lastModifiedDate":"2022-03-14"},{"lineNumber":59,"author":{"gitId":"zxgoh"},"content":"    public void setCustomer(Customer target, Customer editedCustomer) {","lastModifiedDate":"2022-03-14"},{"lineNumber":60,"author":{"gitId":"zxgoh"},"content":"        requireAllNonNull(target, editedCustomer);","lastModifiedDate":"2022-03-14"},{"lineNumber":61,"author":{"gitId":"zxgoh"},"content":"","lastModifiedDate":"2022-03-14"},{"lineNumber":62,"author":{"gitId":"zxgoh"},"content":"        int index \u003d internalList.indexOf(target);","lastModifiedDate":"2022-03-14"},{"lineNumber":63,"author":{"gitId":"zxgoh"},"content":"        if (index \u003d\u003d -1) {","lastModifiedDate":"2022-03-14"},{"lineNumber":64,"author":{"gitId":"zxgoh"},"content":"            throw new CustomerNotFoundException();","lastModifiedDate":"2022-03-14"},{"lineNumber":65,"author":{"gitId":"zxgoh"},"content":"        }","lastModifiedDate":"2022-03-14"},{"lineNumber":66,"author":{"gitId":"zxgoh"},"content":"","lastModifiedDate":"2022-03-14"},{"lineNumber":67,"author":{"gitId":"zxgoh"},"content":"        if (!target.isSameCustomer(editedCustomer) \u0026\u0026 contains(editedCustomer)) {","lastModifiedDate":"2022-03-14"},{"lineNumber":68,"author":{"gitId":"zxgoh"},"content":"            throw new DuplicateCustomerException();","lastModifiedDate":"2022-03-14"},{"lineNumber":69,"author":{"gitId":"zxgoh"},"content":"        }","lastModifiedDate":"2022-03-14"},{"lineNumber":70,"author":{"gitId":"zxgoh"},"content":"","lastModifiedDate":"2022-03-14"},{"lineNumber":71,"author":{"gitId":"zxgoh"},"content":"        internalList.set(index, editedCustomer);","lastModifiedDate":"2022-03-14"},{"lineNumber":72,"author":{"gitId":"zxgoh"},"content":"    }","lastModifiedDate":"2022-03-14"},{"lineNumber":73,"author":{"gitId":"zxgoh"},"content":"","lastModifiedDate":"2022-03-14"},{"lineNumber":74,"author":{"gitId":"zxgoh"},"content":"    /**","lastModifiedDate":"2022-03-14"},{"lineNumber":75,"author":{"gitId":"zxgoh"},"content":"     * Removes the equivalent customer from the list.","lastModifiedDate":"2022-03-14"},{"lineNumber":76,"author":{"gitId":"zxgoh"},"content":"     * The customer must exist in the list.","lastModifiedDate":"2022-03-14"},{"lineNumber":77,"author":{"gitId":"zxgoh"},"content":"     */","lastModifiedDate":"2022-03-14"},{"lineNumber":78,"author":{"gitId":"zxgoh"},"content":"    public void remove(Customer toRemove) {","lastModifiedDate":"2022-03-14"},{"lineNumber":79,"author":{"gitId":"zxgoh"},"content":"        requireNonNull(toRemove);","lastModifiedDate":"2022-03-14"},{"lineNumber":80,"author":{"gitId":"zxgoh"},"content":"        if (!internalList.remove(toRemove)) {","lastModifiedDate":"2022-03-14"},{"lineNumber":81,"author":{"gitId":"zxgoh"},"content":"            throw new CustomerNotFoundException();","lastModifiedDate":"2022-03-14"},{"lineNumber":82,"author":{"gitId":"zxgoh"},"content":"        }","lastModifiedDate":"2022-03-14"},{"lineNumber":83,"author":{"gitId":"zxgoh"},"content":"    }","lastModifiedDate":"2022-03-14"},{"lineNumber":84,"author":{"gitId":"zxgoh"},"content":"","lastModifiedDate":"2022-03-14"},{"lineNumber":85,"author":{"gitId":"zxgoh"},"content":"    public void setCustomers(UniqueCustomerList replacement) {","lastModifiedDate":"2022-03-14"},{"lineNumber":86,"author":{"gitId":"zxgoh"},"content":"        requireNonNull(replacement);","lastModifiedDate":"2022-03-14"},{"lineNumber":87,"author":{"gitId":"zxgoh"},"content":"        internalList.setAll(replacement.internalList);","lastModifiedDate":"2022-03-14"},{"lineNumber":88,"author":{"gitId":"zxgoh"},"content":"    }","lastModifiedDate":"2022-03-14"},{"lineNumber":89,"author":{"gitId":"zxgoh"},"content":"","lastModifiedDate":"2022-03-14"},{"lineNumber":90,"author":{"gitId":"zxgoh"},"content":"    /**","lastModifiedDate":"2022-03-14"},{"lineNumber":91,"author":{"gitId":"zxgoh"},"content":"     * Replaces the contents of this list with {@code customers}.","lastModifiedDate":"2022-03-14"},{"lineNumber":92,"author":{"gitId":"zxgoh"},"content":"     * {@code customers} must not contain duplicate customers.","lastModifiedDate":"2022-03-14"},{"lineNumber":93,"author":{"gitId":"zxgoh"},"content":"     */","lastModifiedDate":"2022-03-14"},{"lineNumber":94,"author":{"gitId":"zxgoh"},"content":"    public void setCustomers(List\u003cCustomer\u003e customers) {","lastModifiedDate":"2022-03-14"},{"lineNumber":95,"author":{"gitId":"zxgoh"},"content":"        requireAllNonNull(customers);","lastModifiedDate":"2022-03-14"},{"lineNumber":96,"author":{"gitId":"zxgoh"},"content":"        if (!customersAreUnique(customers)) {","lastModifiedDate":"2022-03-14"},{"lineNumber":97,"author":{"gitId":"zxgoh"},"content":"            throw new DuplicateCustomerException();","lastModifiedDate":"2022-03-14"},{"lineNumber":98,"author":{"gitId":"zxgoh"},"content":"        }","lastModifiedDate":"2022-03-14"},{"lineNumber":99,"author":{"gitId":"zxgoh"},"content":"","lastModifiedDate":"2022-03-14"},{"lineNumber":100,"author":{"gitId":"zxgoh"},"content":"        internalList.setAll(customers);","lastModifiedDate":"2022-03-14"},{"lineNumber":101,"author":{"gitId":"zxgoh"},"content":"    }","lastModifiedDate":"2022-03-14"},{"lineNumber":102,"author":{"gitId":"zxgoh"},"content":"","lastModifiedDate":"2022-03-14"},{"lineNumber":103,"author":{"gitId":"zxgoh"},"content":"    /**","lastModifiedDate":"2022-03-14"},{"lineNumber":104,"author":{"gitId":"zxgoh"},"content":"     * Returns the backing list as an unmodifiable {@code ObservableList}.","lastModifiedDate":"2022-03-14"},{"lineNumber":105,"author":{"gitId":"zxgoh"},"content":"     */","lastModifiedDate":"2022-03-14"},{"lineNumber":106,"author":{"gitId":"zxgoh"},"content":"    public ObservableList\u003cCustomer\u003e asUnmodifiableObservableList() {","lastModifiedDate":"2022-03-14"},{"lineNumber":107,"author":{"gitId":"zxgoh"},"content":"        return internalUnmodifiableList;","lastModifiedDate":"2022-03-14"},{"lineNumber":108,"author":{"gitId":"zxgoh"},"content":"    }","lastModifiedDate":"2022-03-14"},{"lineNumber":109,"author":{"gitId":"zxgoh"},"content":"","lastModifiedDate":"2022-03-14"},{"lineNumber":110,"author":{"gitId":"zxgoh"},"content":"    @Override","lastModifiedDate":"2022-03-14"},{"lineNumber":111,"author":{"gitId":"zxgoh"},"content":"    public Iterator\u003cCustomer\u003e iterator() {","lastModifiedDate":"2022-03-14"},{"lineNumber":112,"author":{"gitId":"zxgoh"},"content":"        return internalList.iterator();","lastModifiedDate":"2022-03-14"},{"lineNumber":113,"author":{"gitId":"zxgoh"},"content":"    }","lastModifiedDate":"2022-03-14"},{"lineNumber":114,"author":{"gitId":"zxgoh"},"content":"","lastModifiedDate":"2022-03-14"},{"lineNumber":115,"author":{"gitId":"zxgoh"},"content":"    @Override","lastModifiedDate":"2022-03-14"},{"lineNumber":116,"author":{"gitId":"zxgoh"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2022-03-14"},{"lineNumber":117,"author":{"gitId":"zxgoh"},"content":"        return other \u003d\u003d this // short circuit if same object","lastModifiedDate":"2022-03-14"},{"lineNumber":118,"author":{"gitId":"zxgoh"},"content":"                || (other instanceof UniqueCustomerList // instanceof handles nulls","lastModifiedDate":"2022-03-14"},{"lineNumber":119,"author":{"gitId":"zxgoh"},"content":"                        \u0026\u0026 internalList.equals(((UniqueCustomerList) other).internalList));","lastModifiedDate":"2022-03-14"},{"lineNumber":120,"author":{"gitId":"zxgoh"},"content":"    }","lastModifiedDate":"2022-03-14"},{"lineNumber":121,"author":{"gitId":"zxgoh"},"content":"","lastModifiedDate":"2022-03-14"},{"lineNumber":122,"author":{"gitId":"zxgoh"},"content":"    @Override","lastModifiedDate":"2022-03-14"},{"lineNumber":123,"author":{"gitId":"zxgoh"},"content":"    public int hashCode() {","lastModifiedDate":"2022-03-14"},{"lineNumber":124,"author":{"gitId":"zxgoh"},"content":"        return internalList.hashCode();","lastModifiedDate":"2022-03-14"},{"lineNumber":125,"author":{"gitId":"zxgoh"},"content":"    }","lastModifiedDate":"2022-03-14"},{"lineNumber":126,"author":{"gitId":"zxgoh"},"content":"","lastModifiedDate":"2022-03-14"},{"lineNumber":127,"author":{"gitId":"zxgoh"},"content":"    /**","lastModifiedDate":"2022-03-14"},{"lineNumber":128,"author":{"gitId":"zxgoh"},"content":"     * Returns true if {@code customers} contains only unique customers.","lastModifiedDate":"2022-03-14"},{"lineNumber":129,"author":{"gitId":"zxgoh"},"content":"     */","lastModifiedDate":"2022-03-14"},{"lineNumber":130,"author":{"gitId":"zxgoh"},"content":"    private boolean customersAreUnique(List\u003cCustomer\u003e customers) {","lastModifiedDate":"2022-03-14"},{"lineNumber":131,"author":{"gitId":"zxgoh"},"content":"        for (int i \u003d 0; i \u003c customers.size() - 1; i++) {","lastModifiedDate":"2022-03-14"},{"lineNumber":132,"author":{"gitId":"zxgoh"},"content":"            for (int j \u003d i + 1; j \u003c customers.size(); j++) {","lastModifiedDate":"2022-03-14"},{"lineNumber":133,"author":{"gitId":"zxgoh"},"content":"                if (customers.get(i).isSameCustomer(customers.get(j))) {","lastModifiedDate":"2022-03-14"},{"lineNumber":134,"author":{"gitId":"zxgoh"},"content":"                    return false;","lastModifiedDate":"2022-03-14"},{"lineNumber":135,"author":{"gitId":"zxgoh"},"content":"                }","lastModifiedDate":"2022-03-14"},{"lineNumber":136,"author":{"gitId":"zxgoh"},"content":"            }","lastModifiedDate":"2022-03-14"},{"lineNumber":137,"author":{"gitId":"zxgoh"},"content":"        }","lastModifiedDate":"2022-03-14"},{"lineNumber":138,"author":{"gitId":"zxgoh"},"content":"        return true;","lastModifiedDate":"2022-03-14"},{"lineNumber":139,"author":{"gitId":"zxgoh"},"content":"    }","lastModifiedDate":"2022-03-14"},{"lineNumber":140,"author":{"gitId":"zxgoh"},"content":"}","lastModifiedDate":"2022-03-14"}],"authorContributionMap":{"zxgoh":140}},{"path":"src/main/java/seedu/address/model/customer/exceptions/CustomerNotFoundException.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"zxgoh"},"content":"package seedu.address.model.customer.exceptions;","lastModifiedDate":"2022-03-14"},{"lineNumber":2,"author":{"gitId":"zxgoh"},"content":"","lastModifiedDate":"2022-03-14"},{"lineNumber":3,"author":{"gitId":"zxgoh"},"content":"/**","lastModifiedDate":"2022-03-14"},{"lineNumber":4,"author":{"gitId":"zxgoh"},"content":" * Signals that the operation is unable to find the specified customer.","lastModifiedDate":"2022-03-14"},{"lineNumber":5,"author":{"gitId":"zxgoh"},"content":" */","lastModifiedDate":"2022-03-14"},{"lineNumber":6,"author":{"gitId":"zxgoh"},"content":"public class CustomerNotFoundException extends RuntimeException {}","lastModifiedDate":"2022-03-14"}],"authorContributionMap":{"zxgoh":6}},{"path":"src/main/java/seedu/address/model/customer/exceptions/DuplicateCustomerException.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"zxgoh"},"content":"package seedu.address.model.customer.exceptions;","lastModifiedDate":"2022-03-14"},{"lineNumber":2,"author":{"gitId":"zxgoh"},"content":"","lastModifiedDate":"2022-03-14"},{"lineNumber":3,"author":{"gitId":"zxgoh"},"content":"/**","lastModifiedDate":"2022-03-14"},{"lineNumber":4,"author":{"gitId":"zxgoh"},"content":" * Signals that the operation will result in duplicate Customers (Customers are","lastModifiedDate":"2022-03-14"},{"lineNumber":5,"author":{"gitId":"zxgoh"},"content":" * considered duplicates if they have the same identity).","lastModifiedDate":"2022-03-14"},{"lineNumber":6,"author":{"gitId":"zxgoh"},"content":" */","lastModifiedDate":"2022-03-14"},{"lineNumber":7,"author":{"gitId":"zxgoh"},"content":"public class DuplicateCustomerException extends RuntimeException {","lastModifiedDate":"2022-03-14"},{"lineNumber":8,"author":{"gitId":"zxgoh"},"content":"    public DuplicateCustomerException() {","lastModifiedDate":"2022-03-14"},{"lineNumber":9,"author":{"gitId":"zxgoh"},"content":"        super(\"Operation would result in duplicate customers\");","lastModifiedDate":"2022-03-14"},{"lineNumber":10,"author":{"gitId":"zxgoh"},"content":"    }","lastModifiedDate":"2022-03-14"},{"lineNumber":11,"author":{"gitId":"zxgoh"},"content":"}","lastModifiedDate":"2022-03-14"}],"authorContributionMap":{"zxgoh":11}},{"path":"src/main/java/seedu/address/model/dish/Dish.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"jaegarpoon"},"content":"package seedu.address.model.dish;","lastModifiedDate":"2022-03-24"},{"lineNumber":2,"author":{"gitId":"jaegarpoon"},"content":"","lastModifiedDate":"2022-03-10"},{"lineNumber":3,"author":{"gitId":"jaegarpoon"},"content":"import static seedu.address.commons.util.CollectionUtil.requireAllNonNull;","lastModifiedDate":"2022-03-10"},{"lineNumber":4,"author":{"gitId":"jaegarpoon"},"content":"","lastModifiedDate":"2022-03-10"},{"lineNumber":5,"author":{"gitId":"jaegarpoon"},"content":"import java.util.Objects;","lastModifiedDate":"2022-03-10"},{"lineNumber":6,"author":{"gitId":"jaegarpoon"},"content":"","lastModifiedDate":"2022-03-10"},{"lineNumber":7,"author":{"gitId":"jaegarpoon"},"content":"/**","lastModifiedDate":"2022-03-10"},{"lineNumber":8,"author":{"gitId":"jaegarpoon"},"content":" * Represents a Dish in FoodOnWheels.","lastModifiedDate":"2022-03-10"},{"lineNumber":9,"author":{"gitId":"jaegarpoon"},"content":" * Guarantees: details are present and not null, field values are validated, immutable.","lastModifiedDate":"2022-03-10"},{"lineNumber":10,"author":{"gitId":"jaegarpoon"},"content":" */","lastModifiedDate":"2022-03-10"},{"lineNumber":11,"author":{"gitId":"jaegarpoon"},"content":"public class Dish {","lastModifiedDate":"2022-03-10"},{"lineNumber":12,"author":{"gitId":"jaegarpoon"},"content":"","lastModifiedDate":"2022-03-10"},{"lineNumber":13,"author":{"gitId":"jaegarpoon"},"content":"    // Identity fields","lastModifiedDate":"2022-03-10"},{"lineNumber":14,"author":{"gitId":"jaegarpoon"},"content":"    private final NameDish name;","lastModifiedDate":"2022-03-24"},{"lineNumber":15,"author":{"gitId":"jaegarpoon"},"content":"    private final PriceDish price;","lastModifiedDate":"2022-03-27"},{"lineNumber":16,"author":{"gitId":"jaegarpoon"},"content":"","lastModifiedDate":"2022-03-10"},{"lineNumber":17,"author":{"gitId":"jaegarpoon"},"content":"    /**","lastModifiedDate":"2022-03-10"},{"lineNumber":18,"author":{"gitId":"jaegarpoon"},"content":"     * Every field must be present and not null.","lastModifiedDate":"2022-03-10"},{"lineNumber":19,"author":{"gitId":"jaegarpoon"},"content":"     */","lastModifiedDate":"2022-03-10"},{"lineNumber":20,"author":{"gitId":"jaegarpoon"},"content":"    public Dish(NameDish name, PriceDish price) {","lastModifiedDate":"2022-03-27"},{"lineNumber":21,"author":{"gitId":"jaegarpoon"},"content":"        requireAllNonNull(name, price);","lastModifiedDate":"2022-03-27"},{"lineNumber":22,"author":{"gitId":"jaegarpoon"},"content":"        this.name \u003d name;","lastModifiedDate":"2022-03-10"},{"lineNumber":23,"author":{"gitId":"jaegarpoon"},"content":"        this.price \u003d price;","lastModifiedDate":"2022-03-27"},{"lineNumber":24,"author":{"gitId":"jaegarpoon"},"content":"    }","lastModifiedDate":"2022-03-10"},{"lineNumber":25,"author":{"gitId":"jaegarpoon"},"content":"","lastModifiedDate":"2022-03-10"},{"lineNumber":26,"author":{"gitId":"jaegarpoon"},"content":"    public NameDish getName() {","lastModifiedDate":"2022-03-24"},{"lineNumber":27,"author":{"gitId":"jaegarpoon"},"content":"        return name;","lastModifiedDate":"2022-03-10"},{"lineNumber":28,"author":{"gitId":"jaegarpoon"},"content":"    }","lastModifiedDate":"2022-03-10"},{"lineNumber":29,"author":{"gitId":"jaegarpoon"},"content":"","lastModifiedDate":"2022-03-10"},{"lineNumber":30,"author":{"gitId":"jaegarpoon"},"content":"    public PriceDish getPrice() {","lastModifiedDate":"2022-03-27"},{"lineNumber":31,"author":{"gitId":"jaegarpoon"},"content":"        return price;","lastModifiedDate":"2022-03-27"},{"lineNumber":32,"author":{"gitId":"jaegarpoon"},"content":"    }","lastModifiedDate":"2022-03-27"},{"lineNumber":33,"author":{"gitId":"jaegarpoon"},"content":"","lastModifiedDate":"2022-03-27"},{"lineNumber":34,"author":{"gitId":"jaegarpoon"},"content":"    /**","lastModifiedDate":"2022-03-10"},{"lineNumber":35,"author":{"gitId":"jaegarpoon"},"content":"     * Returns true if both dishes have the same name.","lastModifiedDate":"2022-03-10"},{"lineNumber":36,"author":{"gitId":"jaegarpoon"},"content":"     * This defines a weaker notion of equality between two dishes.","lastModifiedDate":"2022-03-27"},{"lineNumber":37,"author":{"gitId":"jaegarpoon"},"content":"     */","lastModifiedDate":"2022-03-10"},{"lineNumber":38,"author":{"gitId":"jaegarpoon"},"content":"    public boolean isSameDish(Dish otherDish) {","lastModifiedDate":"2022-03-10"},{"lineNumber":39,"author":{"gitId":"jaegarpoon"},"content":"        if (otherDish \u003d\u003d this) {","lastModifiedDate":"2022-03-10"},{"lineNumber":40,"author":{"gitId":"jaegarpoon"},"content":"            return true;","lastModifiedDate":"2022-03-10"},{"lineNumber":41,"author":{"gitId":"jaegarpoon"},"content":"        }","lastModifiedDate":"2022-03-10"},{"lineNumber":42,"author":{"gitId":"jaegarpoon"},"content":"","lastModifiedDate":"2022-03-10"},{"lineNumber":43,"author":{"gitId":"jaegarpoon"},"content":"        return otherDish !\u003d null","lastModifiedDate":"2022-03-10"},{"lineNumber":44,"author":{"gitId":"jaegarpoon"},"content":"                \u0026\u0026 otherDish.getName().equals(getName());","lastModifiedDate":"2022-03-27"},{"lineNumber":45,"author":{"gitId":"jaegarpoon"},"content":"    }","lastModifiedDate":"2022-03-10"},{"lineNumber":46,"author":{"gitId":"jaegarpoon"},"content":"","lastModifiedDate":"2022-03-10"},{"lineNumber":47,"author":{"gitId":"jaegarpoon"},"content":"    /**","lastModifiedDate":"2022-03-10"},{"lineNumber":48,"author":{"gitId":"jaegarpoon"},"content":"     * Returns true if both dishes have the same identity and data fields.","lastModifiedDate":"2022-03-10"},{"lineNumber":49,"author":{"gitId":"jaegarpoon"},"content":"     * This defines a stronger notion of equality between two dishes.","lastModifiedDate":"2022-03-27"},{"lineNumber":50,"author":{"gitId":"jaegarpoon"},"content":"     */","lastModifiedDate":"2022-03-10"},{"lineNumber":51,"author":{"gitId":"jaegarpoon"},"content":"    @Override","lastModifiedDate":"2022-03-10"},{"lineNumber":52,"author":{"gitId":"jaegarpoon"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2022-03-10"},{"lineNumber":53,"author":{"gitId":"jaegarpoon"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2022-03-10"},{"lineNumber":54,"author":{"gitId":"jaegarpoon"},"content":"            return true;","lastModifiedDate":"2022-03-10"},{"lineNumber":55,"author":{"gitId":"jaegarpoon"},"content":"        }","lastModifiedDate":"2022-03-10"},{"lineNumber":56,"author":{"gitId":"jaegarpoon"},"content":"","lastModifiedDate":"2022-03-10"},{"lineNumber":57,"author":{"gitId":"jaegarpoon"},"content":"        if (!(other instanceof Dish)) {","lastModifiedDate":"2022-03-10"},{"lineNumber":58,"author":{"gitId":"jaegarpoon"},"content":"            return false;","lastModifiedDate":"2022-03-10"},{"lineNumber":59,"author":{"gitId":"jaegarpoon"},"content":"        }","lastModifiedDate":"2022-03-10"},{"lineNumber":60,"author":{"gitId":"jaegarpoon"},"content":"","lastModifiedDate":"2022-03-10"},{"lineNumber":61,"author":{"gitId":"jaegarpoon"},"content":"        Dish otherDish \u003d (Dish) other;","lastModifiedDate":"2022-03-10"},{"lineNumber":62,"author":{"gitId":"jaegarpoon"},"content":"        return otherDish.getName().equals(getName()) \u0026\u0026 otherDish.getPrice().equals(getPrice());","lastModifiedDate":"2022-03-27"},{"lineNumber":63,"author":{"gitId":"jaegarpoon"},"content":"    }","lastModifiedDate":"2022-03-10"},{"lineNumber":64,"author":{"gitId":"jaegarpoon"},"content":"","lastModifiedDate":"2022-03-10"},{"lineNumber":65,"author":{"gitId":"jaegarpoon"},"content":"    @Override","lastModifiedDate":"2022-03-10"},{"lineNumber":66,"author":{"gitId":"jaegarpoon"},"content":"    public int hashCode() {","lastModifiedDate":"2022-03-10"},{"lineNumber":67,"author":{"gitId":"jaegarpoon"},"content":"        // use this method for custom fields hashing instead of implementing your own","lastModifiedDate":"2022-03-10"},{"lineNumber":68,"author":{"gitId":"jaegarpoon"},"content":"        return Objects.hash(name);","lastModifiedDate":"2022-03-10"},{"lineNumber":69,"author":{"gitId":"jaegarpoon"},"content":"    }","lastModifiedDate":"2022-03-10"},{"lineNumber":70,"author":{"gitId":"jaegarpoon"},"content":"","lastModifiedDate":"2022-03-10"},{"lineNumber":71,"author":{"gitId":"jaegarpoon"},"content":"    @Override","lastModifiedDate":"2022-03-10"},{"lineNumber":72,"author":{"gitId":"jaegarpoon"},"content":"    public String toString() {","lastModifiedDate":"2022-03-10"},{"lineNumber":73,"author":{"gitId":"jaegarpoon"},"content":"        final StringBuilder builder \u003d new StringBuilder();","lastModifiedDate":"2022-03-10"},{"lineNumber":74,"author":{"gitId":"jaegarpoon"},"content":"        builder.append(getName());","lastModifiedDate":"2022-03-10"},{"lineNumber":75,"author":{"gitId":"jaegarpoon"},"content":"        return builder.toString();","lastModifiedDate":"2022-03-10"},{"lineNumber":76,"author":{"gitId":"jaegarpoon"},"content":"    }","lastModifiedDate":"2022-03-10"},{"lineNumber":77,"author":{"gitId":"jaegarpoon"},"content":"","lastModifiedDate":"2022-03-10"},{"lineNumber":78,"author":{"gitId":"jaegarpoon"},"content":"}","lastModifiedDate":"2022-03-10"},{"lineNumber":79,"author":{"gitId":"jaegarpoon"},"content":"","lastModifiedDate":"2022-03-10"}],"authorContributionMap":{"jaegarpoon":79}},{"path":"src/main/java/seedu/address/model/dish/NameDish.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"jaegarpoon"},"content":"package seedu.address.model.dish;","lastModifiedDate":"2022-03-24"},{"lineNumber":2,"author":{"gitId":"jaegarpoon"},"content":"","lastModifiedDate":"2022-03-24"},{"lineNumber":3,"author":{"gitId":"jaegarpoon"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2022-03-24"},{"lineNumber":4,"author":{"gitId":"jaegarpoon"},"content":"import static seedu.address.commons.util.AppUtil.checkArgument;","lastModifiedDate":"2022-03-24"},{"lineNumber":5,"author":{"gitId":"jaegarpoon"},"content":"","lastModifiedDate":"2022-03-24"},{"lineNumber":6,"author":{"gitId":"jaegarpoon"},"content":"/**","lastModifiedDate":"2022-03-24"},{"lineNumber":7,"author":{"gitId":"jaegarpoon"},"content":" * Represents a Dish\u0027s name in the address book.","lastModifiedDate":"2022-03-24"},{"lineNumber":8,"author":{"gitId":"jaegarpoon"},"content":" * Guarantees: immutable; is valid as declared in {@link #isValidName(String)}","lastModifiedDate":"2022-03-24"},{"lineNumber":9,"author":{"gitId":"jaegarpoon"},"content":" */","lastModifiedDate":"2022-03-24"},{"lineNumber":10,"author":{"gitId":"jaegarpoon"},"content":"public class NameDish {","lastModifiedDate":"2022-03-24"},{"lineNumber":11,"author":{"gitId":"jaegarpoon"},"content":"","lastModifiedDate":"2022-03-24"},{"lineNumber":12,"author":{"gitId":"jaegarpoon"},"content":"    public static final String MESSAGE_CONSTRAINTS \u003d","lastModifiedDate":"2022-03-24"},{"lineNumber":13,"author":{"gitId":"jaegarpoon"},"content":"            \"Names should only contain alphanumeric characters and spaces, and it should not be blank\";","lastModifiedDate":"2022-03-24"},{"lineNumber":14,"author":{"gitId":"jaegarpoon"},"content":"","lastModifiedDate":"2022-03-24"},{"lineNumber":15,"author":{"gitId":"jaegarpoon"},"content":"    /*","lastModifiedDate":"2022-03-24"},{"lineNumber":16,"author":{"gitId":"jaegarpoon"},"content":"     * The first character of the address must not be a whitespace,","lastModifiedDate":"2022-03-24"},{"lineNumber":17,"author":{"gitId":"jaegarpoon"},"content":"     * otherwise \" \" (a blank string) becomes a valid input.","lastModifiedDate":"2022-03-24"},{"lineNumber":18,"author":{"gitId":"jaegarpoon"},"content":"     */","lastModifiedDate":"2022-03-24"},{"lineNumber":19,"author":{"gitId":"jaegarpoon"},"content":"    public static final String VALIDATION_REGEX \u003d \"[\\\\p{Alnum}][\\\\p{Alnum} ]*\";","lastModifiedDate":"2022-03-24"},{"lineNumber":20,"author":{"gitId":"jaegarpoon"},"content":"","lastModifiedDate":"2022-03-24"},{"lineNumber":21,"author":{"gitId":"jaegarpoon"},"content":"    public final String fullName;","lastModifiedDate":"2022-03-24"},{"lineNumber":22,"author":{"gitId":"jaegarpoon"},"content":"","lastModifiedDate":"2022-03-24"},{"lineNumber":23,"author":{"gitId":"jaegarpoon"},"content":"    /**","lastModifiedDate":"2022-03-24"},{"lineNumber":24,"author":{"gitId":"jaegarpoon"},"content":"     * Constructs a {@code Name}.","lastModifiedDate":"2022-03-24"},{"lineNumber":25,"author":{"gitId":"jaegarpoon"},"content":"     *","lastModifiedDate":"2022-03-24"},{"lineNumber":26,"author":{"gitId":"jaegarpoon"},"content":"     * @param name A valid name.","lastModifiedDate":"2022-03-24"},{"lineNumber":27,"author":{"gitId":"jaegarpoon"},"content":"     */","lastModifiedDate":"2022-03-24"},{"lineNumber":28,"author":{"gitId":"jaegarpoon"},"content":"    public NameDish(String name) {","lastModifiedDate":"2022-03-24"},{"lineNumber":29,"author":{"gitId":"jaegarpoon"},"content":"        requireNonNull(name);","lastModifiedDate":"2022-03-24"},{"lineNumber":30,"author":{"gitId":"jaegarpoon"},"content":"        checkArgument(isValidName(name), MESSAGE_CONSTRAINTS);","lastModifiedDate":"2022-03-24"},{"lineNumber":31,"author":{"gitId":"jaegarpoon"},"content":"        fullName \u003d name;","lastModifiedDate":"2022-03-24"},{"lineNumber":32,"author":{"gitId":"jaegarpoon"},"content":"    }","lastModifiedDate":"2022-03-24"},{"lineNumber":33,"author":{"gitId":"jaegarpoon"},"content":"","lastModifiedDate":"2022-03-24"},{"lineNumber":34,"author":{"gitId":"jaegarpoon"},"content":"    /**","lastModifiedDate":"2022-03-24"},{"lineNumber":35,"author":{"gitId":"jaegarpoon"},"content":"     * Returns true if a given string is a valid name.","lastModifiedDate":"2022-03-24"},{"lineNumber":36,"author":{"gitId":"jaegarpoon"},"content":"     */","lastModifiedDate":"2022-03-24"},{"lineNumber":37,"author":{"gitId":"jaegarpoon"},"content":"    public static boolean isValidName(String test) {","lastModifiedDate":"2022-03-24"},{"lineNumber":38,"author":{"gitId":"jaegarpoon"},"content":"        return test.matches(VALIDATION_REGEX);","lastModifiedDate":"2022-03-24"},{"lineNumber":39,"author":{"gitId":"jaegarpoon"},"content":"    }","lastModifiedDate":"2022-03-24"},{"lineNumber":40,"author":{"gitId":"jaegarpoon"},"content":"","lastModifiedDate":"2022-03-24"},{"lineNumber":41,"author":{"gitId":"jaegarpoon"},"content":"","lastModifiedDate":"2022-03-24"},{"lineNumber":42,"author":{"gitId":"jaegarpoon"},"content":"    @Override","lastModifiedDate":"2022-03-24"},{"lineNumber":43,"author":{"gitId":"jaegarpoon"},"content":"    public String toString() {","lastModifiedDate":"2022-03-24"},{"lineNumber":44,"author":{"gitId":"jaegarpoon"},"content":"        return fullName;","lastModifiedDate":"2022-03-24"},{"lineNumber":45,"author":{"gitId":"jaegarpoon"},"content":"    }","lastModifiedDate":"2022-03-24"},{"lineNumber":46,"author":{"gitId":"jaegarpoon"},"content":"","lastModifiedDate":"2022-03-24"},{"lineNumber":47,"author":{"gitId":"jaegarpoon"},"content":"    @Override","lastModifiedDate":"2022-03-24"},{"lineNumber":48,"author":{"gitId":"jaegarpoon"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2022-03-24"},{"lineNumber":49,"author":{"gitId":"jaegarpoon"},"content":"        return other \u003d\u003d this // short circuit if same object","lastModifiedDate":"2022-03-24"},{"lineNumber":50,"author":{"gitId":"jaegarpoon"},"content":"                || (other instanceof NameDish // instanceof handles nulls","lastModifiedDate":"2022-03-24"},{"lineNumber":51,"author":{"gitId":"jaegarpoon"},"content":"                \u0026\u0026 fullName.equals(((NameDish) other).fullName)); // state check","lastModifiedDate":"2022-03-24"},{"lineNumber":52,"author":{"gitId":"jaegarpoon"},"content":"    }","lastModifiedDate":"2022-03-24"},{"lineNumber":53,"author":{"gitId":"jaegarpoon"},"content":"","lastModifiedDate":"2022-03-24"},{"lineNumber":54,"author":{"gitId":"jaegarpoon"},"content":"    @Override","lastModifiedDate":"2022-03-24"},{"lineNumber":55,"author":{"gitId":"jaegarpoon"},"content":"    public int hashCode() {","lastModifiedDate":"2022-03-24"},{"lineNumber":56,"author":{"gitId":"jaegarpoon"},"content":"        return fullName.hashCode();","lastModifiedDate":"2022-03-24"},{"lineNumber":57,"author":{"gitId":"jaegarpoon"},"content":"    }","lastModifiedDate":"2022-03-24"},{"lineNumber":58,"author":{"gitId":"jaegarpoon"},"content":"","lastModifiedDate":"2022-03-24"},{"lineNumber":59,"author":{"gitId":"jaegarpoon"},"content":"}","lastModifiedDate":"2022-03-24"}],"authorContributionMap":{"jaegarpoon":59}},{"path":"src/main/java/seedu/address/model/dish/PriceDish.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"jaegarpoon"},"content":"package seedu.address.model.dish;","lastModifiedDate":"2022-03-24"},{"lineNumber":2,"author":{"gitId":"jaegarpoon"},"content":"","lastModifiedDate":"2022-03-24"},{"lineNumber":3,"author":{"gitId":"jaegarpoon"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2022-03-24"},{"lineNumber":4,"author":{"gitId":"jaegarpoon"},"content":"import static seedu.address.commons.util.AppUtil.checkArgument;","lastModifiedDate":"2022-03-24"},{"lineNumber":5,"author":{"gitId":"jaegarpoon"},"content":"","lastModifiedDate":"2022-03-24"},{"lineNumber":6,"author":{"gitId":"jaegarpoon"},"content":"/**","lastModifiedDate":"2022-03-24"},{"lineNumber":7,"author":{"gitId":"jaegarpoon"},"content":" * Represents a Dish\u0027s price in FoodOnWheels.","lastModifiedDate":"2022-03-24"},{"lineNumber":8,"author":{"gitId":"jaegarpoon"},"content":" * Guarantees: immutable; is valid as declared in {@link #isValidPrice(String)}","lastModifiedDate":"2022-03-24"},{"lineNumber":9,"author":{"gitId":"jaegarpoon"},"content":" */","lastModifiedDate":"2022-03-24"},{"lineNumber":10,"author":{"gitId":"jaegarpoon"},"content":"public class PriceDish {","lastModifiedDate":"2022-03-24"},{"lineNumber":11,"author":{"gitId":"jaegarpoon"},"content":"","lastModifiedDate":"2022-03-24"},{"lineNumber":12,"author":{"gitId":"jaegarpoon"},"content":"","lastModifiedDate":"2022-03-24"},{"lineNumber":13,"author":{"gitId":"jaegarpoon"},"content":"    public static final String MESSAGE_CONSTRAINTS \u003d","lastModifiedDate":"2022-03-24"},{"lineNumber":14,"author":{"gitId":"jaegarpoon"},"content":"            \"Prices should only be in 2 decimal places, i.e. 123.90, and within the limits 0.00 to 99999.99 inclusive\";","lastModifiedDate":"2022-03-27"},{"lineNumber":15,"author":{"gitId":"jaegarpoon"},"content":"    public static final String VALIDATION_REGEX \u003d \"\\\\d{1,5}\\\\.[0-9]{2}\";","lastModifiedDate":"2022-03-27"},{"lineNumber":16,"author":{"gitId":"jaegarpoon"},"content":"    public final double value;","lastModifiedDate":"2022-03-24"},{"lineNumber":17,"author":{"gitId":"jaegarpoon"},"content":"","lastModifiedDate":"2022-03-24"},{"lineNumber":18,"author":{"gitId":"jaegarpoon"},"content":"    /**","lastModifiedDate":"2022-03-24"},{"lineNumber":19,"author":{"gitId":"jaegarpoon"},"content":"     * Constructs a {@code PriceDish}.","lastModifiedDate":"2022-03-24"},{"lineNumber":20,"author":{"gitId":"jaegarpoon"},"content":"     *","lastModifiedDate":"2022-03-24"},{"lineNumber":21,"author":{"gitId":"jaegarpoon"},"content":"     * @param price A valid price.","lastModifiedDate":"2022-03-24"},{"lineNumber":22,"author":{"gitId":"jaegarpoon"},"content":"     */","lastModifiedDate":"2022-03-24"},{"lineNumber":23,"author":{"gitId":"jaegarpoon"},"content":"    public PriceDish(String price) {","lastModifiedDate":"2022-03-24"},{"lineNumber":24,"author":{"gitId":"jaegarpoon"},"content":"        requireNonNull(price);","lastModifiedDate":"2022-03-24"},{"lineNumber":25,"author":{"gitId":"jaegarpoon"},"content":"        checkArgument(isValidPrice(price), MESSAGE_CONSTRAINTS);","lastModifiedDate":"2022-03-24"},{"lineNumber":26,"author":{"gitId":"jaegarpoon"},"content":"        value \u003d Double.parseDouble(price);","lastModifiedDate":"2022-03-24"},{"lineNumber":27,"author":{"gitId":"jaegarpoon"},"content":"    }","lastModifiedDate":"2022-03-24"},{"lineNumber":28,"author":{"gitId":"jaegarpoon"},"content":"","lastModifiedDate":"2022-03-24"},{"lineNumber":29,"author":{"gitId":"jaegarpoon"},"content":"    /**","lastModifiedDate":"2022-03-24"},{"lineNumber":30,"author":{"gitId":"jaegarpoon"},"content":"     * Returns true if a given string is a valid price.","lastModifiedDate":"2022-03-27"},{"lineNumber":31,"author":{"gitId":"jaegarpoon"},"content":"     */","lastModifiedDate":"2022-03-24"},{"lineNumber":32,"author":{"gitId":"jaegarpoon"},"content":"    public static boolean isValidPrice(String test) {","lastModifiedDate":"2022-03-24"},{"lineNumber":33,"author":{"gitId":"jaegarpoon"},"content":"        return test.matches(VALIDATION_REGEX);","lastModifiedDate":"2022-03-24"},{"lineNumber":34,"author":{"gitId":"jaegarpoon"},"content":"    }","lastModifiedDate":"2022-03-24"},{"lineNumber":35,"author":{"gitId":"jaegarpoon"},"content":"","lastModifiedDate":"2022-03-24"},{"lineNumber":36,"author":{"gitId":"jaegarpoon"},"content":"    @Override","lastModifiedDate":"2022-03-24"},{"lineNumber":37,"author":{"gitId":"jaegarpoon"},"content":"    public String toString() {","lastModifiedDate":"2022-03-24"},{"lineNumber":38,"author":{"gitId":"jaegarpoon"},"content":"        return String.format(\"%.2f\", value);","lastModifiedDate":"2022-03-24"},{"lineNumber":39,"author":{"gitId":"jaegarpoon"},"content":"    }","lastModifiedDate":"2022-03-24"},{"lineNumber":40,"author":{"gitId":"jaegarpoon"},"content":"","lastModifiedDate":"2022-03-24"},{"lineNumber":41,"author":{"gitId":"jaegarpoon"},"content":"    @Override","lastModifiedDate":"2022-03-24"},{"lineNumber":42,"author":{"gitId":"jaegarpoon"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2022-03-24"},{"lineNumber":43,"author":{"gitId":"jaegarpoon"},"content":"        return other \u003d\u003d this // short circuit if same object","lastModifiedDate":"2022-03-24"},{"lineNumber":44,"author":{"gitId":"jaegarpoon"},"content":"                || (other instanceof PriceDish // instanceof handles nulls","lastModifiedDate":"2022-03-24"},{"lineNumber":45,"author":{"gitId":"jaegarpoon"},"content":"                \u0026\u0026 value \u003d\u003d ((PriceDish) other).value); // state check","lastModifiedDate":"2022-03-24"},{"lineNumber":46,"author":{"gitId":"jaegarpoon"},"content":"    }","lastModifiedDate":"2022-03-24"},{"lineNumber":47,"author":{"gitId":"jaegarpoon"},"content":"","lastModifiedDate":"2022-03-24"},{"lineNumber":48,"author":{"gitId":"jaegarpoon"},"content":"    @Override","lastModifiedDate":"2022-03-24"},{"lineNumber":49,"author":{"gitId":"jaegarpoon"},"content":"    public int hashCode() {","lastModifiedDate":"2022-03-24"},{"lineNumber":50,"author":{"gitId":"jaegarpoon"},"content":"        return ((Double) value).hashCode();","lastModifiedDate":"2022-03-24"},{"lineNumber":51,"author":{"gitId":"jaegarpoon"},"content":"    }","lastModifiedDate":"2022-03-24"},{"lineNumber":52,"author":{"gitId":"jaegarpoon"},"content":"","lastModifiedDate":"2022-03-24"},{"lineNumber":53,"author":{"gitId":"jaegarpoon"},"content":"}","lastModifiedDate":"2022-03-24"}],"authorContributionMap":{"jaegarpoon":53}},{"path":"src/main/java/seedu/address/model/dish/UniqueDishList.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"jaegarpoon"},"content":"package seedu.address.model.dish;","lastModifiedDate":"2022-03-24"},{"lineNumber":2,"author":{"gitId":"jaegarpoon"},"content":"","lastModifiedDate":"2022-03-10"},{"lineNumber":3,"author":{"gitId":"jaegarpoon"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2022-03-10"},{"lineNumber":4,"author":{"gitId":"jaegarpoon"},"content":"import static seedu.address.commons.util.CollectionUtil.requireAllNonNull;","lastModifiedDate":"2022-03-10"},{"lineNumber":5,"author":{"gitId":"jaegarpoon"},"content":"","lastModifiedDate":"2022-03-10"},{"lineNumber":6,"author":{"gitId":"jaegarpoon"},"content":"import java.util.Iterator;","lastModifiedDate":"2022-03-10"},{"lineNumber":7,"author":{"gitId":"jaegarpoon"},"content":"import java.util.List;","lastModifiedDate":"2022-03-10"},{"lineNumber":8,"author":{"gitId":"jaegarpoon"},"content":"","lastModifiedDate":"2022-03-10"},{"lineNumber":9,"author":{"gitId":"jaegarpoon"},"content":"import javafx.collections.FXCollections;","lastModifiedDate":"2022-03-10"},{"lineNumber":10,"author":{"gitId":"jaegarpoon"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2022-03-10"},{"lineNumber":11,"author":{"gitId":"jaegarpoon"},"content":"import seedu.address.model.dish.exception.DishNotFoundException;","lastModifiedDate":"2022-03-30"},{"lineNumber":12,"author":{"gitId":"jaegarpoon"},"content":"import seedu.address.model.dish.exception.DuplicateDishException;","lastModifiedDate":"2022-03-30"},{"lineNumber":13,"author":{"gitId":"jaegarpoon"},"content":"","lastModifiedDate":"2022-03-10"},{"lineNumber":14,"author":{"gitId":"jaegarpoon"},"content":"/**","lastModifiedDate":"2022-03-10"},{"lineNumber":15,"author":{"gitId":"jaegarpoon"},"content":" * A list of dishes that enforces uniqueness between its elements and does not allow nulls.","lastModifiedDate":"2022-03-10"},{"lineNumber":16,"author":{"gitId":"jaegarpoon"},"content":" * A dish is considered unique by comparing using {@code Dish#isSameDish(Dish)}. As such, adding and updating of","lastModifiedDate":"2022-03-10"},{"lineNumber":17,"author":{"gitId":"jaegarpoon"},"content":" * dishes uses Dish#isSameDish(Dish) for equality so as to ensure that the dish being added or updated is","lastModifiedDate":"2022-03-10"},{"lineNumber":18,"author":{"gitId":"jaegarpoon"},"content":" * unique in terms of identity in the UniqueDishList. However, the removal of a dish uses Dish#equals(Object) so","lastModifiedDate":"2022-03-10"},{"lineNumber":19,"author":{"gitId":"jaegarpoon"},"content":" * as to ensure that the dish with exactly the same fields will be removed.","lastModifiedDate":"2022-03-10"},{"lineNumber":20,"author":{"gitId":"jaegarpoon"},"content":" *","lastModifiedDate":"2022-03-10"},{"lineNumber":21,"author":{"gitId":"jaegarpoon"},"content":" * Supports a minimal set of list operations.","lastModifiedDate":"2022-03-10"},{"lineNumber":22,"author":{"gitId":"jaegarpoon"},"content":" *","lastModifiedDate":"2022-03-10"},{"lineNumber":23,"author":{"gitId":"jaegarpoon"},"content":" * @see Dish#isSameDish(Dish)","lastModifiedDate":"2022-03-10"},{"lineNumber":24,"author":{"gitId":"jaegarpoon"},"content":" */","lastModifiedDate":"2022-03-10"},{"lineNumber":25,"author":{"gitId":"jaegarpoon"},"content":"public class UniqueDishList implements Iterable\u003cDish\u003e {","lastModifiedDate":"2022-03-10"},{"lineNumber":26,"author":{"gitId":"jaegarpoon"},"content":"","lastModifiedDate":"2022-03-10"},{"lineNumber":27,"author":{"gitId":"jaegarpoon"},"content":"    private final ObservableList\u003cDish\u003e internalList \u003d FXCollections.observableArrayList();","lastModifiedDate":"2022-03-10"},{"lineNumber":28,"author":{"gitId":"jaegarpoon"},"content":"    private final ObservableList\u003cDish\u003e internalUnmodifiableList \u003d","lastModifiedDate":"2022-03-10"},{"lineNumber":29,"author":{"gitId":"jaegarpoon"},"content":"            FXCollections.unmodifiableObservableList(internalList);","lastModifiedDate":"2022-03-10"},{"lineNumber":30,"author":{"gitId":"jaegarpoon"},"content":"","lastModifiedDate":"2022-03-10"},{"lineNumber":31,"author":{"gitId":"jaegarpoon"},"content":"    /**","lastModifiedDate":"2022-03-10"},{"lineNumber":32,"author":{"gitId":"jaegarpoon"},"content":"     * Returns true if the list contains an equivalent dish as the given argument.","lastModifiedDate":"2022-03-10"},{"lineNumber":33,"author":{"gitId":"jaegarpoon"},"content":"     */","lastModifiedDate":"2022-03-10"},{"lineNumber":34,"author":{"gitId":"jaegarpoon"},"content":"    public boolean contains(Dish toCheck) {","lastModifiedDate":"2022-03-10"},{"lineNumber":35,"author":{"gitId":"jaegarpoon"},"content":"        requireNonNull(toCheck);","lastModifiedDate":"2022-03-10"},{"lineNumber":36,"author":{"gitId":"jaegarpoon"},"content":"        return internalList.stream().anyMatch(toCheck::isSameDish);","lastModifiedDate":"2022-03-10"},{"lineNumber":37,"author":{"gitId":"jaegarpoon"},"content":"    }","lastModifiedDate":"2022-03-10"},{"lineNumber":38,"author":{"gitId":"jaegarpoon"},"content":"","lastModifiedDate":"2022-03-10"},{"lineNumber":39,"author":{"gitId":"jaegarpoon"},"content":"    /**","lastModifiedDate":"2022-03-10"},{"lineNumber":40,"author":{"gitId":"jaegarpoon"},"content":"     * Adds a dish to the list.","lastModifiedDate":"2022-03-10"},{"lineNumber":41,"author":{"gitId":"jaegarpoon"},"content":"     * The dish must not already exist in the list.","lastModifiedDate":"2022-03-10"},{"lineNumber":42,"author":{"gitId":"jaegarpoon"},"content":"     */","lastModifiedDate":"2022-03-10"},{"lineNumber":43,"author":{"gitId":"jaegarpoon"},"content":"    public void add(Dish toAdd) {","lastModifiedDate":"2022-03-10"},{"lineNumber":44,"author":{"gitId":"jaegarpoon"},"content":"        requireNonNull(toAdd);","lastModifiedDate":"2022-03-10"},{"lineNumber":45,"author":{"gitId":"jaegarpoon"},"content":"        if (contains(toAdd)) {","lastModifiedDate":"2022-03-10"},{"lineNumber":46,"author":{"gitId":"jaegarpoon"},"content":"            throw new DuplicateDishException();","lastModifiedDate":"2022-03-10"},{"lineNumber":47,"author":{"gitId":"jaegarpoon"},"content":"        }","lastModifiedDate":"2022-03-10"},{"lineNumber":48,"author":{"gitId":"jaegarpoon"},"content":"        internalList.add(toAdd);","lastModifiedDate":"2022-03-10"},{"lineNumber":49,"author":{"gitId":"jaegarpoon"},"content":"    }","lastModifiedDate":"2022-03-10"},{"lineNumber":50,"author":{"gitId":"jaegarpoon"},"content":"","lastModifiedDate":"2022-03-10"},{"lineNumber":51,"author":{"gitId":"jaegarpoon"},"content":"    /**","lastModifiedDate":"2022-03-27"},{"lineNumber":52,"author":{"gitId":"jaegarpoon"},"content":"     * Replaces the dish {@code target} in the list with {@code editedDish}.","lastModifiedDate":"2022-03-27"},{"lineNumber":53,"author":{"gitId":"jaegarpoon"},"content":"     * {@code target} must exist in the list.","lastModifiedDate":"2022-03-27"},{"lineNumber":54,"author":{"gitId":"jaegarpoon"},"content":"     * The dish identity of {@code editedDish} must not be the same as another existing dish in the list.","lastModifiedDate":"2022-03-27"},{"lineNumber":55,"author":{"gitId":"jaegarpoon"},"content":"     */","lastModifiedDate":"2022-03-27"},{"lineNumber":56,"author":{"gitId":"jaegarpoon"},"content":"    public void setDish(Dish target, Dish editedDish) {","lastModifiedDate":"2022-03-27"},{"lineNumber":57,"author":{"gitId":"jaegarpoon"},"content":"        requireAllNonNull(target, editedDish);","lastModifiedDate":"2022-03-27"},{"lineNumber":58,"author":{"gitId":"jaegarpoon"},"content":"","lastModifiedDate":"2022-03-27"},{"lineNumber":59,"author":{"gitId":"jaegarpoon"},"content":"        int index \u003d internalList.indexOf(target);","lastModifiedDate":"2022-03-27"},{"lineNumber":60,"author":{"gitId":"jaegarpoon"},"content":"        if (index \u003d\u003d -1) {","lastModifiedDate":"2022-03-27"},{"lineNumber":61,"author":{"gitId":"jaegarpoon"},"content":"            throw new DishNotFoundException();","lastModifiedDate":"2022-03-27"},{"lineNumber":62,"author":{"gitId":"jaegarpoon"},"content":"        }","lastModifiedDate":"2022-03-27"},{"lineNumber":63,"author":{"gitId":"jaegarpoon"},"content":"","lastModifiedDate":"2022-03-27"},{"lineNumber":64,"author":{"gitId":"jaegarpoon"},"content":"        if (!target.isSameDish(editedDish) \u0026\u0026 contains(editedDish)) {","lastModifiedDate":"2022-03-27"},{"lineNumber":65,"author":{"gitId":"jaegarpoon"},"content":"            throw new DuplicateDishException();","lastModifiedDate":"2022-03-27"},{"lineNumber":66,"author":{"gitId":"jaegarpoon"},"content":"        }","lastModifiedDate":"2022-03-27"},{"lineNumber":67,"author":{"gitId":"jaegarpoon"},"content":"","lastModifiedDate":"2022-03-27"},{"lineNumber":68,"author":{"gitId":"jaegarpoon"},"content":"        internalList.set(index, editedDish);","lastModifiedDate":"2022-03-27"},{"lineNumber":69,"author":{"gitId":"jaegarpoon"},"content":"    }","lastModifiedDate":"2022-03-27"},{"lineNumber":70,"author":{"gitId":"jaegarpoon"},"content":"","lastModifiedDate":"2022-03-27"},{"lineNumber":71,"author":{"gitId":"jaegarpoon"},"content":"    /**","lastModifiedDate":"2022-03-10"},{"lineNumber":72,"author":{"gitId":"jaegarpoon"},"content":"     * Removes the equivalent dish from the list.","lastModifiedDate":"2022-03-10"},{"lineNumber":73,"author":{"gitId":"jaegarpoon"},"content":"     * The dish must exist in the list.","lastModifiedDate":"2022-03-10"},{"lineNumber":74,"author":{"gitId":"jaegarpoon"},"content":"     */","lastModifiedDate":"2022-03-10"},{"lineNumber":75,"author":{"gitId":"jaegarpoon"},"content":"    public void remove(Dish toRemove) {","lastModifiedDate":"2022-03-10"},{"lineNumber":76,"author":{"gitId":"jaegarpoon"},"content":"        requireNonNull(toRemove);","lastModifiedDate":"2022-03-10"},{"lineNumber":77,"author":{"gitId":"jaegarpoon"},"content":"        if (!internalList.remove(toRemove)) {","lastModifiedDate":"2022-03-10"},{"lineNumber":78,"author":{"gitId":"jaegarpoon"},"content":"            throw new DishNotFoundException();","lastModifiedDate":"2022-03-10"},{"lineNumber":79,"author":{"gitId":"jaegarpoon"},"content":"        }","lastModifiedDate":"2022-03-10"},{"lineNumber":80,"author":{"gitId":"jaegarpoon"},"content":"    }","lastModifiedDate":"2022-03-10"},{"lineNumber":81,"author":{"gitId":"jaegarpoon"},"content":"","lastModifiedDate":"2022-03-10"},{"lineNumber":82,"author":{"gitId":"jaegarpoon"},"content":"    /**","lastModifiedDate":"2022-03-10"},{"lineNumber":83,"author":{"gitId":"jaegarpoon"},"content":"     * Replaces the contents of this list with {@code dishes}.","lastModifiedDate":"2022-03-10"},{"lineNumber":84,"author":{"gitId":"jaegarpoon"},"content":"     * {@code dishes} must not contain duplicate dishes.","lastModifiedDate":"2022-03-10"},{"lineNumber":85,"author":{"gitId":"jaegarpoon"},"content":"     */","lastModifiedDate":"2022-03-10"},{"lineNumber":86,"author":{"gitId":"jaegarpoon"},"content":"    public void setDishes(List\u003cDish\u003e dishes) {","lastModifiedDate":"2022-03-10"},{"lineNumber":87,"author":{"gitId":"jaegarpoon"},"content":"        requireAllNonNull(dishes);","lastModifiedDate":"2022-03-10"},{"lineNumber":88,"author":{"gitId":"jaegarpoon"},"content":"        if (!dishesAreUnique(dishes)) {","lastModifiedDate":"2022-03-10"},{"lineNumber":89,"author":{"gitId":"jaegarpoon"},"content":"            throw new DuplicateDishException();","lastModifiedDate":"2022-03-10"},{"lineNumber":90,"author":{"gitId":"jaegarpoon"},"content":"        }","lastModifiedDate":"2022-03-10"},{"lineNumber":91,"author":{"gitId":"jaegarpoon"},"content":"","lastModifiedDate":"2022-03-10"},{"lineNumber":92,"author":{"gitId":"jaegarpoon"},"content":"        internalList.setAll(dishes);","lastModifiedDate":"2022-03-10"},{"lineNumber":93,"author":{"gitId":"jaegarpoon"},"content":"    }","lastModifiedDate":"2022-03-10"},{"lineNumber":94,"author":{"gitId":"jaegarpoon"},"content":"","lastModifiedDate":"2022-03-10"},{"lineNumber":95,"author":{"gitId":"jaegarpoon"},"content":"    /**","lastModifiedDate":"2022-03-10"},{"lineNumber":96,"author":{"gitId":"jaegarpoon"},"content":"     * Returns the backing list as an unmodifiable {@code ObservableList}.","lastModifiedDate":"2022-03-10"},{"lineNumber":97,"author":{"gitId":"jaegarpoon"},"content":"     */","lastModifiedDate":"2022-03-10"},{"lineNumber":98,"author":{"gitId":"jaegarpoon"},"content":"    public ObservableList\u003cDish\u003e asUnmodifiableObservableList() {","lastModifiedDate":"2022-03-10"},{"lineNumber":99,"author":{"gitId":"jaegarpoon"},"content":"        return internalUnmodifiableList;","lastModifiedDate":"2022-03-10"},{"lineNumber":100,"author":{"gitId":"jaegarpoon"},"content":"    }","lastModifiedDate":"2022-03-10"},{"lineNumber":101,"author":{"gitId":"jaegarpoon"},"content":"","lastModifiedDate":"2022-03-10"},{"lineNumber":102,"author":{"gitId":"jaegarpoon"},"content":"    @Override","lastModifiedDate":"2022-03-10"},{"lineNumber":103,"author":{"gitId":"jaegarpoon"},"content":"    public Iterator\u003cDish\u003e iterator() {","lastModifiedDate":"2022-03-10"},{"lineNumber":104,"author":{"gitId":"jaegarpoon"},"content":"        return internalList.iterator();","lastModifiedDate":"2022-03-10"},{"lineNumber":105,"author":{"gitId":"jaegarpoon"},"content":"    }","lastModifiedDate":"2022-03-10"},{"lineNumber":106,"author":{"gitId":"jaegarpoon"},"content":"","lastModifiedDate":"2022-03-10"},{"lineNumber":107,"author":{"gitId":"jaegarpoon"},"content":"    @Override","lastModifiedDate":"2022-03-10"},{"lineNumber":108,"author":{"gitId":"jaegarpoon"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2022-03-10"},{"lineNumber":109,"author":{"gitId":"jaegarpoon"},"content":"        return other \u003d\u003d this // short circuit if same object","lastModifiedDate":"2022-03-10"},{"lineNumber":110,"author":{"gitId":"jaegarpoon"},"content":"                || (other instanceof UniqueDishList // instanceof handles nulls","lastModifiedDate":"2022-03-10"},{"lineNumber":111,"author":{"gitId":"jaegarpoon"},"content":"                \u0026\u0026 internalList.equals(((UniqueDishList) other).internalList));","lastModifiedDate":"2022-03-10"},{"lineNumber":112,"author":{"gitId":"jaegarpoon"},"content":"    }","lastModifiedDate":"2022-03-10"},{"lineNumber":113,"author":{"gitId":"jaegarpoon"},"content":"","lastModifiedDate":"2022-03-10"},{"lineNumber":114,"author":{"gitId":"jaegarpoon"},"content":"    @Override","lastModifiedDate":"2022-03-10"},{"lineNumber":115,"author":{"gitId":"jaegarpoon"},"content":"    public int hashCode() {","lastModifiedDate":"2022-03-10"},{"lineNumber":116,"author":{"gitId":"jaegarpoon"},"content":"        return internalList.hashCode();","lastModifiedDate":"2022-03-10"},{"lineNumber":117,"author":{"gitId":"jaegarpoon"},"content":"    }","lastModifiedDate":"2022-03-10"},{"lineNumber":118,"author":{"gitId":"jaegarpoon"},"content":"","lastModifiedDate":"2022-03-10"},{"lineNumber":119,"author":{"gitId":"jaegarpoon"},"content":"    /**","lastModifiedDate":"2022-03-10"},{"lineNumber":120,"author":{"gitId":"jaegarpoon"},"content":"     * Returns true if {@code dishes} contains only unique dishes.","lastModifiedDate":"2022-03-10"},{"lineNumber":121,"author":{"gitId":"jaegarpoon"},"content":"     */","lastModifiedDate":"2022-03-10"},{"lineNumber":122,"author":{"gitId":"jaegarpoon"},"content":"    private boolean dishesAreUnique(List\u003cDish\u003e dishes) {","lastModifiedDate":"2022-03-10"},{"lineNumber":123,"author":{"gitId":"jaegarpoon"},"content":"        for (int i \u003d 0; i \u003c dishes.size() - 1; i++) {","lastModifiedDate":"2022-03-10"},{"lineNumber":124,"author":{"gitId":"jaegarpoon"},"content":"            for (int j \u003d i + 1; j \u003c dishes.size(); j++) {","lastModifiedDate":"2022-03-10"},{"lineNumber":125,"author":{"gitId":"jaegarpoon"},"content":"                if (dishes.get(i).isSameDish(dishes.get(j))) {","lastModifiedDate":"2022-03-10"},{"lineNumber":126,"author":{"gitId":"jaegarpoon"},"content":"                    return false;","lastModifiedDate":"2022-03-10"},{"lineNumber":127,"author":{"gitId":"jaegarpoon"},"content":"                }","lastModifiedDate":"2022-03-10"},{"lineNumber":128,"author":{"gitId":"jaegarpoon"},"content":"            }","lastModifiedDate":"2022-03-10"},{"lineNumber":129,"author":{"gitId":"jaegarpoon"},"content":"        }","lastModifiedDate":"2022-03-10"},{"lineNumber":130,"author":{"gitId":"jaegarpoon"},"content":"        return true;","lastModifiedDate":"2022-03-10"},{"lineNumber":131,"author":{"gitId":"jaegarpoon"},"content":"    }","lastModifiedDate":"2022-03-10"},{"lineNumber":132,"author":{"gitId":"jaegarpoon"},"content":"}","lastModifiedDate":"2022-03-10"},{"lineNumber":133,"author":{"gitId":"jaegarpoon"},"content":"","lastModifiedDate":"2022-03-10"}],"authorContributionMap":{"jaegarpoon":133}},{"path":"src/main/java/seedu/address/model/dish/exception/DishNotFoundException.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"jaegarpoon"},"content":"package seedu.address.model.dish.exception;","lastModifiedDate":"2022-03-30"},{"lineNumber":2,"author":{"gitId":"jaegarpoon"},"content":"","lastModifiedDate":"2022-03-10"},{"lineNumber":3,"author":{"gitId":"jaegarpoon"},"content":"/**","lastModifiedDate":"2022-03-10"},{"lineNumber":4,"author":{"gitId":"jaegarpoon"},"content":" * Signals that the operation is unable to find the specified dish.","lastModifiedDate":"2022-03-10"},{"lineNumber":5,"author":{"gitId":"jaegarpoon"},"content":" */","lastModifiedDate":"2022-03-10"},{"lineNumber":6,"author":{"gitId":"jaegarpoon"},"content":"public class DishNotFoundException extends RuntimeException {}","lastModifiedDate":"2022-03-10"}],"authorContributionMap":{"jaegarpoon":6}},{"path":"src/main/java/seedu/address/model/dish/exception/DuplicateDishException.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"jaegarpoon"},"content":"package seedu.address.model.dish.exception;","lastModifiedDate":"2022-03-30"},{"lineNumber":2,"author":{"gitId":"jaegarpoon"},"content":"","lastModifiedDate":"2022-03-10"},{"lineNumber":3,"author":{"gitId":"jaegarpoon"},"content":"/**","lastModifiedDate":"2022-03-10"},{"lineNumber":4,"author":{"gitId":"jaegarpoon"},"content":" * Signals that the operation will result in duplicate Dishes (Dishes are considered duplicates if they have the same","lastModifiedDate":"2022-03-10"},{"lineNumber":5,"author":{"gitId":"jaegarpoon"},"content":" * identity).","lastModifiedDate":"2022-03-10"},{"lineNumber":6,"author":{"gitId":"jaegarpoon"},"content":" */","lastModifiedDate":"2022-03-10"},{"lineNumber":7,"author":{"gitId":"jaegarpoon"},"content":"public class DuplicateDishException extends RuntimeException {","lastModifiedDate":"2022-03-10"},{"lineNumber":8,"author":{"gitId":"jaegarpoon"},"content":"    public DuplicateDishException() {","lastModifiedDate":"2022-03-10"},{"lineNumber":9,"author":{"gitId":"jaegarpoon"},"content":"        super(\"Operation would result in duplicate dishes\");","lastModifiedDate":"2022-03-10"},{"lineNumber":10,"author":{"gitId":"jaegarpoon"},"content":"    }","lastModifiedDate":"2022-03-10"},{"lineNumber":11,"author":{"gitId":"jaegarpoon"},"content":"}","lastModifiedDate":"2022-03-10"}],"authorContributionMap":{"jaegarpoon":11}},{"path":"src/main/java/seedu/address/model/driver/Driver.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"hieunm1821"},"content":"package seedu.address.model.driver;","lastModifiedDate":"2022-03-10"},{"lineNumber":2,"author":{"gitId":"hieunm1821"},"content":"","lastModifiedDate":"2022-03-10"},{"lineNumber":3,"author":{"gitId":"hieunm1821"},"content":"import static seedu.address.commons.util.CollectionUtil.requireAllNonNull;","lastModifiedDate":"2022-03-10"},{"lineNumber":4,"author":{"gitId":"hieunm1821"},"content":"","lastModifiedDate":"2022-03-10"},{"lineNumber":5,"author":{"gitId":"hieunm1821"},"content":"import java.util.Objects;","lastModifiedDate":"2022-03-10"},{"lineNumber":6,"author":{"gitId":"hieunm1821"},"content":"","lastModifiedDate":"2022-03-10"},{"lineNumber":7,"author":{"gitId":"hieunm1821"},"content":"/**","lastModifiedDate":"2022-03-11"},{"lineNumber":8,"author":{"gitId":"hieunm1821"},"content":" * Represents a Driver in the address book.","lastModifiedDate":"2022-03-11"},{"lineNumber":9,"author":{"gitId":"hieunm1821"},"content":" * Guarantees: details are present and not null, field values are validated, immutable.","lastModifiedDate":"2022-03-11"},{"lineNumber":10,"author":{"gitId":"hieunm1821"},"content":" */","lastModifiedDate":"2022-03-11"},{"lineNumber":11,"author":{"gitId":"hieunm1821"},"content":"public class Driver {","lastModifiedDate":"2022-03-10"},{"lineNumber":12,"author":{"gitId":"hieunm1821"},"content":"    private final NameDriver name;","lastModifiedDate":"2022-03-10"},{"lineNumber":13,"author":{"gitId":"hieunm1821"},"content":"    private final PhoneDriver phone;","lastModifiedDate":"2022-03-10"},{"lineNumber":14,"author":{"gitId":"hieunm1821"},"content":"","lastModifiedDate":"2022-03-10"},{"lineNumber":15,"author":{"gitId":"hieunm1821"},"content":"    private DriverStatus status;","lastModifiedDate":"2022-03-27"},{"lineNumber":16,"author":{"gitId":"hieunm1821"},"content":"","lastModifiedDate":"2022-03-10"},{"lineNumber":17,"author":{"gitId":"hieunm1821"},"content":"    /**","lastModifiedDate":"2022-03-11"},{"lineNumber":18,"author":{"gitId":"hieunm1821"},"content":"     * Every field must be present and not null.","lastModifiedDate":"2022-03-11"},{"lineNumber":19,"author":{"gitId":"hieunm1821"},"content":"     */","lastModifiedDate":"2022-03-11"},{"lineNumber":20,"author":{"gitId":"hieunm1821"},"content":"    public Driver(NameDriver name, PhoneDriver phone, DriverStatus status) {","lastModifiedDate":"2022-03-27"},{"lineNumber":21,"author":{"gitId":"hieunm1821"},"content":"        requireAllNonNull(name, phone);","lastModifiedDate":"2022-03-10"},{"lineNumber":22,"author":{"gitId":"hieunm1821"},"content":"        this.name \u003d name;","lastModifiedDate":"2022-03-10"},{"lineNumber":23,"author":{"gitId":"hieunm1821"},"content":"        this.phone \u003d phone;","lastModifiedDate":"2022-03-10"},{"lineNumber":24,"author":{"gitId":"xzzz3"},"content":"        this.status \u003d status;","lastModifiedDate":"2022-03-17"},{"lineNumber":25,"author":{"gitId":"xzzz3"},"content":"    }","lastModifiedDate":"2022-03-17"},{"lineNumber":26,"author":{"gitId":"xzzz3"},"content":"","lastModifiedDate":"2022-03-17"},{"lineNumber":27,"author":{"gitId":"xzzz3"},"content":"    public Driver(NameDriver name, PhoneDriver phone) {","lastModifiedDate":"2022-03-17"},{"lineNumber":28,"author":{"gitId":"hieunm1821"},"content":"        this(name, phone, DriverStatus.FREE);","lastModifiedDate":"2022-03-27"},{"lineNumber":29,"author":{"gitId":"hieunm1821"},"content":"    }","lastModifiedDate":"2022-03-10"},{"lineNumber":30,"author":{"gitId":"hieunm1821"},"content":"","lastModifiedDate":"2022-03-10"},{"lineNumber":31,"author":{"gitId":"xzzz3"},"content":"","lastModifiedDate":"2022-03-17"},{"lineNumber":32,"author":{"gitId":"hieunm1821"},"content":"    public NameDriver getName() {","lastModifiedDate":"2022-03-10"},{"lineNumber":33,"author":{"gitId":"hieunm1821"},"content":"        return name;","lastModifiedDate":"2022-03-10"},{"lineNumber":34,"author":{"gitId":"hieunm1821"},"content":"    }","lastModifiedDate":"2022-03-10"},{"lineNumber":35,"author":{"gitId":"hieunm1821"},"content":"","lastModifiedDate":"2022-03-10"},{"lineNumber":36,"author":{"gitId":"hieunm1821"},"content":"    public PhoneDriver getPhone() {","lastModifiedDate":"2022-03-10"},{"lineNumber":37,"author":{"gitId":"hieunm1821"},"content":"        return phone;","lastModifiedDate":"2022-03-10"},{"lineNumber":38,"author":{"gitId":"hieunm1821"},"content":"    }","lastModifiedDate":"2022-03-10"},{"lineNumber":39,"author":{"gitId":"hieunm1821"},"content":"","lastModifiedDate":"2022-03-10"},{"lineNumber":40,"author":{"gitId":"hieunm1821"},"content":"    public DriverStatus getStatus() {","lastModifiedDate":"2022-03-27"},{"lineNumber":41,"author":{"gitId":"hieunm1821"},"content":"        return status;","lastModifiedDate":"2022-03-10"},{"lineNumber":42,"author":{"gitId":"hieunm1821"},"content":"    }","lastModifiedDate":"2022-03-10"},{"lineNumber":43,"author":{"gitId":"hieunm1821"},"content":"","lastModifiedDate":"2022-03-10"},{"lineNumber":44,"author":{"gitId":"hieunm1821"},"content":"    public boolean isFree() {","lastModifiedDate":"2022-03-10"},{"lineNumber":45,"author":{"gitId":"hieunm1821"},"content":"        return status.equals(DriverStatus.FREE);","lastModifiedDate":"2022-03-27"},{"lineNumber":46,"author":{"gitId":"hieunm1821"},"content":"    }","lastModifiedDate":"2022-03-10"},{"lineNumber":47,"author":{"gitId":"hieunm1821"},"content":"","lastModifiedDate":"2022-03-10"},{"lineNumber":48,"author":{"gitId":"hieunm1821"},"content":"    public boolean isBusy() {","lastModifiedDate":"2022-03-27"},{"lineNumber":49,"author":{"gitId":"hieunm1821"},"content":"        return status.equals(DriverStatus.BUSY);","lastModifiedDate":"2022-03-27"},{"lineNumber":50,"author":{"gitId":"hieunm1821"},"content":"    }","lastModifiedDate":"2022-03-27"},{"lineNumber":51,"author":{"gitId":"hieunm1821"},"content":"","lastModifiedDate":"2022-03-27"},{"lineNumber":52,"author":{"gitId":"hieunm1821"},"content":"    public void setStatus(DriverStatus status) {","lastModifiedDate":"2022-03-27"},{"lineNumber":53,"author":{"gitId":"xzzz3"},"content":"        this.status \u003d status;","lastModifiedDate":"2022-03-17"},{"lineNumber":54,"author":{"gitId":"xzzz3"},"content":"    }","lastModifiedDate":"2022-03-17"},{"lineNumber":55,"author":{"gitId":"xzzz3"},"content":"","lastModifiedDate":"2022-03-17"},{"lineNumber":56,"author":{"gitId":"hieunm1821"},"content":"    /**","lastModifiedDate":"2022-03-11"},{"lineNumber":57,"author":{"gitId":"hieunm1821"},"content":"     * Returns true if both driver have the same name.","lastModifiedDate":"2022-03-11"},{"lineNumber":58,"author":{"gitId":"hieunm1821"},"content":"     * This defines a weaker notion of equality between two drivers.","lastModifiedDate":"2022-03-11"},{"lineNumber":59,"author":{"gitId":"hieunm1821"},"content":"     */","lastModifiedDate":"2022-03-11"},{"lineNumber":60,"author":{"gitId":"hieunm1821"},"content":"    public boolean isSameDriver(Driver otherDriver) {","lastModifiedDate":"2022-03-10"},{"lineNumber":61,"author":{"gitId":"hieunm1821"},"content":"        if (otherDriver \u003d\u003d this) {","lastModifiedDate":"2022-03-10"},{"lineNumber":62,"author":{"gitId":"hieunm1821"},"content":"            return true;","lastModifiedDate":"2022-03-10"},{"lineNumber":63,"author":{"gitId":"hieunm1821"},"content":"        }","lastModifiedDate":"2022-03-10"},{"lineNumber":64,"author":{"gitId":"hieunm1821"},"content":"","lastModifiedDate":"2022-03-10"},{"lineNumber":65,"author":{"gitId":"hieunm1821"},"content":"        return otherDriver !\u003d null","lastModifiedDate":"2022-03-10"},{"lineNumber":66,"author":{"gitId":"hieunm1821"},"content":"                \u0026\u0026 otherDriver.getName().equals((getName()));","lastModifiedDate":"2022-03-10"},{"lineNumber":67,"author":{"gitId":"hieunm1821"},"content":"    }","lastModifiedDate":"2022-03-10"},{"lineNumber":68,"author":{"gitId":"hieunm1821"},"content":"","lastModifiedDate":"2022-03-10"},{"lineNumber":69,"author":{"gitId":"zxgoh"},"content":"","lastModifiedDate":"2022-03-31"},{"lineNumber":70,"author":{"gitId":"zxgoh"},"content":"","lastModifiedDate":"2022-03-31"},{"lineNumber":71,"author":{"gitId":"hieunm1821"},"content":"    @Override","lastModifiedDate":"2022-03-10"},{"lineNumber":72,"author":{"gitId":"hieunm1821"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2022-03-10"},{"lineNumber":73,"author":{"gitId":"hieunm1821"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2022-03-10"},{"lineNumber":74,"author":{"gitId":"hieunm1821"},"content":"            return true;","lastModifiedDate":"2022-03-10"},{"lineNumber":75,"author":{"gitId":"hieunm1821"},"content":"        }","lastModifiedDate":"2022-03-10"},{"lineNumber":76,"author":{"gitId":"hieunm1821"},"content":"","lastModifiedDate":"2022-03-10"},{"lineNumber":77,"author":{"gitId":"hieunm1821"},"content":"        if (!(other instanceof Driver)) {","lastModifiedDate":"2022-03-10"},{"lineNumber":78,"author":{"gitId":"hieunm1821"},"content":"            return false;","lastModifiedDate":"2022-03-10"},{"lineNumber":79,"author":{"gitId":"hieunm1821"},"content":"        }","lastModifiedDate":"2022-03-10"},{"lineNumber":80,"author":{"gitId":"hieunm1821"},"content":"","lastModifiedDate":"2022-03-10"},{"lineNumber":81,"author":{"gitId":"hieunm1821"},"content":"        Driver otherDriver \u003d (Driver) other;","lastModifiedDate":"2022-03-10"},{"lineNumber":82,"author":{"gitId":"hieunm1821"},"content":"        return otherDriver.getName().equals(getName())","lastModifiedDate":"2022-03-10"},{"lineNumber":83,"author":{"gitId":"hieunm1821"},"content":"                \u0026\u0026 otherDriver.getPhone().equals(getPhone());","lastModifiedDate":"2022-03-10"},{"lineNumber":84,"author":{"gitId":"hieunm1821"},"content":"    }","lastModifiedDate":"2022-03-10"},{"lineNumber":85,"author":{"gitId":"hieunm1821"},"content":"","lastModifiedDate":"2022-03-10"},{"lineNumber":86,"author":{"gitId":"hieunm1821"},"content":"    @Override","lastModifiedDate":"2022-03-10"},{"lineNumber":87,"author":{"gitId":"hieunm1821"},"content":"    public int hashCode() {","lastModifiedDate":"2022-03-10"},{"lineNumber":88,"author":{"gitId":"hieunm1821"},"content":"        return Objects.hash(name, phone, status);","lastModifiedDate":"2022-03-10"},{"lineNumber":89,"author":{"gitId":"hieunm1821"},"content":"    }","lastModifiedDate":"2022-03-10"},{"lineNumber":90,"author":{"gitId":"hieunm1821"},"content":"","lastModifiedDate":"2022-03-10"},{"lineNumber":91,"author":{"gitId":"hieunm1821"},"content":"    @Override","lastModifiedDate":"2022-03-10"},{"lineNumber":92,"author":{"gitId":"hieunm1821"},"content":"    public String toString() {","lastModifiedDate":"2022-03-10"},{"lineNumber":93,"author":{"gitId":"hieunm1821"},"content":"        final StringBuilder builder \u003d new StringBuilder();","lastModifiedDate":"2022-03-10"},{"lineNumber":94,"author":{"gitId":"hieunm1821"},"content":"        builder.append(getName())","lastModifiedDate":"2022-03-10"},{"lineNumber":95,"author":{"gitId":"hieunm1821"},"content":"                .append(\"; Phone: \")","lastModifiedDate":"2022-03-10"},{"lineNumber":96,"author":{"gitId":"hieunm1821"},"content":"                .append(getPhone());","lastModifiedDate":"2022-03-10"},{"lineNumber":97,"author":{"gitId":"hieunm1821"},"content":"","lastModifiedDate":"2022-03-10"},{"lineNumber":98,"author":{"gitId":"hieunm1821"},"content":"        return builder.toString();","lastModifiedDate":"2022-03-10"},{"lineNumber":99,"author":{"gitId":"hieunm1821"},"content":"    }","lastModifiedDate":"2022-03-10"},{"lineNumber":100,"author":{"gitId":"hieunm1821"},"content":"","lastModifiedDate":"2022-03-10"},{"lineNumber":101,"author":{"gitId":"hieunm1821"},"content":"}","lastModifiedDate":"2022-03-10"}],"authorContributionMap":{"hieunm1821":91,"xzzz3":8,"zxgoh":2}},{"path":"src/main/java/seedu/address/model/driver/DriverStatus.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"hieunm1821"},"content":"package seedu.address.model.driver;","lastModifiedDate":"2022-03-27"},{"lineNumber":2,"author":{"gitId":"hieunm1821"},"content":"","lastModifiedDate":"2022-03-27"},{"lineNumber":3,"author":{"gitId":"hieunm1821"},"content":"public enum DriverStatus {","lastModifiedDate":"2022-03-27"},{"lineNumber":4,"author":{"gitId":"hieunm1821"},"content":"    FREE, BUSY, ABSENT","lastModifiedDate":"2022-03-27"},{"lineNumber":5,"author":{"gitId":"hieunm1821"},"content":"}","lastModifiedDate":"2022-03-27"}],"authorContributionMap":{"hieunm1821":5}},{"path":"src/main/java/seedu/address/model/driver/NameDriver.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"hieunm1821"},"content":"package seedu.address.model.driver;","lastModifiedDate":"2022-03-10"},{"lineNumber":2,"author":{"gitId":"hieunm1821"},"content":"","lastModifiedDate":"2022-03-10"},{"lineNumber":3,"author":{"gitId":"hieunm1821"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2022-03-10"},{"lineNumber":4,"author":{"gitId":"hieunm1821"},"content":"import static seedu.address.commons.util.AppUtil.checkArgument;","lastModifiedDate":"2022-03-10"},{"lineNumber":5,"author":{"gitId":"hieunm1821"},"content":"","lastModifiedDate":"2022-03-10"},{"lineNumber":6,"author":{"gitId":"hieunm1821"},"content":"/**","lastModifiedDate":"2022-03-10"},{"lineNumber":7,"author":{"gitId":"hieunm1821"},"content":" * Represents a Person\u0027s name in the address book.","lastModifiedDate":"2022-03-10"},{"lineNumber":8,"author":{"gitId":"hieunm1821"},"content":" * Guarantees: immutable; is valid as declared in {@link #isValidName(String)}","lastModifiedDate":"2022-03-10"},{"lineNumber":9,"author":{"gitId":"hieunm1821"},"content":" */","lastModifiedDate":"2022-03-10"},{"lineNumber":10,"author":{"gitId":"hieunm1821"},"content":"public class NameDriver {","lastModifiedDate":"2022-03-10"},{"lineNumber":11,"author":{"gitId":"hieunm1821"},"content":"","lastModifiedDate":"2022-03-10"},{"lineNumber":12,"author":{"gitId":"hieunm1821"},"content":"    public static final String MESSAGE_CONSTRAINTS \u003d","lastModifiedDate":"2022-03-10"},{"lineNumber":13,"author":{"gitId":"hieunm1821"},"content":"            \"Names should only contain alphanumeric characters and spaces, and it should not be blank\";","lastModifiedDate":"2022-03-10"},{"lineNumber":14,"author":{"gitId":"hieunm1821"},"content":"","lastModifiedDate":"2022-03-10"},{"lineNumber":15,"author":{"gitId":"hieunm1821"},"content":"    /*","lastModifiedDate":"2022-03-10"},{"lineNumber":16,"author":{"gitId":"hieunm1821"},"content":"     * The first character of the address must not be a whitespace,","lastModifiedDate":"2022-03-10"},{"lineNumber":17,"author":{"gitId":"hieunm1821"},"content":"     * otherwise \" \" (a blank string) becomes a valid input.","lastModifiedDate":"2022-03-10"},{"lineNumber":18,"author":{"gitId":"hieunm1821"},"content":"     */","lastModifiedDate":"2022-03-10"},{"lineNumber":19,"author":{"gitId":"hieunm1821"},"content":"    public static final String VALIDATION_REGEX \u003d \"[\\\\p{Alnum}][\\\\p{Alnum} ]*\";","lastModifiedDate":"2022-03-10"},{"lineNumber":20,"author":{"gitId":"hieunm1821"},"content":"","lastModifiedDate":"2022-03-10"},{"lineNumber":21,"author":{"gitId":"hieunm1821"},"content":"    public final String fullName;","lastModifiedDate":"2022-03-10"},{"lineNumber":22,"author":{"gitId":"hieunm1821"},"content":"","lastModifiedDate":"2022-03-10"},{"lineNumber":23,"author":{"gitId":"hieunm1821"},"content":"    /**","lastModifiedDate":"2022-03-10"},{"lineNumber":24,"author":{"gitId":"hieunm1821"},"content":"     * Constructs a {@code Name}.","lastModifiedDate":"2022-03-10"},{"lineNumber":25,"author":{"gitId":"hieunm1821"},"content":"     *","lastModifiedDate":"2022-03-10"},{"lineNumber":26,"author":{"gitId":"hieunm1821"},"content":"     * @param name A valid name.","lastModifiedDate":"2022-03-10"},{"lineNumber":27,"author":{"gitId":"hieunm1821"},"content":"     */","lastModifiedDate":"2022-03-10"},{"lineNumber":28,"author":{"gitId":"hieunm1821"},"content":"    public NameDriver(String name) {","lastModifiedDate":"2022-03-10"},{"lineNumber":29,"author":{"gitId":"hieunm1821"},"content":"        requireNonNull(name);","lastModifiedDate":"2022-03-10"},{"lineNumber":30,"author":{"gitId":"hieunm1821"},"content":"        checkArgument(isValidName(name), MESSAGE_CONSTRAINTS);","lastModifiedDate":"2022-03-10"},{"lineNumber":31,"author":{"gitId":"hieunm1821"},"content":"        fullName \u003d name;","lastModifiedDate":"2022-03-10"},{"lineNumber":32,"author":{"gitId":"hieunm1821"},"content":"    }","lastModifiedDate":"2022-03-10"},{"lineNumber":33,"author":{"gitId":"hieunm1821"},"content":"","lastModifiedDate":"2022-03-10"},{"lineNumber":34,"author":{"gitId":"hieunm1821"},"content":"    /**","lastModifiedDate":"2022-03-10"},{"lineNumber":35,"author":{"gitId":"hieunm1821"},"content":"     * Returns true if a given string is a valid name.","lastModifiedDate":"2022-03-10"},{"lineNumber":36,"author":{"gitId":"hieunm1821"},"content":"     */","lastModifiedDate":"2022-03-10"},{"lineNumber":37,"author":{"gitId":"hieunm1821"},"content":"    public static boolean isValidName(String test) {","lastModifiedDate":"2022-03-10"},{"lineNumber":38,"author":{"gitId":"hieunm1821"},"content":"        return test.matches(VALIDATION_REGEX);","lastModifiedDate":"2022-03-10"},{"lineNumber":39,"author":{"gitId":"hieunm1821"},"content":"    }","lastModifiedDate":"2022-03-10"},{"lineNumber":40,"author":{"gitId":"hieunm1821"},"content":"","lastModifiedDate":"2022-03-10"},{"lineNumber":41,"author":{"gitId":"hieunm1821"},"content":"","lastModifiedDate":"2022-03-10"},{"lineNumber":42,"author":{"gitId":"hieunm1821"},"content":"    @Override","lastModifiedDate":"2022-03-10"},{"lineNumber":43,"author":{"gitId":"hieunm1821"},"content":"    public String toString() {","lastModifiedDate":"2022-03-10"},{"lineNumber":44,"author":{"gitId":"hieunm1821"},"content":"        return fullName;","lastModifiedDate":"2022-03-10"},{"lineNumber":45,"author":{"gitId":"hieunm1821"},"content":"    }","lastModifiedDate":"2022-03-10"},{"lineNumber":46,"author":{"gitId":"hieunm1821"},"content":"","lastModifiedDate":"2022-03-10"},{"lineNumber":47,"author":{"gitId":"hieunm1821"},"content":"    @Override","lastModifiedDate":"2022-03-10"},{"lineNumber":48,"author":{"gitId":"hieunm1821"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2022-03-10"},{"lineNumber":49,"author":{"gitId":"hieunm1821"},"content":"        return other \u003d\u003d this // short circuit if same object","lastModifiedDate":"2022-03-10"},{"lineNumber":50,"author":{"gitId":"hieunm1821"},"content":"                || (other instanceof NameDriver // instanceof handles nulls","lastModifiedDate":"2022-03-10"},{"lineNumber":51,"author":{"gitId":"hieunm1821"},"content":"                \u0026\u0026 fullName.equals(((NameDriver) other).fullName)); // state check","lastModifiedDate":"2022-03-10"},{"lineNumber":52,"author":{"gitId":"hieunm1821"},"content":"    }","lastModifiedDate":"2022-03-10"},{"lineNumber":53,"author":{"gitId":"hieunm1821"},"content":"","lastModifiedDate":"2022-03-10"},{"lineNumber":54,"author":{"gitId":"hieunm1821"},"content":"    @Override","lastModifiedDate":"2022-03-10"},{"lineNumber":55,"author":{"gitId":"hieunm1821"},"content":"    public int hashCode() {","lastModifiedDate":"2022-03-10"},{"lineNumber":56,"author":{"gitId":"hieunm1821"},"content":"        return fullName.hashCode();","lastModifiedDate":"2022-03-10"},{"lineNumber":57,"author":{"gitId":"hieunm1821"},"content":"    }","lastModifiedDate":"2022-03-10"},{"lineNumber":58,"author":{"gitId":"hieunm1821"},"content":"","lastModifiedDate":"2022-03-10"},{"lineNumber":59,"author":{"gitId":"hieunm1821"},"content":"}","lastModifiedDate":"2022-03-10"}],"authorContributionMap":{"hieunm1821":59}},{"path":"src/main/java/seedu/address/model/driver/PhoneDriver.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"hieunm1821"},"content":"package seedu.address.model.driver;","lastModifiedDate":"2022-03-10"},{"lineNumber":2,"author":{"gitId":"hieunm1821"},"content":"","lastModifiedDate":"2022-03-10"},{"lineNumber":3,"author":{"gitId":"hieunm1821"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2022-03-10"},{"lineNumber":4,"author":{"gitId":"hieunm1821"},"content":"import static seedu.address.commons.util.AppUtil.checkArgument;","lastModifiedDate":"2022-03-10"},{"lineNumber":5,"author":{"gitId":"hieunm1821"},"content":"","lastModifiedDate":"2022-03-10"},{"lineNumber":6,"author":{"gitId":"hieunm1821"},"content":"/**","lastModifiedDate":"2022-03-10"},{"lineNumber":7,"author":{"gitId":"hieunm1821"},"content":" * Represents a Person\u0027s phone number in the address book.","lastModifiedDate":"2022-03-10"},{"lineNumber":8,"author":{"gitId":"hieunm1821"},"content":" * Guarantees: immutable; is valid as declared in {@link #isValidPhone(String)}","lastModifiedDate":"2022-03-10"},{"lineNumber":9,"author":{"gitId":"hieunm1821"},"content":" */","lastModifiedDate":"2022-03-10"},{"lineNumber":10,"author":{"gitId":"hieunm1821"},"content":"public class PhoneDriver {","lastModifiedDate":"2022-03-10"},{"lineNumber":11,"author":{"gitId":"hieunm1821"},"content":"","lastModifiedDate":"2022-03-10"},{"lineNumber":12,"author":{"gitId":"hieunm1821"},"content":"","lastModifiedDate":"2022-03-10"},{"lineNumber":13,"author":{"gitId":"hieunm1821"},"content":"    public static final String MESSAGE_CONSTRAINTS \u003d","lastModifiedDate":"2022-03-10"},{"lineNumber":14,"author":{"gitId":"hieunm1821"},"content":"            \"Driver phone number should only contain numbers, and it should be only 8 digits long and start\"","lastModifiedDate":"2022-04-01"},{"lineNumber":15,"author":{"gitId":"hieunm1821"},"content":"                    + \" with 8 or 9\";","lastModifiedDate":"2022-04-01"},{"lineNumber":16,"author":{"gitId":"zxgoh"},"content":"","lastModifiedDate":"2022-03-31"},{"lineNumber":17,"author":{"gitId":"zxgoh"},"content":"    public static final String VALIDATION_REGEX \u003d \"[8-9][0-9]{7}\";","lastModifiedDate":"2022-03-31"},{"lineNumber":18,"author":{"gitId":"hieunm1821"},"content":"    public final String value;","lastModifiedDate":"2022-03-10"},{"lineNumber":19,"author":{"gitId":"hieunm1821"},"content":"","lastModifiedDate":"2022-03-10"},{"lineNumber":20,"author":{"gitId":"hieunm1821"},"content":"    /**","lastModifiedDate":"2022-03-10"},{"lineNumber":21,"author":{"gitId":"hieunm1821"},"content":"     * Constructs a {@code Phone}.","lastModifiedDate":"2022-03-10"},{"lineNumber":22,"author":{"gitId":"hieunm1821"},"content":"     *","lastModifiedDate":"2022-03-10"},{"lineNumber":23,"author":{"gitId":"hieunm1821"},"content":"     * @param phone A valid phone number.","lastModifiedDate":"2022-03-10"},{"lineNumber":24,"author":{"gitId":"hieunm1821"},"content":"     */","lastModifiedDate":"2022-03-10"},{"lineNumber":25,"author":{"gitId":"hieunm1821"},"content":"    public PhoneDriver(String phone) {","lastModifiedDate":"2022-03-10"},{"lineNumber":26,"author":{"gitId":"hieunm1821"},"content":"        requireNonNull(phone);","lastModifiedDate":"2022-03-10"},{"lineNumber":27,"author":{"gitId":"hieunm1821"},"content":"        checkArgument(isValidPhone(phone), MESSAGE_CONSTRAINTS);","lastModifiedDate":"2022-03-10"},{"lineNumber":28,"author":{"gitId":"hieunm1821"},"content":"        value \u003d phone;","lastModifiedDate":"2022-03-10"},{"lineNumber":29,"author":{"gitId":"hieunm1821"},"content":"    }","lastModifiedDate":"2022-03-10"},{"lineNumber":30,"author":{"gitId":"hieunm1821"},"content":"","lastModifiedDate":"2022-03-10"},{"lineNumber":31,"author":{"gitId":"hieunm1821"},"content":"    /**","lastModifiedDate":"2022-03-10"},{"lineNumber":32,"author":{"gitId":"hieunm1821"},"content":"     * Returns true if a given string is a valid phone number.","lastModifiedDate":"2022-03-10"},{"lineNumber":33,"author":{"gitId":"hieunm1821"},"content":"     */","lastModifiedDate":"2022-03-10"},{"lineNumber":34,"author":{"gitId":"hieunm1821"},"content":"    public static boolean isValidPhone(String test) {","lastModifiedDate":"2022-03-10"},{"lineNumber":35,"author":{"gitId":"hieunm1821"},"content":"        return test.matches(VALIDATION_REGEX);","lastModifiedDate":"2022-03-10"},{"lineNumber":36,"author":{"gitId":"hieunm1821"},"content":"    }","lastModifiedDate":"2022-03-10"},{"lineNumber":37,"author":{"gitId":"hieunm1821"},"content":"","lastModifiedDate":"2022-03-10"},{"lineNumber":38,"author":{"gitId":"hieunm1821"},"content":"    @Override","lastModifiedDate":"2022-03-10"},{"lineNumber":39,"author":{"gitId":"hieunm1821"},"content":"    public String toString() {","lastModifiedDate":"2022-03-10"},{"lineNumber":40,"author":{"gitId":"hieunm1821"},"content":"        return value;","lastModifiedDate":"2022-03-10"},{"lineNumber":41,"author":{"gitId":"hieunm1821"},"content":"    }","lastModifiedDate":"2022-03-10"},{"lineNumber":42,"author":{"gitId":"hieunm1821"},"content":"","lastModifiedDate":"2022-03-10"},{"lineNumber":43,"author":{"gitId":"hieunm1821"},"content":"    @Override","lastModifiedDate":"2022-03-10"},{"lineNumber":44,"author":{"gitId":"hieunm1821"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2022-03-10"},{"lineNumber":45,"author":{"gitId":"hieunm1821"},"content":"        return other \u003d\u003d this // short circuit if same object","lastModifiedDate":"2022-03-10"},{"lineNumber":46,"author":{"gitId":"hieunm1821"},"content":"                || (other instanceof PhoneDriver // instanceof handles nulls","lastModifiedDate":"2022-03-10"},{"lineNumber":47,"author":{"gitId":"hieunm1821"},"content":"                \u0026\u0026 value.equals(((PhoneDriver) other).value)); // state check","lastModifiedDate":"2022-03-10"},{"lineNumber":48,"author":{"gitId":"hieunm1821"},"content":"    }","lastModifiedDate":"2022-03-10"},{"lineNumber":49,"author":{"gitId":"hieunm1821"},"content":"","lastModifiedDate":"2022-03-10"},{"lineNumber":50,"author":{"gitId":"hieunm1821"},"content":"    @Override","lastModifiedDate":"2022-03-10"},{"lineNumber":51,"author":{"gitId":"hieunm1821"},"content":"    public int hashCode() {","lastModifiedDate":"2022-03-10"},{"lineNumber":52,"author":{"gitId":"hieunm1821"},"content":"        return value.hashCode();","lastModifiedDate":"2022-03-10"},{"lineNumber":53,"author":{"gitId":"hieunm1821"},"content":"    }","lastModifiedDate":"2022-03-10"},{"lineNumber":54,"author":{"gitId":"hieunm1821"},"content":"","lastModifiedDate":"2022-03-10"},{"lineNumber":55,"author":{"gitId":"hieunm1821"},"content":"}","lastModifiedDate":"2022-03-10"}],"authorContributionMap":{"hieunm1821":53,"zxgoh":2}},{"path":"src/main/java/seedu/address/model/driver/StatusContainsKeywordsPredicate.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"hieunm1821"},"content":"package seedu.address.model.driver;","lastModifiedDate":"2022-03-10"},{"lineNumber":2,"author":{"gitId":"hieunm1821"},"content":"","lastModifiedDate":"2022-03-10"},{"lineNumber":3,"author":{"gitId":"hieunm1821"},"content":"import java.util.List;","lastModifiedDate":"2022-03-10"},{"lineNumber":4,"author":{"gitId":"hieunm1821"},"content":"import java.util.function.Predicate;","lastModifiedDate":"2022-03-10"},{"lineNumber":5,"author":{"gitId":"hieunm1821"},"content":"","lastModifiedDate":"2022-03-10"},{"lineNumber":6,"author":{"gitId":"hieunm1821"},"content":"import seedu.address.commons.util.StringUtil;","lastModifiedDate":"2022-03-10"},{"lineNumber":7,"author":{"gitId":"hieunm1821"},"content":"","lastModifiedDate":"2022-03-10"},{"lineNumber":8,"author":{"gitId":"hieunm1821"},"content":"public class StatusContainsKeywordsPredicate implements Predicate\u003cDriver\u003e {","lastModifiedDate":"2022-03-10"},{"lineNumber":9,"author":{"gitId":"hieunm1821"},"content":"    private final List\u003cString\u003e keywords;","lastModifiedDate":"2022-03-10"},{"lineNumber":10,"author":{"gitId":"hieunm1821"},"content":"","lastModifiedDate":"2022-03-10"},{"lineNumber":11,"author":{"gitId":"hieunm1821"},"content":"    public StatusContainsKeywordsPredicate(List\u003cString\u003e keywords) {","lastModifiedDate":"2022-03-10"},{"lineNumber":12,"author":{"gitId":"hieunm1821"},"content":"        this.keywords \u003d keywords;","lastModifiedDate":"2022-03-10"},{"lineNumber":13,"author":{"gitId":"hieunm1821"},"content":"    }","lastModifiedDate":"2022-03-10"},{"lineNumber":14,"author":{"gitId":"hieunm1821"},"content":"","lastModifiedDate":"2022-03-10"},{"lineNumber":15,"author":{"gitId":"hieunm1821"},"content":"    public List\u003cString\u003e getKeywords() {","lastModifiedDate":"2022-03-27"},{"lineNumber":16,"author":{"gitId":"hieunm1821"},"content":"        return keywords;","lastModifiedDate":"2022-03-27"},{"lineNumber":17,"author":{"gitId":"hieunm1821"},"content":"    }","lastModifiedDate":"2022-03-27"},{"lineNumber":18,"author":{"gitId":"hieunm1821"},"content":"","lastModifiedDate":"2022-03-27"},{"lineNumber":19,"author":{"gitId":"hieunm1821"},"content":"    @Override","lastModifiedDate":"2022-03-10"},{"lineNumber":20,"author":{"gitId":"hieunm1821"},"content":"    public boolean test(Driver driver) {","lastModifiedDate":"2022-03-10"},{"lineNumber":21,"author":{"gitId":"hieunm1821"},"content":"        return keywords.stream()","lastModifiedDate":"2022-03-10"},{"lineNumber":22,"author":{"gitId":"hieunm1821"},"content":"                .anyMatch(keyword -\u003e StringUtil.containsWordIgnoreCase(driver.getStatus().name(), keyword));","lastModifiedDate":"2022-03-27"},{"lineNumber":23,"author":{"gitId":"hieunm1821"},"content":"    }","lastModifiedDate":"2022-03-10"},{"lineNumber":24,"author":{"gitId":"hieunm1821"},"content":"","lastModifiedDate":"2022-03-10"},{"lineNumber":25,"author":{"gitId":"hieunm1821"},"content":"    @Override","lastModifiedDate":"2022-03-10"},{"lineNumber":26,"author":{"gitId":"hieunm1821"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2022-03-10"},{"lineNumber":27,"author":{"gitId":"hieunm1821"},"content":"        return other \u003d\u003d this // short circuit if same object","lastModifiedDate":"2022-03-10"},{"lineNumber":28,"author":{"gitId":"hieunm1821"},"content":"                || (other instanceof StatusContainsKeywordsPredicate // instanceof handles nulls","lastModifiedDate":"2022-03-10"},{"lineNumber":29,"author":{"gitId":"hieunm1821"},"content":"                \u0026\u0026 keywords.equals(((StatusContainsKeywordsPredicate) other).keywords)); // state check","lastModifiedDate":"2022-03-10"},{"lineNumber":30,"author":{"gitId":"hieunm1821"},"content":"    }","lastModifiedDate":"2022-03-10"},{"lineNumber":31,"author":{"gitId":"hieunm1821"},"content":"}","lastModifiedDate":"2022-03-10"}],"authorContributionMap":{"hieunm1821":31}},{"path":"src/main/java/seedu/address/model/driver/UniqueDriverList.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"hieunm1821"},"content":"package seedu.address.model.driver;","lastModifiedDate":"2022-03-10"},{"lineNumber":2,"author":{"gitId":"hieunm1821"},"content":"","lastModifiedDate":"2022-03-10"},{"lineNumber":3,"author":{"gitId":"hieunm1821"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2022-03-10"},{"lineNumber":4,"author":{"gitId":"hieunm1821"},"content":"import static seedu.address.commons.util.CollectionUtil.requireAllNonNull;","lastModifiedDate":"2022-03-10"},{"lineNumber":5,"author":{"gitId":"hieunm1821"},"content":"","lastModifiedDate":"2022-03-10"},{"lineNumber":6,"author":{"gitId":"hieunm1821"},"content":"import java.util.Iterator;","lastModifiedDate":"2022-03-10"},{"lineNumber":7,"author":{"gitId":"hieunm1821"},"content":"import java.util.List;","lastModifiedDate":"2022-03-10"},{"lineNumber":8,"author":{"gitId":"hieunm1821"},"content":"","lastModifiedDate":"2022-03-10"},{"lineNumber":9,"author":{"gitId":"hieunm1821"},"content":"import javafx.collections.FXCollections;","lastModifiedDate":"2022-03-10"},{"lineNumber":10,"author":{"gitId":"hieunm1821"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2022-03-10"},{"lineNumber":11,"author":{"gitId":"hieunm1821"},"content":"import seedu.address.model.driver.exception.DriverNotFoundException;","lastModifiedDate":"2022-03-10"},{"lineNumber":12,"author":{"gitId":"hieunm1821"},"content":"import seedu.address.model.driver.exception.DuplicateDriverException;","lastModifiedDate":"2022-03-10"},{"lineNumber":13,"author":{"gitId":"hieunm1821"},"content":"","lastModifiedDate":"2022-03-10"},{"lineNumber":14,"author":{"gitId":"hieunm1821"},"content":"public class UniqueDriverList implements Iterable\u003cDriver\u003e {","lastModifiedDate":"2022-03-10"},{"lineNumber":15,"author":{"gitId":"hieunm1821"},"content":"    private final ObservableList\u003cDriver\u003e internalList \u003d FXCollections.observableArrayList();","lastModifiedDate":"2022-03-10"},{"lineNumber":16,"author":{"gitId":"hieunm1821"},"content":"    private final ObservableList\u003cDriver\u003e internalUnmodifiableList \u003d","lastModifiedDate":"2022-03-10"},{"lineNumber":17,"author":{"gitId":"hieunm1821"},"content":"            FXCollections.unmodifiableObservableList(internalList);","lastModifiedDate":"2022-03-10"},{"lineNumber":18,"author":{"gitId":"hieunm1821"},"content":"","lastModifiedDate":"2022-03-10"},{"lineNumber":19,"author":{"gitId":"hieunm1821"},"content":"    /**","lastModifiedDate":"2022-03-11"},{"lineNumber":20,"author":{"gitId":"hieunm1821"},"content":"     * Returns true if the list contains an equivalent driver as the given argument.","lastModifiedDate":"2022-03-11"},{"lineNumber":21,"author":{"gitId":"hieunm1821"},"content":"     */","lastModifiedDate":"2022-03-11"},{"lineNumber":22,"author":{"gitId":"hieunm1821"},"content":"    public boolean contains(Driver toCheck) {","lastModifiedDate":"2022-03-10"},{"lineNumber":23,"author":{"gitId":"hieunm1821"},"content":"        requireNonNull(toCheck);","lastModifiedDate":"2022-03-10"},{"lineNumber":24,"author":{"gitId":"hieunm1821"},"content":"        return internalList.stream().anyMatch(toCheck::isSameDriver);","lastModifiedDate":"2022-03-10"},{"lineNumber":25,"author":{"gitId":"hieunm1821"},"content":"    }","lastModifiedDate":"2022-03-10"},{"lineNumber":26,"author":{"gitId":"hieunm1821"},"content":"","lastModifiedDate":"2022-03-10"},{"lineNumber":27,"author":{"gitId":"hieunm1821"},"content":"    /**","lastModifiedDate":"2022-03-11"},{"lineNumber":28,"author":{"gitId":"hieunm1821"},"content":"     * Adds a driver to the list.","lastModifiedDate":"2022-03-11"},{"lineNumber":29,"author":{"gitId":"hieunm1821"},"content":"     * The driver must not already exist in the list.","lastModifiedDate":"2022-03-11"},{"lineNumber":30,"author":{"gitId":"hieunm1821"},"content":"     */","lastModifiedDate":"2022-03-11"},{"lineNumber":31,"author":{"gitId":"hieunm1821"},"content":"    public void add(Driver toAdd) {","lastModifiedDate":"2022-03-10"},{"lineNumber":32,"author":{"gitId":"hieunm1821"},"content":"        requireNonNull(toAdd);","lastModifiedDate":"2022-03-10"},{"lineNumber":33,"author":{"gitId":"hieunm1821"},"content":"        if (contains(toAdd)) {","lastModifiedDate":"2022-03-10"},{"lineNumber":34,"author":{"gitId":"hieunm1821"},"content":"            throw new DuplicateDriverException();","lastModifiedDate":"2022-03-10"},{"lineNumber":35,"author":{"gitId":"hieunm1821"},"content":"        }","lastModifiedDate":"2022-03-10"},{"lineNumber":36,"author":{"gitId":"hieunm1821"},"content":"        internalList.add(toAdd);","lastModifiedDate":"2022-03-10"},{"lineNumber":37,"author":{"gitId":"hieunm1821"},"content":"    }","lastModifiedDate":"2022-03-10"},{"lineNumber":38,"author":{"gitId":"hieunm1821"},"content":"","lastModifiedDate":"2022-03-10"},{"lineNumber":39,"author":{"gitId":"hieunm1821"},"content":"    public void setDriver(Driver target, Driver editedDriver) {","lastModifiedDate":"2022-03-10"},{"lineNumber":40,"author":{"gitId":"hieunm1821"},"content":"        requireAllNonNull(target, editedDriver);","lastModifiedDate":"2022-03-10"},{"lineNumber":41,"author":{"gitId":"hieunm1821"},"content":"","lastModifiedDate":"2022-03-10"},{"lineNumber":42,"author":{"gitId":"hieunm1821"},"content":"        int index \u003d internalList.indexOf(target);","lastModifiedDate":"2022-03-10"},{"lineNumber":43,"author":{"gitId":"hieunm1821"},"content":"        if (index \u003d\u003d -1) {","lastModifiedDate":"2022-03-10"},{"lineNumber":44,"author":{"gitId":"hieunm1821"},"content":"            throw new DriverNotFoundException();","lastModifiedDate":"2022-03-10"},{"lineNumber":45,"author":{"gitId":"hieunm1821"},"content":"        }","lastModifiedDate":"2022-03-10"},{"lineNumber":46,"author":{"gitId":"hieunm1821"},"content":"","lastModifiedDate":"2022-03-10"},{"lineNumber":47,"author":{"gitId":"hieunm1821"},"content":"        if (!target.isSameDriver(editedDriver) \u0026\u0026 contains(editedDriver)) {","lastModifiedDate":"2022-03-10"},{"lineNumber":48,"author":{"gitId":"hieunm1821"},"content":"            throw new DuplicateDriverException();","lastModifiedDate":"2022-03-10"},{"lineNumber":49,"author":{"gitId":"hieunm1821"},"content":"        }","lastModifiedDate":"2022-03-10"},{"lineNumber":50,"author":{"gitId":"hieunm1821"},"content":"","lastModifiedDate":"2022-03-10"},{"lineNumber":51,"author":{"gitId":"hieunm1821"},"content":"        internalList.set(index, editedDriver);","lastModifiedDate":"2022-03-10"},{"lineNumber":52,"author":{"gitId":"hieunm1821"},"content":"    }","lastModifiedDate":"2022-03-10"},{"lineNumber":53,"author":{"gitId":"hieunm1821"},"content":"","lastModifiedDate":"2022-03-10"},{"lineNumber":54,"author":{"gitId":"hieunm1821"},"content":"    public void setDrivers(UniqueDriverList replacement) {","lastModifiedDate":"2022-03-10"},{"lineNumber":55,"author":{"gitId":"hieunm1821"},"content":"        requireNonNull(replacement);","lastModifiedDate":"2022-03-10"},{"lineNumber":56,"author":{"gitId":"hieunm1821"},"content":"        internalList.setAll(replacement.internalList);","lastModifiedDate":"2022-03-10"},{"lineNumber":57,"author":{"gitId":"hieunm1821"},"content":"    }","lastModifiedDate":"2022-03-10"},{"lineNumber":58,"author":{"gitId":"hieunm1821"},"content":"","lastModifiedDate":"2022-03-10"},{"lineNumber":59,"author":{"gitId":"hieunm1821"},"content":"    public void setDrivers(List\u003cDriver\u003e drivers) {","lastModifiedDate":"2022-03-10"},{"lineNumber":60,"author":{"gitId":"hieunm1821"},"content":"        requireAllNonNull(drivers);","lastModifiedDate":"2022-03-10"},{"lineNumber":61,"author":{"gitId":"hieunm1821"},"content":"        if (!driversAreUnique(drivers)) {","lastModifiedDate":"2022-03-10"},{"lineNumber":62,"author":{"gitId":"hieunm1821"},"content":"            throw new DuplicateDriverException();","lastModifiedDate":"2022-03-10"},{"lineNumber":63,"author":{"gitId":"hieunm1821"},"content":"        }","lastModifiedDate":"2022-03-10"},{"lineNumber":64,"author":{"gitId":"hieunm1821"},"content":"","lastModifiedDate":"2022-03-10"},{"lineNumber":65,"author":{"gitId":"hieunm1821"},"content":"        internalList.setAll(drivers);","lastModifiedDate":"2022-03-10"},{"lineNumber":66,"author":{"gitId":"hieunm1821"},"content":"    }","lastModifiedDate":"2022-03-10"},{"lineNumber":67,"author":{"gitId":"hieunm1821"},"content":"","lastModifiedDate":"2022-03-10"},{"lineNumber":68,"author":{"gitId":"hieunm1821"},"content":"    /**","lastModifiedDate":"2022-03-11"},{"lineNumber":69,"author":{"gitId":"hieunm1821"},"content":"     * Removes the equivalent driver from the list.","lastModifiedDate":"2022-03-11"},{"lineNumber":70,"author":{"gitId":"hieunm1821"},"content":"     * The driver must exist in the list.","lastModifiedDate":"2022-03-11"},{"lineNumber":71,"author":{"gitId":"hieunm1821"},"content":"     */","lastModifiedDate":"2022-03-11"},{"lineNumber":72,"author":{"gitId":"hieunm1821"},"content":"    public void remove(Driver toRemove) {","lastModifiedDate":"2022-03-10"},{"lineNumber":73,"author":{"gitId":"hieunm1821"},"content":"        requireNonNull(toRemove);","lastModifiedDate":"2022-03-10"},{"lineNumber":74,"author":{"gitId":"hieunm1821"},"content":"        if (!internalList.remove(toRemove)) {","lastModifiedDate":"2022-03-10"},{"lineNumber":75,"author":{"gitId":"hieunm1821"},"content":"            throw new DriverNotFoundException();","lastModifiedDate":"2022-03-10"},{"lineNumber":76,"author":{"gitId":"hieunm1821"},"content":"        }","lastModifiedDate":"2022-03-10"},{"lineNumber":77,"author":{"gitId":"hieunm1821"},"content":"    }","lastModifiedDate":"2022-03-10"},{"lineNumber":78,"author":{"gitId":"hieunm1821"},"content":"    public ObservableList\u003cDriver\u003e asUnmodifiableObservableList() {","lastModifiedDate":"2022-03-10"},{"lineNumber":79,"author":{"gitId":"hieunm1821"},"content":"        return internalUnmodifiableList;","lastModifiedDate":"2022-03-10"},{"lineNumber":80,"author":{"gitId":"hieunm1821"},"content":"    }","lastModifiedDate":"2022-03-10"},{"lineNumber":81,"author":{"gitId":"hieunm1821"},"content":"","lastModifiedDate":"2022-03-10"},{"lineNumber":82,"author":{"gitId":"hieunm1821"},"content":"    @Override","lastModifiedDate":"2022-03-10"},{"lineNumber":83,"author":{"gitId":"hieunm1821"},"content":"    public Iterator\u003cDriver\u003e iterator() {","lastModifiedDate":"2022-03-10"},{"lineNumber":84,"author":{"gitId":"hieunm1821"},"content":"        return internalList.iterator();","lastModifiedDate":"2022-03-10"},{"lineNumber":85,"author":{"gitId":"hieunm1821"},"content":"    }","lastModifiedDate":"2022-03-10"},{"lineNumber":86,"author":{"gitId":"hieunm1821"},"content":"","lastModifiedDate":"2022-03-10"},{"lineNumber":87,"author":{"gitId":"hieunm1821"},"content":"    @Override","lastModifiedDate":"2022-03-10"},{"lineNumber":88,"author":{"gitId":"hieunm1821"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2022-03-10"},{"lineNumber":89,"author":{"gitId":"hieunm1821"},"content":"        return other \u003d\u003d this // short circuit if same object","lastModifiedDate":"2022-03-10"},{"lineNumber":90,"author":{"gitId":"hieunm1821"},"content":"                || (other instanceof UniqueDriverList // instanceof handles nulls","lastModifiedDate":"2022-03-10"},{"lineNumber":91,"author":{"gitId":"hieunm1821"},"content":"                \u0026\u0026 internalList.equals(((UniqueDriverList) other).internalList));","lastModifiedDate":"2022-03-10"},{"lineNumber":92,"author":{"gitId":"hieunm1821"},"content":"    }","lastModifiedDate":"2022-03-10"},{"lineNumber":93,"author":{"gitId":"hieunm1821"},"content":"","lastModifiedDate":"2022-03-10"},{"lineNumber":94,"author":{"gitId":"hieunm1821"},"content":"    @Override","lastModifiedDate":"2022-03-10"},{"lineNumber":95,"author":{"gitId":"hieunm1821"},"content":"    public int hashCode() {","lastModifiedDate":"2022-03-10"},{"lineNumber":96,"author":{"gitId":"hieunm1821"},"content":"        return internalList.hashCode();","lastModifiedDate":"2022-03-10"},{"lineNumber":97,"author":{"gitId":"hieunm1821"},"content":"    }","lastModifiedDate":"2022-03-10"},{"lineNumber":98,"author":{"gitId":"hieunm1821"},"content":"","lastModifiedDate":"2022-03-10"},{"lineNumber":99,"author":{"gitId":"hieunm1821"},"content":"    private boolean driversAreUnique(List\u003cDriver\u003e drivers) {","lastModifiedDate":"2022-03-10"},{"lineNumber":100,"author":{"gitId":"hieunm1821"},"content":"        for (int i \u003d 0; i \u003c drivers.size() - 1; i++) {","lastModifiedDate":"2022-03-10"},{"lineNumber":101,"author":{"gitId":"hieunm1821"},"content":"            for (int j \u003d i + 1; j \u003c drivers.size(); j++) {","lastModifiedDate":"2022-03-10"},{"lineNumber":102,"author":{"gitId":"hieunm1821"},"content":"                if (drivers.get(i).isSameDriver(drivers.get(j))) {","lastModifiedDate":"2022-03-10"},{"lineNumber":103,"author":{"gitId":"hieunm1821"},"content":"                    return false;","lastModifiedDate":"2022-03-10"},{"lineNumber":104,"author":{"gitId":"hieunm1821"},"content":"                }","lastModifiedDate":"2022-03-10"},{"lineNumber":105,"author":{"gitId":"hieunm1821"},"content":"            }","lastModifiedDate":"2022-03-10"},{"lineNumber":106,"author":{"gitId":"hieunm1821"},"content":"        }","lastModifiedDate":"2022-03-10"},{"lineNumber":107,"author":{"gitId":"hieunm1821"},"content":"        return true;","lastModifiedDate":"2022-03-10"},{"lineNumber":108,"author":{"gitId":"hieunm1821"},"content":"    }","lastModifiedDate":"2022-03-10"},{"lineNumber":109,"author":{"gitId":"hieunm1821"},"content":"}","lastModifiedDate":"2022-03-10"}],"authorContributionMap":{"hieunm1821":109}},{"path":"src/main/java/seedu/address/model/driver/exception/DriverNotFoundException.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"hieunm1821"},"content":"package seedu.address.model.driver.exception;","lastModifiedDate":"2022-03-10"},{"lineNumber":2,"author":{"gitId":"hieunm1821"},"content":"","lastModifiedDate":"2022-03-10"},{"lineNumber":3,"author":{"gitId":"hieunm1821"},"content":"/**","lastModifiedDate":"2022-03-10"},{"lineNumber":4,"author":{"gitId":"hieunm1821"},"content":" * Signals that the operation is unable to find the specified driver.","lastModifiedDate":"2022-03-10"},{"lineNumber":5,"author":{"gitId":"hieunm1821"},"content":" */","lastModifiedDate":"2022-03-10"},{"lineNumber":6,"author":{"gitId":"hieunm1821"},"content":"public class DriverNotFoundException extends RuntimeException {}","lastModifiedDate":"2022-03-10"}],"authorContributionMap":{"hieunm1821":6}},{"path":"src/main/java/seedu/address/model/driver/exception/DuplicateDriverException.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"hieunm1821"},"content":"package seedu.address.model.driver.exception;","lastModifiedDate":"2022-03-10"},{"lineNumber":2,"author":{"gitId":"hieunm1821"},"content":"/**","lastModifiedDate":"2022-03-10"},{"lineNumber":3,"author":{"gitId":"hieunm1821"},"content":" * Signals that the operation will result in duplicate Drivers (Drivers are considered duplicates if they have the same","lastModifiedDate":"2022-03-10"},{"lineNumber":4,"author":{"gitId":"hieunm1821"},"content":" * identity).","lastModifiedDate":"2022-03-10"},{"lineNumber":5,"author":{"gitId":"hieunm1821"},"content":" */","lastModifiedDate":"2022-03-10"},{"lineNumber":6,"author":{"gitId":"hieunm1821"},"content":"public class DuplicateDriverException extends RuntimeException {","lastModifiedDate":"2022-03-10"},{"lineNumber":7,"author":{"gitId":"hieunm1821"},"content":"    public DuplicateDriverException() {","lastModifiedDate":"2022-03-10"},{"lineNumber":8,"author":{"gitId":"hieunm1821"},"content":"        super(\"Operation would result in duplicate driver\");","lastModifiedDate":"2022-03-10"},{"lineNumber":9,"author":{"gitId":"hieunm1821"},"content":"    }","lastModifiedDate":"2022-03-10"},{"lineNumber":10,"author":{"gitId":"hieunm1821"},"content":"}","lastModifiedDate":"2022-03-10"}],"authorContributionMap":{"hieunm1821":10}},{"path":"src/main/java/seedu/address/model/item/Address.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"jaegarpoon"},"content":"package seedu.address.model.item;","lastModifiedDate":"2022-03-11"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2017-05-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static seedu.address.commons.util.AppUtil.checkArgument;","lastModifiedDate":"2017-05-30"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":6,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-24"},{"lineNumber":7,"author":{"gitId":"-"},"content":" * Represents a Person\u0027s address in the address book.","lastModifiedDate":"2016-08-24"},{"lineNumber":8,"author":{"gitId":"-"},"content":" * Guarantees: immutable; is valid as declared in {@link #isValidAddress(String)}","lastModifiedDate":"2016-08-24"},{"lineNumber":9,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-24"},{"lineNumber":10,"author":{"gitId":"-"},"content":"public class Address {","lastModifiedDate":"2016-09-21"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_CONSTRAINTS \u003d \"Addresses can take any values, and it should not be blank\";","lastModifiedDate":"2018-09-22"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-16"},{"lineNumber":14,"author":{"gitId":"-"},"content":"    /*","lastModifiedDate":"2017-01-16"},{"lineNumber":15,"author":{"gitId":"-"},"content":"     * The first character of the address must not be a whitespace,","lastModifiedDate":"2017-01-16"},{"lineNumber":16,"author":{"gitId":"-"},"content":"     * otherwise \" \" (a blank string) becomes a valid input.","lastModifiedDate":"2017-01-16"},{"lineNumber":17,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-01-16"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    public static final String VALIDATION_REGEX \u003d \"[^\\\\s].*\";","lastModifiedDate":"2018-09-22"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    public final String value;","lastModifiedDate":"2016-08-24"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-24"},{"lineNumber":23,"author":{"gitId":"-"},"content":"     * Constructs an {@code Address}.","lastModifiedDate":"2017-05-30"},{"lineNumber":24,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2016-08-24"},{"lineNumber":25,"author":{"gitId":"-"},"content":"     * @param address A valid address.","lastModifiedDate":"2017-05-30"},{"lineNumber":26,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-24"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    public Address(String address) {","lastModifiedDate":"2017-05-30"},{"lineNumber":28,"author":{"gitId":"-"},"content":"        requireNonNull(address);","lastModifiedDate":"2017-05-15"},{"lineNumber":29,"author":{"gitId":"-"},"content":"        checkArgument(isValidAddress(address), MESSAGE_CONSTRAINTS);","lastModifiedDate":"2018-09-22"},{"lineNumber":30,"author":{"gitId":"-"},"content":"        value \u003d address;","lastModifiedDate":"2018-08-14"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":32,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-24"},{"lineNumber":34,"author":{"gitId":"-"},"content":"     * Returns true if a given string is a valid email.","lastModifiedDate":"2018-04-05"},{"lineNumber":35,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-24"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    public static boolean isValidAddress(String test) {","lastModifiedDate":"2016-08-24"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        return test.matches(VALIDATION_REGEX);","lastModifiedDate":"2018-09-22"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":39,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-24"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    public String toString() {","lastModifiedDate":"2016-08-24"},{"lineNumber":42,"author":{"gitId":"-"},"content":"        return value;","lastModifiedDate":"2016-08-24"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":44,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-24"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2016-08-24"},{"lineNumber":47,"author":{"gitId":"-"},"content":"        return other \u003d\u003d this // short circuit if same object","lastModifiedDate":"2016-08-24"},{"lineNumber":48,"author":{"gitId":"-"},"content":"                || (other instanceof Address // instanceof handles nulls","lastModifiedDate":"2016-08-24"},{"lineNumber":49,"author":{"gitId":"-"},"content":"                \u0026\u0026 value.equals(((Address) other).value)); // state check","lastModifiedDate":"2018-08-14"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":51,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-24"},{"lineNumber":53,"author":{"gitId":"-"},"content":"    public int hashCode() {","lastModifiedDate":"2016-08-24"},{"lineNumber":54,"author":{"gitId":"-"},"content":"        return value.hashCode();","lastModifiedDate":"2016-08-24"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":56,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":57,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-24"}],"authorContributionMap":{"jaegarpoon":1,"-":56}},{"path":"src/main/java/seedu/address/model/item/Email.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"jaegarpoon"},"content":"package seedu.address.model.item;","lastModifiedDate":"2022-03-11"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2017-05-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static seedu.address.commons.util.AppUtil.checkArgument;","lastModifiedDate":"2017-05-30"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":6,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-24"},{"lineNumber":7,"author":{"gitId":"-"},"content":" * Represents a Person\u0027s email in the address book.","lastModifiedDate":"2018-02-09"},{"lineNumber":8,"author":{"gitId":"-"},"content":" * Guarantees: immutable; is valid as declared in {@link #isValidEmail(String)}","lastModifiedDate":"2016-08-24"},{"lineNumber":9,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-24"},{"lineNumber":10,"author":{"gitId":"-"},"content":"public class Email {","lastModifiedDate":"2016-09-21"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    private static final String SPECIAL_CHARACTERS \u003d \"+_.-\";","lastModifiedDate":"2021-07-20"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_CONSTRAINTS \u003d \"Emails should be of the format local-part@domain \"","lastModifiedDate":"2018-09-22"},{"lineNumber":14,"author":{"gitId":"-"},"content":"            + \"and adhere to the following constraints:\\n\"","lastModifiedDate":"2018-02-09"},{"lineNumber":15,"author":{"gitId":"-"},"content":"            + \"1. The local-part should only contain alphanumeric characters and these special characters, excluding \"","lastModifiedDate":"2018-02-09"},{"lineNumber":16,"author":{"gitId":"-"},"content":"            + \"the parentheses, (\" + SPECIAL_CHARACTERS + \"). The local-part may not start or end with any special \"","lastModifiedDate":"2021-07-20"},{"lineNumber":17,"author":{"gitId":"-"},"content":"            + \"characters.\\n\"","lastModifiedDate":"2021-07-20"},{"lineNumber":18,"author":{"gitId":"-"},"content":"            + \"2. This is followed by a \u0027@\u0027 and then a domain name. The domain name is made up of domain labels \"","lastModifiedDate":"2021-07-20"},{"lineNumber":19,"author":{"gitId":"-"},"content":"            + \"separated by periods.\\n\"","lastModifiedDate":"2021-07-20"},{"lineNumber":20,"author":{"gitId":"-"},"content":"            + \"The domain name must:\\n\"","lastModifiedDate":"2018-02-09"},{"lineNumber":21,"author":{"gitId":"-"},"content":"            + \"    - end with a domain label at least 2 characters long\\n\"","lastModifiedDate":"2021-07-20"},{"lineNumber":22,"author":{"gitId":"-"},"content":"            + \"    - have each domain label start and end with alphanumeric characters\\n\"","lastModifiedDate":"2021-07-20"},{"lineNumber":23,"author":{"gitId":"-"},"content":"            + \"    - have each domain label consist of alphanumeric characters, separated only by hyphens, if any.\";","lastModifiedDate":"2021-07-20"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    // alphanumeric and special characters","lastModifiedDate":"2018-02-09"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    private static final String ALPHANUMERIC_NO_UNDERSCORE \u003d \"[^\\\\W_]+\"; // alphanumeric characters except underscore","lastModifiedDate":"2021-07-20"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    private static final String LOCAL_PART_REGEX \u003d \"^\" + ALPHANUMERIC_NO_UNDERSCORE + \"([\" + SPECIAL_CHARACTERS + \"]\"","lastModifiedDate":"2021-07-20"},{"lineNumber":27,"author":{"gitId":"-"},"content":"            + ALPHANUMERIC_NO_UNDERSCORE + \")*\";","lastModifiedDate":"2021-07-20"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    private static final String DOMAIN_PART_REGEX \u003d ALPHANUMERIC_NO_UNDERSCORE","lastModifiedDate":"2021-07-20"},{"lineNumber":29,"author":{"gitId":"-"},"content":"            + \"(-\" + ALPHANUMERIC_NO_UNDERSCORE + \")*\";","lastModifiedDate":"2021-07-20"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    private static final String DOMAIN_LAST_PART_REGEX \u003d \"(\" + DOMAIN_PART_REGEX + \"){2,}$\"; // At least two chars","lastModifiedDate":"2021-07-20"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    private static final String DOMAIN_REGEX \u003d \"(\" + DOMAIN_PART_REGEX + \"\\\\.)*\" + DOMAIN_LAST_PART_REGEX;","lastModifiedDate":"2021-07-20"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    public static final String VALIDATION_REGEX \u003d LOCAL_PART_REGEX + \"@\" + DOMAIN_REGEX;","lastModifiedDate":"2021-07-20"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    public final String value;","lastModifiedDate":"2016-08-24"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-24"},{"lineNumber":37,"author":{"gitId":"-"},"content":"     * Constructs an {@code Email}.","lastModifiedDate":"2017-05-30"},{"lineNumber":38,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2016-08-24"},{"lineNumber":39,"author":{"gitId":"-"},"content":"     * @param email A valid email address.","lastModifiedDate":"2017-05-30"},{"lineNumber":40,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-24"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    public Email(String email) {","lastModifiedDate":"2017-05-30"},{"lineNumber":42,"author":{"gitId":"-"},"content":"        requireNonNull(email);","lastModifiedDate":"2017-05-15"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        checkArgument(isValidEmail(email), MESSAGE_CONSTRAINTS);","lastModifiedDate":"2018-09-22"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        value \u003d email;","lastModifiedDate":"2018-08-14"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":46,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-24"},{"lineNumber":48,"author":{"gitId":"-"},"content":"     * Returns if a given string is a valid email.","lastModifiedDate":"2018-04-05"},{"lineNumber":49,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-24"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    public static boolean isValidEmail(String test) {","lastModifiedDate":"2016-08-24"},{"lineNumber":51,"author":{"gitId":"-"},"content":"        return test.matches(VALIDATION_REGEX);","lastModifiedDate":"2018-09-22"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":53,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":54,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-24"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    public String toString() {","lastModifiedDate":"2016-08-24"},{"lineNumber":56,"author":{"gitId":"-"},"content":"        return value;","lastModifiedDate":"2016-08-24"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":58,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":59,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-24"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2016-08-24"},{"lineNumber":61,"author":{"gitId":"-"},"content":"        return other \u003d\u003d this // short circuit if same object","lastModifiedDate":"2016-08-24"},{"lineNumber":62,"author":{"gitId":"-"},"content":"                || (other instanceof Email // instanceof handles nulls","lastModifiedDate":"2016-08-24"},{"lineNumber":63,"author":{"gitId":"-"},"content":"                \u0026\u0026 value.equals(((Email) other).value)); // state check","lastModifiedDate":"2018-08-14"},{"lineNumber":64,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":65,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":66,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-24"},{"lineNumber":67,"author":{"gitId":"-"},"content":"    public int hashCode() {","lastModifiedDate":"2016-08-24"},{"lineNumber":68,"author":{"gitId":"-"},"content":"        return value.hashCode();","lastModifiedDate":"2016-08-24"},{"lineNumber":69,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":70,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":71,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-24"}],"authorContributionMap":{"jaegarpoon":1,"-":70}},{"path":"src/main/java/seedu/address/model/item/Name.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"jaegarpoon"},"content":"package seedu.address.model.item;","lastModifiedDate":"2022-03-11"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2017-05-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static seedu.address.commons.util.AppUtil.checkArgument;","lastModifiedDate":"2017-05-30"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":6,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-24"},{"lineNumber":7,"author":{"gitId":"-"},"content":" * Represents a Person\u0027s name in the address book.","lastModifiedDate":"2016-08-24"},{"lineNumber":8,"author":{"gitId":"-"},"content":" * Guarantees: immutable; is valid as declared in {@link #isValidName(String)}","lastModifiedDate":"2016-08-24"},{"lineNumber":9,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-24"},{"lineNumber":10,"author":{"gitId":"-"},"content":"public class Name {","lastModifiedDate":"2016-08-24"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_CONSTRAINTS \u003d","lastModifiedDate":"2018-09-22"},{"lineNumber":13,"author":{"gitId":"-"},"content":"            \"Names should only contain alphanumeric characters and spaces, and it should not be blank\";","lastModifiedDate":"2018-04-04"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-16"},{"lineNumber":15,"author":{"gitId":"-"},"content":"    /*","lastModifiedDate":"2017-01-16"},{"lineNumber":16,"author":{"gitId":"-"},"content":"     * The first character of the address must not be a whitespace,","lastModifiedDate":"2017-01-16"},{"lineNumber":17,"author":{"gitId":"-"},"content":"     * otherwise \" \" (a blank string) becomes a valid input.","lastModifiedDate":"2017-01-16"},{"lineNumber":18,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-01-16"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    public static final String VALIDATION_REGEX \u003d \"[\\\\p{Alnum}][\\\\p{Alnum} ]*\";","lastModifiedDate":"2018-09-22"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    public final String fullName;","lastModifiedDate":"2016-08-24"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-24"},{"lineNumber":24,"author":{"gitId":"-"},"content":"     * Constructs a {@code Name}.","lastModifiedDate":"2017-05-30"},{"lineNumber":25,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2016-08-24"},{"lineNumber":26,"author":{"gitId":"-"},"content":"     * @param name A valid name.","lastModifiedDate":"2017-05-30"},{"lineNumber":27,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-24"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    public Name(String name) {","lastModifiedDate":"2017-05-30"},{"lineNumber":29,"author":{"gitId":"-"},"content":"        requireNonNull(name);","lastModifiedDate":"2017-05-15"},{"lineNumber":30,"author":{"gitId":"-"},"content":"        checkArgument(isValidName(name), MESSAGE_CONSTRAINTS);","lastModifiedDate":"2018-09-22"},{"lineNumber":31,"author":{"gitId":"-"},"content":"        fullName \u003d name;","lastModifiedDate":"2018-08-14"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-24"},{"lineNumber":35,"author":{"gitId":"-"},"content":"     * Returns true if a given string is a valid name.","lastModifiedDate":"2018-04-05"},{"lineNumber":36,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-24"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    public static boolean isValidName(String test) {","lastModifiedDate":"2016-08-24"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        return test.matches(VALIDATION_REGEX);","lastModifiedDate":"2018-09-22"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":40,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-24"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    public String toString() {","lastModifiedDate":"2016-08-24"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        return fullName;","lastModifiedDate":"2016-08-24"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":46,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-24"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2016-08-24"},{"lineNumber":49,"author":{"gitId":"-"},"content":"        return other \u003d\u003d this // short circuit if same object","lastModifiedDate":"2016-08-24"},{"lineNumber":50,"author":{"gitId":"-"},"content":"                || (other instanceof Name // instanceof handles nulls","lastModifiedDate":"2016-08-24"},{"lineNumber":51,"author":{"gitId":"-"},"content":"                \u0026\u0026 fullName.equals(((Name) other).fullName)); // state check","lastModifiedDate":"2018-08-14"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":53,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":54,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-24"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    public int hashCode() {","lastModifiedDate":"2016-08-24"},{"lineNumber":56,"author":{"gitId":"-"},"content":"        return fullName.hashCode();","lastModifiedDate":"2016-08-24"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":58,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":59,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-24"}],"authorContributionMap":{"jaegarpoon":1,"-":58}},{"path":"src/main/java/seedu/address/model/item/NameContainsKeywordsPredicate.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"jaegarpoon"},"content":"package seedu.address.model.item;","lastModifiedDate":"2022-03-11"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.util.List;","lastModifiedDate":"2017-06-12"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import java.util.function.Predicate;","lastModifiedDate":"2017-06-12"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import seedu.address.commons.util.StringUtil;","lastModifiedDate":"2017-06-12"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":8,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-06-12"},{"lineNumber":9,"author":{"gitId":"-"},"content":" * Tests that a {@code Person}\u0027s {@code Name} matches any of the keywords given.","lastModifiedDate":"2018-01-10"},{"lineNumber":10,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-06-12"},{"lineNumber":11,"author":{"gitId":"-"},"content":"public class NameContainsKeywordsPredicate implements Predicate\u003cPerson\u003e {","lastModifiedDate":"2018-01-10"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    private final List\u003cString\u003e keywords;","lastModifiedDate":"2017-06-12"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":14,"author":{"gitId":"-"},"content":"    public NameContainsKeywordsPredicate(List\u003cString\u003e keywords) {","lastModifiedDate":"2017-06-12"},{"lineNumber":15,"author":{"gitId":"-"},"content":"        this.keywords \u003d keywords;","lastModifiedDate":"2017-06-12"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-12"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2017-06-12"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    public boolean test(Person person) {","lastModifiedDate":"2018-01-10"},{"lineNumber":20,"author":{"gitId":"-"},"content":"        return keywords.stream()","lastModifiedDate":"2017-06-12"},{"lineNumber":21,"author":{"gitId":"-"},"content":"                .anyMatch(keyword -\u003e StringUtil.containsWordIgnoreCase(person.getName().fullName, keyword));","lastModifiedDate":"2017-06-12"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-12"},{"lineNumber":23,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2017-06-12"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2017-06-12"},{"lineNumber":26,"author":{"gitId":"-"},"content":"        return other \u003d\u003d this // short circuit if same object","lastModifiedDate":"2017-06-12"},{"lineNumber":27,"author":{"gitId":"-"},"content":"                || (other instanceof NameContainsKeywordsPredicate // instanceof handles nulls","lastModifiedDate":"2017-06-12"},{"lineNumber":28,"author":{"gitId":"-"},"content":"                \u0026\u0026 keywords.equals(((NameContainsKeywordsPredicate) other).keywords)); // state check","lastModifiedDate":"2018-08-14"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-12"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":31,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-06-12"}],"authorContributionMap":{"jaegarpoon":1,"-":30}},{"path":"src/main/java/seedu/address/model/item/Person.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"jaegarpoon"},"content":"package seedu.address.model.item;","lastModifiedDate":"2022-03-11"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static seedu.address.commons.util.CollectionUtil.requireAllNonNull;","lastModifiedDate":"2017-05-19"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.util.Collections;","lastModifiedDate":"2017-03-07"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.util.HashSet;","lastModifiedDate":"2018-03-26"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import java.util.Objects;","lastModifiedDate":"2017-01-19"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import java.util.Set;","lastModifiedDate":"2017-03-07"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import seedu.address.model.tag.Tag;","lastModifiedDate":"2017-03-07"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":12,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-24"},{"lineNumber":13,"author":{"gitId":"-"},"content":" * Represents a Person in the address book.","lastModifiedDate":"2016-08-24"},{"lineNumber":14,"author":{"gitId":"-"},"content":" * Guarantees: details are present and not null, field values are validated, immutable.","lastModifiedDate":"2017-12-20"},{"lineNumber":15,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-24"},{"lineNumber":16,"author":{"gitId":"-"},"content":"public class Person {","lastModifiedDate":"2018-01-10"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    // Identity fields","lastModifiedDate":"2018-04-19"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    private final Name name;","lastModifiedDate":"2017-12-20"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    private final Phone phone;","lastModifiedDate":"2017-12-20"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    private final Email email;","lastModifiedDate":"2017-12-20"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    // Data fields","lastModifiedDate":"2018-04-19"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    private final Address address;","lastModifiedDate":"2018-04-19"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    private final Set\u003cTag\u003e tags \u003d new HashSet\u003c\u003e();","lastModifiedDate":"2018-03-26"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-24"},{"lineNumber":28,"author":{"gitId":"-"},"content":"     * Every field must be present and not null.","lastModifiedDate":"2016-08-24"},{"lineNumber":29,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-24"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    public Person(Name name, Phone phone, Email email, Address address, Set\u003cTag\u003e tags) {","lastModifiedDate":"2017-03-14"},{"lineNumber":31,"author":{"gitId":"-"},"content":"        requireAllNonNull(name, phone, email, address, tags);","lastModifiedDate":"2017-05-19"},{"lineNumber":32,"author":{"gitId":"-"},"content":"        this.name \u003d name;","lastModifiedDate":"2017-12-20"},{"lineNumber":33,"author":{"gitId":"-"},"content":"        this.phone \u003d phone;","lastModifiedDate":"2017-12-20"},{"lineNumber":34,"author":{"gitId":"-"},"content":"        this.email \u003d email;","lastModifiedDate":"2017-12-20"},{"lineNumber":35,"author":{"gitId":"-"},"content":"        this.address \u003d address;","lastModifiedDate":"2017-12-20"},{"lineNumber":36,"author":{"gitId":"-"},"content":"        this.tags.addAll(tags);","lastModifiedDate":"2018-03-26"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":38,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    public Name getName() {","lastModifiedDate":"2017-07-12"},{"lineNumber":40,"author":{"gitId":"-"},"content":"        return name;","lastModifiedDate":"2017-12-20"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":42,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    public Phone getPhone() {","lastModifiedDate":"2017-07-12"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        return phone;","lastModifiedDate":"2017-12-20"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":46,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    public Email getEmail() {","lastModifiedDate":"2017-07-12"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        return email;","lastModifiedDate":"2017-12-20"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":50,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    public Address getAddress() {","lastModifiedDate":"2017-07-12"},{"lineNumber":52,"author":{"gitId":"-"},"content":"        return address;","lastModifiedDate":"2017-12-20"},{"lineNumber":53,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-07-12"},{"lineNumber":54,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-12"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-03-07"},{"lineNumber":56,"author":{"gitId":"-"},"content":"     * Returns an immutable tag set, which throws {@code UnsupportedOperationException}","lastModifiedDate":"2017-03-07"},{"lineNumber":57,"author":{"gitId":"-"},"content":"     * if modification is attempted.","lastModifiedDate":"2017-03-07"},{"lineNumber":58,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-03-07"},{"lineNumber":59,"author":{"gitId":"-"},"content":"    public Set\u003cTag\u003e getTags() {","lastModifiedDate":"2017-03-07"},{"lineNumber":60,"author":{"gitId":"-"},"content":"        return Collections.unmodifiableSet(tags);","lastModifiedDate":"2018-03-26"},{"lineNumber":61,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-21"},{"lineNumber":62,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":63,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-04-19"},{"lineNumber":64,"author":{"gitId":"-"},"content":"     * Returns true if both persons have the same name.","lastModifiedDate":"2020-12-18"},{"lineNumber":65,"author":{"gitId":"-"},"content":"     * This defines a weaker notion of equality between two persons.","lastModifiedDate":"2018-04-19"},{"lineNumber":66,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-04-19"},{"lineNumber":67,"author":{"gitId":"-"},"content":"    public boolean isSamePerson(Person otherPerson) {","lastModifiedDate":"2018-04-19"},{"lineNumber":68,"author":{"gitId":"-"},"content":"        if (otherPerson \u003d\u003d this) {","lastModifiedDate":"2018-04-19"},{"lineNumber":69,"author":{"gitId":"-"},"content":"            return true;","lastModifiedDate":"2018-04-19"},{"lineNumber":70,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-04-19"},{"lineNumber":71,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":72,"author":{"gitId":"-"},"content":"        return otherPerson !\u003d null","lastModifiedDate":"2018-04-19"},{"lineNumber":73,"author":{"gitId":"-"},"content":"                \u0026\u0026 otherPerson.getName().equals(getName());","lastModifiedDate":"2020-12-18"},{"lineNumber":74,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-04-19"},{"lineNumber":75,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":76,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-04-19"},{"lineNumber":77,"author":{"gitId":"-"},"content":"     * Returns true if both persons have the same identity and data fields.","lastModifiedDate":"2018-04-19"},{"lineNumber":78,"author":{"gitId":"-"},"content":"     * This defines a stronger notion of equality between two persons.","lastModifiedDate":"2018-04-19"},{"lineNumber":79,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-04-19"},{"lineNumber":80,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-24"},{"lineNumber":81,"author":{"gitId":"-"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2016-08-24"},{"lineNumber":82,"author":{"gitId":"-"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2018-01-10"},{"lineNumber":83,"author":{"gitId":"-"},"content":"            return true;","lastModifiedDate":"2018-01-10"},{"lineNumber":84,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-01-10"},{"lineNumber":85,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-01-10"},{"lineNumber":86,"author":{"gitId":"-"},"content":"        if (!(other instanceof Person)) {","lastModifiedDate":"2018-01-10"},{"lineNumber":87,"author":{"gitId":"-"},"content":"            return false;","lastModifiedDate":"2018-01-10"},{"lineNumber":88,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-01-10"},{"lineNumber":89,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-01-10"},{"lineNumber":90,"author":{"gitId":"-"},"content":"        Person otherPerson \u003d (Person) other;","lastModifiedDate":"2018-01-10"},{"lineNumber":91,"author":{"gitId":"-"},"content":"        return otherPerson.getName().equals(getName())","lastModifiedDate":"2018-08-14"},{"lineNumber":92,"author":{"gitId":"-"},"content":"                \u0026\u0026 otherPerson.getPhone().equals(getPhone())","lastModifiedDate":"2018-08-14"},{"lineNumber":93,"author":{"gitId":"-"},"content":"                \u0026\u0026 otherPerson.getEmail().equals(getEmail())","lastModifiedDate":"2018-08-14"},{"lineNumber":94,"author":{"gitId":"-"},"content":"                \u0026\u0026 otherPerson.getAddress().equals(getAddress())","lastModifiedDate":"2018-08-14"},{"lineNumber":95,"author":{"gitId":"-"},"content":"                \u0026\u0026 otherPerson.getTags().equals(getTags());","lastModifiedDate":"2018-08-14"},{"lineNumber":96,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":97,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":98,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-24"},{"lineNumber":99,"author":{"gitId":"-"},"content":"    public int hashCode() {","lastModifiedDate":"2016-08-24"},{"lineNumber":100,"author":{"gitId":"-"},"content":"        // use this method for custom fields hashing instead of implementing your own","lastModifiedDate":"2016-08-24"},{"lineNumber":101,"author":{"gitId":"-"},"content":"        return Objects.hash(name, phone, email, address, tags);","lastModifiedDate":"2016-08-24"},{"lineNumber":102,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":103,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":104,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-24"},{"lineNumber":105,"author":{"gitId":"-"},"content":"    public String toString() {","lastModifiedDate":"2016-08-24"},{"lineNumber":106,"author":{"gitId":"-"},"content":"        final StringBuilder builder \u003d new StringBuilder();","lastModifiedDate":"2018-01-10"},{"lineNumber":107,"author":{"gitId":"-"},"content":"        builder.append(getName())","lastModifiedDate":"2018-01-10"},{"lineNumber":108,"author":{"gitId":"-"},"content":"                .append(\"; Phone: \")","lastModifiedDate":"2020-12-11"},{"lineNumber":109,"author":{"gitId":"-"},"content":"                .append(getPhone())","lastModifiedDate":"2018-01-10"},{"lineNumber":110,"author":{"gitId":"-"},"content":"                .append(\"; Email: \")","lastModifiedDate":"2020-12-11"},{"lineNumber":111,"author":{"gitId":"-"},"content":"                .append(getEmail())","lastModifiedDate":"2018-01-10"},{"lineNumber":112,"author":{"gitId":"-"},"content":"                .append(\"; Address: \")","lastModifiedDate":"2020-12-11"},{"lineNumber":113,"author":{"gitId":"-"},"content":"                .append(getAddress());","lastModifiedDate":"2020-12-11"},{"lineNumber":114,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-12-11"},{"lineNumber":115,"author":{"gitId":"-"},"content":"        Set\u003cTag\u003e tags \u003d getTags();","lastModifiedDate":"2020-12-11"},{"lineNumber":116,"author":{"gitId":"-"},"content":"        if (!tags.isEmpty()) {","lastModifiedDate":"2020-12-11"},{"lineNumber":117,"author":{"gitId":"-"},"content":"            builder.append(\"; Tags: \");","lastModifiedDate":"2020-12-11"},{"lineNumber":118,"author":{"gitId":"-"},"content":"            tags.forEach(builder::append);","lastModifiedDate":"2020-12-11"},{"lineNumber":119,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2020-12-11"},{"lineNumber":120,"author":{"gitId":"-"},"content":"        return builder.toString();","lastModifiedDate":"2018-01-10"},{"lineNumber":121,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":122,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":123,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-24"}],"authorContributionMap":{"jaegarpoon":1,"-":122}},{"path":"src/main/java/seedu/address/model/item/Phone.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"jaegarpoon"},"content":"package seedu.address.model.item;","lastModifiedDate":"2022-03-11"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2017-05-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static seedu.address.commons.util.AppUtil.checkArgument;","lastModifiedDate":"2017-05-30"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":6,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-24"},{"lineNumber":7,"author":{"gitId":"-"},"content":" * Represents a Person\u0027s phone number in the address book.","lastModifiedDate":"2016-08-24"},{"lineNumber":8,"author":{"gitId":"-"},"content":" * Guarantees: immutable; is valid as declared in {@link #isValidPhone(String)}","lastModifiedDate":"2016-08-24"},{"lineNumber":9,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-24"},{"lineNumber":10,"author":{"gitId":"-"},"content":"public class Phone {","lastModifiedDate":"2016-09-21"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_CONSTRAINTS \u003d","lastModifiedDate":"2018-09-22"},{"lineNumber":14,"author":{"gitId":"-"},"content":"            \"Phone numbers should only contain numbers, and it should be at least 3 digits long\";","lastModifiedDate":"2018-04-04"},{"lineNumber":15,"author":{"gitId":"-"},"content":"    public static final String VALIDATION_REGEX \u003d \"\\\\d{3,}\";","lastModifiedDate":"2018-09-22"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    public final String value;","lastModifiedDate":"2016-08-24"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-24"},{"lineNumber":19,"author":{"gitId":"-"},"content":"     * Constructs a {@code Phone}.","lastModifiedDate":"2017-05-30"},{"lineNumber":20,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2016-08-24"},{"lineNumber":21,"author":{"gitId":"-"},"content":"     * @param phone A valid phone number.","lastModifiedDate":"2017-05-30"},{"lineNumber":22,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-24"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    public Phone(String phone) {","lastModifiedDate":"2017-05-30"},{"lineNumber":24,"author":{"gitId":"-"},"content":"        requireNonNull(phone);","lastModifiedDate":"2017-05-15"},{"lineNumber":25,"author":{"gitId":"-"},"content":"        checkArgument(isValidPhone(phone), MESSAGE_CONSTRAINTS);","lastModifiedDate":"2018-09-22"},{"lineNumber":26,"author":{"gitId":"-"},"content":"        value \u003d phone;","lastModifiedDate":"2018-08-14"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-24"},{"lineNumber":30,"author":{"gitId":"-"},"content":"     * Returns true if a given string is a valid phone number.","lastModifiedDate":"2018-04-05"},{"lineNumber":31,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-24"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    public static boolean isValidPhone(String test) {","lastModifiedDate":"2016-08-24"},{"lineNumber":33,"author":{"gitId":"-"},"content":"        return test.matches(VALIDATION_REGEX);","lastModifiedDate":"2018-09-22"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-24"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    public String toString() {","lastModifiedDate":"2016-08-24"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        return value;","lastModifiedDate":"2016-08-24"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":40,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-24"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2016-08-24"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        return other \u003d\u003d this // short circuit if same object","lastModifiedDate":"2016-08-24"},{"lineNumber":44,"author":{"gitId":"-"},"content":"                || (other instanceof Phone // instanceof handles nulls","lastModifiedDate":"2016-08-24"},{"lineNumber":45,"author":{"gitId":"-"},"content":"                \u0026\u0026 value.equals(((Phone) other).value)); // state check","lastModifiedDate":"2018-08-14"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":47,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-24"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    public int hashCode() {","lastModifiedDate":"2016-08-24"},{"lineNumber":50,"author":{"gitId":"-"},"content":"        return value.hashCode();","lastModifiedDate":"2016-08-24"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":52,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":53,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-24"}],"authorContributionMap":{"jaegarpoon":1,"-":52}},{"path":"src/main/java/seedu/address/model/item/UniquePersonList.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"jaegarpoon"},"content":"package seedu.address.model.item;","lastModifiedDate":"2022-03-11"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2017-05-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static seedu.address.commons.util.CollectionUtil.requireAllNonNull;","lastModifiedDate":"2018-01-10"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-15"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.util.Iterator;","lastModifiedDate":"2017-01-19"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import java.util.List;","lastModifiedDate":"2017-01-19"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import javafx.collections.FXCollections;","lastModifiedDate":"2016-08-24"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2016-08-24"},{"lineNumber":11,"author":{"gitId":"jaegarpoon"},"content":"import seedu.address.model.item.exceptions.DuplicatePersonException;","lastModifiedDate":"2022-03-11"},{"lineNumber":12,"author":{"gitId":"jaegarpoon"},"content":"import seedu.address.model.item.exceptions.PersonNotFoundException;","lastModifiedDate":"2022-03-11"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":14,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-24"},{"lineNumber":15,"author":{"gitId":"-"},"content":" * A list of persons that enforces uniqueness between its elements and does not allow nulls.","lastModifiedDate":"2016-09-22"},{"lineNumber":16,"author":{"gitId":"-"},"content":" * A person is considered unique by comparing using {@code Person#isSamePerson(Person)}. As such, adding and updating of","lastModifiedDate":"2018-04-19"},{"lineNumber":17,"author":{"gitId":"-"},"content":" * persons uses Person#isSamePerson(Person) for equality so as to ensure that the person being added or updated is","lastModifiedDate":"2018-04-19"},{"lineNumber":18,"author":{"gitId":"-"},"content":" * unique in terms of identity in the UniquePersonList. However, the removal of a person uses Person#equals(Object) so","lastModifiedDate":"2018-04-19"},{"lineNumber":19,"author":{"gitId":"-"},"content":" * as to ensure that the person with exactly the same fields will be removed.","lastModifiedDate":"2018-04-19"},{"lineNumber":20,"author":{"gitId":"-"},"content":" *","lastModifiedDate":"2016-08-24"},{"lineNumber":21,"author":{"gitId":"-"},"content":" * Supports a minimal set of list operations.","lastModifiedDate":"2016-09-22"},{"lineNumber":22,"author":{"gitId":"-"},"content":" *","lastModifiedDate":"2016-08-24"},{"lineNumber":23,"author":{"gitId":"-"},"content":" * @see Person#isSamePerson(Person)","lastModifiedDate":"2018-04-19"},{"lineNumber":24,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-24"},{"lineNumber":25,"author":{"gitId":"-"},"content":"public class UniquePersonList implements Iterable\u003cPerson\u003e {","lastModifiedDate":"2016-08-24"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    private final ObservableList\u003cPerson\u003e internalList \u003d FXCollections.observableArrayList();","lastModifiedDate":"2016-10-19"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    private final ObservableList\u003cPerson\u003e internalUnmodifiableList \u003d","lastModifiedDate":"2018-12-09"},{"lineNumber":29,"author":{"gitId":"-"},"content":"            FXCollections.unmodifiableObservableList(internalList);","lastModifiedDate":"2018-12-09"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-19"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-24"},{"lineNumber":32,"author":{"gitId":"-"},"content":"     * Returns true if the list contains an equivalent person as the given argument.","lastModifiedDate":"2016-09-22"},{"lineNumber":33,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-24"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    public boolean contains(Person toCheck) {","lastModifiedDate":"2018-01-10"},{"lineNumber":35,"author":{"gitId":"-"},"content":"        requireNonNull(toCheck);","lastModifiedDate":"2017-05-15"},{"lineNumber":36,"author":{"gitId":"-"},"content":"        return internalList.stream().anyMatch(toCheck::isSamePerson);","lastModifiedDate":"2018-04-19"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":38,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-24"},{"lineNumber":40,"author":{"gitId":"-"},"content":"     * Adds a person to the list.","lastModifiedDate":"2016-08-24"},{"lineNumber":41,"author":{"gitId":"-"},"content":"     * The person must not already exist in the list.","lastModifiedDate":"2018-08-07"},{"lineNumber":42,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-24"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    public void add(Person toAdd) {","lastModifiedDate":"2018-08-07"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        requireNonNull(toAdd);","lastModifiedDate":"2017-05-15"},{"lineNumber":45,"author":{"gitId":"-"},"content":"        if (contains(toAdd)) {","lastModifiedDate":"2016-08-24"},{"lineNumber":46,"author":{"gitId":"-"},"content":"            throw new DuplicatePersonException();","lastModifiedDate":"2016-08-24"},{"lineNumber":47,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-08-24"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        internalList.add(toAdd);","lastModifiedDate":"2018-01-10"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":50,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-12-13"},{"lineNumber":52,"author":{"gitId":"-"},"content":"     * Replaces the person {@code target} in the list with {@code editedPerson}.","lastModifiedDate":"2017-06-07"},{"lineNumber":53,"author":{"gitId":"-"},"content":"     * {@code target} must exist in the list.","lastModifiedDate":"2018-08-07"},{"lineNumber":54,"author":{"gitId":"-"},"content":"     * The person identity of {@code editedPerson} must not be the same as another existing person in the list.","lastModifiedDate":"2018-08-07"},{"lineNumber":55,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-12-13"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    public void setPerson(Person target, Person editedPerson) {","lastModifiedDate":"2018-08-07"},{"lineNumber":57,"author":{"gitId":"-"},"content":"        requireAllNonNull(target, editedPerson);","lastModifiedDate":"2018-08-08"},{"lineNumber":58,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-13"},{"lineNumber":59,"author":{"gitId":"-"},"content":"        int index \u003d internalList.indexOf(target);","lastModifiedDate":"2017-06-07"},{"lineNumber":60,"author":{"gitId":"-"},"content":"        if (index \u003d\u003d -1) {","lastModifiedDate":"2017-06-07"},{"lineNumber":61,"author":{"gitId":"-"},"content":"            throw new PersonNotFoundException();","lastModifiedDate":"2017-06-07"},{"lineNumber":62,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-06-07"},{"lineNumber":63,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-07"},{"lineNumber":64,"author":{"gitId":"-"},"content":"        if (!target.isSamePerson(editedPerson) \u0026\u0026 contains(editedPerson)) {","lastModifiedDate":"2018-04-19"},{"lineNumber":65,"author":{"gitId":"-"},"content":"            throw new DuplicatePersonException();","lastModifiedDate":"2016-12-13"},{"lineNumber":66,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-12-13"},{"lineNumber":67,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-13"},{"lineNumber":68,"author":{"gitId":"-"},"content":"        internalList.set(index, editedPerson);","lastModifiedDate":"2018-01-10"},{"lineNumber":69,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-13"},{"lineNumber":70,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-13"},{"lineNumber":71,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-24"},{"lineNumber":72,"author":{"gitId":"-"},"content":"     * Removes the equivalent person from the list.","lastModifiedDate":"2016-08-24"},{"lineNumber":73,"author":{"gitId":"-"},"content":"     * The person must exist in the list.","lastModifiedDate":"2018-08-07"},{"lineNumber":74,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-24"},{"lineNumber":75,"author":{"gitId":"-"},"content":"    public void remove(Person toRemove) {","lastModifiedDate":"2018-08-07"},{"lineNumber":76,"author":{"gitId":"-"},"content":"        requireNonNull(toRemove);","lastModifiedDate":"2017-05-15"},{"lineNumber":77,"author":{"gitId":"-"},"content":"        if (!internalList.remove(toRemove)) {","lastModifiedDate":"2018-02-28"},{"lineNumber":78,"author":{"gitId":"-"},"content":"            throw new PersonNotFoundException();","lastModifiedDate":"2016-08-24"},{"lineNumber":79,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-08-24"},{"lineNumber":80,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":81,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":82,"author":{"gitId":"-"},"content":"    public void setPersons(UniquePersonList replacement) {","lastModifiedDate":"2016-10-19"},{"lineNumber":83,"author":{"gitId":"-"},"content":"        requireNonNull(replacement);","lastModifiedDate":"2018-08-08"},{"lineNumber":84,"author":{"gitId":"-"},"content":"        internalList.setAll(replacement.internalList);","lastModifiedDate":"2018-08-14"},{"lineNumber":85,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-10-19"},{"lineNumber":86,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-19"},{"lineNumber":87,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-08-07"},{"lineNumber":88,"author":{"gitId":"-"},"content":"     * Replaces the contents of this list with {@code persons}.","lastModifiedDate":"2018-08-07"},{"lineNumber":89,"author":{"gitId":"-"},"content":"     * {@code persons} must not contain duplicate persons.","lastModifiedDate":"2018-08-07"},{"lineNumber":90,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-08-07"},{"lineNumber":91,"author":{"gitId":"-"},"content":"    public void setPersons(List\u003cPerson\u003e persons) {","lastModifiedDate":"2018-08-07"},{"lineNumber":92,"author":{"gitId":"-"},"content":"        requireAllNonNull(persons);","lastModifiedDate":"2018-01-10"},{"lineNumber":93,"author":{"gitId":"-"},"content":"        if (!personsAreUnique(persons)) {","lastModifiedDate":"2018-04-19"},{"lineNumber":94,"author":{"gitId":"-"},"content":"            throw new DuplicatePersonException();","lastModifiedDate":"2018-01-21"},{"lineNumber":95,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-12-24"},{"lineNumber":96,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-01-21"},{"lineNumber":97,"author":{"gitId":"-"},"content":"        internalList.setAll(persons);","lastModifiedDate":"2018-08-14"},{"lineNumber":98,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-24"},{"lineNumber":99,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-24"},{"lineNumber":100,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-09-01"},{"lineNumber":101,"author":{"gitId":"-"},"content":"     * Returns the backing list as an unmodifiable {@code ObservableList}.","lastModifiedDate":"2017-09-01"},{"lineNumber":102,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-09-01"},{"lineNumber":103,"author":{"gitId":"-"},"content":"    public ObservableList\u003cPerson\u003e asUnmodifiableObservableList() {","lastModifiedDate":"2018-04-05"},{"lineNumber":104,"author":{"gitId":"-"},"content":"        return internalUnmodifiableList;","lastModifiedDate":"2018-12-09"},{"lineNumber":105,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-22"},{"lineNumber":106,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":107,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-24"},{"lineNumber":108,"author":{"gitId":"-"},"content":"    public Iterator\u003cPerson\u003e iterator() {","lastModifiedDate":"2016-08-24"},{"lineNumber":109,"author":{"gitId":"-"},"content":"        return internalList.iterator();","lastModifiedDate":"2016-08-24"},{"lineNumber":110,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":111,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":112,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-21"},{"lineNumber":113,"author":{"gitId":"-"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2016-09-21"},{"lineNumber":114,"author":{"gitId":"-"},"content":"        return other \u003d\u003d this // short circuit if same object","lastModifiedDate":"2016-09-21"},{"lineNumber":115,"author":{"gitId":"-"},"content":"                || (other instanceof UniquePersonList // instanceof handles nulls","lastModifiedDate":"2016-09-21"},{"lineNumber":116,"author":{"gitId":"-"},"content":"                        \u0026\u0026 internalList.equals(((UniquePersonList) other).internalList));","lastModifiedDate":"2018-08-14"},{"lineNumber":117,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-21"},{"lineNumber":118,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":119,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-21"},{"lineNumber":120,"author":{"gitId":"-"},"content":"    public int hashCode() {","lastModifiedDate":"2016-09-21"},{"lineNumber":121,"author":{"gitId":"-"},"content":"        return internalList.hashCode();","lastModifiedDate":"2016-09-21"},{"lineNumber":122,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-21"},{"lineNumber":123,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":124,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-04-19"},{"lineNumber":125,"author":{"gitId":"-"},"content":"     * Returns true if {@code persons} contains only unique persons.","lastModifiedDate":"2018-04-19"},{"lineNumber":126,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-04-19"},{"lineNumber":127,"author":{"gitId":"-"},"content":"    private boolean personsAreUnique(List\u003cPerson\u003e persons) {","lastModifiedDate":"2018-04-19"},{"lineNumber":128,"author":{"gitId":"-"},"content":"        for (int i \u003d 0; i \u003c persons.size() - 1; i++) {","lastModifiedDate":"2018-04-19"},{"lineNumber":129,"author":{"gitId":"-"},"content":"            for (int j \u003d i + 1; j \u003c persons.size(); j++) {","lastModifiedDate":"2018-04-19"},{"lineNumber":130,"author":{"gitId":"-"},"content":"                if (persons.get(i).isSamePerson(persons.get(j))) {","lastModifiedDate":"2018-04-19"},{"lineNumber":131,"author":{"gitId":"-"},"content":"                    return false;","lastModifiedDate":"2018-04-19"},{"lineNumber":132,"author":{"gitId":"-"},"content":"                }","lastModifiedDate":"2018-04-19"},{"lineNumber":133,"author":{"gitId":"-"},"content":"            }","lastModifiedDate":"2018-04-19"},{"lineNumber":134,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-04-19"},{"lineNumber":135,"author":{"gitId":"-"},"content":"        return true;","lastModifiedDate":"2018-04-19"},{"lineNumber":136,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-04-19"},{"lineNumber":137,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-24"}],"authorContributionMap":{"jaegarpoon":3,"-":134}},{"path":"src/main/java/seedu/address/model/item/exceptions/DuplicatePersonException.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"jaegarpoon"},"content":"package seedu.address.model.item.exceptions;","lastModifiedDate":"2022-03-11"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-09"},{"lineNumber":3,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-06-09"},{"lineNumber":4,"author":{"gitId":"-"},"content":" * Signals that the operation will result in duplicate Persons (Persons are considered duplicates if they have the same","lastModifiedDate":"2018-04-19"},{"lineNumber":5,"author":{"gitId":"-"},"content":" * identity).","lastModifiedDate":"2018-04-19"},{"lineNumber":6,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-06-09"},{"lineNumber":7,"author":{"gitId":"-"},"content":"public class DuplicatePersonException extends RuntimeException {","lastModifiedDate":"2018-08-07"},{"lineNumber":8,"author":{"gitId":"-"},"content":"    public DuplicatePersonException() {","lastModifiedDate":"2017-06-09"},{"lineNumber":9,"author":{"gitId":"-"},"content":"        super(\"Operation would result in duplicate persons\");","lastModifiedDate":"2017-06-09"},{"lineNumber":10,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-09"},{"lineNumber":11,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-06-09"}],"authorContributionMap":{"jaegarpoon":1,"-":10}},{"path":"src/main/java/seedu/address/model/item/exceptions/PersonNotFoundException.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"jaegarpoon"},"content":"package seedu.address.model.item.exceptions;","lastModifiedDate":"2022-03-11"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-09"},{"lineNumber":3,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-06-09"},{"lineNumber":4,"author":{"gitId":"-"},"content":" * Signals that the operation is unable to find the specified person.","lastModifiedDate":"2017-06-09"},{"lineNumber":5,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-06-09"},{"lineNumber":6,"author":{"gitId":"-"},"content":"public class PersonNotFoundException extends RuntimeException {}","lastModifiedDate":"2018-08-07"}],"authorContributionMap":{"jaegarpoon":1,"-":5}},{"path":"src/main/java/seedu/address/model/order/Order.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"xzzz3"},"content":"package seedu.address.model.order;","lastModifiedDate":"2022-03-10"},{"lineNumber":2,"author":{"gitId":"xzzz3"},"content":"","lastModifiedDate":"2022-03-10"},{"lineNumber":3,"author":{"gitId":"xzzz3"},"content":"import static seedu.address.commons.util.CollectionUtil.requireAllNonNull;","lastModifiedDate":"2022-03-10"},{"lineNumber":4,"author":{"gitId":"xzzz3"},"content":"","lastModifiedDate":"2022-03-10"},{"lineNumber":5,"author":{"gitId":"xzzz3"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2022-03-23"},{"lineNumber":6,"author":{"gitId":"xzzz3"},"content":"import java.util.ArrayList;","lastModifiedDate":"2022-03-12"},{"lineNumber":7,"author":{"gitId":"xzzz3"},"content":"import java.util.Arrays;","lastModifiedDate":"2022-03-29"},{"lineNumber":8,"author":{"gitId":"xzzz3"},"content":"","lastModifiedDate":"2022-03-12"},{"lineNumber":9,"author":{"gitId":"xzzz3"},"content":"import seedu.address.model.customer.AddressCustomer;","lastModifiedDate":"2022-03-17"},{"lineNumber":10,"author":{"gitId":"xzzz3"},"content":"import seedu.address.model.customer.Customer;","lastModifiedDate":"2022-03-17"},{"lineNumber":11,"author":{"gitId":"jaegarpoon"},"content":"import seedu.address.model.dish.Dish;","lastModifiedDate":"2022-03-24"},{"lineNumber":12,"author":{"gitId":"jaegarpoon"},"content":"import seedu.address.model.driver.Driver;","lastModifiedDate":"2022-03-27"},{"lineNumber":13,"author":{"gitId":"hieunm1821"},"content":"import seedu.address.model.driver.DriverStatus;","lastModifiedDate":"2022-03-27"},{"lineNumber":14,"author":{"gitId":"xzzz3"},"content":"import seedu.address.model.order.exception.NoSuchOrderStatusException;","lastModifiedDate":"2022-03-28"},{"lineNumber":15,"author":{"gitId":"xzzz3"},"content":"","lastModifiedDate":"2022-03-17"},{"lineNumber":16,"author":{"gitId":"xzzz3"},"content":"/**","lastModifiedDate":"2022-03-12"},{"lineNumber":17,"author":{"gitId":"xzzz3"},"content":" * Represents an Order in the address book.","lastModifiedDate":"2022-03-12"},{"lineNumber":18,"author":{"gitId":"xzzz3"},"content":" * Guarantees: details are present and not null, field values are validated, immutable.","lastModifiedDate":"2022-03-12"},{"lineNumber":19,"author":{"gitId":"xzzz3"},"content":" */","lastModifiedDate":"2022-03-12"},{"lineNumber":20,"author":{"gitId":"xzzz3"},"content":"public class Order {","lastModifiedDate":"2022-03-10"},{"lineNumber":21,"author":{"gitId":"xzzz3"},"content":"    // class-level attribute","lastModifiedDate":"2022-03-10"},{"lineNumber":22,"author":{"gitId":"xzzz3"},"content":"    private static int nextOrderNumber \u003d 1;","lastModifiedDate":"2022-03-10"},{"lineNumber":23,"author":{"gitId":"xzzz3"},"content":"","lastModifiedDate":"2022-03-10"},{"lineNumber":24,"author":{"gitId":"xzzz3"},"content":"    // Data fields","lastModifiedDate":"2022-03-10"},{"lineNumber":25,"author":{"gitId":"xzzz3"},"content":"    private final Customer customer;","lastModifiedDate":"2022-03-17"},{"lineNumber":26,"author":{"gitId":"xzzz3"},"content":"    private final Driver driver;","lastModifiedDate":"2022-03-17"},{"lineNumber":27,"author":{"gitId":"xzzz3"},"content":"    private final int orderNumber;","lastModifiedDate":"2022-03-10"},{"lineNumber":28,"author":{"gitId":"xzzz3"},"content":"    private final ArrayList\u003cDish\u003e dishes;","lastModifiedDate":"2022-03-17"},{"lineNumber":29,"author":{"gitId":"xzzz3"},"content":"    private final LocalDateTime time;","lastModifiedDate":"2022-03-23"},{"lineNumber":30,"author":{"gitId":"xzzz3"},"content":"    private OrderStatus status;","lastModifiedDate":"2022-03-10"},{"lineNumber":31,"author":{"gitId":"xzzz3"},"content":"","lastModifiedDate":"2022-03-10"},{"lineNumber":32,"author":{"gitId":"xzzz3"},"content":"    /**","lastModifiedDate":"2022-03-10"},{"lineNumber":33,"author":{"gitId":"xzzz3"},"content":"     * Every field must be present and not null.","lastModifiedDate":"2022-03-10"},{"lineNumber":34,"author":{"gitId":"xzzz3"},"content":"     */","lastModifiedDate":"2022-03-10"},{"lineNumber":35,"author":{"gitId":"xzzz3"},"content":"    public Order(Customer customer, Driver driver, LocalDateTime time, int orderNumber, Dish ... orderedDishes) {","lastModifiedDate":"2022-03-28"},{"lineNumber":36,"author":{"gitId":"xzzz3"},"content":"        requireAllNonNull(customer, orderedDishes);","lastModifiedDate":"2022-03-10"},{"lineNumber":37,"author":{"gitId":"xzzz3"},"content":"        this.customer \u003d customer;","lastModifiedDate":"2022-03-10"},{"lineNumber":38,"author":{"gitId":"xzzz3"},"content":"        this.driver \u003d driver;","lastModifiedDate":"2022-03-17"},{"lineNumber":39,"author":{"gitId":"hieunm1821"},"content":"        driver.setStatus(DriverStatus.BUSY);","lastModifiedDate":"2022-03-27"},{"lineNumber":40,"author":{"gitId":"xzzz3"},"content":"        this.dishes \u003d new ArrayList\u003cDish\u003e();","lastModifiedDate":"2022-03-17"},{"lineNumber":41,"author":{"gitId":"xzzz3"},"content":"        this.dishes.addAll(Arrays.asList(orderedDishes));","lastModifiedDate":"2022-03-29"},{"lineNumber":42,"author":{"gitId":"xzzz3"},"content":"        this.time \u003d time;","lastModifiedDate":"2022-03-23"},{"lineNumber":43,"author":{"gitId":"xzzz3"},"content":"        this.orderNumber \u003d orderNumber;","lastModifiedDate":"2022-03-28"},{"lineNumber":44,"author":{"gitId":"xzzz3"},"content":"        this.status \u003d OrderStatus.IN_PROGRESS;","lastModifiedDate":"2022-03-29"},{"lineNumber":45,"author":{"gitId":"xzzz3"},"content":"    }","lastModifiedDate":"2022-03-10"},{"lineNumber":46,"author":{"gitId":"xzzz3"},"content":"","lastModifiedDate":"2022-03-10"},{"lineNumber":47,"author":{"gitId":"xzzz3"},"content":"    public Order(Customer customer, Driver driver, Dish ... orderedDishes) {","lastModifiedDate":"2022-03-23"},{"lineNumber":48,"author":{"gitId":"xzzz3"},"content":"        this(customer, driver, LocalDateTime.now(), orderedDishes);","lastModifiedDate":"2022-03-23"},{"lineNumber":49,"author":{"gitId":"xzzz3"},"content":"    }","lastModifiedDate":"2022-03-23"},{"lineNumber":50,"author":{"gitId":"xzzz3"},"content":"","lastModifiedDate":"2022-03-23"},{"lineNumber":51,"author":{"gitId":"xzzz3"},"content":"    public Order(Customer customer, Driver driver, LocalDateTime time, Dish ... orderedDishes) {","lastModifiedDate":"2022-03-28"},{"lineNumber":52,"author":{"gitId":"xzzz3"},"content":"        this(customer, driver, time, nextOrderNumber++, orderedDishes);","lastModifiedDate":"2022-03-28"},{"lineNumber":53,"author":{"gitId":"xzzz3"},"content":"    }","lastModifiedDate":"2022-03-28"},{"lineNumber":54,"author":{"gitId":"xzzz3"},"content":"","lastModifiedDate":"2022-03-28"},{"lineNumber":55,"author":{"gitId":"xzzz3"},"content":"    public Customer getCustomer() {","lastModifiedDate":"2022-03-17"},{"lineNumber":56,"author":{"gitId":"xzzz3"},"content":"        return customer;","lastModifiedDate":"2022-03-10"},{"lineNumber":57,"author":{"gitId":"xzzz3"},"content":"    }","lastModifiedDate":"2022-03-10"},{"lineNumber":58,"author":{"gitId":"xzzz3"},"content":"","lastModifiedDate":"2022-03-10"},{"lineNumber":59,"author":{"gitId":"xzzz3"},"content":"    public String getCustomerName() {","lastModifiedDate":"2022-03-17"},{"lineNumber":60,"author":{"gitId":"xzzz3"},"content":"        return customer.getName().fullName;","lastModifiedDate":"2022-03-17"},{"lineNumber":61,"author":{"gitId":"xzzz3"},"content":"    }","lastModifiedDate":"2022-03-17"},{"lineNumber":62,"author":{"gitId":"xzzz3"},"content":"","lastModifiedDate":"2022-03-17"},{"lineNumber":63,"author":{"gitId":"xzzz3"},"content":"    public String getCustomerPhone() {","lastModifiedDate":"2022-03-10"},{"lineNumber":64,"author":{"gitId":"xzzz3"},"content":"        return customer.getPhone().value;","lastModifiedDate":"2022-03-17"},{"lineNumber":65,"author":{"gitId":"xzzz3"},"content":"    }","lastModifiedDate":"2022-03-10"},{"lineNumber":66,"author":{"gitId":"xzzz3"},"content":"","lastModifiedDate":"2022-03-10"},{"lineNumber":67,"author":{"gitId":"xzzz3"},"content":"    public AddressCustomer getCustomerAddress() {","lastModifiedDate":"2022-03-17"},{"lineNumber":68,"author":{"gitId":"xzzz3"},"content":"        return customer.getAddress();","lastModifiedDate":"2022-03-10"},{"lineNumber":69,"author":{"gitId":"xzzz3"},"content":"    }","lastModifiedDate":"2022-03-10"},{"lineNumber":70,"author":{"gitId":"xzzz3"},"content":"","lastModifiedDate":"2022-03-10"},{"lineNumber":71,"author":{"gitId":"xzzz3"},"content":"    public Driver getDriver() {","lastModifiedDate":"2022-03-17"},{"lineNumber":72,"author":{"gitId":"xzzz3"},"content":"        return driver;","lastModifiedDate":"2022-03-10"},{"lineNumber":73,"author":{"gitId":"xzzz3"},"content":"    }","lastModifiedDate":"2022-03-10"},{"lineNumber":74,"author":{"gitId":"xzzz3"},"content":"","lastModifiedDate":"2022-03-10"},{"lineNumber":75,"author":{"gitId":"xzzz3"},"content":"    public String getDriverName() {","lastModifiedDate":"2022-03-17"},{"lineNumber":76,"author":{"gitId":"xzzz3"},"content":"        return driver.getName().fullName;","lastModifiedDate":"2022-03-17"},{"lineNumber":77,"author":{"gitId":"xzzz3"},"content":"    }","lastModifiedDate":"2022-03-17"},{"lineNumber":78,"author":{"gitId":"xzzz3"},"content":"","lastModifiedDate":"2022-03-17"},{"lineNumber":79,"author":{"gitId":"xzzz3"},"content":"    public int getOrderNumber() {","lastModifiedDate":"2022-03-10"},{"lineNumber":80,"author":{"gitId":"xzzz3"},"content":"        return orderNumber;","lastModifiedDate":"2022-03-10"},{"lineNumber":81,"author":{"gitId":"xzzz3"},"content":"    }","lastModifiedDate":"2022-03-10"},{"lineNumber":82,"author":{"gitId":"xzzz3"},"content":"","lastModifiedDate":"2022-03-10"},{"lineNumber":83,"author":{"gitId":"xzzz3"},"content":"    public ArrayList\u003cDish\u003e getDishes() {","lastModifiedDate":"2022-03-17"},{"lineNumber":84,"author":{"gitId":"xzzz3"},"content":"        return dishes;","lastModifiedDate":"2022-03-10"},{"lineNumber":85,"author":{"gitId":"xzzz3"},"content":"    }","lastModifiedDate":"2022-03-10"},{"lineNumber":86,"author":{"gitId":"xzzz3"},"content":"","lastModifiedDate":"2022-03-10"},{"lineNumber":87,"author":{"gitId":"jaegarpoon"},"content":"    public double getTotalPrice() {","lastModifiedDate":"2022-03-30"},{"lineNumber":88,"author":{"gitId":"jaegarpoon"},"content":"        return dishes.stream().mapToDouble(x -\u003e x.getPrice().value).sum();","lastModifiedDate":"2022-03-30"},{"lineNumber":89,"author":{"gitId":"jaegarpoon"},"content":"    }","lastModifiedDate":"2022-03-30"},{"lineNumber":90,"author":{"gitId":"jaegarpoon"},"content":"","lastModifiedDate":"2022-03-30"},{"lineNumber":91,"author":{"gitId":"xzzz3"},"content":"    public LocalDateTime getTime() {","lastModifiedDate":"2022-03-23"},{"lineNumber":92,"author":{"gitId":"xzzz3"},"content":"        return time;","lastModifiedDate":"2022-03-23"},{"lineNumber":93,"author":{"gitId":"xzzz3"},"content":"    }","lastModifiedDate":"2022-03-23"},{"lineNumber":94,"author":{"gitId":"xzzz3"},"content":"","lastModifiedDate":"2022-03-23"},{"lineNumber":95,"author":{"gitId":"xzzz3"},"content":"    public OrderStatus getStatus() {","lastModifiedDate":"2022-03-10"},{"lineNumber":96,"author":{"gitId":"xzzz3"},"content":"        return status;","lastModifiedDate":"2022-03-10"},{"lineNumber":97,"author":{"gitId":"xzzz3"},"content":"    }","lastModifiedDate":"2022-03-10"},{"lineNumber":98,"author":{"gitId":"xzzz3"},"content":"","lastModifiedDate":"2022-03-10"},{"lineNumber":99,"author":{"gitId":"xzzz3"},"content":"    /**","lastModifiedDate":"2022-03-10"},{"lineNumber":100,"author":{"gitId":"xzzz3"},"content":"     * Returns true if both orders share the same unique order number.","lastModifiedDate":"2022-03-10"},{"lineNumber":101,"author":{"gitId":"xzzz3"},"content":"     * @param other the other order to be compared with","lastModifiedDate":"2022-03-10"},{"lineNumber":102,"author":{"gitId":"xzzz3"},"content":"     * @return a boolean value indicating the equality","lastModifiedDate":"2022-03-10"},{"lineNumber":103,"author":{"gitId":"xzzz3"},"content":"     */","lastModifiedDate":"2022-03-10"},{"lineNumber":104,"author":{"gitId":"xzzz3"},"content":"    @Override","lastModifiedDate":"2022-03-10"},{"lineNumber":105,"author":{"gitId":"xzzz3"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2022-03-10"},{"lineNumber":106,"author":{"gitId":"xzzz3"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2022-03-10"},{"lineNumber":107,"author":{"gitId":"xzzz3"},"content":"            return true;","lastModifiedDate":"2022-03-10"},{"lineNumber":108,"author":{"gitId":"xzzz3"},"content":"        }","lastModifiedDate":"2022-03-10"},{"lineNumber":109,"author":{"gitId":"xzzz3"},"content":"","lastModifiedDate":"2022-03-10"},{"lineNumber":110,"author":{"gitId":"xzzz3"},"content":"        if (!(other instanceof Order)) {","lastModifiedDate":"2022-03-10"},{"lineNumber":111,"author":{"gitId":"xzzz3"},"content":"            return false;","lastModifiedDate":"2022-03-10"},{"lineNumber":112,"author":{"gitId":"xzzz3"},"content":"        }","lastModifiedDate":"2022-03-10"},{"lineNumber":113,"author":{"gitId":"xzzz3"},"content":"","lastModifiedDate":"2022-03-10"},{"lineNumber":114,"author":{"gitId":"xzzz3"},"content":"        Order otherOrder \u003d (Order) other;","lastModifiedDate":"2022-03-10"},{"lineNumber":115,"author":{"gitId":"xzzz3"},"content":"        return this.orderNumber \u003d\u003d otherOrder.orderNumber;","lastModifiedDate":"2022-03-10"},{"lineNumber":116,"author":{"gitId":"xzzz3"},"content":"    }","lastModifiedDate":"2022-03-10"},{"lineNumber":117,"author":{"gitId":"xzzz3"},"content":"","lastModifiedDate":"2022-03-10"},{"lineNumber":118,"author":{"gitId":"xzzz3"},"content":"    @Override","lastModifiedDate":"2022-03-10"},{"lineNumber":119,"author":{"gitId":"xzzz3"},"content":"    public String toString() {","lastModifiedDate":"2022-03-10"},{"lineNumber":120,"author":{"gitId":"xzzz3"},"content":"        final StringBuilder builder \u003d new StringBuilder();","lastModifiedDate":"2022-03-10"},{"lineNumber":121,"author":{"gitId":"xzzz3"},"content":"        builder.append(getOrderNumber())","lastModifiedDate":"2022-03-10"},{"lineNumber":122,"author":{"gitId":"xzzz3"},"content":"                .append(\"; Customer: \")","lastModifiedDate":"2022-03-10"},{"lineNumber":123,"author":{"gitId":"xzzz3"},"content":"                .append(getCustomerName())","lastModifiedDate":"2022-03-10"},{"lineNumber":124,"author":{"gitId":"xzzz3"},"content":"                .append(\"; Phone: \")","lastModifiedDate":"2022-03-10"},{"lineNumber":125,"author":{"gitId":"xzzz3"},"content":"                .append(getCustomerPhone())","lastModifiedDate":"2022-03-10"},{"lineNumber":126,"author":{"gitId":"xzzz3"},"content":"                .append(\"; Address: \")","lastModifiedDate":"2022-03-10"},{"lineNumber":127,"author":{"gitId":"xzzz3"},"content":"                .append(getCustomerAddress())","lastModifiedDate":"2022-03-10"},{"lineNumber":128,"author":{"gitId":"xzzz3"},"content":"                .append(\"; Driver: \")","lastModifiedDate":"2022-03-10"},{"lineNumber":129,"author":{"gitId":"xzzz3"},"content":"                .append(getDriverName())","lastModifiedDate":"2022-03-10"},{"lineNumber":130,"author":{"gitId":"xzzz3"},"content":"                .append(\"; Status: \")","lastModifiedDate":"2022-03-10"},{"lineNumber":131,"author":{"gitId":"xzzz3"},"content":"                .append(getStatus())","lastModifiedDate":"2022-03-23"},{"lineNumber":132,"author":{"gitId":"xzzz3"},"content":"                .append(\"; Time: \")","lastModifiedDate":"2022-03-23"},{"lineNumber":133,"author":{"gitId":"xzzz3"},"content":"                .append(getTime());","lastModifiedDate":"2022-03-23"},{"lineNumber":134,"author":{"gitId":"xzzz3"},"content":"","lastModifiedDate":"2022-03-10"},{"lineNumber":135,"author":{"gitId":"xzzz3"},"content":"        ArrayList\u003cDish\u003e dishes \u003d getDishes();","lastModifiedDate":"2022-03-17"},{"lineNumber":136,"author":{"gitId":"xzzz3"},"content":"        builder.append(\"; Dishes: \");","lastModifiedDate":"2022-03-10"},{"lineNumber":137,"author":{"gitId":"xzzz3"},"content":"        dishes.forEach(builder::append);","lastModifiedDate":"2022-03-10"},{"lineNumber":138,"author":{"gitId":"xzzz3"},"content":"","lastModifiedDate":"2022-03-10"},{"lineNumber":139,"author":{"gitId":"xzzz3"},"content":"        return builder.toString();","lastModifiedDate":"2022-03-10"},{"lineNumber":140,"author":{"gitId":"xzzz3"},"content":"    }","lastModifiedDate":"2022-03-10"},{"lineNumber":141,"author":{"gitId":"xzzz3"},"content":"","lastModifiedDate":"2022-03-11"},{"lineNumber":142,"author":{"gitId":"xzzz3"},"content":"    /**","lastModifiedDate":"2022-03-12"},{"lineNumber":143,"author":{"gitId":"xzzz3"},"content":"     * Updates the status of the {@code Order}.","lastModifiedDate":"2022-03-12"},{"lineNumber":144,"author":{"gitId":"xzzz3"},"content":"     * @param status the status in lower-case String","lastModifiedDate":"2022-03-12"},{"lineNumber":145,"author":{"gitId":"xzzz3"},"content":"     * @return an {@code Order} with the updated order status.","lastModifiedDate":"2022-03-12"},{"lineNumber":146,"author":{"gitId":"xzzz3"},"content":"     */","lastModifiedDate":"2022-03-12"},{"lineNumber":147,"author":{"gitId":"xzzz3"},"content":"    public Order updateStatus(String status) {","lastModifiedDate":"2022-03-11"},{"lineNumber":148,"author":{"gitId":"xzzz3"},"content":"        status \u003d status.toLowerCase();","lastModifiedDate":"2022-03-30"},{"lineNumber":149,"author":{"gitId":"xzzz3"},"content":"        switch (status) {","lastModifiedDate":"2022-03-29"},{"lineNumber":150,"author":{"gitId":"xzzz3"},"content":"        case \"in progress\":","lastModifiedDate":"2022-03-29"},{"lineNumber":151,"author":{"gitId":"xzzz3"},"content":"            this.status \u003d OrderStatus.IN_PROGRESS;","lastModifiedDate":"2022-03-11"},{"lineNumber":152,"author":{"gitId":"xzzz3"},"content":"            break;","lastModifiedDate":"2022-03-29"},{"lineNumber":153,"author":{"gitId":"xzzz3"},"content":"        case \"delivered\":","lastModifiedDate":"2022-03-29"},{"lineNumber":154,"author":{"gitId":"xzzz3"},"content":"            this.status \u003d OrderStatus.DELIVERED;","lastModifiedDate":"2022-03-11"},{"lineNumber":155,"author":{"gitId":"hieunm1821"},"content":"            this.driver.setStatus(DriverStatus.FREE);","lastModifiedDate":"2022-03-31"},{"lineNumber":156,"author":{"gitId":"xzzz3"},"content":"            break;","lastModifiedDate":"2022-03-29"},{"lineNumber":157,"author":{"gitId":"xzzz3"},"content":"        case \"cancelled\":","lastModifiedDate":"2022-03-29"},{"lineNumber":158,"author":{"gitId":"xzzz3"},"content":"            this.status \u003d OrderStatus.CANCELLED;","lastModifiedDate":"2022-03-11"},{"lineNumber":159,"author":{"gitId":"hieunm1821"},"content":"            this.driver.setStatus(DriverStatus.FREE);","lastModifiedDate":"2022-03-31"},{"lineNumber":160,"author":{"gitId":"xzzz3"},"content":"            break;","lastModifiedDate":"2022-03-29"},{"lineNumber":161,"author":{"gitId":"xzzz3"},"content":"        default:","lastModifiedDate":"2022-03-29"},{"lineNumber":162,"author":{"gitId":"xzzz3"},"content":"            throw new NoSuchOrderStatusException();","lastModifiedDate":"2022-03-28"},{"lineNumber":163,"author":{"gitId":"xzzz3"},"content":"        }","lastModifiedDate":"2022-03-11"},{"lineNumber":164,"author":{"gitId":"xzzz3"},"content":"        return this;","lastModifiedDate":"2022-03-11"},{"lineNumber":165,"author":{"gitId":"xzzz3"},"content":"    }","lastModifiedDate":"2022-03-11"},{"lineNumber":166,"author":{"gitId":"xzzz3"},"content":"}","lastModifiedDate":"2022-03-10"}],"authorContributionMap":{"xzzz3":156,"hieunm1821":4,"jaegarpoon":6}},{"path":"src/main/java/seedu/address/model/order/OrderContainsKeywordsPredicate.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"xzzz3"},"content":"package seedu.address.model.order;","lastModifiedDate":"2022-03-11"},{"lineNumber":2,"author":{"gitId":"xzzz3"},"content":"","lastModifiedDate":"2022-03-11"},{"lineNumber":3,"author":{"gitId":"xzzz3"},"content":"import java.util.List;","lastModifiedDate":"2022-03-11"},{"lineNumber":4,"author":{"gitId":"xzzz3"},"content":"import java.util.function.Predicate;","lastModifiedDate":"2022-03-11"},{"lineNumber":5,"author":{"gitId":"xzzz3"},"content":"","lastModifiedDate":"2022-03-11"},{"lineNumber":6,"author":{"gitId":"xzzz3"},"content":"import seedu.address.commons.util.StringUtil;","lastModifiedDate":"2022-03-11"},{"lineNumber":7,"author":{"gitId":"xzzz3"},"content":"","lastModifiedDate":"2022-03-11"},{"lineNumber":8,"author":{"gitId":"xzzz3"},"content":"/**","lastModifiedDate":"2022-03-11"},{"lineNumber":9,"author":{"gitId":"xzzz3"},"content":" * Tests that a {@code Order}\u0027s {@code Phone} matches any of the keywords given.","lastModifiedDate":"2022-03-11"},{"lineNumber":10,"author":{"gitId":"xzzz3"},"content":" */","lastModifiedDate":"2022-03-11"},{"lineNumber":11,"author":{"gitId":"xzzz3"},"content":"public class OrderContainsKeywordsPredicate implements Predicate\u003cOrder\u003e {","lastModifiedDate":"2022-03-11"},{"lineNumber":12,"author":{"gitId":"xzzz3"},"content":"    private final List\u003cString\u003e keywords;","lastModifiedDate":"2022-03-11"},{"lineNumber":13,"author":{"gitId":"xzzz3"},"content":"","lastModifiedDate":"2022-03-11"},{"lineNumber":14,"author":{"gitId":"xzzz3"},"content":"    public OrderContainsKeywordsPredicate(List\u003cString\u003e keywords) {","lastModifiedDate":"2022-03-11"},{"lineNumber":15,"author":{"gitId":"xzzz3"},"content":"        this.keywords \u003d keywords;","lastModifiedDate":"2022-03-11"},{"lineNumber":16,"author":{"gitId":"xzzz3"},"content":"    }","lastModifiedDate":"2022-03-11"},{"lineNumber":17,"author":{"gitId":"xzzz3"},"content":"","lastModifiedDate":"2022-03-11"},{"lineNumber":18,"author":{"gitId":"xzzz3"},"content":"    @Override","lastModifiedDate":"2022-03-11"},{"lineNumber":19,"author":{"gitId":"xzzz3"},"content":"    public boolean test(Order order) {","lastModifiedDate":"2022-03-11"},{"lineNumber":20,"author":{"gitId":"xzzz3"},"content":"        return keywords.stream()","lastModifiedDate":"2022-03-12"},{"lineNumber":21,"author":{"gitId":"xzzz3"},"content":"                .anyMatch(keyword -\u003e StringUtil.containsWordIgnoreCase(order.getCustomerPhone(), keyword));","lastModifiedDate":"2022-03-12"},{"lineNumber":22,"author":{"gitId":"xzzz3"},"content":"    }","lastModifiedDate":"2022-03-11"},{"lineNumber":23,"author":{"gitId":"xzzz3"},"content":"","lastModifiedDate":"2022-03-11"},{"lineNumber":24,"author":{"gitId":"xzzz3"},"content":"    @Override","lastModifiedDate":"2022-03-11"},{"lineNumber":25,"author":{"gitId":"xzzz3"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2022-03-11"},{"lineNumber":26,"author":{"gitId":"xzzz3"},"content":"        return other \u003d\u003d this","lastModifiedDate":"2022-03-11"},{"lineNumber":27,"author":{"gitId":"xzzz3"},"content":"                || (other instanceof OrderContainsKeywordsPredicate)","lastModifiedDate":"2022-03-11"},{"lineNumber":28,"author":{"gitId":"xzzz3"},"content":"                \u0026\u0026 keywords.equals(((OrderContainsKeywordsPredicate) other).keywords);","lastModifiedDate":"2022-03-11"},{"lineNumber":29,"author":{"gitId":"xzzz3"},"content":"    }","lastModifiedDate":"2022-03-11"},{"lineNumber":30,"author":{"gitId":"xzzz3"},"content":"}","lastModifiedDate":"2022-03-11"}],"authorContributionMap":{"xzzz3":30}},{"path":"src/main/java/seedu/address/model/order/OrderDeliveredAndFromDatePredicate.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"jaegarpoon"},"content":"package seedu.address.model.order;","lastModifiedDate":"2022-03-30"},{"lineNumber":2,"author":{"gitId":"jaegarpoon"},"content":"","lastModifiedDate":"2022-03-30"},{"lineNumber":3,"author":{"gitId":"jaegarpoon"},"content":"import java.time.LocalDate;","lastModifiedDate":"2022-03-30"},{"lineNumber":4,"author":{"gitId":"jaegarpoon"},"content":"import java.util.List;","lastModifiedDate":"2022-03-30"},{"lineNumber":5,"author":{"gitId":"jaegarpoon"},"content":"import java.util.function.Predicate;","lastModifiedDate":"2022-03-30"},{"lineNumber":6,"author":{"gitId":"jaegarpoon"},"content":"","lastModifiedDate":"2022-03-30"},{"lineNumber":7,"author":{"gitId":"jaegarpoon"},"content":"/**","lastModifiedDate":"2022-03-30"},{"lineNumber":8,"author":{"gitId":"jaegarpoon"},"content":" * Tests that a {@code Order}\u0027s {@code Date} matches any of the dates given.","lastModifiedDate":"2022-03-30"},{"lineNumber":9,"author":{"gitId":"jaegarpoon"},"content":" */","lastModifiedDate":"2022-03-30"},{"lineNumber":10,"author":{"gitId":"jaegarpoon"},"content":"public class OrderDeliveredAndFromDatePredicate implements Predicate\u003cOrder\u003e {","lastModifiedDate":"2022-03-30"},{"lineNumber":11,"author":{"gitId":"jaegarpoon"},"content":"    private final List\u003cLocalDate\u003e dates;","lastModifiedDate":"2022-03-30"},{"lineNumber":12,"author":{"gitId":"jaegarpoon"},"content":"","lastModifiedDate":"2022-03-30"},{"lineNumber":13,"author":{"gitId":"jaegarpoon"},"content":"    public OrderDeliveredAndFromDatePredicate(List\u003cLocalDate\u003e dates) {","lastModifiedDate":"2022-03-30"},{"lineNumber":14,"author":{"gitId":"jaegarpoon"},"content":"        this.dates \u003d dates;","lastModifiedDate":"2022-03-30"},{"lineNumber":15,"author":{"gitId":"jaegarpoon"},"content":"    }","lastModifiedDate":"2022-03-30"},{"lineNumber":16,"author":{"gitId":"jaegarpoon"},"content":"","lastModifiedDate":"2022-03-30"},{"lineNumber":17,"author":{"gitId":"jaegarpoon"},"content":"    @Override","lastModifiedDate":"2022-03-30"},{"lineNumber":18,"author":{"gitId":"jaegarpoon"},"content":"    public boolean test(Order order) {","lastModifiedDate":"2022-03-30"},{"lineNumber":19,"author":{"gitId":"jaegarpoon"},"content":"        return dates.stream()","lastModifiedDate":"2022-03-30"},{"lineNumber":20,"author":{"gitId":"jaegarpoon"},"content":"                .anyMatch(date -\u003e date.isEqual(order.getTime().toLocalDate())","lastModifiedDate":"2022-03-30"},{"lineNumber":21,"author":{"gitId":"jaegarpoon"},"content":"                        \u0026\u0026 order.getStatus().equals(OrderStatus.DELIVERED));","lastModifiedDate":"2022-03-30"},{"lineNumber":22,"author":{"gitId":"jaegarpoon"},"content":"    }","lastModifiedDate":"2022-03-30"},{"lineNumber":23,"author":{"gitId":"jaegarpoon"},"content":"","lastModifiedDate":"2022-03-30"},{"lineNumber":24,"author":{"gitId":"jaegarpoon"},"content":"    @Override","lastModifiedDate":"2022-03-30"},{"lineNumber":25,"author":{"gitId":"jaegarpoon"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2022-03-30"},{"lineNumber":26,"author":{"gitId":"jaegarpoon"},"content":"        return other \u003d\u003d this","lastModifiedDate":"2022-03-30"},{"lineNumber":27,"author":{"gitId":"jaegarpoon"},"content":"                || (other instanceof OrderDeliveredAndFromDatePredicate)","lastModifiedDate":"2022-03-30"},{"lineNumber":28,"author":{"gitId":"jaegarpoon"},"content":"                \u0026\u0026 dates.equals(((OrderDeliveredAndFromDatePredicate) other).dates);","lastModifiedDate":"2022-03-30"},{"lineNumber":29,"author":{"gitId":"jaegarpoon"},"content":"    }","lastModifiedDate":"2022-03-30"},{"lineNumber":30,"author":{"gitId":"jaegarpoon"},"content":"}","lastModifiedDate":"2022-03-30"},{"lineNumber":31,"author":{"gitId":"jaegarpoon"},"content":"","lastModifiedDate":"2022-03-30"}],"authorContributionMap":{"jaegarpoon":31}},{"path":"src/main/java/seedu/address/model/order/OrderStatus.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"xzzz3"},"content":"package seedu.address.model.order;","lastModifiedDate":"2022-03-10"},{"lineNumber":2,"author":{"gitId":"xzzz3"},"content":"","lastModifiedDate":"2022-03-10"},{"lineNumber":3,"author":{"gitId":"xzzz3"},"content":"public enum OrderStatus {","lastModifiedDate":"2022-03-10"},{"lineNumber":4,"author":{"gitId":"xzzz3"},"content":"    IN_PROGRESS, DELIVERED, CANCELLED","lastModifiedDate":"2022-03-29"},{"lineNumber":5,"author":{"gitId":"xzzz3"},"content":"}","lastModifiedDate":"2022-03-10"}],"authorContributionMap":{"xzzz3":5}},{"path":"src/main/java/seedu/address/model/order/OrderStatusContainsKeywordsPredicate.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"jaegarpoon"},"content":"package seedu.address.model.order;","lastModifiedDate":"2022-03-29"},{"lineNumber":2,"author":{"gitId":"jaegarpoon"},"content":"","lastModifiedDate":"2022-03-29"},{"lineNumber":3,"author":{"gitId":"jaegarpoon"},"content":"import java.util.List;","lastModifiedDate":"2022-03-29"},{"lineNumber":4,"author":{"gitId":"jaegarpoon"},"content":"import java.util.function.Predicate;","lastModifiedDate":"2022-03-29"},{"lineNumber":5,"author":{"gitId":"jaegarpoon"},"content":"","lastModifiedDate":"2022-03-29"},{"lineNumber":6,"author":{"gitId":"jaegarpoon"},"content":"import seedu.address.commons.util.StringUtil;","lastModifiedDate":"2022-03-29"},{"lineNumber":7,"author":{"gitId":"jaegarpoon"},"content":"","lastModifiedDate":"2022-03-29"},{"lineNumber":8,"author":{"gitId":"jaegarpoon"},"content":"public class OrderStatusContainsKeywordsPredicate implements Predicate\u003cOrder\u003e {","lastModifiedDate":"2022-03-29"},{"lineNumber":9,"author":{"gitId":"jaegarpoon"},"content":"    private final List\u003cString\u003e keywords;","lastModifiedDate":"2022-03-29"},{"lineNumber":10,"author":{"gitId":"jaegarpoon"},"content":"","lastModifiedDate":"2022-03-29"},{"lineNumber":11,"author":{"gitId":"jaegarpoon"},"content":"    public OrderStatusContainsKeywordsPredicate(List\u003cString\u003e keywords) {","lastModifiedDate":"2022-03-29"},{"lineNumber":12,"author":{"gitId":"jaegarpoon"},"content":"        this.keywords \u003d keywords;","lastModifiedDate":"2022-03-29"},{"lineNumber":13,"author":{"gitId":"jaegarpoon"},"content":"    }","lastModifiedDate":"2022-03-29"},{"lineNumber":14,"author":{"gitId":"jaegarpoon"},"content":"","lastModifiedDate":"2022-03-29"},{"lineNumber":15,"author":{"gitId":"jaegarpoon"},"content":"    public List\u003cString\u003e getKeywords() {","lastModifiedDate":"2022-03-29"},{"lineNumber":16,"author":{"gitId":"jaegarpoon"},"content":"        return keywords;","lastModifiedDate":"2022-03-29"},{"lineNumber":17,"author":{"gitId":"jaegarpoon"},"content":"    }","lastModifiedDate":"2022-03-29"},{"lineNumber":18,"author":{"gitId":"jaegarpoon"},"content":"","lastModifiedDate":"2022-03-29"},{"lineNumber":19,"author":{"gitId":"jaegarpoon"},"content":"    @Override","lastModifiedDate":"2022-03-29"},{"lineNumber":20,"author":{"gitId":"jaegarpoon"},"content":"    public boolean test(Order order) {","lastModifiedDate":"2022-03-29"},{"lineNumber":21,"author":{"gitId":"jaegarpoon"},"content":"        return keywords.stream()","lastModifiedDate":"2022-03-29"},{"lineNumber":22,"author":{"gitId":"jaegarpoon"},"content":"                .anyMatch(keyword -\u003e StringUtil.containsWordIgnoreCase(order.getStatus().name(), keyword));","lastModifiedDate":"2022-03-29"},{"lineNumber":23,"author":{"gitId":"jaegarpoon"},"content":"    }","lastModifiedDate":"2022-03-29"},{"lineNumber":24,"author":{"gitId":"jaegarpoon"},"content":"","lastModifiedDate":"2022-03-29"},{"lineNumber":25,"author":{"gitId":"jaegarpoon"},"content":"    @Override","lastModifiedDate":"2022-03-29"},{"lineNumber":26,"author":{"gitId":"jaegarpoon"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2022-03-29"},{"lineNumber":27,"author":{"gitId":"jaegarpoon"},"content":"        return other \u003d\u003d this // short circuit if same object","lastModifiedDate":"2022-03-29"},{"lineNumber":28,"author":{"gitId":"jaegarpoon"},"content":"                || (other instanceof OrderStatusContainsKeywordsPredicate","lastModifiedDate":"2022-03-29"},{"lineNumber":29,"author":{"gitId":"jaegarpoon"},"content":"                // instanceof handles nulls","lastModifiedDate":"2022-03-29"},{"lineNumber":30,"author":{"gitId":"jaegarpoon"},"content":"                \u0026\u0026 keywords.equals(((OrderStatusContainsKeywordsPredicate) other).keywords)); // state check","lastModifiedDate":"2022-03-29"},{"lineNumber":31,"author":{"gitId":"jaegarpoon"},"content":"    }","lastModifiedDate":"2022-03-29"},{"lineNumber":32,"author":{"gitId":"jaegarpoon"},"content":"}","lastModifiedDate":"2022-03-29"},{"lineNumber":33,"author":{"gitId":"jaegarpoon"},"content":"","lastModifiedDate":"2022-03-29"}],"authorContributionMap":{"jaegarpoon":33}},{"path":"src/main/java/seedu/address/model/order/UniqueOrderList.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"zxgoh"},"content":"package seedu.address.model.order;","lastModifiedDate":"2022-03-16"},{"lineNumber":2,"author":{"gitId":"zxgoh"},"content":"","lastModifiedDate":"2022-03-16"},{"lineNumber":3,"author":{"gitId":"zxgoh"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2022-03-16"},{"lineNumber":4,"author":{"gitId":"zxgoh"},"content":"import static seedu.address.commons.util.CollectionUtil.requireAllNonNull;","lastModifiedDate":"2022-03-16"},{"lineNumber":5,"author":{"gitId":"zxgoh"},"content":"","lastModifiedDate":"2022-03-16"},{"lineNumber":6,"author":{"gitId":"zxgoh"},"content":"import java.util.Iterator;","lastModifiedDate":"2022-03-16"},{"lineNumber":7,"author":{"gitId":"zxgoh"},"content":"import java.util.List;","lastModifiedDate":"2022-03-16"},{"lineNumber":8,"author":{"gitId":"zxgoh"},"content":"","lastModifiedDate":"2022-03-16"},{"lineNumber":9,"author":{"gitId":"zxgoh"},"content":"import javafx.collections.FXCollections;","lastModifiedDate":"2022-03-16"},{"lineNumber":10,"author":{"gitId":"zxgoh"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2022-03-16"},{"lineNumber":11,"author":{"gitId":"zxgoh"},"content":"import seedu.address.model.item.exceptions.DuplicatePersonException;","lastModifiedDate":"2022-03-16"},{"lineNumber":12,"author":{"gitId":"zxgoh"},"content":"import seedu.address.model.item.exceptions.PersonNotFoundException;","lastModifiedDate":"2022-03-16"},{"lineNumber":13,"author":{"gitId":"xzzz3"},"content":"import seedu.address.model.order.exception.DuplicateOrderException;","lastModifiedDate":"2022-03-28"},{"lineNumber":14,"author":{"gitId":"xzzz3"},"content":"import seedu.address.model.order.exception.OrderNotFoundException;","lastModifiedDate":"2022-03-28"},{"lineNumber":15,"author":{"gitId":"zxgoh"},"content":"","lastModifiedDate":"2022-03-16"},{"lineNumber":16,"author":{"gitId":"zxgoh"},"content":"","lastModifiedDate":"2022-03-16"},{"lineNumber":17,"author":{"gitId":"zxgoh"},"content":"/**","lastModifiedDate":"2022-03-16"},{"lineNumber":18,"author":{"gitId":"zxgoh"},"content":" * A list of orders that enforces uniqueness between its elements and does not allow nulls.","lastModifiedDate":"2022-03-16"},{"lineNumber":19,"author":{"gitId":"zxgoh"},"content":" * A order is considered unique by comparing using {@code order#isSameorder(order)}. As such, adding and updating of","lastModifiedDate":"2022-03-16"},{"lineNumber":20,"author":{"gitId":"zxgoh"},"content":" * orders uses order#isSameorder(order) for equality so as to ensure that the order being added or updated is","lastModifiedDate":"2022-03-16"},{"lineNumber":21,"author":{"gitId":"zxgoh"},"content":" * unique in terms of identity in the UniqueorderList. However, the removal of a order uses order#equals(Object) so","lastModifiedDate":"2022-03-16"},{"lineNumber":22,"author":{"gitId":"zxgoh"},"content":" * as to ensure that the order with exactly the same fields will be removed.","lastModifiedDate":"2022-03-16"},{"lineNumber":23,"author":{"gitId":"zxgoh"},"content":" *","lastModifiedDate":"2022-03-16"},{"lineNumber":24,"author":{"gitId":"zxgoh"},"content":" * Supports a minimal set of list operations.","lastModifiedDate":"2022-03-16"},{"lineNumber":25,"author":{"gitId":"zxgoh"},"content":" */","lastModifiedDate":"2022-03-16"},{"lineNumber":26,"author":{"gitId":"zxgoh"},"content":"public class UniqueOrderList implements Iterable\u003cOrder\u003e {","lastModifiedDate":"2022-03-16"},{"lineNumber":27,"author":{"gitId":"zxgoh"},"content":"","lastModifiedDate":"2022-03-16"},{"lineNumber":28,"author":{"gitId":"zxgoh"},"content":"    private final ObservableList\u003cOrder\u003e internalList \u003d FXCollections.observableArrayList();","lastModifiedDate":"2022-03-16"},{"lineNumber":29,"author":{"gitId":"zxgoh"},"content":"    private final ObservableList\u003cOrder\u003e internalUnmodifiableList \u003d","lastModifiedDate":"2022-03-16"},{"lineNumber":30,"author":{"gitId":"zxgoh"},"content":"            FXCollections.unmodifiableObservableList(internalList);","lastModifiedDate":"2022-03-16"},{"lineNumber":31,"author":{"gitId":"zxgoh"},"content":"","lastModifiedDate":"2022-03-16"},{"lineNumber":32,"author":{"gitId":"zxgoh"},"content":"    /**","lastModifiedDate":"2022-03-16"},{"lineNumber":33,"author":{"gitId":"zxgoh"},"content":"     * Returns true if the list contains an equivalent order as the given argument.","lastModifiedDate":"2022-03-16"},{"lineNumber":34,"author":{"gitId":"zxgoh"},"content":"     */","lastModifiedDate":"2022-03-16"},{"lineNumber":35,"author":{"gitId":"zxgoh"},"content":"    public boolean contains(Order toCheck) {","lastModifiedDate":"2022-03-16"},{"lineNumber":36,"author":{"gitId":"zxgoh"},"content":"        requireNonNull(toCheck);","lastModifiedDate":"2022-03-16"},{"lineNumber":37,"author":{"gitId":"zxgoh"},"content":"        return internalList.stream().anyMatch(toCheck::equals);","lastModifiedDate":"2022-03-16"},{"lineNumber":38,"author":{"gitId":"zxgoh"},"content":"    }","lastModifiedDate":"2022-03-16"},{"lineNumber":39,"author":{"gitId":"zxgoh"},"content":"","lastModifiedDate":"2022-03-16"},{"lineNumber":40,"author":{"gitId":"zxgoh"},"content":"    /**","lastModifiedDate":"2022-03-16"},{"lineNumber":41,"author":{"gitId":"zxgoh"},"content":"     * Adds an order to the list.","lastModifiedDate":"2022-03-16"},{"lineNumber":42,"author":{"gitId":"zxgoh"},"content":"     */","lastModifiedDate":"2022-03-16"},{"lineNumber":43,"author":{"gitId":"zxgoh"},"content":"    public void add(Order toAdd) {","lastModifiedDate":"2022-03-16"},{"lineNumber":44,"author":{"gitId":"zxgoh"},"content":"        requireNonNull(toAdd);","lastModifiedDate":"2022-03-16"},{"lineNumber":45,"author":{"gitId":"zxgoh"},"content":"        // todo implement throw exception for duplicate","lastModifiedDate":"2022-03-16"},{"lineNumber":46,"author":{"gitId":"zxgoh"},"content":"        internalList.add(toAdd);","lastModifiedDate":"2022-03-16"},{"lineNumber":47,"author":{"gitId":"zxgoh"},"content":"    }","lastModifiedDate":"2022-03-16"},{"lineNumber":48,"author":{"gitId":"zxgoh"},"content":"","lastModifiedDate":"2022-03-16"},{"lineNumber":49,"author":{"gitId":"zxgoh"},"content":"    /**","lastModifiedDate":"2022-03-16"},{"lineNumber":50,"author":{"gitId":"zxgoh"},"content":"     * Replaces the order {@code target} in the list with {@code editedorder}.","lastModifiedDate":"2022-03-16"},{"lineNumber":51,"author":{"gitId":"zxgoh"},"content":"     * {@code target} must exist in the list.","lastModifiedDate":"2022-03-16"},{"lineNumber":52,"author":{"gitId":"zxgoh"},"content":"     * The order identity of {@code editedorder} must not be the same as another existing order in the list.","lastModifiedDate":"2022-03-16"},{"lineNumber":53,"author":{"gitId":"zxgoh"},"content":"     */","lastModifiedDate":"2022-03-16"},{"lineNumber":54,"author":{"gitId":"zxgoh"},"content":"    public void setOrders(Order target, Order editedOrder) {","lastModifiedDate":"2022-03-16"},{"lineNumber":55,"author":{"gitId":"zxgoh"},"content":"        requireAllNonNull(target, editedOrder);","lastModifiedDate":"2022-03-16"},{"lineNumber":56,"author":{"gitId":"zxgoh"},"content":"","lastModifiedDate":"2022-03-16"},{"lineNumber":57,"author":{"gitId":"zxgoh"},"content":"        int index \u003d internalList.indexOf(target);","lastModifiedDate":"2022-03-16"},{"lineNumber":58,"author":{"gitId":"zxgoh"},"content":"        if (index \u003d\u003d -1) {","lastModifiedDate":"2022-03-16"},{"lineNumber":59,"author":{"gitId":"zxgoh"},"content":"            throw new PersonNotFoundException(); // todo make new exception for order","lastModifiedDate":"2022-03-16"},{"lineNumber":60,"author":{"gitId":"zxgoh"},"content":"        }","lastModifiedDate":"2022-03-16"},{"lineNumber":61,"author":{"gitId":"zxgoh"},"content":"","lastModifiedDate":"2022-03-16"},{"lineNumber":62,"author":{"gitId":"zxgoh"},"content":"        if (!target.equals(editedOrder) \u0026\u0026 contains(editedOrder)) {","lastModifiedDate":"2022-03-16"},{"lineNumber":63,"author":{"gitId":"zxgoh"},"content":"            throw new DuplicatePersonException();","lastModifiedDate":"2022-03-16"},{"lineNumber":64,"author":{"gitId":"zxgoh"},"content":"        }","lastModifiedDate":"2022-03-16"},{"lineNumber":65,"author":{"gitId":"zxgoh"},"content":"","lastModifiedDate":"2022-03-16"},{"lineNumber":66,"author":{"gitId":"zxgoh"},"content":"        internalList.set(index, editedOrder);","lastModifiedDate":"2022-03-16"},{"lineNumber":67,"author":{"gitId":"zxgoh"},"content":"    }","lastModifiedDate":"2022-03-16"},{"lineNumber":68,"author":{"gitId":"zxgoh"},"content":"","lastModifiedDate":"2022-03-16"},{"lineNumber":69,"author":{"gitId":"zxgoh"},"content":"    public void setOrders(UniqueOrderList replacement) {","lastModifiedDate":"2022-03-16"},{"lineNumber":70,"author":{"gitId":"zxgoh"},"content":"        requireNonNull(replacement);","lastModifiedDate":"2022-03-16"},{"lineNumber":71,"author":{"gitId":"zxgoh"},"content":"        internalList.setAll(replacement.internalList);","lastModifiedDate":"2022-03-16"},{"lineNumber":72,"author":{"gitId":"zxgoh"},"content":"    }","lastModifiedDate":"2022-03-16"},{"lineNumber":73,"author":{"gitId":"zxgoh"},"content":"","lastModifiedDate":"2022-03-16"},{"lineNumber":74,"author":{"gitId":"zxgoh"},"content":"    /**","lastModifiedDate":"2022-03-16"},{"lineNumber":75,"author":{"gitId":"zxgoh"},"content":"     * Replaces the contents of this list with {@code orders}.","lastModifiedDate":"2022-03-16"},{"lineNumber":76,"author":{"gitId":"zxgoh"},"content":"     * {@code orders} must not contain duplicate orders.","lastModifiedDate":"2022-03-16"},{"lineNumber":77,"author":{"gitId":"zxgoh"},"content":"     */","lastModifiedDate":"2022-03-16"},{"lineNumber":78,"author":{"gitId":"zxgoh"},"content":"    public void setOrders(List\u003cOrder\u003e orders) {","lastModifiedDate":"2022-03-16"},{"lineNumber":79,"author":{"gitId":"zxgoh"},"content":"        requireAllNonNull(orders);","lastModifiedDate":"2022-03-16"},{"lineNumber":80,"author":{"gitId":"zxgoh"},"content":"        if (!ordersAreUnique(orders)) {","lastModifiedDate":"2022-03-16"},{"lineNumber":81,"author":{"gitId":"zxgoh"},"content":"            throw new DuplicatePersonException(); // todo update","lastModifiedDate":"2022-03-16"},{"lineNumber":82,"author":{"gitId":"zxgoh"},"content":"        }","lastModifiedDate":"2022-03-16"},{"lineNumber":83,"author":{"gitId":"zxgoh"},"content":"","lastModifiedDate":"2022-03-16"},{"lineNumber":84,"author":{"gitId":"zxgoh"},"content":"        internalList.setAll(orders);","lastModifiedDate":"2022-03-16"},{"lineNumber":85,"author":{"gitId":"zxgoh"},"content":"    }","lastModifiedDate":"2022-03-16"},{"lineNumber":86,"author":{"gitId":"zxgoh"},"content":"","lastModifiedDate":"2022-03-16"},{"lineNumber":87,"author":{"gitId":"zxgoh"},"content":"    /**","lastModifiedDate":"2022-03-16"},{"lineNumber":88,"author":{"gitId":"zxgoh"},"content":"     * Removes the equivalent order from the list.","lastModifiedDate":"2022-03-16"},{"lineNumber":89,"author":{"gitId":"zxgoh"},"content":"     * The order must exist in the list.","lastModifiedDate":"2022-03-16"},{"lineNumber":90,"author":{"gitId":"zxgoh"},"content":"     */","lastModifiedDate":"2022-03-16"},{"lineNumber":91,"author":{"gitId":"zxgoh"},"content":"    public void remove(Order toRemove) {","lastModifiedDate":"2022-03-16"},{"lineNumber":92,"author":{"gitId":"zxgoh"},"content":"        requireNonNull(toRemove);","lastModifiedDate":"2022-03-16"},{"lineNumber":93,"author":{"gitId":"zxgoh"},"content":"        if (!internalList.remove(toRemove)) {","lastModifiedDate":"2022-03-16"},{"lineNumber":94,"author":{"gitId":"zxgoh"},"content":"            throw new PersonNotFoundException(); // todo replace exception","lastModifiedDate":"2022-03-16"},{"lineNumber":95,"author":{"gitId":"zxgoh"},"content":"        }","lastModifiedDate":"2022-03-16"},{"lineNumber":96,"author":{"gitId":"zxgoh"},"content":"    }","lastModifiedDate":"2022-03-16"},{"lineNumber":97,"author":{"gitId":"zxgoh"},"content":"","lastModifiedDate":"2022-03-16"},{"lineNumber":98,"author":{"gitId":"xzzz3"},"content":"    /**","lastModifiedDate":"2022-03-28"},{"lineNumber":99,"author":{"gitId":"xzzz3"},"content":"     * Replaces the order {@code target} in the list with {@code editedOrder}.","lastModifiedDate":"2022-03-28"},{"lineNumber":100,"author":{"gitId":"xzzz3"},"content":"     * {@code target} must exist in the list.","lastModifiedDate":"2022-03-28"},{"lineNumber":101,"author":{"gitId":"xzzz3"},"content":"     * The order identity of {@code editedOrder} must not be the same as another existing order in the list.","lastModifiedDate":"2022-03-28"},{"lineNumber":102,"author":{"gitId":"xzzz3"},"content":"     */","lastModifiedDate":"2022-03-28"},{"lineNumber":103,"author":{"gitId":"xzzz3"},"content":"    public void setOrder(Order target, Order editedOrder) {","lastModifiedDate":"2022-03-28"},{"lineNumber":104,"author":{"gitId":"xzzz3"},"content":"        requireAllNonNull(target, editedOrder);","lastModifiedDate":"2022-03-28"},{"lineNumber":105,"author":{"gitId":"xzzz3"},"content":"","lastModifiedDate":"2022-03-28"},{"lineNumber":106,"author":{"gitId":"xzzz3"},"content":"        int index \u003d internalList.indexOf(target);","lastModifiedDate":"2022-03-28"},{"lineNumber":107,"author":{"gitId":"xzzz3"},"content":"        if (index \u003d\u003d -1) {","lastModifiedDate":"2022-03-28"},{"lineNumber":108,"author":{"gitId":"xzzz3"},"content":"            throw new OrderNotFoundException();","lastModifiedDate":"2022-03-28"},{"lineNumber":109,"author":{"gitId":"xzzz3"},"content":"        }","lastModifiedDate":"2022-03-28"},{"lineNumber":110,"author":{"gitId":"xzzz3"},"content":"","lastModifiedDate":"2022-03-28"},{"lineNumber":111,"author":{"gitId":"xzzz3"},"content":"        if (!target.equals(editedOrder) \u0026\u0026 contains(editedOrder)) {","lastModifiedDate":"2022-03-28"},{"lineNumber":112,"author":{"gitId":"xzzz3"},"content":"            throw new DuplicateOrderException();","lastModifiedDate":"2022-03-28"},{"lineNumber":113,"author":{"gitId":"xzzz3"},"content":"        }","lastModifiedDate":"2022-03-28"},{"lineNumber":114,"author":{"gitId":"xzzz3"},"content":"","lastModifiedDate":"2022-03-28"},{"lineNumber":115,"author":{"gitId":"xzzz3"},"content":"        internalList.set(index, editedOrder);","lastModifiedDate":"2022-03-28"},{"lineNumber":116,"author":{"gitId":"xzzz3"},"content":"    }","lastModifiedDate":"2022-03-28"},{"lineNumber":117,"author":{"gitId":"xzzz3"},"content":"","lastModifiedDate":"2022-03-28"},{"lineNumber":118,"author":{"gitId":"zxgoh"},"content":"    /**","lastModifiedDate":"2022-03-16"},{"lineNumber":119,"author":{"gitId":"zxgoh"},"content":"     * Returns the backing list as an unmodifiable {@code ObservableList}.","lastModifiedDate":"2022-03-16"},{"lineNumber":120,"author":{"gitId":"zxgoh"},"content":"     */","lastModifiedDate":"2022-03-16"},{"lineNumber":121,"author":{"gitId":"zxgoh"},"content":"    public ObservableList\u003cOrder\u003e asUnmodifiableObservableList() {","lastModifiedDate":"2022-03-16"},{"lineNumber":122,"author":{"gitId":"zxgoh"},"content":"        return internalUnmodifiableList;","lastModifiedDate":"2022-03-16"},{"lineNumber":123,"author":{"gitId":"zxgoh"},"content":"    }","lastModifiedDate":"2022-03-16"},{"lineNumber":124,"author":{"gitId":"zxgoh"},"content":"","lastModifiedDate":"2022-03-16"},{"lineNumber":125,"author":{"gitId":"zxgoh"},"content":"    @Override","lastModifiedDate":"2022-03-16"},{"lineNumber":126,"author":{"gitId":"zxgoh"},"content":"    public Iterator\u003cOrder\u003e iterator() {","lastModifiedDate":"2022-03-16"},{"lineNumber":127,"author":{"gitId":"zxgoh"},"content":"        return internalList.iterator();","lastModifiedDate":"2022-03-16"},{"lineNumber":128,"author":{"gitId":"zxgoh"},"content":"    }","lastModifiedDate":"2022-03-16"},{"lineNumber":129,"author":{"gitId":"zxgoh"},"content":"","lastModifiedDate":"2022-03-16"},{"lineNumber":130,"author":{"gitId":"zxgoh"},"content":"    @Override","lastModifiedDate":"2022-03-16"},{"lineNumber":131,"author":{"gitId":"zxgoh"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2022-03-16"},{"lineNumber":132,"author":{"gitId":"zxgoh"},"content":"        return other \u003d\u003d this // short circuit if same object","lastModifiedDate":"2022-03-16"},{"lineNumber":133,"author":{"gitId":"zxgoh"},"content":"                || (other instanceof UniqueOrderList // instanceof handles nulls","lastModifiedDate":"2022-03-16"},{"lineNumber":134,"author":{"gitId":"zxgoh"},"content":"                \u0026\u0026 internalList.equals(((UniqueOrderList) other).internalList));","lastModifiedDate":"2022-03-16"},{"lineNumber":135,"author":{"gitId":"zxgoh"},"content":"    }","lastModifiedDate":"2022-03-16"},{"lineNumber":136,"author":{"gitId":"zxgoh"},"content":"","lastModifiedDate":"2022-03-16"},{"lineNumber":137,"author":{"gitId":"zxgoh"},"content":"    @Override","lastModifiedDate":"2022-03-16"},{"lineNumber":138,"author":{"gitId":"zxgoh"},"content":"    public int hashCode() {","lastModifiedDate":"2022-03-16"},{"lineNumber":139,"author":{"gitId":"zxgoh"},"content":"        return internalList.hashCode();","lastModifiedDate":"2022-03-16"},{"lineNumber":140,"author":{"gitId":"zxgoh"},"content":"    }","lastModifiedDate":"2022-03-16"},{"lineNumber":141,"author":{"gitId":"zxgoh"},"content":"","lastModifiedDate":"2022-03-16"},{"lineNumber":142,"author":{"gitId":"zxgoh"},"content":"    /**","lastModifiedDate":"2022-03-16"},{"lineNumber":143,"author":{"gitId":"zxgoh"},"content":"     * Returns true if {@code orders} contains only unique orders.","lastModifiedDate":"2022-03-16"},{"lineNumber":144,"author":{"gitId":"zxgoh"},"content":"     */","lastModifiedDate":"2022-03-16"},{"lineNumber":145,"author":{"gitId":"zxgoh"},"content":"    private boolean ordersAreUnique(List\u003cOrder\u003e orders) {","lastModifiedDate":"2022-03-16"},{"lineNumber":146,"author":{"gitId":"zxgoh"},"content":"        for (int i \u003d 0; i \u003c orders.size() - 1; i++) {","lastModifiedDate":"2022-03-16"},{"lineNumber":147,"author":{"gitId":"zxgoh"},"content":"            for (int j \u003d i + 1; j \u003c orders.size(); j++) {","lastModifiedDate":"2022-03-16"},{"lineNumber":148,"author":{"gitId":"zxgoh"},"content":"                if (orders.get(i).equals(orders.get(j))) {","lastModifiedDate":"2022-03-16"},{"lineNumber":149,"author":{"gitId":"zxgoh"},"content":"                    return false;","lastModifiedDate":"2022-03-16"},{"lineNumber":150,"author":{"gitId":"zxgoh"},"content":"                }","lastModifiedDate":"2022-03-16"},{"lineNumber":151,"author":{"gitId":"zxgoh"},"content":"            }","lastModifiedDate":"2022-03-16"},{"lineNumber":152,"author":{"gitId":"zxgoh"},"content":"        }","lastModifiedDate":"2022-03-16"},{"lineNumber":153,"author":{"gitId":"zxgoh"},"content":"        return true;","lastModifiedDate":"2022-03-16"},{"lineNumber":154,"author":{"gitId":"zxgoh"},"content":"    }","lastModifiedDate":"2022-03-16"},{"lineNumber":155,"author":{"gitId":"zxgoh"},"content":"}","lastModifiedDate":"2022-03-16"}],"authorContributionMap":{"xzzz3":22,"zxgoh":133}},{"path":"src/main/java/seedu/address/model/order/exception/DuplicateOrderException.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"xzzz3"},"content":"package seedu.address.model.order.exception;","lastModifiedDate":"2022-03-28"},{"lineNumber":2,"author":{"gitId":"xzzz3"},"content":"","lastModifiedDate":"2022-03-28"},{"lineNumber":3,"author":{"gitId":"xzzz3"},"content":"/**","lastModifiedDate":"2022-03-28"},{"lineNumber":4,"author":{"gitId":"xzzz3"},"content":" * Signals that the operation will result in duplicate Orders (Orders are considered duplicates if they have the same","lastModifiedDate":"2022-03-28"},{"lineNumber":5,"author":{"gitId":"xzzz3"},"content":" * order number).","lastModifiedDate":"2022-03-28"},{"lineNumber":6,"author":{"gitId":"xzzz3"},"content":" */","lastModifiedDate":"2022-03-28"},{"lineNumber":7,"author":{"gitId":"xzzz3"},"content":"public class DuplicateOrderException extends RuntimeException {","lastModifiedDate":"2022-03-28"},{"lineNumber":8,"author":{"gitId":"xzzz3"},"content":"    public DuplicateOrderException() {","lastModifiedDate":"2022-03-28"},{"lineNumber":9,"author":{"gitId":"xzzz3"},"content":"        super(\"Operation would result in duplicate orders\");","lastModifiedDate":"2022-03-28"},{"lineNumber":10,"author":{"gitId":"xzzz3"},"content":"    }","lastModifiedDate":"2022-03-28"},{"lineNumber":11,"author":{"gitId":"xzzz3"},"content":"}","lastModifiedDate":"2022-03-28"}],"authorContributionMap":{"xzzz3":11}},{"path":"src/main/java/seedu/address/model/order/exception/NoFreeDriverException.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"xzzz3"},"content":"package seedu.address.model.order.exception;","lastModifiedDate":"2022-03-17"},{"lineNumber":2,"author":{"gitId":"xzzz3"},"content":"","lastModifiedDate":"2022-03-17"},{"lineNumber":3,"author":{"gitId":"xzzz3"},"content":"/**","lastModifiedDate":"2022-03-17"},{"lineNumber":4,"author":{"gitId":"xzzz3"},"content":" * Signals that the operation is unable to find a free driver at the time.","lastModifiedDate":"2022-03-17"},{"lineNumber":5,"author":{"gitId":"xzzz3"},"content":" */","lastModifiedDate":"2022-03-17"},{"lineNumber":6,"author":{"gitId":"xzzz3"},"content":"public class NoFreeDriverException extends RuntimeException {}","lastModifiedDate":"2022-03-17"}],"authorContributionMap":{"xzzz3":6}},{"path":"src/main/java/seedu/address/model/order/exception/NoSuchOrderStatusException.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"xzzz3"},"content":"package seedu.address.model.order.exception;","lastModifiedDate":"2022-03-28"},{"lineNumber":2,"author":{"gitId":"xzzz3"},"content":"","lastModifiedDate":"2022-03-28"},{"lineNumber":3,"author":{"gitId":"xzzz3"},"content":"/**","lastModifiedDate":"2022-03-28"},{"lineNumber":4,"author":{"gitId":"xzzz3"},"content":" * Signals that the operation is unable to find the specific order status.","lastModifiedDate":"2022-03-28"},{"lineNumber":5,"author":{"gitId":"xzzz3"},"content":" */","lastModifiedDate":"2022-03-28"},{"lineNumber":6,"author":{"gitId":"xzzz3"},"content":"public class NoSuchOrderStatusException extends RuntimeException {}","lastModifiedDate":"2022-03-28"}],"authorContributionMap":{"xzzz3":6}},{"path":"src/main/java/seedu/address/model/order/exception/OrderNotFoundException.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"xzzz3"},"content":"package seedu.address.model.order.exception;","lastModifiedDate":"2022-03-28"},{"lineNumber":2,"author":{"gitId":"xzzz3"},"content":"","lastModifiedDate":"2022-03-28"},{"lineNumber":3,"author":{"gitId":"xzzz3"},"content":"/**","lastModifiedDate":"2022-03-28"},{"lineNumber":4,"author":{"gitId":"xzzz3"},"content":" * Signals that the operation is unable to find the specified order.","lastModifiedDate":"2022-03-28"},{"lineNumber":5,"author":{"gitId":"xzzz3"},"content":" */","lastModifiedDate":"2022-03-28"},{"lineNumber":6,"author":{"gitId":"xzzz3"},"content":"public class OrderNotFoundException extends RuntimeException {}","lastModifiedDate":"2022-03-28"}],"authorContributionMap":{"xzzz3":6}},{"path":"src/main/java/seedu/address/model/util/SampleDataUtil.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.model.util;","lastModifiedDate":"2016-12-20"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-20"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.util.Arrays;","lastModifiedDate":"2022-03-30"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import java.util.Set;","lastModifiedDate":"2022-03-16"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.util.stream.Collectors;","lastModifiedDate":"2022-03-30"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-03-16"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import seedu.address.model.AddressBook;","lastModifiedDate":"2016-12-20"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import seedu.address.model.ReadOnlyAddressBook;","lastModifiedDate":"2016-12-20"},{"lineNumber":9,"author":{"gitId":"zxgoh"},"content":"import seedu.address.model.customer.AddressCustomer;","lastModifiedDate":"2022-03-15"},{"lineNumber":10,"author":{"gitId":"zxgoh"},"content":"import seedu.address.model.customer.Customer;","lastModifiedDate":"2022-03-14"},{"lineNumber":11,"author":{"gitId":"zxgoh"},"content":"import seedu.address.model.customer.NameCustomer;","lastModifiedDate":"2022-03-15"},{"lineNumber":12,"author":{"gitId":"zxgoh"},"content":"import seedu.address.model.customer.PhoneCustomer;","lastModifiedDate":"2022-03-15"},{"lineNumber":13,"author":{"gitId":"hieunm1821"},"content":"import seedu.address.model.dish.Dish;","lastModifiedDate":"2022-03-30"},{"lineNumber":14,"author":{"gitId":"hieunm1821"},"content":"import seedu.address.model.dish.NameDish;","lastModifiedDate":"2022-03-30"},{"lineNumber":15,"author":{"gitId":"hieunm1821"},"content":"import seedu.address.model.dish.PriceDish;","lastModifiedDate":"2022-03-30"},{"lineNumber":16,"author":{"gitId":"hieunm1821"},"content":"import seedu.address.model.driver.Driver;","lastModifiedDate":"2022-03-30"},{"lineNumber":17,"author":{"gitId":"hieunm1821"},"content":"import seedu.address.model.driver.DriverStatus;","lastModifiedDate":"2022-03-31"},{"lineNumber":18,"author":{"gitId":"hieunm1821"},"content":"import seedu.address.model.driver.NameDriver;","lastModifiedDate":"2022-03-30"},{"lineNumber":19,"author":{"gitId":"hieunm1821"},"content":"import seedu.address.model.driver.PhoneDriver;","lastModifiedDate":"2022-03-30"},{"lineNumber":20,"author":{"gitId":"hieunm1821"},"content":"import seedu.address.model.order.Order;","lastModifiedDate":"2022-03-30"},{"lineNumber":21,"author":{"gitId":"-"},"content":"import seedu.address.model.tag.Tag;","lastModifiedDate":"2022-03-16"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-20"},{"lineNumber":23,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-08-16"},{"lineNumber":24,"author":{"gitId":"-"},"content":" * Contains utility methods for populating {@code AddressBook} with sample data.","lastModifiedDate":"2017-08-16"},{"lineNumber":25,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-08-16"},{"lineNumber":26,"author":{"gitId":"-"},"content":"public class SampleDataUtil {","lastModifiedDate":"2016-12-20"},{"lineNumber":27,"author":{"gitId":"zxgoh"},"content":"    public static Customer[] getSampleCustomers() {","lastModifiedDate":"2022-03-14"},{"lineNumber":28,"author":{"gitId":"zxgoh"},"content":"        return new Customer[] {","lastModifiedDate":"2022-03-14"},{"lineNumber":29,"author":{"gitId":"hieunm1821"},"content":"            new Customer(new NameCustomer(\"Alex Yeoh\"), new PhoneCustomer(\"98765432\"),","lastModifiedDate":"2022-03-30"},{"lineNumber":30,"author":{"gitId":"zxgoh"},"content":"                new AddressCustomer(\"Blk 30 Geylang Street 29, #06-40\")),","lastModifiedDate":"2022-03-15"},{"lineNumber":31,"author":{"gitId":"zxgoh"},"content":"            new Customer(new NameCustomer(\"Bernice Yu\"), new PhoneCustomer(\"81232231\"),","lastModifiedDate":"2022-03-31"},{"lineNumber":32,"author":{"gitId":"zxgoh"},"content":"                new AddressCustomer(\"Blk 30 Lorong 3 Serangoon Gardens, #07-18\")),","lastModifiedDate":"2022-03-15"},{"lineNumber":33,"author":{"gitId":"hieunm1821"},"content":"            new Customer(new NameCustomer(\"Charlotte Oliveiro\"), new PhoneCustomer(\"88887777\"),","lastModifiedDate":"2022-03-30"},{"lineNumber":34,"author":{"gitId":"hieunm1821"},"content":"                new AddressCustomer(\"Blk 11 Ang Mo Kio Street 74, #11-04\"))","lastModifiedDate":"2022-03-30"},{"lineNumber":35,"author":{"gitId":"hieunm1821"},"content":"        };","lastModifiedDate":"2022-03-30"},{"lineNumber":36,"author":{"gitId":"hieunm1821"},"content":"    }","lastModifiedDate":"2022-03-30"},{"lineNumber":37,"author":{"gitId":"hieunm1821"},"content":"","lastModifiedDate":"2022-03-30"},{"lineNumber":38,"author":{"gitId":"hieunm1821"},"content":"    public static Dish[] getSampleDishes() {","lastModifiedDate":"2022-03-30"},{"lineNumber":39,"author":{"gitId":"hieunm1821"},"content":"        return new Dish[] {","lastModifiedDate":"2022-03-30"},{"lineNumber":40,"author":{"gitId":"hieunm1821"},"content":"            new Dish(new NameDish(\"Fries\"), new PriceDish(\"3.50\")),","lastModifiedDate":"2022-03-30"},{"lineNumber":41,"author":{"gitId":"hieunm1821"},"content":"            new Dish(new NameDish(\"Pizza\"), new PriceDish(\"10.00\")),","lastModifiedDate":"2022-03-30"},{"lineNumber":42,"author":{"gitId":"hieunm1821"},"content":"            new Dish(new NameDish(\"Chicken Nuggets\"), new PriceDish(\"8.00\")),","lastModifiedDate":"2022-03-30"},{"lineNumber":43,"author":{"gitId":"hieunm1821"},"content":"            new Dish(new NameDish(\"Burger\"), new PriceDish(\"5.50\")),","lastModifiedDate":"2022-03-30"},{"lineNumber":44,"author":{"gitId":"hieunm1821"},"content":"            new Dish(new NameDish(\"Coke\"), new PriceDish(\"1.50\")),","lastModifiedDate":"2022-03-30"},{"lineNumber":45,"author":{"gitId":"hieunm1821"},"content":"            new Dish(new NameDish(\"Lemon Juice\"), new PriceDish(\"1.00\"))","lastModifiedDate":"2022-03-30"},{"lineNumber":46,"author":{"gitId":"hieunm1821"},"content":"        };","lastModifiedDate":"2022-03-30"},{"lineNumber":47,"author":{"gitId":"hieunm1821"},"content":"    }","lastModifiedDate":"2022-03-30"},{"lineNumber":48,"author":{"gitId":"hieunm1821"},"content":"","lastModifiedDate":"2022-03-30"},{"lineNumber":49,"author":{"gitId":"hieunm1821"},"content":"    public static Driver[] getSampleDrivers() {","lastModifiedDate":"2022-03-30"},{"lineNumber":50,"author":{"gitId":"hieunm1821"},"content":"        return new Driver[] {","lastModifiedDate":"2022-03-30"},{"lineNumber":51,"author":{"gitId":"zxgoh"},"content":"            new Driver(new NameDriver(\"Adam\"), new PhoneDriver(\"88993823\")),","lastModifiedDate":"2022-03-31"},{"lineNumber":52,"author":{"gitId":"zxgoh"},"content":"            new Driver(new NameDriver(\"Joe\"), new PhoneDriver(\"91232323\")),","lastModifiedDate":"2022-03-31"},{"lineNumber":53,"author":{"gitId":"zxgoh"},"content":"            new Driver(new NameDriver(\"Eva\"), new PhoneDriver(\"81923823\"))","lastModifiedDate":"2022-03-31"},{"lineNumber":54,"author":{"gitId":"-"},"content":"        };","lastModifiedDate":"2016-12-20"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-20"},{"lineNumber":56,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-20"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    public static ReadOnlyAddressBook getSampleAddressBook() {","lastModifiedDate":"2016-12-20"},{"lineNumber":58,"author":{"gitId":"-"},"content":"        AddressBook sampleAb \u003d new AddressBook();","lastModifiedDate":"2017-04-07"},{"lineNumber":59,"author":{"gitId":"zxgoh"},"content":"        for (Customer sampleCustomer : getSampleCustomers()) {","lastModifiedDate":"2022-03-14"},{"lineNumber":60,"author":{"gitId":"zxgoh"},"content":"            sampleAb.addCustomer(sampleCustomer);","lastModifiedDate":"2022-03-14"},{"lineNumber":61,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-12-20"},{"lineNumber":62,"author":{"gitId":"hieunm1821"},"content":"        for (Dish sampleDish : getSampleDishes()) {","lastModifiedDate":"2022-03-30"},{"lineNumber":63,"author":{"gitId":"hieunm1821"},"content":"            sampleAb.addDish(sampleDish);","lastModifiedDate":"2022-03-30"},{"lineNumber":64,"author":{"gitId":"hieunm1821"},"content":"        }","lastModifiedDate":"2022-03-30"},{"lineNumber":65,"author":{"gitId":"hieunm1821"},"content":"        for (Driver sampleDrive : getSampleDrivers()) {","lastModifiedDate":"2022-03-30"},{"lineNumber":66,"author":{"gitId":"hieunm1821"},"content":"            sampleAb.addDriver(sampleDrive);","lastModifiedDate":"2022-03-30"},{"lineNumber":67,"author":{"gitId":"hieunm1821"},"content":"        }","lastModifiedDate":"2022-03-30"},{"lineNumber":68,"author":{"gitId":"hieunm1821"},"content":"        sampleAb.getDriverList().get(2).setStatus(DriverStatus.ABSENT);","lastModifiedDate":"2022-03-31"},{"lineNumber":69,"author":{"gitId":"hieunm1821"},"content":"","lastModifiedDate":"2022-03-31"},{"lineNumber":70,"author":{"gitId":"hieunm1821"},"content":"        sampleAb.addOrder(new Order(sampleAb.getCustomerList().get(0), sampleAb.getDriverList().get(0),","lastModifiedDate":"2022-03-31"},{"lineNumber":71,"author":{"gitId":"hieunm1821"},"content":"                sampleAb.getDishList().get(0), sampleAb.getDishList().get(1), sampleAb.getDishList().get(5)));","lastModifiedDate":"2022-03-31"},{"lineNumber":72,"author":{"gitId":"hieunm1821"},"content":"        sampleAb.getOrderList().get(0).updateStatus(\"delivered\");","lastModifiedDate":"2022-03-31"},{"lineNumber":73,"author":{"gitId":"hieunm1821"},"content":"","lastModifiedDate":"2022-03-31"},{"lineNumber":74,"author":{"gitId":"hieunm1821"},"content":"        sampleAb.addOrder(new Order(sampleAb.getCustomerList().get(2), sampleAb.getDriverList().get(1),","lastModifiedDate":"2022-03-31"},{"lineNumber":75,"author":{"gitId":"hieunm1821"},"content":"                sampleAb.getDishList().get(3), sampleAb.getDishList().get(2), sampleAb.getDishList().get(4)));","lastModifiedDate":"2022-03-31"},{"lineNumber":76,"author":{"gitId":"hieunm1821"},"content":"","lastModifiedDate":"2022-03-31"},{"lineNumber":77,"author":{"gitId":"hieunm1821"},"content":"        sampleAb.addOrder(new Order(sampleAb.getCustomerList().get(1), sampleAb.getDriverList().get(0),","lastModifiedDate":"2022-03-31"},{"lineNumber":78,"author":{"gitId":"hieunm1821"},"content":"                sampleAb.getDishList().get(0), sampleAb.getDishList().get(5)));","lastModifiedDate":"2022-03-31"},{"lineNumber":79,"author":{"gitId":"hieunm1821"},"content":"        sampleAb.getOrderList().get(2).updateStatus(\"cancelled\");","lastModifiedDate":"2022-03-31"},{"lineNumber":80,"author":{"gitId":"-"},"content":"        return sampleAb;","lastModifiedDate":"2017-04-07"},{"lineNumber":81,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-20"},{"lineNumber":82,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-14"},{"lineNumber":83,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2022-03-30"},{"lineNumber":84,"author":{"gitId":"-"},"content":"     * Returns a tag set containing the list of strings given.","lastModifiedDate":"2022-03-30"},{"lineNumber":85,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2022-03-30"},{"lineNumber":86,"author":{"gitId":"-"},"content":"    public static Set\u003cTag\u003e getTagSet(String... strings) {","lastModifiedDate":"2022-03-30"},{"lineNumber":87,"author":{"gitId":"-"},"content":"        return Arrays.stream(strings)","lastModifiedDate":"2022-03-30"},{"lineNumber":88,"author":{"gitId":"-"},"content":"                .map(Tag::new)","lastModifiedDate":"2022-03-30"},{"lineNumber":89,"author":{"gitId":"-"},"content":"                .collect(Collectors.toSet());","lastModifiedDate":"2022-03-30"},{"lineNumber":90,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2022-03-16"},{"lineNumber":91,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-03-30"},{"lineNumber":92,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-12-20"}],"authorContributionMap":{"hieunm1821":45,"-":33,"zxgoh":14}},{"path":"src/main/java/seedu/address/storage/JsonAdaptedCustomer.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"zxgoh"},"content":"package seedu.address.storage;","lastModifiedDate":"2022-03-14"},{"lineNumber":2,"author":{"gitId":"zxgoh"},"content":"","lastModifiedDate":"2022-03-14"},{"lineNumber":3,"author":{"gitId":"zxgoh"},"content":"import com.fasterxml.jackson.annotation.JsonCreator;","lastModifiedDate":"2022-03-14"},{"lineNumber":4,"author":{"gitId":"zxgoh"},"content":"import com.fasterxml.jackson.annotation.JsonProperty;","lastModifiedDate":"2022-03-14"},{"lineNumber":5,"author":{"gitId":"zxgoh"},"content":"","lastModifiedDate":"2022-03-14"},{"lineNumber":6,"author":{"gitId":"zxgoh"},"content":"import seedu.address.commons.exceptions.IllegalValueException;","lastModifiedDate":"2022-03-14"},{"lineNumber":7,"author":{"gitId":"zxgoh"},"content":"import seedu.address.model.customer.AddressCustomer;","lastModifiedDate":"2022-03-15"},{"lineNumber":8,"author":{"gitId":"zxgoh"},"content":"import seedu.address.model.customer.Customer;","lastModifiedDate":"2022-03-14"},{"lineNumber":9,"author":{"gitId":"zxgoh"},"content":"import seedu.address.model.customer.NameCustomer;","lastModifiedDate":"2022-03-15"},{"lineNumber":10,"author":{"gitId":"zxgoh"},"content":"import seedu.address.model.customer.PhoneCustomer;","lastModifiedDate":"2022-03-15"},{"lineNumber":11,"author":{"gitId":"zxgoh"},"content":"","lastModifiedDate":"2022-03-14"},{"lineNumber":12,"author":{"gitId":"zxgoh"},"content":"/**","lastModifiedDate":"2022-03-14"},{"lineNumber":13,"author":{"gitId":"zxgoh"},"content":" * Jackson-friendly version of {@link Customer}.","lastModifiedDate":"2022-03-14"},{"lineNumber":14,"author":{"gitId":"zxgoh"},"content":" */","lastModifiedDate":"2022-03-14"},{"lineNumber":15,"author":{"gitId":"zxgoh"},"content":"class JsonAdaptedCustomer {","lastModifiedDate":"2022-03-14"},{"lineNumber":16,"author":{"gitId":"zxgoh"},"content":"","lastModifiedDate":"2022-03-14"},{"lineNumber":17,"author":{"gitId":"zxgoh"},"content":"    public static final String MISSING_FIELD_MESSAGE_FORMAT \u003d \"Customer\u0027s %s field is missing!\";","lastModifiedDate":"2022-03-14"},{"lineNumber":18,"author":{"gitId":"zxgoh"},"content":"","lastModifiedDate":"2022-03-14"},{"lineNumber":19,"author":{"gitId":"zxgoh"},"content":"    private final String name;","lastModifiedDate":"2022-03-14"},{"lineNumber":20,"author":{"gitId":"zxgoh"},"content":"    private final String phone;","lastModifiedDate":"2022-03-14"},{"lineNumber":21,"author":{"gitId":"zxgoh"},"content":"    private final String address;","lastModifiedDate":"2022-03-14"},{"lineNumber":22,"author":{"gitId":"zxgoh"},"content":"","lastModifiedDate":"2022-03-14"},{"lineNumber":23,"author":{"gitId":"zxgoh"},"content":"    /**","lastModifiedDate":"2022-03-14"},{"lineNumber":24,"author":{"gitId":"zxgoh"},"content":"     * Constructs a {@code JsonAdaptedCustomer} with the given customer details.","lastModifiedDate":"2022-03-14"},{"lineNumber":25,"author":{"gitId":"zxgoh"},"content":"     */","lastModifiedDate":"2022-03-14"},{"lineNumber":26,"author":{"gitId":"zxgoh"},"content":"    @JsonCreator","lastModifiedDate":"2022-03-14"},{"lineNumber":27,"author":{"gitId":"zxgoh"},"content":"    public JsonAdaptedCustomer(@JsonProperty(\"name\") String name, @JsonProperty(\"phone\") String phone,","lastModifiedDate":"2022-03-14"},{"lineNumber":28,"author":{"gitId":"zxgoh"},"content":"                             @JsonProperty(\"address\") String address) {","lastModifiedDate":"2022-03-14"},{"lineNumber":29,"author":{"gitId":"zxgoh"},"content":"        this.name \u003d name;","lastModifiedDate":"2022-03-14"},{"lineNumber":30,"author":{"gitId":"zxgoh"},"content":"        this.phone \u003d phone;","lastModifiedDate":"2022-03-14"},{"lineNumber":31,"author":{"gitId":"zxgoh"},"content":"        this.address \u003d address;","lastModifiedDate":"2022-03-14"},{"lineNumber":32,"author":{"gitId":"zxgoh"},"content":"","lastModifiedDate":"2022-03-14"},{"lineNumber":33,"author":{"gitId":"zxgoh"},"content":"    }","lastModifiedDate":"2022-03-14"},{"lineNumber":34,"author":{"gitId":"zxgoh"},"content":"","lastModifiedDate":"2022-03-14"},{"lineNumber":35,"author":{"gitId":"zxgoh"},"content":"    /**","lastModifiedDate":"2022-03-14"},{"lineNumber":36,"author":{"gitId":"zxgoh"},"content":"     * Converts a given {@code Customer} into this class for Jackson use.","lastModifiedDate":"2022-03-14"},{"lineNumber":37,"author":{"gitId":"zxgoh"},"content":"     */","lastModifiedDate":"2022-03-14"},{"lineNumber":38,"author":{"gitId":"zxgoh"},"content":"    public JsonAdaptedCustomer(Customer source) {","lastModifiedDate":"2022-03-14"},{"lineNumber":39,"author":{"gitId":"zxgoh"},"content":"        name \u003d source.getName().fullName;","lastModifiedDate":"2022-03-14"},{"lineNumber":40,"author":{"gitId":"zxgoh"},"content":"        phone \u003d source.getPhone().value;","lastModifiedDate":"2022-03-14"},{"lineNumber":41,"author":{"gitId":"zxgoh"},"content":"        address \u003d source.getAddress().value;","lastModifiedDate":"2022-03-14"},{"lineNumber":42,"author":{"gitId":"zxgoh"},"content":"    }","lastModifiedDate":"2022-03-14"},{"lineNumber":43,"author":{"gitId":"zxgoh"},"content":"","lastModifiedDate":"2022-03-14"},{"lineNumber":44,"author":{"gitId":"zxgoh"},"content":"    /**","lastModifiedDate":"2022-03-14"},{"lineNumber":45,"author":{"gitId":"zxgoh"},"content":"     * Converts this Jackson-friendly adapted customer object into the model\u0027s {@code Customer} object.","lastModifiedDate":"2022-03-14"},{"lineNumber":46,"author":{"gitId":"zxgoh"},"content":"     *","lastModifiedDate":"2022-03-14"},{"lineNumber":47,"author":{"gitId":"zxgoh"},"content":"     * @throws IllegalValueException if there were any data constraints violated in the adapted customer.","lastModifiedDate":"2022-03-14"},{"lineNumber":48,"author":{"gitId":"zxgoh"},"content":"     */","lastModifiedDate":"2022-03-14"},{"lineNumber":49,"author":{"gitId":"zxgoh"},"content":"    public Customer toModelType() throws IllegalValueException {","lastModifiedDate":"2022-03-14"},{"lineNumber":50,"author":{"gitId":"zxgoh"},"content":"","lastModifiedDate":"2022-03-14"},{"lineNumber":51,"author":{"gitId":"zxgoh"},"content":"        if (name \u003d\u003d null) {","lastModifiedDate":"2022-03-14"},{"lineNumber":52,"author":{"gitId":"zxgoh"},"content":"            throw new IllegalValueException(String.format(MISSING_FIELD_MESSAGE_FORMAT,","lastModifiedDate":"2022-03-16"},{"lineNumber":53,"author":{"gitId":"zxgoh"},"content":"                    NameCustomer.class.getSimpleName()));","lastModifiedDate":"2022-03-16"},{"lineNumber":54,"author":{"gitId":"zxgoh"},"content":"        }","lastModifiedDate":"2022-03-14"},{"lineNumber":55,"author":{"gitId":"zxgoh"},"content":"        if (!NameCustomer.isValidName(name)) {","lastModifiedDate":"2022-03-15"},{"lineNumber":56,"author":{"gitId":"zxgoh"},"content":"            throw new IllegalValueException(NameCustomer.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2022-03-15"},{"lineNumber":57,"author":{"gitId":"zxgoh"},"content":"        }","lastModifiedDate":"2022-03-14"},{"lineNumber":58,"author":{"gitId":"zxgoh"},"content":"        final NameCustomer modelNameCustomer \u003d new NameCustomer(name);","lastModifiedDate":"2022-03-15"},{"lineNumber":59,"author":{"gitId":"zxgoh"},"content":"","lastModifiedDate":"2022-03-14"},{"lineNumber":60,"author":{"gitId":"zxgoh"},"content":"        if (phone \u003d\u003d null) {","lastModifiedDate":"2022-03-14"},{"lineNumber":61,"author":{"gitId":"zxgoh"},"content":"            throw new IllegalValueException(String.format(MISSING_FIELD_MESSAGE_FORMAT,","lastModifiedDate":"2022-03-16"},{"lineNumber":62,"author":{"gitId":"zxgoh"},"content":"                    PhoneCustomer.class.getSimpleName()));","lastModifiedDate":"2022-03-16"},{"lineNumber":63,"author":{"gitId":"zxgoh"},"content":"        }","lastModifiedDate":"2022-03-14"},{"lineNumber":64,"author":{"gitId":"zxgoh"},"content":"        if (!PhoneCustomer.isValidPhone(phone)) {","lastModifiedDate":"2022-03-15"},{"lineNumber":65,"author":{"gitId":"zxgoh"},"content":"            throw new IllegalValueException(PhoneCustomer.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2022-03-15"},{"lineNumber":66,"author":{"gitId":"zxgoh"},"content":"        }","lastModifiedDate":"2022-03-14"},{"lineNumber":67,"author":{"gitId":"zxgoh"},"content":"        final PhoneCustomer modelPhoneCustomer \u003d new PhoneCustomer(phone);","lastModifiedDate":"2022-03-15"},{"lineNumber":68,"author":{"gitId":"zxgoh"},"content":"","lastModifiedDate":"2022-03-14"},{"lineNumber":69,"author":{"gitId":"zxgoh"},"content":"        if (address \u003d\u003d null) {","lastModifiedDate":"2022-03-14"},{"lineNumber":70,"author":{"gitId":"zxgoh"},"content":"            throw new IllegalValueException(String.format(MISSING_FIELD_MESSAGE_FORMAT,","lastModifiedDate":"2022-03-16"},{"lineNumber":71,"author":{"gitId":"zxgoh"},"content":"                    AddressCustomer.class.getSimpleName()));","lastModifiedDate":"2022-03-16"},{"lineNumber":72,"author":{"gitId":"zxgoh"},"content":"        }","lastModifiedDate":"2022-03-14"},{"lineNumber":73,"author":{"gitId":"zxgoh"},"content":"        if (!AddressCustomer.isValidAddress(address)) {","lastModifiedDate":"2022-03-15"},{"lineNumber":74,"author":{"gitId":"zxgoh"},"content":"            throw new IllegalValueException(AddressCustomer.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2022-03-15"},{"lineNumber":75,"author":{"gitId":"zxgoh"},"content":"        }","lastModifiedDate":"2022-03-14"},{"lineNumber":76,"author":{"gitId":"zxgoh"},"content":"        final AddressCustomer modelAddressCustomer \u003d new AddressCustomer(address);","lastModifiedDate":"2022-03-15"},{"lineNumber":77,"author":{"gitId":"zxgoh"},"content":"","lastModifiedDate":"2022-03-14"},{"lineNumber":78,"author":{"gitId":"zxgoh"},"content":"        return new Customer(modelNameCustomer, modelPhoneCustomer, modelAddressCustomer);","lastModifiedDate":"2022-03-15"},{"lineNumber":79,"author":{"gitId":"zxgoh"},"content":"    }","lastModifiedDate":"2022-03-14"},{"lineNumber":80,"author":{"gitId":"zxgoh"},"content":"","lastModifiedDate":"2022-03-14"},{"lineNumber":81,"author":{"gitId":"zxgoh"},"content":"}","lastModifiedDate":"2022-03-14"}],"authorContributionMap":{"zxgoh":81}},{"path":"src/main/java/seedu/address/storage/JsonAdaptedDish.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"jaegarpoon"},"content":"package seedu.address.storage;","lastModifiedDate":"2022-03-11"},{"lineNumber":2,"author":{"gitId":"jaegarpoon"},"content":"","lastModifiedDate":"2022-03-11"},{"lineNumber":3,"author":{"gitId":"jaegarpoon"},"content":"import com.fasterxml.jackson.annotation.JsonCreator;","lastModifiedDate":"2022-03-11"},{"lineNumber":4,"author":{"gitId":"jaegarpoon"},"content":"import com.fasterxml.jackson.annotation.JsonProperty;","lastModifiedDate":"2022-03-11"},{"lineNumber":5,"author":{"gitId":"jaegarpoon"},"content":"","lastModifiedDate":"2022-03-11"},{"lineNumber":6,"author":{"gitId":"jaegarpoon"},"content":"import seedu.address.commons.exceptions.IllegalValueException;","lastModifiedDate":"2022-03-11"},{"lineNumber":7,"author":{"gitId":"jaegarpoon"},"content":"import seedu.address.model.dish.Dish;","lastModifiedDate":"2022-03-24"},{"lineNumber":8,"author":{"gitId":"jaegarpoon"},"content":"import seedu.address.model.dish.NameDish;","lastModifiedDate":"2022-03-27"},{"lineNumber":9,"author":{"gitId":"jaegarpoon"},"content":"import seedu.address.model.dish.PriceDish;","lastModifiedDate":"2022-03-27"},{"lineNumber":10,"author":{"gitId":"jaegarpoon"},"content":"import seedu.address.model.item.Person;","lastModifiedDate":"2022-03-11"},{"lineNumber":11,"author":{"gitId":"jaegarpoon"},"content":"","lastModifiedDate":"2022-03-11"},{"lineNumber":12,"author":{"gitId":"jaegarpoon"},"content":"/**","lastModifiedDate":"2022-03-11"},{"lineNumber":13,"author":{"gitId":"jaegarpoon"},"content":" * Jackson-friendly version of {@link Person}.","lastModifiedDate":"2022-03-11"},{"lineNumber":14,"author":{"gitId":"jaegarpoon"},"content":" */","lastModifiedDate":"2022-03-11"},{"lineNumber":15,"author":{"gitId":"jaegarpoon"},"content":"class JsonAdaptedDish {","lastModifiedDate":"2022-03-11"},{"lineNumber":16,"author":{"gitId":"jaegarpoon"},"content":"","lastModifiedDate":"2022-03-11"},{"lineNumber":17,"author":{"gitId":"jaegarpoon"},"content":"    public static final String MISSING_FIELD_MESSAGE_FORMAT \u003d \"Dish\u0027s %s field is missing!\";","lastModifiedDate":"2022-03-11"},{"lineNumber":18,"author":{"gitId":"jaegarpoon"},"content":"","lastModifiedDate":"2022-03-11"},{"lineNumber":19,"author":{"gitId":"jaegarpoon"},"content":"    private final String name;","lastModifiedDate":"2022-03-11"},{"lineNumber":20,"author":{"gitId":"jaegarpoon"},"content":"    private final String price;","lastModifiedDate":"2022-03-27"},{"lineNumber":21,"author":{"gitId":"jaegarpoon"},"content":"","lastModifiedDate":"2022-03-11"},{"lineNumber":22,"author":{"gitId":"jaegarpoon"},"content":"    /**","lastModifiedDate":"2022-03-11"},{"lineNumber":23,"author":{"gitId":"jaegarpoon"},"content":"     * Constructs a {@code JsonAdaptedDish} with the given dish details.","lastModifiedDate":"2022-03-11"},{"lineNumber":24,"author":{"gitId":"jaegarpoon"},"content":"     */","lastModifiedDate":"2022-03-11"},{"lineNumber":25,"author":{"gitId":"jaegarpoon"},"content":"    @JsonCreator","lastModifiedDate":"2022-03-11"},{"lineNumber":26,"author":{"gitId":"jaegarpoon"},"content":"    public JsonAdaptedDish(@JsonProperty(\"name\") String name, @JsonProperty(\"price\") String price) {","lastModifiedDate":"2022-03-27"},{"lineNumber":27,"author":{"gitId":"jaegarpoon"},"content":"        this.name \u003d name;","lastModifiedDate":"2022-03-11"},{"lineNumber":28,"author":{"gitId":"jaegarpoon"},"content":"        this.price \u003d price;","lastModifiedDate":"2022-03-27"},{"lineNumber":29,"author":{"gitId":"jaegarpoon"},"content":"    }","lastModifiedDate":"2022-03-11"},{"lineNumber":30,"author":{"gitId":"jaegarpoon"},"content":"","lastModifiedDate":"2022-03-11"},{"lineNumber":31,"author":{"gitId":"jaegarpoon"},"content":"    /**","lastModifiedDate":"2022-03-11"},{"lineNumber":32,"author":{"gitId":"jaegarpoon"},"content":"     * Converts a given {@code Dish} into this class for Jackson use.","lastModifiedDate":"2022-03-11"},{"lineNumber":33,"author":{"gitId":"jaegarpoon"},"content":"     */","lastModifiedDate":"2022-03-11"},{"lineNumber":34,"author":{"gitId":"jaegarpoon"},"content":"    public JsonAdaptedDish(Dish source) {","lastModifiedDate":"2022-03-11"},{"lineNumber":35,"author":{"gitId":"jaegarpoon"},"content":"        name \u003d source.getName().fullName;","lastModifiedDate":"2022-03-11"},{"lineNumber":36,"author":{"gitId":"jaegarpoon"},"content":"        price \u003d source.getPrice().toString();","lastModifiedDate":"2022-03-27"},{"lineNumber":37,"author":{"gitId":"jaegarpoon"},"content":"    }","lastModifiedDate":"2022-03-11"},{"lineNumber":38,"author":{"gitId":"jaegarpoon"},"content":"","lastModifiedDate":"2022-03-11"},{"lineNumber":39,"author":{"gitId":"jaegarpoon"},"content":"    /**","lastModifiedDate":"2022-03-11"},{"lineNumber":40,"author":{"gitId":"jaegarpoon"},"content":"     * Converts this Jackson-friendly adapted dish object into the model\u0027s {@code Dish} object.","lastModifiedDate":"2022-03-11"},{"lineNumber":41,"author":{"gitId":"jaegarpoon"},"content":"     *","lastModifiedDate":"2022-03-11"},{"lineNumber":42,"author":{"gitId":"jaegarpoon"},"content":"     * @throws IllegalValueException if there were any data constraints violated in the adapted dish.","lastModifiedDate":"2022-03-11"},{"lineNumber":43,"author":{"gitId":"jaegarpoon"},"content":"     */","lastModifiedDate":"2022-03-11"},{"lineNumber":44,"author":{"gitId":"jaegarpoon"},"content":"    public Dish toModelType() throws IllegalValueException {","lastModifiedDate":"2022-03-11"},{"lineNumber":45,"author":{"gitId":"jaegarpoon"},"content":"        if (name \u003d\u003d null) {","lastModifiedDate":"2022-03-11"},{"lineNumber":46,"author":{"gitId":"jaegarpoon"},"content":"            throw new IllegalValueException(String.format(MISSING_FIELD_MESSAGE_FORMAT,","lastModifiedDate":"2022-03-27"},{"lineNumber":47,"author":{"gitId":"jaegarpoon"},"content":"                    NameDish.class.getSimpleName()));","lastModifiedDate":"2022-03-27"},{"lineNumber":48,"author":{"gitId":"jaegarpoon"},"content":"        }","lastModifiedDate":"2022-03-11"},{"lineNumber":49,"author":{"gitId":"jaegarpoon"},"content":"        if (!NameDish.isValidName(name)) {","lastModifiedDate":"2022-03-27"},{"lineNumber":50,"author":{"gitId":"jaegarpoon"},"content":"            throw new IllegalValueException(NameDish.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2022-03-27"},{"lineNumber":51,"author":{"gitId":"jaegarpoon"},"content":"        }","lastModifiedDate":"2022-03-11"},{"lineNumber":52,"author":{"gitId":"jaegarpoon"},"content":"        final NameDish modelName \u003d new NameDish(name);","lastModifiedDate":"2022-03-27"},{"lineNumber":53,"author":{"gitId":"jaegarpoon"},"content":"","lastModifiedDate":"2022-03-11"},{"lineNumber":54,"author":{"gitId":"jaegarpoon"},"content":"        if (price \u003d\u003d null) {","lastModifiedDate":"2022-03-27"},{"lineNumber":55,"author":{"gitId":"jaegarpoon"},"content":"            throw new IllegalValueException(String.format(MISSING_FIELD_MESSAGE_FORMAT,","lastModifiedDate":"2022-03-27"},{"lineNumber":56,"author":{"gitId":"jaegarpoon"},"content":"                    PriceDish.class.getSimpleName()));","lastModifiedDate":"2022-03-27"},{"lineNumber":57,"author":{"gitId":"jaegarpoon"},"content":"        }","lastModifiedDate":"2022-03-27"},{"lineNumber":58,"author":{"gitId":"jaegarpoon"},"content":"        if (!PriceDish.isValidPrice(price)) {","lastModifiedDate":"2022-03-27"},{"lineNumber":59,"author":{"gitId":"jaegarpoon"},"content":"            throw new IllegalValueException(PriceDish.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2022-03-27"},{"lineNumber":60,"author":{"gitId":"jaegarpoon"},"content":"        }","lastModifiedDate":"2022-03-27"},{"lineNumber":61,"author":{"gitId":"jaegarpoon"},"content":"        final PriceDish modelPrice \u003d new PriceDish(price);","lastModifiedDate":"2022-03-27"},{"lineNumber":62,"author":{"gitId":"jaegarpoon"},"content":"","lastModifiedDate":"2022-03-27"},{"lineNumber":63,"author":{"gitId":"jaegarpoon"},"content":"        return new Dish(modelName, modelPrice);","lastModifiedDate":"2022-03-27"},{"lineNumber":64,"author":{"gitId":"jaegarpoon"},"content":"    }","lastModifiedDate":"2022-03-11"},{"lineNumber":65,"author":{"gitId":"jaegarpoon"},"content":"","lastModifiedDate":"2022-03-11"},{"lineNumber":66,"author":{"gitId":"jaegarpoon"},"content":"}","lastModifiedDate":"2022-03-11"},{"lineNumber":67,"author":{"gitId":"jaegarpoon"},"content":"","lastModifiedDate":"2022-03-11"}],"authorContributionMap":{"jaegarpoon":67}},{"path":"src/main/java/seedu/address/storage/JsonAdaptedDriver.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"hieunm1821"},"content":"package seedu.address.storage;","lastModifiedDate":"2022-03-14"},{"lineNumber":2,"author":{"gitId":"hieunm1821"},"content":"","lastModifiedDate":"2022-03-14"},{"lineNumber":3,"author":{"gitId":"hieunm1821"},"content":"import com.fasterxml.jackson.annotation.JsonCreator;","lastModifiedDate":"2022-03-14"},{"lineNumber":4,"author":{"gitId":"hieunm1821"},"content":"import com.fasterxml.jackson.annotation.JsonProperty;","lastModifiedDate":"2022-03-14"},{"lineNumber":5,"author":{"gitId":"hieunm1821"},"content":"","lastModifiedDate":"2022-03-14"},{"lineNumber":6,"author":{"gitId":"hieunm1821"},"content":"import seedu.address.commons.exceptions.IllegalValueException;","lastModifiedDate":"2022-03-14"},{"lineNumber":7,"author":{"gitId":"hieunm1821"},"content":"import seedu.address.model.driver.Driver;","lastModifiedDate":"2022-03-14"},{"lineNumber":8,"author":{"gitId":"hieunm1821"},"content":"import seedu.address.model.driver.DriverStatus;","lastModifiedDate":"2022-03-27"},{"lineNumber":9,"author":{"gitId":"hieunm1821"},"content":"import seedu.address.model.driver.NameDriver;","lastModifiedDate":"2022-03-14"},{"lineNumber":10,"author":{"gitId":"hieunm1821"},"content":"import seedu.address.model.driver.PhoneDriver;","lastModifiedDate":"2022-03-14"},{"lineNumber":11,"author":{"gitId":"hieunm1821"},"content":"","lastModifiedDate":"2022-03-14"},{"lineNumber":12,"author":{"gitId":"hieunm1821"},"content":"/**","lastModifiedDate":"2022-03-14"},{"lineNumber":13,"author":{"gitId":"hieunm1821"},"content":" * Jackson-friendly version of {@link Driver}.","lastModifiedDate":"2022-03-14"},{"lineNumber":14,"author":{"gitId":"hieunm1821"},"content":" */","lastModifiedDate":"2022-03-14"},{"lineNumber":15,"author":{"gitId":"hieunm1821"},"content":"class JsonAdaptedDriver {","lastModifiedDate":"2022-03-14"},{"lineNumber":16,"author":{"gitId":"hieunm1821"},"content":"","lastModifiedDate":"2022-03-14"},{"lineNumber":17,"author":{"gitId":"hieunm1821"},"content":"    public static final String MISSING_FIELD_MESSAGE_FORMAT \u003d \"Driver\u0027s %s field is missing!\";","lastModifiedDate":"2022-03-14"},{"lineNumber":18,"author":{"gitId":"hieunm1821"},"content":"","lastModifiedDate":"2022-03-14"},{"lineNumber":19,"author":{"gitId":"hieunm1821"},"content":"    private final String name;","lastModifiedDate":"2022-03-14"},{"lineNumber":20,"author":{"gitId":"hieunm1821"},"content":"    private final String phone;","lastModifiedDate":"2022-03-14"},{"lineNumber":21,"author":{"gitId":"xzzz3"},"content":"    private final String status;","lastModifiedDate":"2022-03-17"},{"lineNumber":22,"author":{"gitId":"hieunm1821"},"content":"","lastModifiedDate":"2022-03-14"},{"lineNumber":23,"author":{"gitId":"hieunm1821"},"content":"    /**","lastModifiedDate":"2022-03-14"},{"lineNumber":24,"author":{"gitId":"hieunm1821"},"content":"     * Constructs a {@code JsonAdaptedDriver} with the given dish details.","lastModifiedDate":"2022-03-14"},{"lineNumber":25,"author":{"gitId":"hieunm1821"},"content":"     */","lastModifiedDate":"2022-03-14"},{"lineNumber":26,"author":{"gitId":"hieunm1821"},"content":"    @JsonCreator","lastModifiedDate":"2022-03-14"},{"lineNumber":27,"author":{"gitId":"xzzz3"},"content":"    public JsonAdaptedDriver(@JsonProperty(\"name\") String name, @JsonProperty(\"phone\") String phone,","lastModifiedDate":"2022-03-17"},{"lineNumber":28,"author":{"gitId":"xzzz3"},"content":"                             @JsonProperty(\"status\") String status) {","lastModifiedDate":"2022-03-17"},{"lineNumber":29,"author":{"gitId":"hieunm1821"},"content":"        this.name \u003d name;","lastModifiedDate":"2022-03-14"},{"lineNumber":30,"author":{"gitId":"hieunm1821"},"content":"        this.phone \u003d phone;","lastModifiedDate":"2022-03-14"},{"lineNumber":31,"author":{"gitId":"xzzz3"},"content":"        this.status \u003d status;","lastModifiedDate":"2022-03-17"},{"lineNumber":32,"author":{"gitId":"hieunm1821"},"content":"    }","lastModifiedDate":"2022-03-14"},{"lineNumber":33,"author":{"gitId":"hieunm1821"},"content":"","lastModifiedDate":"2022-03-14"},{"lineNumber":34,"author":{"gitId":"hieunm1821"},"content":"    /**","lastModifiedDate":"2022-03-14"},{"lineNumber":35,"author":{"gitId":"xzzz3"},"content":"     * Converts a given {@code Driver} into this class for Jackson use.","lastModifiedDate":"2022-03-15"},{"lineNumber":36,"author":{"gitId":"hieunm1821"},"content":"     */","lastModifiedDate":"2022-03-14"},{"lineNumber":37,"author":{"gitId":"hieunm1821"},"content":"    public JsonAdaptedDriver(Driver source) {","lastModifiedDate":"2022-03-14"},{"lineNumber":38,"author":{"gitId":"hieunm1821"},"content":"        name \u003d source.getName().fullName;","lastModifiedDate":"2022-03-14"},{"lineNumber":39,"author":{"gitId":"hieunm1821"},"content":"        phone \u003d source.getPhone().value;","lastModifiedDate":"2022-03-14"},{"lineNumber":40,"author":{"gitId":"hieunm1821"},"content":"        status \u003d source.getStatus().name();","lastModifiedDate":"2022-03-27"},{"lineNumber":41,"author":{"gitId":"hieunm1821"},"content":"    }","lastModifiedDate":"2022-03-14"},{"lineNumber":42,"author":{"gitId":"hieunm1821"},"content":"","lastModifiedDate":"2022-03-14"},{"lineNumber":43,"author":{"gitId":"hieunm1821"},"content":"    /**","lastModifiedDate":"2022-03-14"},{"lineNumber":44,"author":{"gitId":"xzzz3"},"content":"     * Converts this Jackson-friendly adapted driver object into the model\u0027s {@code Driver} object.","lastModifiedDate":"2022-03-15"},{"lineNumber":45,"author":{"gitId":"hieunm1821"},"content":"     *","lastModifiedDate":"2022-03-14"},{"lineNumber":46,"author":{"gitId":"xzzz3"},"content":"     * @throws IllegalValueException if there were any data constraints violated in the adapted driver.","lastModifiedDate":"2022-03-15"},{"lineNumber":47,"author":{"gitId":"hieunm1821"},"content":"     */","lastModifiedDate":"2022-03-14"},{"lineNumber":48,"author":{"gitId":"hieunm1821"},"content":"    public Driver toModelType() throws IllegalValueException {","lastModifiedDate":"2022-03-14"},{"lineNumber":49,"author":{"gitId":"hieunm1821"},"content":"        if (name \u003d\u003d null) {","lastModifiedDate":"2022-03-14"},{"lineNumber":50,"author":{"gitId":"hieunm1821"},"content":"            throw new IllegalValueException(String.format(MISSING_FIELD_MESSAGE_FORMAT,","lastModifiedDate":"2022-03-14"},{"lineNumber":51,"author":{"gitId":"hieunm1821"},"content":"                    NameDriver.class.getSimpleName()));","lastModifiedDate":"2022-03-14"},{"lineNumber":52,"author":{"gitId":"hieunm1821"},"content":"        }","lastModifiedDate":"2022-03-14"},{"lineNumber":53,"author":{"gitId":"hieunm1821"},"content":"        if (!NameDriver.isValidName(name)) {","lastModifiedDate":"2022-03-14"},{"lineNumber":54,"author":{"gitId":"hieunm1821"},"content":"            throw new IllegalValueException(NameDriver.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2022-03-14"},{"lineNumber":55,"author":{"gitId":"hieunm1821"},"content":"        }","lastModifiedDate":"2022-03-14"},{"lineNumber":56,"author":{"gitId":"hieunm1821"},"content":"","lastModifiedDate":"2022-03-14"},{"lineNumber":57,"author":{"gitId":"hieunm1821"},"content":"        final NameDriver modelName \u003d new NameDriver(name);","lastModifiedDate":"2022-03-14"},{"lineNumber":58,"author":{"gitId":"hieunm1821"},"content":"","lastModifiedDate":"2022-03-14"},{"lineNumber":59,"author":{"gitId":"hieunm1821"},"content":"        if (phone \u003d\u003d null) {","lastModifiedDate":"2022-03-14"},{"lineNumber":60,"author":{"gitId":"hieunm1821"},"content":"            throw new IllegalValueException(String.format(MISSING_FIELD_MESSAGE_FORMAT,","lastModifiedDate":"2022-03-14"},{"lineNumber":61,"author":{"gitId":"hieunm1821"},"content":"                    PhoneDriver.class.getSimpleName()));","lastModifiedDate":"2022-03-14"},{"lineNumber":62,"author":{"gitId":"hieunm1821"},"content":"        }","lastModifiedDate":"2022-03-14"},{"lineNumber":63,"author":{"gitId":"hieunm1821"},"content":"        if (!PhoneDriver.isValidPhone(phone)) {","lastModifiedDate":"2022-03-14"},{"lineNumber":64,"author":{"gitId":"hieunm1821"},"content":"            throw new IllegalValueException(PhoneDriver.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2022-03-14"},{"lineNumber":65,"author":{"gitId":"hieunm1821"},"content":"        }","lastModifiedDate":"2022-03-14"},{"lineNumber":66,"author":{"gitId":"hieunm1821"},"content":"","lastModifiedDate":"2022-03-14"},{"lineNumber":67,"author":{"gitId":"hieunm1821"},"content":"        final PhoneDriver modelPhone \u003d new PhoneDriver(phone);","lastModifiedDate":"2022-03-14"},{"lineNumber":68,"author":{"gitId":"hieunm1821"},"content":"","lastModifiedDate":"2022-03-14"},{"lineNumber":69,"author":{"gitId":"xzzz3"},"content":"        if (status \u003d\u003d null) {","lastModifiedDate":"2022-03-17"},{"lineNumber":70,"author":{"gitId":"xzzz3"},"content":"            throw new IllegalValueException(String.format(MISSING_FIELD_MESSAGE_FORMAT));","lastModifiedDate":"2022-03-17"},{"lineNumber":71,"author":{"gitId":"xzzz3"},"content":"        }","lastModifiedDate":"2022-03-17"},{"lineNumber":72,"author":{"gitId":"xzzz3"},"content":"","lastModifiedDate":"2022-03-17"},{"lineNumber":73,"author":{"gitId":"hieunm1821"},"content":"        final DriverStatus modelStatus \u003d DriverStatus.valueOf(status);","lastModifiedDate":"2022-03-27"},{"lineNumber":74,"author":{"gitId":"hieunm1821"},"content":"","lastModifiedDate":"2022-03-14"},{"lineNumber":75,"author":{"gitId":"xzzz3"},"content":"        return new Driver(modelName, modelPhone, modelStatus);","lastModifiedDate":"2022-03-17"},{"lineNumber":76,"author":{"gitId":"hieunm1821"},"content":"    }","lastModifiedDate":"2022-03-14"},{"lineNumber":77,"author":{"gitId":"hieunm1821"},"content":"","lastModifiedDate":"2022-03-14"},{"lineNumber":78,"author":{"gitId":"hieunm1821"},"content":"}","lastModifiedDate":"2022-03-14"},{"lineNumber":79,"author":{"gitId":"hieunm1821"},"content":"","lastModifiedDate":"2022-03-14"}],"authorContributionMap":{"hieunm1821":67,"xzzz3":12}},{"path":"src/main/java/seedu/address/storage/JsonAdaptedOrder.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"xzzz3"},"content":"package seedu.address.storage;","lastModifiedDate":"2022-03-15"},{"lineNumber":2,"author":{"gitId":"xzzz3"},"content":"","lastModifiedDate":"2022-03-15"},{"lineNumber":3,"author":{"gitId":"xzzz3"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2022-03-23"},{"lineNumber":4,"author":{"gitId":"xzzz3"},"content":"import java.util.ArrayList;","lastModifiedDate":"2022-03-15"},{"lineNumber":5,"author":{"gitId":"xzzz3"},"content":"","lastModifiedDate":"2022-03-15"},{"lineNumber":6,"author":{"gitId":"xzzz3"},"content":"import com.fasterxml.jackson.annotation.JsonCreator;","lastModifiedDate":"2022-03-15"},{"lineNumber":7,"author":{"gitId":"xzzz3"},"content":"import com.fasterxml.jackson.annotation.JsonProperty;","lastModifiedDate":"2022-03-15"},{"lineNumber":8,"author":{"gitId":"xzzz3"},"content":"","lastModifiedDate":"2022-03-15"},{"lineNumber":9,"author":{"gitId":"xzzz3"},"content":"import seedu.address.commons.exceptions.IllegalValueException;","lastModifiedDate":"2022-03-15"},{"lineNumber":10,"author":{"gitId":"xzzz3"},"content":"import seedu.address.model.customer.AddressCustomer;","lastModifiedDate":"2022-03-17"},{"lineNumber":11,"author":{"gitId":"xzzz3"},"content":"import seedu.address.model.customer.Customer;","lastModifiedDate":"2022-03-17"},{"lineNumber":12,"author":{"gitId":"xzzz3"},"content":"import seedu.address.model.customer.NameCustomer;","lastModifiedDate":"2022-03-17"},{"lineNumber":13,"author":{"gitId":"xzzz3"},"content":"import seedu.address.model.customer.PhoneCustomer;","lastModifiedDate":"2022-03-17"},{"lineNumber":14,"author":{"gitId":"jaegarpoon"},"content":"import seedu.address.model.dish.Dish;","lastModifiedDate":"2022-03-27"},{"lineNumber":15,"author":{"gitId":"jaegarpoon"},"content":"import seedu.address.model.dish.NameDish;","lastModifiedDate":"2022-03-27"},{"lineNumber":16,"author":{"gitId":"jaegarpoon"},"content":"import seedu.address.model.dish.PriceDish;","lastModifiedDate":"2022-03-27"},{"lineNumber":17,"author":{"gitId":"xzzz3"},"content":"import seedu.address.model.driver.Driver;","lastModifiedDate":"2022-03-17"},{"lineNumber":18,"author":{"gitId":"xzzz3"},"content":"import seedu.address.model.driver.NameDriver;","lastModifiedDate":"2022-03-17"},{"lineNumber":19,"author":{"gitId":"xzzz3"},"content":"import seedu.address.model.driver.PhoneDriver;","lastModifiedDate":"2022-03-17"},{"lineNumber":20,"author":{"gitId":"xzzz3"},"content":"import seedu.address.model.order.Order;","lastModifiedDate":"2022-03-15"},{"lineNumber":21,"author":{"gitId":"xzzz3"},"content":"","lastModifiedDate":"2022-03-15"},{"lineNumber":22,"author":{"gitId":"xzzz3"},"content":"/**","lastModifiedDate":"2022-03-15"},{"lineNumber":23,"author":{"gitId":"xzzz3"},"content":" * Jackson-friendly version of {@link Order}.","lastModifiedDate":"2022-03-15"},{"lineNumber":24,"author":{"gitId":"xzzz3"},"content":" */","lastModifiedDate":"2022-03-15"},{"lineNumber":25,"author":{"gitId":"xzzz3"},"content":"class JsonAdaptedOrder {","lastModifiedDate":"2022-03-15"},{"lineNumber":26,"author":{"gitId":"xzzz3"},"content":"","lastModifiedDate":"2022-03-15"},{"lineNumber":27,"author":{"gitId":"xzzz3"},"content":"    public static final String MISSING_FIELD_MESSAGE_FORMAT \u003d \"Order\u0027s %s field is missing!\";","lastModifiedDate":"2022-03-15"},{"lineNumber":28,"author":{"gitId":"jaegarpoon"},"content":"    public static final String INVALID_DISH_MESSAGE \u003d \"Number of dishes and prices are not equal!\";","lastModifiedDate":"2022-03-27"},{"lineNumber":29,"author":{"gitId":"xzzz3"},"content":"","lastModifiedDate":"2022-03-15"},{"lineNumber":30,"author":{"gitId":"xzzz3"},"content":"    private final String customerName;","lastModifiedDate":"2022-03-17"},{"lineNumber":31,"author":{"gitId":"xzzz3"},"content":"    private final String customerPhone;","lastModifiedDate":"2022-03-17"},{"lineNumber":32,"author":{"gitId":"xzzz3"},"content":"    private final String customerAddress;","lastModifiedDate":"2022-03-17"},{"lineNumber":33,"author":{"gitId":"xzzz3"},"content":"    private final String driverName;","lastModifiedDate":"2022-03-17"},{"lineNumber":34,"author":{"gitId":"xzzz3"},"content":"    private final String driverPhone;","lastModifiedDate":"2022-03-17"},{"lineNumber":35,"author":{"gitId":"jaegarpoon"},"content":"    private final ArrayList\u003cString\u003e dishNames;","lastModifiedDate":"2022-03-27"},{"lineNumber":36,"author":{"gitId":"jaegarpoon"},"content":"    private final ArrayList\u003cString\u003e dishPrices;","lastModifiedDate":"2022-03-27"},{"lineNumber":37,"author":{"gitId":"xzzz3"},"content":"    private final LocalDateTime time;","lastModifiedDate":"2022-03-23"},{"lineNumber":38,"author":{"gitId":"xzzz3"},"content":"","lastModifiedDate":"2022-03-15"},{"lineNumber":39,"author":{"gitId":"xzzz3"},"content":"    /**","lastModifiedDate":"2022-03-15"},{"lineNumber":40,"author":{"gitId":"xzzz3"},"content":"     * Constructs a {@code JsonAdaptedOrder} with the given dish details.","lastModifiedDate":"2022-03-15"},{"lineNumber":41,"author":{"gitId":"xzzz3"},"content":"     */","lastModifiedDate":"2022-03-15"},{"lineNumber":42,"author":{"gitId":"xzzz3"},"content":"    @JsonCreator","lastModifiedDate":"2022-03-15"},{"lineNumber":43,"author":{"gitId":"xzzz3"},"content":"    public JsonAdaptedOrder(@JsonProperty(\"customerName\") String customerName,","lastModifiedDate":"2022-03-17"},{"lineNumber":44,"author":{"gitId":"xzzz3"},"content":"                            @JsonProperty(\"customerPhone\") String customerPhone,","lastModifiedDate":"2022-03-17"},{"lineNumber":45,"author":{"gitId":"xzzz3"},"content":"                            @JsonProperty(\"customerAddress\") String customerAddress,","lastModifiedDate":"2022-03-17"},{"lineNumber":46,"author":{"gitId":"xzzz3"},"content":"                            @JsonProperty(\"driverName\") String driverName,","lastModifiedDate":"2022-03-17"},{"lineNumber":47,"author":{"gitId":"xzzz3"},"content":"                            @JsonProperty(\"driverPhone\") String driverPhone,","lastModifiedDate":"2022-03-17"},{"lineNumber":48,"author":{"gitId":"jaegarpoon"},"content":"                            @JsonProperty(\"dishName\") ArrayList\u003cString\u003e dishNames,","lastModifiedDate":"2022-03-27"},{"lineNumber":49,"author":{"gitId":"jaegarpoon"},"content":"                            @JsonProperty(\"dishPrice\") ArrayList\u003cString\u003e dishPrices,","lastModifiedDate":"2022-03-27"},{"lineNumber":50,"author":{"gitId":"xzzz3"},"content":"                            @JsonProperty(\"time\") LocalDateTime time) {","lastModifiedDate":"2022-03-23"},{"lineNumber":51,"author":{"gitId":"xzzz3"},"content":"        this.customerName \u003d customerName;","lastModifiedDate":"2022-03-17"},{"lineNumber":52,"author":{"gitId":"xzzz3"},"content":"        this.customerPhone \u003d customerPhone;","lastModifiedDate":"2022-03-17"},{"lineNumber":53,"author":{"gitId":"xzzz3"},"content":"        this.customerAddress \u003d customerAddress;","lastModifiedDate":"2022-03-17"},{"lineNumber":54,"author":{"gitId":"xzzz3"},"content":"        this.driverName \u003d driverName;","lastModifiedDate":"2022-03-17"},{"lineNumber":55,"author":{"gitId":"xzzz3"},"content":"        this.driverPhone \u003d driverPhone;","lastModifiedDate":"2022-03-17"},{"lineNumber":56,"author":{"gitId":"jaegarpoon"},"content":"        this.dishNames \u003d dishNames;","lastModifiedDate":"2022-03-27"},{"lineNumber":57,"author":{"gitId":"jaegarpoon"},"content":"        this.dishPrices \u003d dishPrices;","lastModifiedDate":"2022-03-27"},{"lineNumber":58,"author":{"gitId":"xzzz3"},"content":"        this.time \u003d time;","lastModifiedDate":"2022-03-23"},{"lineNumber":59,"author":{"gitId":"xzzz3"},"content":"    }","lastModifiedDate":"2022-03-15"},{"lineNumber":60,"author":{"gitId":"xzzz3"},"content":"","lastModifiedDate":"2022-03-15"},{"lineNumber":61,"author":{"gitId":"xzzz3"},"content":"    /**","lastModifiedDate":"2022-03-15"},{"lineNumber":62,"author":{"gitId":"xzzz3"},"content":"     * Converts a given {@code Order} into this class for Jackson use.","lastModifiedDate":"2022-03-15"},{"lineNumber":63,"author":{"gitId":"xzzz3"},"content":"     */","lastModifiedDate":"2022-03-15"},{"lineNumber":64,"author":{"gitId":"xzzz3"},"content":"    public JsonAdaptedOrder(Order source) {","lastModifiedDate":"2022-03-15"},{"lineNumber":65,"author":{"gitId":"xzzz3"},"content":"        customerName \u003d source.getCustomerName();","lastModifiedDate":"2022-03-17"},{"lineNumber":66,"author":{"gitId":"xzzz3"},"content":"        customerPhone \u003d source.getCustomerPhone();","lastModifiedDate":"2022-03-17"},{"lineNumber":67,"author":{"gitId":"xzzz3"},"content":"        customerAddress \u003d source.getCustomerAddress().toString();","lastModifiedDate":"2022-03-17"},{"lineNumber":68,"author":{"gitId":"xzzz3"},"content":"        driverName \u003d source.getDriverName();","lastModifiedDate":"2022-03-17"},{"lineNumber":69,"author":{"gitId":"xzzz3"},"content":"        driverPhone \u003d source.getDriver().getPhone().toString();","lastModifiedDate":"2022-03-17"},{"lineNumber":70,"author":{"gitId":"jaegarpoon"},"content":"        dishNames \u003d new ArrayList\u003cString\u003e();","lastModifiedDate":"2022-03-27"},{"lineNumber":71,"author":{"gitId":"jaegarpoon"},"content":"        dishPrices \u003d new ArrayList\u003cString\u003e();","lastModifiedDate":"2022-03-27"},{"lineNumber":72,"author":{"gitId":"xzzz3"},"content":"        for (Dish dish : source.getDishes()) {","lastModifiedDate":"2022-03-17"},{"lineNumber":73,"author":{"gitId":"jaegarpoon"},"content":"            dishNames.add(dish.toString());","lastModifiedDate":"2022-03-27"},{"lineNumber":74,"author":{"gitId":"jaegarpoon"},"content":"            dishPrices.add(dish.getPrice().toString());","lastModifiedDate":"2022-03-27"},{"lineNumber":75,"author":{"gitId":"xzzz3"},"content":"        }","lastModifiedDate":"2022-03-17"},{"lineNumber":76,"author":{"gitId":"xzzz3"},"content":"        time \u003d source.getTime();","lastModifiedDate":"2022-03-23"},{"lineNumber":77,"author":{"gitId":"xzzz3"},"content":"    }","lastModifiedDate":"2022-03-15"},{"lineNumber":78,"author":{"gitId":"xzzz3"},"content":"","lastModifiedDate":"2022-03-15"},{"lineNumber":79,"author":{"gitId":"xzzz3"},"content":"    /**","lastModifiedDate":"2022-03-15"},{"lineNumber":80,"author":{"gitId":"xzzz3"},"content":"     * Converts this Jackson-friendly adapted order object into the model\u0027s {@code Order} object.","lastModifiedDate":"2022-03-15"},{"lineNumber":81,"author":{"gitId":"xzzz3"},"content":"     *","lastModifiedDate":"2022-03-15"},{"lineNumber":82,"author":{"gitId":"xzzz3"},"content":"     * @throws IllegalValueException if there were any data constraints violated in the adapted order.","lastModifiedDate":"2022-03-15"},{"lineNumber":83,"author":{"gitId":"xzzz3"},"content":"     */","lastModifiedDate":"2022-03-15"},{"lineNumber":84,"author":{"gitId":"xzzz3"},"content":"    public Order toModelType() throws IllegalValueException {","lastModifiedDate":"2022-03-15"},{"lineNumber":85,"author":{"gitId":"xzzz3"},"content":"        if (customerName \u003d\u003d null) {","lastModifiedDate":"2022-03-17"},{"lineNumber":86,"author":{"gitId":"xzzz3"},"content":"            throw new IllegalValueException(String.format(MISSING_FIELD_MESSAGE_FORMAT,","lastModifiedDate":"2022-03-17"},{"lineNumber":87,"author":{"gitId":"xzzz3"},"content":"                    NameCustomer.class.getSimpleName()));","lastModifiedDate":"2022-03-17"},{"lineNumber":88,"author":{"gitId":"xzzz3"},"content":"        }","lastModifiedDate":"2022-03-17"},{"lineNumber":89,"author":{"gitId":"xzzz3"},"content":"","lastModifiedDate":"2022-03-17"},{"lineNumber":90,"author":{"gitId":"xzzz3"},"content":"        if (customerPhone \u003d\u003d null) {","lastModifiedDate":"2022-03-17"},{"lineNumber":91,"author":{"gitId":"xzzz3"},"content":"            throw new IllegalValueException(String.format(MISSING_FIELD_MESSAGE_FORMAT,","lastModifiedDate":"2022-03-17"},{"lineNumber":92,"author":{"gitId":"xzzz3"},"content":"                    PhoneCustomer.class.getSimpleName()));","lastModifiedDate":"2022-03-17"},{"lineNumber":93,"author":{"gitId":"xzzz3"},"content":"        }","lastModifiedDate":"2022-03-15"},{"lineNumber":94,"author":{"gitId":"xzzz3"},"content":"","lastModifiedDate":"2022-03-15"},{"lineNumber":95,"author":{"gitId":"xzzz3"},"content":"        if (customerAddress \u003d\u003d null) {","lastModifiedDate":"2022-03-17"},{"lineNumber":96,"author":{"gitId":"xzzz3"},"content":"            throw new IllegalValueException(String.format(MISSING_FIELD_MESSAGE_FORMAT,","lastModifiedDate":"2022-03-17"},{"lineNumber":97,"author":{"gitId":"xzzz3"},"content":"                    AddressCustomer.class.getSimpleName()));","lastModifiedDate":"2022-03-17"},{"lineNumber":98,"author":{"gitId":"xzzz3"},"content":"        }","lastModifiedDate":"2022-03-17"},{"lineNumber":99,"author":{"gitId":"xzzz3"},"content":"","lastModifiedDate":"2022-03-17"},{"lineNumber":100,"author":{"gitId":"xzzz3"},"content":"        final Customer customer \u003d new Customer(new NameCustomer(customerName),","lastModifiedDate":"2022-03-17"},{"lineNumber":101,"author":{"gitId":"xzzz3"},"content":"                new PhoneCustomer(customerPhone), new AddressCustomer(customerAddress));","lastModifiedDate":"2022-03-17"},{"lineNumber":102,"author":{"gitId":"xzzz3"},"content":"","lastModifiedDate":"2022-03-17"},{"lineNumber":103,"author":{"gitId":"xzzz3"},"content":"        if (driverName \u003d\u003d null) {","lastModifiedDate":"2022-03-17"},{"lineNumber":104,"author":{"gitId":"xzzz3"},"content":"            throw new IllegalValueException(String.format(MISSING_FIELD_MESSAGE_FORMAT,","lastModifiedDate":"2022-03-17"},{"lineNumber":105,"author":{"gitId":"xzzz3"},"content":"                    NameDriver.class.getSimpleName()));","lastModifiedDate":"2022-03-17"},{"lineNumber":106,"author":{"gitId":"xzzz3"},"content":"        }","lastModifiedDate":"2022-03-17"},{"lineNumber":107,"author":{"gitId":"xzzz3"},"content":"","lastModifiedDate":"2022-03-17"},{"lineNumber":108,"author":{"gitId":"xzzz3"},"content":"        if (driverPhone \u003d\u003d null) {","lastModifiedDate":"2022-03-17"},{"lineNumber":109,"author":{"gitId":"xzzz3"},"content":"            throw new IllegalValueException(String.format(MISSING_FIELD_MESSAGE_FORMAT,","lastModifiedDate":"2022-03-17"},{"lineNumber":110,"author":{"gitId":"xzzz3"},"content":"                    PhoneDriver.class.getSimpleName()));","lastModifiedDate":"2022-03-17"},{"lineNumber":111,"author":{"gitId":"xzzz3"},"content":"        }","lastModifiedDate":"2022-03-17"},{"lineNumber":112,"author":{"gitId":"xzzz3"},"content":"","lastModifiedDate":"2022-03-17"},{"lineNumber":113,"author":{"gitId":"xzzz3"},"content":"        final Driver driver \u003d new Driver(new NameDriver(driverName), new PhoneDriver(driverPhone));","lastModifiedDate":"2022-03-17"},{"lineNumber":114,"author":{"gitId":"xzzz3"},"content":"","lastModifiedDate":"2022-03-15"},{"lineNumber":115,"author":{"gitId":"jaegarpoon"},"content":"        if (dishNames \u003d\u003d null) {","lastModifiedDate":"2022-03-27"},{"lineNumber":116,"author":{"gitId":"xzzz3"},"content":"            throw new IllegalValueException(String.format(MISSING_FIELD_MESSAGE_FORMAT,","lastModifiedDate":"2022-03-17"},{"lineNumber":117,"author":{"gitId":"jaegarpoon"},"content":"                    NameDish.class.getSimpleName()));","lastModifiedDate":"2022-03-27"},{"lineNumber":118,"author":{"gitId":"jaegarpoon"},"content":"        }","lastModifiedDate":"2022-03-27"},{"lineNumber":119,"author":{"gitId":"jaegarpoon"},"content":"","lastModifiedDate":"2022-03-27"},{"lineNumber":120,"author":{"gitId":"jaegarpoon"},"content":"        if (dishPrices \u003d\u003d null) {","lastModifiedDate":"2022-03-27"},{"lineNumber":121,"author":{"gitId":"jaegarpoon"},"content":"            throw new IllegalValueException(String.format(MISSING_FIELD_MESSAGE_FORMAT,","lastModifiedDate":"2022-03-27"},{"lineNumber":122,"author":{"gitId":"jaegarpoon"},"content":"                    PriceDish.class.getSimpleName()));","lastModifiedDate":"2022-03-27"},{"lineNumber":123,"author":{"gitId":"jaegarpoon"},"content":"        }","lastModifiedDate":"2022-03-27"},{"lineNumber":124,"author":{"gitId":"jaegarpoon"},"content":"","lastModifiedDate":"2022-03-27"},{"lineNumber":125,"author":{"gitId":"jaegarpoon"},"content":"        if (dishNames.size() !\u003d dishPrices.size()) {","lastModifiedDate":"2022-03-27"},{"lineNumber":126,"author":{"gitId":"jaegarpoon"},"content":"            throw new IllegalValueException(INVALID_DISH_MESSAGE);","lastModifiedDate":"2022-03-27"},{"lineNumber":127,"author":{"gitId":"xzzz3"},"content":"        }","lastModifiedDate":"2022-03-15"},{"lineNumber":128,"author":{"gitId":"xzzz3"},"content":"","lastModifiedDate":"2022-03-15"},{"lineNumber":129,"author":{"gitId":"xzzz3"},"content":"        final ArrayList\u003cDish\u003e modelDishes \u003d new ArrayList\u003cDish\u003e ();","lastModifiedDate":"2022-03-17"},{"lineNumber":130,"author":{"gitId":"jaegarpoon"},"content":"        for (int i \u003d 0; i \u003c dishNames.size(); i++) {","lastModifiedDate":"2022-03-27"},{"lineNumber":131,"author":{"gitId":"jaegarpoon"},"content":"            modelDishes.add(new Dish(new NameDish(dishNames.get(i)),","lastModifiedDate":"2022-03-27"},{"lineNumber":132,"author":{"gitId":"jaegarpoon"},"content":"                    new PriceDish(dishPrices.get(i))));","lastModifiedDate":"2022-03-27"},{"lineNumber":133,"author":{"gitId":"xzzz3"},"content":"        }","lastModifiedDate":"2022-03-17"},{"lineNumber":134,"author":{"gitId":"xzzz3"},"content":"","lastModifiedDate":"2022-03-15"},{"lineNumber":135,"author":{"gitId":"xzzz3"},"content":"        if (time \u003d\u003d null) {","lastModifiedDate":"2022-03-23"},{"lineNumber":136,"author":{"gitId":"xzzz3"},"content":"            throw new IllegalValueException(String.format(MISSING_FIELD_MESSAGE_FORMAT,","lastModifiedDate":"2022-03-23"},{"lineNumber":137,"author":{"gitId":"xzzz3"},"content":"                    \"time\"));","lastModifiedDate":"2022-03-23"},{"lineNumber":138,"author":{"gitId":"xzzz3"},"content":"        }","lastModifiedDate":"2022-03-23"},{"lineNumber":139,"author":{"gitId":"xzzz3"},"content":"","lastModifiedDate":"2022-03-23"},{"lineNumber":140,"author":{"gitId":"xzzz3"},"content":"        final LocalDateTime time \u003d this.time;","lastModifiedDate":"2022-03-23"},{"lineNumber":141,"author":{"gitId":"xzzz3"},"content":"","lastModifiedDate":"2022-03-23"},{"lineNumber":142,"author":{"gitId":"xzzz3"},"content":"        return new Order(customer, driver, time, modelDishes.toArray(new Dish[0]));","lastModifiedDate":"2022-03-23"},{"lineNumber":143,"author":{"gitId":"xzzz3"},"content":"    }","lastModifiedDate":"2022-03-15"},{"lineNumber":144,"author":{"gitId":"xzzz3"},"content":"","lastModifiedDate":"2022-03-15"},{"lineNumber":145,"author":{"gitId":"xzzz3"},"content":"}","lastModifiedDate":"2022-03-15"},{"lineNumber":146,"author":{"gitId":"xzzz3"},"content":"","lastModifiedDate":"2022-03-15"}],"authorContributionMap":{"xzzz3":118,"jaegarpoon":28}},{"path":"src/main/java/seedu/address/storage/JsonAdaptedPerson.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.storage;","lastModifiedDate":"2018-08-13"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.util.ArrayList;","lastModifiedDate":"2018-08-13"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import java.util.HashSet;","lastModifiedDate":"2018-08-13"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.util.List;","lastModifiedDate":"2018-08-13"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.util.Set;","lastModifiedDate":"2018-08-13"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import java.util.stream.Collectors;","lastModifiedDate":"2018-08-13"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import com.fasterxml.jackson.annotation.JsonCreator;","lastModifiedDate":"2018-08-13"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import com.fasterxml.jackson.annotation.JsonProperty;","lastModifiedDate":"2018-08-13"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import seedu.address.commons.exceptions.IllegalValueException;","lastModifiedDate":"2018-08-13"},{"lineNumber":13,"author":{"gitId":"jaegarpoon"},"content":"import seedu.address.model.item.Address;","lastModifiedDate":"2022-03-11"},{"lineNumber":14,"author":{"gitId":"jaegarpoon"},"content":"import seedu.address.model.item.Email;","lastModifiedDate":"2022-03-11"},{"lineNumber":15,"author":{"gitId":"jaegarpoon"},"content":"import seedu.address.model.item.Name;","lastModifiedDate":"2022-03-11"},{"lineNumber":16,"author":{"gitId":"jaegarpoon"},"content":"import seedu.address.model.item.Person;","lastModifiedDate":"2022-03-11"},{"lineNumber":17,"author":{"gitId":"jaegarpoon"},"content":"import seedu.address.model.item.Phone;","lastModifiedDate":"2022-03-11"},{"lineNumber":18,"author":{"gitId":"-"},"content":"import seedu.address.model.tag.Tag;","lastModifiedDate":"2018-08-13"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":20,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2018-08-13"},{"lineNumber":21,"author":{"gitId":"-"},"content":" * Jackson-friendly version of {@link Person}.","lastModifiedDate":"2018-08-13"},{"lineNumber":22,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2018-08-13"},{"lineNumber":23,"author":{"gitId":"-"},"content":"class JsonAdaptedPerson {","lastModifiedDate":"2018-12-03"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    public static final String MISSING_FIELD_MESSAGE_FORMAT \u003d \"Person\u0027s %s field is missing!\";","lastModifiedDate":"2018-08-13"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    private final String name;","lastModifiedDate":"2018-08-13"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    private final String phone;","lastModifiedDate":"2018-08-13"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    private final String email;","lastModifiedDate":"2018-08-13"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    private final String address;","lastModifiedDate":"2018-08-13"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    private final List\u003cJsonAdaptedTag\u003e tagged \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2018-08-13"},{"lineNumber":32,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-08-13"},{"lineNumber":34,"author":{"gitId":"-"},"content":"     * Constructs a {@code JsonAdaptedPerson} with the given person details.","lastModifiedDate":"2018-08-13"},{"lineNumber":35,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-08-13"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    @JsonCreator","lastModifiedDate":"2018-08-13"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    public JsonAdaptedPerson(@JsonProperty(\"name\") String name, @JsonProperty(\"phone\") String phone,","lastModifiedDate":"2018-08-13"},{"lineNumber":38,"author":{"gitId":"-"},"content":"            @JsonProperty(\"email\") String email, @JsonProperty(\"address\") String address,","lastModifiedDate":"2018-08-13"},{"lineNumber":39,"author":{"gitId":"-"},"content":"            @JsonProperty(\"tagged\") List\u003cJsonAdaptedTag\u003e tagged) {","lastModifiedDate":"2018-08-13"},{"lineNumber":40,"author":{"gitId":"-"},"content":"        this.name \u003d name;","lastModifiedDate":"2018-08-13"},{"lineNumber":41,"author":{"gitId":"-"},"content":"        this.phone \u003d phone;","lastModifiedDate":"2018-08-13"},{"lineNumber":42,"author":{"gitId":"-"},"content":"        this.email \u003d email;","lastModifiedDate":"2018-08-13"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        this.address \u003d address;","lastModifiedDate":"2018-08-13"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        if (tagged !\u003d null) {","lastModifiedDate":"2018-08-13"},{"lineNumber":45,"author":{"gitId":"-"},"content":"            this.tagged.addAll(tagged);","lastModifiedDate":"2018-08-13"},{"lineNumber":46,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-08-13"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":48,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-08-13"},{"lineNumber":50,"author":{"gitId":"-"},"content":"     * Converts a given {@code Person} into this class for Jackson use.","lastModifiedDate":"2018-08-13"},{"lineNumber":51,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-08-13"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    public JsonAdaptedPerson(Person source) {","lastModifiedDate":"2018-08-13"},{"lineNumber":53,"author":{"gitId":"-"},"content":"        name \u003d source.getName().fullName;","lastModifiedDate":"2018-08-13"},{"lineNumber":54,"author":{"gitId":"-"},"content":"        phone \u003d source.getPhone().value;","lastModifiedDate":"2018-08-13"},{"lineNumber":55,"author":{"gitId":"-"},"content":"        email \u003d source.getEmail().value;","lastModifiedDate":"2018-08-13"},{"lineNumber":56,"author":{"gitId":"-"},"content":"        address \u003d source.getAddress().value;","lastModifiedDate":"2018-08-13"},{"lineNumber":57,"author":{"gitId":"-"},"content":"        tagged.addAll(source.getTags().stream()","lastModifiedDate":"2018-08-13"},{"lineNumber":58,"author":{"gitId":"-"},"content":"                .map(JsonAdaptedTag::new)","lastModifiedDate":"2018-08-13"},{"lineNumber":59,"author":{"gitId":"-"},"content":"                .collect(Collectors.toList()));","lastModifiedDate":"2018-08-13"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":61,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":62,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-08-13"},{"lineNumber":63,"author":{"gitId":"-"},"content":"     * Converts this Jackson-friendly adapted person object into the model\u0027s {@code Person} object.","lastModifiedDate":"2018-08-13"},{"lineNumber":64,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2018-08-13"},{"lineNumber":65,"author":{"gitId":"-"},"content":"     * @throws IllegalValueException if there were any data constraints violated in the adapted person.","lastModifiedDate":"2018-08-13"},{"lineNumber":66,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-08-13"},{"lineNumber":67,"author":{"gitId":"-"},"content":"    public Person toModelType() throws IllegalValueException {","lastModifiedDate":"2018-08-13"},{"lineNumber":68,"author":{"gitId":"-"},"content":"        final List\u003cTag\u003e personTags \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2018-08-13"},{"lineNumber":69,"author":{"gitId":"-"},"content":"        for (JsonAdaptedTag tag : tagged) {","lastModifiedDate":"2018-08-13"},{"lineNumber":70,"author":{"gitId":"-"},"content":"            personTags.add(tag.toModelType());","lastModifiedDate":"2018-08-13"},{"lineNumber":71,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-08-13"},{"lineNumber":72,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":73,"author":{"gitId":"-"},"content":"        if (name \u003d\u003d null) {","lastModifiedDate":"2018-08-13"},{"lineNumber":74,"author":{"gitId":"-"},"content":"            throw new IllegalValueException(String.format(MISSING_FIELD_MESSAGE_FORMAT, Name.class.getSimpleName()));","lastModifiedDate":"2018-08-13"},{"lineNumber":75,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-08-13"},{"lineNumber":76,"author":{"gitId":"-"},"content":"        if (!Name.isValidName(name)) {","lastModifiedDate":"2018-08-13"},{"lineNumber":77,"author":{"gitId":"-"},"content":"            throw new IllegalValueException(Name.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2018-08-13"},{"lineNumber":78,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-08-13"},{"lineNumber":79,"author":{"gitId":"-"},"content":"        final Name modelName \u003d new Name(name);","lastModifiedDate":"2018-08-13"},{"lineNumber":80,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":81,"author":{"gitId":"-"},"content":"        if (phone \u003d\u003d null) {","lastModifiedDate":"2018-08-13"},{"lineNumber":82,"author":{"gitId":"-"},"content":"            throw new IllegalValueException(String.format(MISSING_FIELD_MESSAGE_FORMAT, Phone.class.getSimpleName()));","lastModifiedDate":"2018-08-13"},{"lineNumber":83,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-08-13"},{"lineNumber":84,"author":{"gitId":"-"},"content":"        if (!Phone.isValidPhone(phone)) {","lastModifiedDate":"2018-08-13"},{"lineNumber":85,"author":{"gitId":"-"},"content":"            throw new IllegalValueException(Phone.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2018-08-13"},{"lineNumber":86,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-08-13"},{"lineNumber":87,"author":{"gitId":"-"},"content":"        final Phone modelPhone \u003d new Phone(phone);","lastModifiedDate":"2018-08-13"},{"lineNumber":88,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":89,"author":{"gitId":"-"},"content":"        if (email \u003d\u003d null) {","lastModifiedDate":"2018-08-13"},{"lineNumber":90,"author":{"gitId":"-"},"content":"            throw new IllegalValueException(String.format(MISSING_FIELD_MESSAGE_FORMAT, Email.class.getSimpleName()));","lastModifiedDate":"2018-08-13"},{"lineNumber":91,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-08-13"},{"lineNumber":92,"author":{"gitId":"-"},"content":"        if (!Email.isValidEmail(email)) {","lastModifiedDate":"2018-08-13"},{"lineNumber":93,"author":{"gitId":"-"},"content":"            throw new IllegalValueException(Email.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2018-08-13"},{"lineNumber":94,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-08-13"},{"lineNumber":95,"author":{"gitId":"-"},"content":"        final Email modelEmail \u003d new Email(email);","lastModifiedDate":"2018-08-13"},{"lineNumber":96,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":97,"author":{"gitId":"-"},"content":"        if (address \u003d\u003d null) {","lastModifiedDate":"2018-08-13"},{"lineNumber":98,"author":{"gitId":"-"},"content":"            throw new IllegalValueException(String.format(MISSING_FIELD_MESSAGE_FORMAT, Address.class.getSimpleName()));","lastModifiedDate":"2018-08-13"},{"lineNumber":99,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-08-13"},{"lineNumber":100,"author":{"gitId":"-"},"content":"        if (!Address.isValidAddress(address)) {","lastModifiedDate":"2018-08-13"},{"lineNumber":101,"author":{"gitId":"-"},"content":"            throw new IllegalValueException(Address.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2018-08-13"},{"lineNumber":102,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-08-13"},{"lineNumber":103,"author":{"gitId":"-"},"content":"        final Address modelAddress \u003d new Address(address);","lastModifiedDate":"2018-08-13"},{"lineNumber":104,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":105,"author":{"gitId":"-"},"content":"        final Set\u003cTag\u003e modelTags \u003d new HashSet\u003c\u003e(personTags);","lastModifiedDate":"2018-08-13"},{"lineNumber":106,"author":{"gitId":"-"},"content":"        return new Person(modelName, modelPhone, modelEmail, modelAddress, modelTags);","lastModifiedDate":"2018-08-13"},{"lineNumber":107,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":108,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":109,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2018-08-13"}],"authorContributionMap":{"jaegarpoon":5,"-":104}},{"path":"src/main/java/seedu/address/storage/JsonAddressBookStorage.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.storage;","lastModifiedDate":"2018-08-13"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2018-08-13"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.io.IOException;","lastModifiedDate":"2018-08-13"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-08-13"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import java.util.Optional;","lastModifiedDate":"2018-08-13"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import java.util.logging.Logger;","lastModifiedDate":"2018-08-13"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.LogsCenter;","lastModifiedDate":"2018-08-13"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import seedu.address.commons.exceptions.DataConversionException;","lastModifiedDate":"2018-08-13"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import seedu.address.commons.exceptions.IllegalValueException;","lastModifiedDate":"2018-08-13"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import seedu.address.commons.util.FileUtil;","lastModifiedDate":"2018-08-13"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import seedu.address.commons.util.JsonUtil;","lastModifiedDate":"2018-08-13"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import seedu.address.model.ReadOnlyAddressBook;","lastModifiedDate":"2018-08-13"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":17,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2018-08-13"},{"lineNumber":18,"author":{"gitId":"-"},"content":" * A class to access AddressBook data stored as a json file on the hard disk.","lastModifiedDate":"2018-08-13"},{"lineNumber":19,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2018-08-13"},{"lineNumber":20,"author":{"gitId":"-"},"content":"public class JsonAddressBookStorage implements AddressBookStorage {","lastModifiedDate":"2018-08-13"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    private static final Logger logger \u003d LogsCenter.getLogger(JsonAddressBookStorage.class);","lastModifiedDate":"2018-08-13"},{"lineNumber":23,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":24,"author":{"gitId":"zxgoh"},"content":"    private final Path filePath;","lastModifiedDate":"2022-03-16"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    public JsonAddressBookStorage(Path filePath) {","lastModifiedDate":"2018-08-13"},{"lineNumber":27,"author":{"gitId":"-"},"content":"        this.filePath \u003d filePath;","lastModifiedDate":"2018-08-13"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    public Path getAddressBookFilePath() {","lastModifiedDate":"2018-08-13"},{"lineNumber":31,"author":{"gitId":"-"},"content":"        return filePath;","lastModifiedDate":"2018-08-13"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2018-08-13"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    public Optional\u003cReadOnlyAddressBook\u003e readAddressBook() throws DataConversionException {","lastModifiedDate":"2018-08-13"},{"lineNumber":36,"author":{"gitId":"-"},"content":"        return readAddressBook(filePath);","lastModifiedDate":"2018-08-13"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":38,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-08-13"},{"lineNumber":40,"author":{"gitId":"-"},"content":"     * Similar to {@link #readAddressBook()}.","lastModifiedDate":"2018-08-13"},{"lineNumber":41,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2018-08-13"},{"lineNumber":42,"author":{"gitId":"-"},"content":"     * @param filePath location of the data. Cannot be null.","lastModifiedDate":"2018-08-13"},{"lineNumber":43,"author":{"gitId":"-"},"content":"     * @throws DataConversionException if the file is not in the correct format.","lastModifiedDate":"2018-08-13"},{"lineNumber":44,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-08-13"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    public Optional\u003cReadOnlyAddressBook\u003e readAddressBook(Path filePath) throws DataConversionException {","lastModifiedDate":"2018-08-13"},{"lineNumber":46,"author":{"gitId":"-"},"content":"        requireNonNull(filePath);","lastModifiedDate":"2018-08-13"},{"lineNumber":47,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        Optional\u003cJsonSerializableAddressBook\u003e jsonAddressBook \u003d JsonUtil.readJsonFile(","lastModifiedDate":"2018-08-13"},{"lineNumber":49,"author":{"gitId":"-"},"content":"                filePath, JsonSerializableAddressBook.class);","lastModifiedDate":"2018-08-13"},{"lineNumber":50,"author":{"gitId":"-"},"content":"        if (!jsonAddressBook.isPresent()) {","lastModifiedDate":"2018-08-13"},{"lineNumber":51,"author":{"gitId":"-"},"content":"            return Optional.empty();","lastModifiedDate":"2018-08-13"},{"lineNumber":52,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-08-13"},{"lineNumber":53,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":54,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2018-08-13"},{"lineNumber":55,"author":{"gitId":"-"},"content":"            return Optional.of(jsonAddressBook.get().toModelType());","lastModifiedDate":"2018-08-13"},{"lineNumber":56,"author":{"gitId":"-"},"content":"        } catch (IllegalValueException ive) {","lastModifiedDate":"2018-08-13"},{"lineNumber":57,"author":{"gitId":"-"},"content":"            logger.info(\"Illegal values found in \" + filePath + \": \" + ive.getMessage());","lastModifiedDate":"2018-08-13"},{"lineNumber":58,"author":{"gitId":"-"},"content":"            throw new DataConversionException(ive);","lastModifiedDate":"2018-08-13"},{"lineNumber":59,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-08-13"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":61,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":62,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2018-08-13"},{"lineNumber":63,"author":{"gitId":"-"},"content":"    public void saveAddressBook(ReadOnlyAddressBook addressBook) throws IOException {","lastModifiedDate":"2018-08-13"},{"lineNumber":64,"author":{"gitId":"-"},"content":"        saveAddressBook(addressBook, filePath);","lastModifiedDate":"2018-08-13"},{"lineNumber":65,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":66,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":67,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-08-13"},{"lineNumber":68,"author":{"gitId":"-"},"content":"     * Similar to {@link #saveAddressBook(ReadOnlyAddressBook)}.","lastModifiedDate":"2018-08-13"},{"lineNumber":69,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2018-08-13"},{"lineNumber":70,"author":{"gitId":"-"},"content":"     * @param filePath location of the data. Cannot be null.","lastModifiedDate":"2018-08-13"},{"lineNumber":71,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-08-13"},{"lineNumber":72,"author":{"gitId":"-"},"content":"    public void saveAddressBook(ReadOnlyAddressBook addressBook, Path filePath) throws IOException {","lastModifiedDate":"2018-08-13"},{"lineNumber":73,"author":{"gitId":"-"},"content":"        requireNonNull(addressBook);","lastModifiedDate":"2018-08-13"},{"lineNumber":74,"author":{"gitId":"-"},"content":"        requireNonNull(filePath);","lastModifiedDate":"2018-08-13"},{"lineNumber":75,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":76,"author":{"gitId":"-"},"content":"        FileUtil.createIfMissing(filePath);","lastModifiedDate":"2018-08-13"},{"lineNumber":77,"author":{"gitId":"-"},"content":"        JsonUtil.saveJsonFile(new JsonSerializableAddressBook(addressBook), filePath);","lastModifiedDate":"2018-08-13"},{"lineNumber":78,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":79,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":80,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2018-08-13"}],"authorContributionMap":{"-":79,"zxgoh":1}},{"path":"src/main/java/seedu/address/storage/JsonSerializableAddressBook.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.storage;","lastModifiedDate":"2018-08-13"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":3,"author":{"gitId":"zxgoh"},"content":"import static seedu.address.logic.commands.AddDishCommand.MESSAGE_DUPLICATE_DISH;","lastModifiedDate":"2022-03-16"},{"lineNumber":4,"author":{"gitId":"zxgoh"},"content":"import static seedu.address.logic.commands.AddDriverCommand.MESSAGE_DUPLICATE_DRIVER;","lastModifiedDate":"2022-03-16"},{"lineNumber":5,"author":{"gitId":"zxgoh"},"content":"import static seedu.address.logic.commands.AddOrderCommand.MESSAGE_DUPLICATE_ORDER;","lastModifiedDate":"2022-03-16"},{"lineNumber":6,"author":{"gitId":"zxgoh"},"content":"","lastModifiedDate":"2022-03-16"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import java.util.ArrayList;","lastModifiedDate":"2018-08-13"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import java.util.List;","lastModifiedDate":"2018-08-13"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import java.util.stream.Collectors;","lastModifiedDate":"2018-08-13"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import com.fasterxml.jackson.annotation.JsonCreator;","lastModifiedDate":"2018-08-13"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import com.fasterxml.jackson.annotation.JsonProperty;","lastModifiedDate":"2018-08-13"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import com.fasterxml.jackson.annotation.JsonRootName;","lastModifiedDate":"2018-08-13"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import seedu.address.commons.exceptions.IllegalValueException;","lastModifiedDate":"2018-08-13"},{"lineNumber":16,"author":{"gitId":"-"},"content":"import seedu.address.model.AddressBook;","lastModifiedDate":"2018-08-13"},{"lineNumber":17,"author":{"gitId":"-"},"content":"import seedu.address.model.ReadOnlyAddressBook;","lastModifiedDate":"2018-08-13"},{"lineNumber":18,"author":{"gitId":"zxgoh"},"content":"import seedu.address.model.customer.Customer;","lastModifiedDate":"2022-03-14"},{"lineNumber":19,"author":{"gitId":"jaegarpoon"},"content":"import seedu.address.model.dish.Dish;","lastModifiedDate":"2022-03-24"},{"lineNumber":20,"author":{"gitId":"jaegarpoon"},"content":"import seedu.address.model.driver.Driver;","lastModifiedDate":"2022-03-27"},{"lineNumber":21,"author":{"gitId":"zxgoh"},"content":"import seedu.address.model.order.Order;","lastModifiedDate":"2022-03-16"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":23,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2018-08-13"},{"lineNumber":24,"author":{"gitId":"-"},"content":" * An Immutable AddressBook that is serializable to JSON format.","lastModifiedDate":"2018-08-13"},{"lineNumber":25,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2018-08-13"},{"lineNumber":26,"author":{"gitId":"-"},"content":"@JsonRootName(value \u003d \"addressbook\")","lastModifiedDate":"2018-08-13"},{"lineNumber":27,"author":{"gitId":"-"},"content":"class JsonSerializableAddressBook {","lastModifiedDate":"2018-12-03"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":29,"author":{"gitId":"zxgoh"},"content":"    public static final String MESSAGE_DUPLICATE_CUSTOMER \u003d \"Customers list contains duplicate customer(s).\";","lastModifiedDate":"2022-03-14"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":31,"author":{"gitId":"zxgoh"},"content":"    private final List\u003cJsonAdaptedCustomer\u003e customers \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2022-03-14"},{"lineNumber":32,"author":{"gitId":"zxgoh"},"content":"    private final List\u003cJsonAdaptedDish\u003e dishes \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2022-03-16"},{"lineNumber":33,"author":{"gitId":"zxgoh"},"content":"    private final List\u003cJsonAdaptedDriver\u003e drivers \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2022-03-16"},{"lineNumber":34,"author":{"gitId":"zxgoh"},"content":"    private final List\u003cJsonAdaptedOrder\u003e orders \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2022-03-16"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-08-13"},{"lineNumber":37,"author":{"gitId":"zxgoh"},"content":"     * Constructs a {@code JsonSerializableAddressBook} with the given customers.","lastModifiedDate":"2022-03-14"},{"lineNumber":38,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-08-13"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    @JsonCreator","lastModifiedDate":"2018-08-13"},{"lineNumber":40,"author":{"gitId":"zxgoh"},"content":"    public JsonSerializableAddressBook(@JsonProperty(\"customers\") List\u003cJsonAdaptedCustomer\u003e customers,","lastModifiedDate":"2022-03-16"},{"lineNumber":41,"author":{"gitId":"zxgoh"},"content":"                                       @JsonProperty(\"dishes\") List\u003cJsonAdaptedDish\u003e dishes,","lastModifiedDate":"2022-03-16"},{"lineNumber":42,"author":{"gitId":"zxgoh"},"content":"                                       @JsonProperty(\"drivers\") List\u003cJsonAdaptedDriver\u003e drivers,","lastModifiedDate":"2022-03-16"},{"lineNumber":43,"author":{"gitId":"zxgoh"},"content":"                                       @JsonProperty(\"orders\") List\u003cJsonAdaptedOrder\u003e orders) {","lastModifiedDate":"2022-03-16"},{"lineNumber":44,"author":{"gitId":"zxgoh"},"content":"        this.dishes.addAll(dishes);","lastModifiedDate":"2022-03-16"},{"lineNumber":45,"author":{"gitId":"zxgoh"},"content":"        this.drivers.addAll(drivers);","lastModifiedDate":"2022-03-16"},{"lineNumber":46,"author":{"gitId":"zxgoh"},"content":"        this.orders.addAll(orders);","lastModifiedDate":"2022-03-16"},{"lineNumber":47,"author":{"gitId":"zxgoh"},"content":"        this.customers.addAll(customers);","lastModifiedDate":"2022-03-14"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":49,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-08-13"},{"lineNumber":51,"author":{"gitId":"-"},"content":"     * Converts a given {@code ReadOnlyAddressBook} into this class for Jackson use.","lastModifiedDate":"2018-08-13"},{"lineNumber":52,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2018-08-13"},{"lineNumber":53,"author":{"gitId":"-"},"content":"     * @param source future changes to this will not affect the created {@code JsonSerializableAddressBook}.","lastModifiedDate":"2018-08-13"},{"lineNumber":54,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-08-13"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    public JsonSerializableAddressBook(ReadOnlyAddressBook source) {","lastModifiedDate":"2018-08-13"},{"lineNumber":56,"author":{"gitId":"zxgoh"},"content":"        customers.addAll(source.getCustomerList().stream().map(JsonAdaptedCustomer::new).collect(Collectors.toList()));","lastModifiedDate":"2022-03-14"},{"lineNumber":57,"author":{"gitId":"zxgoh"},"content":"        dishes.addAll(source.getDishList().stream().map(JsonAdaptedDish::new).collect(Collectors.toList()));","lastModifiedDate":"2022-03-16"},{"lineNumber":58,"author":{"gitId":"zxgoh"},"content":"        drivers.addAll(source.getDriverList().stream().map(JsonAdaptedDriver::new).collect(Collectors.toList()));","lastModifiedDate":"2022-03-16"},{"lineNumber":59,"author":{"gitId":"zxgoh"},"content":"        orders.addAll(source.getOrderList().stream().map(JsonAdaptedOrder::new).collect(Collectors.toList()));","lastModifiedDate":"2022-03-16"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":61,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":62,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-08-13"},{"lineNumber":63,"author":{"gitId":"-"},"content":"     * Converts this address book into the model\u0027s {@code AddressBook} object.","lastModifiedDate":"2018-08-13"},{"lineNumber":64,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2018-08-13"},{"lineNumber":65,"author":{"gitId":"-"},"content":"     * @throws IllegalValueException if there were any data constraints violated.","lastModifiedDate":"2018-08-13"},{"lineNumber":66,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-08-13"},{"lineNumber":67,"author":{"gitId":"-"},"content":"    public AddressBook toModelType() throws IllegalValueException {","lastModifiedDate":"2018-08-13"},{"lineNumber":68,"author":{"gitId":"-"},"content":"        AddressBook addressBook \u003d new AddressBook();","lastModifiedDate":"2018-08-13"},{"lineNumber":69,"author":{"gitId":"zxgoh"},"content":"        for (JsonAdaptedCustomer jsonAdaptedCustomer : customers) {","lastModifiedDate":"2022-03-14"},{"lineNumber":70,"author":{"gitId":"zxgoh"},"content":"            Customer customer \u003d jsonAdaptedCustomer.toModelType();","lastModifiedDate":"2022-03-14"},{"lineNumber":71,"author":{"gitId":"zxgoh"},"content":"            if (addressBook.hasCustomer(customer)) {","lastModifiedDate":"2022-03-14"},{"lineNumber":72,"author":{"gitId":"zxgoh"},"content":"                throw new IllegalValueException(MESSAGE_DUPLICATE_CUSTOMER);","lastModifiedDate":"2022-03-14"},{"lineNumber":73,"author":{"gitId":"-"},"content":"            }","lastModifiedDate":"2018-08-13"},{"lineNumber":74,"author":{"gitId":"zxgoh"},"content":"            addressBook.addCustomer(customer);","lastModifiedDate":"2022-03-14"},{"lineNumber":75,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-08-13"},{"lineNumber":76,"author":{"gitId":"zxgoh"},"content":"","lastModifiedDate":"2022-03-16"},{"lineNumber":77,"author":{"gitId":"zxgoh"},"content":"        for (JsonAdaptedDish jsonAdaptedDish : dishes) {","lastModifiedDate":"2022-03-16"},{"lineNumber":78,"author":{"gitId":"zxgoh"},"content":"            Dish dish \u003d jsonAdaptedDish.toModelType();","lastModifiedDate":"2022-03-16"},{"lineNumber":79,"author":{"gitId":"zxgoh"},"content":"            if (addressBook.hasDish(dish)) {","lastModifiedDate":"2022-03-16"},{"lineNumber":80,"author":{"gitId":"zxgoh"},"content":"                throw new IllegalValueException(MESSAGE_DUPLICATE_DISH);","lastModifiedDate":"2022-03-16"},{"lineNumber":81,"author":{"gitId":"-"},"content":"            }","lastModifiedDate":"2022-03-16"},{"lineNumber":82,"author":{"gitId":"zxgoh"},"content":"            addressBook.addDish(dish);","lastModifiedDate":"2022-03-16"},{"lineNumber":83,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2022-03-16"},{"lineNumber":84,"author":{"gitId":"zxgoh"},"content":"","lastModifiedDate":"2022-03-16"},{"lineNumber":85,"author":{"gitId":"zxgoh"},"content":"        for (JsonAdaptedDriver jsonAdaptedDriver : drivers) {","lastModifiedDate":"2022-03-16"},{"lineNumber":86,"author":{"gitId":"zxgoh"},"content":"            Driver driver \u003d jsonAdaptedDriver.toModelType();","lastModifiedDate":"2022-03-16"},{"lineNumber":87,"author":{"gitId":"zxgoh"},"content":"            if (addressBook.hasDriver(driver)) {","lastModifiedDate":"2022-03-16"},{"lineNumber":88,"author":{"gitId":"zxgoh"},"content":"                throw new IllegalValueException(MESSAGE_DUPLICATE_DRIVER);","lastModifiedDate":"2022-03-16"},{"lineNumber":89,"author":{"gitId":"zxgoh"},"content":"            }","lastModifiedDate":"2022-03-16"},{"lineNumber":90,"author":{"gitId":"zxgoh"},"content":"            addressBook.addDriver(driver);","lastModifiedDate":"2022-03-16"},{"lineNumber":91,"author":{"gitId":"zxgoh"},"content":"        }","lastModifiedDate":"2022-03-16"},{"lineNumber":92,"author":{"gitId":"zxgoh"},"content":"","lastModifiedDate":"2022-03-16"},{"lineNumber":93,"author":{"gitId":"zxgoh"},"content":"        for (JsonAdaptedOrder jsonAdaptedOrder : orders) {","lastModifiedDate":"2022-03-16"},{"lineNumber":94,"author":{"gitId":"zxgoh"},"content":"            Order order \u003d jsonAdaptedOrder.toModelType();","lastModifiedDate":"2022-03-16"},{"lineNumber":95,"author":{"gitId":"zxgoh"},"content":"            if (addressBook.hasOrder(order)) {","lastModifiedDate":"2022-03-16"},{"lineNumber":96,"author":{"gitId":"zxgoh"},"content":"                throw new IllegalValueException(MESSAGE_DUPLICATE_ORDER);","lastModifiedDate":"2022-03-16"},{"lineNumber":97,"author":{"gitId":"zxgoh"},"content":"            }","lastModifiedDate":"2022-03-16"},{"lineNumber":98,"author":{"gitId":"zxgoh"},"content":"            addressBook.addOrder(order);","lastModifiedDate":"2022-03-16"},{"lineNumber":99,"author":{"gitId":"zxgoh"},"content":"        }","lastModifiedDate":"2022-03-16"},{"lineNumber":100,"author":{"gitId":"zxgoh"},"content":"","lastModifiedDate":"2022-03-16"},{"lineNumber":101,"author":{"gitId":"-"},"content":"        return addressBook;","lastModifiedDate":"2018-08-13"},{"lineNumber":102,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":103,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":104,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2018-08-13"}],"authorContributionMap":{"jaegarpoon":2,"-":50,"zxgoh":52}},{"path":"src/main/java/seedu/address/storage/JsonUserPrefsStorage.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.storage;","lastModifiedDate":"2016-09-24"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.io.IOException;","lastModifiedDate":"2017-01-19"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-04-21"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.util.Optional;","lastModifiedDate":"2017-01-19"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import seedu.address.commons.exceptions.DataConversionException;","lastModifiedDate":"2016-09-24"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import seedu.address.commons.util.JsonUtil;","lastModifiedDate":"2016-10-07"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import seedu.address.model.ReadOnlyUserPrefs;","lastModifiedDate":"2018-11-27"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import seedu.address.model.UserPrefs;","lastModifiedDate":"2016-09-24"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":12,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-09-24"},{"lineNumber":13,"author":{"gitId":"-"},"content":" * A class to access UserPrefs stored in the hard disk as a json file","lastModifiedDate":"2016-09-24"},{"lineNumber":14,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-09-24"},{"lineNumber":15,"author":{"gitId":"-"},"content":"public class JsonUserPrefsStorage implements UserPrefsStorage {","lastModifiedDate":"2016-10-01"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":17,"author":{"gitId":"zxgoh"},"content":"    private final Path filePath;","lastModifiedDate":"2022-03-16"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    public JsonUserPrefsStorage(Path filePath) {","lastModifiedDate":"2018-04-21"},{"lineNumber":20,"author":{"gitId":"-"},"content":"        this.filePath \u003d filePath;","lastModifiedDate":"2016-09-24"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2017-02-15"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    public Path getUserPrefsFilePath() {","lastModifiedDate":"2018-04-21"},{"lineNumber":25,"author":{"gitId":"-"},"content":"        return filePath;","lastModifiedDate":"2017-02-15"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-02-15"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-15"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-24"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    public Optional\u003cUserPrefs\u003e readUserPrefs() throws DataConversionException {","lastModifiedDate":"2018-08-08"},{"lineNumber":30,"author":{"gitId":"-"},"content":"        return readUserPrefs(filePath);","lastModifiedDate":"2016-09-24"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":32,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-09-24"},{"lineNumber":34,"author":{"gitId":"-"},"content":"     * Similar to {@link #readUserPrefs()}","lastModifiedDate":"2016-09-24"},{"lineNumber":35,"author":{"gitId":"-"},"content":"     * @param prefsFilePath location of the data. Cannot be null.","lastModifiedDate":"2016-09-24"},{"lineNumber":36,"author":{"gitId":"-"},"content":"     * @throws DataConversionException if the file format is not as expected.","lastModifiedDate":"2016-09-24"},{"lineNumber":37,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-09-24"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    public Optional\u003cUserPrefs\u003e readUserPrefs(Path prefsFilePath) throws DataConversionException {","lastModifiedDate":"2018-04-21"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        return JsonUtil.readJsonFile(prefsFilePath, UserPrefs.class);","lastModifiedDate":"2016-10-07"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-10-07"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    public void saveUserPrefs(ReadOnlyUserPrefs userPrefs) throws IOException {","lastModifiedDate":"2018-11-27"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        JsonUtil.saveJsonFile(userPrefs, filePath);","lastModifiedDate":"2016-10-07"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":46,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":47,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-09-24"}],"authorContributionMap":{"-":46,"zxgoh":1}},{"path":"src/main/java/seedu/address/storage/StorageManager.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.storage;","lastModifiedDate":"2016-08-08"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.io.IOException;","lastModifiedDate":"2017-01-19"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-04-21"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.util.Optional;","lastModifiedDate":"2017-01-19"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.util.logging.Logger;","lastModifiedDate":"2017-01-19"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.LogsCenter;","lastModifiedDate":"2016-09-23"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import seedu.address.commons.exceptions.DataConversionException;","lastModifiedDate":"2016-09-24"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import seedu.address.model.ReadOnlyAddressBook;","lastModifiedDate":"2016-09-24"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import seedu.address.model.ReadOnlyUserPrefs;","lastModifiedDate":"2018-11-27"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import seedu.address.model.UserPrefs;","lastModifiedDate":"2016-09-24"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":14,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-08"},{"lineNumber":15,"author":{"gitId":"-"},"content":" * Manages storage of AddressBook data in local storage.","lastModifiedDate":"2016-09-24"},{"lineNumber":16,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-08"},{"lineNumber":17,"author":{"gitId":"-"},"content":"public class StorageManager implements Storage {","lastModifiedDate":"2018-12-09"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    private static final Logger logger \u003d LogsCenter.getLogger(StorageManager.class);","lastModifiedDate":"2016-09-23"},{"lineNumber":20,"author":{"gitId":"zxgoh"},"content":"    private final AddressBookStorage addressBookStorage;","lastModifiedDate":"2022-03-16"},{"lineNumber":21,"author":{"gitId":"zxgoh"},"content":"    private final UserPrefsStorage userPrefsStorage;","lastModifiedDate":"2022-03-16"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2020-05-27"},{"lineNumber":24,"author":{"gitId":"-"},"content":"     * Creates a {@code StorageManager} with the given {@code AddressBookStorage} and {@code UserPrefStorage}.","lastModifiedDate":"2020-05-27"},{"lineNumber":25,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2020-05-27"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    public StorageManager(AddressBookStorage addressBookStorage, UserPrefsStorage userPrefsStorage) {","lastModifiedDate":"2016-10-01"},{"lineNumber":27,"author":{"gitId":"-"},"content":"        this.addressBookStorage \u003d addressBookStorage;","lastModifiedDate":"2016-10-01"},{"lineNumber":28,"author":{"gitId":"-"},"content":"        this.userPrefsStorage \u003d userPrefsStorage;","lastModifiedDate":"2016-10-01"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-10-01"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-01"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    // \u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d UserPrefs methods \u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d","lastModifiedDate":"2016-09-24"},{"lineNumber":32,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2017-02-15"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    public Path getUserPrefsFilePath() {","lastModifiedDate":"2018-04-21"},{"lineNumber":35,"author":{"gitId":"-"},"content":"        return userPrefsStorage.getUserPrefsFilePath();","lastModifiedDate":"2017-02-15"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-02-15"},{"lineNumber":37,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-15"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-24"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    public Optional\u003cUserPrefs\u003e readUserPrefs() throws DataConversionException, IOException {","lastModifiedDate":"2016-09-24"},{"lineNumber":40,"author":{"gitId":"-"},"content":"        return userPrefsStorage.readUserPrefs();","lastModifiedDate":"2016-10-01"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":42,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-24"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    public void saveUserPrefs(ReadOnlyUserPrefs userPrefs) throws IOException {","lastModifiedDate":"2018-11-27"},{"lineNumber":45,"author":{"gitId":"-"},"content":"        userPrefsStorage.saveUserPrefs(userPrefs);","lastModifiedDate":"2016-10-01"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":47,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":48,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    // \u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d AddressBook methods \u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d","lastModifiedDate":"2016-09-24"},{"lineNumber":50,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-24"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    public Path getAddressBookFilePath() {","lastModifiedDate":"2018-04-21"},{"lineNumber":53,"author":{"gitId":"-"},"content":"        return addressBookStorage.getAddressBookFilePath();","lastModifiedDate":"2016-09-24"},{"lineNumber":54,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":55,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-24"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    public Optional\u003cReadOnlyAddressBook\u003e readAddressBook() throws DataConversionException, IOException {","lastModifiedDate":"2016-10-01"},{"lineNumber":58,"author":{"gitId":"-"},"content":"        return readAddressBook(addressBookStorage.getAddressBookFilePath());","lastModifiedDate":"2016-10-01"},{"lineNumber":59,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-10-01"},{"lineNumber":60,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":61,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-10-01"},{"lineNumber":62,"author":{"gitId":"-"},"content":"    public Optional\u003cReadOnlyAddressBook\u003e readAddressBook(Path filePath) throws DataConversionException, IOException {","lastModifiedDate":"2018-04-21"},{"lineNumber":63,"author":{"gitId":"-"},"content":"        logger.fine(\"Attempting to read data from file: \" + filePath);","lastModifiedDate":"2016-10-01"},{"lineNumber":64,"author":{"gitId":"-"},"content":"        return addressBookStorage.readAddressBook(filePath);","lastModifiedDate":"2016-10-01"},{"lineNumber":65,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":66,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":67,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-24"},{"lineNumber":68,"author":{"gitId":"-"},"content":"    public void saveAddressBook(ReadOnlyAddressBook addressBook) throws IOException {","lastModifiedDate":"2016-09-24"},{"lineNumber":69,"author":{"gitId":"-"},"content":"        saveAddressBook(addressBook, addressBookStorage.getAddressBookFilePath());","lastModifiedDate":"2016-10-01"},{"lineNumber":70,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-10-01"},{"lineNumber":71,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-01"},{"lineNumber":72,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-10-01"},{"lineNumber":73,"author":{"gitId":"-"},"content":"    public void saveAddressBook(ReadOnlyAddressBook addressBook, Path filePath) throws IOException {","lastModifiedDate":"2018-04-21"},{"lineNumber":74,"author":{"gitId":"-"},"content":"        logger.fine(\"Attempting to write to data file: \" + filePath);","lastModifiedDate":"2016-10-01"},{"lineNumber":75,"author":{"gitId":"-"},"content":"        addressBookStorage.saveAddressBook(addressBook, filePath);","lastModifiedDate":"2016-10-01"},{"lineNumber":76,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":77,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":78,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"}],"authorContributionMap":{"-":76,"zxgoh":2}},{"path":"src/main/java/seedu/address/storage/UserPrefsStorage.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.storage;","lastModifiedDate":"2016-09-24"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.io.IOException;","lastModifiedDate":"2016-09-24"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-04-21"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.util.Optional;","lastModifiedDate":"2016-09-24"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import seedu.address.commons.exceptions.DataConversionException;","lastModifiedDate":"2017-01-19"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import seedu.address.model.ReadOnlyUserPrefs;","lastModifiedDate":"2018-11-27"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import seedu.address.model.UserPrefs;","lastModifiedDate":"2017-01-19"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":11,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-09-24"},{"lineNumber":12,"author":{"gitId":"zxgoh"},"content":" * Represents a storage for {@link UserPrefs}.","lastModifiedDate":"2022-03-16"},{"lineNumber":13,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-09-24"},{"lineNumber":14,"author":{"gitId":"-"},"content":"public interface UserPrefsStorage {","lastModifiedDate":"2016-09-24"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-02-15"},{"lineNumber":17,"author":{"gitId":"-"},"content":"     * Returns the file path of the UserPrefs data file.","lastModifiedDate":"2017-02-15"},{"lineNumber":18,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-02-15"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    Path getUserPrefsFilePath();","lastModifiedDate":"2018-04-21"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-15"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-09-24"},{"lineNumber":22,"author":{"gitId":"-"},"content":"     * Returns UserPrefs data from storage.","lastModifiedDate":"2016-09-24"},{"lineNumber":23,"author":{"gitId":"-"},"content":"     *   Returns {@code Optional.empty()} if storage file is not found.","lastModifiedDate":"2016-09-24"},{"lineNumber":24,"author":{"gitId":"-"},"content":"     * @throws DataConversionException if the data in storage is not in the expected format.","lastModifiedDate":"2016-09-24"},{"lineNumber":25,"author":{"gitId":"-"},"content":"     * @throws IOException if there was any problem when reading from the storage.","lastModifiedDate":"2016-09-24"},{"lineNumber":26,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-09-24"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    Optional\u003cUserPrefs\u003e readUserPrefs() throws DataConversionException, IOException;","lastModifiedDate":"2016-09-28"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-09-24"},{"lineNumber":30,"author":{"gitId":"zxgoh"},"content":"     * Saves the given {@link ReadOnlyUserPrefs} to the storage.","lastModifiedDate":"2022-03-16"},{"lineNumber":31,"author":{"gitId":"-"},"content":"     * @param userPrefs cannot be null.","lastModifiedDate":"2016-09-24"},{"lineNumber":32,"author":{"gitId":"-"},"content":"     * @throws IOException if there was any problem writing to the file.","lastModifiedDate":"2016-09-24"},{"lineNumber":33,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-09-24"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    void saveUserPrefs(ReadOnlyUserPrefs userPrefs) throws IOException;","lastModifiedDate":"2018-11-27"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-28"},{"lineNumber":36,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-09-24"}],"authorContributionMap":{"-":34,"zxgoh":2}},{"path":"src/main/java/seedu/address/ui/CustomerCard.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.ui;","lastModifiedDate":"2022-03-14"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-03-14"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import javafx.fxml.FXML;","lastModifiedDate":"2022-03-14"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import javafx.scene.control.Label;","lastModifiedDate":"2022-03-14"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import javafx.scene.layout.FlowPane;","lastModifiedDate":"2022-03-14"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import javafx.scene.layout.HBox;","lastModifiedDate":"2022-03-14"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import javafx.scene.layout.Region;","lastModifiedDate":"2022-03-14"},{"lineNumber":8,"author":{"gitId":"zxgoh"},"content":"import seedu.address.model.customer.Customer;","lastModifiedDate":"2022-03-14"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-03-14"},{"lineNumber":10,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2022-03-14"},{"lineNumber":11,"author":{"gitId":"zxgoh"},"content":" * An UI component that displays information of a {@code Customer}.","lastModifiedDate":"2022-03-14"},{"lineNumber":12,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2022-03-14"},{"lineNumber":13,"author":{"gitId":"zxgoh"},"content":"public class CustomerCard extends UiPart\u003cRegion\u003e {","lastModifiedDate":"2022-03-14"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-03-14"},{"lineNumber":15,"author":{"gitId":"zxgoh"},"content":"    private static final String FXML \u003d \"CustomerListCard.fxml\";","lastModifiedDate":"2022-03-14"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-03-14"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2022-03-14"},{"lineNumber":18,"author":{"gitId":"-"},"content":"     * Note: Certain keywords such as \"location\" and \"resources\" are reserved keywords in JavaFX.","lastModifiedDate":"2022-03-14"},{"lineNumber":19,"author":{"gitId":"-"},"content":"     * As a consequence, UI elements\u0027 variable names cannot be set to such keywords","lastModifiedDate":"2022-03-14"},{"lineNumber":20,"author":{"gitId":"-"},"content":"     * or an exception will be thrown by JavaFX during runtime.","lastModifiedDate":"2022-03-14"},{"lineNumber":21,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2022-03-14"},{"lineNumber":22,"author":{"gitId":"-"},"content":"     * @see \u003ca href\u003d\"https://github.com/se-edu/addressbook-level4/issues/336\"\u003eThe issue on AddressBook level 4\u003c/a\u003e","lastModifiedDate":"2022-03-14"},{"lineNumber":23,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2022-03-14"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-03-14"},{"lineNumber":25,"author":{"gitId":"zxgoh"},"content":"    public final Customer customer;","lastModifiedDate":"2022-03-14"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-03-14"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2022-03-14"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    private HBox cardPane;","lastModifiedDate":"2022-03-14"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2022-03-14"},{"lineNumber":30,"author":{"gitId":"zxgoh"},"content":"    private Label nameCustomer;","lastModifiedDate":"2022-03-15"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2022-03-14"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    private Label id;","lastModifiedDate":"2022-03-14"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2022-03-14"},{"lineNumber":34,"author":{"gitId":"zxgoh"},"content":"    private Label phoneCustomer;","lastModifiedDate":"2022-03-15"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2022-03-14"},{"lineNumber":36,"author":{"gitId":"zxgoh"},"content":"    private Label addressCustomer;","lastModifiedDate":"2022-03-15"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2022-03-14"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    private Label email;","lastModifiedDate":"2022-03-14"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2022-03-14"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    private FlowPane tags;","lastModifiedDate":"2022-03-14"},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-03-14"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2022-03-14"},{"lineNumber":43,"author":{"gitId":"zxgoh"},"content":"     * Creates a {@code CustomerCode} with the given {@code Customer} and index to display.","lastModifiedDate":"2022-03-14"},{"lineNumber":44,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2022-03-14"},{"lineNumber":45,"author":{"gitId":"zxgoh"},"content":"    public CustomerCard(Customer customer, int displayedIndex) {","lastModifiedDate":"2022-03-14"},{"lineNumber":46,"author":{"gitId":"-"},"content":"        super(FXML);","lastModifiedDate":"2022-03-14"},{"lineNumber":47,"author":{"gitId":"zxgoh"},"content":"        this.customer \u003d customer;","lastModifiedDate":"2022-03-14"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        id.setText(displayedIndex + \". \");","lastModifiedDate":"2022-03-14"},{"lineNumber":49,"author":{"gitId":"zxgoh"},"content":"        nameCustomer.setText(customer.getName().fullName);","lastModifiedDate":"2022-03-15"},{"lineNumber":50,"author":{"gitId":"zxgoh"},"content":"        phoneCustomer.setText(customer.getPhone().value);","lastModifiedDate":"2022-03-15"},{"lineNumber":51,"author":{"gitId":"zxgoh"},"content":"        addressCustomer.setText(customer.getAddress().value);","lastModifiedDate":"2022-03-15"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2022-03-14"},{"lineNumber":53,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-03-14"},{"lineNumber":54,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2022-03-14"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2022-03-14"},{"lineNumber":56,"author":{"gitId":"-"},"content":"        // short circuit if same object","lastModifiedDate":"2022-03-14"},{"lineNumber":57,"author":{"gitId":"-"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2022-03-14"},{"lineNumber":58,"author":{"gitId":"-"},"content":"            return true;","lastModifiedDate":"2022-03-14"},{"lineNumber":59,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2022-03-14"},{"lineNumber":60,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-03-14"},{"lineNumber":61,"author":{"gitId":"-"},"content":"        // instanceof handles nulls","lastModifiedDate":"2022-03-14"},{"lineNumber":62,"author":{"gitId":"zxgoh"},"content":"        if (!(other instanceof CustomerCard)) {","lastModifiedDate":"2022-03-14"},{"lineNumber":63,"author":{"gitId":"-"},"content":"            return false;","lastModifiedDate":"2022-03-14"},{"lineNumber":64,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2022-03-14"},{"lineNumber":65,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-03-14"},{"lineNumber":66,"author":{"gitId":"-"},"content":"        // state check","lastModifiedDate":"2022-03-14"},{"lineNumber":67,"author":{"gitId":"zxgoh"},"content":"        CustomerCard card \u003d (CustomerCard) other;","lastModifiedDate":"2022-03-14"},{"lineNumber":68,"author":{"gitId":"-"},"content":"        return id.getText().equals(card.id.getText())","lastModifiedDate":"2022-03-14"},{"lineNumber":69,"author":{"gitId":"zxgoh"},"content":"                \u0026\u0026 customer.equals(card.customer);","lastModifiedDate":"2022-03-14"},{"lineNumber":70,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2022-03-14"},{"lineNumber":71,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2022-03-14"}],"authorContributionMap":{"-":54,"zxgoh":17}},{"path":"src/main/java/seedu/address/ui/CustomerListPanel.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"zxgoh"},"content":"package seedu.address.ui;","lastModifiedDate":"2022-03-14"},{"lineNumber":2,"author":{"gitId":"zxgoh"},"content":"","lastModifiedDate":"2022-03-14"},{"lineNumber":3,"author":{"gitId":"zxgoh"},"content":"import java.util.logging.Logger;","lastModifiedDate":"2022-03-14"},{"lineNumber":4,"author":{"gitId":"zxgoh"},"content":"","lastModifiedDate":"2022-03-14"},{"lineNumber":5,"author":{"gitId":"zxgoh"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2022-03-14"},{"lineNumber":6,"author":{"gitId":"zxgoh"},"content":"import javafx.fxml.FXML;","lastModifiedDate":"2022-03-14"},{"lineNumber":7,"author":{"gitId":"zxgoh"},"content":"import javafx.scene.control.ListCell;","lastModifiedDate":"2022-03-14"},{"lineNumber":8,"author":{"gitId":"zxgoh"},"content":"import javafx.scene.control.ListView;","lastModifiedDate":"2022-03-14"},{"lineNumber":9,"author":{"gitId":"zxgoh"},"content":"import seedu.address.commons.core.LogsCenter;","lastModifiedDate":"2022-03-14"},{"lineNumber":10,"author":{"gitId":"zxgoh"},"content":"import seedu.address.model.customer.Customer;","lastModifiedDate":"2022-03-14"},{"lineNumber":11,"author":{"gitId":"zxgoh"},"content":"","lastModifiedDate":"2022-03-14"},{"lineNumber":12,"author":{"gitId":"zxgoh"},"content":"/**","lastModifiedDate":"2022-03-14"},{"lineNumber":13,"author":{"gitId":"zxgoh"},"content":" * Panel containing the list of customers.","lastModifiedDate":"2022-03-14"},{"lineNumber":14,"author":{"gitId":"zxgoh"},"content":" */","lastModifiedDate":"2022-03-14"},{"lineNumber":15,"author":{"gitId":"zxgoh"},"content":"public class CustomerListPanel extends ListPanel {","lastModifiedDate":"2022-03-16"},{"lineNumber":16,"author":{"gitId":"zxgoh"},"content":"    private static final String FXML \u003d \"CustomerListPanel.fxml\";","lastModifiedDate":"2022-03-14"},{"lineNumber":17,"author":{"gitId":"zxgoh"},"content":"    private final Logger logger \u003d LogsCenter.getLogger(CustomerListPanel.class);","lastModifiedDate":"2022-03-14"},{"lineNumber":18,"author":{"gitId":"zxgoh"},"content":"","lastModifiedDate":"2022-03-14"},{"lineNumber":19,"author":{"gitId":"zxgoh"},"content":"    @FXML","lastModifiedDate":"2022-03-14"},{"lineNumber":20,"author":{"gitId":"zxgoh"},"content":"    private ListView\u003cCustomer\u003e customerListView;","lastModifiedDate":"2022-03-14"},{"lineNumber":21,"author":{"gitId":"zxgoh"},"content":"","lastModifiedDate":"2022-03-14"},{"lineNumber":22,"author":{"gitId":"zxgoh"},"content":"    /**","lastModifiedDate":"2022-03-14"},{"lineNumber":23,"author":{"gitId":"zxgoh"},"content":"     * Creates a {@code CustomerListPanel} with the given {@code ObservableList}.","lastModifiedDate":"2022-03-14"},{"lineNumber":24,"author":{"gitId":"zxgoh"},"content":"     */","lastModifiedDate":"2022-03-14"},{"lineNumber":25,"author":{"gitId":"zxgoh"},"content":"    public CustomerListPanel(ObservableList\u003cCustomer\u003e customerList) {","lastModifiedDate":"2022-03-14"},{"lineNumber":26,"author":{"gitId":"zxgoh"},"content":"        super(FXML);","lastModifiedDate":"2022-03-14"},{"lineNumber":27,"author":{"gitId":"zxgoh"},"content":"        customerListView.setItems(customerList);","lastModifiedDate":"2022-03-14"},{"lineNumber":28,"author":{"gitId":"zxgoh"},"content":"        customerListView.setCellFactory(listView -\u003e new CustomerListViewCell());","lastModifiedDate":"2022-03-14"},{"lineNumber":29,"author":{"gitId":"zxgoh"},"content":"    }","lastModifiedDate":"2022-03-14"},{"lineNumber":30,"author":{"gitId":"zxgoh"},"content":"","lastModifiedDate":"2022-03-14"},{"lineNumber":31,"author":{"gitId":"zxgoh"},"content":"    /**","lastModifiedDate":"2022-03-14"},{"lineNumber":32,"author":{"gitId":"zxgoh"},"content":"     * Custom {@code ListCell} that displays the graphics of a {@code Customer} using a {@code CustomerCard}.","lastModifiedDate":"2022-03-14"},{"lineNumber":33,"author":{"gitId":"zxgoh"},"content":"     */","lastModifiedDate":"2022-03-14"},{"lineNumber":34,"author":{"gitId":"zxgoh"},"content":"    class CustomerListViewCell extends ListCell\u003cCustomer\u003e {","lastModifiedDate":"2022-03-14"},{"lineNumber":35,"author":{"gitId":"zxgoh"},"content":"        @Override","lastModifiedDate":"2022-03-14"},{"lineNumber":36,"author":{"gitId":"zxgoh"},"content":"        protected void updateItem(Customer customer, boolean empty) {","lastModifiedDate":"2022-03-14"},{"lineNumber":37,"author":{"gitId":"zxgoh"},"content":"            super.updateItem(customer, empty);","lastModifiedDate":"2022-03-14"},{"lineNumber":38,"author":{"gitId":"zxgoh"},"content":"","lastModifiedDate":"2022-03-14"},{"lineNumber":39,"author":{"gitId":"zxgoh"},"content":"            if (empty || customer \u003d\u003d null) {","lastModifiedDate":"2022-03-14"},{"lineNumber":40,"author":{"gitId":"zxgoh"},"content":"                setGraphic(null);","lastModifiedDate":"2022-03-14"},{"lineNumber":41,"author":{"gitId":"zxgoh"},"content":"                setText(null);","lastModifiedDate":"2022-03-14"},{"lineNumber":42,"author":{"gitId":"zxgoh"},"content":"            } else {","lastModifiedDate":"2022-03-14"},{"lineNumber":43,"author":{"gitId":"zxgoh"},"content":"                setGraphic(new CustomerCard(customer, getIndex() + 1).getRoot());","lastModifiedDate":"2022-03-14"},{"lineNumber":44,"author":{"gitId":"zxgoh"},"content":"            }","lastModifiedDate":"2022-03-14"},{"lineNumber":45,"author":{"gitId":"zxgoh"},"content":"        }","lastModifiedDate":"2022-03-14"},{"lineNumber":46,"author":{"gitId":"zxgoh"},"content":"    }","lastModifiedDate":"2022-03-14"},{"lineNumber":47,"author":{"gitId":"zxgoh"},"content":"","lastModifiedDate":"2022-03-14"},{"lineNumber":48,"author":{"gitId":"zxgoh"},"content":"}","lastModifiedDate":"2022-03-14"}],"authorContributionMap":{"zxgoh":48}},{"path":"src/main/java/seedu/address/ui/DishCard.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"jaegarpoon"},"content":"package seedu.address.ui;","lastModifiedDate":"2022-03-10"},{"lineNumber":2,"author":{"gitId":"jaegarpoon"},"content":"","lastModifiedDate":"2022-03-10"},{"lineNumber":3,"author":{"gitId":"jaegarpoon"},"content":"import javafx.fxml.FXML;","lastModifiedDate":"2022-03-10"},{"lineNumber":4,"author":{"gitId":"jaegarpoon"},"content":"import javafx.scene.control.Label;","lastModifiedDate":"2022-03-10"},{"lineNumber":5,"author":{"gitId":"jaegarpoon"},"content":"import javafx.scene.layout.HBox;","lastModifiedDate":"2022-03-10"},{"lineNumber":6,"author":{"gitId":"jaegarpoon"},"content":"import javafx.scene.layout.Region;","lastModifiedDate":"2022-03-10"},{"lineNumber":7,"author":{"gitId":"jaegarpoon"},"content":"import seedu.address.model.dish.Dish;","lastModifiedDate":"2022-03-24"},{"lineNumber":8,"author":{"gitId":"jaegarpoon"},"content":"","lastModifiedDate":"2022-03-10"},{"lineNumber":9,"author":{"gitId":"jaegarpoon"},"content":"/**","lastModifiedDate":"2022-03-10"},{"lineNumber":10,"author":{"gitId":"jaegarpoon"},"content":" * An UI component that displays information of a {@code Person}.","lastModifiedDate":"2022-03-10"},{"lineNumber":11,"author":{"gitId":"jaegarpoon"},"content":" */","lastModifiedDate":"2022-03-10"},{"lineNumber":12,"author":{"gitId":"jaegarpoon"},"content":"public class DishCard extends UiPart\u003cRegion\u003e {","lastModifiedDate":"2022-03-10"},{"lineNumber":13,"author":{"gitId":"jaegarpoon"},"content":"","lastModifiedDate":"2022-03-10"},{"lineNumber":14,"author":{"gitId":"jaegarpoon"},"content":"    private static final String FXML \u003d \"DishListCard.fxml\";","lastModifiedDate":"2022-03-10"},{"lineNumber":15,"author":{"gitId":"jaegarpoon"},"content":"","lastModifiedDate":"2022-03-10"},{"lineNumber":16,"author":{"gitId":"jaegarpoon"},"content":"    /**","lastModifiedDate":"2022-03-10"},{"lineNumber":17,"author":{"gitId":"jaegarpoon"},"content":"     * Note: Certain keywords such as \"location\" and \"resources\" are reserved keywords in JavaFX.","lastModifiedDate":"2022-03-10"},{"lineNumber":18,"author":{"gitId":"jaegarpoon"},"content":"     * As a consequence, UI elements\u0027 variable names cannot be set to such keywords","lastModifiedDate":"2022-03-10"},{"lineNumber":19,"author":{"gitId":"jaegarpoon"},"content":"     * or an exception will be thrown by JavaFX during runtime.","lastModifiedDate":"2022-03-10"},{"lineNumber":20,"author":{"gitId":"jaegarpoon"},"content":"     *","lastModifiedDate":"2022-03-10"},{"lineNumber":21,"author":{"gitId":"jaegarpoon"},"content":"     * @see \u003ca href\u003d\"https://github.com/se-edu/addressbook-level4/issues/336\"\u003eThe issue on AddressBook level 4\u003c/a\u003e","lastModifiedDate":"2022-03-10"},{"lineNumber":22,"author":{"gitId":"jaegarpoon"},"content":"     */","lastModifiedDate":"2022-03-10"},{"lineNumber":23,"author":{"gitId":"jaegarpoon"},"content":"","lastModifiedDate":"2022-03-10"},{"lineNumber":24,"author":{"gitId":"jaegarpoon"},"content":"    public final Dish dish;","lastModifiedDate":"2022-03-10"},{"lineNumber":25,"author":{"gitId":"jaegarpoon"},"content":"","lastModifiedDate":"2022-03-10"},{"lineNumber":26,"author":{"gitId":"jaegarpoon"},"content":"    @FXML","lastModifiedDate":"2022-03-10"},{"lineNumber":27,"author":{"gitId":"jaegarpoon"},"content":"    private HBox dishCardPane;","lastModifiedDate":"2022-03-11"},{"lineNumber":28,"author":{"gitId":"jaegarpoon"},"content":"    @FXML","lastModifiedDate":"2022-03-10"},{"lineNumber":29,"author":{"gitId":"jaegarpoon"},"content":"    private Label dishName;","lastModifiedDate":"2022-03-11"},{"lineNumber":30,"author":{"gitId":"jaegarpoon"},"content":"    @FXML","lastModifiedDate":"2022-03-10"},{"lineNumber":31,"author":{"gitId":"jaegarpoon"},"content":"    private Label dishId;","lastModifiedDate":"2022-03-11"},{"lineNumber":32,"author":{"gitId":"jaegarpoon"},"content":"    @FXML","lastModifiedDate":"2022-03-28"},{"lineNumber":33,"author":{"gitId":"jaegarpoon"},"content":"    private Label dishPrice;","lastModifiedDate":"2022-03-28"},{"lineNumber":34,"author":{"gitId":"jaegarpoon"},"content":"","lastModifiedDate":"2022-03-10"},{"lineNumber":35,"author":{"gitId":"jaegarpoon"},"content":"    /**","lastModifiedDate":"2022-03-10"},{"lineNumber":36,"author":{"gitId":"jaegarpoon"},"content":"     * Creates a {@code DishCode} with the given {@code Dish} and index to display.","lastModifiedDate":"2022-03-10"},{"lineNumber":37,"author":{"gitId":"jaegarpoon"},"content":"     */","lastModifiedDate":"2022-03-10"},{"lineNumber":38,"author":{"gitId":"jaegarpoon"},"content":"    public DishCard(Dish dish, int displayedIndex) {","lastModifiedDate":"2022-03-10"},{"lineNumber":39,"author":{"gitId":"jaegarpoon"},"content":"        super(FXML);","lastModifiedDate":"2022-03-10"},{"lineNumber":40,"author":{"gitId":"jaegarpoon"},"content":"        this.dish \u003d dish;","lastModifiedDate":"2022-03-10"},{"lineNumber":41,"author":{"gitId":"jaegarpoon"},"content":"        dishId.setText(displayedIndex + \". \");","lastModifiedDate":"2022-03-11"},{"lineNumber":42,"author":{"gitId":"jaegarpoon"},"content":"        dishName.setText(dish.getName().fullName);","lastModifiedDate":"2022-03-11"},{"lineNumber":43,"author":{"gitId":"jaegarpoon"},"content":"        dishPrice.setText(\"$\" + dish.getPrice().toString());","lastModifiedDate":"2022-03-28"},{"lineNumber":44,"author":{"gitId":"jaegarpoon"},"content":"    }","lastModifiedDate":"2022-03-10"},{"lineNumber":45,"author":{"gitId":"jaegarpoon"},"content":"","lastModifiedDate":"2022-03-10"},{"lineNumber":46,"author":{"gitId":"jaegarpoon"},"content":"    @Override","lastModifiedDate":"2022-03-10"},{"lineNumber":47,"author":{"gitId":"jaegarpoon"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2022-03-10"},{"lineNumber":48,"author":{"gitId":"jaegarpoon"},"content":"        // short circuit if same object","lastModifiedDate":"2022-03-10"},{"lineNumber":49,"author":{"gitId":"jaegarpoon"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2022-03-10"},{"lineNumber":50,"author":{"gitId":"jaegarpoon"},"content":"            return true;","lastModifiedDate":"2022-03-10"},{"lineNumber":51,"author":{"gitId":"jaegarpoon"},"content":"        }","lastModifiedDate":"2022-03-10"},{"lineNumber":52,"author":{"gitId":"jaegarpoon"},"content":"","lastModifiedDate":"2022-03-10"},{"lineNumber":53,"author":{"gitId":"jaegarpoon"},"content":"        // instanceof handles nulls","lastModifiedDate":"2022-03-10"},{"lineNumber":54,"author":{"gitId":"jaegarpoon"},"content":"        if (!(other instanceof DishCard)) {","lastModifiedDate":"2022-03-10"},{"lineNumber":55,"author":{"gitId":"jaegarpoon"},"content":"            return false;","lastModifiedDate":"2022-03-10"},{"lineNumber":56,"author":{"gitId":"jaegarpoon"},"content":"        }","lastModifiedDate":"2022-03-10"},{"lineNumber":57,"author":{"gitId":"jaegarpoon"},"content":"","lastModifiedDate":"2022-03-10"},{"lineNumber":58,"author":{"gitId":"jaegarpoon"},"content":"        // state check","lastModifiedDate":"2022-03-10"},{"lineNumber":59,"author":{"gitId":"jaegarpoon"},"content":"        DishCard card \u003d (DishCard) other;","lastModifiedDate":"2022-03-10"},{"lineNumber":60,"author":{"gitId":"jaegarpoon"},"content":"        return dishId.getText().equals(card.dishId.getText())","lastModifiedDate":"2022-03-11"},{"lineNumber":61,"author":{"gitId":"jaegarpoon"},"content":"                \u0026\u0026 dish.equals(card.dish);","lastModifiedDate":"2022-03-10"},{"lineNumber":62,"author":{"gitId":"jaegarpoon"},"content":"    }","lastModifiedDate":"2022-03-10"},{"lineNumber":63,"author":{"gitId":"jaegarpoon"},"content":"}","lastModifiedDate":"2022-03-10"},{"lineNumber":64,"author":{"gitId":"jaegarpoon"},"content":"","lastModifiedDate":"2022-03-10"}],"authorContributionMap":{"jaegarpoon":64}},{"path":"src/main/java/seedu/address/ui/DishListPanel.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"jaegarpoon"},"content":"package seedu.address.ui;","lastModifiedDate":"2022-03-10"},{"lineNumber":2,"author":{"gitId":"jaegarpoon"},"content":"","lastModifiedDate":"2022-03-10"},{"lineNumber":3,"author":{"gitId":"jaegarpoon"},"content":"import java.util.logging.Logger;","lastModifiedDate":"2022-03-10"},{"lineNumber":4,"author":{"gitId":"jaegarpoon"},"content":"","lastModifiedDate":"2022-03-10"},{"lineNumber":5,"author":{"gitId":"jaegarpoon"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2022-03-10"},{"lineNumber":6,"author":{"gitId":"jaegarpoon"},"content":"import javafx.fxml.FXML;","lastModifiedDate":"2022-03-10"},{"lineNumber":7,"author":{"gitId":"jaegarpoon"},"content":"import javafx.scene.control.ListCell;","lastModifiedDate":"2022-03-10"},{"lineNumber":8,"author":{"gitId":"jaegarpoon"},"content":"import javafx.scene.control.ListView;","lastModifiedDate":"2022-03-10"},{"lineNumber":9,"author":{"gitId":"jaegarpoon"},"content":"import seedu.address.commons.core.LogsCenter;","lastModifiedDate":"2022-03-10"},{"lineNumber":10,"author":{"gitId":"jaegarpoon"},"content":"import seedu.address.model.dish.Dish;","lastModifiedDate":"2022-03-24"},{"lineNumber":11,"author":{"gitId":"jaegarpoon"},"content":"","lastModifiedDate":"2022-03-10"},{"lineNumber":12,"author":{"gitId":"jaegarpoon"},"content":"/**","lastModifiedDate":"2022-03-10"},{"lineNumber":13,"author":{"gitId":"xzzz3"},"content":" * Panel containing the list of dishes.","lastModifiedDate":"2022-03-14"},{"lineNumber":14,"author":{"gitId":"jaegarpoon"},"content":" */","lastModifiedDate":"2022-03-10"},{"lineNumber":15,"author":{"gitId":"jaegarpoon"},"content":"public class DishListPanel extends ListPanel {","lastModifiedDate":"2022-03-11"},{"lineNumber":16,"author":{"gitId":"jaegarpoon"},"content":"    private static final String FXML \u003d \"DishListPanel.fxml\";","lastModifiedDate":"2022-03-10"},{"lineNumber":17,"author":{"gitId":"jaegarpoon"},"content":"    private final Logger logger \u003d LogsCenter.getLogger(DishListPanel.class);","lastModifiedDate":"2022-03-10"},{"lineNumber":18,"author":{"gitId":"jaegarpoon"},"content":"","lastModifiedDate":"2022-03-10"},{"lineNumber":19,"author":{"gitId":"jaegarpoon"},"content":"    @FXML","lastModifiedDate":"2022-03-10"},{"lineNumber":20,"author":{"gitId":"jaegarpoon"},"content":"    private ListView\u003cDish\u003e dishListView;","lastModifiedDate":"2022-03-10"},{"lineNumber":21,"author":{"gitId":"jaegarpoon"},"content":"","lastModifiedDate":"2022-03-10"},{"lineNumber":22,"author":{"gitId":"jaegarpoon"},"content":"    /**","lastModifiedDate":"2022-03-10"},{"lineNumber":23,"author":{"gitId":"jaegarpoon"},"content":"     * Creates a {@code DishListPanel} with the given {@code ObservableList}.","lastModifiedDate":"2022-03-10"},{"lineNumber":24,"author":{"gitId":"jaegarpoon"},"content":"     */","lastModifiedDate":"2022-03-10"},{"lineNumber":25,"author":{"gitId":"jaegarpoon"},"content":"    public DishListPanel(ObservableList\u003cDish\u003e dishList) {","lastModifiedDate":"2022-03-10"},{"lineNumber":26,"author":{"gitId":"jaegarpoon"},"content":"        super(FXML);","lastModifiedDate":"2022-03-10"},{"lineNumber":27,"author":{"gitId":"jaegarpoon"},"content":"        dishListView.setItems(dishList);","lastModifiedDate":"2022-03-10"},{"lineNumber":28,"author":{"gitId":"jaegarpoon"},"content":"        dishListView.setCellFactory(listView -\u003e new DishListViewCell());","lastModifiedDate":"2022-03-10"},{"lineNumber":29,"author":{"gitId":"jaegarpoon"},"content":"    }","lastModifiedDate":"2022-03-10"},{"lineNumber":30,"author":{"gitId":"jaegarpoon"},"content":"","lastModifiedDate":"2022-03-10"},{"lineNumber":31,"author":{"gitId":"jaegarpoon"},"content":"    /**","lastModifiedDate":"2022-03-10"},{"lineNumber":32,"author":{"gitId":"xzzz3"},"content":"     * Custom {@code ListCell} that displays the graphics of a {@code Dish} using a {@code DishCard}.","lastModifiedDate":"2022-03-14"},{"lineNumber":33,"author":{"gitId":"jaegarpoon"},"content":"     */","lastModifiedDate":"2022-03-10"},{"lineNumber":34,"author":{"gitId":"jaegarpoon"},"content":"    class DishListViewCell extends ListCell\u003cDish\u003e {","lastModifiedDate":"2022-03-10"},{"lineNumber":35,"author":{"gitId":"jaegarpoon"},"content":"        @Override","lastModifiedDate":"2022-03-10"},{"lineNumber":36,"author":{"gitId":"jaegarpoon"},"content":"        protected void updateItem(Dish dish, boolean empty) {","lastModifiedDate":"2022-03-10"},{"lineNumber":37,"author":{"gitId":"jaegarpoon"},"content":"            super.updateItem(dish, empty);","lastModifiedDate":"2022-03-10"},{"lineNumber":38,"author":{"gitId":"jaegarpoon"},"content":"","lastModifiedDate":"2022-03-10"},{"lineNumber":39,"author":{"gitId":"jaegarpoon"},"content":"            if (empty || dish \u003d\u003d null) {","lastModifiedDate":"2022-03-10"},{"lineNumber":40,"author":{"gitId":"jaegarpoon"},"content":"                setGraphic(null);","lastModifiedDate":"2022-03-10"},{"lineNumber":41,"author":{"gitId":"jaegarpoon"},"content":"                setText(null);","lastModifiedDate":"2022-03-10"},{"lineNumber":42,"author":{"gitId":"jaegarpoon"},"content":"            } else {","lastModifiedDate":"2022-03-10"},{"lineNumber":43,"author":{"gitId":"jaegarpoon"},"content":"                setGraphic(new DishCard(dish, getIndex() + 1).getRoot());","lastModifiedDate":"2022-03-10"},{"lineNumber":44,"author":{"gitId":"jaegarpoon"},"content":"            }","lastModifiedDate":"2022-03-10"},{"lineNumber":45,"author":{"gitId":"jaegarpoon"},"content":"        }","lastModifiedDate":"2022-03-10"},{"lineNumber":46,"author":{"gitId":"jaegarpoon"},"content":"    }","lastModifiedDate":"2022-03-10"},{"lineNumber":47,"author":{"gitId":"jaegarpoon"},"content":"","lastModifiedDate":"2022-03-10"},{"lineNumber":48,"author":{"gitId":"jaegarpoon"},"content":"}","lastModifiedDate":"2022-03-10"},{"lineNumber":49,"author":{"gitId":"jaegarpoon"},"content":"","lastModifiedDate":"2022-03-10"}],"authorContributionMap":{"xzzz3":2,"jaegarpoon":47}},{"path":"src/main/java/seedu/address/ui/DriverCard.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"hieunm1821"},"content":"package seedu.address.ui;","lastModifiedDate":"2022-03-10"},{"lineNumber":2,"author":{"gitId":"hieunm1821"},"content":"","lastModifiedDate":"2022-03-10"},{"lineNumber":3,"author":{"gitId":"hieunm1821"},"content":"import javafx.fxml.FXML;","lastModifiedDate":"2022-03-10"},{"lineNumber":4,"author":{"gitId":"hieunm1821"},"content":"import javafx.scene.control.Label;","lastModifiedDate":"2022-03-10"},{"lineNumber":5,"author":{"gitId":"hieunm1821"},"content":"import javafx.scene.layout.HBox;","lastModifiedDate":"2022-03-10"},{"lineNumber":6,"author":{"gitId":"hieunm1821"},"content":"import javafx.scene.layout.Region;","lastModifiedDate":"2022-03-11"},{"lineNumber":7,"author":{"gitId":"hieunm1821"},"content":"import seedu.address.model.driver.Driver;","lastModifiedDate":"2022-03-10"},{"lineNumber":8,"author":{"gitId":"hieunm1821"},"content":"","lastModifiedDate":"2022-03-10"},{"lineNumber":9,"author":{"gitId":"hieunm1821"},"content":"public class DriverCard extends UiPart\u003cRegion\u003e {","lastModifiedDate":"2022-03-10"},{"lineNumber":10,"author":{"gitId":"hieunm1821"},"content":"    private static final String FXML \u003d \"DriverListCard.fxml\";","lastModifiedDate":"2022-03-10"},{"lineNumber":11,"author":{"gitId":"hieunm1821"},"content":"","lastModifiedDate":"2022-03-10"},{"lineNumber":12,"author":{"gitId":"hieunm1821"},"content":"    public final Driver driver;","lastModifiedDate":"2022-03-10"},{"lineNumber":13,"author":{"gitId":"hieunm1821"},"content":"","lastModifiedDate":"2022-03-10"},{"lineNumber":14,"author":{"gitId":"hieunm1821"},"content":"    @FXML","lastModifiedDate":"2022-03-10"},{"lineNumber":15,"author":{"gitId":"hieunm1821"},"content":"    private HBox cardPane;","lastModifiedDate":"2022-03-10"},{"lineNumber":16,"author":{"gitId":"hieunm1821"},"content":"    @FXML","lastModifiedDate":"2022-03-10"},{"lineNumber":17,"author":{"gitId":"hieunm1821"},"content":"    private Label name;","lastModifiedDate":"2022-03-10"},{"lineNumber":18,"author":{"gitId":"hieunm1821"},"content":"    @FXML","lastModifiedDate":"2022-03-10"},{"lineNumber":19,"author":{"gitId":"hieunm1821"},"content":"    private Label id;","lastModifiedDate":"2022-03-10"},{"lineNumber":20,"author":{"gitId":"hieunm1821"},"content":"    @FXML","lastModifiedDate":"2022-03-10"},{"lineNumber":21,"author":{"gitId":"hieunm1821"},"content":"    private Label phone;","lastModifiedDate":"2022-03-10"},{"lineNumber":22,"author":{"gitId":"hieunm1821"},"content":"    @FXML","lastModifiedDate":"2022-03-10"},{"lineNumber":23,"author":{"gitId":"hieunm1821"},"content":"    private Label status;","lastModifiedDate":"2022-03-10"},{"lineNumber":24,"author":{"gitId":"hieunm1821"},"content":"","lastModifiedDate":"2022-03-10"},{"lineNumber":25,"author":{"gitId":"hieunm1821"},"content":"    /**","lastModifiedDate":"2022-03-11"},{"lineNumber":26,"author":{"gitId":"hieunm1821"},"content":"     * Creates a {@code DriverCode} with the given {@code Driver} and index to display.","lastModifiedDate":"2022-03-11"},{"lineNumber":27,"author":{"gitId":"hieunm1821"},"content":"     */","lastModifiedDate":"2022-03-11"},{"lineNumber":28,"author":{"gitId":"hieunm1821"},"content":"    public DriverCard(Driver driver, int displayedIndex) {","lastModifiedDate":"2022-03-10"},{"lineNumber":29,"author":{"gitId":"hieunm1821"},"content":"        super(FXML);","lastModifiedDate":"2022-03-10"},{"lineNumber":30,"author":{"gitId":"hieunm1821"},"content":"        this.driver \u003d driver;","lastModifiedDate":"2022-03-10"},{"lineNumber":31,"author":{"gitId":"hieunm1821"},"content":"        id.setText(displayedIndex + \". \");","lastModifiedDate":"2022-03-10"},{"lineNumber":32,"author":{"gitId":"hieunm1821"},"content":"        name.setText(driver.getName().fullName);","lastModifiedDate":"2022-03-10"},{"lineNumber":33,"author":{"gitId":"hieunm1821"},"content":"        phone.setText(driver.getPhone().value);","lastModifiedDate":"2022-03-10"},{"lineNumber":34,"author":{"gitId":"hieunm1821"},"content":"        status.setText(driver.getStatus().name());","lastModifiedDate":"2022-03-27"},{"lineNumber":35,"author":{"gitId":"hieunm1821"},"content":"    }","lastModifiedDate":"2022-03-10"},{"lineNumber":36,"author":{"gitId":"hieunm1821"},"content":"","lastModifiedDate":"2022-03-10"},{"lineNumber":37,"author":{"gitId":"hieunm1821"},"content":"    @Override","lastModifiedDate":"2022-03-10"},{"lineNumber":38,"author":{"gitId":"hieunm1821"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2022-03-10"},{"lineNumber":39,"author":{"gitId":"hieunm1821"},"content":"        // short circuit if same object","lastModifiedDate":"2022-03-10"},{"lineNumber":40,"author":{"gitId":"hieunm1821"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2022-03-10"},{"lineNumber":41,"author":{"gitId":"hieunm1821"},"content":"            return true;","lastModifiedDate":"2022-03-10"},{"lineNumber":42,"author":{"gitId":"hieunm1821"},"content":"        }","lastModifiedDate":"2022-03-10"},{"lineNumber":43,"author":{"gitId":"hieunm1821"},"content":"","lastModifiedDate":"2022-03-10"},{"lineNumber":44,"author":{"gitId":"hieunm1821"},"content":"        // instanceof handles nulls","lastModifiedDate":"2022-03-10"},{"lineNumber":45,"author":{"gitId":"hieunm1821"},"content":"        if (!(other instanceof DriverCard)) {","lastModifiedDate":"2022-03-10"},{"lineNumber":46,"author":{"gitId":"hieunm1821"},"content":"            return false;","lastModifiedDate":"2022-03-10"},{"lineNumber":47,"author":{"gitId":"hieunm1821"},"content":"        }","lastModifiedDate":"2022-03-10"},{"lineNumber":48,"author":{"gitId":"hieunm1821"},"content":"","lastModifiedDate":"2022-03-10"},{"lineNumber":49,"author":{"gitId":"hieunm1821"},"content":"        // state check","lastModifiedDate":"2022-03-10"},{"lineNumber":50,"author":{"gitId":"hieunm1821"},"content":"        DriverCard card \u003d (DriverCard) other;","lastModifiedDate":"2022-03-10"},{"lineNumber":51,"author":{"gitId":"hieunm1821"},"content":"        return id.getText().equals(card.id.getText())","lastModifiedDate":"2022-03-10"},{"lineNumber":52,"author":{"gitId":"hieunm1821"},"content":"                \u0026\u0026 driver.equals(card.driver);","lastModifiedDate":"2022-03-10"},{"lineNumber":53,"author":{"gitId":"hieunm1821"},"content":"    }","lastModifiedDate":"2022-03-10"},{"lineNumber":54,"author":{"gitId":"hieunm1821"},"content":"}","lastModifiedDate":"2022-03-10"}],"authorContributionMap":{"hieunm1821":54}},{"path":"src/main/java/seedu/address/ui/DriverListPanel.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"hieunm1821"},"content":"package seedu.address.ui;","lastModifiedDate":"2022-03-10"},{"lineNumber":2,"author":{"gitId":"hieunm1821"},"content":"","lastModifiedDate":"2022-03-10"},{"lineNumber":3,"author":{"gitId":"hieunm1821"},"content":"import java.util.logging.Logger;","lastModifiedDate":"2022-03-10"},{"lineNumber":4,"author":{"gitId":"hieunm1821"},"content":"","lastModifiedDate":"2022-03-10"},{"lineNumber":5,"author":{"gitId":"hieunm1821"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2022-03-10"},{"lineNumber":6,"author":{"gitId":"hieunm1821"},"content":"import javafx.fxml.FXML;","lastModifiedDate":"2022-03-10"},{"lineNumber":7,"author":{"gitId":"hieunm1821"},"content":"import javafx.scene.control.ListCell;","lastModifiedDate":"2022-03-10"},{"lineNumber":8,"author":{"gitId":"hieunm1821"},"content":"import javafx.scene.control.ListView;","lastModifiedDate":"2022-03-10"},{"lineNumber":9,"author":{"gitId":"hieunm1821"},"content":"import seedu.address.commons.core.LogsCenter;","lastModifiedDate":"2022-03-10"},{"lineNumber":10,"author":{"gitId":"hieunm1821"},"content":"import seedu.address.model.driver.Driver;","lastModifiedDate":"2022-03-10"},{"lineNumber":11,"author":{"gitId":"hieunm1821"},"content":"","lastModifiedDate":"2022-03-10"},{"lineNumber":12,"author":{"gitId":"hieunm1821"},"content":"public class DriverListPanel extends ListPanel {","lastModifiedDate":"2022-03-14"},{"lineNumber":13,"author":{"gitId":"hieunm1821"},"content":"    private static final String FXML \u003d \"DriverListPanel.fxml\";","lastModifiedDate":"2022-03-10"},{"lineNumber":14,"author":{"gitId":"hieunm1821"},"content":"    private final Logger logger \u003d LogsCenter.getLogger(DriverListPanel.class);","lastModifiedDate":"2022-03-10"},{"lineNumber":15,"author":{"gitId":"hieunm1821"},"content":"","lastModifiedDate":"2022-03-10"},{"lineNumber":16,"author":{"gitId":"hieunm1821"},"content":"    @FXML","lastModifiedDate":"2022-03-10"},{"lineNumber":17,"author":{"gitId":"hieunm1821"},"content":"    private ListView\u003cDriver\u003e driverListView;","lastModifiedDate":"2022-03-10"},{"lineNumber":18,"author":{"gitId":"hieunm1821"},"content":"","lastModifiedDate":"2022-03-10"},{"lineNumber":19,"author":{"gitId":"hieunm1821"},"content":"    /**","lastModifiedDate":"2022-03-11"},{"lineNumber":20,"author":{"gitId":"hieunm1821"},"content":"     * Creates a {@code DriverListPanel} with the given {@code ObservableList}.","lastModifiedDate":"2022-03-11"},{"lineNumber":21,"author":{"gitId":"hieunm1821"},"content":"     */","lastModifiedDate":"2022-03-11"},{"lineNumber":22,"author":{"gitId":"hieunm1821"},"content":"    public DriverListPanel(ObservableList\u003cDriver\u003e driverList) {","lastModifiedDate":"2022-03-10"},{"lineNumber":23,"author":{"gitId":"hieunm1821"},"content":"        super(FXML);","lastModifiedDate":"2022-03-10"},{"lineNumber":24,"author":{"gitId":"hieunm1821"},"content":"        driverListView.setItems(driverList);","lastModifiedDate":"2022-03-10"},{"lineNumber":25,"author":{"gitId":"hieunm1821"},"content":"        driverListView.setCellFactory(listView -\u003e new DriverListViewCell());","lastModifiedDate":"2022-03-10"},{"lineNumber":26,"author":{"gitId":"hieunm1821"},"content":"    }","lastModifiedDate":"2022-03-10"},{"lineNumber":27,"author":{"gitId":"hieunm1821"},"content":"","lastModifiedDate":"2022-03-10"},{"lineNumber":28,"author":{"gitId":"hieunm1821"},"content":"    class DriverListViewCell extends ListCell\u003cDriver\u003e {","lastModifiedDate":"2022-03-10"},{"lineNumber":29,"author":{"gitId":"hieunm1821"},"content":"        @Override","lastModifiedDate":"2022-03-10"},{"lineNumber":30,"author":{"gitId":"hieunm1821"},"content":"        protected void updateItem(Driver driver, boolean empty) {","lastModifiedDate":"2022-03-10"},{"lineNumber":31,"author":{"gitId":"hieunm1821"},"content":"            super.updateItem(driver, empty);","lastModifiedDate":"2022-03-10"},{"lineNumber":32,"author":{"gitId":"hieunm1821"},"content":"","lastModifiedDate":"2022-03-10"},{"lineNumber":33,"author":{"gitId":"hieunm1821"},"content":"            if (empty || driver \u003d\u003d null) {","lastModifiedDate":"2022-03-10"},{"lineNumber":34,"author":{"gitId":"hieunm1821"},"content":"                setGraphic(null);","lastModifiedDate":"2022-03-10"},{"lineNumber":35,"author":{"gitId":"hieunm1821"},"content":"                setText(null);","lastModifiedDate":"2022-03-10"},{"lineNumber":36,"author":{"gitId":"hieunm1821"},"content":"            } else {","lastModifiedDate":"2022-03-10"},{"lineNumber":37,"author":{"gitId":"hieunm1821"},"content":"                setGraphic(new DriverCard(driver, getIndex() + 1).getRoot());","lastModifiedDate":"2022-03-10"},{"lineNumber":38,"author":{"gitId":"hieunm1821"},"content":"            }","lastModifiedDate":"2022-03-10"},{"lineNumber":39,"author":{"gitId":"hieunm1821"},"content":"        }","lastModifiedDate":"2022-03-10"},{"lineNumber":40,"author":{"gitId":"hieunm1821"},"content":"    }","lastModifiedDate":"2022-03-10"},{"lineNumber":41,"author":{"gitId":"hieunm1821"},"content":"}","lastModifiedDate":"2022-03-10"}],"authorContributionMap":{"hieunm1821":41}},{"path":"src/main/java/seedu/address/ui/HelpWindow.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.ui;","lastModifiedDate":"2016-09-22"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.util.logging.Logger;","lastModifiedDate":"2017-01-19"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import javafx.fxml.FXML;","lastModifiedDate":"2016-12-24"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import javafx.scene.control.Button;","lastModifiedDate":"2019-08-19"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import javafx.scene.control.Label;","lastModifiedDate":"2019-08-19"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import javafx.scene.input.Clipboard;","lastModifiedDate":"2019-08-19"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import javafx.scene.input.ClipboardContent;","lastModifiedDate":"2019-08-19"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import javafx.stage.Stage;","lastModifiedDate":"2016-08-18"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.LogsCenter;","lastModifiedDate":"2016-09-23"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-09"},{"lineNumber":13,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-18"},{"lineNumber":14,"author":{"gitId":"-"},"content":" * Controller for a help page","lastModifiedDate":"2016-08-18"},{"lineNumber":15,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-18"},{"lineNumber":16,"author":{"gitId":"-"},"content":"public class HelpWindow extends UiPart\u003cStage\u003e {","lastModifiedDate":"2017-12-01"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":18,"author":{"gitId":"xzzz3"},"content":"    public static final String USERGUIDE_URL \u003d \"https://github.com/AY2122S2-CS2103-F10-2/\"","lastModifiedDate":"2022-03-28"},{"lineNumber":19,"author":{"gitId":"xzzz3"},"content":"                                                + \"tp/blob/master/docs/UserGuide.md\";","lastModifiedDate":"2022-03-28"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    public static final String HELP_MESSAGE \u003d \"Refer to the user guide: \" + USERGUIDE_URL;","lastModifiedDate":"2019-08-19"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-03"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    private static final Logger logger \u003d LogsCenter.getLogger(HelpWindow.class);","lastModifiedDate":"2016-09-23"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    private static final String FXML \u003d \"HelpWindow.fxml\";","lastModifiedDate":"2016-09-20"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-12-24"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    private Button copyButton;","lastModifiedDate":"2019-08-19"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-08-19"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2019-08-19"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    private Label helpMessage;","lastModifiedDate":"2019-08-19"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-12-01"},{"lineNumber":32,"author":{"gitId":"-"},"content":"     * Creates a new HelpWindow.","lastModifiedDate":"2017-12-01"},{"lineNumber":33,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2017-12-01"},{"lineNumber":34,"author":{"gitId":"-"},"content":"     * @param root Stage to use as the root of the HelpWindow.","lastModifiedDate":"2017-12-01"},{"lineNumber":35,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-12-01"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    public HelpWindow(Stage root) {","lastModifiedDate":"2017-12-01"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        super(FXML, root);","lastModifiedDate":"2017-12-01"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        helpMessage.setText(HELP_MESSAGE);","lastModifiedDate":"2019-08-19"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-18"},{"lineNumber":40,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-12-01"},{"lineNumber":42,"author":{"gitId":"-"},"content":"     * Creates a new HelpWindow.","lastModifiedDate":"2017-12-01"},{"lineNumber":43,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-12-01"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    public HelpWindow() {","lastModifiedDate":"2017-12-01"},{"lineNumber":45,"author":{"gitId":"-"},"content":"        this(new Stage());","lastModifiedDate":"2017-12-01"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-12-01"},{"lineNumber":47,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-12-01"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-08-16"},{"lineNumber":49,"author":{"gitId":"-"},"content":"     * Shows the help window.","lastModifiedDate":"2017-08-16"},{"lineNumber":50,"author":{"gitId":"-"},"content":"     * @throws IllegalStateException","lastModifiedDate":"2017-08-16"},{"lineNumber":51,"author":{"gitId":"-"},"content":"     * \u003cul\u003e","lastModifiedDate":"2017-08-16"},{"lineNumber":52,"author":{"gitId":"-"},"content":"     *     \u003cli\u003e","lastModifiedDate":"2017-08-16"},{"lineNumber":53,"author":{"gitId":"-"},"content":"     *         if this method is called on a thread other than the JavaFX Application Thread.","lastModifiedDate":"2017-08-16"},{"lineNumber":54,"author":{"gitId":"-"},"content":"     *     \u003c/li\u003e","lastModifiedDate":"2017-08-16"},{"lineNumber":55,"author":{"gitId":"-"},"content":"     *     \u003cli\u003e","lastModifiedDate":"2017-08-16"},{"lineNumber":56,"author":{"gitId":"-"},"content":"     *         if this method is called during animation or layout processing.","lastModifiedDate":"2017-08-16"},{"lineNumber":57,"author":{"gitId":"-"},"content":"     *     \u003c/li\u003e","lastModifiedDate":"2017-08-16"},{"lineNumber":58,"author":{"gitId":"-"},"content":"     *     \u003cli\u003e","lastModifiedDate":"2017-08-16"},{"lineNumber":59,"author":{"gitId":"-"},"content":"     *         if this method is called on the primary stage.","lastModifiedDate":"2017-08-16"},{"lineNumber":60,"author":{"gitId":"-"},"content":"     *     \u003c/li\u003e","lastModifiedDate":"2017-08-16"},{"lineNumber":61,"author":{"gitId":"-"},"content":"     *     \u003cli\u003e","lastModifiedDate":"2017-08-16"},{"lineNumber":62,"author":{"gitId":"-"},"content":"     *         if {@code dialogStage} is already showing.","lastModifiedDate":"2017-08-16"},{"lineNumber":63,"author":{"gitId":"-"},"content":"     *     \u003c/li\u003e","lastModifiedDate":"2017-08-16"},{"lineNumber":64,"author":{"gitId":"-"},"content":"     * \u003c/ul\u003e","lastModifiedDate":"2017-08-16"},{"lineNumber":65,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-08-16"},{"lineNumber":66,"author":{"gitId":"-"},"content":"    public void show() {","lastModifiedDate":"2016-08-18"},{"lineNumber":67,"author":{"gitId":"-"},"content":"        logger.fine(\"Showing help page about the application.\");","lastModifiedDate":"2016-12-24"},{"lineNumber":68,"author":{"gitId":"-"},"content":"        getRoot().show();","lastModifiedDate":"2018-02-13"},{"lineNumber":69,"author":{"gitId":"-"},"content":"        getRoot().centerOnScreen();","lastModifiedDate":"2019-08-19"},{"lineNumber":70,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-18"},{"lineNumber":71,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-03-15"},{"lineNumber":72,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-03-15"},{"lineNumber":73,"author":{"gitId":"-"},"content":"     * Returns true if the help window is currently being shown.","lastModifiedDate":"2018-03-15"},{"lineNumber":74,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-03-15"},{"lineNumber":75,"author":{"gitId":"-"},"content":"    public boolean isShowing() {","lastModifiedDate":"2018-03-15"},{"lineNumber":76,"author":{"gitId":"-"},"content":"        return getRoot().isShowing();","lastModifiedDate":"2018-03-15"},{"lineNumber":77,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-03-15"},{"lineNumber":78,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-03-15"},{"lineNumber":79,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-12-08"},{"lineNumber":80,"author":{"gitId":"-"},"content":"     * Hides the help window.","lastModifiedDate":"2018-12-08"},{"lineNumber":81,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-12-08"},{"lineNumber":82,"author":{"gitId":"-"},"content":"    public void hide() {","lastModifiedDate":"2018-12-08"},{"lineNumber":83,"author":{"gitId":"-"},"content":"        getRoot().hide();","lastModifiedDate":"2018-12-08"},{"lineNumber":84,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-12-08"},{"lineNumber":85,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-08"},{"lineNumber":86,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-03-15"},{"lineNumber":87,"author":{"gitId":"-"},"content":"     * Focuses on the help window.","lastModifiedDate":"2018-03-15"},{"lineNumber":88,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-03-15"},{"lineNumber":89,"author":{"gitId":"-"},"content":"    public void focus() {","lastModifiedDate":"2018-03-15"},{"lineNumber":90,"author":{"gitId":"-"},"content":"        getRoot().requestFocus();","lastModifiedDate":"2018-03-15"},{"lineNumber":91,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-03-15"},{"lineNumber":92,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-08-19"},{"lineNumber":93,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2019-08-19"},{"lineNumber":94,"author":{"gitId":"-"},"content":"     * Copies the URL to the user guide to the clipboard.","lastModifiedDate":"2019-08-19"},{"lineNumber":95,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2019-08-19"},{"lineNumber":96,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2019-08-19"},{"lineNumber":97,"author":{"gitId":"-"},"content":"    private void copyUrl() {","lastModifiedDate":"2019-08-19"},{"lineNumber":98,"author":{"gitId":"-"},"content":"        final Clipboard clipboard \u003d Clipboard.getSystemClipboard();","lastModifiedDate":"2019-08-19"},{"lineNumber":99,"author":{"gitId":"-"},"content":"        final ClipboardContent url \u003d new ClipboardContent();","lastModifiedDate":"2019-08-19"},{"lineNumber":100,"author":{"gitId":"-"},"content":"        url.putString(USERGUIDE_URL);","lastModifiedDate":"2019-08-19"},{"lineNumber":101,"author":{"gitId":"-"},"content":"        clipboard.setContent(url);","lastModifiedDate":"2019-08-19"},{"lineNumber":102,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2019-08-19"},{"lineNumber":103,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-18"}],"authorContributionMap":{"xzzz3":2,"-":101}},{"path":"src/main/java/seedu/address/ui/ListPanel.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"jaegarpoon"},"content":"package seedu.address.ui;","lastModifiedDate":"2022-03-11"},{"lineNumber":2,"author":{"gitId":"jaegarpoon"},"content":"","lastModifiedDate":"2022-03-11"},{"lineNumber":3,"author":{"gitId":"jaegarpoon"},"content":"import javafx.scene.layout.Region;","lastModifiedDate":"2022-03-11"},{"lineNumber":4,"author":{"gitId":"jaegarpoon"},"content":"","lastModifiedDate":"2022-03-11"},{"lineNumber":5,"author":{"gitId":"jaegarpoon"},"content":"/**","lastModifiedDate":"2022-03-11"},{"lineNumber":6,"author":{"gitId":"jaegarpoon"},"content":" * Abstract class for all types of panels.","lastModifiedDate":"2022-03-11"},{"lineNumber":7,"author":{"gitId":"jaegarpoon"},"content":" */","lastModifiedDate":"2022-03-11"},{"lineNumber":8,"author":{"gitId":"jaegarpoon"},"content":"public abstract class ListPanel extends UiPart\u003cRegion\u003e {","lastModifiedDate":"2022-03-11"},{"lineNumber":9,"author":{"gitId":"jaegarpoon"},"content":"    /**","lastModifiedDate":"2022-03-11"},{"lineNumber":10,"author":{"gitId":"jaegarpoon"},"content":"     * Creates a {@code ListPanel} abstract class.","lastModifiedDate":"2022-03-11"},{"lineNumber":11,"author":{"gitId":"jaegarpoon"},"content":"     */","lastModifiedDate":"2022-03-11"},{"lineNumber":12,"author":{"gitId":"jaegarpoon"},"content":"    public ListPanel(String fxml) {","lastModifiedDate":"2022-03-11"},{"lineNumber":13,"author":{"gitId":"jaegarpoon"},"content":"        super(fxml);","lastModifiedDate":"2022-03-11"},{"lineNumber":14,"author":{"gitId":"jaegarpoon"},"content":"    }","lastModifiedDate":"2022-03-11"},{"lineNumber":15,"author":{"gitId":"jaegarpoon"},"content":"","lastModifiedDate":"2022-03-11"},{"lineNumber":16,"author":{"gitId":"jaegarpoon"},"content":"}","lastModifiedDate":"2022-03-11"},{"lineNumber":17,"author":{"gitId":"jaegarpoon"},"content":"","lastModifiedDate":"2022-03-11"}],"authorContributionMap":{"jaegarpoon":17}},{"path":"src/main/java/seedu/address/ui/MainWindow.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.ui;","lastModifiedDate":"2016-09-22"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.util.logging.Logger;","lastModifiedDate":"2017-06-16"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-16"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import javafx.event.ActionEvent;","lastModifiedDate":"2016-12-18"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import javafx.fxml.FXML;","lastModifiedDate":"2016-08-26"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import javafx.scene.control.MenuItem;","lastModifiedDate":"2016-08-26"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import javafx.scene.control.TextInputControl;","lastModifiedDate":"2016-12-18"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import javafx.scene.input.KeyCombination;","lastModifiedDate":"2016-08-26"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import javafx.scene.input.KeyEvent;","lastModifiedDate":"2016-12-18"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import javafx.scene.layout.StackPane;","lastModifiedDate":"2017-05-09"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import javafx.stage.Stage;","lastModifiedDate":"2016-08-18"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.GuiSettings;","lastModifiedDate":"2016-09-28"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.LogsCenter;","lastModifiedDate":"2017-06-16"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import seedu.address.logic.Logic;","lastModifiedDate":"2016-09-25"},{"lineNumber":16,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.CommandResult;","lastModifiedDate":"2018-12-09"},{"lineNumber":17,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.exceptions.CommandException;","lastModifiedDate":"2018-12-09"},{"lineNumber":18,"author":{"gitId":"-"},"content":"import seedu.address.logic.parser.exceptions.ParseException;","lastModifiedDate":"2018-12-09"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-09"},{"lineNumber":20,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-18"},{"lineNumber":21,"author":{"gitId":"-"},"content":" * The Main Window. Provides the basic application layout containing","lastModifiedDate":"2016-08-18"},{"lineNumber":22,"author":{"gitId":"-"},"content":" * a menu bar and space where other JavaFX elements can be placed.","lastModifiedDate":"2016-08-18"},{"lineNumber":23,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-18"},{"lineNumber":24,"author":{"gitId":"-"},"content":"public class MainWindow extends UiPart\u003cStage\u003e {","lastModifiedDate":"2017-11-29"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-28"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    private static final String FXML \u003d \"MainWindow.fxml\";","lastModifiedDate":"2016-08-18"},{"lineNumber":27,"author":{"gitId":"zxgoh"},"content":"    private static final int ORDER_TAB_DISPLAY_FOCUS \u003d 0;","lastModifiedDate":"2022-03-16"},{"lineNumber":28,"author":{"gitId":"zxgoh"},"content":"    private static final int DRIVER_TAB_DISPLAY_FOCUS \u003d 1;","lastModifiedDate":"2022-03-16"},{"lineNumber":29,"author":{"gitId":"zxgoh"},"content":"    private static final int DISH_TAB_DISPLAY_FOCUS \u003d 2;","lastModifiedDate":"2022-03-16"},{"lineNumber":30,"author":{"gitId":"zxgoh"},"content":"    private static final int CUSTOMER_TAB_DISPLAY_FOCUS \u003d 3;","lastModifiedDate":"2022-03-16"},{"lineNumber":31,"author":{"gitId":"zxgoh"},"content":"    private static final int DEFAULT_TAB_DISPLAY_FOCUS \u003d CUSTOMER_TAB_DISPLAY_FOCUS;","lastModifiedDate":"2022-03-16"},{"lineNumber":32,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    private final Logger logger \u003d LogsCenter.getLogger(getClass());","lastModifiedDate":"2018-08-14"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-16"},{"lineNumber":35,"author":{"gitId":"zxgoh"},"content":"    private final Stage primaryStage;","lastModifiedDate":"2022-03-16"},{"lineNumber":36,"author":{"gitId":"zxgoh"},"content":"    private final Logic logic;","lastModifiedDate":"2022-03-16"},{"lineNumber":37,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    // Independent Ui parts residing in this Ui container","lastModifiedDate":"2016-08-18"},{"lineNumber":39,"author":{"gitId":"zxgoh"},"content":"    private ListPanel listPanel;","lastModifiedDate":"2022-03-16"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    private ResultDisplay resultDisplay;","lastModifiedDate":"2018-12-09"},{"lineNumber":41,"author":{"gitId":"zxgoh"},"content":"    private final HelpWindow helpWindow;","lastModifiedDate":"2022-03-16"},{"lineNumber":42,"author":{"gitId":"zxgoh"},"content":"    private TabDisplay tabDisplay;","lastModifiedDate":"2022-03-16"},{"lineNumber":43,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-09-21"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    private StackPane commandBoxPlaceholder;","lastModifiedDate":"2017-05-09"},{"lineNumber":46,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-08-18"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    private MenuItem helpMenuItem;","lastModifiedDate":"2016-08-18"},{"lineNumber":49,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-09-21"},{"lineNumber":51,"author":{"gitId":"zxgoh"},"content":"    private StackPane customerListPanelPlaceholder;","lastModifiedDate":"2022-03-14"},{"lineNumber":52,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":53,"author":{"gitId":"zxgoh"},"content":"    @FXML","lastModifiedDate":"2022-03-16"},{"lineNumber":54,"author":{"gitId":"zxgoh"},"content":"    private StackPane tabDisplayPlaceholder;","lastModifiedDate":"2022-03-16"},{"lineNumber":55,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-03-16"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-09-21"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    private StackPane resultDisplayPlaceholder;","lastModifiedDate":"2017-05-09"},{"lineNumber":58,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":59,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-09-21"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    private StackPane statusbarPlaceholder;","lastModifiedDate":"2017-05-09"},{"lineNumber":61,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":62,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2020-05-27"},{"lineNumber":63,"author":{"gitId":"-"},"content":"     * Creates a {@code MainWindow} with the given {@code Stage} and {@code Logic}.","lastModifiedDate":"2020-05-27"},{"lineNumber":64,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2020-05-27"},{"lineNumber":65,"author":{"gitId":"-"},"content":"    public MainWindow(Stage primaryStage, Logic logic) {","lastModifiedDate":"2018-12-08"},{"lineNumber":66,"author":{"gitId":"-"},"content":"        super(FXML, primaryStage);","lastModifiedDate":"2017-11-29"},{"lineNumber":67,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":68,"author":{"gitId":"-"},"content":"        // Set dependencies","lastModifiedDate":"2016-09-21"},{"lineNumber":69,"author":{"gitId":"-"},"content":"        this.primaryStage \u003d primaryStage;","lastModifiedDate":"2016-12-02"},{"lineNumber":70,"author":{"gitId":"-"},"content":"        this.logic \u003d logic;","lastModifiedDate":"2016-09-25"},{"lineNumber":71,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":72,"author":{"gitId":"-"},"content":"        // Configure the UI","lastModifiedDate":"2016-09-21"},{"lineNumber":73,"author":{"gitId":"-"},"content":"        setWindowDefaultSize(logic.getGuiSettings());","lastModifiedDate":"2018-11-27"},{"lineNumber":74,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":75,"author":{"gitId":"-"},"content":"        setAccelerators();","lastModifiedDate":"2016-09-21"},{"lineNumber":76,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-03-15"},{"lineNumber":77,"author":{"gitId":"-"},"content":"        helpWindow \u003d new HelpWindow();","lastModifiedDate":"2018-03-15"},{"lineNumber":78,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-18"},{"lineNumber":79,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":80,"author":{"gitId":"-"},"content":"    public Stage getPrimaryStage() {","lastModifiedDate":"2016-12-24"},{"lineNumber":81,"author":{"gitId":"-"},"content":"        return primaryStage;","lastModifiedDate":"2016-12-24"},{"lineNumber":82,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-24"},{"lineNumber":83,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-24"},{"lineNumber":84,"author":{"gitId":"-"},"content":"    private void setAccelerators() {","lastModifiedDate":"2016-09-21"},{"lineNumber":85,"author":{"gitId":"-"},"content":"        setAccelerator(helpMenuItem, KeyCombination.valueOf(\"F1\"));","lastModifiedDate":"2016-12-18"},{"lineNumber":86,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-18"},{"lineNumber":87,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-18"},{"lineNumber":88,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-12-18"},{"lineNumber":89,"author":{"gitId":"-"},"content":"     * Sets the accelerator of a MenuItem.","lastModifiedDate":"2016-12-18"},{"lineNumber":90,"author":{"gitId":"-"},"content":"     * @param keyCombination the KeyCombination value of the accelerator","lastModifiedDate":"2016-12-18"},{"lineNumber":91,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-12-18"},{"lineNumber":92,"author":{"gitId":"-"},"content":"    private void setAccelerator(MenuItem menuItem, KeyCombination keyCombination) {","lastModifiedDate":"2016-12-18"},{"lineNumber":93,"author":{"gitId":"-"},"content":"        menuItem.setAccelerator(keyCombination);","lastModifiedDate":"2016-12-18"},{"lineNumber":94,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-18"},{"lineNumber":95,"author":{"gitId":"-"},"content":"        /*","lastModifiedDate":"2016-12-18"},{"lineNumber":96,"author":{"gitId":"-"},"content":"         * TODO: the code below can be removed once the bug reported here","lastModifiedDate":"2016-12-18"},{"lineNumber":97,"author":{"gitId":"-"},"content":"         * https://bugs.openjdk.java.net/browse/JDK-8131666","lastModifiedDate":"2016-12-18"},{"lineNumber":98,"author":{"gitId":"-"},"content":"         * is fixed in later version of SDK.","lastModifiedDate":"2016-12-18"},{"lineNumber":99,"author":{"gitId":"-"},"content":"         *","lastModifiedDate":"2016-12-18"},{"lineNumber":100,"author":{"gitId":"-"},"content":"         * According to the bug report, TextInputControl (TextField, TextArea) will","lastModifiedDate":"2016-12-18"},{"lineNumber":101,"author":{"gitId":"-"},"content":"         * consume function-key events. Because CommandBox contains a TextField, and","lastModifiedDate":"2016-12-18"},{"lineNumber":102,"author":{"gitId":"-"},"content":"         * ResultDisplay contains a TextArea, thus some accelerators (e.g F1) will","lastModifiedDate":"2016-12-18"},{"lineNumber":103,"author":{"gitId":"-"},"content":"         * not work when the focus is in them because the key event is consumed by","lastModifiedDate":"2016-12-18"},{"lineNumber":104,"author":{"gitId":"-"},"content":"         * the TextInputControl(s).","lastModifiedDate":"2016-12-18"},{"lineNumber":105,"author":{"gitId":"-"},"content":"         *","lastModifiedDate":"2016-12-18"},{"lineNumber":106,"author":{"gitId":"-"},"content":"         * For now, we add following event filter to capture such key events and open","lastModifiedDate":"2016-12-18"},{"lineNumber":107,"author":{"gitId":"-"},"content":"         * help window purposely so to support accelerators even when focus is","lastModifiedDate":"2016-12-18"},{"lineNumber":108,"author":{"gitId":"-"},"content":"         * in CommandBox or ResultDisplay.","lastModifiedDate":"2016-12-18"},{"lineNumber":109,"author":{"gitId":"-"},"content":"         */","lastModifiedDate":"2016-12-18"},{"lineNumber":110,"author":{"gitId":"-"},"content":"        getRoot().addEventFilter(KeyEvent.KEY_PRESSED, event -\u003e {","lastModifiedDate":"2016-12-24"},{"lineNumber":111,"author":{"gitId":"-"},"content":"            if (event.getTarget() instanceof TextInputControl \u0026\u0026 keyCombination.match(event)) {","lastModifiedDate":"2016-12-18"},{"lineNumber":112,"author":{"gitId":"-"},"content":"                menuItem.getOnAction().handle(new ActionEvent());","lastModifiedDate":"2016-12-18"},{"lineNumber":113,"author":{"gitId":"-"},"content":"                event.consume();","lastModifiedDate":"2016-12-18"},{"lineNumber":114,"author":{"gitId":"-"},"content":"            }","lastModifiedDate":"2016-12-18"},{"lineNumber":115,"author":{"gitId":"-"},"content":"        });","lastModifiedDate":"2016-12-18"},{"lineNumber":116,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-21"},{"lineNumber":117,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":118,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-08-16"},{"lineNumber":119,"author":{"gitId":"-"},"content":"     * Fills up all the placeholders of this window.","lastModifiedDate":"2017-08-16"},{"lineNumber":120,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-08-16"},{"lineNumber":121,"author":{"gitId":"-"},"content":"    void fillInnerParts() {","lastModifiedDate":"2016-09-21"},{"lineNumber":122,"author":{"gitId":"zxgoh"},"content":"        listPanel \u003d new CustomerListPanel(logic.getFilteredCustomerList());","lastModifiedDate":"2022-03-16"},{"lineNumber":123,"author":{"gitId":"zxgoh"},"content":"        customerListPanelPlaceholder.getChildren().add(listPanel.getRoot());","lastModifiedDate":"2022-03-16"},{"lineNumber":124,"author":{"gitId":"zxgoh"},"content":"","lastModifiedDate":"2022-03-16"},{"lineNumber":125,"author":{"gitId":"zxgoh"},"content":"        tabDisplay \u003d new TabDisplay();","lastModifiedDate":"2022-03-16"},{"lineNumber":126,"author":{"gitId":"zxgoh"},"content":"        tabDisplay.setFocus(DEFAULT_TAB_DISPLAY_FOCUS);","lastModifiedDate":"2022-03-16"},{"lineNumber":127,"author":{"gitId":"zxgoh"},"content":"        tabDisplayPlaceholder.getChildren().add(tabDisplay.getRoot());","lastModifiedDate":"2022-03-16"},{"lineNumber":128,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-14"},{"lineNumber":129,"author":{"gitId":"-"},"content":"        resultDisplay \u003d new ResultDisplay();","lastModifiedDate":"2018-12-09"},{"lineNumber":130,"author":{"gitId":"-"},"content":"        resultDisplayPlaceholder.getChildren().add(resultDisplay.getRoot());","lastModifiedDate":"2017-06-14"},{"lineNumber":131,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-14"},{"lineNumber":132,"author":{"gitId":"-"},"content":"        StatusBarFooter statusBarFooter \u003d new StatusBarFooter(logic.getAddressBookFilePath());","lastModifiedDate":"2019-01-25"},{"lineNumber":133,"author":{"gitId":"-"},"content":"        statusbarPlaceholder.getChildren().add(statusBarFooter.getRoot());","lastModifiedDate":"2017-06-14"},{"lineNumber":134,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-14"},{"lineNumber":135,"author":{"gitId":"-"},"content":"        CommandBox commandBox \u003d new CommandBox(this::executeCommand);","lastModifiedDate":"2019-01-25"},{"lineNumber":136,"author":{"gitId":"-"},"content":"        commandBoxPlaceholder.getChildren().add(commandBox.getRoot());","lastModifiedDate":"2017-06-14"},{"lineNumber":137,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-18"},{"lineNumber":138,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":139,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-18"},{"lineNumber":140,"author":{"gitId":"-"},"content":"     * Sets the default size based on {@code guiSettings}.","lastModifiedDate":"2018-11-27"},{"lineNumber":141,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-18"},{"lineNumber":142,"author":{"gitId":"-"},"content":"    private void setWindowDefaultSize(GuiSettings guiSettings) {","lastModifiedDate":"2018-11-27"},{"lineNumber":143,"author":{"gitId":"-"},"content":"        primaryStage.setHeight(guiSettings.getWindowHeight());","lastModifiedDate":"2018-11-27"},{"lineNumber":144,"author":{"gitId":"-"},"content":"        primaryStage.setWidth(guiSettings.getWindowWidth());","lastModifiedDate":"2018-11-27"},{"lineNumber":145,"author":{"gitId":"-"},"content":"        if (guiSettings.getWindowCoordinates() !\u003d null) {","lastModifiedDate":"2018-11-27"},{"lineNumber":146,"author":{"gitId":"-"},"content":"            primaryStage.setX(guiSettings.getWindowCoordinates().getX());","lastModifiedDate":"2018-11-27"},{"lineNumber":147,"author":{"gitId":"-"},"content":"            primaryStage.setY(guiSettings.getWindowCoordinates().getY());","lastModifiedDate":"2018-11-27"},{"lineNumber":148,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-08-18"},{"lineNumber":149,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-18"},{"lineNumber":150,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":151,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-08-16"},{"lineNumber":152,"author":{"gitId":"-"},"content":"     * Opens the help window or focuses on it if it\u0027s already opened.","lastModifiedDate":"2018-03-15"},{"lineNumber":153,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-08-16"},{"lineNumber":154,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-08-18"},{"lineNumber":155,"author":{"gitId":"-"},"content":"    public void handleHelp() {","lastModifiedDate":"2016-08-31"},{"lineNumber":156,"author":{"gitId":"-"},"content":"        if (!helpWindow.isShowing()) {","lastModifiedDate":"2018-03-15"},{"lineNumber":157,"author":{"gitId":"-"},"content":"            helpWindow.show();","lastModifiedDate":"2016-08-18"},{"lineNumber":158,"author":{"gitId":"-"},"content":"        } else {","lastModifiedDate":"2018-03-15"},{"lineNumber":159,"author":{"gitId":"-"},"content":"            helpWindow.focus();","lastModifiedDate":"2018-03-15"},{"lineNumber":160,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-03-15"},{"lineNumber":161,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-18"},{"lineNumber":162,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":163,"author":{"gitId":"-"},"content":"    void show() {","lastModifiedDate":"2016-10-15"},{"lineNumber":164,"author":{"gitId":"-"},"content":"        primaryStage.show();","lastModifiedDate":"2016-08-18"},{"lineNumber":165,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-18"},{"lineNumber":166,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":167,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-18"},{"lineNumber":168,"author":{"gitId":"-"},"content":"     * Closes the application.","lastModifiedDate":"2016-08-18"},{"lineNumber":169,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-18"},{"lineNumber":170,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-08-18"},{"lineNumber":171,"author":{"gitId":"-"},"content":"    private void handleExit() {","lastModifiedDate":"2016-08-18"},{"lineNumber":172,"author":{"gitId":"-"},"content":"        GuiSettings guiSettings \u003d new GuiSettings(primaryStage.getWidth(), primaryStage.getHeight(),","lastModifiedDate":"2018-12-08"},{"lineNumber":173,"author":{"gitId":"-"},"content":"                (int) primaryStage.getX(), (int) primaryStage.getY());","lastModifiedDate":"2018-12-08"},{"lineNumber":174,"author":{"gitId":"-"},"content":"        logic.setGuiSettings(guiSettings);","lastModifiedDate":"2018-12-08"},{"lineNumber":175,"author":{"gitId":"-"},"content":"        helpWindow.hide();","lastModifiedDate":"2018-12-08"},{"lineNumber":176,"author":{"gitId":"-"},"content":"        primaryStage.hide();","lastModifiedDate":"2018-12-08"},{"lineNumber":177,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-18"},{"lineNumber":178,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-25"},{"lineNumber":179,"author":{"gitId":"zxgoh"},"content":"    /**","lastModifiedDate":"2022-03-16"},{"lineNumber":180,"author":{"gitId":"zxgoh"},"content":"     * Handles case when dish command is entered.","lastModifiedDate":"2022-03-16"},{"lineNumber":181,"author":{"gitId":"zxgoh"},"content":"     */","lastModifiedDate":"2022-03-16"},{"lineNumber":182,"author":{"gitId":"zxgoh"},"content":"    private void handleDish() {","lastModifiedDate":"2022-03-16"},{"lineNumber":183,"author":{"gitId":"zxgoh"},"content":"        listPanel \u003d new DishListPanel(logic.getFilteredDishList());","lastModifiedDate":"2022-03-16"},{"lineNumber":184,"author":{"gitId":"zxgoh"},"content":"        customerListPanelPlaceholder.getChildren().add(listPanel.getRoot());","lastModifiedDate":"2022-03-16"},{"lineNumber":185,"author":{"gitId":"zxgoh"},"content":"        tabDisplay.setFocus(DISH_TAB_DISPLAY_FOCUS);","lastModifiedDate":"2022-03-16"},{"lineNumber":186,"author":{"gitId":"zxgoh"},"content":"        logger.info(\"Set to dish\");","lastModifiedDate":"2022-03-16"},{"lineNumber":187,"author":{"gitId":"zxgoh"},"content":"    }","lastModifiedDate":"2022-03-16"},{"lineNumber":188,"author":{"gitId":"zxgoh"},"content":"","lastModifiedDate":"2022-03-16"},{"lineNumber":189,"author":{"gitId":"zxgoh"},"content":"    /**","lastModifiedDate":"2022-03-16"},{"lineNumber":190,"author":{"gitId":"zxgoh"},"content":"     * Handles case when driver command is entered.","lastModifiedDate":"2022-03-16"},{"lineNumber":191,"author":{"gitId":"zxgoh"},"content":"     */","lastModifiedDate":"2022-03-16"},{"lineNumber":192,"author":{"gitId":"zxgoh"},"content":"    private void handleDriver() {","lastModifiedDate":"2022-03-16"},{"lineNumber":193,"author":{"gitId":"zxgoh"},"content":"        listPanel \u003d new DriverListPanel(logic.getFilteredDriverList());","lastModifiedDate":"2022-03-16"},{"lineNumber":194,"author":{"gitId":"zxgoh"},"content":"        customerListPanelPlaceholder.getChildren().add(listPanel.getRoot());","lastModifiedDate":"2022-03-16"},{"lineNumber":195,"author":{"gitId":"zxgoh"},"content":"        tabDisplay.setFocus(DRIVER_TAB_DISPLAY_FOCUS);","lastModifiedDate":"2022-03-16"},{"lineNumber":196,"author":{"gitId":"zxgoh"},"content":"        logger.info(\"Set to driver\");","lastModifiedDate":"2022-03-16"},{"lineNumber":197,"author":{"gitId":"zxgoh"},"content":"    }","lastModifiedDate":"2022-03-16"},{"lineNumber":198,"author":{"gitId":"zxgoh"},"content":"","lastModifiedDate":"2022-03-16"},{"lineNumber":199,"author":{"gitId":"zxgoh"},"content":"    /**","lastModifiedDate":"2022-03-16"},{"lineNumber":200,"author":{"gitId":"zxgoh"},"content":"     * Handles case when order command is entered.","lastModifiedDate":"2022-03-16"},{"lineNumber":201,"author":{"gitId":"zxgoh"},"content":"     */","lastModifiedDate":"2022-03-16"},{"lineNumber":202,"author":{"gitId":"zxgoh"},"content":"    private void handleOrder() {","lastModifiedDate":"2022-03-16"},{"lineNumber":203,"author":{"gitId":"zxgoh"},"content":"        listPanel \u003d new OrderListPanel(logic.getFilteredOrderList());","lastModifiedDate":"2022-03-16"},{"lineNumber":204,"author":{"gitId":"zxgoh"},"content":"        customerListPanelPlaceholder.getChildren().add(listPanel.getRoot());","lastModifiedDate":"2022-03-16"},{"lineNumber":205,"author":{"gitId":"zxgoh"},"content":"        tabDisplay.setFocus(ORDER_TAB_DISPLAY_FOCUS);","lastModifiedDate":"2022-03-16"},{"lineNumber":206,"author":{"gitId":"zxgoh"},"content":"        logger.info(\"Set to order\");","lastModifiedDate":"2022-03-16"},{"lineNumber":207,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-25"},{"lineNumber":208,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":209,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-12-09"},{"lineNumber":210,"author":{"gitId":"-"},"content":"     * Executes the command and returns the result.","lastModifiedDate":"2018-12-09"},{"lineNumber":211,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2018-12-09"},{"lineNumber":212,"author":{"gitId":"zxgoh"},"content":"     * @see Logic#execute(String)","lastModifiedDate":"2022-03-16"},{"lineNumber":213,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-12-09"},{"lineNumber":214,"author":{"gitId":"-"},"content":"    private CommandResult executeCommand(String commandText) throws CommandException, ParseException {","lastModifiedDate":"2018-12-09"},{"lineNumber":215,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2018-12-09"},{"lineNumber":216,"author":{"gitId":"-"},"content":"            CommandResult commandResult \u003d logic.execute(commandText);","lastModifiedDate":"2018-12-09"},{"lineNumber":217,"author":{"gitId":"-"},"content":"            logger.info(\"Result: \" + commandResult.getFeedbackToUser());","lastModifiedDate":"2018-12-09"},{"lineNumber":218,"author":{"gitId":"-"},"content":"            resultDisplay.setFeedbackToUser(commandResult.getFeedbackToUser());","lastModifiedDate":"2018-12-09"},{"lineNumber":219,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":220,"author":{"gitId":"zxgoh"},"content":"            tabDisplay.setFocus(DEFAULT_TAB_DISPLAY_FOCUS);","lastModifiedDate":"2022-03-16"},{"lineNumber":221,"author":{"gitId":"zxgoh"},"content":"","lastModifiedDate":"2022-03-16"},{"lineNumber":222,"author":{"gitId":"zxgoh"},"content":"            listPanel \u003d new CustomerListPanel(logic.getFilteredCustomerList());","lastModifiedDate":"2022-03-16"},{"lineNumber":223,"author":{"gitId":"zxgoh"},"content":"            customerListPanelPlaceholder.getChildren().add(listPanel.getRoot());","lastModifiedDate":"2022-03-16"},{"lineNumber":224,"author":{"gitId":"zxgoh"},"content":"","lastModifiedDate":"2022-03-16"},{"lineNumber":225,"author":{"gitId":"-"},"content":"            if (commandResult.isShowHelp()) {","lastModifiedDate":"2018-12-09"},{"lineNumber":226,"author":{"gitId":"-"},"content":"                handleHelp();","lastModifiedDate":"2018-12-09"},{"lineNumber":227,"author":{"gitId":"-"},"content":"            }","lastModifiedDate":"2018-12-09"},{"lineNumber":228,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":229,"author":{"gitId":"-"},"content":"            if (commandResult.isExit()) {","lastModifiedDate":"2018-12-09"},{"lineNumber":230,"author":{"gitId":"-"},"content":"                handleExit();","lastModifiedDate":"2018-12-09"},{"lineNumber":231,"author":{"gitId":"-"},"content":"            }","lastModifiedDate":"2018-12-09"},{"lineNumber":232,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":233,"author":{"gitId":"zxgoh"},"content":"            if (commandResult.isDish()) {","lastModifiedDate":"2022-03-16"},{"lineNumber":234,"author":{"gitId":"zxgoh"},"content":"                handleDish();","lastModifiedDate":"2022-03-16"},{"lineNumber":235,"author":{"gitId":"zxgoh"},"content":"            }","lastModifiedDate":"2022-03-16"},{"lineNumber":236,"author":{"gitId":"zxgoh"},"content":"","lastModifiedDate":"2022-03-16"},{"lineNumber":237,"author":{"gitId":"zxgoh"},"content":"            if (commandResult.isDriver()) {","lastModifiedDate":"2022-03-16"},{"lineNumber":238,"author":{"gitId":"zxgoh"},"content":"                handleDriver();","lastModifiedDate":"2022-03-16"},{"lineNumber":239,"author":{"gitId":"zxgoh"},"content":"            }","lastModifiedDate":"2022-03-16"},{"lineNumber":240,"author":{"gitId":"zxgoh"},"content":"","lastModifiedDate":"2022-03-16"},{"lineNumber":241,"author":{"gitId":"zxgoh"},"content":"            if (commandResult.isOrder()) {","lastModifiedDate":"2022-03-16"},{"lineNumber":242,"author":{"gitId":"zxgoh"},"content":"                handleOrder();","lastModifiedDate":"2022-03-16"},{"lineNumber":243,"author":{"gitId":"zxgoh"},"content":"            }","lastModifiedDate":"2022-03-16"},{"lineNumber":244,"author":{"gitId":"zxgoh"},"content":"","lastModifiedDate":"2022-03-16"},{"lineNumber":245,"author":{"gitId":"-"},"content":"            return commandResult;","lastModifiedDate":"2018-12-09"},{"lineNumber":246,"author":{"gitId":"-"},"content":"        } catch (CommandException | ParseException e) {","lastModifiedDate":"2018-12-09"},{"lineNumber":247,"author":{"gitId":"-"},"content":"            logger.info(\"Invalid command: \" + commandText);","lastModifiedDate":"2018-12-09"},{"lineNumber":248,"author":{"gitId":"-"},"content":"            resultDisplay.setFeedbackToUser(e.getMessage());","lastModifiedDate":"2018-12-09"},{"lineNumber":249,"author":{"gitId":"-"},"content":"            throw e;","lastModifiedDate":"2018-12-09"},{"lineNumber":250,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-12-09"},{"lineNumber":251,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-12-09"},{"lineNumber":252,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-18"}],"authorContributionMap":{"-":187,"zxgoh":65}},{"path":"src/main/java/seedu/address/ui/OrderCard.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"xzzz3"},"content":"package seedu.address.ui;","lastModifiedDate":"2022-03-10"},{"lineNumber":2,"author":{"gitId":"xzzz3"},"content":"","lastModifiedDate":"2022-03-10"},{"lineNumber":3,"author":{"gitId":"xzzz3"},"content":"import javafx.fxml.FXML;","lastModifiedDate":"2022-03-10"},{"lineNumber":4,"author":{"gitId":"xzzz3"},"content":"import javafx.scene.control.Label;","lastModifiedDate":"2022-03-10"},{"lineNumber":5,"author":{"gitId":"xzzz3"},"content":"import javafx.scene.layout.HBox;","lastModifiedDate":"2022-03-10"},{"lineNumber":6,"author":{"gitId":"xzzz3"},"content":"import javafx.scene.layout.Region;","lastModifiedDate":"2022-03-10"},{"lineNumber":7,"author":{"gitId":"xzzz3"},"content":"import seedu.address.model.order.Order;","lastModifiedDate":"2022-03-10"},{"lineNumber":8,"author":{"gitId":"xzzz3"},"content":"","lastModifiedDate":"2022-03-10"},{"lineNumber":9,"author":{"gitId":"xzzz3"},"content":"/**","lastModifiedDate":"2022-03-10"},{"lineNumber":10,"author":{"gitId":"xzzz3"},"content":" * An UI component that displays information of an {@code Order}.","lastModifiedDate":"2022-03-10"},{"lineNumber":11,"author":{"gitId":"xzzz3"},"content":" */","lastModifiedDate":"2022-03-10"},{"lineNumber":12,"author":{"gitId":"xzzz3"},"content":"public class OrderCard extends UiPart\u003cRegion\u003e {","lastModifiedDate":"2022-03-10"},{"lineNumber":13,"author":{"gitId":"xzzz3"},"content":"","lastModifiedDate":"2022-03-10"},{"lineNumber":14,"author":{"gitId":"xzzz3"},"content":"    private static final String FXML \u003d \"OrderListCard.fxml\";","lastModifiedDate":"2022-03-15"},{"lineNumber":15,"author":{"gitId":"xzzz3"},"content":"","lastModifiedDate":"2022-03-10"},{"lineNumber":16,"author":{"gitId":"xzzz3"},"content":"    /**","lastModifiedDate":"2022-03-10"},{"lineNumber":17,"author":{"gitId":"xzzz3"},"content":"     * Note: Certain keywords such as \"location\" and \"resources\" are reserved keywords in JavaFX.","lastModifiedDate":"2022-03-10"},{"lineNumber":18,"author":{"gitId":"xzzz3"},"content":"     * As a consequence, UI elements\u0027 variable names cannot be set to such keywords","lastModifiedDate":"2022-03-10"},{"lineNumber":19,"author":{"gitId":"xzzz3"},"content":"     * or an exception will be thrown by JavaFX during runtime.","lastModifiedDate":"2022-03-10"},{"lineNumber":20,"author":{"gitId":"xzzz3"},"content":"     *","lastModifiedDate":"2022-03-10"},{"lineNumber":21,"author":{"gitId":"xzzz3"},"content":"     * @see \u003ca href\u003d\"https://github.com/se-edu/addressbook-level4/issues/336\"\u003eThe issue on AddressBook level 4\u003c/a\u003e","lastModifiedDate":"2022-03-10"},{"lineNumber":22,"author":{"gitId":"xzzz3"},"content":"     */","lastModifiedDate":"2022-03-10"},{"lineNumber":23,"author":{"gitId":"xzzz3"},"content":"","lastModifiedDate":"2022-03-10"},{"lineNumber":24,"author":{"gitId":"xzzz3"},"content":"    public final Order order;","lastModifiedDate":"2022-03-10"},{"lineNumber":25,"author":{"gitId":"xzzz3"},"content":"","lastModifiedDate":"2022-03-10"},{"lineNumber":26,"author":{"gitId":"xzzz3"},"content":"    @FXML","lastModifiedDate":"2022-03-10"},{"lineNumber":27,"author":{"gitId":"xzzz3"},"content":"    private HBox cardPane;","lastModifiedDate":"2022-03-10"},{"lineNumber":28,"author":{"gitId":"xzzz3"},"content":"    @FXML","lastModifiedDate":"2022-03-10"},{"lineNumber":29,"author":{"gitId":"xzzz3"},"content":"    private Label id;","lastModifiedDate":"2022-03-14"},{"lineNumber":30,"author":{"gitId":"xzzz3"},"content":"    @FXML","lastModifiedDate":"2022-03-14"},{"lineNumber":31,"author":{"gitId":"xzzz3"},"content":"    private Label customerName;","lastModifiedDate":"2022-03-10"},{"lineNumber":32,"author":{"gitId":"xzzz3"},"content":"    @FXML","lastModifiedDate":"2022-03-10"},{"lineNumber":33,"author":{"gitId":"xzzz3"},"content":"    private Label customerPhone;","lastModifiedDate":"2022-03-10"},{"lineNumber":34,"author":{"gitId":"xzzz3"},"content":"    @FXML","lastModifiedDate":"2022-03-10"},{"lineNumber":35,"author":{"gitId":"xzzz3"},"content":"    private Label customerAddress;","lastModifiedDate":"2022-03-17"},{"lineNumber":36,"author":{"gitId":"xzzz3"},"content":"    @FXML","lastModifiedDate":"2022-03-17"},{"lineNumber":37,"author":{"gitId":"xzzz3"},"content":"    private Label driverName;","lastModifiedDate":"2022-03-10"},{"lineNumber":38,"author":{"gitId":"xzzz3"},"content":"    @FXML","lastModifiedDate":"2022-03-10"},{"lineNumber":39,"author":{"gitId":"xzzz3"},"content":"    private Label dishes;","lastModifiedDate":"2022-03-10"},{"lineNumber":40,"author":{"gitId":"xzzz3"},"content":"    @FXML","lastModifiedDate":"2022-03-10"},{"lineNumber":41,"author":{"gitId":"xzzz3"},"content":"    private Label orderTime;","lastModifiedDate":"2022-03-23"},{"lineNumber":42,"author":{"gitId":"xzzz3"},"content":"    @FXML","lastModifiedDate":"2022-03-23"},{"lineNumber":43,"author":{"gitId":"xzzz3"},"content":"    private Label status;","lastModifiedDate":"2022-03-10"},{"lineNumber":44,"author":{"gitId":"xzzz3"},"content":"    @FXML","lastModifiedDate":"2022-03-10"},{"lineNumber":45,"author":{"gitId":"xzzz3"},"content":"    private Label orderNumber;","lastModifiedDate":"2022-03-10"},{"lineNumber":46,"author":{"gitId":"xzzz3"},"content":"","lastModifiedDate":"2022-03-10"},{"lineNumber":47,"author":{"gitId":"xzzz3"},"content":"    /**","lastModifiedDate":"2022-03-10"},{"lineNumber":48,"author":{"gitId":"xzzz3"},"content":"     * Creates a {@code orderCode} with the given {@code order} and index to display.","lastModifiedDate":"2022-03-10"},{"lineNumber":49,"author":{"gitId":"xzzz3"},"content":"     */","lastModifiedDate":"2022-03-10"},{"lineNumber":50,"author":{"gitId":"xzzz3"},"content":"    public OrderCard(Order order, int displayedIndex) {","lastModifiedDate":"2022-03-14"},{"lineNumber":51,"author":{"gitId":"xzzz3"},"content":"        super(FXML);","lastModifiedDate":"2022-03-10"},{"lineNumber":52,"author":{"gitId":"xzzz3"},"content":"        this.order \u003d order;","lastModifiedDate":"2022-03-10"},{"lineNumber":53,"author":{"gitId":"xzzz3"},"content":"        id.setText(displayedIndex + \". \");","lastModifiedDate":"2022-03-14"},{"lineNumber":54,"author":{"gitId":"xzzz3"},"content":"        orderNumber.setText(\"#\" + order.getOrderNumber());","lastModifiedDate":"2022-03-14"},{"lineNumber":55,"author":{"gitId":"xzzz3"},"content":"        customerName.setText(order.getCustomerName());","lastModifiedDate":"2022-03-10"},{"lineNumber":56,"author":{"gitId":"xzzz3"},"content":"        customerPhone.setText(order.getCustomerPhone());","lastModifiedDate":"2022-03-10"},{"lineNumber":57,"author":{"gitId":"xzzz3"},"content":"        customerAddress.setText(order.getCustomerAddress().toString());","lastModifiedDate":"2022-03-17"},{"lineNumber":58,"author":{"gitId":"xzzz3"},"content":"        driverName.setText(order.getDriverName());","lastModifiedDate":"2022-03-10"},{"lineNumber":59,"author":{"gitId":"xzzz3"},"content":"        dishes.setText(order.getDishes().toString());","lastModifiedDate":"2022-03-23"},{"lineNumber":60,"author":{"gitId":"xzzz3"},"content":"        orderTime.setText(order.getTime().toString());","lastModifiedDate":"2022-03-23"},{"lineNumber":61,"author":{"gitId":"xzzz3"},"content":"        status.setText(order.getStatus().toString());","lastModifiedDate":"2022-03-10"},{"lineNumber":62,"author":{"gitId":"xzzz3"},"content":"    }","lastModifiedDate":"2022-03-10"},{"lineNumber":63,"author":{"gitId":"xzzz3"},"content":"","lastModifiedDate":"2022-03-10"},{"lineNumber":64,"author":{"gitId":"xzzz3"},"content":"    @Override","lastModifiedDate":"2022-03-10"},{"lineNumber":65,"author":{"gitId":"xzzz3"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2022-03-10"},{"lineNumber":66,"author":{"gitId":"xzzz3"},"content":"        // short circuit if same object","lastModifiedDate":"2022-03-10"},{"lineNumber":67,"author":{"gitId":"xzzz3"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2022-03-10"},{"lineNumber":68,"author":{"gitId":"xzzz3"},"content":"            return true;","lastModifiedDate":"2022-03-10"},{"lineNumber":69,"author":{"gitId":"xzzz3"},"content":"        }","lastModifiedDate":"2022-03-10"},{"lineNumber":70,"author":{"gitId":"xzzz3"},"content":"","lastModifiedDate":"2022-03-10"},{"lineNumber":71,"author":{"gitId":"xzzz3"},"content":"        // instanceof handles nulls","lastModifiedDate":"2022-03-10"},{"lineNumber":72,"author":{"gitId":"xzzz3"},"content":"        if (!(other instanceof OrderCard)) {","lastModifiedDate":"2022-03-10"},{"lineNumber":73,"author":{"gitId":"xzzz3"},"content":"            return false;","lastModifiedDate":"2022-03-10"},{"lineNumber":74,"author":{"gitId":"xzzz3"},"content":"        }","lastModifiedDate":"2022-03-10"},{"lineNumber":75,"author":{"gitId":"xzzz3"},"content":"","lastModifiedDate":"2022-03-10"},{"lineNumber":76,"author":{"gitId":"xzzz3"},"content":"        // state check","lastModifiedDate":"2022-03-10"},{"lineNumber":77,"author":{"gitId":"xzzz3"},"content":"        OrderCard card \u003d (OrderCard) other;","lastModifiedDate":"2022-03-10"},{"lineNumber":78,"author":{"gitId":"xzzz3"},"content":"        return orderNumber.getText().equals(card.orderNumber.getText())","lastModifiedDate":"2022-03-10"},{"lineNumber":79,"author":{"gitId":"xzzz3"},"content":"                \u0026\u0026 order.equals(card.order);","lastModifiedDate":"2022-03-10"},{"lineNumber":80,"author":{"gitId":"xzzz3"},"content":"    }","lastModifiedDate":"2022-03-10"},{"lineNumber":81,"author":{"gitId":"xzzz3"},"content":"}","lastModifiedDate":"2022-03-10"}],"authorContributionMap":{"xzzz3":81}},{"path":"src/main/java/seedu/address/ui/OrderListPanel.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"xzzz3"},"content":"package seedu.address.ui;","lastModifiedDate":"2022-03-14"},{"lineNumber":2,"author":{"gitId":"xzzz3"},"content":"","lastModifiedDate":"2022-03-14"},{"lineNumber":3,"author":{"gitId":"xzzz3"},"content":"import java.util.logging.Logger;","lastModifiedDate":"2022-03-14"},{"lineNumber":4,"author":{"gitId":"xzzz3"},"content":"","lastModifiedDate":"2022-03-14"},{"lineNumber":5,"author":{"gitId":"xzzz3"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2022-03-14"},{"lineNumber":6,"author":{"gitId":"xzzz3"},"content":"import javafx.fxml.FXML;","lastModifiedDate":"2022-03-14"},{"lineNumber":7,"author":{"gitId":"xzzz3"},"content":"import javafx.scene.control.ListCell;","lastModifiedDate":"2022-03-14"},{"lineNumber":8,"author":{"gitId":"xzzz3"},"content":"import javafx.scene.control.ListView;","lastModifiedDate":"2022-03-14"},{"lineNumber":9,"author":{"gitId":"xzzz3"},"content":"import seedu.address.commons.core.LogsCenter;","lastModifiedDate":"2022-03-14"},{"lineNumber":10,"author":{"gitId":"xzzz3"},"content":"import seedu.address.model.order.Order;","lastModifiedDate":"2022-03-14"},{"lineNumber":11,"author":{"gitId":"xzzz3"},"content":"","lastModifiedDate":"2022-03-14"},{"lineNumber":12,"author":{"gitId":"xzzz3"},"content":"/**","lastModifiedDate":"2022-03-14"},{"lineNumber":13,"author":{"gitId":"xzzz3"},"content":" * Panel containing the list of orders.","lastModifiedDate":"2022-03-14"},{"lineNumber":14,"author":{"gitId":"xzzz3"},"content":" */","lastModifiedDate":"2022-03-14"},{"lineNumber":15,"author":{"gitId":"xzzz3"},"content":"public class OrderListPanel extends ListPanel {","lastModifiedDate":"2022-03-14"},{"lineNumber":16,"author":{"gitId":"xzzz3"},"content":"    private static final String FXML \u003d \"OrderListPanel.fxml\";","lastModifiedDate":"2022-03-14"},{"lineNumber":17,"author":{"gitId":"xzzz3"},"content":"    private final Logger logger \u003d LogsCenter.getLogger(OrderListPanel.class);","lastModifiedDate":"2022-03-14"},{"lineNumber":18,"author":{"gitId":"xzzz3"},"content":"","lastModifiedDate":"2022-03-14"},{"lineNumber":19,"author":{"gitId":"xzzz3"},"content":"    @FXML","lastModifiedDate":"2022-03-14"},{"lineNumber":20,"author":{"gitId":"xzzz3"},"content":"    private ListView\u003cOrder\u003e orderListView;","lastModifiedDate":"2022-03-14"},{"lineNumber":21,"author":{"gitId":"xzzz3"},"content":"","lastModifiedDate":"2022-03-14"},{"lineNumber":22,"author":{"gitId":"xzzz3"},"content":"    /**","lastModifiedDate":"2022-03-14"},{"lineNumber":23,"author":{"gitId":"xzzz3"},"content":"     * Creates a {@code DishListPanel} with the given {@code ObservableList}.","lastModifiedDate":"2022-03-14"},{"lineNumber":24,"author":{"gitId":"xzzz3"},"content":"     */","lastModifiedDate":"2022-03-14"},{"lineNumber":25,"author":{"gitId":"xzzz3"},"content":"    public OrderListPanel(ObservableList\u003cOrder\u003e orderList) {","lastModifiedDate":"2022-03-14"},{"lineNumber":26,"author":{"gitId":"xzzz3"},"content":"        super(FXML);","lastModifiedDate":"2022-03-14"},{"lineNumber":27,"author":{"gitId":"xzzz3"},"content":"        orderListView.setItems(orderList);","lastModifiedDate":"2022-03-14"},{"lineNumber":28,"author":{"gitId":"xzzz3"},"content":"        orderListView.setCellFactory(listView -\u003e new OrderListViewCell());","lastModifiedDate":"2022-03-14"},{"lineNumber":29,"author":{"gitId":"xzzz3"},"content":"    }","lastModifiedDate":"2022-03-14"},{"lineNumber":30,"author":{"gitId":"xzzz3"},"content":"","lastModifiedDate":"2022-03-14"},{"lineNumber":31,"author":{"gitId":"xzzz3"},"content":"    /**","lastModifiedDate":"2022-03-14"},{"lineNumber":32,"author":{"gitId":"xzzz3"},"content":"     * Custom {@code ListCell} that displays the graphics of a {@code Dish} using a {@code DishCard}.","lastModifiedDate":"2022-03-14"},{"lineNumber":33,"author":{"gitId":"xzzz3"},"content":"     */","lastModifiedDate":"2022-03-14"},{"lineNumber":34,"author":{"gitId":"xzzz3"},"content":"    class OrderListViewCell extends ListCell\u003cOrder\u003e {","lastModifiedDate":"2022-03-14"},{"lineNumber":35,"author":{"gitId":"xzzz3"},"content":"        @Override","lastModifiedDate":"2022-03-14"},{"lineNumber":36,"author":{"gitId":"xzzz3"},"content":"        protected void updateItem(Order order, boolean empty) {","lastModifiedDate":"2022-03-14"},{"lineNumber":37,"author":{"gitId":"xzzz3"},"content":"            super.updateItem(order, empty);","lastModifiedDate":"2022-03-14"},{"lineNumber":38,"author":{"gitId":"xzzz3"},"content":"","lastModifiedDate":"2022-03-14"},{"lineNumber":39,"author":{"gitId":"xzzz3"},"content":"            if (empty || order \u003d\u003d null) {","lastModifiedDate":"2022-03-14"},{"lineNumber":40,"author":{"gitId":"xzzz3"},"content":"                setGraphic(null);","lastModifiedDate":"2022-03-14"},{"lineNumber":41,"author":{"gitId":"xzzz3"},"content":"                setText(null);","lastModifiedDate":"2022-03-14"},{"lineNumber":42,"author":{"gitId":"xzzz3"},"content":"            } else {","lastModifiedDate":"2022-03-14"},{"lineNumber":43,"author":{"gitId":"xzzz3"},"content":"                setGraphic(new OrderCard(order, getIndex() + 1).getRoot());","lastModifiedDate":"2022-03-14"},{"lineNumber":44,"author":{"gitId":"xzzz3"},"content":"            }","lastModifiedDate":"2022-03-14"},{"lineNumber":45,"author":{"gitId":"xzzz3"},"content":"        }","lastModifiedDate":"2022-03-14"},{"lineNumber":46,"author":{"gitId":"xzzz3"},"content":"    }","lastModifiedDate":"2022-03-14"},{"lineNumber":47,"author":{"gitId":"xzzz3"},"content":"","lastModifiedDate":"2022-03-14"},{"lineNumber":48,"author":{"gitId":"xzzz3"},"content":"}","lastModifiedDate":"2022-03-14"},{"lineNumber":49,"author":{"gitId":"xzzz3"},"content":"","lastModifiedDate":"2022-03-14"}],"authorContributionMap":{"xzzz3":49}},{"path":"src/main/java/seedu/address/ui/TabDisplay.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"zxgoh"},"content":"package seedu.address.ui;","lastModifiedDate":"2022-03-16"},{"lineNumber":2,"author":{"gitId":"zxgoh"},"content":"","lastModifiedDate":"2022-03-16"},{"lineNumber":3,"author":{"gitId":"zxgoh"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2022-03-16"},{"lineNumber":4,"author":{"gitId":"zxgoh"},"content":"","lastModifiedDate":"2022-03-16"},{"lineNumber":5,"author":{"gitId":"zxgoh"},"content":"import javafx.fxml.FXML;","lastModifiedDate":"2022-03-16"},{"lineNumber":6,"author":{"gitId":"zxgoh"},"content":"import javafx.scene.control.Label;","lastModifiedDate":"2022-03-16"},{"lineNumber":7,"author":{"gitId":"zxgoh"},"content":"import javafx.scene.layout.HBox;","lastModifiedDate":"2022-03-16"},{"lineNumber":8,"author":{"gitId":"zxgoh"},"content":"import javafx.scene.layout.Region;","lastModifiedDate":"2022-03-16"},{"lineNumber":9,"author":{"gitId":"zxgoh"},"content":"","lastModifiedDate":"2022-03-16"},{"lineNumber":10,"author":{"gitId":"zxgoh"},"content":"/**","lastModifiedDate":"2022-03-16"},{"lineNumber":11,"author":{"gitId":"zxgoh"},"content":" * A ui for the status bar that is displayed at the header of the application.","lastModifiedDate":"2022-03-16"},{"lineNumber":12,"author":{"gitId":"zxgoh"},"content":" */","lastModifiedDate":"2022-03-16"},{"lineNumber":13,"author":{"gitId":"zxgoh"},"content":"public class TabDisplay extends UiPart\u003cRegion\u003e {","lastModifiedDate":"2022-03-16"},{"lineNumber":14,"author":{"gitId":"zxgoh"},"content":"","lastModifiedDate":"2022-03-16"},{"lineNumber":15,"author":{"gitId":"zxgoh"},"content":"    private static final String FXML \u003d \"TabDisplay.fxml\";","lastModifiedDate":"2022-03-16"},{"lineNumber":16,"author":{"gitId":"zxgoh"},"content":"    private static final int ORDER_INDEX \u003d 0;","lastModifiedDate":"2022-03-16"},{"lineNumber":17,"author":{"gitId":"zxgoh"},"content":"    private static final int DRIVER_INDEX \u003d 1;","lastModifiedDate":"2022-03-16"},{"lineNumber":18,"author":{"gitId":"zxgoh"},"content":"    private static final int DISH_INDEX \u003d 2;","lastModifiedDate":"2022-03-16"},{"lineNumber":19,"author":{"gitId":"zxgoh"},"content":"    private static final int CUSTOMER_INDEX \u003d 3;","lastModifiedDate":"2022-03-16"},{"lineNumber":20,"author":{"gitId":"zxgoh"},"content":"","lastModifiedDate":"2022-03-16"},{"lineNumber":21,"author":{"gitId":"zxgoh"},"content":"    @FXML","lastModifiedDate":"2022-03-16"},{"lineNumber":22,"author":{"gitId":"zxgoh"},"content":"    private HBox tabDisplay;","lastModifiedDate":"2022-03-16"},{"lineNumber":23,"author":{"gitId":"zxgoh"},"content":"    @FXML","lastModifiedDate":"2022-03-16"},{"lineNumber":24,"author":{"gitId":"zxgoh"},"content":"    private Label customer;","lastModifiedDate":"2022-03-16"},{"lineNumber":25,"author":{"gitId":"zxgoh"},"content":"    @FXML","lastModifiedDate":"2022-03-16"},{"lineNumber":26,"author":{"gitId":"zxgoh"},"content":"    private Label order;","lastModifiedDate":"2022-03-16"},{"lineNumber":27,"author":{"gitId":"zxgoh"},"content":"    @FXML","lastModifiedDate":"2022-03-16"},{"lineNumber":28,"author":{"gitId":"zxgoh"},"content":"    private Label driver;","lastModifiedDate":"2022-03-16"},{"lineNumber":29,"author":{"gitId":"zxgoh"},"content":"    @FXML","lastModifiedDate":"2022-03-16"},{"lineNumber":30,"author":{"gitId":"zxgoh"},"content":"    private Label dish;","lastModifiedDate":"2022-03-16"},{"lineNumber":31,"author":{"gitId":"zxgoh"},"content":"","lastModifiedDate":"2022-03-16"},{"lineNumber":32,"author":{"gitId":"zxgoh"},"content":"    public TabDisplay() {","lastModifiedDate":"2022-03-16"},{"lineNumber":33,"author":{"gitId":"zxgoh"},"content":"        super(FXML);","lastModifiedDate":"2022-03-16"},{"lineNumber":34,"author":{"gitId":"zxgoh"},"content":"    }","lastModifiedDate":"2022-03-16"},{"lineNumber":35,"author":{"gitId":"zxgoh"},"content":"","lastModifiedDate":"2022-03-16"},{"lineNumber":36,"author":{"gitId":"zxgoh"},"content":"    public void setFocus(int focusItem) {","lastModifiedDate":"2022-03-16"},{"lineNumber":37,"author":{"gitId":"zxgoh"},"content":"        requireNonNull(focusItem);","lastModifiedDate":"2022-03-16"},{"lineNumber":38,"author":{"gitId":"zxgoh"},"content":"        customer.setStyle(\"-fx-text-fill: grey\");","lastModifiedDate":"2022-03-16"},{"lineNumber":39,"author":{"gitId":"zxgoh"},"content":"        order.setStyle(\"-fx-text-fill: grey\");","lastModifiedDate":"2022-03-16"},{"lineNumber":40,"author":{"gitId":"zxgoh"},"content":"        driver.setStyle(\"-fx-text-fill: grey\");","lastModifiedDate":"2022-03-16"},{"lineNumber":41,"author":{"gitId":"zxgoh"},"content":"        dish.setStyle(\"-fx-text-fill: grey\");","lastModifiedDate":"2022-03-16"},{"lineNumber":42,"author":{"gitId":"zxgoh"},"content":"        switch (focusItem) {","lastModifiedDate":"2022-03-16"},{"lineNumber":43,"author":{"gitId":"zxgoh"},"content":"        case ORDER_INDEX:","lastModifiedDate":"2022-03-16"},{"lineNumber":44,"author":{"gitId":"zxgoh"},"content":"            order.setStyle(\"-fx-text-fill: white\");","lastModifiedDate":"2022-03-16"},{"lineNumber":45,"author":{"gitId":"zxgoh"},"content":"            break;","lastModifiedDate":"2022-03-16"},{"lineNumber":46,"author":{"gitId":"zxgoh"},"content":"        case DRIVER_INDEX:","lastModifiedDate":"2022-03-16"},{"lineNumber":47,"author":{"gitId":"zxgoh"},"content":"            driver.setStyle(\"-fx-text-fill: white\");","lastModifiedDate":"2022-03-16"},{"lineNumber":48,"author":{"gitId":"zxgoh"},"content":"            break;","lastModifiedDate":"2022-03-16"},{"lineNumber":49,"author":{"gitId":"zxgoh"},"content":"        case DISH_INDEX:","lastModifiedDate":"2022-03-16"},{"lineNumber":50,"author":{"gitId":"zxgoh"},"content":"            dish.setStyle(\"-fx-text-fill: white\");","lastModifiedDate":"2022-03-16"},{"lineNumber":51,"author":{"gitId":"zxgoh"},"content":"            break;","lastModifiedDate":"2022-03-16"},{"lineNumber":52,"author":{"gitId":"zxgoh"},"content":"        case CUSTOMER_INDEX:","lastModifiedDate":"2022-03-16"},{"lineNumber":53,"author":{"gitId":"zxgoh"},"content":"            customer.setStyle(\"-fx-text-fill: white\");","lastModifiedDate":"2022-03-16"},{"lineNumber":54,"author":{"gitId":"zxgoh"},"content":"            break;","lastModifiedDate":"2022-03-16"},{"lineNumber":55,"author":{"gitId":"zxgoh"},"content":"        default:","lastModifiedDate":"2022-03-16"},{"lineNumber":56,"author":{"gitId":"zxgoh"},"content":"            break;","lastModifiedDate":"2022-03-16"},{"lineNumber":57,"author":{"gitId":"zxgoh"},"content":"        }","lastModifiedDate":"2022-03-16"},{"lineNumber":58,"author":{"gitId":"zxgoh"},"content":"    }","lastModifiedDate":"2022-03-16"},{"lineNumber":59,"author":{"gitId":"zxgoh"},"content":"","lastModifiedDate":"2022-03-16"},{"lineNumber":60,"author":{"gitId":"zxgoh"},"content":"","lastModifiedDate":"2022-03-16"},{"lineNumber":61,"author":{"gitId":"zxgoh"},"content":"}","lastModifiedDate":"2022-03-16"}],"authorContributionMap":{"zxgoh":61}},{"path":"src/main/java/seedu/address/ui/UiManager.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.ui;","lastModifiedDate":"2016-09-22"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.util.logging.Logger;","lastModifiedDate":"2017-01-19"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import javafx.application.Platform;","lastModifiedDate":"2016-08-18"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import javafx.scene.control.Alert;","lastModifiedDate":"2016-08-18"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import javafx.scene.control.Alert.AlertType;","lastModifiedDate":"2016-08-18"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import javafx.scene.image.Image;","lastModifiedDate":"2016-08-18"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import javafx.stage.Stage;","lastModifiedDate":"2016-08-18"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import seedu.address.MainApp;","lastModifiedDate":"2016-08-25"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.LogsCenter;","lastModifiedDate":"2016-09-23"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import seedu.address.commons.util.StringUtil;","lastModifiedDate":"2016-09-25"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import seedu.address.logic.Logic;","lastModifiedDate":"2016-09-25"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":15,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-18"},{"lineNumber":16,"author":{"gitId":"-"},"content":" * The manager of the UI component.","lastModifiedDate":"2016-09-25"},{"lineNumber":17,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-18"},{"lineNumber":18,"author":{"gitId":"-"},"content":"public class UiManager implements Ui {","lastModifiedDate":"2018-12-09"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-04-01"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    public static final String ALERT_DIALOG_PANE_FIELD_ID \u003d \"alertDialogPane\";","lastModifiedDate":"2017-04-01"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-04-01"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    private static final Logger logger \u003d LogsCenter.getLogger(UiManager.class);","lastModifiedDate":"2016-09-23"},{"lineNumber":23,"author":{"gitId":"xzzz3"},"content":"    private static final String ICON_APPLICATION \u003d \"/images/foodonwheels_icon_32.png\";","lastModifiedDate":"2022-03-15"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":25,"author":{"gitId":"zxgoh"},"content":"    private final Logic logic;","lastModifiedDate":"2022-03-16"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    private MainWindow mainWindow;","lastModifiedDate":"2016-08-18"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2020-05-27"},{"lineNumber":29,"author":{"gitId":"-"},"content":"     * Creates a {@code UiManager} with the given {@code Logic}.","lastModifiedDate":"2020-05-27"},{"lineNumber":30,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2020-05-27"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    public UiManager(Logic logic) {","lastModifiedDate":"2018-12-08"},{"lineNumber":32,"author":{"gitId":"-"},"content":"        this.logic \u003d logic;","lastModifiedDate":"2016-09-25"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-18"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-25"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    public void start(Stage primaryStage) {","lastModifiedDate":"2016-09-25"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        logger.info(\"Starting UI...\");","lastModifiedDate":"2016-09-21"},{"lineNumber":38,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        //Set the application icon.","lastModifiedDate":"2016-08-18"},{"lineNumber":40,"author":{"gitId":"-"},"content":"        primaryStage.getIcons().add(getImage(ICON_APPLICATION));","lastModifiedDate":"2016-08-18"},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":42,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2016-08-18"},{"lineNumber":43,"author":{"gitId":"-"},"content":"            mainWindow \u003d new MainWindow(primaryStage, logic);","lastModifiedDate":"2018-12-08"},{"lineNumber":44,"author":{"gitId":"-"},"content":"            mainWindow.show(); //This should be called before creating other UI parts","lastModifiedDate":"2016-08-18"},{"lineNumber":45,"author":{"gitId":"-"},"content":"            mainWindow.fillInnerParts();","lastModifiedDate":"2016-08-18"},{"lineNumber":46,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":47,"author":{"gitId":"-"},"content":"        } catch (Throwable e) {","lastModifiedDate":"2016-08-18"},{"lineNumber":48,"author":{"gitId":"-"},"content":"            logger.severe(StringUtil.getDetails(e));","lastModifiedDate":"2016-09-21"},{"lineNumber":49,"author":{"gitId":"-"},"content":"            showFatalErrorDialogAndShutdown(\"Fatal error during initializing\", e);","lastModifiedDate":"2016-08-18"},{"lineNumber":50,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-08-18"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-18"},{"lineNumber":52,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":53,"author":{"gitId":"-"},"content":"    private Image getImage(String imagePath) {","lastModifiedDate":"2016-08-18"},{"lineNumber":54,"author":{"gitId":"-"},"content":"        return new Image(MainApp.class.getResourceAsStream(imagePath));","lastModifiedDate":"2016-08-18"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-18"},{"lineNumber":56,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":57,"author":{"gitId":"zxgoh"},"content":"    void showAlertDialogAndWait(AlertType type, String title, String headerText, String contentText) {","lastModifiedDate":"2022-03-16"},{"lineNumber":58,"author":{"gitId":"-"},"content":"        showAlertDialogAndWait(mainWindow.getPrimaryStage(), type, title, headerText, contentText);","lastModifiedDate":"2016-08-18"},{"lineNumber":59,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-18"},{"lineNumber":60,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":61,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-08-16"},{"lineNumber":62,"author":{"gitId":"-"},"content":"     * Shows an alert dialog on {@code owner} with the given parameters.","lastModifiedDate":"2017-08-16"},{"lineNumber":63,"author":{"gitId":"-"},"content":"     * This method only returns after the user has closed the alert dialog.","lastModifiedDate":"2017-08-16"},{"lineNumber":64,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-08-16"},{"lineNumber":65,"author":{"gitId":"-"},"content":"    private static void showAlertDialogAndWait(Stage owner, AlertType type, String title, String headerText,","lastModifiedDate":"2016-09-21"},{"lineNumber":66,"author":{"gitId":"-"},"content":"                                               String contentText) {","lastModifiedDate":"2016-08-18"},{"lineNumber":67,"author":{"gitId":"-"},"content":"        final Alert alert \u003d new Alert(type);","lastModifiedDate":"2016-08-18"},{"lineNumber":68,"author":{"gitId":"-"},"content":"        alert.getDialogPane().getStylesheets().add(\"view/DarkTheme.css\");","lastModifiedDate":"2016-08-20"},{"lineNumber":69,"author":{"gitId":"-"},"content":"        alert.initOwner(owner);","lastModifiedDate":"2016-08-18"},{"lineNumber":70,"author":{"gitId":"-"},"content":"        alert.setTitle(title);","lastModifiedDate":"2016-08-18"},{"lineNumber":71,"author":{"gitId":"-"},"content":"        alert.setHeaderText(headerText);","lastModifiedDate":"2016-08-18"},{"lineNumber":72,"author":{"gitId":"-"},"content":"        alert.setContentText(contentText);","lastModifiedDate":"2016-08-18"},{"lineNumber":73,"author":{"gitId":"-"},"content":"        alert.getDialogPane().setId(ALERT_DIALOG_PANE_FIELD_ID);","lastModifiedDate":"2016-10-12"},{"lineNumber":74,"author":{"gitId":"-"},"content":"        alert.showAndWait();","lastModifiedDate":"2016-08-18"},{"lineNumber":75,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-18"},{"lineNumber":76,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":77,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-08-16"},{"lineNumber":78,"author":{"gitId":"-"},"content":"     * Shows an error alert dialog with {@code title} and error message, {@code e},","lastModifiedDate":"2017-08-16"},{"lineNumber":79,"author":{"gitId":"-"},"content":"     * and exits the application after the user has closed the alert dialog.","lastModifiedDate":"2017-08-16"},{"lineNumber":80,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-08-16"},{"lineNumber":81,"author":{"gitId":"-"},"content":"    private void showFatalErrorDialogAndShutdown(String title, Throwable e) {","lastModifiedDate":"2016-09-21"},{"lineNumber":82,"author":{"gitId":"-"},"content":"        logger.severe(title + \" \" + e.getMessage() + StringUtil.getDetails(e));","lastModifiedDate":"2016-09-21"},{"lineNumber":83,"author":{"gitId":"zxgoh"},"content":"        showAlertDialogAndWait(AlertType.ERROR, title, e.getMessage(), e.toString());","lastModifiedDate":"2022-03-16"},{"lineNumber":84,"author":{"gitId":"-"},"content":"        Platform.exit();","lastModifiedDate":"2016-08-18"},{"lineNumber":85,"author":{"gitId":"-"},"content":"        System.exit(1);","lastModifiedDate":"2016-08-18"},{"lineNumber":86,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-18"},{"lineNumber":87,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-25"},{"lineNumber":88,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-18"}],"authorContributionMap":{"xzzz3":1,"-":84,"zxgoh":3}},{"path":"src/main/resources/view/CustomerListCard.fxml","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e","lastModifiedDate":"2022-03-14"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-03-14"},{"lineNumber":3,"author":{"gitId":"-"},"content":"\u003c?import javafx.geometry.Insets?\u003e","lastModifiedDate":"2022-03-14"},{"lineNumber":4,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.control.Label?\u003e","lastModifiedDate":"2022-03-14"},{"lineNumber":5,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.layout.ColumnConstraints?\u003e","lastModifiedDate":"2022-03-14"},{"lineNumber":6,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.layout.FlowPane?\u003e","lastModifiedDate":"2022-03-14"},{"lineNumber":7,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.layout.GridPane?\u003e","lastModifiedDate":"2022-03-14"},{"lineNumber":8,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.layout.HBox?\u003e","lastModifiedDate":"2022-03-14"},{"lineNumber":9,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.layout.Region?\u003e","lastModifiedDate":"2022-03-14"},{"lineNumber":10,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.layout.VBox?\u003e","lastModifiedDate":"2022-03-14"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-03-14"},{"lineNumber":12,"author":{"gitId":"-"},"content":"\u003cHBox id\u003d\"cardPane\" fx:id\u003d\"cardPane\" xmlns\u003d\"http://javafx.com/javafx/8\" xmlns:fx\u003d\"http://javafx.com/fxml/1\"\u003e","lastModifiedDate":"2022-03-14"},{"lineNumber":13,"author":{"gitId":"-"},"content":"  \u003cGridPane HBox.hgrow\u003d\"ALWAYS\"\u003e","lastModifiedDate":"2022-03-14"},{"lineNumber":14,"author":{"gitId":"-"},"content":"    \u003ccolumnConstraints\u003e","lastModifiedDate":"2022-03-14"},{"lineNumber":15,"author":{"gitId":"-"},"content":"      \u003cColumnConstraints hgrow\u003d\"SOMETIMES\" minWidth\u003d\"10\" prefWidth\u003d\"150\" /\u003e","lastModifiedDate":"2022-03-14"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    \u003c/columnConstraints\u003e","lastModifiedDate":"2022-03-14"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    \u003cVBox alignment\u003d\"CENTER_LEFT\" minHeight\u003d\"105\" GridPane.columnIndex\u003d\"0\"\u003e","lastModifiedDate":"2022-03-14"},{"lineNumber":18,"author":{"gitId":"-"},"content":"      \u003cpadding\u003e","lastModifiedDate":"2022-03-14"},{"lineNumber":19,"author":{"gitId":"-"},"content":"        \u003cInsets top\u003d\"5\" right\u003d\"5\" bottom\u003d\"5\" left\u003d\"15\" /\u003e","lastModifiedDate":"2022-03-14"},{"lineNumber":20,"author":{"gitId":"-"},"content":"      \u003c/padding\u003e","lastModifiedDate":"2022-03-14"},{"lineNumber":21,"author":{"gitId":"-"},"content":"      \u003cHBox spacing\u003d\"5\" alignment\u003d\"CENTER_LEFT\"\u003e","lastModifiedDate":"2022-03-14"},{"lineNumber":22,"author":{"gitId":"-"},"content":"        \u003cLabel fx:id\u003d\"id\" styleClass\u003d\"cell_big_label\"\u003e","lastModifiedDate":"2022-03-14"},{"lineNumber":23,"author":{"gitId":"-"},"content":"          \u003cminWidth\u003e","lastModifiedDate":"2022-03-14"},{"lineNumber":24,"author":{"gitId":"-"},"content":"            \u003c!-- Ensures that the label text is never truncated --\u003e","lastModifiedDate":"2022-03-14"},{"lineNumber":25,"author":{"gitId":"-"},"content":"            \u003cRegion fx:constant\u003d\"USE_PREF_SIZE\" /\u003e","lastModifiedDate":"2022-03-14"},{"lineNumber":26,"author":{"gitId":"-"},"content":"          \u003c/minWidth\u003e","lastModifiedDate":"2022-03-14"},{"lineNumber":27,"author":{"gitId":"-"},"content":"        \u003c/Label\u003e","lastModifiedDate":"2022-03-14"},{"lineNumber":28,"author":{"gitId":"zxgoh"},"content":"        \u003cLabel fx:id\u003d\"nameCustomer\" text\u003d\"\\$first\" styleClass\u003d\"cell_big_label\" /\u003e","lastModifiedDate":"2022-03-15"},{"lineNumber":29,"author":{"gitId":"-"},"content":"      \u003c/HBox\u003e","lastModifiedDate":"2022-03-14"},{"lineNumber":30,"author":{"gitId":"zxgoh"},"content":"      \u003cLabel fx:id\u003d\"phoneCustomer\" styleClass\u003d\"cell_small_label\" text\u003d\"\\$phoneCustomer\" /\u003e","lastModifiedDate":"2022-03-15"},{"lineNumber":31,"author":{"gitId":"zxgoh"},"content":"      \u003cLabel fx:id\u003d\"addressCustomer\" styleClass\u003d\"cell_small_label\" text\u003d\"\\$addressCustomer\" /\u003e","lastModifiedDate":"2022-03-15"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    \u003c/VBox\u003e","lastModifiedDate":"2022-03-14"},{"lineNumber":33,"author":{"gitId":"-"},"content":"  \u003c/GridPane\u003e","lastModifiedDate":"2022-03-14"},{"lineNumber":34,"author":{"gitId":"-"},"content":"\u003c/HBox\u003e","lastModifiedDate":"2022-03-14"}],"authorContributionMap":{"-":31,"zxgoh":3}},{"path":"src/main/resources/view/CustomerListPanel.fxml","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"zxgoh"},"content":"\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e","lastModifiedDate":"2022-03-14"},{"lineNumber":2,"author":{"gitId":"zxgoh"},"content":"","lastModifiedDate":"2022-03-14"},{"lineNumber":3,"author":{"gitId":"zxgoh"},"content":"\u003c?import javafx.scene.control.ListView?\u003e","lastModifiedDate":"2022-03-14"},{"lineNumber":4,"author":{"gitId":"zxgoh"},"content":"\u003c?import javafx.scene.layout.VBox?\u003e","lastModifiedDate":"2022-03-14"},{"lineNumber":5,"author":{"gitId":"zxgoh"},"content":"","lastModifiedDate":"2022-03-14"},{"lineNumber":6,"author":{"gitId":"zxgoh"},"content":"\u003cVBox xmlns\u003d\"http://javafx.com/javafx/8\" xmlns:fx\u003d\"http://javafx.com/fxml/1\"\u003e","lastModifiedDate":"2022-03-14"},{"lineNumber":7,"author":{"gitId":"zxgoh"},"content":"  \u003cListView fx:id\u003d\"customerListView\" VBox.vgrow\u003d\"ALWAYS\" /\u003e","lastModifiedDate":"2022-03-14"},{"lineNumber":8,"author":{"gitId":"zxgoh"},"content":"\u003c/VBox\u003e","lastModifiedDate":"2022-03-14"}],"authorContributionMap":{"zxgoh":8}},{"path":"src/main/resources/view/DarkTheme.css","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":".background {","lastModifiedDate":"2016-08-08"},{"lineNumber":2,"author":{"gitId":"-"},"content":"    -fx-background-color: derive(#1d1d1d, 20%);","lastModifiedDate":"2016-08-15"},{"lineNumber":3,"author":{"gitId":"-"},"content":"    background-color: #383838; /* Used in the default.html file */","lastModifiedDate":"2017-03-02"},{"lineNumber":4,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":6,"author":{"gitId":"-"},"content":".label {","lastModifiedDate":"2016-08-08"},{"lineNumber":7,"author":{"gitId":"-"},"content":"    -fx-font-size: 11pt;","lastModifiedDate":"2016-08-08"},{"lineNumber":8,"author":{"gitId":"-"},"content":"    -fx-font-family: \"Segoe UI Semibold\";","lastModifiedDate":"2022-01-13"},{"lineNumber":9,"author":{"gitId":"-"},"content":"    -fx-text-fill: #555555;","lastModifiedDate":"2016-08-15"},{"lineNumber":10,"author":{"gitId":"-"},"content":"    -fx-opacity: 0.9;","lastModifiedDate":"2016-08-08"},{"lineNumber":11,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":13,"author":{"gitId":"-"},"content":".label-bright {","lastModifiedDate":"2016-08-08"},{"lineNumber":14,"author":{"gitId":"-"},"content":"    -fx-font-size: 11pt;","lastModifiedDate":"2016-08-08"},{"lineNumber":15,"author":{"gitId":"-"},"content":"    -fx-font-family: \"Segoe UI Semibold\";","lastModifiedDate":"2022-01-13"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    -fx-text-fill: white;","lastModifiedDate":"2016-08-08"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    -fx-opacity: 1;","lastModifiedDate":"2016-08-08"},{"lineNumber":18,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":20,"author":{"gitId":"-"},"content":".label-header {","lastModifiedDate":"2016-08-08"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    -fx-font-size: 32pt;","lastModifiedDate":"2016-08-08"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    -fx-font-family: \"Segoe UI Light\";","lastModifiedDate":"2022-01-13"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    -fx-text-fill: white;","lastModifiedDate":"2016-08-08"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    -fx-opacity: 1;","lastModifiedDate":"2016-08-08"},{"lineNumber":25,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":27,"author":{"gitId":"-"},"content":".text-field {","lastModifiedDate":"2016-08-08"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    -fx-font-size: 12pt;","lastModifiedDate":"2016-08-08"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    -fx-font-family: \"Segoe UI Semibold\";","lastModifiedDate":"2022-01-13"},{"lineNumber":30,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":31,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":32,"author":{"gitId":"-"},"content":".tab-pane {","lastModifiedDate":"2016-08-08"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    -fx-padding: 0 0 0 1;","lastModifiedDate":"2016-08-08"},{"lineNumber":34,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":36,"author":{"gitId":"-"},"content":".tab-pane .tab-header-area {","lastModifiedDate":"2016-08-08"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    -fx-padding: 0 0 0 0;","lastModifiedDate":"2016-08-08"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    -fx-min-height: 0;","lastModifiedDate":"2016-08-08"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    -fx-max-height: 0;","lastModifiedDate":"2016-08-08"},{"lineNumber":40,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":42,"author":{"gitId":"-"},"content":".table-view {","lastModifiedDate":"2016-08-08"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    -fx-base: #1d1d1d;","lastModifiedDate":"2016-08-15"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    -fx-control-inner-background: #1d1d1d;","lastModifiedDate":"2016-08-15"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    -fx-background-color: #1d1d1d;","lastModifiedDate":"2016-08-15"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    -fx-table-cell-border-color: transparent;","lastModifiedDate":"2016-08-08"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    -fx-table-header-border-color: transparent;","lastModifiedDate":"2016-08-08"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    -fx-padding: 5;","lastModifiedDate":"2016-08-08"},{"lineNumber":49,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":50,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":51,"author":{"gitId":"-"},"content":".table-view .column-header-background {","lastModifiedDate":"2016-08-08"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    -fx-background-color: transparent;","lastModifiedDate":"2016-08-08"},{"lineNumber":53,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":54,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":55,"author":{"gitId":"-"},"content":".table-view .column-header, .table-view .filler {","lastModifiedDate":"2016-08-08"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    -fx-size: 35;","lastModifiedDate":"2016-08-08"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    -fx-border-width: 0 0 1 0;","lastModifiedDate":"2016-08-08"},{"lineNumber":58,"author":{"gitId":"-"},"content":"    -fx-background-color: transparent;","lastModifiedDate":"2016-08-08"},{"lineNumber":59,"author":{"gitId":"-"},"content":"    -fx-border-color:","lastModifiedDate":"2016-08-08"},{"lineNumber":60,"author":{"gitId":"-"},"content":"        transparent","lastModifiedDate":"2016-08-08"},{"lineNumber":61,"author":{"gitId":"-"},"content":"        transparent","lastModifiedDate":"2016-08-08"},{"lineNumber":62,"author":{"gitId":"-"},"content":"        derive(-fx-base, 80%)","lastModifiedDate":"2016-08-08"},{"lineNumber":63,"author":{"gitId":"-"},"content":"        transparent;","lastModifiedDate":"2016-08-08"},{"lineNumber":64,"author":{"gitId":"-"},"content":"    -fx-border-insets: 0 10 1 0;","lastModifiedDate":"2016-08-08"},{"lineNumber":65,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":66,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":67,"author":{"gitId":"-"},"content":".table-view .column-header .label {","lastModifiedDate":"2016-08-08"},{"lineNumber":68,"author":{"gitId":"-"},"content":"    -fx-font-size: 20pt;","lastModifiedDate":"2016-08-08"},{"lineNumber":69,"author":{"gitId":"-"},"content":"    -fx-font-family: \"Segoe UI Light\";","lastModifiedDate":"2022-01-13"},{"lineNumber":70,"author":{"gitId":"-"},"content":"    -fx-text-fill: white;","lastModifiedDate":"2016-08-08"},{"lineNumber":71,"author":{"gitId":"-"},"content":"    -fx-alignment: center-left;","lastModifiedDate":"2016-08-08"},{"lineNumber":72,"author":{"gitId":"-"},"content":"    -fx-opacity: 1;","lastModifiedDate":"2016-08-08"},{"lineNumber":73,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":74,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":75,"author":{"gitId":"-"},"content":".table-view:focused .table-row-cell:filled:focused:selected {","lastModifiedDate":"2016-08-08"},{"lineNumber":76,"author":{"gitId":"-"},"content":"    -fx-background-color: -fx-focus-color;","lastModifiedDate":"2016-08-08"},{"lineNumber":77,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":78,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":79,"author":{"gitId":"-"},"content":".split-pane:horizontal .split-pane-divider {","lastModifiedDate":"2016-08-08"},{"lineNumber":80,"author":{"gitId":"-"},"content":"    -fx-background-color: derive(#1d1d1d, 20%);","lastModifiedDate":"2017-03-02"},{"lineNumber":81,"author":{"gitId":"-"},"content":"    -fx-border-color: transparent transparent transparent #4d4d4d;","lastModifiedDate":"2017-03-02"},{"lineNumber":82,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-15"},{"lineNumber":83,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-15"},{"lineNumber":84,"author":{"gitId":"-"},"content":".split-pane {","lastModifiedDate":"2016-08-15"},{"lineNumber":85,"author":{"gitId":"-"},"content":"    -fx-border-radius: 1;","lastModifiedDate":"2016-08-15"},{"lineNumber":86,"author":{"gitId":"-"},"content":"    -fx-border-width: 1;","lastModifiedDate":"2016-08-15"},{"lineNumber":87,"author":{"gitId":"-"},"content":"    -fx-background-color: derive(#1d1d1d, 20%);","lastModifiedDate":"2016-08-15"},{"lineNumber":88,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":89,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":90,"author":{"gitId":"-"},"content":".list-view {","lastModifiedDate":"2017-03-02"},{"lineNumber":91,"author":{"gitId":"-"},"content":"    -fx-background-insets: 0;","lastModifiedDate":"2017-03-02"},{"lineNumber":92,"author":{"gitId":"-"},"content":"    -fx-padding: 0;","lastModifiedDate":"2017-03-02"},{"lineNumber":93,"author":{"gitId":"-"},"content":"    -fx-background-color: derive(#1d1d1d, 20%);","lastModifiedDate":"2018-01-10"},{"lineNumber":94,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-03-02"},{"lineNumber":95,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-02"},{"lineNumber":96,"author":{"gitId":"-"},"content":".list-cell {","lastModifiedDate":"2016-08-08"},{"lineNumber":97,"author":{"gitId":"-"},"content":"    -fx-label-padding: 0 0 0 0;","lastModifiedDate":"2016-08-08"},{"lineNumber":98,"author":{"gitId":"-"},"content":"    -fx-graphic-text-gap : 0;","lastModifiedDate":"2016-08-08"},{"lineNumber":99,"author":{"gitId":"-"},"content":"    -fx-padding: 0 0 0 0;","lastModifiedDate":"2016-08-08"},{"lineNumber":100,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":101,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":102,"author":{"gitId":"-"},"content":".list-cell:filled:even {","lastModifiedDate":"2017-03-02"},{"lineNumber":103,"author":{"gitId":"-"},"content":"    -fx-background-color: #3c3e3f;","lastModifiedDate":"2017-03-02"},{"lineNumber":104,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-03-02"},{"lineNumber":105,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-02"},{"lineNumber":106,"author":{"gitId":"-"},"content":".list-cell:filled:odd {","lastModifiedDate":"2017-03-02"},{"lineNumber":107,"author":{"gitId":"-"},"content":"    -fx-background-color: #515658;","lastModifiedDate":"2017-03-02"},{"lineNumber":108,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-03-02"},{"lineNumber":109,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-02"},{"lineNumber":110,"author":{"gitId":"-"},"content":".list-cell:filled:selected {","lastModifiedDate":"2017-03-02"},{"lineNumber":111,"author":{"gitId":"-"},"content":"    -fx-background-color: #424d5f;","lastModifiedDate":"2017-03-02"},{"lineNumber":112,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-03-02"},{"lineNumber":113,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-02"},{"lineNumber":114,"author":{"gitId":"-"},"content":".list-cell:filled:selected #cardPane {","lastModifiedDate":"2017-03-02"},{"lineNumber":115,"author":{"gitId":"-"},"content":"    -fx-border-color: #3e7b91;","lastModifiedDate":"2017-03-02"},{"lineNumber":116,"author":{"gitId":"-"},"content":"    -fx-border-width: 1;","lastModifiedDate":"2017-03-02"},{"lineNumber":117,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-03-02"},{"lineNumber":118,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-02"},{"lineNumber":119,"author":{"gitId":"-"},"content":".list-cell .label {","lastModifiedDate":"2016-08-08"},{"lineNumber":120,"author":{"gitId":"-"},"content":"    -fx-text-fill: white;","lastModifiedDate":"2017-03-02"},{"lineNumber":121,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":122,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":123,"author":{"gitId":"-"},"content":".cell_big_label {","lastModifiedDate":"2016-08-08"},{"lineNumber":124,"author":{"gitId":"-"},"content":"    -fx-font-family: \"Segoe UI Semibold\";","lastModifiedDate":"2022-01-13"},{"lineNumber":125,"author":{"gitId":"-"},"content":"    -fx-font-size: 16px;","lastModifiedDate":"2016-08-08"},{"lineNumber":126,"author":{"gitId":"-"},"content":"    -fx-text-fill: #010504;","lastModifiedDate":"2016-08-08"},{"lineNumber":127,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":128,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":129,"author":{"gitId":"jaegarpoon"},"content":".cell_header {","lastModifiedDate":"2022-03-28"},{"lineNumber":130,"author":{"gitId":"jaegarpoon"},"content":"    -fx-font-family: \"Segoe UI Semibold\";","lastModifiedDate":"2022-03-28"},{"lineNumber":131,"author":{"gitId":"jaegarpoon"},"content":"    -fx-font-size: 16px;","lastModifiedDate":"2022-03-28"},{"lineNumber":132,"author":{"gitId":"jaegarpoon"},"content":"    -fx-text-fill: #010504;","lastModifiedDate":"2022-03-28"},{"lineNumber":133,"author":{"gitId":"jaegarpoon"},"content":"    -fx-underline: true;","lastModifiedDate":"2022-03-28"},{"lineNumber":134,"author":{"gitId":"jaegarpoon"},"content":"}","lastModifiedDate":"2022-03-28"},{"lineNumber":135,"author":{"gitId":"jaegarpoon"},"content":"","lastModifiedDate":"2022-03-28"},{"lineNumber":136,"author":{"gitId":"-"},"content":".cell_small_label {","lastModifiedDate":"2016-08-08"},{"lineNumber":137,"author":{"gitId":"-"},"content":"    -fx-font-family: \"Segoe UI\";","lastModifiedDate":"2022-01-13"},{"lineNumber":138,"author":{"gitId":"-"},"content":"    -fx-font-size: 13px;","lastModifiedDate":"2017-03-02"},{"lineNumber":139,"author":{"gitId":"-"},"content":"    -fx-text-fill: #010504;","lastModifiedDate":"2016-08-08"},{"lineNumber":140,"author":{"gitId":"jaegarpoon"},"content":"    -fx-wrap-text: true;","lastModifiedDate":"2022-03-28"},{"lineNumber":141,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":142,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":143,"author":{"gitId":"-"},"content":".stack-pane {","lastModifiedDate":"2018-04-01"},{"lineNumber":144,"author":{"gitId":"-"},"content":"     -fx-background-color: derive(#1d1d1d, 20%);","lastModifiedDate":"2016-08-15"},{"lineNumber":145,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":146,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":147,"author":{"gitId":"-"},"content":".pane-with-border {","lastModifiedDate":"2017-05-15"},{"lineNumber":148,"author":{"gitId":"-"},"content":"     -fx-background-color: derive(#1d1d1d, 20%);","lastModifiedDate":"2017-05-09"},{"lineNumber":149,"author":{"gitId":"-"},"content":"     -fx-border-color: derive(#1d1d1d, 10%);","lastModifiedDate":"2017-05-09"},{"lineNumber":150,"author":{"gitId":"-"},"content":"     -fx-border-top-width: 1px;","lastModifiedDate":"2017-05-09"},{"lineNumber":151,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-05-09"},{"lineNumber":152,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-09"},{"lineNumber":153,"author":{"gitId":"-"},"content":".status-bar {","lastModifiedDate":"2016-08-08"},{"lineNumber":154,"author":{"gitId":"-"},"content":"    -fx-background-color: derive(#1d1d1d, 30%);","lastModifiedDate":"2018-12-08"},{"lineNumber":155,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-09-14"},{"lineNumber":156,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-14"},{"lineNumber":157,"author":{"gitId":"-"},"content":".result-display {","lastModifiedDate":"2016-09-14"},{"lineNumber":158,"author":{"gitId":"-"},"content":"    -fx-background-color: transparent;","lastModifiedDate":"2017-03-02"},{"lineNumber":159,"author":{"gitId":"-"},"content":"    -fx-font-family: \"Segoe UI Light\";","lastModifiedDate":"2022-01-13"},{"lineNumber":160,"author":{"gitId":"-"},"content":"    -fx-font-size: 13pt;","lastModifiedDate":"2017-03-02"},{"lineNumber":161,"author":{"gitId":"-"},"content":"    -fx-text-fill: white;","lastModifiedDate":"2017-03-02"},{"lineNumber":162,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-09-14"},{"lineNumber":163,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-14"},{"lineNumber":164,"author":{"gitId":"-"},"content":".result-display .label {","lastModifiedDate":"2016-09-14"},{"lineNumber":165,"author":{"gitId":"-"},"content":"    -fx-text-fill: black !important;","lastModifiedDate":"2016-09-14"},{"lineNumber":166,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":167,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":168,"author":{"gitId":"-"},"content":".status-bar .label {","lastModifiedDate":"2016-08-08"},{"lineNumber":169,"author":{"gitId":"-"},"content":"    -fx-font-family: \"Segoe UI Light\";","lastModifiedDate":"2022-01-13"},{"lineNumber":170,"author":{"gitId":"-"},"content":"    -fx-text-fill: white;","lastModifiedDate":"2016-08-08"},{"lineNumber":171,"author":{"gitId":"-"},"content":"    -fx-padding: 4px;","lastModifiedDate":"2018-12-08"},{"lineNumber":172,"author":{"gitId":"-"},"content":"    -fx-pref-height: 30px;","lastModifiedDate":"2018-12-08"},{"lineNumber":173,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":174,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":175,"author":{"gitId":"-"},"content":".status-bar-with-border {","lastModifiedDate":"2016-08-08"},{"lineNumber":176,"author":{"gitId":"-"},"content":"    -fx-background-color: derive(#1d1d1d, 30%);","lastModifiedDate":"2016-08-15"},{"lineNumber":177,"author":{"gitId":"-"},"content":"    -fx-border-color: derive(#1d1d1d, 25%);","lastModifiedDate":"2016-08-15"},{"lineNumber":178,"author":{"gitId":"-"},"content":"    -fx-border-width: 1px;","lastModifiedDate":"2016-08-08"},{"lineNumber":179,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":180,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":181,"author":{"gitId":"-"},"content":".status-bar-with-border .label {","lastModifiedDate":"2016-08-08"},{"lineNumber":182,"author":{"gitId":"-"},"content":"    -fx-text-fill: white;","lastModifiedDate":"2016-08-08"},{"lineNumber":183,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":184,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":185,"author":{"gitId":"-"},"content":".grid-pane {","lastModifiedDate":"2016-08-08"},{"lineNumber":186,"author":{"gitId":"-"},"content":"    -fx-background-color: derive(#1d1d1d, 30%);","lastModifiedDate":"2016-08-15"},{"lineNumber":187,"author":{"gitId":"-"},"content":"    -fx-border-color: derive(#1d1d1d, 30%);","lastModifiedDate":"2016-08-15"},{"lineNumber":188,"author":{"gitId":"-"},"content":"    -fx-border-width: 1px;","lastModifiedDate":"2016-08-08"},{"lineNumber":189,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":190,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":191,"author":{"gitId":"-"},"content":".grid-pane .stack-pane {","lastModifiedDate":"2018-04-01"},{"lineNumber":192,"author":{"gitId":"-"},"content":"    -fx-background-color: derive(#1d1d1d, 30%);","lastModifiedDate":"2016-08-15"},{"lineNumber":193,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":194,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":195,"author":{"gitId":"-"},"content":".context-menu {","lastModifiedDate":"2016-08-08"},{"lineNumber":196,"author":{"gitId":"-"},"content":"    -fx-background-color: derive(#1d1d1d, 50%);","lastModifiedDate":"2016-08-15"},{"lineNumber":197,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":198,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":199,"author":{"gitId":"-"},"content":".context-menu .label {","lastModifiedDate":"2016-08-08"},{"lineNumber":200,"author":{"gitId":"-"},"content":"    -fx-text-fill: white;","lastModifiedDate":"2016-08-08"},{"lineNumber":201,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":202,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":203,"author":{"gitId":"-"},"content":".menu-bar {","lastModifiedDate":"2016-08-08"},{"lineNumber":204,"author":{"gitId":"-"},"content":"    -fx-background-color: derive(#1d1d1d, 20%);","lastModifiedDate":"2016-08-15"},{"lineNumber":205,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":206,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":207,"author":{"gitId":"-"},"content":".menu-bar .label {","lastModifiedDate":"2016-08-08"},{"lineNumber":208,"author":{"gitId":"-"},"content":"    -fx-font-size: 14pt;","lastModifiedDate":"2016-08-08"},{"lineNumber":209,"author":{"gitId":"-"},"content":"    -fx-font-family: \"Segoe UI Light\";","lastModifiedDate":"2022-01-13"},{"lineNumber":210,"author":{"gitId":"-"},"content":"    -fx-text-fill: white;","lastModifiedDate":"2016-08-08"},{"lineNumber":211,"author":{"gitId":"-"},"content":"    -fx-opacity: 0.9;","lastModifiedDate":"2016-08-08"},{"lineNumber":212,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":213,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":214,"author":{"gitId":"-"},"content":".menu .left-container {","lastModifiedDate":"2016-08-08"},{"lineNumber":215,"author":{"gitId":"-"},"content":"    -fx-background-color: black;","lastModifiedDate":"2016-08-08"},{"lineNumber":216,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":217,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":218,"author":{"gitId":"-"},"content":"/*","lastModifiedDate":"2016-08-08"},{"lineNumber":219,"author":{"gitId":"-"},"content":" * Metro style Push Button","lastModifiedDate":"2016-08-08"},{"lineNumber":220,"author":{"gitId":"-"},"content":" * Author: Pedro Duque Vieira","lastModifiedDate":"2016-08-08"},{"lineNumber":221,"author":{"gitId":"-"},"content":" * http://pixelduke.wordpress.com/2012/10/23/jmetro-windows-8-controls-on-java/","lastModifiedDate":"2016-08-08"},{"lineNumber":222,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-08"},{"lineNumber":223,"author":{"gitId":"-"},"content":".button {","lastModifiedDate":"2016-08-08"},{"lineNumber":224,"author":{"gitId":"-"},"content":"    -fx-padding: 5 22 5 22;","lastModifiedDate":"2016-08-08"},{"lineNumber":225,"author":{"gitId":"-"},"content":"    -fx-border-color: #e2e2e2;","lastModifiedDate":"2016-08-08"},{"lineNumber":226,"author":{"gitId":"-"},"content":"    -fx-border-width: 2;","lastModifiedDate":"2016-08-08"},{"lineNumber":227,"author":{"gitId":"-"},"content":"    -fx-background-radius: 0;","lastModifiedDate":"2016-08-08"},{"lineNumber":228,"author":{"gitId":"-"},"content":"    -fx-background-color: #1d1d1d;","lastModifiedDate":"2016-08-15"},{"lineNumber":229,"author":{"gitId":"-"},"content":"    -fx-font-family: \"Segoe UI\", Helvetica, Arial, sans-serif;","lastModifiedDate":"2022-01-13"},{"lineNumber":230,"author":{"gitId":"-"},"content":"    -fx-font-size: 11pt;","lastModifiedDate":"2016-08-08"},{"lineNumber":231,"author":{"gitId":"-"},"content":"    -fx-text-fill: #d8d8d8;","lastModifiedDate":"2016-08-08"},{"lineNumber":232,"author":{"gitId":"-"},"content":"    -fx-background-insets: 0 0 0 0, 0, 1, 2;","lastModifiedDate":"2016-08-08"},{"lineNumber":233,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":234,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":235,"author":{"gitId":"-"},"content":".button:hover {","lastModifiedDate":"2016-08-08"},{"lineNumber":236,"author":{"gitId":"-"},"content":"    -fx-background-color: #3a3a3a;","lastModifiedDate":"2016-08-08"},{"lineNumber":237,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":238,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":239,"author":{"gitId":"-"},"content":".button:pressed, .button:default:hover:pressed {","lastModifiedDate":"2016-08-08"},{"lineNumber":240,"author":{"gitId":"-"},"content":"  -fx-background-color: white;","lastModifiedDate":"2016-08-08"},{"lineNumber":241,"author":{"gitId":"-"},"content":"  -fx-text-fill: #1d1d1d;","lastModifiedDate":"2016-08-15"},{"lineNumber":242,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":243,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":244,"author":{"gitId":"-"},"content":".button:focused {","lastModifiedDate":"2016-08-08"},{"lineNumber":245,"author":{"gitId":"-"},"content":"    -fx-border-color: white, white;","lastModifiedDate":"2016-08-08"},{"lineNumber":246,"author":{"gitId":"-"},"content":"    -fx-border-width: 1, 1;","lastModifiedDate":"2016-08-08"},{"lineNumber":247,"author":{"gitId":"-"},"content":"    -fx-border-style: solid, segments(1, 1);","lastModifiedDate":"2016-08-08"},{"lineNumber":248,"author":{"gitId":"-"},"content":"    -fx-border-radius: 0, 0;","lastModifiedDate":"2016-08-08"},{"lineNumber":249,"author":{"gitId":"-"},"content":"    -fx-border-insets: 1 1 1 1, 0;","lastModifiedDate":"2016-08-08"},{"lineNumber":250,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":251,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":252,"author":{"gitId":"-"},"content":".button:disabled, .button:default:disabled {","lastModifiedDate":"2016-08-08"},{"lineNumber":253,"author":{"gitId":"-"},"content":"    -fx-opacity: 0.4;","lastModifiedDate":"2016-08-08"},{"lineNumber":254,"author":{"gitId":"-"},"content":"    -fx-background-color: #1d1d1d;","lastModifiedDate":"2016-08-15"},{"lineNumber":255,"author":{"gitId":"-"},"content":"    -fx-text-fill: white;","lastModifiedDate":"2016-08-08"},{"lineNumber":256,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":257,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":258,"author":{"gitId":"-"},"content":".button:default {","lastModifiedDate":"2016-08-08"},{"lineNumber":259,"author":{"gitId":"-"},"content":"    -fx-background-color: -fx-focus-color;","lastModifiedDate":"2016-08-08"},{"lineNumber":260,"author":{"gitId":"-"},"content":"    -fx-text-fill: #ffffff;","lastModifiedDate":"2016-08-08"},{"lineNumber":261,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":262,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":263,"author":{"gitId":"-"},"content":".button:default:hover {","lastModifiedDate":"2016-08-08"},{"lineNumber":264,"author":{"gitId":"-"},"content":"    -fx-background-color: derive(-fx-focus-color, 30%);","lastModifiedDate":"2016-08-08"},{"lineNumber":265,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":266,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":267,"author":{"gitId":"-"},"content":".dialog-pane {","lastModifiedDate":"2016-08-08"},{"lineNumber":268,"author":{"gitId":"-"},"content":"    -fx-background-color: #1d1d1d;","lastModifiedDate":"2016-08-15"},{"lineNumber":269,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":270,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":271,"author":{"gitId":"-"},"content":".dialog-pane \u003e *.button-bar \u003e *.container {","lastModifiedDate":"2016-08-08"},{"lineNumber":272,"author":{"gitId":"-"},"content":"    -fx-background-color: #1d1d1d;","lastModifiedDate":"2016-08-15"},{"lineNumber":273,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":274,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":275,"author":{"gitId":"-"},"content":".dialog-pane \u003e *.label.content {","lastModifiedDate":"2016-08-08"},{"lineNumber":276,"author":{"gitId":"-"},"content":"    -fx-font-size: 14px;","lastModifiedDate":"2016-08-08"},{"lineNumber":277,"author":{"gitId":"-"},"content":"    -fx-font-weight: bold;","lastModifiedDate":"2016-08-08"},{"lineNumber":278,"author":{"gitId":"-"},"content":"    -fx-text-fill: white;","lastModifiedDate":"2016-08-08"},{"lineNumber":279,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":280,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":281,"author":{"gitId":"-"},"content":".dialog-pane:header *.header-panel {","lastModifiedDate":"2016-08-08"},{"lineNumber":282,"author":{"gitId":"-"},"content":"    -fx-background-color: derive(#1d1d1d, 25%);","lastModifiedDate":"2016-08-15"},{"lineNumber":283,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":284,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":285,"author":{"gitId":"-"},"content":".dialog-pane:header *.header-panel *.label {","lastModifiedDate":"2016-08-08"},{"lineNumber":286,"author":{"gitId":"-"},"content":"    -fx-font-size: 18px;","lastModifiedDate":"2016-08-08"},{"lineNumber":287,"author":{"gitId":"-"},"content":"    -fx-font-style: italic;","lastModifiedDate":"2016-08-08"},{"lineNumber":288,"author":{"gitId":"-"},"content":"    -fx-fill: white;","lastModifiedDate":"2016-08-08"},{"lineNumber":289,"author":{"gitId":"-"},"content":"    -fx-text-fill: white;","lastModifiedDate":"2016-08-08"},{"lineNumber":290,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":291,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":292,"author":{"gitId":"-"},"content":".scroll-bar {","lastModifiedDate":"2017-03-02"},{"lineNumber":293,"author":{"gitId":"-"},"content":"    -fx-background-color: derive(#1d1d1d, 20%);","lastModifiedDate":"2017-03-02"},{"lineNumber":294,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-03-02"},{"lineNumber":295,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-02"},{"lineNumber":296,"author":{"gitId":"-"},"content":".scroll-bar .thumb {","lastModifiedDate":"2016-08-15"},{"lineNumber":297,"author":{"gitId":"-"},"content":"    -fx-background-color: derive(#1d1d1d, 50%);","lastModifiedDate":"2016-08-15"},{"lineNumber":298,"author":{"gitId":"-"},"content":"    -fx-background-insets: 3;","lastModifiedDate":"2016-08-15"},{"lineNumber":299,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-15"},{"lineNumber":300,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-15"},{"lineNumber":301,"author":{"gitId":"-"},"content":".scroll-bar .increment-button, .scroll-bar .decrement-button {","lastModifiedDate":"2016-08-15"},{"lineNumber":302,"author":{"gitId":"-"},"content":"    -fx-background-color: transparent;","lastModifiedDate":"2016-08-15"},{"lineNumber":303,"author":{"gitId":"-"},"content":"    -fx-padding: 0 0 0 0;","lastModifiedDate":"2016-08-15"},{"lineNumber":304,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-15"},{"lineNumber":305,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-15"},{"lineNumber":306,"author":{"gitId":"-"},"content":".scroll-bar .increment-arrow, .scroll-bar .decrement-arrow {","lastModifiedDate":"2016-08-15"},{"lineNumber":307,"author":{"gitId":"-"},"content":"    -fx-shape: \" \";","lastModifiedDate":"2016-08-15"},{"lineNumber":308,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-18"},{"lineNumber":309,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":310,"author":{"gitId":"-"},"content":".scroll-bar:vertical .increment-arrow, .scroll-bar:vertical .decrement-arrow {","lastModifiedDate":"2016-08-18"},{"lineNumber":311,"author":{"gitId":"-"},"content":"    -fx-padding: 1 8 1 8;","lastModifiedDate":"2016-08-15"},{"lineNumber":312,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-15"},{"lineNumber":313,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-15"},{"lineNumber":314,"author":{"gitId":"-"},"content":".scroll-bar:horizontal .increment-arrow, .scroll-bar:horizontal .decrement-arrow {","lastModifiedDate":"2016-08-18"},{"lineNumber":315,"author":{"gitId":"-"},"content":"    -fx-padding: 8 1 8 1;","lastModifiedDate":"2016-08-18"},{"lineNumber":316,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-18"},{"lineNumber":317,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":318,"author":{"gitId":"-"},"content":"#cardPane {","lastModifiedDate":"2016-08-08"},{"lineNumber":319,"author":{"gitId":"-"},"content":"    -fx-background-color: transparent;","lastModifiedDate":"2016-08-08"},{"lineNumber":320,"author":{"gitId":"-"},"content":"    -fx-border-width: 0;","lastModifiedDate":"2017-03-02"},{"lineNumber":321,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":322,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":323,"author":{"gitId":"-"},"content":"#commandTypeLabel {","lastModifiedDate":"2016-08-08"},{"lineNumber":324,"author":{"gitId":"-"},"content":"    -fx-font-size: 11px;","lastModifiedDate":"2016-08-08"},{"lineNumber":325,"author":{"gitId":"-"},"content":"    -fx-text-fill: #F70D1A;","lastModifiedDate":"2016-08-08"},{"lineNumber":326,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":327,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":328,"author":{"gitId":"-"},"content":"#commandTextField {","lastModifiedDate":"2017-03-02"},{"lineNumber":329,"author":{"gitId":"-"},"content":"    -fx-background-color: transparent #383838 transparent #383838;","lastModifiedDate":"2017-03-02"},{"lineNumber":330,"author":{"gitId":"-"},"content":"    -fx-background-insets: 0;","lastModifiedDate":"2017-03-02"},{"lineNumber":331,"author":{"gitId":"-"},"content":"    -fx-border-color: #383838 #383838 #ffffff #383838;","lastModifiedDate":"2017-03-02"},{"lineNumber":332,"author":{"gitId":"-"},"content":"    -fx-border-insets: 0;","lastModifiedDate":"2017-03-02"},{"lineNumber":333,"author":{"gitId":"-"},"content":"    -fx-border-width: 1;","lastModifiedDate":"2017-03-02"},{"lineNumber":334,"author":{"gitId":"-"},"content":"    -fx-font-family: \"Segoe UI Light\";","lastModifiedDate":"2022-01-13"},{"lineNumber":335,"author":{"gitId":"-"},"content":"    -fx-font-size: 13pt;","lastModifiedDate":"2017-03-02"},{"lineNumber":336,"author":{"gitId":"-"},"content":"    -fx-text-fill: white;","lastModifiedDate":"2017-03-02"},{"lineNumber":337,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-03-02"},{"lineNumber":338,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-02"},{"lineNumber":339,"author":{"gitId":"zxgoh"},"content":"#filterField, #customerListPanel, #customerWebpage {","lastModifiedDate":"2022-03-14"},{"lineNumber":340,"author":{"gitId":"-"},"content":"    -fx-effect: innershadow(gaussian, black, 10, 0, 0, 0);","lastModifiedDate":"2016-08-15"},{"lineNumber":341,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":342,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-18"},{"lineNumber":343,"author":{"gitId":"-"},"content":"#resultDisplay .content {","lastModifiedDate":"2017-03-02"},{"lineNumber":344,"author":{"gitId":"-"},"content":"    -fx-background-color: transparent, #383838, transparent, #383838;","lastModifiedDate":"2017-03-02"},{"lineNumber":345,"author":{"gitId":"-"},"content":"    -fx-background-radius: 0;","lastModifiedDate":"2017-03-02"},{"lineNumber":346,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-03-02"},{"lineNumber":347,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-02"},{"lineNumber":348,"author":{"gitId":"-"},"content":"#tags {","lastModifiedDate":"2016-12-18"},{"lineNumber":349,"author":{"gitId":"-"},"content":"    -fx-hgap: 7;","lastModifiedDate":"2016-12-18"},{"lineNumber":350,"author":{"gitId":"-"},"content":"    -fx-vgap: 3;","lastModifiedDate":"2016-12-18"},{"lineNumber":351,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-12-18"},{"lineNumber":352,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-18"},{"lineNumber":353,"author":{"gitId":"-"},"content":"#tags .label {","lastModifiedDate":"2016-12-18"},{"lineNumber":354,"author":{"gitId":"-"},"content":"    -fx-text-fill: white;","lastModifiedDate":"2016-12-18"},{"lineNumber":355,"author":{"gitId":"-"},"content":"    -fx-background-color: #3e7b91;","lastModifiedDate":"2017-03-02"},{"lineNumber":356,"author":{"gitId":"-"},"content":"    -fx-padding: 1 3 1 3;","lastModifiedDate":"2016-12-18"},{"lineNumber":357,"author":{"gitId":"-"},"content":"    -fx-border-radius: 2;","lastModifiedDate":"2016-12-18"},{"lineNumber":358,"author":{"gitId":"-"},"content":"    -fx-background-radius: 2;","lastModifiedDate":"2016-12-18"},{"lineNumber":359,"author":{"gitId":"-"},"content":"    -fx-font-size: 11;","lastModifiedDate":"2016-12-18"},{"lineNumber":360,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-12-18"}],"authorContributionMap":{"jaegarpoon":8,"-":351,"zxgoh":1}},{"path":"src/main/resources/view/DishListCard.fxml","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"jaegarpoon"},"content":"\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e","lastModifiedDate":"2022-03-11"},{"lineNumber":2,"author":{"gitId":"jaegarpoon"},"content":"","lastModifiedDate":"2022-03-11"},{"lineNumber":3,"author":{"gitId":"jaegarpoon"},"content":"\u003c?import javafx.geometry.Insets?\u003e","lastModifiedDate":"2022-03-11"},{"lineNumber":4,"author":{"gitId":"jaegarpoon"},"content":"\u003c?import javafx.scene.control.Label?\u003e","lastModifiedDate":"2022-03-11"},{"lineNumber":5,"author":{"gitId":"jaegarpoon"},"content":"\u003c?import javafx.scene.layout.ColumnConstraints?\u003e","lastModifiedDate":"2022-03-11"},{"lineNumber":6,"author":{"gitId":"jaegarpoon"},"content":"\u003c?import javafx.scene.layout.GridPane?\u003e","lastModifiedDate":"2022-03-11"},{"lineNumber":7,"author":{"gitId":"jaegarpoon"},"content":"\u003c?import javafx.scene.layout.HBox?\u003e","lastModifiedDate":"2022-03-11"},{"lineNumber":8,"author":{"gitId":"jaegarpoon"},"content":"\u003c?import javafx.scene.layout.Region?\u003e","lastModifiedDate":"2022-03-11"},{"lineNumber":9,"author":{"gitId":"jaegarpoon"},"content":"\u003c?import javafx.scene.layout.VBox?\u003e","lastModifiedDate":"2022-03-11"},{"lineNumber":10,"author":{"gitId":"jaegarpoon"},"content":"","lastModifiedDate":"2022-03-11"},{"lineNumber":11,"author":{"gitId":"jaegarpoon"},"content":"\u003cHBox id\u003d\"dishCardPane\" fx:id\u003d\"cardPane\" xmlns\u003d\"http://javafx.com/javafx/8\" xmlns:fx\u003d\"http://javafx.com/fxml/1\"\u003e","lastModifiedDate":"2022-03-11"},{"lineNumber":12,"author":{"gitId":"jaegarpoon"},"content":"    \u003cGridPane HBox.hgrow\u003d\"ALWAYS\"\u003e","lastModifiedDate":"2022-03-11"},{"lineNumber":13,"author":{"gitId":"jaegarpoon"},"content":"        \u003ccolumnConstraints\u003e","lastModifiedDate":"2022-03-11"},{"lineNumber":14,"author":{"gitId":"jaegarpoon"},"content":"            \u003cColumnConstraints hgrow\u003d\"SOMETIMES\" minWidth\u003d\"10\" prefWidth\u003d\"150\" /\u003e","lastModifiedDate":"2022-03-11"},{"lineNumber":15,"author":{"gitId":"jaegarpoon"},"content":"        \u003c/columnConstraints\u003e","lastModifiedDate":"2022-03-11"},{"lineNumber":16,"author":{"gitId":"jaegarpoon"},"content":"        \u003cHBox alignment\u003d\"CENTER_LEFT\" minHeight\u003d\"90\" GridPane.columnIndex\u003d\"0\"\u003e","lastModifiedDate":"2022-03-28"},{"lineNumber":17,"author":{"gitId":"jaegarpoon"},"content":"            \u003cpadding\u003e","lastModifiedDate":"2022-03-11"},{"lineNumber":18,"author":{"gitId":"jaegarpoon"},"content":"                \u003cInsets top\u003d\"5\" right\u003d\"5\" bottom\u003d\"5\" left\u003d\"15\" /\u003e","lastModifiedDate":"2022-03-11"},{"lineNumber":19,"author":{"gitId":"jaegarpoon"},"content":"            \u003c/padding\u003e","lastModifiedDate":"2022-03-11"},{"lineNumber":20,"author":{"gitId":"jaegarpoon"},"content":"            \u003cHBox spacing\u003d\"5\" maxWidth\u003d\"50\" prefWidth\u003d\"50\" alignment\u003d\"CENTER_LEFT\"\u003e","lastModifiedDate":"2022-03-28"},{"lineNumber":21,"author":{"gitId":"jaegarpoon"},"content":"                \u003cLabel fx:id\u003d\"dishId\" styleClass\u003d\"cell_big_label\"\u003e","lastModifiedDate":"2022-03-11"},{"lineNumber":22,"author":{"gitId":"jaegarpoon"},"content":"                    \u003cminWidth\u003e","lastModifiedDate":"2022-03-11"},{"lineNumber":23,"author":{"gitId":"jaegarpoon"},"content":"                        \u003c!-- Ensures that the label text is never truncated --\u003e","lastModifiedDate":"2022-03-11"},{"lineNumber":24,"author":{"gitId":"jaegarpoon"},"content":"                        \u003cRegion fx:constant\u003d\"USE_PREF_SIZE\" /\u003e","lastModifiedDate":"2022-03-11"},{"lineNumber":25,"author":{"gitId":"jaegarpoon"},"content":"                    \u003c/minWidth\u003e","lastModifiedDate":"2022-03-11"},{"lineNumber":26,"author":{"gitId":"jaegarpoon"},"content":"                \u003c/Label\u003e","lastModifiedDate":"2022-03-11"},{"lineNumber":27,"author":{"gitId":"jaegarpoon"},"content":"            \u003c/HBox\u003e","lastModifiedDate":"2022-03-11"},{"lineNumber":28,"author":{"gitId":"jaegarpoon"},"content":"            \u003cVBox spacing\u003d\"2\" maxWidth\u003d\"130\" minWidth\u003d\"130\" prefWidth\u003d\"130\" alignment\u003d\"TOP_LEFT\"\u003e","lastModifiedDate":"2022-03-28"},{"lineNumber":29,"author":{"gitId":"jaegarpoon"},"content":"                \u003cpadding\u003e","lastModifiedDate":"2022-03-28"},{"lineNumber":30,"author":{"gitId":"jaegarpoon"},"content":"                    \u003cInsets top\u003d\"10\" bottom\u003d\"10\" /\u003e","lastModifiedDate":"2022-03-28"},{"lineNumber":31,"author":{"gitId":"jaegarpoon"},"content":"                \u003c/padding\u003e","lastModifiedDate":"2022-03-28"},{"lineNumber":32,"author":{"gitId":"jaegarpoon"},"content":"                \u003cLabel fx:id\u003d\"dishNameHeader\" text\u003d\"Dish\" styleClass\u003d\"cell_header\" /\u003e","lastModifiedDate":"2022-03-28"},{"lineNumber":33,"author":{"gitId":"jaegarpoon"},"content":"                \u003cLabel fx:id\u003d\"dishName\" text\u003d\"\\$first\" styleClass\u003d\"cell_small_label\" /\u003e","lastModifiedDate":"2022-03-28"},{"lineNumber":34,"author":{"gitId":"jaegarpoon"},"content":"            \u003c/VBox\u003e","lastModifiedDate":"2022-03-28"},{"lineNumber":35,"author":{"gitId":"jaegarpoon"},"content":"            \u003cVBox spacing\u003d\"2\" maxWidth\u003d\"130\" minWidth\u003d\"130\" prefWidth\u003d\"130\" alignment\u003d\"TOP_LEFT\"\u003e","lastModifiedDate":"2022-03-28"},{"lineNumber":36,"author":{"gitId":"jaegarpoon"},"content":"                \u003cpadding\u003e","lastModifiedDate":"2022-03-28"},{"lineNumber":37,"author":{"gitId":"jaegarpoon"},"content":"                    \u003cInsets top\u003d\"10\" left\u003d\"20\" bottom\u003d\"10\" right\u003d\"20\"/\u003e","lastModifiedDate":"2022-03-28"},{"lineNumber":38,"author":{"gitId":"jaegarpoon"},"content":"                \u003c/padding\u003e","lastModifiedDate":"2022-03-28"},{"lineNumber":39,"author":{"gitId":"jaegarpoon"},"content":"                \u003cLabel fx:id\u003d\"dishPriceHeader\" text\u003d\"Price\" styleClass\u003d\"cell_header\" /\u003e","lastModifiedDate":"2022-03-28"},{"lineNumber":40,"author":{"gitId":"jaegarpoon"},"content":"                \u003cLabel fx:id\u003d\"dishPrice\" text\u003d\"\\$price\" styleClass\u003d\"cell_small_label\" /\u003e","lastModifiedDate":"2022-03-28"},{"lineNumber":41,"author":{"gitId":"jaegarpoon"},"content":"            \u003c/VBox\u003e","lastModifiedDate":"2022-03-11"},{"lineNumber":42,"author":{"gitId":"jaegarpoon"},"content":"        \u003c/HBox\u003e","lastModifiedDate":"2022-03-28"},{"lineNumber":43,"author":{"gitId":"jaegarpoon"},"content":"    \u003c/GridPane\u003e","lastModifiedDate":"2022-03-11"},{"lineNumber":44,"author":{"gitId":"jaegarpoon"},"content":"\u003c/HBox\u003e","lastModifiedDate":"2022-03-11"}],"authorContributionMap":{"jaegarpoon":44}},{"path":"src/main/resources/view/DishListPanel.fxml","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e","lastModifiedDate":"2022-03-11"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-03-11"},{"lineNumber":3,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.control.ListView?\u003e","lastModifiedDate":"2022-03-11"},{"lineNumber":4,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.layout.VBox?\u003e","lastModifiedDate":"2022-03-11"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-03-11"},{"lineNumber":6,"author":{"gitId":"-"},"content":"\u003cVBox xmlns\u003d\"http://javafx.com/javafx/8\" xmlns:fx\u003d\"http://javafx.com/fxml/1\"\u003e","lastModifiedDate":"2022-03-11"},{"lineNumber":7,"author":{"gitId":"jaegarpoon"},"content":"    \u003cListView fx:id\u003d\"dishListView\" VBox.vgrow\u003d\"ALWAYS\" /\u003e","lastModifiedDate":"2022-03-11"},{"lineNumber":8,"author":{"gitId":"-"},"content":"\u003c/VBox\u003e","lastModifiedDate":"2022-03-11"}],"authorContributionMap":{"jaegarpoon":1,"-":7}},{"path":"src/main/resources/view/DriverListCard.fxml","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"hieunm1821"},"content":"\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e","lastModifiedDate":"2022-03-10"},{"lineNumber":2,"author":{"gitId":"hieunm1821"},"content":"","lastModifiedDate":"2022-03-10"},{"lineNumber":3,"author":{"gitId":"hieunm1821"},"content":"\u003c?import javafx.geometry.Insets?\u003e","lastModifiedDate":"2022-03-10"},{"lineNumber":4,"author":{"gitId":"hieunm1821"},"content":"\u003c?import javafx.scene.control.Label?\u003e","lastModifiedDate":"2022-03-10"},{"lineNumber":5,"author":{"gitId":"hieunm1821"},"content":"\u003c?import javafx.scene.layout.ColumnConstraints?\u003e","lastModifiedDate":"2022-03-10"},{"lineNumber":6,"author":{"gitId":"hieunm1821"},"content":"\u003c?import javafx.scene.layout.GridPane?\u003e","lastModifiedDate":"2022-03-10"},{"lineNumber":7,"author":{"gitId":"hieunm1821"},"content":"\u003c?import javafx.scene.layout.HBox?\u003e","lastModifiedDate":"2022-03-10"},{"lineNumber":8,"author":{"gitId":"hieunm1821"},"content":"\u003c?import javafx.scene.layout.Region?\u003e","lastModifiedDate":"2022-03-10"},{"lineNumber":9,"author":{"gitId":"hieunm1821"},"content":"\u003c?import javafx.scene.layout.VBox?\u003e","lastModifiedDate":"2022-03-10"},{"lineNumber":10,"author":{"gitId":"hieunm1821"},"content":"","lastModifiedDate":"2022-03-10"},{"lineNumber":11,"author":{"gitId":"hieunm1821"},"content":"\u003cHBox id\u003d\"cardPane\" fx:id\u003d\"cardPane\" xmlns\u003d\"http://javafx.com/javafx/8\" xmlns:fx\u003d\"http://javafx.com/fxml/1\"\u003e","lastModifiedDate":"2022-03-10"},{"lineNumber":12,"author":{"gitId":"hieunm1821"},"content":"    \u003cGridPane HBox.hgrow\u003d\"ALWAYS\"\u003e","lastModifiedDate":"2022-03-10"},{"lineNumber":13,"author":{"gitId":"hieunm1821"},"content":"        \u003ccolumnConstraints\u003e","lastModifiedDate":"2022-03-10"},{"lineNumber":14,"author":{"gitId":"hieunm1821"},"content":"            \u003cColumnConstraints hgrow\u003d\"SOMETIMES\" minWidth\u003d\"10\" prefWidth\u003d\"150\" /\u003e","lastModifiedDate":"2022-03-10"},{"lineNumber":15,"author":{"gitId":"hieunm1821"},"content":"        \u003c/columnConstraints\u003e","lastModifiedDate":"2022-03-10"},{"lineNumber":16,"author":{"gitId":"hieunm1821"},"content":"        \u003cVBox alignment\u003d\"CENTER_LEFT\" minHeight\u003d\"105\" GridPane.columnIndex\u003d\"0\"\u003e","lastModifiedDate":"2022-03-10"},{"lineNumber":17,"author":{"gitId":"hieunm1821"},"content":"            \u003cpadding\u003e","lastModifiedDate":"2022-03-10"},{"lineNumber":18,"author":{"gitId":"hieunm1821"},"content":"                \u003cInsets top\u003d\"5\" right\u003d\"5\" bottom\u003d\"5\" left\u003d\"15\" /\u003e","lastModifiedDate":"2022-03-10"},{"lineNumber":19,"author":{"gitId":"hieunm1821"},"content":"            \u003c/padding\u003e","lastModifiedDate":"2022-03-10"},{"lineNumber":20,"author":{"gitId":"hieunm1821"},"content":"            \u003cHBox spacing\u003d\"5\" alignment\u003d\"CENTER_LEFT\"\u003e","lastModifiedDate":"2022-03-10"},{"lineNumber":21,"author":{"gitId":"hieunm1821"},"content":"                \u003cLabel fx:id\u003d\"id\" styleClass\u003d\"cell_big_label\"\u003e","lastModifiedDate":"2022-03-10"},{"lineNumber":22,"author":{"gitId":"hieunm1821"},"content":"                    \u003cminWidth\u003e","lastModifiedDate":"2022-03-10"},{"lineNumber":23,"author":{"gitId":"hieunm1821"},"content":"                        \u003c!-- Ensures that the label text is never truncated --\u003e","lastModifiedDate":"2022-03-10"},{"lineNumber":24,"author":{"gitId":"hieunm1821"},"content":"                        \u003cRegion fx:constant\u003d\"USE_PREF_SIZE\" /\u003e","lastModifiedDate":"2022-03-10"},{"lineNumber":25,"author":{"gitId":"hieunm1821"},"content":"                    \u003c/minWidth\u003e","lastModifiedDate":"2022-03-10"},{"lineNumber":26,"author":{"gitId":"hieunm1821"},"content":"                \u003c/Label\u003e","lastModifiedDate":"2022-03-10"},{"lineNumber":27,"author":{"gitId":"hieunm1821"},"content":"                \u003cLabel fx:id\u003d\"name\" text\u003d\"\\$first\" styleClass\u003d\"cell_big_label\" /\u003e","lastModifiedDate":"2022-03-10"},{"lineNumber":28,"author":{"gitId":"hieunm1821"},"content":"            \u003c/HBox\u003e","lastModifiedDate":"2022-03-10"},{"lineNumber":29,"author":{"gitId":"hieunm1821"},"content":"            \u003cLabel fx:id\u003d\"phone\" styleClass\u003d\"cell_small_label\" text\u003d\"\\$phone\" /\u003e","lastModifiedDate":"2022-03-10"},{"lineNumber":30,"author":{"gitId":"hieunm1821"},"content":"            \u003cLabel fx:id\u003d\"status\" styleClass\u003d\"cell_small_label\" text\u003d\"\\$status\" /\u003e","lastModifiedDate":"2022-03-10"},{"lineNumber":31,"author":{"gitId":"hieunm1821"},"content":"        \u003c/VBox\u003e","lastModifiedDate":"2022-03-10"},{"lineNumber":32,"author":{"gitId":"hieunm1821"},"content":"    \u003c/GridPane\u003e","lastModifiedDate":"2022-03-10"},{"lineNumber":33,"author":{"gitId":"hieunm1821"},"content":"\u003c/HBox\u003e","lastModifiedDate":"2022-03-10"}],"authorContributionMap":{"hieunm1821":33}},{"path":"src/main/resources/view/DriverListPanel.fxml","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"hieunm1821"},"content":"\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e","lastModifiedDate":"2022-03-10"},{"lineNumber":2,"author":{"gitId":"hieunm1821"},"content":"","lastModifiedDate":"2022-03-10"},{"lineNumber":3,"author":{"gitId":"hieunm1821"},"content":"\u003c?import javafx.scene.control.ListView?\u003e","lastModifiedDate":"2022-03-10"},{"lineNumber":4,"author":{"gitId":"hieunm1821"},"content":"\u003c?import javafx.scene.layout.VBox?\u003e","lastModifiedDate":"2022-03-10"},{"lineNumber":5,"author":{"gitId":"hieunm1821"},"content":"","lastModifiedDate":"2022-03-10"},{"lineNumber":6,"author":{"gitId":"hieunm1821"},"content":"\u003cVBox xmlns\u003d\"http://javafx.com/javafx/8\" xmlns:fx\u003d\"http://javafx.com/fxml/1\"\u003e","lastModifiedDate":"2022-03-10"},{"lineNumber":7,"author":{"gitId":"hieunm1821"},"content":"    \u003cListView fx:id\u003d\"driverListView\" VBox.vgrow\u003d\"ALWAYS\" /\u003e","lastModifiedDate":"2022-03-14"},{"lineNumber":8,"author":{"gitId":"hieunm1821"},"content":"\u003c/VBox\u003e","lastModifiedDate":"2022-03-10"}],"authorContributionMap":{"hieunm1821":8}},{"path":"src/main/resources/view/MainWindow.fxml","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":3,"author":{"gitId":"-"},"content":"\u003c?import java.net.URL?\u003e","lastModifiedDate":"2016-08-26"},{"lineNumber":4,"author":{"gitId":"-"},"content":"\u003c?import javafx.geometry.Insets?\u003e","lastModifiedDate":"2017-03-25"},{"lineNumber":5,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.Scene?\u003e","lastModifiedDate":"2017-11-29"},{"lineNumber":6,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.control.Menu?\u003e","lastModifiedDate":"2017-03-25"},{"lineNumber":7,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.control.MenuBar?\u003e","lastModifiedDate":"2017-03-25"},{"lineNumber":8,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.control.MenuItem?\u003e","lastModifiedDate":"2017-03-25"},{"lineNumber":9,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.image.Image?\u003e","lastModifiedDate":"2017-11-29"},{"lineNumber":10,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.layout.StackPane?\u003e","lastModifiedDate":"2017-05-09"},{"lineNumber":11,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.layout.VBox?\u003e","lastModifiedDate":"2017-03-25"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-25"},{"lineNumber":13,"author":{"gitId":"-"},"content":"\u003cfx:root type\u003d\"javafx.stage.Stage\" xmlns\u003d\"http://javafx.com/javafx/8\" xmlns:fx\u003d\"http://javafx.com/fxml/1\"","lastModifiedDate":"2017-11-29"},{"lineNumber":14,"author":{"gitId":"xzzz3"},"content":"         title\u003d\"FoodOnWheels\" minWidth\u003d\"450\" minHeight\u003d\"600\" onCloseRequest\u003d\"#handleExit\"\u003e","lastModifiedDate":"2022-03-15"},{"lineNumber":15,"author":{"gitId":"-"},"content":"  \u003cicons\u003e","lastModifiedDate":"2017-11-29"},{"lineNumber":16,"author":{"gitId":"xzzz3"},"content":"    \u003cImage url\u003d\"@/images/foodonwheels_icon_32.png\" /\u003e","lastModifiedDate":"2022-03-15"},{"lineNumber":17,"author":{"gitId":"-"},"content":"  \u003c/icons\u003e","lastModifiedDate":"2017-11-29"},{"lineNumber":18,"author":{"gitId":"-"},"content":"  \u003cscene\u003e","lastModifiedDate":"2017-11-29"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    \u003cScene\u003e","lastModifiedDate":"2017-11-29"},{"lineNumber":20,"author":{"gitId":"-"},"content":"      \u003cstylesheets\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":21,"author":{"gitId":"-"},"content":"        \u003cURL value\u003d\"@DarkTheme.css\" /\u003e","lastModifiedDate":"2016-08-20"},{"lineNumber":22,"author":{"gitId":"-"},"content":"        \u003cURL value\u003d\"@Extensions.css\" /\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":23,"author":{"gitId":"-"},"content":"      \u003c/stylesheets\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-25"},{"lineNumber":25,"author":{"gitId":"-"},"content":"      \u003cVBox\u003e","lastModifiedDate":"2017-11-29"},{"lineNumber":26,"author":{"gitId":"-"},"content":"        \u003cMenuBar fx:id\u003d\"menuBar\" VBox.vgrow\u003d\"NEVER\"\u003e","lastModifiedDate":"2017-06-13"},{"lineNumber":27,"author":{"gitId":"-"},"content":"          \u003cMenu mnemonicParsing\u003d\"false\" text\u003d\"File\"\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":28,"author":{"gitId":"-"},"content":"            \u003cMenuItem mnemonicParsing\u003d\"false\" onAction\u003d\"#handleExit\" text\u003d\"Exit\" /\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":29,"author":{"gitId":"-"},"content":"          \u003c/Menu\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":30,"author":{"gitId":"-"},"content":"          \u003cMenu mnemonicParsing\u003d\"false\" text\u003d\"Help\"\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":31,"author":{"gitId":"-"},"content":"            \u003cMenuItem fx:id\u003d\"helpMenuItem\" mnemonicParsing\u003d\"false\" onAction\u003d\"#handleHelp\" text\u003d\"Help\" /\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":32,"author":{"gitId":"-"},"content":"          \u003c/Menu\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":33,"author":{"gitId":"-"},"content":"        \u003c/MenuBar\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-25"},{"lineNumber":35,"author":{"gitId":"-"},"content":"        \u003cStackPane VBox.vgrow\u003d\"NEVER\" fx:id\u003d\"commandBoxPlaceholder\" styleClass\u003d\"pane-with-border\"\u003e","lastModifiedDate":"2017-05-15"},{"lineNumber":36,"author":{"gitId":"-"},"content":"          \u003cpadding\u003e","lastModifiedDate":"2016-09-14"},{"lineNumber":37,"author":{"gitId":"-"},"content":"            \u003cInsets top\u003d\"5\" right\u003d\"10\" bottom\u003d\"5\" left\u003d\"10\" /\u003e","lastModifiedDate":"2017-03-27"},{"lineNumber":38,"author":{"gitId":"-"},"content":"          \u003c/padding\u003e","lastModifiedDate":"2016-09-14"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        \u003c/StackPane\u003e","lastModifiedDate":"2017-05-09"},{"lineNumber":40,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-25"},{"lineNumber":41,"author":{"gitId":"-"},"content":"        \u003cStackPane VBox.vgrow\u003d\"NEVER\" fx:id\u003d\"resultDisplayPlaceholder\" styleClass\u003d\"pane-with-border\"","lastModifiedDate":"2017-05-15"},{"lineNumber":42,"author":{"gitId":"-"},"content":"                   minHeight\u003d\"100\" prefHeight\u003d\"100\" maxHeight\u003d\"100\"\u003e","lastModifiedDate":"2017-03-25"},{"lineNumber":43,"author":{"gitId":"-"},"content":"          \u003cpadding\u003e","lastModifiedDate":"2016-09-14"},{"lineNumber":44,"author":{"gitId":"-"},"content":"            \u003cInsets top\u003d\"5\" right\u003d\"10\" bottom\u003d\"5\" left\u003d\"10\" /\u003e","lastModifiedDate":"2017-03-27"},{"lineNumber":45,"author":{"gitId":"-"},"content":"          \u003c/padding\u003e","lastModifiedDate":"2016-09-14"},{"lineNumber":46,"author":{"gitId":"-"},"content":"        \u003c/StackPane\u003e","lastModifiedDate":"2017-05-09"},{"lineNumber":47,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-25"},{"lineNumber":48,"author":{"gitId":"zxgoh"},"content":"        \u003cStackPane VBox.vgrow\u003d\"NEVER\" fx:id\u003d\"tabDisplayPlaceholder\" styleClass\u003d\"pane-with-border\"","lastModifiedDate":"2022-03-16"},{"lineNumber":49,"author":{"gitId":"zxgoh"},"content":"                   minHeight\u003d\"30\" prefHeight\u003d\"30\" maxHeight\u003d\"30\"\u003e","lastModifiedDate":"2022-03-16"},{"lineNumber":50,"author":{"gitId":"zxgoh"},"content":"          \u003cpadding\u003e","lastModifiedDate":"2022-03-16"},{"lineNumber":51,"author":{"gitId":"zxgoh"},"content":"            \u003cInsets top\u003d\"5\" right\u003d\"10\" bottom\u003d\"5\" left\u003d\"10\" /\u003e","lastModifiedDate":"2022-03-16"},{"lineNumber":52,"author":{"gitId":"zxgoh"},"content":"          \u003c/padding\u003e","lastModifiedDate":"2022-03-16"},{"lineNumber":53,"author":{"gitId":"zxgoh"},"content":"        \u003c/StackPane\u003e","lastModifiedDate":"2022-03-16"},{"lineNumber":54,"author":{"gitId":"zxgoh"},"content":"","lastModifiedDate":"2022-03-16"},{"lineNumber":55,"author":{"gitId":"zxgoh"},"content":"        \u003cVBox fx:id\u003d\"customerList\" styleClass\u003d\"pane-with-border\" minWidth\u003d\"340\" prefWidth\u003d\"340\" VBox.vgrow\u003d\"ALWAYS\"\u003e","lastModifiedDate":"2022-03-14"},{"lineNumber":56,"author":{"gitId":"-"},"content":"          \u003cpadding\u003e","lastModifiedDate":"2016-08-15"},{"lineNumber":57,"author":{"gitId":"-"},"content":"            \u003cInsets top\u003d\"10\" right\u003d\"10\" bottom\u003d\"10\" left\u003d\"10\" /\u003e","lastModifiedDate":"2017-03-27"},{"lineNumber":58,"author":{"gitId":"-"},"content":"          \u003c/padding\u003e","lastModifiedDate":"2016-08-15"},{"lineNumber":59,"author":{"gitId":"zxgoh"},"content":"          \u003cStackPane fx:id\u003d\"customerListPanelPlaceholder\" VBox.vgrow\u003d\"ALWAYS\"/\u003e","lastModifiedDate":"2022-03-14"},{"lineNumber":60,"author":{"gitId":"-"},"content":"        \u003c/VBox\u003e","lastModifiedDate":"2016-08-15"},{"lineNumber":61,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-25"},{"lineNumber":62,"author":{"gitId":"-"},"content":"        \u003cStackPane fx:id\u003d\"statusbarPlaceholder\" VBox.vgrow\u003d\"NEVER\" /\u003e","lastModifiedDate":"2017-05-09"},{"lineNumber":63,"author":{"gitId":"-"},"content":"      \u003c/VBox\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":64,"author":{"gitId":"-"},"content":"    \u003c/Scene\u003e","lastModifiedDate":"2017-11-29"},{"lineNumber":65,"author":{"gitId":"-"},"content":"  \u003c/scene\u003e","lastModifiedDate":"2017-11-29"},{"lineNumber":66,"author":{"gitId":"-"},"content":"\u003c/fx:root\u003e","lastModifiedDate":"2017-11-29"}],"authorContributionMap":{"xzzz3":2,"-":55,"zxgoh":9}},{"path":"src/main/resources/view/OrderListCard.fxml","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"xzzz3"},"content":"\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e","lastModifiedDate":"2022-03-14"},{"lineNumber":2,"author":{"gitId":"xzzz3"},"content":"","lastModifiedDate":"2022-03-14"},{"lineNumber":3,"author":{"gitId":"xzzz3"},"content":"\u003c?import javafx.geometry.Insets?\u003e","lastModifiedDate":"2022-03-14"},{"lineNumber":4,"author":{"gitId":"xzzz3"},"content":"\u003c?import javafx.scene.control.Label?\u003e","lastModifiedDate":"2022-03-14"},{"lineNumber":5,"author":{"gitId":"xzzz3"},"content":"\u003c?import javafx.scene.layout.ColumnConstraints?\u003e","lastModifiedDate":"2022-03-14"},{"lineNumber":6,"author":{"gitId":"xzzz3"},"content":"\u003c?import javafx.scene.layout.FlowPane?\u003e","lastModifiedDate":"2022-03-14"},{"lineNumber":7,"author":{"gitId":"xzzz3"},"content":"\u003c?import javafx.scene.layout.GridPane?\u003e","lastModifiedDate":"2022-03-14"},{"lineNumber":8,"author":{"gitId":"xzzz3"},"content":"\u003c?import javafx.scene.layout.HBox?\u003e","lastModifiedDate":"2022-03-14"},{"lineNumber":9,"author":{"gitId":"xzzz3"},"content":"\u003c?import javafx.scene.layout.Region?\u003e","lastModifiedDate":"2022-03-14"},{"lineNumber":10,"author":{"gitId":"xzzz3"},"content":"\u003c?import javafx.scene.layout.VBox?\u003e","lastModifiedDate":"2022-03-14"},{"lineNumber":11,"author":{"gitId":"xzzz3"},"content":"","lastModifiedDate":"2022-03-14"},{"lineNumber":12,"author":{"gitId":"xzzz3"},"content":"\u003cHBox id\u003d\"cardPane\" fx:id\u003d\"cardPane\" xmlns\u003d\"http://javafx.com/javafx/8\" xmlns:fx\u003d\"http://javafx.com/fxml/1\"\u003e","lastModifiedDate":"2022-03-14"},{"lineNumber":13,"author":{"gitId":"xzzz3"},"content":"    \u003cGridPane HBox.hgrow\u003d\"ALWAYS\"\u003e","lastModifiedDate":"2022-03-14"},{"lineNumber":14,"author":{"gitId":"xzzz3"},"content":"        \u003ccolumnConstraints\u003e","lastModifiedDate":"2022-03-14"},{"lineNumber":15,"author":{"gitId":"xzzz3"},"content":"            \u003cColumnConstraints hgrow\u003d\"SOMETIMES\" minWidth\u003d\"10\" prefWidth\u003d\"150\" /\u003e","lastModifiedDate":"2022-03-14"},{"lineNumber":16,"author":{"gitId":"xzzz3"},"content":"        \u003c/columnConstraints\u003e","lastModifiedDate":"2022-03-14"},{"lineNumber":17,"author":{"gitId":"xzzz3"},"content":"        \u003cVBox alignment\u003d\"CENTER_LEFT\" minHeight\u003d\"105\" GridPane.columnIndex\u003d\"0\"\u003e","lastModifiedDate":"2022-03-14"},{"lineNumber":18,"author":{"gitId":"xzzz3"},"content":"            \u003cpadding\u003e","lastModifiedDate":"2022-03-14"},{"lineNumber":19,"author":{"gitId":"xzzz3"},"content":"                \u003cInsets top\u003d\"5\" right\u003d\"5\" bottom\u003d\"5\" left\u003d\"15\" /\u003e","lastModifiedDate":"2022-03-14"},{"lineNumber":20,"author":{"gitId":"xzzz3"},"content":"            \u003c/padding\u003e","lastModifiedDate":"2022-03-14"},{"lineNumber":21,"author":{"gitId":"xzzz3"},"content":"            \u003cHBox spacing\u003d\"5\" alignment\u003d\"CENTER_LEFT\"\u003e","lastModifiedDate":"2022-03-14"},{"lineNumber":22,"author":{"gitId":"xzzz3"},"content":"                \u003cLabel fx:id\u003d\"id\" styleClass\u003d\"cell_big_label\"\u003e","lastModifiedDate":"2022-03-14"},{"lineNumber":23,"author":{"gitId":"xzzz3"},"content":"                    \u003cminWidth\u003e","lastModifiedDate":"2022-03-14"},{"lineNumber":24,"author":{"gitId":"xzzz3"},"content":"                        \u003c!-- Ensures that the label text is never truncated --\u003e","lastModifiedDate":"2022-03-14"},{"lineNumber":25,"author":{"gitId":"xzzz3"},"content":"                        \u003cRegion fx:constant\u003d\"USE_PREF_SIZE\" /\u003e","lastModifiedDate":"2022-03-14"},{"lineNumber":26,"author":{"gitId":"xzzz3"},"content":"                    \u003c/minWidth\u003e","lastModifiedDate":"2022-03-14"},{"lineNumber":27,"author":{"gitId":"xzzz3"},"content":"                \u003c/Label\u003e","lastModifiedDate":"2022-03-14"},{"lineNumber":28,"author":{"gitId":"xzzz3"},"content":"                \u003cLabel fx:id\u003d\"customerName\" text\u003d\"\\$first\" styleClass\u003d\"cell_big_label\" /\u003e","lastModifiedDate":"2022-03-14"},{"lineNumber":29,"author":{"gitId":"xzzz3"},"content":"            \u003c/HBox\u003e","lastModifiedDate":"2022-03-14"},{"lineNumber":30,"author":{"gitId":"xzzz3"},"content":"            \u003cFlowPane fx:id\u003d\"tags\" /\u003e","lastModifiedDate":"2022-03-14"},{"lineNumber":31,"author":{"gitId":"xzzz3"},"content":"            \u003cLabel fx:id\u003d\"customerPhone\" styleClass\u003d\"cell_small_label\" text\u003d\"\\$customerPhone\" /\u003e","lastModifiedDate":"2022-03-14"},{"lineNumber":32,"author":{"gitId":"xzzz3"},"content":"            \u003cLabel fx:id\u003d\"customerAddress\" styleClass\u003d\"cell_small_label\" text\u003d\"\\$customerAddress\" /\u003e","lastModifiedDate":"2022-03-17"},{"lineNumber":33,"author":{"gitId":"xzzz3"},"content":"            \u003cLabel fx:id\u003d\"driverName\" styleClass\u003d\"cell_small_label\" text\u003d\"\\$driverName\" /\u003e","lastModifiedDate":"2022-03-14"},{"lineNumber":34,"author":{"gitId":"xzzz3"},"content":"            \u003cLabel fx:id\u003d\"dishes\" styleClass\u003d\"cell_small_label\" text\u003d\"\\$dishes\" /\u003e","lastModifiedDate":"2022-03-14"},{"lineNumber":35,"author":{"gitId":"xzzz3"},"content":"            \u003cLabel fx:id\u003d\"status\" styleClass\u003d\"cell_small_label\" text\u003d\"\\$status\" /\u003e","lastModifiedDate":"2022-03-14"},{"lineNumber":36,"author":{"gitId":"xzzz3"},"content":"            \u003cLabel fx:id\u003d\"orderTime\" styleClass\u003d\"cell_small_label\" text\u003d\"\\$orderTime\" /\u003e","lastModifiedDate":"2022-03-23"},{"lineNumber":37,"author":{"gitId":"xzzz3"},"content":"            \u003cLabel fx:id\u003d\"orderNumber\" styleClass\u003d\"cell_small_label\" text\u003d\"\\$orderNumber\" /\u003e","lastModifiedDate":"2022-03-14"},{"lineNumber":38,"author":{"gitId":"xzzz3"},"content":"        \u003c/VBox\u003e","lastModifiedDate":"2022-03-14"},{"lineNumber":39,"author":{"gitId":"xzzz3"},"content":"    \u003c/GridPane\u003e","lastModifiedDate":"2022-03-14"},{"lineNumber":40,"author":{"gitId":"xzzz3"},"content":"\u003c/HBox\u003e","lastModifiedDate":"2022-03-14"}],"authorContributionMap":{"xzzz3":40}},{"path":"src/main/resources/view/OrderListPanel.fxml","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"xzzz3"},"content":"\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e","lastModifiedDate":"2022-03-14"},{"lineNumber":2,"author":{"gitId":"xzzz3"},"content":"","lastModifiedDate":"2022-03-14"},{"lineNumber":3,"author":{"gitId":"xzzz3"},"content":"\u003c?import javafx.scene.control.ListView?\u003e","lastModifiedDate":"2022-03-14"},{"lineNumber":4,"author":{"gitId":"xzzz3"},"content":"\u003c?import javafx.scene.layout.VBox?\u003e","lastModifiedDate":"2022-03-14"},{"lineNumber":5,"author":{"gitId":"xzzz3"},"content":"","lastModifiedDate":"2022-03-14"},{"lineNumber":6,"author":{"gitId":"xzzz3"},"content":"\u003cVBox xmlns\u003d\"http://javafx.com/javafx/8\" xmlns:fx\u003d\"http://javafx.com/fxml/1\"\u003e","lastModifiedDate":"2022-03-14"},{"lineNumber":7,"author":{"gitId":"xzzz3"},"content":"    \u003cListView fx:id\u003d\"orderListView\" VBox.vgrow\u003d\"ALWAYS\" /\u003e","lastModifiedDate":"2022-03-14"},{"lineNumber":8,"author":{"gitId":"xzzz3"},"content":"\u003c/VBox\u003e","lastModifiedDate":"2022-03-14"}],"authorContributionMap":{"xzzz3":8}},{"path":"src/main/resources/view/TabDisplay.fxml","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"zxgoh"},"content":"\u003c?import javafx.scene.layout.HBox?\u003e","lastModifiedDate":"2022-03-16"},{"lineNumber":2,"author":{"gitId":"zxgoh"},"content":"\u003c?import javafx.scene.layout.VBox?\u003e","lastModifiedDate":"2022-03-16"},{"lineNumber":3,"author":{"gitId":"zxgoh"},"content":"\u003c?import javafx.scene.control.Label?\u003e","lastModifiedDate":"2022-03-16"},{"lineNumber":4,"author":{"gitId":"zxgoh"},"content":"","lastModifiedDate":"2022-03-16"},{"lineNumber":5,"author":{"gitId":"zxgoh"},"content":"\u003cHBox id\u003d\"tabDisplay\" fx:id\u003d\"tabDisplay\" xmlns\u003d\"http://javafx.com/javafx/8\" xmlns:fx\u003d\"http://javafx.com/fxml/1\" spacing\u003d\"20\"\u003e","lastModifiedDate":"2022-03-16"},{"lineNumber":6,"author":{"gitId":"zxgoh"},"content":"        \u003cLabel fx:id\u003d\"customer\" text\u003d\"Customers\" /\u003e","lastModifiedDate":"2022-03-16"},{"lineNumber":7,"author":{"gitId":"zxgoh"},"content":"        \u003cLabel fx:id\u003d\"order\" text\u003d\"Orders\" /\u003e","lastModifiedDate":"2022-03-16"},{"lineNumber":8,"author":{"gitId":"zxgoh"},"content":"        \u003cLabel fx:id\u003d\"driver\" text\u003d\"Drivers\" /\u003e","lastModifiedDate":"2022-03-16"},{"lineNumber":9,"author":{"gitId":"zxgoh"},"content":"        \u003cLabel fx:id\u003d\"dish\" text\u003d\"Dishes\" /\u003e","lastModifiedDate":"2022-03-16"},{"lineNumber":10,"author":{"gitId":"zxgoh"},"content":"\u003c/HBox\u003e","lastModifiedDate":"2022-03-16"},{"lineNumber":11,"author":{"gitId":"zxgoh"},"content":"","lastModifiedDate":"2022-03-16"}],"authorContributionMap":{"zxgoh":11}},{"path":"src/test/java/seedu/address/AppParametersTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address;","lastModifiedDate":"2018-04-21"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-21"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-21"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.nio.file.Paths;","lastModifiedDate":"2018-04-21"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.util.Collections;","lastModifiedDate":"2018-04-21"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import java.util.HashMap;","lastModifiedDate":"2018-04-21"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import java.util.List;","lastModifiedDate":"2018-04-21"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import java.util.Map;","lastModifiedDate":"2018-04-21"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-21"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-21"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import javafx.application.Application;","lastModifiedDate":"2018-04-21"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-21"},{"lineNumber":15,"author":{"gitId":"-"},"content":"public class AppParametersTest {","lastModifiedDate":"2018-04-21"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-21"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    private final ParametersStub parametersStub \u003d new ParametersStub();","lastModifiedDate":"2018-04-21"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    private final AppParameters expected \u003d new AppParameters();","lastModifiedDate":"2018-04-21"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-21"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-04-21"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    public void parse_validConfigPath_success() {","lastModifiedDate":"2018-04-21"},{"lineNumber":22,"author":{"gitId":"-"},"content":"        parametersStub.namedParameters.put(\"config\", \"config.json\");","lastModifiedDate":"2018-04-21"},{"lineNumber":23,"author":{"gitId":"-"},"content":"        expected.setConfigPath(Paths.get(\"config.json\"));","lastModifiedDate":"2018-04-21"},{"lineNumber":24,"author":{"gitId":"-"},"content":"        assertEquals(expected, AppParameters.parse(parametersStub));","lastModifiedDate":"2018-04-21"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-04-21"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-21"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-04-21"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    public void parse_nullConfigPath_success() {","lastModifiedDate":"2018-04-21"},{"lineNumber":29,"author":{"gitId":"-"},"content":"        parametersStub.namedParameters.put(\"config\", null);","lastModifiedDate":"2018-04-21"},{"lineNumber":30,"author":{"gitId":"-"},"content":"        assertEquals(expected, AppParameters.parse(parametersStub));","lastModifiedDate":"2018-04-21"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-04-21"},{"lineNumber":32,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-21"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-04-21"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    public void parse_invalidConfigPath_success() {","lastModifiedDate":"2018-04-21"},{"lineNumber":35,"author":{"gitId":"-"},"content":"        parametersStub.namedParameters.put(\"config\", \"a\\0\");","lastModifiedDate":"2018-04-21"},{"lineNumber":36,"author":{"gitId":"-"},"content":"        expected.setConfigPath(null);","lastModifiedDate":"2018-04-21"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        assertEquals(expected, AppParameters.parse(parametersStub));","lastModifiedDate":"2018-04-21"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-04-21"},{"lineNumber":39,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-21"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    private static class ParametersStub extends Application.Parameters {","lastModifiedDate":"2018-04-21"},{"lineNumber":41,"author":{"gitId":"zxgoh"},"content":"        private final Map\u003cString, String\u003e namedParameters \u003d new HashMap\u003c\u003e();","lastModifiedDate":"2022-03-16"},{"lineNumber":42,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-21"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2018-04-21"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        public List\u003cString\u003e getRaw() {","lastModifiedDate":"2018-04-21"},{"lineNumber":45,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"should not be called\");","lastModifiedDate":"2018-04-21"},{"lineNumber":46,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-04-21"},{"lineNumber":47,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-21"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2018-04-21"},{"lineNumber":49,"author":{"gitId":"-"},"content":"        public List\u003cString\u003e getUnnamed() {","lastModifiedDate":"2018-04-21"},{"lineNumber":50,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"should not be called\");","lastModifiedDate":"2018-04-21"},{"lineNumber":51,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-04-21"},{"lineNumber":52,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-21"},{"lineNumber":53,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2018-04-21"},{"lineNumber":54,"author":{"gitId":"-"},"content":"        public Map\u003cString, String\u003e getNamed() {","lastModifiedDate":"2018-04-21"},{"lineNumber":55,"author":{"gitId":"-"},"content":"            return Collections.unmodifiableMap(namedParameters);","lastModifiedDate":"2018-04-21"},{"lineNumber":56,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-04-21"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-04-21"},{"lineNumber":58,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2018-04-21"}],"authorContributionMap":{"-":57,"zxgoh":1}},{"path":"src/test/java/seedu/address/commons/core/index/IndexTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.commons.core.index;","lastModifiedDate":"2017-05-24"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-24"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2019-03-15"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.Assert.assertThrows;","lastModifiedDate":"2019-03-23"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-24"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-24"},{"lineNumber":10,"author":{"gitId":"-"},"content":"public class IndexTest {","lastModifiedDate":"2017-05-24"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-24"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-24"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    public void createOneBasedIndex() {","lastModifiedDate":"2017-05-24"},{"lineNumber":14,"author":{"gitId":"-"},"content":"        // invalid index","lastModifiedDate":"2017-05-24"},{"lineNumber":15,"author":{"gitId":"-"},"content":"        assertThrows(IndexOutOfBoundsException.class, () -\u003e Index.fromOneBased(0));","lastModifiedDate":"2019-03-23"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-24"},{"lineNumber":17,"author":{"gitId":"-"},"content":"        // check equality using the same base","lastModifiedDate":"2017-05-24"},{"lineNumber":18,"author":{"gitId":"-"},"content":"        assertEquals(1, Index.fromOneBased(1).getOneBased());","lastModifiedDate":"2017-05-24"},{"lineNumber":19,"author":{"gitId":"-"},"content":"        assertEquals(5, Index.fromOneBased(5).getOneBased());","lastModifiedDate":"2017-05-24"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-24"},{"lineNumber":21,"author":{"gitId":"-"},"content":"        // convert from one-based index to zero-based index","lastModifiedDate":"2017-05-24"},{"lineNumber":22,"author":{"gitId":"-"},"content":"        assertEquals(0, Index.fromOneBased(1).getZeroBased());","lastModifiedDate":"2017-05-24"},{"lineNumber":23,"author":{"gitId":"-"},"content":"        assertEquals(4, Index.fromOneBased(5).getZeroBased());","lastModifiedDate":"2017-05-24"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-24"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-24"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-24"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    public void createZeroBasedIndex() {","lastModifiedDate":"2017-05-24"},{"lineNumber":28,"author":{"gitId":"-"},"content":"        // invalid index","lastModifiedDate":"2017-05-24"},{"lineNumber":29,"author":{"gitId":"-"},"content":"        assertThrows(IndexOutOfBoundsException.class, () -\u003e Index.fromZeroBased(-1));","lastModifiedDate":"2019-03-23"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-24"},{"lineNumber":31,"author":{"gitId":"-"},"content":"        // check equality using the same base","lastModifiedDate":"2017-05-24"},{"lineNumber":32,"author":{"gitId":"-"},"content":"        assertEquals(0, Index.fromZeroBased(0).getZeroBased());","lastModifiedDate":"2017-05-24"},{"lineNumber":33,"author":{"gitId":"-"},"content":"        assertEquals(5, Index.fromZeroBased(5).getZeroBased());","lastModifiedDate":"2017-05-24"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-24"},{"lineNumber":35,"author":{"gitId":"-"},"content":"        // convert from zero-based index to one-based index","lastModifiedDate":"2017-05-24"},{"lineNumber":36,"author":{"gitId":"-"},"content":"        assertEquals(1, Index.fromZeroBased(0).getOneBased());","lastModifiedDate":"2017-05-24"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        assertEquals(6, Index.fromZeroBased(5).getOneBased());","lastModifiedDate":"2017-05-24"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-24"},{"lineNumber":39,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-24"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-24"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    public void equals() {","lastModifiedDate":"2017-05-24"},{"lineNumber":42,"author":{"gitId":"zxgoh"},"content":"        final Index fifthCustomerIndex \u003d Index.fromOneBased(5);","lastModifiedDate":"2022-03-14"},{"lineNumber":43,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-24"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        // same values -\u003e returns true","lastModifiedDate":"2017-05-24"},{"lineNumber":45,"author":{"gitId":"zxgoh"},"content":"        assertTrue(fifthCustomerIndex.equals(Index.fromOneBased(5)));","lastModifiedDate":"2022-03-14"},{"lineNumber":46,"author":{"gitId":"zxgoh"},"content":"        assertTrue(fifthCustomerIndex.equals(Index.fromZeroBased(4)));","lastModifiedDate":"2022-03-14"},{"lineNumber":47,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-24"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2017-05-24"},{"lineNumber":49,"author":{"gitId":"zxgoh"},"content":"        assertTrue(fifthCustomerIndex.equals(fifthCustomerIndex));","lastModifiedDate":"2022-03-14"},{"lineNumber":50,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-24"},{"lineNumber":51,"author":{"gitId":"-"},"content":"        // null -\u003e returns false","lastModifiedDate":"2017-05-24"},{"lineNumber":52,"author":{"gitId":"zxgoh"},"content":"        assertFalse(fifthCustomerIndex.equals(null));","lastModifiedDate":"2022-03-14"},{"lineNumber":53,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-24"},{"lineNumber":54,"author":{"gitId":"-"},"content":"        // different types -\u003e returns false","lastModifiedDate":"2017-05-24"},{"lineNumber":55,"author":{"gitId":"zxgoh"},"content":"        assertFalse(fifthCustomerIndex.equals(5.0f));","lastModifiedDate":"2022-03-14"},{"lineNumber":56,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-24"},{"lineNumber":57,"author":{"gitId":"-"},"content":"        // different index -\u003e returns false","lastModifiedDate":"2017-05-24"},{"lineNumber":58,"author":{"gitId":"zxgoh"},"content":"        assertFalse(fifthCustomerIndex.equals(Index.fromOneBased(1)));","lastModifiedDate":"2022-03-14"},{"lineNumber":59,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-24"},{"lineNumber":60,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-05-24"}],"authorContributionMap":{"-":53,"zxgoh":7}},{"path":"src/test/java/seedu/address/logic/LogicManagerTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic;","lastModifiedDate":"2016-09-21"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"zxgoh"},"content":"import static seedu.address.commons.core.Messages.MESSAGE_INVALID_CUSTOMER_DISPLAYED_INDEX;","lastModifiedDate":"2022-03-14"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static seedu.address.commons.core.Messages.MESSAGE_UNKNOWN_COMMAND;","lastModifiedDate":"2017-01-19"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.ADDRESS_DESC_AMY;","lastModifiedDate":"2018-12-09"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.NAME_DESC_AMY;","lastModifiedDate":"2018-12-09"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.PHONE_DESC_AMY;","lastModifiedDate":"2018-12-09"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.Assert.assertThrows;","lastModifiedDate":"2019-03-14"},{"lineNumber":10,"author":{"gitId":"zxgoh"},"content":"import static seedu.address.testutil.TypicalCustomers.AMY;","lastModifiedDate":"2022-03-14"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import java.io.IOException;","lastModifiedDate":"2018-12-09"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-12-09"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.BeforeEach;","lastModifiedDate":"2019-04-25"},{"lineNumber":16,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-25"},{"lineNumber":17,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.io.TempDir;","lastModifiedDate":"2019-04-25"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":19,"author":{"gitId":"zxgoh"},"content":"import seedu.address.logic.commands.AddCustomerCommand;","lastModifiedDate":"2022-03-14"},{"lineNumber":20,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.CommandResult;","lastModifiedDate":"2017-01-18"},{"lineNumber":21,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.ListCommand;","lastModifiedDate":"2017-06-19"},{"lineNumber":22,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.exceptions.CommandException;","lastModifiedDate":"2017-02-05"},{"lineNumber":23,"author":{"gitId":"-"},"content":"import seedu.address.logic.parser.exceptions.ParseException;","lastModifiedDate":"2017-03-11"},{"lineNumber":24,"author":{"gitId":"-"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2016-09-25"},{"lineNumber":25,"author":{"gitId":"-"},"content":"import seedu.address.model.ModelManager;","lastModifiedDate":"2016-09-21"},{"lineNumber":26,"author":{"gitId":"-"},"content":"import seedu.address.model.ReadOnlyAddressBook;","lastModifiedDate":"2018-12-09"},{"lineNumber":27,"author":{"gitId":"-"},"content":"import seedu.address.model.UserPrefs;","lastModifiedDate":"2017-05-31"},{"lineNumber":28,"author":{"gitId":"zxgoh"},"content":"import seedu.address.model.customer.Customer;","lastModifiedDate":"2022-03-14"},{"lineNumber":29,"author":{"gitId":"-"},"content":"import seedu.address.storage.JsonAddressBookStorage;","lastModifiedDate":"2018-12-09"},{"lineNumber":30,"author":{"gitId":"-"},"content":"import seedu.address.storage.JsonUserPrefsStorage;","lastModifiedDate":"2018-12-09"},{"lineNumber":31,"author":{"gitId":"-"},"content":"import seedu.address.storage.StorageManager;","lastModifiedDate":"2018-12-09"},{"lineNumber":32,"author":{"gitId":"zxgoh"},"content":"import seedu.address.testutil.CustomerBuilder;","lastModifiedDate":"2022-03-14"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":34,"author":{"gitId":"-"},"content":"public class LogicManagerTest {","lastModifiedDate":"2016-09-22"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    private static final IOException DUMMY_IO_EXCEPTION \u003d new IOException(\"dummy exception\");","lastModifiedDate":"2018-12-09"},{"lineNumber":36,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    @TempDir","lastModifiedDate":"2019-04-25"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    public Path temporaryFolder;","lastModifiedDate":"2019-04-25"},{"lineNumber":39,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":40,"author":{"gitId":"zxgoh"},"content":"    private final Model model \u003d new ModelManager();","lastModifiedDate":"2022-03-16"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    private Logic logic;","lastModifiedDate":"2018-12-09"},{"lineNumber":42,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    @BeforeEach","lastModifiedDate":"2019-04-25"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    public void setUp() {","lastModifiedDate":"2019-04-25"},{"lineNumber":45,"author":{"gitId":"-"},"content":"        JsonAddressBookStorage addressBookStorage \u003d","lastModifiedDate":"2019-04-25"},{"lineNumber":46,"author":{"gitId":"-"},"content":"                new JsonAddressBookStorage(temporaryFolder.resolve(\"addressBook.json\"));","lastModifiedDate":"2019-04-25"},{"lineNumber":47,"author":{"gitId":"-"},"content":"        JsonUserPrefsStorage userPrefsStorage \u003d new JsonUserPrefsStorage(temporaryFolder.resolve(\"userPrefs.json\"));","lastModifiedDate":"2019-04-25"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        StorageManager storage \u003d new StorageManager(addressBookStorage, userPrefsStorage);","lastModifiedDate":"2018-12-09"},{"lineNumber":49,"author":{"gitId":"-"},"content":"        logic \u003d new LogicManager(model, storage);","lastModifiedDate":"2018-12-09"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-12-09"},{"lineNumber":51,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-20"},{"lineNumber":53,"author":{"gitId":"-"},"content":"    public void execute_invalidCommandFormat_throwsParseException() {","lastModifiedDate":"2017-08-15"},{"lineNumber":54,"author":{"gitId":"-"},"content":"        String invalidCommand \u003d \"uicfhmowqewca\";","lastModifiedDate":"2017-06-20"},{"lineNumber":55,"author":{"gitId":"-"},"content":"        assertParseException(invalidCommand, MESSAGE_UNKNOWN_COMMAND);","lastModifiedDate":"2017-06-20"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-20"},{"lineNumber":57,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-20"},{"lineNumber":58,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-14"},{"lineNumber":59,"author":{"gitId":"-"},"content":"    public void execute_commandExecutionError_throwsCommandException() {","lastModifiedDate":"2017-08-15"},{"lineNumber":60,"author":{"gitId":"zxgoh"},"content":"        String deleteCommand \u003d \"deletecustomer 9\";","lastModifiedDate":"2022-03-14"},{"lineNumber":61,"author":{"gitId":"zxgoh"},"content":"        assertCommandException(deleteCommand, MESSAGE_INVALID_CUSTOMER_DISPLAYED_INDEX);","lastModifiedDate":"2022-03-14"},{"lineNumber":62,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-14"},{"lineNumber":63,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-14"},{"lineNumber":64,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-19"},{"lineNumber":65,"author":{"gitId":"-"},"content":"    public void execute_validCommand_success() throws Exception {","lastModifiedDate":"2019-03-14"},{"lineNumber":66,"author":{"gitId":"-"},"content":"        String listCommand \u003d ListCommand.COMMAND_WORD;","lastModifiedDate":"2017-06-19"},{"lineNumber":67,"author":{"gitId":"-"},"content":"        assertCommandSuccess(listCommand, ListCommand.MESSAGE_SUCCESS, model);","lastModifiedDate":"2017-06-19"},{"lineNumber":68,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-20"},{"lineNumber":69,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-20"},{"lineNumber":70,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-12-09"},{"lineNumber":71,"author":{"gitId":"-"},"content":"    public void execute_storageThrowsIoException_throwsCommandException() {","lastModifiedDate":"2019-04-25"},{"lineNumber":72,"author":{"gitId":"-"},"content":"        // Setup LogicManager with JsonAddressBookIoExceptionThrowingStub","lastModifiedDate":"2018-12-09"},{"lineNumber":73,"author":{"gitId":"-"},"content":"        JsonAddressBookStorage addressBookStorage \u003d","lastModifiedDate":"2018-12-09"},{"lineNumber":74,"author":{"gitId":"-"},"content":"                new JsonAddressBookIoExceptionThrowingStub(temporaryFolder.resolve(\"ioExceptionAddressBook.json\"));","lastModifiedDate":"2019-04-25"},{"lineNumber":75,"author":{"gitId":"-"},"content":"        JsonUserPrefsStorage userPrefsStorage \u003d","lastModifiedDate":"2019-04-25"},{"lineNumber":76,"author":{"gitId":"-"},"content":"                new JsonUserPrefsStorage(temporaryFolder.resolve(\"ioExceptionUserPrefs.json\"));","lastModifiedDate":"2019-04-25"},{"lineNumber":77,"author":{"gitId":"-"},"content":"        StorageManager storage \u003d new StorageManager(addressBookStorage, userPrefsStorage);","lastModifiedDate":"2018-12-09"},{"lineNumber":78,"author":{"gitId":"-"},"content":"        logic \u003d new LogicManager(model, storage);","lastModifiedDate":"2018-12-09"},{"lineNumber":79,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":80,"author":{"gitId":"-"},"content":"        // Execute add command","lastModifiedDate":"2018-12-09"},{"lineNumber":81,"author":{"gitId":"zxgoh"},"content":"        String addCommand \u003d AddCustomerCommand.COMMAND_WORD + NAME_DESC_AMY + PHONE_DESC_AMY","lastModifiedDate":"2022-03-14"},{"lineNumber":82,"author":{"gitId":"-"},"content":"                + ADDRESS_DESC_AMY;","lastModifiedDate":"2018-12-09"},{"lineNumber":83,"author":{"gitId":"zxgoh"},"content":"        Customer expectedCustomer \u003d new CustomerBuilder(AMY).build();","lastModifiedDate":"2022-03-14"},{"lineNumber":84,"author":{"gitId":"-"},"content":"        ModelManager expectedModel \u003d new ModelManager();","lastModifiedDate":"2018-12-09"},{"lineNumber":85,"author":{"gitId":"zxgoh"},"content":"        expectedModel.addCustomer(expectedCustomer);","lastModifiedDate":"2022-03-14"},{"lineNumber":86,"author":{"gitId":"-"},"content":"        String expectedMessage \u003d LogicManager.FILE_OPS_ERROR_MESSAGE + DUMMY_IO_EXCEPTION;","lastModifiedDate":"2018-12-09"},{"lineNumber":87,"author":{"gitId":"-"},"content":"        assertCommandFailure(addCommand, CommandException.class, expectedMessage, expectedModel);","lastModifiedDate":"2019-03-14"},{"lineNumber":88,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-12-09"},{"lineNumber":89,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":90,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-09-01"},{"lineNumber":91,"author":{"gitId":"zxgoh"},"content":"    public void getFilteredCustomerList_modifyList_throwsUnsupportedOperationException() {","lastModifiedDate":"2022-03-14"},{"lineNumber":92,"author":{"gitId":"zxgoh"},"content":"        assertThrows(UnsupportedOperationException.class, () -\u003e logic.getFilteredCustomerList().remove(0));","lastModifiedDate":"2022-03-14"},{"lineNumber":93,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-09-01"},{"lineNumber":94,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-09-01"},{"lineNumber":95,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-09-21"},{"lineNumber":96,"author":{"gitId":"-"},"content":"     * Executes the command and confirms that","lastModifiedDate":"2019-03-14"},{"lineNumber":97,"author":{"gitId":"-"},"content":"     * - no exceptions are thrown \u003cbr\u003e","lastModifiedDate":"2019-03-14"},{"lineNumber":98,"author":{"gitId":"-"},"content":"     * - the feedback message is equal to {@code expectedMessage} \u003cbr\u003e","lastModifiedDate":"2019-03-14"},{"lineNumber":99,"author":{"gitId":"-"},"content":"     * - the internal model manager state is the same as that in {@code expectedModel} \u003cbr\u003e","lastModifiedDate":"2019-03-14"},{"lineNumber":100,"author":{"gitId":"-"},"content":"     * @see #assertCommandFailure(String, Class, String, Model)","lastModifiedDate":"2019-03-14"},{"lineNumber":101,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-09-21"},{"lineNumber":102,"author":{"gitId":"-"},"content":"    private void assertCommandSuccess(String inputCommand, String expectedMessage,","lastModifiedDate":"2019-03-14"},{"lineNumber":103,"author":{"gitId":"-"},"content":"            Model expectedModel) throws CommandException, ParseException {","lastModifiedDate":"2019-03-14"},{"lineNumber":104,"author":{"gitId":"-"},"content":"        CommandResult result \u003d logic.execute(inputCommand);","lastModifiedDate":"2019-03-14"},{"lineNumber":105,"author":{"gitId":"-"},"content":"        assertEquals(expectedMessage, result.getFeedbackToUser());","lastModifiedDate":"2019-03-14"},{"lineNumber":106,"author":{"gitId":"-"},"content":"        assertEquals(expectedModel, model);","lastModifiedDate":"2019-03-14"},{"lineNumber":107,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-21"},{"lineNumber":108,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":109,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-03-11"},{"lineNumber":110,"author":{"gitId":"-"},"content":"     * Executes the command, confirms that a ParseException is thrown and that the result message is correct.","lastModifiedDate":"2017-03-11"},{"lineNumber":111,"author":{"gitId":"-"},"content":"     * @see #assertCommandFailure(String, Class, String, Model)","lastModifiedDate":"2019-03-14"},{"lineNumber":112,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-03-11"},{"lineNumber":113,"author":{"gitId":"-"},"content":"    private void assertParseException(String inputCommand, String expectedMessage) {","lastModifiedDate":"2017-03-11"},{"lineNumber":114,"author":{"gitId":"-"},"content":"        assertCommandFailure(inputCommand, ParseException.class, expectedMessage);","lastModifiedDate":"2017-03-11"},{"lineNumber":115,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-03-11"},{"lineNumber":116,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-11"},{"lineNumber":117,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-06-14"},{"lineNumber":118,"author":{"gitId":"-"},"content":"     * Executes the command, confirms that a CommandException is thrown and that the result message is correct.","lastModifiedDate":"2017-06-14"},{"lineNumber":119,"author":{"gitId":"-"},"content":"     * @see #assertCommandFailure(String, Class, String, Model)","lastModifiedDate":"2019-03-14"},{"lineNumber":120,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-06-14"},{"lineNumber":121,"author":{"gitId":"-"},"content":"    private void assertCommandException(String inputCommand, String expectedMessage) {","lastModifiedDate":"2017-06-14"},{"lineNumber":122,"author":{"gitId":"-"},"content":"        assertCommandFailure(inputCommand, CommandException.class, expectedMessage);","lastModifiedDate":"2017-06-14"},{"lineNumber":123,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-14"},{"lineNumber":124,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-14"},{"lineNumber":125,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-03-11"},{"lineNumber":126,"author":{"gitId":"-"},"content":"     * Executes the command, confirms that the exception is thrown and that the result message is correct.","lastModifiedDate":"2017-03-11"},{"lineNumber":127,"author":{"gitId":"-"},"content":"     * @see #assertCommandFailure(String, Class, String, Model)","lastModifiedDate":"2019-03-14"},{"lineNumber":128,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-03-11"},{"lineNumber":129,"author":{"gitId":"-"},"content":"    private void assertCommandFailure(String inputCommand, Class\u003c? extends Throwable\u003e expectedException,","lastModifiedDate":"2019-03-14"},{"lineNumber":130,"author":{"gitId":"-"},"content":"            String expectedMessage) {","lastModifiedDate":"2019-03-14"},{"lineNumber":131,"author":{"gitId":"-"},"content":"        Model expectedModel \u003d new ModelManager(model.getAddressBook(), new UserPrefs());","lastModifiedDate":"2017-05-31"},{"lineNumber":132,"author":{"gitId":"-"},"content":"        assertCommandFailure(inputCommand, expectedException, expectedMessage, expectedModel);","lastModifiedDate":"2019-03-14"},{"lineNumber":133,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-02-05"},{"lineNumber":134,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-05"},{"lineNumber":135,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-02-05"},{"lineNumber":136,"author":{"gitId":"-"},"content":"     * Executes the command and confirms that","lastModifiedDate":"2019-03-14"},{"lineNumber":137,"author":{"gitId":"-"},"content":"     * - the {@code expectedException} is thrown \u003cbr\u003e","lastModifiedDate":"2019-03-14"},{"lineNumber":138,"author":{"gitId":"-"},"content":"     * - the resulting error message is equal to {@code expectedMessage} \u003cbr\u003e","lastModifiedDate":"2019-03-14"},{"lineNumber":139,"author":{"gitId":"-"},"content":"     * - the internal model manager state is the same as that in {@code expectedModel} \u003cbr\u003e","lastModifiedDate":"2019-03-14"},{"lineNumber":140,"author":{"gitId":"-"},"content":"     * @see #assertCommandSuccess(String, String, Model)","lastModifiedDate":"2019-03-14"},{"lineNumber":141,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-09-21"},{"lineNumber":142,"author":{"gitId":"-"},"content":"    private void assertCommandFailure(String inputCommand, Class\u003c? extends Throwable\u003e expectedException,","lastModifiedDate":"2019-03-14"},{"lineNumber":143,"author":{"gitId":"-"},"content":"            String expectedMessage, Model expectedModel) {","lastModifiedDate":"2017-05-31"},{"lineNumber":144,"author":{"gitId":"-"},"content":"        assertThrows(expectedException, expectedMessage, () -\u003e logic.execute(inputCommand));","lastModifiedDate":"2019-03-14"},{"lineNumber":145,"author":{"gitId":"-"},"content":"        assertEquals(expectedModel, model);","lastModifiedDate":"2017-05-31"},{"lineNumber":146,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-21"},{"lineNumber":147,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-19"},{"lineNumber":148,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-12-09"},{"lineNumber":149,"author":{"gitId":"-"},"content":"     * A stub class to throw an {@code IOException} when the save method is called.","lastModifiedDate":"2018-12-09"},{"lineNumber":150,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-12-09"},{"lineNumber":151,"author":{"gitId":"-"},"content":"    private static class JsonAddressBookIoExceptionThrowingStub extends JsonAddressBookStorage {","lastModifiedDate":"2018-12-09"},{"lineNumber":152,"author":{"gitId":"-"},"content":"        private JsonAddressBookIoExceptionThrowingStub(Path filePath) {","lastModifiedDate":"2018-12-09"},{"lineNumber":153,"author":{"gitId":"-"},"content":"            super(filePath);","lastModifiedDate":"2018-12-09"},{"lineNumber":154,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-12-09"},{"lineNumber":155,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":156,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2018-12-09"},{"lineNumber":157,"author":{"gitId":"-"},"content":"        public void saveAddressBook(ReadOnlyAddressBook addressBook, Path filePath) throws IOException {","lastModifiedDate":"2018-12-09"},{"lineNumber":158,"author":{"gitId":"-"},"content":"            throw DUMMY_IO_EXCEPTION;","lastModifiedDate":"2018-12-09"},{"lineNumber":159,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-12-09"},{"lineNumber":160,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-12-09"},{"lineNumber":161,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-09-21"}],"authorContributionMap":{"-":148,"zxgoh":13}},{"path":"src/test/java/seedu/address/logic/commands/AddCustomerCommandIntegrationTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"zxgoh"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2022-03-14"},{"lineNumber":2,"author":{"gitId":"zxgoh"},"content":"","lastModifiedDate":"2022-03-14"},{"lineNumber":3,"author":{"gitId":"zxgoh"},"content":"import static seedu.address.logic.commands.CommandTestUtil.assertCommandFailure;","lastModifiedDate":"2022-03-14"},{"lineNumber":4,"author":{"gitId":"zxgoh"},"content":"import static seedu.address.logic.commands.CommandTestUtil.assertCommandSuccess;","lastModifiedDate":"2022-03-14"},{"lineNumber":5,"author":{"gitId":"zxgoh"},"content":"import static seedu.address.testutil.TypicalCustomers.getTypicalAddressBook;","lastModifiedDate":"2022-03-14"},{"lineNumber":6,"author":{"gitId":"zxgoh"},"content":"","lastModifiedDate":"2022-03-14"},{"lineNumber":7,"author":{"gitId":"zxgoh"},"content":"import org.junit.jupiter.api.BeforeEach;","lastModifiedDate":"2022-03-14"},{"lineNumber":8,"author":{"gitId":"zxgoh"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2022-03-14"},{"lineNumber":9,"author":{"gitId":"zxgoh"},"content":"","lastModifiedDate":"2022-03-14"},{"lineNumber":10,"author":{"gitId":"zxgoh"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2022-03-14"},{"lineNumber":11,"author":{"gitId":"zxgoh"},"content":"import seedu.address.model.ModelManager;","lastModifiedDate":"2022-03-14"},{"lineNumber":12,"author":{"gitId":"zxgoh"},"content":"import seedu.address.model.UserPrefs;","lastModifiedDate":"2022-03-14"},{"lineNumber":13,"author":{"gitId":"zxgoh"},"content":"import seedu.address.model.customer.Customer;","lastModifiedDate":"2022-03-14"},{"lineNumber":14,"author":{"gitId":"zxgoh"},"content":"import seedu.address.testutil.CustomerBuilder;","lastModifiedDate":"2022-03-14"},{"lineNumber":15,"author":{"gitId":"zxgoh"},"content":"","lastModifiedDate":"2022-03-14"},{"lineNumber":16,"author":{"gitId":"zxgoh"},"content":"/**","lastModifiedDate":"2022-03-14"},{"lineNumber":17,"author":{"gitId":"zxgoh"},"content":" * Contains integration tests (interaction with the Model) for {@code AddCustomerCommand}.","lastModifiedDate":"2022-03-14"},{"lineNumber":18,"author":{"gitId":"zxgoh"},"content":" */","lastModifiedDate":"2022-03-14"},{"lineNumber":19,"author":{"gitId":"zxgoh"},"content":"public class AddCustomerCommandIntegrationTest {","lastModifiedDate":"2022-03-14"},{"lineNumber":20,"author":{"gitId":"zxgoh"},"content":"","lastModifiedDate":"2022-03-14"},{"lineNumber":21,"author":{"gitId":"zxgoh"},"content":"    private Model model;","lastModifiedDate":"2022-03-14"},{"lineNumber":22,"author":{"gitId":"zxgoh"},"content":"","lastModifiedDate":"2022-03-14"},{"lineNumber":23,"author":{"gitId":"zxgoh"},"content":"    @BeforeEach","lastModifiedDate":"2022-03-14"},{"lineNumber":24,"author":{"gitId":"zxgoh"},"content":"    public void setUp() {","lastModifiedDate":"2022-03-14"},{"lineNumber":25,"author":{"gitId":"zxgoh"},"content":"        model \u003d new ModelManager(getTypicalAddressBook(), new UserPrefs());","lastModifiedDate":"2022-03-14"},{"lineNumber":26,"author":{"gitId":"zxgoh"},"content":"    }","lastModifiedDate":"2022-03-14"},{"lineNumber":27,"author":{"gitId":"zxgoh"},"content":"","lastModifiedDate":"2022-03-14"},{"lineNumber":28,"author":{"gitId":"zxgoh"},"content":"    @Test","lastModifiedDate":"2022-03-14"},{"lineNumber":29,"author":{"gitId":"zxgoh"},"content":"    public void execute_newCustomer_success() {","lastModifiedDate":"2022-03-14"},{"lineNumber":30,"author":{"gitId":"zxgoh"},"content":"        Customer validCustomer \u003d new CustomerBuilder().build();","lastModifiedDate":"2022-03-14"},{"lineNumber":31,"author":{"gitId":"zxgoh"},"content":"","lastModifiedDate":"2022-03-14"},{"lineNumber":32,"author":{"gitId":"zxgoh"},"content":"        Model expectedModel \u003d new ModelManager(model.getAddressBook(), new UserPrefs());","lastModifiedDate":"2022-03-14"},{"lineNumber":33,"author":{"gitId":"zxgoh"},"content":"        expectedModel.addCustomer(validCustomer);","lastModifiedDate":"2022-03-14"},{"lineNumber":34,"author":{"gitId":"zxgoh"},"content":"","lastModifiedDate":"2022-03-14"},{"lineNumber":35,"author":{"gitId":"zxgoh"},"content":"        assertCommandSuccess(new AddCustomerCommand(validCustomer), model,","lastModifiedDate":"2022-03-14"},{"lineNumber":36,"author":{"gitId":"zxgoh"},"content":"                String.format(AddCustomerCommand.MESSAGE_SUCCESS, validCustomer), expectedModel);","lastModifiedDate":"2022-03-14"},{"lineNumber":37,"author":{"gitId":"zxgoh"},"content":"    }","lastModifiedDate":"2022-03-14"},{"lineNumber":38,"author":{"gitId":"zxgoh"},"content":"","lastModifiedDate":"2022-03-14"},{"lineNumber":39,"author":{"gitId":"zxgoh"},"content":"    @Test","lastModifiedDate":"2022-03-14"},{"lineNumber":40,"author":{"gitId":"zxgoh"},"content":"    public void execute_duplicateCustomer_throwsCommandException() {","lastModifiedDate":"2022-03-14"},{"lineNumber":41,"author":{"gitId":"zxgoh"},"content":"        Customer customerInList \u003d model.getAddressBook().getCustomerList().get(0);","lastModifiedDate":"2022-03-14"},{"lineNumber":42,"author":{"gitId":"zxgoh"},"content":"        assertCommandFailure(new AddCustomerCommand(customerInList), model,","lastModifiedDate":"2022-03-14"},{"lineNumber":43,"author":{"gitId":"zxgoh"},"content":"                AddCustomerCommand.MESSAGE_DUPLICATE_CUSTOMER);","lastModifiedDate":"2022-03-14"},{"lineNumber":44,"author":{"gitId":"zxgoh"},"content":"    }","lastModifiedDate":"2022-03-14"},{"lineNumber":45,"author":{"gitId":"zxgoh"},"content":"","lastModifiedDate":"2022-03-14"},{"lineNumber":46,"author":{"gitId":"zxgoh"},"content":"}","lastModifiedDate":"2022-03-14"}],"authorContributionMap":{"zxgoh":46}},{"path":"src/test/java/seedu/address/logic/commands/AddCustomerCommandTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"zxgoh"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2022-03-14"},{"lineNumber":2,"author":{"gitId":"zxgoh"},"content":"","lastModifiedDate":"2022-03-14"},{"lineNumber":3,"author":{"gitId":"zxgoh"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2022-03-14"},{"lineNumber":4,"author":{"gitId":"zxgoh"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2022-03-14"},{"lineNumber":5,"author":{"gitId":"zxgoh"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2022-03-14"},{"lineNumber":6,"author":{"gitId":"zxgoh"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2022-03-14"},{"lineNumber":7,"author":{"gitId":"zxgoh"},"content":"import static seedu.address.testutil.Assert.assertThrows;","lastModifiedDate":"2022-03-14"},{"lineNumber":8,"author":{"gitId":"zxgoh"},"content":"","lastModifiedDate":"2022-03-14"},{"lineNumber":9,"author":{"gitId":"zxgoh"},"content":"import java.nio.file.Path;","lastModifiedDate":"2022-03-14"},{"lineNumber":10,"author":{"gitId":"zxgoh"},"content":"import java.util.ArrayList;","lastModifiedDate":"2022-03-14"},{"lineNumber":11,"author":{"gitId":"zxgoh"},"content":"import java.util.Arrays;","lastModifiedDate":"2022-03-14"},{"lineNumber":12,"author":{"gitId":"zxgoh"},"content":"import java.util.function.Predicate;","lastModifiedDate":"2022-03-14"},{"lineNumber":13,"author":{"gitId":"zxgoh"},"content":"","lastModifiedDate":"2022-03-14"},{"lineNumber":14,"author":{"gitId":"zxgoh"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2022-03-14"},{"lineNumber":15,"author":{"gitId":"zxgoh"},"content":"","lastModifiedDate":"2022-03-14"},{"lineNumber":16,"author":{"gitId":"zxgoh"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2022-03-14"},{"lineNumber":17,"author":{"gitId":"zxgoh"},"content":"import seedu.address.commons.core.GuiSettings;","lastModifiedDate":"2022-03-14"},{"lineNumber":18,"author":{"gitId":"zxgoh"},"content":"import seedu.address.logic.commands.exceptions.CommandException;","lastModifiedDate":"2022-03-14"},{"lineNumber":19,"author":{"gitId":"zxgoh"},"content":"import seedu.address.model.AddressBook;","lastModifiedDate":"2022-03-14"},{"lineNumber":20,"author":{"gitId":"zxgoh"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2022-03-14"},{"lineNumber":21,"author":{"gitId":"zxgoh"},"content":"import seedu.address.model.ReadOnlyAddressBook;","lastModifiedDate":"2022-03-14"},{"lineNumber":22,"author":{"gitId":"zxgoh"},"content":"import seedu.address.model.ReadOnlyUserPrefs;","lastModifiedDate":"2022-03-14"},{"lineNumber":23,"author":{"gitId":"zxgoh"},"content":"import seedu.address.model.customer.Customer;","lastModifiedDate":"2022-03-14"},{"lineNumber":24,"author":{"gitId":"jaegarpoon"},"content":"import seedu.address.model.dish.Dish;","lastModifiedDate":"2022-03-24"},{"lineNumber":25,"author":{"gitId":"jaegarpoon"},"content":"import seedu.address.model.driver.Driver;","lastModifiedDate":"2022-03-27"},{"lineNumber":26,"author":{"gitId":"zxgoh"},"content":"import seedu.address.model.item.Person;","lastModifiedDate":"2022-03-16"},{"lineNumber":27,"author":{"gitId":"zxgoh"},"content":"import seedu.address.model.order.Order;","lastModifiedDate":"2022-03-16"},{"lineNumber":28,"author":{"gitId":"zxgoh"},"content":"import seedu.address.testutil.CustomerBuilder;","lastModifiedDate":"2022-03-14"},{"lineNumber":29,"author":{"gitId":"zxgoh"},"content":"","lastModifiedDate":"2022-03-14"},{"lineNumber":30,"author":{"gitId":"zxgoh"},"content":"public class AddCustomerCommandTest {","lastModifiedDate":"2022-03-14"},{"lineNumber":31,"author":{"gitId":"zxgoh"},"content":"","lastModifiedDate":"2022-03-14"},{"lineNumber":32,"author":{"gitId":"zxgoh"},"content":"    @Test","lastModifiedDate":"2022-03-14"},{"lineNumber":33,"author":{"gitId":"zxgoh"},"content":"    public void constructor_nullCustomer_throwsNullPointerException() {","lastModifiedDate":"2022-03-14"},{"lineNumber":34,"author":{"gitId":"zxgoh"},"content":"        assertThrows(NullPointerException.class, () -\u003e new AddCustomerCommand(null));","lastModifiedDate":"2022-03-14"},{"lineNumber":35,"author":{"gitId":"zxgoh"},"content":"    }","lastModifiedDate":"2022-03-14"},{"lineNumber":36,"author":{"gitId":"zxgoh"},"content":"","lastModifiedDate":"2022-03-14"},{"lineNumber":37,"author":{"gitId":"zxgoh"},"content":"    @Test","lastModifiedDate":"2022-03-14"},{"lineNumber":38,"author":{"gitId":"zxgoh"},"content":"    public void execute_customerAcceptedByModel_addSuccessful() throws Exception {","lastModifiedDate":"2022-03-14"},{"lineNumber":39,"author":{"gitId":"zxgoh"},"content":"        ModelStubAcceptingCustomerAdded modelStub \u003d new ModelStubAcceptingCustomerAdded();","lastModifiedDate":"2022-03-14"},{"lineNumber":40,"author":{"gitId":"zxgoh"},"content":"        Customer validCustomer \u003d new CustomerBuilder().build();","lastModifiedDate":"2022-03-14"},{"lineNumber":41,"author":{"gitId":"zxgoh"},"content":"","lastModifiedDate":"2022-03-14"},{"lineNumber":42,"author":{"gitId":"zxgoh"},"content":"        CommandResult commandResult \u003d new AddCustomerCommand(validCustomer).execute(modelStub);","lastModifiedDate":"2022-03-14"},{"lineNumber":43,"author":{"gitId":"zxgoh"},"content":"","lastModifiedDate":"2022-03-14"},{"lineNumber":44,"author":{"gitId":"zxgoh"},"content":"        assertEquals(String.format(AddCustomerCommand.MESSAGE_SUCCESS, validCustomer),","lastModifiedDate":"2022-03-14"},{"lineNumber":45,"author":{"gitId":"zxgoh"},"content":"                commandResult.getFeedbackToUser());","lastModifiedDate":"2022-03-14"},{"lineNumber":46,"author":{"gitId":"zxgoh"},"content":"        assertEquals(Arrays.asList(validCustomer), modelStub.customersAdded);","lastModifiedDate":"2022-03-14"},{"lineNumber":47,"author":{"gitId":"zxgoh"},"content":"    }","lastModifiedDate":"2022-03-14"},{"lineNumber":48,"author":{"gitId":"zxgoh"},"content":"","lastModifiedDate":"2022-03-14"},{"lineNumber":49,"author":{"gitId":"zxgoh"},"content":"    @Test","lastModifiedDate":"2022-03-14"},{"lineNumber":50,"author":{"gitId":"zxgoh"},"content":"    public void execute_duplicateCustomer_throwsCommandException() {","lastModifiedDate":"2022-03-14"},{"lineNumber":51,"author":{"gitId":"zxgoh"},"content":"        Customer validCustomer \u003d new CustomerBuilder().build();","lastModifiedDate":"2022-03-14"},{"lineNumber":52,"author":{"gitId":"zxgoh"},"content":"        AddCustomerCommand addCustomerCommand \u003d new AddCustomerCommand(validCustomer);","lastModifiedDate":"2022-03-14"},{"lineNumber":53,"author":{"gitId":"zxgoh"},"content":"        ModelStub modelStub \u003d new ModelStubWithCustomer(validCustomer);","lastModifiedDate":"2022-03-14"},{"lineNumber":54,"author":{"gitId":"zxgoh"},"content":"        assertThrows(CommandException.class, AddCustomerCommand.MESSAGE_DUPLICATE_CUSTOMER, () -\u003e","lastModifiedDate":"2022-03-14"},{"lineNumber":55,"author":{"gitId":"zxgoh"},"content":"                addCustomerCommand.execute(modelStub));","lastModifiedDate":"2022-03-14"},{"lineNumber":56,"author":{"gitId":"zxgoh"},"content":"    }","lastModifiedDate":"2022-03-14"},{"lineNumber":57,"author":{"gitId":"zxgoh"},"content":"","lastModifiedDate":"2022-03-14"},{"lineNumber":58,"author":{"gitId":"zxgoh"},"content":"    @Test","lastModifiedDate":"2022-03-14"},{"lineNumber":59,"author":{"gitId":"zxgoh"},"content":"    public void equals() {","lastModifiedDate":"2022-03-14"},{"lineNumber":60,"author":{"gitId":"zxgoh"},"content":"        Customer alice \u003d new CustomerBuilder().withName(\"Alice\").build();","lastModifiedDate":"2022-03-14"},{"lineNumber":61,"author":{"gitId":"zxgoh"},"content":"        Customer bob \u003d new CustomerBuilder().withName(\"Bob\").build();","lastModifiedDate":"2022-03-14"},{"lineNumber":62,"author":{"gitId":"zxgoh"},"content":"        AddCustomerCommand addAliceCommand \u003d new AddCustomerCommand(alice);","lastModifiedDate":"2022-03-14"},{"lineNumber":63,"author":{"gitId":"zxgoh"},"content":"        AddCustomerCommand addBobCommand \u003d new AddCustomerCommand(bob);","lastModifiedDate":"2022-03-14"},{"lineNumber":64,"author":{"gitId":"zxgoh"},"content":"","lastModifiedDate":"2022-03-14"},{"lineNumber":65,"author":{"gitId":"zxgoh"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2022-03-14"},{"lineNumber":66,"author":{"gitId":"zxgoh"},"content":"        assertTrue(addAliceCommand.equals(addAliceCommand));","lastModifiedDate":"2022-03-14"},{"lineNumber":67,"author":{"gitId":"zxgoh"},"content":"","lastModifiedDate":"2022-03-14"},{"lineNumber":68,"author":{"gitId":"zxgoh"},"content":"        // same values -\u003e returns true","lastModifiedDate":"2022-03-14"},{"lineNumber":69,"author":{"gitId":"zxgoh"},"content":"        AddCustomerCommand addAliceCommandCopy \u003d new AddCustomerCommand(alice);","lastModifiedDate":"2022-03-14"},{"lineNumber":70,"author":{"gitId":"zxgoh"},"content":"        assertTrue(addAliceCommand.equals(addAliceCommandCopy));","lastModifiedDate":"2022-03-14"},{"lineNumber":71,"author":{"gitId":"zxgoh"},"content":"","lastModifiedDate":"2022-03-14"},{"lineNumber":72,"author":{"gitId":"zxgoh"},"content":"        // different types -\u003e returns false","lastModifiedDate":"2022-03-14"},{"lineNumber":73,"author":{"gitId":"zxgoh"},"content":"        assertFalse(addAliceCommand.equals(1));","lastModifiedDate":"2022-03-14"},{"lineNumber":74,"author":{"gitId":"zxgoh"},"content":"","lastModifiedDate":"2022-03-14"},{"lineNumber":75,"author":{"gitId":"zxgoh"},"content":"        // null -\u003e returns false","lastModifiedDate":"2022-03-14"},{"lineNumber":76,"author":{"gitId":"zxgoh"},"content":"        assertFalse(addAliceCommand.equals(null));","lastModifiedDate":"2022-03-14"},{"lineNumber":77,"author":{"gitId":"zxgoh"},"content":"","lastModifiedDate":"2022-03-14"},{"lineNumber":78,"author":{"gitId":"zxgoh"},"content":"        // different customer -\u003e returns false","lastModifiedDate":"2022-03-14"},{"lineNumber":79,"author":{"gitId":"zxgoh"},"content":"        assertFalse(addAliceCommand.equals(addBobCommand));","lastModifiedDate":"2022-03-14"},{"lineNumber":80,"author":{"gitId":"zxgoh"},"content":"    }","lastModifiedDate":"2022-03-14"},{"lineNumber":81,"author":{"gitId":"zxgoh"},"content":"","lastModifiedDate":"2022-03-14"},{"lineNumber":82,"author":{"gitId":"zxgoh"},"content":"    /**","lastModifiedDate":"2022-03-14"},{"lineNumber":83,"author":{"gitId":"zxgoh"},"content":"     * A default model stub that have all of the methods failing.","lastModifiedDate":"2022-03-14"},{"lineNumber":84,"author":{"gitId":"zxgoh"},"content":"     */","lastModifiedDate":"2022-03-14"},{"lineNumber":85,"author":{"gitId":"zxgoh"},"content":"    private class ModelStub implements Model {","lastModifiedDate":"2022-03-14"},{"lineNumber":86,"author":{"gitId":"zxgoh"},"content":"        @Override","lastModifiedDate":"2022-03-14"},{"lineNumber":87,"author":{"gitId":"zxgoh"},"content":"        public void setUserPrefs(ReadOnlyUserPrefs userPrefs) {","lastModifiedDate":"2022-03-14"},{"lineNumber":88,"author":{"gitId":"zxgoh"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2022-03-14"},{"lineNumber":89,"author":{"gitId":"zxgoh"},"content":"        }","lastModifiedDate":"2022-03-14"},{"lineNumber":90,"author":{"gitId":"zxgoh"},"content":"","lastModifiedDate":"2022-03-14"},{"lineNumber":91,"author":{"gitId":"zxgoh"},"content":"        @Override","lastModifiedDate":"2022-03-14"},{"lineNumber":92,"author":{"gitId":"zxgoh"},"content":"        public ReadOnlyUserPrefs getUserPrefs() {","lastModifiedDate":"2022-03-14"},{"lineNumber":93,"author":{"gitId":"zxgoh"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2022-03-14"},{"lineNumber":94,"author":{"gitId":"zxgoh"},"content":"        }","lastModifiedDate":"2022-03-14"},{"lineNumber":95,"author":{"gitId":"zxgoh"},"content":"","lastModifiedDate":"2022-03-14"},{"lineNumber":96,"author":{"gitId":"zxgoh"},"content":"        @Override","lastModifiedDate":"2022-03-14"},{"lineNumber":97,"author":{"gitId":"zxgoh"},"content":"        public GuiSettings getGuiSettings() {","lastModifiedDate":"2022-03-14"},{"lineNumber":98,"author":{"gitId":"zxgoh"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2022-03-14"},{"lineNumber":99,"author":{"gitId":"zxgoh"},"content":"        }","lastModifiedDate":"2022-03-14"},{"lineNumber":100,"author":{"gitId":"zxgoh"},"content":"","lastModifiedDate":"2022-03-14"},{"lineNumber":101,"author":{"gitId":"zxgoh"},"content":"        @Override","lastModifiedDate":"2022-03-14"},{"lineNumber":102,"author":{"gitId":"zxgoh"},"content":"        public void setGuiSettings(GuiSettings guiSettings) {","lastModifiedDate":"2022-03-14"},{"lineNumber":103,"author":{"gitId":"zxgoh"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2022-03-14"},{"lineNumber":104,"author":{"gitId":"zxgoh"},"content":"        }","lastModifiedDate":"2022-03-14"},{"lineNumber":105,"author":{"gitId":"zxgoh"},"content":"","lastModifiedDate":"2022-03-14"},{"lineNumber":106,"author":{"gitId":"zxgoh"},"content":"        @Override","lastModifiedDate":"2022-03-14"},{"lineNumber":107,"author":{"gitId":"zxgoh"},"content":"        public Path getAddressBookFilePath() {","lastModifiedDate":"2022-03-14"},{"lineNumber":108,"author":{"gitId":"zxgoh"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2022-03-14"},{"lineNumber":109,"author":{"gitId":"zxgoh"},"content":"        }","lastModifiedDate":"2022-03-14"},{"lineNumber":110,"author":{"gitId":"zxgoh"},"content":"","lastModifiedDate":"2022-03-14"},{"lineNumber":111,"author":{"gitId":"zxgoh"},"content":"        @Override","lastModifiedDate":"2022-03-14"},{"lineNumber":112,"author":{"gitId":"zxgoh"},"content":"        public void setAddressBookFilePath(Path addressBookFilePath) {","lastModifiedDate":"2022-03-14"},{"lineNumber":113,"author":{"gitId":"zxgoh"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2022-03-14"},{"lineNumber":114,"author":{"gitId":"zxgoh"},"content":"        }","lastModifiedDate":"2022-03-14"},{"lineNumber":115,"author":{"gitId":"zxgoh"},"content":"","lastModifiedDate":"2022-03-14"},{"lineNumber":116,"author":{"gitId":"zxgoh"},"content":"        @Override","lastModifiedDate":"2022-03-14"},{"lineNumber":117,"author":{"gitId":"zxgoh"},"content":"        public void addCustomer(Customer customer) {","lastModifiedDate":"2022-03-14"},{"lineNumber":118,"author":{"gitId":"zxgoh"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2022-03-14"},{"lineNumber":119,"author":{"gitId":"zxgoh"},"content":"        }","lastModifiedDate":"2022-03-14"},{"lineNumber":120,"author":{"gitId":"zxgoh"},"content":"","lastModifiedDate":"2022-03-14"},{"lineNumber":121,"author":{"gitId":"zxgoh"},"content":"        @Override","lastModifiedDate":"2022-03-16"},{"lineNumber":122,"author":{"gitId":"zxgoh"},"content":"        public void addPerson(Person person) {","lastModifiedDate":"2022-03-16"},{"lineNumber":123,"author":{"gitId":"zxgoh"},"content":"","lastModifiedDate":"2022-03-16"},{"lineNumber":124,"author":{"gitId":"zxgoh"},"content":"        }","lastModifiedDate":"2022-03-16"},{"lineNumber":125,"author":{"gitId":"zxgoh"},"content":"","lastModifiedDate":"2022-03-16"},{"lineNumber":126,"author":{"gitId":"zxgoh"},"content":"        @Override","lastModifiedDate":"2022-03-16"},{"lineNumber":127,"author":{"gitId":"zxgoh"},"content":"        public void addDriver(Driver driver) {","lastModifiedDate":"2022-03-16"},{"lineNumber":128,"author":{"gitId":"zxgoh"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2022-03-16"},{"lineNumber":129,"author":{"gitId":"zxgoh"},"content":"        }","lastModifiedDate":"2022-03-16"},{"lineNumber":130,"author":{"gitId":"zxgoh"},"content":"","lastModifiedDate":"2022-03-16"},{"lineNumber":131,"author":{"gitId":"zxgoh"},"content":"        @Override","lastModifiedDate":"2022-03-14"},{"lineNumber":132,"author":{"gitId":"zxgoh"},"content":"        public void setAddressBook(ReadOnlyAddressBook newData) {","lastModifiedDate":"2022-03-14"},{"lineNumber":133,"author":{"gitId":"zxgoh"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2022-03-14"},{"lineNumber":134,"author":{"gitId":"zxgoh"},"content":"        }","lastModifiedDate":"2022-03-14"},{"lineNumber":135,"author":{"gitId":"zxgoh"},"content":"","lastModifiedDate":"2022-03-14"},{"lineNumber":136,"author":{"gitId":"zxgoh"},"content":"        @Override","lastModifiedDate":"2022-03-14"},{"lineNumber":137,"author":{"gitId":"zxgoh"},"content":"        public ReadOnlyAddressBook getAddressBook() {","lastModifiedDate":"2022-03-14"},{"lineNumber":138,"author":{"gitId":"zxgoh"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2022-03-14"},{"lineNumber":139,"author":{"gitId":"zxgoh"},"content":"        }","lastModifiedDate":"2022-03-14"},{"lineNumber":140,"author":{"gitId":"zxgoh"},"content":"","lastModifiedDate":"2022-03-14"},{"lineNumber":141,"author":{"gitId":"zxgoh"},"content":"        @Override","lastModifiedDate":"2022-03-14"},{"lineNumber":142,"author":{"gitId":"zxgoh"},"content":"        public boolean hasCustomer(Customer customer) {","lastModifiedDate":"2022-03-14"},{"lineNumber":143,"author":{"gitId":"zxgoh"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2022-03-14"},{"lineNumber":144,"author":{"gitId":"zxgoh"},"content":"        }","lastModifiedDate":"2022-03-14"},{"lineNumber":145,"author":{"gitId":"zxgoh"},"content":"","lastModifiedDate":"2022-03-14"},{"lineNumber":146,"author":{"gitId":"zxgoh"},"content":"        @Override","lastModifiedDate":"2022-03-16"},{"lineNumber":147,"author":{"gitId":"zxgoh"},"content":"        public boolean hasPerson(Person person) {","lastModifiedDate":"2022-03-16"},{"lineNumber":148,"author":{"gitId":"zxgoh"},"content":"            return false;","lastModifiedDate":"2022-03-16"},{"lineNumber":149,"author":{"gitId":"zxgoh"},"content":"        }","lastModifiedDate":"2022-03-16"},{"lineNumber":150,"author":{"gitId":"zxgoh"},"content":"","lastModifiedDate":"2022-03-16"},{"lineNumber":151,"author":{"gitId":"zxgoh"},"content":"        @Override","lastModifiedDate":"2022-03-16"},{"lineNumber":152,"author":{"gitId":"zxgoh"},"content":"        public boolean hasDriver(Driver person) {","lastModifiedDate":"2022-03-16"},{"lineNumber":153,"author":{"gitId":"zxgoh"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2022-03-16"},{"lineNumber":154,"author":{"gitId":"zxgoh"},"content":"        }","lastModifiedDate":"2022-03-16"},{"lineNumber":155,"author":{"gitId":"zxgoh"},"content":"","lastModifiedDate":"2022-03-16"},{"lineNumber":156,"author":{"gitId":"zxgoh"},"content":"        @Override","lastModifiedDate":"2022-03-14"},{"lineNumber":157,"author":{"gitId":"zxgoh"},"content":"        public void deleteCustomer(Customer target) {","lastModifiedDate":"2022-03-14"},{"lineNumber":158,"author":{"gitId":"zxgoh"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2022-03-14"},{"lineNumber":159,"author":{"gitId":"zxgoh"},"content":"        }","lastModifiedDate":"2022-03-14"},{"lineNumber":160,"author":{"gitId":"zxgoh"},"content":"","lastModifiedDate":"2022-03-14"},{"lineNumber":161,"author":{"gitId":"zxgoh"},"content":"        @Override","lastModifiedDate":"2022-03-16"},{"lineNumber":162,"author":{"gitId":"zxgoh"},"content":"        public void deletePerson(Person target) {","lastModifiedDate":"2022-03-16"},{"lineNumber":163,"author":{"gitId":"zxgoh"},"content":"","lastModifiedDate":"2022-03-16"},{"lineNumber":164,"author":{"gitId":"zxgoh"},"content":"        }","lastModifiedDate":"2022-03-16"},{"lineNumber":165,"author":{"gitId":"zxgoh"},"content":"","lastModifiedDate":"2022-03-16"},{"lineNumber":166,"author":{"gitId":"zxgoh"},"content":"        @Override","lastModifiedDate":"2022-03-16"},{"lineNumber":167,"author":{"gitId":"zxgoh"},"content":"        public void deleteDriver(Driver target) {","lastModifiedDate":"2022-03-16"},{"lineNumber":168,"author":{"gitId":"zxgoh"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2022-03-16"},{"lineNumber":169,"author":{"gitId":"zxgoh"},"content":"        }","lastModifiedDate":"2022-03-16"},{"lineNumber":170,"author":{"gitId":"zxgoh"},"content":"","lastModifiedDate":"2022-03-16"},{"lineNumber":171,"author":{"gitId":"zxgoh"},"content":"        @Override","lastModifiedDate":"2022-03-14"},{"lineNumber":172,"author":{"gitId":"zxgoh"},"content":"        public void setCustomer(Customer target, Customer editedCustomer) {","lastModifiedDate":"2022-03-14"},{"lineNumber":173,"author":{"gitId":"zxgoh"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2022-03-14"},{"lineNumber":174,"author":{"gitId":"zxgoh"},"content":"        }","lastModifiedDate":"2022-03-14"},{"lineNumber":175,"author":{"gitId":"zxgoh"},"content":"","lastModifiedDate":"2022-03-14"},{"lineNumber":176,"author":{"gitId":"jaegarpoon"},"content":"        @Override","lastModifiedDate":"2022-03-27"},{"lineNumber":177,"author":{"gitId":"jaegarpoon"},"content":"","lastModifiedDate":"2022-03-29"},{"lineNumber":178,"author":{"gitId":"jaegarpoon"},"content":"        public void setDish(Dish target, Dish editedDish) {","lastModifiedDate":"2022-03-27"},{"lineNumber":179,"author":{"gitId":"jaegarpoon"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2022-03-27"},{"lineNumber":180,"author":{"gitId":"jaegarpoon"},"content":"        }","lastModifiedDate":"2022-03-27"},{"lineNumber":181,"author":{"gitId":"jaegarpoon"},"content":"","lastModifiedDate":"2022-03-27"},{"lineNumber":182,"author":{"gitId":"hieunm1821"},"content":"        public void setDriver(Driver target, Driver editedDriver) {","lastModifiedDate":"2022-03-27"},{"lineNumber":183,"author":{"gitId":"hieunm1821"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2022-03-27"},{"lineNumber":184,"author":{"gitId":"hieunm1821"},"content":"        }","lastModifiedDate":"2022-03-27"},{"lineNumber":185,"author":{"gitId":"hieunm1821"},"content":"","lastModifiedDate":"2022-03-27"},{"lineNumber":186,"author":{"gitId":"zxgoh"},"content":"        @Override","lastModifiedDate":"2022-03-16"},{"lineNumber":187,"author":{"gitId":"zxgoh"},"content":"        public boolean hasDish(Dish dish) {","lastModifiedDate":"2022-03-16"},{"lineNumber":188,"author":{"gitId":"zxgoh"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2022-03-16"},{"lineNumber":189,"author":{"gitId":"zxgoh"},"content":"        }","lastModifiedDate":"2022-03-16"},{"lineNumber":190,"author":{"gitId":"zxgoh"},"content":"","lastModifiedDate":"2022-03-16"},{"lineNumber":191,"author":{"gitId":"zxgoh"},"content":"        @Override","lastModifiedDate":"2022-03-16"},{"lineNumber":192,"author":{"gitId":"zxgoh"},"content":"        public void deleteDish(Dish target) {","lastModifiedDate":"2022-03-16"},{"lineNumber":193,"author":{"gitId":"zxgoh"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2022-03-16"},{"lineNumber":194,"author":{"gitId":"zxgoh"},"content":"        }","lastModifiedDate":"2022-03-16"},{"lineNumber":195,"author":{"gitId":"zxgoh"},"content":"","lastModifiedDate":"2022-03-16"},{"lineNumber":196,"author":{"gitId":"zxgoh"},"content":"        @Override","lastModifiedDate":"2022-03-16"},{"lineNumber":197,"author":{"gitId":"zxgoh"},"content":"        public void addDish(Dish dish) {","lastModifiedDate":"2022-03-16"},{"lineNumber":198,"author":{"gitId":"zxgoh"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2022-03-16"},{"lineNumber":199,"author":{"gitId":"zxgoh"},"content":"        }","lastModifiedDate":"2022-03-16"},{"lineNumber":200,"author":{"gitId":"zxgoh"},"content":"","lastModifiedDate":"2022-03-16"},{"lineNumber":201,"author":{"gitId":"zxgoh"},"content":"        @Override","lastModifiedDate":"2022-03-16"},{"lineNumber":202,"author":{"gitId":"zxgoh"},"content":"        public ObservableList\u003cPerson\u003e getFilteredPersonList() {","lastModifiedDate":"2022-03-16"},{"lineNumber":203,"author":{"gitId":"zxgoh"},"content":"            return null;","lastModifiedDate":"2022-03-16"},{"lineNumber":204,"author":{"gitId":"zxgoh"},"content":"        }","lastModifiedDate":"2022-03-16"},{"lineNumber":205,"author":{"gitId":"zxgoh"},"content":"","lastModifiedDate":"2022-03-16"},{"lineNumber":206,"author":{"gitId":"zxgoh"},"content":"        @Override","lastModifiedDate":"2022-03-14"},{"lineNumber":207,"author":{"gitId":"zxgoh"},"content":"        public ObservableList\u003cCustomer\u003e getFilteredCustomerList() {","lastModifiedDate":"2022-03-14"},{"lineNumber":208,"author":{"gitId":"zxgoh"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2022-03-14"},{"lineNumber":209,"author":{"gitId":"zxgoh"},"content":"        }","lastModifiedDate":"2022-03-14"},{"lineNumber":210,"author":{"gitId":"zxgoh"},"content":"","lastModifiedDate":"2022-03-14"},{"lineNumber":211,"author":{"gitId":"zxgoh"},"content":"        @Override","lastModifiedDate":"2022-03-16"},{"lineNumber":212,"author":{"gitId":"zxgoh"},"content":"        public ObservableList\u003cDriver\u003e getFilteredDriverList() {","lastModifiedDate":"2022-03-16"},{"lineNumber":213,"author":{"gitId":"zxgoh"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2022-03-16"},{"lineNumber":214,"author":{"gitId":"zxgoh"},"content":"        }","lastModifiedDate":"2022-03-16"},{"lineNumber":215,"author":{"gitId":"zxgoh"},"content":"","lastModifiedDate":"2022-03-16"},{"lineNumber":216,"author":{"gitId":"zxgoh"},"content":"        @Override","lastModifiedDate":"2022-03-16"},{"lineNumber":217,"author":{"gitId":"zxgoh"},"content":"        public ObservableList\u003cDish\u003e getFilteredDishList() {","lastModifiedDate":"2022-03-16"},{"lineNumber":218,"author":{"gitId":"zxgoh"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2022-03-16"},{"lineNumber":219,"author":{"gitId":"zxgoh"},"content":"        }","lastModifiedDate":"2022-03-16"},{"lineNumber":220,"author":{"gitId":"zxgoh"},"content":"","lastModifiedDate":"2022-03-16"},{"lineNumber":221,"author":{"gitId":"zxgoh"},"content":"        @Override","lastModifiedDate":"2022-03-14"},{"lineNumber":222,"author":{"gitId":"zxgoh"},"content":"        public void updateFilteredCustomerList(Predicate\u003cCustomer\u003e predicate) {","lastModifiedDate":"2022-03-14"},{"lineNumber":223,"author":{"gitId":"zxgoh"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2022-03-14"},{"lineNumber":224,"author":{"gitId":"zxgoh"},"content":"        }","lastModifiedDate":"2022-03-14"},{"lineNumber":225,"author":{"gitId":"zxgoh"},"content":"","lastModifiedDate":"2022-03-16"},{"lineNumber":226,"author":{"gitId":"zxgoh"},"content":"        @Override","lastModifiedDate":"2022-03-16"},{"lineNumber":227,"author":{"gitId":"zxgoh"},"content":"        public void updateFilteredPersonList(Predicate\u003cPerson\u003e predicate) {","lastModifiedDate":"2022-03-16"},{"lineNumber":228,"author":{"gitId":"zxgoh"},"content":"","lastModifiedDate":"2022-03-16"},{"lineNumber":229,"author":{"gitId":"zxgoh"},"content":"        }","lastModifiedDate":"2022-03-16"},{"lineNumber":230,"author":{"gitId":"zxgoh"},"content":"","lastModifiedDate":"2022-03-16"},{"lineNumber":231,"author":{"gitId":"zxgoh"},"content":"        @Override","lastModifiedDate":"2022-03-16"},{"lineNumber":232,"author":{"gitId":"zxgoh"},"content":"        public void addOrder(Order order) {","lastModifiedDate":"2022-03-16"},{"lineNumber":233,"author":{"gitId":"zxgoh"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2022-03-16"},{"lineNumber":234,"author":{"gitId":"zxgoh"},"content":"        }","lastModifiedDate":"2022-03-16"},{"lineNumber":235,"author":{"gitId":"zxgoh"},"content":"","lastModifiedDate":"2022-03-16"},{"lineNumber":236,"author":{"gitId":"zxgoh"},"content":"        @Override","lastModifiedDate":"2022-03-16"},{"lineNumber":237,"author":{"gitId":"zxgoh"},"content":"        public ObservableList\u003cOrder\u003e getFilteredOrderList() {","lastModifiedDate":"2022-03-16"},{"lineNumber":238,"author":{"gitId":"zxgoh"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2022-03-16"},{"lineNumber":239,"author":{"gitId":"zxgoh"},"content":"        }","lastModifiedDate":"2022-03-16"},{"lineNumber":240,"author":{"gitId":"zxgoh"},"content":"","lastModifiedDate":"2022-03-16"},{"lineNumber":241,"author":{"gitId":"zxgoh"},"content":"        @Override","lastModifiedDate":"2022-03-16"},{"lineNumber":242,"author":{"gitId":"zxgoh"},"content":"        public boolean hasOrder(Order order) {","lastModifiedDate":"2022-03-16"},{"lineNumber":243,"author":{"gitId":"zxgoh"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2022-03-16"},{"lineNumber":244,"author":{"gitId":"zxgoh"},"content":"        }","lastModifiedDate":"2022-03-16"},{"lineNumber":245,"author":{"gitId":"zxgoh"},"content":"","lastModifiedDate":"2022-03-16"},{"lineNumber":246,"author":{"gitId":"xzzz3"},"content":"        @Override","lastModifiedDate":"2022-03-28"},{"lineNumber":247,"author":{"gitId":"xzzz3"},"content":"        public void setOrder(Order target, Order editedOrder) {","lastModifiedDate":"2022-03-28"},{"lineNumber":248,"author":{"gitId":"xzzz3"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2022-03-28"},{"lineNumber":249,"author":{"gitId":"xzzz3"},"content":"        }","lastModifiedDate":"2022-03-28"},{"lineNumber":250,"author":{"gitId":"xzzz3"},"content":"","lastModifiedDate":"2022-03-28"},{"lineNumber":251,"author":{"gitId":"zxgoh"},"content":"        @Override","lastModifiedDate":"2022-03-16"},{"lineNumber":252,"author":{"gitId":"zxgoh"},"content":"        public void updateFilteredOrderList(Predicate\u003cOrder\u003e predicate) {","lastModifiedDate":"2022-03-16"},{"lineNumber":253,"author":{"gitId":"zxgoh"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2022-03-16"},{"lineNumber":254,"author":{"gitId":"zxgoh"},"content":"        }","lastModifiedDate":"2022-03-16"},{"lineNumber":255,"author":{"gitId":"zxgoh"},"content":"","lastModifiedDate":"2022-03-16"},{"lineNumber":256,"author":{"gitId":"zxgoh"},"content":"        @Override","lastModifiedDate":"2022-03-16"},{"lineNumber":257,"author":{"gitId":"zxgoh"},"content":"        public void updateFilteredDriverList(Predicate\u003cDriver\u003e predicate) {","lastModifiedDate":"2022-03-16"},{"lineNumber":258,"author":{"gitId":"zxgoh"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2022-03-16"},{"lineNumber":259,"author":{"gitId":"zxgoh"},"content":"        }","lastModifiedDate":"2022-03-16"},{"lineNumber":260,"author":{"gitId":"zxgoh"},"content":"","lastModifiedDate":"2022-03-16"},{"lineNumber":261,"author":{"gitId":"zxgoh"},"content":"        @Override","lastModifiedDate":"2022-03-16"},{"lineNumber":262,"author":{"gitId":"zxgoh"},"content":"        public void updateFilteredDishList(Predicate\u003cDish\u003e predicate) {","lastModifiedDate":"2022-03-16"},{"lineNumber":263,"author":{"gitId":"zxgoh"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2022-03-16"},{"lineNumber":264,"author":{"gitId":"zxgoh"},"content":"        }","lastModifiedDate":"2022-03-16"},{"lineNumber":265,"author":{"gitId":"zxgoh"},"content":"    }","lastModifiedDate":"2022-03-14"},{"lineNumber":266,"author":{"gitId":"zxgoh"},"content":"","lastModifiedDate":"2022-03-14"},{"lineNumber":267,"author":{"gitId":"zxgoh"},"content":"    /**","lastModifiedDate":"2022-03-14"},{"lineNumber":268,"author":{"gitId":"zxgoh"},"content":"     * A Model stub that contains a single customer.","lastModifiedDate":"2022-03-14"},{"lineNumber":269,"author":{"gitId":"zxgoh"},"content":"     */","lastModifiedDate":"2022-03-14"},{"lineNumber":270,"author":{"gitId":"zxgoh"},"content":"    private class ModelStubWithCustomer extends ModelStub {","lastModifiedDate":"2022-03-14"},{"lineNumber":271,"author":{"gitId":"zxgoh"},"content":"        private final Customer customer;","lastModifiedDate":"2022-03-14"},{"lineNumber":272,"author":{"gitId":"zxgoh"},"content":"","lastModifiedDate":"2022-03-14"},{"lineNumber":273,"author":{"gitId":"zxgoh"},"content":"        ModelStubWithCustomer(Customer customer) {","lastModifiedDate":"2022-03-14"},{"lineNumber":274,"author":{"gitId":"zxgoh"},"content":"            requireNonNull(customer);","lastModifiedDate":"2022-03-14"},{"lineNumber":275,"author":{"gitId":"zxgoh"},"content":"            this.customer \u003d customer;","lastModifiedDate":"2022-03-14"},{"lineNumber":276,"author":{"gitId":"zxgoh"},"content":"        }","lastModifiedDate":"2022-03-14"},{"lineNumber":277,"author":{"gitId":"zxgoh"},"content":"","lastModifiedDate":"2022-03-14"},{"lineNumber":278,"author":{"gitId":"zxgoh"},"content":"        @Override","lastModifiedDate":"2022-03-14"},{"lineNumber":279,"author":{"gitId":"zxgoh"},"content":"        public boolean hasCustomer(Customer customer) {","lastModifiedDate":"2022-03-14"},{"lineNumber":280,"author":{"gitId":"zxgoh"},"content":"            requireNonNull(customer);","lastModifiedDate":"2022-03-14"},{"lineNumber":281,"author":{"gitId":"zxgoh"},"content":"            return this.customer.isSameCustomer(customer);","lastModifiedDate":"2022-03-14"},{"lineNumber":282,"author":{"gitId":"zxgoh"},"content":"        }","lastModifiedDate":"2022-03-14"},{"lineNumber":283,"author":{"gitId":"zxgoh"},"content":"    }","lastModifiedDate":"2022-03-14"},{"lineNumber":284,"author":{"gitId":"zxgoh"},"content":"","lastModifiedDate":"2022-03-14"},{"lineNumber":285,"author":{"gitId":"zxgoh"},"content":"    /**","lastModifiedDate":"2022-03-14"},{"lineNumber":286,"author":{"gitId":"zxgoh"},"content":"     * A Model stub that always accept the customer being added.","lastModifiedDate":"2022-03-14"},{"lineNumber":287,"author":{"gitId":"zxgoh"},"content":"     */","lastModifiedDate":"2022-03-14"},{"lineNumber":288,"author":{"gitId":"zxgoh"},"content":"    private class ModelStubAcceptingCustomerAdded extends ModelStub {","lastModifiedDate":"2022-03-14"},{"lineNumber":289,"author":{"gitId":"zxgoh"},"content":"        final ArrayList\u003cCustomer\u003e customersAdded \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2022-03-14"},{"lineNumber":290,"author":{"gitId":"zxgoh"},"content":"","lastModifiedDate":"2022-03-14"},{"lineNumber":291,"author":{"gitId":"zxgoh"},"content":"        @Override","lastModifiedDate":"2022-03-14"},{"lineNumber":292,"author":{"gitId":"zxgoh"},"content":"        public boolean hasCustomer(Customer customer) {","lastModifiedDate":"2022-03-14"},{"lineNumber":293,"author":{"gitId":"zxgoh"},"content":"            requireNonNull(customer);","lastModifiedDate":"2022-03-14"},{"lineNumber":294,"author":{"gitId":"zxgoh"},"content":"            return customersAdded.stream().anyMatch(customer::isSameCustomer);","lastModifiedDate":"2022-03-14"},{"lineNumber":295,"author":{"gitId":"zxgoh"},"content":"        }","lastModifiedDate":"2022-03-14"},{"lineNumber":296,"author":{"gitId":"zxgoh"},"content":"","lastModifiedDate":"2022-03-14"},{"lineNumber":297,"author":{"gitId":"zxgoh"},"content":"        @Override","lastModifiedDate":"2022-03-14"},{"lineNumber":298,"author":{"gitId":"zxgoh"},"content":"        public void addCustomer(Customer customer) {","lastModifiedDate":"2022-03-14"},{"lineNumber":299,"author":{"gitId":"zxgoh"},"content":"            requireNonNull(customer);","lastModifiedDate":"2022-03-14"},{"lineNumber":300,"author":{"gitId":"zxgoh"},"content":"            customersAdded.add(customer);","lastModifiedDate":"2022-03-14"},{"lineNumber":301,"author":{"gitId":"zxgoh"},"content":"        }","lastModifiedDate":"2022-03-14"},{"lineNumber":302,"author":{"gitId":"zxgoh"},"content":"","lastModifiedDate":"2022-03-14"},{"lineNumber":303,"author":{"gitId":"zxgoh"},"content":"        @Override","lastModifiedDate":"2022-03-14"},{"lineNumber":304,"author":{"gitId":"zxgoh"},"content":"        public ReadOnlyAddressBook getAddressBook() {","lastModifiedDate":"2022-03-14"},{"lineNumber":305,"author":{"gitId":"zxgoh"},"content":"            return new AddressBook();","lastModifiedDate":"2022-03-14"},{"lineNumber":306,"author":{"gitId":"zxgoh"},"content":"        }","lastModifiedDate":"2022-03-14"},{"lineNumber":307,"author":{"gitId":"zxgoh"},"content":"    }","lastModifiedDate":"2022-03-14"},{"lineNumber":308,"author":{"gitId":"zxgoh"},"content":"}","lastModifiedDate":"2022-03-14"},{"lineNumber":309,"author":{"gitId":"zxgoh"},"content":"","lastModifiedDate":"2022-03-16"}],"authorContributionMap":{"hieunm1821":4,"xzzz3":5,"jaegarpoon":8,"zxgoh":292}},{"path":"src/test/java/seedu/address/logic/commands/ClearCommandTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2017-06-08"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-08"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.assertCommandSuccess;","lastModifiedDate":"2017-07-05"},{"lineNumber":4,"author":{"gitId":"zxgoh"},"content":"import static seedu.address.testutil.TypicalCustomers.getTypicalAddressBook;","lastModifiedDate":"2022-03-14"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-08"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-08"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import seedu.address.model.AddressBook;","lastModifiedDate":"2018-08-08"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2017-06-08"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import seedu.address.model.ModelManager;","lastModifiedDate":"2017-06-08"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import seedu.address.model.UserPrefs;","lastModifiedDate":"2017-06-08"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-08"},{"lineNumber":13,"author":{"gitId":"-"},"content":"public class ClearCommandTest {","lastModifiedDate":"2017-06-08"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-08"},{"lineNumber":15,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-08"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    public void execute_emptyAddressBook_success() {","lastModifiedDate":"2017-08-15"},{"lineNumber":17,"author":{"gitId":"-"},"content":"        Model model \u003d new ModelManager();","lastModifiedDate":"2017-06-08"},{"lineNumber":18,"author":{"gitId":"-"},"content":"        Model expectedModel \u003d new ModelManager();","lastModifiedDate":"2018-08-08"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":20,"author":{"gitId":"-"},"content":"        assertCommandSuccess(new ClearCommand(), model, ClearCommand.MESSAGE_SUCCESS, expectedModel);","lastModifiedDate":"2019-01-25"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-08"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-08"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-08"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    public void execute_nonEmptyAddressBook_success() {","lastModifiedDate":"2017-08-15"},{"lineNumber":25,"author":{"gitId":"-"},"content":"        Model model \u003d new ModelManager(getTypicalAddressBook(), new UserPrefs());","lastModifiedDate":"2017-07-19"},{"lineNumber":26,"author":{"gitId":"-"},"content":"        Model expectedModel \u003d new ModelManager(getTypicalAddressBook(), new UserPrefs());","lastModifiedDate":"2018-08-08"},{"lineNumber":27,"author":{"gitId":"-"},"content":"        expectedModel.setAddressBook(new AddressBook());","lastModifiedDate":"2018-11-27"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":29,"author":{"gitId":"-"},"content":"        assertCommandSuccess(new ClearCommand(), model, ClearCommand.MESSAGE_SUCCESS, expectedModel);","lastModifiedDate":"2019-01-25"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-08"},{"lineNumber":31,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-08"},{"lineNumber":32,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-06-08"}],"authorContributionMap":{"-":31,"zxgoh":1}},{"path":"src/test/java/seedu/address/logic/commands/CommandTestUtil.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2017-06-05"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_ADDRESS;","lastModifiedDate":"2017-07-05"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_EMAIL;","lastModifiedDate":"2017-07-05"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_NAME;","lastModifiedDate":"2017-07-05"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_PHONE;","lastModifiedDate":"2017-07-05"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_TAG;","lastModifiedDate":"2017-07-05"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.Assert.assertThrows;","lastModifiedDate":"2019-03-23"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import java.util.ArrayList;","lastModifiedDate":"2017-06-05"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import java.util.Arrays;","lastModifiedDate":"2017-07-20"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import java.util.List;","lastModifiedDate":"2017-06-05"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":16,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.index.Index;","lastModifiedDate":"2018-01-31"},{"lineNumber":17,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.exceptions.CommandException;","lastModifiedDate":"2017-06-05"},{"lineNumber":18,"author":{"gitId":"-"},"content":"import seedu.address.model.AddressBook;","lastModifiedDate":"2017-06-05"},{"lineNumber":19,"author":{"gitId":"-"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2017-06-05"},{"lineNumber":20,"author":{"gitId":"zxgoh"},"content":"import seedu.address.model.customer.Customer;","lastModifiedDate":"2022-03-14"},{"lineNumber":21,"author":{"gitId":"zxgoh"},"content":"import seedu.address.model.customer.NameCustomerContainsKeywordsPredicate;","lastModifiedDate":"2022-03-15"},{"lineNumber":22,"author":{"gitId":"zxgoh"},"content":"import seedu.address.testutil.EditCustomerDescriptorBuilder;","lastModifiedDate":"2022-03-14"},{"lineNumber":23,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":24,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-06-05"},{"lineNumber":25,"author":{"gitId":"-"},"content":" * Contains helper methods for testing commands.","lastModifiedDate":"2017-06-05"},{"lineNumber":26,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-06-05"},{"lineNumber":27,"author":{"gitId":"-"},"content":"public class CommandTestUtil {","lastModifiedDate":"2017-06-05"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    public static final String VALID_NAME_AMY \u003d \"Amy Bee\";","lastModifiedDate":"2017-07-05"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    public static final String VALID_NAME_BOB \u003d \"Bob Choo\";","lastModifiedDate":"2017-07-05"},{"lineNumber":31,"author":{"gitId":"zxgoh"},"content":"    public static final String VALID_PHONE_AMY \u003d \"81234567\";","lastModifiedDate":"2022-03-31"},{"lineNumber":32,"author":{"gitId":"zxgoh"},"content":"    public static final String VALID_PHONE_BOB \u003d \"91234567\";","lastModifiedDate":"2022-03-31"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    public static final String VALID_EMAIL_AMY \u003d \"amy@example.com\";","lastModifiedDate":"2017-07-05"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    public static final String VALID_EMAIL_BOB \u003d \"bob@example.com\";","lastModifiedDate":"2017-07-05"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    public static final String VALID_ADDRESS_AMY \u003d \"Block 312, Amy Street 1\";","lastModifiedDate":"2017-07-05"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    public static final String VALID_ADDRESS_BOB \u003d \"Block 123, Bobby Street 3\";","lastModifiedDate":"2017-07-05"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    public static final String VALID_TAG_HUSBAND \u003d \"husband\";","lastModifiedDate":"2017-07-05"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    public static final String VALID_TAG_FRIEND \u003d \"friend\";","lastModifiedDate":"2017-07-05"},{"lineNumber":39,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-05"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    public static final String NAME_DESC_AMY \u003d \" \" + PREFIX_NAME + VALID_NAME_AMY;","lastModifiedDate":"2017-07-05"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    public static final String NAME_DESC_BOB \u003d \" \" + PREFIX_NAME + VALID_NAME_BOB;","lastModifiedDate":"2017-07-05"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    public static final String PHONE_DESC_AMY \u003d \" \" + PREFIX_PHONE + VALID_PHONE_AMY;","lastModifiedDate":"2017-07-05"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    public static final String PHONE_DESC_BOB \u003d \" \" + PREFIX_PHONE + VALID_PHONE_BOB;","lastModifiedDate":"2017-07-05"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    public static final String EMAIL_DESC_AMY \u003d \" \" + PREFIX_EMAIL + VALID_EMAIL_AMY;","lastModifiedDate":"2017-07-05"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    public static final String EMAIL_DESC_BOB \u003d \" \" + PREFIX_EMAIL + VALID_EMAIL_BOB;","lastModifiedDate":"2017-07-05"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    public static final String ADDRESS_DESC_AMY \u003d \" \" + PREFIX_ADDRESS + VALID_ADDRESS_AMY;","lastModifiedDate":"2017-07-05"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    public static final String ADDRESS_DESC_BOB \u003d \" \" + PREFIX_ADDRESS + VALID_ADDRESS_BOB;","lastModifiedDate":"2017-07-05"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    public static final String TAG_DESC_FRIEND \u003d \" \" + PREFIX_TAG + VALID_TAG_FRIEND;","lastModifiedDate":"2017-07-05"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    public static final String TAG_DESC_HUSBAND \u003d \" \" + PREFIX_TAG + VALID_TAG_HUSBAND;","lastModifiedDate":"2017-07-05"},{"lineNumber":50,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-05"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    public static final String INVALID_NAME_DESC \u003d \" \" + PREFIX_NAME + \"James\u0026\"; // \u0027\u0026\u0027 not allowed in names","lastModifiedDate":"2017-07-05"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    public static final String INVALID_PHONE_DESC \u003d \" \" + PREFIX_PHONE + \"911a\"; // \u0027a\u0027 not allowed in phones","lastModifiedDate":"2017-07-05"},{"lineNumber":53,"author":{"gitId":"-"},"content":"    public static final String INVALID_EMAIL_DESC \u003d \" \" + PREFIX_EMAIL + \"bob!yahoo\"; // missing \u0027@\u0027 symbol","lastModifiedDate":"2017-07-05"},{"lineNumber":54,"author":{"gitId":"-"},"content":"    public static final String INVALID_ADDRESS_DESC \u003d \" \" + PREFIX_ADDRESS; // empty string not allowed for addresses","lastModifiedDate":"2017-07-05"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    public static final String INVALID_TAG_DESC \u003d \" \" + PREFIX_TAG + \"hubby*\"; // \u0027*\u0027 not allowed in tags","lastModifiedDate":"2017-07-05"},{"lineNumber":56,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-05"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    public static final String PREAMBLE_WHITESPACE \u003d \"\\t  \\r  \\n\";","lastModifiedDate":"2017-12-23"},{"lineNumber":58,"author":{"gitId":"-"},"content":"    public static final String PREAMBLE_NON_EMPTY \u003d \"NonEmptyPreamble\";","lastModifiedDate":"2017-12-23"},{"lineNumber":59,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-12-23"},{"lineNumber":60,"author":{"gitId":"zxgoh"},"content":"    public static final EditCustomerCommand.EditCustomerDescriptor DESC_AMY;","lastModifiedDate":"2022-03-30"},{"lineNumber":61,"author":{"gitId":"zxgoh"},"content":"    public static final EditCustomerCommand.EditCustomerDescriptor DESC_BOB;","lastModifiedDate":"2022-03-30"},{"lineNumber":62,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-05"},{"lineNumber":63,"author":{"gitId":"-"},"content":"    static {","lastModifiedDate":"2017-07-05"},{"lineNumber":64,"author":{"gitId":"zxgoh"},"content":"        DESC_AMY \u003d new EditCustomerDescriptorBuilder().withName(VALID_NAME_AMY)","lastModifiedDate":"2022-03-14"},{"lineNumber":65,"author":{"gitId":"zxgoh"},"content":"                .withPhone(VALID_PHONE_AMY).withAddress(VALID_ADDRESS_AMY)","lastModifiedDate":"2022-03-30"},{"lineNumber":66,"author":{"gitId":"zxgoh"},"content":"                .build();","lastModifiedDate":"2022-03-30"},{"lineNumber":67,"author":{"gitId":"zxgoh"},"content":"        DESC_BOB \u003d new EditCustomerDescriptorBuilder().withName(VALID_NAME_BOB)","lastModifiedDate":"2022-03-14"},{"lineNumber":68,"author":{"gitId":"zxgoh"},"content":"                .withPhone(VALID_PHONE_BOB).withAddress(VALID_ADDRESS_BOB)","lastModifiedDate":"2022-03-30"},{"lineNumber":69,"author":{"gitId":"zxgoh"},"content":"                .build();","lastModifiedDate":"2022-03-30"},{"lineNumber":70,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-07-05"},{"lineNumber":71,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-05"},{"lineNumber":72,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-06-05"},{"lineNumber":73,"author":{"gitId":"-"},"content":"     * Executes the given {@code command}, confirms that \u003cbr\u003e","lastModifiedDate":"2017-06-05"},{"lineNumber":74,"author":{"gitId":"-"},"content":"     * - the returned {@link CommandResult} matches {@code expectedCommandResult} \u003cbr\u003e","lastModifiedDate":"2018-12-09"},{"lineNumber":75,"author":{"gitId":"-"},"content":"     * - the {@code actualModel} matches {@code expectedModel}","lastModifiedDate":"2019-01-25"},{"lineNumber":76,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-06-05"},{"lineNumber":77,"author":{"gitId":"-"},"content":"    public static void assertCommandSuccess(Command command, Model actualModel, CommandResult expectedCommandResult,","lastModifiedDate":"2019-01-25"},{"lineNumber":78,"author":{"gitId":"-"},"content":"            Model expectedModel) {","lastModifiedDate":"2019-01-25"},{"lineNumber":79,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2017-08-15"},{"lineNumber":80,"author":{"gitId":"-"},"content":"            CommandResult result \u003d command.execute(actualModel);","lastModifiedDate":"2019-01-25"},{"lineNumber":81,"author":{"gitId":"-"},"content":"            assertEquals(expectedCommandResult, result);","lastModifiedDate":"2018-12-09"},{"lineNumber":82,"author":{"gitId":"-"},"content":"            assertEquals(expectedModel, actualModel);","lastModifiedDate":"2017-06-05"},{"lineNumber":83,"author":{"gitId":"-"},"content":"        } catch (CommandException ce) {","lastModifiedDate":"2017-08-15"},{"lineNumber":84,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"Execution of command should not fail.\", ce);","lastModifiedDate":"2017-08-15"},{"lineNumber":85,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-08-15"},{"lineNumber":86,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-05"},{"lineNumber":87,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":88,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-12-09"},{"lineNumber":89,"author":{"gitId":"-"},"content":"     * Convenience wrapper to {@link #assertCommandSuccess(Command, Model, CommandResult, Model)}","lastModifiedDate":"2019-01-25"},{"lineNumber":90,"author":{"gitId":"-"},"content":"     * that takes a string {@code expectedMessage}.","lastModifiedDate":"2018-12-09"},{"lineNumber":91,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-12-09"},{"lineNumber":92,"author":{"gitId":"-"},"content":"    public static void assertCommandSuccess(Command command, Model actualModel, String expectedMessage,","lastModifiedDate":"2019-01-25"},{"lineNumber":93,"author":{"gitId":"-"},"content":"            Model expectedModel) {","lastModifiedDate":"2019-01-25"},{"lineNumber":94,"author":{"gitId":"-"},"content":"        CommandResult expectedCommandResult \u003d new CommandResult(expectedMessage);","lastModifiedDate":"2018-12-09"},{"lineNumber":95,"author":{"gitId":"-"},"content":"        assertCommandSuccess(command, actualModel, expectedCommandResult, expectedModel);","lastModifiedDate":"2019-01-25"},{"lineNumber":96,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-12-09"},{"lineNumber":97,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":98,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-06-05"},{"lineNumber":99,"author":{"gitId":"-"},"content":"     * Executes the given {@code command}, confirms that \u003cbr\u003e","lastModifiedDate":"2017-06-05"},{"lineNumber":100,"author":{"gitId":"-"},"content":"     * - a {@code CommandException} is thrown \u003cbr\u003e","lastModifiedDate":"2017-06-05"},{"lineNumber":101,"author":{"gitId":"-"},"content":"     * - the CommandException message matches {@code expectedMessage} \u003cbr\u003e","lastModifiedDate":"2017-06-05"},{"lineNumber":102,"author":{"gitId":"zxgoh"},"content":"     * - the address book, filtered customer list and selected customer in {@code actualModel} remain unchanged","lastModifiedDate":"2022-03-14"},{"lineNumber":103,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-06-05"},{"lineNumber":104,"author":{"gitId":"-"},"content":"    public static void assertCommandFailure(Command command, Model actualModel, String expectedMessage) {","lastModifiedDate":"2019-01-25"},{"lineNumber":105,"author":{"gitId":"-"},"content":"        // we are unable to defensively copy the model for comparison later, so we can","lastModifiedDate":"2017-06-05"},{"lineNumber":106,"author":{"gitId":"-"},"content":"        // only do so by copying its components.","lastModifiedDate":"2017-06-05"},{"lineNumber":107,"author":{"gitId":"-"},"content":"        AddressBook expectedAddressBook \u003d new AddressBook(actualModel.getAddressBook());","lastModifiedDate":"2017-06-05"},{"lineNumber":108,"author":{"gitId":"zxgoh"},"content":"        List\u003cCustomer\u003e expectedFilteredList \u003d new ArrayList\u003c\u003e(actualModel.getFilteredCustomerList());","lastModifiedDate":"2022-03-14"},{"lineNumber":109,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":110,"author":{"gitId":"-"},"content":"        assertThrows(CommandException.class, expectedMessage, () -\u003e command.execute(actualModel));","lastModifiedDate":"2019-05-03"},{"lineNumber":111,"author":{"gitId":"-"},"content":"        assertEquals(expectedAddressBook, actualModel.getAddressBook());","lastModifiedDate":"2017-06-05"},{"lineNumber":112,"author":{"gitId":"zxgoh"},"content":"        assertEquals(expectedFilteredList, actualModel.getFilteredCustomerList());","lastModifiedDate":"2022-03-14"},{"lineNumber":113,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-05"},{"lineNumber":114,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-07-20"},{"lineNumber":115,"author":{"gitId":"zxgoh"},"content":"     * Updates {@code model}\u0027s filtered list to show only the customer at the given {@code targetIndex} in the","lastModifiedDate":"2022-03-14"},{"lineNumber":116,"author":{"gitId":"-"},"content":"     * {@code model}\u0027s address book.","lastModifiedDate":"2018-01-31"},{"lineNumber":117,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-07-20"},{"lineNumber":118,"author":{"gitId":"zxgoh"},"content":"    public static void showCustomerAtIndex(Model model, Index targetIndex) {","lastModifiedDate":"2022-03-14"},{"lineNumber":119,"author":{"gitId":"zxgoh"},"content":"        assertTrue(targetIndex.getZeroBased() \u003c model.getFilteredCustomerList().size());","lastModifiedDate":"2022-03-14"},{"lineNumber":120,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-01-31"},{"lineNumber":121,"author":{"gitId":"zxgoh"},"content":"        Customer customer \u003d model.getFilteredCustomerList().get(targetIndex.getZeroBased());","lastModifiedDate":"2022-03-14"},{"lineNumber":122,"author":{"gitId":"zxgoh"},"content":"        final String[] splitName \u003d customer.getName().fullName.split(\"\\\\s+\");","lastModifiedDate":"2022-03-14"},{"lineNumber":123,"author":{"gitId":"zxgoh"},"content":"        model.updateFilteredCustomerList(new NameCustomerContainsKeywordsPredicate(Arrays.asList(splitName[0])));","lastModifiedDate":"2022-03-15"},{"lineNumber":124,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-20"},{"lineNumber":125,"author":{"gitId":"zxgoh"},"content":"        assertEquals(1, model.getFilteredCustomerList().size());","lastModifiedDate":"2022-03-14"},{"lineNumber":126,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-07-20"},{"lineNumber":127,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":128,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-06-05"}],"authorContributionMap":{"-":105,"zxgoh":23}},{"path":"src/test/java/seedu/address/logic/commands/DeleteCustomerCommandTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"zxgoh"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2022-03-14"},{"lineNumber":2,"author":{"gitId":"zxgoh"},"content":"","lastModifiedDate":"2022-03-14"},{"lineNumber":3,"author":{"gitId":"zxgoh"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2022-03-14"},{"lineNumber":4,"author":{"gitId":"zxgoh"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2022-03-14"},{"lineNumber":5,"author":{"gitId":"zxgoh"},"content":"import static seedu.address.logic.commands.CommandTestUtil.assertCommandFailure;","lastModifiedDate":"2022-03-14"},{"lineNumber":6,"author":{"gitId":"zxgoh"},"content":"import static seedu.address.logic.commands.CommandTestUtil.assertCommandSuccess;","lastModifiedDate":"2022-03-14"},{"lineNumber":7,"author":{"gitId":"zxgoh"},"content":"import static seedu.address.logic.commands.CommandTestUtil.showCustomerAtIndex;","lastModifiedDate":"2022-03-14"},{"lineNumber":8,"author":{"gitId":"zxgoh"},"content":"import static seedu.address.testutil.TypicalCustomers.getTypicalAddressBook;","lastModifiedDate":"2022-03-14"},{"lineNumber":9,"author":{"gitId":"zxgoh"},"content":"import static seedu.address.testutil.TypicalIndexes.INDEX_FIRST_CUSTOMER;","lastModifiedDate":"2022-03-14"},{"lineNumber":10,"author":{"gitId":"zxgoh"},"content":"import static seedu.address.testutil.TypicalIndexes.INDEX_SECOND_CUSTOMER;","lastModifiedDate":"2022-03-14"},{"lineNumber":11,"author":{"gitId":"zxgoh"},"content":"","lastModifiedDate":"2022-03-14"},{"lineNumber":12,"author":{"gitId":"zxgoh"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2022-03-14"},{"lineNumber":13,"author":{"gitId":"zxgoh"},"content":"","lastModifiedDate":"2022-03-14"},{"lineNumber":14,"author":{"gitId":"zxgoh"},"content":"import seedu.address.commons.core.Messages;","lastModifiedDate":"2022-03-14"},{"lineNumber":15,"author":{"gitId":"zxgoh"},"content":"import seedu.address.commons.core.index.Index;","lastModifiedDate":"2022-03-14"},{"lineNumber":16,"author":{"gitId":"zxgoh"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2022-03-14"},{"lineNumber":17,"author":{"gitId":"zxgoh"},"content":"import seedu.address.model.ModelManager;","lastModifiedDate":"2022-03-14"},{"lineNumber":18,"author":{"gitId":"zxgoh"},"content":"import seedu.address.model.UserPrefs;","lastModifiedDate":"2022-03-14"},{"lineNumber":19,"author":{"gitId":"zxgoh"},"content":"import seedu.address.model.customer.Customer;","lastModifiedDate":"2022-03-14"},{"lineNumber":20,"author":{"gitId":"zxgoh"},"content":"","lastModifiedDate":"2022-03-14"},{"lineNumber":21,"author":{"gitId":"zxgoh"},"content":"/**","lastModifiedDate":"2022-03-14"},{"lineNumber":22,"author":{"gitId":"zxgoh"},"content":" * Contains integration tests (interaction with the Model) and unit tests for","lastModifiedDate":"2022-03-14"},{"lineNumber":23,"author":{"gitId":"zxgoh"},"content":" * {@code DeleteCustomerCommand}.","lastModifiedDate":"2022-03-14"},{"lineNumber":24,"author":{"gitId":"zxgoh"},"content":" */","lastModifiedDate":"2022-03-14"},{"lineNumber":25,"author":{"gitId":"zxgoh"},"content":"public class DeleteCustomerCommandTest {","lastModifiedDate":"2022-03-14"},{"lineNumber":26,"author":{"gitId":"zxgoh"},"content":"","lastModifiedDate":"2022-03-14"},{"lineNumber":27,"author":{"gitId":"zxgoh"},"content":"    private final Model model \u003d new ModelManager(getTypicalAddressBook(), new UserPrefs());","lastModifiedDate":"2022-03-16"},{"lineNumber":28,"author":{"gitId":"zxgoh"},"content":"","lastModifiedDate":"2022-03-14"},{"lineNumber":29,"author":{"gitId":"zxgoh"},"content":"    @Test","lastModifiedDate":"2022-03-14"},{"lineNumber":30,"author":{"gitId":"zxgoh"},"content":"    public void execute_validIndexUnfilteredList_success() {","lastModifiedDate":"2022-03-14"},{"lineNumber":31,"author":{"gitId":"zxgoh"},"content":"        Customer customerToDelete \u003d model.getFilteredCustomerList().get(INDEX_FIRST_CUSTOMER.getZeroBased());","lastModifiedDate":"2022-03-14"},{"lineNumber":32,"author":{"gitId":"zxgoh"},"content":"        DeleteCustomerCommand deleteCustomerCommand \u003d new DeleteCustomerCommand(INDEX_FIRST_CUSTOMER);","lastModifiedDate":"2022-03-14"},{"lineNumber":33,"author":{"gitId":"zxgoh"},"content":"","lastModifiedDate":"2022-03-14"},{"lineNumber":34,"author":{"gitId":"zxgoh"},"content":"        String expectedMessage \u003d String.format(DeleteCustomerCommand.MESSAGE_DELETE_CUSTOMER_SUCCESS, customerToDelete);","lastModifiedDate":"2022-03-14"},{"lineNumber":35,"author":{"gitId":"zxgoh"},"content":"","lastModifiedDate":"2022-03-14"},{"lineNumber":36,"author":{"gitId":"zxgoh"},"content":"        ModelManager expectedModel \u003d new ModelManager(model.getAddressBook(), new UserPrefs());","lastModifiedDate":"2022-03-14"},{"lineNumber":37,"author":{"gitId":"zxgoh"},"content":"        expectedModel.deleteCustomer(customerToDelete);","lastModifiedDate":"2022-03-14"},{"lineNumber":38,"author":{"gitId":"zxgoh"},"content":"","lastModifiedDate":"2022-03-14"},{"lineNumber":39,"author":{"gitId":"zxgoh"},"content":"        assertCommandSuccess(deleteCustomerCommand, model, expectedMessage, expectedModel);","lastModifiedDate":"2022-03-14"},{"lineNumber":40,"author":{"gitId":"zxgoh"},"content":"    }","lastModifiedDate":"2022-03-14"},{"lineNumber":41,"author":{"gitId":"zxgoh"},"content":"","lastModifiedDate":"2022-03-14"},{"lineNumber":42,"author":{"gitId":"zxgoh"},"content":"    @Test","lastModifiedDate":"2022-03-14"},{"lineNumber":43,"author":{"gitId":"zxgoh"},"content":"    public void execute_invalidIndexUnfilteredList_throwsCommandException() {","lastModifiedDate":"2022-03-14"},{"lineNumber":44,"author":{"gitId":"zxgoh"},"content":"        Index outOfBoundIndex \u003d Index.fromOneBased(model.getFilteredCustomerList().size() + 1);","lastModifiedDate":"2022-03-14"},{"lineNumber":45,"author":{"gitId":"zxgoh"},"content":"        DeleteCustomerCommand deleteCustomerCommand \u003d new DeleteCustomerCommand(outOfBoundIndex);","lastModifiedDate":"2022-03-14"},{"lineNumber":46,"author":{"gitId":"zxgoh"},"content":"","lastModifiedDate":"2022-03-14"},{"lineNumber":47,"author":{"gitId":"zxgoh"},"content":"        assertCommandFailure(deleteCustomerCommand, model, Messages.MESSAGE_INVALID_CUSTOMER_DISPLAYED_INDEX);","lastModifiedDate":"2022-03-14"},{"lineNumber":48,"author":{"gitId":"zxgoh"},"content":"    }","lastModifiedDate":"2022-03-14"},{"lineNumber":49,"author":{"gitId":"zxgoh"},"content":"","lastModifiedDate":"2022-03-14"},{"lineNumber":50,"author":{"gitId":"zxgoh"},"content":"    @Test","lastModifiedDate":"2022-03-14"},{"lineNumber":51,"author":{"gitId":"zxgoh"},"content":"    public void execute_validIndexFilteredList_success() {","lastModifiedDate":"2022-03-14"},{"lineNumber":52,"author":{"gitId":"zxgoh"},"content":"        showCustomerAtIndex(model, INDEX_FIRST_CUSTOMER);","lastModifiedDate":"2022-03-14"},{"lineNumber":53,"author":{"gitId":"zxgoh"},"content":"","lastModifiedDate":"2022-03-14"},{"lineNumber":54,"author":{"gitId":"zxgoh"},"content":"        Customer customerToDelete \u003d model.getFilteredCustomerList().get(INDEX_FIRST_CUSTOMER.getZeroBased());","lastModifiedDate":"2022-03-14"},{"lineNumber":55,"author":{"gitId":"zxgoh"},"content":"        DeleteCustomerCommand deleteCustomerCommand \u003d new DeleteCustomerCommand(INDEX_FIRST_CUSTOMER);","lastModifiedDate":"2022-03-14"},{"lineNumber":56,"author":{"gitId":"zxgoh"},"content":"","lastModifiedDate":"2022-03-14"},{"lineNumber":57,"author":{"gitId":"zxgoh"},"content":"        String expectedMessage \u003d String.format(DeleteCustomerCommand.MESSAGE_DELETE_CUSTOMER_SUCCESS, customerToDelete);","lastModifiedDate":"2022-03-14"},{"lineNumber":58,"author":{"gitId":"zxgoh"},"content":"","lastModifiedDate":"2022-03-14"},{"lineNumber":59,"author":{"gitId":"zxgoh"},"content":"        Model expectedModel \u003d new ModelManager(model.getAddressBook(), new UserPrefs());","lastModifiedDate":"2022-03-14"},{"lineNumber":60,"author":{"gitId":"zxgoh"},"content":"        expectedModel.deleteCustomer(customerToDelete);","lastModifiedDate":"2022-03-14"},{"lineNumber":61,"author":{"gitId":"zxgoh"},"content":"        showNoCustomer(expectedModel);","lastModifiedDate":"2022-03-14"},{"lineNumber":62,"author":{"gitId":"zxgoh"},"content":"","lastModifiedDate":"2022-03-14"},{"lineNumber":63,"author":{"gitId":"zxgoh"},"content":"        assertCommandSuccess(deleteCustomerCommand, model, expectedMessage, expectedModel);","lastModifiedDate":"2022-03-14"},{"lineNumber":64,"author":{"gitId":"zxgoh"},"content":"    }","lastModifiedDate":"2022-03-14"},{"lineNumber":65,"author":{"gitId":"zxgoh"},"content":"","lastModifiedDate":"2022-03-14"},{"lineNumber":66,"author":{"gitId":"zxgoh"},"content":"    @Test","lastModifiedDate":"2022-03-14"},{"lineNumber":67,"author":{"gitId":"zxgoh"},"content":"    public void execute_invalidIndexFilteredList_throwsCommandException() {","lastModifiedDate":"2022-03-14"},{"lineNumber":68,"author":{"gitId":"zxgoh"},"content":"        showCustomerAtIndex(model, INDEX_FIRST_CUSTOMER);","lastModifiedDate":"2022-03-14"},{"lineNumber":69,"author":{"gitId":"zxgoh"},"content":"","lastModifiedDate":"2022-03-14"},{"lineNumber":70,"author":{"gitId":"zxgoh"},"content":"        Index outOfBoundIndex \u003d INDEX_SECOND_CUSTOMER;","lastModifiedDate":"2022-03-14"},{"lineNumber":71,"author":{"gitId":"zxgoh"},"content":"        // ensures that outOfBoundIndex is still in bounds of address book list","lastModifiedDate":"2022-03-14"},{"lineNumber":72,"author":{"gitId":"zxgoh"},"content":"        assertTrue(outOfBoundIndex.getZeroBased() \u003c model.getAddressBook().getCustomerList().size());","lastModifiedDate":"2022-03-14"},{"lineNumber":73,"author":{"gitId":"zxgoh"},"content":"","lastModifiedDate":"2022-03-14"},{"lineNumber":74,"author":{"gitId":"zxgoh"},"content":"        DeleteCustomerCommand deleteCustomerCommand \u003d new DeleteCustomerCommand(outOfBoundIndex);","lastModifiedDate":"2022-03-14"},{"lineNumber":75,"author":{"gitId":"zxgoh"},"content":"","lastModifiedDate":"2022-03-14"},{"lineNumber":76,"author":{"gitId":"zxgoh"},"content":"        assertCommandFailure(deleteCustomerCommand, model, Messages.MESSAGE_INVALID_CUSTOMER_DISPLAYED_INDEX);","lastModifiedDate":"2022-03-14"},{"lineNumber":77,"author":{"gitId":"zxgoh"},"content":"    }","lastModifiedDate":"2022-03-14"},{"lineNumber":78,"author":{"gitId":"zxgoh"},"content":"","lastModifiedDate":"2022-03-14"},{"lineNumber":79,"author":{"gitId":"zxgoh"},"content":"    @Test","lastModifiedDate":"2022-03-14"},{"lineNumber":80,"author":{"gitId":"zxgoh"},"content":"    public void equals() {","lastModifiedDate":"2022-03-14"},{"lineNumber":81,"author":{"gitId":"zxgoh"},"content":"        DeleteCustomerCommand deleteFirstCommand \u003d new DeleteCustomerCommand(INDEX_FIRST_CUSTOMER);","lastModifiedDate":"2022-03-14"},{"lineNumber":82,"author":{"gitId":"zxgoh"},"content":"        DeleteCustomerCommand deleteSecondCommand \u003d new DeleteCustomerCommand(INDEX_SECOND_CUSTOMER);","lastModifiedDate":"2022-03-14"},{"lineNumber":83,"author":{"gitId":"zxgoh"},"content":"","lastModifiedDate":"2022-03-14"},{"lineNumber":84,"author":{"gitId":"zxgoh"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2022-03-14"},{"lineNumber":85,"author":{"gitId":"zxgoh"},"content":"        assertTrue(deleteFirstCommand.equals(deleteFirstCommand));","lastModifiedDate":"2022-03-14"},{"lineNumber":86,"author":{"gitId":"zxgoh"},"content":"","lastModifiedDate":"2022-03-14"},{"lineNumber":87,"author":{"gitId":"zxgoh"},"content":"        // same values -\u003e returns true","lastModifiedDate":"2022-03-14"},{"lineNumber":88,"author":{"gitId":"zxgoh"},"content":"        DeleteCustomerCommand deleteFirstCommandCopy \u003d new DeleteCustomerCommand(INDEX_FIRST_CUSTOMER);","lastModifiedDate":"2022-03-14"},{"lineNumber":89,"author":{"gitId":"zxgoh"},"content":"        assertTrue(deleteFirstCommand.equals(deleteFirstCommandCopy));","lastModifiedDate":"2022-03-14"},{"lineNumber":90,"author":{"gitId":"zxgoh"},"content":"","lastModifiedDate":"2022-03-14"},{"lineNumber":91,"author":{"gitId":"zxgoh"},"content":"        // different types -\u003e returns false","lastModifiedDate":"2022-03-14"},{"lineNumber":92,"author":{"gitId":"zxgoh"},"content":"        assertFalse(deleteFirstCommand.equals(1));","lastModifiedDate":"2022-03-14"},{"lineNumber":93,"author":{"gitId":"zxgoh"},"content":"","lastModifiedDate":"2022-03-14"},{"lineNumber":94,"author":{"gitId":"zxgoh"},"content":"        // null -\u003e returns false","lastModifiedDate":"2022-03-14"},{"lineNumber":95,"author":{"gitId":"zxgoh"},"content":"        assertFalse(deleteFirstCommand.equals(null));","lastModifiedDate":"2022-03-14"},{"lineNumber":96,"author":{"gitId":"zxgoh"},"content":"","lastModifiedDate":"2022-03-14"},{"lineNumber":97,"author":{"gitId":"zxgoh"},"content":"        // different customer -\u003e returns false","lastModifiedDate":"2022-03-14"},{"lineNumber":98,"author":{"gitId":"zxgoh"},"content":"        assertFalse(deleteFirstCommand.equals(deleteSecondCommand));","lastModifiedDate":"2022-03-14"},{"lineNumber":99,"author":{"gitId":"zxgoh"},"content":"    }","lastModifiedDate":"2022-03-14"},{"lineNumber":100,"author":{"gitId":"zxgoh"},"content":"","lastModifiedDate":"2022-03-14"},{"lineNumber":101,"author":{"gitId":"zxgoh"},"content":"    /**","lastModifiedDate":"2022-03-14"},{"lineNumber":102,"author":{"gitId":"zxgoh"},"content":"     * Updates {@code model}\u0027s filtered list to show no one.","lastModifiedDate":"2022-03-14"},{"lineNumber":103,"author":{"gitId":"zxgoh"},"content":"     */","lastModifiedDate":"2022-03-14"},{"lineNumber":104,"author":{"gitId":"zxgoh"},"content":"    private void showNoCustomer(Model model) {","lastModifiedDate":"2022-03-14"},{"lineNumber":105,"author":{"gitId":"zxgoh"},"content":"        model.updateFilteredCustomerList(p -\u003e false);","lastModifiedDate":"2022-03-14"},{"lineNumber":106,"author":{"gitId":"zxgoh"},"content":"","lastModifiedDate":"2022-03-14"},{"lineNumber":107,"author":{"gitId":"zxgoh"},"content":"        assertTrue(model.getFilteredCustomerList().isEmpty());","lastModifiedDate":"2022-03-14"},{"lineNumber":108,"author":{"gitId":"zxgoh"},"content":"    }","lastModifiedDate":"2022-03-14"},{"lineNumber":109,"author":{"gitId":"zxgoh"},"content":"}","lastModifiedDate":"2022-03-14"}],"authorContributionMap":{"zxgoh":109}},{"path":"src/test/java/seedu/address/logic/commands/EditCustomerCommandTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2017-05-08"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-08"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.DESC_AMY;","lastModifiedDate":"2017-07-05"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.DESC_BOB;","lastModifiedDate":"2017-07-05"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_NAME_BOB;","lastModifiedDate":"2017-07-05"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_PHONE_BOB;","lastModifiedDate":"2017-07-05"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.assertCommandFailure;","lastModifiedDate":"2017-07-05"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.assertCommandSuccess;","lastModifiedDate":"2017-07-05"},{"lineNumber":11,"author":{"gitId":"zxgoh"},"content":"import static seedu.address.logic.commands.CommandTestUtil.showCustomerAtIndex;","lastModifiedDate":"2022-03-14"},{"lineNumber":12,"author":{"gitId":"zxgoh"},"content":"import static seedu.address.testutil.TypicalCustomers.getTypicalAddressBook;","lastModifiedDate":"2022-03-14"},{"lineNumber":13,"author":{"gitId":"zxgoh"},"content":"import static seedu.address.testutil.TypicalIndexes.INDEX_FIRST_CUSTOMER;","lastModifiedDate":"2022-03-14"},{"lineNumber":14,"author":{"gitId":"zxgoh"},"content":"import static seedu.address.testutil.TypicalIndexes.INDEX_SECOND_CUSTOMER;","lastModifiedDate":"2022-03-14"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-08"},{"lineNumber":16,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-08"},{"lineNumber":18,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.Messages;","lastModifiedDate":"2017-05-04"},{"lineNumber":19,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.index.Index;","lastModifiedDate":"2017-05-25"},{"lineNumber":20,"author":{"gitId":"-"},"content":"import seedu.address.model.AddressBook;","lastModifiedDate":"2017-05-04"},{"lineNumber":21,"author":{"gitId":"-"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2017-05-04"},{"lineNumber":22,"author":{"gitId":"-"},"content":"import seedu.address.model.ModelManager;","lastModifiedDate":"2017-05-04"},{"lineNumber":23,"author":{"gitId":"-"},"content":"import seedu.address.model.UserPrefs;","lastModifiedDate":"2017-05-04"},{"lineNumber":24,"author":{"gitId":"zxgoh"},"content":"import seedu.address.model.customer.Customer;","lastModifiedDate":"2022-03-14"},{"lineNumber":25,"author":{"gitId":"zxgoh"},"content":"import seedu.address.testutil.CustomerBuilder;","lastModifiedDate":"2022-03-14"},{"lineNumber":26,"author":{"gitId":"zxgoh"},"content":"import seedu.address.testutil.EditCustomerDescriptorBuilder;","lastModifiedDate":"2022-03-14"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-08"},{"lineNumber":28,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-05-04"},{"lineNumber":29,"author":{"gitId":"zxgoh"},"content":" * Contains integration tests (interaction with the Model) and unit tests for EditCustomerCommand.","lastModifiedDate":"2022-03-30"},{"lineNumber":30,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-05-04"},{"lineNumber":31,"author":{"gitId":"zxgoh"},"content":"public class EditCustomerCommandTest {","lastModifiedDate":"2022-03-30"},{"lineNumber":32,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-08"},{"lineNumber":33,"author":{"gitId":"zxgoh"},"content":"    private final Model model \u003d new ModelManager(getTypicalAddressBook(), new UserPrefs());","lastModifiedDate":"2022-03-16"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-04"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    public void execute_allFieldsSpecifiedUnfilteredList_success() {","lastModifiedDate":"2018-08-07"},{"lineNumber":37,"author":{"gitId":"zxgoh"},"content":"        Customer editedCustomer \u003d new CustomerBuilder().build();","lastModifiedDate":"2022-03-14"},{"lineNumber":38,"author":{"gitId":"zxgoh"},"content":"        EditCustomerCommand.EditCustomerDescriptor descriptor \u003d","lastModifiedDate":"2022-03-30"},{"lineNumber":39,"author":{"gitId":"zxgoh"},"content":"                new EditCustomerDescriptorBuilder(editedCustomer).build();","lastModifiedDate":"2022-03-30"},{"lineNumber":40,"author":{"gitId":"zxgoh"},"content":"        EditCustomerCommand editCustomerCommand \u003d new EditCustomerCommand(INDEX_FIRST_CUSTOMER, descriptor);","lastModifiedDate":"2022-03-30"},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":42,"author":{"gitId":"zxgoh"},"content":"        String expectedMessage \u003d String.format(EditCustomerCommand.MESSAGE_EDIT_CUSTOMER_SUCCESS, editedCustomer);","lastModifiedDate":"2022-03-30"},{"lineNumber":43,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        Model expectedModel \u003d new ModelManager(new AddressBook(model.getAddressBook()), new UserPrefs());","lastModifiedDate":"2017-06-05"},{"lineNumber":45,"author":{"gitId":"zxgoh"},"content":"        expectedModel.setCustomer(model.getFilteredCustomerList().get(0), editedCustomer);","lastModifiedDate":"2022-03-14"},{"lineNumber":46,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":47,"author":{"gitId":"zxgoh"},"content":"        assertCommandSuccess(editCustomerCommand, model, expectedMessage, expectedModel);","lastModifiedDate":"2022-03-30"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-04"},{"lineNumber":49,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-04"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    public void execute_someFieldsSpecifiedUnfilteredList_success() {","lastModifiedDate":"2018-08-07"},{"lineNumber":52,"author":{"gitId":"zxgoh"},"content":"        Index indexLastCustomer \u003d Index.fromOneBased(model.getFilteredCustomerList().size());","lastModifiedDate":"2022-03-14"},{"lineNumber":53,"author":{"gitId":"zxgoh"},"content":"        Customer lastCustomer \u003d model.getFilteredCustomerList().get(indexLastCustomer.getZeroBased());","lastModifiedDate":"2022-03-14"},{"lineNumber":54,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-18"},{"lineNumber":55,"author":{"gitId":"zxgoh"},"content":"        CustomerBuilder customerInList \u003d new CustomerBuilder(lastCustomer);","lastModifiedDate":"2022-03-14"},{"lineNumber":56,"author":{"gitId":"zxgoh"},"content":"        Customer editedCustomer \u003d customerInList.withName(VALID_NAME_BOB).withPhone(VALID_PHONE_BOB).build();","lastModifiedDate":"2022-03-14"},{"lineNumber":57,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-18"},{"lineNumber":58,"author":{"gitId":"zxgoh"},"content":"        EditCustomerCommand.EditCustomerDescriptor descriptor \u003d","lastModifiedDate":"2022-03-30"},{"lineNumber":59,"author":{"gitId":"zxgoh"},"content":"                new EditCustomerDescriptorBuilder().withName(VALID_NAME_BOB)","lastModifiedDate":"2022-03-30"},{"lineNumber":60,"author":{"gitId":"zxgoh"},"content":"                .withPhone(VALID_PHONE_BOB).build();","lastModifiedDate":"2022-03-30"},{"lineNumber":61,"author":{"gitId":"zxgoh"},"content":"        EditCustomerCommand editCustomerCommand \u003d new EditCustomerCommand(indexLastCustomer, descriptor);","lastModifiedDate":"2022-03-30"},{"lineNumber":62,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-18"},{"lineNumber":63,"author":{"gitId":"zxgoh"},"content":"        String expectedMessage \u003d String.format(EditCustomerCommand.MESSAGE_EDIT_CUSTOMER_SUCCESS, editedCustomer);","lastModifiedDate":"2022-03-30"},{"lineNumber":64,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-18"},{"lineNumber":65,"author":{"gitId":"-"},"content":"        Model expectedModel \u003d new ModelManager(new AddressBook(model.getAddressBook()), new UserPrefs());","lastModifiedDate":"2017-05-18"},{"lineNumber":66,"author":{"gitId":"zxgoh"},"content":"        expectedModel.setCustomer(lastCustomer, editedCustomer);","lastModifiedDate":"2022-03-14"},{"lineNumber":67,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-18"},{"lineNumber":68,"author":{"gitId":"zxgoh"},"content":"        assertCommandSuccess(editCustomerCommand, model, expectedMessage, expectedModel);","lastModifiedDate":"2022-03-30"},{"lineNumber":69,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-18"},{"lineNumber":70,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-18"},{"lineNumber":71,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-18"},{"lineNumber":72,"author":{"gitId":"-"},"content":"    public void execute_noFieldSpecifiedUnfilteredList_success() {","lastModifiedDate":"2017-08-15"},{"lineNumber":73,"author":{"gitId":"zxgoh"},"content":"        EditCustomerCommand editCustomerCommand \u003d new EditCustomerCommand(INDEX_FIRST_CUSTOMER,","lastModifiedDate":"2022-03-30"},{"lineNumber":74,"author":{"gitId":"zxgoh"},"content":"                new EditCustomerCommand.EditCustomerDescriptor());","lastModifiedDate":"2022-03-30"},{"lineNumber":75,"author":{"gitId":"zxgoh"},"content":"        Customer editedCustomer \u003d model.getFilteredCustomerList().get(INDEX_FIRST_CUSTOMER.getZeroBased());","lastModifiedDate":"2022-03-14"},{"lineNumber":76,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-18"},{"lineNumber":77,"author":{"gitId":"zxgoh"},"content":"        String expectedMessage \u003d String.format(EditCustomerCommand.MESSAGE_EDIT_CUSTOMER_SUCCESS, editedCustomer);","lastModifiedDate":"2022-03-30"},{"lineNumber":78,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-18"},{"lineNumber":79,"author":{"gitId":"-"},"content":"        Model expectedModel \u003d new ModelManager(new AddressBook(model.getAddressBook()), new UserPrefs());","lastModifiedDate":"2017-05-18"},{"lineNumber":80,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-18"},{"lineNumber":81,"author":{"gitId":"zxgoh"},"content":"        assertCommandSuccess(editCustomerCommand, model, expectedMessage, expectedModel);","lastModifiedDate":"2022-03-30"},{"lineNumber":82,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-18"},{"lineNumber":83,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-18"},{"lineNumber":84,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-18"},{"lineNumber":85,"author":{"gitId":"-"},"content":"    public void execute_filteredList_success() {","lastModifiedDate":"2018-08-07"},{"lineNumber":86,"author":{"gitId":"zxgoh"},"content":"        showCustomerAtIndex(model, INDEX_FIRST_CUSTOMER);","lastModifiedDate":"2022-03-14"},{"lineNumber":87,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-18"},{"lineNumber":88,"author":{"gitId":"zxgoh"},"content":"        Customer customerInFilteredList \u003d model.getFilteredCustomerList().get(INDEX_FIRST_CUSTOMER.getZeroBased());","lastModifiedDate":"2022-03-14"},{"lineNumber":89,"author":{"gitId":"zxgoh"},"content":"        Customer editedCustomer \u003d new CustomerBuilder(customerInFilteredList).withName(VALID_NAME_BOB).build();","lastModifiedDate":"2022-03-14"},{"lineNumber":90,"author":{"gitId":"zxgoh"},"content":"        EditCustomerCommand editCustomerCommand \u003d new EditCustomerCommand(INDEX_FIRST_CUSTOMER,","lastModifiedDate":"2022-03-30"},{"lineNumber":91,"author":{"gitId":"zxgoh"},"content":"                new EditCustomerDescriptorBuilder().withName(VALID_NAME_BOB).build());","lastModifiedDate":"2022-03-14"},{"lineNumber":92,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-18"},{"lineNumber":93,"author":{"gitId":"zxgoh"},"content":"        String expectedMessage \u003d String.format(EditCustomerCommand.MESSAGE_EDIT_CUSTOMER_SUCCESS, editedCustomer);","lastModifiedDate":"2022-03-30"},{"lineNumber":94,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-18"},{"lineNumber":95,"author":{"gitId":"-"},"content":"        Model expectedModel \u003d new ModelManager(new AddressBook(model.getAddressBook()), new UserPrefs());","lastModifiedDate":"2017-05-18"},{"lineNumber":96,"author":{"gitId":"zxgoh"},"content":"        expectedModel.setCustomer(model.getFilteredCustomerList().get(0), editedCustomer);","lastModifiedDate":"2022-03-14"},{"lineNumber":97,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-18"},{"lineNumber":98,"author":{"gitId":"zxgoh"},"content":"        assertCommandSuccess(editCustomerCommand, model, expectedMessage, expectedModel);","lastModifiedDate":"2022-03-30"},{"lineNumber":99,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-18"},{"lineNumber":100,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-18"},{"lineNumber":101,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-18"},{"lineNumber":102,"author":{"gitId":"zxgoh"},"content":"    public void execute_duplicateCustomerUnfilteredList_failure() {","lastModifiedDate":"2022-03-14"},{"lineNumber":103,"author":{"gitId":"zxgoh"},"content":"        Customer firstCustomer \u003d model.getFilteredCustomerList().get(INDEX_FIRST_CUSTOMER.getZeroBased());","lastModifiedDate":"2022-03-14"},{"lineNumber":104,"author":{"gitId":"zxgoh"},"content":"        EditCustomerCommand.EditCustomerDescriptor descriptor \u003d","lastModifiedDate":"2022-03-30"},{"lineNumber":105,"author":{"gitId":"zxgoh"},"content":"                new EditCustomerDescriptorBuilder(firstCustomer).build();","lastModifiedDate":"2022-03-30"},{"lineNumber":106,"author":{"gitId":"zxgoh"},"content":"        EditCustomerCommand editCustomerCommand \u003d new EditCustomerCommand(INDEX_SECOND_CUSTOMER, descriptor);","lastModifiedDate":"2022-03-30"},{"lineNumber":107,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":108,"author":{"gitId":"zxgoh"},"content":"        assertCommandFailure(editCustomerCommand, model, EditCustomerCommand.MESSAGE_DUPLICATE_CUSTOMER);","lastModifiedDate":"2022-03-30"},{"lineNumber":109,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-04"},{"lineNumber":110,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":111,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-04"},{"lineNumber":112,"author":{"gitId":"zxgoh"},"content":"    public void execute_duplicateCustomerFilteredList_failure() {","lastModifiedDate":"2022-03-14"},{"lineNumber":113,"author":{"gitId":"zxgoh"},"content":"        showCustomerAtIndex(model, INDEX_FIRST_CUSTOMER);","lastModifiedDate":"2022-03-14"},{"lineNumber":114,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-18"},{"lineNumber":115,"author":{"gitId":"zxgoh"},"content":"        // edit customer in filtered list into a duplicate in address book","lastModifiedDate":"2022-03-14"},{"lineNumber":116,"author":{"gitId":"zxgoh"},"content":"        Customer customerInList \u003d model.getAddressBook().getCustomerList().get(INDEX_SECOND_CUSTOMER.getZeroBased());","lastModifiedDate":"2022-03-14"},{"lineNumber":117,"author":{"gitId":"zxgoh"},"content":"        EditCustomerCommand editCustomerCommand \u003d new EditCustomerCommand(INDEX_FIRST_CUSTOMER,","lastModifiedDate":"2022-03-30"},{"lineNumber":118,"author":{"gitId":"zxgoh"},"content":"                new EditCustomerDescriptorBuilder(customerInList).build());","lastModifiedDate":"2022-03-14"},{"lineNumber":119,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":120,"author":{"gitId":"zxgoh"},"content":"        assertCommandFailure(editCustomerCommand, model, EditCustomerCommand.MESSAGE_DUPLICATE_CUSTOMER);","lastModifiedDate":"2022-03-30"},{"lineNumber":121,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-18"},{"lineNumber":122,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-18"},{"lineNumber":123,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-18"},{"lineNumber":124,"author":{"gitId":"zxgoh"},"content":"    public void execute_invalidCustomerIndexUnfilteredList_failure() {","lastModifiedDate":"2022-03-14"},{"lineNumber":125,"author":{"gitId":"zxgoh"},"content":"        Index outOfBoundIndex \u003d Index.fromOneBased(model.getFilteredCustomerList().size() + 1);","lastModifiedDate":"2022-03-14"},{"lineNumber":126,"author":{"gitId":"zxgoh"},"content":"        EditCustomerCommand.EditCustomerDescriptor descriptor \u003d","lastModifiedDate":"2022-03-30"},{"lineNumber":127,"author":{"gitId":"zxgoh"},"content":"                new EditCustomerDescriptorBuilder().withName(VALID_NAME_BOB).build();","lastModifiedDate":"2022-03-30"},{"lineNumber":128,"author":{"gitId":"zxgoh"},"content":"        EditCustomerCommand editCustomerCommand \u003d new EditCustomerCommand(outOfBoundIndex, descriptor);","lastModifiedDate":"2022-03-30"},{"lineNumber":129,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":130,"author":{"gitId":"zxgoh"},"content":"        assertCommandFailure(editCustomerCommand, model, Messages.MESSAGE_INVALID_CUSTOMER_DISPLAYED_INDEX);","lastModifiedDate":"2022-03-30"},{"lineNumber":131,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-04"},{"lineNumber":132,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":133,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-05-18"},{"lineNumber":134,"author":{"gitId":"-"},"content":"     * Edit filtered list where index is larger than size of filtered list,","lastModifiedDate":"2017-05-18"},{"lineNumber":135,"author":{"gitId":"-"},"content":"     * but smaller than size of address book","lastModifiedDate":"2017-05-18"},{"lineNumber":136,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-05-18"},{"lineNumber":137,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-18"},{"lineNumber":138,"author":{"gitId":"zxgoh"},"content":"    public void execute_invalidCustomerIndexFilteredList_failure() {","lastModifiedDate":"2022-03-14"},{"lineNumber":139,"author":{"gitId":"zxgoh"},"content":"        showCustomerAtIndex(model, INDEX_FIRST_CUSTOMER);","lastModifiedDate":"2022-03-14"},{"lineNumber":140,"author":{"gitId":"zxgoh"},"content":"        Index outOfBoundIndex \u003d INDEX_SECOND_CUSTOMER;","lastModifiedDate":"2022-03-14"},{"lineNumber":141,"author":{"gitId":"-"},"content":"        // ensures that outOfBoundIndex is still in bounds of address book list","lastModifiedDate":"2017-05-18"},{"lineNumber":142,"author":{"gitId":"zxgoh"},"content":"        assertTrue(outOfBoundIndex.getZeroBased() \u003c model.getAddressBook().getCustomerList().size());","lastModifiedDate":"2022-03-14"},{"lineNumber":143,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-18"},{"lineNumber":144,"author":{"gitId":"zxgoh"},"content":"        EditCustomerCommand editCustomerCommand \u003d new EditCustomerCommand(outOfBoundIndex,","lastModifiedDate":"2022-03-30"},{"lineNumber":145,"author":{"gitId":"zxgoh"},"content":"                new EditCustomerDescriptorBuilder().withName(VALID_NAME_BOB).build());","lastModifiedDate":"2022-03-14"},{"lineNumber":146,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":147,"author":{"gitId":"zxgoh"},"content":"        assertCommandFailure(editCustomerCommand, model, Messages.MESSAGE_INVALID_CUSTOMER_DISPLAYED_INDEX);","lastModifiedDate":"2022-03-30"},{"lineNumber":148,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-18"},{"lineNumber":149,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-18"},{"lineNumber":150,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-01-23"},{"lineNumber":151,"author":{"gitId":"-"},"content":"    public void equals() {","lastModifiedDate":"2018-08-08"},{"lineNumber":152,"author":{"gitId":"zxgoh"},"content":"        final EditCustomerCommand standardCommand \u003d new EditCustomerCommand(INDEX_FIRST_CUSTOMER, DESC_AMY);","lastModifiedDate":"2022-03-30"},{"lineNumber":153,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-08"},{"lineNumber":154,"author":{"gitId":"-"},"content":"        // same values -\u003e returns true","lastModifiedDate":"2017-05-08"},{"lineNumber":155,"author":{"gitId":"zxgoh"},"content":"        EditCustomerCommand.EditCustomerDescriptor copyDescriptor \u003d","lastModifiedDate":"2022-03-30"},{"lineNumber":156,"author":{"gitId":"zxgoh"},"content":"                new EditCustomerCommand.EditCustomerDescriptor(DESC_AMY);","lastModifiedDate":"2022-03-30"},{"lineNumber":157,"author":{"gitId":"zxgoh"},"content":"        EditCustomerCommand commandWithSameValues \u003d new EditCustomerCommand(INDEX_FIRST_CUSTOMER, copyDescriptor);","lastModifiedDate":"2022-03-30"},{"lineNumber":158,"author":{"gitId":"-"},"content":"        assertTrue(standardCommand.equals(commandWithSameValues));","lastModifiedDate":"2017-05-08"},{"lineNumber":159,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-08"},{"lineNumber":160,"author":{"gitId":"-"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2017-05-08"},{"lineNumber":161,"author":{"gitId":"-"},"content":"        assertTrue(standardCommand.equals(standardCommand));","lastModifiedDate":"2017-05-08"},{"lineNumber":162,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-08"},{"lineNumber":163,"author":{"gitId":"-"},"content":"        // null -\u003e returns false","lastModifiedDate":"2017-05-08"},{"lineNumber":164,"author":{"gitId":"-"},"content":"        assertFalse(standardCommand.equals(null));","lastModifiedDate":"2017-05-08"},{"lineNumber":165,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-08"},{"lineNumber":166,"author":{"gitId":"-"},"content":"        // different types -\u003e returns false","lastModifiedDate":"2017-05-08"},{"lineNumber":167,"author":{"gitId":"-"},"content":"        assertFalse(standardCommand.equals(new ClearCommand()));","lastModifiedDate":"2017-05-08"},{"lineNumber":168,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-08"},{"lineNumber":169,"author":{"gitId":"-"},"content":"        // different index -\u003e returns false","lastModifiedDate":"2017-05-08"},{"lineNumber":170,"author":{"gitId":"zxgoh"},"content":"        assertFalse(standardCommand.equals(new EditCustomerCommand(INDEX_SECOND_CUSTOMER, DESC_AMY)));","lastModifiedDate":"2022-03-30"},{"lineNumber":171,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-08"},{"lineNumber":172,"author":{"gitId":"-"},"content":"        // different descriptor -\u003e returns false","lastModifiedDate":"2017-05-08"},{"lineNumber":173,"author":{"gitId":"zxgoh"},"content":"        assertFalse(standardCommand.equals(new EditCustomerCommand(INDEX_FIRST_CUSTOMER, DESC_BOB)));","lastModifiedDate":"2022-03-30"},{"lineNumber":174,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-08"},{"lineNumber":175,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":176,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-05-08"}],"authorContributionMap":{"-":103,"zxgoh":73}},{"path":"src/test/java/seedu/address/logic/commands/EditCustomerDescriptorTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2022-03-14"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-03-14"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2022-03-14"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2022-03-14"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.DESC_AMY;","lastModifiedDate":"2022-03-14"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.DESC_BOB;","lastModifiedDate":"2022-03-14"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_ADDRESS_BOB;","lastModifiedDate":"2022-03-14"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_NAME_BOB;","lastModifiedDate":"2022-03-14"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_PHONE_BOB;","lastModifiedDate":"2022-03-14"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-03-14"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2022-03-14"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-03-14"},{"lineNumber":13,"author":{"gitId":"zxgoh"},"content":"import seedu.address.testutil.EditCustomerDescriptorBuilder;","lastModifiedDate":"2022-03-14"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-03-14"},{"lineNumber":15,"author":{"gitId":"zxgoh"},"content":"public class EditCustomerDescriptorTest {","lastModifiedDate":"2022-03-30"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-03-14"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2022-03-14"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    public void equals() {","lastModifiedDate":"2022-03-14"},{"lineNumber":19,"author":{"gitId":"-"},"content":"        // same values -\u003e returns true","lastModifiedDate":"2022-03-14"},{"lineNumber":20,"author":{"gitId":"zxgoh"},"content":"        EditCustomerCommand.EditCustomerDescriptor descriptorWithSameValues \u003d","lastModifiedDate":"2022-03-30"},{"lineNumber":21,"author":{"gitId":"zxgoh"},"content":"                new EditCustomerCommand.EditCustomerDescriptor(DESC_AMY);","lastModifiedDate":"2022-03-30"},{"lineNumber":22,"author":{"gitId":"-"},"content":"        assertTrue(DESC_AMY.equals(descriptorWithSameValues));","lastModifiedDate":"2022-03-14"},{"lineNumber":23,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-03-14"},{"lineNumber":24,"author":{"gitId":"-"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2022-03-14"},{"lineNumber":25,"author":{"gitId":"-"},"content":"        assertTrue(DESC_AMY.equals(DESC_AMY));","lastModifiedDate":"2022-03-14"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-03-14"},{"lineNumber":27,"author":{"gitId":"-"},"content":"        // null -\u003e returns false","lastModifiedDate":"2022-03-14"},{"lineNumber":28,"author":{"gitId":"-"},"content":"        assertFalse(DESC_AMY.equals(null));","lastModifiedDate":"2022-03-14"},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-03-14"},{"lineNumber":30,"author":{"gitId":"-"},"content":"        // different types -\u003e returns false","lastModifiedDate":"2022-03-14"},{"lineNumber":31,"author":{"gitId":"-"},"content":"        assertFalse(DESC_AMY.equals(5));","lastModifiedDate":"2022-03-14"},{"lineNumber":32,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-03-14"},{"lineNumber":33,"author":{"gitId":"-"},"content":"        // different values -\u003e returns false","lastModifiedDate":"2022-03-14"},{"lineNumber":34,"author":{"gitId":"-"},"content":"        assertFalse(DESC_AMY.equals(DESC_BOB));","lastModifiedDate":"2022-03-14"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-03-14"},{"lineNumber":36,"author":{"gitId":"-"},"content":"        // different name -\u003e returns false","lastModifiedDate":"2022-03-14"},{"lineNumber":37,"author":{"gitId":"zxgoh"},"content":"        EditCustomerCommand.EditCustomerDescriptor editedAmy \u003d new EditCustomerDescriptorBuilder(DESC_AMY)","lastModifiedDate":"2022-03-30"},{"lineNumber":38,"author":{"gitId":"zxgoh"},"content":"                .withName(VALID_NAME_BOB).build();","lastModifiedDate":"2022-03-16"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        assertFalse(DESC_AMY.equals(editedAmy));","lastModifiedDate":"2022-03-14"},{"lineNumber":40,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-03-14"},{"lineNumber":41,"author":{"gitId":"-"},"content":"        // different phone -\u003e returns false","lastModifiedDate":"2022-03-14"},{"lineNumber":42,"author":{"gitId":"zxgoh"},"content":"        editedAmy \u003d new EditCustomerDescriptorBuilder(DESC_AMY).withPhone(VALID_PHONE_BOB).build();","lastModifiedDate":"2022-03-14"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        assertFalse(DESC_AMY.equals(editedAmy));","lastModifiedDate":"2022-03-14"},{"lineNumber":44,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-03-14"},{"lineNumber":45,"author":{"gitId":"-"},"content":"        // different address -\u003e returns false","lastModifiedDate":"2022-03-14"},{"lineNumber":46,"author":{"gitId":"zxgoh"},"content":"        editedAmy \u003d new EditCustomerDescriptorBuilder(DESC_AMY).withAddress(VALID_ADDRESS_BOB).build();","lastModifiedDate":"2022-03-14"},{"lineNumber":47,"author":{"gitId":"-"},"content":"        assertFalse(DESC_AMY.equals(editedAmy));","lastModifiedDate":"2022-03-14"},{"lineNumber":48,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-03-14"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2022-03-14"},{"lineNumber":50,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2022-03-14"}],"authorContributionMap":{"-":42,"zxgoh":8}},{"path":"src/test/java/seedu/address/logic/commands/ExitCommandTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2017-06-08"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-08"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.assertCommandSuccess;","lastModifiedDate":"2018-12-09"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.ExitCommand.MESSAGE_EXIT_ACKNOWLEDGEMENT;","lastModifiedDate":"2017-06-08"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-08"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-08"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2018-08-08"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import seedu.address.model.ModelManager;","lastModifiedDate":"2018-08-08"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-08"},{"lineNumber":11,"author":{"gitId":"-"},"content":"public class ExitCommandTest {","lastModifiedDate":"2017-06-08"},{"lineNumber":12,"author":{"gitId":"zxgoh"},"content":"    private final Model model \u003d new ModelManager();","lastModifiedDate":"2022-03-16"},{"lineNumber":13,"author":{"gitId":"zxgoh"},"content":"    private final Model expectedModel \u003d new ModelManager();","lastModifiedDate":"2022-03-16"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":15,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-08"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    public void execute_exit_success() {","lastModifiedDate":"2017-06-08"},{"lineNumber":17,"author":{"gitId":"-"},"content":"        CommandResult expectedCommandResult \u003d new CommandResult(MESSAGE_EXIT_ACKNOWLEDGEMENT, false, true);","lastModifiedDate":"2018-12-09"},{"lineNumber":18,"author":{"gitId":"-"},"content":"        assertCommandSuccess(new ExitCommand(), model, expectedCommandResult, expectedModel);","lastModifiedDate":"2019-01-25"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-08"},{"lineNumber":20,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-06-08"}],"authorContributionMap":{"-":18,"zxgoh":2}},{"path":"src/test/java/seedu/address/logic/commands/FindCommandTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2017-06-12"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2019-03-15"},{"lineNumber":6,"author":{"gitId":"zxgoh"},"content":"import static seedu.address.commons.core.Messages.MESSAGE_CUSTOMERS_LISTED_OVERVIEW;","lastModifiedDate":"2022-03-14"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.assertCommandSuccess;","lastModifiedDate":"2018-08-08"},{"lineNumber":8,"author":{"gitId":"zxgoh"},"content":"import static seedu.address.testutil.TypicalCustomers.CARL;","lastModifiedDate":"2022-03-14"},{"lineNumber":9,"author":{"gitId":"zxgoh"},"content":"import static seedu.address.testutil.TypicalCustomers.ELLE;","lastModifiedDate":"2022-03-14"},{"lineNumber":10,"author":{"gitId":"zxgoh"},"content":"import static seedu.address.testutil.TypicalCustomers.FIONA;","lastModifiedDate":"2022-03-14"},{"lineNumber":11,"author":{"gitId":"zxgoh"},"content":"import static seedu.address.testutil.TypicalCustomers.getTypicalAddressBook;","lastModifiedDate":"2022-03-14"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import java.util.Arrays;","lastModifiedDate":"2017-06-12"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import java.util.Collections;","lastModifiedDate":"2017-06-12"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":16,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":18,"author":{"gitId":"-"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2017-06-12"},{"lineNumber":19,"author":{"gitId":"-"},"content":"import seedu.address.model.ModelManager;","lastModifiedDate":"2017-06-12"},{"lineNumber":20,"author":{"gitId":"-"},"content":"import seedu.address.model.UserPrefs;","lastModifiedDate":"2017-06-12"},{"lineNumber":21,"author":{"gitId":"zxgoh"},"content":"import seedu.address.model.customer.NameCustomerContainsKeywordsPredicate;","lastModifiedDate":"2022-03-15"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":23,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-06-12"},{"lineNumber":24,"author":{"gitId":"-"},"content":" * Contains integration tests (interaction with the Model) for {@code FindCommand}.","lastModifiedDate":"2017-06-12"},{"lineNumber":25,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-06-12"},{"lineNumber":26,"author":{"gitId":"-"},"content":"public class FindCommandTest {","lastModifiedDate":"2017-06-12"},{"lineNumber":27,"author":{"gitId":"zxgoh"},"content":"    private final Model model \u003d new ModelManager(getTypicalAddressBook(), new UserPrefs());","lastModifiedDate":"2022-03-16"},{"lineNumber":28,"author":{"gitId":"zxgoh"},"content":"    private final Model expectedModel \u003d new ModelManager(getTypicalAddressBook(), new UserPrefs());","lastModifiedDate":"2022-03-16"},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-27"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    public void equals() {","lastModifiedDate":"2017-06-27"},{"lineNumber":32,"author":{"gitId":"zxgoh"},"content":"        NameCustomerContainsKeywordsPredicate firstPredicate \u003d","lastModifiedDate":"2022-03-15"},{"lineNumber":33,"author":{"gitId":"zxgoh"},"content":"                new NameCustomerContainsKeywordsPredicate(Collections.singletonList(\"first\"));","lastModifiedDate":"2022-03-15"},{"lineNumber":34,"author":{"gitId":"zxgoh"},"content":"        NameCustomerContainsKeywordsPredicate secondPredicate \u003d","lastModifiedDate":"2022-03-15"},{"lineNumber":35,"author":{"gitId":"zxgoh"},"content":"                new NameCustomerContainsKeywordsPredicate(Collections.singletonList(\"second\"));","lastModifiedDate":"2022-03-15"},{"lineNumber":36,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        FindCommand findFirstCommand \u003d new FindCommand(firstPredicate);","lastModifiedDate":"2017-06-12"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        FindCommand findSecondCommand \u003d new FindCommand(secondPredicate);","lastModifiedDate":"2017-06-12"},{"lineNumber":39,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":40,"author":{"gitId":"-"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2017-06-27"},{"lineNumber":41,"author":{"gitId":"-"},"content":"        assertTrue(findFirstCommand.equals(findFirstCommand));","lastModifiedDate":"2017-06-27"},{"lineNumber":42,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        // same values -\u003e returns true","lastModifiedDate":"2017-06-27"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        FindCommand findFirstCommandCopy \u003d new FindCommand(firstPredicate);","lastModifiedDate":"2017-06-12"},{"lineNumber":45,"author":{"gitId":"-"},"content":"        assertTrue(findFirstCommand.equals(findFirstCommandCopy));","lastModifiedDate":"2017-06-27"},{"lineNumber":46,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":47,"author":{"gitId":"-"},"content":"        // different types -\u003e returns false","lastModifiedDate":"2017-06-27"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        assertFalse(findFirstCommand.equals(1));","lastModifiedDate":"2017-06-27"},{"lineNumber":49,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":50,"author":{"gitId":"-"},"content":"        // null -\u003e returns false","lastModifiedDate":"2017-06-27"},{"lineNumber":51,"author":{"gitId":"-"},"content":"        assertFalse(findFirstCommand.equals(null));","lastModifiedDate":"2017-06-27"},{"lineNumber":52,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":53,"author":{"gitId":"zxgoh"},"content":"        // different customer -\u003e returns false","lastModifiedDate":"2022-03-14"},{"lineNumber":54,"author":{"gitId":"-"},"content":"        assertFalse(findFirstCommand.equals(findSecondCommand));","lastModifiedDate":"2017-06-27"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-27"},{"lineNumber":56,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-12"},{"lineNumber":58,"author":{"gitId":"zxgoh"},"content":"    public void execute_zeroKeywords_noCustomerFound() {","lastModifiedDate":"2022-03-14"},{"lineNumber":59,"author":{"gitId":"zxgoh"},"content":"        String expectedMessage \u003d String.format(MESSAGE_CUSTOMERS_LISTED_OVERVIEW, 0);","lastModifiedDate":"2022-03-14"},{"lineNumber":60,"author":{"gitId":"zxgoh"},"content":"        NameCustomerContainsKeywordsPredicate predicate \u003d preparePredicate(\" \");","lastModifiedDate":"2022-03-15"},{"lineNumber":61,"author":{"gitId":"-"},"content":"        FindCommand command \u003d new FindCommand(predicate);","lastModifiedDate":"2018-08-08"},{"lineNumber":62,"author":{"gitId":"zxgoh"},"content":"        expectedModel.updateFilteredCustomerList(predicate);","lastModifiedDate":"2022-03-14"},{"lineNumber":63,"author":{"gitId":"-"},"content":"        assertCommandSuccess(command, model, expectedMessage, expectedModel);","lastModifiedDate":"2019-01-25"},{"lineNumber":64,"author":{"gitId":"zxgoh"},"content":"        assertEquals(Collections.emptyList(), model.getFilteredCustomerList());","lastModifiedDate":"2022-03-14"},{"lineNumber":65,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-12"},{"lineNumber":66,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":67,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-12"},{"lineNumber":68,"author":{"gitId":"zxgoh"},"content":"    public void execute_multipleKeywords_multipleCustomersFound() {","lastModifiedDate":"2022-03-14"},{"lineNumber":69,"author":{"gitId":"zxgoh"},"content":"        String expectedMessage \u003d String.format(MESSAGE_CUSTOMERS_LISTED_OVERVIEW, 3);","lastModifiedDate":"2022-03-14"},{"lineNumber":70,"author":{"gitId":"zxgoh"},"content":"        NameCustomerContainsKeywordsPredicate predicate \u003d preparePredicate(\"Kurz Elle Kunz\");","lastModifiedDate":"2022-03-15"},{"lineNumber":71,"author":{"gitId":"-"},"content":"        FindCommand command \u003d new FindCommand(predicate);","lastModifiedDate":"2018-08-08"},{"lineNumber":72,"author":{"gitId":"zxgoh"},"content":"        expectedModel.updateFilteredCustomerList(predicate);","lastModifiedDate":"2022-03-14"},{"lineNumber":73,"author":{"gitId":"-"},"content":"        assertCommandSuccess(command, model, expectedMessage, expectedModel);","lastModifiedDate":"2019-01-25"},{"lineNumber":74,"author":{"gitId":"zxgoh"},"content":"        assertEquals(Arrays.asList(CARL, ELLE, FIONA), model.getFilteredCustomerList());","lastModifiedDate":"2022-03-14"},{"lineNumber":75,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-12"},{"lineNumber":76,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":77,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-06-12"},{"lineNumber":78,"author":{"gitId":"zxgoh"},"content":"     * Parses {@code userInput} into a {@code NameCustomerContainsKeywordsPredicate}.","lastModifiedDate":"2022-03-15"},{"lineNumber":79,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-06-12"},{"lineNumber":80,"author":{"gitId":"zxgoh"},"content":"    private NameCustomerContainsKeywordsPredicate preparePredicate(String userInput) {","lastModifiedDate":"2022-03-15"},{"lineNumber":81,"author":{"gitId":"zxgoh"},"content":"        return new NameCustomerContainsKeywordsPredicate(Arrays.asList(userInput.split(\"\\\\s+\")));","lastModifiedDate":"2022-03-15"},{"lineNumber":82,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-12"},{"lineNumber":83,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-06-12"}],"authorContributionMap":{"-":57,"zxgoh":26}},{"path":"src/test/java/seedu/address/logic/commands/HelpCommandTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2017-06-08"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-08"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.assertCommandSuccess;","lastModifiedDate":"2018-08-08"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.HelpCommand.SHOWING_HELP_MESSAGE;","lastModifiedDate":"2017-06-08"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-08"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-08"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2018-08-08"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import seedu.address.model.ModelManager;","lastModifiedDate":"2018-08-08"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-08"},{"lineNumber":11,"author":{"gitId":"-"},"content":"public class HelpCommandTest {","lastModifiedDate":"2017-06-08"},{"lineNumber":12,"author":{"gitId":"zxgoh"},"content":"    private final Model model \u003d new ModelManager();","lastModifiedDate":"2022-03-16"},{"lineNumber":13,"author":{"gitId":"zxgoh"},"content":"    private final Model expectedModel \u003d new ModelManager();","lastModifiedDate":"2022-03-16"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":15,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-08"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    public void execute_help_success() {","lastModifiedDate":"2017-06-08"},{"lineNumber":17,"author":{"gitId":"-"},"content":"        CommandResult expectedCommandResult \u003d new CommandResult(SHOWING_HELP_MESSAGE, true, false);","lastModifiedDate":"2018-12-09"},{"lineNumber":18,"author":{"gitId":"-"},"content":"        assertCommandSuccess(new HelpCommand(), model, expectedCommandResult, expectedModel);","lastModifiedDate":"2019-01-25"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-08"},{"lineNumber":20,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-06-08"}],"authorContributionMap":{"-":18,"zxgoh":2}},{"path":"src/test/java/seedu/address/logic/commands/ListCommandTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2017-06-12"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.assertCommandSuccess;","lastModifiedDate":"2017-07-05"},{"lineNumber":4,"author":{"gitId":"zxgoh"},"content":"import static seedu.address.logic.commands.CommandTestUtil.showCustomerAtIndex;","lastModifiedDate":"2022-03-14"},{"lineNumber":5,"author":{"gitId":"zxgoh"},"content":"import static seedu.address.testutil.TypicalCustomers.getTypicalAddressBook;","lastModifiedDate":"2022-03-14"},{"lineNumber":6,"author":{"gitId":"zxgoh"},"content":"import static seedu.address.testutil.TypicalIndexes.INDEX_FIRST_CUSTOMER;","lastModifiedDate":"2022-03-14"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.BeforeEach;","lastModifiedDate":"2019-04-27"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2017-06-12"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import seedu.address.model.ModelManager;","lastModifiedDate":"2017-06-12"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import seedu.address.model.UserPrefs;","lastModifiedDate":"2017-06-12"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":15,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-06-12"},{"lineNumber":16,"author":{"gitId":"-"},"content":" * Contains integration tests (interaction with the Model) and unit tests for ListCommand.","lastModifiedDate":"2017-06-12"},{"lineNumber":17,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-06-12"},{"lineNumber":18,"author":{"gitId":"-"},"content":"public class ListCommandTest {","lastModifiedDate":"2017-06-12"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    private Model model;","lastModifiedDate":"2017-06-12"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    private Model expectedModel;","lastModifiedDate":"2017-06-12"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    @BeforeEach","lastModifiedDate":"2019-04-27"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    public void setUp() {","lastModifiedDate":"2017-06-12"},{"lineNumber":25,"author":{"gitId":"-"},"content":"        model \u003d new ModelManager(getTypicalAddressBook(), new UserPrefs());","lastModifiedDate":"2017-07-19"},{"lineNumber":26,"author":{"gitId":"-"},"content":"        expectedModel \u003d new ModelManager(model.getAddressBook(), new UserPrefs());","lastModifiedDate":"2017-06-12"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-12"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-12"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    public void execute_listIsNotFiltered_showsSameList() {","lastModifiedDate":"2017-08-15"},{"lineNumber":31,"author":{"gitId":"-"},"content":"        assertCommandSuccess(new ListCommand(), model, ListCommand.MESSAGE_SUCCESS, expectedModel);","lastModifiedDate":"2019-01-25"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-12"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-12"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    public void execute_listIsFiltered_showsEverything() {","lastModifiedDate":"2017-08-15"},{"lineNumber":36,"author":{"gitId":"zxgoh"},"content":"        showCustomerAtIndex(model, INDEX_FIRST_CUSTOMER);","lastModifiedDate":"2022-03-14"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        assertCommandSuccess(new ListCommand(), model, ListCommand.MESSAGE_SUCCESS, expectedModel);","lastModifiedDate":"2019-01-25"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-12"},{"lineNumber":39,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-06-12"}],"authorContributionMap":{"-":35,"zxgoh":4}},{"path":"src/test/java/seedu/address/logic/parser/AddCustomerCommandParserTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"zxgoh"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2022-03-14"},{"lineNumber":2,"author":{"gitId":"zxgoh"},"content":"","lastModifiedDate":"2022-03-14"},{"lineNumber":3,"author":{"gitId":"zxgoh"},"content":"import static seedu.address.commons.core.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2022-03-14"},{"lineNumber":4,"author":{"gitId":"zxgoh"},"content":"import static seedu.address.logic.commands.CommandTestUtil.ADDRESS_DESC_AMY;","lastModifiedDate":"2022-03-14"},{"lineNumber":5,"author":{"gitId":"zxgoh"},"content":"import static seedu.address.logic.commands.CommandTestUtil.ADDRESS_DESC_BOB;","lastModifiedDate":"2022-03-14"},{"lineNumber":6,"author":{"gitId":"zxgoh"},"content":"import static seedu.address.logic.commands.CommandTestUtil.INVALID_ADDRESS_DESC;","lastModifiedDate":"2022-03-14"},{"lineNumber":7,"author":{"gitId":"zxgoh"},"content":"import static seedu.address.logic.commands.CommandTestUtil.INVALID_NAME_DESC;","lastModifiedDate":"2022-03-14"},{"lineNumber":8,"author":{"gitId":"zxgoh"},"content":"import static seedu.address.logic.commands.CommandTestUtil.INVALID_PHONE_DESC;","lastModifiedDate":"2022-03-14"},{"lineNumber":9,"author":{"gitId":"zxgoh"},"content":"import static seedu.address.logic.commands.CommandTestUtil.NAME_DESC_AMY;","lastModifiedDate":"2022-03-14"},{"lineNumber":10,"author":{"gitId":"zxgoh"},"content":"import static seedu.address.logic.commands.CommandTestUtil.NAME_DESC_BOB;","lastModifiedDate":"2022-03-14"},{"lineNumber":11,"author":{"gitId":"zxgoh"},"content":"import static seedu.address.logic.commands.CommandTestUtil.PHONE_DESC_AMY;","lastModifiedDate":"2022-03-14"},{"lineNumber":12,"author":{"gitId":"zxgoh"},"content":"import static seedu.address.logic.commands.CommandTestUtil.PHONE_DESC_BOB;","lastModifiedDate":"2022-03-14"},{"lineNumber":13,"author":{"gitId":"zxgoh"},"content":"import static seedu.address.logic.commands.CommandTestUtil.PREAMBLE_NON_EMPTY;","lastModifiedDate":"2022-03-14"},{"lineNumber":14,"author":{"gitId":"zxgoh"},"content":"import static seedu.address.logic.commands.CommandTestUtil.PREAMBLE_WHITESPACE;","lastModifiedDate":"2022-03-14"},{"lineNumber":15,"author":{"gitId":"zxgoh"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_ADDRESS_BOB;","lastModifiedDate":"2022-03-14"},{"lineNumber":16,"author":{"gitId":"zxgoh"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_NAME_BOB;","lastModifiedDate":"2022-03-14"},{"lineNumber":17,"author":{"gitId":"zxgoh"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_PHONE_BOB;","lastModifiedDate":"2022-03-14"},{"lineNumber":18,"author":{"gitId":"zxgoh"},"content":"import static seedu.address.logic.parser.CommandParserTestUtil.assertParseFailure;","lastModifiedDate":"2022-03-14"},{"lineNumber":19,"author":{"gitId":"zxgoh"},"content":"import static seedu.address.logic.parser.CommandParserTestUtil.assertParseSuccess;","lastModifiedDate":"2022-03-14"},{"lineNumber":20,"author":{"gitId":"zxgoh"},"content":"import static seedu.address.testutil.TypicalCustomers.AMY;","lastModifiedDate":"2022-03-14"},{"lineNumber":21,"author":{"gitId":"zxgoh"},"content":"import static seedu.address.testutil.TypicalCustomers.BOB;","lastModifiedDate":"2022-03-14"},{"lineNumber":22,"author":{"gitId":"zxgoh"},"content":"","lastModifiedDate":"2022-03-14"},{"lineNumber":23,"author":{"gitId":"zxgoh"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2022-03-14"},{"lineNumber":24,"author":{"gitId":"zxgoh"},"content":"","lastModifiedDate":"2022-03-14"},{"lineNumber":25,"author":{"gitId":"zxgoh"},"content":"import seedu.address.logic.commands.AddCustomerCommand;","lastModifiedDate":"2022-03-14"},{"lineNumber":26,"author":{"gitId":"zxgoh"},"content":"import seedu.address.model.customer.AddressCustomer;","lastModifiedDate":"2022-03-15"},{"lineNumber":27,"author":{"gitId":"zxgoh"},"content":"import seedu.address.model.customer.Customer;","lastModifiedDate":"2022-03-14"},{"lineNumber":28,"author":{"gitId":"zxgoh"},"content":"import seedu.address.model.customer.NameCustomer;","lastModifiedDate":"2022-03-15"},{"lineNumber":29,"author":{"gitId":"zxgoh"},"content":"import seedu.address.model.customer.PhoneCustomer;","lastModifiedDate":"2022-03-15"},{"lineNumber":30,"author":{"gitId":"zxgoh"},"content":"import seedu.address.testutil.CustomerBuilder;","lastModifiedDate":"2022-03-14"},{"lineNumber":31,"author":{"gitId":"zxgoh"},"content":"","lastModifiedDate":"2022-03-14"},{"lineNumber":32,"author":{"gitId":"zxgoh"},"content":"public class AddCustomerCommandParserTest {","lastModifiedDate":"2022-03-14"},{"lineNumber":33,"author":{"gitId":"zxgoh"},"content":"    private final AddCustomerCommandParser parser \u003d new AddCustomerCommandParser();","lastModifiedDate":"2022-03-16"},{"lineNumber":34,"author":{"gitId":"zxgoh"},"content":"","lastModifiedDate":"2022-03-14"},{"lineNumber":35,"author":{"gitId":"zxgoh"},"content":"    @Test","lastModifiedDate":"2022-03-14"},{"lineNumber":36,"author":{"gitId":"zxgoh"},"content":"    public void parse_allFieldsPresent_success() {","lastModifiedDate":"2022-03-14"},{"lineNumber":37,"author":{"gitId":"zxgoh"},"content":"        Customer expectedCustomer \u003d new CustomerBuilder(BOB).build();","lastModifiedDate":"2022-03-14"},{"lineNumber":38,"author":{"gitId":"zxgoh"},"content":"","lastModifiedDate":"2022-03-14"},{"lineNumber":39,"author":{"gitId":"zxgoh"},"content":"        // whitespace only preamble","lastModifiedDate":"2022-03-14"},{"lineNumber":40,"author":{"gitId":"zxgoh"},"content":"        assertParseSuccess(parser, PREAMBLE_WHITESPACE + NAME_DESC_BOB + PHONE_DESC_BOB","lastModifiedDate":"2022-03-14"},{"lineNumber":41,"author":{"gitId":"zxgoh"},"content":"                + ADDRESS_DESC_BOB, new AddCustomerCommand(expectedCustomer));","lastModifiedDate":"2022-03-14"},{"lineNumber":42,"author":{"gitId":"zxgoh"},"content":"","lastModifiedDate":"2022-03-14"},{"lineNumber":43,"author":{"gitId":"zxgoh"},"content":"        // multiple names - last name accepted","lastModifiedDate":"2022-03-14"},{"lineNumber":44,"author":{"gitId":"zxgoh"},"content":"        assertParseSuccess(parser, NAME_DESC_AMY + NAME_DESC_BOB + PHONE_DESC_BOB","lastModifiedDate":"2022-03-14"},{"lineNumber":45,"author":{"gitId":"zxgoh"},"content":"                + ADDRESS_DESC_BOB, new AddCustomerCommand(expectedCustomer));","lastModifiedDate":"2022-03-14"},{"lineNumber":46,"author":{"gitId":"zxgoh"},"content":"","lastModifiedDate":"2022-03-14"},{"lineNumber":47,"author":{"gitId":"zxgoh"},"content":"        // multiple phones - last phone accepted","lastModifiedDate":"2022-03-14"},{"lineNumber":48,"author":{"gitId":"zxgoh"},"content":"        assertParseSuccess(parser, NAME_DESC_BOB + PHONE_DESC_AMY + PHONE_DESC_BOB","lastModifiedDate":"2022-03-14"},{"lineNumber":49,"author":{"gitId":"zxgoh"},"content":"                + ADDRESS_DESC_BOB, new AddCustomerCommand(expectedCustomer));","lastModifiedDate":"2022-03-14"},{"lineNumber":50,"author":{"gitId":"zxgoh"},"content":"","lastModifiedDate":"2022-03-14"},{"lineNumber":51,"author":{"gitId":"zxgoh"},"content":"        // multiple addresses - last address accepted","lastModifiedDate":"2022-03-14"},{"lineNumber":52,"author":{"gitId":"zxgoh"},"content":"        assertParseSuccess(parser, NAME_DESC_BOB + PHONE_DESC_BOB + ADDRESS_DESC_AMY","lastModifiedDate":"2022-03-14"},{"lineNumber":53,"author":{"gitId":"zxgoh"},"content":"                + ADDRESS_DESC_BOB, new AddCustomerCommand(expectedCustomer));","lastModifiedDate":"2022-03-14"},{"lineNumber":54,"author":{"gitId":"zxgoh"},"content":"","lastModifiedDate":"2022-03-14"},{"lineNumber":55,"author":{"gitId":"zxgoh"},"content":"    }","lastModifiedDate":"2022-03-14"},{"lineNumber":56,"author":{"gitId":"zxgoh"},"content":"","lastModifiedDate":"2022-03-14"},{"lineNumber":57,"author":{"gitId":"zxgoh"},"content":"    @Test","lastModifiedDate":"2022-03-14"},{"lineNumber":58,"author":{"gitId":"zxgoh"},"content":"    public void parse_optionalFieldsMissing_success() {","lastModifiedDate":"2022-03-14"},{"lineNumber":59,"author":{"gitId":"zxgoh"},"content":"        // zero tags","lastModifiedDate":"2022-03-14"},{"lineNumber":60,"author":{"gitId":"zxgoh"},"content":"        Customer expectedCustomer \u003d new CustomerBuilder(AMY).build();","lastModifiedDate":"2022-03-14"},{"lineNumber":61,"author":{"gitId":"zxgoh"},"content":"        assertParseSuccess(parser, NAME_DESC_AMY + PHONE_DESC_AMY + ADDRESS_DESC_AMY,","lastModifiedDate":"2022-03-14"},{"lineNumber":62,"author":{"gitId":"zxgoh"},"content":"                new AddCustomerCommand(expectedCustomer));","lastModifiedDate":"2022-03-14"},{"lineNumber":63,"author":{"gitId":"zxgoh"},"content":"    }","lastModifiedDate":"2022-03-14"},{"lineNumber":64,"author":{"gitId":"zxgoh"},"content":"","lastModifiedDate":"2022-03-14"},{"lineNumber":65,"author":{"gitId":"zxgoh"},"content":"    @Test","lastModifiedDate":"2022-03-14"},{"lineNumber":66,"author":{"gitId":"zxgoh"},"content":"    public void parse_compulsoryFieldMissing_failure() {","lastModifiedDate":"2022-03-14"},{"lineNumber":67,"author":{"gitId":"zxgoh"},"content":"        String expectedMessage \u003d String.format(MESSAGE_INVALID_COMMAND_FORMAT, AddCustomerCommand.MESSAGE_USAGE);","lastModifiedDate":"2022-03-14"},{"lineNumber":68,"author":{"gitId":"zxgoh"},"content":"","lastModifiedDate":"2022-03-14"},{"lineNumber":69,"author":{"gitId":"zxgoh"},"content":"        // missing name prefix","lastModifiedDate":"2022-03-14"},{"lineNumber":70,"author":{"gitId":"zxgoh"},"content":"        assertParseFailure(parser, VALID_NAME_BOB + PHONE_DESC_BOB + ADDRESS_DESC_BOB,","lastModifiedDate":"2022-03-14"},{"lineNumber":71,"author":{"gitId":"zxgoh"},"content":"                expectedMessage);","lastModifiedDate":"2022-03-14"},{"lineNumber":72,"author":{"gitId":"zxgoh"},"content":"","lastModifiedDate":"2022-03-14"},{"lineNumber":73,"author":{"gitId":"zxgoh"},"content":"        // missing phone prefix","lastModifiedDate":"2022-03-14"},{"lineNumber":74,"author":{"gitId":"zxgoh"},"content":"        assertParseFailure(parser, NAME_DESC_BOB + VALID_PHONE_BOB + ADDRESS_DESC_BOB,","lastModifiedDate":"2022-03-14"},{"lineNumber":75,"author":{"gitId":"zxgoh"},"content":"                expectedMessage);","lastModifiedDate":"2022-03-14"},{"lineNumber":76,"author":{"gitId":"zxgoh"},"content":"","lastModifiedDate":"2022-03-14"},{"lineNumber":77,"author":{"gitId":"zxgoh"},"content":"        // missing address prefix","lastModifiedDate":"2022-03-14"},{"lineNumber":78,"author":{"gitId":"zxgoh"},"content":"        assertParseFailure(parser, NAME_DESC_BOB + PHONE_DESC_BOB + VALID_ADDRESS_BOB,","lastModifiedDate":"2022-03-14"},{"lineNumber":79,"author":{"gitId":"zxgoh"},"content":"                expectedMessage);","lastModifiedDate":"2022-03-14"},{"lineNumber":80,"author":{"gitId":"zxgoh"},"content":"","lastModifiedDate":"2022-03-14"},{"lineNumber":81,"author":{"gitId":"zxgoh"},"content":"        // all prefixes missing","lastModifiedDate":"2022-03-14"},{"lineNumber":82,"author":{"gitId":"zxgoh"},"content":"        assertParseFailure(parser, VALID_NAME_BOB + VALID_PHONE_BOB + VALID_ADDRESS_BOB,","lastModifiedDate":"2022-03-14"},{"lineNumber":83,"author":{"gitId":"zxgoh"},"content":"                expectedMessage);","lastModifiedDate":"2022-03-14"},{"lineNumber":84,"author":{"gitId":"zxgoh"},"content":"    }","lastModifiedDate":"2022-03-14"},{"lineNumber":85,"author":{"gitId":"zxgoh"},"content":"","lastModifiedDate":"2022-03-14"},{"lineNumber":86,"author":{"gitId":"zxgoh"},"content":"    @Test","lastModifiedDate":"2022-03-14"},{"lineNumber":87,"author":{"gitId":"zxgoh"},"content":"    public void parse_invalidValue_failure() {","lastModifiedDate":"2022-03-14"},{"lineNumber":88,"author":{"gitId":"zxgoh"},"content":"        // invalid name","lastModifiedDate":"2022-03-14"},{"lineNumber":89,"author":{"gitId":"zxgoh"},"content":"        assertParseFailure(parser, INVALID_NAME_DESC + PHONE_DESC_BOB","lastModifiedDate":"2022-03-14"},{"lineNumber":90,"author":{"gitId":"zxgoh"},"content":"                + ADDRESS_DESC_BOB, NameCustomer.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2022-03-15"},{"lineNumber":91,"author":{"gitId":"zxgoh"},"content":"","lastModifiedDate":"2022-03-14"},{"lineNumber":92,"author":{"gitId":"zxgoh"},"content":"        // invalid phone","lastModifiedDate":"2022-03-14"},{"lineNumber":93,"author":{"gitId":"zxgoh"},"content":"        assertParseFailure(parser, NAME_DESC_BOB + INVALID_PHONE_DESC","lastModifiedDate":"2022-03-14"},{"lineNumber":94,"author":{"gitId":"zxgoh"},"content":"                + ADDRESS_DESC_BOB, PhoneCustomer.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2022-03-15"},{"lineNumber":95,"author":{"gitId":"zxgoh"},"content":"","lastModifiedDate":"2022-03-14"},{"lineNumber":96,"author":{"gitId":"zxgoh"},"content":"        // invalid address","lastModifiedDate":"2022-03-14"},{"lineNumber":97,"author":{"gitId":"zxgoh"},"content":"        assertParseFailure(parser, NAME_DESC_BOB + PHONE_DESC_BOB","lastModifiedDate":"2022-03-14"},{"lineNumber":98,"author":{"gitId":"zxgoh"},"content":"                + INVALID_ADDRESS_DESC, AddressCustomer.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2022-03-15"},{"lineNumber":99,"author":{"gitId":"zxgoh"},"content":"","lastModifiedDate":"2022-03-14"},{"lineNumber":100,"author":{"gitId":"zxgoh"},"content":"        // two invalid values, only first invalid value reported","lastModifiedDate":"2022-03-14"},{"lineNumber":101,"author":{"gitId":"zxgoh"},"content":"        assertParseFailure(parser, INVALID_NAME_DESC + PHONE_DESC_BOB","lastModifiedDate":"2022-03-14"},{"lineNumber":102,"author":{"gitId":"zxgoh"},"content":"                + INVALID_ADDRESS_DESC, NameCustomer.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2022-03-15"},{"lineNumber":103,"author":{"gitId":"zxgoh"},"content":"","lastModifiedDate":"2022-03-14"},{"lineNumber":104,"author":{"gitId":"zxgoh"},"content":"        // non-empty preamble","lastModifiedDate":"2022-03-14"},{"lineNumber":105,"author":{"gitId":"zxgoh"},"content":"        assertParseFailure(parser, PREAMBLE_NON_EMPTY + NAME_DESC_BOB + PHONE_DESC_BOB","lastModifiedDate":"2022-03-14"},{"lineNumber":106,"author":{"gitId":"zxgoh"},"content":"                + ADDRESS_DESC_BOB,","lastModifiedDate":"2022-03-14"},{"lineNumber":107,"author":{"gitId":"zxgoh"},"content":"                String.format(MESSAGE_INVALID_COMMAND_FORMAT, AddCustomerCommand.MESSAGE_USAGE));","lastModifiedDate":"2022-03-14"},{"lineNumber":108,"author":{"gitId":"zxgoh"},"content":"    }","lastModifiedDate":"2022-03-14"},{"lineNumber":109,"author":{"gitId":"zxgoh"},"content":"}","lastModifiedDate":"2022-03-14"}],"authorContributionMap":{"zxgoh":109}},{"path":"src/test/java/seedu/address/logic/parser/AddressBookParserTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2017-05-24"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-24"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static seedu.address.commons.core.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2017-06-27"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import static seedu.address.commons.core.Messages.MESSAGE_UNKNOWN_COMMAND;","lastModifiedDate":"2017-05-24"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.Assert.assertThrows;","lastModifiedDate":"2019-03-23"},{"lineNumber":8,"author":{"gitId":"zxgoh"},"content":"import static seedu.address.testutil.TypicalIndexes.INDEX_FIRST_CUSTOMER;","lastModifiedDate":"2022-03-14"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-24"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import java.util.Arrays;","lastModifiedDate":"2017-06-27"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import java.util.List;","lastModifiedDate":"2017-06-12"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import java.util.stream.Collectors;","lastModifiedDate":"2017-06-27"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-24"},{"lineNumber":16,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.ClearCommand;","lastModifiedDate":"2017-06-27"},{"lineNumber":17,"author":{"gitId":"zxgoh"},"content":"import seedu.address.logic.commands.DeleteCustomerCommand;","lastModifiedDate":"2022-03-14"},{"lineNumber":18,"author":{"gitId":"zxgoh"},"content":"import seedu.address.logic.commands.EditCustomerCommand;","lastModifiedDate":"2022-03-30"},{"lineNumber":19,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.ExitCommand;","lastModifiedDate":"2017-06-27"},{"lineNumber":20,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.FindCommand;","lastModifiedDate":"2017-06-27"},{"lineNumber":21,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.HelpCommand;","lastModifiedDate":"2017-06-27"},{"lineNumber":22,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.ListCommand;","lastModifiedDate":"2017-06-27"},{"lineNumber":23,"author":{"gitId":"-"},"content":"import seedu.address.logic.parser.exceptions.ParseException;","lastModifiedDate":"2017-05-24"},{"lineNumber":24,"author":{"gitId":"zxgoh"},"content":"import seedu.address.model.customer.Customer;","lastModifiedDate":"2022-03-14"},{"lineNumber":25,"author":{"gitId":"zxgoh"},"content":"import seedu.address.model.customer.NameCustomerContainsKeywordsPredicate;","lastModifiedDate":"2022-03-15"},{"lineNumber":26,"author":{"gitId":"zxgoh"},"content":"import seedu.address.testutil.CustomerBuilder;","lastModifiedDate":"2022-03-14"},{"lineNumber":27,"author":{"gitId":"zxgoh"},"content":"import seedu.address.testutil.CustomerUtil;","lastModifiedDate":"2022-03-14"},{"lineNumber":28,"author":{"gitId":"zxgoh"},"content":"import seedu.address.testutil.EditCustomerDescriptorBuilder;","lastModifiedDate":"2022-03-14"},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-24"},{"lineNumber":30,"author":{"gitId":"-"},"content":"public class AddressBookParserTest {","lastModifiedDate":"2017-07-07"},{"lineNumber":31,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    private final AddressBookParser parser \u003d new AddressBookParser();","lastModifiedDate":"2017-07-07"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-24"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-27"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    public void parseCommand_clear() throws Exception {","lastModifiedDate":"2017-06-27"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        assertTrue(parser.parseCommand(ClearCommand.COMMAND_WORD) instanceof ClearCommand);","lastModifiedDate":"2017-06-27"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        assertTrue(parser.parseCommand(ClearCommand.COMMAND_WORD + \" 3\") instanceof ClearCommand);","lastModifiedDate":"2017-06-27"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-27"},{"lineNumber":40,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-27"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    public void parseCommand_delete() throws Exception {","lastModifiedDate":"2017-06-27"},{"lineNumber":43,"author":{"gitId":"zxgoh"},"content":"        DeleteCustomerCommand command \u003d (DeleteCustomerCommand) parser.parseCommand(","lastModifiedDate":"2022-03-14"},{"lineNumber":44,"author":{"gitId":"zxgoh"},"content":"                DeleteCustomerCommand.COMMAND_WORD + \" \" + INDEX_FIRST_CUSTOMER.getOneBased());","lastModifiedDate":"2022-03-14"},{"lineNumber":45,"author":{"gitId":"zxgoh"},"content":"        assertEquals(new DeleteCustomerCommand(INDEX_FIRST_CUSTOMER), command);","lastModifiedDate":"2022-03-14"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-27"},{"lineNumber":47,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-27"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    public void parseCommand_edit() throws Exception {","lastModifiedDate":"2017-06-27"},{"lineNumber":50,"author":{"gitId":"zxgoh"},"content":"        Customer customer \u003d new CustomerBuilder().build();","lastModifiedDate":"2022-03-14"},{"lineNumber":51,"author":{"gitId":"zxgoh"},"content":"        EditCustomerCommand.EditCustomerDescriptor descriptor \u003d new EditCustomerDescriptorBuilder(customer).build();","lastModifiedDate":"2022-03-30"},{"lineNumber":52,"author":{"gitId":"zxgoh"},"content":"        EditCustomerCommand command \u003d (EditCustomerCommand) parser.parseCommand(EditCustomerCommand.COMMAND_WORD + \" \"","lastModifiedDate":"2022-03-30"},{"lineNumber":53,"author":{"gitId":"zxgoh"},"content":"                + INDEX_FIRST_CUSTOMER.getOneBased() + \" \" + CustomerUtil.getEditCustomerDescriptorDetails(descriptor));","lastModifiedDate":"2022-03-14"},{"lineNumber":54,"author":{"gitId":"zxgoh"},"content":"        assertEquals(new EditCustomerCommand(INDEX_FIRST_CUSTOMER, descriptor), command);","lastModifiedDate":"2022-03-30"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-27"},{"lineNumber":56,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-27"},{"lineNumber":58,"author":{"gitId":"-"},"content":"    public void parseCommand_exit() throws Exception {","lastModifiedDate":"2017-06-27"},{"lineNumber":59,"author":{"gitId":"-"},"content":"        assertTrue(parser.parseCommand(ExitCommand.COMMAND_WORD) instanceof ExitCommand);","lastModifiedDate":"2017-06-27"},{"lineNumber":60,"author":{"gitId":"-"},"content":"        assertTrue(parser.parseCommand(ExitCommand.COMMAND_WORD + \" 3\") instanceof ExitCommand);","lastModifiedDate":"2017-06-27"},{"lineNumber":61,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-27"},{"lineNumber":62,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":63,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-27"},{"lineNumber":64,"author":{"gitId":"-"},"content":"    public void parseCommand_find() throws Exception {","lastModifiedDate":"2017-06-27"},{"lineNumber":65,"author":{"gitId":"-"},"content":"        List\u003cString\u003e keywords \u003d Arrays.asList(\"foo\", \"bar\", \"baz\");","lastModifiedDate":"2017-06-12"},{"lineNumber":66,"author":{"gitId":"-"},"content":"        FindCommand command \u003d (FindCommand) parser.parseCommand(","lastModifiedDate":"2017-06-27"},{"lineNumber":67,"author":{"gitId":"-"},"content":"                FindCommand.COMMAND_WORD + \" \" + keywords.stream().collect(Collectors.joining(\" \")));","lastModifiedDate":"2017-06-27"},{"lineNumber":68,"author":{"gitId":"zxgoh"},"content":"        assertEquals(new FindCommand(new NameCustomerContainsKeywordsPredicate(keywords)), command);","lastModifiedDate":"2022-03-15"},{"lineNumber":69,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-27"},{"lineNumber":70,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":71,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-27"},{"lineNumber":72,"author":{"gitId":"-"},"content":"    public void parseCommand_help() throws Exception {","lastModifiedDate":"2017-06-27"},{"lineNumber":73,"author":{"gitId":"-"},"content":"        assertTrue(parser.parseCommand(HelpCommand.COMMAND_WORD) instanceof HelpCommand);","lastModifiedDate":"2017-06-27"},{"lineNumber":74,"author":{"gitId":"-"},"content":"        assertTrue(parser.parseCommand(HelpCommand.COMMAND_WORD + \" 3\") instanceof HelpCommand);","lastModifiedDate":"2017-06-27"},{"lineNumber":75,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-27"},{"lineNumber":76,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":77,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-27"},{"lineNumber":78,"author":{"gitId":"-"},"content":"    public void parseCommand_list() throws Exception {","lastModifiedDate":"2017-06-27"},{"lineNumber":79,"author":{"gitId":"-"},"content":"        assertTrue(parser.parseCommand(ListCommand.COMMAND_WORD) instanceof ListCommand);","lastModifiedDate":"2017-06-27"},{"lineNumber":80,"author":{"gitId":"-"},"content":"        assertTrue(parser.parseCommand(ListCommand.COMMAND_WORD + \" 3\") instanceof ListCommand);","lastModifiedDate":"2017-06-27"},{"lineNumber":81,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-27"},{"lineNumber":82,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":83,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-27"},{"lineNumber":84,"author":{"gitId":"-"},"content":"    public void parseCommand_unrecognisedInput_throwsParseException() {","lastModifiedDate":"2019-03-23"},{"lineNumber":85,"author":{"gitId":"-"},"content":"        assertThrows(ParseException.class, String.format(MESSAGE_INVALID_COMMAND_FORMAT, HelpCommand.MESSAGE_USAGE), ()","lastModifiedDate":"2019-03-23"},{"lineNumber":86,"author":{"gitId":"-"},"content":"            -\u003e parser.parseCommand(\"\"));","lastModifiedDate":"2019-03-23"},{"lineNumber":87,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-27"},{"lineNumber":88,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":89,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-27"},{"lineNumber":90,"author":{"gitId":"-"},"content":"    public void parseCommand_unknownCommand_throwsParseException() {","lastModifiedDate":"2019-03-23"},{"lineNumber":91,"author":{"gitId":"-"},"content":"        assertThrows(ParseException.class, MESSAGE_UNKNOWN_COMMAND, () -\u003e parser.parseCommand(\"unknownCommand\"));","lastModifiedDate":"2019-03-23"},{"lineNumber":92,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-27"},{"lineNumber":93,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-05-24"}],"authorContributionMap":{"-":76,"zxgoh":17}},{"path":"src/test/java/seedu/address/logic/parser/DeleteCustomerCommandParserTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2022-03-14"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-03-14"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static seedu.address.commons.core.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2022-03-14"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CommandParserTestUtil.assertParseFailure;","lastModifiedDate":"2022-03-14"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CommandParserTestUtil.assertParseSuccess;","lastModifiedDate":"2022-03-14"},{"lineNumber":6,"author":{"gitId":"zxgoh"},"content":"import static seedu.address.testutil.TypicalIndexes.INDEX_FIRST_CUSTOMER;","lastModifiedDate":"2022-03-14"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-03-14"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2022-03-14"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-03-14"},{"lineNumber":10,"author":{"gitId":"zxgoh"},"content":"import seedu.address.logic.commands.DeleteCustomerCommand;","lastModifiedDate":"2022-03-14"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-03-14"},{"lineNumber":12,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2022-03-14"},{"lineNumber":13,"author":{"gitId":"-"},"content":" * As we are only doing white-box testing, our test cases do not cover path variations","lastModifiedDate":"2022-03-14"},{"lineNumber":14,"author":{"gitId":"zxgoh"},"content":" * outside of the DeleteCustomerCommand code. For example, inputs \"1\" and \"1 abc\" take the","lastModifiedDate":"2022-03-14"},{"lineNumber":15,"author":{"gitId":"zxgoh"},"content":" * same path through the DeleteCustomerCommand, and therefore we test only one of them.","lastModifiedDate":"2022-03-14"},{"lineNumber":16,"author":{"gitId":"-"},"content":" * The path variation for those two cases occur inside the ParserUtil, and","lastModifiedDate":"2022-03-14"},{"lineNumber":17,"author":{"gitId":"-"},"content":" * therefore should be covered by the ParserUtilTest.","lastModifiedDate":"2022-03-14"},{"lineNumber":18,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2022-03-14"},{"lineNumber":19,"author":{"gitId":"zxgoh"},"content":"public class DeleteCustomerCommandParserTest {","lastModifiedDate":"2022-03-14"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-03-14"},{"lineNumber":21,"author":{"gitId":"zxgoh"},"content":"    private final DeleteCustomerCommandParser parser \u003d new DeleteCustomerCommandParser();","lastModifiedDate":"2022-03-16"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-03-14"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2022-03-14"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    public void parse_validArgs_returnsDeleteCommand() {","lastModifiedDate":"2022-03-14"},{"lineNumber":25,"author":{"gitId":"zxgoh"},"content":"        assertParseSuccess(parser, \"1\", new DeleteCustomerCommand(INDEX_FIRST_CUSTOMER));","lastModifiedDate":"2022-03-14"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2022-03-14"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-03-14"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2022-03-14"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    public void parse_invalidArgs_throwsParseException() {","lastModifiedDate":"2022-03-14"},{"lineNumber":30,"author":{"gitId":"zxgoh"},"content":"        assertParseFailure(parser, \"a\", String.format(MESSAGE_INVALID_COMMAND_FORMAT,","lastModifiedDate":"2022-03-14"},{"lineNumber":31,"author":{"gitId":"zxgoh"},"content":"                DeleteCustomerCommand.MESSAGE_USAGE));","lastModifiedDate":"2022-03-14"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2022-03-14"},{"lineNumber":33,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2022-03-14"}],"authorContributionMap":{"-":24,"zxgoh":9}},{"path":"src/test/java/seedu/address/logic/parser/EditCustomerCommandParserTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2017-05-04"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static seedu.address.commons.core.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2017-05-04"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.ADDRESS_DESC_AMY;","lastModifiedDate":"2017-07-05"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.ADDRESS_DESC_BOB;","lastModifiedDate":"2017-07-05"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.INVALID_ADDRESS_DESC;","lastModifiedDate":"2017-07-05"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.INVALID_NAME_DESC;","lastModifiedDate":"2017-07-05"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.INVALID_PHONE_DESC;","lastModifiedDate":"2017-07-05"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.NAME_DESC_AMY;","lastModifiedDate":"2017-07-05"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.PHONE_DESC_AMY;","lastModifiedDate":"2017-07-05"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.PHONE_DESC_BOB;","lastModifiedDate":"2017-07-05"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_ADDRESS_AMY;","lastModifiedDate":"2017-07-05"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_ADDRESS_BOB;","lastModifiedDate":"2017-07-05"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_NAME_AMY;","lastModifiedDate":"2017-07-05"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_PHONE_AMY;","lastModifiedDate":"2017-07-05"},{"lineNumber":16,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_PHONE_BOB;","lastModifiedDate":"2017-07-05"},{"lineNumber":17,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_TAG;","lastModifiedDate":"2017-05-04"},{"lineNumber":18,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CommandParserTestUtil.assertParseFailure;","lastModifiedDate":"2017-07-06"},{"lineNumber":19,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CommandParserTestUtil.assertParseSuccess;","lastModifiedDate":"2017-07-06"},{"lineNumber":20,"author":{"gitId":"zxgoh"},"content":"import static seedu.address.testutil.TypicalIndexes.INDEX_FIRST_CUSTOMER;","lastModifiedDate":"2022-03-14"},{"lineNumber":21,"author":{"gitId":"zxgoh"},"content":"import static seedu.address.testutil.TypicalIndexes.INDEX_SECOND_CUSTOMER;","lastModifiedDate":"2022-03-14"},{"lineNumber":22,"author":{"gitId":"zxgoh"},"content":"import static seedu.address.testutil.TypicalIndexes.INDEX_THIRD_CUSTOMER;","lastModifiedDate":"2022-03-14"},{"lineNumber":23,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":24,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":26,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.index.Index;","lastModifiedDate":"2017-05-25"},{"lineNumber":27,"author":{"gitId":"zxgoh"},"content":"import seedu.address.logic.commands.EditCustomerCommand;","lastModifiedDate":"2022-03-30"},{"lineNumber":28,"author":{"gitId":"zxgoh"},"content":"import seedu.address.model.customer.AddressCustomer;","lastModifiedDate":"2022-03-15"},{"lineNumber":29,"author":{"gitId":"zxgoh"},"content":"import seedu.address.model.customer.NameCustomer;","lastModifiedDate":"2022-03-15"},{"lineNumber":30,"author":{"gitId":"zxgoh"},"content":"import seedu.address.model.customer.PhoneCustomer;","lastModifiedDate":"2022-03-15"},{"lineNumber":31,"author":{"gitId":"zxgoh"},"content":"import seedu.address.testutil.EditCustomerDescriptorBuilder;","lastModifiedDate":"2022-03-14"},{"lineNumber":32,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":33,"author":{"gitId":"zxgoh"},"content":"public class EditCustomerCommandParserTest {","lastModifiedDate":"2022-03-30"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    private static final String TAG_EMPTY \u003d \" \" + PREFIX_TAG;","lastModifiedDate":"2017-05-04"},{"lineNumber":36,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    private static final String MESSAGE_INVALID_FORMAT \u003d","lastModifiedDate":"2017-05-04"},{"lineNumber":38,"author":{"gitId":"zxgoh"},"content":"            String.format(MESSAGE_INVALID_COMMAND_FORMAT, EditCustomerCommand.MESSAGE_USAGE);","lastModifiedDate":"2022-03-30"},{"lineNumber":39,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":40,"author":{"gitId":"zxgoh"},"content":"    private final EditCustomerCommandParser parser \u003d new EditCustomerCommandParser();","lastModifiedDate":"2022-03-30"},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-04"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    public void parse_missingParts_failure() {","lastModifiedDate":"2017-05-04"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        // no index specified","lastModifiedDate":"2017-05-04"},{"lineNumber":45,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, VALID_NAME_AMY, MESSAGE_INVALID_FORMAT);","lastModifiedDate":"2017-07-06"},{"lineNumber":46,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":47,"author":{"gitId":"-"},"content":"        // no field specified","lastModifiedDate":"2017-05-04"},{"lineNumber":48,"author":{"gitId":"zxgoh"},"content":"        assertParseFailure(parser, \"1\", EditCustomerCommand.MESSAGE_NOT_EDITED);","lastModifiedDate":"2022-03-30"},{"lineNumber":49,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":50,"author":{"gitId":"-"},"content":"        // no index and no field specified","lastModifiedDate":"2017-05-04"},{"lineNumber":51,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, \"\", MESSAGE_INVALID_FORMAT);","lastModifiedDate":"2017-07-06"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-04"},{"lineNumber":53,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":54,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-04"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    public void parse_invalidPreamble_failure() {","lastModifiedDate":"2017-06-06"},{"lineNumber":56,"author":{"gitId":"-"},"content":"        // negative index","lastModifiedDate":"2017-05-04"},{"lineNumber":57,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, \"-5\" + NAME_DESC_AMY, MESSAGE_INVALID_FORMAT);","lastModifiedDate":"2017-07-06"},{"lineNumber":58,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":59,"author":{"gitId":"-"},"content":"        // zero index","lastModifiedDate":"2017-06-06"},{"lineNumber":60,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, \"0\" + NAME_DESC_AMY, MESSAGE_INVALID_FORMAT);","lastModifiedDate":"2017-07-06"},{"lineNumber":61,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-06"},{"lineNumber":62,"author":{"gitId":"-"},"content":"        // invalid arguments being parsed as preamble","lastModifiedDate":"2017-06-06"},{"lineNumber":63,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, \"1 some random string\", MESSAGE_INVALID_FORMAT);","lastModifiedDate":"2017-07-06"},{"lineNumber":64,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-06"},{"lineNumber":65,"author":{"gitId":"-"},"content":"        // invalid prefix being parsed as preamble","lastModifiedDate":"2017-06-06"},{"lineNumber":66,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, \"1 i/ string\", MESSAGE_INVALID_FORMAT);","lastModifiedDate":"2017-07-06"},{"lineNumber":67,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-04"},{"lineNumber":68,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":69,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-04"},{"lineNumber":70,"author":{"gitId":"-"},"content":"    public void parse_invalidValue_failure() {","lastModifiedDate":"2017-05-04"},{"lineNumber":71,"author":{"gitId":"zxgoh"},"content":"        assertParseFailure(parser, \"1\" + INVALID_NAME_DESC, NameCustomer.MESSAGE_CONSTRAINTS); // invalid name","lastModifiedDate":"2022-03-15"},{"lineNumber":72,"author":{"gitId":"zxgoh"},"content":"        assertParseFailure(parser, \"1\" + INVALID_PHONE_DESC, PhoneCustomer.MESSAGE_CONSTRAINTS); // invalid phone","lastModifiedDate":"2022-03-15"},{"lineNumber":73,"author":{"gitId":"zxgoh"},"content":"        assertParseFailure(parser, \"1\" + INVALID_ADDRESS_DESC, AddressCustomer.MESSAGE_CONSTRAINTS); // invalid address","lastModifiedDate":"2022-03-15"},{"lineNumber":74,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":75,"author":{"gitId":"-"},"content":"        // invalid phone followed by valid email","lastModifiedDate":"2017-05-04"},{"lineNumber":76,"author":{"gitId":"zxgoh"},"content":"        assertParseFailure(parser, \"1\" + INVALID_PHONE_DESC , PhoneCustomer.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2022-03-30"},{"lineNumber":77,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":78,"author":{"gitId":"-"},"content":"        // valid phone followed by invalid phone. The test case for invalid phone followed by valid phone","lastModifiedDate":"2017-05-04"},{"lineNumber":79,"author":{"gitId":"-"},"content":"        // is tested at {@code parse_invalidValueFollowedByValidValue_success()}","lastModifiedDate":"2017-05-04"},{"lineNumber":80,"author":{"gitId":"zxgoh"},"content":"        assertParseFailure(parser, \"1\" + PHONE_DESC_BOB + INVALID_PHONE_DESC, PhoneCustomer.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2022-03-15"},{"lineNumber":81,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":82,"author":{"gitId":"-"},"content":"        // multiple invalid values, but only the first invalid value is captured","lastModifiedDate":"2017-05-04"},{"lineNumber":83,"author":{"gitId":"zxgoh"},"content":"        assertParseFailure(parser, \"1\" + INVALID_NAME_DESC + VALID_ADDRESS_AMY + VALID_PHONE_AMY,","lastModifiedDate":"2022-03-30"},{"lineNumber":84,"author":{"gitId":"zxgoh"},"content":"                NameCustomer.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2022-03-15"},{"lineNumber":85,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-04"},{"lineNumber":86,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":87,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-04"},{"lineNumber":88,"author":{"gitId":"-"},"content":"    public void parse_allFieldsSpecified_success() {","lastModifiedDate":"2017-08-15"},{"lineNumber":89,"author":{"gitId":"zxgoh"},"content":"        Index targetIndex \u003d INDEX_SECOND_CUSTOMER;","lastModifiedDate":"2022-03-14"},{"lineNumber":90,"author":{"gitId":"zxgoh"},"content":"        String userInput \u003d targetIndex.getOneBased() + PHONE_DESC_BOB + ADDRESS_DESC_AMY + NAME_DESC_AMY;","lastModifiedDate":"2022-03-31"},{"lineNumber":91,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":92,"author":{"gitId":"zxgoh"},"content":"        EditCustomerCommand.EditCustomerDescriptor descriptor \u003d","lastModifiedDate":"2022-03-30"},{"lineNumber":93,"author":{"gitId":"zxgoh"},"content":"                new EditCustomerDescriptorBuilder().withName(VALID_NAME_AMY)","lastModifiedDate":"2022-03-30"},{"lineNumber":94,"author":{"gitId":"zxgoh"},"content":"                        .withPhone(VALID_PHONE_BOB).withAddress(VALID_ADDRESS_AMY)","lastModifiedDate":"2022-03-30"},{"lineNumber":95,"author":{"gitId":"zxgoh"},"content":"                        .build();","lastModifiedDate":"2022-03-30"},{"lineNumber":96,"author":{"gitId":"zxgoh"},"content":"        EditCustomerCommand expectedCommand \u003d new EditCustomerCommand(targetIndex, descriptor);","lastModifiedDate":"2022-03-30"},{"lineNumber":97,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":98,"author":{"gitId":"-"},"content":"        assertParseSuccess(parser, userInput, expectedCommand);","lastModifiedDate":"2017-07-06"},{"lineNumber":99,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-04"},{"lineNumber":100,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":101,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-04"},{"lineNumber":102,"author":{"gitId":"-"},"content":"    public void parse_someFieldsSpecified_success() {","lastModifiedDate":"2017-08-15"},{"lineNumber":103,"author":{"gitId":"zxgoh"},"content":"        Index targetIndex \u003d INDEX_FIRST_CUSTOMER;","lastModifiedDate":"2022-03-14"},{"lineNumber":104,"author":{"gitId":"zxgoh"},"content":"        String userInput \u003d targetIndex.getOneBased() + PHONE_DESC_BOB;","lastModifiedDate":"2022-03-31"},{"lineNumber":105,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":106,"author":{"gitId":"zxgoh"},"content":"        EditCustomerCommand.EditCustomerDescriptor descriptor \u003d","lastModifiedDate":"2022-03-30"},{"lineNumber":107,"author":{"gitId":"zxgoh"},"content":"                new EditCustomerDescriptorBuilder().withPhone(VALID_PHONE_BOB).build();","lastModifiedDate":"2022-03-30"},{"lineNumber":108,"author":{"gitId":"zxgoh"},"content":"        EditCustomerCommand expectedCommand \u003d new EditCustomerCommand(targetIndex, descriptor);","lastModifiedDate":"2022-03-30"},{"lineNumber":109,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":110,"author":{"gitId":"-"},"content":"        assertParseSuccess(parser, userInput, expectedCommand);","lastModifiedDate":"2017-07-06"},{"lineNumber":111,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-04"},{"lineNumber":112,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":113,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-04"},{"lineNumber":114,"author":{"gitId":"-"},"content":"    public void parse_oneFieldSpecified_success() {","lastModifiedDate":"2017-08-15"},{"lineNumber":115,"author":{"gitId":"-"},"content":"        // name","lastModifiedDate":"2017-05-04"},{"lineNumber":116,"author":{"gitId":"zxgoh"},"content":"        Index targetIndex \u003d INDEX_THIRD_CUSTOMER;","lastModifiedDate":"2022-03-14"},{"lineNumber":117,"author":{"gitId":"-"},"content":"        String userInput \u003d targetIndex.getOneBased() + NAME_DESC_AMY;","lastModifiedDate":"2017-05-25"},{"lineNumber":118,"author":{"gitId":"zxgoh"},"content":"        EditCustomerCommand.EditCustomerDescriptor descriptor \u003d","lastModifiedDate":"2022-03-30"},{"lineNumber":119,"author":{"gitId":"zxgoh"},"content":"                new EditCustomerDescriptorBuilder().withName(VALID_NAME_AMY).build();","lastModifiedDate":"2022-03-30"},{"lineNumber":120,"author":{"gitId":"zxgoh"},"content":"        EditCustomerCommand expectedCommand \u003d new EditCustomerCommand(targetIndex, descriptor);","lastModifiedDate":"2022-03-30"},{"lineNumber":121,"author":{"gitId":"-"},"content":"        assertParseSuccess(parser, userInput, expectedCommand);","lastModifiedDate":"2017-07-06"},{"lineNumber":122,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":123,"author":{"gitId":"-"},"content":"        // phone","lastModifiedDate":"2017-05-04"},{"lineNumber":124,"author":{"gitId":"-"},"content":"        userInput \u003d targetIndex.getOneBased() + PHONE_DESC_AMY;","lastModifiedDate":"2017-05-25"},{"lineNumber":125,"author":{"gitId":"zxgoh"},"content":"        descriptor \u003d new EditCustomerDescriptorBuilder().withPhone(VALID_PHONE_AMY).build();","lastModifiedDate":"2022-03-14"},{"lineNumber":126,"author":{"gitId":"zxgoh"},"content":"        expectedCommand \u003d new EditCustomerCommand(targetIndex, descriptor);","lastModifiedDate":"2022-03-30"},{"lineNumber":127,"author":{"gitId":"-"},"content":"        assertParseSuccess(parser, userInput, expectedCommand);","lastModifiedDate":"2017-07-06"},{"lineNumber":128,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":129,"author":{"gitId":"-"},"content":"        // address","lastModifiedDate":"2017-05-04"},{"lineNumber":130,"author":{"gitId":"-"},"content":"        userInput \u003d targetIndex.getOneBased() + ADDRESS_DESC_AMY;","lastModifiedDate":"2017-05-25"},{"lineNumber":131,"author":{"gitId":"zxgoh"},"content":"        descriptor \u003d new EditCustomerDescriptorBuilder().withAddress(VALID_ADDRESS_AMY).build();","lastModifiedDate":"2022-03-14"},{"lineNumber":132,"author":{"gitId":"zxgoh"},"content":"        expectedCommand \u003d new EditCustomerCommand(targetIndex, descriptor);","lastModifiedDate":"2022-03-30"},{"lineNumber":133,"author":{"gitId":"-"},"content":"        assertParseSuccess(parser, userInput, expectedCommand);","lastModifiedDate":"2017-07-06"},{"lineNumber":134,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":135,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-04"},{"lineNumber":136,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":137,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-04"},{"lineNumber":138,"author":{"gitId":"-"},"content":"    public void parse_multipleRepeatedFields_acceptsLast() {","lastModifiedDate":"2017-08-15"},{"lineNumber":139,"author":{"gitId":"zxgoh"},"content":"        Index targetIndex \u003d INDEX_FIRST_CUSTOMER;","lastModifiedDate":"2022-03-14"},{"lineNumber":140,"author":{"gitId":"zxgoh"},"content":"        String userInput \u003d","lastModifiedDate":"2022-03-31"},{"lineNumber":141,"author":{"gitId":"zxgoh"},"content":"                targetIndex.getOneBased() + PHONE_DESC_AMY + ADDRESS_DESC_AMY","lastModifiedDate":"2022-03-31"},{"lineNumber":142,"author":{"gitId":"zxgoh"},"content":"                        + PHONE_DESC_AMY + ADDRESS_DESC_AMY","lastModifiedDate":"2022-03-31"},{"lineNumber":143,"author":{"gitId":"zxgoh"},"content":"                        + PHONE_DESC_BOB + ADDRESS_DESC_BOB;","lastModifiedDate":"2022-03-31"},{"lineNumber":144,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":145,"author":{"gitId":"zxgoh"},"content":"        EditCustomerCommand.EditCustomerDescriptor descriptor \u003d","lastModifiedDate":"2022-03-30"},{"lineNumber":146,"author":{"gitId":"zxgoh"},"content":"                new EditCustomerDescriptorBuilder().withPhone(VALID_PHONE_BOB)","lastModifiedDate":"2022-03-30"},{"lineNumber":147,"author":{"gitId":"zxgoh"},"content":"                        .withAddress(VALID_ADDRESS_BOB)","lastModifiedDate":"2022-03-30"},{"lineNumber":148,"author":{"gitId":"-"},"content":"                        .build();","lastModifiedDate":"2017-05-04"},{"lineNumber":149,"author":{"gitId":"zxgoh"},"content":"        EditCustomerCommand expectedCommand \u003d new EditCustomerCommand(targetIndex, descriptor);","lastModifiedDate":"2022-03-30"},{"lineNumber":150,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":151,"author":{"gitId":"-"},"content":"        assertParseSuccess(parser, userInput, expectedCommand);","lastModifiedDate":"2017-07-06"},{"lineNumber":152,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-04"},{"lineNumber":153,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":154,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-04"},{"lineNumber":155,"author":{"gitId":"-"},"content":"    public void parse_invalidValueFollowedByValidValue_success() {","lastModifiedDate":"2017-08-15"},{"lineNumber":156,"author":{"gitId":"-"},"content":"        // no other valid values specified","lastModifiedDate":"2017-05-04"},{"lineNumber":157,"author":{"gitId":"zxgoh"},"content":"        Index targetIndex \u003d INDEX_FIRST_CUSTOMER;","lastModifiedDate":"2022-03-14"},{"lineNumber":158,"author":{"gitId":"-"},"content":"        String userInput \u003d targetIndex.getOneBased() + INVALID_PHONE_DESC + PHONE_DESC_BOB;","lastModifiedDate":"2017-05-25"},{"lineNumber":159,"author":{"gitId":"zxgoh"},"content":"        EditCustomerCommand.EditCustomerDescriptor descriptor \u003d","lastModifiedDate":"2022-03-30"},{"lineNumber":160,"author":{"gitId":"zxgoh"},"content":"                new EditCustomerDescriptorBuilder().withPhone(VALID_PHONE_BOB).build();","lastModifiedDate":"2022-03-30"},{"lineNumber":161,"author":{"gitId":"zxgoh"},"content":"        EditCustomerCommand expectedCommand \u003d new EditCustomerCommand(targetIndex, descriptor);","lastModifiedDate":"2022-03-30"},{"lineNumber":162,"author":{"gitId":"-"},"content":"        assertParseSuccess(parser, userInput, expectedCommand);","lastModifiedDate":"2017-07-06"},{"lineNumber":163,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":164,"author":{"gitId":"-"},"content":"        // other valid values specified","lastModifiedDate":"2017-05-04"},{"lineNumber":165,"author":{"gitId":"zxgoh"},"content":"        userInput \u003d targetIndex.getOneBased() + INVALID_PHONE_DESC + ADDRESS_DESC_BOB","lastModifiedDate":"2022-03-30"},{"lineNumber":166,"author":{"gitId":"-"},"content":"                + PHONE_DESC_BOB;","lastModifiedDate":"2017-05-25"},{"lineNumber":167,"author":{"gitId":"zxgoh"},"content":"        descriptor \u003d new EditCustomerDescriptorBuilder().withPhone(VALID_PHONE_BOB)","lastModifiedDate":"2022-03-30"},{"lineNumber":168,"author":{"gitId":"-"},"content":"                .withAddress(VALID_ADDRESS_BOB).build();","lastModifiedDate":"2017-05-04"},{"lineNumber":169,"author":{"gitId":"zxgoh"},"content":"        expectedCommand \u003d new EditCustomerCommand(targetIndex, descriptor);","lastModifiedDate":"2022-03-30"},{"lineNumber":170,"author":{"gitId":"-"},"content":"        assertParseSuccess(parser, userInput, expectedCommand);","lastModifiedDate":"2017-07-06"},{"lineNumber":171,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-04"},{"lineNumber":172,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-05-04"},{"lineNumber":173,"author":{"gitId":"zxgoh"},"content":"","lastModifiedDate":"2022-03-31"}],"authorContributionMap":{"-":117,"zxgoh":56}},{"path":"src/test/java/seedu/address/logic/parser/FindCommandParserTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2017-06-27"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static seedu.address.commons.core.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2017-06-27"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CommandParserTestUtil.assertParseFailure;","lastModifiedDate":"2017-07-06"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CommandParserTestUtil.assertParseSuccess;","lastModifiedDate":"2017-07-06"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import java.util.Arrays;","lastModifiedDate":"2017-06-27"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.FindCommand;","lastModifiedDate":"2017-06-27"},{"lineNumber":12,"author":{"gitId":"zxgoh"},"content":"import seedu.address.model.customer.NameCustomerContainsKeywordsPredicate;","lastModifiedDate":"2022-03-15"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":14,"author":{"gitId":"-"},"content":"public class FindCommandParserTest {","lastModifiedDate":"2017-06-27"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":16,"author":{"gitId":"zxgoh"},"content":"    private final FindCommandParser parser \u003d new FindCommandParser();","lastModifiedDate":"2022-03-16"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-27"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    public void parse_emptyArg_throwsParseException() {","lastModifiedDate":"2017-06-27"},{"lineNumber":20,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, \"     \", String.format(MESSAGE_INVALID_COMMAND_FORMAT, FindCommand.MESSAGE_USAGE));","lastModifiedDate":"2017-07-06"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-27"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-27"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    public void parse_validArgs_returnsFindCommand() {","lastModifiedDate":"2017-08-15"},{"lineNumber":25,"author":{"gitId":"-"},"content":"        // no leading and trailing whitespaces","lastModifiedDate":"2017-06-27"},{"lineNumber":26,"author":{"gitId":"-"},"content":"        FindCommand expectedFindCommand \u003d","lastModifiedDate":"2017-06-12"},{"lineNumber":27,"author":{"gitId":"zxgoh"},"content":"                new FindCommand(new NameCustomerContainsKeywordsPredicate(Arrays.asList(\"Alice\", \"Bob\")));","lastModifiedDate":"2022-03-15"},{"lineNumber":28,"author":{"gitId":"-"},"content":"        assertParseSuccess(parser, \"Alice Bob\", expectedFindCommand);","lastModifiedDate":"2017-07-06"},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":30,"author":{"gitId":"-"},"content":"        // multiple whitespaces between keywords","lastModifiedDate":"2017-06-27"},{"lineNumber":31,"author":{"gitId":"-"},"content":"        assertParseSuccess(parser, \" \\n Alice \\n \\t Bob  \\t\", expectedFindCommand);","lastModifiedDate":"2017-07-06"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-27"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":34,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-06-27"}],"authorContributionMap":{"-":31,"zxgoh":3}},{"path":"src/test/java/seedu/address/logic/parser/ParserUtilTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2017-05-22"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.ParserUtil.MESSAGE_INVALID_INDEX;","lastModifiedDate":"2017-06-02"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.Assert.assertThrows;","lastModifiedDate":"2019-03-14"},{"lineNumber":7,"author":{"gitId":"zxgoh"},"content":"import static seedu.address.testutil.TypicalIndexes.INDEX_FIRST_CUSTOMER;","lastModifiedDate":"2022-03-14"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import java.util.Arrays;","lastModifiedDate":"2017-05-22"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import java.util.Collections;","lastModifiedDate":"2017-05-22"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import java.util.HashSet;","lastModifiedDate":"2017-05-22"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import java.util.Set;","lastModifiedDate":"2017-05-22"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":16,"author":{"gitId":"-"},"content":"import seedu.address.logic.parser.exceptions.ParseException;","lastModifiedDate":"2018-07-10"},{"lineNumber":17,"author":{"gitId":"zxgoh"},"content":"import seedu.address.model.customer.AddressCustomer;","lastModifiedDate":"2022-03-15"},{"lineNumber":18,"author":{"gitId":"zxgoh"},"content":"import seedu.address.model.customer.EmailCustomer;","lastModifiedDate":"2022-03-15"},{"lineNumber":19,"author":{"gitId":"zxgoh"},"content":"import seedu.address.model.customer.NameCustomer;","lastModifiedDate":"2022-03-15"},{"lineNumber":20,"author":{"gitId":"zxgoh"},"content":"import seedu.address.model.customer.PhoneCustomer;","lastModifiedDate":"2022-03-15"},{"lineNumber":21,"author":{"gitId":"-"},"content":"import seedu.address.model.tag.Tag;","lastModifiedDate":"2017-05-22"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":23,"author":{"gitId":"-"},"content":"public class ParserUtilTest {","lastModifiedDate":"2017-05-22"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    private static final String INVALID_NAME \u003d \"R@chel\";","lastModifiedDate":"2017-05-22"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    private static final String INVALID_PHONE \u003d \"+651234\";","lastModifiedDate":"2017-05-22"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    private static final String INVALID_ADDRESS \u003d \" \";","lastModifiedDate":"2017-05-22"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    private static final String INVALID_EMAIL \u003d \"example.com\";","lastModifiedDate":"2017-05-22"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    private static final String INVALID_TAG \u003d \"#friend\";","lastModifiedDate":"2017-05-22"},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    private static final String VALID_NAME \u003d \"Rachel Walker\";","lastModifiedDate":"2017-05-22"},{"lineNumber":31,"author":{"gitId":"zxgoh"},"content":"    private static final String VALID_PHONE \u003d \"81234567\";","lastModifiedDate":"2022-03-31"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    private static final String VALID_ADDRESS \u003d \"123 Main Street #0505\";","lastModifiedDate":"2017-05-22"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    private static final String VALID_EMAIL \u003d \"rachel@example.com\";","lastModifiedDate":"2017-05-22"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    private static final String VALID_TAG_1 \u003d \"friend\";","lastModifiedDate":"2017-05-22"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    private static final String VALID_TAG_2 \u003d \"neighbour\";","lastModifiedDate":"2017-05-22"},{"lineNumber":36,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    private static final String WHITESPACE \u003d \" \\t\\r\\n\";","lastModifiedDate":"2017-05-29"},{"lineNumber":38,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-29"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-26"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    public void parseIndex_invalidInput_throwsParseException() {","lastModifiedDate":"2019-03-23"},{"lineNumber":41,"author":{"gitId":"-"},"content":"        assertThrows(ParseException.class, () -\u003e ParserUtil.parseIndex(\"10 a\"));","lastModifiedDate":"2019-03-23"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-26"},{"lineNumber":43,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-26"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-26"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    public void parseIndex_outOfRangeInput_throwsParseException() {","lastModifiedDate":"2019-03-23"},{"lineNumber":46,"author":{"gitId":"-"},"content":"        assertThrows(ParseException.class, MESSAGE_INVALID_INDEX, ()","lastModifiedDate":"2019-03-23"},{"lineNumber":47,"author":{"gitId":"-"},"content":"            -\u003e ParserUtil.parseIndex(Long.toString(Integer.MAX_VALUE + 1)));","lastModifiedDate":"2019-03-23"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-26"},{"lineNumber":49,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-26"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-26"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    public void parseIndex_validInput_success() throws Exception {","lastModifiedDate":"2017-05-26"},{"lineNumber":52,"author":{"gitId":"-"},"content":"        // No whitespaces","lastModifiedDate":"2017-05-26"},{"lineNumber":53,"author":{"gitId":"zxgoh"},"content":"        assertEquals(INDEX_FIRST_CUSTOMER, ParserUtil.parseIndex(\"1\"));","lastModifiedDate":"2022-03-14"},{"lineNumber":54,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-26"},{"lineNumber":55,"author":{"gitId":"-"},"content":"        // Leading and trailing whitespaces","lastModifiedDate":"2017-05-26"},{"lineNumber":56,"author":{"gitId":"zxgoh"},"content":"        assertEquals(INDEX_FIRST_CUSTOMER, ParserUtil.parseIndex(\"  1  \"));","lastModifiedDate":"2022-03-14"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-26"},{"lineNumber":58,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-26"},{"lineNumber":59,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-22"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    public void parseName_null_throwsNullPointerException() {","lastModifiedDate":"2017-05-29"},{"lineNumber":61,"author":{"gitId":"zxgoh"},"content":"        assertThrows(NullPointerException.class, () -\u003e ParserUtil.parseNameCustomer(null));","lastModifiedDate":"2022-03-31"},{"lineNumber":62,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-22"},{"lineNumber":63,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":64,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-22"},{"lineNumber":65,"author":{"gitId":"-"},"content":"    public void parseName_invalidValue_throwsParseException() {","lastModifiedDate":"2018-07-10"},{"lineNumber":66,"author":{"gitId":"zxgoh"},"content":"        assertThrows(ParseException.class, () -\u003e ParserUtil.parseNameCustomer(INVALID_NAME));","lastModifiedDate":"2022-03-31"},{"lineNumber":67,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-22"},{"lineNumber":68,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":69,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-22"},{"lineNumber":70,"author":{"gitId":"-"},"content":"    public void parseName_validValueWithoutWhitespace_returnsName() throws Exception {","lastModifiedDate":"2017-05-29"},{"lineNumber":71,"author":{"gitId":"zxgoh"},"content":"        NameCustomer expectedNameCustomer \u003d new NameCustomer(VALID_NAME);","lastModifiedDate":"2022-03-15"},{"lineNumber":72,"author":{"gitId":"zxgoh"},"content":"        assertEquals(expectedNameCustomer, ParserUtil.parseNameCustomer(VALID_NAME));","lastModifiedDate":"2022-03-31"},{"lineNumber":73,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-29"},{"lineNumber":74,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":75,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-29"},{"lineNumber":76,"author":{"gitId":"-"},"content":"    public void parseName_validValueWithWhitespace_returnsTrimmedName() throws Exception {","lastModifiedDate":"2017-05-29"},{"lineNumber":77,"author":{"gitId":"-"},"content":"        String nameWithWhitespace \u003d WHITESPACE + VALID_NAME + WHITESPACE;","lastModifiedDate":"2017-05-29"},{"lineNumber":78,"author":{"gitId":"zxgoh"},"content":"        NameCustomer expectedNameCustomer \u003d new NameCustomer(VALID_NAME);","lastModifiedDate":"2022-03-15"},{"lineNumber":79,"author":{"gitId":"zxgoh"},"content":"        assertEquals(expectedNameCustomer, ParserUtil.parseNameCustomer(nameWithWhitespace));","lastModifiedDate":"2022-03-31"},{"lineNumber":80,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-22"},{"lineNumber":81,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":82,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-22"},{"lineNumber":83,"author":{"gitId":"-"},"content":"    public void parsePhone_null_throwsNullPointerException() {","lastModifiedDate":"2017-05-30"},{"lineNumber":84,"author":{"gitId":"zxgoh"},"content":"        assertThrows(NullPointerException.class, () -\u003e ParserUtil.parsePhoneCustomer(null));","lastModifiedDate":"2022-03-31"},{"lineNumber":85,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-22"},{"lineNumber":86,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":87,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-22"},{"lineNumber":88,"author":{"gitId":"-"},"content":"    public void parsePhone_invalidValue_throwsParseException() {","lastModifiedDate":"2018-07-10"},{"lineNumber":89,"author":{"gitId":"zxgoh"},"content":"        assertThrows(ParseException.class, () -\u003e ParserUtil.parsePhoneCustomer(INVALID_PHONE));","lastModifiedDate":"2022-03-31"},{"lineNumber":90,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-22"},{"lineNumber":91,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":92,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-22"},{"lineNumber":93,"author":{"gitId":"-"},"content":"    public void parsePhone_validValueWithoutWhitespace_returnsPhone() throws Exception {","lastModifiedDate":"2017-05-30"},{"lineNumber":94,"author":{"gitId":"zxgoh"},"content":"        PhoneCustomer expectedPhoneCustomer \u003d new PhoneCustomer(VALID_PHONE);","lastModifiedDate":"2022-03-15"},{"lineNumber":95,"author":{"gitId":"zxgoh"},"content":"        assertEquals(expectedPhoneCustomer, ParserUtil.parsePhoneCustomer(VALID_PHONE));","lastModifiedDate":"2022-03-31"},{"lineNumber":96,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-30"},{"lineNumber":97,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":98,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-30"},{"lineNumber":99,"author":{"gitId":"-"},"content":"    public void parsePhone_validValueWithWhitespace_returnsTrimmedPhone() throws Exception {","lastModifiedDate":"2017-05-30"},{"lineNumber":100,"author":{"gitId":"-"},"content":"        String phoneWithWhitespace \u003d WHITESPACE + VALID_PHONE + WHITESPACE;","lastModifiedDate":"2017-05-30"},{"lineNumber":101,"author":{"gitId":"zxgoh"},"content":"        PhoneCustomer expectedPhoneCustomer \u003d new PhoneCustomer(VALID_PHONE);","lastModifiedDate":"2022-03-15"},{"lineNumber":102,"author":{"gitId":"zxgoh"},"content":"        assertEquals(expectedPhoneCustomer, ParserUtil.parsePhoneCustomer(phoneWithWhitespace));","lastModifiedDate":"2022-03-31"},{"lineNumber":103,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-22"},{"lineNumber":104,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":105,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-22"},{"lineNumber":106,"author":{"gitId":"-"},"content":"    public void parseAddress_null_throwsNullPointerException() {","lastModifiedDate":"2017-05-30"},{"lineNumber":107,"author":{"gitId":"zxgoh"},"content":"        assertThrows(NullPointerException.class, () -\u003e ParserUtil.parseAddressCustomer(null));","lastModifiedDate":"2022-03-31"},{"lineNumber":108,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-22"},{"lineNumber":109,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":110,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-22"},{"lineNumber":111,"author":{"gitId":"-"},"content":"    public void parseAddress_invalidValue_throwsParseException() {","lastModifiedDate":"2018-07-10"},{"lineNumber":112,"author":{"gitId":"zxgoh"},"content":"        assertThrows(ParseException.class, () -\u003e ParserUtil.parseAddressCustomer(INVALID_ADDRESS));","lastModifiedDate":"2022-03-31"},{"lineNumber":113,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-22"},{"lineNumber":114,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":115,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-22"},{"lineNumber":116,"author":{"gitId":"-"},"content":"    public void parseAddress_validValueWithoutWhitespace_returnsAddress() throws Exception {","lastModifiedDate":"2017-05-30"},{"lineNumber":117,"author":{"gitId":"zxgoh"},"content":"        AddressCustomer expectedAddressCustomer \u003d new AddressCustomer(VALID_ADDRESS);","lastModifiedDate":"2022-03-15"},{"lineNumber":118,"author":{"gitId":"zxgoh"},"content":"        assertEquals(expectedAddressCustomer, ParserUtil.parseAddressCustomer(VALID_ADDRESS));","lastModifiedDate":"2022-03-31"},{"lineNumber":119,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-30"},{"lineNumber":120,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":121,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-30"},{"lineNumber":122,"author":{"gitId":"-"},"content":"    public void parseAddress_validValueWithWhitespace_returnsTrimmedAddress() throws Exception {","lastModifiedDate":"2017-05-30"},{"lineNumber":123,"author":{"gitId":"-"},"content":"        String addressWithWhitespace \u003d WHITESPACE + VALID_ADDRESS + WHITESPACE;","lastModifiedDate":"2017-05-30"},{"lineNumber":124,"author":{"gitId":"zxgoh"},"content":"        AddressCustomer expectedAddressCustomer \u003d new AddressCustomer(VALID_ADDRESS);","lastModifiedDate":"2022-03-15"},{"lineNumber":125,"author":{"gitId":"zxgoh"},"content":"        assertEquals(expectedAddressCustomer, ParserUtil.parseAddressCustomer(addressWithWhitespace));","lastModifiedDate":"2022-03-31"},{"lineNumber":126,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-22"},{"lineNumber":127,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":128,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-22"},{"lineNumber":129,"author":{"gitId":"-"},"content":"    public void parseEmail_null_throwsNullPointerException() {","lastModifiedDate":"2017-05-30"},{"lineNumber":130,"author":{"gitId":"zxgoh"},"content":"        assertThrows(NullPointerException.class, () -\u003e ParserUtil.parseEmail(null));","lastModifiedDate":"2022-03-16"},{"lineNumber":131,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-22"},{"lineNumber":132,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":133,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-22"},{"lineNumber":134,"author":{"gitId":"-"},"content":"    public void parseEmail_invalidValue_throwsParseException() {","lastModifiedDate":"2018-07-10"},{"lineNumber":135,"author":{"gitId":"-"},"content":"        assertThrows(ParseException.class, () -\u003e ParserUtil.parseEmail(INVALID_EMAIL));","lastModifiedDate":"2019-03-14"},{"lineNumber":136,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-22"},{"lineNumber":137,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":138,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-22"},{"lineNumber":139,"author":{"gitId":"-"},"content":"    public void parseEmail_validValueWithoutWhitespace_returnsEmail() throws Exception {","lastModifiedDate":"2017-05-30"},{"lineNumber":140,"author":{"gitId":"zxgoh"},"content":"        EmailCustomer expectedEmailCustomer \u003d new EmailCustomer(VALID_EMAIL);","lastModifiedDate":"2022-03-15"},{"lineNumber":141,"author":{"gitId":"zxgoh"},"content":"        assertEquals(expectedEmailCustomer, ParserUtil.parseEmail(VALID_EMAIL));","lastModifiedDate":"2022-03-15"},{"lineNumber":142,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-30"},{"lineNumber":143,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":144,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-30"},{"lineNumber":145,"author":{"gitId":"-"},"content":"    public void parseEmail_validValueWithWhitespace_returnsTrimmedEmail() throws Exception {","lastModifiedDate":"2017-05-30"},{"lineNumber":146,"author":{"gitId":"-"},"content":"        String emailWithWhitespace \u003d WHITESPACE + VALID_EMAIL + WHITESPACE;","lastModifiedDate":"2017-05-30"},{"lineNumber":147,"author":{"gitId":"zxgoh"},"content":"        EmailCustomer expectedEmailCustomer \u003d new EmailCustomer(VALID_EMAIL);","lastModifiedDate":"2022-03-15"},{"lineNumber":148,"author":{"gitId":"zxgoh"},"content":"        assertEquals(expectedEmailCustomer, ParserUtil.parseEmail(emailWithWhitespace));","lastModifiedDate":"2022-03-15"},{"lineNumber":149,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-22"},{"lineNumber":150,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":151,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-30"},{"lineNumber":152,"author":{"gitId":"-"},"content":"    public void parseTag_null_throwsNullPointerException() {","lastModifiedDate":"2019-03-23"},{"lineNumber":153,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e ParserUtil.parseTag(null));","lastModifiedDate":"2019-03-23"},{"lineNumber":154,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-30"},{"lineNumber":155,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-30"},{"lineNumber":156,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-30"},{"lineNumber":157,"author":{"gitId":"-"},"content":"    public void parseTag_invalidValue_throwsParseException() {","lastModifiedDate":"2019-03-23"},{"lineNumber":158,"author":{"gitId":"-"},"content":"        assertThrows(ParseException.class, () -\u003e ParserUtil.parseTag(INVALID_TAG));","lastModifiedDate":"2019-03-23"},{"lineNumber":159,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-30"},{"lineNumber":160,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-30"},{"lineNumber":161,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-30"},{"lineNumber":162,"author":{"gitId":"-"},"content":"    public void parseTag_validValueWithoutWhitespace_returnsTag() throws Exception {","lastModifiedDate":"2017-05-30"},{"lineNumber":163,"author":{"gitId":"-"},"content":"        Tag expectedTag \u003d new Tag(VALID_TAG_1);","lastModifiedDate":"2017-05-30"},{"lineNumber":164,"author":{"gitId":"-"},"content":"        assertEquals(expectedTag, ParserUtil.parseTag(VALID_TAG_1));","lastModifiedDate":"2017-05-30"},{"lineNumber":165,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-30"},{"lineNumber":166,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-30"},{"lineNumber":167,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-30"},{"lineNumber":168,"author":{"gitId":"-"},"content":"    public void parseTag_validValueWithWhitespace_returnsTrimmedTag() throws Exception {","lastModifiedDate":"2017-05-30"},{"lineNumber":169,"author":{"gitId":"-"},"content":"        String tagWithWhitespace \u003d WHITESPACE + VALID_TAG_1 + WHITESPACE;","lastModifiedDate":"2017-05-30"},{"lineNumber":170,"author":{"gitId":"-"},"content":"        Tag expectedTag \u003d new Tag(VALID_TAG_1);","lastModifiedDate":"2017-05-30"},{"lineNumber":171,"author":{"gitId":"-"},"content":"        assertEquals(expectedTag, ParserUtil.parseTag(tagWithWhitespace));","lastModifiedDate":"2017-05-30"},{"lineNumber":172,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-30"},{"lineNumber":173,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-30"},{"lineNumber":174,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-22"},{"lineNumber":175,"author":{"gitId":"-"},"content":"    public void parseTags_null_throwsNullPointerException() {","lastModifiedDate":"2019-03-23"},{"lineNumber":176,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e ParserUtil.parseTags(null));","lastModifiedDate":"2019-03-23"},{"lineNumber":177,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-22"},{"lineNumber":178,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":179,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-22"},{"lineNumber":180,"author":{"gitId":"-"},"content":"    public void parseTags_collectionWithInvalidTags_throwsParseException() {","lastModifiedDate":"2019-03-23"},{"lineNumber":181,"author":{"gitId":"-"},"content":"        assertThrows(ParseException.class, () -\u003e ParserUtil.parseTags(Arrays.asList(VALID_TAG_1, INVALID_TAG)));","lastModifiedDate":"2019-03-23"},{"lineNumber":182,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-22"},{"lineNumber":183,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":184,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-22"},{"lineNumber":185,"author":{"gitId":"-"},"content":"    public void parseTags_emptyCollection_returnsEmptySet() throws Exception {","lastModifiedDate":"2017-05-22"},{"lineNumber":186,"author":{"gitId":"-"},"content":"        assertTrue(ParserUtil.parseTags(Collections.emptyList()).isEmpty());","lastModifiedDate":"2017-05-22"},{"lineNumber":187,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-22"},{"lineNumber":188,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":189,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-22"},{"lineNumber":190,"author":{"gitId":"-"},"content":"    public void parseTags_collectionWithValidTags_returnsTagSet() throws Exception {","lastModifiedDate":"2017-05-22"},{"lineNumber":191,"author":{"gitId":"-"},"content":"        Set\u003cTag\u003e actualTagSet \u003d ParserUtil.parseTags(Arrays.asList(VALID_TAG_1, VALID_TAG_2));","lastModifiedDate":"2017-05-22"},{"lineNumber":192,"author":{"gitId":"-"},"content":"        Set\u003cTag\u003e expectedTagSet \u003d new HashSet\u003cTag\u003e(Arrays.asList(new Tag(VALID_TAG_1), new Tag(VALID_TAG_2)));","lastModifiedDate":"2017-05-22"},{"lineNumber":193,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":194,"author":{"gitId":"-"},"content":"        assertEquals(expectedTagSet, actualTagSet);","lastModifiedDate":"2017-05-22"},{"lineNumber":195,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-22"},{"lineNumber":196,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-05-22"}],"authorContributionMap":{"-":165,"zxgoh":31}},{"path":"src/test/java/seedu/address/model/AddressBookTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.model;","lastModifiedDate":"2016-12-24"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-24"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2019-03-15"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_ADDRESS_BOB;","lastModifiedDate":"2018-04-19"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.Assert.assertThrows;","lastModifiedDate":"2019-03-23"},{"lineNumber":8,"author":{"gitId":"zxgoh"},"content":"import static seedu.address.testutil.TypicalCustomers.ALICE;","lastModifiedDate":"2022-03-14"},{"lineNumber":9,"author":{"gitId":"zxgoh"},"content":"import static seedu.address.testutil.TypicalCustomers.getTypicalAddressBook;","lastModifiedDate":"2022-03-14"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-24"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import java.util.Arrays;","lastModifiedDate":"2016-12-24"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import java.util.Collection;","lastModifiedDate":"2016-12-24"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import java.util.Collections;","lastModifiedDate":"2016-12-24"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import java.util.List;","lastModifiedDate":"2016-12-24"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-24"},{"lineNumber":16,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-24"},{"lineNumber":18,"author":{"gitId":"-"},"content":"import javafx.collections.FXCollections;","lastModifiedDate":"2016-12-24"},{"lineNumber":19,"author":{"gitId":"-"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2016-12-24"},{"lineNumber":20,"author":{"gitId":"zxgoh"},"content":"import seedu.address.model.customer.Customer;","lastModifiedDate":"2022-03-14"},{"lineNumber":21,"author":{"gitId":"zxgoh"},"content":"import seedu.address.model.customer.exceptions.DuplicateCustomerException;","lastModifiedDate":"2022-03-14"},{"lineNumber":22,"author":{"gitId":"jaegarpoon"},"content":"import seedu.address.model.dish.Dish;","lastModifiedDate":"2022-03-24"},{"lineNumber":23,"author":{"gitId":"jaegarpoon"},"content":"import seedu.address.model.driver.Driver;","lastModifiedDate":"2022-03-27"},{"lineNumber":24,"author":{"gitId":"zxgoh"},"content":"import seedu.address.model.item.Person;","lastModifiedDate":"2022-03-16"},{"lineNumber":25,"author":{"gitId":"zxgoh"},"content":"import seedu.address.model.order.Order;","lastModifiedDate":"2022-03-16"},{"lineNumber":26,"author":{"gitId":"zxgoh"},"content":"import seedu.address.testutil.CustomerBuilder;","lastModifiedDate":"2022-03-14"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-24"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-03-16"},{"lineNumber":29,"author":{"gitId":"-"},"content":"public class AddressBookTest {","lastModifiedDate":"2016-12-24"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-24"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    private final AddressBook addressBook \u003d new AddressBook();","lastModifiedDate":"2016-12-24"},{"lineNumber":32,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-24"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-12-24"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    public void constructor() {","lastModifiedDate":"2016-12-24"},{"lineNumber":35,"author":{"gitId":"zxgoh"},"content":"        assertEquals(Collections.emptyList(), addressBook.getCustomerList());","lastModifiedDate":"2022-03-14"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-24"},{"lineNumber":37,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-24"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-12-24"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    public void resetData_null_throwsNullPointerException() {","lastModifiedDate":"2017-05-15"},{"lineNumber":40,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e addressBook.resetData(null));","lastModifiedDate":"2019-03-23"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-24"},{"lineNumber":42,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-24"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-12-24"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    public void resetData_withValidReadOnlyAddressBook_replacesData() {","lastModifiedDate":"2016-12-24"},{"lineNumber":45,"author":{"gitId":"-"},"content":"        AddressBook newData \u003d getTypicalAddressBook();","lastModifiedDate":"2017-07-19"},{"lineNumber":46,"author":{"gitId":"-"},"content":"        addressBook.resetData(newData);","lastModifiedDate":"2016-12-24"},{"lineNumber":47,"author":{"gitId":"-"},"content":"        assertEquals(newData, addressBook);","lastModifiedDate":"2016-12-24"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-24"},{"lineNumber":49,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-24"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-12-24"},{"lineNumber":51,"author":{"gitId":"zxgoh"},"content":"    public void resetData_withDuplicateCustomers_throwsDuplicateCustomerException() {","lastModifiedDate":"2022-03-14"},{"lineNumber":52,"author":{"gitId":"zxgoh"},"content":"        // Two customers with the same identity fields","lastModifiedDate":"2022-03-14"},{"lineNumber":53,"author":{"gitId":"zxgoh"},"content":"        Customer editedAlice \u003d new CustomerBuilder(ALICE).withAddress(VALID_ADDRESS_BOB)","lastModifiedDate":"2022-03-14"},{"lineNumber":54,"author":{"gitId":"-"},"content":"                .build();","lastModifiedDate":"2018-04-19"},{"lineNumber":55,"author":{"gitId":"zxgoh"},"content":"        List\u003cCustomer\u003e newCustomers \u003d Arrays.asList(ALICE, editedAlice);","lastModifiedDate":"2022-03-14"},{"lineNumber":56,"author":{"gitId":"zxgoh"},"content":"        AddressBookStub newData \u003d new AddressBookStub(newCustomers);","lastModifiedDate":"2022-03-14"},{"lineNumber":57,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-24"},{"lineNumber":58,"author":{"gitId":"zxgoh"},"content":"        assertThrows(DuplicateCustomerException.class, () -\u003e addressBook.resetData(newData));","lastModifiedDate":"2022-03-14"},{"lineNumber":59,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-24"},{"lineNumber":60,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-24"},{"lineNumber":61,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-06"},{"lineNumber":62,"author":{"gitId":"zxgoh"},"content":"    public void hasCustomer_nullCustomer_throwsNullPointerException() {","lastModifiedDate":"2022-03-14"},{"lineNumber":63,"author":{"gitId":"zxgoh"},"content":"        assertThrows(NullPointerException.class, () -\u003e addressBook.hasCustomer(null));","lastModifiedDate":"2022-03-14"},{"lineNumber":64,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-06"},{"lineNumber":65,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-06"},{"lineNumber":66,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-06"},{"lineNumber":67,"author":{"gitId":"zxgoh"},"content":"    public void hasCustomer_customerNotInAddressBook_returnsFalse() {","lastModifiedDate":"2022-03-14"},{"lineNumber":68,"author":{"gitId":"zxgoh"},"content":"        assertFalse(addressBook.hasCustomer(ALICE));","lastModifiedDate":"2022-03-14"},{"lineNumber":69,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-06"},{"lineNumber":70,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-06"},{"lineNumber":71,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-06"},{"lineNumber":72,"author":{"gitId":"zxgoh"},"content":"    public void hasCustomer_customerInAddressBook_returnsTrue() {","lastModifiedDate":"2022-03-14"},{"lineNumber":73,"author":{"gitId":"zxgoh"},"content":"        addressBook.addCustomer(ALICE);","lastModifiedDate":"2022-03-14"},{"lineNumber":74,"author":{"gitId":"zxgoh"},"content":"        assertTrue(addressBook.hasCustomer(ALICE));","lastModifiedDate":"2022-03-14"},{"lineNumber":75,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-06"},{"lineNumber":76,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-06"},{"lineNumber":77,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-06"},{"lineNumber":78,"author":{"gitId":"zxgoh"},"content":"    public void hasCustomer_customerWithSameIdentityFieldsInAddressBook_returnsTrue() {","lastModifiedDate":"2022-03-14"},{"lineNumber":79,"author":{"gitId":"zxgoh"},"content":"        addressBook.addCustomer(ALICE);","lastModifiedDate":"2022-03-14"},{"lineNumber":80,"author":{"gitId":"zxgoh"},"content":"        Customer editedAlice \u003d new CustomerBuilder(ALICE).withAddress(VALID_ADDRESS_BOB)","lastModifiedDate":"2022-03-14"},{"lineNumber":81,"author":{"gitId":"-"},"content":"                .build();","lastModifiedDate":"2018-08-06"},{"lineNumber":82,"author":{"gitId":"zxgoh"},"content":"        assertTrue(addressBook.hasCustomer(editedAlice));","lastModifiedDate":"2022-03-14"},{"lineNumber":83,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-06"},{"lineNumber":84,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-06"},{"lineNumber":85,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-09-01"},{"lineNumber":86,"author":{"gitId":"zxgoh"},"content":"    public void getCustomerList_modifyList_throwsUnsupportedOperationException() {","lastModifiedDate":"2022-03-14"},{"lineNumber":87,"author":{"gitId":"zxgoh"},"content":"        assertThrows(UnsupportedOperationException.class, () -\u003e addressBook.getCustomerList().remove(0));","lastModifiedDate":"2022-03-14"},{"lineNumber":88,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-09-01"},{"lineNumber":89,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-09-01"},{"lineNumber":90,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-12-24"},{"lineNumber":91,"author":{"gitId":"zxgoh"},"content":"     * A stub ReadOnlyAddressBook whose customers list can violate interface constraints.","lastModifiedDate":"2022-03-14"},{"lineNumber":92,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-12-24"},{"lineNumber":93,"author":{"gitId":"-"},"content":"    private static class AddressBookStub implements ReadOnlyAddressBook {","lastModifiedDate":"2016-12-24"},{"lineNumber":94,"author":{"gitId":"-"},"content":"        private final ObservableList\u003cPerson\u003e persons \u003d FXCollections.observableArrayList();","lastModifiedDate":"2022-03-16"},{"lineNumber":95,"author":{"gitId":"zxgoh"},"content":"        private final ObservableList\u003cOrder\u003e orders \u003d FXCollections.observableArrayList();","lastModifiedDate":"2022-03-16"},{"lineNumber":96,"author":{"gitId":"zxgoh"},"content":"        private final ObservableList\u003cDriver\u003e drivers \u003d FXCollections.observableArrayList();","lastModifiedDate":"2022-03-16"},{"lineNumber":97,"author":{"gitId":"zxgoh"},"content":"        private final ObservableList\u003cDish\u003e dishes \u003d FXCollections.observableArrayList();","lastModifiedDate":"2022-03-16"},{"lineNumber":98,"author":{"gitId":"zxgoh"},"content":"        private final ObservableList\u003cCustomer\u003e customers \u003d FXCollections.observableArrayList();","lastModifiedDate":"2022-03-14"},{"lineNumber":99,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-24"},{"lineNumber":100,"author":{"gitId":"zxgoh"},"content":"        AddressBookStub(Collection\u003cCustomer\u003e customers) {","lastModifiedDate":"2022-03-14"},{"lineNumber":101,"author":{"gitId":"zxgoh"},"content":"            this.customers.setAll(customers);","lastModifiedDate":"2022-03-14"},{"lineNumber":102,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-12-24"},{"lineNumber":103,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-24"},{"lineNumber":104,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2016-12-24"},{"lineNumber":105,"author":{"gitId":"zxgoh"},"content":"        public ObservableList\u003cCustomer\u003e getCustomerList() {","lastModifiedDate":"2022-03-14"},{"lineNumber":106,"author":{"gitId":"zxgoh"},"content":"            return customers;","lastModifiedDate":"2022-03-14"},{"lineNumber":107,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-12-24"},{"lineNumber":108,"author":{"gitId":"zxgoh"},"content":"","lastModifiedDate":"2022-03-16"},{"lineNumber":109,"author":{"gitId":"zxgoh"},"content":"        @Override","lastModifiedDate":"2022-03-16"},{"lineNumber":110,"author":{"gitId":"zxgoh"},"content":"        public ObservableList\u003cOrder\u003e getOrderList() {","lastModifiedDate":"2022-03-16"},{"lineNumber":111,"author":{"gitId":"zxgoh"},"content":"            return orders;","lastModifiedDate":"2022-03-16"},{"lineNumber":112,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2022-03-16"},{"lineNumber":113,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-03-16"},{"lineNumber":114,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2022-03-16"},{"lineNumber":115,"author":{"gitId":"-"},"content":"        public ObservableList\u003cPerson\u003e getPersonList() {","lastModifiedDate":"2022-03-16"},{"lineNumber":116,"author":{"gitId":"zxgoh"},"content":"            return null;","lastModifiedDate":"2022-03-16"},{"lineNumber":117,"author":{"gitId":"zxgoh"},"content":"        }","lastModifiedDate":"2022-03-16"},{"lineNumber":118,"author":{"gitId":"zxgoh"},"content":"","lastModifiedDate":"2022-03-16"},{"lineNumber":119,"author":{"gitId":"zxgoh"},"content":"        @Override","lastModifiedDate":"2022-03-16"},{"lineNumber":120,"author":{"gitId":"zxgoh"},"content":"        public ObservableList\u003cDriver\u003e getDriverList() {","lastModifiedDate":"2022-03-16"},{"lineNumber":121,"author":{"gitId":"zxgoh"},"content":"            return drivers;","lastModifiedDate":"2022-03-16"},{"lineNumber":122,"author":{"gitId":"zxgoh"},"content":"        }","lastModifiedDate":"2022-03-16"},{"lineNumber":123,"author":{"gitId":"zxgoh"},"content":"","lastModifiedDate":"2022-03-16"},{"lineNumber":124,"author":{"gitId":"zxgoh"},"content":"        @Override","lastModifiedDate":"2022-03-16"},{"lineNumber":125,"author":{"gitId":"zxgoh"},"content":"        public ObservableList\u003cDish\u003e getDishList() {","lastModifiedDate":"2022-03-16"},{"lineNumber":126,"author":{"gitId":"zxgoh"},"content":"            return dishes;","lastModifiedDate":"2022-03-16"},{"lineNumber":127,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2022-03-16"},{"lineNumber":128,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-24"},{"lineNumber":129,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-24"},{"lineNumber":130,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-12-24"}],"authorContributionMap":{"jaegarpoon":2,"-":77,"zxgoh":51}},{"path":"src/test/java/seedu/address/model/ModelManagerTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.model;","lastModifiedDate":"2017-05-31"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-31"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2019-03-15"},{"lineNumber":6,"author":{"gitId":"zxgoh"},"content":"import static seedu.address.model.Model.PREDICATE_SHOW_ALL_CUSTOMERS;","lastModifiedDate":"2022-03-14"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.Assert.assertThrows;","lastModifiedDate":"2019-03-23"},{"lineNumber":8,"author":{"gitId":"zxgoh"},"content":"import static seedu.address.testutil.TypicalCustomers.ALICE;","lastModifiedDate":"2022-03-14"},{"lineNumber":9,"author":{"gitId":"zxgoh"},"content":"import static seedu.address.testutil.TypicalCustomers.BENSON;","lastModifiedDate":"2022-03-14"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-31"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-11-27"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import java.nio.file.Paths;","lastModifiedDate":"2018-08-09"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import java.util.Arrays;","lastModifiedDate":"2017-05-31"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-31"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-31"},{"lineNumber":17,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.GuiSettings;","lastModifiedDate":"2018-11-27"},{"lineNumber":18,"author":{"gitId":"zxgoh"},"content":"import seedu.address.model.customer.NameCustomerContainsKeywordsPredicate;","lastModifiedDate":"2022-03-15"},{"lineNumber":19,"author":{"gitId":"-"},"content":"import seedu.address.testutil.AddressBookBuilder;","lastModifiedDate":"2017-05-31"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-31"},{"lineNumber":21,"author":{"gitId":"-"},"content":"public class ModelManagerTest {","lastModifiedDate":"2017-05-31"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-09-01"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    private ModelManager modelManager \u003d new ModelManager();","lastModifiedDate":"2018-08-06"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-06"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-11-27"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    public void constructor() {","lastModifiedDate":"2018-11-27"},{"lineNumber":27,"author":{"gitId":"-"},"content":"        assertEquals(new UserPrefs(), modelManager.getUserPrefs());","lastModifiedDate":"2018-11-27"},{"lineNumber":28,"author":{"gitId":"-"},"content":"        assertEquals(new GuiSettings(), modelManager.getGuiSettings());","lastModifiedDate":"2018-11-27"},{"lineNumber":29,"author":{"gitId":"-"},"content":"        assertEquals(new AddressBook(), new AddressBook(modelManager.getAddressBook()));","lastModifiedDate":"2018-11-27"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":31,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-11-27"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    public void setUserPrefs_nullUserPrefs_throwsNullPointerException() {","lastModifiedDate":"2018-11-27"},{"lineNumber":34,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e modelManager.setUserPrefs(null));","lastModifiedDate":"2019-03-23"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":36,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-11-27"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    public void setUserPrefs_validUserPrefs_copiesUserPrefs() {","lastModifiedDate":"2018-12-06"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        UserPrefs userPrefs \u003d new UserPrefs();","lastModifiedDate":"2018-11-27"},{"lineNumber":40,"author":{"gitId":"-"},"content":"        userPrefs.setAddressBookFilePath(Paths.get(\"address/book/file/path\"));","lastModifiedDate":"2018-11-27"},{"lineNumber":41,"author":{"gitId":"-"},"content":"        userPrefs.setGuiSettings(new GuiSettings(1, 2, 3, 4));","lastModifiedDate":"2018-11-27"},{"lineNumber":42,"author":{"gitId":"-"},"content":"        modelManager.setUserPrefs(userPrefs);","lastModifiedDate":"2018-11-27"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        assertEquals(userPrefs, modelManager.getUserPrefs());","lastModifiedDate":"2018-11-27"},{"lineNumber":44,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-06"},{"lineNumber":45,"author":{"gitId":"-"},"content":"        // Modifying userPrefs should not modify modelManager\u0027s userPrefs","lastModifiedDate":"2018-12-06"},{"lineNumber":46,"author":{"gitId":"-"},"content":"        UserPrefs oldUserPrefs \u003d new UserPrefs(userPrefs);","lastModifiedDate":"2018-12-06"},{"lineNumber":47,"author":{"gitId":"-"},"content":"        userPrefs.setAddressBookFilePath(Paths.get(\"new/address/book/file/path\"));","lastModifiedDate":"2018-12-06"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        assertEquals(oldUserPrefs, modelManager.getUserPrefs());","lastModifiedDate":"2018-12-06"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":50,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-11-27"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    public void setGuiSettings_nullGuiSettings_throwsNullPointerException() {","lastModifiedDate":"2018-11-27"},{"lineNumber":53,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e modelManager.setGuiSettings(null));","lastModifiedDate":"2019-03-23"},{"lineNumber":54,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":55,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-11-27"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    public void setGuiSettings_validGuiSettings_setsGuiSettings() {","lastModifiedDate":"2018-11-27"},{"lineNumber":58,"author":{"gitId":"-"},"content":"        GuiSettings guiSettings \u003d new GuiSettings(1, 2, 3, 4);","lastModifiedDate":"2018-11-27"},{"lineNumber":59,"author":{"gitId":"-"},"content":"        modelManager.setGuiSettings(guiSettings);","lastModifiedDate":"2018-11-27"},{"lineNumber":60,"author":{"gitId":"-"},"content":"        assertEquals(guiSettings, modelManager.getGuiSettings());","lastModifiedDate":"2018-11-27"},{"lineNumber":61,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":62,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":63,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-11-27"},{"lineNumber":64,"author":{"gitId":"-"},"content":"    public void setAddressBookFilePath_nullPath_throwsNullPointerException() {","lastModifiedDate":"2018-11-27"},{"lineNumber":65,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e modelManager.setAddressBookFilePath(null));","lastModifiedDate":"2019-03-23"},{"lineNumber":66,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":67,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":68,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-11-27"},{"lineNumber":69,"author":{"gitId":"-"},"content":"    public void setAddressBookFilePath_validPath_setsAddressBookFilePath() {","lastModifiedDate":"2018-11-27"},{"lineNumber":70,"author":{"gitId":"-"},"content":"        Path path \u003d Paths.get(\"address/book/file/path\");","lastModifiedDate":"2018-11-27"},{"lineNumber":71,"author":{"gitId":"-"},"content":"        modelManager.setAddressBookFilePath(path);","lastModifiedDate":"2018-11-27"},{"lineNumber":72,"author":{"gitId":"-"},"content":"        assertEquals(path, modelManager.getAddressBookFilePath());","lastModifiedDate":"2018-11-27"},{"lineNumber":73,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":74,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":75,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-06"},{"lineNumber":76,"author":{"gitId":"zxgoh"},"content":"    public void hasCustomer_nullCustomer_throwsNullPointerException() {","lastModifiedDate":"2022-03-14"},{"lineNumber":77,"author":{"gitId":"zxgoh"},"content":"        assertThrows(NullPointerException.class, () -\u003e modelManager.hasCustomer(null));","lastModifiedDate":"2022-03-14"},{"lineNumber":78,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-06"},{"lineNumber":79,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-06"},{"lineNumber":80,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-06"},{"lineNumber":81,"author":{"gitId":"zxgoh"},"content":"    public void hasCustomer_customerNotInAddressBook_returnsFalse() {","lastModifiedDate":"2022-03-14"},{"lineNumber":82,"author":{"gitId":"zxgoh"},"content":"        assertFalse(modelManager.hasCustomer(ALICE));","lastModifiedDate":"2022-03-14"},{"lineNumber":83,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-06"},{"lineNumber":84,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-06"},{"lineNumber":85,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-06"},{"lineNumber":86,"author":{"gitId":"zxgoh"},"content":"    public void hasCustomer_customerInAddressBook_returnsTrue() {","lastModifiedDate":"2022-03-14"},{"lineNumber":87,"author":{"gitId":"zxgoh"},"content":"        modelManager.addCustomer(ALICE);","lastModifiedDate":"2022-03-14"},{"lineNumber":88,"author":{"gitId":"zxgoh"},"content":"        assertTrue(modelManager.hasCustomer(ALICE));","lastModifiedDate":"2022-03-14"},{"lineNumber":89,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-06"},{"lineNumber":90,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-06"},{"lineNumber":91,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-09-01"},{"lineNumber":92,"author":{"gitId":"zxgoh"},"content":"    public void getFilteredCustomerList_modifyList_throwsUnsupportedOperationException() {","lastModifiedDate":"2022-03-14"},{"lineNumber":93,"author":{"gitId":"zxgoh"},"content":"        assertThrows(UnsupportedOperationException.class, () -\u003e modelManager.getFilteredCustomerList().remove(0));","lastModifiedDate":"2022-03-14"},{"lineNumber":94,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-09-01"},{"lineNumber":95,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-31"},{"lineNumber":96,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-31"},{"lineNumber":97,"author":{"gitId":"-"},"content":"    public void equals() {","lastModifiedDate":"2017-08-15"},{"lineNumber":98,"author":{"gitId":"zxgoh"},"content":"        AddressBook addressBook \u003d new AddressBookBuilder().withCustomer(ALICE).withCustomer(BENSON).build();","lastModifiedDate":"2022-03-14"},{"lineNumber":99,"author":{"gitId":"-"},"content":"        AddressBook differentAddressBook \u003d new AddressBook();","lastModifiedDate":"2017-05-31"},{"lineNumber":100,"author":{"gitId":"-"},"content":"        UserPrefs userPrefs \u003d new UserPrefs();","lastModifiedDate":"2017-05-31"},{"lineNumber":101,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-31"},{"lineNumber":102,"author":{"gitId":"-"},"content":"        // same values -\u003e returns true","lastModifiedDate":"2017-05-31"},{"lineNumber":103,"author":{"gitId":"-"},"content":"        modelManager \u003d new ModelManager(addressBook, userPrefs);","lastModifiedDate":"2018-08-06"},{"lineNumber":104,"author":{"gitId":"-"},"content":"        ModelManager modelManagerCopy \u003d new ModelManager(addressBook, userPrefs);","lastModifiedDate":"2017-05-31"},{"lineNumber":105,"author":{"gitId":"-"},"content":"        assertTrue(modelManager.equals(modelManagerCopy));","lastModifiedDate":"2017-05-31"},{"lineNumber":106,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-31"},{"lineNumber":107,"author":{"gitId":"-"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2017-05-31"},{"lineNumber":108,"author":{"gitId":"-"},"content":"        assertTrue(modelManager.equals(modelManager));","lastModifiedDate":"2017-05-31"},{"lineNumber":109,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-31"},{"lineNumber":110,"author":{"gitId":"-"},"content":"        // null -\u003e returns false","lastModifiedDate":"2017-05-31"},{"lineNumber":111,"author":{"gitId":"-"},"content":"        assertFalse(modelManager.equals(null));","lastModifiedDate":"2017-05-31"},{"lineNumber":112,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-31"},{"lineNumber":113,"author":{"gitId":"-"},"content":"        // different types -\u003e returns false","lastModifiedDate":"2017-05-31"},{"lineNumber":114,"author":{"gitId":"-"},"content":"        assertFalse(modelManager.equals(5));","lastModifiedDate":"2017-05-31"},{"lineNumber":115,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-31"},{"lineNumber":116,"author":{"gitId":"-"},"content":"        // different addressBook -\u003e returns false","lastModifiedDate":"2017-05-31"},{"lineNumber":117,"author":{"gitId":"-"},"content":"        assertFalse(modelManager.equals(new ModelManager(differentAddressBook, userPrefs)));","lastModifiedDate":"2017-05-31"},{"lineNumber":118,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-31"},{"lineNumber":119,"author":{"gitId":"-"},"content":"        // different filteredList -\u003e returns false","lastModifiedDate":"2017-05-31"},{"lineNumber":120,"author":{"gitId":"-"},"content":"        String[] keywords \u003d ALICE.getName().fullName.split(\"\\\\s+\");","lastModifiedDate":"2017-07-19"},{"lineNumber":121,"author":{"gitId":"zxgoh"},"content":"        modelManager.updateFilteredCustomerList(new NameCustomerContainsKeywordsPredicate(Arrays.asList(keywords)));","lastModifiedDate":"2022-03-15"},{"lineNumber":122,"author":{"gitId":"-"},"content":"        assertFalse(modelManager.equals(new ModelManager(addressBook, userPrefs)));","lastModifiedDate":"2017-05-31"},{"lineNumber":123,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-08-05"},{"lineNumber":124,"author":{"gitId":"-"},"content":"        // resets modelManager to initial state for upcoming tests","lastModifiedDate":"2017-08-05"},{"lineNumber":125,"author":{"gitId":"zxgoh"},"content":"        modelManager.updateFilteredCustomerList(PREDICATE_SHOW_ALL_CUSTOMERS);","lastModifiedDate":"2022-03-14"},{"lineNumber":126,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-31"},{"lineNumber":127,"author":{"gitId":"-"},"content":"        // different userPrefs -\u003e returns false","lastModifiedDate":"2018-11-27"},{"lineNumber":128,"author":{"gitId":"-"},"content":"        UserPrefs differentUserPrefs \u003d new UserPrefs();","lastModifiedDate":"2017-05-31"},{"lineNumber":129,"author":{"gitId":"-"},"content":"        differentUserPrefs.setAddressBookFilePath(Paths.get(\"differentFilePath\"));","lastModifiedDate":"2018-08-09"},{"lineNumber":130,"author":{"gitId":"-"},"content":"        assertFalse(modelManager.equals(new ModelManager(addressBook, differentUserPrefs)));","lastModifiedDate":"2018-11-27"},{"lineNumber":131,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-31"},{"lineNumber":132,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-05-31"}],"authorContributionMap":{"-":116,"zxgoh":16}},{"path":"src/test/java/seedu/address/model/customer/AddressCustomerTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"zxgoh"},"content":"package seedu.address.model.customer;","lastModifiedDate":"2022-03-14"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-16"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.Assert.assertThrows;","lastModifiedDate":"2019-03-14"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-16"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-16"},{"lineNumber":9,"author":{"gitId":"zxgoh"},"content":"public class AddressCustomerTest {","lastModifiedDate":"2022-03-15"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-16"},{"lineNumber":11,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-12-04"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    public void constructor_null_throwsNullPointerException() {","lastModifiedDate":"2017-12-04"},{"lineNumber":13,"author":{"gitId":"zxgoh"},"content":"        assertThrows(NullPointerException.class, () -\u003e new AddressCustomer(null));","lastModifiedDate":"2022-03-15"},{"lineNumber":14,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-12-04"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-12-04"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-30"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    public void constructor_invalidAddress_throwsIllegalArgumentException() {","lastModifiedDate":"2017-05-30"},{"lineNumber":18,"author":{"gitId":"-"},"content":"        String invalidAddress \u003d \"\";","lastModifiedDate":"2017-05-30"},{"lineNumber":19,"author":{"gitId":"zxgoh"},"content":"        assertThrows(IllegalArgumentException.class, () -\u003e new AddressCustomer(invalidAddress));","lastModifiedDate":"2022-03-15"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-30"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-30"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-01-16"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    public void isValidAddress() {","lastModifiedDate":"2017-01-16"},{"lineNumber":24,"author":{"gitId":"-"},"content":"        // null address","lastModifiedDate":"2017-12-04"},{"lineNumber":25,"author":{"gitId":"zxgoh"},"content":"        assertThrows(NullPointerException.class, () -\u003e AddressCustomer.isValidAddress(null));","lastModifiedDate":"2022-03-15"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-12-04"},{"lineNumber":27,"author":{"gitId":"-"},"content":"        // invalid addresses","lastModifiedDate":"2017-01-16"},{"lineNumber":28,"author":{"gitId":"zxgoh"},"content":"        assertFalse(AddressCustomer.isValidAddress(\"\")); // empty string","lastModifiedDate":"2022-03-15"},{"lineNumber":29,"author":{"gitId":"zxgoh"},"content":"        assertFalse(AddressCustomer.isValidAddress(\" \")); // spaces only","lastModifiedDate":"2022-03-15"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-16"},{"lineNumber":31,"author":{"gitId":"-"},"content":"        // valid addresses","lastModifiedDate":"2017-01-16"},{"lineNumber":32,"author":{"gitId":"zxgoh"},"content":"        assertTrue(AddressCustomer.isValidAddress(\"Blk 456, Den Road, #01-355\"));","lastModifiedDate":"2022-03-15"},{"lineNumber":33,"author":{"gitId":"zxgoh"},"content":"        assertTrue(AddressCustomer.isValidAddress(\"-\")); // one character","lastModifiedDate":"2022-03-15"},{"lineNumber":34,"author":{"gitId":"zxgoh"},"content":"        assertTrue(AddressCustomer.isValidAddress(\"Leng Inc; 1234 Market St; San Francisco CA 2349879; USA\")); // long","lastModifiedDate":"2022-03-16"},{"lineNumber":35,"author":{"gitId":"zxgoh"},"content":"        // address","lastModifiedDate":"2022-03-16"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-01-16"},{"lineNumber":37,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-01-16"}],"authorContributionMap":{"zxgoh":11,"-":26}},{"path":"src/test/java/seedu/address/model/customer/CustomerTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"zxgoh"},"content":"package seedu.address.model.customer;","lastModifiedDate":"2022-03-14"},{"lineNumber":2,"author":{"gitId":"zxgoh"},"content":"","lastModifiedDate":"2022-03-14"},{"lineNumber":3,"author":{"gitId":"zxgoh"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2022-03-14"},{"lineNumber":4,"author":{"gitId":"zxgoh"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2022-03-14"},{"lineNumber":5,"author":{"gitId":"zxgoh"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_ADDRESS_BOB;","lastModifiedDate":"2022-03-14"},{"lineNumber":6,"author":{"gitId":"zxgoh"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_NAME_BOB;","lastModifiedDate":"2022-03-14"},{"lineNumber":7,"author":{"gitId":"xzzz3"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_PHONE_AMY;","lastModifiedDate":"2022-03-31"},{"lineNumber":8,"author":{"gitId":"zxgoh"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_PHONE_BOB;","lastModifiedDate":"2022-03-14"},{"lineNumber":9,"author":{"gitId":"zxgoh"},"content":"import static seedu.address.testutil.TypicalCustomers.ALICE;","lastModifiedDate":"2022-03-14"},{"lineNumber":10,"author":{"gitId":"zxgoh"},"content":"import static seedu.address.testutil.TypicalCustomers.BOB;","lastModifiedDate":"2022-03-14"},{"lineNumber":11,"author":{"gitId":"zxgoh"},"content":"","lastModifiedDate":"2022-03-14"},{"lineNumber":12,"author":{"gitId":"zxgoh"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2022-03-14"},{"lineNumber":13,"author":{"gitId":"zxgoh"},"content":"","lastModifiedDate":"2022-03-14"},{"lineNumber":14,"author":{"gitId":"zxgoh"},"content":"import seedu.address.testutil.CustomerBuilder;","lastModifiedDate":"2022-03-14"},{"lineNumber":15,"author":{"gitId":"zxgoh"},"content":"","lastModifiedDate":"2022-03-14"},{"lineNumber":16,"author":{"gitId":"zxgoh"},"content":"public class CustomerTest {","lastModifiedDate":"2022-03-14"},{"lineNumber":17,"author":{"gitId":"zxgoh"},"content":"","lastModifiedDate":"2022-03-14"},{"lineNumber":18,"author":{"gitId":"zxgoh"},"content":"","lastModifiedDate":"2022-03-14"},{"lineNumber":19,"author":{"gitId":"zxgoh"},"content":"    @Test","lastModifiedDate":"2022-03-14"},{"lineNumber":20,"author":{"gitId":"zxgoh"},"content":"    public void isSameCustomer() {","lastModifiedDate":"2022-03-14"},{"lineNumber":21,"author":{"gitId":"zxgoh"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2022-03-14"},{"lineNumber":22,"author":{"gitId":"zxgoh"},"content":"        assertTrue(ALICE.isSameCustomer(ALICE));","lastModifiedDate":"2022-03-14"},{"lineNumber":23,"author":{"gitId":"zxgoh"},"content":"","lastModifiedDate":"2022-03-14"},{"lineNumber":24,"author":{"gitId":"zxgoh"},"content":"        // null -\u003e returns false","lastModifiedDate":"2022-03-14"},{"lineNumber":25,"author":{"gitId":"zxgoh"},"content":"        assertFalse(ALICE.isSameCustomer(null));","lastModifiedDate":"2022-03-14"},{"lineNumber":26,"author":{"gitId":"zxgoh"},"content":"","lastModifiedDate":"2022-03-14"},{"lineNumber":27,"author":{"gitId":"xzzz3"},"content":"        // same name and number, all other attributes different -\u003e returns true","lastModifiedDate":"2022-03-31"},{"lineNumber":28,"author":{"gitId":"zxgoh"},"content":"        Customer editedAlice \u003d","lastModifiedDate":"2022-03-14"},{"lineNumber":29,"author":{"gitId":"xzzz3"},"content":"                new CustomerBuilder(ALICE)","lastModifiedDate":"2022-03-31"},{"lineNumber":30,"author":{"gitId":"zxgoh"},"content":"                                .withAddress(VALID_ADDRESS_BOB).build();","lastModifiedDate":"2022-03-14"},{"lineNumber":31,"author":{"gitId":"zxgoh"},"content":"        assertTrue(ALICE.isSameCustomer(editedAlice));","lastModifiedDate":"2022-03-14"},{"lineNumber":32,"author":{"gitId":"zxgoh"},"content":"","lastModifiedDate":"2022-03-14"},{"lineNumber":33,"author":{"gitId":"xzzz3"},"content":"        // different name and number, all other attributes same -\u003e returns false","lastModifiedDate":"2022-03-31"},{"lineNumber":34,"author":{"gitId":"xzzz3"},"content":"        editedAlice \u003d new CustomerBuilder(ALICE).withName(VALID_NAME_BOB).withPhone(VALID_PHONE_BOB).build();","lastModifiedDate":"2022-03-31"},{"lineNumber":35,"author":{"gitId":"zxgoh"},"content":"        assertFalse(ALICE.isSameCustomer(editedAlice));","lastModifiedDate":"2022-03-14"},{"lineNumber":36,"author":{"gitId":"zxgoh"},"content":"","lastModifiedDate":"2022-03-14"},{"lineNumber":37,"author":{"gitId":"xzzz3"},"content":"        // name differs in case, different number, all other attributes same -\u003e returns false","lastModifiedDate":"2022-03-31"},{"lineNumber":38,"author":{"gitId":"xzzz3"},"content":"        Customer editedBob \u003d new CustomerBuilder(BOB).withName(VALID_NAME_BOB.toLowerCase())","lastModifiedDate":"2022-03-31"},{"lineNumber":39,"author":{"gitId":"xzzz3"},"content":"                .withPhone(VALID_PHONE_AMY).build();","lastModifiedDate":"2022-03-31"},{"lineNumber":40,"author":{"gitId":"zxgoh"},"content":"        assertFalse(BOB.isSameCustomer(editedBob));","lastModifiedDate":"2022-03-14"},{"lineNumber":41,"author":{"gitId":"zxgoh"},"content":"","lastModifiedDate":"2022-03-14"},{"lineNumber":42,"author":{"gitId":"xzzz3"},"content":"        // name has trailing spaces, different number, all other attributes same -\u003e returns false","lastModifiedDate":"2022-03-31"},{"lineNumber":43,"author":{"gitId":"zxgoh"},"content":"        String nameWithTrailingSpaces \u003d VALID_NAME_BOB + \" \";","lastModifiedDate":"2022-03-14"},{"lineNumber":44,"author":{"gitId":"xzzz3"},"content":"        editedBob \u003d new CustomerBuilder(BOB).withName(nameWithTrailingSpaces).withPhone(VALID_PHONE_AMY).build();","lastModifiedDate":"2022-03-31"},{"lineNumber":45,"author":{"gitId":"zxgoh"},"content":"        assertFalse(BOB.isSameCustomer(editedBob));","lastModifiedDate":"2022-03-14"},{"lineNumber":46,"author":{"gitId":"zxgoh"},"content":"    }","lastModifiedDate":"2022-03-14"},{"lineNumber":47,"author":{"gitId":"zxgoh"},"content":"","lastModifiedDate":"2022-03-14"},{"lineNumber":48,"author":{"gitId":"zxgoh"},"content":"    @Test","lastModifiedDate":"2022-03-14"},{"lineNumber":49,"author":{"gitId":"zxgoh"},"content":"    public void equals() {","lastModifiedDate":"2022-03-14"},{"lineNumber":50,"author":{"gitId":"zxgoh"},"content":"        // same values -\u003e returns true","lastModifiedDate":"2022-03-14"},{"lineNumber":51,"author":{"gitId":"zxgoh"},"content":"        Customer aliceCopy \u003d new CustomerBuilder(ALICE).build();","lastModifiedDate":"2022-03-14"},{"lineNumber":52,"author":{"gitId":"zxgoh"},"content":"        assertTrue(ALICE.equals(aliceCopy));","lastModifiedDate":"2022-03-14"},{"lineNumber":53,"author":{"gitId":"zxgoh"},"content":"","lastModifiedDate":"2022-03-14"},{"lineNumber":54,"author":{"gitId":"zxgoh"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2022-03-14"},{"lineNumber":55,"author":{"gitId":"zxgoh"},"content":"        assertTrue(ALICE.equals(ALICE));","lastModifiedDate":"2022-03-14"},{"lineNumber":56,"author":{"gitId":"zxgoh"},"content":"","lastModifiedDate":"2022-03-14"},{"lineNumber":57,"author":{"gitId":"zxgoh"},"content":"        // null -\u003e returns false","lastModifiedDate":"2022-03-14"},{"lineNumber":58,"author":{"gitId":"zxgoh"},"content":"        assertFalse(ALICE.equals(null));","lastModifiedDate":"2022-03-14"},{"lineNumber":59,"author":{"gitId":"zxgoh"},"content":"","lastModifiedDate":"2022-03-14"},{"lineNumber":60,"author":{"gitId":"zxgoh"},"content":"        // different type -\u003e returns false","lastModifiedDate":"2022-03-14"},{"lineNumber":61,"author":{"gitId":"zxgoh"},"content":"        assertFalse(ALICE.equals(5));","lastModifiedDate":"2022-03-14"},{"lineNumber":62,"author":{"gitId":"zxgoh"},"content":"","lastModifiedDate":"2022-03-14"},{"lineNumber":63,"author":{"gitId":"zxgoh"},"content":"        // different customer -\u003e returns false","lastModifiedDate":"2022-03-14"},{"lineNumber":64,"author":{"gitId":"zxgoh"},"content":"        assertFalse(ALICE.equals(BOB));","lastModifiedDate":"2022-03-14"},{"lineNumber":65,"author":{"gitId":"zxgoh"},"content":"","lastModifiedDate":"2022-03-14"},{"lineNumber":66,"author":{"gitId":"zxgoh"},"content":"        // different name -\u003e returns false","lastModifiedDate":"2022-03-14"},{"lineNumber":67,"author":{"gitId":"zxgoh"},"content":"        Customer editedAlice \u003d new CustomerBuilder(ALICE).withName(VALID_NAME_BOB).build();","lastModifiedDate":"2022-03-14"},{"lineNumber":68,"author":{"gitId":"zxgoh"},"content":"        assertFalse(ALICE.equals(editedAlice));","lastModifiedDate":"2022-03-14"},{"lineNumber":69,"author":{"gitId":"zxgoh"},"content":"","lastModifiedDate":"2022-03-14"},{"lineNumber":70,"author":{"gitId":"zxgoh"},"content":"        // different phone -\u003e returns false","lastModifiedDate":"2022-03-14"},{"lineNumber":71,"author":{"gitId":"zxgoh"},"content":"        editedAlice \u003d new CustomerBuilder(ALICE).withPhone(VALID_PHONE_BOB).build();","lastModifiedDate":"2022-03-14"},{"lineNumber":72,"author":{"gitId":"zxgoh"},"content":"        assertFalse(ALICE.equals(editedAlice));","lastModifiedDate":"2022-03-14"},{"lineNumber":73,"author":{"gitId":"zxgoh"},"content":"","lastModifiedDate":"2022-03-14"},{"lineNumber":74,"author":{"gitId":"zxgoh"},"content":"","lastModifiedDate":"2022-03-14"},{"lineNumber":75,"author":{"gitId":"zxgoh"},"content":"        // different address -\u003e returns false","lastModifiedDate":"2022-03-14"},{"lineNumber":76,"author":{"gitId":"zxgoh"},"content":"        editedAlice \u003d new CustomerBuilder(ALICE).withAddress(VALID_ADDRESS_BOB).build();","lastModifiedDate":"2022-03-14"},{"lineNumber":77,"author":{"gitId":"zxgoh"},"content":"        assertFalse(ALICE.equals(editedAlice));","lastModifiedDate":"2022-03-14"},{"lineNumber":78,"author":{"gitId":"zxgoh"},"content":"","lastModifiedDate":"2022-03-14"},{"lineNumber":79,"author":{"gitId":"zxgoh"},"content":"","lastModifiedDate":"2022-03-14"},{"lineNumber":80,"author":{"gitId":"zxgoh"},"content":"    }","lastModifiedDate":"2022-03-14"},{"lineNumber":81,"author":{"gitId":"zxgoh"},"content":"}","lastModifiedDate":"2022-03-14"}],"authorContributionMap":{"xzzz3":10,"zxgoh":71}},{"path":"src/test/java/seedu/address/model/customer/EmailCustomerTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"zxgoh"},"content":"package seedu.address.model.customer;","lastModifiedDate":"2022-03-15"},{"lineNumber":2,"author":{"gitId":"zxgoh"},"content":"","lastModifiedDate":"2022-03-15"},{"lineNumber":3,"author":{"gitId":"zxgoh"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2022-03-15"},{"lineNumber":4,"author":{"gitId":"zxgoh"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2022-03-15"},{"lineNumber":5,"author":{"gitId":"zxgoh"},"content":"import static seedu.address.testutil.Assert.assertThrows;","lastModifiedDate":"2022-03-15"},{"lineNumber":6,"author":{"gitId":"zxgoh"},"content":"","lastModifiedDate":"2022-03-15"},{"lineNumber":7,"author":{"gitId":"zxgoh"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2022-03-15"},{"lineNumber":8,"author":{"gitId":"zxgoh"},"content":"","lastModifiedDate":"2022-03-15"},{"lineNumber":9,"author":{"gitId":"zxgoh"},"content":"public class EmailCustomerTest {","lastModifiedDate":"2022-03-15"},{"lineNumber":10,"author":{"gitId":"zxgoh"},"content":"","lastModifiedDate":"2022-03-15"},{"lineNumber":11,"author":{"gitId":"zxgoh"},"content":"    @Test","lastModifiedDate":"2022-03-15"},{"lineNumber":12,"author":{"gitId":"zxgoh"},"content":"    public void constructor_null_throwsNullPointerException() {","lastModifiedDate":"2022-03-15"},{"lineNumber":13,"author":{"gitId":"zxgoh"},"content":"        assertThrows(NullPointerException.class, () -\u003e new EmailCustomer(null));","lastModifiedDate":"2022-03-15"},{"lineNumber":14,"author":{"gitId":"zxgoh"},"content":"    }","lastModifiedDate":"2022-03-15"},{"lineNumber":15,"author":{"gitId":"zxgoh"},"content":"","lastModifiedDate":"2022-03-15"},{"lineNumber":16,"author":{"gitId":"zxgoh"},"content":"    @Test","lastModifiedDate":"2022-03-15"},{"lineNumber":17,"author":{"gitId":"zxgoh"},"content":"    public void constructor_invalidEmail_throwsIllegalArgumentException() {","lastModifiedDate":"2022-03-15"},{"lineNumber":18,"author":{"gitId":"zxgoh"},"content":"        String invalidEmail \u003d \"\";","lastModifiedDate":"2022-03-15"},{"lineNumber":19,"author":{"gitId":"zxgoh"},"content":"        assertThrows(IllegalArgumentException.class, () -\u003e new EmailCustomer(invalidEmail));","lastModifiedDate":"2022-03-15"},{"lineNumber":20,"author":{"gitId":"zxgoh"},"content":"    }","lastModifiedDate":"2022-03-15"},{"lineNumber":21,"author":{"gitId":"zxgoh"},"content":"","lastModifiedDate":"2022-03-15"},{"lineNumber":22,"author":{"gitId":"zxgoh"},"content":"    @Test","lastModifiedDate":"2022-03-15"},{"lineNumber":23,"author":{"gitId":"zxgoh"},"content":"    public void isValidEmail() {","lastModifiedDate":"2022-03-15"},{"lineNumber":24,"author":{"gitId":"zxgoh"},"content":"        // null email","lastModifiedDate":"2022-03-15"},{"lineNumber":25,"author":{"gitId":"zxgoh"},"content":"        assertThrows(NullPointerException.class, () -\u003e EmailCustomer.isValidEmail(null));","lastModifiedDate":"2022-03-15"},{"lineNumber":26,"author":{"gitId":"zxgoh"},"content":"","lastModifiedDate":"2022-03-15"},{"lineNumber":27,"author":{"gitId":"zxgoh"},"content":"        // blank email","lastModifiedDate":"2022-03-15"},{"lineNumber":28,"author":{"gitId":"zxgoh"},"content":"        assertFalse(EmailCustomer.isValidEmail(\"\")); // empty string","lastModifiedDate":"2022-03-15"},{"lineNumber":29,"author":{"gitId":"zxgoh"},"content":"        assertFalse(EmailCustomer.isValidEmail(\" \")); // spaces only","lastModifiedDate":"2022-03-15"},{"lineNumber":30,"author":{"gitId":"zxgoh"},"content":"","lastModifiedDate":"2022-03-15"},{"lineNumber":31,"author":{"gitId":"zxgoh"},"content":"        // missing parts","lastModifiedDate":"2022-03-15"},{"lineNumber":32,"author":{"gitId":"zxgoh"},"content":"        assertFalse(EmailCustomer.isValidEmail(\"@example.com\")); // missing local part","lastModifiedDate":"2022-03-15"},{"lineNumber":33,"author":{"gitId":"zxgoh"},"content":"        assertFalse(EmailCustomer.isValidEmail(\"peterjackexample.com\")); // missing \u0027@\u0027 symbol","lastModifiedDate":"2022-03-15"},{"lineNumber":34,"author":{"gitId":"zxgoh"},"content":"        assertFalse(EmailCustomer.isValidEmail(\"peterjack@\")); // missing domain name","lastModifiedDate":"2022-03-15"},{"lineNumber":35,"author":{"gitId":"zxgoh"},"content":"","lastModifiedDate":"2022-03-15"},{"lineNumber":36,"author":{"gitId":"zxgoh"},"content":"        // invalid parts","lastModifiedDate":"2022-03-15"},{"lineNumber":37,"author":{"gitId":"zxgoh"},"content":"        assertFalse(EmailCustomer.isValidEmail(\"peterjack@-\")); // invalid domain name","lastModifiedDate":"2022-03-15"},{"lineNumber":38,"author":{"gitId":"zxgoh"},"content":"        assertFalse(EmailCustomer.isValidEmail(\"peterjack@exam_ple.com\")); // underscore in domain name","lastModifiedDate":"2022-03-15"},{"lineNumber":39,"author":{"gitId":"zxgoh"},"content":"        assertFalse(EmailCustomer.isValidEmail(\"peter jack@example.com\")); // spaces in local part","lastModifiedDate":"2022-03-15"},{"lineNumber":40,"author":{"gitId":"zxgoh"},"content":"        assertFalse(EmailCustomer.isValidEmail(\"peterjack@exam ple.com\")); // spaces in domain name","lastModifiedDate":"2022-03-15"},{"lineNumber":41,"author":{"gitId":"zxgoh"},"content":"        assertFalse(EmailCustomer.isValidEmail(\" peterjack@example.com\")); // leading space","lastModifiedDate":"2022-03-15"},{"lineNumber":42,"author":{"gitId":"zxgoh"},"content":"        assertFalse(EmailCustomer.isValidEmail(\"peterjack@example.com \")); // trailing space","lastModifiedDate":"2022-03-15"},{"lineNumber":43,"author":{"gitId":"zxgoh"},"content":"        assertFalse(EmailCustomer.isValidEmail(\"peterjack@@example.com\")); // double \u0027@\u0027 symbol","lastModifiedDate":"2022-03-15"},{"lineNumber":44,"author":{"gitId":"zxgoh"},"content":"        assertFalse(EmailCustomer.isValidEmail(\"peter@jack@example.com\")); // \u0027@\u0027 symbol in local part","lastModifiedDate":"2022-03-15"},{"lineNumber":45,"author":{"gitId":"zxgoh"},"content":"        assertFalse(EmailCustomer.isValidEmail(\"-peterjack@example.com\")); // local part starts with a hyphen","lastModifiedDate":"2022-03-15"},{"lineNumber":46,"author":{"gitId":"zxgoh"},"content":"        assertFalse(EmailCustomer.isValidEmail(\"peterjack-@example.com\")); // local part ends with a hyphen","lastModifiedDate":"2022-03-15"},{"lineNumber":47,"author":{"gitId":"zxgoh"},"content":"        assertFalse(EmailCustomer.isValidEmail(\"peter..jack@example.com\")); // local part has two consecutive periods","lastModifiedDate":"2022-03-15"},{"lineNumber":48,"author":{"gitId":"zxgoh"},"content":"        assertFalse(EmailCustomer.isValidEmail(\"peterjack@example@com\")); // \u0027@\u0027 symbol in domain name","lastModifiedDate":"2022-03-15"},{"lineNumber":49,"author":{"gitId":"zxgoh"},"content":"        assertFalse(EmailCustomer.isValidEmail(\"peterjack@.example.com\")); // domain name starts with a period","lastModifiedDate":"2022-03-15"},{"lineNumber":50,"author":{"gitId":"zxgoh"},"content":"        assertFalse(EmailCustomer.isValidEmail(\"peterjack@example.com.\")); // domain name ends with a period","lastModifiedDate":"2022-03-15"},{"lineNumber":51,"author":{"gitId":"zxgoh"},"content":"        assertFalse(EmailCustomer.isValidEmail(\"peterjack@-example.com\")); // domain name starts with a hyphen","lastModifiedDate":"2022-03-15"},{"lineNumber":52,"author":{"gitId":"zxgoh"},"content":"        assertFalse(EmailCustomer.isValidEmail(\"peterjack@example.com-\")); // domain name ends with a hyphen","lastModifiedDate":"2022-03-15"},{"lineNumber":53,"author":{"gitId":"zxgoh"},"content":"        assertFalse(EmailCustomer.isValidEmail(\"peterjack@example.c\")); // top level domain has less than two chars","lastModifiedDate":"2022-03-15"},{"lineNumber":54,"author":{"gitId":"zxgoh"},"content":"","lastModifiedDate":"2022-03-15"},{"lineNumber":55,"author":{"gitId":"zxgoh"},"content":"        // valid email","lastModifiedDate":"2022-03-15"},{"lineNumber":56,"author":{"gitId":"zxgoh"},"content":"        assertTrue(EmailCustomer.isValidEmail(\"PeterJack_1190@example.com\")); // underscore in local part","lastModifiedDate":"2022-03-15"},{"lineNumber":57,"author":{"gitId":"zxgoh"},"content":"        assertTrue(EmailCustomer.isValidEmail(\"PeterJack.1190@example.com\")); // period in local part","lastModifiedDate":"2022-03-15"},{"lineNumber":58,"author":{"gitId":"zxgoh"},"content":"        assertTrue(EmailCustomer.isValidEmail(\"PeterJack+1190@example.com\")); // \u0027+\u0027 symbol in local part","lastModifiedDate":"2022-03-15"},{"lineNumber":59,"author":{"gitId":"zxgoh"},"content":"        assertTrue(EmailCustomer.isValidEmail(\"PeterJack-1190@example.com\")); // hyphen in local part","lastModifiedDate":"2022-03-15"},{"lineNumber":60,"author":{"gitId":"zxgoh"},"content":"        assertTrue(EmailCustomer.isValidEmail(\"a@bc\")); // minimal","lastModifiedDate":"2022-03-15"},{"lineNumber":61,"author":{"gitId":"zxgoh"},"content":"        assertTrue(EmailCustomer.isValidEmail(\"test@localhost\")); // alphabets only","lastModifiedDate":"2022-03-15"},{"lineNumber":62,"author":{"gitId":"zxgoh"},"content":"        assertTrue(EmailCustomer.isValidEmail(\"123@145\")); // numeric local part and domain name","lastModifiedDate":"2022-03-15"},{"lineNumber":63,"author":{"gitId":"zxgoh"},"content":"        assertTrue(EmailCustomer.isValidEmail(\"a1+be.d@example1.com\")); // mixture of alphanumeric and special","lastModifiedDate":"2022-03-16"},{"lineNumber":64,"author":{"gitId":"zxgoh"},"content":"        // characters","lastModifiedDate":"2022-03-16"},{"lineNumber":65,"author":{"gitId":"zxgoh"},"content":"        assertTrue(EmailCustomer.isValidEmail(\"peter_jack@very-very-very-long-example.com\")); // long domain name","lastModifiedDate":"2022-03-15"},{"lineNumber":66,"author":{"gitId":"zxgoh"},"content":"        assertTrue(EmailCustomer.isValidEmail(\"if.you.dream.it_you.can.do.it@example.com\")); // long local part","lastModifiedDate":"2022-03-15"},{"lineNumber":67,"author":{"gitId":"zxgoh"},"content":"        assertTrue(EmailCustomer.isValidEmail(\"e1234567@u.nus.edu\")); // more than one period in domain","lastModifiedDate":"2022-03-15"},{"lineNumber":68,"author":{"gitId":"zxgoh"},"content":"    }","lastModifiedDate":"2022-03-15"},{"lineNumber":69,"author":{"gitId":"zxgoh"},"content":"}","lastModifiedDate":"2022-03-15"}],"authorContributionMap":{"zxgoh":69}},{"path":"src/test/java/seedu/address/model/customer/NameCustomerContainsKeywordsPredicateTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"zxgoh"},"content":"package seedu.address.model.customer;","lastModifiedDate":"2022-03-14"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.util.Arrays;","lastModifiedDate":"2017-06-12"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import java.util.Collections;","lastModifiedDate":"2017-06-12"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import java.util.List;","lastModifiedDate":"2017-06-12"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":12,"author":{"gitId":"zxgoh"},"content":"import seedu.address.testutil.CustomerBuilder;","lastModifiedDate":"2022-03-14"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":14,"author":{"gitId":"zxgoh"},"content":"public class NameCustomerContainsKeywordsPredicateTest {","lastModifiedDate":"2022-03-15"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-12"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    public void equals() {","lastModifiedDate":"2017-06-12"},{"lineNumber":18,"author":{"gitId":"-"},"content":"        List\u003cString\u003e firstPredicateKeywordList \u003d Collections.singletonList(\"first\");","lastModifiedDate":"2017-06-12"},{"lineNumber":19,"author":{"gitId":"-"},"content":"        List\u003cString\u003e secondPredicateKeywordList \u003d Arrays.asList(\"first\", \"second\");","lastModifiedDate":"2017-06-12"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":21,"author":{"gitId":"zxgoh"},"content":"        NameCustomerContainsKeywordsPredicate firstPredicate \u003d","lastModifiedDate":"2022-03-16"},{"lineNumber":22,"author":{"gitId":"zxgoh"},"content":"                new NameCustomerContainsKeywordsPredicate(firstPredicateKeywordList);","lastModifiedDate":"2022-03-16"},{"lineNumber":23,"author":{"gitId":"zxgoh"},"content":"        NameCustomerContainsKeywordsPredicate secondPredicate \u003d","lastModifiedDate":"2022-03-16"},{"lineNumber":24,"author":{"gitId":"zxgoh"},"content":"                new NameCustomerContainsKeywordsPredicate(secondPredicateKeywordList);","lastModifiedDate":"2022-03-16"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":26,"author":{"gitId":"-"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2017-06-12"},{"lineNumber":27,"author":{"gitId":"-"},"content":"        assertTrue(firstPredicate.equals(firstPredicate));","lastModifiedDate":"2017-06-12"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":29,"author":{"gitId":"-"},"content":"        // same values -\u003e returns true","lastModifiedDate":"2017-06-12"},{"lineNumber":30,"author":{"gitId":"zxgoh"},"content":"        NameCustomerContainsKeywordsPredicate firstPredicateCopy \u003d","lastModifiedDate":"2022-03-16"},{"lineNumber":31,"author":{"gitId":"zxgoh"},"content":"                new NameCustomerContainsKeywordsPredicate(firstPredicateKeywordList);","lastModifiedDate":"2022-03-16"},{"lineNumber":32,"author":{"gitId":"-"},"content":"        assertTrue(firstPredicate.equals(firstPredicateCopy));","lastModifiedDate":"2017-06-12"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":34,"author":{"gitId":"-"},"content":"        // different types -\u003e returns false","lastModifiedDate":"2017-06-12"},{"lineNumber":35,"author":{"gitId":"-"},"content":"        assertFalse(firstPredicate.equals(1));","lastModifiedDate":"2017-06-12"},{"lineNumber":36,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        // null -\u003e returns false","lastModifiedDate":"2017-06-12"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        assertFalse(firstPredicate.equals(null));","lastModifiedDate":"2017-06-12"},{"lineNumber":39,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":40,"author":{"gitId":"zxgoh"},"content":"        // different customer -\u003e returns false","lastModifiedDate":"2022-03-14"},{"lineNumber":41,"author":{"gitId":"-"},"content":"        assertFalse(firstPredicate.equals(secondPredicate));","lastModifiedDate":"2017-06-12"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-12"},{"lineNumber":43,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-12"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    public void test_nameContainsKeywords_returnsTrue() {","lastModifiedDate":"2017-08-15"},{"lineNumber":46,"author":{"gitId":"-"},"content":"        // One keyword","lastModifiedDate":"2017-06-12"},{"lineNumber":47,"author":{"gitId":"zxgoh"},"content":"        NameCustomerContainsKeywordsPredicate predicate \u003d new NameCustomerContainsKeywordsPredicate(Collections","lastModifiedDate":"2022-03-16"},{"lineNumber":48,"author":{"gitId":"zxgoh"},"content":"                .singletonList(\"Alice\"));","lastModifiedDate":"2022-03-16"},{"lineNumber":49,"author":{"gitId":"zxgoh"},"content":"        assertTrue(predicate.test(new CustomerBuilder().withName(\"Alice Bob\").build()));","lastModifiedDate":"2022-03-14"},{"lineNumber":50,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":51,"author":{"gitId":"-"},"content":"        // Multiple keywords","lastModifiedDate":"2017-06-12"},{"lineNumber":52,"author":{"gitId":"zxgoh"},"content":"        predicate \u003d new NameCustomerContainsKeywordsPredicate(Arrays.asList(\"Alice\", \"Bob\"));","lastModifiedDate":"2022-03-15"},{"lineNumber":53,"author":{"gitId":"zxgoh"},"content":"        assertTrue(predicate.test(new CustomerBuilder().withName(\"Alice Bob\").build()));","lastModifiedDate":"2022-03-14"},{"lineNumber":54,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":55,"author":{"gitId":"-"},"content":"        // Only one matching keyword","lastModifiedDate":"2017-06-12"},{"lineNumber":56,"author":{"gitId":"zxgoh"},"content":"        predicate \u003d new NameCustomerContainsKeywordsPredicate(Arrays.asList(\"Bob\", \"Carol\"));","lastModifiedDate":"2022-03-15"},{"lineNumber":57,"author":{"gitId":"zxgoh"},"content":"        assertTrue(predicate.test(new CustomerBuilder().withName(\"Alice Carol\").build()));","lastModifiedDate":"2022-03-14"},{"lineNumber":58,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":59,"author":{"gitId":"-"},"content":"        // Mixed-case keywords","lastModifiedDate":"2017-06-12"},{"lineNumber":60,"author":{"gitId":"zxgoh"},"content":"        predicate \u003d new NameCustomerContainsKeywordsPredicate(Arrays.asList(\"aLIce\", \"bOB\"));","lastModifiedDate":"2022-03-15"},{"lineNumber":61,"author":{"gitId":"zxgoh"},"content":"        assertTrue(predicate.test(new CustomerBuilder().withName(\"Alice Bob\").build()));","lastModifiedDate":"2022-03-14"},{"lineNumber":62,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-12"},{"lineNumber":63,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":64,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-12"},{"lineNumber":65,"author":{"gitId":"-"},"content":"    public void test_nameDoesNotContainKeywords_returnsFalse() {","lastModifiedDate":"2017-08-15"},{"lineNumber":66,"author":{"gitId":"-"},"content":"        // Zero keywords","lastModifiedDate":"2017-06-12"},{"lineNumber":67,"author":{"gitId":"zxgoh"},"content":"        NameCustomerContainsKeywordsPredicate predicate \u003d new NameCustomerContainsKeywordsPredicate(Collections","lastModifiedDate":"2022-03-16"},{"lineNumber":68,"author":{"gitId":"zxgoh"},"content":"                .emptyList());","lastModifiedDate":"2022-03-16"},{"lineNumber":69,"author":{"gitId":"zxgoh"},"content":"        assertFalse(predicate.test(new CustomerBuilder().withName(\"Alice\").build()));","lastModifiedDate":"2022-03-14"},{"lineNumber":70,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":71,"author":{"gitId":"-"},"content":"        // Non-matching keyword","lastModifiedDate":"2017-06-12"},{"lineNumber":72,"author":{"gitId":"zxgoh"},"content":"        predicate \u003d new NameCustomerContainsKeywordsPredicate(Arrays.asList(\"Carol\"));","lastModifiedDate":"2022-03-15"},{"lineNumber":73,"author":{"gitId":"zxgoh"},"content":"        assertFalse(predicate.test(new CustomerBuilder().withName(\"Alice Bob\").build()));","lastModifiedDate":"2022-03-14"},{"lineNumber":74,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":75,"author":{"gitId":"-"},"content":"        // Keywords match phone, email and address, but does not match name","lastModifiedDate":"2017-06-12"},{"lineNumber":76,"author":{"gitId":"zxgoh"},"content":"        predicate \u003d new NameCustomerContainsKeywordsPredicate(Arrays","lastModifiedDate":"2022-03-16"},{"lineNumber":77,"author":{"gitId":"zxgoh"},"content":"                .asList(\"81234567\", \"alice@email.com\", \"Main\", \"Street\"));","lastModifiedDate":"2022-03-31"},{"lineNumber":78,"author":{"gitId":"zxgoh"},"content":"        assertFalse(predicate.test(new CustomerBuilder().withName(\"Alice\").withPhone(\"81234567\")","lastModifiedDate":"2022-03-31"},{"lineNumber":79,"author":{"gitId":"-"},"content":"                .withEmail(\"alice@email.com\").withAddress(\"Main Street\").build()));","lastModifiedDate":"2017-06-12"},{"lineNumber":80,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-12"},{"lineNumber":81,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-06-12"}],"authorContributionMap":{"zxgoh":27,"-":54}},{"path":"src/test/java/seedu/address/model/customer/NameCustomerTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"zxgoh"},"content":"package seedu.address.model.customer;","lastModifiedDate":"2022-03-15"},{"lineNumber":2,"author":{"gitId":"zxgoh"},"content":"","lastModifiedDate":"2022-03-15"},{"lineNumber":3,"author":{"gitId":"zxgoh"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2022-03-15"},{"lineNumber":4,"author":{"gitId":"zxgoh"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2022-03-15"},{"lineNumber":5,"author":{"gitId":"zxgoh"},"content":"import static seedu.address.testutil.Assert.assertThrows;","lastModifiedDate":"2022-03-15"},{"lineNumber":6,"author":{"gitId":"zxgoh"},"content":"","lastModifiedDate":"2022-03-15"},{"lineNumber":7,"author":{"gitId":"zxgoh"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2022-03-15"},{"lineNumber":8,"author":{"gitId":"zxgoh"},"content":"","lastModifiedDate":"2022-03-15"},{"lineNumber":9,"author":{"gitId":"zxgoh"},"content":"public class NameCustomerTest {","lastModifiedDate":"2022-03-15"},{"lineNumber":10,"author":{"gitId":"zxgoh"},"content":"","lastModifiedDate":"2022-03-15"},{"lineNumber":11,"author":{"gitId":"zxgoh"},"content":"    @Test","lastModifiedDate":"2022-03-15"},{"lineNumber":12,"author":{"gitId":"zxgoh"},"content":"    public void constructor_null_throwsNullPointerException() {","lastModifiedDate":"2022-03-15"},{"lineNumber":13,"author":{"gitId":"zxgoh"},"content":"        assertThrows(NullPointerException.class, () -\u003e new NameCustomer(null));","lastModifiedDate":"2022-03-15"},{"lineNumber":14,"author":{"gitId":"zxgoh"},"content":"    }","lastModifiedDate":"2022-03-15"},{"lineNumber":15,"author":{"gitId":"zxgoh"},"content":"","lastModifiedDate":"2022-03-15"},{"lineNumber":16,"author":{"gitId":"zxgoh"},"content":"    @Test","lastModifiedDate":"2022-03-15"},{"lineNumber":17,"author":{"gitId":"zxgoh"},"content":"    public void constructor_invalidName_throwsIllegalArgumentException() {","lastModifiedDate":"2022-03-15"},{"lineNumber":18,"author":{"gitId":"zxgoh"},"content":"        String invalidName \u003d \"\";","lastModifiedDate":"2022-03-15"},{"lineNumber":19,"author":{"gitId":"zxgoh"},"content":"        assertThrows(IllegalArgumentException.class, () -\u003e new NameCustomer(invalidName));","lastModifiedDate":"2022-03-15"},{"lineNumber":20,"author":{"gitId":"zxgoh"},"content":"    }","lastModifiedDate":"2022-03-15"},{"lineNumber":21,"author":{"gitId":"zxgoh"},"content":"","lastModifiedDate":"2022-03-15"},{"lineNumber":22,"author":{"gitId":"zxgoh"},"content":"    @Test","lastModifiedDate":"2022-03-15"},{"lineNumber":23,"author":{"gitId":"zxgoh"},"content":"    public void isValidName() {","lastModifiedDate":"2022-03-15"},{"lineNumber":24,"author":{"gitId":"zxgoh"},"content":"        // null name","lastModifiedDate":"2022-03-15"},{"lineNumber":25,"author":{"gitId":"zxgoh"},"content":"        assertThrows(NullPointerException.class, () -\u003e NameCustomer.isValidName(null));","lastModifiedDate":"2022-03-15"},{"lineNumber":26,"author":{"gitId":"zxgoh"},"content":"","lastModifiedDate":"2022-03-15"},{"lineNumber":27,"author":{"gitId":"zxgoh"},"content":"        // invalid name","lastModifiedDate":"2022-03-15"},{"lineNumber":28,"author":{"gitId":"zxgoh"},"content":"        assertFalse(NameCustomer.isValidName(\"\")); // empty string","lastModifiedDate":"2022-03-15"},{"lineNumber":29,"author":{"gitId":"zxgoh"},"content":"        assertFalse(NameCustomer.isValidName(\" \")); // spaces only","lastModifiedDate":"2022-03-15"},{"lineNumber":30,"author":{"gitId":"zxgoh"},"content":"        assertFalse(NameCustomer.isValidName(\"^\")); // only non-alphanumeric characters","lastModifiedDate":"2022-03-15"},{"lineNumber":31,"author":{"gitId":"zxgoh"},"content":"        assertFalse(NameCustomer.isValidName(\"peter*\")); // contains non-alphanumeric characters","lastModifiedDate":"2022-03-15"},{"lineNumber":32,"author":{"gitId":"zxgoh"},"content":"","lastModifiedDate":"2022-03-15"},{"lineNumber":33,"author":{"gitId":"zxgoh"},"content":"        // valid name","lastModifiedDate":"2022-03-15"},{"lineNumber":34,"author":{"gitId":"zxgoh"},"content":"        assertTrue(NameCustomer.isValidName(\"peter jack\")); // alphabets only","lastModifiedDate":"2022-03-15"},{"lineNumber":35,"author":{"gitId":"zxgoh"},"content":"        assertTrue(NameCustomer.isValidName(\"12345\")); // numbers only","lastModifiedDate":"2022-03-15"},{"lineNumber":36,"author":{"gitId":"zxgoh"},"content":"        assertTrue(NameCustomer.isValidName(\"peter the 2nd\")); // alphanumeric characters","lastModifiedDate":"2022-03-15"},{"lineNumber":37,"author":{"gitId":"zxgoh"},"content":"        assertTrue(NameCustomer.isValidName(\"Capital Tan\")); // with capital letters","lastModifiedDate":"2022-03-15"},{"lineNumber":38,"author":{"gitId":"zxgoh"},"content":"        assertTrue(NameCustomer.isValidName(\"David Roger Jackson Ray Jr 2nd\")); // long names","lastModifiedDate":"2022-03-15"},{"lineNumber":39,"author":{"gitId":"zxgoh"},"content":"    }","lastModifiedDate":"2022-03-15"},{"lineNumber":40,"author":{"gitId":"zxgoh"},"content":"}","lastModifiedDate":"2022-03-15"}],"authorContributionMap":{"zxgoh":40}},{"path":"src/test/java/seedu/address/model/customer/PhoneCustomerTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"zxgoh"},"content":"package seedu.address.model.customer;","lastModifiedDate":"2022-03-15"},{"lineNumber":2,"author":{"gitId":"zxgoh"},"content":"","lastModifiedDate":"2022-03-15"},{"lineNumber":3,"author":{"gitId":"zxgoh"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2022-03-15"},{"lineNumber":4,"author":{"gitId":"zxgoh"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2022-03-15"},{"lineNumber":5,"author":{"gitId":"zxgoh"},"content":"import static seedu.address.testutil.Assert.assertThrows;","lastModifiedDate":"2022-03-15"},{"lineNumber":6,"author":{"gitId":"zxgoh"},"content":"","lastModifiedDate":"2022-03-15"},{"lineNumber":7,"author":{"gitId":"zxgoh"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2022-03-15"},{"lineNumber":8,"author":{"gitId":"zxgoh"},"content":"","lastModifiedDate":"2022-03-15"},{"lineNumber":9,"author":{"gitId":"zxgoh"},"content":"public class PhoneCustomerTest {","lastModifiedDate":"2022-03-15"},{"lineNumber":10,"author":{"gitId":"zxgoh"},"content":"","lastModifiedDate":"2022-03-15"},{"lineNumber":11,"author":{"gitId":"zxgoh"},"content":"    @Test","lastModifiedDate":"2022-03-15"},{"lineNumber":12,"author":{"gitId":"zxgoh"},"content":"    public void constructor_null_throwsNullPointerException() {","lastModifiedDate":"2022-03-15"},{"lineNumber":13,"author":{"gitId":"zxgoh"},"content":"        assertThrows(NullPointerException.class, () -\u003e new PhoneCustomer(null));","lastModifiedDate":"2022-03-15"},{"lineNumber":14,"author":{"gitId":"zxgoh"},"content":"    }","lastModifiedDate":"2022-03-15"},{"lineNumber":15,"author":{"gitId":"zxgoh"},"content":"","lastModifiedDate":"2022-03-15"},{"lineNumber":16,"author":{"gitId":"zxgoh"},"content":"    @Test","lastModifiedDate":"2022-03-15"},{"lineNumber":17,"author":{"gitId":"zxgoh"},"content":"    public void constructor_invalidPhone_throwsIllegalArgumentException() {","lastModifiedDate":"2022-03-15"},{"lineNumber":18,"author":{"gitId":"zxgoh"},"content":"        String invalidPhone \u003d \"\";","lastModifiedDate":"2022-03-15"},{"lineNumber":19,"author":{"gitId":"zxgoh"},"content":"        assertThrows(IllegalArgumentException.class, () -\u003e new PhoneCustomer(invalidPhone));","lastModifiedDate":"2022-03-15"},{"lineNumber":20,"author":{"gitId":"zxgoh"},"content":"    }","lastModifiedDate":"2022-03-15"},{"lineNumber":21,"author":{"gitId":"zxgoh"},"content":"","lastModifiedDate":"2022-03-15"},{"lineNumber":22,"author":{"gitId":"zxgoh"},"content":"    @Test","lastModifiedDate":"2022-03-15"},{"lineNumber":23,"author":{"gitId":"zxgoh"},"content":"    public void isValidPhone() {","lastModifiedDate":"2022-03-15"},{"lineNumber":24,"author":{"gitId":"zxgoh"},"content":"        // null phone number","lastModifiedDate":"2022-03-15"},{"lineNumber":25,"author":{"gitId":"zxgoh"},"content":"        assertThrows(NullPointerException.class, () -\u003e PhoneCustomer.isValidPhone(null));","lastModifiedDate":"2022-03-15"},{"lineNumber":26,"author":{"gitId":"zxgoh"},"content":"","lastModifiedDate":"2022-03-15"},{"lineNumber":27,"author":{"gitId":"zxgoh"},"content":"        // invalid phone numbers","lastModifiedDate":"2022-03-15"},{"lineNumber":28,"author":{"gitId":"zxgoh"},"content":"        assertFalse(PhoneCustomer.isValidPhone(\"\")); // empty string","lastModifiedDate":"2022-03-15"},{"lineNumber":29,"author":{"gitId":"zxgoh"},"content":"        assertFalse(PhoneCustomer.isValidPhone(\" \")); // spaces only","lastModifiedDate":"2022-03-15"},{"lineNumber":30,"author":{"gitId":"zxgoh"},"content":"        assertFalse(PhoneCustomer.isValidPhone(\"91\")); // less than 3 numbers","lastModifiedDate":"2022-03-15"},{"lineNumber":31,"author":{"gitId":"zxgoh"},"content":"        assertFalse(PhoneCustomer.isValidPhone(\"phone\")); // non-numeric","lastModifiedDate":"2022-03-15"},{"lineNumber":32,"author":{"gitId":"zxgoh"},"content":"        assertFalse(PhoneCustomer.isValidPhone(\"9011p041\")); // alphabets within digits","lastModifiedDate":"2022-03-15"},{"lineNumber":33,"author":{"gitId":"zxgoh"},"content":"        assertFalse(PhoneCustomer.isValidPhone(\"9312 1534\")); // spaces within digits","lastModifiedDate":"2022-03-15"},{"lineNumber":34,"author":{"gitId":"zxgoh"},"content":"","lastModifiedDate":"2022-03-15"},{"lineNumber":35,"author":{"gitId":"zxgoh"},"content":"        // valid phone numbers","lastModifiedDate":"2022-03-15"},{"lineNumber":36,"author":{"gitId":"zxgoh"},"content":"        assertTrue(PhoneCustomer.isValidPhone(\"91123456\")); // exactly 3 numbers","lastModifiedDate":"2022-03-31"},{"lineNumber":37,"author":{"gitId":"zxgoh"},"content":"        assertTrue(PhoneCustomer.isValidPhone(\"93121534\"));","lastModifiedDate":"2022-03-15"},{"lineNumber":38,"author":{"gitId":"zxgoh"},"content":"        assertTrue(PhoneCustomer.isValidPhone(\"82324354\")); // long phone numbers","lastModifiedDate":"2022-03-31"},{"lineNumber":39,"author":{"gitId":"zxgoh"},"content":"    }","lastModifiedDate":"2022-03-15"},{"lineNumber":40,"author":{"gitId":"zxgoh"},"content":"}","lastModifiedDate":"2022-03-15"}],"authorContributionMap":{"zxgoh":40}},{"path":"src/test/java/seedu/address/model/item/NameContainsKeywordsPredicateTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"jaegarpoon"},"content":"package seedu.address.model.item;","lastModifiedDate":"2022-03-11"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.util.Arrays;","lastModifiedDate":"2017-06-12"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import java.util.Collections;","lastModifiedDate":"2017-06-12"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import java.util.List;","lastModifiedDate":"2017-06-12"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import seedu.address.testutil.PersonBuilder;","lastModifiedDate":"2017-06-12"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":14,"author":{"gitId":"-"},"content":"public class NameContainsKeywordsPredicateTest {","lastModifiedDate":"2017-06-12"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-12"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    public void equals() {","lastModifiedDate":"2017-06-12"},{"lineNumber":18,"author":{"gitId":"-"},"content":"        List\u003cString\u003e firstPredicateKeywordList \u003d Collections.singletonList(\"first\");","lastModifiedDate":"2017-06-12"},{"lineNumber":19,"author":{"gitId":"-"},"content":"        List\u003cString\u003e secondPredicateKeywordList \u003d Arrays.asList(\"first\", \"second\");","lastModifiedDate":"2017-06-12"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":21,"author":{"gitId":"-"},"content":"        NameContainsKeywordsPredicate firstPredicate \u003d new NameContainsKeywordsPredicate(firstPredicateKeywordList);","lastModifiedDate":"2017-06-12"},{"lineNumber":22,"author":{"gitId":"-"},"content":"        NameContainsKeywordsPredicate secondPredicate \u003d new NameContainsKeywordsPredicate(secondPredicateKeywordList);","lastModifiedDate":"2017-06-12"},{"lineNumber":23,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":24,"author":{"gitId":"-"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2017-06-12"},{"lineNumber":25,"author":{"gitId":"-"},"content":"        assertTrue(firstPredicate.equals(firstPredicate));","lastModifiedDate":"2017-06-12"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":27,"author":{"gitId":"-"},"content":"        // same values -\u003e returns true","lastModifiedDate":"2017-06-12"},{"lineNumber":28,"author":{"gitId":"-"},"content":"        NameContainsKeywordsPredicate firstPredicateCopy \u003d new NameContainsKeywordsPredicate(firstPredicateKeywordList);","lastModifiedDate":"2017-06-12"},{"lineNumber":29,"author":{"gitId":"-"},"content":"        assertTrue(firstPredicate.equals(firstPredicateCopy));","lastModifiedDate":"2017-06-12"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":31,"author":{"gitId":"-"},"content":"        // different types -\u003e returns false","lastModifiedDate":"2017-06-12"},{"lineNumber":32,"author":{"gitId":"-"},"content":"        assertFalse(firstPredicate.equals(1));","lastModifiedDate":"2017-06-12"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":34,"author":{"gitId":"-"},"content":"        // null -\u003e returns false","lastModifiedDate":"2017-06-12"},{"lineNumber":35,"author":{"gitId":"-"},"content":"        assertFalse(firstPredicate.equals(null));","lastModifiedDate":"2017-06-12"},{"lineNumber":36,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        // different person -\u003e returns false","lastModifiedDate":"2017-06-12"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        assertFalse(firstPredicate.equals(secondPredicate));","lastModifiedDate":"2017-06-12"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-12"},{"lineNumber":40,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-12"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    public void test_nameContainsKeywords_returnsTrue() {","lastModifiedDate":"2017-08-15"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        // One keyword","lastModifiedDate":"2017-06-12"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        NameContainsKeywordsPredicate predicate \u003d new NameContainsKeywordsPredicate(Collections.singletonList(\"Alice\"));","lastModifiedDate":"2017-06-12"},{"lineNumber":45,"author":{"gitId":"-"},"content":"        assertTrue(predicate.test(new PersonBuilder().withName(\"Alice Bob\").build()));","lastModifiedDate":"2017-06-12"},{"lineNumber":46,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":47,"author":{"gitId":"-"},"content":"        // Multiple keywords","lastModifiedDate":"2017-06-12"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        predicate \u003d new NameContainsKeywordsPredicate(Arrays.asList(\"Alice\", \"Bob\"));","lastModifiedDate":"2017-06-12"},{"lineNumber":49,"author":{"gitId":"-"},"content":"        assertTrue(predicate.test(new PersonBuilder().withName(\"Alice Bob\").build()));","lastModifiedDate":"2017-06-12"},{"lineNumber":50,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":51,"author":{"gitId":"-"},"content":"        // Only one matching keyword","lastModifiedDate":"2017-06-12"},{"lineNumber":52,"author":{"gitId":"-"},"content":"        predicate \u003d new NameContainsKeywordsPredicate(Arrays.asList(\"Bob\", \"Carol\"));","lastModifiedDate":"2017-06-12"},{"lineNumber":53,"author":{"gitId":"-"},"content":"        assertTrue(predicate.test(new PersonBuilder().withName(\"Alice Carol\").build()));","lastModifiedDate":"2017-06-12"},{"lineNumber":54,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":55,"author":{"gitId":"-"},"content":"        // Mixed-case keywords","lastModifiedDate":"2017-06-12"},{"lineNumber":56,"author":{"gitId":"-"},"content":"        predicate \u003d new NameContainsKeywordsPredicate(Arrays.asList(\"aLIce\", \"bOB\"));","lastModifiedDate":"2017-06-12"},{"lineNumber":57,"author":{"gitId":"-"},"content":"        assertTrue(predicate.test(new PersonBuilder().withName(\"Alice Bob\").build()));","lastModifiedDate":"2017-06-12"},{"lineNumber":58,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-12"},{"lineNumber":59,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-12"},{"lineNumber":61,"author":{"gitId":"-"},"content":"    public void test_nameDoesNotContainKeywords_returnsFalse() {","lastModifiedDate":"2017-08-15"},{"lineNumber":62,"author":{"gitId":"-"},"content":"        // Zero keywords","lastModifiedDate":"2017-06-12"},{"lineNumber":63,"author":{"gitId":"-"},"content":"        NameContainsKeywordsPredicate predicate \u003d new NameContainsKeywordsPredicate(Collections.emptyList());","lastModifiedDate":"2017-06-12"},{"lineNumber":64,"author":{"gitId":"-"},"content":"        assertFalse(predicate.test(new PersonBuilder().withName(\"Alice\").build()));","lastModifiedDate":"2017-06-12"},{"lineNumber":65,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":66,"author":{"gitId":"-"},"content":"        // Non-matching keyword","lastModifiedDate":"2017-06-12"},{"lineNumber":67,"author":{"gitId":"-"},"content":"        predicate \u003d new NameContainsKeywordsPredicate(Arrays.asList(\"Carol\"));","lastModifiedDate":"2017-06-12"},{"lineNumber":68,"author":{"gitId":"-"},"content":"        assertFalse(predicate.test(new PersonBuilder().withName(\"Alice Bob\").build()));","lastModifiedDate":"2017-06-12"},{"lineNumber":69,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":70,"author":{"gitId":"-"},"content":"        // Keywords match phone, email and address, but does not match name","lastModifiedDate":"2017-06-12"},{"lineNumber":71,"author":{"gitId":"-"},"content":"        predicate \u003d new NameContainsKeywordsPredicate(Arrays.asList(\"12345\", \"alice@email.com\", \"Main\", \"Street\"));","lastModifiedDate":"2017-06-12"},{"lineNumber":72,"author":{"gitId":"-"},"content":"        assertFalse(predicate.test(new PersonBuilder().withName(\"Alice\").withPhone(\"12345\")","lastModifiedDate":"2017-06-12"},{"lineNumber":73,"author":{"gitId":"-"},"content":"                .withEmail(\"alice@email.com\").withAddress(\"Main Street\").build()));","lastModifiedDate":"2017-06-12"},{"lineNumber":74,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-12"},{"lineNumber":75,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-06-12"}],"authorContributionMap":{"jaegarpoon":1,"-":74}},{"path":"src/test/java/seedu/address/storage/JsonAdaptedCustomerTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"zxgoh"},"content":"package seedu.address.storage;","lastModifiedDate":"2022-03-14"},{"lineNumber":2,"author":{"gitId":"zxgoh"},"content":"","lastModifiedDate":"2022-03-14"},{"lineNumber":3,"author":{"gitId":"zxgoh"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2022-03-14"},{"lineNumber":4,"author":{"gitId":"zxgoh"},"content":"import static seedu.address.storage.JsonAdaptedCustomer.MISSING_FIELD_MESSAGE_FORMAT;","lastModifiedDate":"2022-03-14"},{"lineNumber":5,"author":{"gitId":"zxgoh"},"content":"import static seedu.address.testutil.Assert.assertThrows;","lastModifiedDate":"2022-03-14"},{"lineNumber":6,"author":{"gitId":"zxgoh"},"content":"import static seedu.address.testutil.TypicalCustomers.BENSON;","lastModifiedDate":"2022-03-14"},{"lineNumber":7,"author":{"gitId":"zxgoh"},"content":"","lastModifiedDate":"2022-03-14"},{"lineNumber":8,"author":{"gitId":"zxgoh"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2022-03-14"},{"lineNumber":9,"author":{"gitId":"zxgoh"},"content":"","lastModifiedDate":"2022-03-14"},{"lineNumber":10,"author":{"gitId":"zxgoh"},"content":"import seedu.address.commons.exceptions.IllegalValueException;","lastModifiedDate":"2022-03-14"},{"lineNumber":11,"author":{"gitId":"zxgoh"},"content":"import seedu.address.model.customer.AddressCustomer;","lastModifiedDate":"2022-03-15"},{"lineNumber":12,"author":{"gitId":"zxgoh"},"content":"import seedu.address.model.customer.NameCustomer;","lastModifiedDate":"2022-03-15"},{"lineNumber":13,"author":{"gitId":"zxgoh"},"content":"import seedu.address.model.customer.PhoneCustomer;","lastModifiedDate":"2022-03-15"},{"lineNumber":14,"author":{"gitId":"zxgoh"},"content":"","lastModifiedDate":"2022-03-14"},{"lineNumber":15,"author":{"gitId":"zxgoh"},"content":"public class JsonAdaptedCustomerTest {","lastModifiedDate":"2022-03-14"},{"lineNumber":16,"author":{"gitId":"zxgoh"},"content":"    private static final String INVALID_NAME \u003d \"R@chel\";","lastModifiedDate":"2022-03-14"},{"lineNumber":17,"author":{"gitId":"zxgoh"},"content":"    private static final String INVALID_PHONE \u003d \"+651234\";","lastModifiedDate":"2022-03-14"},{"lineNumber":18,"author":{"gitId":"zxgoh"},"content":"    private static final String INVALID_ADDRESS \u003d \" \";","lastModifiedDate":"2022-03-14"},{"lineNumber":19,"author":{"gitId":"zxgoh"},"content":"    private static final String INVALID_EMAIL \u003d \"example.com\";","lastModifiedDate":"2022-03-14"},{"lineNumber":20,"author":{"gitId":"zxgoh"},"content":"    private static final String INVALID_TAG \u003d \"#friend\";","lastModifiedDate":"2022-03-14"},{"lineNumber":21,"author":{"gitId":"zxgoh"},"content":"","lastModifiedDate":"2022-03-14"},{"lineNumber":22,"author":{"gitId":"zxgoh"},"content":"    private static final String VALID_NAME \u003d BENSON.getName().toString();","lastModifiedDate":"2022-03-14"},{"lineNumber":23,"author":{"gitId":"zxgoh"},"content":"    private static final String VALID_PHONE \u003d BENSON.getPhone().toString();","lastModifiedDate":"2022-03-14"},{"lineNumber":24,"author":{"gitId":"zxgoh"},"content":"    private static final String VALID_ADDRESS \u003d BENSON.getAddress().toString();","lastModifiedDate":"2022-03-14"},{"lineNumber":25,"author":{"gitId":"zxgoh"},"content":"","lastModifiedDate":"2022-03-14"},{"lineNumber":26,"author":{"gitId":"zxgoh"},"content":"    @Test","lastModifiedDate":"2022-03-14"},{"lineNumber":27,"author":{"gitId":"zxgoh"},"content":"    public void toModelType_validCustomerDetails_returnsCustomer() throws Exception {","lastModifiedDate":"2022-03-14"},{"lineNumber":28,"author":{"gitId":"zxgoh"},"content":"        JsonAdaptedCustomer customer \u003d new JsonAdaptedCustomer(BENSON);","lastModifiedDate":"2022-03-14"},{"lineNumber":29,"author":{"gitId":"zxgoh"},"content":"        assertEquals(BENSON, customer.toModelType());","lastModifiedDate":"2022-03-14"},{"lineNumber":30,"author":{"gitId":"zxgoh"},"content":"    }","lastModifiedDate":"2022-03-14"},{"lineNumber":31,"author":{"gitId":"zxgoh"},"content":"","lastModifiedDate":"2022-03-14"},{"lineNumber":32,"author":{"gitId":"zxgoh"},"content":"    @Test","lastModifiedDate":"2022-03-14"},{"lineNumber":33,"author":{"gitId":"zxgoh"},"content":"    public void toModelType_invalidName_throwsIllegalValueException() {","lastModifiedDate":"2022-03-14"},{"lineNumber":34,"author":{"gitId":"zxgoh"},"content":"        JsonAdaptedCustomer customer \u003d","lastModifiedDate":"2022-03-14"},{"lineNumber":35,"author":{"gitId":"zxgoh"},"content":"                new JsonAdaptedCustomer(INVALID_NAME, VALID_PHONE, VALID_ADDRESS);","lastModifiedDate":"2022-03-14"},{"lineNumber":36,"author":{"gitId":"zxgoh"},"content":"        String expectedMessage \u003d NameCustomer.MESSAGE_CONSTRAINTS;","lastModifiedDate":"2022-03-15"},{"lineNumber":37,"author":{"gitId":"zxgoh"},"content":"        assertThrows(IllegalValueException.class, expectedMessage, customer::toModelType);","lastModifiedDate":"2022-03-14"},{"lineNumber":38,"author":{"gitId":"zxgoh"},"content":"    }","lastModifiedDate":"2022-03-14"},{"lineNumber":39,"author":{"gitId":"zxgoh"},"content":"","lastModifiedDate":"2022-03-14"},{"lineNumber":40,"author":{"gitId":"zxgoh"},"content":"    @Test","lastModifiedDate":"2022-03-14"},{"lineNumber":41,"author":{"gitId":"zxgoh"},"content":"    public void toModelType_nullName_throwsIllegalValueException() {","lastModifiedDate":"2022-03-14"},{"lineNumber":42,"author":{"gitId":"zxgoh"},"content":"        JsonAdaptedCustomer customer \u003d new JsonAdaptedCustomer(null, VALID_PHONE, VALID_ADDRESS);","lastModifiedDate":"2022-03-14"},{"lineNumber":43,"author":{"gitId":"zxgoh"},"content":"        String expectedMessage \u003d String.format(MISSING_FIELD_MESSAGE_FORMAT, NameCustomer.class.getSimpleName());","lastModifiedDate":"2022-03-15"},{"lineNumber":44,"author":{"gitId":"zxgoh"},"content":"        assertThrows(IllegalValueException.class, expectedMessage, customer::toModelType);","lastModifiedDate":"2022-03-14"},{"lineNumber":45,"author":{"gitId":"zxgoh"},"content":"    }","lastModifiedDate":"2022-03-14"},{"lineNumber":46,"author":{"gitId":"zxgoh"},"content":"","lastModifiedDate":"2022-03-14"},{"lineNumber":47,"author":{"gitId":"zxgoh"},"content":"    @Test","lastModifiedDate":"2022-03-14"},{"lineNumber":48,"author":{"gitId":"zxgoh"},"content":"    public void toModelType_invalidPhone_throwsIllegalValueException() {","lastModifiedDate":"2022-03-14"},{"lineNumber":49,"author":{"gitId":"zxgoh"},"content":"        JsonAdaptedCustomer customer \u003d","lastModifiedDate":"2022-03-14"},{"lineNumber":50,"author":{"gitId":"zxgoh"},"content":"                new JsonAdaptedCustomer(VALID_NAME, INVALID_PHONE, VALID_ADDRESS);","lastModifiedDate":"2022-03-14"},{"lineNumber":51,"author":{"gitId":"zxgoh"},"content":"        String expectedMessage \u003d PhoneCustomer.MESSAGE_CONSTRAINTS;","lastModifiedDate":"2022-03-15"},{"lineNumber":52,"author":{"gitId":"zxgoh"},"content":"        assertThrows(IllegalValueException.class, expectedMessage, customer::toModelType);","lastModifiedDate":"2022-03-14"},{"lineNumber":53,"author":{"gitId":"zxgoh"},"content":"    }","lastModifiedDate":"2022-03-14"},{"lineNumber":54,"author":{"gitId":"zxgoh"},"content":"","lastModifiedDate":"2022-03-14"},{"lineNumber":55,"author":{"gitId":"zxgoh"},"content":"    @Test","lastModifiedDate":"2022-03-14"},{"lineNumber":56,"author":{"gitId":"zxgoh"},"content":"    public void toModelType_nullPhone_throwsIllegalValueException() {","lastModifiedDate":"2022-03-14"},{"lineNumber":57,"author":{"gitId":"zxgoh"},"content":"        JsonAdaptedCustomer customer \u003d new JsonAdaptedCustomer(VALID_NAME, null, VALID_ADDRESS);","lastModifiedDate":"2022-03-14"},{"lineNumber":58,"author":{"gitId":"zxgoh"},"content":"        String expectedMessage \u003d String.format(MISSING_FIELD_MESSAGE_FORMAT, PhoneCustomer.class.getSimpleName());","lastModifiedDate":"2022-03-15"},{"lineNumber":59,"author":{"gitId":"zxgoh"},"content":"        assertThrows(IllegalValueException.class, expectedMessage, customer::toModelType);","lastModifiedDate":"2022-03-14"},{"lineNumber":60,"author":{"gitId":"zxgoh"},"content":"    }","lastModifiedDate":"2022-03-14"},{"lineNumber":61,"author":{"gitId":"zxgoh"},"content":"","lastModifiedDate":"2022-03-14"},{"lineNumber":62,"author":{"gitId":"zxgoh"},"content":"","lastModifiedDate":"2022-03-14"},{"lineNumber":63,"author":{"gitId":"zxgoh"},"content":"    @Test","lastModifiedDate":"2022-03-14"},{"lineNumber":64,"author":{"gitId":"zxgoh"},"content":"    public void toModelType_invalidAddress_throwsIllegalValueException() {","lastModifiedDate":"2022-03-14"},{"lineNumber":65,"author":{"gitId":"zxgoh"},"content":"        JsonAdaptedCustomer customer \u003d","lastModifiedDate":"2022-03-14"},{"lineNumber":66,"author":{"gitId":"zxgoh"},"content":"                new JsonAdaptedCustomer(VALID_NAME, VALID_PHONE, INVALID_ADDRESS);","lastModifiedDate":"2022-03-14"},{"lineNumber":67,"author":{"gitId":"zxgoh"},"content":"        String expectedMessage \u003d AddressCustomer.MESSAGE_CONSTRAINTS;","lastModifiedDate":"2022-03-15"},{"lineNumber":68,"author":{"gitId":"zxgoh"},"content":"        assertThrows(IllegalValueException.class, expectedMessage, customer::toModelType);","lastModifiedDate":"2022-03-14"},{"lineNumber":69,"author":{"gitId":"zxgoh"},"content":"    }","lastModifiedDate":"2022-03-14"},{"lineNumber":70,"author":{"gitId":"zxgoh"},"content":"","lastModifiedDate":"2022-03-14"},{"lineNumber":71,"author":{"gitId":"zxgoh"},"content":"    @Test","lastModifiedDate":"2022-03-14"},{"lineNumber":72,"author":{"gitId":"zxgoh"},"content":"    public void toModelType_nullAddress_throwsIllegalValueException() {","lastModifiedDate":"2022-03-14"},{"lineNumber":73,"author":{"gitId":"zxgoh"},"content":"        JsonAdaptedCustomer customer \u003d new JsonAdaptedCustomer(VALID_NAME, VALID_PHONE, null);","lastModifiedDate":"2022-03-14"},{"lineNumber":74,"author":{"gitId":"zxgoh"},"content":"        String expectedMessage \u003d String.format(MISSING_FIELD_MESSAGE_FORMAT, AddressCustomer.class.getSimpleName());","lastModifiedDate":"2022-03-15"},{"lineNumber":75,"author":{"gitId":"zxgoh"},"content":"        assertThrows(IllegalValueException.class, expectedMessage, customer::toModelType);","lastModifiedDate":"2022-03-14"},{"lineNumber":76,"author":{"gitId":"zxgoh"},"content":"    }","lastModifiedDate":"2022-03-14"},{"lineNumber":77,"author":{"gitId":"zxgoh"},"content":"","lastModifiedDate":"2022-03-14"},{"lineNumber":78,"author":{"gitId":"zxgoh"},"content":"","lastModifiedDate":"2022-03-14"},{"lineNumber":79,"author":{"gitId":"zxgoh"},"content":"}","lastModifiedDate":"2022-03-14"}],"authorContributionMap":{"zxgoh":79}},{"path":"src/test/java/seedu/address/storage/JsonAddressBookStorageTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.storage;","lastModifiedDate":"2018-08-13"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.Assert.assertThrows;","lastModifiedDate":"2019-03-23"},{"lineNumber":6,"author":{"gitId":"zxgoh"},"content":"import static seedu.address.testutil.TypicalCustomers.ALICE;","lastModifiedDate":"2022-03-14"},{"lineNumber":7,"author":{"gitId":"zxgoh"},"content":"import static seedu.address.testutil.TypicalCustomers.HOON;","lastModifiedDate":"2022-03-14"},{"lineNumber":8,"author":{"gitId":"zxgoh"},"content":"import static seedu.address.testutil.TypicalCustomers.IDA;","lastModifiedDate":"2022-03-14"},{"lineNumber":9,"author":{"gitId":"zxgoh"},"content":"import static seedu.address.testutil.TypicalCustomers.getTypicalAddressBook;","lastModifiedDate":"2022-03-14"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import java.io.IOException;","lastModifiedDate":"2018-08-13"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-08-13"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import java.nio.file.Paths;","lastModifiedDate":"2018-08-13"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-25"},{"lineNumber":16,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.io.TempDir;","lastModifiedDate":"2019-04-25"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":18,"author":{"gitId":"-"},"content":"import seedu.address.commons.exceptions.DataConversionException;","lastModifiedDate":"2018-08-13"},{"lineNumber":19,"author":{"gitId":"-"},"content":"import seedu.address.model.AddressBook;","lastModifiedDate":"2018-08-13"},{"lineNumber":20,"author":{"gitId":"-"},"content":"import seedu.address.model.ReadOnlyAddressBook;","lastModifiedDate":"2018-08-13"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":22,"author":{"gitId":"-"},"content":"public class JsonAddressBookStorageTest {","lastModifiedDate":"2018-08-13"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    private static final Path TEST_DATA_FOLDER \u003d Paths.get(\"src\", \"test\", \"data\", \"JsonAddressBookStorageTest\");","lastModifiedDate":"2018-08-13"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    @TempDir","lastModifiedDate":"2019-04-25"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    public Path testFolder;","lastModifiedDate":"2019-04-25"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-13"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    public void readAddressBook_nullFilePath_throwsNullPointerException() {","lastModifiedDate":"2019-03-23"},{"lineNumber":30,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e readAddressBook(null));","lastModifiedDate":"2019-03-23"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":32,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    private java.util.Optional\u003cReadOnlyAddressBook\u003e readAddressBook(String filePath) throws Exception {","lastModifiedDate":"2018-08-13"},{"lineNumber":34,"author":{"gitId":"-"},"content":"        return new JsonAddressBookStorage(Paths.get(filePath)).readAddressBook(addToTestDataPathIfNotNull(filePath));","lastModifiedDate":"2018-08-13"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":36,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    private Path addToTestDataPathIfNotNull(String prefsFileInTestDataFolder) {","lastModifiedDate":"2018-08-13"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        return prefsFileInTestDataFolder !\u003d null","lastModifiedDate":"2018-08-13"},{"lineNumber":39,"author":{"gitId":"-"},"content":"                ? TEST_DATA_FOLDER.resolve(prefsFileInTestDataFolder)","lastModifiedDate":"2018-08-13"},{"lineNumber":40,"author":{"gitId":"-"},"content":"                : null;","lastModifiedDate":"2018-08-13"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":42,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-13"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    public void read_missingFile_emptyResult() throws Exception {","lastModifiedDate":"2018-08-13"},{"lineNumber":45,"author":{"gitId":"-"},"content":"        assertFalse(readAddressBook(\"NonExistentFile.json\").isPresent());","lastModifiedDate":"2018-08-13"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":47,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-13"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    public void read_notJsonFormat_exceptionThrown() {","lastModifiedDate":"2019-03-23"},{"lineNumber":50,"author":{"gitId":"-"},"content":"        assertThrows(DataConversionException.class, () -\u003e readAddressBook(\"notJsonFormatAddressBook.json\"));","lastModifiedDate":"2019-03-23"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":52,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":53,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-13"},{"lineNumber":54,"author":{"gitId":"zxgoh"},"content":"    public void readAddressBook_invalidCustomerAddressBook_throwDataConversionException() {","lastModifiedDate":"2022-03-14"},{"lineNumber":55,"author":{"gitId":"zxgoh"},"content":"        assertThrows(DataConversionException.class, () -\u003e readAddressBook(\"invalidCustomerAddressBook.json\"));","lastModifiedDate":"2022-03-14"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":57,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":58,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-13"},{"lineNumber":59,"author":{"gitId":"zxgoh"},"content":"    public void readAddressBook_invalidAndValidCustomerAddressBook_throwDataConversionException() {","lastModifiedDate":"2022-03-14"},{"lineNumber":60,"author":{"gitId":"zxgoh"},"content":"        assertThrows(DataConversionException.class, () -\u003e readAddressBook(\"invalidAndValidCustomerAddressBook.json\"));","lastModifiedDate":"2022-03-14"},{"lineNumber":61,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":62,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":63,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-13"},{"lineNumber":64,"author":{"gitId":"-"},"content":"    public void readAndSaveAddressBook_allInOrder_success() throws Exception {","lastModifiedDate":"2018-08-13"},{"lineNumber":65,"author":{"gitId":"-"},"content":"        Path filePath \u003d testFolder.resolve(\"TempAddressBook.json\");","lastModifiedDate":"2019-04-25"},{"lineNumber":66,"author":{"gitId":"-"},"content":"        AddressBook original \u003d getTypicalAddressBook();","lastModifiedDate":"2018-08-13"},{"lineNumber":67,"author":{"gitId":"-"},"content":"        JsonAddressBookStorage jsonAddressBookStorage \u003d new JsonAddressBookStorage(filePath);","lastModifiedDate":"2018-08-13"},{"lineNumber":68,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":69,"author":{"gitId":"-"},"content":"        // Save in new file and read back","lastModifiedDate":"2018-08-13"},{"lineNumber":70,"author":{"gitId":"-"},"content":"        jsonAddressBookStorage.saveAddressBook(original, filePath);","lastModifiedDate":"2018-08-13"},{"lineNumber":71,"author":{"gitId":"-"},"content":"        ReadOnlyAddressBook readBack \u003d jsonAddressBookStorage.readAddressBook(filePath).get();","lastModifiedDate":"2018-08-13"},{"lineNumber":72,"author":{"gitId":"-"},"content":"        assertEquals(original, new AddressBook(readBack));","lastModifiedDate":"2018-08-13"},{"lineNumber":73,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":74,"author":{"gitId":"-"},"content":"        // Modify data, overwrite exiting file, and read back","lastModifiedDate":"2018-08-13"},{"lineNumber":75,"author":{"gitId":"zxgoh"},"content":"        original.addCustomer(HOON);","lastModifiedDate":"2022-03-14"},{"lineNumber":76,"author":{"gitId":"zxgoh"},"content":"        original.removeCustomer(ALICE);","lastModifiedDate":"2022-03-14"},{"lineNumber":77,"author":{"gitId":"-"},"content":"        jsonAddressBookStorage.saveAddressBook(original, filePath);","lastModifiedDate":"2018-08-13"},{"lineNumber":78,"author":{"gitId":"-"},"content":"        readBack \u003d jsonAddressBookStorage.readAddressBook(filePath).get();","lastModifiedDate":"2018-08-13"},{"lineNumber":79,"author":{"gitId":"-"},"content":"        assertEquals(original, new AddressBook(readBack));","lastModifiedDate":"2018-08-13"},{"lineNumber":80,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":81,"author":{"gitId":"-"},"content":"        // Save and read without specifying file path","lastModifiedDate":"2018-08-13"},{"lineNumber":82,"author":{"gitId":"zxgoh"},"content":"        original.addCustomer(IDA);","lastModifiedDate":"2022-03-14"},{"lineNumber":83,"author":{"gitId":"-"},"content":"        jsonAddressBookStorage.saveAddressBook(original); // file path not specified","lastModifiedDate":"2018-08-13"},{"lineNumber":84,"author":{"gitId":"-"},"content":"        readBack \u003d jsonAddressBookStorage.readAddressBook().get(); // file path not specified","lastModifiedDate":"2018-08-13"},{"lineNumber":85,"author":{"gitId":"-"},"content":"        assertEquals(original, new AddressBook(readBack));","lastModifiedDate":"2018-08-13"},{"lineNumber":86,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":87,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":88,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":89,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-13"},{"lineNumber":90,"author":{"gitId":"-"},"content":"    public void saveAddressBook_nullAddressBook_throwsNullPointerException() {","lastModifiedDate":"2018-08-13"},{"lineNumber":91,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e saveAddressBook(null, \"SomeFile.json\"));","lastModifiedDate":"2019-03-23"},{"lineNumber":92,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":93,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":94,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-08-13"},{"lineNumber":95,"author":{"gitId":"-"},"content":"     * Saves {@code addressBook} at the specified {@code filePath}.","lastModifiedDate":"2018-08-13"},{"lineNumber":96,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-08-13"},{"lineNumber":97,"author":{"gitId":"-"},"content":"    private void saveAddressBook(ReadOnlyAddressBook addressBook, String filePath) {","lastModifiedDate":"2018-08-13"},{"lineNumber":98,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2018-08-13"},{"lineNumber":99,"author":{"gitId":"-"},"content":"            new JsonAddressBookStorage(Paths.get(filePath))","lastModifiedDate":"2018-08-13"},{"lineNumber":100,"author":{"gitId":"-"},"content":"                    .saveAddressBook(addressBook, addToTestDataPathIfNotNull(filePath));","lastModifiedDate":"2018-08-13"},{"lineNumber":101,"author":{"gitId":"-"},"content":"        } catch (IOException ioe) {","lastModifiedDate":"2018-08-13"},{"lineNumber":102,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"There should not be an error writing to the file.\", ioe);","lastModifiedDate":"2018-08-13"},{"lineNumber":103,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-08-13"},{"lineNumber":104,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":105,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":106,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-13"},{"lineNumber":107,"author":{"gitId":"-"},"content":"    public void saveAddressBook_nullFilePath_throwsNullPointerException() {","lastModifiedDate":"2018-08-13"},{"lineNumber":108,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e saveAddressBook(new AddressBook(), null));","lastModifiedDate":"2019-03-23"},{"lineNumber":109,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":110,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2018-08-13"}],"authorContributionMap":{"-":99,"zxgoh":11}},{"path":"src/test/java/seedu/address/storage/JsonSerializableAddressBookTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"zxgoh"},"content":"//package seedu.address.storage;","lastModifiedDate":"2022-03-16"},{"lineNumber":2,"author":{"gitId":"zxgoh"},"content":"//","lastModifiedDate":"2022-03-16"},{"lineNumber":3,"author":{"gitId":"zxgoh"},"content":"//import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2022-03-16"},{"lineNumber":4,"author":{"gitId":"zxgoh"},"content":"//import static seedu.address.testutil.Assert.assertThrows;","lastModifiedDate":"2022-03-16"},{"lineNumber":5,"author":{"gitId":"zxgoh"},"content":"//","lastModifiedDate":"2022-03-16"},{"lineNumber":6,"author":{"gitId":"zxgoh"},"content":"//import java.nio.file.Path;","lastModifiedDate":"2022-03-16"},{"lineNumber":7,"author":{"gitId":"zxgoh"},"content":"//import java.nio.file.Paths;","lastModifiedDate":"2022-03-16"},{"lineNumber":8,"author":{"gitId":"zxgoh"},"content":"//","lastModifiedDate":"2022-03-16"},{"lineNumber":9,"author":{"gitId":"zxgoh"},"content":"//import org.junit.jupiter.api.Test;","lastModifiedDate":"2022-03-16"},{"lineNumber":10,"author":{"gitId":"zxgoh"},"content":"//","lastModifiedDate":"2022-03-16"},{"lineNumber":11,"author":{"gitId":"zxgoh"},"content":"//import seedu.address.commons.exceptions.IllegalValueException;","lastModifiedDate":"2022-03-16"},{"lineNumber":12,"author":{"gitId":"zxgoh"},"content":"//import seedu.address.commons.util.JsonUtil;","lastModifiedDate":"2022-03-16"},{"lineNumber":13,"author":{"gitId":"zxgoh"},"content":"//import seedu.address.model.AddressBook;","lastModifiedDate":"2022-03-16"},{"lineNumber":14,"author":{"gitId":"zxgoh"},"content":"//import seedu.address.testutil.TypicalCustomers;","lastModifiedDate":"2022-03-16"},{"lineNumber":15,"author":{"gitId":"zxgoh"},"content":"//","lastModifiedDate":"2022-03-16"},{"lineNumber":16,"author":{"gitId":"zxgoh"},"content":"//public class JsonSerializableAddressBookTest {","lastModifiedDate":"2022-03-16"},{"lineNumber":17,"author":{"gitId":"zxgoh"},"content":"//","lastModifiedDate":"2022-03-16"},{"lineNumber":18,"author":{"gitId":"zxgoh"},"content":"//    private static final Path TEST_DATA_FOLDER \u003d Paths.get(\"src\", \"test\", \"data\", \"JsonSerializableAddressBookTest\");","lastModifiedDate":"2022-03-16"},{"lineNumber":19,"author":{"gitId":"zxgoh"},"content":"//    private static final Path TYPICAL_CUSTOMERS_FILE \u003d TEST_DATA_FOLDER.resolve(\"typicalCustomersAddressBook.json\");","lastModifiedDate":"2022-03-16"},{"lineNumber":20,"author":{"gitId":"zxgoh"},"content":"//    private static final Path INVALID_CUSTOMER_FILE \u003d TEST_DATA_FOLDER.resolve(\"invalidCustomerAddressBook.json\");","lastModifiedDate":"2022-03-16"},{"lineNumber":21,"author":{"gitId":"zxgoh"},"content":"//    private static final Path DUPLICATE_CUSTOMER_FILE \u003d TEST_DATA_FOLDER.resolve(\"duplicateCustomerAddressBook.json\");","lastModifiedDate":"2022-03-16"},{"lineNumber":22,"author":{"gitId":"zxgoh"},"content":"//","lastModifiedDate":"2022-03-16"},{"lineNumber":23,"author":{"gitId":"zxgoh"},"content":"//    @Test","lastModifiedDate":"2022-03-16"},{"lineNumber":24,"author":{"gitId":"zxgoh"},"content":"//    public void toModelType_typicalCustomersFile_success() throws Exception {","lastModifiedDate":"2022-03-16"},{"lineNumber":25,"author":{"gitId":"zxgoh"},"content":"//        JsonSerializableAddressBook dataFromFile \u003d JsonUtil.readJsonFile(TYPICAL_CUSTOMERS_FILE,","lastModifiedDate":"2022-03-16"},{"lineNumber":26,"author":{"gitId":"zxgoh"},"content":"//                JsonSerializableAddressBook.class).get();","lastModifiedDate":"2022-03-16"},{"lineNumber":27,"author":{"gitId":"zxgoh"},"content":"//        AddressBook addressBookFromFile \u003d dataFromFile.toModelType();","lastModifiedDate":"2022-03-16"},{"lineNumber":28,"author":{"gitId":"zxgoh"},"content":"//        AddressBook typicalCustomersAddressBook \u003d TypicalCustomers.getTypicalAddressBook();","lastModifiedDate":"2022-03-16"},{"lineNumber":29,"author":{"gitId":"zxgoh"},"content":"//        assertEquals(addressBookFromFile, typicalCustomersAddressBook);","lastModifiedDate":"2022-03-16"},{"lineNumber":30,"author":{"gitId":"zxgoh"},"content":"//    }","lastModifiedDate":"2022-03-16"},{"lineNumber":31,"author":{"gitId":"zxgoh"},"content":"//","lastModifiedDate":"2022-03-16"},{"lineNumber":32,"author":{"gitId":"zxgoh"},"content":"//    @Test","lastModifiedDate":"2022-03-16"},{"lineNumber":33,"author":{"gitId":"zxgoh"},"content":"//    public void toModelType_invalidCustomerFile_throwsIllegalValueException() throws Exception {","lastModifiedDate":"2022-03-16"},{"lineNumber":34,"author":{"gitId":"zxgoh"},"content":"//        JsonSerializableAddressBook dataFromFile \u003d JsonUtil.readJsonFile(INVALID_CUSTOMER_FILE,","lastModifiedDate":"2022-03-16"},{"lineNumber":35,"author":{"gitId":"zxgoh"},"content":"//                JsonSerializableAddressBook.class).get();","lastModifiedDate":"2022-03-16"},{"lineNumber":36,"author":{"gitId":"zxgoh"},"content":"//        assertThrows(IllegalValueException.class, dataFromFile::toModelType);","lastModifiedDate":"2022-03-16"},{"lineNumber":37,"author":{"gitId":"zxgoh"},"content":"//    }","lastModifiedDate":"2022-03-16"},{"lineNumber":38,"author":{"gitId":"zxgoh"},"content":"//","lastModifiedDate":"2022-03-16"},{"lineNumber":39,"author":{"gitId":"zxgoh"},"content":"//    @Test","lastModifiedDate":"2022-03-16"},{"lineNumber":40,"author":{"gitId":"zxgoh"},"content":"//    public void toModelType_duplicateCustomers_throwsIllegalValueException() throws Exception {","lastModifiedDate":"2022-03-16"},{"lineNumber":41,"author":{"gitId":"zxgoh"},"content":"//        JsonSerializableAddressBook dataFromFile \u003d JsonUtil.readJsonFile(DUPLICATE_CUSTOMER_FILE,","lastModifiedDate":"2022-03-16"},{"lineNumber":42,"author":{"gitId":"zxgoh"},"content":"//                JsonSerializableAddressBook.class).get();","lastModifiedDate":"2022-03-16"},{"lineNumber":43,"author":{"gitId":"zxgoh"},"content":"//        assertThrows(IllegalValueException.class, JsonSerializableAddressBook.MESSAGE_DUPLICATE_CUSTOMER,","lastModifiedDate":"2022-03-16"},{"lineNumber":44,"author":{"gitId":"zxgoh"},"content":"//                dataFromFile::toModelType);","lastModifiedDate":"2022-03-16"},{"lineNumber":45,"author":{"gitId":"zxgoh"},"content":"//    }","lastModifiedDate":"2022-03-16"},{"lineNumber":46,"author":{"gitId":"zxgoh"},"content":"//","lastModifiedDate":"2022-03-16"},{"lineNumber":47,"author":{"gitId":"zxgoh"},"content":"//}","lastModifiedDate":"2022-03-16"}],"authorContributionMap":{"zxgoh":47}},{"path":"src/test/java/seedu/address/storage/StorageManagerTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.storage;","lastModifiedDate":"2016-08-08"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertNotNull;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"zxgoh"},"content":"import static seedu.address.testutil.TypicalCustomers.getTypicalAddressBook;","lastModifiedDate":"2022-03-14"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-04-21"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.BeforeEach;","lastModifiedDate":"2019-04-25"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-25"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.io.TempDir;","lastModifiedDate":"2019-04-25"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.GuiSettings;","lastModifiedDate":"2018-11-27"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import seedu.address.model.AddressBook;","lastModifiedDate":"2016-09-21"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import seedu.address.model.ReadOnlyAddressBook;","lastModifiedDate":"2016-09-21"},{"lineNumber":16,"author":{"gitId":"-"},"content":"import seedu.address.model.UserPrefs;","lastModifiedDate":"2016-09-24"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":18,"author":{"gitId":"-"},"content":"public class StorageManagerTest {","lastModifiedDate":"2016-08-08"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-28"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    @TempDir","lastModifiedDate":"2019-04-25"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    public Path testFolder;","lastModifiedDate":"2019-04-25"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    private StorageManager storageManager;","lastModifiedDate":"2017-04-01"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    @BeforeEach","lastModifiedDate":"2019-04-25"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    public void setUp() {","lastModifiedDate":"2016-10-19"},{"lineNumber":27,"author":{"gitId":"-"},"content":"        JsonAddressBookStorage addressBookStorage \u003d new JsonAddressBookStorage(getTempFilePath(\"ab\"));","lastModifiedDate":"2018-11-27"},{"lineNumber":28,"author":{"gitId":"-"},"content":"        JsonUserPrefsStorage userPrefsStorage \u003d new JsonUserPrefsStorage(getTempFilePath(\"prefs\"));","lastModifiedDate":"2017-02-25"},{"lineNumber":29,"author":{"gitId":"-"},"content":"        storageManager \u003d new StorageManager(addressBookStorage, userPrefsStorage);","lastModifiedDate":"2017-02-25"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":31,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    private Path getTempFilePath(String fileName) {","lastModifiedDate":"2018-04-21"},{"lineNumber":33,"author":{"gitId":"-"},"content":"        return testFolder.resolve(fileName);","lastModifiedDate":"2019-04-25"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-10-16"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    public void prefsReadSave() throws Exception {","lastModifiedDate":"2016-10-16"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        /*","lastModifiedDate":"2016-09-28"},{"lineNumber":39,"author":{"gitId":"-"},"content":"         * Note: This is an integration test that verifies the StorageManager is properly wired to the","lastModifiedDate":"2016-09-28"},{"lineNumber":40,"author":{"gitId":"-"},"content":"         * {@link JsonUserPrefsStorage} class.","lastModifiedDate":"2016-10-01"},{"lineNumber":41,"author":{"gitId":"-"},"content":"         * More extensive testing of UserPref saving/reading is done in {@link JsonUserPrefsStorageTest} class.","lastModifiedDate":"2016-10-01"},{"lineNumber":42,"author":{"gitId":"-"},"content":"         */","lastModifiedDate":"2016-09-28"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        UserPrefs original \u003d new UserPrefs();","lastModifiedDate":"2016-09-24"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        original.setGuiSettings(new GuiSettings(300, 600, 4, 6));","lastModifiedDate":"2018-11-27"},{"lineNumber":45,"author":{"gitId":"-"},"content":"        storageManager.saveUserPrefs(original);","lastModifiedDate":"2016-09-28"},{"lineNumber":46,"author":{"gitId":"-"},"content":"        UserPrefs retrieved \u003d storageManager.readUserPrefs().get();","lastModifiedDate":"2016-09-28"},{"lineNumber":47,"author":{"gitId":"-"},"content":"        assertEquals(original, retrieved);","lastModifiedDate":"2016-09-24"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":49,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-08-08"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    public void addressBookReadSave() throws Exception {","lastModifiedDate":"2016-09-24"},{"lineNumber":52,"author":{"gitId":"-"},"content":"        /*","lastModifiedDate":"2016-10-16"},{"lineNumber":53,"author":{"gitId":"-"},"content":"         * Note: This is an integration test that verifies the StorageManager is properly wired to the","lastModifiedDate":"2016-10-16"},{"lineNumber":54,"author":{"gitId":"-"},"content":"         * {@link JsonAddressBookStorage} class.","lastModifiedDate":"2018-11-27"},{"lineNumber":55,"author":{"gitId":"-"},"content":"         * More extensive testing of UserPref saving/reading is done in {@link JsonAddressBookStorageTest} class.","lastModifiedDate":"2018-11-27"},{"lineNumber":56,"author":{"gitId":"-"},"content":"         */","lastModifiedDate":"2016-10-16"},{"lineNumber":57,"author":{"gitId":"-"},"content":"        AddressBook original \u003d getTypicalAddressBook();","lastModifiedDate":"2017-07-19"},{"lineNumber":58,"author":{"gitId":"-"},"content":"        storageManager.saveAddressBook(original);","lastModifiedDate":"2016-09-28"},{"lineNumber":59,"author":{"gitId":"-"},"content":"        ReadOnlyAddressBook retrieved \u003d storageManager.readAddressBook().get();","lastModifiedDate":"2016-09-28"},{"lineNumber":60,"author":{"gitId":"-"},"content":"        assertEquals(original, new AddressBook(retrieved));","lastModifiedDate":"2016-09-24"},{"lineNumber":61,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":62,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":63,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-10-01"},{"lineNumber":64,"author":{"gitId":"-"},"content":"    public void getAddressBookFilePath() {","lastModifiedDate":"2016-10-01"},{"lineNumber":65,"author":{"gitId":"-"},"content":"        assertNotNull(storageManager.getAddressBookFilePath());","lastModifiedDate":"2016-10-01"},{"lineNumber":66,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-10-01"},{"lineNumber":67,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-01"},{"lineNumber":68,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"}],"authorContributionMap":{"-":67,"zxgoh":1}},{"path":"src/test/java/seedu/address/testutil/AddressBookBuilder.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.testutil;","lastModifiedDate":"2016-08-08"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import seedu.address.model.AddressBook;","lastModifiedDate":"2016-09-21"},{"lineNumber":4,"author":{"gitId":"zxgoh"},"content":"import seedu.address.model.customer.Customer;","lastModifiedDate":"2022-03-14"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":6,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-08"},{"lineNumber":7,"author":{"gitId":"-"},"content":" * A utility class to help with building Addressbook objects.","lastModifiedDate":"2016-08-08"},{"lineNumber":8,"author":{"gitId":"-"},"content":" * Example usage: \u003cbr\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":9,"author":{"gitId":"zxgoh"},"content":" *     {@code AddressBook ab \u003d new AddressBookBuilder().withCustomer(\"John\", \"Doe\").build();}","lastModifiedDate":"2022-03-14"},{"lineNumber":10,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-08"},{"lineNumber":11,"author":{"gitId":"-"},"content":"public class AddressBookBuilder {","lastModifiedDate":"2016-08-08"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":13,"author":{"gitId":"zxgoh"},"content":"    private final AddressBook addressBook;","lastModifiedDate":"2022-03-16"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":15,"author":{"gitId":"-"},"content":"    public AddressBookBuilder() {","lastModifiedDate":"2017-05-31"},{"lineNumber":16,"author":{"gitId":"-"},"content":"        addressBook \u003d new AddressBook();","lastModifiedDate":"2017-05-31"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-31"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-31"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    public AddressBookBuilder(AddressBook addressBook) {","lastModifiedDate":"2016-08-08"},{"lineNumber":20,"author":{"gitId":"-"},"content":"        this.addressBook \u003d addressBook;","lastModifiedDate":"2016-08-08"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-07-26"},{"lineNumber":24,"author":{"gitId":"zxgoh"},"content":"     * Adds a new {@code Customer} to the {@code AddressBook} that we are building.","lastModifiedDate":"2022-03-14"},{"lineNumber":25,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-07-26"},{"lineNumber":26,"author":{"gitId":"zxgoh"},"content":"    public AddressBookBuilder withCustomer(Customer customer) {","lastModifiedDate":"2022-03-14"},{"lineNumber":27,"author":{"gitId":"zxgoh"},"content":"        addressBook.addCustomer(customer);","lastModifiedDate":"2022-03-14"},{"lineNumber":28,"author":{"gitId":"-"},"content":"        return this;","lastModifiedDate":"2016-08-08"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    public AddressBook build() {","lastModifiedDate":"2016-08-08"},{"lineNumber":32,"author":{"gitId":"-"},"content":"        return addressBook;","lastModifiedDate":"2016-08-08"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":34,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"}],"authorContributionMap":{"-":28,"zxgoh":6}},{"path":"src/test/java/seedu/address/testutil/CustomerBuilder.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"zxgoh"},"content":"package seedu.address.testutil;","lastModifiedDate":"2022-03-14"},{"lineNumber":2,"author":{"gitId":"zxgoh"},"content":"","lastModifiedDate":"2022-03-14"},{"lineNumber":3,"author":{"gitId":"zxgoh"},"content":"import java.util.HashSet;","lastModifiedDate":"2022-03-14"},{"lineNumber":4,"author":{"gitId":"zxgoh"},"content":"import java.util.Set;","lastModifiedDate":"2022-03-14"},{"lineNumber":5,"author":{"gitId":"zxgoh"},"content":"","lastModifiedDate":"2022-03-14"},{"lineNumber":6,"author":{"gitId":"zxgoh"},"content":"import seedu.address.model.customer.AddressCustomer;","lastModifiedDate":"2022-03-15"},{"lineNumber":7,"author":{"gitId":"zxgoh"},"content":"import seedu.address.model.customer.Customer;","lastModifiedDate":"2022-03-14"},{"lineNumber":8,"author":{"gitId":"zxgoh"},"content":"import seedu.address.model.customer.EmailCustomer;","lastModifiedDate":"2022-03-15"},{"lineNumber":9,"author":{"gitId":"zxgoh"},"content":"import seedu.address.model.customer.NameCustomer;","lastModifiedDate":"2022-03-15"},{"lineNumber":10,"author":{"gitId":"zxgoh"},"content":"import seedu.address.model.customer.PhoneCustomer;","lastModifiedDate":"2022-03-15"},{"lineNumber":11,"author":{"gitId":"zxgoh"},"content":"import seedu.address.model.tag.Tag;","lastModifiedDate":"2022-03-14"},{"lineNumber":12,"author":{"gitId":"zxgoh"},"content":"","lastModifiedDate":"2022-03-14"},{"lineNumber":13,"author":{"gitId":"zxgoh"},"content":"/**","lastModifiedDate":"2022-03-14"},{"lineNumber":14,"author":{"gitId":"zxgoh"},"content":" * A utility class to help with building Customer objects.","lastModifiedDate":"2022-03-14"},{"lineNumber":15,"author":{"gitId":"zxgoh"},"content":" */","lastModifiedDate":"2022-03-14"},{"lineNumber":16,"author":{"gitId":"zxgoh"},"content":"public class CustomerBuilder {","lastModifiedDate":"2022-03-14"},{"lineNumber":17,"author":{"gitId":"zxgoh"},"content":"","lastModifiedDate":"2022-03-14"},{"lineNumber":18,"author":{"gitId":"zxgoh"},"content":"    public static final String DEFAULT_NAME \u003d \"Amy Bee\";","lastModifiedDate":"2022-03-14"},{"lineNumber":19,"author":{"gitId":"zxgoh"},"content":"    public static final String DEFAULT_PHONE \u003d \"85355255\";","lastModifiedDate":"2022-03-14"},{"lineNumber":20,"author":{"gitId":"zxgoh"},"content":"    public static final String DEFAULT_EMAIL \u003d \"amy@gmail.com\";","lastModifiedDate":"2022-03-14"},{"lineNumber":21,"author":{"gitId":"zxgoh"},"content":"    public static final String DEFAULT_ADDRESS \u003d \"123, Jurong West Ave 6, #08-111\";","lastModifiedDate":"2022-03-14"},{"lineNumber":22,"author":{"gitId":"zxgoh"},"content":"","lastModifiedDate":"2022-03-14"},{"lineNumber":23,"author":{"gitId":"zxgoh"},"content":"    private NameCustomer nameCustomer;","lastModifiedDate":"2022-03-15"},{"lineNumber":24,"author":{"gitId":"zxgoh"},"content":"    private PhoneCustomer phoneCustomer;","lastModifiedDate":"2022-03-15"},{"lineNumber":25,"author":{"gitId":"zxgoh"},"content":"    private EmailCustomer emailCustomer;","lastModifiedDate":"2022-03-15"},{"lineNumber":26,"author":{"gitId":"zxgoh"},"content":"    private AddressCustomer addressCustomer;","lastModifiedDate":"2022-03-15"},{"lineNumber":27,"author":{"gitId":"zxgoh"},"content":"    private Set\u003cTag\u003e tags;","lastModifiedDate":"2022-03-14"},{"lineNumber":28,"author":{"gitId":"zxgoh"},"content":"","lastModifiedDate":"2022-03-14"},{"lineNumber":29,"author":{"gitId":"zxgoh"},"content":"    /**","lastModifiedDate":"2022-03-14"},{"lineNumber":30,"author":{"gitId":"zxgoh"},"content":"     * Creates a {@code CustomerBuilder} with the default details.","lastModifiedDate":"2022-03-14"},{"lineNumber":31,"author":{"gitId":"zxgoh"},"content":"     */","lastModifiedDate":"2022-03-14"},{"lineNumber":32,"author":{"gitId":"zxgoh"},"content":"    public CustomerBuilder() {","lastModifiedDate":"2022-03-14"},{"lineNumber":33,"author":{"gitId":"zxgoh"},"content":"        nameCustomer \u003d new NameCustomer(DEFAULT_NAME);","lastModifiedDate":"2022-03-15"},{"lineNumber":34,"author":{"gitId":"zxgoh"},"content":"        phoneCustomer \u003d new PhoneCustomer(DEFAULT_PHONE);","lastModifiedDate":"2022-03-15"},{"lineNumber":35,"author":{"gitId":"zxgoh"},"content":"        emailCustomer \u003d new EmailCustomer(DEFAULT_EMAIL);","lastModifiedDate":"2022-03-15"},{"lineNumber":36,"author":{"gitId":"zxgoh"},"content":"        addressCustomer \u003d new AddressCustomer(DEFAULT_ADDRESS);","lastModifiedDate":"2022-03-15"},{"lineNumber":37,"author":{"gitId":"zxgoh"},"content":"        tags \u003d new HashSet\u003c\u003e();","lastModifiedDate":"2022-03-14"},{"lineNumber":38,"author":{"gitId":"zxgoh"},"content":"    }","lastModifiedDate":"2022-03-14"},{"lineNumber":39,"author":{"gitId":"zxgoh"},"content":"","lastModifiedDate":"2022-03-14"},{"lineNumber":40,"author":{"gitId":"zxgoh"},"content":"    /**","lastModifiedDate":"2022-03-14"},{"lineNumber":41,"author":{"gitId":"zxgoh"},"content":"     * Initializes the CustomerBuilder with the data of {@code customerToCopy}.","lastModifiedDate":"2022-03-14"},{"lineNumber":42,"author":{"gitId":"zxgoh"},"content":"     */","lastModifiedDate":"2022-03-14"},{"lineNumber":43,"author":{"gitId":"zxgoh"},"content":"    public CustomerBuilder(Customer customerToCopy) {","lastModifiedDate":"2022-03-14"},{"lineNumber":44,"author":{"gitId":"zxgoh"},"content":"        nameCustomer \u003d customerToCopy.getName();","lastModifiedDate":"2022-03-15"},{"lineNumber":45,"author":{"gitId":"zxgoh"},"content":"        phoneCustomer \u003d customerToCopy.getPhone();","lastModifiedDate":"2022-03-15"},{"lineNumber":46,"author":{"gitId":"zxgoh"},"content":"        addressCustomer \u003d customerToCopy.getAddress();","lastModifiedDate":"2022-03-15"},{"lineNumber":47,"author":{"gitId":"zxgoh"},"content":"    }","lastModifiedDate":"2022-03-14"},{"lineNumber":48,"author":{"gitId":"zxgoh"},"content":"","lastModifiedDate":"2022-03-14"},{"lineNumber":49,"author":{"gitId":"zxgoh"},"content":"    /**","lastModifiedDate":"2022-03-14"},{"lineNumber":50,"author":{"gitId":"zxgoh"},"content":"     * Sets the {@code NameCustomer} of the {@code Customer} that we are building.","lastModifiedDate":"2022-03-15"},{"lineNumber":51,"author":{"gitId":"zxgoh"},"content":"     */","lastModifiedDate":"2022-03-14"},{"lineNumber":52,"author":{"gitId":"zxgoh"},"content":"    public CustomerBuilder withName(String name) {","lastModifiedDate":"2022-03-14"},{"lineNumber":53,"author":{"gitId":"zxgoh"},"content":"        this.nameCustomer \u003d new NameCustomer(name);","lastModifiedDate":"2022-03-15"},{"lineNumber":54,"author":{"gitId":"zxgoh"},"content":"        return this;","lastModifiedDate":"2022-03-14"},{"lineNumber":55,"author":{"gitId":"zxgoh"},"content":"    }","lastModifiedDate":"2022-03-14"},{"lineNumber":56,"author":{"gitId":"zxgoh"},"content":"","lastModifiedDate":"2022-03-14"},{"lineNumber":57,"author":{"gitId":"zxgoh"},"content":"    /**","lastModifiedDate":"2022-03-14"},{"lineNumber":58,"author":{"gitId":"zxgoh"},"content":"     * Sets the {@code AddressCustomer} of the {@code Customer} that we are building.","lastModifiedDate":"2022-03-15"},{"lineNumber":59,"author":{"gitId":"zxgoh"},"content":"     */","lastModifiedDate":"2022-03-14"},{"lineNumber":60,"author":{"gitId":"zxgoh"},"content":"    public CustomerBuilder withAddress(String address) {","lastModifiedDate":"2022-03-14"},{"lineNumber":61,"author":{"gitId":"zxgoh"},"content":"        this.addressCustomer \u003d new AddressCustomer(address);","lastModifiedDate":"2022-03-15"},{"lineNumber":62,"author":{"gitId":"zxgoh"},"content":"        return this;","lastModifiedDate":"2022-03-14"},{"lineNumber":63,"author":{"gitId":"zxgoh"},"content":"    }","lastModifiedDate":"2022-03-14"},{"lineNumber":64,"author":{"gitId":"zxgoh"},"content":"","lastModifiedDate":"2022-03-14"},{"lineNumber":65,"author":{"gitId":"zxgoh"},"content":"    /**","lastModifiedDate":"2022-03-14"},{"lineNumber":66,"author":{"gitId":"zxgoh"},"content":"     * Sets the {@code PhoneCustomer} of the {@code Customer} that we are building.","lastModifiedDate":"2022-03-15"},{"lineNumber":67,"author":{"gitId":"zxgoh"},"content":"     */","lastModifiedDate":"2022-03-14"},{"lineNumber":68,"author":{"gitId":"zxgoh"},"content":"    public CustomerBuilder withPhone(String phone) {","lastModifiedDate":"2022-03-14"},{"lineNumber":69,"author":{"gitId":"zxgoh"},"content":"        this.phoneCustomer \u003d new PhoneCustomer(phone);","lastModifiedDate":"2022-03-15"},{"lineNumber":70,"author":{"gitId":"zxgoh"},"content":"        return this;","lastModifiedDate":"2022-03-14"},{"lineNumber":71,"author":{"gitId":"zxgoh"},"content":"    }","lastModifiedDate":"2022-03-14"},{"lineNumber":72,"author":{"gitId":"zxgoh"},"content":"","lastModifiedDate":"2022-03-14"},{"lineNumber":73,"author":{"gitId":"zxgoh"},"content":"    /**","lastModifiedDate":"2022-03-14"},{"lineNumber":74,"author":{"gitId":"zxgoh"},"content":"     * Sets the {@code EmailCustomer} of the {@code Customer} that we are building.","lastModifiedDate":"2022-03-15"},{"lineNumber":75,"author":{"gitId":"zxgoh"},"content":"     */","lastModifiedDate":"2022-03-14"},{"lineNumber":76,"author":{"gitId":"zxgoh"},"content":"    public CustomerBuilder withEmail(String email) {","lastModifiedDate":"2022-03-14"},{"lineNumber":77,"author":{"gitId":"zxgoh"},"content":"        this.emailCustomer \u003d new EmailCustomer(email);","lastModifiedDate":"2022-03-15"},{"lineNumber":78,"author":{"gitId":"zxgoh"},"content":"        return this;","lastModifiedDate":"2022-03-14"},{"lineNumber":79,"author":{"gitId":"zxgoh"},"content":"    }","lastModifiedDate":"2022-03-14"},{"lineNumber":80,"author":{"gitId":"zxgoh"},"content":"","lastModifiedDate":"2022-03-14"},{"lineNumber":81,"author":{"gitId":"zxgoh"},"content":"    public Customer build() {","lastModifiedDate":"2022-03-14"},{"lineNumber":82,"author":{"gitId":"zxgoh"},"content":"        return new Customer(nameCustomer, phoneCustomer, addressCustomer);","lastModifiedDate":"2022-03-15"},{"lineNumber":83,"author":{"gitId":"zxgoh"},"content":"    }","lastModifiedDate":"2022-03-14"},{"lineNumber":84,"author":{"gitId":"zxgoh"},"content":"","lastModifiedDate":"2022-03-14"},{"lineNumber":85,"author":{"gitId":"zxgoh"},"content":"}","lastModifiedDate":"2022-03-14"}],"authorContributionMap":{"zxgoh":85}},{"path":"src/test/java/seedu/address/testutil/CustomerUtil.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"zxgoh"},"content":"package seedu.address.testutil;","lastModifiedDate":"2022-03-14"},{"lineNumber":2,"author":{"gitId":"zxgoh"},"content":"","lastModifiedDate":"2022-03-14"},{"lineNumber":3,"author":{"gitId":"zxgoh"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_ADDRESS;","lastModifiedDate":"2022-03-14"},{"lineNumber":4,"author":{"gitId":"zxgoh"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_NAME;","lastModifiedDate":"2022-03-14"},{"lineNumber":5,"author":{"gitId":"zxgoh"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_PHONE;","lastModifiedDate":"2022-03-14"},{"lineNumber":6,"author":{"gitId":"zxgoh"},"content":"","lastModifiedDate":"2022-03-14"},{"lineNumber":7,"author":{"gitId":"zxgoh"},"content":"import seedu.address.logic.commands.AddCustomerCommand;","lastModifiedDate":"2022-03-14"},{"lineNumber":8,"author":{"gitId":"zxgoh"},"content":"import seedu.address.logic.commands.EditCustomerCommand.EditCustomerDescriptor;","lastModifiedDate":"2022-03-30"},{"lineNumber":9,"author":{"gitId":"zxgoh"},"content":"import seedu.address.model.customer.Customer;","lastModifiedDate":"2022-03-14"},{"lineNumber":10,"author":{"gitId":"zxgoh"},"content":"","lastModifiedDate":"2022-03-14"},{"lineNumber":11,"author":{"gitId":"zxgoh"},"content":"/**","lastModifiedDate":"2022-03-14"},{"lineNumber":12,"author":{"gitId":"zxgoh"},"content":" * A utility class for Customer.","lastModifiedDate":"2022-03-14"},{"lineNumber":13,"author":{"gitId":"zxgoh"},"content":" */","lastModifiedDate":"2022-03-14"},{"lineNumber":14,"author":{"gitId":"zxgoh"},"content":"public class CustomerUtil {","lastModifiedDate":"2022-03-14"},{"lineNumber":15,"author":{"gitId":"zxgoh"},"content":"","lastModifiedDate":"2022-03-14"},{"lineNumber":16,"author":{"gitId":"zxgoh"},"content":"    /**","lastModifiedDate":"2022-03-14"},{"lineNumber":17,"author":{"gitId":"zxgoh"},"content":"     * Returns an add command string for adding the {@code customer}.","lastModifiedDate":"2022-03-14"},{"lineNumber":18,"author":{"gitId":"zxgoh"},"content":"     */","lastModifiedDate":"2022-03-14"},{"lineNumber":19,"author":{"gitId":"zxgoh"},"content":"    public static String getAddCommand(Customer customer) {","lastModifiedDate":"2022-03-14"},{"lineNumber":20,"author":{"gitId":"zxgoh"},"content":"        return AddCustomerCommand.COMMAND_WORD + \" \" + getCustomerDetails(customer);","lastModifiedDate":"2022-03-14"},{"lineNumber":21,"author":{"gitId":"zxgoh"},"content":"    }","lastModifiedDate":"2022-03-14"},{"lineNumber":22,"author":{"gitId":"zxgoh"},"content":"","lastModifiedDate":"2022-03-14"},{"lineNumber":23,"author":{"gitId":"zxgoh"},"content":"    /**","lastModifiedDate":"2022-03-14"},{"lineNumber":24,"author":{"gitId":"zxgoh"},"content":"     * Returns the part of command string for the given {@code customer}\u0027s details.","lastModifiedDate":"2022-03-14"},{"lineNumber":25,"author":{"gitId":"zxgoh"},"content":"     */","lastModifiedDate":"2022-03-14"},{"lineNumber":26,"author":{"gitId":"zxgoh"},"content":"    public static String getCustomerDetails(Customer customer) {","lastModifiedDate":"2022-03-14"},{"lineNumber":27,"author":{"gitId":"zxgoh"},"content":"        StringBuilder sb \u003d new StringBuilder();","lastModifiedDate":"2022-03-14"},{"lineNumber":28,"author":{"gitId":"zxgoh"},"content":"        sb.append(PREFIX_NAME + customer.getName().fullName + \" \");","lastModifiedDate":"2022-03-14"},{"lineNumber":29,"author":{"gitId":"zxgoh"},"content":"        sb.append(PREFIX_PHONE + customer.getPhone().value + \" \");","lastModifiedDate":"2022-03-14"},{"lineNumber":30,"author":{"gitId":"zxgoh"},"content":"        return sb.toString();","lastModifiedDate":"2022-03-14"},{"lineNumber":31,"author":{"gitId":"zxgoh"},"content":"    }","lastModifiedDate":"2022-03-14"},{"lineNumber":32,"author":{"gitId":"zxgoh"},"content":"","lastModifiedDate":"2022-03-14"},{"lineNumber":33,"author":{"gitId":"zxgoh"},"content":"    /**","lastModifiedDate":"2022-03-14"},{"lineNumber":34,"author":{"gitId":"zxgoh"},"content":"     * Returns the part of command string for the given {@code EditCustomerDescriptor}\u0027s details.","lastModifiedDate":"2022-03-30"},{"lineNumber":35,"author":{"gitId":"zxgoh"},"content":"     */","lastModifiedDate":"2022-03-14"},{"lineNumber":36,"author":{"gitId":"zxgoh"},"content":"    public static String getEditCustomerDescriptorDetails(EditCustomerDescriptor descriptor) {","lastModifiedDate":"2022-03-30"},{"lineNumber":37,"author":{"gitId":"zxgoh"},"content":"        StringBuilder sb \u003d new StringBuilder();","lastModifiedDate":"2022-03-14"},{"lineNumber":38,"author":{"gitId":"zxgoh"},"content":"        descriptor.getName().ifPresent(name -\u003e sb.append(PREFIX_NAME).append(name.fullName).append(\" \"));","lastModifiedDate":"2022-03-14"},{"lineNumber":39,"author":{"gitId":"zxgoh"},"content":"        descriptor.getPhone().ifPresent(phone -\u003e sb.append(PREFIX_PHONE).append(phone.value).append(\" \"));","lastModifiedDate":"2022-03-14"},{"lineNumber":40,"author":{"gitId":"zxgoh"},"content":"        descriptor.getAddress().ifPresent(address -\u003e sb.append(PREFIX_ADDRESS).append(address.value).append(\" \"));","lastModifiedDate":"2022-03-14"},{"lineNumber":41,"author":{"gitId":"zxgoh"},"content":"        return sb.toString();","lastModifiedDate":"2022-03-14"},{"lineNumber":42,"author":{"gitId":"zxgoh"},"content":"    }","lastModifiedDate":"2022-03-14"},{"lineNumber":43,"author":{"gitId":"zxgoh"},"content":"}","lastModifiedDate":"2022-03-14"}],"authorContributionMap":{"zxgoh":43}},{"path":"src/test/java/seedu/address/testutil/EditCustomerDescriptorBuilder.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"zxgoh"},"content":"package seedu.address.testutil;","lastModifiedDate":"2022-03-14"},{"lineNumber":2,"author":{"gitId":"zxgoh"},"content":"","lastModifiedDate":"2022-03-14"},{"lineNumber":3,"author":{"gitId":"zxgoh"},"content":"import seedu.address.logic.commands.EditCustomerCommand;","lastModifiedDate":"2022-03-30"},{"lineNumber":4,"author":{"gitId":"zxgoh"},"content":"import seedu.address.logic.commands.EditCustomerCommand.EditCustomerDescriptor;","lastModifiedDate":"2022-03-30"},{"lineNumber":5,"author":{"gitId":"zxgoh"},"content":"import seedu.address.model.customer.AddressCustomer;","lastModifiedDate":"2022-03-15"},{"lineNumber":6,"author":{"gitId":"zxgoh"},"content":"import seedu.address.model.customer.Customer;","lastModifiedDate":"2022-03-14"},{"lineNumber":7,"author":{"gitId":"zxgoh"},"content":"import seedu.address.model.customer.NameCustomer;","lastModifiedDate":"2022-03-15"},{"lineNumber":8,"author":{"gitId":"zxgoh"},"content":"import seedu.address.model.customer.PhoneCustomer;","lastModifiedDate":"2022-03-15"},{"lineNumber":9,"author":{"gitId":"zxgoh"},"content":"","lastModifiedDate":"2022-03-14"},{"lineNumber":10,"author":{"gitId":"zxgoh"},"content":"/**","lastModifiedDate":"2022-03-14"},{"lineNumber":11,"author":{"gitId":"zxgoh"},"content":" * A utility class to help with building EditCustomerDescriptor objects.","lastModifiedDate":"2022-03-30"},{"lineNumber":12,"author":{"gitId":"zxgoh"},"content":" */","lastModifiedDate":"2022-03-14"},{"lineNumber":13,"author":{"gitId":"zxgoh"},"content":"public class EditCustomerDescriptorBuilder {","lastModifiedDate":"2022-03-14"},{"lineNumber":14,"author":{"gitId":"zxgoh"},"content":"","lastModifiedDate":"2022-03-14"},{"lineNumber":15,"author":{"gitId":"zxgoh"},"content":"    private final EditCustomerCommand.EditCustomerDescriptor descriptor;","lastModifiedDate":"2022-03-30"},{"lineNumber":16,"author":{"gitId":"zxgoh"},"content":"","lastModifiedDate":"2022-03-14"},{"lineNumber":17,"author":{"gitId":"zxgoh"},"content":"    public EditCustomerDescriptorBuilder() {","lastModifiedDate":"2022-03-14"},{"lineNumber":18,"author":{"gitId":"zxgoh"},"content":"        descriptor \u003d new EditCustomerDescriptor();","lastModifiedDate":"2022-03-30"},{"lineNumber":19,"author":{"gitId":"zxgoh"},"content":"    }","lastModifiedDate":"2022-03-14"},{"lineNumber":20,"author":{"gitId":"zxgoh"},"content":"","lastModifiedDate":"2022-03-14"},{"lineNumber":21,"author":{"gitId":"zxgoh"},"content":"    public EditCustomerDescriptorBuilder(EditCustomerCommand.EditCustomerDescriptor descriptor) {","lastModifiedDate":"2022-03-30"},{"lineNumber":22,"author":{"gitId":"zxgoh"},"content":"        this.descriptor \u003d new EditCustomerDescriptor(descriptor);","lastModifiedDate":"2022-03-30"},{"lineNumber":23,"author":{"gitId":"zxgoh"},"content":"    }","lastModifiedDate":"2022-03-14"},{"lineNumber":24,"author":{"gitId":"zxgoh"},"content":"","lastModifiedDate":"2022-03-14"},{"lineNumber":25,"author":{"gitId":"zxgoh"},"content":"    /**","lastModifiedDate":"2022-03-14"},{"lineNumber":26,"author":{"gitId":"zxgoh"},"content":"     * Returns an {@code EditCustomerDescriptor} with fields containing {@code customer}\u0027s details","lastModifiedDate":"2022-03-30"},{"lineNumber":27,"author":{"gitId":"zxgoh"},"content":"     */","lastModifiedDate":"2022-03-14"},{"lineNumber":28,"author":{"gitId":"zxgoh"},"content":"    public EditCustomerDescriptorBuilder(Customer customer) {","lastModifiedDate":"2022-03-14"},{"lineNumber":29,"author":{"gitId":"zxgoh"},"content":"        descriptor \u003d new EditCustomerCommand.EditCustomerDescriptor();","lastModifiedDate":"2022-03-30"},{"lineNumber":30,"author":{"gitId":"zxgoh"},"content":"        descriptor.setName(customer.getName());","lastModifiedDate":"2022-03-14"},{"lineNumber":31,"author":{"gitId":"zxgoh"},"content":"        descriptor.setPhone(customer.getPhone());","lastModifiedDate":"2022-03-14"},{"lineNumber":32,"author":{"gitId":"zxgoh"},"content":"        descriptor.setAddress(customer.getAddress());","lastModifiedDate":"2022-03-14"},{"lineNumber":33,"author":{"gitId":"zxgoh"},"content":"    }","lastModifiedDate":"2022-03-14"},{"lineNumber":34,"author":{"gitId":"zxgoh"},"content":"","lastModifiedDate":"2022-03-14"},{"lineNumber":35,"author":{"gitId":"zxgoh"},"content":"    /**","lastModifiedDate":"2022-03-14"},{"lineNumber":36,"author":{"gitId":"zxgoh"},"content":"     * Sets the {@code NameCustomer} of the {@code EditCustomerDescriptor} that we are building.","lastModifiedDate":"2022-03-30"},{"lineNumber":37,"author":{"gitId":"zxgoh"},"content":"     */","lastModifiedDate":"2022-03-14"},{"lineNumber":38,"author":{"gitId":"zxgoh"},"content":"    public EditCustomerDescriptorBuilder withName(String name) {","lastModifiedDate":"2022-03-14"},{"lineNumber":39,"author":{"gitId":"zxgoh"},"content":"        descriptor.setName(new NameCustomer(name));","lastModifiedDate":"2022-03-15"},{"lineNumber":40,"author":{"gitId":"zxgoh"},"content":"        return this;","lastModifiedDate":"2022-03-14"},{"lineNumber":41,"author":{"gitId":"zxgoh"},"content":"    }","lastModifiedDate":"2022-03-14"},{"lineNumber":42,"author":{"gitId":"zxgoh"},"content":"","lastModifiedDate":"2022-03-14"},{"lineNumber":43,"author":{"gitId":"zxgoh"},"content":"    /**","lastModifiedDate":"2022-03-14"},{"lineNumber":44,"author":{"gitId":"zxgoh"},"content":"     * Sets the {@code PhoneCustomer} of the {@code EditCustomerDescriptor} that we are building.","lastModifiedDate":"2022-03-30"},{"lineNumber":45,"author":{"gitId":"zxgoh"},"content":"     */","lastModifiedDate":"2022-03-14"},{"lineNumber":46,"author":{"gitId":"zxgoh"},"content":"    public EditCustomerDescriptorBuilder withPhone(String phone) {","lastModifiedDate":"2022-03-14"},{"lineNumber":47,"author":{"gitId":"zxgoh"},"content":"        descriptor.setPhone(new PhoneCustomer(phone));","lastModifiedDate":"2022-03-15"},{"lineNumber":48,"author":{"gitId":"zxgoh"},"content":"        return this;","lastModifiedDate":"2022-03-14"},{"lineNumber":49,"author":{"gitId":"zxgoh"},"content":"    }","lastModifiedDate":"2022-03-14"},{"lineNumber":50,"author":{"gitId":"zxgoh"},"content":"","lastModifiedDate":"2022-03-14"},{"lineNumber":51,"author":{"gitId":"zxgoh"},"content":"    /**","lastModifiedDate":"2022-03-14"},{"lineNumber":52,"author":{"gitId":"zxgoh"},"content":"     * Sets the {@code AddressCustomer} of the {@code EditCustomerDescriptor} that we are building.","lastModifiedDate":"2022-03-30"},{"lineNumber":53,"author":{"gitId":"zxgoh"},"content":"     */","lastModifiedDate":"2022-03-14"},{"lineNumber":54,"author":{"gitId":"zxgoh"},"content":"    public EditCustomerDescriptorBuilder withAddress(String address) {","lastModifiedDate":"2022-03-14"},{"lineNumber":55,"author":{"gitId":"zxgoh"},"content":"        descriptor.setAddress(new AddressCustomer(address));","lastModifiedDate":"2022-03-15"},{"lineNumber":56,"author":{"gitId":"zxgoh"},"content":"        return this;","lastModifiedDate":"2022-03-14"},{"lineNumber":57,"author":{"gitId":"zxgoh"},"content":"    }","lastModifiedDate":"2022-03-14"},{"lineNumber":58,"author":{"gitId":"zxgoh"},"content":"","lastModifiedDate":"2022-03-14"},{"lineNumber":59,"author":{"gitId":"zxgoh"},"content":"    public EditCustomerCommand.EditCustomerDescriptor build() {","lastModifiedDate":"2022-03-30"},{"lineNumber":60,"author":{"gitId":"zxgoh"},"content":"        return descriptor;","lastModifiedDate":"2022-03-14"},{"lineNumber":61,"author":{"gitId":"zxgoh"},"content":"    }","lastModifiedDate":"2022-03-14"},{"lineNumber":62,"author":{"gitId":"zxgoh"},"content":"}","lastModifiedDate":"2022-03-14"}],"authorContributionMap":{"zxgoh":62}},{"path":"src/test/java/seedu/address/testutil/PersonBuilder.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.testutil;","lastModifiedDate":"2016-09-03"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-03"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.util.HashSet;","lastModifiedDate":"2017-12-20"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import java.util.Set;","lastModifiedDate":"2017-04-05"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-04-05"},{"lineNumber":6,"author":{"gitId":"jaegarpoon"},"content":"import seedu.address.model.item.Address;","lastModifiedDate":"2022-03-11"},{"lineNumber":7,"author":{"gitId":"jaegarpoon"},"content":"import seedu.address.model.item.Email;","lastModifiedDate":"2022-03-11"},{"lineNumber":8,"author":{"gitId":"jaegarpoon"},"content":"import seedu.address.model.item.Name;","lastModifiedDate":"2022-03-11"},{"lineNumber":9,"author":{"gitId":"jaegarpoon"},"content":"import seedu.address.model.item.Person;","lastModifiedDate":"2022-03-11"},{"lineNumber":10,"author":{"gitId":"jaegarpoon"},"content":"import seedu.address.model.item.Phone;","lastModifiedDate":"2022-03-11"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import seedu.address.model.tag.Tag;","lastModifiedDate":"2017-04-05"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import seedu.address.model.util.SampleDataUtil;","lastModifiedDate":"2017-04-05"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-03"},{"lineNumber":14,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-09-03"},{"lineNumber":15,"author":{"gitId":"-"},"content":" * A utility class to help with building Person objects.","lastModifiedDate":"2017-04-05"},{"lineNumber":16,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-09-03"},{"lineNumber":17,"author":{"gitId":"-"},"content":"public class PersonBuilder {","lastModifiedDate":"2016-09-03"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-03"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    public static final String DEFAULT_NAME \u003d \"Amy Bee\";","lastModifiedDate":"2020-12-18"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    public static final String DEFAULT_PHONE \u003d \"85355255\";","lastModifiedDate":"2017-04-05"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    public static final String DEFAULT_EMAIL \u003d \"amy@gmail.com\";","lastModifiedDate":"2020-12-18"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    public static final String DEFAULT_ADDRESS \u003d \"123, Jurong West Ave 6, #08-111\";","lastModifiedDate":"2017-04-05"},{"lineNumber":23,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-04-05"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    private Name name;","lastModifiedDate":"2017-12-20"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    private Phone phone;","lastModifiedDate":"2017-12-20"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    private Email email;","lastModifiedDate":"2017-12-20"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    private Address address;","lastModifiedDate":"2017-12-20"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    private Set\u003cTag\u003e tags;","lastModifiedDate":"2017-12-20"},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-03"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2020-05-27"},{"lineNumber":31,"author":{"gitId":"-"},"content":"     * Creates a {@code PersonBuilder} with the default details.","lastModifiedDate":"2020-05-27"},{"lineNumber":32,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2020-05-27"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    public PersonBuilder() {","lastModifiedDate":"2017-08-15"},{"lineNumber":34,"author":{"gitId":"-"},"content":"        name \u003d new Name(DEFAULT_NAME);","lastModifiedDate":"2017-12-20"},{"lineNumber":35,"author":{"gitId":"-"},"content":"        phone \u003d new Phone(DEFAULT_PHONE);","lastModifiedDate":"2017-12-20"},{"lineNumber":36,"author":{"gitId":"-"},"content":"        email \u003d new Email(DEFAULT_EMAIL);","lastModifiedDate":"2017-12-20"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        address \u003d new Address(DEFAULT_ADDRESS);","lastModifiedDate":"2017-12-20"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        tags \u003d new HashSet\u003c\u003e();","lastModifiedDate":"2018-03-26"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-03"},{"lineNumber":40,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-03"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-12-11"},{"lineNumber":42,"author":{"gitId":"-"},"content":"     * Initializes the PersonBuilder with the data of {@code personToCopy}.","lastModifiedDate":"2016-12-11"},{"lineNumber":43,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-12-11"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    public PersonBuilder(Person personToCopy) {","lastModifiedDate":"2018-01-10"},{"lineNumber":45,"author":{"gitId":"-"},"content":"        name \u003d personToCopy.getName();","lastModifiedDate":"2017-12-20"},{"lineNumber":46,"author":{"gitId":"-"},"content":"        phone \u003d personToCopy.getPhone();","lastModifiedDate":"2017-12-20"},{"lineNumber":47,"author":{"gitId":"-"},"content":"        email \u003d personToCopy.getEmail();","lastModifiedDate":"2017-12-20"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        address \u003d personToCopy.getAddress();","lastModifiedDate":"2017-12-20"},{"lineNumber":49,"author":{"gitId":"-"},"content":"        tags \u003d new HashSet\u003c\u003e(personToCopy.getTags());","lastModifiedDate":"2017-12-20"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-11"},{"lineNumber":51,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-11"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-07-26"},{"lineNumber":53,"author":{"gitId":"-"},"content":"     * Sets the {@code Name} of the {@code Person} that we are building.","lastModifiedDate":"2017-07-26"},{"lineNumber":54,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-07-26"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    public PersonBuilder withName(String name) {","lastModifiedDate":"2017-08-15"},{"lineNumber":56,"author":{"gitId":"-"},"content":"        this.name \u003d new Name(name);","lastModifiedDate":"2017-12-20"},{"lineNumber":57,"author":{"gitId":"-"},"content":"        return this;","lastModifiedDate":"2016-09-03"},{"lineNumber":58,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-03"},{"lineNumber":59,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-03"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-07-26"},{"lineNumber":61,"author":{"gitId":"-"},"content":"     * Parses the {@code tags} into a {@code Set\u003cTag\u003e} and set it to the {@code Person} that we are building.","lastModifiedDate":"2017-07-26"},{"lineNumber":62,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-07-26"},{"lineNumber":63,"author":{"gitId":"-"},"content":"    public PersonBuilder withTags(String ... tags) {","lastModifiedDate":"2017-08-15"},{"lineNumber":64,"author":{"gitId":"-"},"content":"        this.tags \u003d SampleDataUtil.getTagSet(tags);","lastModifiedDate":"2017-12-20"},{"lineNumber":65,"author":{"gitId":"-"},"content":"        return this;","lastModifiedDate":"2016-09-03"},{"lineNumber":66,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-03"},{"lineNumber":67,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-03"},{"lineNumber":68,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-07-26"},{"lineNumber":69,"author":{"gitId":"-"},"content":"     * Sets the {@code Address} of the {@code Person} that we are building.","lastModifiedDate":"2017-07-26"},{"lineNumber":70,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-07-26"},{"lineNumber":71,"author":{"gitId":"-"},"content":"    public PersonBuilder withAddress(String address) {","lastModifiedDate":"2017-08-15"},{"lineNumber":72,"author":{"gitId":"-"},"content":"        this.address \u003d new Address(address);","lastModifiedDate":"2017-12-20"},{"lineNumber":73,"author":{"gitId":"-"},"content":"        return this;","lastModifiedDate":"2016-09-03"},{"lineNumber":74,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-03"},{"lineNumber":75,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-03"},{"lineNumber":76,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-07-26"},{"lineNumber":77,"author":{"gitId":"-"},"content":"     * Sets the {@code Phone} of the {@code Person} that we are building.","lastModifiedDate":"2017-07-26"},{"lineNumber":78,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-07-26"},{"lineNumber":79,"author":{"gitId":"-"},"content":"    public PersonBuilder withPhone(String phone) {","lastModifiedDate":"2017-08-15"},{"lineNumber":80,"author":{"gitId":"-"},"content":"        this.phone \u003d new Phone(phone);","lastModifiedDate":"2017-12-20"},{"lineNumber":81,"author":{"gitId":"-"},"content":"        return this;","lastModifiedDate":"2016-09-03"},{"lineNumber":82,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-03"},{"lineNumber":83,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-03"},{"lineNumber":84,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-07-26"},{"lineNumber":85,"author":{"gitId":"-"},"content":"     * Sets the {@code Email} of the {@code Person} that we are building.","lastModifiedDate":"2017-07-26"},{"lineNumber":86,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-07-26"},{"lineNumber":87,"author":{"gitId":"-"},"content":"    public PersonBuilder withEmail(String email) {","lastModifiedDate":"2017-08-15"},{"lineNumber":88,"author":{"gitId":"-"},"content":"        this.email \u003d new Email(email);","lastModifiedDate":"2017-12-20"},{"lineNumber":89,"author":{"gitId":"-"},"content":"        return this;","lastModifiedDate":"2016-09-03"},{"lineNumber":90,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-03"},{"lineNumber":91,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-03"},{"lineNumber":92,"author":{"gitId":"-"},"content":"    public Person build() {","lastModifiedDate":"2017-04-05"},{"lineNumber":93,"author":{"gitId":"-"},"content":"        return new Person(name, phone, email, address, tags);","lastModifiedDate":"2017-12-20"},{"lineNumber":94,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-03"},{"lineNumber":95,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-03"},{"lineNumber":96,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-09-03"}],"authorContributionMap":{"jaegarpoon":5,"-":91}},{"path":"src/test/java/seedu/address/testutil/TestUtil.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.testutil;","lastModifiedDate":"2016-08-08"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.io.IOException;","lastModifiedDate":"2017-01-19"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import java.nio.file.Files;","lastModifiedDate":"2018-04-21"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-04-21"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.nio.file.Paths;","lastModifiedDate":"2018-04-21"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.index.Index;","lastModifiedDate":"2017-07-30"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2017-07-30"},{"lineNumber":10,"author":{"gitId":"zxgoh"},"content":"import seedu.address.model.customer.Customer;","lastModifiedDate":"2022-03-14"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":12,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-08"},{"lineNumber":13,"author":{"gitId":"-"},"content":" * A utility class for test cases.","lastModifiedDate":"2016-08-08"},{"lineNumber":14,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-08"},{"lineNumber":15,"author":{"gitId":"-"},"content":"public class TestUtil {","lastModifiedDate":"2016-08-08"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-10-16"},{"lineNumber":18,"author":{"gitId":"-"},"content":"     * Folder used for temp files created during testing. Ignored by Git.","lastModifiedDate":"2016-10-16"},{"lineNumber":19,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-10-16"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    private static final Path SANDBOX_FOLDER \u003d Paths.get(\"src\", \"test\", \"data\", \"sandbox\");","lastModifiedDate":"2018-04-21"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-08"},{"lineNumber":23,"author":{"gitId":"-"},"content":"     * Appends {@code fileName} to the sandbox folder path and returns the resulting path.","lastModifiedDate":"2018-04-21"},{"lineNumber":24,"author":{"gitId":"-"},"content":"     * Creates the sandbox folder if it doesn\u0027t exist.","lastModifiedDate":"2016-09-28"},{"lineNumber":25,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-08"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    public static Path getFilePathInSandboxFolder(String fileName) {","lastModifiedDate":"2018-04-21"},{"lineNumber":27,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2016-09-28"},{"lineNumber":28,"author":{"gitId":"-"},"content":"            Files.createDirectories(SANDBOX_FOLDER);","lastModifiedDate":"2018-04-21"},{"lineNumber":29,"author":{"gitId":"-"},"content":"        } catch (IOException e) {","lastModifiedDate":"2016-09-28"},{"lineNumber":30,"author":{"gitId":"-"},"content":"            throw new RuntimeException(e);","lastModifiedDate":"2016-09-28"},{"lineNumber":31,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-09-28"},{"lineNumber":32,"author":{"gitId":"-"},"content":"        return SANDBOX_FOLDER.resolve(fileName);","lastModifiedDate":"2018-04-21"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-07-30"},{"lineNumber":36,"author":{"gitId":"zxgoh"},"content":"     * Returns the middle index of the customer in the {@code model}\u0027s customer list.","lastModifiedDate":"2022-03-14"},{"lineNumber":37,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-07-30"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    public static Index getMidIndex(Model model) {","lastModifiedDate":"2017-07-30"},{"lineNumber":39,"author":{"gitId":"zxgoh"},"content":"        return Index.fromOneBased(model.getFilteredCustomerList().size() / 2);","lastModifiedDate":"2022-03-14"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-07-30"},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-30"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-07-30"},{"lineNumber":43,"author":{"gitId":"zxgoh"},"content":"     * Returns the last index of the customer in the {@code model}\u0027s customer list.","lastModifiedDate":"2022-03-14"},{"lineNumber":44,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-07-30"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    public static Index getLastIndex(Model model) {","lastModifiedDate":"2017-07-30"},{"lineNumber":46,"author":{"gitId":"zxgoh"},"content":"        return Index.fromOneBased(model.getFilteredCustomerList().size());","lastModifiedDate":"2022-03-14"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-07-30"},{"lineNumber":48,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-30"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-07-30"},{"lineNumber":50,"author":{"gitId":"zxgoh"},"content":"     * Returns the customer in the {@code model}\u0027s customer list at {@code index}.","lastModifiedDate":"2022-03-14"},{"lineNumber":51,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-07-30"},{"lineNumber":52,"author":{"gitId":"zxgoh"},"content":"    public static Customer getCustomer(Model model, Index index) {","lastModifiedDate":"2022-03-14"},{"lineNumber":53,"author":{"gitId":"zxgoh"},"content":"        return model.getFilteredCustomerList().get(index.getZeroBased());","lastModifiedDate":"2022-03-14"},{"lineNumber":54,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-07-30"},{"lineNumber":55,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"}],"authorContributionMap":{"-":47,"zxgoh":8}},{"path":"src/test/java/seedu/address/testutil/TypicalCustomers.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"zxgoh"},"content":"package seedu.address.testutil;","lastModifiedDate":"2022-03-14"},{"lineNumber":2,"author":{"gitId":"zxgoh"},"content":"","lastModifiedDate":"2022-03-14"},{"lineNumber":3,"author":{"gitId":"zxgoh"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_ADDRESS_AMY;","lastModifiedDate":"2022-03-14"},{"lineNumber":4,"author":{"gitId":"zxgoh"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_ADDRESS_BOB;","lastModifiedDate":"2022-03-14"},{"lineNumber":5,"author":{"gitId":"zxgoh"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_NAME_AMY;","lastModifiedDate":"2022-03-14"},{"lineNumber":6,"author":{"gitId":"zxgoh"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_NAME_BOB;","lastModifiedDate":"2022-03-14"},{"lineNumber":7,"author":{"gitId":"zxgoh"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_PHONE_AMY;","lastModifiedDate":"2022-03-14"},{"lineNumber":8,"author":{"gitId":"zxgoh"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_PHONE_BOB;","lastModifiedDate":"2022-03-14"},{"lineNumber":9,"author":{"gitId":"zxgoh"},"content":"","lastModifiedDate":"2022-03-14"},{"lineNumber":10,"author":{"gitId":"zxgoh"},"content":"import java.util.ArrayList;","lastModifiedDate":"2022-03-14"},{"lineNumber":11,"author":{"gitId":"zxgoh"},"content":"import java.util.Arrays;","lastModifiedDate":"2022-03-14"},{"lineNumber":12,"author":{"gitId":"zxgoh"},"content":"import java.util.List;","lastModifiedDate":"2022-03-14"},{"lineNumber":13,"author":{"gitId":"zxgoh"},"content":"","lastModifiedDate":"2022-03-14"},{"lineNumber":14,"author":{"gitId":"zxgoh"},"content":"import seedu.address.model.AddressBook;","lastModifiedDate":"2022-03-14"},{"lineNumber":15,"author":{"gitId":"zxgoh"},"content":"import seedu.address.model.customer.Customer;","lastModifiedDate":"2022-03-14"},{"lineNumber":16,"author":{"gitId":"zxgoh"},"content":"","lastModifiedDate":"2022-03-14"},{"lineNumber":17,"author":{"gitId":"zxgoh"},"content":"/**","lastModifiedDate":"2022-03-14"},{"lineNumber":18,"author":{"gitId":"zxgoh"},"content":" * A utility class containing a list of {@code Customer} objects to be used in tests.","lastModifiedDate":"2022-03-14"},{"lineNumber":19,"author":{"gitId":"zxgoh"},"content":" */","lastModifiedDate":"2022-03-14"},{"lineNumber":20,"author":{"gitId":"zxgoh"},"content":"public class TypicalCustomers {","lastModifiedDate":"2022-03-14"},{"lineNumber":21,"author":{"gitId":"zxgoh"},"content":"","lastModifiedDate":"2022-03-14"},{"lineNumber":22,"author":{"gitId":"zxgoh"},"content":"    public static final Customer ALICE \u003d new CustomerBuilder().withName(\"Alice Pauline\")","lastModifiedDate":"2022-03-14"},{"lineNumber":23,"author":{"gitId":"zxgoh"},"content":"            .withAddress(\"123, Jurong West Ave 6, #08-111\")","lastModifiedDate":"2022-03-14"},{"lineNumber":24,"author":{"gitId":"zxgoh"},"content":"            .withPhone(\"94351253\")","lastModifiedDate":"2022-03-14"},{"lineNumber":25,"author":{"gitId":"zxgoh"},"content":"            .build();","lastModifiedDate":"2022-03-14"},{"lineNumber":26,"author":{"gitId":"zxgoh"},"content":"    public static final Customer BENSON \u003d new CustomerBuilder().withName(\"Benson Meier\")","lastModifiedDate":"2022-03-14"},{"lineNumber":27,"author":{"gitId":"zxgoh"},"content":"            .withAddress(\"311, Clementi Ave 2, #02-25\").withPhone(\"98765432\")","lastModifiedDate":"2022-03-14"},{"lineNumber":28,"author":{"gitId":"zxgoh"},"content":"            .build();","lastModifiedDate":"2022-03-14"},{"lineNumber":29,"author":{"gitId":"zxgoh"},"content":"    public static final Customer CARL \u003d new CustomerBuilder().withName(\"Carl Kurz\").withPhone(\"95352563\")","lastModifiedDate":"2022-03-14"},{"lineNumber":30,"author":{"gitId":"zxgoh"},"content":"            .withAddress(\"wall street\").build();","lastModifiedDate":"2022-03-14"},{"lineNumber":31,"author":{"gitId":"zxgoh"},"content":"    public static final Customer DANIEL \u003d new CustomerBuilder().withName(\"Daniel Meier\").withPhone(\"87652533\")","lastModifiedDate":"2022-03-14"},{"lineNumber":32,"author":{"gitId":"zxgoh"},"content":"            .withAddress(\"10th street\").build();","lastModifiedDate":"2022-03-14"},{"lineNumber":33,"author":{"gitId":"zxgoh"},"content":"    public static final Customer ELLE \u003d new CustomerBuilder().withName(\"Elle Meyer\").withPhone(\"94822245\")","lastModifiedDate":"2022-03-31"},{"lineNumber":34,"author":{"gitId":"zxgoh"},"content":"            .withAddress(\"michegan ave\").build();","lastModifiedDate":"2022-03-14"},{"lineNumber":35,"author":{"gitId":"zxgoh"},"content":"    public static final Customer FIONA \u003d new CustomerBuilder().withName(\"Fiona Kunz\").withPhone(\"94824275\")","lastModifiedDate":"2022-03-31"},{"lineNumber":36,"author":{"gitId":"zxgoh"},"content":"            .withAddress(\"little tokyo\").build();","lastModifiedDate":"2022-03-14"},{"lineNumber":37,"author":{"gitId":"zxgoh"},"content":"    public static final Customer GEORGE \u003d new CustomerBuilder().withName(\"George Best\").withPhone(\"94824452\")","lastModifiedDate":"2022-03-31"},{"lineNumber":38,"author":{"gitId":"zxgoh"},"content":"            .withAddress(\"4th street\").build();","lastModifiedDate":"2022-03-14"},{"lineNumber":39,"author":{"gitId":"zxgoh"},"content":"","lastModifiedDate":"2022-03-14"},{"lineNumber":40,"author":{"gitId":"zxgoh"},"content":"    // Manually added","lastModifiedDate":"2022-03-14"},{"lineNumber":41,"author":{"gitId":"zxgoh"},"content":"    public static final Customer HOON \u003d new CustomerBuilder().withName(\"Hoon Meier\").withPhone(\"84824244\")","lastModifiedDate":"2022-03-31"},{"lineNumber":42,"author":{"gitId":"zxgoh"},"content":"            .withAddress(\"little india\").build();","lastModifiedDate":"2022-03-14"},{"lineNumber":43,"author":{"gitId":"zxgoh"},"content":"    public static final Customer IDA \u003d new CustomerBuilder().withName(\"Ida Mueller\").withPhone(\"84821314\")","lastModifiedDate":"2022-03-31"},{"lineNumber":44,"author":{"gitId":"zxgoh"},"content":"            .withAddress(\"chicago ave\").build();","lastModifiedDate":"2022-03-14"},{"lineNumber":45,"author":{"gitId":"zxgoh"},"content":"","lastModifiedDate":"2022-03-14"},{"lineNumber":46,"author":{"gitId":"zxgoh"},"content":"    // Manually added - Customer\u0027s details found in {@code CommandTestUtil}","lastModifiedDate":"2022-03-14"},{"lineNumber":47,"author":{"gitId":"zxgoh"},"content":"    public static final Customer AMY \u003d new CustomerBuilder().withName(VALID_NAME_AMY).withPhone(VALID_PHONE_AMY)","lastModifiedDate":"2022-03-14"},{"lineNumber":48,"author":{"gitId":"zxgoh"},"content":"            .withAddress(VALID_ADDRESS_AMY).build();","lastModifiedDate":"2022-03-14"},{"lineNumber":49,"author":{"gitId":"zxgoh"},"content":"    public static final Customer BOB \u003d new CustomerBuilder().withName(VALID_NAME_BOB).withPhone(VALID_PHONE_BOB)","lastModifiedDate":"2022-03-14"},{"lineNumber":50,"author":{"gitId":"zxgoh"},"content":"            .withAddress(VALID_ADDRESS_BOB)","lastModifiedDate":"2022-03-14"},{"lineNumber":51,"author":{"gitId":"zxgoh"},"content":"            .build();","lastModifiedDate":"2022-03-14"},{"lineNumber":52,"author":{"gitId":"zxgoh"},"content":"","lastModifiedDate":"2022-03-14"},{"lineNumber":53,"author":{"gitId":"zxgoh"},"content":"    public static final String KEYWORD_MATCHING_MEIER \u003d \"Meier\"; // A keyword that matches MEIER","lastModifiedDate":"2022-03-14"},{"lineNumber":54,"author":{"gitId":"zxgoh"},"content":"","lastModifiedDate":"2022-03-14"},{"lineNumber":55,"author":{"gitId":"zxgoh"},"content":"    private TypicalCustomers() {} // prevents instantiation","lastModifiedDate":"2022-03-14"},{"lineNumber":56,"author":{"gitId":"zxgoh"},"content":"","lastModifiedDate":"2022-03-14"},{"lineNumber":57,"author":{"gitId":"zxgoh"},"content":"    /**","lastModifiedDate":"2022-03-14"},{"lineNumber":58,"author":{"gitId":"zxgoh"},"content":"     * Returns an {@code AddressBook} with all the typical customers.","lastModifiedDate":"2022-03-14"},{"lineNumber":59,"author":{"gitId":"zxgoh"},"content":"     */","lastModifiedDate":"2022-03-14"},{"lineNumber":60,"author":{"gitId":"zxgoh"},"content":"    public static AddressBook getTypicalAddressBook() {","lastModifiedDate":"2022-03-14"},{"lineNumber":61,"author":{"gitId":"zxgoh"},"content":"        AddressBook ab \u003d new AddressBook();","lastModifiedDate":"2022-03-14"},{"lineNumber":62,"author":{"gitId":"zxgoh"},"content":"        for (Customer customer : getTypicalCustomers()) {","lastModifiedDate":"2022-03-14"},{"lineNumber":63,"author":{"gitId":"zxgoh"},"content":"            ab.addCustomer(customer);","lastModifiedDate":"2022-03-14"},{"lineNumber":64,"author":{"gitId":"zxgoh"},"content":"        }","lastModifiedDate":"2022-03-14"},{"lineNumber":65,"author":{"gitId":"zxgoh"},"content":"        return ab;","lastModifiedDate":"2022-03-14"},{"lineNumber":66,"author":{"gitId":"zxgoh"},"content":"    }","lastModifiedDate":"2022-03-14"},{"lineNumber":67,"author":{"gitId":"zxgoh"},"content":"","lastModifiedDate":"2022-03-14"},{"lineNumber":68,"author":{"gitId":"zxgoh"},"content":"    public static List\u003cCustomer\u003e getTypicalCustomers() {","lastModifiedDate":"2022-03-14"},{"lineNumber":69,"author":{"gitId":"zxgoh"},"content":"        return new ArrayList\u003c\u003e(Arrays.asList(ALICE, BENSON, CARL, DANIEL, ELLE, FIONA, GEORGE));","lastModifiedDate":"2022-03-14"},{"lineNumber":70,"author":{"gitId":"zxgoh"},"content":"    }","lastModifiedDate":"2022-03-14"},{"lineNumber":71,"author":{"gitId":"zxgoh"},"content":"}","lastModifiedDate":"2022-03-14"}],"authorContributionMap":{"zxgoh":71}},{"path":"src/test/java/seedu/address/testutil/TypicalIndexes.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.testutil;","lastModifiedDate":"2017-08-05"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-08-05"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.index.Index;","lastModifiedDate":"2017-08-05"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-08-05"},{"lineNumber":5,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-08-05"},{"lineNumber":6,"author":{"gitId":"-"},"content":" * A utility class containing a list of {@code Index} objects to be used in tests.","lastModifiedDate":"2017-08-05"},{"lineNumber":7,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-08-05"},{"lineNumber":8,"author":{"gitId":"-"},"content":"public class TypicalIndexes {","lastModifiedDate":"2017-08-05"},{"lineNumber":9,"author":{"gitId":"zxgoh"},"content":"    public static final Index INDEX_FIRST_CUSTOMER \u003d Index.fromOneBased(1);","lastModifiedDate":"2022-03-14"},{"lineNumber":10,"author":{"gitId":"zxgoh"},"content":"    public static final Index INDEX_SECOND_CUSTOMER \u003d Index.fromOneBased(2);","lastModifiedDate":"2022-03-14"},{"lineNumber":11,"author":{"gitId":"zxgoh"},"content":"    public static final Index INDEX_THIRD_CUSTOMER \u003d Index.fromOneBased(3);","lastModifiedDate":"2022-03-14"},{"lineNumber":12,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-08-05"}],"authorContributionMap":{"-":9,"zxgoh":3}},{"path":"src/test/java/seedu/address/testutil/TypicalPersons.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.testutil;","lastModifiedDate":"2016-09-13"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-13"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_ADDRESS_AMY;","lastModifiedDate":"2017-08-22"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_ADDRESS_BOB;","lastModifiedDate":"2017-08-22"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_EMAIL_AMY;","lastModifiedDate":"2017-08-22"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_EMAIL_BOB;","lastModifiedDate":"2017-08-22"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_NAME_AMY;","lastModifiedDate":"2017-08-22"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_NAME_BOB;","lastModifiedDate":"2017-08-22"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_PHONE_AMY;","lastModifiedDate":"2017-08-22"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_PHONE_BOB;","lastModifiedDate":"2017-08-22"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_TAG_FRIEND;","lastModifiedDate":"2017-08-22"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_TAG_HUSBAND;","lastModifiedDate":"2017-08-22"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-08-22"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import java.util.ArrayList;","lastModifiedDate":"2017-08-07"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import java.util.Arrays;","lastModifiedDate":"2017-08-07"},{"lineNumber":16,"author":{"gitId":"-"},"content":"import java.util.List;","lastModifiedDate":"2017-08-07"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-08-07"},{"lineNumber":18,"author":{"gitId":"-"},"content":"import seedu.address.model.AddressBook;","lastModifiedDate":"2016-09-21"},{"lineNumber":19,"author":{"gitId":"jaegarpoon"},"content":"import seedu.address.model.item.Person;","lastModifiedDate":"2022-03-11"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-13"},{"lineNumber":21,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-09-13"},{"lineNumber":22,"author":{"gitId":"-"},"content":" * A utility class containing a list of {@code Person} objects to be used in tests.","lastModifiedDate":"2017-08-05"},{"lineNumber":23,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-09-13"},{"lineNumber":24,"author":{"gitId":"-"},"content":"public class TypicalPersons {","lastModifiedDate":"2017-04-05"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-13"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    public static final Person ALICE \u003d new PersonBuilder().withName(\"Alice Pauline\")","lastModifiedDate":"2018-01-10"},{"lineNumber":27,"author":{"gitId":"-"},"content":"            .withAddress(\"123, Jurong West Ave 6, #08-111\").withEmail(\"alice@example.com\")","lastModifiedDate":"2017-04-05"},{"lineNumber":28,"author":{"gitId":"-"},"content":"            .withPhone(\"94351253\")","lastModifiedDate":"2018-04-19"},{"lineNumber":29,"author":{"gitId":"-"},"content":"            .withTags(\"friends\").build();","lastModifiedDate":"2016-09-13"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    public static final Person BENSON \u003d new PersonBuilder().withName(\"Benson Meier\")","lastModifiedDate":"2018-01-10"},{"lineNumber":31,"author":{"gitId":"-"},"content":"            .withAddress(\"311, Clementi Ave 2, #02-25\")","lastModifiedDate":"2017-09-21"},{"lineNumber":32,"author":{"gitId":"-"},"content":"            .withEmail(\"johnd@example.com\").withPhone(\"98765432\")","lastModifiedDate":"2017-04-05"},{"lineNumber":33,"author":{"gitId":"-"},"content":"            .withTags(\"owesMoney\", \"friends\").build();","lastModifiedDate":"2016-09-13"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    public static final Person CARL \u003d new PersonBuilder().withName(\"Carl Kurz\").withPhone(\"95352563\")","lastModifiedDate":"2018-01-10"},{"lineNumber":35,"author":{"gitId":"-"},"content":"            .withEmail(\"heinz@example.com\").withAddress(\"wall street\").build();","lastModifiedDate":"2017-04-05"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    public static final Person DANIEL \u003d new PersonBuilder().withName(\"Daniel Meier\").withPhone(\"87652533\")","lastModifiedDate":"2018-01-10"},{"lineNumber":37,"author":{"gitId":"-"},"content":"            .withEmail(\"cornelia@example.com\").withAddress(\"10th street\").withTags(\"friends\").build();","lastModifiedDate":"2018-03-26"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    public static final Person ELLE \u003d new PersonBuilder().withName(\"Elle Meyer\").withPhone(\"9482224\")","lastModifiedDate":"2018-01-10"},{"lineNumber":39,"author":{"gitId":"-"},"content":"            .withEmail(\"werner@example.com\").withAddress(\"michegan ave\").build();","lastModifiedDate":"2017-04-05"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    public static final Person FIONA \u003d new PersonBuilder().withName(\"Fiona Kunz\").withPhone(\"9482427\")","lastModifiedDate":"2018-01-10"},{"lineNumber":41,"author":{"gitId":"-"},"content":"            .withEmail(\"lydia@example.com\").withAddress(\"little tokyo\").build();","lastModifiedDate":"2017-04-05"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    public static final Person GEORGE \u003d new PersonBuilder().withName(\"George Best\").withPhone(\"9482442\")","lastModifiedDate":"2018-01-10"},{"lineNumber":43,"author":{"gitId":"-"},"content":"            .withEmail(\"anna@example.com\").withAddress(\"4th street\").build();","lastModifiedDate":"2017-04-05"},{"lineNumber":44,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-13"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    // Manually added","lastModifiedDate":"2016-09-13"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    public static final Person HOON \u003d new PersonBuilder().withName(\"Hoon Meier\").withPhone(\"8482424\")","lastModifiedDate":"2018-01-10"},{"lineNumber":47,"author":{"gitId":"-"},"content":"            .withEmail(\"stefan@example.com\").withAddress(\"little india\").build();","lastModifiedDate":"2017-04-05"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    public static final Person IDA \u003d new PersonBuilder().withName(\"Ida Mueller\").withPhone(\"8482131\")","lastModifiedDate":"2018-01-10"},{"lineNumber":49,"author":{"gitId":"-"},"content":"            .withEmail(\"hans@example.com\").withAddress(\"chicago ave\").build();","lastModifiedDate":"2017-04-05"},{"lineNumber":50,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-08-22"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    // Manually added - Person\u0027s details found in {@code CommandTestUtil}","lastModifiedDate":"2017-08-22"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    public static final Person AMY \u003d new PersonBuilder().withName(VALID_NAME_AMY).withPhone(VALID_PHONE_AMY)","lastModifiedDate":"2018-01-10"},{"lineNumber":53,"author":{"gitId":"-"},"content":"            .withEmail(VALID_EMAIL_AMY).withAddress(VALID_ADDRESS_AMY).withTags(VALID_TAG_FRIEND).build();","lastModifiedDate":"2017-09-21"},{"lineNumber":54,"author":{"gitId":"-"},"content":"    public static final Person BOB \u003d new PersonBuilder().withName(VALID_NAME_BOB).withPhone(VALID_PHONE_BOB)","lastModifiedDate":"2018-01-10"},{"lineNumber":55,"author":{"gitId":"-"},"content":"            .withEmail(VALID_EMAIL_BOB).withAddress(VALID_ADDRESS_BOB).withTags(VALID_TAG_HUSBAND, VALID_TAG_FRIEND)","lastModifiedDate":"2017-09-21"},{"lineNumber":56,"author":{"gitId":"-"},"content":"            .build();","lastModifiedDate":"2017-09-21"},{"lineNumber":57,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-09-21"},{"lineNumber":58,"author":{"gitId":"-"},"content":"    public static final String KEYWORD_MATCHING_MEIER \u003d \"Meier\"; // A keyword that matches MEIER","lastModifiedDate":"2017-09-21"},{"lineNumber":59,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-13"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    private TypicalPersons() {} // prevents instantiation","lastModifiedDate":"2017-07-20"},{"lineNumber":61,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-20"},{"lineNumber":62,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-07-26"},{"lineNumber":63,"author":{"gitId":"-"},"content":"     * Returns an {@code AddressBook} with all the typical persons.","lastModifiedDate":"2017-08-05"},{"lineNumber":64,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-07-26"},{"lineNumber":65,"author":{"gitId":"-"},"content":"    public static AddressBook getTypicalAddressBook() {","lastModifiedDate":"2017-08-05"},{"lineNumber":66,"author":{"gitId":"-"},"content":"        AddressBook ab \u003d new AddressBook();","lastModifiedDate":"2017-08-05"},{"lineNumber":67,"author":{"gitId":"-"},"content":"        for (Person person : getTypicalPersons()) {","lastModifiedDate":"2018-01-10"},{"lineNumber":68,"author":{"gitId":"-"},"content":"            ab.addPerson(person);","lastModifiedDate":"2017-08-05"},{"lineNumber":69,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-09-13"},{"lineNumber":70,"author":{"gitId":"-"},"content":"        return ab;","lastModifiedDate":"2016-09-24"},{"lineNumber":71,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":72,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-08-04"},{"lineNumber":73,"author":{"gitId":"-"},"content":"    public static List\u003cPerson\u003e getTypicalPersons() {","lastModifiedDate":"2018-01-10"},{"lineNumber":74,"author":{"gitId":"-"},"content":"        return new ArrayList\u003c\u003e(Arrays.asList(ALICE, BENSON, CARL, DANIEL, ELLE, FIONA, GEORGE));","lastModifiedDate":"2017-08-07"},{"lineNumber":75,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-08-04"},{"lineNumber":76,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-09-13"}],"authorContributionMap":{"jaegarpoon":1,"-":75}}]
