[{"path":"README.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"DannyDakota"},"content":"[![CI Status](https://github.com/se-edu/addressbook-level3/workflows/Java%20CI/badge.svg)](https://github.com/AY2122S2-CS2103T-T12-3/tp/actions)","lastModifiedDate":"2022-02-23"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":3,"author":{"gitId":"jiale-c"},"content":"![Ui](docs/images/Ui_ReadMe.png)","lastModifiedDate":"2022-03-31"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":5,"author":{"gitId":"DannyDakota"},"content":"# Tracey","lastModifiedDate":"2022-02-23"},{"lineNumber":6,"author":{"gitId":"DannyDakota"},"content":"","lastModifiedDate":"2022-02-23"},{"lineNumber":7,"author":{"gitId":"jiale-c"},"content":"---------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2022-03-31"},{"lineNumber":8,"author":{"gitId":"jiale-c"},"content":"","lastModifiedDate":"2022-03-31"},{"lineNumber":9,"author":{"gitId":"jiale-c"},"content":"A Covid tracking web app for NUS Residential Hall Admins to **manage the health** of students living on campus.","lastModifiedDate":"2022-03-31"},{"lineNumber":10,"author":{"gitId":"jiale-c"},"content":"","lastModifiedDate":"2022-03-31"},{"lineNumber":11,"author":{"gitId":"jiale-c"},"content":"## Introduction","lastModifiedDate":"2022-03-31"},{"lineNumber":12,"author":{"gitId":"jiale-c"},"content":"","lastModifiedDate":"2022-03-31"},{"lineNumber":13,"author":{"gitId":"jiale-c"},"content":"---------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2022-03-31"},{"lineNumber":14,"author":{"gitId":"jiale-c"},"content":"","lastModifiedDate":"2022-03-31"},{"lineNumber":15,"author":{"gitId":"jiale-c"},"content":"* Tracey can get your students\u0027 health statuses easily and have Covid-tracking done faster than any other forms of tracking system.","lastModifiedDate":"2022-03-31"},{"lineNumber":16,"author":{"gitId":"jiale-c"},"content":"* Quick import feature and fus-free updating of student list.","lastModifiedDate":"2022-03-31"},{"lineNumber":17,"author":{"gitId":"jiale-c"},"content":"* Filter out relevant Covid-related information with a single command.","lastModifiedDate":"2022-03-31"},{"lineNumber":18,"author":{"gitId":"jiale-c"},"content":"* Additional functionality to generate charts for a quick overview.","lastModifiedDate":"2022-03-31"},{"lineNumber":19,"author":{"gitId":"jiale-c"},"content":"* The way to facilitate management of Covid status tracking amongst the Halls of NUS population.","lastModifiedDate":"2022-03-31"},{"lineNumber":20,"author":{"gitId":"jiale-c"},"content":"","lastModifiedDate":"2022-03-31"},{"lineNumber":21,"author":{"gitId":"jiale-c"},"content":"## More Info","lastModifiedDate":"2022-03-31"},{"lineNumber":22,"author":{"gitId":"jiale-c"},"content":"","lastModifiedDate":"2022-03-31"},{"lineNumber":23,"author":{"gitId":"jiale-c"},"content":"---------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2022-03-31"},{"lineNumber":24,"author":{"gitId":"jiale-c"},"content":"","lastModifiedDate":"2022-03-31"},{"lineNumber":25,"author":{"gitId":"jiale-c"},"content":"* If you are interested in our application, refer to our **[website](https://ay2122s2-cs2103t-t12-3.github.io/tp/UserGuide.html#quick-start)** to find out more.","lastModifiedDate":"2022-03-31"},{"lineNumber":26,"author":{"gitId":"DannyDakota"},"content":"* This project was adopted from the existing AB3 se-education.org project. Refer to the AB3 product website **[here](https://se-education.org/addressbook-level3/)**.","lastModifiedDate":"2022-02-23"},{"lineNumber":27,"author":{"gitId":"jiale-c"},"content":"* Get to know the team behind **[Tracey](https://ay2122s2-cs2103t-t12-3.github.io/tp/AboutUs.html)**.","lastModifiedDate":"2022-03-31"}],"authorContributionMap":{"DannyDakota":4,"jiale-c":21,"-":2}},{"path":"build.gradle","fileType":"other","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"plugins {","lastModifiedDate":"2016-08-29"},{"lineNumber":2,"author":{"gitId":"-"},"content":"    id \u0027java\u0027","lastModifiedDate":"2017-12-05"},{"lineNumber":3,"author":{"gitId":"-"},"content":"    id \u0027checkstyle\u0027","lastModifiedDate":"2017-12-05"},{"lineNumber":4,"author":{"gitId":"-"},"content":"    id \u0027com.github.johnrengelman.shadow\u0027 version \u00274.0.4\u0027","lastModifiedDate":"2019-02-28"},{"lineNumber":5,"author":{"gitId":"-"},"content":"    id \u0027application\u0027","lastModifiedDate":"2016-12-08"},{"lineNumber":6,"author":{"gitId":"-"},"content":"    id \u0027jacoco\u0027","lastModifiedDate":"2020-08-07"},{"lineNumber":7,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-29"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-29"},{"lineNumber":9,"author":{"gitId":"-"},"content":"mainClassName \u003d \u0027seedu.address.Main\u0027","lastModifiedDate":"2019-02-08"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-08"},{"lineNumber":11,"author":{"gitId":"-"},"content":"sourceCompatibility \u003d JavaVersion.VERSION_11","lastModifiedDate":"2019-02-20"},{"lineNumber":12,"author":{"gitId":"-"},"content":"targetCompatibility \u003d JavaVersion.VERSION_11","lastModifiedDate":"2019-02-20"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":14,"author":{"gitId":"-"},"content":"repositories {","lastModifiedDate":"2016-08-08"},{"lineNumber":15,"author":{"gitId":"-"},"content":"    mavenCentral()","lastModifiedDate":"2016-08-08"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    maven { url \u0027https://oss.sonatype.org/content/repositories/snapshots/\u0027 }","lastModifiedDate":"2018-04-11"},{"lineNumber":17,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":19,"author":{"gitId":"-"},"content":"checkstyle {","lastModifiedDate":"2016-10-12"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    toolVersion \u003d \u00278.29\u0027","lastModifiedDate":"2020-05-27"},{"lineNumber":21,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-10-12"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-12"},{"lineNumber":23,"author":{"gitId":"cwq2326"},"content":"run {","lastModifiedDate":"2022-03-24"},{"lineNumber":24,"author":{"gitId":"cwq2326"},"content":"    enableAssertions \u003d true","lastModifiedDate":"2022-03-24"},{"lineNumber":25,"author":{"gitId":"cwq2326"},"content":"}","lastModifiedDate":"2022-03-24"},{"lineNumber":26,"author":{"gitId":"cwq2326"},"content":"","lastModifiedDate":"2022-03-24"},{"lineNumber":27,"author":{"gitId":"-"},"content":"test {","lastModifiedDate":"2018-03-23"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    useJUnitPlatform()","lastModifiedDate":"2018-03-23"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    finalizedBy jacocoTestReport","lastModifiedDate":"2020-08-07"},{"lineNumber":30,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-08-07"},{"lineNumber":31,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-08-07"},{"lineNumber":32,"author":{"gitId":"-"},"content":"task coverage(type: JacocoReport) {","lastModifiedDate":"2020-08-07"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    sourceDirectories.from files(sourceSets.main.allSource.srcDirs)","lastModifiedDate":"2020-08-07"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    classDirectories.from files(sourceSets.main.output)","lastModifiedDate":"2020-08-07"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    executionData.from files(jacocoTestReport.executionData)","lastModifiedDate":"2020-08-07"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    afterEvaluate {","lastModifiedDate":"2020-08-07"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        classDirectories.from files(classDirectories.files.collect {","lastModifiedDate":"2020-08-07"},{"lineNumber":38,"author":{"gitId":"-"},"content":"            fileTree(dir: it, exclude: [\u0027**/*.jar\u0027])","lastModifiedDate":"2020-08-07"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        })","lastModifiedDate":"2020-08-07"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2020-08-07"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    reports {","lastModifiedDate":"2020-08-07"},{"lineNumber":42,"author":{"gitId":"-"},"content":"        html.enabled \u003d true","lastModifiedDate":"2020-08-07"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        xml.enabled \u003d true","lastModifiedDate":"2020-08-07"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2020-08-07"},{"lineNumber":45,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2018-03-23"},{"lineNumber":46,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-03-23"},{"lineNumber":47,"author":{"gitId":"-"},"content":"dependencies {","lastModifiedDate":"2016-08-08"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    String jUnitVersion \u003d \u00275.4.0\u0027","lastModifiedDate":"2019-02-10"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    String javaFxVersion \u003d \u002711\u0027","lastModifiedDate":"2019-02-08"},{"lineNumber":50,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-02-08"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027win\u0027","lastModifiedDate":"2019-02-19"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027mac\u0027","lastModifiedDate":"2019-02-19"},{"lineNumber":53,"author":{"gitId":"-"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027linux\u0027","lastModifiedDate":"2019-02-19"},{"lineNumber":54,"author":{"gitId":"-"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027win\u0027","lastModifiedDate":"2019-02-19"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027mac\u0027","lastModifiedDate":"2019-02-19"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027linux\u0027","lastModifiedDate":"2019-02-19"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027win\u0027","lastModifiedDate":"2019-02-19"},{"lineNumber":58,"author":{"gitId":"-"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027mac\u0027","lastModifiedDate":"2019-02-19"},{"lineNumber":59,"author":{"gitId":"-"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027linux\u0027","lastModifiedDate":"2019-02-19"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027win\u0027","lastModifiedDate":"2019-02-19"},{"lineNumber":61,"author":{"gitId":"-"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027mac\u0027","lastModifiedDate":"2019-02-19"},{"lineNumber":62,"author":{"gitId":"-"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027linux\u0027","lastModifiedDate":"2019-02-19"},{"lineNumber":63,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-12-05"},{"lineNumber":64,"author":{"gitId":"-"},"content":"    implementation group: \u0027com.fasterxml.jackson.core\u0027, name: \u0027jackson-databind\u0027, version: \u00272.7.0\u0027","lastModifiedDate":"2018-03-29"},{"lineNumber":65,"author":{"gitId":"-"},"content":"    implementation group: \u0027com.fasterxml.jackson.datatype\u0027, name: \u0027jackson-datatype-jsr310\u0027, version: \u00272.7.4\u0027","lastModifiedDate":"2018-03-29"},{"lineNumber":66,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-12-05"},{"lineNumber":67,"author":{"gitId":"kevinkuo0320"},"content":"    //add library for excel","lastModifiedDate":"2022-03-31"},{"lineNumber":68,"author":{"gitId":"kevinkuo0320"},"content":"    implementation group: \u0027org.apache.poi\u0027, name: \u0027poi\u0027, version: \u00273.17\u0027","lastModifiedDate":"2022-03-31"},{"lineNumber":69,"author":{"gitId":"kevinkuo0320"},"content":"    implementation group: \u0027org.apache.poi\u0027, name: \u0027poi-ooxml\u0027, version: \u00273.17\u0027","lastModifiedDate":"2022-03-31"},{"lineNumber":70,"author":{"gitId":"kevinkuo0320"},"content":"    implementation group: \u0027com.google.code.gson\u0027, name: \u0027gson\u0027, version: \u00272.7\u0027","lastModifiedDate":"2022-03-31"},{"lineNumber":71,"author":{"gitId":"kevinkuo0320"},"content":"    implementation group: \u0027com.googlecode.json-simple\u0027, name: \u0027json-simple\u0027, version: \u00271.1.1\u0027","lastModifiedDate":"2022-03-31"},{"lineNumber":72,"author":{"gitId":"kevinkuo0320"},"content":"","lastModifiedDate":"2022-03-31"},{"lineNumber":73,"author":{"gitId":"kevinkuo0320"},"content":"","lastModifiedDate":"2022-03-31"},{"lineNumber":74,"author":{"gitId":"kevinkuo0320"},"content":"    implementation group: \u0027org.seleniumhq.selenium\u0027, name: \u0027selenium-json\u0027, version: \u00274.0.0-alpha-4\u0027","lastModifiedDate":"2022-03-31"},{"lineNumber":75,"author":{"gitId":"kevinkuo0320"},"content":"    implementation group: \u0027org.springframework\u0027, name: \u0027spring-web\u0027, version: \u00275.3.17\u0027","lastModifiedDate":"2022-03-31"},{"lineNumber":76,"author":{"gitId":"kevinkuo0320"},"content":"","lastModifiedDate":"2022-03-31"},{"lineNumber":77,"author":{"gitId":"kevinkuo0320"},"content":"","lastModifiedDate":"2022-03-31"},{"lineNumber":78,"author":{"gitId":"kevinkuo0320"},"content":"    testImplementation group: \u0027org.springframework\u0027, name: \u0027spring-mock\u0027, version: \u00272.0.8\u0027","lastModifiedDate":"2022-03-31"},{"lineNumber":79,"author":{"gitId":"kevinkuo0320"},"content":"","lastModifiedDate":"2022-03-31"},{"lineNumber":80,"author":{"gitId":"-"},"content":"    testImplementation group: \u0027org.junit.jupiter\u0027, name: \u0027junit-jupiter-api\u0027, version: jUnitVersion","lastModifiedDate":"2018-03-23"},{"lineNumber":81,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-03-23"},{"lineNumber":82,"author":{"gitId":"-"},"content":"    testRuntimeOnly group: \u0027org.junit.jupiter\u0027, name: \u0027junit-jupiter-engine\u0027, version: jUnitVersion","lastModifiedDate":"2018-03-23"},{"lineNumber":83,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":84,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-29"},{"lineNumber":85,"author":{"gitId":"-"},"content":"shadowJar {","lastModifiedDate":"2016-08-29"},{"lineNumber":86,"author":{"gitId":"DannyDakota"},"content":"    archiveName \u003d \u0027Tracey.jar\u0027","lastModifiedDate":"2022-03-30"},{"lineNumber":87,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-29"},{"lineNumber":88,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":89,"author":{"gitId":"-"},"content":"defaultTasks \u0027clean\u0027, \u0027test\u0027","lastModifiedDate":"2020-05-23"}],"authorContributionMap":{"DannyDakota":1,"kevinkuo0320":13,"cwq2326":4,"-":71}},{"path":"docs/AboutUs.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"---","lastModifiedDate":"2020-05-23"},{"lineNumber":2,"author":{"gitId":"-"},"content":"layout: page","lastModifiedDate":"2020-05-23"},{"lineNumber":3,"author":{"gitId":"-"},"content":"title: About Us","lastModifiedDate":"2020-05-23"},{"lineNumber":4,"author":{"gitId":"-"},"content":"---","lastModifiedDate":"2020-05-23"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":6,"author":{"gitId":"-"},"content":"We are a team based in the [School of Computing, National University of Singapore](http://www.comp.nus.edu.sg).","lastModifiedDate":"2020-05-23"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":8,"author":{"gitId":"-"},"content":"You can reach us at the email `seer[at]comp.nus.edu.sg`","lastModifiedDate":"2020-06-17"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-06-17"},{"lineNumber":10,"author":{"gitId":"-"},"content":"## Project team","lastModifiedDate":"2020-06-07"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":12,"author":{"gitId":"kevinkuo0320"},"content":"### Kuo Chun Yuan","lastModifiedDate":"2022-02-26"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":14,"author":{"gitId":"kevinkuo0320"},"content":"\u003cimg src\u003d\"images/kevinkuo0320.png\" width\u003d\"200px\"\u003e","lastModifiedDate":"2022-02-26"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":16,"author":{"gitId":"-"},"content":"[[homepage](http://www.comp.nus.edu.sg/~damithch)]","lastModifiedDate":"2020-05-23"},{"lineNumber":17,"author":{"gitId":"kevinkuo0320"},"content":"[[github](https://github.com/kevinkuo0320)]","lastModifiedDate":"2022-02-26"},{"lineNumber":18,"author":{"gitId":"kevinkuo0320"},"content":"[[portfolio](team/kevinkuo0320.md)]","lastModifiedDate":"2022-02-26"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":20,"author":{"gitId":"kevinkuo0320"},"content":"* Role: Developer","lastModifiedDate":"2022-02-26"},{"lineNumber":21,"author":{"gitId":"kevinkuo0320"},"content":"* Responsibilities: Storage","lastModifiedDate":"2022-02-26"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":23,"author":{"gitId":"DannyDakota"},"content":"### Chua Wen Quan","lastModifiedDate":"2022-02-23"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":25,"author":{"gitId":"cwq2326"},"content":"\u003cimg src\u003d\"images/cwq2326.png\" width\u003d\"200px\"\u003e","lastModifiedDate":"2022-02-25"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":27,"author":{"gitId":"cwq2326"},"content":"[[github](http://github.com/cwq2326)]","lastModifiedDate":"2022-02-24"},{"lineNumber":28,"author":{"gitId":"cwq2326"},"content":"[[portfolio](team/cwq2326.md)]","lastModifiedDate":"2022-03-03"},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":30,"author":{"gitId":"cwq2326"},"content":"* Role: Developer","lastModifiedDate":"2022-02-24"},{"lineNumber":31,"author":{"gitId":"cwq2326"},"content":"* Responsibilities: Features","lastModifiedDate":"2022-02-24"},{"lineNumber":32,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":33,"author":{"gitId":"DannyDakota"},"content":"### Malcom Tan","lastModifiedDate":"2022-02-23"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":35,"author":{"gitId":"DannyDakota"},"content":"\u003cimg src\u003d\"images/dannydakota.png\" width\u003d\"200px\"\u003e","lastModifiedDate":"2022-02-23"},{"lineNumber":36,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":37,"author":{"gitId":"DannyDakota"},"content":"[[github](http://github.com/DannyDakota)] [[portfolio](team/dannydakota.md)]","lastModifiedDate":"2022-02-23"},{"lineNumber":38,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":39,"author":{"gitId":"-"},"content":"* Role: Developer","lastModifiedDate":"2020-05-23"},{"lineNumber":40,"author":{"gitId":"-"},"content":"* Responsibilities: Data","lastModifiedDate":"2020-05-23"},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":42,"author":{"gitId":"DannyDakota"},"content":"### Tan Chin Kiat","lastModifiedDate":"2022-02-23"},{"lineNumber":43,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":44,"author":{"gitId":"tanchinkiat99"},"content":"\u003cimg src\u003d\"images/tanchinkiat99.png\" width\u003d\"200px\"\u003e","lastModifiedDate":"2022-02-23"},{"lineNumber":45,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":46,"author":{"gitId":"tanchinkiat99"},"content":"[[github](http://github.com/tanchinkiat99)]","lastModifiedDate":"2022-02-23"},{"lineNumber":47,"author":{"gitId":"tanchinkiat99"},"content":"[[portfolio](team/tanchinkiat99.md)]","lastModifiedDate":"2022-02-23"},{"lineNumber":48,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":49,"author":{"gitId":"-"},"content":"* Role: Developer","lastModifiedDate":"2020-05-23"},{"lineNumber":50,"author":{"gitId":"-"},"content":"* Responsibilities: Dev Ops + Threading","lastModifiedDate":"2020-05-23"},{"lineNumber":51,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":52,"author":{"gitId":"DannyDakota"},"content":"### Chee Jia Le","lastModifiedDate":"2022-02-23"},{"lineNumber":53,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":54,"author":{"gitId":"jiale-c"},"content":"\u003cimg src\u003d\"images/jiale-c.png\" width\u003d\"200px\"\u003e","lastModifiedDate":"2022-02-24"},{"lineNumber":55,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":56,"author":{"gitId":"jiale-c"},"content":"[[github](http://github.com/jiale-c)]","lastModifiedDate":"2022-02-24"},{"lineNumber":57,"author":{"gitId":"jiale-c"},"content":"[[portfolio](team/jiale-c.md)]","lastModifiedDate":"2022-02-24"},{"lineNumber":58,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":59,"author":{"gitId":"-"},"content":"* Role: Developer","lastModifiedDate":"2020-05-23"},{"lineNumber":60,"author":{"gitId":"jiale-c"},"content":"* Responsibilities: Features and testings","lastModifiedDate":"2022-02-24"}],"authorContributionMap":{"tanchinkiat99":3,"DannyDakota":6,"kevinkuo0320":6,"cwq2326":5,"jiale-c":4,"-":36}},{"path":"docs/DeveloperGuide.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"---","lastModifiedDate":"2020-05-23"},{"lineNumber":2,"author":{"gitId":"-"},"content":"layout: page","lastModifiedDate":"2020-05-23"},{"lineNumber":3,"author":{"gitId":"-"},"content":"title: Developer Guide","lastModifiedDate":"2020-05-23"},{"lineNumber":4,"author":{"gitId":"-"},"content":"---","lastModifiedDate":"2020-05-23"},{"lineNumber":5,"author":{"gitId":"-"},"content":"* Table of Contents","lastModifiedDate":"2020-05-23"},{"lineNumber":6,"author":{"gitId":"-"},"content":"  {:toc}","lastModifiedDate":"2020-05-23"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":8,"author":{"gitId":"-"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2020-05-23"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-30"},{"lineNumber":10,"author":{"gitId":"jiale-c"},"content":"## **Introduction**","lastModifiedDate":"2022-03-25"},{"lineNumber":11,"author":{"gitId":"jiale-c"},"content":"Tracey is a desktop app for University housing committee (Hall Masters) to manage their students and premises.","lastModifiedDate":"2022-03-25"},{"lineNumber":12,"author":{"gitId":"jiale-c"},"content":"Tracey is optimized for those that work well with Command Line Interface (CLI). She is equipped with Graphical User Interface (GUI) for an effective user experience.","lastModifiedDate":"2022-03-25"},{"lineNumber":13,"author":{"gitId":"jiale-c"},"content":"","lastModifiedDate":"2022-03-25"},{"lineNumber":14,"author":{"gitId":"jiale-c"},"content":"This is a Developer Guide written to help developers get a deeper understanding of how Tracey is implemented and the reasons this project is done a certain way.","lastModifiedDate":"2022-03-25"},{"lineNumber":15,"author":{"gitId":"jiale-c"},"content":"It explains the internal structure and how components in the architecture work together to allow users to command Tracey.","lastModifiedDate":"2022-03-25"},{"lineNumber":16,"author":{"gitId":"jiale-c"},"content":"Our team will like to welcome you by means of allowing you admire our work.","lastModifiedDate":"2022-03-25"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-03-25"},{"lineNumber":18,"author":{"gitId":"-"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2022-03-25"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-03-25"},{"lineNumber":20,"author":{"gitId":"-"},"content":"## **Acknowledgements**","lastModifiedDate":"2021-07-30"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-30"},{"lineNumber":22,"author":{"gitId":"-"},"content":"* {list here sources of all reused/adapted ideas, code, documentation, and third-party libraries -- include links to the original source as well}","lastModifiedDate":"2021-07-30"},{"lineNumber":23,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-30"},{"lineNumber":24,"author":{"gitId":"-"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2021-07-30"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":26,"author":{"gitId":"-"},"content":"## **Setting up, getting started**","lastModifiedDate":"2020-05-23"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":28,"author":{"gitId":"-"},"content":"Refer to the guide [_Setting up and getting started_](SettingUp.md).","lastModifiedDate":"2020-05-23"},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":30,"author":{"gitId":"-"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2020-05-23"},{"lineNumber":31,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":32,"author":{"gitId":"-"},"content":"## **Design**","lastModifiedDate":"2020-05-23"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":34,"author":{"gitId":"jiale-c"},"content":"Find out more on the structure and architecture of **Tracey** in this section.","lastModifiedDate":"2022-03-25"},{"lineNumber":35,"author":{"gitId":"jiale-c"},"content":"","lastModifiedDate":"2022-03-25"},{"lineNumber":36,"author":{"gitId":"-"},"content":"\u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-primary\"\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":37,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":38,"author":{"gitId":"-"},"content":":bulb: **Tip:** The `.puml` files used to create diagrams in this document can be found in the [diagrams](https://github.com/se-edu/addressbook-level3/tree/master/docs/diagrams/) folder. Refer to the [_PlantUML Tutorial_ at se-edu/guides](https://se-education.org/guides/tutorials/plantUml.html) to learn how to create and edit diagrams.","lastModifiedDate":"2021-07-31"},{"lineNumber":39,"author":{"gitId":"-"},"content":"\u003c/div\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":40,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":41,"author":{"gitId":"-"},"content":"### Architecture","lastModifiedDate":"2021-07-31"},{"lineNumber":42,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":43,"author":{"gitId":"-"},"content":"\u003cimg src\u003d\"images/ArchitectureDiagram.png\" width\u003d\"280\" /\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":44,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":45,"author":{"gitId":"-"},"content":"The ***Architecture Diagram*** given above explains the high-level design of the App.","lastModifiedDate":"2021-07-31"},{"lineNumber":46,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":47,"author":{"gitId":"-"},"content":"Given below is a quick overview of main components and how they interact with each other.","lastModifiedDate":"2021-07-31"},{"lineNumber":48,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":49,"author":{"gitId":"-"},"content":"**Main components of the architecture**","lastModifiedDate":"2021-07-31"},{"lineNumber":50,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":51,"author":{"gitId":"-"},"content":"**`Main`** has two classes called [`Main`](https://github.com/se-edu/addressbook-level3/tree/master/src/main/java/seedu/address/Main.java) and [`MainApp`](https://github.com/se-edu/addressbook-level3/tree/master/src/main/java/seedu/address/MainApp.java). It is responsible for,","lastModifiedDate":"2020-05-23"},{"lineNumber":52,"author":{"gitId":"-"},"content":"* At app launch: Initializes the components in the correct sequence, and connects them up with each other.","lastModifiedDate":"2020-05-23"},{"lineNumber":53,"author":{"gitId":"-"},"content":"* At shut down: Shuts down the components and invokes cleanup methods where necessary.","lastModifiedDate":"2020-05-23"},{"lineNumber":54,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":55,"author":{"gitId":"-"},"content":"[**`Commons`**](#common-classes) represents a collection of classes used by multiple other components.","lastModifiedDate":"2020-05-23"},{"lineNumber":56,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":57,"author":{"gitId":"-"},"content":"The rest of the App consists of four components.","lastModifiedDate":"2020-05-23"},{"lineNumber":58,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":59,"author":{"gitId":"-"},"content":"* [**`UI`**](#ui-component): The UI of the App.","lastModifiedDate":"2020-05-23"},{"lineNumber":60,"author":{"gitId":"-"},"content":"* [**`Logic`**](#logic-component): The command executor.","lastModifiedDate":"2020-05-23"},{"lineNumber":61,"author":{"gitId":"-"},"content":"* [**`Model`**](#model-component): Holds the data of the App in memory.","lastModifiedDate":"2020-05-23"},{"lineNumber":62,"author":{"gitId":"-"},"content":"* [**`Storage`**](#storage-component): Reads data from, and writes data to, the hard disk.","lastModifiedDate":"2020-05-23"},{"lineNumber":63,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":64,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":65,"author":{"gitId":"-"},"content":"**How the architecture components interact with each other**","lastModifiedDate":"2020-05-23"},{"lineNumber":66,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":67,"author":{"gitId":"-"},"content":"The *Sequence Diagram* below shows how the components interact with each other for the scenario where the user issues the command `delete 1`.","lastModifiedDate":"2020-05-23"},{"lineNumber":68,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":69,"author":{"gitId":"-"},"content":"\u003cimg src\u003d\"images/ArchitectureSequenceDiagram.png\" width\u003d\"574\" /\u003e","lastModifiedDate":"2020-06-07"},{"lineNumber":70,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":71,"author":{"gitId":"-"},"content":"Each of the four main components (also shown in the diagram above),","lastModifiedDate":"2021-07-31"},{"lineNumber":72,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":73,"author":{"gitId":"-"},"content":"* defines its *API* in an `interface` with the same name as the Component.","lastModifiedDate":"2021-07-31"},{"lineNumber":74,"author":{"gitId":"-"},"content":"* implements its functionality using a concrete `{Component Name}Manager` class (which follows the corresponding API `interface` mentioned in the previous point.","lastModifiedDate":"2021-07-31"},{"lineNumber":75,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":76,"author":{"gitId":"-"},"content":"For example, the `Logic` component defines its API in the `Logic.java` interface and implements its functionality using the `LogicManager.java` class which follows the `Logic` interface. Other components interact with a given component through its interface rather than the concrete class (reason: to prevent outside component\u0027s being coupled to the implementation of a component), as illustrated in the (partial) class diagram below.","lastModifiedDate":"2021-07-31"},{"lineNumber":77,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":78,"author":{"gitId":"-"},"content":"\u003cimg src\u003d\"images/ComponentManagers.png\" width\u003d\"300\" /\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":79,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":80,"author":{"gitId":"-"},"content":"The sections below give more details of each component.","lastModifiedDate":"2020-05-23"},{"lineNumber":81,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":82,"author":{"gitId":"-"},"content":"### UI component","lastModifiedDate":"2020-05-23"},{"lineNumber":83,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":84,"author":{"gitId":"jiale-c"},"content":"The structure of the UI component will be explained here.","lastModifiedDate":"2022-03-25"},{"lineNumber":85,"author":{"gitId":"jiale-c"},"content":"","lastModifiedDate":"2022-03-25"},{"lineNumber":86,"author":{"gitId":"-"},"content":"The **API** of this component is specified in [`Ui.java`](https://github.com/se-edu/addressbook-level3/tree/master/src/main/java/seedu/address/ui/Ui.java)","lastModifiedDate":"2021-07-31"},{"lineNumber":87,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":88,"author":{"gitId":"-"},"content":"![Structure of the UI Component](images/UiClassDiagram.png)","lastModifiedDate":"2021-07-31"},{"lineNumber":89,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":90,"author":{"gitId":"-"},"content":"The UI consists of a `MainWindow` that is made up of parts e.g.`CommandBox`, `ResultDisplay`, `PersonListPanel`, `StatusBarFooter` etc. All these, including the `MainWindow`, inherit from the abstract `UiPart` class which captures the commonalities between classes that represent parts of the visible GUI.","lastModifiedDate":"2021-07-31"},{"lineNumber":91,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":92,"author":{"gitId":"-"},"content":"The `UI` component uses the JavaFx UI framework. The layout of these UI parts are defined in matching `.fxml` files that are in the `src/main/resources/view` folder. For example, the layout of the [`MainWindow`](https://github.com/se-edu/addressbook-level3/tree/master/src/main/java/seedu/address/ui/MainWindow.java) is specified in [`MainWindow.fxml`](https://github.com/se-edu/addressbook-level3/tree/master/src/main/resources/view/MainWindow.fxml)","lastModifiedDate":"2021-07-31"},{"lineNumber":93,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":94,"author":{"gitId":"-"},"content":"The `UI` component,","lastModifiedDate":"2020-05-23"},{"lineNumber":95,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":96,"author":{"gitId":"-"},"content":"* executes user commands using the `Logic` component.","lastModifiedDate":"2021-07-31"},{"lineNumber":97,"author":{"gitId":"-"},"content":"* listens for changes to `Model` data so that the UI can be updated with the modified data.","lastModifiedDate":"2021-07-31"},{"lineNumber":98,"author":{"gitId":"-"},"content":"* keeps a reference to the `Logic` component, because the `UI` relies on the `Logic` to execute commands.","lastModifiedDate":"2021-07-31"},{"lineNumber":99,"author":{"gitId":"-"},"content":"* depends on some classes in the `Model` component, as it displays `Person` object residing in the `Model`.","lastModifiedDate":"2021-07-31"},{"lineNumber":100,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":101,"author":{"gitId":"-"},"content":"### Logic component","lastModifiedDate":"2020-05-23"},{"lineNumber":102,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":103,"author":{"gitId":"jiale-c"},"content":"The structure of the Logic component will be explained here.","lastModifiedDate":"2022-03-25"},{"lineNumber":104,"author":{"gitId":"jiale-c"},"content":"","lastModifiedDate":"2022-03-25"},{"lineNumber":105,"author":{"gitId":"-"},"content":"**API** : [`Logic.java`](https://github.com/se-edu/addressbook-level3/tree/master/src/main/java/seedu/address/logic/Logic.java)","lastModifiedDate":"2021-07-31"},{"lineNumber":106,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":107,"author":{"gitId":"-"},"content":"Here\u0027s a (partial) class diagram of the `Logic` component:","lastModifiedDate":"2021-07-31"},{"lineNumber":108,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":109,"author":{"gitId":"-"},"content":"\u003cimg src\u003d\"images/LogicClassDiagram.png\" width\u003d\"550\"/\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":110,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":111,"author":{"gitId":"-"},"content":"How the `Logic` component works:","lastModifiedDate":"2021-07-31"},{"lineNumber":112,"author":{"gitId":"-"},"content":"1. When `Logic` is called upon to execute a command, it uses the `AddressBookParser` class to parse the user command.","lastModifiedDate":"2021-07-31"},{"lineNumber":113,"author":{"gitId":"jiale-c"},"content":"2. This results in a `Command` object (more precisely, an object of one of its subclasses e.g., `AddCommand`) which is executed by the `LogicManager`.","lastModifiedDate":"2022-03-25"},{"lineNumber":114,"author":{"gitId":"jiale-c"},"content":"3. The command can communicate with the `Model` when it is executed (e.g. to add a person).","lastModifiedDate":"2022-03-25"},{"lineNumber":115,"author":{"gitId":"jiale-c"},"content":"4. The result of the command execution is encapsulated as a `CommandResult` object which is returned back from `Logic`.","lastModifiedDate":"2022-03-25"},{"lineNumber":116,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":117,"author":{"gitId":"-"},"content":"The Sequence Diagram below illustrates the interactions within the `Logic` component for the `execute(\"delete 1\")` API call.","lastModifiedDate":"2021-07-31"},{"lineNumber":118,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":119,"author":{"gitId":"-"},"content":"![Interactions Inside the Logic Component for the `delete 1` Command](images/DeleteSequenceDiagram.png)","lastModifiedDate":"2020-05-23"},{"lineNumber":120,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":121,"author":{"gitId":"-"},"content":"\u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-info\"\u003e:information_source: **Note:** The lifeline for `DeleteCommandParser` should end at the destroy marker (X) but due to a limitation of PlantUML, the lifeline reaches the end of diagram.","lastModifiedDate":"2020-05-23"},{"lineNumber":122,"author":{"gitId":"-"},"content":"\u003c/div\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":123,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":124,"author":{"gitId":"-"},"content":"Here are the other classes in `Logic` (omitted from the class diagram above) that are used for parsing a user command:","lastModifiedDate":"2021-07-31"},{"lineNumber":125,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":126,"author":{"gitId":"-"},"content":"\u003cimg src\u003d\"images/ParserClasses.png\" width\u003d\"600\"/\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":127,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":128,"author":{"gitId":"-"},"content":"How the parsing works:","lastModifiedDate":"2021-07-31"},{"lineNumber":129,"author":{"gitId":"-"},"content":"* When called upon to parse a user command, the `AddressBookParser` class creates an `XYZCommandParser` (`XYZ` is a placeholder for the specific command name e.g., `AddCommandParser`) which uses the other classes shown above to parse the user command and create a `XYZCommand` object (e.g., `AddCommand`) which the `AddressBookParser` returns back as a `Command` object.","lastModifiedDate":"2021-07-31"},{"lineNumber":130,"author":{"gitId":"-"},"content":"* All `XYZCommandParser` classes (e.g., `AddCommandParser`, `DeleteCommandParser`, ...) inherit from the `Parser` interface so that they can be treated similarly where possible e.g, during testing.","lastModifiedDate":"2021-07-31"},{"lineNumber":131,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":132,"author":{"gitId":"-"},"content":"### Model component","lastModifiedDate":"2021-07-31"},{"lineNumber":133,"author":{"gitId":"jiale-c"},"content":"","lastModifiedDate":"2022-03-25"},{"lineNumber":134,"author":{"gitId":"jiale-c"},"content":"The structure of the Model component will be explained here.","lastModifiedDate":"2022-03-25"},{"lineNumber":135,"author":{"gitId":"jiale-c"},"content":"","lastModifiedDate":"2022-03-25"},{"lineNumber":136,"author":{"gitId":"-"},"content":"**API** : [`Model.java`](https://github.com/se-edu/addressbook-level3/tree/master/src/main/java/seedu/address/model/Model.java)","lastModifiedDate":"2020-05-23"},{"lineNumber":137,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":138,"author":{"gitId":"jiale-c"},"content":"\u003cimg src\u003d\"images/ModelClassDiagramUpdated.png\" width\u003d\"450\" /\u003e","lastModifiedDate":"2022-03-16"},{"lineNumber":139,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":140,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":141,"author":{"gitId":"-"},"content":"The `Model` component,","lastModifiedDate":"2021-07-31"},{"lineNumber":142,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":143,"author":{"gitId":"-"},"content":"* stores the address book data i.e., all `Person` objects (which are contained in a `UniquePersonList` object).","lastModifiedDate":"2021-07-31"},{"lineNumber":144,"author":{"gitId":"-"},"content":"* stores the currently \u0027selected\u0027 `Person` objects (e.g., results of a search query) as a separate _filtered_ list which is exposed to outsiders as an unmodifiable `ObservableList\u003cPerson\u003e` that can be \u0027observed\u0027 e.g. the UI can be bound to this list so that the UI automatically updates when the data in the list change.","lastModifiedDate":"2021-07-31"},{"lineNumber":145,"author":{"gitId":"-"},"content":"* stores a `UserPref` object that represents the user’s preferences. This is exposed to the outside as a `ReadOnlyUserPref` objects.","lastModifiedDate":"2021-07-31"},{"lineNumber":146,"author":{"gitId":"-"},"content":"* does not depend on any of the other three components (as the `Model` represents data entities of the domain, they should make sense on their own without depending on other components)","lastModifiedDate":"2021-07-31"},{"lineNumber":147,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":148,"author":{"gitId":"-"},"content":"\u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-info\"\u003e:information_source: **Note:** An alternative (arguably, a more OOP) model is given below. It has a `Tag` list in the `AddressBook`, which `Person` references. This allows `AddressBook` to only require one `Tag` object per unique tag, instead of each `Person` needing their own `Tag` objects.\u003cbr\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":149,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":150,"author":{"gitId":"-"},"content":"\u003cimg src\u003d\"images/BetterModelClassDiagram.png\" width\u003d\"450\" /\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":151,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":152,"author":{"gitId":"-"},"content":"\u003c/div\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":153,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":154,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":155,"author":{"gitId":"-"},"content":"### Storage component","lastModifiedDate":"2020-05-23"},{"lineNumber":156,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":157,"author":{"gitId":"jiale-c"},"content":"The structure of the Storage component will be explained here.","lastModifiedDate":"2022-03-25"},{"lineNumber":158,"author":{"gitId":"jiale-c"},"content":"","lastModifiedDate":"2022-03-25"},{"lineNumber":159,"author":{"gitId":"-"},"content":"**API** : [`Storage.java`](https://github.com/se-edu/addressbook-level3/tree/master/src/main/java/seedu/address/storage/Storage.java)","lastModifiedDate":"2020-05-23"},{"lineNumber":160,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":161,"author":{"gitId":"-"},"content":"\u003cimg src\u003d\"images/StorageClassDiagram.png\" width\u003d\"550\" /\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":162,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":163,"author":{"gitId":"-"},"content":"The `Storage` component,","lastModifiedDate":"2020-05-23"},{"lineNumber":164,"author":{"gitId":"-"},"content":"* can save both address book data and user preference data in json format, and read them back into corresponding objects.","lastModifiedDate":"2021-07-31"},{"lineNumber":165,"author":{"gitId":"-"},"content":"* inherits from both `AddressBookStorage` and `UserPrefStorage`, which means it can be treated as either one (if only the functionality of only one is needed).","lastModifiedDate":"2021-07-31"},{"lineNumber":166,"author":{"gitId":"-"},"content":"* depends on some classes in the `Model` component (because the `Storage` component\u0027s job is to save/retrieve objects that belong to the `Model`)","lastModifiedDate":"2021-07-21"},{"lineNumber":167,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":168,"author":{"gitId":"-"},"content":"### Common classes","lastModifiedDate":"2020-05-23"},{"lineNumber":169,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":170,"author":{"gitId":"-"},"content":"Classes used by multiple components are in the `seedu.addressbook.commons` package.","lastModifiedDate":"2020-05-23"},{"lineNumber":171,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":172,"author":{"gitId":"-"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2020-05-23"},{"lineNumber":173,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":174,"author":{"gitId":"-"},"content":"## **Implementation**","lastModifiedDate":"2020-05-23"},{"lineNumber":175,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":176,"author":{"gitId":"-"},"content":"This section describes some noteworthy details on how certain features are implemented.","lastModifiedDate":"2020-05-23"},{"lineNumber":177,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":178,"author":{"gitId":"jiale-c"},"content":"### Tracking feature","lastModifiedDate":"2022-03-25"},{"lineNumber":179,"author":{"gitId":"jiale-c"},"content":"","lastModifiedDate":"2022-03-25"},{"lineNumber":180,"author":{"gitId":"jiale-c"},"content":"#### Current Implementation","lastModifiedDate":"2022-03-25"},{"lineNumber":181,"author":{"gitId":"jiale-c"},"content":"Currently, **Tracey** helps with 9 different types of command:","lastModifiedDate":"2022-03-25"},{"lineNumber":182,"author":{"gitId":"jiale-c"},"content":"1. `add student`","lastModifiedDate":"2022-03-25"},{"lineNumber":183,"author":{"gitId":"jiale-c"},"content":"2. `edit student data`","lastModifiedDate":"2022-03-25"},{"lineNumber":184,"author":{"gitId":"jiale-c"},"content":"3. `delete student`","lastModifiedDate":"2022-03-25"},{"lineNumber":185,"author":{"gitId":"jiale-c"},"content":"4. `find student`","lastModifiedDate":"2022-03-25"},{"lineNumber":186,"author":{"gitId":"jiale-c"},"content":"5. `filter statuses`","lastModifiedDate":"2022-03-25"},{"lineNumber":187,"author":{"gitId":"jiale-c"},"content":"6. `summarise all data`","lastModifiedDate":"2022-03-25"},{"lineNumber":188,"author":{"gitId":"jiale-c"},"content":"7. `help user`","lastModifiedDate":"2022-03-25"},{"lineNumber":189,"author":{"gitId":"jiale-c"},"content":"8. `list all data`","lastModifiedDate":"2022-03-25"},{"lineNumber":190,"author":{"gitId":"jiale-c"},"content":"9. `clear all data`","lastModifiedDate":"2022-03-25"},{"lineNumber":191,"author":{"gitId":"jiale-c"},"content":"","lastModifiedDate":"2022-03-25"},{"lineNumber":192,"author":{"gitId":"jiale-c"},"content":"This 9 features allow users of **Tracey** to be able to manage the covid situation in the hall.","lastModifiedDate":"2022-03-25"},{"lineNumber":193,"author":{"gitId":"jiale-c"},"content":"All 9 features extends from the `abstract` `Command` class.  \u003cbr\u003e","lastModifiedDate":"2022-03-25"},{"lineNumber":194,"author":{"gitId":"jiale-c"},"content":"","lastModifiedDate":"2022-03-25"},{"lineNumber":195,"author":{"gitId":"jiale-c"},"content":"The table below summarises the 9 different tracking commands:","lastModifiedDate":"2022-03-25"},{"lineNumber":196,"author":{"gitId":"jiale-c"},"content":"","lastModifiedDate":"2022-03-25"},{"lineNumber":197,"author":{"gitId":"jiale-c"},"content":"| Command      | Command Word | Purpose |","lastModifiedDate":"2022-03-25"},{"lineNumber":198,"author":{"gitId":"jiale-c"},"content":"| ----------- | ----------- | ----- |","lastModifiedDate":"2022-03-25"},{"lineNumber":199,"author":{"gitId":"jiale-c"},"content":"| `add student` | `add` | Adds a new student profile. |","lastModifiedDate":"2022-03-25"},{"lineNumber":200,"author":{"gitId":"jiale-c"},"content":"| `edit student data` | `edit` | Edits an existing student. |","lastModifiedDate":"2022-03-25"},{"lineNumber":201,"author":{"gitId":"jiale-c"},"content":"| `delete student` | `delete` | Delete an existing student.|","lastModifiedDate":"2022-03-25"},{"lineNumber":202,"author":{"gitId":"jiale-c"},"content":"| `find student` | `find` | Find an existing student.|","lastModifiedDate":"2022-03-25"},{"lineNumber":203,"author":{"gitId":"jiale-c"},"content":"| `filter statuses` | `filter` | Filter out a list of students by covid status. |","lastModifiedDate":"2022-03-25"},{"lineNumber":204,"author":{"gitId":"jiale-c"},"content":"| `summarise all data` | `summarise` | Make pie charts out of the data. |","lastModifiedDate":"2022-03-25"},{"lineNumber":205,"author":{"gitId":"jiale-c"},"content":"| `help user` | `help` | Provide a how-to-use on this app. |","lastModifiedDate":"2022-03-25"},{"lineNumber":206,"author":{"gitId":"jiale-c"},"content":"| `list all data` | `list` | List out all students in Tracey. |","lastModifiedDate":"2022-03-25"},{"lineNumber":207,"author":{"gitId":"jiale-c"},"content":"| `clear all data` | `clear` | Empty the database. |","lastModifiedDate":"2022-03-25"},{"lineNumber":208,"author":{"gitId":"jiale-c"},"content":"","lastModifiedDate":"2022-03-25"},{"lineNumber":209,"author":{"gitId":"cwq2326"},"content":"### Add feature","lastModifiedDate":"2022-03-21"},{"lineNumber":210,"author":{"gitId":"cwq2326"},"content":"","lastModifiedDate":"2022-03-21"},{"lineNumber":211,"author":{"gitId":"cwq2326"},"content":"The add mechanism implements the following sequence and interactions for the method call execute(\"add NEW_PERSON_TAGS\") on a LogicManager object where NEW_PERSON_TAGS refers to the tags of a person to be added.","lastModifiedDate":"2022-03-21"},{"lineNumber":212,"author":{"gitId":"cwq2326"},"content":"","lastModifiedDate":"2022-03-21"},{"lineNumber":213,"author":{"gitId":"DannyDakota"},"content":"The original AB3 implementation of the add feature only had a selected general few tags to be used (name, email, address, phone, email). To address our target users for this application, we added the tags block, faculty, matriculation number and covid status.","lastModifiedDate":"2022-03-23"},{"lineNumber":214,"author":{"gitId":"DannyDakota"},"content":"","lastModifiedDate":"2022-03-23"},{"lineNumber":215,"author":{"gitId":"DannyDakota"},"content":"In order to accommodate this new fields, we added new attributes into the `Person` Class and also created `Block`, `Faculty`, `MatriculationNumber` and `CovidStatus` classes.","lastModifiedDate":"2022-03-23"},{"lineNumber":216,"author":{"gitId":"DannyDakota"},"content":"","lastModifiedDate":"2022-03-23"},{"lineNumber":217,"author":{"gitId":"DannyDakota"},"content":"This also required changes to `CLISyntax` to include the new prefixes for the added classes.","lastModifiedDate":"2022-03-23"},{"lineNumber":218,"author":{"gitId":"DannyDakota"},"content":"","lastModifiedDate":"2022-03-23"},{"lineNumber":219,"author":{"gitId":"DannyDakota"},"content":"**Path Execution of Add Feature Activity Diagram is shown below:**","lastModifiedDate":"2022-03-23"},{"lineNumber":220,"author":{"gitId":"DannyDakota"},"content":"![AddFeatureActivityDiagram](images/AddFeatureActivityDiagram.png)","lastModifiedDate":"2022-03-23"},{"lineNumber":221,"author":{"gitId":"DannyDakota"},"content":"","lastModifiedDate":"2022-03-23"},{"lineNumber":222,"author":{"gitId":"DannyDakota"},"content":"Modelling the workflow of the `Add` Command, when the user inputs an **Add Command**, the command is checked if the required prefixes are present **and** the parameters of the command are valid. If not valid, a **ParseException** will be thrown. If valid, the parameters are then checked for uniqueness. If it is a duplicate `Person` object, a **CommandException** is thrown. Else, a new `Person` object is created and added to `AddressBook`. Subsequently, the result is printed out to the User.","lastModifiedDate":"2022-03-23"},{"lineNumber":223,"author":{"gitId":"DannyDakota"},"content":"","lastModifiedDate":"2022-03-23"},{"lineNumber":224,"author":{"gitId":"DannyDakota"},"content":"**Sequence Diagram of Add Feature is shown below:**","lastModifiedDate":"2022-03-23"},{"lineNumber":225,"author":{"gitId":"cwq2326"},"content":"![AddSequenceDiagram](images/AddSequenceDiagram.png)","lastModifiedDate":"2022-03-21"},{"lineNumber":226,"author":{"gitId":"cwq2326"},"content":"","lastModifiedDate":"2022-03-21"},{"lineNumber":227,"author":{"gitId":"cwq2326"},"content":"\u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-info\"\u003e:information_source: **Note:** The lifeline for `AddCommand` should end at the destroy marker (X) but due to a limitation of PlantUML, the lifeline reaches the end of diagram.","lastModifiedDate":"2022-03-21"},{"lineNumber":228,"author":{"gitId":"cwq2326"},"content":"","lastModifiedDate":"2022-03-21"},{"lineNumber":229,"author":{"gitId":"DannyDakota"},"content":":information_source: **Note** Replace `NEW_PERSON_TAGS` in the sequence diagram with the tags stated in the notes shown in the sequence diagram.","lastModifiedDate":"2022-03-23"},{"lineNumber":230,"author":{"gitId":"cwq2326"},"content":"\u003c/div\u003e","lastModifiedDate":"2022-03-21"},{"lineNumber":231,"author":{"gitId":"cwq2326"},"content":"","lastModifiedDate":"2022-03-21"},{"lineNumber":232,"author":{"gitId":"DannyDakota"},"content":"When a user inputs an add command, the `execute()` method of `LogicManager` will be called and this will trigger a parsing process by `AddressBookParser`, `AddCommandParser` and `ParserUtil` to check the validity of the input prefixes and parameters. If the input is valid, a `Person` object is instantiated and this object is subsequently used as a parameter to instantiate an `AddCommand` object.","lastModifiedDate":"2022-03-23"},{"lineNumber":233,"author":{"gitId":"DannyDakota"},"content":"","lastModifiedDate":"2022-03-23"},{"lineNumber":234,"author":{"gitId":"DannyDakota"},"content":"Following this, `Logic Manager` will call the `execute()` method of the `AddCommand` object. In this method, the `hasPerson()` method of the `Model` class will be called, checking to see if this person exists in the database. If the person exists, a **CommandException** is thrown. Else, the `addPerson()` method of the `model` is called. Finally, it returns a new `CommandResult` object containing a string that indicates success of Add Command.","lastModifiedDate":"2022-03-23"},{"lineNumber":235,"author":{"gitId":"DannyDakota"},"content":"","lastModifiedDate":"2022-03-23"},{"lineNumber":236,"author":{"gitId":"cwq2326"},"content":"","lastModifiedDate":"2022-03-21"},{"lineNumber":237,"author":{"gitId":"jiale-c"},"content":"### Summarise feature","lastModifiedDate":"2022-03-16"},{"lineNumber":238,"author":{"gitId":"jiale-c"},"content":"","lastModifiedDate":"2022-03-16"},{"lineNumber":239,"author":{"gitId":"jiale-c"},"content":"The summarise mechanism implements the following sequence and interactions for the method call execute(\"summarise\") on a LogicManager object.","lastModifiedDate":"2022-03-16"},{"lineNumber":240,"author":{"gitId":"jiale-c"},"content":"","lastModifiedDate":"2022-03-16"},{"lineNumber":241,"author":{"gitId":"jiale-c"},"content":"In order for this feature to be unique and not overlap what the List feature has to offer, summarise helps to calculate how many","lastModifiedDate":"2022-03-23"},{"lineNumber":242,"author":{"gitId":"jiale-c"},"content":"students who are covid positive in each block of the hall, alongside those who are negative and on health risk notice.","lastModifiedDate":"2022-03-25"},{"lineNumber":243,"author":{"gitId":"jiale-c"},"content":"This helps the hall masters determine if there is a spread of virus in any particular block.","lastModifiedDate":"2022-03-25"},{"lineNumber":244,"author":{"gitId":"jiale-c"},"content":"","lastModifiedDate":"2022-03-23"},{"lineNumber":245,"author":{"gitId":"jiale-c"},"content":"Tracey will then calculate those that are positive and which faculty they come from. This is helpful to determine if the superspreader","lastModifiedDate":"2022-03-23"},{"lineNumber":246,"author":{"gitId":"jiale-c"},"content":"comes from the faculty building itself. The hall masters and leaders can be more certain on their follow up actions to keep","lastModifiedDate":"2022-03-23"},{"lineNumber":247,"author":{"gitId":"jiale-c"},"content":"their hall safe.","lastModifiedDate":"2022-03-23"},{"lineNumber":248,"author":{"gitId":"jiale-c"},"content":"","lastModifiedDate":"2022-03-23"},{"lineNumber":249,"author":{"gitId":"jiale-c"},"content":"**Path Execution of Summarise Feature Activity Diagram is shown below:**","lastModifiedDate":"2022-03-23"},{"lineNumber":250,"author":{"gitId":"jiale-c"},"content":"![SummariseFeatureActivityDiagram](images/SummariseFeatureActivityDiagram.png)","lastModifiedDate":"2022-03-23"},{"lineNumber":251,"author":{"gitId":"jiale-c"},"content":"","lastModifiedDate":"2022-03-23"},{"lineNumber":252,"author":{"gitId":"jiale-c"},"content":"**Sequence Diagram of Summarise Feature is shown below:**","lastModifiedDate":"2022-03-23"},{"lineNumber":253,"author":{"gitId":"jiale-c"},"content":"![SummariseSequenceDiagram](images/SummariseSequenceDiagram.png)","lastModifiedDate":"2022-03-16"},{"lineNumber":254,"author":{"gitId":"jiale-c"},"content":"","lastModifiedDate":"2022-03-16"},{"lineNumber":255,"author":{"gitId":"jiale-c"},"content":"\u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-info\"\u003e:information_source: **Note:** The lifeline for `SummariseCommand` should end at the destroy marker (X) but due to a limitation of PlantUML, the lifeline reaches the end of diagram.","lastModifiedDate":"2022-03-16"},{"lineNumber":256,"author":{"gitId":"jiale-c"},"content":"","lastModifiedDate":"2022-03-16"},{"lineNumber":257,"author":{"gitId":"jiale-c"},"content":"\u003c/div\u003e","lastModifiedDate":"2022-03-16"},{"lineNumber":258,"author":{"gitId":"jiale-c"},"content":"","lastModifiedDate":"2022-03-16"},{"lineNumber":259,"author":{"gitId":"jiale-c"},"content":"When execute is called on the SummariseCommand object, there are multiple call back to self to anaylse and produce the result back to the Logic Manager.","lastModifiedDate":"2022-03-16"},{"lineNumber":260,"author":{"gitId":"jiale-c"},"content":"","lastModifiedDate":"2022-03-16"},{"lineNumber":261,"author":{"gitId":"jiale-c"},"content":"When a user inputs an add command, the `execute()` method of `LogicManager` will be called and this will trigger a parsing process by `AddressBookParser`.","lastModifiedDate":"2022-03-23"},{"lineNumber":262,"author":{"gitId":"jiale-c"},"content":"If the input is valid, an `AddCommand` object will be instantiated.","lastModifiedDate":"2022-03-23"},{"lineNumber":263,"author":{"gitId":"jiale-c"},"content":"","lastModifiedDate":"2022-03-23"},{"lineNumber":264,"author":{"gitId":"jiale-c"},"content":"Following this, `Logic Manager` will call the `execute()` method of the `SummariseCommand` object. In this method,","lastModifiedDate":"2022-03-23"},{"lineNumber":265,"author":{"gitId":"jiale-c"},"content":"the `updatedFilteredPersonList` method and `getFilteredPersonList` method of the `Model` class will be called, making sure the list of students are displayed.","lastModifiedDate":"2022-03-23"},{"lineNumber":266,"author":{"gitId":"jiale-c"},"content":"After getting the list of students, the `SummariseCommand` object will call its own `summariseAll` method to generate message regarding total number","lastModifiedDate":"2022-03-23"},{"lineNumber":267,"author":{"gitId":"jiale-c"},"content":"of covid cases in that hall. `filterByBlock` method is then called on the list again to generate statistics of covid statuses in each block of the hall.","lastModifiedDate":"2022-03-23"},{"lineNumber":268,"author":{"gitId":"jiale-c"},"content":"`filerByfaculty` is then called on the list once again to generate statistics of covid statuses in each faculty of students in the hall.","lastModifiedDate":"2022-03-23"},{"lineNumber":269,"author":{"gitId":"jiale-c"},"content":"","lastModifiedDate":"2022-03-23"},{"lineNumber":270,"author":{"gitId":"jiale-c"},"content":"Finally, it returns a new `CommandResult` object containing a string that indicates either failure or success of Summarise Command.","lastModifiedDate":"2022-03-23"},{"lineNumber":271,"author":{"gitId":"jiale-c"},"content":"A pop up window with the pie charts aligned to the message response will be generated to aid in the visualisation of data.","lastModifiedDate":"2022-03-23"},{"lineNumber":272,"author":{"gitId":"jiale-c"},"content":"","lastModifiedDate":"2022-03-23"},{"lineNumber":273,"author":{"gitId":"cwq2326"},"content":"","lastModifiedDate":"2022-03-24"},{"lineNumber":274,"author":{"gitId":"cwq2326"},"content":"### Pie Chart Window feature","lastModifiedDate":"2022-03-24"},{"lineNumber":275,"author":{"gitId":"cwq2326"},"content":"","lastModifiedDate":"2022-03-24"},{"lineNumber":276,"author":{"gitId":"cwq2326"},"content":"#### \u003cins\u003eHow the feature is implemented\u003cins/\u003e","lastModifiedDate":"2022-03-24"},{"lineNumber":277,"author":{"gitId":"cwq2326"},"content":"","lastModifiedDate":"2022-03-24"},{"lineNumber":278,"author":{"gitId":"cwq2326"},"content":"This feature is implemented using a new class `PieChartWindow` and modifications to `SummariseCommand` and `MainWindow`.","lastModifiedDate":"2022-03-24"},{"lineNumber":279,"author":{"gitId":"cwq2326"},"content":"When the user inputs `SummariseCommand`, `SummariseCommand#summariseFaculty()` and `SummariseCommand#summariseBlock()` will","lastModifiedDate":"2022-03-24"},{"lineNumber":280,"author":{"gitId":"cwq2326"},"content":"be invoked and puts the necessary data into a `TreeMap` that is a static variable of `SummariseCommand`. In `MainWindow#executeCommand()`,","lastModifiedDate":"2022-03-24"},{"lineNumber":281,"author":{"gitId":"cwq2326"},"content":"it will invoke `MainWindow#handleSummarise()` which first check whether the pie chart window is to be display by calling `SummariseCommand#shouldOpenPieChartWindow()`.","lastModifiedDate":"2022-03-24"},{"lineNumber":282,"author":{"gitId":"cwq2326"},"content":"If true, `MainWindow#handleSummarise()` will call `PieChartWindow#execute()` to create the pie chart and opens a new window.","lastModifiedDate":"2022-03-24"},{"lineNumber":283,"author":{"gitId":"cwq2326"},"content":"The data needed for the pie chart is obtained using `SummariseCommand#getPositiveStatsByFacultyData()` and `SummariseCommand#getCovidStatsByBlockDataList()`.","lastModifiedDate":"2022-03-24"},{"lineNumber":284,"author":{"gitId":"cwq2326"},"content":"","lastModifiedDate":"2022-03-24"},{"lineNumber":285,"author":{"gitId":"cwq2326"},"content":"","lastModifiedDate":"2022-03-24"},{"lineNumber":286,"author":{"gitId":"cwq2326"},"content":"Below are links for implementation of the classes and its methods:","lastModifiedDate":"2022-03-24"},{"lineNumber":287,"author":{"gitId":"cwq2326"},"content":"* [`PieChartWindow`](../src/main/java/seedu/address/ui/PieChartWindow.java)","lastModifiedDate":"2022-03-24"},{"lineNumber":288,"author":{"gitId":"cwq2326"},"content":"* [`SummariseCommand`](../src/main/java/seedu/address/logic/commands/SummariseCommand.java)","lastModifiedDate":"2022-03-24"},{"lineNumber":289,"author":{"gitId":"cwq2326"},"content":"* [`MainWindow`](../src/main/java/seedu/address/ui/MainWindow.java)","lastModifiedDate":"2022-03-24"},{"lineNumber":290,"author":{"gitId":"cwq2326"},"content":"","lastModifiedDate":"2022-03-24"},{"lineNumber":291,"author":{"gitId":"cwq2326"},"content":"**Sequence Diagram of Pie Chart Window Feature is shown below:**","lastModifiedDate":"2022-03-24"},{"lineNumber":292,"author":{"gitId":"cwq2326"},"content":"","lastModifiedDate":"2022-03-24"},{"lineNumber":293,"author":{"gitId":"cwq2326"},"content":"![PieChartWindowSequenceDiagram](images/PieChartWindowSequenceDiagram.png)","lastModifiedDate":"2022-03-24"},{"lineNumber":294,"author":{"gitId":"cwq2326"},"content":"","lastModifiedDate":"2022-03-24"},{"lineNumber":295,"author":{"gitId":"cwq2326"},"content":"#### \u003cins\u003eWhy it is implemented that way\u003cins/\u003e","lastModifiedDate":"2022-03-24"},{"lineNumber":296,"author":{"gitId":"cwq2326"},"content":"The data needed for the pie charts should be coupled with `SummariseCommand`, therefore it is necessary to implement this feature in such a way that the pie chart data is created upon invocation `SummariseCommand`. A `PieChartWindow` controller and FXML class is also needed to abstract the creation of the pie charts and opening a new window respectively. The `MainWindow` class is then modified accordingly.","lastModifiedDate":"2022-03-24"},{"lineNumber":297,"author":{"gitId":"cwq2326"},"content":"","lastModifiedDate":"2022-03-24"},{"lineNumber":298,"author":{"gitId":"cwq2326"},"content":"#### \u003cins\u003eAlternatives considered\u003cins/\u003e","lastModifiedDate":"2022-03-24"},{"lineNumber":299,"author":{"gitId":"cwq2326"},"content":"","lastModifiedDate":"2022-03-24"},{"lineNumber":300,"author":{"gitId":"cwq2326"},"content":"**Aspect: How data is passed to the pie charts:**","lastModifiedDate":"2022-03-24"},{"lineNumber":301,"author":{"gitId":"cwq2326"},"content":"","lastModifiedDate":"2022-03-24"},{"lineNumber":302,"author":{"gitId":"cwq2326"},"content":"* **Alternative 1 (current choice):** `SummariseCommand` will pass in necessary data into data structures (`TreeMap` in this case) upon invocation which then can be obtained using getter methods","lastModifiedDate":"2022-03-24"},{"lineNumber":303,"author":{"gitId":"cwq2326"},"content":"    * Pros: Easy to implement.","lastModifiedDate":"2022-03-24"},{"lineNumber":304,"author":{"gitId":"cwq2326"},"content":"    * Cons: Dependent on the `SummariseCommand` class to pass in correct inputs.","lastModifiedDate":"2022-03-24"},{"lineNumber":305,"author":{"gitId":"cwq2326"},"content":"    * Other consideration(s): Use the Singleton design principle for the data structures.","lastModifiedDate":"2022-03-24"},{"lineNumber":306,"author":{"gitId":"cwq2326"},"content":"","lastModifiedDate":"2022-03-24"},{"lineNumber":307,"author":{"gitId":"cwq2326"},"content":"* **Alternative 2:** Parse the feedback to user message from `SummariseCommand`","lastModifiedDate":"2022-03-24"},{"lineNumber":308,"author":{"gitId":"cwq2326"},"content":"    * Pros: No modifications to the `SummariseCommand` class.","lastModifiedDate":"2022-03-24"},{"lineNumber":309,"author":{"gitId":"cwq2326"},"content":"    * Cons: Dependent on the feedback message, need to implement complicated methods to parse the message, parsing methods need to be modified if the format of the feedback message is changed.","lastModifiedDate":"2022-03-24"},{"lineNumber":310,"author":{"gitId":"cwq2326"},"content":"","lastModifiedDate":"2022-03-24"},{"lineNumber":311,"author":{"gitId":"jiale-c"},"content":"","lastModifiedDate":"2022-03-23"},{"lineNumber":312,"author":{"gitId":"jiale-c"},"content":"### Clear feature","lastModifiedDate":"2022-03-23"},{"lineNumber":313,"author":{"gitId":"jiale-c"},"content":"","lastModifiedDate":"2022-03-23"},{"lineNumber":314,"author":{"gitId":"jiale-c"},"content":"The clear mechanism implements the following sequence and interactions for the method call execute(\"clear\") on a LogicManager object.","lastModifiedDate":"2022-03-23"},{"lineNumber":315,"author":{"gitId":"jiale-c"},"content":"","lastModifiedDate":"2022-03-23"},{"lineNumber":316,"author":{"gitId":"jiale-c"},"content":"The original AB3 implementation of the clear feature acts a similar way to how we clear the address list. This clear feature allows","lastModifiedDate":"2022-03-23"},{"lineNumber":317,"author":{"gitId":"jiale-c"},"content":"user to replace the list of students with an empty one. Previous data are swiped away.","lastModifiedDate":"2022-03-23"},{"lineNumber":318,"author":{"gitId":"jiale-c"},"content":"","lastModifiedDate":"2022-03-23"},{"lineNumber":319,"author":{"gitId":"jiale-c"},"content":"**Path Execution of Clear Feature Activity Diagram is shown below:**","lastModifiedDate":"2022-03-23"},{"lineNumber":320,"author":{"gitId":"jiale-c"},"content":"![ClearFeatureActivityDiagram](images/ClearFeatureActivityDiagram.png)","lastModifiedDate":"2022-03-23"},{"lineNumber":321,"author":{"gitId":"jiale-c"},"content":"","lastModifiedDate":"2022-03-23"},{"lineNumber":322,"author":{"gitId":"jiale-c"},"content":"**Sequence Diagram of Clear Feature is shown below:**","lastModifiedDate":"2022-03-23"},{"lineNumber":323,"author":{"gitId":"jiale-c"},"content":"![ClearSequenceDiagram](images/ClearSequenceDiagram.png)","lastModifiedDate":"2022-03-23"},{"lineNumber":324,"author":{"gitId":"jiale-c"},"content":"","lastModifiedDate":"2022-03-23"},{"lineNumber":325,"author":{"gitId":"jiale-c"},"content":"\u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-info\"\u003e:information_source: **Note:** The lifeline for `SummariseCommand` should end at the destroy marker (X) but due to a limitation of PlantUML, the lifeline reaches the end of diagram.","lastModifiedDate":"2022-03-23"},{"lineNumber":326,"author":{"gitId":"cwq2326"},"content":"","lastModifiedDate":"2022-03-24"},{"lineNumber":327,"author":{"gitId":"cwq2326"},"content":"\u003c/div\u003e","lastModifiedDate":"2022-03-24"},{"lineNumber":328,"author":{"gitId":"cwq2326"},"content":"","lastModifiedDate":"2022-03-24"},{"lineNumber":329,"author":{"gitId":"jiale-c"},"content":"\u003cbr\u003e","lastModifiedDate":"2022-03-25"},{"lineNumber":330,"author":{"gitId":"jiale-c"},"content":"","lastModifiedDate":"2022-03-25"},{"lineNumber":331,"author":{"gitId":"jiale-c"},"content":"### Find feature","lastModifiedDate":"2022-03-25"},{"lineNumber":332,"author":{"gitId":"jiale-c"},"content":"","lastModifiedDate":"2022-03-25"},{"lineNumber":333,"author":{"gitId":"jiale-c"},"content":"#### Current Implementation","lastModifiedDate":"2022-03-25"},{"lineNumber":334,"author":{"gitId":"jiale-c"},"content":"","lastModifiedDate":"2022-03-25"},{"lineNumber":335,"author":{"gitId":"jiale-c"},"content":"The activity diagram below illustrates the flow of a `find` command.","lastModifiedDate":"2022-03-25"},{"lineNumber":336,"author":{"gitId":"jiale-c"},"content":"","lastModifiedDate":"2022-03-25"},{"lineNumber":337,"author":{"gitId":"jiale-c"},"content":"![FindFeatureActivityDiagram](images/FindFeatureActivityDiagram.png)","lastModifiedDate":"2022-03-25"},{"lineNumber":338,"author":{"gitId":"jiale-c"},"content":"","lastModifiedDate":"2022-03-25"},{"lineNumber":339,"author":{"gitId":"jiale-c"},"content":"#### Usage Scenario","lastModifiedDate":"2022-03-25"},{"lineNumber":340,"author":{"gitId":"jiale-c"},"content":"","lastModifiedDate":"2022-03-25"},{"lineNumber":341,"author":{"gitId":"jiale-c"},"content":"Given below is an example usage scenario and how `find` react and act at each step.","lastModifiedDate":"2022-03-25"},{"lineNumber":342,"author":{"gitId":"jiale-c"},"content":"","lastModifiedDate":"2022-03-25"},{"lineNumber":343,"author":{"gitId":"jiale-c"},"content":"**1**) The user launches the application for the first time.","lastModifiedDate":"2022-03-25"},{"lineNumber":344,"author":{"gitId":"jiale-c"},"content":"","lastModifiedDate":"2022-03-25"},{"lineNumber":345,"author":{"gitId":"jiale-c"},"content":"**2**) The user inputs `find alex` in the CLI to sort all contacts by name. This calls `LogicManager::execute`","lastModifiedDate":"2022-03-25"},{"lineNumber":346,"author":{"gitId":"jiale-c"},"content":"to parse the given input.","lastModifiedDate":"2022-03-25"},{"lineNumber":347,"author":{"gitId":"jiale-c"},"content":"","lastModifiedDate":"2022-03-25"},{"lineNumber":348,"author":{"gitId":"jiale-c"},"content":"**3**) `LogicManager` will notice that a find command is called and will call `FindCommandParser::parse`. From the given input,","lastModifiedDate":"2022-03-25"},{"lineNumber":349,"author":{"gitId":"jiale-c"},"content":"`FindCommandParser` will create the corresponding `NameContainsKeywordsPredicate` Predicate and return a `FindCommand`.","lastModifiedDate":"2022-03-25"},{"lineNumber":350,"author":{"gitId":"jiale-c"},"content":"","lastModifiedDate":"2022-03-25"},{"lineNumber":351,"author":{"gitId":"jiale-c"},"content":"**4**) After execution of the user input, `LogicManager` calls `FindCommand::execute(model)` where model contains methods that lists","lastModifiedDate":"2022-03-25"},{"lineNumber":352,"author":{"gitId":"jiale-c"},"content":"out the persons with the `NameContainsKeywordsPredicate`.","lastModifiedDate":"2022-03-25"},{"lineNumber":353,"author":{"gitId":"jiale-c"},"content":"","lastModifiedDate":"2022-03-25"},{"lineNumber":354,"author":{"gitId":"jiale-c"},"content":"**5**) Through a series of method invocations, a lists of persons that matches the input is generated with their personal details.","lastModifiedDate":"2022-03-25"},{"lineNumber":355,"author":{"gitId":"jiale-c"},"content":"","lastModifiedDate":"2022-03-25"},{"lineNumber":356,"author":{"gitId":"jiale-c"},"content":"The sequence diagram below illustrates the execution of `find alex`.","lastModifiedDate":"2022-03-25"},{"lineNumber":357,"author":{"gitId":"jiale-c"},"content":"","lastModifiedDate":"2022-03-25"},{"lineNumber":358,"author":{"gitId":"jiale-c"},"content":"![FindSequenceDiagram](images/FindSequenceDiagram.png)","lastModifiedDate":"2022-03-25"},{"lineNumber":359,"author":{"gitId":"jiale-c"},"content":"","lastModifiedDate":"2022-03-25"},{"lineNumber":360,"author":{"gitId":"jiale-c"},"content":"","lastModifiedDate":"2022-03-25"},{"lineNumber":361,"author":{"gitId":"jiale-c"},"content":"#### Design Considerations","lastModifiedDate":"2022-03-25"},{"lineNumber":362,"author":{"gitId":"jiale-c"},"content":"","lastModifiedDate":"2022-03-25"},{"lineNumber":363,"author":{"gitId":"jiale-c"},"content":"**Aspect: How `find` executes**","lastModifiedDate":"2022-03-25"},{"lineNumber":364,"author":{"gitId":"jiale-c"},"content":"","lastModifiedDate":"2022-03-25"},{"lineNumber":365,"author":{"gitId":"jiale-c"},"content":"{to be decided}","lastModifiedDate":"2022-03-25"},{"lineNumber":366,"author":{"gitId":"jiale-c"},"content":"","lastModifiedDate":"2022-03-25"},{"lineNumber":367,"author":{"gitId":"jiale-c"},"content":"\u003cbr\u003e","lastModifiedDate":"2022-03-25"},{"lineNumber":368,"author":{"gitId":"jiale-c"},"content":"","lastModifiedDate":"2022-03-25"},{"lineNumber":369,"author":{"gitId":"cwq2326"},"content":"### Edit feature","lastModifiedDate":"2022-03-24"},{"lineNumber":370,"author":{"gitId":"cwq2326"},"content":"","lastModifiedDate":"2022-03-24"},{"lineNumber":371,"author":{"gitId":"cwq2326"},"content":"The edit mechanism implements the following sequence for the method call execute(\"edit\").","lastModifiedDate":"2022-03-24"},{"lineNumber":372,"author":{"gitId":"cwq2326"},"content":"","lastModifiedDate":"2022-03-24"},{"lineNumber":373,"author":{"gitId":"tanchinkiat99"},"content":"This feature is enhanced so that if the field values for the tag is the same as the field value of the corresponding person in the address book, then an exception will be thrown.","lastModifiedDate":"2022-03-25"},{"lineNumber":374,"author":{"gitId":"cwq2326"},"content":"","lastModifiedDate":"2022-03-24"},{"lineNumber":375,"author":{"gitId":"cwq2326"},"content":"eg.","lastModifiedDate":"2022-03-24"},{"lineNumber":376,"author":{"gitId":"cwq2326"},"content":"Person to be edited: `JOHN DOE f/SOC cs/POSITIVE ...` with index of `1`\u003cbr\u003e","lastModifiedDate":"2022-03-24"},{"lineNumber":377,"author":{"gitId":"tanchinkiat99"},"content":"`edit 1 f/SOC` will throw an exception since the field value to be edited is the same, while `edit 1 f/FASS` will proceed to update the field value of the person.","lastModifiedDate":"2022-03-25"},{"lineNumber":378,"author":{"gitId":"cwq2326"},"content":"","lastModifiedDate":"2022-03-24"},{"lineNumber":379,"author":{"gitId":"cwq2326"},"content":"**Path Execution of Edit Feature Activity Diagram is shown below:**","lastModifiedDate":"2022-03-24"},{"lineNumber":380,"author":{"gitId":"cwq2326"},"content":"![ClearFeatureActivityDiagram](images/EditFeatureActivityDiagram.png)","lastModifiedDate":"2022-03-24"},{"lineNumber":381,"author":{"gitId":"cwq2326"},"content":"","lastModifiedDate":"2022-03-24"},{"lineNumber":382,"author":{"gitId":"cwq2326"},"content":"\u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-info\"\u003e:information_source: **Note:** The lifeline for `SummariseCommand` should end at the destroy marker (X) but due to a limitation of PlantUML, the lifeline reaches the end of diagram.","lastModifiedDate":"2022-03-24"},{"lineNumber":383,"author":{"gitId":"jiale-c"},"content":"","lastModifiedDate":"2022-03-23"},{"lineNumber":384,"author":{"gitId":"jiale-c"},"content":"\u003c/div\u003e","lastModifiedDate":"2022-03-23"},{"lineNumber":385,"author":{"gitId":"jiale-c"},"content":"","lastModifiedDate":"2022-03-23"},{"lineNumber":386,"author":{"gitId":"tanchinkiat99"},"content":"### Filter feature","lastModifiedDate":"2022-03-25"},{"lineNumber":387,"author":{"gitId":"tanchinkiat99"},"content":"","lastModifiedDate":"2022-03-25"},{"lineNumber":388,"author":{"gitId":"tanchinkiat99"},"content":"The filter mechanism implements the following sequence for the method call execute(\"filter\").","lastModifiedDate":"2022-03-25"},{"lineNumber":389,"author":{"gitId":"tanchinkiat99"},"content":"","lastModifiedDate":"2022-03-25"},{"lineNumber":390,"author":{"gitId":"tanchinkiat99"},"content":"#### What is the filter feature","lastModifiedDate":"2022-03-25"},{"lineNumber":391,"author":{"gitId":"tanchinkiat99"},"content":"","lastModifiedDate":"2022-03-25"},{"lineNumber":392,"author":{"gitId":"tanchinkiat99"},"content":"The filter feature allows users to retrieve a list of specific students, filtering them by covid status, and/or faculty, and/or block.","lastModifiedDate":"2022-03-25"},{"lineNumber":393,"author":{"gitId":"tanchinkiat99"},"content":"","lastModifiedDate":"2022-03-25"},{"lineNumber":394,"author":{"gitId":"tanchinkiat99"},"content":"The `filter` command is as follows:","lastModifiedDate":"2022-03-25"},{"lineNumber":395,"author":{"gitId":"tanchinkiat99"},"content":"","lastModifiedDate":"2022-03-25"},{"lineNumber":396,"author":{"gitId":"tanchinkiat99"},"content":"`filter cs/[COVID STATUS] f/[FACULTY] b/[BLOCK]`","lastModifiedDate":"2022-03-25"},{"lineNumber":397,"author":{"gitId":"tanchinkiat99"},"content":"","lastModifiedDate":"2022-03-25"},{"lineNumber":398,"author":{"gitId":"tanchinkiat99"},"content":"The user can choose whether to input filter criteria for some or all of the fields. However, at least one field must be specified. \u003cbr\u003e","lastModifiedDate":"2022-03-25"},{"lineNumber":399,"author":{"gitId":"tanchinkiat99"},"content":"","lastModifiedDate":"2022-03-25"},{"lineNumber":400,"author":{"gitId":"tanchinkiat99"},"content":"The user can thus choose different combinations of filter criteria depending on the motive. For example, if a block head wants to cater to the covid-positive students in a certain block, the user can simply filter by both covid status and block to find out the details of this group of people.","lastModifiedDate":"2022-03-25"},{"lineNumber":401,"author":{"gitId":"tanchinkiat99"},"content":"","lastModifiedDate":"2022-03-25"},{"lineNumber":402,"author":{"gitId":"tanchinkiat99"},"content":"eg.","lastModifiedDate":"2022-03-25"},{"lineNumber":403,"author":{"gitId":"tanchinkiat99"},"content":"`filter cs/positive f/soc` \u003cbr\u003e","lastModifiedDate":"2022-03-25"},{"lineNumber":404,"author":{"gitId":"tanchinkiat99"},"content":"This is still a valid input even though the filter criteria for block was not specified. The resultant list will contain students who are both covid-positive and from the faculty \"SOC\".","lastModifiedDate":"2022-03-25"},{"lineNumber":405,"author":{"gitId":"tanchinkiat99"},"content":"","lastModifiedDate":"2022-03-25"},{"lineNumber":406,"author":{"gitId":"tanchinkiat99"},"content":"The activity diagram shows the possible execution paths for the `filter` command.","lastModifiedDate":"2022-03-25"},{"lineNumber":407,"author":{"gitId":"tanchinkiat99"},"content":"","lastModifiedDate":"2022-03-25"},{"lineNumber":408,"author":{"gitId":"tanchinkiat99"},"content":"**Path Execution of Filter Feature Activity Diagram is shown below:**","lastModifiedDate":"2022-03-25"},{"lineNumber":409,"author":{"gitId":"tanchinkiat99"},"content":"![FilterFeatureActivityDiagram](images/FilterFeatureActivityDiagram.png)","lastModifiedDate":"2022-03-25"},{"lineNumber":410,"author":{"gitId":"tanchinkiat99"},"content":"","lastModifiedDate":"2022-03-25"},{"lineNumber":411,"author":{"gitId":"tanchinkiat99"},"content":"There are two possible execution paths for this command.","lastModifiedDate":"2022-03-25"},{"lineNumber":412,"author":{"gitId":"tanchinkiat99"},"content":"","lastModifiedDate":"2022-03-25"},{"lineNumber":413,"author":{"gitId":"tanchinkiat99"},"content":"1. User inputs the `filter` command with invalid or empty arguments. A ParseException will be thrown, and Tracey will display an error message along with the correct input format to the user.","lastModifiedDate":"2022-03-25"},{"lineNumber":414,"author":{"gitId":"tanchinkiat99"},"content":"2. User inputs the `filter` command with valid arguments. Tracey then stores the specified filter criteria, and displays a list based on those criteria.","lastModifiedDate":"2022-03-25"},{"lineNumber":415,"author":{"gitId":"tanchinkiat99"},"content":"","lastModifiedDate":"2022-03-25"},{"lineNumber":416,"author":{"gitId":"tanchinkiat99"},"content":"The sequence diagram below shows the interactions between objects during the execution of a `filter` command.","lastModifiedDate":"2022-03-25"},{"lineNumber":417,"author":{"gitId":"tanchinkiat99"},"content":"","lastModifiedDate":"2022-03-25"},{"lineNumber":418,"author":{"gitId":"tanchinkiat99"},"content":"**Sequence Diagram of Filter Feature is shown below:**","lastModifiedDate":"2022-03-25"},{"lineNumber":419,"author":{"gitId":"tanchinkiat99"},"content":"![FilterSequenceDiagram](images/FilterSequenceDiagram.png)","lastModifiedDate":"2022-03-25"},{"lineNumber":420,"author":{"gitId":"tanchinkiat99"},"content":"","lastModifiedDate":"2022-03-25"},{"lineNumber":421,"author":{"gitId":"tanchinkiat99"},"content":"The arguments typed into Tracey\u0027s text box will first be taken in by the `execute` method in `LogicManager`. It will then be parsed by the `parseCommmand` function in the `AddressBookParser` object.","lastModifiedDate":"2022-03-25"},{"lineNumber":422,"author":{"gitId":"tanchinkiat99"},"content":"","lastModifiedDate":"2022-03-25"},{"lineNumber":423,"author":{"gitId":"tanchinkiat99"},"content":"A `FilterCommandParser` object will then be created to parse this input, with its `parse` function. A `FilterDescriptor` object is then created, containing the filter criteria that the user has entered. This `FilterDescriptor` object is then used to create a `FilterCommand` object.","lastModifiedDate":"2022-03-25"},{"lineNumber":424,"author":{"gitId":"tanchinkiat99"},"content":"","lastModifiedDate":"2022-03-25"},{"lineNumber":425,"author":{"gitId":"tanchinkiat99"},"content":"Subsequently, the `parseCommand` method in `LogicManager` will continue to create a `CommandResult`, displaying a success message and a list of the filtered students.","lastModifiedDate":"2022-03-25"},{"lineNumber":426,"author":{"gitId":"tanchinkiat99"},"content":"","lastModifiedDate":"2022-03-25"},{"lineNumber":427,"author":{"gitId":"tanchinkiat99"},"content":"The `ArgumentMultimap` class is used to parse the user input and store the filtering criteria, based on the respective prefixes of the different fields. This was used so that the input criteria of each field can be taken from the user input irregardless of the order that they typed it in.","lastModifiedDate":"2022-03-25"},{"lineNumber":428,"author":{"gitId":"tanchinkiat99"},"content":"","lastModifiedDate":"2022-03-25"},{"lineNumber":429,"author":{"gitId":"tanchinkiat99"},"content":"The `FilterDescriptor` takes in the filter criteria and returns a single predicate encompassing all the criteria on its `getFilters` method, so that this predicate can be used as an argument for the `updateFilteredPersonsList` method of the `Model` object, displaying a list of students that were filtered by this predicate.","lastModifiedDate":"2022-03-25"},{"lineNumber":430,"author":{"gitId":"tanchinkiat99"},"content":"","lastModifiedDate":"2022-03-25"},{"lineNumber":431,"author":{"gitId":"kevinkuo0320"},"content":"### Exit Feature","lastModifiedDate":"2022-03-26"},{"lineNumber":432,"author":{"gitId":"kevinkuo0320"},"content":"","lastModifiedDate":"2022-03-26"},{"lineNumber":433,"author":{"gitId":"kevinkuo0320"},"content":"The exit mechanism implements the following sequence for the method call execute(\"exit\").","lastModifiedDate":"2022-03-26"},{"lineNumber":434,"author":{"gitId":"kevinkuo0320"},"content":"","lastModifiedDate":"2022-03-26"},{"lineNumber":435,"author":{"gitId":"kevinkuo0320"},"content":"#### What is the exit feature","lastModifiedDate":"2022-03-26"},{"lineNumber":436,"author":{"gitId":"kevinkuo0320"},"content":"","lastModifiedDate":"2022-03-26"},{"lineNumber":437,"author":{"gitId":"kevinkuo0320"},"content":"The exit feature allows users to exit from Tracey after they finish with it.","lastModifiedDate":"2022-03-26"},{"lineNumber":438,"author":{"gitId":"kevinkuo0320"},"content":"","lastModifiedDate":"2022-03-26"},{"lineNumber":439,"author":{"gitId":"kevinkuo0320"},"content":"The `exit` command is as follows:","lastModifiedDate":"2022-03-26"},{"lineNumber":440,"author":{"gitId":"kevinkuo0320"},"content":"","lastModifiedDate":"2022-03-26"},{"lineNumber":441,"author":{"gitId":"kevinkuo0320"},"content":"`exit`","lastModifiedDate":"2022-03-26"},{"lineNumber":442,"author":{"gitId":"kevinkuo0320"},"content":"","lastModifiedDate":"2022-03-26"},{"lineNumber":443,"author":{"gitId":"kevinkuo0320"},"content":"The user can choose when to exit the programme \u003cbr\u003e","lastModifiedDate":"2022-03-26"},{"lineNumber":444,"author":{"gitId":"kevinkuo0320"},"content":"","lastModifiedDate":"2022-03-26"},{"lineNumber":445,"author":{"gitId":"kevinkuo0320"},"content":"The activity diagram shows the possible execution paths for the `exit` command.","lastModifiedDate":"2022-03-26"},{"lineNumber":446,"author":{"gitId":"kevinkuo0320"},"content":"","lastModifiedDate":"2022-03-26"},{"lineNumber":447,"author":{"gitId":"kevinkuo0320"},"content":"**Path Execution of Exit Feature Activity Diagram is shown below:**","lastModifiedDate":"2022-03-26"},{"lineNumber":448,"author":{"gitId":"kevinkuo0320"},"content":"![ExitFeatureActivityDiagram](images/ExitFeatureActivityDiagram.jpg)","lastModifiedDate":"2022-03-27"},{"lineNumber":449,"author":{"gitId":"kevinkuo0320"},"content":"","lastModifiedDate":"2022-03-26"},{"lineNumber":450,"author":{"gitId":"kevinkuo0320"},"content":"There is one possible execution path for this command.","lastModifiedDate":"2022-03-26"},{"lineNumber":451,"author":{"gitId":"kevinkuo0320"},"content":"","lastModifiedDate":"2022-03-26"},{"lineNumber":452,"author":{"gitId":"kevinkuo0320"},"content":"1. User inputs the `exit` command, triggering Tracey to close its programme","lastModifiedDate":"2022-03-26"},{"lineNumber":453,"author":{"gitId":"kevinkuo0320"},"content":"","lastModifiedDate":"2022-03-26"},{"lineNumber":454,"author":{"gitId":"kevinkuo0320"},"content":"The sequence diagram below shows the interactions between objects during the execution of a `exit` command.","lastModifiedDate":"2022-03-26"},{"lineNumber":455,"author":{"gitId":"kevinkuo0320"},"content":"","lastModifiedDate":"2022-03-26"},{"lineNumber":456,"author":{"gitId":"kevinkuo0320"},"content":"**Sequence Diagram of Exit Feature is shown below:**","lastModifiedDate":"2022-03-26"},{"lineNumber":457,"author":{"gitId":"kevinkuo0320"},"content":"![ExitSequenceDiagram](images/ExitFeatureSequenceDiagram.jpg)","lastModifiedDate":"2022-03-26"},{"lineNumber":458,"author":{"gitId":"kevinkuo0320"},"content":"","lastModifiedDate":"2022-03-26"},{"lineNumber":459,"author":{"gitId":"kevinkuo0320"},"content":"","lastModifiedDate":"2022-03-26"},{"lineNumber":460,"author":{"gitId":"-"},"content":"### \\[Proposed\\] Undo/redo feature","lastModifiedDate":"2020-06-07"},{"lineNumber":461,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":462,"author":{"gitId":"-"},"content":"#### Proposed Implementation","lastModifiedDate":"2020-05-23"},{"lineNumber":463,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":464,"author":{"gitId":"-"},"content":"The proposed undo/redo mechanism is facilitated by `VersionedAddressBook`. It extends `AddressBook` with an undo/redo history, stored internally as an `addressBookStateList` and `currentStatePointer`. Additionally, it implements the following operations:","lastModifiedDate":"2020-05-23"},{"lineNumber":465,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":466,"author":{"gitId":"-"},"content":"* `VersionedAddressBook#commit()` — Saves the current address book state in its history.","lastModifiedDate":"2020-05-23"},{"lineNumber":467,"author":{"gitId":"-"},"content":"* `VersionedAddressBook#undo()` — Restores the previous address book state from its history.","lastModifiedDate":"2020-05-23"},{"lineNumber":468,"author":{"gitId":"-"},"content":"* `VersionedAddressBook#redo()` — Restores a previously undone address book state from its history.","lastModifiedDate":"2020-05-23"},{"lineNumber":469,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":470,"author":{"gitId":"-"},"content":"These operations are exposed in the `Model` interface as `Model#commitAddressBook()`, `Model#undoAddressBook()` and `Model#redoAddressBook()` respectively.","lastModifiedDate":"2020-05-23"},{"lineNumber":471,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":472,"author":{"gitId":"-"},"content":"Given below is an example usage scenario and how the undo/redo mechanism behaves at each step.","lastModifiedDate":"2020-05-23"},{"lineNumber":473,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":474,"author":{"gitId":"-"},"content":"Step 1. The user launches the application for the first time. The `VersionedAddressBook` will be initialized with the initial address book state, and the `currentStatePointer` pointing to that single address book state.","lastModifiedDate":"2020-05-23"},{"lineNumber":475,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":476,"author":{"gitId":"-"},"content":"![UndoRedoState0](images/UndoRedoState0.png)","lastModifiedDate":"2020-05-23"},{"lineNumber":477,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":478,"author":{"gitId":"-"},"content":"Step 2. The user executes `delete 5` command to delete the 5th person in the address book. The `delete` command calls `Model#commitAddressBook()`, causing the modified state of the address book after the `delete 5` command executes to be saved in the `addressBookStateList`, and the `currentStatePointer` is shifted to the newly inserted address book state.","lastModifiedDate":"2020-05-23"},{"lineNumber":479,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":480,"author":{"gitId":"-"},"content":"![UndoRedoState1](images/UndoRedoState1.png)","lastModifiedDate":"2020-05-23"},{"lineNumber":481,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":482,"author":{"gitId":"-"},"content":"Step 3. The user executes `add n/David …​` to add a new person. The `add` command also calls `Model#commitAddressBook()`, causing another modified address book state to be saved into the `addressBookStateList`.","lastModifiedDate":"2020-05-23"},{"lineNumber":483,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":484,"author":{"gitId":"-"},"content":"![UndoRedoState2](images/UndoRedoState2.png)","lastModifiedDate":"2020-05-23"},{"lineNumber":485,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":486,"author":{"gitId":"-"},"content":"\u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-info\"\u003e:information_source: **Note:** If a command fails its execution, it will not call `Model#commitAddressBook()`, so the address book state will not be saved into the `addressBookStateList`.","lastModifiedDate":"2020-05-23"},{"lineNumber":487,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":488,"author":{"gitId":"-"},"content":"\u003c/div\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":489,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":490,"author":{"gitId":"-"},"content":"Step 4. The user now decides that adding the person was a mistake, and decides to undo that action by executing the `undo` command. The `undo` command will call `Model#undoAddressBook()`, which will shift the `currentStatePointer` once to the left, pointing it to the previous address book state, and restores the address book to that state.","lastModifiedDate":"2020-05-23"},{"lineNumber":491,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":492,"author":{"gitId":"-"},"content":"![UndoRedoState3](images/UndoRedoState3.png)","lastModifiedDate":"2020-05-23"},{"lineNumber":493,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":494,"author":{"gitId":"-"},"content":"\u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-info\"\u003e:information_source: **Note:** If the `currentStatePointer` is at index 0, pointing to the initial AddressBook state, then there are no previous AddressBook states to restore. The `undo` command uses `Model#canUndoAddressBook()` to check if this is the case. If so, it will return an error to the user rather","lastModifiedDate":"2020-05-23"},{"lineNumber":495,"author":{"gitId":"-"},"content":"than attempting to perform the undo.","lastModifiedDate":"2020-05-23"},{"lineNumber":496,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":497,"author":{"gitId":"-"},"content":"\u003c/div\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":498,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":499,"author":{"gitId":"-"},"content":"The following sequence diagram shows how the undo operation works:","lastModifiedDate":"2020-05-23"},{"lineNumber":500,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":501,"author":{"gitId":"-"},"content":"![UndoSequenceDiagram](images/UndoSequenceDiagram.png)","lastModifiedDate":"2020-05-23"},{"lineNumber":502,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":503,"author":{"gitId":"-"},"content":"\u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-info\"\u003e:information_source: **Note:** The lifeline for `UndoCommand` should end at the destroy marker (X) but due to a limitation of PlantUML, the lifeline reaches the end of diagram.","lastModifiedDate":"2020-05-23"},{"lineNumber":504,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":505,"author":{"gitId":"-"},"content":"\u003c/div\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":506,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":507,"author":{"gitId":"-"},"content":"The `redo` command does the opposite — it calls `Model#redoAddressBook()`, which shifts the `currentStatePointer` once to the right, pointing to the previously undone state, and restores the address book to that state.","lastModifiedDate":"2020-05-23"},{"lineNumber":508,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":509,"author":{"gitId":"-"},"content":"\u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-info\"\u003e:information_source: **Note:** If the `currentStatePointer` is at index `addressBookStateList.size() - 1`, pointing to the latest address book state, then there are no undone AddressBook states to restore. The `redo` command uses `Model#canRedoAddressBook()` to check if this is the case. If so, it will return an error to the user rather than attempting to perform the redo.","lastModifiedDate":"2020-05-23"},{"lineNumber":510,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":511,"author":{"gitId":"-"},"content":"\u003c/div\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":512,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":513,"author":{"gitId":"-"},"content":"Step 5. The user then decides to execute the command `list`. Commands that do not modify the address book, such as `list`, will usually not call `Model#commitAddressBook()`, `Model#undoAddressBook()` or `Model#redoAddressBook()`. Thus, the `addressBookStateList` remains unchanged.","lastModifiedDate":"2020-05-23"},{"lineNumber":514,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":515,"author":{"gitId":"-"},"content":"![UndoRedoState4](images/UndoRedoState4.png)","lastModifiedDate":"2020-05-23"},{"lineNumber":516,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":517,"author":{"gitId":"-"},"content":"Step 6. The user executes `clear`, which calls `Model#commitAddressBook()`. Since the `currentStatePointer` is not pointing at the end of the `addressBookStateList`, all address book states after the `currentStatePointer` will be purged. Reason: It no longer makes sense to redo the `add n/David …​` command. This is the behavior that most modern desktop applications follow.","lastModifiedDate":"2020-05-23"},{"lineNumber":518,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":519,"author":{"gitId":"-"},"content":"![UndoRedoState5](images/UndoRedoState5.png)","lastModifiedDate":"2020-05-23"},{"lineNumber":520,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":521,"author":{"gitId":"-"},"content":"The following activity diagram summarizes what happens when a user executes a new command:","lastModifiedDate":"2020-05-23"},{"lineNumber":522,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":523,"author":{"gitId":"-"},"content":"\u003cimg src\u003d\"images/CommitActivityDiagram.png\" width\u003d\"250\" /\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":524,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":525,"author":{"gitId":"-"},"content":"#### Design considerations:","lastModifiedDate":"2021-07-31"},{"lineNumber":526,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":527,"author":{"gitId":"-"},"content":"**Aspect: How undo \u0026 redo executes:**","lastModifiedDate":"2021-07-31"},{"lineNumber":528,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":529,"author":{"gitId":"-"},"content":"* **Alternative 1 (current choice):** Saves the entire address book.","lastModifiedDate":"2020-05-23"},{"lineNumber":530,"author":{"gitId":"-"},"content":"    * Pros: Easy to implement.","lastModifiedDate":"2020-05-23"},{"lineNumber":531,"author":{"gitId":"-"},"content":"    * Cons: May have performance issues in terms of memory usage.","lastModifiedDate":"2020-05-23"},{"lineNumber":532,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":533,"author":{"gitId":"-"},"content":"* **Alternative 2:** Individual command knows how to undo/redo by","lastModifiedDate":"2020-05-23"},{"lineNumber":534,"author":{"gitId":"-"},"content":"  itself.","lastModifiedDate":"2020-05-23"},{"lineNumber":535,"author":{"gitId":"-"},"content":"    * Pros: Will use less memory (e.g. for `delete`, just save the person being deleted).","lastModifiedDate":"2020-05-23"},{"lineNumber":536,"author":{"gitId":"-"},"content":"    * Cons: We must ensure that the implementation of each individual command are correct.","lastModifiedDate":"2020-05-23"},{"lineNumber":537,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":538,"author":{"gitId":"-"},"content":"_{more aspects and alternatives to be added}_","lastModifiedDate":"2020-05-23"},{"lineNumber":539,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":540,"author":{"gitId":"cwq2326"},"content":"### Data archiving","lastModifiedDate":"2022-03-27"},{"lineNumber":541,"author":{"gitId":"cwq2326"},"content":"The archive mechanism implements the following sequence for the method call execute(\"archive\") on a LogicManager object.","lastModifiedDate":"2022-03-27"},{"lineNumber":542,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":543,"author":{"gitId":"cwq2326"},"content":"#### \u003cins\u003eHow the feature is implemented\u003cins/\u003e","lastModifiedDate":"2022-03-27"},{"lineNumber":544,"author":{"gitId":"cwq2326"},"content":"The archive command will save the archived file into a subdirectory of a directory relative to the address book file path.","lastModifiedDate":"2022-03-27"},{"lineNumber":545,"author":{"gitId":"cwq2326"},"content":"`ArchiveCommand#initArchiveFilePath()` will produce the archived file path using the directory path of the address book file as the base directory.","lastModifiedDate":"2022-03-27"},{"lineNumber":546,"author":{"gitId":"cwq2326"},"content":"e.g. If the address book file is saved in `[ROOT]/data`, then a directory called `archive` will be saved in `[ROOT]/data` and the","lastModifiedDate":"2022-03-27"},{"lineNumber":547,"author":{"gitId":"cwq2326"},"content":"subdirectories will be saved as `[ROOT/data/[LOCAL_PC_DATE]` and the archived file path is `[ROOT]/data/[LOCAL_PC_DATE]/[ARCHIVED_FILE]`.","lastModifiedDate":"2022-03-27"},{"lineNumber":548,"author":{"gitId":"cwq2326"},"content":"`FileUtil#createIfMissing()` will create a dummy file at the archive file path.","lastModifiedDate":"2022-03-27"},{"lineNumber":549,"author":{"gitId":"cwq2326"},"content":"The address book file will then be copied over to this dummy file at the archived file path using `Files#copy()`.","lastModifiedDate":"2022-03-27"},{"lineNumber":550,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":551,"author":{"gitId":"cwq2326"},"content":"Below are links for implementation of the classes and its methods:","lastModifiedDate":"2022-03-27"},{"lineNumber":552,"author":{"gitId":"cwq2326"},"content":"* [`FileUtil`](../src/main/java/seedu/address/commons/util/FileUtil.java)","lastModifiedDate":"2022-03-27"},{"lineNumber":553,"author":{"gitId":"cwq2326"},"content":"* [`ArchiveCommand`](../src/main/java/seedu/address/logic/commands/ArchiveCommand.java)","lastModifiedDate":"2022-03-27"},{"lineNumber":554,"author":{"gitId":"cwq2326"},"content":"* [`Files#copy()`](https://docs.oracle.com/javase/7/docs/api/java/nio/file/Files.html#copy(java.io.InputStream,%20java.nio.file.Path,%20java.nio.file.CopyOption...))","lastModifiedDate":"2022-03-27"},{"lineNumber":555,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":556,"author":{"gitId":"cwq2326"},"content":"**Sequence and Activity Diagram of Archive Feature is shown below:**","lastModifiedDate":"2022-03-27"},{"lineNumber":557,"author":{"gitId":"cwq2326"},"content":"![ArchiveCommandSequenceDiagram](images/ArchiveFeatureSequenceDiagram.png)","lastModifiedDate":"2022-03-27"},{"lineNumber":558,"author":{"gitId":"cwq2326"},"content":"![ArchiveCommandActivityDiagram](images/ArchiveFeatureActivityDiagram.png)","lastModifiedDate":"2022-03-27"},{"lineNumber":559,"author":{"gitId":"-"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2020-05-23"},{"lineNumber":560,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":561,"author":{"gitId":"-"},"content":"## **Documentation, logging, testing, configuration, dev-ops**","lastModifiedDate":"2020-06-07"},{"lineNumber":562,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":563,"author":{"gitId":"-"},"content":"* [Documentation guide](Documentation.md)","lastModifiedDate":"2020-06-07"},{"lineNumber":564,"author":{"gitId":"-"},"content":"* [Testing guide](Testing.md)","lastModifiedDate":"2020-06-07"},{"lineNumber":565,"author":{"gitId":"-"},"content":"* [Logging guide](Logging.md)","lastModifiedDate":"2020-06-07"},{"lineNumber":566,"author":{"gitId":"-"},"content":"* [Configuration guide](Configuration.md)","lastModifiedDate":"2020-06-07"},{"lineNumber":567,"author":{"gitId":"-"},"content":"* [DevOps guide](DevOps.md)","lastModifiedDate":"2020-06-07"},{"lineNumber":568,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":569,"author":{"gitId":"-"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2020-05-23"},{"lineNumber":570,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":571,"author":{"gitId":"-"},"content":"## **Appendix: Requirements**","lastModifiedDate":"2020-05-23"},{"lineNumber":572,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":573,"author":{"gitId":"-"},"content":"### Product scope","lastModifiedDate":"2020-05-23"},{"lineNumber":574,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":575,"author":{"gitId":"-"},"content":"**Target user profile**:","lastModifiedDate":"2020-05-23"},{"lineNumber":576,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":577,"author":{"gitId":"jiale-c"},"content":"* has a need to manage a significant number of contacts for contact-tracing of students","lastModifiedDate":"2022-02-24"},{"lineNumber":578,"author":{"gitId":"jiale-c"},"content":"* has a simple-to-use product to check on health status of students","lastModifiedDate":"2022-02-24"},{"lineNumber":579,"author":{"gitId":"-"},"content":"* prefer desktop apps over other types","lastModifiedDate":"2020-05-23"},{"lineNumber":580,"author":{"gitId":"-"},"content":"* can type fast","lastModifiedDate":"2020-05-23"},{"lineNumber":581,"author":{"gitId":"-"},"content":"* prefers typing to mouse interactions","lastModifiedDate":"2020-05-26"},{"lineNumber":582,"author":{"gitId":"-"},"content":"* is reasonably comfortable using CLI apps","lastModifiedDate":"2020-05-23"},{"lineNumber":583,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":584,"author":{"gitId":"jiale-c"},"content":"**Value proposition**:","lastModifiedDate":"2022-02-24"},{"lineNumber":585,"author":{"gitId":"jiale-c"},"content":"","lastModifiedDate":"2022-02-24"},{"lineNumber":586,"author":{"gitId":"jiale-c"},"content":"Keep track of students’ covid status. This is a central repository for covid status updating to ease the facilitation of","lastModifiedDate":"2022-02-24"},{"lineNumber":587,"author":{"gitId":"jiale-c"},"content":"management of NUS students across different faculties. It will be easier to read and update covid status.","lastModifiedDate":"2022-02-24"},{"lineNumber":588,"author":{"gitId":"jiale-c"},"content":"","lastModifiedDate":"2022-02-24"},{"lineNumber":589,"author":{"gitId":"jiale-c"},"content":"Every students’ info in one integrated application platform. The app will help to manage students across different","lastModifiedDate":"2022-02-24"},{"lineNumber":590,"author":{"gitId":"jiale-c"},"content":"faculties within NUS (no support for other schools).","lastModifiedDate":"2022-02-24"},{"lineNumber":591,"author":{"gitId":"jiale-c"},"content":"","lastModifiedDate":"2022-02-24"},{"lineNumber":592,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":593,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":594,"author":{"gitId":"-"},"content":"### User stories","lastModifiedDate":"2020-06-07"},{"lineNumber":595,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":596,"author":{"gitId":"-"},"content":"Priorities: High (must have) - `* * *`, Medium (nice to have) - `* *`, Low (unlikely to have) - `*`","lastModifiedDate":"2020-05-23"},{"lineNumber":597,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":598,"author":{"gitId":"-"},"content":"| Priority | As a …​                                 | I want to …​                     | So that I can…​                                                |","lastModifiedDate":"2020-05-23"},{"lineNumber":599,"author":{"gitId":"-"},"content":"| -------- | ------------------------------------------ | ------------------------------ | ---------------------------------------------------------------------- |","lastModifiedDate":"2020-05-23"},{"lineNumber":600,"author":{"gitId":"jiale-c"},"content":"| `* * *`  | Hall admin                                 | obtain student contact information | quickly contact students if required                               |","lastModifiedDate":"2022-03-24"},{"lineNumber":601,"author":{"gitId":"jiale-c"},"content":"| `* * *`  | Hall admin                                 | get a list of students with covid  |  find out any possible hotspots                                    |","lastModifiedDate":"2022-03-24"},{"lineNumber":602,"author":{"gitId":"jiale-c"},"content":"| `* * *`  | Hall admin                                 | save the data locally              | for easy dissemination of information to other admins              |","lastModifiedDate":"2022-03-24"},{"lineNumber":603,"author":{"gitId":"jiale-c"},"content":"| `* * *`  | Hall admin                                 | find details of a particular student | follow up with checking on the student                           |","lastModifiedDate":"2022-03-24"},{"lineNumber":604,"author":{"gitId":"jiale-c"},"content":"| `* * *`  | Hall admin                                 | add a student’s details into the system | store their details for reference                             |","lastModifiedDate":"2022-03-24"},{"lineNumber":605,"author":{"gitId":"jiale-c"},"content":"| `* * *`  | First time user                            | add a list of students with their info into the system  | have a centralised hub for covid health status |","lastModifiedDate":"2022-02-24"},{"lineNumber":606,"author":{"gitId":"jiale-c"},"content":"| `* * *`  | Hall admin                                 | delete a user from the system      | remove wrongly keyed in inputs from the system                     |","lastModifiedDate":"2022-03-24"},{"lineNumber":607,"author":{"gitId":"jiale-c"},"content":"| `* * *`  | Hall admin                                 | clear the system database          | quickly restore the initial state of the system and to start on a clean slate again             |","lastModifiedDate":"2022-03-24"},{"lineNumber":608,"author":{"gitId":"jiale-c"},"content":"| `* * *`  | Hall admin                                 | edit a contact’s information       | can modify any change in contact details regarding a user          |","lastModifiedDate":"2022-03-24"},{"lineNumber":609,"author":{"gitId":"jiale-c"},"content":"| `* * *`  | Professors                                 | get the statistics of covid cases among different groups of students | can use for further medical research |","lastModifiedDate":"2022-03-24"},{"lineNumber":610,"author":{"gitId":"jiale-c"},"content":"| `* *`    | Hall admin                                 | seek help if unfamiliar with Tracey | straighten out any uncertainties regarding the usage of the system |","lastModifiedDate":"2022-03-24"},{"lineNumber":611,"author":{"gitId":"jiale-c"},"content":"| `* *`    | Hall admin                                 | easily keep track and update  the covid status of students  | monitor the block that has the highest incidences of Covid-19 |","lastModifiedDate":"2022-03-24"},{"lineNumber":612,"author":{"gitId":"jiale-c"},"content":"| `* *`    | Hall admin                                 | store the date when the student tested positive for covid   | check the duration for which the student has to be isolated for                |","lastModifiedDate":"2022-03-24"},{"lineNumber":613,"author":{"gitId":"jiale-c"},"content":"| `* *`    | Busy admin                                 | retrieve a list of all email addresses | email them to know their well-being                                           |","lastModifiedDate":"2022-03-24"},{"lineNumber":614,"author":{"gitId":"jiale-c"},"content":"| `* *`    | Hall admin                                 | categorise contacts according to faculty | I am happy                                                   |","lastModifiedDate":"2022-03-24"},{"lineNumber":615,"author":{"gitId":"jiale-c"},"content":"| `* *`    | Hall admin                                 | filter out those students with covid easily     | plan for hall events   |","lastModifiedDate":"2022-03-24"},{"lineNumber":616,"author":{"gitId":"jiale-c"},"content":"| `* *`    | Hall admin                                 | easily export data from the application  | to show my boss                                              |","lastModifiedDate":"2022-03-24"},{"lineNumber":617,"author":{"gitId":"jiale-c"},"content":"| `* *`    | UHC people                                 | get the number of students with covid    | prepare enough medical resources accordingly                 |","lastModifiedDate":"2022-02-24"},{"lineNumber":618,"author":{"gitId":"jiale-c"},"content":"| `* *`    | Hall admin                                 | easy method to Import data into the app  | save the hassle                                              |","lastModifiedDate":"2022-03-24"},{"lineNumber":619,"author":{"gitId":"jiale-c"},"content":"| `* *`    | Hostel Management people                   | retrieve the number of students with covid in the different hostel  | Can plan out the number of rooms for covid use like quarantine etc.                |","lastModifiedDate":"2022-03-24"},{"lineNumber":620,"author":{"gitId":"jiale-c"},"content":"| `* *`    | User                                       | have a quick keyword search     | to find a specific person if unsure of his full name or complete contact number                |","lastModifiedDate":"2022-02-24"},{"lineNumber":621,"author":{"gitId":"jiale-c"},"content":"| `* `     | Hall leaders                               | get the name of students with covid     | check if their CCA members have Covid                                   |","lastModifiedDate":"2022-03-24"},{"lineNumber":622,"author":{"gitId":"jiale-c"},"content":"| `* `     | Residence Fellow                           | know covid status of students and staffs     | come up with hall policies                                   |","lastModifiedDate":"2022-03-24"},{"lineNumber":623,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":624,"author":{"gitId":"-"},"content":"### Use cases","lastModifiedDate":"2020-06-07"},{"lineNumber":625,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":626,"author":{"gitId":"jiale-c"},"content":"(For all use cases below, the **System** is the `Tracey` and the **Actor** is the `user`, unless specified otherwise)","lastModifiedDate":"2022-02-24"},{"lineNumber":627,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":628,"author":{"gitId":"jiale-c"},"content":"### Use case: UC01 - Delete a student","lastModifiedDate":"2022-03-25"},{"lineNumber":629,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":630,"author":{"gitId":"-"},"content":"**MSS**","lastModifiedDate":"2020-05-23"},{"lineNumber":631,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":632,"author":{"gitId":"tanchinkiat99"},"content":"1.  User requests to list students.","lastModifiedDate":"2022-03-25"},{"lineNumber":633,"author":{"gitId":"tanchinkiat99"},"content":"2.  Tracey shows a list of students.","lastModifiedDate":"2022-03-25"},{"lineNumber":634,"author":{"gitId":"tanchinkiat99"},"content":"3.  User requests to delete a specific student in the list.","lastModifiedDate":"2022-03-25"},{"lineNumber":635,"author":{"gitId":"tanchinkiat99"},"content":"4.  Tracey deletes the person.","lastModifiedDate":"2022-03-25"},{"lineNumber":636,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":637,"author":{"gitId":"-"},"content":"    Use case ends.","lastModifiedDate":"2020-05-23"},{"lineNumber":638,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":639,"author":{"gitId":"-"},"content":"**Extensions**","lastModifiedDate":"2020-05-23"},{"lineNumber":640,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":641,"author":{"gitId":"-"},"content":"* 2a. The list is empty.","lastModifiedDate":"2020-05-23"},{"lineNumber":642,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":643,"author":{"gitId":"-"},"content":"  Use case ends.","lastModifiedDate":"2020-05-23"},{"lineNumber":644,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":645,"author":{"gitId":"-"},"content":"* 3a. The given index is invalid.","lastModifiedDate":"2020-05-23"},{"lineNumber":646,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":647,"author":{"gitId":"jiale-c"},"content":"    * 3a1. Tracey shows an error message.","lastModifiedDate":"2022-02-24"},{"lineNumber":648,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":649,"author":{"gitId":"-"},"content":"      Use case resumes at step 2.","lastModifiedDate":"2020-05-23"},{"lineNumber":650,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":651,"author":{"gitId":"jiale-c"},"content":"### Use case: UC02 - Search for a student","lastModifiedDate":"2022-03-25"},{"lineNumber":652,"author":{"gitId":"jiale-c"},"content":"","lastModifiedDate":"2022-02-24"},{"lineNumber":653,"author":{"gitId":"jiale-c"},"content":"**MSS**","lastModifiedDate":"2022-02-24"},{"lineNumber":654,"author":{"gitId":"jiale-c"},"content":"","lastModifiedDate":"2022-02-24"},{"lineNumber":655,"author":{"gitId":"tanchinkiat99"},"content":"1.  User requests to search for student.","lastModifiedDate":"2022-03-25"},{"lineNumber":656,"author":{"gitId":"tanchinkiat99"},"content":"2.  Tracey shows the info of student with that matching name.","lastModifiedDate":"2022-03-25"},{"lineNumber":657,"author":{"gitId":"jiale-c"},"content":"","lastModifiedDate":"2022-02-24"},{"lineNumber":658,"author":{"gitId":"jiale-c"},"content":"    Use case ends.","lastModifiedDate":"2022-02-24"},{"lineNumber":659,"author":{"gitId":"jiale-c"},"content":"","lastModifiedDate":"2022-02-24"},{"lineNumber":660,"author":{"gitId":"jiale-c"},"content":"**Extensions**","lastModifiedDate":"2022-02-24"},{"lineNumber":661,"author":{"gitId":"jiale-c"},"content":"","lastModifiedDate":"2022-02-24"},{"lineNumber":662,"author":{"gitId":"jiale-c"},"content":"* 2a. The list does not contain student(s) of that name.","lastModifiedDate":"2022-02-24"},{"lineNumber":663,"author":{"gitId":"jiale-c"},"content":"","lastModifiedDate":"2022-02-24"},{"lineNumber":664,"author":{"gitId":"jiale-c"},"content":"  Use case ends.","lastModifiedDate":"2022-02-24"},{"lineNumber":665,"author":{"gitId":"jiale-c"},"content":"","lastModifiedDate":"2022-02-24"},{"lineNumber":666,"author":{"gitId":"jiale-c"},"content":"* 2b. The given student name exists multiple places on the list.","lastModifiedDate":"2022-02-24"},{"lineNumber":667,"author":{"gitId":"jiale-c"},"content":"","lastModifiedDate":"2022-02-24"},{"lineNumber":668,"author":{"gitId":"jiale-c"},"content":"    * 2b1. Tracey shows a list of students with the name with their info.","lastModifiedDate":"2022-02-24"},{"lineNumber":669,"author":{"gitId":"jiale-c"},"content":"","lastModifiedDate":"2022-02-24"},{"lineNumber":670,"author":{"gitId":"jiale-c"},"content":"      Use case ends.","lastModifiedDate":"2022-02-24"},{"lineNumber":671,"author":{"gitId":"jiale-c"},"content":"","lastModifiedDate":"2022-02-24"},{"lineNumber":672,"author":{"gitId":"jiale-c"},"content":"### Use case: UC03 - Add a student into Tracey","lastModifiedDate":"2022-03-25"},{"lineNumber":673,"author":{"gitId":"jiale-c"},"content":"","lastModifiedDate":"2022-02-24"},{"lineNumber":674,"author":{"gitId":"jiale-c"},"content":"**MSS**","lastModifiedDate":"2022-02-24"},{"lineNumber":675,"author":{"gitId":"jiale-c"},"content":"","lastModifiedDate":"2022-02-24"},{"lineNumber":676,"author":{"gitId":"tanchinkiat99"},"content":"1.  User requests to add the student with his/her details such as year, faculty, covid status.","lastModifiedDate":"2022-03-25"},{"lineNumber":677,"author":{"gitId":"tanchinkiat99"},"content":"2.  Tracey adds the student with all his/her details into its database.","lastModifiedDate":"2022-03-25"},{"lineNumber":678,"author":{"gitId":"tanchinkiat99"},"content":"3.  Tracey shows the info of student with that matching name.","lastModifiedDate":"2022-03-25"},{"lineNumber":679,"author":{"gitId":"jiale-c"},"content":"","lastModifiedDate":"2022-02-24"},{"lineNumber":680,"author":{"gitId":"jiale-c"},"content":"    Use case ends.","lastModifiedDate":"2022-02-24"},{"lineNumber":681,"author":{"gitId":"jiale-c"},"content":"","lastModifiedDate":"2022-02-24"},{"lineNumber":682,"author":{"gitId":"jiale-c"},"content":"**Extensions**","lastModifiedDate":"2022-02-24"},{"lineNumber":683,"author":{"gitId":"jiale-c"},"content":"","lastModifiedDate":"2022-02-24"},{"lineNumber":684,"author":{"gitId":"jiale-c"},"content":"* 1a. The student info has an invalid format.","lastModifiedDate":"2022-02-24"},{"lineNumber":685,"author":{"gitId":"jiale-c"},"content":"","lastModifiedDate":"2022-02-24"},{"lineNumber":686,"author":{"gitId":"jiale-c"},"content":"    * 1a1. Tracey will inform user that he/she did not provide the correct information.","lastModifiedDate":"2022-02-24"},{"lineNumber":687,"author":{"gitId":"jiale-c"},"content":"","lastModifiedDate":"2022-02-24"},{"lineNumber":688,"author":{"gitId":"jiale-c"},"content":"    * 1a2. User provide the correct details in the correct format.","lastModifiedDate":"2022-02-24"},{"lineNumber":689,"author":{"gitId":"jiale-c"},"content":"","lastModifiedDate":"2022-02-24"},{"lineNumber":690,"author":{"gitId":"tanchinkiat99"},"content":"        Use case ends.","lastModifiedDate":"2022-03-25"},{"lineNumber":691,"author":{"gitId":"tanchinkiat99"},"content":"","lastModifiedDate":"2022-03-25"},{"lineNumber":692,"author":{"gitId":"tanchinkiat99"},"content":"* 1b. The student to be added already exists in the list by Tracey.","lastModifiedDate":"2022-03-25"},{"lineNumber":693,"author":{"gitId":"jiale-c"},"content":"","lastModifiedDate":"2022-02-24"},{"lineNumber":694,"author":{"gitId":"tanchinkiat99"},"content":"    * 1b1. Tracey inform user that the contact exists in her database.","lastModifiedDate":"2022-03-25"},{"lineNumber":695,"author":{"gitId":"tanchinkiat99"},"content":"","lastModifiedDate":"2022-03-25"},{"lineNumber":696,"author":{"gitId":"tanchinkiat99"},"content":"        Use case ends.","lastModifiedDate":"2022-03-25"},{"lineNumber":697,"author":{"gitId":"jiale-c"},"content":"","lastModifiedDate":"2022-02-24"},{"lineNumber":698,"author":{"gitId":"jiale-c"},"content":"* 1c. User adds multiple students in one go.","lastModifiedDate":"2022-02-24"},{"lineNumber":699,"author":{"gitId":"jiale-c"},"content":"","lastModifiedDate":"2022-02-24"},{"lineNumber":700,"author":{"gitId":"jiale-c"},"content":"    * 1c1. Tracey will list out a list of new students added with their info.","lastModifiedDate":"2022-02-24"},{"lineNumber":701,"author":{"gitId":"jiale-c"},"content":"","lastModifiedDate":"2022-02-24"},{"lineNumber":702,"author":{"gitId":"tanchinkiat99"},"content":"        Use case ends.","lastModifiedDate":"2022-03-25"},{"lineNumber":703,"author":{"gitId":"tanchinkiat99"},"content":"","lastModifiedDate":"2022-03-25"},{"lineNumber":704,"author":{"gitId":"cwq2326"},"content":"* 1d. User uses wrong pre-defined constants for fields such as faculty or covid status.","lastModifiedDate":"2022-03-16"},{"lineNumber":705,"author":{"gitId":"cwq2326"},"content":"","lastModifiedDate":"2022-03-16"},{"lineNumber":706,"author":{"gitId":"cwq2326"},"content":"    * 1d1. Tracey will provide a list of pre-defined constants for the user.","lastModifiedDate":"2022-03-16"},{"lineNumber":707,"author":{"gitId":"cwq2326"},"content":"","lastModifiedDate":"2022-03-16"},{"lineNumber":708,"author":{"gitId":"tanchinkiat99"},"content":"        Use case ends.","lastModifiedDate":"2022-03-25"},{"lineNumber":709,"author":{"gitId":"jiale-c"},"content":"","lastModifiedDate":"2022-02-24"},{"lineNumber":710,"author":{"gitId":"jiale-c"},"content":"### Use case: UC04 - Edit information of a student","lastModifiedDate":"2022-03-25"},{"lineNumber":711,"author":{"gitId":"jiale-c"},"content":"","lastModifiedDate":"2022-02-24"},{"lineNumber":712,"author":{"gitId":"jiale-c"},"content":"**MSS**","lastModifiedDate":"2022-02-24"},{"lineNumber":713,"author":{"gitId":"jiale-c"},"content":"","lastModifiedDate":"2022-02-24"},{"lineNumber":714,"author":{"gitId":"tanchinkiat99"},"content":"1.  User requests to list students.","lastModifiedDate":"2022-03-25"},{"lineNumber":715,"author":{"gitId":"tanchinkiat99"},"content":"2.  Tracey shows a list of students.","lastModifiedDate":"2022-03-25"},{"lineNumber":716,"author":{"gitId":"tanchinkiat99"},"content":"3.  User requests to edit a specific student in the list.","lastModifiedDate":"2022-03-25"},{"lineNumber":717,"author":{"gitId":"tanchinkiat99"},"content":"4.  Tracey updates details of the person.","lastModifiedDate":"2022-03-25"},{"lineNumber":718,"author":{"gitId":"jiale-c"},"content":"","lastModifiedDate":"2022-02-24"},{"lineNumber":719,"author":{"gitId":"jiale-c"},"content":"    Use case ends.","lastModifiedDate":"2022-02-24"},{"lineNumber":720,"author":{"gitId":"jiale-c"},"content":"","lastModifiedDate":"2022-02-24"},{"lineNumber":721,"author":{"gitId":"jiale-c"},"content":"**Extensions**","lastModifiedDate":"2022-02-24"},{"lineNumber":722,"author":{"gitId":"jiale-c"},"content":"","lastModifiedDate":"2022-02-24"},{"lineNumber":723,"author":{"gitId":"tanchinkiat99"},"content":"* 1a. The list is empty.","lastModifiedDate":"2022-03-25"},{"lineNumber":724,"author":{"gitId":"jiale-c"},"content":"","lastModifiedDate":"2022-02-24"},{"lineNumber":725,"author":{"gitId":"tanchinkiat99"},"content":"    * 1a1. Tracey shows an empty list.","lastModifiedDate":"2022-03-25"},{"lineNumber":726,"author":{"gitId":"jiale-c"},"content":"","lastModifiedDate":"2022-02-24"},{"lineNumber":727,"author":{"gitId":"jiale-c"},"content":"        Use case ends.","lastModifiedDate":"2022-02-24"},{"lineNumber":728,"author":{"gitId":"jiale-c"},"content":"","lastModifiedDate":"2022-02-24"},{"lineNumber":729,"author":{"gitId":"tanchinkiat99"},"content":"* 2a. The given student name exists multiple places on the list.","lastModifiedDate":"2022-03-25"},{"lineNumber":730,"author":{"gitId":"jiale-c"},"content":"","lastModifiedDate":"2022-02-24"},{"lineNumber":731,"author":{"gitId":"tanchinkiat99"},"content":"    * 2a1. Tracey will inform user that he/she did not provide the information in the correct format.","lastModifiedDate":"2022-03-25"},{"lineNumber":732,"author":{"gitId":"tanchinkiat99"},"content":"","lastModifiedDate":"2022-03-25"},{"lineNumber":733,"author":{"gitId":"tanchinkiat99"},"content":"    * 2a2. User will key in the correct format to edit the student\u0027s details.","lastModifiedDate":"2022-03-25"},{"lineNumber":734,"author":{"gitId":"jiale-c"},"content":"","lastModifiedDate":"2022-02-24"},{"lineNumber":735,"author":{"gitId":"jiale-c"},"content":"        Use case ends.","lastModifiedDate":"2022-02-24"},{"lineNumber":736,"author":{"gitId":"jiale-c"},"content":"","lastModifiedDate":"2022-02-24"},{"lineNumber":737,"author":{"gitId":"jiale-c"},"content":"### Use case: UC05 - Clear the system database","lastModifiedDate":"2022-03-25"},{"lineNumber":738,"author":{"gitId":"jiale-c"},"content":"","lastModifiedDate":"2022-02-24"},{"lineNumber":739,"author":{"gitId":"jiale-c"},"content":"**MSS**","lastModifiedDate":"2022-02-24"},{"lineNumber":740,"author":{"gitId":"jiale-c"},"content":"","lastModifiedDate":"2022-02-24"},{"lineNumber":741,"author":{"gitId":"tanchinkiat99"},"content":"1.  User requests to clear all students.","lastModifiedDate":"2022-03-25"},{"lineNumber":742,"author":{"gitId":"tanchinkiat99"},"content":"2.  Tracey deletes all students from its database.","lastModifiedDate":"2022-03-25"},{"lineNumber":743,"author":{"gitId":"tanchinkiat99"},"content":"3.  Tracey shows an empty list.","lastModifiedDate":"2022-03-25"},{"lineNumber":744,"author":{"gitId":"jiale-c"},"content":"","lastModifiedDate":"2022-02-24"},{"lineNumber":745,"author":{"gitId":"jiale-c"},"content":"    Use case ends.","lastModifiedDate":"2022-02-24"},{"lineNumber":746,"author":{"gitId":"jiale-c"},"content":"","lastModifiedDate":"2022-02-24"},{"lineNumber":747,"author":{"gitId":"jiale-c"},"content":"","lastModifiedDate":"2022-02-24"},{"lineNumber":748,"author":{"gitId":"jiale-c"},"content":"### Use case: UC06 - Summarize the system database for number of Covid patient","lastModifiedDate":"2022-03-25"},{"lineNumber":749,"author":{"gitId":"jiale-c"},"content":"","lastModifiedDate":"2022-02-24"},{"lineNumber":750,"author":{"gitId":"tanchinkiat99"},"content":"**MSS**","lastModifiedDate":"2022-03-25"},{"lineNumber":751,"author":{"gitId":"tanchinkiat99"},"content":"","lastModifiedDate":"2022-03-25"},{"lineNumber":752,"author":{"gitId":"tanchinkiat99"},"content":"1.  User requests to summarise the number of students with covid.","lastModifiedDate":"2022-03-25"},{"lineNumber":753,"author":{"gitId":"tanchinkiat99"},"content":"2.  Tracey shows a pie chart and statements showing the proportion of students with different covid statuses.","lastModifiedDate":"2022-03-25"},{"lineNumber":754,"author":{"gitId":"jiale-c"},"content":"","lastModifiedDate":"2022-02-24"},{"lineNumber":755,"author":{"gitId":"jiale-c"},"content":"    Use case ends.","lastModifiedDate":"2022-02-24"},{"lineNumber":756,"author":{"gitId":"jiale-c"},"content":"","lastModifiedDate":"2022-02-24"},{"lineNumber":757,"author":{"gitId":"jiale-c"},"content":"","lastModifiedDate":"2022-02-24"},{"lineNumber":758,"author":{"gitId":"jiale-c"},"content":"### Use case: UC07 - List all students","lastModifiedDate":"2022-03-25"},{"lineNumber":759,"author":{"gitId":"jiale-c"},"content":"","lastModifiedDate":"2022-02-24"},{"lineNumber":760,"author":{"gitId":"jiale-c"},"content":"**MSS**","lastModifiedDate":"2022-02-24"},{"lineNumber":761,"author":{"gitId":"jiale-c"},"content":"","lastModifiedDate":"2022-02-24"},{"lineNumber":762,"author":{"gitId":"tanchinkiat99"},"content":"1.  User requests to list all students.","lastModifiedDate":"2022-03-25"},{"lineNumber":763,"author":{"gitId":"tanchinkiat99"},"content":"2.  Tracey shows a list of students.","lastModifiedDate":"2022-03-25"},{"lineNumber":764,"author":{"gitId":"jiale-c"},"content":"","lastModifiedDate":"2022-02-24"},{"lineNumber":765,"author":{"gitId":"jiale-c"},"content":"    Use case ends.","lastModifiedDate":"2022-02-24"},{"lineNumber":766,"author":{"gitId":"jiale-c"},"content":"","lastModifiedDate":"2022-02-24"},{"lineNumber":767,"author":{"gitId":"jiale-c"},"content":"**Extensions**","lastModifiedDate":"2022-02-24"},{"lineNumber":768,"author":{"gitId":"jiale-c"},"content":"","lastModifiedDate":"2022-02-24"},{"lineNumber":769,"author":{"gitId":"tanchinkiat99"},"content":"* 1a. The list is empty.","lastModifiedDate":"2022-03-25"},{"lineNumber":770,"author":{"gitId":"tanchinkiat99"},"content":"    * 1a1. Tracey shows an empty list.","lastModifiedDate":"2022-03-25"},{"lineNumber":771,"author":{"gitId":"jiale-c"},"content":"","lastModifiedDate":"2022-02-24"},{"lineNumber":772,"author":{"gitId":"jiale-c"},"content":"  Use case ends.","lastModifiedDate":"2022-02-24"},{"lineNumber":773,"author":{"gitId":"jiale-c"},"content":"","lastModifiedDate":"2022-02-24"},{"lineNumber":774,"author":{"gitId":"jiale-c"},"content":"### Use case: UC08 - Request for help from Tracey","lastModifiedDate":"2022-03-25"},{"lineNumber":775,"author":{"gitId":"jiale-c"},"content":"","lastModifiedDate":"2022-02-24"},{"lineNumber":776,"author":{"gitId":"jiale-c"},"content":"**MSS**","lastModifiedDate":"2022-02-24"},{"lineNumber":777,"author":{"gitId":"jiale-c"},"content":"","lastModifiedDate":"2022-02-24"},{"lineNumber":778,"author":{"gitId":"jiale-c"},"content":"1.  User requests Tracey for more details on what she can do.","lastModifiedDate":"2022-02-24"},{"lineNumber":779,"author":{"gitId":"jiale-c"},"content":"2.  Tracey redirects user to user guide.","lastModifiedDate":"2022-02-24"},{"lineNumber":780,"author":{"gitId":"jiale-c"},"content":"","lastModifiedDate":"2022-02-24"},{"lineNumber":781,"author":{"gitId":"jiale-c"},"content":"    Use case ends.","lastModifiedDate":"2022-02-24"},{"lineNumber":782,"author":{"gitId":"jiale-c"},"content":"","lastModifiedDate":"2022-02-24"},{"lineNumber":783,"author":{"gitId":"jiale-c"},"content":"**Extensions**","lastModifiedDate":"2022-02-24"},{"lineNumber":784,"author":{"gitId":"jiale-c"},"content":"","lastModifiedDate":"2022-02-24"},{"lineNumber":785,"author":{"gitId":"jiale-c"},"content":"* 2a. The user guide is empty.","lastModifiedDate":"2022-02-24"},{"lineNumber":786,"author":{"gitId":"jiale-c"},"content":"","lastModifiedDate":"2022-02-24"},{"lineNumber":787,"author":{"gitId":"jiale-c"},"content":"  Use case ends.","lastModifiedDate":"2022-02-24"},{"lineNumber":788,"author":{"gitId":"jiale-c"},"content":"","lastModifiedDate":"2022-02-24"},{"lineNumber":789,"author":{"gitId":"tanchinkiat99"},"content":"### Use case: UC09 - Filter a list of students of specified covid status, and/or faculty, and/or block","lastModifiedDate":"2022-03-25"},{"lineNumber":790,"author":{"gitId":"jiale-c"},"content":"","lastModifiedDate":"2022-02-24"},{"lineNumber":791,"author":{"gitId":"jiale-c"},"content":"**MSS**","lastModifiedDate":"2022-02-24"},{"lineNumber":792,"author":{"gitId":"jiale-c"},"content":"","lastModifiedDate":"2022-02-24"},{"lineNumber":793,"author":{"gitId":"tanchinkiat99"},"content":"1. User wants to filter a list of students of a specified covid status, faculty and block.","lastModifiedDate":"2022-03-25"},{"lineNumber":794,"author":{"gitId":"tanchinkiat99"},"content":"2. User keys in the details of students to filter out.","lastModifiedDate":"2022-03-25"},{"lineNumber":795,"author":{"gitId":"tanchinkiat99"},"content":"3. Tracey returns a list of students of the specified covid status, faculty and block.","lastModifiedDate":"2022-03-25"},{"lineNumber":796,"author":{"gitId":"jiale-c"},"content":"","lastModifiedDate":"2022-02-24"},{"lineNumber":797,"author":{"gitId":"jiale-c"},"content":"    Use case ends.","lastModifiedDate":"2022-02-24"},{"lineNumber":798,"author":{"gitId":"jiale-c"},"content":"","lastModifiedDate":"2022-02-24"},{"lineNumber":799,"author":{"gitId":"jiale-c"},"content":"**Extensions**","lastModifiedDate":"2022-02-24"},{"lineNumber":800,"author":{"gitId":"jiale-c"},"content":"","lastModifiedDate":"2022-02-24"},{"lineNumber":801,"author":{"gitId":"tanchinkiat99"},"content":"* 2a. Tracey detects invalid or empty arguments in user input.","lastModifiedDate":"2022-03-25"},{"lineNumber":802,"author":{"gitId":"tanchinkiat99"},"content":"    * 2a1. Tracey displays a error message and shows the correct input format.","lastModifiedDate":"2022-03-25"},{"lineNumber":803,"author":{"gitId":"tanchinkiat99"},"content":"","lastModifiedDate":"2022-03-25"},{"lineNumber":804,"author":{"gitId":"tanchinkiat99"},"content":"        Use case ends.","lastModifiedDate":"2022-03-25"},{"lineNumber":805,"author":{"gitId":"tanchinkiat99"},"content":"","lastModifiedDate":"2022-03-25"},{"lineNumber":806,"author":{"gitId":"tanchinkiat99"},"content":"* 2b. User only inputs details for one or two of the fields (covid status, faculty or block).","lastModifiedDate":"2022-03-25"},{"lineNumber":807,"author":{"gitId":"tanchinkiat99"},"content":"    * 2b1. Tracey returns a list of students of the specified details.","lastModifiedDate":"2022-03-25"},{"lineNumber":808,"author":{"gitId":"jiale-c"},"content":"","lastModifiedDate":"2022-02-24"},{"lineNumber":809,"author":{"gitId":"jiale-c"},"content":"        Use case ends.","lastModifiedDate":"2022-02-24"},{"lineNumber":810,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":811,"author":{"gitId":"jiale-c"},"content":"### Use case: UC10 - Summarise all students for some overview of covid situation","lastModifiedDate":"2022-03-25"},{"lineNumber":812,"author":{"gitId":"jiale-c"},"content":"","lastModifiedDate":"2022-03-25"},{"lineNumber":813,"author":{"gitId":"jiale-c"},"content":"**MSS**","lastModifiedDate":"2022-03-25"},{"lineNumber":814,"author":{"gitId":"jiale-c"},"content":"","lastModifiedDate":"2022-03-25"},{"lineNumber":815,"author":{"gitId":"jiale-c"},"content":"1.  User requests to summarise all students to get how the hall is doing with covid","lastModifiedDate":"2022-03-25"},{"lineNumber":816,"author":{"gitId":"jiale-c"},"content":"2.  Tracey shows a pop-up window of pie charts representing the covid situation in each hall block","lastModifiedDate":"2022-03-25"},{"lineNumber":817,"author":{"gitId":"jiale-c"},"content":"","lastModifiedDate":"2022-03-25"},{"lineNumber":818,"author":{"gitId":"jiale-c"},"content":"    Use case ends.","lastModifiedDate":"2022-03-25"},{"lineNumber":819,"author":{"gitId":"jiale-c"},"content":"","lastModifiedDate":"2022-03-25"},{"lineNumber":820,"author":{"gitId":"jiale-c"},"content":"**Extensions**","lastModifiedDate":"2022-03-25"},{"lineNumber":821,"author":{"gitId":"jiale-c"},"content":"","lastModifiedDate":"2022-03-25"},{"lineNumber":822,"author":{"gitId":"jiale-c"},"content":"* 2a. There is no data in database for Tracey to form a helpful response.","lastModifiedDate":"2022-03-25"},{"lineNumber":823,"author":{"gitId":"jiale-c"},"content":"","lastModifiedDate":"2022-03-25"},{"lineNumber":824,"author":{"gitId":"jiale-c"},"content":"  Use case ends.","lastModifiedDate":"2022-03-25"},{"lineNumber":825,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-03-25"},{"lineNumber":826,"author":{"gitId":"-"},"content":"### Non-Functional Requirements","lastModifiedDate":"2020-05-23"},{"lineNumber":827,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":828,"author":{"gitId":"kevinkuo0320"},"content":"1.  Application is offered free.","lastModifiedDate":"2022-02-28"},{"lineNumber":829,"author":{"gitId":"kevinkuo0320"},"content":"2.  Has storage function","lastModifiedDate":"2022-02-28"},{"lineNumber":830,"author":{"gitId":"kevinkuo0320"},"content":"3. Source code is open source","lastModifiedDate":"2022-02-28"},{"lineNumber":831,"author":{"gitId":"kevinkuo0320"},"content":"4. The user interface should be intuitive enough for users who are not IT-savvy.","lastModifiedDate":"2022-02-28"},{"lineNumber":832,"author":{"gitId":"kevinkuo0320"},"content":"5. Should be compatible with Mac and Windows","lastModifiedDate":"2022-02-28"},{"lineNumber":833,"author":{"gitId":"kevinkuo0320"},"content":"6. A record table should be able to have up to 5000 NUS students.","lastModifiedDate":"2022-02-28"},{"lineNumber":834,"author":{"gitId":"kevinkuo0320"},"content":"7. the application should work on both 32-bit and 64-bit environments.","lastModifiedDate":"2022-02-28"},{"lineNumber":835,"author":{"gitId":"kevinkuo0320"},"content":"8. The application will always answer the user.","lastModifiedDate":"2022-02-28"},{"lineNumber":836,"author":{"gitId":"kevinkuo0320"},"content":"9. The application cannot handle image input.","lastModifiedDate":"2022-02-28"},{"lineNumber":837,"author":{"gitId":"kevinkuo0320"},"content":"10. The application cannot store 2 or more schools into a instance of application","lastModifiedDate":"2022-02-28"},{"lineNumber":838,"author":{"gitId":"kevinkuo0320"},"content":"11. Product is not required to handle printing of reports","lastModifiedDate":"2022-02-28"},{"lineNumber":839,"author":{"gitId":"kevinkuo0320"},"content":"12. Product should respond within 10 seconds.","lastModifiedDate":"2022-02-28"},{"lineNumber":840,"author":{"gitId":"kevinkuo0320"},"content":"","lastModifiedDate":"2022-02-28"},{"lineNumber":841,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":842,"author":{"gitId":"-"},"content":"*{More to be added}*","lastModifiedDate":"2020-05-23"},{"lineNumber":843,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":844,"author":{"gitId":"-"},"content":"### Glossary","lastModifiedDate":"2020-05-23"},{"lineNumber":845,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":846,"author":{"gitId":"-"},"content":"* **Mainstream OS**: Windows, Linux, Unix, OS-X","lastModifiedDate":"2020-05-23"},{"lineNumber":847,"author":{"gitId":"-"},"content":"* **Private contact detail**: A contact detail that is not meant to be shared with others","lastModifiedDate":"2020-05-23"},{"lineNumber":848,"author":{"gitId":"tanchinkiat99"},"content":"* **Covid Status**: A student detail that indicates whether the student has Covid-19","lastModifiedDate":"2022-03-25"},{"lineNumber":849,"author":{"gitId":"cwq2326"},"content":"* **Health Risk Notice**: Household members living with individuals diagnosed with Covid-19 are issued with this notice","lastModifiedDate":"2022-03-24"},{"lineNumber":850,"author":{"gitId":"cwq2326"},"content":"* **Covid-19**: An infectious disease caused by the SARS-CoV-2 virus","lastModifiedDate":"2022-03-24"},{"lineNumber":851,"author":{"gitId":"cwq2326"},"content":"* **NUS Hall**: Hall of residence in the National University of Singapore","lastModifiedDate":"2022-03-24"},{"lineNumber":852,"author":{"gitId":"tanchinkiat99"},"content":"* **Resident Fellow**: Full-time Academic or Executive \u0026 Professional Staff members appointed by the Dean of Students to live in a Hall of Residence","lastModifiedDate":"2022-03-25"},{"lineNumber":853,"author":{"gitId":"tanchinkiat99"},"content":"* **Hall leaders**: Student leaders in NUS halls","lastModifiedDate":"2022-03-25"},{"lineNumber":854,"author":{"gitId":"cwq2326"},"content":"","lastModifiedDate":"2022-03-24"},{"lineNumber":855,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":856,"author":{"gitId":"-"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2020-05-23"},{"lineNumber":857,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":858,"author":{"gitId":"-"},"content":"## **Appendix: Instructions for manual testing**","lastModifiedDate":"2020-05-23"},{"lineNumber":859,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":860,"author":{"gitId":"-"},"content":"Given below are instructions to test the app manually.","lastModifiedDate":"2020-05-23"},{"lineNumber":861,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":862,"author":{"gitId":"-"},"content":"\u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-info\"\u003e:information_source: **Note:** These instructions only provide a starting point for testers to work on;","lastModifiedDate":"2020-05-23"},{"lineNumber":863,"author":{"gitId":"-"},"content":"testers are expected to do more *exploratory* testing.","lastModifiedDate":"2020-05-23"},{"lineNumber":864,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":865,"author":{"gitId":"-"},"content":"\u003c/div\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":866,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":867,"author":{"gitId":"-"},"content":"### Launch and shutdown","lastModifiedDate":"2020-05-23"},{"lineNumber":868,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":869,"author":{"gitId":"-"},"content":"1. Initial launch","lastModifiedDate":"2020-05-23"},{"lineNumber":870,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":871,"author":{"gitId":"-"},"content":"    1. Download the jar file and copy into an empty folder","lastModifiedDate":"2020-05-23"},{"lineNumber":872,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":873,"author":{"gitId":"-"},"content":"    1. Double-click the jar file Expected: Shows the GUI with a set of sample contacts. The window size may not be optimum.","lastModifiedDate":"2020-05-23"},{"lineNumber":874,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":875,"author":{"gitId":"-"},"content":"1. Saving window preferences","lastModifiedDate":"2020-05-23"},{"lineNumber":876,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":877,"author":{"gitId":"-"},"content":"    1. Resize the window to an optimum size. Move the window to a different location. Close the window.","lastModifiedDate":"2020-05-23"},{"lineNumber":878,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":879,"author":{"gitId":"-"},"content":"    1. Re-launch the app by double-clicking the jar file.\u003cbr\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":880,"author":{"gitId":"-"},"content":"       Expected: The most recent window size and location is retained.","lastModifiedDate":"2020-05-23"},{"lineNumber":881,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":882,"author":{"gitId":"-"},"content":"1. _{ more test cases …​ }_","lastModifiedDate":"2020-05-23"},{"lineNumber":883,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":884,"author":{"gitId":"-"},"content":"### Deleting a person","lastModifiedDate":"2020-05-23"},{"lineNumber":885,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":886,"author":{"gitId":"-"},"content":"1. Deleting a person while all persons are being shown","lastModifiedDate":"2020-05-23"},{"lineNumber":887,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":888,"author":{"gitId":"-"},"content":"    1. Prerequisites: List all persons using the `list` command. Multiple persons in the list.","lastModifiedDate":"2020-05-23"},{"lineNumber":889,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":890,"author":{"gitId":"-"},"content":"    1. Test case: `delete 1`\u003cbr\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":891,"author":{"gitId":"-"},"content":"       Expected: First contact is deleted from the list. Details of the deleted contact shown in the status message. Timestamp in the status bar is updated.","lastModifiedDate":"2020-05-23"},{"lineNumber":892,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":893,"author":{"gitId":"-"},"content":"    1. Test case: `delete 0`\u003cbr\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":894,"author":{"gitId":"-"},"content":"       Expected: No person is deleted. Error details shown in the status message. Status bar remains the same.","lastModifiedDate":"2020-05-23"},{"lineNumber":895,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":896,"author":{"gitId":"-"},"content":"    1. Other incorrect delete commands to try: `delete`, `delete x`, `...` (where x is larger than the list size)\u003cbr\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":897,"author":{"gitId":"-"},"content":"       Expected: Similar to previous.","lastModifiedDate":"2020-05-23"},{"lineNumber":898,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":899,"author":{"gitId":"-"},"content":"1. _{ more test cases …​ }_","lastModifiedDate":"2020-05-23"},{"lineNumber":900,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":901,"author":{"gitId":"-"},"content":"### Saving data","lastModifiedDate":"2020-05-23"},{"lineNumber":902,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":903,"author":{"gitId":"-"},"content":"1. Dealing with missing/corrupted data files","lastModifiedDate":"2020-05-23"},{"lineNumber":904,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":905,"author":{"gitId":"-"},"content":"    1. _{explain how to simulate a missing/corrupted file, and the expected behavior}_","lastModifiedDate":"2020-05-23"},{"lineNumber":906,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":907,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-03-15"},{"lineNumber":908,"author":{"gitId":"-"},"content":"1. _{ more test cases …​ }_","lastModifiedDate":"2020-05-23"}],"authorContributionMap":{"tanchinkiat99":100,"DannyDakota":17,"kevinkuo0320":42,"jiale-c":306,"cwq2326":88,"-":355}},{"path":"docs/Documentation.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"---","lastModifiedDate":"2022-03-15"},{"lineNumber":2,"author":{"gitId":"-"},"content":"layout: page","lastModifiedDate":"2022-03-15"},{"lineNumber":3,"author":{"gitId":"-"},"content":"title: Documentation guide","lastModifiedDate":"2022-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"---","lastModifiedDate":"2022-03-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-03-15"},{"lineNumber":6,"author":{"gitId":"-"},"content":"**Setting up and maintaining the project website:**","lastModifiedDate":"2022-03-15"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-03-15"},{"lineNumber":8,"author":{"gitId":"-"},"content":"* We use [**Jekyll**](https://jekyllrb.com/) to manage documentation.","lastModifiedDate":"2022-03-15"},{"lineNumber":9,"author":{"gitId":"-"},"content":"* The `docs/` folder is used for documentation.","lastModifiedDate":"2022-03-15"},{"lineNumber":10,"author":{"gitId":"-"},"content":"* To learn how set it up and maintain the project website, follow the guide [_[se-edu/guides] **Using Jekyll for project documentation**_](https://se-education.org/guides/tutorials/jekyll.html).","lastModifiedDate":"2022-03-15"},{"lineNumber":11,"author":{"gitId":"-"},"content":"* Note these points when adapting the documentation to a different project/product:","lastModifiedDate":"2022-03-15"},{"lineNumber":12,"author":{"gitId":"kevinkuo0320"},"content":"    * The \u0027Site-wide settings\u0027 section of the page linked above has information on how to update site-wide elements such as the top navigation bar.","lastModifiedDate":"2022-03-15"},{"lineNumber":13,"author":{"gitId":"kevinkuo0320"},"content":"    * :bulb: In addition to updating content files, you might have to update the config files `docs\\_config.yml` and `docs\\_sass\\minima\\_base.scss` (which contains a reference to `AB-3` that comes into play when converting documentation pages to PDF format).","lastModifiedDate":"2022-03-15"},{"lineNumber":14,"author":{"gitId":"-"},"content":"* If you are using Intellij for editing documentation files, you can consider enabling \u0027soft wrapping\u0027 for `*.md` files, as explained in [_[se-edu/guides] **Intellij IDEA: Useful settings**_](https://se-education.org/guides/tutorials/intellijUsefulSettings.html#enabling-soft-wrapping)","lastModifiedDate":"2022-03-15"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-03-15"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-03-15"},{"lineNumber":17,"author":{"gitId":"-"},"content":"**Style guidance:**","lastModifiedDate":"2022-03-15"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-03-15"},{"lineNumber":19,"author":{"gitId":"-"},"content":"* Follow the [**_Google developer documentation style guide_**](https://developers.google.com/style).","lastModifiedDate":"2022-03-15"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-03-15"},{"lineNumber":21,"author":{"gitId":"-"},"content":"* Also relevant is the [_[se-edu/guides] **Markdown coding standard**_](https://se-education.org/guides/conventions/markdown.html)","lastModifiedDate":"2022-03-15"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-03-15"},{"lineNumber":23,"author":{"gitId":"-"},"content":"**Diagrams:**","lastModifiedDate":"2022-03-15"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-03-15"},{"lineNumber":25,"author":{"gitId":"-"},"content":"* See the [_[se-edu/guides] **Using PlantUML**_](https://se-education.org/guides/tutorials/plantUml.html)","lastModifiedDate":"2022-03-15"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-03-15"},{"lineNumber":27,"author":{"gitId":"-"},"content":"**Converting a document to the PDF format:**","lastModifiedDate":"2022-03-15"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-03-15"},{"lineNumber":29,"author":{"gitId":"-"},"content":"* See the guide [_[se-edu/guides] **Saving web documents as PDF files**_](https://se-education.org/guides/tutorials/savingPdf.html)","lastModifiedDate":"2022-03-15"},{"lineNumber":30,"author":{"gitId":"kevinkuo0320"},"content":"","lastModifiedDate":"2022-03-15"}],"authorContributionMap":{"kevinkuo0320":3,"-":27}},{"path":"docs/UserGuide.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"---","lastModifiedDate":"2020-05-23"},{"lineNumber":2,"author":{"gitId":"-"},"content":"layout: page","lastModifiedDate":"2020-05-23"},{"lineNumber":3,"author":{"gitId":"-"},"content":"title: User Guide","lastModifiedDate":"2022-03-31"},{"lineNumber":4,"author":{"gitId":"-"},"content":"---","lastModifiedDate":"2020-05-23"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":6,"author":{"gitId":"cwq2326"},"content":"# Tracey","lastModifiedDate":"2022-02-24"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":8,"author":{"gitId":"DannyDakota"},"content":"Tracey is a **desktop app for managing health statuses of NUS Hall Residents, optimized for use via a Command Line","lastModifiedDate":"2022-03-24"},{"lineNumber":9,"author":{"gitId":"cwq2326"},"content":"Interface** (CLI) while still having the benefits of a Graphical User Interface (GUI). If you can type fast,","lastModifiedDate":"2022-02-24"},{"lineNumber":10,"author":{"gitId":"cwq2326"},"content":"Tracey can get your student health status management tasks done faster than traditional GUI apps.","lastModifiedDate":"2022-02-24"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":12,"author":{"gitId":"jiale-c"},"content":"\u003cdetails\u003e","lastModifiedDate":"2022-03-31"},{"lineNumber":13,"author":{"gitId":"jiale-c"},"content":"  \u003csummary\u003eWhat are CLIs? What are GUIs?\u003c/summary\u003e","lastModifiedDate":"2022-03-31"},{"lineNumber":14,"author":{"gitId":"DannyDakota"},"content":"","lastModifiedDate":"2022-03-30"},{"lineNumber":15,"author":{"gitId":"jiale-c"},"content":"##  Brief Introduction","lastModifiedDate":"2022-03-31"},{"lineNumber":16,"author":{"gitId":"DannyDakota"},"content":"1) CLIs are Command Line Interfaces. CLIs connect you to a computer program and through the CLI, you can interact with the application by typing in texts (commands).","lastModifiedDate":"2022-03-30"},{"lineNumber":17,"author":{"gitId":"DannyDakota"},"content":"2) GUIs are Graphical User Interfaces. GUIs are a system of interactive visual components for computer applications. You can interact with a GUI through a pointing device, such as your mouse.","lastModifiedDate":"2022-03-30"},{"lineNumber":18,"author":{"gitId":"DannyDakota"},"content":"","lastModifiedDate":"2022-03-30"},{"lineNumber":19,"author":{"gitId":"DannyDakota"},"content":"Note that the main difference between GUI and CLI is the method of interaction.","lastModifiedDate":"2022-03-30"},{"lineNumber":20,"author":{"gitId":"DannyDakota"},"content":"","lastModifiedDate":"2022-03-30"},{"lineNumber":21,"author":{"gitId":"DannyDakota"},"content":"As Tracey is a Command Line Interface, these are the aspects that highlight the power of Tracey and why it was developed using a CLI:","lastModifiedDate":"2022-03-30"},{"lineNumber":22,"author":{"gitId":"DannyDakota"},"content":"","lastModifiedDate":"2022-03-30"},{"lineNumber":23,"author":{"gitId":"DannyDakota"},"content":"1. **Speed** \u003cbr\u003e","lastModifiedDate":"2022-03-30"},{"lineNumber":24,"author":{"gitId":"tanchinkiat99"},"content":"   Tracey offers immense response speed. GUIs require additional resources to render graphical components, making them slower than CLIs.","lastModifiedDate":"2022-03-31"},{"lineNumber":25,"author":{"gitId":"DannyDakota"},"content":"2. **Functionality** \u003cbr\u003e","lastModifiedDate":"2022-03-30"},{"lineNumber":26,"author":{"gitId":"tanchinkiat99"},"content":"   Tracey offers flexibility in its use. A typical GUI does not have the same level of functionality and granular control as a typical CLI. This is portrayed in the variety of features that Tracey offers, which you can learn about more in this User Guide.","lastModifiedDate":"2022-03-31"},{"lineNumber":27,"author":{"gitId":"DannyDakota"},"content":"3. **Scalability** \u003cbr\u003e","lastModifiedDate":"2022-03-30"},{"lineNumber":28,"author":{"gitId":"tanchinkiat99"},"content":"   Simple command functions in Tracey allows it to handle various complex features. Additionally, the CLI of Tracey allows easier integration of newer features that may be added in future iterations, compared to GUIs which require rendering and creation of graphical components.","lastModifiedDate":"2022-03-31"},{"lineNumber":29,"author":{"gitId":"DannyDakota"},"content":"","lastModifiedDate":"2022-03-30"},{"lineNumber":30,"author":{"gitId":"jiale-c"},"content":"\u003c/details\u003e","lastModifiedDate":"2022-03-31"},{"lineNumber":31,"author":{"gitId":"jiale-c"},"content":"","lastModifiedDate":"2022-03-31"},{"lineNumber":32,"author":{"gitId":"DannyDakota"},"content":"Sounds exciting? Proceed on to the next section to learn more about Tracey!","lastModifiedDate":"2022-03-30"},{"lineNumber":33,"author":{"gitId":"DannyDakota"},"content":"","lastModifiedDate":"2022-03-30"},{"lineNumber":34,"author":{"gitId":"DannyDakota"},"content":"We hope you enjoy Tracey as much as we did developing it!","lastModifiedDate":"2022-03-30"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-03-30"},{"lineNumber":36,"author":{"gitId":"-"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2020-05-23"},{"lineNumber":37,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":38,"author":{"gitId":"DannyDakota"},"content":"* [Navigating the User Guide](#how-to-navigate-the-user-guide)","lastModifiedDate":"2022-03-30"},{"lineNumber":39,"author":{"gitId":"cwq2326"},"content":"* [Quick Start](#quick-start)","lastModifiedDate":"2022-02-24"},{"lineNumber":40,"author":{"gitId":"cwq2326"},"content":"* [Features](#features)","lastModifiedDate":"2022-02-24"},{"lineNumber":41,"author":{"gitId":"cwq2326"},"content":"    * \u003ca href\u003d\u0027#viewing-help\u0027\u003eHelp\u003c/a\u003e","lastModifiedDate":"2022-03-30"},{"lineNumber":42,"author":{"gitId":"jiale-c"},"content":"    * \u003ca href\u003d\u0027#importing-excel-sheet\u0027\u003eImporting Excel data\u003c/a\u003e","lastModifiedDate":"2022-03-30"},{"lineNumber":43,"author":{"gitId":"cwq2326"},"content":"    * \u003ca href\u003d\u0027#adding-a-contact\u0027\u003eAdding a contact\u003c/a\u003e","lastModifiedDate":"2022-03-30"},{"lineNumber":44,"author":{"gitId":"jiale-c"},"content":"    * \u003ca href\u003d\u0027#editing-an-existing-contact\u0027\u003eEditing an existing contact\u003c/a\u003e","lastModifiedDate":"2022-03-30"},{"lineNumber":45,"author":{"gitId":"cwq2326"},"content":"    * \u003ca href\u003d\u0027#deleting-a-contact\u0027\u003eDeleting a contact\u003c/a\u003e","lastModifiedDate":"2022-03-30"},{"lineNumber":46,"author":{"gitId":"tanchinkiat99"},"content":"    * \u003ca href\u003d\u0027#undoing-an-action\u0027\u003eUndoing an action\u003c/a\u003e","lastModifiedDate":"2022-03-31"},{"lineNumber":47,"author":{"gitId":"tanchinkiat99"},"content":"    * \u003ca href\u003d\u0027#redoing-an-action\u0027\u003eRedoing an action\u003c/a\u003e","lastModifiedDate":"2022-03-31"},{"lineNumber":48,"author":{"gitId":"cwq2326"},"content":"    * \u003ca href\u003d\u0027#finding-a-contact\u0027\u003eFinding a contact\u003c/a\u003e","lastModifiedDate":"2022-03-30"},{"lineNumber":49,"author":{"gitId":"cwq2326"},"content":"    * \u003ca href\u003d\u0027#filtering-contacts\u0027\u003eFiltering contacts\u003c/a\u003e","lastModifiedDate":"2022-03-30"},{"lineNumber":50,"author":{"gitId":"cwq2326"},"content":"    * \u003ca href\u003d\u0027#listing-the-records\u0027\u003eListing the records\u003c/a\u003e","lastModifiedDate":"2022-03-30"},{"lineNumber":51,"author":{"gitId":"cwq2326"},"content":"    * \u003ca href\u003d\u0027#copying-emails\u0027\u003eCopying Emails\u003c/a\u003e","lastModifiedDate":"2022-03-29"},{"lineNumber":52,"author":{"gitId":"cwq2326"},"content":"    * \u003ca href\u003d\u0027#summarising-the-records\u0027\u003eSummarising the records\u003c/a\u003e","lastModifiedDate":"2022-03-30"},{"lineNumber":53,"author":{"gitId":"cwq2326"},"content":"    * \u003ca href\u003d\u0027#archiving-tracey\u0027\u003eArchiving Tracey\u003c/a\u003e","lastModifiedDate":"2022-03-30"},{"lineNumber":54,"author":{"gitId":"cwq2326"},"content":"    * \u003ca href\u003d\u0027#clearing-all-records\u0027\u003eClearing all records\u003c/a\u003e","lastModifiedDate":"2022-03-30"},{"lineNumber":55,"author":{"gitId":"jiale-c"},"content":"    * \u003ca href\u003d\u0027#exiting-tracey\u0027\u003eExiting Tracey\u003c/a\u003e","lastModifiedDate":"2022-03-30"},{"lineNumber":56,"author":{"gitId":"cwq2326"},"content":"    * \u003ca href\u003d\u0027#saving\u0027\u003eSaving\u003c/a\u003e","lastModifiedDate":"2022-03-29"},{"lineNumber":57,"author":{"gitId":"cwq2326"},"content":"* \u003ca href\u003d\u0027#faq\u0027\u003eFAQ\u003c/a\u003e","lastModifiedDate":"2022-03-29"},{"lineNumber":58,"author":{"gitId":"cwq2326"},"content":"* \u003ca href\u003d\u0027#command-summary\u0027\u003eCommand Summary\u003c/a\u003e","lastModifiedDate":"2022-03-29"},{"lineNumber":59,"author":{"gitId":"tanchinkiat99"},"content":"* \u003ca href\u003d\u0027#glossary\u0027\u003eGlossary\u003c/a\u003e","lastModifiedDate":"2022-03-31"},{"lineNumber":60,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":61,"author":{"gitId":"cwq2326"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2022-02-24"},{"lineNumber":62,"author":{"gitId":"DannyDakota"},"content":"## How to navigate the User Guide","lastModifiedDate":"2022-03-30"},{"lineNumber":63,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":64,"author":{"gitId":"tanchinkiat99"},"content":"There are a few symbols to take note of in our User Guide. Their purposes are stated below:","lastModifiedDate":"2022-03-31"},{"lineNumber":65,"author":{"gitId":"DannyDakota"},"content":"","lastModifiedDate":"2022-03-30"},{"lineNumber":66,"author":{"gitId":"DannyDakota"},"content":"| Symbol  |                                                 Purpose                                                 |","lastModifiedDate":"2022-03-30"},{"lineNumber":67,"author":{"gitId":"DannyDakota"},"content":"|:-------:|:-------------------------------------------------------------------------------------------------------:|","lastModifiedDate":"2022-03-31"},{"lineNumber":68,"author":{"gitId":"DannyDakota"},"content":"|   📓    |     Additional notes are parked here. They contain beneficial information in case you are confused.     |","lastModifiedDate":"2022-03-30"},{"lineNumber":69,"author":{"gitId":"tanchinkiat99"},"content":"|   ⚠️    |          Warnings are parked here. They contain information that you **NEED** to take note of.          |","lastModifiedDate":"2022-03-31"},{"lineNumber":70,"author":{"gitId":"tanchinkiat99"},"content":"|   💡    | Tips are parked here. They  highlight certain information that will allow you to fully utilise Tracey.  |","lastModifiedDate":"2022-03-31"},{"lineNumber":71,"author":{"gitId":"DannyDakota"},"content":"","lastModifiedDate":"2022-03-31"},{"lineNumber":72,"author":{"gitId":"tanchinkiat99"},"content":"*Table 1: Symbols and their purposes.*","lastModifiedDate":"2022-03-31"},{"lineNumber":73,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-03-30"},{"lineNumber":74,"author":{"gitId":"DannyDakota"},"content":"Additional formatting guidelines:","lastModifiedDate":"2022-03-30"},{"lineNumber":75,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-03-30"},{"lineNumber":76,"author":{"gitId":"DannyDakota"},"content":"|  Format   |                                                                         Purpose                                                                          |","lastModifiedDate":"2022-03-31"},{"lineNumber":77,"author":{"gitId":"DannyDakota"},"content":"|:---------:|:--------------------------------------------------------------------------------------------------------------------------------------------------------:|","lastModifiedDate":"2022-03-31"},{"lineNumber":78,"author":{"gitId":"DannyDakota"},"content":"| **Bold**  |                                                        Bolded words indicate important keywords.                                                         |","lastModifiedDate":"2022-03-31"},{"lineNumber":79,"author":{"gitId":"DannyDakota"},"content":"| `Command` |            Words/phrases that are presented like this highlight specific keywords that you can use to interact with your computer or Tracey.             |","lastModifiedDate":"2022-03-31"},{"lineNumber":80,"author":{"gitId":"DannyDakota"},"content":"| [Links]() | Words/phrases that are presented like this are clickable links to different parts of the User Guide or to external web pages for additional information. |","lastModifiedDate":"2022-03-31"},{"lineNumber":81,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-03-30"},{"lineNumber":82,"author":{"gitId":"tanchinkiat99"},"content":"*Table 2: Word formats and their purposes.*","lastModifiedDate":"2022-03-31"},{"lineNumber":83,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-03-30"},{"lineNumber":84,"author":{"gitId":"DannyDakota"},"content":"","lastModifiedDate":"2022-03-30"},{"lineNumber":85,"author":{"gitId":"DannyDakota"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2022-03-30"},{"lineNumber":86,"author":{"gitId":"cwq2326"},"content":"## Quick Start","lastModifiedDate":"2022-02-24"},{"lineNumber":87,"author":{"gitId":"DannyDakota"},"content":"1. Ensure you have Java 11 or above installed in your Computer. \u003cbr\u003e","lastModifiedDate":"2022-03-30"},{"lineNumber":88,"author":{"gitId":"DannyDakota"},"content":" 📓`Note:`","lastModifiedDate":"2022-03-30"},{"lineNumber":89,"author":{"gitId":"DannyDakota"},"content":"   1. If you are unsure of which version of Java you are on, follow these steps. Otherwise, continue on from step 2.","lastModifiedDate":"2022-03-30"},{"lineNumber":90,"author":{"gitId":"DannyDakota"},"content":"   2. To check your java version:","lastModifiedDate":"2022-03-30"},{"lineNumber":91,"author":{"gitId":"DannyDakota"},"content":"      1. For Mac users, open up Terminal and type in `java --version`.","lastModifiedDate":"2022-03-30"},{"lineNumber":92,"author":{"gitId":"DannyDakota"},"content":"      2. For Windows users, open up Command Prompt and type in `java --version`.","lastModifiedDate":"2022-03-30"},{"lineNumber":93,"author":{"gitId":"DannyDakota"},"content":"   3. If you have the supported version of Java, the response should resemble something like this `java 11.0.9 2020-10-20 LTS`.","lastModifiedDate":"2022-03-30"},{"lineNumber":94,"author":{"gitId":"DannyDakota"},"content":"   4. If you do not see the supported version of Java, download Java from this [page](https://www.java.com/en/download/).","lastModifiedDate":"2022-03-30"},{"lineNumber":95,"author":{"gitId":"cwq2326"},"content":"2. Download the latest **Tracey.jar** from [here](https://github.com/AY2122S2-CS2103T-T12-3/tp/releases).","lastModifiedDate":"2022-04-03"},{"lineNumber":96,"author":{"gitId":"cwq2326"},"content":"3. Copy the file to the folder you want to use as the home folder for your Tracey application.","lastModifiedDate":"2022-02-24"},{"lineNumber":97,"author":{"gitId":"cwq2326"},"content":"4. Double-click the file to start the app. The GUI similar to the below should appear in a few seconds.","lastModifiedDate":"2022-02-24"},{"lineNumber":98,"author":{"gitId":"cwq2326"},"content":"   Note how the app contains some sample data. \u003cbr\u003e","lastModifiedDate":"2022-02-24"},{"lineNumber":99,"author":{"gitId":"jiale-c"},"content":"   ![Ui](images/UiScreenshot.png) *Figure 1: Screenshot showing sample data.* \u003cbr\u003e","lastModifiedDate":"2022-03-31"},{"lineNumber":100,"author":{"gitId":"DannyDakota"},"content":"   📓`Note:`","lastModifiedDate":"2022-03-30"},{"lineNumber":101,"author":{"gitId":"tanchinkiat99"},"content":"   1. If you are a Mac user and are unable to open the JAR file after double-clicking, please open Terminal and change directory to where **Tracey.jar** is located. Then, type the following command to open the application: `java -jar Tracey.jar`.","lastModifiedDate":"2022-03-31"},{"lineNumber":102,"author":{"gitId":"DannyDakota"},"content":"   2. If you are a Windows user and are unable to open the JAR file after double-clicking, please open Command Prompt and change directory to where **Tracey.jar** is located. Then, type the following command to open the application: `java -jar Tracey.jar`.","lastModifiedDate":"2022-03-31"},{"lineNumber":103,"author":{"gitId":"DannyDakota"},"content":"6. Type your commands in the command box and press Enter to execute it. e.g. typing **`help`** and pressing Enter will open the help window.\u003cbr\u003e","lastModifiedDate":"2022-03-30"},{"lineNumber":104,"author":{"gitId":"-"},"content":"   Some example commands you can try:","lastModifiedDate":"2020-05-23"},{"lineNumber":105,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":106,"author":{"gitId":"-"},"content":"* **`list`** : Lists all contacts.","lastModifiedDate":"2020-05-23"},{"lineNumber":107,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":108,"author":{"gitId":"cwq2326"},"content":"* **`summarise`** : Summarises all contacts into their respective faculty and informs the reader percentage of student from that faculty is Covid positive.","lastModifiedDate":"2022-03-27"},{"lineNumber":109,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-03-16"},{"lineNumber":110,"author":{"gitId":"cwq2326"},"content":"* **`add`**`add n/John Doe b/E f/SoC p/98765432 e/johnd@example.com a/311, Clementi Ave 2, #02-25 mc/A0253647C cs/NEGATIVE t/friends t/owesMoney` : Adds a contact named `John Doe` to the Tracey.","lastModifiedDate":"2022-03-27"},{"lineNumber":111,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":112,"author":{"gitId":"-"},"content":"* **`delete`**`3` : Deletes the 3rd contact shown in the current list.","lastModifiedDate":"2020-05-23"},{"lineNumber":113,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":114,"author":{"gitId":"-"},"content":"* **`clear`** : Deletes all contacts.","lastModifiedDate":"2020-05-23"},{"lineNumber":115,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":116,"author":{"gitId":"-"},"content":"* **`exit`** : Exits the app.","lastModifiedDate":"2020-05-23"},{"lineNumber":117,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":118,"author":{"gitId":"cwq2326"},"content":"6. Refer to the [Features](#features) below for details of each command.","lastModifiedDate":"2022-02-24"},{"lineNumber":119,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":120,"author":{"gitId":"-"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2020-05-23"},{"lineNumber":121,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":122,"author":{"gitId":"-"},"content":"## Features","lastModifiedDate":"2020-05-23"},{"lineNumber":123,"author":{"gitId":"jiale-c"},"content":"### Viewing help","lastModifiedDate":"2022-03-30"},{"lineNumber":124,"author":{"gitId":"jiale-c"},"content":"Help users to search for all the commands that Tracey offers by opening a pop-up window.","lastModifiedDate":"2022-03-30"},{"lineNumber":125,"author":{"gitId":"jiale-c"},"content":"It includes a summary to briefly explain all the commands.","lastModifiedDate":"2022-03-30"},{"lineNumber":126,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":127,"author":{"gitId":"DannyDakota"},"content":"The pop-up window also offers a button for easy access to the User Guide via the user\u0027s default browser.","lastModifiedDate":"2022-04-03"},{"lineNumber":128,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":129,"author":{"gitId":"DannyDakota"},"content":"This is a sample screenshot of what you can expect from the `help` command.","lastModifiedDate":"2022-04-03"},{"lineNumber":130,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-02-24"},{"lineNumber":131,"author":{"gitId":"DannyDakota"},"content":"![help](images/HelpScreenshot.png) *Figure 2: Screenshot of help command.*","lastModifiedDate":"2022-03-31"},{"lineNumber":132,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-03-27"},{"lineNumber":133,"author":{"gitId":"jiale-c"},"content":"Format: `help`","lastModifiedDate":"2022-03-30"},{"lineNumber":134,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-03-27"},{"lineNumber":135,"author":{"gitId":"jiale-c"},"content":"### Importing Excel sheet","lastModifiedDate":"2022-03-30"},{"lineNumber":136,"author":{"gitId":"jiale-c"},"content":"Add a list of students from an Excel file into Tracey.","lastModifiedDate":"2022-03-31"},{"lineNumber":137,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-03-31"},{"lineNumber":138,"author":{"gitId":"jiale-c"},"content":"Format: import button","lastModifiedDate":"2022-03-31"},{"lineNumber":139,"author":{"gitId":"jiale-c"},"content":"* Adds a list of students with Relevant Details such as Covid status into Tracey.","lastModifiedDate":"2022-03-31"},{"lineNumber":140,"author":{"gitId":"jiale-c"},"content":"* Relevant details required are mentioned in Table 4 below.","lastModifiedDate":"2022-03-31"},{"lineNumber":141,"author":{"gitId":"jiale-c"},"content":"* In the Excel sheet, the first column has to be the names of students followed by the Relevant Details.","lastModifiedDate":"2022-03-31"},{"lineNumber":142,"author":{"gitId":"jiale-c"},"content":"* Tracey will then store all students from the Excel file into her!","lastModifiedDate":"2022-03-31"},{"lineNumber":143,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-03-31"},{"lineNumber":144,"author":{"gitId":"jiale-c"},"content":"Sample Excel file:","lastModifiedDate":"2022-03-31"},{"lineNumber":145,"author":{"gitId":"DannyDakota"},"content":"![Excel_Sample](images/Excelscreenshot.png) *Figure 3: Screenshot of Excel file.*","lastModifiedDate":"2022-04-02"},{"lineNumber":146,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-03-31"},{"lineNumber":147,"author":{"gitId":"jiale-c"},"content":"How to identify import button:","lastModifiedDate":"2022-03-31"},{"lineNumber":148,"author":{"gitId":"jiale-c"},"content":"![Import_Button](images/Import_Button.png) *Figure 4: Screenshot of import button.*","lastModifiedDate":"2022-03-31"},{"lineNumber":149,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-03-27"},{"lineNumber":150,"author":{"gitId":"cwq2326"},"content":"### Adding a contact","lastModifiedDate":"2022-03-30"},{"lineNumber":151,"author":{"gitId":"cwq2326"},"content":"Add a student with relevant details into Tracey.","lastModifiedDate":"2022-02-24"},{"lineNumber":152,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-02-24"},{"lineNumber":153,"author":{"gitId":"cwq2326"},"content":"Format: `add n/NAME b/BLOCK f/FACULTY p/PHONE e/EMAIL a/ADDRESS mc/MATRICULATION_NUMBER cs/COVID_STATUS t/TAGS...`","lastModifiedDate":"2022-03-27"},{"lineNumber":154,"author":{"gitId":"DannyDakota"},"content":"* Adds a student with the specified details. Tags are optional, and you can add as many tags as you like.","lastModifiedDate":"2022-03-31"},{"lineNumber":155,"author":{"gitId":"tanchinkiat99"},"content":"    * Duplicate tags will be displayed as a single tag.","lastModifiedDate":"2022-03-31"},{"lineNumber":156,"author":{"gitId":"tanchinkiat99"},"content":"* The student name is case-sensitive e.g. `add n/johnDoe` will be logged as `johnDoe` and not `JohnDoe` in Tracey.","lastModifiedDate":"2022-03-31"},{"lineNumber":157,"author":{"gitId":"tanchinkiat99"},"content":"* Phone Number, email and matriculation number must be **unique** to each student.","lastModifiedDate":"2022-03-31"},{"lineNumber":158,"author":{"gitId":"tanchinkiat99"},"content":"* Order of the tags does not matter e.g. `add n/NAME p/PHONENUMBER` is the same as `add p/PHONENUMBER n/NAME`.","lastModifiedDate":"2022-03-31"},{"lineNumber":159,"author":{"gitId":"tanchinkiat99"},"content":"* Tracey will acknowledge that the student has been added.","lastModifiedDate":"2022-03-31"},{"lineNumber":160,"author":{"gitId":"tanchinkiat99"},"content":"* Values for faculty, covid status and block need to be pre-defined constants in the table below (refer to Table 4 below or in the \u003ca href\u003d\u0027#glossary\u0027\u003eglossary\u003c/a\u003e).","lastModifiedDate":"2022-03-31"},{"lineNumber":161,"author":{"gitId":"tanchinkiat99"},"content":"* If the inputted keyword is not one of those defined in the **Pre-defined constants** as described in Table 4, there will be an error and you will have to input the details for the keyword again.","lastModifiedDate":"2022-03-31"},{"lineNumber":162,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-03-27"},{"lineNumber":163,"author":{"gitId":"cwq2326"},"content":"Examples of usage:","lastModifiedDate":"2022-03-27"},{"lineNumber":164,"author":{"gitId":"cwq2326"},"content":"* `add n/Melvin b/c f/SOC p/84440808 e/melvin@nus.edu.sg a/12 Kent Ridge Drive mc/a0211343z cs/Negative`","lastModifiedDate":"2022-04-03"},{"lineNumber":165,"author":{"gitId":"DannyDakota"},"content":"* `add e/student69@u.nus.edu n/Martin b/e f/fol e/martiniser@gmail.com p/98090042 a/74 Pasir Ris Avenue mc/a1223213h cs/positive`","lastModifiedDate":"2022-03-31"},{"lineNumber":166,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-03-27"},{"lineNumber":167,"author":{"gitId":"DannyDakota"},"content":"| Correct Usage :white_check_mark: | Incorrect Usage  :x: |","lastModifiedDate":"2022-03-27"},{"lineNumber":168,"author":{"gitId":"DannyDakota"},"content":"|:--------------------:|:-----------------:|","lastModifiedDate":"2022-03-27"},{"lineNumber":169,"author":{"gitId":"DannyDakota"},"content":"|     cs/Negative      | cs/Close-contact  |","lastModifiedDate":"2022-03-27"},{"lineNumber":170,"author":{"gitId":"DannyDakota"},"content":"|        f/SoC         |      f/SooC       |","lastModifiedDate":"2022-03-27"},{"lineNumber":171,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-03-27"},{"lineNumber":172,"author":{"gitId":"tanchinkiat99"},"content":"*Table 3: Incorrect usage of **pre-defined constants**. Refer to Table 4 for an exhaustive list of such constants.*","lastModifiedDate":"2022-03-31"},{"lineNumber":173,"author":{"gitId":"cwq2326"},"content":"","lastModifiedDate":"2022-02-24"},{"lineNumber":174,"author":{"gitId":"cwq2326"},"content":"","lastModifiedDate":"2022-02-24"},{"lineNumber":175,"author":{"gitId":"tanchinkiat99"},"content":"","lastModifiedDate":"2022-03-31"},{"lineNumber":176,"author":{"gitId":"tanchinkiat99"},"content":"| **Prefix** | **Meaning** |    **Pre-defined constants**                                                                          | Constraints |","lastModifiedDate":"2022-03-31"},{"lineNumber":177,"author":{"gitId":"tanchinkiat99"},"content":"|:-----:|:--------------------:|:-------------------------------------------------------------------------------------------------:|:--------------------:|","lastModifiedDate":"2022-03-31"},{"lineNumber":178,"author":{"gitId":"tanchinkiat99"},"content":"| `n/`  | Name                 | None                                                                                                  | Can only contain alphanumeric characters and spaces. |","lastModifiedDate":"2022-03-31"},{"lineNumber":179,"author":{"gitId":"tanchinkiat99"},"content":"| `p/`  | Phone Number         | None                                                                                                  | Can only be numbers at least 3 digits long. |","lastModifiedDate":"2022-03-31"},{"lineNumber":180,"author":{"gitId":"tanchinkiat99"},"content":"| `e/`  | Email                | None                                                                                                  | An email address should begin with a local part containing alphanumeric characters and these special characters, excluding the parentheses: (+_.-). The local part cannot start with a special character. This should be followed by a \u0027@\u0027 and then a domain name. The domain name should be made up of domain labels separated by periods. The domain name must end with a domain label at least 2 characters long and each domain label can only consist of alphanumeric characters, separated only by hyphens, if any. |","lastModifiedDate":"2022-03-31"},{"lineNumber":181,"author":{"gitId":"tanchinkiat99"},"content":"| `a/`  | Address              | None                                                                                                  | Cannot be blank. |","lastModifiedDate":"2022-03-31"},{"lineNumber":182,"author":{"gitId":"tanchinkiat99"},"content":"| `f/`  | Faculty              | `FASS` `BIZ` `SOC` `SCALE` `FOD` `CDE` `DUKE` `FOL` `YLLSOM` `YSTCOM` `SOPP` `LKYSPP` `SPH` `FOS` | Can only be one of the pre-defined constants, and is case-insensitive. |","lastModifiedDate":"2022-03-31"},{"lineNumber":183,"author":{"gitId":"tanchinkiat99"},"content":"| `mc/` | Matriculation Number | None                                                                                                  | Can only start with an \"A\", followed by 7 digits, ending with a letter. |","lastModifiedDate":"2022-03-31"},{"lineNumber":184,"author":{"gitId":"tanchinkiat99"},"content":"| `cs/` | Covid Status         | `Positive` `Negative` `HRN`                                                                       | Can only be one of the pre-defined constants, and is case-insensitive. |","lastModifiedDate":"2022-03-31"},{"lineNumber":185,"author":{"gitId":"tanchinkiat99"},"content":"| `b/`  | Block                | `A` `B` `C` `D` `E`                                                                               | Can only be one of the pre-defined constants, and is case-insensitive. |","lastModifiedDate":"2022-03-31"},{"lineNumber":186,"author":{"gitId":"tanchinkiat99"},"content":"| `t/`  | Optional tag(s)      | None                                                                                                  | No constraints |","lastModifiedDate":"2022-03-31"},{"lineNumber":187,"author":{"gitId":"DannyDakota"},"content":"","lastModifiedDate":"2022-03-27"},{"lineNumber":188,"author":{"gitId":"tanchinkiat99"},"content":"*Table 4: Table showing list of possible prefixes and the Pre-defined constants.*","lastModifiedDate":"2022-03-31"},{"lineNumber":189,"author":{"gitId":"cwq2326"},"content":"","lastModifiedDate":"2022-02-24"},{"lineNumber":190,"author":{"gitId":"DannyDakota"},"content":"As described in Table 4, these are the possible prefixes that can be used with Tracey. E.g `n/`, `cs/` etc.","lastModifiedDate":"2022-03-31"},{"lineNumber":191,"author":{"gitId":"tanchinkiat99"},"content":"In addition, the list of pre-defined constants are also provided for `Faculty` and `Covid Status`.","lastModifiedDate":"2022-03-31"},{"lineNumber":192,"author":{"gitId":"cwq2326"},"content":"","lastModifiedDate":"2022-02-24"},{"lineNumber":193,"author":{"gitId":"cwq2326"},"content":"💡`Tips`:","lastModifiedDate":"2022-03-29"},{"lineNumber":194,"author":{"gitId":"cwq2326"},"content":"* You are able to add optional tags with no restrictions using the `t/` prefix.","lastModifiedDate":"2022-03-29"},{"lineNumber":195,"author":{"gitId":"tanchinkiat99"},"content":"* Additions can be reversed with the `undo` feature.","lastModifiedDate":"2022-03-31"},{"lineNumber":196,"author":{"gitId":"cwq2326"},"content":"","lastModifiedDate":"2022-03-29"},{"lineNumber":197,"author":{"gitId":"cwq2326"},"content":"### Editing an existing contact","lastModifiedDate":"2022-03-30"},{"lineNumber":198,"author":{"gitId":"jiale-c"},"content":"Edit a contact at a specific index.","lastModifiedDate":"2022-03-30"},{"lineNumber":199,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":200,"author":{"gitId":"cwq2326"},"content":"Format: `edit INDEX n/NAME ...`","lastModifiedDate":"2022-02-24"},{"lineNumber":201,"author":{"gitId":"tanchinkiat99"},"content":"* Edits an existing student\u0027s information found in Tracey. The student is referred to by an index, displayed beside his/her name in the student list.","lastModifiedDate":"2022-03-31"},{"lineNumber":202,"author":{"gitId":"tanchinkiat99"},"content":"* To edit a student\u0027s details, you can use the command `edit` with the student\u0027s `INDEX` and the corresponding field prefix (mentioned in Figure 3 above).","lastModifiedDate":"2022-03-31"},{"lineNumber":203,"author":{"gitId":"jiale-c"},"content":"  The index **must be a positive integer** 1, 2, 3, …","lastModifiedDate":"2022-03-30"},{"lineNumber":204,"author":{"gitId":"tanchinkiat99"},"content":"* The correct prefixes must be used in order for Tracey to know what you intend to edit.","lastModifiedDate":"2022-03-31"},{"lineNumber":205,"author":{"gitId":"tanchinkiat99"},"content":"* Refer to Table 2 in the \u003ca href\u003d\u0027#glossary\u0027\u003eglossary\u003c/a\u003e for the correct format and pre-defined constants to be used for each input field.","lastModifiedDate":"2022-03-31"},{"lineNumber":206,"author":{"gitId":"tanchinkiat99"},"content":"* Existing information of the student will be replaced with the newly inputted values.","lastModifiedDate":"2022-03-31"},{"lineNumber":207,"author":{"gitId":"tanchinkiat99"},"content":"* When editing tags, all existing tags will be replaced with the newly inputted tag(s). \u003cbr\u003e","lastModifiedDate":"2022-03-31"},{"lineNumber":208,"author":{"gitId":"tanchinkiat99"},"content":"  i.e. Adding tags is not cumulative. All new tags will replace all old tags.","lastModifiedDate":"2022-03-31"},{"lineNumber":209,"author":{"gitId":"jiale-c"},"content":"* You can remove all tags of the student by typing `t/` without specifying any details after it.","lastModifiedDate":"2022-03-30"},{"lineNumber":210,"author":{"gitId":"jiale-c"},"content":"","lastModifiedDate":"2022-03-30"},{"lineNumber":211,"author":{"gitId":"jiale-c"},"content":"How to identify `INDEX`:","lastModifiedDate":"2022-03-30"},{"lineNumber":212,"author":{"gitId":"jiale-c"},"content":"![FAQ_IndexLocation](images/FAQ_IndexLocation.png) *Figure 5: Screenshot of index location.*","lastModifiedDate":"2022-03-31"},{"lineNumber":213,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":214,"author":{"gitId":"cwq2326"},"content":"Examples of usage:","lastModifiedDate":"2022-02-24"},{"lineNumber":215,"author":{"gitId":"cwq2326"},"content":"* `edit 1 p/91234567 e/johndoe@example.com` edits the phone number and email address of the 1st student to be `91234567`","lastModifiedDate":"2022-03-27"},{"lineNumber":216,"author":{"gitId":"cwq2326"},"content":"  and `johndoe@example.com` respectively.","lastModifiedDate":"2022-02-24"},{"lineNumber":217,"author":{"gitId":"cwq2326"},"content":"* `edit 2 n/David Limpeh t/` edits the entry to become `David Limpeh` and clears all existing tags.","lastModifiedDate":"2022-02-24"},{"lineNumber":218,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":219,"author":{"gitId":"tanchinkiat99"},"content":"💡`Tip`:","lastModifiedDate":"2022-03-31"},{"lineNumber":220,"author":{"gitId":"tanchinkiat99"},"content":"* Edits can be reversed with the `undo` feature.","lastModifiedDate":"2022-03-31"},{"lineNumber":221,"author":{"gitId":"cwq2326"},"content":"","lastModifiedDate":"2022-03-29"},{"lineNumber":222,"author":{"gitId":"jiale-c"},"content":"### Deleting a contact","lastModifiedDate":"2022-03-30"},{"lineNumber":223,"author":{"gitId":"jiale-c"},"content":"Delete a contact at a specific index.","lastModifiedDate":"2022-03-30"},{"lineNumber":224,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":225,"author":{"gitId":"jiale-c"},"content":"Format: `delete INDEX`","lastModifiedDate":"2022-03-30"},{"lineNumber":226,"author":{"gitId":"tanchinkiat99"},"content":"* Deletes an existing student in Tracey. The student is referred to by an index, displayed beside his/her name in the student list.","lastModifiedDate":"2022-03-31"},{"lineNumber":227,"author":{"gitId":"jiale-c"},"content":"* To delete a student, you can use the command `delete` on the student\u0027s `INDEX`.","lastModifiedDate":"2022-03-30"},{"lineNumber":228,"author":{"gitId":"jiale-c"},"content":"  The index **must be a positive integer** 1, 2, 3, …","lastModifiedDate":"2022-03-30"},{"lineNumber":229,"author":{"gitId":"jiale-c"},"content":"* Deletes one student at a time.","lastModifiedDate":"2022-03-30"},{"lineNumber":230,"author":{"gitId":"tanchinkiat99"},"content":"* You can only delete the contact information at an index where there is a student assigned to it.","lastModifiedDate":"2022-03-31"},{"lineNumber":231,"author":{"gitId":"DannyDakota"},"content":"","lastModifiedDate":"2022-03-27"},{"lineNumber":232,"author":{"gitId":"jiale-c"},"content":"How to identify `INDEX`:","lastModifiedDate":"2022-03-30"},{"lineNumber":233,"author":{"gitId":"jiale-c"},"content":"![FAQ_IndexLocation](images/FAQ_IndexLocation.png) *Figure 5: Screenshot of index location.*","lastModifiedDate":"2022-03-31"},{"lineNumber":234,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":235,"author":{"gitId":"jiale-c"},"content":"Examples of usage:","lastModifiedDate":"2022-03-30"},{"lineNumber":236,"author":{"gitId":"tanchinkiat99"},"content":"* `delete 2` removes the 2nd student on the list.","lastModifiedDate":"2022-03-31"},{"lineNumber":237,"author":{"gitId":"tanchinkiat99"},"content":"* `delete 10` removes the 10th student on the list.","lastModifiedDate":"2022-03-31"},{"lineNumber":238,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":239,"author":{"gitId":"jiale-c"},"content":"💡`Tips:`","lastModifiedDate":"2022-03-30"},{"lineNumber":240,"author":{"gitId":"tanchinkiat99"},"content":"* The `INDEX` used for each student is not fixed. It depends on the number shown on the displayed list of students.","lastModifiedDate":"2022-03-31"},{"lineNumber":241,"author":{"gitId":"cwq2326"},"content":"* You can use \u003ca href\u003d\u0027#finding-a-contact\u0027\u003e`find`\u003c/a\u003e to get his/her `INDEX` and then apply `delete`.","lastModifiedDate":"2022-04-03"},{"lineNumber":242,"author":{"gitId":"jiale-c"},"content":"* This can save you time scrolling down an entire list to get his/her `INDEX`!","lastModifiedDate":"2022-03-30"},{"lineNumber":243,"author":{"gitId":"tanchinkiat99"},"content":"* Deletions can be reversed with the `undo` feature.","lastModifiedDate":"2022-03-31"},{"lineNumber":244,"author":{"gitId":"kevinkuo0320"},"content":"","lastModifiedDate":"2022-03-27"},{"lineNumber":245,"author":{"gitId":"tanchinkiat99"},"content":"### Undoing an action","lastModifiedDate":"2022-03-31"},{"lineNumber":246,"author":{"gitId":"tanchinkiat99"},"content":"Undo an executed `add`, `edit` or `delete` command.","lastModifiedDate":"2022-03-31"},{"lineNumber":247,"author":{"gitId":"tanchinkiat99"},"content":"","lastModifiedDate":"2022-03-31"},{"lineNumber":248,"author":{"gitId":"tanchinkiat99"},"content":"Format: `undo`","lastModifiedDate":"2022-03-31"},{"lineNumber":249,"author":{"gitId":"tanchinkiat99"},"content":"* Undoes only the last executed add, edit or delete command.","lastModifiedDate":"2022-03-31"},{"lineNumber":250,"author":{"gitId":"tanchinkiat99"},"content":"* You can only use the undo command after executing an add, edit, or delete command.","lastModifiedDate":"2022-03-31"},{"lineNumber":251,"author":{"gitId":"tanchinkiat99"},"content":"* Cannot be used in succession to undo previously executed commands besides the last executed one.","lastModifiedDate":"2022-03-31"},{"lineNumber":252,"author":{"gitId":"tanchinkiat99"},"content":"","lastModifiedDate":"2022-03-31"},{"lineNumber":253,"author":{"gitId":"tanchinkiat99"},"content":"### Redoing an action","lastModifiedDate":"2022-03-31"},{"lineNumber":254,"author":{"gitId":"tanchinkiat99"},"content":"Reverses an executed undo command.","lastModifiedDate":"2022-03-31"},{"lineNumber":255,"author":{"gitId":"tanchinkiat99"},"content":"","lastModifiedDate":"2022-03-31"},{"lineNumber":256,"author":{"gitId":"tanchinkiat99"},"content":"Format: `redo`","lastModifiedDate":"2022-03-31"},{"lineNumber":257,"author":{"gitId":"tanchinkiat99"},"content":"* Reverses only the last executed `undo` command.","lastModifiedDate":"2022-03-31"},{"lineNumber":258,"author":{"gitId":"tanchinkiat99"},"content":"* You can only use the `redo` command after executing an `undo` command.","lastModifiedDate":"2022-03-31"},{"lineNumber":259,"author":{"gitId":"tanchinkiat99"},"content":"* Cannot be used in succession to reverse previously executed `undo` commands besides the last executed one.","lastModifiedDate":"2022-03-31"},{"lineNumber":260,"author":{"gitId":"tanchinkiat99"},"content":"","lastModifiedDate":"2022-03-31"},{"lineNumber":261,"author":{"gitId":"jiale-c"},"content":"### Finding a contact","lastModifiedDate":"2022-03-30"},{"lineNumber":262,"author":{"gitId":"jiale-c"},"content":"Find a particular contact in Tracey and retrieve their specific details.","lastModifiedDate":"2022-03-30"},{"lineNumber":263,"author":{"gitId":"kevinkuo0320"},"content":"","lastModifiedDate":"2022-03-27"},{"lineNumber":264,"author":{"gitId":"jiale-c"},"content":"Format: `find NAME`","lastModifiedDate":"2022-03-30"},{"lineNumber":265,"author":{"gitId":"tanchinkiat99"},"content":"* Returns the student(s) whose name(s) contain the input keyword `NAME` with their **details**.","lastModifiedDate":"2022-03-31"},{"lineNumber":266,"author":{"gitId":"jiale-c"},"content":"* The **details** provided are the student\u0027s `Name`, `Matriculation Number`, `Faculty`, `Block`, `Phone`, `Address`, `Email` amd `Covid Status`.","lastModifiedDate":"2022-03-30"},{"lineNumber":267,"author":{"gitId":"jiale-c"},"content":"* A screenshot (Figure 6) is provided below to demonstrate what the find function returns.","lastModifiedDate":"2022-03-31"},{"lineNumber":268,"author":{"gitId":"tanchinkiat99"},"content":"* The search is case-insensitive. e.g `johnDoe` will match `Johndoe`.","lastModifiedDate":"2022-03-31"},{"lineNumber":269,"author":{"gitId":"tanchinkiat99"},"content":"* The search does not require full name. e.g. `jo` will match `Joe` and `John`.","lastModifiedDate":"2022-03-31"},{"lineNumber":270,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":271,"author":{"gitId":"jiale-c"},"content":"Examples of usages:","lastModifiedDate":"2022-03-30"},{"lineNumber":272,"author":{"gitId":"DannyDakota"},"content":"","lastModifiedDate":"2022-03-24"},{"lineNumber":273,"author":{"gitId":"tanchinkiat99"},"content":"* `find John` returns `john` and `John Doe`.","lastModifiedDate":"2022-03-31"},{"lineNumber":274,"author":{"gitId":"tanchinkiat99"},"content":"* `find alex david` returns `Alex Yeoh` and`David Li`.","lastModifiedDate":"2022-03-31"},{"lineNumber":275,"author":{"gitId":"tanchinkiat99"},"content":"* `find J` returns `john` and`jay`.","lastModifiedDate":"2022-03-31"},{"lineNumber":276,"author":{"gitId":"DannyDakota"},"content":"","lastModifiedDate":"2022-03-24"},{"lineNumber":277,"author":{"gitId":"jiale-c"},"content":"Scenario:","lastModifiedDate":"2022-03-30"},{"lineNumber":278,"author":{"gitId":"jiale-c"},"content":"![find](images/FindScreenshotForUG.png) *Figure 6: Screenshot of result of the find command.*","lastModifiedDate":"2022-03-31"},{"lineNumber":279,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":280,"author":{"gitId":"jiale-c"},"content":"As seen in the *Figure 6*, after the user keys in `find Bernice`, the application returns Bernice\u0027s details: `Name`, `Matriculation Number`, `Faculty`, `Block`, `Phone`, `Address`, `Email` amd `Covid Status`.","lastModifiedDate":"2022-03-31"},{"lineNumber":281,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":282,"author":{"gitId":"cwq2326"},"content":"### Filtering contacts","lastModifiedDate":"2022-03-30"},{"lineNumber":283,"author":{"gitId":"tanchinkiat99"},"content":"Filter students based on faculties, health statuses and/or blocks.","lastModifiedDate":"2022-03-31"},{"lineNumber":284,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-02-04"},{"lineNumber":285,"author":{"gitId":"tanchinkiat99"},"content":"Format:`filter f/FACULTY cs/COVID_STATUS b/BLOCK`","lastModifiedDate":"2022-03-31"},{"lineNumber":286,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-02-04"},{"lineNumber":287,"author":{"gitId":"tanchinkiat99"},"content":"* Returns a list of students that fit the criteria given by the user in the form of pre-defined constants in the categories of faculty, covid status and block.","lastModifiedDate":"2022-03-31"},{"lineNumber":288,"author":{"gitId":"tanchinkiat99"},"content":"* Refer to Table 2 in the \u003ca href\u003d\u0027#glossary\u0027\u003eglossary\u003c/a\u003e for the list of pre-defined constants to be used for these 3 categories.","lastModifiedDate":"2022-03-31"},{"lineNumber":289,"author":{"gitId":"cwq2326"},"content":"* The search is case-insensitive. e.g `Positive` will match `positive`.","lastModifiedDate":"2022-03-27"},{"lineNumber":290,"author":{"gitId":"tanchinkiat99"},"content":"* The order of fields specified does not matter e.g. `filter f/soc cs/positive` and `filter cs/positive f/soc` will return the same result.","lastModifiedDate":"2022-03-31"},{"lineNumber":291,"author":{"gitId":"tanchinkiat99"},"content":"* At least one field has to be specified, but not all need to be e.g. `filter` is invalid, but `filter b/A` is valid.","lastModifiedDate":"2022-03-31"},{"lineNumber":292,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-02-04"},{"lineNumber":293,"author":{"gitId":"cwq2326"},"content":"Examples of usage:","lastModifiedDate":"2022-02-24"},{"lineNumber":294,"author":{"gitId":"cwq2326"},"content":"* `filter cs/positive` returns all students that are tagged as covid-positive.","lastModifiedDate":"2022-03-27"},{"lineNumber":295,"author":{"gitId":"cwq2326"},"content":"* `filter f/soc` returns all students that are enrolled in the faculty SOC (School of Computing).","lastModifiedDate":"2022-03-27"},{"lineNumber":296,"author":{"gitId":"tanchinkiat99"},"content":"* `filter b/e` returns all students who live in block E of the hall.","lastModifiedDate":"2022-03-31"},{"lineNumber":297,"author":{"gitId":"cwq2326"},"content":"* `filter cs/negative f/soc` returns all students that are tagged as covid-negative and enrolled in the faculty SOC (School of Computing).","lastModifiedDate":"2022-03-27"},{"lineNumber":298,"author":{"gitId":"tanchinkiat99"},"content":"* `filter cs/negative f/soc b/e` returns all students that are tagged as covid-negative, enrolled in the faculty SOC (School of Computing) and live in block E of the hall.","lastModifiedDate":"2022-03-31"},{"lineNumber":299,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-03-31"},{"lineNumber":300,"author":{"gitId":"tanchinkiat99"},"content":"An example is shown below:","lastModifiedDate":"2022-03-31"},{"lineNumber":301,"author":{"gitId":"jiale-c"},"content":"![find](images/FilterScreenshotForUG.png) *Figure 7: Example result of `filter` command.*","lastModifiedDate":"2022-03-31"},{"lineNumber":302,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-03-31"},{"lineNumber":303,"author":{"gitId":"jiale-c"},"content":"As seen in *Figure 7*, using the `filter` command with \"negative\" as covid status, \"soc\" as faculty and \"e\" as block will return a list of contacts matching these criteria.","lastModifiedDate":"2022-03-31"},{"lineNumber":304,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":305,"author":{"gitId":"cwq2326"},"content":"📓`Note:`","lastModifiedDate":"2022-03-29"},{"lineNumber":306,"author":{"gitId":"tanchinkiat99"},"content":"* `filter` command only allows you to search via faculty, health status and block. To search for contacts whose names contain a keyword, use the `find` command instead.","lastModifiedDate":"2022-03-31"},{"lineNumber":307,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-03-27"},{"lineNumber":308,"author":{"gitId":"jiale-c"},"content":"### Listing the records","lastModifiedDate":"2022-03-30"},{"lineNumber":309,"author":{"gitId":"tanchinkiat99"},"content":"List all students, displaying all their data stored in Tracey.","lastModifiedDate":"2022-03-31"},{"lineNumber":310,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-03-30"},{"lineNumber":311,"author":{"gitId":"-"},"content":"Format: `list`","lastModifiedDate":"2022-03-30"},{"lineNumber":312,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-03-30"},{"lineNumber":313,"author":{"gitId":"tanchinkiat99"},"content":"This is a sample screenshot of what you can expect from the `list` command.","lastModifiedDate":"2022-03-31"},{"lineNumber":314,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-03-30"},{"lineNumber":315,"author":{"gitId":"jiale-c"},"content":"![list](images/ListFeatureScreenShot.PNG) *Figure 8: Screenshot of list command.*","lastModifiedDate":"2022-03-31"},{"lineNumber":316,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-03-30"},{"lineNumber":317,"author":{"gitId":"jiale-c"},"content":"### Copying emails","lastModifiedDate":"2022-03-30"},{"lineNumber":318,"author":{"gitId":"cwq2326"},"content":"Opens up a separate window that consists of all the emails of the current displayed individuals. On the window, there will be a `Copy Email` button that copies the list of emails to the user\u0027s clipboard to allow the user to efficiently send out mass emails.","lastModifiedDate":"2022-03-31"},{"lineNumber":319,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-03-31"},{"lineNumber":320,"author":{"gitId":"cwq2326"},"content":"Format:`email`","lastModifiedDate":"2022-03-31"},{"lineNumber":321,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-03-31"},{"lineNumber":322,"author":{"gitId":"cwq2326"},"content":"📓`Note:`","lastModifiedDate":"2022-03-31"},{"lineNumber":323,"author":{"gitId":"cwq2326"},"content":"There is also a `Show Email` button on the GUI which you can click to open the same window.","lastModifiedDate":"2022-03-31"},{"lineNumber":324,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-03-31"},{"lineNumber":325,"author":{"gitId":"jiale-c"},"content":"![Email](images/CopyEmailScreenshot.png) *Figure 9: Screenshot of Copy Email function.*","lastModifiedDate":"2022-03-31"},{"lineNumber":326,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-03-30"},{"lineNumber":327,"author":{"gitId":"jiale-c"},"content":"From Figure 9, this function is beneficial for administrators as you may want to contact this particular set of students. Simply click `Copy Email` and you can go to the email platform of your choice and paste this in the Address section. This function definitely faster than individually copy-pasting student emails.","lastModifiedDate":"2022-03-31"},{"lineNumber":328,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-03-30"},{"lineNumber":329,"author":{"gitId":"jiale-c"},"content":"### Summarising the records","lastModifiedDate":"2022-03-30"},{"lineNumber":330,"author":{"gitId":"tanchinkiat99"},"content":"Summarises the statistics of the student records inside Tracey.","lastModifiedDate":"2022-03-31"},{"lineNumber":331,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-03-30"},{"lineNumber":332,"author":{"gitId":"jiale-c"},"content":"Format:`summarise`","lastModifiedDate":"2022-03-30"},{"lineNumber":333,"author":{"gitId":"jiale-c"},"content":"* You can get an overview of the students in Tracey if you want to get an idea of the location where covid is more prevalent.","lastModifiedDate":"2022-03-30"},{"lineNumber":334,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-03-30"},{"lineNumber":335,"author":{"gitId":"jiale-c"},"content":"Example of usage:","lastModifiedDate":"2022-03-30"},{"lineNumber":336,"author":{"gitId":"jiale-c"},"content":"* `summarise` will summarise the records of everyone in Tracey. The result is a graphical analysis the `Covid Status` of the individuals in each block. Additionally, an overview of the `Covid Status` of the Hall population is also provided (refer to figure 4).","lastModifiedDate":"2022-03-30"},{"lineNumber":337,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-03-30"},{"lineNumber":338,"author":{"gitId":"jiale-c"},"content":"![SummariseExample](images/SummariseExample.png) *Figure 10: Example response of Tracey in response to the `summarise` command.*","lastModifiedDate":"2022-03-31"},{"lineNumber":339,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-03-30"},{"lineNumber":340,"author":{"gitId":"jiale-c"},"content":"From Figure 10, when the user inputs the `Summarise` command, the result are multiple charts of the proportion of the student population categorised by `Covid Status`. These charts are separated into the student `Blocks` and the wider hall population.","lastModifiedDate":"2022-03-31"},{"lineNumber":341,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-03-30"},{"lineNumber":342,"author":{"gitId":"cwq2326"},"content":"### Archiving Tracey","lastModifiedDate":"2022-03-30"},{"lineNumber":343,"author":{"gitId":"cwq2326"},"content":"Archives the current Tracey database. The archived database will be saved in `[ROOT]/data/archive/[DATE]/[ARCHIVED_FILE]` where:","lastModifiedDate":"2022-03-29"},{"lineNumber":344,"author":{"gitId":"cwq2326"},"content":"* `[ROOT]`: The folder where the Tracey.jar is in.","lastModifiedDate":"2022-04-03"},{"lineNumber":345,"author":{"gitId":"cwq2326"},"content":"* `[DATE]`: Archived file directory named using your local PC\u0027s date in the format of DDMMYY.","lastModifiedDate":"2022-03-27"},{"lineNumber":346,"author":{"gitId":"cwq2326"},"content":"  * The day is abbreviated as DD, the month is abbreviated as MM and the last two digit of the year is abbreviated as YY.","lastModifiedDate":"2022-04-03"},{"lineNumber":347,"author":{"gitId":"cwq2326"},"content":"* `[ARCHIVED_FILE]`: Archived file name named using your local PC\u0027s date and time in the format of DDMMYY_hhmmssSSS","lastModifiedDate":"2022-04-03"},{"lineNumber":348,"author":{"gitId":"cwq2326"},"content":"  * The hour is abbreviated as hh, the minute is abbreviated as mm, the seconds is abbreviated as ss and the milliseconds is abbreviated as SSS. ","lastModifiedDate":"2022-04-03"},{"lineNumber":349,"author":{"gitId":"cwq2326"},"content":"","lastModifiedDate":"2022-03-27"},{"lineNumber":350,"author":{"gitId":"cwq2326"},"content":"Format: `archive`","lastModifiedDate":"2022-03-29"},{"lineNumber":351,"author":{"gitId":"cwq2326"},"content":"","lastModifiedDate":"2022-03-29"},{"lineNumber":352,"author":{"gitId":"cwq2326"},"content":"Example:","lastModifiedDate":"2022-03-27"},{"lineNumber":353,"author":{"gitId":"cwq2326"},"content":"* Current date and time in which archive command is used: 27/03/2022 (DD/MM/YYYY) 15:28:33:123 (hh:mm:ss:SSS in 24-hour notation).","lastModifiedDate":"2022-04-03"},{"lineNumber":354,"author":{"gitId":"cwq2326"},"content":"* The archived file will be saved **in** `[ROOT]/data/archive/270322123`.","lastModifiedDate":"2022-04-03"},{"lineNumber":355,"author":{"gitId":"cwq2326"},"content":"* The archived file will be saved **as** `270322_152833`.","lastModifiedDate":"2022-03-27"},{"lineNumber":356,"author":{"gitId":"cwq2326"},"content":"* The file path will be `[ROOT]/data/archive/270322/270322_152833123`.","lastModifiedDate":"2022-04-03"},{"lineNumber":357,"author":{"gitId":"cwq2326"},"content":"","lastModifiedDate":"2022-03-27"},{"lineNumber":358,"author":{"gitId":"cwq2326"},"content":"💡`Tips:`","lastModifiedDate":"2022-03-29"},{"lineNumber":359,"author":{"gitId":"cwq2326"},"content":"* You can rename the archived file in the file path manually for easier reference.","lastModifiedDate":"2022-03-27"},{"lineNumber":360,"author":{"gitId":"cwq2326"},"content":"  * Features for naming of the archived file via the CLI will be available in later releases.","lastModifiedDate":"2022-04-03"},{"lineNumber":361,"author":{"gitId":"DannyDakota"},"content":"* To restore Tracey to a previous version, just replace the address book file in `[ROOT]/data` with the archived file.","lastModifiedDate":"2022-03-27"},{"lineNumber":362,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-03-27"},{"lineNumber":363,"author":{"gitId":"cwq2326"},"content":"### Resizing the result display window","lastModifiedDate":"2022-03-31"},{"lineNumber":364,"author":{"gitId":"cwq2326"},"content":"Resizes the result display window to 3 pre-set sizes.","lastModifiedDate":"2022-03-31"},{"lineNumber":365,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-03-31"},{"lineNumber":366,"author":{"gitId":"cwq2326"},"content":"Format: `resize SIZE`","lastModifiedDate":"2022-03-31"},{"lineNumber":367,"author":{"gitId":"cwq2326"},"content":"* There are 3 options for `SIZE` which are 1, 2 and 3.","lastModifiedDate":"2022-03-31"},{"lineNumber":368,"author":{"gitId":"cwq2326"},"content":"* The default result display window size is option 1.","lastModifiedDate":"2022-03-31"},{"lineNumber":369,"author":{"gitId":"jiale-c"},"content":"* Refer to figures 11 for the comparison for the different result display window sizes.","lastModifiedDate":"2022-03-31"},{"lineNumber":370,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-03-31"},{"lineNumber":371,"author":{"gitId":"cwq2326"},"content":"💡`Tips:`","lastModifiedDate":"2022-03-31"},{"lineNumber":372,"author":{"gitId":"cwq2326"},"content":"* This feature is especially useful if you need a bigger result display window size to better view the result feedback given by Tracey, especially if the result feedback is long.","lastModifiedDate":"2022-03-31"},{"lineNumber":373,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-03-31"},{"lineNumber":374,"author":{"gitId":"cwq2326"},"content":"📓`Note:`","lastModifiedDate":"2022-03-31"},{"lineNumber":375,"author":{"gitId":"cwq2326"},"content":"* There is also a `Resize Display` button on the GUI which you can click to cycle between the 3 different resizing options.","lastModifiedDate":"2022-04-03"},{"lineNumber":376,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-04-02"},{"lineNumber":377,"author":{"gitId":"jiale-c"},"content":"![Comparison of 3 resize options](images/resize_options.png) *Figure 11: Comparison of the 3 different resizing options for the result display window.*","lastModifiedDate":"2022-03-31"},{"lineNumber":378,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-03-31"},{"lineNumber":379,"author":{"gitId":"jiale-c"},"content":"### Clearing all records","lastModifiedDate":"2022-03-30"},{"lineNumber":380,"author":{"gitId":"jiale-c"},"content":"Clear all the data inside Tracey.","lastModifiedDate":"2022-03-30"},{"lineNumber":381,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-03-30"},{"lineNumber":382,"author":{"gitId":"jiale-c"},"content":"Format:`clear`","lastModifiedDate":"2022-03-30"},{"lineNumber":383,"author":{"gitId":"jiale-c"},"content":"","lastModifiedDate":"2022-03-30"},{"lineNumber":384,"author":{"gitId":"jiale-c"},"content":"⚠️`Warning:`","lastModifiedDate":"2022-03-30"},{"lineNumber":385,"author":{"gitId":"cwq2326"},"content":"* Use the \u003ca href\u003d\u0027#archiving-tracey\u0027\u003e`archive`\u003c/a\u003e feature to save a copy of the data file if you intend to keep it as the deleted files cannot be recovered.","lastModifiedDate":"2022-04-03"},{"lineNumber":386,"author":{"gitId":"tanchinkiat99"},"content":"* This feature cannot be reversed using `undo`.","lastModifiedDate":"2022-03-31"},{"lineNumber":387,"author":{"gitId":"jiale-c"},"content":"","lastModifiedDate":"2022-03-30"},{"lineNumber":388,"author":{"gitId":"jiale-c"},"content":"### Exiting Tracey","lastModifiedDate":"2022-03-30"},{"lineNumber":389,"author":{"gitId":"jiale-c"},"content":"Close the application.","lastModifiedDate":"2022-03-30"},{"lineNumber":390,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-03-30"},{"lineNumber":391,"author":{"gitId":"-"},"content":"Format: `exit`","lastModifiedDate":"2022-03-30"},{"lineNumber":392,"author":{"gitId":"tanchinkiat99"},"content":"* Closes the application.","lastModifiedDate":"2022-03-31"},{"lineNumber":393,"author":{"gitId":"jiale-c"},"content":"","lastModifiedDate":"2022-03-30"},{"lineNumber":394,"author":{"gitId":"cwq2326"},"content":"### Saving","lastModifiedDate":"2022-02-24"},{"lineNumber":395,"author":{"gitId":"cwq2326"},"content":"Saving in the application is automatic. The data in the file will be saved accordingly whenever","lastModifiedDate":"2022-02-24"},{"lineNumber":396,"author":{"gitId":"cwq2326"},"content":"there are changes to Tracey.","lastModifiedDate":"2022-03-29"},{"lineNumber":397,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":398,"author":{"gitId":"DannyDakota"},"content":"---------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2022-03-24"},{"lineNumber":399,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":400,"author":{"gitId":"cwq2326"},"content":"### FAQ","lastModifiedDate":"2022-02-24"},{"lineNumber":401,"author":{"gitId":"jiale-c"},"content":"1. **Q**: How do I transfer my data to another computer? \u003cbr\u003e","lastModifiedDate":"2022-03-27"},{"lineNumber":402,"author":{"gitId":"cwq2326"},"content":"   **A**: Copy the file from [ROOT]/data/addressbook.json over to your other computer. \u003cbr\u003e","lastModifiedDate":"2022-03-29"},{"lineNumber":403,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-03-16"},{"lineNumber":404,"author":{"gitId":"jiale-c"},"content":"2. **Q**: What is the difference between the `list` command and `summarise` command? \u003cbr\u003e","lastModifiedDate":"2022-03-27"},{"lineNumber":405,"author":{"gitId":"jiale-c"},"content":"   **A**: The main differences of `list` and `summarise` are:","lastModifiedDate":"2022-03-27"},{"lineNumber":406,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":407,"author":{"gitId":"cwq2326"},"content":"        a. The `list` command will provide an unfiltered list of students `summarise` command will tabulate the students into pie charts according to the block they stay in and faculty they belong to.","lastModifiedDate":"2022-03-27"},{"lineNumber":408,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-03-27"},{"lineNumber":409,"author":{"gitId":"cwq2326"},"content":"        b. `list` is helpful to get a bird eye view of the details of all the students whereas `summarise` is great to analyse how certain areas in the hall compound is doing.","lastModifiedDate":"2022-03-27"},{"lineNumber":410,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-03-27"},{"lineNumber":411,"author":{"gitId":"cwq2326"},"content":"        c. `list` is optimal to find a particular student out of everyone while `summarise` is optimal to find which block is dealing not-so-well with the covid outbreak.","lastModifiedDate":"2022-03-27"},{"lineNumber":412,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":413,"author":{"gitId":"jiale-c"},"content":"3. **Q**: Can I use filter using keywords to find certain people in the list of students? \u003cbr\u003e","lastModifiedDate":"2022-03-27"},{"lineNumber":414,"author":{"gitId":"jiale-c"},"content":"   **A**: Unfortunately `filter` command only allows you to search via the tags such as `positive`, `soc` and block `A`. Please use the `find` command instead which will allow you to search via keywords. \u003cbr\u003e","lastModifiedDate":"2022-03-27"},{"lineNumber":415,"author":{"gitId":"jiale-c"},"content":"","lastModifiedDate":"2022-03-27"},{"lineNumber":416,"author":{"gitId":"jiale-c"},"content":"4. **Q**: Where can I find the `INDEX` of a student? \u003cbr\u003e","lastModifiedDate":"2022-03-27"},{"lineNumber":417,"author":{"gitId":"jiale-c"},"content":"   **A**: They can be found in the numbers located beside each individual student. \u003cbr\u003e","lastModifiedDate":"2022-03-27"},{"lineNumber":418,"author":{"gitId":"jiale-c"},"content":"   ![FAQ_IndexLocation](images/FAQ_IndexLocation.png) *Figure 5: Screenshot of index location.*","lastModifiedDate":"2022-03-31"},{"lineNumber":419,"author":{"gitId":"jiale-c"},"content":"","lastModifiedDate":"2022-03-27"},{"lineNumber":420,"author":{"gitId":"cwq2326"},"content":"5. **Q**: The `delete` feature only allow us to delete via the `INDEX` assigned to each particular student. How do I know the `INDEX` of the student i want to use `delete` on? \u003cbr\u003e","lastModifiedDate":"2022-03-27"},{"lineNumber":421,"author":{"gitId":"jiale-c"},"content":"   **A**: The `INDEX` used for `delete` is not fixed. It relies on the number in which the displayed list of students will assign.","lastModifiedDate":"2022-03-27"},{"lineNumber":422,"author":{"gitId":"jiale-c"},"content":"   You can use `find` `STUDENT` to get his/her `INDEX` and then apply `delete`. This can save you time scrolling down an entire list to get his/her `INDEX`! \u003cbr\u003e","lastModifiedDate":"2022-03-27"},{"lineNumber":423,"author":{"gitId":"jiale-c"},"content":"","lastModifiedDate":"2022-03-27"},{"lineNumber":424,"author":{"gitId":"cwq2326"},"content":"6. **Q**: The `edit` feature only allow us to edit via the `INDEX` assigned to each particular student. How do I know the `INDEX` of the student i want to use `edit` on? \u003cbr\u003e","lastModifiedDate":"2022-03-27"},{"lineNumber":425,"author":{"gitId":"jiale-c"},"content":"   **A**: The `INDEX` used for `edit` is not fixed. It relies on the number in which the displayed list of students will assign.","lastModifiedDate":"2022-03-27"},{"lineNumber":426,"author":{"gitId":"jiale-c"},"content":"   You can use `find` `STUDENT` to get his/her `INDEX` and then apply `edit`. This can save you time scrolling down an entire list to get his/her `INDEX`! \u003cbr\u003e","lastModifiedDate":"2022-03-27"},{"lineNumber":427,"author":{"gitId":"jiale-c"},"content":"","lastModifiedDate":"2022-03-27"},{"lineNumber":428,"author":{"gitId":"jiale-c"},"content":"7. **Q**: Can I create new tags not mentioned by the app? \u003cbr\u003e","lastModifiedDate":"2022-03-27"},{"lineNumber":429,"author":{"gitId":"cwq2326"},"content":"   **A**: Yes! You are able to add optional tags with no restrictions using the `t/` prefix.","lastModifiedDate":"2022-03-27"},{"lineNumber":430,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-03-27"},{"lineNumber":431,"author":{"gitId":"-"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2020-05-23"},{"lineNumber":432,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":433,"author":{"gitId":"cwq2326"},"content":"### Command Summary","lastModifiedDate":"2022-02-24"},{"lineNumber":434,"author":{"gitId":"DannyDakota"},"content":"","lastModifiedDate":"2022-03-27"},{"lineNumber":435,"author":{"gitId":"tanchinkiat99"},"content":"*Table 5: Command Summary.*","lastModifiedDate":"2022-03-31"},{"lineNumber":436,"author":{"gitId":"DannyDakota"},"content":"","lastModifiedDate":"2022-03-30"},{"lineNumber":437,"author":{"gitId":"DannyDakota"},"content":"| No. | Command     | Description                                                                               | Example                                                                                                                                |","lastModifiedDate":"2022-03-27"},{"lineNumber":438,"author":{"gitId":"cwq2326"},"content":"|-----|-------------|-------------------------------------------------------------------------------------------|----------------------------------------------------------------------------------------------------------------------------------------|","lastModifiedDate":"2022-03-31"},{"lineNumber":439,"author":{"gitId":"DannyDakota"},"content":"| 1.  | `find`      | Find a particular student                                                                 | `find alex` \\n `find j`                                                                                                                |","lastModifiedDate":"2022-03-27"},{"lineNumber":440,"author":{"gitId":"DannyDakota"},"content":"| 2.  | `add`       | Add a student to the Tracey Database                                                      | `add n/John Doe b/E f/SoC p/98765432 e/johnd@example.com a/311, Clementi Ave 2, #02-25 mc/A0253647C cs/NEGATIVE t/friends t/owesMoney` |","lastModifiedDate":"2022-03-27"},{"lineNumber":441,"author":{"gitId":"DannyDakota"},"content":"| 3.  | `delete`    | Remove a student from Tracey                                                              | `delete 2`                                                                                                                             |","lastModifiedDate":"2022-03-27"},{"lineNumber":442,"author":{"gitId":"DannyDakota"},"content":"| 4.  | `edit`      | Change particulars of a student                                                           | `edit 1 p/91234567 e/johndoe@example.com`                                                                                              |","lastModifiedDate":"2022-03-27"},{"lineNumber":443,"author":{"gitId":"DannyDakota"},"content":"| 5.  | `clear`     | Format the Tracey Database                                                                | `clear`                                                                                                                                |","lastModifiedDate":"2022-03-27"},{"lineNumber":444,"author":{"gitId":"DannyDakota"},"content":"| 6.  | `summarise` | Summarise data into a list and pie charts for an overview                                 | `summarise`                                                                                                                            |","lastModifiedDate":"2022-03-27"},{"lineNumber":445,"author":{"gitId":"DannyDakota"},"content":"| 7.  | `list`      | Get a list of everyone in Tracey                                                          | `list`                                                                                                                                 |","lastModifiedDate":"2022-03-27"},{"lineNumber":446,"author":{"gitId":"DannyDakota"},"content":"| 8.  | `help`      | In-app support to understand how the commands work in Tracey                              | `help`                                                                                                                                 |","lastModifiedDate":"2022-03-27"},{"lineNumber":447,"author":{"gitId":"DannyDakota"},"content":"| 9.  | `filter`    | Retrieve list of people based on tags                                                     | `filter cs/HEALTH_STATUS f/FACULTY`                                                                                                    |","lastModifiedDate":"2022-03-27"},{"lineNumber":448,"author":{"gitId":"DannyDakota"},"content":"| 10. | `archive`   | Archives the Tracey Database                                                              | `archive`                                                                                                                              |","lastModifiedDate":"2022-03-27"},{"lineNumber":449,"author":{"gitId":"cwq2326"},"content":"| 11. | `email`     | Opens a window of all student\u0027s in the current list which can be copied to your clipboard | `email`                                                                                                                                |","lastModifiedDate":"2022-03-31"},{"lineNumber":450,"author":{"gitId":"cwq2326"},"content":"| 12. | `resize`    | Resizes the result display window                                                         | `resize 1`                                                                                                                              |","lastModifiedDate":"2022-03-31"},{"lineNumber":451,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-03-31"},{"lineNumber":452,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-03-27"},{"lineNumber":453,"author":{"gitId":"-"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2022-03-27"},{"lineNumber":454,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-03-27"},{"lineNumber":455,"author":{"gitId":"DannyDakota"},"content":"","lastModifiedDate":"2022-03-30"},{"lineNumber":456,"author":{"gitId":"jiale-c"},"content":"### Glossary","lastModifiedDate":"2022-03-27"},{"lineNumber":457,"author":{"gitId":"tanchinkiat99"},"content":"","lastModifiedDate":"2022-03-31"},{"lineNumber":458,"author":{"gitId":"tanchinkiat99"},"content":"*Table 4: List of prefixes, fields, pre-defined constants and constraints.*","lastModifiedDate":"2022-03-31"},{"lineNumber":459,"author":{"gitId":"tanchinkiat99"},"content":"","lastModifiedDate":"2022-03-31"},{"lineNumber":460,"author":{"gitId":"tanchinkiat99"},"content":"| **Prefix** | **Meaning** |    **Pre-defined constants**                                                                          | Constraints |","lastModifiedDate":"2022-03-31"},{"lineNumber":461,"author":{"gitId":"tanchinkiat99"},"content":"|:-----:|:--------------------:|:-------------------------------------------------------------------------------------------------:|:--------------------:|","lastModifiedDate":"2022-03-31"},{"lineNumber":462,"author":{"gitId":"tanchinkiat99"},"content":"| `n/`  | Name                 | None                                                                                                  | Can only contain alphanumeric characters and spaces. |","lastModifiedDate":"2022-03-31"},{"lineNumber":463,"author":{"gitId":"tanchinkiat99"},"content":"| `p/`  | Phone Number         | None                                                                                                  | Can only be numbers at least 3 digits long. |","lastModifiedDate":"2022-03-31"},{"lineNumber":464,"author":{"gitId":"tanchinkiat99"},"content":"| `e/`  | Email                | None                                                                                                  | An email address should begin with a local part containing alphanumeric characters and these special characters, excluding the parentheses: (+_.-). The local part cannot start with a special character. This should be followed by a \u0027@\u0027 and then a domain name. The domain name should be made up of domain labels separated by periods. The domain name must end with a domain label at least 2 characters long and each domain label can only consist of alphanumeric characters, separated only by hyphens, if any. |","lastModifiedDate":"2022-03-31"},{"lineNumber":465,"author":{"gitId":"tanchinkiat99"},"content":"| `a/`  | Address              | None                                                                                                  | Cannot be blank. |","lastModifiedDate":"2022-03-31"},{"lineNumber":466,"author":{"gitId":"tanchinkiat99"},"content":"| `f/`  | Faculty              | `FASS` `BIZ` `SOC` `SCALE` `FOD` `CDE` `DUKE` `FOL` `YLLSOM` `YSTCOM` `SOPP` `LKYSPP` `SPH` `FOS` | Can only be one of the pre-defined constants, and is case-insensitive. |","lastModifiedDate":"2022-03-31"},{"lineNumber":467,"author":{"gitId":"tanchinkiat99"},"content":"| `mc/` | Matriculation Number | None                                                                                                  | Can only start with an \"A\", followed by 7 digits, ending with a letter. |","lastModifiedDate":"2022-03-31"},{"lineNumber":468,"author":{"gitId":"tanchinkiat99"},"content":"| `cs/` | Covid Status         | `Positive` `Negative` `HRN`                                                                       | Can only be one of the pre-defined constants, and is case-insensitive. |","lastModifiedDate":"2022-03-31"},{"lineNumber":469,"author":{"gitId":"tanchinkiat99"},"content":"| `b/`  | Block                | `A` `B` `C` `D` `E`                                                                               | Can only be one of the pre-defined constants, and is case-insensitive. |","lastModifiedDate":"2022-03-31"},{"lineNumber":470,"author":{"gitId":"tanchinkiat99"},"content":"| `t/`  | Optional tag(s)      | None                                                                                                  | No constraints |","lastModifiedDate":"2022-03-31"},{"lineNumber":471,"author":{"gitId":"tanchinkiat99"},"content":"","lastModifiedDate":"2022-03-31"},{"lineNumber":472,"author":{"gitId":"tanchinkiat99"},"content":"*Table 6: Specific terminology used.*","lastModifiedDate":"2022-03-31"},{"lineNumber":473,"author":{"gitId":"tanchinkiat99"},"content":"","lastModifiedDate":"2022-03-31"},{"lineNumber":474,"author":{"gitId":"tanchinkiat99"},"content":"| Term                           | Meaning                                                                                                                                                                                                                                                                                              |","lastModifiedDate":"2022-03-31"},{"lineNumber":475,"author":{"gitId":"DannyDakota"},"content":"|--------------------------------|------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------|","lastModifiedDate":"2022-03-31"},{"lineNumber":476,"author":{"gitId":"tanchinkiat99"},"content":"| Block                          | The building or demarcated area within a residential hall that a student resides in. Typically, A residential hall is separated into 5 blocks: A, B, C, D and E.                                                                                                                                     |","lastModifiedDate":"2022-03-31"},{"lineNumber":477,"author":{"gitId":"tanchinkiat99"},"content":"| Command Line Interface (CLI)   | A text-based user interface used to run applications.                                                                                                                                                                                                                                                |","lastModifiedDate":"2022-03-31"},{"lineNumber":478,"author":{"gitId":"tanchinkiat99"},"content":"| Covid Status                   | A status to indicate whether a person is Covid-positive or has a has a health risk notice (HRN).                                                                                                                                                                                                     |","lastModifiedDate":"2022-03-31"},{"lineNumber":479,"author":{"gitId":"tanchinkiat99"},"content":"| Faculty                        | A group of departments in a university with a major division of knowledge. E.g. The School of Computing (SOC).                                                                                                                                                                                       |","lastModifiedDate":"2022-03-31"},{"lineNumber":480,"author":{"gitId":"tanchinkiat99"},"content":"| Graphical User Interface (GUI) | A system of interactive visual components used for managing user interaction with an application.                                                                                                                                                                                                    |","lastModifiedDate":"2022-03-31"},{"lineNumber":481,"author":{"gitId":"tanchinkiat99"},"content":"| Health Risk Notice (HRN)       | A label on a person to indicate that he/she has been identified as a close contact or household member of a Covid positive case.                                                                                                                                                                     |","lastModifiedDate":"2022-03-31"},{"lineNumber":482,"author":{"gitId":"tanchinkiat99"},"content":"| JAR File                       | JAR stands for **J**ava **AR**chive. This is a cross-platform file archive format that combines and compresses a large number of files into one, handling class files, audio and image files.                                                                                                        |","lastModifiedDate":"2022-03-31"},{"lineNumber":483,"author":{"gitId":"tanchinkiat99"},"content":"| Matriculation Number           | A student\u0027s unique identification number; also known as Student ID.                                                                                                                                                                                                                                  |","lastModifiedDate":"2022-03-31"},{"lineNumber":484,"author":{"gitId":"tanchinkiat99"},"content":"| Prefix                         | A set of one or more characters placed before others. When using Tracey, one or more letters followed by a forward slash (e.g. `cs/`) is used as a prefix to a detail to be input. The set of prefixes used by Tracey is shown in figure 3 under \u003ca href\u003d\u0027#adding-a-contact\u0027\u003e\"Adding a contact\"\u003c/a\u003e. |","lastModifiedDate":"2022-03-31"},{"lineNumber":485,"author":{"gitId":"tanchinkiat99"},"content":"| Pre-defined constant           | Specific values that certain fields can only take. E.g. The pre-defined constants for Covid Status are `Positive`, `Negative` and `HRN`. Thus, these are the only values that can be input with the Covid Status prefix. Any other values would result in an error.                                  |","lastModifiedDate":"2022-03-31"},{"lineNumber":486,"author":{"gitId":"tanchinkiat99"},"content":"| Uniform Resource Locator (URL) | A reference to a web resource specifying its location in a computer network and the mechanism for its retrieval; more commonly known as a web address.                                                                                                                                               |","lastModifiedDate":"2022-03-31"}],"authorContributionMap":{"tanchinkiat99":117,"DannyDakota":74,"kevinkuo0320":2,"cwq2326":102,"jiale-c":92,"-":99}},{"path":"docs/_sass/minima/_base.scss","fileType":"other","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"html {","lastModifiedDate":"2020-05-23"},{"lineNumber":2,"author":{"gitId":"-"},"content":"  font-size: $base-font-size;","lastModifiedDate":"2020-05-23"},{"lineNumber":3,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":5,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2020-05-23"},{"lineNumber":6,"author":{"gitId":"-"},"content":" * Reset some basic elements","lastModifiedDate":"2020-05-23"},{"lineNumber":7,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2020-05-23"},{"lineNumber":8,"author":{"gitId":"-"},"content":"body, h1, h2, h3, h4, h5, h6,","lastModifiedDate":"2020-05-23"},{"lineNumber":9,"author":{"gitId":"-"},"content":"p, blockquote, pre, hr,","lastModifiedDate":"2020-05-23"},{"lineNumber":10,"author":{"gitId":"-"},"content":"dl, dd, ol, ul, figure {","lastModifiedDate":"2020-05-23"},{"lineNumber":11,"author":{"gitId":"-"},"content":"  margin: 0;","lastModifiedDate":"2020-05-23"},{"lineNumber":12,"author":{"gitId":"-"},"content":"  padding: 0;","lastModifiedDate":"2020-05-23"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":14,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":18,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2020-05-23"},{"lineNumber":19,"author":{"gitId":"-"},"content":" * Basic styling","lastModifiedDate":"2020-05-23"},{"lineNumber":20,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2020-05-23"},{"lineNumber":21,"author":{"gitId":"-"},"content":"body {","lastModifiedDate":"2020-05-23"},{"lineNumber":22,"author":{"gitId":"-"},"content":"  font: $base-font-weight #{$base-font-size}/#{$base-line-height} $base-font-family;","lastModifiedDate":"2020-05-23"},{"lineNumber":23,"author":{"gitId":"-"},"content":"  color: $text-color;","lastModifiedDate":"2020-05-23"},{"lineNumber":24,"author":{"gitId":"-"},"content":"  background-color: $background-color;","lastModifiedDate":"2020-05-23"},{"lineNumber":25,"author":{"gitId":"-"},"content":"  -webkit-text-size-adjust: 100%;","lastModifiedDate":"2020-05-23"},{"lineNumber":26,"author":{"gitId":"-"},"content":"  -webkit-font-feature-settings: \"kern\" 1;","lastModifiedDate":"2020-05-23"},{"lineNumber":27,"author":{"gitId":"-"},"content":"     -moz-font-feature-settings: \"kern\" 1;","lastModifiedDate":"2020-05-23"},{"lineNumber":28,"author":{"gitId":"-"},"content":"       -o-font-feature-settings: \"kern\" 1;","lastModifiedDate":"2020-05-23"},{"lineNumber":29,"author":{"gitId":"-"},"content":"          font-feature-settings: \"kern\" 1;","lastModifiedDate":"2020-05-23"},{"lineNumber":30,"author":{"gitId":"-"},"content":"  font-kerning: normal;","lastModifiedDate":"2020-05-23"},{"lineNumber":31,"author":{"gitId":"-"},"content":"  display: flex;","lastModifiedDate":"2020-05-23"},{"lineNumber":32,"author":{"gitId":"-"},"content":"  min-height: 100vh;","lastModifiedDate":"2020-05-23"},{"lineNumber":33,"author":{"gitId":"-"},"content":"  flex-direction: column;","lastModifiedDate":"2020-05-23"},{"lineNumber":34,"author":{"gitId":"-"},"content":"  overflow-wrap: break-word;","lastModifiedDate":"2020-05-23"},{"lineNumber":35,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":36,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":37,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":38,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":39,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2020-05-23"},{"lineNumber":40,"author":{"gitId":"-"},"content":" * Set `margin-bottom` to maintain vertical rhythm","lastModifiedDate":"2020-05-23"},{"lineNumber":41,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2020-05-23"},{"lineNumber":42,"author":{"gitId":"-"},"content":"h1, h2, h3, h4, h5, h6,","lastModifiedDate":"2020-05-23"},{"lineNumber":43,"author":{"gitId":"-"},"content":"p, blockquote, pre,","lastModifiedDate":"2020-05-23"},{"lineNumber":44,"author":{"gitId":"-"},"content":"ul, ol, dl, figure,","lastModifiedDate":"2020-05-23"},{"lineNumber":45,"author":{"gitId":"-"},"content":"%vertical-rhythm {","lastModifiedDate":"2020-05-23"},{"lineNumber":46,"author":{"gitId":"-"},"content":"  margin-bottom: $spacing-unit / 2;","lastModifiedDate":"2020-05-23"},{"lineNumber":47,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":48,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":49,"author":{"gitId":"-"},"content":"hr {","lastModifiedDate":"2020-05-23"},{"lineNumber":50,"author":{"gitId":"-"},"content":"  margin-top: $spacing-unit;","lastModifiedDate":"2020-05-23"},{"lineNumber":51,"author":{"gitId":"-"},"content":"  margin-bottom: $spacing-unit;","lastModifiedDate":"2020-05-23"},{"lineNumber":52,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":53,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":54,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2020-05-23"},{"lineNumber":55,"author":{"gitId":"-"},"content":" * `main` element","lastModifiedDate":"2020-05-23"},{"lineNumber":56,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2020-05-23"},{"lineNumber":57,"author":{"gitId":"-"},"content":"main {","lastModifiedDate":"2020-05-23"},{"lineNumber":58,"author":{"gitId":"-"},"content":"  display: block; /* Default value of `display` of `main` element is \u0027inline\u0027 in IE 11. */","lastModifiedDate":"2020-05-23"},{"lineNumber":59,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":60,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":61,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":62,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":63,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2020-05-23"},{"lineNumber":64,"author":{"gitId":"-"},"content":" * Images","lastModifiedDate":"2020-05-23"},{"lineNumber":65,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2020-05-23"},{"lineNumber":66,"author":{"gitId":"-"},"content":"img {","lastModifiedDate":"2020-05-23"},{"lineNumber":67,"author":{"gitId":"-"},"content":"  max-width: 100%;","lastModifiedDate":"2020-05-23"},{"lineNumber":68,"author":{"gitId":"-"},"content":"  vertical-align: middle;","lastModifiedDate":"2020-05-23"},{"lineNumber":69,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":70,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":71,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":72,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":73,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2020-05-23"},{"lineNumber":74,"author":{"gitId":"-"},"content":" * Figures","lastModifiedDate":"2020-05-23"},{"lineNumber":75,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2020-05-23"},{"lineNumber":76,"author":{"gitId":"-"},"content":"figure \u003e img {","lastModifiedDate":"2020-05-23"},{"lineNumber":77,"author":{"gitId":"-"},"content":"  display: block;","lastModifiedDate":"2020-05-23"},{"lineNumber":78,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":79,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":80,"author":{"gitId":"-"},"content":"figcaption {","lastModifiedDate":"2020-05-23"},{"lineNumber":81,"author":{"gitId":"-"},"content":"  font-size: $small-font-size;","lastModifiedDate":"2020-05-23"},{"lineNumber":82,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":83,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":84,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":85,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":86,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2020-05-23"},{"lineNumber":87,"author":{"gitId":"-"},"content":" * Lists","lastModifiedDate":"2020-05-23"},{"lineNumber":88,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2020-05-23"},{"lineNumber":89,"author":{"gitId":"-"},"content":"ul, ol {","lastModifiedDate":"2020-05-23"},{"lineNumber":90,"author":{"gitId":"-"},"content":"  margin-left: $spacing-unit;","lastModifiedDate":"2020-05-23"},{"lineNumber":91,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":92,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":93,"author":{"gitId":"-"},"content":"li {","lastModifiedDate":"2020-05-23"},{"lineNumber":94,"author":{"gitId":"-"},"content":"  \u003e ul,","lastModifiedDate":"2020-05-23"},{"lineNumber":95,"author":{"gitId":"-"},"content":"  \u003e ol {","lastModifiedDate":"2020-05-23"},{"lineNumber":96,"author":{"gitId":"-"},"content":"    margin-bottom: 0;","lastModifiedDate":"2020-05-23"},{"lineNumber":97,"author":{"gitId":"-"},"content":"  }","lastModifiedDate":"2020-05-23"},{"lineNumber":98,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":99,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":100,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":101,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":102,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2020-05-23"},{"lineNumber":103,"author":{"gitId":"-"},"content":" * Headings","lastModifiedDate":"2020-05-23"},{"lineNumber":104,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2020-05-23"},{"lineNumber":105,"author":{"gitId":"-"},"content":"h1, h2, h3, h4, h5, h6 {","lastModifiedDate":"2020-05-23"},{"lineNumber":106,"author":{"gitId":"-"},"content":"  font-weight: $base-font-weight;","lastModifiedDate":"2020-05-23"},{"lineNumber":107,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":108,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":109,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":110,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":111,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2020-05-23"},{"lineNumber":112,"author":{"gitId":"-"},"content":" * Links","lastModifiedDate":"2020-05-23"},{"lineNumber":113,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2020-05-23"},{"lineNumber":114,"author":{"gitId":"-"},"content":"a {","lastModifiedDate":"2020-05-23"},{"lineNumber":115,"author":{"gitId":"-"},"content":"  color: $link-base-color;","lastModifiedDate":"2020-05-23"},{"lineNumber":116,"author":{"gitId":"-"},"content":"  text-decoration: none;","lastModifiedDate":"2020-05-23"},{"lineNumber":117,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":118,"author":{"gitId":"-"},"content":"  \u0026:visited {","lastModifiedDate":"2020-05-23"},{"lineNumber":119,"author":{"gitId":"-"},"content":"    color: $link-visited-color;","lastModifiedDate":"2020-05-23"},{"lineNumber":120,"author":{"gitId":"-"},"content":"  }","lastModifiedDate":"2020-05-23"},{"lineNumber":121,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":122,"author":{"gitId":"-"},"content":"  \u0026:hover {","lastModifiedDate":"2020-05-23"},{"lineNumber":123,"author":{"gitId":"-"},"content":"    color: $text-color;","lastModifiedDate":"2020-05-23"},{"lineNumber":124,"author":{"gitId":"-"},"content":"    text-decoration: underline;","lastModifiedDate":"2020-05-23"},{"lineNumber":125,"author":{"gitId":"-"},"content":"  }","lastModifiedDate":"2020-05-23"},{"lineNumber":126,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":127,"author":{"gitId":"-"},"content":"  .social-media-list \u0026:hover {","lastModifiedDate":"2020-05-23"},{"lineNumber":128,"author":{"gitId":"-"},"content":"    text-decoration: none;","lastModifiedDate":"2020-05-23"},{"lineNumber":129,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":130,"author":{"gitId":"-"},"content":"    .username {","lastModifiedDate":"2020-05-23"},{"lineNumber":131,"author":{"gitId":"-"},"content":"      text-decoration: underline;","lastModifiedDate":"2020-05-23"},{"lineNumber":132,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2020-05-23"},{"lineNumber":133,"author":{"gitId":"-"},"content":"  }","lastModifiedDate":"2020-05-23"},{"lineNumber":134,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":135,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":136,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":137,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2020-05-23"},{"lineNumber":138,"author":{"gitId":"-"},"content":" * Blockquotes","lastModifiedDate":"2020-05-23"},{"lineNumber":139,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2020-05-23"},{"lineNumber":140,"author":{"gitId":"-"},"content":"blockquote {","lastModifiedDate":"2020-05-23"},{"lineNumber":141,"author":{"gitId":"-"},"content":"  color: $brand-color;","lastModifiedDate":"2020-05-23"},{"lineNumber":142,"author":{"gitId":"-"},"content":"  border-left: 4px solid $brand-color-light;","lastModifiedDate":"2020-05-23"},{"lineNumber":143,"author":{"gitId":"-"},"content":"  padding-left: $spacing-unit / 2;","lastModifiedDate":"2020-05-23"},{"lineNumber":144,"author":{"gitId":"-"},"content":"  @include relative-font-size(1.125);","lastModifiedDate":"2020-05-23"},{"lineNumber":145,"author":{"gitId":"-"},"content":"  font-style: italic;","lastModifiedDate":"2020-05-23"},{"lineNumber":146,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":147,"author":{"gitId":"-"},"content":"  \u003e :last-child {","lastModifiedDate":"2020-05-23"},{"lineNumber":148,"author":{"gitId":"-"},"content":"    margin-bottom: 0;","lastModifiedDate":"2020-05-23"},{"lineNumber":149,"author":{"gitId":"-"},"content":"  }","lastModifiedDate":"2020-05-23"},{"lineNumber":150,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":151,"author":{"gitId":"-"},"content":"  i, em {","lastModifiedDate":"2020-05-23"},{"lineNumber":152,"author":{"gitId":"-"},"content":"    font-style: normal;","lastModifiedDate":"2020-05-23"},{"lineNumber":153,"author":{"gitId":"-"},"content":"  }","lastModifiedDate":"2020-05-23"},{"lineNumber":154,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":155,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":156,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":157,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":158,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2020-05-23"},{"lineNumber":159,"author":{"gitId":"-"},"content":" * Code formatting","lastModifiedDate":"2020-05-23"},{"lineNumber":160,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2020-05-23"},{"lineNumber":161,"author":{"gitId":"-"},"content":"pre,","lastModifiedDate":"2020-05-23"},{"lineNumber":162,"author":{"gitId":"-"},"content":"code {","lastModifiedDate":"2020-05-23"},{"lineNumber":163,"author":{"gitId":"-"},"content":"  font-family: $code-font-family;","lastModifiedDate":"2020-05-23"},{"lineNumber":164,"author":{"gitId":"-"},"content":"  font-size: 0.9375em;","lastModifiedDate":"2020-05-23"},{"lineNumber":165,"author":{"gitId":"-"},"content":"  border: 1px solid $brand-color-light;","lastModifiedDate":"2020-05-23"},{"lineNumber":166,"author":{"gitId":"-"},"content":"  border-radius: 3px;","lastModifiedDate":"2020-05-23"},{"lineNumber":167,"author":{"gitId":"-"},"content":"  background-color: $code-background-color;","lastModifiedDate":"2020-05-23"},{"lineNumber":168,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":169,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":170,"author":{"gitId":"-"},"content":"code {","lastModifiedDate":"2020-05-23"},{"lineNumber":171,"author":{"gitId":"-"},"content":"  padding: 1px 5px;","lastModifiedDate":"2020-05-23"},{"lineNumber":172,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":173,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":174,"author":{"gitId":"-"},"content":"pre {","lastModifiedDate":"2020-05-23"},{"lineNumber":175,"author":{"gitId":"-"},"content":"  padding: 8px 12px;","lastModifiedDate":"2020-05-23"},{"lineNumber":176,"author":{"gitId":"-"},"content":"  overflow-x: auto;","lastModifiedDate":"2020-05-23"},{"lineNumber":177,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":178,"author":{"gitId":"-"},"content":"  \u003e code {","lastModifiedDate":"2020-05-23"},{"lineNumber":179,"author":{"gitId":"-"},"content":"    border: 0;","lastModifiedDate":"2020-05-23"},{"lineNumber":180,"author":{"gitId":"-"},"content":"    padding-right: 0;","lastModifiedDate":"2020-05-23"},{"lineNumber":181,"author":{"gitId":"-"},"content":"    padding-left: 0;","lastModifiedDate":"2020-05-23"},{"lineNumber":182,"author":{"gitId":"-"},"content":"  }","lastModifiedDate":"2020-05-23"},{"lineNumber":183,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":184,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":185,"author":{"gitId":"-"},"content":".highlight {","lastModifiedDate":"2020-05-23"},{"lineNumber":186,"author":{"gitId":"-"},"content":"  border-radius: 3px;","lastModifiedDate":"2020-05-23"},{"lineNumber":187,"author":{"gitId":"-"},"content":"  background: $code-background-color;","lastModifiedDate":"2020-05-23"},{"lineNumber":188,"author":{"gitId":"-"},"content":"  @extend %vertical-rhythm;","lastModifiedDate":"2020-05-23"},{"lineNumber":189,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":190,"author":{"gitId":"-"},"content":"  .highlighter-rouge \u0026 {","lastModifiedDate":"2020-05-23"},{"lineNumber":191,"author":{"gitId":"-"},"content":"    background: $code-background-color;","lastModifiedDate":"2020-05-23"},{"lineNumber":192,"author":{"gitId":"-"},"content":"  }","lastModifiedDate":"2020-05-23"},{"lineNumber":193,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":194,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":195,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":196,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":197,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2020-05-23"},{"lineNumber":198,"author":{"gitId":"-"},"content":" * Wrapper","lastModifiedDate":"2020-05-23"},{"lineNumber":199,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2020-05-23"},{"lineNumber":200,"author":{"gitId":"-"},"content":".wrapper {","lastModifiedDate":"2020-05-23"},{"lineNumber":201,"author":{"gitId":"-"},"content":"  max-width: calc(#{$content-width} - (#{$spacing-unit}));","lastModifiedDate":"2020-05-23"},{"lineNumber":202,"author":{"gitId":"-"},"content":"  margin-right: auto;","lastModifiedDate":"2020-05-23"},{"lineNumber":203,"author":{"gitId":"-"},"content":"  margin-left: auto;","lastModifiedDate":"2020-05-23"},{"lineNumber":204,"author":{"gitId":"-"},"content":"  padding-right: $spacing-unit / 2;","lastModifiedDate":"2020-05-23"},{"lineNumber":205,"author":{"gitId":"-"},"content":"  padding-left: $spacing-unit / 2;","lastModifiedDate":"2020-05-23"},{"lineNumber":206,"author":{"gitId":"-"},"content":"  @extend %clearfix;","lastModifiedDate":"2020-05-23"},{"lineNumber":207,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":208,"author":{"gitId":"-"},"content":"  @media screen and (min-width: $on-large) {","lastModifiedDate":"2020-05-23"},{"lineNumber":209,"author":{"gitId":"-"},"content":"    max-width: calc(#{$content-width} - (#{$spacing-unit} * 2));","lastModifiedDate":"2020-05-23"},{"lineNumber":210,"author":{"gitId":"-"},"content":"    padding-right: $spacing-unit;","lastModifiedDate":"2020-05-23"},{"lineNumber":211,"author":{"gitId":"-"},"content":"    padding-left: $spacing-unit;","lastModifiedDate":"2020-05-23"},{"lineNumber":212,"author":{"gitId":"-"},"content":"  }","lastModifiedDate":"2020-05-23"},{"lineNumber":213,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":214,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":215,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":216,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":217,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2020-05-23"},{"lineNumber":218,"author":{"gitId":"-"},"content":" * Clearfix","lastModifiedDate":"2020-05-23"},{"lineNumber":219,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2020-05-23"},{"lineNumber":220,"author":{"gitId":"-"},"content":"%clearfix:after {","lastModifiedDate":"2020-05-23"},{"lineNumber":221,"author":{"gitId":"-"},"content":"  content: \"\";","lastModifiedDate":"2020-05-23"},{"lineNumber":222,"author":{"gitId":"-"},"content":"  display: table;","lastModifiedDate":"2020-05-23"},{"lineNumber":223,"author":{"gitId":"-"},"content":"  clear: both;","lastModifiedDate":"2020-05-23"},{"lineNumber":224,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":225,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":226,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":227,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":228,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2020-05-23"},{"lineNumber":229,"author":{"gitId":"-"},"content":" * Icons","lastModifiedDate":"2020-05-23"},{"lineNumber":230,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2020-05-23"},{"lineNumber":231,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":232,"author":{"gitId":"-"},"content":".orange {","lastModifiedDate":"2020-05-23"},{"lineNumber":233,"author":{"gitId":"-"},"content":"  color: #f66a0a;","lastModifiedDate":"2020-05-23"},{"lineNumber":234,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":235,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":236,"author":{"gitId":"-"},"content":".grey {","lastModifiedDate":"2020-05-23"},{"lineNumber":237,"author":{"gitId":"-"},"content":"  color: #828282;","lastModifiedDate":"2020-05-23"},{"lineNumber":238,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":239,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":240,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2020-05-23"},{"lineNumber":241,"author":{"gitId":"-"},"content":" * Tables","lastModifiedDate":"2020-05-23"},{"lineNumber":242,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2020-05-23"},{"lineNumber":243,"author":{"gitId":"-"},"content":"table {","lastModifiedDate":"2020-05-23"},{"lineNumber":244,"author":{"gitId":"-"},"content":"  margin-bottom: $spacing-unit;","lastModifiedDate":"2020-05-23"},{"lineNumber":245,"author":{"gitId":"-"},"content":"  width: 100%;","lastModifiedDate":"2020-05-23"},{"lineNumber":246,"author":{"gitId":"-"},"content":"  text-align: $table-text-align;","lastModifiedDate":"2020-05-23"},{"lineNumber":247,"author":{"gitId":"-"},"content":"  color: $table-text-color;","lastModifiedDate":"2020-05-23"},{"lineNumber":248,"author":{"gitId":"-"},"content":"  border-collapse: collapse;","lastModifiedDate":"2020-05-23"},{"lineNumber":249,"author":{"gitId":"-"},"content":"  border: 1px solid $table-border-color;","lastModifiedDate":"2020-05-23"},{"lineNumber":250,"author":{"gitId":"-"},"content":"  tr {","lastModifiedDate":"2020-05-23"},{"lineNumber":251,"author":{"gitId":"-"},"content":"    \u0026:nth-child(even) {","lastModifiedDate":"2020-05-23"},{"lineNumber":252,"author":{"gitId":"-"},"content":"      background-color: $table-zebra-color;","lastModifiedDate":"2020-05-23"},{"lineNumber":253,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2020-05-23"},{"lineNumber":254,"author":{"gitId":"-"},"content":"  }","lastModifiedDate":"2020-05-23"},{"lineNumber":255,"author":{"gitId":"-"},"content":"  th, td {","lastModifiedDate":"2020-05-23"},{"lineNumber":256,"author":{"gitId":"-"},"content":"    padding: ($spacing-unit / 3) ($spacing-unit / 2);","lastModifiedDate":"2020-05-23"},{"lineNumber":257,"author":{"gitId":"-"},"content":"  }","lastModifiedDate":"2020-05-23"},{"lineNumber":258,"author":{"gitId":"-"},"content":"  th {","lastModifiedDate":"2020-05-23"},{"lineNumber":259,"author":{"gitId":"-"},"content":"    background-color: $table-header-bg-color;","lastModifiedDate":"2020-05-23"},{"lineNumber":260,"author":{"gitId":"-"},"content":"    border: 1px solid $table-header-border;","lastModifiedDate":"2020-05-23"},{"lineNumber":261,"author":{"gitId":"-"},"content":"  }","lastModifiedDate":"2020-05-23"},{"lineNumber":262,"author":{"gitId":"-"},"content":"  td {","lastModifiedDate":"2020-05-23"},{"lineNumber":263,"author":{"gitId":"-"},"content":"    border: 1px solid $table-border-color;","lastModifiedDate":"2020-05-23"},{"lineNumber":264,"author":{"gitId":"-"},"content":"  }","lastModifiedDate":"2020-05-23"},{"lineNumber":265,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":266,"author":{"gitId":"-"},"content":"  @include media-query($on-laptop) {","lastModifiedDate":"2020-05-23"},{"lineNumber":267,"author":{"gitId":"-"},"content":"    display: block;","lastModifiedDate":"2020-05-23"},{"lineNumber":268,"author":{"gitId":"-"},"content":"    overflow-x: auto;","lastModifiedDate":"2020-05-23"},{"lineNumber":269,"author":{"gitId":"-"},"content":"    -webkit-overflow-scrolling: touch;","lastModifiedDate":"2020-05-23"},{"lineNumber":270,"author":{"gitId":"-"},"content":"            -ms-overflow-style: -ms-autohiding-scrollbar;","lastModifiedDate":"2020-05-23"},{"lineNumber":271,"author":{"gitId":"-"},"content":"  }","lastModifiedDate":"2020-05-23"},{"lineNumber":272,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":273,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-01-11"},{"lineNumber":274,"author":{"gitId":"-"},"content":"@media print {","lastModifiedDate":"2021-01-12"},{"lineNumber":275,"author":{"gitId":"-"},"content":"  /**","lastModifiedDate":"2021-01-11"},{"lineNumber":276,"author":{"gitId":"-"},"content":"  * Prevents page break from cutting through content when printing","lastModifiedDate":"2021-01-12"},{"lineNumber":277,"author":{"gitId":"-"},"content":"  */","lastModifiedDate":"2021-01-11"},{"lineNumber":278,"author":{"gitId":"-"},"content":"  body {","lastModifiedDate":"2021-01-11"},{"lineNumber":279,"author":{"gitId":"-"},"content":"    display: block;","lastModifiedDate":"2021-01-11"},{"lineNumber":280,"author":{"gitId":"-"},"content":"  }","lastModifiedDate":"2021-01-11"},{"lineNumber":281,"author":{"gitId":"-"},"content":"  /**","lastModifiedDate":"2021-01-12"},{"lineNumber":282,"author":{"gitId":"-"},"content":"  * Replaces the top navigation menu with the project name when printing","lastModifiedDate":"2021-01-12"},{"lineNumber":283,"author":{"gitId":"-"},"content":"  */","lastModifiedDate":"2021-01-12"},{"lineNumber":284,"author":{"gitId":"-"},"content":"  .site-header .wrapper {","lastModifiedDate":"2021-01-12"},{"lineNumber":285,"author":{"gitId":"-"},"content":"    display: none;","lastModifiedDate":"2021-01-12"},{"lineNumber":286,"author":{"gitId":"-"},"content":"  }","lastModifiedDate":"2021-01-12"},{"lineNumber":287,"author":{"gitId":"-"},"content":"  .site-header {","lastModifiedDate":"2021-01-12"},{"lineNumber":288,"author":{"gitId":"-"},"content":"    text-align: center;","lastModifiedDate":"2021-01-12"},{"lineNumber":289,"author":{"gitId":"-"},"content":"  }","lastModifiedDate":"2021-01-12"},{"lineNumber":290,"author":{"gitId":"-"},"content":"  .site-header:before {","lastModifiedDate":"2021-01-12"},{"lineNumber":291,"author":{"gitId":"DannyDakota"},"content":"    content: \"Tracey\";","lastModifiedDate":"2022-02-26"},{"lineNumber":292,"author":{"gitId":"-"},"content":"    font-size: 32px;","lastModifiedDate":"2021-01-12"},{"lineNumber":293,"author":{"gitId":"-"},"content":"  }","lastModifiedDate":"2021-01-11"},{"lineNumber":294,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2021-01-12"},{"lineNumber":295,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-01-12"}],"authorContributionMap":{"DannyDakota":1,"-":294}},{"path":"docs/diagrams/AddFeatureActivityDiagram.puml","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"DannyDakota"},"content":"@startuml","lastModifiedDate":"2022-03-23"},{"lineNumber":2,"author":{"gitId":"DannyDakota"},"content":"\u0027https://plantuml.com/activity-diagram-beta","lastModifiedDate":"2022-03-23"},{"lineNumber":3,"author":{"gitId":"DannyDakota"},"content":"","lastModifiedDate":"2022-03-23"},{"lineNumber":4,"author":{"gitId":"cwq2326"},"content":"start","lastModifiedDate":"2022-03-24"},{"lineNumber":5,"author":{"gitId":"DannyDakota"},"content":"","lastModifiedDate":"2022-03-23"},{"lineNumber":6,"author":{"gitId":"cwq2326"},"content":":User inputs Add Command with relevant tags;","lastModifiedDate":"2022-03-24"},{"lineNumber":7,"author":{"gitId":"DannyDakota"},"content":"","lastModifiedDate":"2022-03-23"},{"lineNumber":8,"author":{"gitId":"DannyDakota"},"content":"If () then ([Command has missing compulsory prefixes \u0026\u0026 \\n Parameters of command are invalid])","lastModifiedDate":"2022-03-23"},{"lineNumber":9,"author":{"gitId":"DannyDakota"},"content":"    :Throws ParseException;","lastModifiedDate":"2022-03-23"},{"lineNumber":10,"author":{"gitId":"DannyDakota"},"content":"","lastModifiedDate":"2022-03-23"},{"lineNumber":11,"author":{"gitId":"DannyDakota"},"content":"    else ([Command is valid])","lastModifiedDate":"2022-03-23"},{"lineNumber":12,"author":{"gitId":"DannyDakota"},"content":"","lastModifiedDate":"2022-03-23"},{"lineNumber":13,"author":{"gitId":"DannyDakota"},"content":"","lastModifiedDate":"2022-03-23"},{"lineNumber":14,"author":{"gitId":"DannyDakota"},"content":"    If () then ([Person already in system])","lastModifiedDate":"2022-03-23"},{"lineNumber":15,"author":{"gitId":"DannyDakota"},"content":"    :Throws CommandException;","lastModifiedDate":"2022-03-23"},{"lineNumber":16,"author":{"gitId":"DannyDakota"},"content":"","lastModifiedDate":"2022-03-23"},{"lineNumber":17,"author":{"gitId":"DannyDakota"},"content":"    else ([Person is unique])","lastModifiedDate":"2022-03-23"},{"lineNumber":18,"author":{"gitId":"DannyDakota"},"content":"        :Insert new Person into addressbook;","lastModifiedDate":"2022-03-23"},{"lineNumber":19,"author":{"gitId":"DannyDakota"},"content":"        :Returns Message to user indicating Success;","lastModifiedDate":"2022-03-23"},{"lineNumber":20,"author":{"gitId":"DannyDakota"},"content":"        :ResultDisplay prints result to user;","lastModifiedDate":"2022-03-23"},{"lineNumber":21,"author":{"gitId":"DannyDakota"},"content":"        endif","lastModifiedDate":"2022-03-23"},{"lineNumber":22,"author":{"gitId":"DannyDakota"},"content":"    endif","lastModifiedDate":"2022-03-23"},{"lineNumber":23,"author":{"gitId":"DannyDakota"},"content":"stop","lastModifiedDate":"2022-03-23"},{"lineNumber":24,"author":{"gitId":"DannyDakota"},"content":"","lastModifiedDate":"2022-03-23"},{"lineNumber":25,"author":{"gitId":"DannyDakota"},"content":"@enduml","lastModifiedDate":"2022-03-23"}],"authorContributionMap":{"DannyDakota":23,"cwq2326":2}},{"path":"docs/diagrams/AddSequenceDiagram.puml","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"cwq2326"},"content":"@startuml","lastModifiedDate":"2022-03-21"},{"lineNumber":2,"author":{"gitId":"cwq2326"},"content":"!include style.puml","lastModifiedDate":"2022-03-21"},{"lineNumber":3,"author":{"gitId":"cwq2326"},"content":"","lastModifiedDate":"2022-03-21"},{"lineNumber":4,"author":{"gitId":"cwq2326"},"content":"box Logic LOGIC_COLOR_T1","lastModifiedDate":"2022-03-21"},{"lineNumber":5,"author":{"gitId":"cwq2326"},"content":"participant \":LogicManager\" as LogicManager LOGIC_COLOR","lastModifiedDate":"2022-03-21"},{"lineNumber":6,"author":{"gitId":"cwq2326"},"content":"participant \":AddressBookParser\" as AddressBookParser LOGIC_COLOR","lastModifiedDate":"2022-03-21"},{"lineNumber":7,"author":{"gitId":"cwq2326"},"content":"participant \":AddCommandParser\" as AddCommandParser LOGIC_COLOR","lastModifiedDate":"2022-03-21"},{"lineNumber":8,"author":{"gitId":"cwq2326"},"content":"participant \"a:AddCommand\" as AddCommand LOGIC_COLOR","lastModifiedDate":"2022-03-21"},{"lineNumber":9,"author":{"gitId":"cwq2326"},"content":"participant \":CommandResult\" as CommandResult LOGIC_COLOR","lastModifiedDate":"2022-03-21"},{"lineNumber":10,"author":{"gitId":"cwq2326"},"content":"participant \"person:Person\" as Person LOGIC_COLOR","lastModifiedDate":"2022-03-21"},{"lineNumber":11,"author":{"gitId":"cwq2326"},"content":"end box","lastModifiedDate":"2022-03-21"},{"lineNumber":12,"author":{"gitId":"cwq2326"},"content":"","lastModifiedDate":"2022-03-21"},{"lineNumber":13,"author":{"gitId":"cwq2326"},"content":"","lastModifiedDate":"2022-03-21"},{"lineNumber":14,"author":{"gitId":"cwq2326"},"content":"box Model MODEL_COLOR_T1","lastModifiedDate":"2022-03-21"},{"lineNumber":15,"author":{"gitId":"cwq2326"},"content":"participant \":Model\" as Model MODEL_COLOR","lastModifiedDate":"2022-03-21"},{"lineNumber":16,"author":{"gitId":"cwq2326"},"content":"end box","lastModifiedDate":"2022-03-21"},{"lineNumber":17,"author":{"gitId":"cwq2326"},"content":"","lastModifiedDate":"2022-03-21"},{"lineNumber":18,"author":{"gitId":"cwq2326"},"content":"[-\u003e LogicManager : execute(\"add NEW_PERSON_TAGS\")","lastModifiedDate":"2022-03-21"},{"lineNumber":19,"author":{"gitId":"cwq2326"},"content":"activate LogicManager","lastModifiedDate":"2022-03-21"},{"lineNumber":20,"author":{"gitId":"cwq2326"},"content":"note RIGHT","lastModifiedDate":"2022-03-21"},{"lineNumber":21,"author":{"gitId":"cwq2326"},"content":"\u003dNEW_PERSON_TAGS \u003d","lastModifiedDate":"2022-03-21"},{"lineNumber":22,"author":{"gitId":"DannyDakota"},"content":" n/John Doe b/A f/SoC","lastModifiedDate":"2022-03-23"},{"lineNumber":23,"author":{"gitId":"DannyDakota"},"content":" p/98765432 e/johnd@example.com","lastModifiedDate":"2022-03-23"},{"lineNumber":24,"author":{"gitId":"cwq2326"},"content":" a/311, Clementi Ave 2, #02-25","lastModifiedDate":"2022-03-21"},{"lineNumber":25,"author":{"gitId":"cwq2326"},"content":" mc/A0253647C cs/NEGATIVE","lastModifiedDate":"2022-03-21"},{"lineNumber":26,"author":{"gitId":"cwq2326"},"content":" t/friends t/owesMoney","lastModifiedDate":"2022-03-21"},{"lineNumber":27,"author":{"gitId":"cwq2326"},"content":"end note","lastModifiedDate":"2022-03-21"},{"lineNumber":28,"author":{"gitId":"cwq2326"},"content":"","lastModifiedDate":"2022-03-21"},{"lineNumber":29,"author":{"gitId":"cwq2326"},"content":"LogicManager -\u003e AddressBookParser : parseCommand(\"add NEW_PERSON_TAGS\")","lastModifiedDate":"2022-03-21"},{"lineNumber":30,"author":{"gitId":"cwq2326"},"content":"activate AddressBookParser","lastModifiedDate":"2022-03-21"},{"lineNumber":31,"author":{"gitId":"cwq2326"},"content":"","lastModifiedDate":"2022-03-21"},{"lineNumber":32,"author":{"gitId":"cwq2326"},"content":"create AddCommandParser","lastModifiedDate":"2022-03-21"},{"lineNumber":33,"author":{"gitId":"cwq2326"},"content":"AddressBookParser -\u003e AddCommandParser","lastModifiedDate":"2022-03-21"},{"lineNumber":34,"author":{"gitId":"cwq2326"},"content":"activate AddCommandParser","lastModifiedDate":"2022-03-21"},{"lineNumber":35,"author":{"gitId":"cwq2326"},"content":"","lastModifiedDate":"2022-03-21"},{"lineNumber":36,"author":{"gitId":"cwq2326"},"content":"AddCommandParser --\u003e AddressBookParser","lastModifiedDate":"2022-03-21"},{"lineNumber":37,"author":{"gitId":"cwq2326"},"content":"deactivate AddCommandParser","lastModifiedDate":"2022-03-21"},{"lineNumber":38,"author":{"gitId":"cwq2326"},"content":"","lastModifiedDate":"2022-03-21"},{"lineNumber":39,"author":{"gitId":"cwq2326"},"content":"AddressBookParser -\u003e AddCommandParser : parse(\"NEW_PERSON_TAGS\")","lastModifiedDate":"2022-03-21"},{"lineNumber":40,"author":{"gitId":"cwq2326"},"content":"activate AddCommandParser","lastModifiedDate":"2022-03-21"},{"lineNumber":41,"author":{"gitId":"cwq2326"},"content":"","lastModifiedDate":"2022-03-21"},{"lineNumber":42,"author":{"gitId":"cwq2326"},"content":"create Person","lastModifiedDate":"2022-03-21"},{"lineNumber":43,"author":{"gitId":"cwq2326"},"content":"AddCommandParser --\u003e Person","lastModifiedDate":"2022-03-21"},{"lineNumber":44,"author":{"gitId":"cwq2326"},"content":"activate Person","lastModifiedDate":"2022-03-21"},{"lineNumber":45,"author":{"gitId":"cwq2326"},"content":"Person --\u003e AddCommandParser : person","lastModifiedDate":"2022-03-21"},{"lineNumber":46,"author":{"gitId":"cwq2326"},"content":"deactivate Person","lastModifiedDate":"2022-03-21"},{"lineNumber":47,"author":{"gitId":"cwq2326"},"content":"","lastModifiedDate":"2022-03-21"},{"lineNumber":48,"author":{"gitId":"cwq2326"},"content":"create AddCommand","lastModifiedDate":"2022-03-21"},{"lineNumber":49,"author":{"gitId":"cwq2326"},"content":"AddCommandParser -\u003e AddCommand : AddCommand(person)","lastModifiedDate":"2022-03-21"},{"lineNumber":50,"author":{"gitId":"cwq2326"},"content":"activate AddCommand","lastModifiedDate":"2022-03-21"},{"lineNumber":51,"author":{"gitId":"cwq2326"},"content":"","lastModifiedDate":"2022-03-21"},{"lineNumber":52,"author":{"gitId":"cwq2326"},"content":"AddCommand --\u003e AddCommandParser : a","lastModifiedDate":"2022-03-21"},{"lineNumber":53,"author":{"gitId":"cwq2326"},"content":"deactivate AddCommand","lastModifiedDate":"2022-03-21"},{"lineNumber":54,"author":{"gitId":"cwq2326"},"content":"","lastModifiedDate":"2022-03-21"},{"lineNumber":55,"author":{"gitId":"cwq2326"},"content":"AddCommandParser --\u003e AddressBookParser : a","lastModifiedDate":"2022-03-21"},{"lineNumber":56,"author":{"gitId":"cwq2326"},"content":"deactivate AddCommandParser","lastModifiedDate":"2022-03-21"},{"lineNumber":57,"author":{"gitId":"cwq2326"},"content":"\u0027Hidden arrow to position the destroy marker below the end of the activation bar.","lastModifiedDate":"2022-03-21"},{"lineNumber":58,"author":{"gitId":"cwq2326"},"content":"AddCommandParser -[hidden]-\u003e AddressBookParser","lastModifiedDate":"2022-03-21"},{"lineNumber":59,"author":{"gitId":"cwq2326"},"content":"destroy AddCommandParser","lastModifiedDate":"2022-03-21"},{"lineNumber":60,"author":{"gitId":"cwq2326"},"content":"","lastModifiedDate":"2022-03-21"},{"lineNumber":61,"author":{"gitId":"cwq2326"},"content":"AddressBookParser --\u003e LogicManager : a","lastModifiedDate":"2022-03-21"},{"lineNumber":62,"author":{"gitId":"cwq2326"},"content":"deactivate AddressBookParser","lastModifiedDate":"2022-03-21"},{"lineNumber":63,"author":{"gitId":"cwq2326"},"content":"","lastModifiedDate":"2022-03-21"},{"lineNumber":64,"author":{"gitId":"cwq2326"},"content":"LogicManager -\u003e AddCommand : execute()","lastModifiedDate":"2022-03-21"},{"lineNumber":65,"author":{"gitId":"cwq2326"},"content":"activate AddCommand","lastModifiedDate":"2022-03-21"},{"lineNumber":66,"author":{"gitId":"cwq2326"},"content":"","lastModifiedDate":"2022-03-21"},{"lineNumber":67,"author":{"gitId":"cwq2326"},"content":"AddCommand -\u003e Model : addPerson(person)","lastModifiedDate":"2022-03-21"},{"lineNumber":68,"author":{"gitId":"cwq2326"},"content":"activate Model","lastModifiedDate":"2022-03-21"},{"lineNumber":69,"author":{"gitId":"cwq2326"},"content":"","lastModifiedDate":"2022-03-21"},{"lineNumber":70,"author":{"gitId":"cwq2326"},"content":"Model --\u003e AddCommand","lastModifiedDate":"2022-03-21"},{"lineNumber":71,"author":{"gitId":"cwq2326"},"content":"deactivate Model","lastModifiedDate":"2022-03-21"},{"lineNumber":72,"author":{"gitId":"cwq2326"},"content":"","lastModifiedDate":"2022-03-21"},{"lineNumber":73,"author":{"gitId":"cwq2326"},"content":"create CommandResult","lastModifiedDate":"2022-03-21"},{"lineNumber":74,"author":{"gitId":"cwq2326"},"content":"AddCommand -\u003e CommandResult","lastModifiedDate":"2022-03-21"},{"lineNumber":75,"author":{"gitId":"cwq2326"},"content":"activate CommandResult","lastModifiedDate":"2022-03-21"},{"lineNumber":76,"author":{"gitId":"cwq2326"},"content":"","lastModifiedDate":"2022-03-21"},{"lineNumber":77,"author":{"gitId":"cwq2326"},"content":"CommandResult --\u003e AddCommand","lastModifiedDate":"2022-03-21"},{"lineNumber":78,"author":{"gitId":"cwq2326"},"content":"deactivate CommandResult","lastModifiedDate":"2022-03-21"},{"lineNumber":79,"author":{"gitId":"cwq2326"},"content":"","lastModifiedDate":"2022-03-21"},{"lineNumber":80,"author":{"gitId":"cwq2326"},"content":"AddCommand --\u003e LogicManager : result","lastModifiedDate":"2022-03-21"},{"lineNumber":81,"author":{"gitId":"cwq2326"},"content":"deactivate AddCommand","lastModifiedDate":"2022-03-21"},{"lineNumber":82,"author":{"gitId":"cwq2326"},"content":"","lastModifiedDate":"2022-03-21"},{"lineNumber":83,"author":{"gitId":"cwq2326"},"content":"[\u003c--LogicManager","lastModifiedDate":"2022-03-21"},{"lineNumber":84,"author":{"gitId":"cwq2326"},"content":"deactivate LogicManager","lastModifiedDate":"2022-03-21"},{"lineNumber":85,"author":{"gitId":"cwq2326"},"content":"@enduml","lastModifiedDate":"2022-03-21"}],"authorContributionMap":{"DannyDakota":2,"cwq2326":83}},{"path":"docs/diagrams/ArchiveFeatureActivityDiagram.puml","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"cwq2326"},"content":"@startuml","lastModifiedDate":"2022-03-27"},{"lineNumber":2,"author":{"gitId":"cwq2326"},"content":"\u0027https://plantuml.com/activity-diagram-beta","lastModifiedDate":"2022-03-27"},{"lineNumber":3,"author":{"gitId":"cwq2326"},"content":"","lastModifiedDate":"2022-03-27"},{"lineNumber":4,"author":{"gitId":"cwq2326"},"content":"start","lastModifiedDate":"2022-03-27"},{"lineNumber":5,"author":{"gitId":"cwq2326"},"content":"","lastModifiedDate":"2022-03-27"},{"lineNumber":6,"author":{"gitId":"cwq2326"},"content":":User inputs Archive Command;","lastModifiedDate":"2022-03-27"},{"lineNumber":7,"author":{"gitId":"cwq2326"},"content":"","lastModifiedDate":"2022-03-27"},{"lineNumber":8,"author":{"gitId":"cwq2326"},"content":"If () then ([Address book file to be \\n archived cannot be found])","lastModifiedDate":"2022-03-27"},{"lineNumber":9,"author":{"gitId":"cwq2326"},"content":"    :Throws CommandException;","lastModifiedDate":"2022-03-27"},{"lineNumber":10,"author":{"gitId":"cwq2326"},"content":"","lastModifiedDate":"2022-03-27"},{"lineNumber":11,"author":{"gitId":"cwq2326"},"content":"    else ([else])","lastModifiedDate":"2022-03-27"},{"lineNumber":12,"author":{"gitId":"cwq2326"},"content":"","lastModifiedDate":"2022-03-27"},{"lineNumber":13,"author":{"gitId":"cwq2326"},"content":"","lastModifiedDate":"2022-03-27"},{"lineNumber":14,"author":{"gitId":"cwq2326"},"content":"    If () then ([Error copying current \\n address book file])","lastModifiedDate":"2022-03-27"},{"lineNumber":15,"author":{"gitId":"cwq2326"},"content":"    :Throws CommandException;","lastModifiedDate":"2022-03-27"},{"lineNumber":16,"author":{"gitId":"cwq2326"},"content":"","lastModifiedDate":"2022-03-27"},{"lineNumber":17,"author":{"gitId":"cwq2326"},"content":"    else ([else])","lastModifiedDate":"2022-03-27"},{"lineNumber":18,"author":{"gitId":"cwq2326"},"content":"        :A copy of the current \\n address book is saved \\n into the archive folder;","lastModifiedDate":"2022-03-27"},{"lineNumber":19,"author":{"gitId":"cwq2326"},"content":"        endif","lastModifiedDate":"2022-03-27"},{"lineNumber":20,"author":{"gitId":"cwq2326"},"content":"    endif","lastModifiedDate":"2022-03-27"},{"lineNumber":21,"author":{"gitId":"cwq2326"},"content":"    :ResultDisplay prints result to user;","lastModifiedDate":"2022-03-27"},{"lineNumber":22,"author":{"gitId":"cwq2326"},"content":"stop","lastModifiedDate":"2022-03-27"},{"lineNumber":23,"author":{"gitId":"cwq2326"},"content":"","lastModifiedDate":"2022-03-27"},{"lineNumber":24,"author":{"gitId":"cwq2326"},"content":"@enduml","lastModifiedDate":"2022-03-27"}],"authorContributionMap":{"cwq2326":24}},{"path":"docs/diagrams/ArchiveFeatureSequenceDiagram.puml","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"cwq2326"},"content":"@startuml","lastModifiedDate":"2022-03-27"},{"lineNumber":2,"author":{"gitId":"cwq2326"},"content":"!include style.puml","lastModifiedDate":"2022-03-27"},{"lineNumber":3,"author":{"gitId":"cwq2326"},"content":"","lastModifiedDate":"2022-03-27"},{"lineNumber":4,"author":{"gitId":"cwq2326"},"content":"box Logic LOGIC_COLOR_T1","lastModifiedDate":"2022-03-27"},{"lineNumber":5,"author":{"gitId":"cwq2326"},"content":"participant \":LogicManager\" as LogicManager LOGIC_COLOR","lastModifiedDate":"2022-03-27"},{"lineNumber":6,"author":{"gitId":"cwq2326"},"content":"participant \":AddressBookParser\" as AddressBookParser LOGIC_COLOR","lastModifiedDate":"2022-03-27"},{"lineNumber":7,"author":{"gitId":"cwq2326"},"content":"participant \"d:ArchiveCommand\" as ArchiveCommand LOGIC_COLOR","lastModifiedDate":"2022-03-27"},{"lineNumber":8,"author":{"gitId":"cwq2326"},"content":"participant \":CommandResult\" as CommandResult LOGIC_COLOR","lastModifiedDate":"2022-03-27"},{"lineNumber":9,"author":{"gitId":"cwq2326"},"content":"end box","lastModifiedDate":"2022-03-27"},{"lineNumber":10,"author":{"gitId":"cwq2326"},"content":"","lastModifiedDate":"2022-03-27"},{"lineNumber":11,"author":{"gitId":"cwq2326"},"content":"","lastModifiedDate":"2022-03-27"},{"lineNumber":12,"author":{"gitId":"cwq2326"},"content":"box Model MODEL_COLOR_T1","lastModifiedDate":"2022-03-27"},{"lineNumber":13,"author":{"gitId":"cwq2326"},"content":"participant \":Model\" as Model MODEL_COLOR","lastModifiedDate":"2022-03-27"},{"lineNumber":14,"author":{"gitId":"cwq2326"},"content":"end box","lastModifiedDate":"2022-03-27"},{"lineNumber":15,"author":{"gitId":"cwq2326"},"content":"","lastModifiedDate":"2022-03-27"},{"lineNumber":16,"author":{"gitId":"cwq2326"},"content":"participant \":FileUtil\" as FileUtil #D1001C","lastModifiedDate":"2022-03-27"},{"lineNumber":17,"author":{"gitId":"cwq2326"},"content":"participant \":Files\" as Files #FFA500","lastModifiedDate":"2022-03-27"},{"lineNumber":18,"author":{"gitId":"cwq2326"},"content":"","lastModifiedDate":"2022-03-27"},{"lineNumber":19,"author":{"gitId":"cwq2326"},"content":"[-\u003e LogicManager : execute(\"archive\")","lastModifiedDate":"2022-03-27"},{"lineNumber":20,"author":{"gitId":"cwq2326"},"content":"activate LogicManager","lastModifiedDate":"2022-03-27"},{"lineNumber":21,"author":{"gitId":"cwq2326"},"content":"","lastModifiedDate":"2022-03-27"},{"lineNumber":22,"author":{"gitId":"cwq2326"},"content":"LogicManager -\u003e AddressBookParser : parseCommand(\"archive\")","lastModifiedDate":"2022-03-27"},{"lineNumber":23,"author":{"gitId":"cwq2326"},"content":"activate AddressBookParser","lastModifiedDate":"2022-03-27"},{"lineNumber":24,"author":{"gitId":"cwq2326"},"content":"","lastModifiedDate":"2022-03-27"},{"lineNumber":25,"author":{"gitId":"cwq2326"},"content":"create ArchiveCommand","lastModifiedDate":"2022-03-27"},{"lineNumber":26,"author":{"gitId":"cwq2326"},"content":"AddressBookParser -\u003e ArchiveCommand","lastModifiedDate":"2022-03-27"},{"lineNumber":27,"author":{"gitId":"cwq2326"},"content":"","lastModifiedDate":"2022-03-27"},{"lineNumber":28,"author":{"gitId":"cwq2326"},"content":"activate ArchiveCommand","lastModifiedDate":"2022-03-27"},{"lineNumber":29,"author":{"gitId":"cwq2326"},"content":"ArchiveCommand --\u003e AddressBookParser : d","lastModifiedDate":"2022-03-27"},{"lineNumber":30,"author":{"gitId":"cwq2326"},"content":"deactivate ArchiveCommand","lastModifiedDate":"2022-03-27"},{"lineNumber":31,"author":{"gitId":"cwq2326"},"content":"","lastModifiedDate":"2022-03-27"},{"lineNumber":32,"author":{"gitId":"cwq2326"},"content":"AddressBookParser --\u003e LogicManager : d","lastModifiedDate":"2022-03-27"},{"lineNumber":33,"author":{"gitId":"cwq2326"},"content":"deactivate AddressBookParser","lastModifiedDate":"2022-03-27"},{"lineNumber":34,"author":{"gitId":"cwq2326"},"content":"","lastModifiedDate":"2022-03-27"},{"lineNumber":35,"author":{"gitId":"cwq2326"},"content":"LogicManager -\u003e ArchiveCommand : execute()","lastModifiedDate":"2022-03-27"},{"lineNumber":36,"author":{"gitId":"cwq2326"},"content":"activate ArchiveCommand","lastModifiedDate":"2022-03-27"},{"lineNumber":37,"author":{"gitId":"cwq2326"},"content":"","lastModifiedDate":"2022-03-27"},{"lineNumber":38,"author":{"gitId":"cwq2326"},"content":"ArchiveCommand -\u003e Model : getAddressBookFilePath()","lastModifiedDate":"2022-03-27"},{"lineNumber":39,"author":{"gitId":"cwq2326"},"content":"activate Model","lastModifiedDate":"2022-03-27"},{"lineNumber":40,"author":{"gitId":"cwq2326"},"content":"","lastModifiedDate":"2022-03-27"},{"lineNumber":41,"author":{"gitId":"cwq2326"},"content":"Model --\u003e ArchiveCommand : addressBookFilePath","lastModifiedDate":"2022-03-27"},{"lineNumber":42,"author":{"gitId":"cwq2326"},"content":"deactivate Model","lastModifiedDate":"2022-03-27"},{"lineNumber":43,"author":{"gitId":"cwq2326"},"content":"","lastModifiedDate":"2022-03-27"},{"lineNumber":44,"author":{"gitId":"cwq2326"},"content":"ArchiveCommand -\u003e FileUtil : createIfMissing(archiveFilePath)","lastModifiedDate":"2022-03-27"},{"lineNumber":45,"author":{"gitId":"cwq2326"},"content":"activate FileUtil","lastModifiedDate":"2022-03-27"},{"lineNumber":46,"author":{"gitId":"cwq2326"},"content":"FileUtil --\u003e ArchiveCommand","lastModifiedDate":"2022-03-27"},{"lineNumber":47,"author":{"gitId":"cwq2326"},"content":"deactivate FileUtil","lastModifiedDate":"2022-03-27"},{"lineNumber":48,"author":{"gitId":"cwq2326"},"content":"","lastModifiedDate":"2022-03-27"},{"lineNumber":49,"author":{"gitId":"cwq2326"},"content":"\u0027Hidden arrow to position the destroy marker below the end of the activation bar.","lastModifiedDate":"2022-03-27"},{"lineNumber":50,"author":{"gitId":"cwq2326"},"content":"LogicManager -[hidden]-\u003e AddressBookParser","lastModifiedDate":"2022-03-27"},{"lineNumber":51,"author":{"gitId":"cwq2326"},"content":"destroy FileUtil","lastModifiedDate":"2022-03-27"},{"lineNumber":52,"author":{"gitId":"cwq2326"},"content":"","lastModifiedDate":"2022-03-27"},{"lineNumber":53,"author":{"gitId":"cwq2326"},"content":"ArchiveCommand -\u003e Files : copy(addressBookFilePath, archiveFilePath)","lastModifiedDate":"2022-03-27"},{"lineNumber":54,"author":{"gitId":"cwq2326"},"content":"activate Files","lastModifiedDate":"2022-03-27"},{"lineNumber":55,"author":{"gitId":"cwq2326"},"content":"","lastModifiedDate":"2022-03-27"},{"lineNumber":56,"author":{"gitId":"cwq2326"},"content":"Files --\u003e ArchiveCommand","lastModifiedDate":"2022-03-27"},{"lineNumber":57,"author":{"gitId":"cwq2326"},"content":"deactivate Files","lastModifiedDate":"2022-03-27"},{"lineNumber":58,"author":{"gitId":"cwq2326"},"content":"","lastModifiedDate":"2022-03-27"},{"lineNumber":59,"author":{"gitId":"cwq2326"},"content":"\u0027Hidden arrow to position the destroy marker below the end of the activation bar.","lastModifiedDate":"2022-03-27"},{"lineNumber":60,"author":{"gitId":"cwq2326"},"content":"LogicManager -[hidden]-\u003e AddressBookParser","lastModifiedDate":"2022-03-27"},{"lineNumber":61,"author":{"gitId":"cwq2326"},"content":"destroy Files","lastModifiedDate":"2022-03-27"},{"lineNumber":62,"author":{"gitId":"cwq2326"},"content":"","lastModifiedDate":"2022-03-27"},{"lineNumber":63,"author":{"gitId":"cwq2326"},"content":"create CommandResult","lastModifiedDate":"2022-03-27"},{"lineNumber":64,"author":{"gitId":"cwq2326"},"content":"ArchiveCommand -\u003e CommandResult","lastModifiedDate":"2022-03-27"},{"lineNumber":65,"author":{"gitId":"cwq2326"},"content":"activate CommandResult","lastModifiedDate":"2022-03-27"},{"lineNumber":66,"author":{"gitId":"cwq2326"},"content":"","lastModifiedDate":"2022-03-27"},{"lineNumber":67,"author":{"gitId":"cwq2326"},"content":"CommandResult --\u003e ArchiveCommand","lastModifiedDate":"2022-03-27"},{"lineNumber":68,"author":{"gitId":"cwq2326"},"content":"deactivate CommandResult","lastModifiedDate":"2022-03-27"},{"lineNumber":69,"author":{"gitId":"cwq2326"},"content":"","lastModifiedDate":"2022-03-27"},{"lineNumber":70,"author":{"gitId":"cwq2326"},"content":"ArchiveCommand --\u003e LogicManager : result","lastModifiedDate":"2022-03-27"},{"lineNumber":71,"author":{"gitId":"cwq2326"},"content":"deactivate ArchiveCommand","lastModifiedDate":"2022-03-27"},{"lineNumber":72,"author":{"gitId":"cwq2326"},"content":"","lastModifiedDate":"2022-03-27"},{"lineNumber":73,"author":{"gitId":"cwq2326"},"content":"\u0027Hidden arrow to position the destroy marker below the end of the activation bar.","lastModifiedDate":"2022-03-27"},{"lineNumber":74,"author":{"gitId":"cwq2326"},"content":"LogicManager -[hidden]-\u003e AddressBookParser","lastModifiedDate":"2022-03-27"},{"lineNumber":75,"author":{"gitId":"cwq2326"},"content":"destroy ArchiveCommand","lastModifiedDate":"2022-03-27"},{"lineNumber":76,"author":{"gitId":"cwq2326"},"content":"","lastModifiedDate":"2022-03-27"},{"lineNumber":77,"author":{"gitId":"cwq2326"},"content":"[\u003c--LogicManager","lastModifiedDate":"2022-03-27"},{"lineNumber":78,"author":{"gitId":"cwq2326"},"content":"deactivate LogicManager","lastModifiedDate":"2022-03-27"},{"lineNumber":79,"author":{"gitId":"cwq2326"},"content":"@enduml","lastModifiedDate":"2022-03-27"}],"authorContributionMap":{"cwq2326":79}},{"path":"docs/diagrams/BetterModelClassDiagram.puml","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"@startuml","lastModifiedDate":"2019-07-03"},{"lineNumber":2,"author":{"gitId":"-"},"content":"!include style.puml","lastModifiedDate":"2019-07-03"},{"lineNumber":3,"author":{"gitId":"-"},"content":"skinparam arrowThickness 1.1","lastModifiedDate":"2019-07-03"},{"lineNumber":4,"author":{"gitId":"-"},"content":"skinparam arrowColor MODEL_COLOR","lastModifiedDate":"2019-07-03"},{"lineNumber":5,"author":{"gitId":"-"},"content":"skinparam classBackgroundColor MODEL_COLOR","lastModifiedDate":"2019-07-03"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":7,"author":{"gitId":"-"},"content":"AddressBook *-right-\u003e \"1\" UniquePersonList","lastModifiedDate":"2019-07-30"},{"lineNumber":8,"author":{"gitId":"-"},"content":"AddressBook *-right-\u003e \"1\" UniqueTagList","lastModifiedDate":"2019-07-30"},{"lineNumber":9,"author":{"gitId":"-"},"content":"UniqueTagList -[hidden]down- UniquePersonList","lastModifiedDate":"2019-07-03"},{"lineNumber":10,"author":{"gitId":"-"},"content":"UniqueTagList -[hidden]down- UniquePersonList","lastModifiedDate":"2019-07-03"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":12,"author":{"gitId":"-"},"content":"UniqueTagList *-right-\u003e \"*\" Tag","lastModifiedDate":"2019-07-03"},{"lineNumber":13,"author":{"gitId":"-"},"content":"UniquePersonList -right-\u003e Person","lastModifiedDate":"2021-07-31"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":15,"author":{"gitId":"-"},"content":"Person -up-\u003e \"*\" Tag","lastModifiedDate":"2020-05-23"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":17,"author":{"gitId":"-"},"content":"Person *--\u003e Name","lastModifiedDate":"2019-07-03"},{"lineNumber":18,"author":{"gitId":"jiale-c"},"content":"Person *---\u003e Phone","lastModifiedDate":"2022-03-23"},{"lineNumber":19,"author":{"gitId":"-"},"content":"Person *--\u003e Email","lastModifiedDate":"2019-07-03"},{"lineNumber":20,"author":{"gitId":"jiale-c"},"content":"Person *---\u003e Address","lastModifiedDate":"2022-03-23"},{"lineNumber":21,"author":{"gitId":"jiale-c"},"content":"Person *--\u003e Block","lastModifiedDate":"2022-03-23"},{"lineNumber":22,"author":{"gitId":"jiale-c"},"content":"Person *---\u003e Faculty","lastModifiedDate":"2022-03-23"},{"lineNumber":23,"author":{"gitId":"jiale-c"},"content":"Person *--\u003e CovidStatus","lastModifiedDate":"2022-03-23"},{"lineNumber":24,"author":{"gitId":"jiale-c"},"content":"Person *---\u003e MatriculationNumber","lastModifiedDate":"2022-03-23"},{"lineNumber":25,"author":{"gitId":"jiale-c"},"content":"","lastModifiedDate":"2022-03-23"},{"lineNumber":26,"author":{"gitId":"-"},"content":"@enduml","lastModifiedDate":"2019-07-03"}],"authorContributionMap":{"jiale-c":7,"-":19}},{"path":"docs/diagrams/ClearFeatureActivityDiagram.puml","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"jiale-c"},"content":"@startuml","lastModifiedDate":"2022-03-23"},{"lineNumber":2,"author":{"gitId":"jiale-c"},"content":"\u0027https://plantuml.com/activity-diagram-beta","lastModifiedDate":"2022-03-23"},{"lineNumber":3,"author":{"gitId":"jiale-c"},"content":"","lastModifiedDate":"2022-03-23"},{"lineNumber":4,"author":{"gitId":"jiale-c"},"content":"(*)--\u003e \"User inputs Clear Command without any tags\"","lastModifiedDate":"2022-03-23"},{"lineNumber":5,"author":{"gitId":"jiale-c"},"content":"--\u003e \"Tracey replace the existing address book\\nwith an empty one\"","lastModifiedDate":"2022-03-23"},{"lineNumber":6,"author":{"gitId":"jiale-c"},"content":"--\u003e \"All existing data are not retrievable\"","lastModifiedDate":"2022-03-23"},{"lineNumber":7,"author":{"gitId":"jiale-c"},"content":"--\u003e \"Tracey tells user address book is cleared\"","lastModifiedDate":"2022-03-23"},{"lineNumber":8,"author":{"gitId":"jiale-c"},"content":"--\u003e(*)","lastModifiedDate":"2022-03-23"},{"lineNumber":9,"author":{"gitId":"jiale-c"},"content":"","lastModifiedDate":"2022-03-23"},{"lineNumber":10,"author":{"gitId":"jiale-c"},"content":"@enduml","lastModifiedDate":"2022-03-23"}],"authorContributionMap":{"jiale-c":10}},{"path":"docs/diagrams/ClearSequenceDiagram.puml","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"jiale-c"},"content":"@startuml","lastModifiedDate":"2022-03-23"},{"lineNumber":2,"author":{"gitId":"jiale-c"},"content":"!include style.puml","lastModifiedDate":"2022-03-23"},{"lineNumber":3,"author":{"gitId":"jiale-c"},"content":"","lastModifiedDate":"2022-03-23"},{"lineNumber":4,"author":{"gitId":"jiale-c"},"content":"box Logic LOGIC_COLOR_T1","lastModifiedDate":"2022-03-23"},{"lineNumber":5,"author":{"gitId":"jiale-c"},"content":"participant \":LogicManager\" as LogicManager LOGIC_COLOR","lastModifiedDate":"2022-03-23"},{"lineNumber":6,"author":{"gitId":"jiale-c"},"content":"participant \":AddressBookParser\" as AddressBookParser LOGIC_COLOR","lastModifiedDate":"2022-03-23"},{"lineNumber":7,"author":{"gitId":"jiale-c"},"content":"participant \"d:ClearCommand\" as ClearCommand LOGIC_COLOR","lastModifiedDate":"2022-03-23"},{"lineNumber":8,"author":{"gitId":"jiale-c"},"content":"participant \":CommandResult\" as CommandResult LOGIC_COLOR","lastModifiedDate":"2022-03-23"},{"lineNumber":9,"author":{"gitId":"jiale-c"},"content":"end box","lastModifiedDate":"2022-03-23"},{"lineNumber":10,"author":{"gitId":"jiale-c"},"content":"","lastModifiedDate":"2022-03-23"},{"lineNumber":11,"author":{"gitId":"jiale-c"},"content":"box Model MODEL_COLOR_T1","lastModifiedDate":"2022-03-23"},{"lineNumber":12,"author":{"gitId":"jiale-c"},"content":"participant \":Model\" as Model MODEL_COLOR","lastModifiedDate":"2022-03-23"},{"lineNumber":13,"author":{"gitId":"jiale-c"},"content":"end box","lastModifiedDate":"2022-03-23"},{"lineNumber":14,"author":{"gitId":"jiale-c"},"content":"","lastModifiedDate":"2022-03-23"},{"lineNumber":15,"author":{"gitId":"jiale-c"},"content":"[-\u003e LogicManager : execute(\"clear\")","lastModifiedDate":"2022-03-23"},{"lineNumber":16,"author":{"gitId":"jiale-c"},"content":"activate LogicManager","lastModifiedDate":"2022-03-23"},{"lineNumber":17,"author":{"gitId":"jiale-c"},"content":"","lastModifiedDate":"2022-03-23"},{"lineNumber":18,"author":{"gitId":"jiale-c"},"content":"LogicManager -\u003e AddressBookParser : parseCommand(\"clear\")","lastModifiedDate":"2022-03-23"},{"lineNumber":19,"author":{"gitId":"jiale-c"},"content":"activate AddressBookParser","lastModifiedDate":"2022-03-23"},{"lineNumber":20,"author":{"gitId":"jiale-c"},"content":"","lastModifiedDate":"2022-03-23"},{"lineNumber":21,"author":{"gitId":"jiale-c"},"content":"create ClearCommand","lastModifiedDate":"2022-03-23"},{"lineNumber":22,"author":{"gitId":"jiale-c"},"content":"AddressBookParser -\u003e ClearCommand","lastModifiedDate":"2022-03-23"},{"lineNumber":23,"author":{"gitId":"jiale-c"},"content":"activate ClearCommand","lastModifiedDate":"2022-03-23"},{"lineNumber":24,"author":{"gitId":"jiale-c"},"content":"","lastModifiedDate":"2022-03-23"},{"lineNumber":25,"author":{"gitId":"jiale-c"},"content":"ClearCommand --\u003e AddressBookParser","lastModifiedDate":"2022-03-23"},{"lineNumber":26,"author":{"gitId":"jiale-c"},"content":"deactivate ClearCommand","lastModifiedDate":"2022-03-23"},{"lineNumber":27,"author":{"gitId":"jiale-c"},"content":"","lastModifiedDate":"2022-03-23"},{"lineNumber":28,"author":{"gitId":"jiale-c"},"content":"AddressBookParser --\u003e LogicManager","lastModifiedDate":"2022-03-23"},{"lineNumber":29,"author":{"gitId":"jiale-c"},"content":"deactivate AddressBookParser","lastModifiedDate":"2022-03-23"},{"lineNumber":30,"author":{"gitId":"jiale-c"},"content":"","lastModifiedDate":"2022-03-23"},{"lineNumber":31,"author":{"gitId":"jiale-c"},"content":"LogicManager -\u003e ClearCommand : execute()","lastModifiedDate":"2022-03-23"},{"lineNumber":32,"author":{"gitId":"jiale-c"},"content":"activate ClearCommand","lastModifiedDate":"2022-03-23"},{"lineNumber":33,"author":{"gitId":"jiale-c"},"content":"","lastModifiedDate":"2022-03-23"},{"lineNumber":34,"author":{"gitId":"jiale-c"},"content":"ClearCommand -\u003e Model : setAddressBook(new AddressBook)","lastModifiedDate":"2022-03-23"},{"lineNumber":35,"author":{"gitId":"jiale-c"},"content":"activate Model","lastModifiedDate":"2022-03-23"},{"lineNumber":36,"author":{"gitId":"jiale-c"},"content":"","lastModifiedDate":"2022-03-23"},{"lineNumber":37,"author":{"gitId":"jiale-c"},"content":"Model --\u003e ClearCommand","lastModifiedDate":"2022-03-23"},{"lineNumber":38,"author":{"gitId":"jiale-c"},"content":"deactivate Model","lastModifiedDate":"2022-03-23"},{"lineNumber":39,"author":{"gitId":"jiale-c"},"content":"","lastModifiedDate":"2022-03-23"},{"lineNumber":40,"author":{"gitId":"jiale-c"},"content":"create CommandResult","lastModifiedDate":"2022-03-23"},{"lineNumber":41,"author":{"gitId":"jiale-c"},"content":"ClearCommand -\u003e CommandResult","lastModifiedDate":"2022-03-23"},{"lineNumber":42,"author":{"gitId":"jiale-c"},"content":"activate CommandResult","lastModifiedDate":"2022-03-23"},{"lineNumber":43,"author":{"gitId":"jiale-c"},"content":"","lastModifiedDate":"2022-03-23"},{"lineNumber":44,"author":{"gitId":"jiale-c"},"content":"CommandResult --\u003e ClearCommand","lastModifiedDate":"2022-03-23"},{"lineNumber":45,"author":{"gitId":"jiale-c"},"content":"deactivate CommandResult","lastModifiedDate":"2022-03-23"},{"lineNumber":46,"author":{"gitId":"jiale-c"},"content":"","lastModifiedDate":"2022-03-23"},{"lineNumber":47,"author":{"gitId":"jiale-c"},"content":"ClearCommand --\u003e LogicManager : result","lastModifiedDate":"2022-03-23"},{"lineNumber":48,"author":{"gitId":"jiale-c"},"content":"deactivate ClearCommand","lastModifiedDate":"2022-03-23"},{"lineNumber":49,"author":{"gitId":"jiale-c"},"content":"","lastModifiedDate":"2022-03-23"},{"lineNumber":50,"author":{"gitId":"jiale-c"},"content":"ClearCommand -[hidden]-\u003e AddressBookParser","lastModifiedDate":"2022-03-23"},{"lineNumber":51,"author":{"gitId":"jiale-c"},"content":"destroy ClearCommand","lastModifiedDate":"2022-03-23"},{"lineNumber":52,"author":{"gitId":"jiale-c"},"content":"","lastModifiedDate":"2022-03-23"},{"lineNumber":53,"author":{"gitId":"jiale-c"},"content":"[\u003c--LogicManager","lastModifiedDate":"2022-03-23"},{"lineNumber":54,"author":{"gitId":"jiale-c"},"content":"deactivate LogicManager","lastModifiedDate":"2022-03-23"},{"lineNumber":55,"author":{"gitId":"jiale-c"},"content":"@enduml","lastModifiedDate":"2022-03-23"}],"authorContributionMap":{"jiale-c":55}},{"path":"docs/diagrams/EditFeatureActivityDiagram.puml","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"cwq2326"},"content":"@startuml","lastModifiedDate":"2022-03-24"},{"lineNumber":2,"author":{"gitId":"cwq2326"},"content":"\u0027https://plantuml.com/activity-diagram-beta","lastModifiedDate":"2022-03-24"},{"lineNumber":3,"author":{"gitId":"cwq2326"},"content":"","lastModifiedDate":"2022-03-24"},{"lineNumber":4,"author":{"gitId":"cwq2326"},"content":"start","lastModifiedDate":"2022-03-24"},{"lineNumber":5,"author":{"gitId":"cwq2326"},"content":":User inputs Edit Command with index and tags;","lastModifiedDate":"2022-03-24"},{"lineNumber":6,"author":{"gitId":"cwq2326"},"content":"","lastModifiedDate":"2022-03-24"},{"lineNumber":7,"author":{"gitId":"cwq2326"},"content":"if () then ([tags with wrong prefix || \\n index is out of range || \\n tags parameters with\\n wrong format])","lastModifiedDate":"2022-03-24"},{"lineNumber":8,"author":{"gitId":"cwq2326"},"content":"    :Throws ParseException;","lastModifiedDate":"2022-03-24"},{"lineNumber":9,"author":{"gitId":"cwq2326"},"content":"    else ([else])","lastModifiedDate":"2022-03-24"},{"lineNumber":10,"author":{"gitId":"cwq2326"},"content":"","lastModifiedDate":"2022-03-24"},{"lineNumber":11,"author":{"gitId":"cwq2326"},"content":"    if () then ([Field value to be \\n edited is the same as the \\n coresponding field \\n value of the person])","lastModifiedDate":"2022-03-24"},{"lineNumber":12,"author":{"gitId":"cwq2326"},"content":"        :CommandException;","lastModifiedDate":"2022-03-24"},{"lineNumber":13,"author":{"gitId":"cwq2326"},"content":"","lastModifiedDate":"2022-03-24"},{"lineNumber":14,"author":{"gitId":"cwq2326"},"content":"    else ([else])","lastModifiedDate":"2022-03-24"},{"lineNumber":15,"author":{"gitId":"cwq2326"},"content":"        :Field values of person in \\n the addressbook is updated;","lastModifiedDate":"2022-03-24"},{"lineNumber":16,"author":{"gitId":"cwq2326"},"content":"        :Returns Message to user indicating Success;","lastModifiedDate":"2022-03-24"},{"lineNumber":17,"author":{"gitId":"cwq2326"},"content":"        :ResultDisplay prints result to user;","lastModifiedDate":"2022-03-24"},{"lineNumber":18,"author":{"gitId":"cwq2326"},"content":"   endif","lastModifiedDate":"2022-03-24"},{"lineNumber":19,"author":{"gitId":"cwq2326"},"content":"endif","lastModifiedDate":"2022-03-24"},{"lineNumber":20,"author":{"gitId":"cwq2326"},"content":"stop","lastModifiedDate":"2022-03-24"},{"lineNumber":21,"author":{"gitId":"cwq2326"},"content":"@enduml","lastModifiedDate":"2022-03-24"}],"authorContributionMap":{"cwq2326":21}},{"path":"docs/diagrams/FilterFeatureActivityDiagram.puml","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"tanchinkiat99"},"content":"@startuml","lastModifiedDate":"2022-03-25"},{"lineNumber":2,"author":{"gitId":"tanchinkiat99"},"content":"\u0027https://plantuml.com/activity-diagram-beta","lastModifiedDate":"2022-03-25"},{"lineNumber":3,"author":{"gitId":"tanchinkiat99"},"content":"","lastModifiedDate":"2022-03-25"},{"lineNumber":4,"author":{"gitId":"tanchinkiat99"},"content":"start","lastModifiedDate":"2022-03-25"},{"lineNumber":5,"author":{"gitId":"tanchinkiat99"},"content":":User inputs filter command with specified fields;","lastModifiedDate":"2022-03-25"},{"lineNumber":6,"author":{"gitId":"tanchinkiat99"},"content":":Tracey parses filter command and inputs;","lastModifiedDate":"2022-03-25"},{"lineNumber":7,"author":{"gitId":"tanchinkiat99"},"content":"if () then ([input is in wrong format or blank])","lastModifiedDate":"2022-03-25"},{"lineNumber":8,"author":{"gitId":"tanchinkiat99"},"content":": Tracey throws a ParseException;","lastModifiedDate":"2022-03-25"},{"lineNumber":9,"author":{"gitId":"tanchinkiat99"},"content":": Tracey displays an error message and the right format of inputs;","lastModifiedDate":"2022-03-25"},{"lineNumber":10,"author":{"gitId":"tanchinkiat99"},"content":"else ([input is in the correct format])","lastModifiedDate":"2022-03-25"},{"lineNumber":11,"author":{"gitId":"tanchinkiat99"},"content":": Tracey stores the input values for the respective fields;","lastModifiedDate":"2022-03-25"},{"lineNumber":12,"author":{"gitId":"tanchinkiat99"},"content":": Tracey displays only the details of students that fit the specified criteria;","lastModifiedDate":"2022-03-25"},{"lineNumber":13,"author":{"gitId":"tanchinkiat99"},"content":"endif","lastModifiedDate":"2022-03-25"},{"lineNumber":14,"author":{"gitId":"tanchinkiat99"},"content":"","lastModifiedDate":"2022-03-25"},{"lineNumber":15,"author":{"gitId":"tanchinkiat99"},"content":"stop","lastModifiedDate":"2022-03-25"},{"lineNumber":16,"author":{"gitId":"tanchinkiat99"},"content":"","lastModifiedDate":"2022-03-25"},{"lineNumber":17,"author":{"gitId":"tanchinkiat99"},"content":"@enduml","lastModifiedDate":"2022-03-25"}],"authorContributionMap":{"tanchinkiat99":17}},{"path":"docs/diagrams/FilterSequenceDiagram.puml","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"tanchinkiat99"},"content":"@startuml","lastModifiedDate":"2022-03-25"},{"lineNumber":2,"author":{"gitId":"tanchinkiat99"},"content":"!include style.puml","lastModifiedDate":"2022-03-25"},{"lineNumber":3,"author":{"gitId":"tanchinkiat99"},"content":"","lastModifiedDate":"2022-03-25"},{"lineNumber":4,"author":{"gitId":"tanchinkiat99"},"content":"box Logic LOGIC_COLOR_T1","lastModifiedDate":"2022-03-25"},{"lineNumber":5,"author":{"gitId":"tanchinkiat99"},"content":"participant \":LogicManager\" as LogicManager LOGIC_COLOR","lastModifiedDate":"2022-03-25"},{"lineNumber":6,"author":{"gitId":"tanchinkiat99"},"content":"participant \":AddressBookParser\" as AddressBookParser LOGIC_COLOR","lastModifiedDate":"2022-03-25"},{"lineNumber":7,"author":{"gitId":"tanchinkiat99"},"content":"participant \":FilterDescriptor\" as FilterDescriptor LOGIC_COLOR","lastModifiedDate":"2022-03-25"},{"lineNumber":8,"author":{"gitId":"tanchinkiat99"},"content":"participant \":FilterCommandParser\" as FilterCommandParser LOGIC_COLOR","lastModifiedDate":"2022-03-25"},{"lineNumber":9,"author":{"gitId":"tanchinkiat99"},"content":"participant \"f:FilterCommand\" as FilterCommand LOGIC_COLOR","lastModifiedDate":"2022-03-25"},{"lineNumber":10,"author":{"gitId":"tanchinkiat99"},"content":"participant \":CommandResult\" as CommandResult LOGIC_COLOR","lastModifiedDate":"2022-03-25"},{"lineNumber":11,"author":{"gitId":"tanchinkiat99"},"content":"end box","lastModifiedDate":"2022-03-25"},{"lineNumber":12,"author":{"gitId":"tanchinkiat99"},"content":"","lastModifiedDate":"2022-03-25"},{"lineNumber":13,"author":{"gitId":"tanchinkiat99"},"content":"","lastModifiedDate":"2022-03-25"},{"lineNumber":14,"author":{"gitId":"tanchinkiat99"},"content":"box Model MODEL_COLOR_T1","lastModifiedDate":"2022-03-25"},{"lineNumber":15,"author":{"gitId":"tanchinkiat99"},"content":"participant \":Model\" as Model MODEL_COLOR","lastModifiedDate":"2022-03-25"},{"lineNumber":16,"author":{"gitId":"tanchinkiat99"},"content":"end box","lastModifiedDate":"2022-03-25"},{"lineNumber":17,"author":{"gitId":"tanchinkiat99"},"content":"","lastModifiedDate":"2022-03-25"},{"lineNumber":18,"author":{"gitId":"tanchinkiat99"},"content":"[-\u003e LogicManager : execute(\"filter FILTER_CRITERIA\")","lastModifiedDate":"2022-03-25"},{"lineNumber":19,"author":{"gitId":"tanchinkiat99"},"content":"activate LogicManager","lastModifiedDate":"2022-03-25"},{"lineNumber":20,"author":{"gitId":"tanchinkiat99"},"content":"note RIGHT","lastModifiedDate":"2022-03-25"},{"lineNumber":21,"author":{"gitId":"tanchinkiat99"},"content":"\u003dFILTER_CRITERIA \u003d","lastModifiedDate":"2022-03-25"},{"lineNumber":22,"author":{"gitId":"tanchinkiat99"},"content":" cs/positive f/soc b/b","lastModifiedDate":"2022-03-25"},{"lineNumber":23,"author":{"gitId":"tanchinkiat99"},"content":"end note","lastModifiedDate":"2022-03-25"},{"lineNumber":24,"author":{"gitId":"tanchinkiat99"},"content":"","lastModifiedDate":"2022-03-25"},{"lineNumber":25,"author":{"gitId":"tanchinkiat99"},"content":"LogicManager -\u003e AddressBookParser : parseCommand(\"filter FILTER_CRITERIA\")","lastModifiedDate":"2022-03-25"},{"lineNumber":26,"author":{"gitId":"tanchinkiat99"},"content":"activate AddressBookParser","lastModifiedDate":"2022-03-25"},{"lineNumber":27,"author":{"gitId":"tanchinkiat99"},"content":"","lastModifiedDate":"2022-03-25"},{"lineNumber":28,"author":{"gitId":"tanchinkiat99"},"content":"create FilterCommandParser","lastModifiedDate":"2022-03-25"},{"lineNumber":29,"author":{"gitId":"tanchinkiat99"},"content":"AddressBookParser -\u003e FilterCommandParser","lastModifiedDate":"2022-03-25"},{"lineNumber":30,"author":{"gitId":"tanchinkiat99"},"content":"activate FilterCommandParser","lastModifiedDate":"2022-03-25"},{"lineNumber":31,"author":{"gitId":"tanchinkiat99"},"content":"","lastModifiedDate":"2022-03-25"},{"lineNumber":32,"author":{"gitId":"tanchinkiat99"},"content":"FilterCommandParser --\u003e AddressBookParser","lastModifiedDate":"2022-03-25"},{"lineNumber":33,"author":{"gitId":"tanchinkiat99"},"content":"deactivate FilterCommandParser","lastModifiedDate":"2022-03-25"},{"lineNumber":34,"author":{"gitId":"tanchinkiat99"},"content":"","lastModifiedDate":"2022-03-25"},{"lineNumber":35,"author":{"gitId":"tanchinkiat99"},"content":"AddressBookParser -\u003e FilterCommandParser : parse(\"FILTER_CRITERIA\")","lastModifiedDate":"2022-03-25"},{"lineNumber":36,"author":{"gitId":"tanchinkiat99"},"content":"activate FilterCommandParser","lastModifiedDate":"2022-03-25"},{"lineNumber":37,"author":{"gitId":"tanchinkiat99"},"content":"","lastModifiedDate":"2022-03-25"},{"lineNumber":38,"author":{"gitId":"tanchinkiat99"},"content":"create FilterDescriptor","lastModifiedDate":"2022-03-25"},{"lineNumber":39,"author":{"gitId":"tanchinkiat99"},"content":"FilterCommandParser -\u003e FilterDescriptor","lastModifiedDate":"2022-03-25"},{"lineNumber":40,"author":{"gitId":"tanchinkiat99"},"content":"activate FilterDescriptor","lastModifiedDate":"2022-03-25"},{"lineNumber":41,"author":{"gitId":"tanchinkiat99"},"content":"","lastModifiedDate":"2022-03-25"},{"lineNumber":42,"author":{"gitId":"tanchinkiat99"},"content":"FilterDescriptor --\u003e FilterCommandParser","lastModifiedDate":"2022-03-25"},{"lineNumber":43,"author":{"gitId":"tanchinkiat99"},"content":"deactivate FilterDescriptor","lastModifiedDate":"2022-03-25"},{"lineNumber":44,"author":{"gitId":"tanchinkiat99"},"content":"","lastModifiedDate":"2022-03-25"},{"lineNumber":45,"author":{"gitId":"tanchinkiat99"},"content":"create FilterCommand","lastModifiedDate":"2022-03-25"},{"lineNumber":46,"author":{"gitId":"tanchinkiat99"},"content":"FilterCommandParser -\u003e FilterCommand : FilterCommand(filterDescriptor)","lastModifiedDate":"2022-03-25"},{"lineNumber":47,"author":{"gitId":"tanchinkiat99"},"content":"activate FilterCommand","lastModifiedDate":"2022-03-25"},{"lineNumber":48,"author":{"gitId":"tanchinkiat99"},"content":"","lastModifiedDate":"2022-03-25"},{"lineNumber":49,"author":{"gitId":"tanchinkiat99"},"content":"FilterCommand --\u003e FilterCommandParser : f","lastModifiedDate":"2022-03-25"},{"lineNumber":50,"author":{"gitId":"tanchinkiat99"},"content":"deactivate FilterCommand","lastModifiedDate":"2022-03-25"},{"lineNumber":51,"author":{"gitId":"tanchinkiat99"},"content":"","lastModifiedDate":"2022-03-25"},{"lineNumber":52,"author":{"gitId":"tanchinkiat99"},"content":"FilterCommandParser --\u003e AddressBookParser : f","lastModifiedDate":"2022-03-25"},{"lineNumber":53,"author":{"gitId":"tanchinkiat99"},"content":"deactivate FilterCommandParser","lastModifiedDate":"2022-03-25"},{"lineNumber":54,"author":{"gitId":"tanchinkiat99"},"content":"\u0027Hidden arrow to position the destroy marker below the end of the activation bar.","lastModifiedDate":"2022-03-25"},{"lineNumber":55,"author":{"gitId":"tanchinkiat99"},"content":"FilterCommandParser -[hidden]-\u003e AddressBookParser","lastModifiedDate":"2022-03-25"},{"lineNumber":56,"author":{"gitId":"tanchinkiat99"},"content":"destroy FilterCommandParser","lastModifiedDate":"2022-03-25"},{"lineNumber":57,"author":{"gitId":"tanchinkiat99"},"content":"","lastModifiedDate":"2022-03-25"},{"lineNumber":58,"author":{"gitId":"tanchinkiat99"},"content":"AddressBookParser --\u003e LogicManager : f","lastModifiedDate":"2022-03-25"},{"lineNumber":59,"author":{"gitId":"tanchinkiat99"},"content":"deactivate AddressBookParser","lastModifiedDate":"2022-03-25"},{"lineNumber":60,"author":{"gitId":"tanchinkiat99"},"content":"","lastModifiedDate":"2022-03-25"},{"lineNumber":61,"author":{"gitId":"tanchinkiat99"},"content":"LogicManager -\u003e FilterCommand : execute()","lastModifiedDate":"2022-03-25"},{"lineNumber":62,"author":{"gitId":"tanchinkiat99"},"content":"activate FilterCommand","lastModifiedDate":"2022-03-25"},{"lineNumber":63,"author":{"gitId":"tanchinkiat99"},"content":"","lastModifiedDate":"2022-03-25"},{"lineNumber":64,"author":{"gitId":"tanchinkiat99"},"content":"FilterCommand -\u003e Model : updateFilteredPersonsList(filters)","lastModifiedDate":"2022-03-25"},{"lineNumber":65,"author":{"gitId":"tanchinkiat99"},"content":"activate Model","lastModifiedDate":"2022-03-25"},{"lineNumber":66,"author":{"gitId":"tanchinkiat99"},"content":"","lastModifiedDate":"2022-03-25"},{"lineNumber":67,"author":{"gitId":"tanchinkiat99"},"content":"Model --\u003e FilterCommand","lastModifiedDate":"2022-03-25"},{"lineNumber":68,"author":{"gitId":"tanchinkiat99"},"content":"deactivate Model","lastModifiedDate":"2022-03-25"},{"lineNumber":69,"author":{"gitId":"tanchinkiat99"},"content":"","lastModifiedDate":"2022-03-25"},{"lineNumber":70,"author":{"gitId":"tanchinkiat99"},"content":"create CommandResult","lastModifiedDate":"2022-03-25"},{"lineNumber":71,"author":{"gitId":"tanchinkiat99"},"content":"FilterCommand -\u003e CommandResult","lastModifiedDate":"2022-03-25"},{"lineNumber":72,"author":{"gitId":"tanchinkiat99"},"content":"activate CommandResult","lastModifiedDate":"2022-03-25"},{"lineNumber":73,"author":{"gitId":"tanchinkiat99"},"content":"","lastModifiedDate":"2022-03-25"},{"lineNumber":74,"author":{"gitId":"tanchinkiat99"},"content":"CommandResult --\u003e FilterCommand","lastModifiedDate":"2022-03-25"},{"lineNumber":75,"author":{"gitId":"tanchinkiat99"},"content":"deactivate CommandResult","lastModifiedDate":"2022-03-25"},{"lineNumber":76,"author":{"gitId":"tanchinkiat99"},"content":"","lastModifiedDate":"2022-03-25"},{"lineNumber":77,"author":{"gitId":"tanchinkiat99"},"content":"FilterCommand --\u003e LogicManager : result","lastModifiedDate":"2022-03-25"},{"lineNumber":78,"author":{"gitId":"tanchinkiat99"},"content":"deactivate FilterCommand","lastModifiedDate":"2022-03-25"},{"lineNumber":79,"author":{"gitId":"tanchinkiat99"},"content":"","lastModifiedDate":"2022-03-25"},{"lineNumber":80,"author":{"gitId":"tanchinkiat99"},"content":"[\u003c--LogicManager","lastModifiedDate":"2022-03-25"},{"lineNumber":81,"author":{"gitId":"tanchinkiat99"},"content":"deactivate LogicManager","lastModifiedDate":"2022-03-25"},{"lineNumber":82,"author":{"gitId":"tanchinkiat99"},"content":"@enduml","lastModifiedDate":"2022-03-25"}],"authorContributionMap":{"tanchinkiat99":82}},{"path":"docs/diagrams/FindFeatureActivityDiagram.puml","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"jiale-c"},"content":"@startuml","lastModifiedDate":"2022-03-25"},{"lineNumber":2,"author":{"gitId":"jiale-c"},"content":"\u0027https://plantuml.com/activity-diagram-beta","lastModifiedDate":"2022-03-25"},{"lineNumber":3,"author":{"gitId":"jiale-c"},"content":"","lastModifiedDate":"2022-03-25"},{"lineNumber":4,"author":{"gitId":"jiale-c"},"content":"start","lastModifiedDate":"2022-03-25"},{"lineNumber":5,"author":{"gitId":"jiale-c"},"content":":User inputs Find Command with person name;","lastModifiedDate":"2022-03-25"},{"lineNumber":6,"author":{"gitId":"jiale-c"},"content":"","lastModifiedDate":"2022-03-25"},{"lineNumber":7,"author":{"gitId":"jiale-c"},"content":"if () then ([Field value matches the name of \\n a person in the existing database])","lastModifiedDate":"2022-03-25"},{"lineNumber":8,"author":{"gitId":"jiale-c"},"content":"    :Names matching the field picked;","lastModifiedDate":"2022-03-25"},{"lineNumber":9,"author":{"gitId":"jiale-c"},"content":"        :Returns Message to user indicating Success;","lastModifiedDate":"2022-03-25"},{"lineNumber":10,"author":{"gitId":"jiale-c"},"content":"        :ResultDisplay prints result to user;","lastModifiedDate":"2022-03-25"},{"lineNumber":11,"author":{"gitId":"jiale-c"},"content":"","lastModifiedDate":"2022-03-25"},{"lineNumber":12,"author":{"gitId":"jiale-c"},"content":"else ([else])","lastModifiedDate":"2022-03-25"},{"lineNumber":13,"author":{"gitId":"jiale-c"},"content":"    :CommandException;","lastModifiedDate":"2022-03-25"},{"lineNumber":14,"author":{"gitId":"jiale-c"},"content":"endif","lastModifiedDate":"2022-03-25"},{"lineNumber":15,"author":{"gitId":"jiale-c"},"content":"stop","lastModifiedDate":"2022-03-25"},{"lineNumber":16,"author":{"gitId":"jiale-c"},"content":"@enduml","lastModifiedDate":"2022-03-25"}],"authorContributionMap":{"jiale-c":16}},{"path":"docs/diagrams/FindSequenceDiagram.puml","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"jiale-c"},"content":"@startuml","lastModifiedDate":"2022-03-25"},{"lineNumber":2,"author":{"gitId":"jiale-c"},"content":"!include style.puml","lastModifiedDate":"2022-03-25"},{"lineNumber":3,"author":{"gitId":"jiale-c"},"content":"","lastModifiedDate":"2022-03-25"},{"lineNumber":4,"author":{"gitId":"jiale-c"},"content":"box Logic LOGIC_COLOR_T1","lastModifiedDate":"2022-03-25"},{"lineNumber":5,"author":{"gitId":"jiale-c"},"content":"participant \":LogicManager\" as LogicManager LOGIC_COLOR","lastModifiedDate":"2022-03-25"},{"lineNumber":6,"author":{"gitId":"jiale-c"},"content":"participant \":AddressBookParser\" as AddressBookParser LOGIC_COLOR","lastModifiedDate":"2022-03-25"},{"lineNumber":7,"author":{"gitId":"jiale-c"},"content":"participant \":FindCommandParser\" as FindCommandParser LOGIC_COLOR","lastModifiedDate":"2022-03-25"},{"lineNumber":8,"author":{"gitId":"jiale-c"},"content":"participant \"a:FindCommand\" as FindCommand LOGIC_COLOR","lastModifiedDate":"2022-03-25"},{"lineNumber":9,"author":{"gitId":"jiale-c"},"content":"participant \":CommandResult\" as CommandResult LOGIC_COLOR","lastModifiedDate":"2022-03-25"},{"lineNumber":10,"author":{"gitId":"jiale-c"},"content":"participant \"person:Person\" as Person LOGIC_COLOR","lastModifiedDate":"2022-03-25"},{"lineNumber":11,"author":{"gitId":"jiale-c"},"content":"end box","lastModifiedDate":"2022-03-25"},{"lineNumber":12,"author":{"gitId":"jiale-c"},"content":"","lastModifiedDate":"2022-03-25"},{"lineNumber":13,"author":{"gitId":"jiale-c"},"content":"","lastModifiedDate":"2022-03-25"},{"lineNumber":14,"author":{"gitId":"jiale-c"},"content":"box Model MODEL_COLOR_T1","lastModifiedDate":"2022-03-25"},{"lineNumber":15,"author":{"gitId":"jiale-c"},"content":"participant \":Model\" as Model MODEL_COLOR","lastModifiedDate":"2022-03-25"},{"lineNumber":16,"author":{"gitId":"jiale-c"},"content":"end box","lastModifiedDate":"2022-03-25"},{"lineNumber":17,"author":{"gitId":"jiale-c"},"content":"","lastModifiedDate":"2022-03-25"},{"lineNumber":18,"author":{"gitId":"jiale-c"},"content":"[-\u003e LogicManager : execute(\"add XYZ\")","lastModifiedDate":"2022-03-25"},{"lineNumber":19,"author":{"gitId":"jiale-c"},"content":"activate LogicManager","lastModifiedDate":"2022-03-25"},{"lineNumber":20,"author":{"gitId":"jiale-c"},"content":"note RIGHT","lastModifiedDate":"2022-03-25"},{"lineNumber":21,"author":{"gitId":"jiale-c"},"content":"\u003dXYZ \u003d Alex","lastModifiedDate":"2022-03-25"},{"lineNumber":22,"author":{"gitId":"jiale-c"},"content":"end note","lastModifiedDate":"2022-03-25"},{"lineNumber":23,"author":{"gitId":"jiale-c"},"content":"","lastModifiedDate":"2022-03-25"},{"lineNumber":24,"author":{"gitId":"jiale-c"},"content":"LogicManager -\u003e AddressBookParser : parseCommand(\"add XYZ\")","lastModifiedDate":"2022-03-25"},{"lineNumber":25,"author":{"gitId":"jiale-c"},"content":"activate AddressBookParser","lastModifiedDate":"2022-03-25"},{"lineNumber":26,"author":{"gitId":"jiale-c"},"content":"","lastModifiedDate":"2022-03-25"},{"lineNumber":27,"author":{"gitId":"jiale-c"},"content":"create FindCommandParser","lastModifiedDate":"2022-03-25"},{"lineNumber":28,"author":{"gitId":"jiale-c"},"content":"AddressBookParser -\u003e FindCommandParser","lastModifiedDate":"2022-03-25"},{"lineNumber":29,"author":{"gitId":"jiale-c"},"content":"activate FindCommandParser","lastModifiedDate":"2022-03-25"},{"lineNumber":30,"author":{"gitId":"jiale-c"},"content":"","lastModifiedDate":"2022-03-25"},{"lineNumber":31,"author":{"gitId":"jiale-c"},"content":"FindCommandParser --\u003e AddressBookParser","lastModifiedDate":"2022-03-25"},{"lineNumber":32,"author":{"gitId":"jiale-c"},"content":"deactivate FindCommandParser","lastModifiedDate":"2022-03-25"},{"lineNumber":33,"author":{"gitId":"jiale-c"},"content":"","lastModifiedDate":"2022-03-25"},{"lineNumber":34,"author":{"gitId":"jiale-c"},"content":"AddressBookParser -\u003e FindCommandParser : parse(\"XYZ\")","lastModifiedDate":"2022-03-25"},{"lineNumber":35,"author":{"gitId":"jiale-c"},"content":"activate FindCommandParser","lastModifiedDate":"2022-03-25"},{"lineNumber":36,"author":{"gitId":"jiale-c"},"content":"","lastModifiedDate":"2022-03-25"},{"lineNumber":37,"author":{"gitId":"jiale-c"},"content":"create Person","lastModifiedDate":"2022-03-25"},{"lineNumber":38,"author":{"gitId":"jiale-c"},"content":"FindCommandParser --\u003e Person","lastModifiedDate":"2022-03-25"},{"lineNumber":39,"author":{"gitId":"jiale-c"},"content":"activate Person","lastModifiedDate":"2022-03-25"},{"lineNumber":40,"author":{"gitId":"jiale-c"},"content":"Person --\u003e FindCommandParser : person","lastModifiedDate":"2022-03-25"},{"lineNumber":41,"author":{"gitId":"jiale-c"},"content":"deactivate Person","lastModifiedDate":"2022-03-25"},{"lineNumber":42,"author":{"gitId":"jiale-c"},"content":"","lastModifiedDate":"2022-03-25"},{"lineNumber":43,"author":{"gitId":"jiale-c"},"content":"create FindCommand","lastModifiedDate":"2022-03-25"},{"lineNumber":44,"author":{"gitId":"jiale-c"},"content":"FindCommandParser -\u003e FindCommand : FindCommand(person)","lastModifiedDate":"2022-03-25"},{"lineNumber":45,"author":{"gitId":"jiale-c"},"content":"activate FindCommand","lastModifiedDate":"2022-03-25"},{"lineNumber":46,"author":{"gitId":"jiale-c"},"content":"","lastModifiedDate":"2022-03-25"},{"lineNumber":47,"author":{"gitId":"jiale-c"},"content":"FindCommand --\u003e FindCommandParser : a","lastModifiedDate":"2022-03-25"},{"lineNumber":48,"author":{"gitId":"jiale-c"},"content":"deactivate FindCommand","lastModifiedDate":"2022-03-25"},{"lineNumber":49,"author":{"gitId":"jiale-c"},"content":"","lastModifiedDate":"2022-03-25"},{"lineNumber":50,"author":{"gitId":"jiale-c"},"content":"FindCommandParser --\u003e AddressBookParser : a","lastModifiedDate":"2022-03-25"},{"lineNumber":51,"author":{"gitId":"jiale-c"},"content":"deactivate FindCommandParser","lastModifiedDate":"2022-03-25"},{"lineNumber":52,"author":{"gitId":"jiale-c"},"content":"\u0027Hidden arrow to position the destroy marker below the end of the activation bar.","lastModifiedDate":"2022-03-25"},{"lineNumber":53,"author":{"gitId":"jiale-c"},"content":"FindCommandParser -[hidden]-\u003e AddressBookParser","lastModifiedDate":"2022-03-25"},{"lineNumber":54,"author":{"gitId":"jiale-c"},"content":"destroy FindCommandParser","lastModifiedDate":"2022-03-25"},{"lineNumber":55,"author":{"gitId":"jiale-c"},"content":"","lastModifiedDate":"2022-03-25"},{"lineNumber":56,"author":{"gitId":"jiale-c"},"content":"AddressBookParser --\u003e LogicManager : a","lastModifiedDate":"2022-03-25"},{"lineNumber":57,"author":{"gitId":"jiale-c"},"content":"deactivate AddressBookParser","lastModifiedDate":"2022-03-25"},{"lineNumber":58,"author":{"gitId":"jiale-c"},"content":"","lastModifiedDate":"2022-03-25"},{"lineNumber":59,"author":{"gitId":"jiale-c"},"content":"LogicManager -\u003e FindCommand : execute()","lastModifiedDate":"2022-03-25"},{"lineNumber":60,"author":{"gitId":"jiale-c"},"content":"activate FindCommand","lastModifiedDate":"2022-03-25"},{"lineNumber":61,"author":{"gitId":"jiale-c"},"content":"","lastModifiedDate":"2022-03-25"},{"lineNumber":62,"author":{"gitId":"jiale-c"},"content":"FindCommand -\u003e Model : updateFilteredPersonList(namePredicate)","lastModifiedDate":"2022-03-25"},{"lineNumber":63,"author":{"gitId":"jiale-c"},"content":"activate Model","lastModifiedDate":"2022-03-25"},{"lineNumber":64,"author":{"gitId":"jiale-c"},"content":"","lastModifiedDate":"2022-03-25"},{"lineNumber":65,"author":{"gitId":"jiale-c"},"content":"Model --\u003e FindCommand","lastModifiedDate":"2022-03-25"},{"lineNumber":66,"author":{"gitId":"jiale-c"},"content":"deactivate Model","lastModifiedDate":"2022-03-25"},{"lineNumber":67,"author":{"gitId":"jiale-c"},"content":"","lastModifiedDate":"2022-03-25"},{"lineNumber":68,"author":{"gitId":"jiale-c"},"content":"create CommandResult","lastModifiedDate":"2022-03-25"},{"lineNumber":69,"author":{"gitId":"jiale-c"},"content":"FindCommand -\u003e CommandResult","lastModifiedDate":"2022-03-25"},{"lineNumber":70,"author":{"gitId":"jiale-c"},"content":"activate CommandResult","lastModifiedDate":"2022-03-25"},{"lineNumber":71,"author":{"gitId":"jiale-c"},"content":"","lastModifiedDate":"2022-03-25"},{"lineNumber":72,"author":{"gitId":"jiale-c"},"content":"CommandResult --\u003e FindCommand","lastModifiedDate":"2022-03-25"},{"lineNumber":73,"author":{"gitId":"jiale-c"},"content":"deactivate CommandResult","lastModifiedDate":"2022-03-25"},{"lineNumber":74,"author":{"gitId":"jiale-c"},"content":"","lastModifiedDate":"2022-03-25"},{"lineNumber":75,"author":{"gitId":"jiale-c"},"content":"FindCommand --\u003e LogicManager : result","lastModifiedDate":"2022-03-25"},{"lineNumber":76,"author":{"gitId":"jiale-c"},"content":"deactivate FindCommand","lastModifiedDate":"2022-03-25"},{"lineNumber":77,"author":{"gitId":"jiale-c"},"content":"","lastModifiedDate":"2022-03-25"},{"lineNumber":78,"author":{"gitId":"jiale-c"},"content":"[\u003c--LogicManager","lastModifiedDate":"2022-03-25"},{"lineNumber":79,"author":{"gitId":"jiale-c"},"content":"deactivate LogicManager","lastModifiedDate":"2022-03-25"},{"lineNumber":80,"author":{"gitId":"jiale-c"},"content":"@enduml","lastModifiedDate":"2022-03-25"}],"authorContributionMap":{"jiale-c":80}},{"path":"docs/diagrams/ListFeatureActivityDiagram.puml","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"jiale-c"},"content":"@startuml","lastModifiedDate":"2022-03-25"},{"lineNumber":2,"author":{"gitId":"jiale-c"},"content":"\u0027https://plantuml.com/activity-diagram-beta","lastModifiedDate":"2022-03-25"},{"lineNumber":3,"author":{"gitId":"jiale-c"},"content":"","lastModifiedDate":"2022-03-25"},{"lineNumber":4,"author":{"gitId":"jiale-c"},"content":"(*)--\u003e \"User inputs List Command without any tags\"","lastModifiedDate":"2022-03-25"},{"lineNumber":5,"author":{"gitId":"jiale-c"},"content":"--\u003e \"Tracey will show the user a list of\\nstudents with their particulars\"","lastModifiedDate":"2022-03-25"},{"lineNumber":6,"author":{"gitId":"jiale-c"},"content":"--\u003e \"Tracey will respond with a SUCCESS message\"","lastModifiedDate":"2022-03-25"},{"lineNumber":7,"author":{"gitId":"jiale-c"},"content":"--\u003e(*)","lastModifiedDate":"2022-03-25"},{"lineNumber":8,"author":{"gitId":"jiale-c"},"content":"","lastModifiedDate":"2022-03-25"},{"lineNumber":9,"author":{"gitId":"jiale-c"},"content":"@enduml","lastModifiedDate":"2022-03-25"}],"authorContributionMap":{"jiale-c":9}},{"path":"docs/diagrams/ListSequenceDiagram.puml","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"jiale-c"},"content":"@startuml","lastModifiedDate":"2022-03-25"},{"lineNumber":2,"author":{"gitId":"jiale-c"},"content":"!include style.puml","lastModifiedDate":"2022-03-25"},{"lineNumber":3,"author":{"gitId":"jiale-c"},"content":"","lastModifiedDate":"2022-03-25"},{"lineNumber":4,"author":{"gitId":"jiale-c"},"content":"box Logic LOGIC_COLOR_T1","lastModifiedDate":"2022-03-25"},{"lineNumber":5,"author":{"gitId":"jiale-c"},"content":"participant \":LogicManager\" as LogicManager LOGIC_COLOR","lastModifiedDate":"2022-03-25"},{"lineNumber":6,"author":{"gitId":"jiale-c"},"content":"participant \":AddressBookParser\" as AddressBookParser LOGIC_COLOR","lastModifiedDate":"2022-03-25"},{"lineNumber":7,"author":{"gitId":"jiale-c"},"content":"participant \"d:ListCommand\" as ListCommand LOGIC_COLOR","lastModifiedDate":"2022-03-25"},{"lineNumber":8,"author":{"gitId":"jiale-c"},"content":"participant \":CommandResult\" as CommandResult LOGIC_COLOR","lastModifiedDate":"2022-03-25"},{"lineNumber":9,"author":{"gitId":"jiale-c"},"content":"end box","lastModifiedDate":"2022-03-25"},{"lineNumber":10,"author":{"gitId":"jiale-c"},"content":"","lastModifiedDate":"2022-03-25"},{"lineNumber":11,"author":{"gitId":"jiale-c"},"content":"box Model MODEL_COLOR_T1","lastModifiedDate":"2022-03-25"},{"lineNumber":12,"author":{"gitId":"jiale-c"},"content":"participant \":Model\" as Model MODEL_COLOR","lastModifiedDate":"2022-03-25"},{"lineNumber":13,"author":{"gitId":"jiale-c"},"content":"end box","lastModifiedDate":"2022-03-25"},{"lineNumber":14,"author":{"gitId":"jiale-c"},"content":"","lastModifiedDate":"2022-03-25"},{"lineNumber":15,"author":{"gitId":"jiale-c"},"content":"[-\u003e LogicManager : execute(\"list\")","lastModifiedDate":"2022-03-25"},{"lineNumber":16,"author":{"gitId":"jiale-c"},"content":"activate LogicManager","lastModifiedDate":"2022-03-25"},{"lineNumber":17,"author":{"gitId":"jiale-c"},"content":"","lastModifiedDate":"2022-03-25"},{"lineNumber":18,"author":{"gitId":"jiale-c"},"content":"LogicManager -\u003e AddressBookParser : parseCommand(\"list\")","lastModifiedDate":"2022-03-25"},{"lineNumber":19,"author":{"gitId":"jiale-c"},"content":"activate AddressBookParser","lastModifiedDate":"2022-03-25"},{"lineNumber":20,"author":{"gitId":"jiale-c"},"content":"","lastModifiedDate":"2022-03-25"},{"lineNumber":21,"author":{"gitId":"jiale-c"},"content":"create ListCommand","lastModifiedDate":"2022-03-25"},{"lineNumber":22,"author":{"gitId":"jiale-c"},"content":"AddressBookParser -\u003e ListCommand","lastModifiedDate":"2022-03-25"},{"lineNumber":23,"author":{"gitId":"jiale-c"},"content":"activate ListCommand","lastModifiedDate":"2022-03-25"},{"lineNumber":24,"author":{"gitId":"jiale-c"},"content":"","lastModifiedDate":"2022-03-25"},{"lineNumber":25,"author":{"gitId":"jiale-c"},"content":"ListCommand --\u003e AddressBookParser","lastModifiedDate":"2022-03-25"},{"lineNumber":26,"author":{"gitId":"jiale-c"},"content":"deactivate ListCommand","lastModifiedDate":"2022-03-25"},{"lineNumber":27,"author":{"gitId":"jiale-c"},"content":"","lastModifiedDate":"2022-03-25"},{"lineNumber":28,"author":{"gitId":"jiale-c"},"content":"AddressBookParser --\u003e LogicManager","lastModifiedDate":"2022-03-25"},{"lineNumber":29,"author":{"gitId":"jiale-c"},"content":"deactivate AddressBookParser","lastModifiedDate":"2022-03-25"},{"lineNumber":30,"author":{"gitId":"jiale-c"},"content":"","lastModifiedDate":"2022-03-25"},{"lineNumber":31,"author":{"gitId":"jiale-c"},"content":"LogicManager -\u003e ListCommand : execute()","lastModifiedDate":"2022-03-25"},{"lineNumber":32,"author":{"gitId":"jiale-c"},"content":"activate ListCommand","lastModifiedDate":"2022-03-25"},{"lineNumber":33,"author":{"gitId":"jiale-c"},"content":"","lastModifiedDate":"2022-03-25"},{"lineNumber":34,"author":{"gitId":"jiale-c"},"content":"ListCommand -\u003e Model : updateFilteredPersonList(m)","lastModifiedDate":"2022-03-25"},{"lineNumber":35,"author":{"gitId":"jiale-c"},"content":"activate Model","lastModifiedDate":"2022-03-25"},{"lineNumber":36,"author":{"gitId":"jiale-c"},"content":"","lastModifiedDate":"2022-03-25"},{"lineNumber":37,"author":{"gitId":"jiale-c"},"content":"Model --\u003e ListCommand","lastModifiedDate":"2022-03-25"},{"lineNumber":38,"author":{"gitId":"jiale-c"},"content":"deactivate Model","lastModifiedDate":"2022-03-25"},{"lineNumber":39,"author":{"gitId":"jiale-c"},"content":"","lastModifiedDate":"2022-03-25"},{"lineNumber":40,"author":{"gitId":"jiale-c"},"content":"ListCommand --\u003e LogicManager : result","lastModifiedDate":"2022-03-25"},{"lineNumber":41,"author":{"gitId":"jiale-c"},"content":"deactivate ListCommand","lastModifiedDate":"2022-03-25"},{"lineNumber":42,"author":{"gitId":"jiale-c"},"content":"","lastModifiedDate":"2022-03-25"},{"lineNumber":43,"author":{"gitId":"jiale-c"},"content":"ListCommand -[hidden]-\u003e AddressBookParser","lastModifiedDate":"2022-03-25"},{"lineNumber":44,"author":{"gitId":"jiale-c"},"content":"destroy ListCommand","lastModifiedDate":"2022-03-25"},{"lineNumber":45,"author":{"gitId":"jiale-c"},"content":"","lastModifiedDate":"2022-03-25"},{"lineNumber":46,"author":{"gitId":"jiale-c"},"content":"[\u003c--LogicManager","lastModifiedDate":"2022-03-25"},{"lineNumber":47,"author":{"gitId":"jiale-c"},"content":"deactivate LogicManager","lastModifiedDate":"2022-03-25"},{"lineNumber":48,"author":{"gitId":"jiale-c"},"content":"@enduml","lastModifiedDate":"2022-03-25"}],"authorContributionMap":{"jiale-c":48}},{"path":"docs/diagrams/ModelClassDiagram.puml","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"@startuml","lastModifiedDate":"2019-07-03"},{"lineNumber":2,"author":{"gitId":"-"},"content":"!include style.puml","lastModifiedDate":"2019-07-03"},{"lineNumber":3,"author":{"gitId":"-"},"content":"skinparam arrowThickness 1.1","lastModifiedDate":"2019-07-03"},{"lineNumber":4,"author":{"gitId":"-"},"content":"skinparam arrowColor MODEL_COLOR","lastModifiedDate":"2019-07-03"},{"lineNumber":5,"author":{"gitId":"-"},"content":"skinparam classBackgroundColor MODEL_COLOR","lastModifiedDate":"2019-07-03"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":7,"author":{"gitId":"-"},"content":"Package Model \u003c\u003cRectangle\u003e\u003e{","lastModifiedDate":"2019-07-03"},{"lineNumber":8,"author":{"gitId":"-"},"content":"Class \"\u003c\u003cinterface\u003e\u003e\\nReadOnlyAddressBook\" as ReadOnlyAddressBook","lastModifiedDate":"2022-01-03"},{"lineNumber":9,"author":{"gitId":"-"},"content":"Class \"\u003c\u003cinterface\u003e\u003e\\nReadOnlyUserPrefs\" as ReadOnlyUserPrefs","lastModifiedDate":"2022-01-03"},{"lineNumber":10,"author":{"gitId":"-"},"content":"Class \"\u003c\u003cinterface\u003e\u003e\\nModel\" as Model","lastModifiedDate":"2022-01-03"},{"lineNumber":11,"author":{"gitId":"-"},"content":"Class AddressBook","lastModifiedDate":"2019-07-03"},{"lineNumber":12,"author":{"gitId":"-"},"content":"Class ModelManager","lastModifiedDate":"2019-07-03"},{"lineNumber":13,"author":{"gitId":"-"},"content":"Class UserPrefs","lastModifiedDate":"2019-07-03"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":15,"author":{"gitId":"-"},"content":"Class UniquePersonList","lastModifiedDate":"2021-07-31"},{"lineNumber":16,"author":{"gitId":"-"},"content":"Class Person","lastModifiedDate":"2019-07-03"},{"lineNumber":17,"author":{"gitId":"-"},"content":"Class Address","lastModifiedDate":"2019-07-03"},{"lineNumber":18,"author":{"gitId":"-"},"content":"Class Email","lastModifiedDate":"2019-07-03"},{"lineNumber":19,"author":{"gitId":"-"},"content":"Class Name","lastModifiedDate":"2019-07-03"},{"lineNumber":20,"author":{"gitId":"-"},"content":"Class Phone","lastModifiedDate":"2019-07-03"},{"lineNumber":21,"author":{"gitId":"jiale-c"},"content":"Class MatriculationNumber","lastModifiedDate":"2022-03-16"},{"lineNumber":22,"author":{"gitId":"jiale-c"},"content":"Class CovidStatus","lastModifiedDate":"2022-03-23"},{"lineNumber":23,"author":{"gitId":"jiale-c"},"content":"Class Block","lastModifiedDate":"2022-03-23"},{"lineNumber":24,"author":{"gitId":"jiale-c"},"content":"Class Faculty","lastModifiedDate":"2022-03-16"},{"lineNumber":25,"author":{"gitId":"-"},"content":"Class Tag","lastModifiedDate":"2019-07-03"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":27,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2019-07-03"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":29,"author":{"gitId":"-"},"content":"Class HiddenOutside #FFFFFF","lastModifiedDate":"2019-07-03"},{"lineNumber":30,"author":{"gitId":"-"},"content":"HiddenOutside ..\u003e Model","lastModifiedDate":"2019-07-03"},{"lineNumber":31,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":32,"author":{"gitId":"-"},"content":"AddressBook .up.|\u003e ReadOnlyAddressBook","lastModifiedDate":"2019-07-03"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":34,"author":{"gitId":"-"},"content":"ModelManager .up.|\u003e Model","lastModifiedDate":"2019-07-03"},{"lineNumber":35,"author":{"gitId":"-"},"content":"Model .right.\u003e ReadOnlyUserPrefs","lastModifiedDate":"2021-07-31"},{"lineNumber":36,"author":{"gitId":"-"},"content":"Model .left.\u003e ReadOnlyAddressBook","lastModifiedDate":"2021-07-31"},{"lineNumber":37,"author":{"gitId":"-"},"content":"ModelManager -left-\u003e \"1\" AddressBook","lastModifiedDate":"2021-07-31"},{"lineNumber":38,"author":{"gitId":"-"},"content":"ModelManager -right-\u003e \"1\" UserPrefs","lastModifiedDate":"2021-07-31"},{"lineNumber":39,"author":{"gitId":"-"},"content":"UserPrefs .up.|\u003e ReadOnlyUserPrefs","lastModifiedDate":"2019-07-03"},{"lineNumber":40,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":41,"author":{"gitId":"-"},"content":"AddressBook *--\u003e \"1\" UniquePersonList","lastModifiedDate":"2019-07-30"},{"lineNumber":42,"author":{"gitId":"-"},"content":"UniquePersonList --\u003e \"~* all\" Person","lastModifiedDate":"2021-07-31"},{"lineNumber":43,"author":{"gitId":"jiale-c"},"content":"","lastModifiedDate":"2022-03-16"},{"lineNumber":44,"author":{"gitId":"jiale-c"},"content":"Person *---\u003e CovidStatus","lastModifiedDate":"2022-03-16"},{"lineNumber":45,"author":{"gitId":"-"},"content":"Person *--\u003e Name","lastModifiedDate":"2019-07-03"},{"lineNumber":46,"author":{"gitId":"-"},"content":"Person *--\u003e Phone","lastModifiedDate":"2019-07-03"},{"lineNumber":47,"author":{"gitId":"-"},"content":"Person *--\u003e Email","lastModifiedDate":"2019-07-03"},{"lineNumber":48,"author":{"gitId":"-"},"content":"Person *--\u003e Address","lastModifiedDate":"2019-07-03"},{"lineNumber":49,"author":{"gitId":"jiale-c"},"content":"Person *---\u003e Faculty","lastModifiedDate":"2022-03-16"},{"lineNumber":50,"author":{"gitId":"jiale-c"},"content":"Person *---\u003e \"*\" Tag","lastModifiedDate":"2022-03-16"},{"lineNumber":51,"author":{"gitId":"jiale-c"},"content":"Person *---\u003e Block","lastModifiedDate":"2022-03-23"},{"lineNumber":52,"author":{"gitId":"jiale-c"},"content":"Person *---\u003e MatriculationNumber","lastModifiedDate":"2022-03-16"},{"lineNumber":53,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":54,"author":{"gitId":"-"},"content":"Name -[hidden]right-\u003e Phone","lastModifiedDate":"2019-07-03"},{"lineNumber":55,"author":{"gitId":"-"},"content":"Phone -[hidden]right-\u003e Address","lastModifiedDate":"2019-07-03"},{"lineNumber":56,"author":{"gitId":"-"},"content":"Address -[hidden]right-\u003e Email","lastModifiedDate":"2019-07-03"},{"lineNumber":57,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":58,"author":{"gitId":"-"},"content":"ModelManager --\u003e\"~* filtered\" Person","lastModifiedDate":"2021-07-31"},{"lineNumber":59,"author":{"gitId":"-"},"content":"@enduml","lastModifiedDate":"2019-07-03"}],"authorContributionMap":{"jiale-c":10,"-":49}},{"path":"docs/diagrams/PieChartWindowSequenceDiagram.puml","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"jiale-c"},"content":"@startuml","lastModifiedDate":"2022-03-23"},{"lineNumber":2,"author":{"gitId":"jiale-c"},"content":"!include style.puml","lastModifiedDate":"2022-03-23"},{"lineNumber":3,"author":{"gitId":"jiale-c"},"content":"","lastModifiedDate":"2022-03-23"},{"lineNumber":4,"author":{"gitId":"jiale-c"},"content":"box UI UI_COLOR_T1","lastModifiedDate":"2022-03-23"},{"lineNumber":5,"author":{"gitId":"cwq2326"},"content":"participant \":MainWindow\" as MainWindow UI_COLOR","lastModifiedDate":"2022-03-24"},{"lineNumber":6,"author":{"gitId":"jiale-c"},"content":"participant \":PieChartWindow\" as PieChartWindow UI_COLOR","lastModifiedDate":"2022-03-23"},{"lineNumber":7,"author":{"gitId":"jiale-c"},"content":"end box","lastModifiedDate":"2022-03-23"},{"lineNumber":8,"author":{"gitId":"jiale-c"},"content":"","lastModifiedDate":"2022-03-23"},{"lineNumber":9,"author":{"gitId":"jiale-c"},"content":"box Logic LOGIC_COLOR_T1","lastModifiedDate":"2022-03-23"},{"lineNumber":10,"author":{"gitId":"jiale-c"},"content":"participant \":SummariseCommand\" as SummariseCommand LOGIC_COLOR","lastModifiedDate":"2022-03-23"},{"lineNumber":11,"author":{"gitId":"jiale-c"},"content":"end box","lastModifiedDate":"2022-03-23"},{"lineNumber":12,"author":{"gitId":"jiale-c"},"content":"","lastModifiedDate":"2022-03-23"},{"lineNumber":13,"author":{"gitId":"cwq2326"},"content":"[-\u003e MainWindow : executeCommand()","lastModifiedDate":"2022-03-24"},{"lineNumber":14,"author":{"gitId":"cwq2326"},"content":"activate MainWindow","lastModifiedDate":"2022-03-24"},{"lineNumber":15,"author":{"gitId":"cwq2326"},"content":"","lastModifiedDate":"2022-03-24"},{"lineNumber":16,"author":{"gitId":"cwq2326"},"content":"MainWindow -\u003e MainWindow : handleSummarise()","lastModifiedDate":"2022-03-24"},{"lineNumber":17,"author":{"gitId":"cwq2326"},"content":"activate MainWindow","lastModifiedDate":"2022-03-24"},{"lineNumber":18,"author":{"gitId":"cwq2326"},"content":"","lastModifiedDate":"2022-03-24"},{"lineNumber":19,"author":{"gitId":"cwq2326"},"content":"MainWindow -\u003e SummariseCommand : shouldOpenPieChartWindow()","lastModifiedDate":"2022-03-24"},{"lineNumber":20,"author":{"gitId":"cwq2326"},"content":"activate SummariseCommand","lastModifiedDate":"2022-03-24"},{"lineNumber":21,"author":{"gitId":"cwq2326"},"content":"","lastModifiedDate":"2022-03-24"},{"lineNumber":22,"author":{"gitId":"cwq2326"},"content":"SummariseCommand --\u003e MainWindow : Should display window","lastModifiedDate":"2022-03-24"},{"lineNumber":23,"author":{"gitId":"cwq2326"},"content":"deactivate SummariseCommand","lastModifiedDate":"2022-03-24"},{"lineNumber":24,"author":{"gitId":"cwq2326"},"content":"","lastModifiedDate":"2022-03-24"},{"lineNumber":25,"author":{"gitId":"cwq2326"},"content":"alt#Gold #LightBlue Should display window","lastModifiedDate":"2022-03-24"},{"lineNumber":26,"author":{"gitId":"cwq2326"},"content":"","lastModifiedDate":"2022-03-24"},{"lineNumber":27,"author":{"gitId":"cwq2326"},"content":"create PieChartWindow","lastModifiedDate":"2022-03-24"},{"lineNumber":28,"author":{"gitId":"cwq2326"},"content":"MainWindow -\u003e PieChartWindow : new","lastModifiedDate":"2022-03-24"},{"lineNumber":29,"author":{"gitId":"cwq2326"},"content":"","lastModifiedDate":"2022-03-24"},{"lineNumber":30,"author":{"gitId":"cwq2326"},"content":"","lastModifiedDate":"2022-03-24"},{"lineNumber":31,"author":{"gitId":"jiale-c"},"content":"activate PieChartWindow","lastModifiedDate":"2022-03-23"},{"lineNumber":32,"author":{"gitId":"jiale-c"},"content":"","lastModifiedDate":"2022-03-23"},{"lineNumber":33,"author":{"gitId":"jiale-c"},"content":"PieChartWindow -\u003e SummariseCommand : getCovidStatsByBlockDataList()","lastModifiedDate":"2022-03-23"},{"lineNumber":34,"author":{"gitId":"jiale-c"},"content":"activate SummariseCommand","lastModifiedDate":"2022-03-23"},{"lineNumber":35,"author":{"gitId":"jiale-c"},"content":"","lastModifiedDate":"2022-03-23"},{"lineNumber":36,"author":{"gitId":"jiale-c"},"content":"SummariseCommand --\u003e PieChartWindow","lastModifiedDate":"2022-03-23"},{"lineNumber":37,"author":{"gitId":"jiale-c"},"content":"deactivate SummariseCommand","lastModifiedDate":"2022-03-23"},{"lineNumber":38,"author":{"gitId":"jiale-c"},"content":"","lastModifiedDate":"2022-03-23"},{"lineNumber":39,"author":{"gitId":"jiale-c"},"content":"PieChartWindow -\u003e SummariseCommand : getPositiveStatsByFacultyData()","lastModifiedDate":"2022-03-23"},{"lineNumber":40,"author":{"gitId":"jiale-c"},"content":"activate SummariseCommand","lastModifiedDate":"2022-03-23"},{"lineNumber":41,"author":{"gitId":"jiale-c"},"content":"","lastModifiedDate":"2022-03-23"},{"lineNumber":42,"author":{"gitId":"jiale-c"},"content":"SummariseCommand --\u003e PieChartWindow","lastModifiedDate":"2022-03-23"},{"lineNumber":43,"author":{"gitId":"jiale-c"},"content":"deactivate SummariseCommand","lastModifiedDate":"2022-03-23"},{"lineNumber":44,"author":{"gitId":"jiale-c"},"content":"","lastModifiedDate":"2022-03-23"},{"lineNumber":45,"author":{"gitId":"jiale-c"},"content":"PieChartWindow -\u003e PieChartWindow : execute()","lastModifiedDate":"2022-03-23"},{"lineNumber":46,"author":{"gitId":"jiale-c"},"content":"activate PieChartWindow","lastModifiedDate":"2022-03-23"},{"lineNumber":47,"author":{"gitId":"jiale-c"},"content":"","lastModifiedDate":"2022-03-23"},{"lineNumber":48,"author":{"gitId":"jiale-c"},"content":"PieChartWindow -\u003e PieChartWindow : collateBlocksChart()","lastModifiedDate":"2022-03-23"},{"lineNumber":49,"author":{"gitId":"jiale-c"},"content":"activate PieChartWindow","lastModifiedDate":"2022-03-23"},{"lineNumber":50,"author":{"gitId":"jiale-c"},"content":"","lastModifiedDate":"2022-03-23"},{"lineNumber":51,"author":{"gitId":"jiale-c"},"content":"PieChartWindow -\u003e PieChartWindow : makePieChart(treemap, string)","lastModifiedDate":"2022-03-23"},{"lineNumber":52,"author":{"gitId":"jiale-c"},"content":"activate PieChartWindow","lastModifiedDate":"2022-03-23"},{"lineNumber":53,"author":{"gitId":"jiale-c"},"content":"","lastModifiedDate":"2022-03-23"},{"lineNumber":54,"author":{"gitId":"jiale-c"},"content":"PieChartWindow --\u003e PieChartWindow : pieChart","lastModifiedDate":"2022-03-23"},{"lineNumber":55,"author":{"gitId":"jiale-c"},"content":"deactivate PieChartWindow","lastModifiedDate":"2022-03-23"},{"lineNumber":56,"author":{"gitId":"jiale-c"},"content":"","lastModifiedDate":"2022-03-23"},{"lineNumber":57,"author":{"gitId":"jiale-c"},"content":"PieChartWindow --\u003e PieChartWindow","lastModifiedDate":"2022-03-23"},{"lineNumber":58,"author":{"gitId":"jiale-c"},"content":"deactivate PieChartWindow","lastModifiedDate":"2022-03-23"},{"lineNumber":59,"author":{"gitId":"jiale-c"},"content":"","lastModifiedDate":"2022-03-23"},{"lineNumber":60,"author":{"gitId":"jiale-c"},"content":"PieChartWindow -\u003e PieChartWindow : createFacultyChartPositive()","lastModifiedDate":"2022-03-23"},{"lineNumber":61,"author":{"gitId":"jiale-c"},"content":"activate PieChartWindow","lastModifiedDate":"2022-03-23"},{"lineNumber":62,"author":{"gitId":"jiale-c"},"content":"","lastModifiedDate":"2022-03-23"},{"lineNumber":63,"author":{"gitId":"jiale-c"},"content":"PieChartWindow -\u003e PieChartWindow : makePieChart(treemap, string)","lastModifiedDate":"2022-03-23"},{"lineNumber":64,"author":{"gitId":"jiale-c"},"content":"activate PieChartWindow","lastModifiedDate":"2022-03-23"},{"lineNumber":65,"author":{"gitId":"jiale-c"},"content":"","lastModifiedDate":"2022-03-23"},{"lineNumber":66,"author":{"gitId":"jiale-c"},"content":"PieChartWindow --\u003e PieChartWindow : pieChart","lastModifiedDate":"2022-03-23"},{"lineNumber":67,"author":{"gitId":"jiale-c"},"content":"deactivate PieChartWindow","lastModifiedDate":"2022-03-23"},{"lineNumber":68,"author":{"gitId":"jiale-c"},"content":"","lastModifiedDate":"2022-03-23"},{"lineNumber":69,"author":{"gitId":"jiale-c"},"content":"PieChartWindow --\u003e PieChartWindow : hbox","lastModifiedDate":"2022-03-23"},{"lineNumber":70,"author":{"gitId":"jiale-c"},"content":"","lastModifiedDate":"2022-03-23"},{"lineNumber":71,"author":{"gitId":"jiale-c"},"content":"deactivate PieChartWindow","lastModifiedDate":"2022-03-23"},{"lineNumber":72,"author":{"gitId":"jiale-c"},"content":"","lastModifiedDate":"2022-03-23"},{"lineNumber":73,"author":{"gitId":"jiale-c"},"content":"PieChartWindow -\u003e PieChartWindow : makePieChartScene(allPieCharts)","lastModifiedDate":"2022-03-23"},{"lineNumber":74,"author":{"gitId":"jiale-c"},"content":"activate PieChartWindow","lastModifiedDate":"2022-03-23"},{"lineNumber":75,"author":{"gitId":"jiale-c"},"content":"","lastModifiedDate":"2022-03-23"},{"lineNumber":76,"author":{"gitId":"jiale-c"},"content":"PieChartWindow --\u003e PieChartWindow","lastModifiedDate":"2022-03-23"},{"lineNumber":77,"author":{"gitId":"jiale-c"},"content":"deactivate PieChartWindow","lastModifiedDate":"2022-03-23"},{"lineNumber":78,"author":{"gitId":"jiale-c"},"content":"","lastModifiedDate":"2022-03-23"},{"lineNumber":79,"author":{"gitId":"jiale-c"},"content":"PieChartWindow --\u003e PieChartWindow","lastModifiedDate":"2022-03-23"},{"lineNumber":80,"author":{"gitId":"jiale-c"},"content":"deactivate PieChartWindow","lastModifiedDate":"2022-03-23"},{"lineNumber":81,"author":{"gitId":"cwq2326"},"content":"PieChartWindow --\u003e MainWindow: pieChartWindow","lastModifiedDate":"2022-03-24"},{"lineNumber":82,"author":{"gitId":"jiale-c"},"content":"deactivate PieChartWindow","lastModifiedDate":"2022-03-23"},{"lineNumber":83,"author":{"gitId":"jiale-c"},"content":"","lastModifiedDate":"2022-03-23"},{"lineNumber":84,"author":{"gitId":"jiale-c"},"content":"","lastModifiedDate":"2022-03-23"},{"lineNumber":85,"author":{"gitId":"cwq2326"},"content":"MainWindow -\u003e PieChartWindow : show()","lastModifiedDate":"2022-03-24"},{"lineNumber":86,"author":{"gitId":"jiale-c"},"content":"activate PieChartWindow","lastModifiedDate":"2022-03-23"},{"lineNumber":87,"author":{"gitId":"jiale-c"},"content":"","lastModifiedDate":"2022-03-23"},{"lineNumber":88,"author":{"gitId":"cwq2326"},"content":"MainWindow \u003c--PieChartWindow : result","lastModifiedDate":"2022-03-24"},{"lineNumber":89,"author":{"gitId":"jiale-c"},"content":"deactivate PieChartWindow","lastModifiedDate":"2022-03-23"},{"lineNumber":90,"author":{"gitId":"cwq2326"},"content":"","lastModifiedDate":"2022-03-24"},{"lineNumber":91,"author":{"gitId":"cwq2326"},"content":"else #Pink Else","lastModifiedDate":"2022-03-24"},{"lineNumber":92,"author":{"gitId":"cwq2326"},"content":"","lastModifiedDate":"2022-03-24"},{"lineNumber":93,"author":{"gitId":"cwq2326"},"content":"end","lastModifiedDate":"2022-03-24"},{"lineNumber":94,"author":{"gitId":"cwq2326"},"content":"deactivate MainWindow","lastModifiedDate":"2022-03-24"},{"lineNumber":95,"author":{"gitId":"cwq2326"},"content":"[\u003c--MainWindow : feedback to user","lastModifiedDate":"2022-03-24"},{"lineNumber":96,"author":{"gitId":"cwq2326"},"content":"deactivate MainWindow","lastModifiedDate":"2022-03-24"},{"lineNumber":97,"author":{"gitId":"jiale-c"},"content":"@enduml","lastModifiedDate":"2022-03-23"}],"authorContributionMap":{"jiale-c":68,"cwq2326":29}},{"path":"docs/diagrams/SummariseFeatureActivityDiagram.puml","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"jiale-c"},"content":"@startuml","lastModifiedDate":"2022-03-23"},{"lineNumber":2,"author":{"gitId":"jiale-c"},"content":"\u0027https://plantuml.com/activity-diagram-beta","lastModifiedDate":"2022-03-23"},{"lineNumber":3,"author":{"gitId":"jiale-c"},"content":"","lastModifiedDate":"2022-03-23"},{"lineNumber":4,"author":{"gitId":"jiale-c"},"content":"(*)--\u003e \"User inputs Summarise Command without any tags\"","lastModifiedDate":"2022-03-23"},{"lineNumber":5,"author":{"gitId":"jiale-c"},"content":"-right-\u003e \"Tracey collates total number of students with covid\"","lastModifiedDate":"2022-03-23"},{"lineNumber":6,"author":{"gitId":"jiale-c"},"content":"--\u003e \"Tracey collates number of students in each\\nhall block under each covid status category\"","lastModifiedDate":"2022-03-23"},{"lineNumber":7,"author":{"gitId":"jiale-c"},"content":"-left-\u003e \"Tracey collates number of\\ncovid positive students in each faculty\"","lastModifiedDate":"2022-03-23"},{"lineNumber":8,"author":{"gitId":"jiale-c"},"content":"","lastModifiedDate":"2022-03-23"},{"lineNumber":9,"author":{"gitId":"jiale-c"},"content":"If \"There is an address book\\nto collect data\" then","lastModifiedDate":"2022-03-23"},{"lineNumber":10,"author":{"gitId":"jiale-c"},"content":"    --\u003e [true] \"Create pie charts with the data\"","lastModifiedDate":"2022-03-23"},{"lineNumber":11,"author":{"gitId":"jiale-c"},"content":"    --\u003e \"Create pop up window with pie chart(s)\"","lastModifiedDate":"2022-03-23"},{"lineNumber":12,"author":{"gitId":"jiale-c"},"content":"else","lastModifiedDate":"2022-03-23"},{"lineNumber":13,"author":{"gitId":"jiale-c"},"content":"    --\u003e [false] \"Form a FAIL message\"","lastModifiedDate":"2022-03-23"},{"lineNumber":14,"author":{"gitId":"jiale-c"},"content":"    --\u003e \"Create pop up window with pie chart(s)\"","lastModifiedDate":"2022-03-23"},{"lineNumber":15,"author":{"gitId":"jiale-c"},"content":"--\u003e \"Return response to user\"","lastModifiedDate":"2022-03-23"},{"lineNumber":16,"author":{"gitId":"jiale-c"},"content":"","lastModifiedDate":"2022-03-23"},{"lineNumber":17,"author":{"gitId":"jiale-c"},"content":"--\u003e(*)","lastModifiedDate":"2022-03-23"},{"lineNumber":18,"author":{"gitId":"jiale-c"},"content":"","lastModifiedDate":"2022-03-23"},{"lineNumber":19,"author":{"gitId":"jiale-c"},"content":"@enduml","lastModifiedDate":"2022-03-23"}],"authorContributionMap":{"jiale-c":19}},{"path":"docs/diagrams/SummariseSequenceDiagram.puml","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"jiale-c"},"content":"@startuml","lastModifiedDate":"2022-03-16"},{"lineNumber":2,"author":{"gitId":"jiale-c"},"content":"!include style.puml","lastModifiedDate":"2022-03-16"},{"lineNumber":3,"author":{"gitId":"jiale-c"},"content":"","lastModifiedDate":"2022-03-16"},{"lineNumber":4,"author":{"gitId":"jiale-c"},"content":"box Logic LOGIC_COLOR_T1","lastModifiedDate":"2022-03-16"},{"lineNumber":5,"author":{"gitId":"jiale-c"},"content":"participant \":LogicManager\" as LogicManager LOGIC_COLOR","lastModifiedDate":"2022-03-16"},{"lineNumber":6,"author":{"gitId":"jiale-c"},"content":"participant \":AddressBookParser\" as AddressBookParser LOGIC_COLOR","lastModifiedDate":"2022-03-16"},{"lineNumber":7,"author":{"gitId":"jiale-c"},"content":"participant \"d:SummariseCommand\" as SummariseCommand LOGIC_COLOR","lastModifiedDate":"2022-03-16"},{"lineNumber":8,"author":{"gitId":"jiale-c"},"content":"participant \":CommandResult\" as CommandResult LOGIC_COLOR","lastModifiedDate":"2022-03-16"},{"lineNumber":9,"author":{"gitId":"jiale-c"},"content":"end box","lastModifiedDate":"2022-03-16"},{"lineNumber":10,"author":{"gitId":"jiale-c"},"content":"","lastModifiedDate":"2022-03-16"},{"lineNumber":11,"author":{"gitId":"jiale-c"},"content":"box Model MODEL_COLOR_T1","lastModifiedDate":"2022-03-16"},{"lineNumber":12,"author":{"gitId":"jiale-c"},"content":"participant \":Model\" as Model MODEL_COLOR","lastModifiedDate":"2022-03-16"},{"lineNumber":13,"author":{"gitId":"jiale-c"},"content":"end box","lastModifiedDate":"2022-03-16"},{"lineNumber":14,"author":{"gitId":"jiale-c"},"content":"","lastModifiedDate":"2022-03-16"},{"lineNumber":15,"author":{"gitId":"jiale-c"},"content":"[-\u003e LogicManager : execute(\"summarise\")","lastModifiedDate":"2022-03-16"},{"lineNumber":16,"author":{"gitId":"jiale-c"},"content":"activate LogicManager","lastModifiedDate":"2022-03-16"},{"lineNumber":17,"author":{"gitId":"jiale-c"},"content":"","lastModifiedDate":"2022-03-16"},{"lineNumber":18,"author":{"gitId":"jiale-c"},"content":"LogicManager -\u003e AddressBookParser : parseCommand(\"summarise\")","lastModifiedDate":"2022-03-16"},{"lineNumber":19,"author":{"gitId":"jiale-c"},"content":"activate AddressBookParser","lastModifiedDate":"2022-03-16"},{"lineNumber":20,"author":{"gitId":"jiale-c"},"content":"","lastModifiedDate":"2022-03-16"},{"lineNumber":21,"author":{"gitId":"jiale-c"},"content":"create SummariseCommand","lastModifiedDate":"2022-03-16"},{"lineNumber":22,"author":{"gitId":"jiale-c"},"content":"AddressBookParser -\u003e SummariseCommand","lastModifiedDate":"2022-03-16"},{"lineNumber":23,"author":{"gitId":"jiale-c"},"content":"activate SummariseCommand","lastModifiedDate":"2022-03-16"},{"lineNumber":24,"author":{"gitId":"jiale-c"},"content":"","lastModifiedDate":"2022-03-16"},{"lineNumber":25,"author":{"gitId":"jiale-c"},"content":"SummariseCommand --\u003e AddressBookParser","lastModifiedDate":"2022-03-16"},{"lineNumber":26,"author":{"gitId":"jiale-c"},"content":"deactivate SummariseCommand","lastModifiedDate":"2022-03-16"},{"lineNumber":27,"author":{"gitId":"jiale-c"},"content":"","lastModifiedDate":"2022-03-16"},{"lineNumber":28,"author":{"gitId":"jiale-c"},"content":"AddressBookParser --\u003e LogicManager","lastModifiedDate":"2022-03-16"},{"lineNumber":29,"author":{"gitId":"jiale-c"},"content":"deactivate AddressBookParser","lastModifiedDate":"2022-03-16"},{"lineNumber":30,"author":{"gitId":"jiale-c"},"content":"","lastModifiedDate":"2022-03-16"},{"lineNumber":31,"author":{"gitId":"jiale-c"},"content":"LogicManager -\u003e SummariseCommand : execute()","lastModifiedDate":"2022-03-16"},{"lineNumber":32,"author":{"gitId":"jiale-c"},"content":"activate SummariseCommand","lastModifiedDate":"2022-03-16"},{"lineNumber":33,"author":{"gitId":"jiale-c"},"content":"","lastModifiedDate":"2022-03-16"},{"lineNumber":34,"author":{"gitId":"jiale-c"},"content":"SummariseCommand -\u003e Model : updateFilteredPersonList(m)","lastModifiedDate":"2022-03-25"},{"lineNumber":35,"author":{"gitId":"jiale-c"},"content":"activate Model","lastModifiedDate":"2022-03-23"},{"lineNumber":36,"author":{"gitId":"jiale-c"},"content":"","lastModifiedDate":"2022-03-23"},{"lineNumber":37,"author":{"gitId":"jiale-c"},"content":"Model --\u003e SummariseCommand","lastModifiedDate":"2022-03-23"},{"lineNumber":38,"author":{"gitId":"jiale-c"},"content":"deactivate Model","lastModifiedDate":"2022-03-23"},{"lineNumber":39,"author":{"gitId":"jiale-c"},"content":"","lastModifiedDate":"2022-03-23"},{"lineNumber":40,"author":{"gitId":"jiale-c"},"content":"SummariseCommand -\u003e Model : getFilteredList()","lastModifiedDate":"2022-03-16"},{"lineNumber":41,"author":{"gitId":"jiale-c"},"content":"activate Model","lastModifiedDate":"2022-03-16"},{"lineNumber":42,"author":{"gitId":"jiale-c"},"content":"","lastModifiedDate":"2022-03-16"},{"lineNumber":43,"author":{"gitId":"jiale-c"},"content":"Model --\u003e SummariseCommand","lastModifiedDate":"2022-03-16"},{"lineNumber":44,"author":{"gitId":"jiale-c"},"content":"deactivate Model","lastModifiedDate":"2022-03-16"},{"lineNumber":45,"author":{"gitId":"jiale-c"},"content":"","lastModifiedDate":"2022-03-16"},{"lineNumber":46,"author":{"gitId":"jiale-c"},"content":"SummariseCommand -\u003e SummariseCommand : summariseAll(x)","lastModifiedDate":"2022-03-23"},{"lineNumber":47,"author":{"gitId":"jiale-c"},"content":"activate SummariseCommand","lastModifiedDate":"2022-03-16"},{"lineNumber":48,"author":{"gitId":"jiale-c"},"content":"","lastModifiedDate":"2022-03-16"},{"lineNumber":49,"author":{"gitId":"jiale-c"},"content":"SummariseCommand --\u003e SummariseCommand","lastModifiedDate":"2022-03-23"},{"lineNumber":50,"author":{"gitId":"jiale-c"},"content":"deactivate SummariseCommand","lastModifiedDate":"2022-03-23"},{"lineNumber":51,"author":{"gitId":"jiale-c"},"content":"","lastModifiedDate":"2022-03-23"},{"lineNumber":52,"author":{"gitId":"jiale-c"},"content":"SummariseCommand -\u003e SummariseCommand : filterByBlock(x)","lastModifiedDate":"2022-03-23"},{"lineNumber":53,"author":{"gitId":"jiale-c"},"content":"activate SummariseCommand","lastModifiedDate":"2022-03-16"},{"lineNumber":54,"author":{"gitId":"jiale-c"},"content":"","lastModifiedDate":"2022-03-16"},{"lineNumber":55,"author":{"gitId":"jiale-c"},"content":"SummariseCommand --\u003e SummariseCommand","lastModifiedDate":"2022-03-16"},{"lineNumber":56,"author":{"gitId":"jiale-c"},"content":"deactivate SummariseCommand","lastModifiedDate":"2022-03-16"},{"lineNumber":57,"author":{"gitId":"jiale-c"},"content":"","lastModifiedDate":"2022-03-16"},{"lineNumber":58,"author":{"gitId":"jiale-c"},"content":"SummariseCommand -\u003e SummariseCommand : filterByFaculty(x)","lastModifiedDate":"2022-03-23"},{"lineNumber":59,"author":{"gitId":"jiale-c"},"content":"activate SummariseCommand","lastModifiedDate":"2022-03-23"},{"lineNumber":60,"author":{"gitId":"jiale-c"},"content":"","lastModifiedDate":"2022-03-23"},{"lineNumber":61,"author":{"gitId":"jiale-c"},"content":"SummariseCommand --\u003e SummariseCommand","lastModifiedDate":"2022-03-16"},{"lineNumber":62,"author":{"gitId":"jiale-c"},"content":"deactivate SummariseCommand","lastModifiedDate":"2022-03-16"},{"lineNumber":63,"author":{"gitId":"jiale-c"},"content":"","lastModifiedDate":"2022-03-16"},{"lineNumber":64,"author":{"gitId":"jiale-c"},"content":"alt no answer","lastModifiedDate":"2022-03-23"},{"lineNumber":65,"author":{"gitId":"jiale-c"},"content":"    create CommandResult","lastModifiedDate":"2022-03-23"},{"lineNumber":66,"author":{"gitId":"jiale-c"},"content":"    SummariseCommand -\u003e CommandResult","lastModifiedDate":"2022-03-23"},{"lineNumber":67,"author":{"gitId":"jiale-c"},"content":"    activate CommandResult","lastModifiedDate":"2022-03-23"},{"lineNumber":68,"author":{"gitId":"jiale-c"},"content":"    CommandResult --\u003e SummariseCommand","lastModifiedDate":"2022-03-23"},{"lineNumber":69,"author":{"gitId":"jiale-c"},"content":"    deactivate CommandResult","lastModifiedDate":"2022-03-23"},{"lineNumber":70,"author":{"gitId":"jiale-c"},"content":"else there\u0027s an answer","lastModifiedDate":"2022-03-23"},{"lineNumber":71,"author":{"gitId":"jiale-c"},"content":"    create CommandResult","lastModifiedDate":"2022-03-16"},{"lineNumber":72,"author":{"gitId":"jiale-c"},"content":"    SummariseCommand -\u003e CommandResult","lastModifiedDate":"2022-03-16"},{"lineNumber":73,"author":{"gitId":"jiale-c"},"content":"    activate CommandResult","lastModifiedDate":"2022-03-16"},{"lineNumber":74,"author":{"gitId":"jiale-c"},"content":"    CommandResult --\u003e SummariseCommand","lastModifiedDate":"2022-03-16"},{"lineNumber":75,"author":{"gitId":"jiale-c"},"content":"    deactivate CommandResult","lastModifiedDate":"2022-03-16"},{"lineNumber":76,"author":{"gitId":"jiale-c"},"content":"end","lastModifiedDate":"2022-03-23"},{"lineNumber":77,"author":{"gitId":"jiale-c"},"content":"","lastModifiedDate":"2022-03-16"},{"lineNumber":78,"author":{"gitId":"jiale-c"},"content":"SummariseCommand --\u003e LogicManager : result","lastModifiedDate":"2022-03-16"},{"lineNumber":79,"author":{"gitId":"jiale-c"},"content":"deactivate SummariseCommand","lastModifiedDate":"2022-03-16"},{"lineNumber":80,"author":{"gitId":"jiale-c"},"content":"","lastModifiedDate":"2022-03-16"},{"lineNumber":81,"author":{"gitId":"jiale-c"},"content":"SummariseCommand -[hidden]-\u003e AddressBookParser","lastModifiedDate":"2022-03-16"},{"lineNumber":82,"author":{"gitId":"jiale-c"},"content":"destroy SummariseCommand","lastModifiedDate":"2022-03-16"},{"lineNumber":83,"author":{"gitId":"jiale-c"},"content":"","lastModifiedDate":"2022-03-16"},{"lineNumber":84,"author":{"gitId":"jiale-c"},"content":"[\u003c--LogicManager","lastModifiedDate":"2022-03-16"},{"lineNumber":85,"author":{"gitId":"jiale-c"},"content":"deactivate LogicManager","lastModifiedDate":"2022-03-16"},{"lineNumber":86,"author":{"gitId":"jiale-c"},"content":"@enduml","lastModifiedDate":"2022-03-16"}],"authorContributionMap":{"jiale-c":86}},{"path":"docs/index.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"---","lastModifiedDate":"2020-05-23"},{"lineNumber":2,"author":{"gitId":"-"},"content":"layout: page","lastModifiedDate":"2020-05-23"},{"lineNumber":3,"author":{"gitId":"DannyDakota"},"content":"title: Tracey","lastModifiedDate":"2022-02-23"},{"lineNumber":4,"author":{"gitId":"-"},"content":"---","lastModifiedDate":"2020-05-23"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":6,"author":{"gitId":"DannyDakota"},"content":"[![CI Status](https://github.com/se-edu/addressbook-level3/workflows/Java%20CI/badge.svg)](https://github.com/AY2122S2-CS2103T-T12-3/tp/actions)","lastModifiedDate":"2022-02-23"},{"lineNumber":7,"author":{"gitId":"-"},"content":"[![codecov](https://codecov.io/gh/AY2122S2-CS2103T-T12-3/tp/branch/master/graph/badge.svg?token\u003dPY3SCJ58QH)](https://codecov.io/gh/AY2122S2-CS2103T-T12-3/tp)","lastModifiedDate":"2022-02-05"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":9,"author":{"gitId":"jiale-c"},"content":"![Ui](images/Ui_ReadMe.png)","lastModifiedDate":"2022-03-31"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":11,"author":{"gitId":"DannyDakota"},"content":"**Tracey is a desktop app for **managing health statuses** of NUS students by administrative staffs, optimized for use via a **Command Line Interface (CLI)** while still having the benefits of a Graphical User Interface (GUI). If you can type fast, Tracey can get your student health status management tasks done faster than traditional GUI apps.","lastModifiedDate":"2022-02-23"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":13,"author":{"gitId":"DannyDakota"},"content":"* If you are interested in using Tracey, head over to the [_Quick Start_ section of the **User Guide**](UserGuide.html#quick-start).","lastModifiedDate":"2022-02-23"},{"lineNumber":14,"author":{"gitId":"DannyDakota"},"content":"* If you are interested about developing Tracey, the [**Developer Guide**](DeveloperGuide.html) is a good place to start.","lastModifiedDate":"2022-02-23"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":17,"author":{"gitId":"-"},"content":"**Acknowledgements**","lastModifiedDate":"2020-05-23"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":19,"author":{"gitId":"DannyDakota"},"content":"* This project was adopted from the existing AB3 se-education.org project. Refer to the AB3 product website **[here](https://se-education.org/addressbook-level3/)**.","lastModifiedDate":"2022-02-23"},{"lineNumber":20,"author":{"gitId":"-"},"content":"* Libraries used: [JavaFX](https://openjfx.io/), [Jackson](https://github.com/FasterXML/jackson), [JUnit5](https://github.com/junit-team/junit5)","lastModifiedDate":"2020-05-23"}],"authorContributionMap":{"DannyDakota":6,"jiale-c":1,"-":13}},{"path":"docs/team/cwq2326.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"cwq2326"},"content":"---","lastModifiedDate":"2022-02-25"},{"lineNumber":2,"author":{"gitId":"cwq2326"},"content":"layout: page","lastModifiedDate":"2022-02-25"},{"lineNumber":3,"author":{"gitId":"cwq2326"},"content":"title: Chua Wen Quan\u0027s Project Portfolio Page","lastModifiedDate":"2022-02-25"},{"lineNumber":4,"author":{"gitId":"cwq2326"},"content":"---","lastModifiedDate":"2022-02-25"},{"lineNumber":5,"author":{"gitId":"cwq2326"},"content":"","lastModifiedDate":"2022-02-25"},{"lineNumber":6,"author":{"gitId":"cwq2326"},"content":"### Project: Tracey","lastModifiedDate":"2022-02-25"},{"lineNumber":7,"author":{"gitId":"cwq2326"},"content":"","lastModifiedDate":"2022-02-25"},{"lineNumber":8,"author":{"gitId":"cwq2326"},"content":"Tracey is a desktop address book application used for teaching Software Engineering principles. The user interacts with it using a CLI, and it has a GUI created with JavaFX. It is written in Java, and has about 10 kLoC.","lastModifiedDate":"2022-02-25"},{"lineNumber":9,"author":{"gitId":"cwq2326"},"content":"","lastModifiedDate":"2022-02-25"},{"lineNumber":10,"author":{"gitId":"cwq2326"},"content":"Given below are my contributions to the project.","lastModifiedDate":"2022-02-25"},{"lineNumber":11,"author":{"gitId":"cwq2326"},"content":"","lastModifiedDate":"2022-02-25"},{"lineNumber":12,"author":{"gitId":"cwq2326"},"content":"* **New Feature**: Added the ability to undo/redo previous commands.","lastModifiedDate":"2022-02-25"},{"lineNumber":13,"author":{"gitId":"cwq2326"},"content":"  * What it does: allows the user to undo all previous commands one at a time. Preceding undo commands can be reversed by using the redo command.","lastModifiedDate":"2022-02-25"},{"lineNumber":14,"author":{"gitId":"cwq2326"},"content":"  * Justification: This feature improves the product significantly because a user can make mistakes in commands and the app should provide a convenient way to rectify them.","lastModifiedDate":"2022-02-25"},{"lineNumber":15,"author":{"gitId":"cwq2326"},"content":"  * Highlights: This enhancement affects existing commands and commands to be added in future. It required an in-depth analysis of design alternatives. The implementation too was challenging as it required changes to existing commands.","lastModifiedDate":"2022-02-25"},{"lineNumber":16,"author":{"gitId":"cwq2326"},"content":"  * Credits: *{mention here if you reused any code/ideas from elsewhere or if a third-party library is heavily used in the feature so that a reader can make a more accurate judgement of how much effort went into the feature}*","lastModifiedDate":"2022-02-25"},{"lineNumber":17,"author":{"gitId":"cwq2326"},"content":"","lastModifiedDate":"2022-02-25"},{"lineNumber":18,"author":{"gitId":"cwq2326"},"content":"* **New Feature**: Added a history command that allows the user to navigate to previous commands using up/down keys.","lastModifiedDate":"2022-02-25"},{"lineNumber":19,"author":{"gitId":"cwq2326"},"content":"","lastModifiedDate":"2022-02-25"},{"lineNumber":20,"author":{"gitId":"cwq2326"},"content":"* **Code contributed**: [RepoSense link]()","lastModifiedDate":"2022-02-25"},{"lineNumber":21,"author":{"gitId":"cwq2326"},"content":"","lastModifiedDate":"2022-02-25"},{"lineNumber":22,"author":{"gitId":"cwq2326"},"content":"* **Project management**:","lastModifiedDate":"2022-02-25"},{"lineNumber":23,"author":{"gitId":"cwq2326"},"content":"  * Managed releases `v1.3` - `v1.5rc` (3 releases) on GitHub","lastModifiedDate":"2022-02-25"},{"lineNumber":24,"author":{"gitId":"cwq2326"},"content":"","lastModifiedDate":"2022-02-25"},{"lineNumber":25,"author":{"gitId":"cwq2326"},"content":"* **Enhancements to existing features**:","lastModifiedDate":"2022-02-25"},{"lineNumber":26,"author":{"gitId":"cwq2326"},"content":"  * Updated the GUI color scheme (Pull requests [\\#33](), [\\#34]())","lastModifiedDate":"2022-02-25"},{"lineNumber":27,"author":{"gitId":"cwq2326"},"content":"  * Wrote additional tests for existing features to increase coverage from 88% to 92% (Pull requests [\\#36](), [\\#38]())","lastModifiedDate":"2022-02-25"},{"lineNumber":28,"author":{"gitId":"cwq2326"},"content":"","lastModifiedDate":"2022-02-25"},{"lineNumber":29,"author":{"gitId":"cwq2326"},"content":"* **Documentation**:","lastModifiedDate":"2022-02-25"},{"lineNumber":30,"author":{"gitId":"cwq2326"},"content":"  * User Guide:","lastModifiedDate":"2022-02-25"},{"lineNumber":31,"author":{"gitId":"cwq2326"},"content":"    * Added documentation for the features `delete` and `find` [\\#72]()","lastModifiedDate":"2022-02-25"},{"lineNumber":32,"author":{"gitId":"cwq2326"},"content":"    * Did cosmetic tweaks to existing documentation of features `clear`, `exit`: [\\#74]()","lastModifiedDate":"2022-02-25"},{"lineNumber":33,"author":{"gitId":"cwq2326"},"content":"  * Developer Guide:","lastModifiedDate":"2022-02-25"},{"lineNumber":34,"author":{"gitId":"cwq2326"},"content":"    * Added implementation details of the `delete` feature.","lastModifiedDate":"2022-02-25"},{"lineNumber":35,"author":{"gitId":"cwq2326"},"content":"","lastModifiedDate":"2022-02-25"},{"lineNumber":36,"author":{"gitId":"cwq2326"},"content":"* **Community**:","lastModifiedDate":"2022-02-25"},{"lineNumber":37,"author":{"gitId":"cwq2326"},"content":"  * PRs reviewed (with non-trivial review comments): [\\#12](), [\\#32](), [\\#19](), [\\#42]()","lastModifiedDate":"2022-02-25"},{"lineNumber":38,"author":{"gitId":"cwq2326"},"content":"  * Contributed to forum discussions (examples: [1](), [2](), [3](), [4]())","lastModifiedDate":"2022-02-25"},{"lineNumber":39,"author":{"gitId":"cwq2326"},"content":"  * Reported bugs and suggestions for other teams in the class (examples: [1](), [2](), [3]())","lastModifiedDate":"2022-02-25"},{"lineNumber":40,"author":{"gitId":"cwq2326"},"content":"  * Some parts of the history feature I added was adopted by several other class mates ([1](), [2]())","lastModifiedDate":"2022-02-25"},{"lineNumber":41,"author":{"gitId":"cwq2326"},"content":"","lastModifiedDate":"2022-02-25"},{"lineNumber":42,"author":{"gitId":"cwq2326"},"content":"* **Tools**:","lastModifiedDate":"2022-02-25"},{"lineNumber":43,"author":{"gitId":"cwq2326"},"content":"  * Integrated a third party library (Natty) to the project ([\\#42]())","lastModifiedDate":"2022-02-25"},{"lineNumber":44,"author":{"gitId":"cwq2326"},"content":"  * Integrated a new Github plugin (CircleCI) to the team repo","lastModifiedDate":"2022-02-25"},{"lineNumber":45,"author":{"gitId":"cwq2326"},"content":"","lastModifiedDate":"2022-02-25"},{"lineNumber":46,"author":{"gitId":"cwq2326"},"content":"* _{you can add/remove categories in the list above}_","lastModifiedDate":"2022-02-25"}],"authorContributionMap":{"cwq2326":46}},{"path":"docs/team/dannydakota.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"DannyDakota"},"content":"---","lastModifiedDate":"2022-02-25"},{"lineNumber":2,"author":{"gitId":"DannyDakota"},"content":"layout: page","lastModifiedDate":"2022-02-25"},{"lineNumber":3,"author":{"gitId":"DannyDakota"},"content":"title: Malcom Tan\u0027s Project Portfolio Page","lastModifiedDate":"2022-02-25"},{"lineNumber":4,"author":{"gitId":"DannyDakota"},"content":"---","lastModifiedDate":"2022-02-25"},{"lineNumber":5,"author":{"gitId":"DannyDakota"},"content":"","lastModifiedDate":"2022-02-25"},{"lineNumber":6,"author":{"gitId":"DannyDakota"},"content":"### Project: Tracey","lastModifiedDate":"2022-02-25"},{"lineNumber":7,"author":{"gitId":"DannyDakota"},"content":"","lastModifiedDate":"2022-02-25"},{"lineNumber":8,"author":{"gitId":"DannyDakota"},"content":"Tracey is a desktop app for **managing health statuses** of NUS students by administrative staffs, optimized for use via a **Command Line Interface (CLI)** while still having the benefits of a Graphical User Interface (GUI). If you can type fast, Tracey can get your student health status management tasks done faster than traditional GUI apps.","lastModifiedDate":"2022-02-25"},{"lineNumber":9,"author":{"gitId":"DannyDakota"},"content":"","lastModifiedDate":"2022-02-25"},{"lineNumber":10,"author":{"gitId":"DannyDakota"},"content":"Given below are my contributions to the project.","lastModifiedDate":"2022-02-25"},{"lineNumber":11,"author":{"gitId":"DannyDakota"},"content":"","lastModifiedDate":"2022-02-25"},{"lineNumber":12,"author":{"gitId":"DannyDakota"},"content":"* **New Feature**: Added the ability to undo/redo previous commands.","lastModifiedDate":"2022-02-25"},{"lineNumber":13,"author":{"gitId":"DannyDakota"},"content":"    * What it does: allows the user to undo all previous commands one at a time. Preceding undo commands can be reversed by using the redo command.","lastModifiedDate":"2022-02-25"},{"lineNumber":14,"author":{"gitId":"DannyDakota"},"content":"    * Justification: This feature improves the product significantly because a user can make mistakes in commands and the app should provide a convenient way to rectify them.","lastModifiedDate":"2022-02-25"},{"lineNumber":15,"author":{"gitId":"DannyDakota"},"content":"    * Highlights: This enhancement affects existing commands and commands to be added in future. It required an in-depth analysis of design alternatives. The implementation too was challenging as it required changes to existing commands.","lastModifiedDate":"2022-02-25"},{"lineNumber":16,"author":{"gitId":"DannyDakota"},"content":"    * Credits: *{mention here if you reused any code/ideas from elsewhere or if a third-party library is heavily used in the feature so that a reader can make a more accurate judgement of how much effort went into the feature}*","lastModifiedDate":"2022-02-25"},{"lineNumber":17,"author":{"gitId":"DannyDakota"},"content":"","lastModifiedDate":"2022-02-25"},{"lineNumber":18,"author":{"gitId":"DannyDakota"},"content":"* **New Feature**: Added a history command that allows the user to navigate to previous commands using up/down keys.","lastModifiedDate":"2022-02-25"},{"lineNumber":19,"author":{"gitId":"DannyDakota"},"content":"","lastModifiedDate":"2022-02-25"},{"lineNumber":20,"author":{"gitId":"DannyDakota"},"content":"* **Code contributed**: [RepoSense link]()","lastModifiedDate":"2022-02-25"},{"lineNumber":21,"author":{"gitId":"DannyDakota"},"content":"","lastModifiedDate":"2022-02-25"},{"lineNumber":22,"author":{"gitId":"DannyDakota"},"content":"* **Project management**:","lastModifiedDate":"2022-02-25"},{"lineNumber":23,"author":{"gitId":"DannyDakota"},"content":"    * Managed releases `v1.3` - `v1.5rc` (3 releases) on GitHub","lastModifiedDate":"2022-02-25"},{"lineNumber":24,"author":{"gitId":"DannyDakota"},"content":"","lastModifiedDate":"2022-02-25"},{"lineNumber":25,"author":{"gitId":"DannyDakota"},"content":"* **Enhancements to existing features**:","lastModifiedDate":"2022-02-25"},{"lineNumber":26,"author":{"gitId":"DannyDakota"},"content":"    * Updated the GUI color scheme (Pull requests [\\#33](), [\\#34]())","lastModifiedDate":"2022-02-25"},{"lineNumber":27,"author":{"gitId":"DannyDakota"},"content":"    * Wrote additional tests for existing features to increase coverage from 88% to 92% (Pull requests [\\#36](), [\\#38]())","lastModifiedDate":"2022-02-25"},{"lineNumber":28,"author":{"gitId":"DannyDakota"},"content":"","lastModifiedDate":"2022-02-25"},{"lineNumber":29,"author":{"gitId":"DannyDakota"},"content":"* **Documentation**:","lastModifiedDate":"2022-02-25"},{"lineNumber":30,"author":{"gitId":"DannyDakota"},"content":"    * User Guide:","lastModifiedDate":"2022-02-25"},{"lineNumber":31,"author":{"gitId":"DannyDakota"},"content":"        * Added documentation for the features `delete` and `find` [\\#72]()","lastModifiedDate":"2022-02-25"},{"lineNumber":32,"author":{"gitId":"DannyDakota"},"content":"        * Did cosmetic tweaks to existing documentation of features `clear`, `exit`: [\\#74]()","lastModifiedDate":"2022-02-25"},{"lineNumber":33,"author":{"gitId":"DannyDakota"},"content":"    * Developer Guide:","lastModifiedDate":"2022-02-25"},{"lineNumber":34,"author":{"gitId":"DannyDakota"},"content":"        * Added implementation details of the `delete` feature.","lastModifiedDate":"2022-02-25"},{"lineNumber":35,"author":{"gitId":"DannyDakota"},"content":"","lastModifiedDate":"2022-02-25"},{"lineNumber":36,"author":{"gitId":"DannyDakota"},"content":"* **Community**:","lastModifiedDate":"2022-02-25"},{"lineNumber":37,"author":{"gitId":"DannyDakota"},"content":"    * PRs reviewed (with non-trivial review comments): [\\#12](), [\\#32](), [\\#19](), [\\#42]()","lastModifiedDate":"2022-02-25"},{"lineNumber":38,"author":{"gitId":"DannyDakota"},"content":"    * Contributed to forum discussions (examples: [1](), [2](), [3](), [4]())","lastModifiedDate":"2022-02-25"},{"lineNumber":39,"author":{"gitId":"DannyDakota"},"content":"    * Reported bugs and suggestions for other teams in the class (examples: [1](), [2](), [3]())","lastModifiedDate":"2022-02-25"},{"lineNumber":40,"author":{"gitId":"DannyDakota"},"content":"    * Some parts of the history feature I added was adopted by several other class mates ([1](), [2]())","lastModifiedDate":"2022-02-25"},{"lineNumber":41,"author":{"gitId":"DannyDakota"},"content":"","lastModifiedDate":"2022-02-25"},{"lineNumber":42,"author":{"gitId":"DannyDakota"},"content":"* **Tools**:","lastModifiedDate":"2022-02-25"},{"lineNumber":43,"author":{"gitId":"DannyDakota"},"content":"    * Integrated a third party library (Natty) to the project ([\\#42]())","lastModifiedDate":"2022-02-25"},{"lineNumber":44,"author":{"gitId":"DannyDakota"},"content":"    * Integrated a new Github plugin (CircleCI) to the team repo","lastModifiedDate":"2022-02-25"},{"lineNumber":45,"author":{"gitId":"DannyDakota"},"content":"","lastModifiedDate":"2022-02-25"},{"lineNumber":46,"author":{"gitId":"DannyDakota"},"content":"* _{you can add/remove categories in the list above}_","lastModifiedDate":"2022-02-25"}],"authorContributionMap":{"DannyDakota":46}},{"path":"docs/team/jiale-c.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"jiale-c"},"content":"---","lastModifiedDate":"2022-02-25"},{"lineNumber":2,"author":{"gitId":"jiale-c"},"content":"layout: page","lastModifiedDate":"2022-02-25"},{"lineNumber":3,"author":{"gitId":"jiale-c"},"content":"title: Chee Jia Le\u0027s Project Portfolio Page","lastModifiedDate":"2022-02-25"},{"lineNumber":4,"author":{"gitId":"jiale-c"},"content":"---","lastModifiedDate":"2022-02-25"},{"lineNumber":5,"author":{"gitId":"jiale-c"},"content":"","lastModifiedDate":"2022-02-25"},{"lineNumber":6,"author":{"gitId":"jiale-c"},"content":"### Project: Tracey","lastModifiedDate":"2022-02-25"},{"lineNumber":7,"author":{"gitId":"jiale-c"},"content":"","lastModifiedDate":"2022-02-25"},{"lineNumber":8,"author":{"gitId":"jiale-c"},"content":"Tracey is a desktop app for NUS admin staffs to track the covid health status of the students and manage the covid situation on campus, optimized for use via a CLI while still having the benefits of a GUI. It is written in Java, and has about 10 kLoC.","lastModifiedDate":"2022-02-25"},{"lineNumber":9,"author":{"gitId":"jiale-c"},"content":"Tracey aims to ease the barrier to manage the covid outbreak on campus and provide data for possible studies purposes.","lastModifiedDate":"2022-03-02"},{"lineNumber":10,"author":{"gitId":"jiale-c"},"content":"","lastModifiedDate":"2022-02-25"},{"lineNumber":11,"author":{"gitId":"jiale-c"},"content":"Given below are my contributions to the project.","lastModifiedDate":"2022-02-25"},{"lineNumber":12,"author":{"gitId":"jiale-c"},"content":"","lastModifiedDate":"2022-02-25"},{"lineNumber":13,"author":{"gitId":"jiale-c"},"content":"* **Add entry**: Added the ability to find an entry.","lastModifiedDate":"2022-02-25"},{"lineNumber":14,"author":{"gitId":"jiale-c"},"content":"    * What it does: allows the user to find the details of a student of interest.","lastModifiedDate":"2022-02-25"},{"lineNumber":15,"author":{"gitId":"jiale-c"},"content":"    * Justification: This feature is fundamental to the product because a user can check the particular health status of students.","lastModifiedDate":"2022-02-25"},{"lineNumber":16,"author":{"gitId":"jiale-c"},"content":"    * Highlights: This enhancement increases the ease of locating and checking on the well being of the student. It required an in-depth analysis of design alternatives. The implementation too was challenging as it required changes to existing commands.","lastModifiedDate":"2022-02-25"},{"lineNumber":17,"author":{"gitId":"jiale-c"},"content":"    * Credits: *{mention here if you reused any code/ideas from elsewhere or if a third-party library is heavily used in the feature so that a reader can make a more accurate judgement of how much effort went into the feature}*","lastModifiedDate":"2022-02-25"},{"lineNumber":18,"author":{"gitId":"jiale-c"},"content":"","lastModifiedDate":"2022-02-25"},{"lineNumber":19,"author":{"gitId":"jiale-c"},"content":"* **New Feature**: Add a delete command that allows the user to remove students from the list if the student is no longer a student of the school.","lastModifiedDate":"2022-03-02"},{"lineNumber":20,"author":{"gitId":"jiale-c"},"content":"","lastModifiedDate":"2022-02-25"},{"lineNumber":21,"author":{"gitId":"jiale-c"},"content":"* **Code contributed**: [RepoSense link]()","lastModifiedDate":"2022-02-25"},{"lineNumber":22,"author":{"gitId":"jiale-c"},"content":"","lastModifiedDate":"2022-02-25"},{"lineNumber":23,"author":{"gitId":"jiale-c"},"content":"* **Project management**:","lastModifiedDate":"2022-02-25"},{"lineNumber":24,"author":{"gitId":"jiale-c"},"content":"    * Managed releases `v1.3` - `v1.5rc` (3 releases) on GitHub","lastModifiedDate":"2022-02-25"},{"lineNumber":25,"author":{"gitId":"jiale-c"},"content":"","lastModifiedDate":"2022-02-25"},{"lineNumber":26,"author":{"gitId":"jiale-c"},"content":"* **Enhancements to existing features**:","lastModifiedDate":"2022-02-25"},{"lineNumber":27,"author":{"gitId":"jiale-c"},"content":"    * Updated the GUI color scheme (Pull requests [\\#33](), [\\#34]())","lastModifiedDate":"2022-02-25"},{"lineNumber":28,"author":{"gitId":"jiale-c"},"content":"    * Wrote additional tests for existing features to increase coverage from 88% to 92% (Pull requests [\\#36](), [\\#38]())","lastModifiedDate":"2022-02-25"},{"lineNumber":29,"author":{"gitId":"jiale-c"},"content":"","lastModifiedDate":"2022-02-25"},{"lineNumber":30,"author":{"gitId":"jiale-c"},"content":"* **Documentation**:","lastModifiedDate":"2022-02-25"},{"lineNumber":31,"author":{"gitId":"jiale-c"},"content":"    * User Guide:","lastModifiedDate":"2022-02-25"},{"lineNumber":32,"author":{"gitId":"jiale-c"},"content":"        * Added documentation for the features `delete` and `find` [\\#72]()","lastModifiedDate":"2022-02-25"},{"lineNumber":33,"author":{"gitId":"jiale-c"},"content":"        * Did cosmetic tweaks to existing documentation of features `clear`, `exit`: [\\#74]()","lastModifiedDate":"2022-02-25"},{"lineNumber":34,"author":{"gitId":"jiale-c"},"content":"    * Developer Guide:","lastModifiedDate":"2022-02-25"},{"lineNumber":35,"author":{"gitId":"jiale-c"},"content":"        * Added implementation details of the `delete` feature.","lastModifiedDate":"2022-02-25"},{"lineNumber":36,"author":{"gitId":"jiale-c"},"content":"","lastModifiedDate":"2022-02-25"},{"lineNumber":37,"author":{"gitId":"jiale-c"},"content":"* **Community**:","lastModifiedDate":"2022-02-25"},{"lineNumber":38,"author":{"gitId":"jiale-c"},"content":"    * PRs reviewed (with non-trivial review comments): [\\#12](), [\\#32](), [\\#19](), [\\#42]()","lastModifiedDate":"2022-02-25"},{"lineNumber":39,"author":{"gitId":"jiale-c"},"content":"    * Contributed to forum discussions (examples: [1](), [2](), [3](), [4]())","lastModifiedDate":"2022-02-25"},{"lineNumber":40,"author":{"gitId":"jiale-c"},"content":"    * Reported bugs and suggestions for other teams in the class (examples: [1](), [2](), [3]())","lastModifiedDate":"2022-02-25"},{"lineNumber":41,"author":{"gitId":"jiale-c"},"content":"    * Some parts of the history feature I added was adopted by several other class mates ([1](), [2]())","lastModifiedDate":"2022-02-25"},{"lineNumber":42,"author":{"gitId":"jiale-c"},"content":"","lastModifiedDate":"2022-02-25"},{"lineNumber":43,"author":{"gitId":"jiale-c"},"content":"* **Tools**:","lastModifiedDate":"2022-02-25"},{"lineNumber":44,"author":{"gitId":"jiale-c"},"content":"    * Integrated a third party library (Natty) to the project ([\\#42]())","lastModifiedDate":"2022-02-25"},{"lineNumber":45,"author":{"gitId":"jiale-c"},"content":"    * Integrated a new Github plugin (CircleCI) to the team repo","lastModifiedDate":"2022-02-25"},{"lineNumber":46,"author":{"gitId":"jiale-c"},"content":"","lastModifiedDate":"2022-02-25"},{"lineNumber":47,"author":{"gitId":"jiale-c"},"content":"* _{you can add/remove categories in the list above}_","lastModifiedDate":"2022-02-25"}],"authorContributionMap":{"jiale-c":47}},{"path":"docs/team/kevinkuo0320.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"kevinkuo0320"},"content":"---","lastModifiedDate":"2022-02-26"},{"lineNumber":2,"author":{"gitId":"kevinkuo0320"},"content":"layout: page","lastModifiedDate":"2022-02-26"},{"lineNumber":3,"author":{"gitId":"kevinkuo0320"},"content":"title: Kuo Chun Yuan\u0027s Project Portfolio Page","lastModifiedDate":"2022-02-26"},{"lineNumber":4,"author":{"gitId":"kevinkuo0320"},"content":"---","lastModifiedDate":"2022-02-26"},{"lineNumber":5,"author":{"gitId":"kevinkuo0320"},"content":"","lastModifiedDate":"2022-02-26"},{"lineNumber":6,"author":{"gitId":"kevinkuo0320"},"content":"### Project: Tracey","lastModifiedDate":"2022-02-26"},{"lineNumber":7,"author":{"gitId":"kevinkuo0320"},"content":"","lastModifiedDate":"2022-02-26"},{"lineNumber":8,"author":{"gitId":"kevinkuo0320"},"content":"Tracey is a desktop app for managing health statuses of NUS students by administrative staffs, optimized for use via a CLI while still having the benefits of a GUI. It is written in Java, and has about 10 kLoC.","lastModifiedDate":"2022-02-26"},{"lineNumber":9,"author":{"gitId":"kevinkuo0320"},"content":"","lastModifiedDate":"2022-02-26"},{"lineNumber":10,"author":{"gitId":"kevinkuo0320"},"content":"Given below are my contributions to the project.","lastModifiedDate":"2022-02-26"},{"lineNumber":11,"author":{"gitId":"kevinkuo0320"},"content":"","lastModifiedDate":"2022-02-26"},{"lineNumber":12,"author":{"gitId":"kevinkuo0320"},"content":"* **Add entry**: Added the ability to edit an entry.","lastModifiedDate":"2022-03-15"},{"lineNumber":13,"author":{"gitId":"kevinkuo0320"},"content":"    * What it does: allows the user to edit the details of a student.","lastModifiedDate":"2022-03-15"},{"lineNumber":14,"author":{"gitId":"kevinkuo0320"},"content":"    * Justification: This feature is fundamental to the product because a user can edit the details of an existing student.","lastModifiedDate":"2022-03-15"},{"lineNumber":15,"author":{"gitId":"kevinkuo0320"},"content":"    * Highlights: This enhancement increases the ease of editing entries. It required an in-depth analysis of design alternatives. The implementation too was challenging as it required changes to existing commands.","lastModifiedDate":"2022-03-15"},{"lineNumber":16,"author":{"gitId":"kevinkuo0320"},"content":"    * Credits: *{mention here if you reused any code/ideas from elsewhere or if a third-party library is heavily used in the feature so that a reader can make a more accurate judgement of how much effort went into the feature}*","lastModifiedDate":"2022-02-26"},{"lineNumber":17,"author":{"gitId":"kevinkuo0320"},"content":"","lastModifiedDate":"2022-02-26"},{"lineNumber":18,"author":{"gitId":"kevinkuo0320"},"content":"* **New Feature**: Added an edit command that allows the user to edit previous records by indicating the student index.","lastModifiedDate":"2022-03-15"},{"lineNumber":19,"author":{"gitId":"kevinkuo0320"},"content":"","lastModifiedDate":"2022-02-26"},{"lineNumber":20,"author":{"gitId":"kevinkuo0320"},"content":"* **Code contributed**: [RepoSense link]()","lastModifiedDate":"2022-02-26"},{"lineNumber":21,"author":{"gitId":"kevinkuo0320"},"content":"","lastModifiedDate":"2022-02-26"},{"lineNumber":22,"author":{"gitId":"kevinkuo0320"},"content":"* **Project management**:","lastModifiedDate":"2022-02-26"},{"lineNumber":23,"author":{"gitId":"kevinkuo0320"},"content":"    * Managed releases `v1.3` - `v1.5rc` (3 releases) on GitHub","lastModifiedDate":"2022-02-26"},{"lineNumber":24,"author":{"gitId":"kevinkuo0320"},"content":"","lastModifiedDate":"2022-02-26"},{"lineNumber":25,"author":{"gitId":"kevinkuo0320"},"content":"* **Enhancements to existing features**:","lastModifiedDate":"2022-02-26"},{"lineNumber":26,"author":{"gitId":"kevinkuo0320"},"content":"    * Updated the GUI color scheme (Pull requests [\\#33](), [\\#34]())","lastModifiedDate":"2022-02-26"},{"lineNumber":27,"author":{"gitId":"kevinkuo0320"},"content":"    * Wrote additional tests for existing features to increase coverage from 88% to 92% (Pull requests [\\#36](), [\\#38]())","lastModifiedDate":"2022-02-26"},{"lineNumber":28,"author":{"gitId":"kevinkuo0320"},"content":"","lastModifiedDate":"2022-02-26"},{"lineNumber":29,"author":{"gitId":"kevinkuo0320"},"content":"* **Documentation**:","lastModifiedDate":"2022-02-26"},{"lineNumber":30,"author":{"gitId":"kevinkuo0320"},"content":"    * User Guide:","lastModifiedDate":"2022-02-26"},{"lineNumber":31,"author":{"gitId":"kevinkuo0320"},"content":"        * Added documentation for the features `delete` and `find` [\\#72]()","lastModifiedDate":"2022-02-26"},{"lineNumber":32,"author":{"gitId":"kevinkuo0320"},"content":"        * Did cosmetic tweaks to existing documentation of features `clear`, `exit`: [\\#74]()","lastModifiedDate":"2022-02-26"},{"lineNumber":33,"author":{"gitId":"kevinkuo0320"},"content":"    * Developer Guide:","lastModifiedDate":"2022-02-26"},{"lineNumber":34,"author":{"gitId":"kevinkuo0320"},"content":"        * Added implementation details of the `delete` feature.","lastModifiedDate":"2022-02-26"},{"lineNumber":35,"author":{"gitId":"kevinkuo0320"},"content":"","lastModifiedDate":"2022-02-26"},{"lineNumber":36,"author":{"gitId":"kevinkuo0320"},"content":"* **Community**:","lastModifiedDate":"2022-02-26"},{"lineNumber":37,"author":{"gitId":"kevinkuo0320"},"content":"    * PRs reviewed (with non-trivial review comments): [\\#12](), [\\#32](), [\\#19](), [\\#42]()","lastModifiedDate":"2022-02-26"},{"lineNumber":38,"author":{"gitId":"kevinkuo0320"},"content":"    * Contributed to forum discussions (examples: [1](), [2](), [3](), [4]())","lastModifiedDate":"2022-02-26"},{"lineNumber":39,"author":{"gitId":"kevinkuo0320"},"content":"    * Reported bugs and suggestions for other teams in the class (examples: [1](), [2](), [3]())","lastModifiedDate":"2022-02-26"},{"lineNumber":40,"author":{"gitId":"kevinkuo0320"},"content":"    * Some parts of the history feature I added was adopted by several other class mates ([1](), [2]())","lastModifiedDate":"2022-02-26"},{"lineNumber":41,"author":{"gitId":"kevinkuo0320"},"content":"","lastModifiedDate":"2022-02-26"},{"lineNumber":42,"author":{"gitId":"kevinkuo0320"},"content":"* **Tools**:","lastModifiedDate":"2022-02-26"},{"lineNumber":43,"author":{"gitId":"kevinkuo0320"},"content":"    * Integrated a third party library (Natty) to the project ([\\#42]())","lastModifiedDate":"2022-02-26"},{"lineNumber":44,"author":{"gitId":"kevinkuo0320"},"content":"    * Integrated a new Github plugin (CircleCI) to the team repo","lastModifiedDate":"2022-02-26"},{"lineNumber":45,"author":{"gitId":"kevinkuo0320"},"content":"","lastModifiedDate":"2022-02-26"},{"lineNumber":46,"author":{"gitId":"kevinkuo0320"},"content":"","lastModifiedDate":"2022-03-15"},{"lineNumber":47,"author":{"gitId":"kevinkuo0320"},"content":"* _{you can add/remove categories in the list above}_","lastModifiedDate":"2022-02-26"},{"lineNumber":48,"author":{"gitId":"kevinkuo0320"},"content":"","lastModifiedDate":"2022-03-15"}],"authorContributionMap":{"kevinkuo0320":48}},{"path":"docs/team/tanchinkiat99.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"tanchinkiat99"},"content":"---","lastModifiedDate":"2022-02-23"},{"lineNumber":2,"author":{"gitId":"tanchinkiat99"},"content":"layout: page","lastModifiedDate":"2022-02-23"},{"lineNumber":3,"author":{"gitId":"tanchinkiat99"},"content":"title: Tan Chin Kiat\u0027s Project Portfolio Page","lastModifiedDate":"2022-02-23"},{"lineNumber":4,"author":{"gitId":"tanchinkiat99"},"content":"---","lastModifiedDate":"2022-02-23"},{"lineNumber":5,"author":{"gitId":"tanchinkiat99"},"content":"","lastModifiedDate":"2022-02-23"},{"lineNumber":6,"author":{"gitId":"tanchinkiat99"},"content":"### Project: Tracey","lastModifiedDate":"2022-02-23"},{"lineNumber":7,"author":{"gitId":"tanchinkiat99"},"content":"","lastModifiedDate":"2022-02-23"},{"lineNumber":8,"author":{"gitId":"tanchinkiat99"},"content":"Tracey is a desktop app for managing health statuses of NUS students by administrative staffs, optimized for use via a CLI while still having the benefits of a GUI. It is written in Java, and has about 10 kLoC.","lastModifiedDate":"2022-02-23"},{"lineNumber":9,"author":{"gitId":"tanchinkiat99"},"content":"","lastModifiedDate":"2022-02-23"},{"lineNumber":10,"author":{"gitId":"tanchinkiat99"},"content":"Given below are my contributions to the project.","lastModifiedDate":"2022-02-23"},{"lineNumber":11,"author":{"gitId":"tanchinkiat99"},"content":"","lastModifiedDate":"2022-02-23"},{"lineNumber":12,"author":{"gitId":"tanchinkiat99"},"content":"* **Add entry**: Added the ability to add an entry.","lastModifiedDate":"2022-02-23"},{"lineNumber":13,"author":{"gitId":"tanchinkiat99"},"content":"    * What it does: allows the user to add the details of a student.","lastModifiedDate":"2022-02-23"},{"lineNumber":14,"author":{"gitId":"tanchinkiat99"},"content":"    * Justification: This feature is fundamental to the product because a user can add the details of a new student.","lastModifiedDate":"2022-02-23"},{"lineNumber":15,"author":{"gitId":"tanchinkiat99"},"content":"    * Highlights: This enhancement increases the ease of adding entries. It required an in-depth analysis of design alternatives. The implementation too was challenging as it required changes to existing commands.","lastModifiedDate":"2022-02-23"},{"lineNumber":16,"author":{"gitId":"tanchinkiat99"},"content":"","lastModifiedDate":"2022-02-23"},{"lineNumber":17,"author":{"gitId":"tanchinkiat99"},"content":"* **New Feature**: Added a filter command that allows the user to retrieve certain entries using a filter.","lastModifiedDate":"2022-03-03"},{"lineNumber":18,"author":{"gitId":"tanchinkiat99"},"content":"","lastModifiedDate":"2022-02-23"},{"lineNumber":19,"author":{"gitId":"tanchinkiat99"},"content":"* **Code contributed**: [RepoSense link]()","lastModifiedDate":"2022-02-23"},{"lineNumber":20,"author":{"gitId":"tanchinkiat99"},"content":"","lastModifiedDate":"2022-02-23"},{"lineNumber":21,"author":{"gitId":"tanchinkiat99"},"content":"* **Project management**:","lastModifiedDate":"2022-02-23"},{"lineNumber":22,"author":{"gitId":"tanchinkiat99"},"content":"    * Managed releases `v1.3` - `v1.5rc` (3 releases) on GitHub","lastModifiedDate":"2022-02-23"},{"lineNumber":23,"author":{"gitId":"tanchinkiat99"},"content":"","lastModifiedDate":"2022-02-23"},{"lineNumber":24,"author":{"gitId":"tanchinkiat99"},"content":"* **Enhancements to existing features**:","lastModifiedDate":"2022-02-23"},{"lineNumber":25,"author":{"gitId":"tanchinkiat99"},"content":"    * Updated the GUI color scheme (Pull requests [\\#33](), [\\#34]())","lastModifiedDate":"2022-02-23"},{"lineNumber":26,"author":{"gitId":"tanchinkiat99"},"content":"    * Wrote additional tests for existing features to increase coverage from 88% to 92% (Pull requests [\\#36](), [\\#38]())","lastModifiedDate":"2022-02-23"},{"lineNumber":27,"author":{"gitId":"tanchinkiat99"},"content":"","lastModifiedDate":"2022-02-23"},{"lineNumber":28,"author":{"gitId":"tanchinkiat99"},"content":"* **Documentation**:","lastModifiedDate":"2022-02-23"},{"lineNumber":29,"author":{"gitId":"tanchinkiat99"},"content":"    * User Guide:","lastModifiedDate":"2022-02-23"},{"lineNumber":30,"author":{"gitId":"tanchinkiat99"},"content":"        * Added documentation for the features `delete` and `find` [\\#72]()","lastModifiedDate":"2022-02-23"},{"lineNumber":31,"author":{"gitId":"tanchinkiat99"},"content":"        * Did cosmetic tweaks to existing documentation of features `clear`, `exit`: [\\#74]()","lastModifiedDate":"2022-02-23"},{"lineNumber":32,"author":{"gitId":"tanchinkiat99"},"content":"    * Developer Guide:","lastModifiedDate":"2022-02-23"},{"lineNumber":33,"author":{"gitId":"tanchinkiat99"},"content":"        * Added implementation details of the `delete` feature.","lastModifiedDate":"2022-02-23"},{"lineNumber":34,"author":{"gitId":"tanchinkiat99"},"content":"","lastModifiedDate":"2022-02-23"},{"lineNumber":35,"author":{"gitId":"tanchinkiat99"},"content":"* **Community**:","lastModifiedDate":"2022-02-23"},{"lineNumber":36,"author":{"gitId":"tanchinkiat99"},"content":"    * PRs reviewed (with non-trivial review comments): [\\#12](), [\\#32](), [\\#19](), [\\#42]()","lastModifiedDate":"2022-02-23"},{"lineNumber":37,"author":{"gitId":"tanchinkiat99"},"content":"    * Contributed to forum discussions (examples: [1](), [2](), [3](), [4]())","lastModifiedDate":"2022-02-23"},{"lineNumber":38,"author":{"gitId":"tanchinkiat99"},"content":"    * Reported bugs and suggestions for other teams in the class (examples: [1](), [2](), [3]())","lastModifiedDate":"2022-02-23"},{"lineNumber":39,"author":{"gitId":"tanchinkiat99"},"content":"    * Some parts of the history feature I added was adopted by several other class mates ([1](), [2]())","lastModifiedDate":"2022-02-23"},{"lineNumber":40,"author":{"gitId":"tanchinkiat99"},"content":"","lastModifiedDate":"2022-02-23"},{"lineNumber":41,"author":{"gitId":"tanchinkiat99"},"content":"* **Tools**:","lastModifiedDate":"2022-02-23"},{"lineNumber":42,"author":{"gitId":"tanchinkiat99"},"content":"    * Integrated a third party library (Natty) to the project ([\\#42]())","lastModifiedDate":"2022-02-23"},{"lineNumber":43,"author":{"gitId":"tanchinkiat99"},"content":"    * Integrated a new Github plugin (CircleCI) to the team repo","lastModifiedDate":"2022-02-23"},{"lineNumber":44,"author":{"gitId":"tanchinkiat99"},"content":"","lastModifiedDate":"2022-02-23"},{"lineNumber":45,"author":{"gitId":"tanchinkiat99"},"content":"* _{you can add/remove categories in the list above}_","lastModifiedDate":"2022-02-23"}],"authorContributionMap":{"tanchinkiat99":45}},{"path":"src/main/java/seedu/address/logic/commands/AddCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2016-09-22"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2017-05-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_ADDRESS;","lastModifiedDate":"2017-05-09"},{"lineNumber":5,"author":{"gitId":"DannyDakota"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_BLOCK;","lastModifiedDate":"2022-03-17"},{"lineNumber":6,"author":{"gitId":"cwq2326"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_COVID_STATUS;","lastModifiedDate":"2022-02-28"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_EMAIL;","lastModifiedDate":"2017-05-09"},{"lineNumber":8,"author":{"gitId":"cwq2326"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_FACULTY;","lastModifiedDate":"2022-02-28"},{"lineNumber":9,"author":{"gitId":"cwq2326"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_MATRICULATION_NUMBER;","lastModifiedDate":"2022-02-28"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_NAME;","lastModifiedDate":"2017-06-06"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_PHONE;","lastModifiedDate":"2017-05-09"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_TAG;","lastModifiedDate":"2017-05-09"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-09"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.exceptions.CommandException;","lastModifiedDate":"2017-02-05"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2018-08-08"},{"lineNumber":16,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2017-01-18"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":18,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-24"},{"lineNumber":19,"author":{"gitId":"-"},"content":" * Adds a person to the address book.","lastModifiedDate":"2016-08-24"},{"lineNumber":20,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-24"},{"lineNumber":21,"author":{"gitId":"-"},"content":"public class AddCommand extends Command {","lastModifiedDate":"2018-04-19"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    public static final String COMMAND_WORD \u003d \"add\";","lastModifiedDate":"2016-08-24"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_USAGE \u003d COMMAND_WORD + \": Adds a person to the address book. \"","lastModifiedDate":"2016-08-24"},{"lineNumber":26,"author":{"gitId":"-"},"content":"            + \"Parameters: \"","lastModifiedDate":"2017-06-06"},{"lineNumber":27,"author":{"gitId":"-"},"content":"            + PREFIX_NAME + \"NAME \"","lastModifiedDate":"2017-06-06"},{"lineNumber":28,"author":{"gitId":"DannyDakota"},"content":"            + PREFIX_BLOCK + \"BLOCK \"","lastModifiedDate":"2022-03-17"},{"lineNumber":29,"author":{"gitId":"cwq2326"},"content":"            + PREFIX_FACULTY + \"FACULTY \"","lastModifiedDate":"2022-02-28"},{"lineNumber":30,"author":{"gitId":"-"},"content":"            + PREFIX_PHONE + \"PHONE \"","lastModifiedDate":"2017-05-09"},{"lineNumber":31,"author":{"gitId":"-"},"content":"            + PREFIX_EMAIL + \"EMAIL \"","lastModifiedDate":"2017-05-09"},{"lineNumber":32,"author":{"gitId":"-"},"content":"            + PREFIX_ADDRESS + \"ADDRESS \"","lastModifiedDate":"2017-05-09"},{"lineNumber":33,"author":{"gitId":"cwq2326"},"content":"            + PREFIX_MATRICULATION_NUMBER + \"MATRICULATION NUMBER \"","lastModifiedDate":"2022-02-28"},{"lineNumber":34,"author":{"gitId":"cwq2326"},"content":"            + PREFIX_COVID_STATUS + \"COVID STATUS \"","lastModifiedDate":"2022-02-28"},{"lineNumber":35,"author":{"gitId":"-"},"content":"            + \"[\" + PREFIX_TAG + \"TAG]...\\n\"","lastModifiedDate":"2017-05-09"},{"lineNumber":36,"author":{"gitId":"-"},"content":"            + \"Example: \" + COMMAND_WORD + \" \"","lastModifiedDate":"2017-06-06"},{"lineNumber":37,"author":{"gitId":"-"},"content":"            + PREFIX_NAME + \"John Doe \"","lastModifiedDate":"2017-06-06"},{"lineNumber":38,"author":{"gitId":"DannyDakota"},"content":"            + PREFIX_BLOCK + \"E \"","lastModifiedDate":"2022-03-17"},{"lineNumber":39,"author":{"gitId":"cwq2326"},"content":"            + PREFIX_FACULTY + \"SoC \"","lastModifiedDate":"2022-03-04"},{"lineNumber":40,"author":{"gitId":"-"},"content":"            + PREFIX_PHONE + \"98765432 \"","lastModifiedDate":"2017-05-09"},{"lineNumber":41,"author":{"gitId":"-"},"content":"            + PREFIX_EMAIL + \"johnd@example.com \"","lastModifiedDate":"2017-05-09"},{"lineNumber":42,"author":{"gitId":"-"},"content":"            + PREFIX_ADDRESS + \"311, Clementi Ave 2, #02-25 \"","lastModifiedDate":"2017-05-09"},{"lineNumber":43,"author":{"gitId":"cwq2326"},"content":"            + PREFIX_MATRICULATION_NUMBER + \"A0253647C \"","lastModifiedDate":"2022-02-28"},{"lineNumber":44,"author":{"gitId":"cwq2326"},"content":"            + PREFIX_COVID_STATUS + \"NEGATIVE \"","lastModifiedDate":"2022-02-28"},{"lineNumber":45,"author":{"gitId":"-"},"content":"            + PREFIX_TAG + \"friends \"","lastModifiedDate":"2017-05-09"},{"lineNumber":46,"author":{"gitId":"-"},"content":"            + PREFIX_TAG + \"owesMoney\";","lastModifiedDate":"2017-05-09"},{"lineNumber":47,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_SUCCESS \u003d \"New person added: %1$s\";","lastModifiedDate":"2016-08-24"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_DUPLICATE_PERSON \u003d \"This person already exists in the address book\";","lastModifiedDate":"2016-08-24"},{"lineNumber":50,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    private final Person toAdd;","lastModifiedDate":"2016-08-24"},{"lineNumber":52,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":53,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-09-21"},{"lineNumber":54,"author":{"gitId":"-"},"content":"     * Creates an AddCommand to add the specified {@code Person}","lastModifiedDate":"2018-01-10"},{"lineNumber":55,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-09-21"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    public AddCommand(Person person) {","lastModifiedDate":"2018-01-10"},{"lineNumber":57,"author":{"gitId":"-"},"content":"        requireNonNull(person);","lastModifiedDate":"2018-01-10"},{"lineNumber":58,"author":{"gitId":"-"},"content":"        toAdd \u003d person;","lastModifiedDate":"2018-01-10"},{"lineNumber":59,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-21"},{"lineNumber":60,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":61,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-24"},{"lineNumber":62,"author":{"gitId":"-"},"content":"    public CommandResult execute(Model model) throws CommandException {","lastModifiedDate":"2019-01-25"},{"lineNumber":63,"author":{"gitId":"-"},"content":"        requireNonNull(model);","lastModifiedDate":"2017-05-15"},{"lineNumber":64,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-07"},{"lineNumber":65,"author":{"gitId":"-"},"content":"        if (model.hasPerson(toAdd)) {","lastModifiedDate":"2018-08-07"},{"lineNumber":66,"author":{"gitId":"-"},"content":"            throw new CommandException(MESSAGE_DUPLICATE_PERSON);","lastModifiedDate":"2018-08-07"},{"lineNumber":67,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-08-07"},{"lineNumber":68,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-07"},{"lineNumber":69,"author":{"gitId":"-"},"content":"        model.addPerson(toAdd);","lastModifiedDate":"2016-09-25"},{"lineNumber":70,"author":{"gitId":"-"},"content":"        return new CommandResult(String.format(MESSAGE_SUCCESS, toAdd));","lastModifiedDate":"2016-08-24"},{"lineNumber":71,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":72,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":73,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2017-06-22"},{"lineNumber":74,"author":{"gitId":"-"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2017-06-22"},{"lineNumber":75,"author":{"gitId":"-"},"content":"        return other \u003d\u003d this // short circuit if same object","lastModifiedDate":"2017-06-22"},{"lineNumber":76,"author":{"gitId":"-"},"content":"                || (other instanceof AddCommand // instanceof handles nulls","lastModifiedDate":"2017-06-22"},{"lineNumber":77,"author":{"gitId":"-"},"content":"                \u0026\u0026 toAdd.equals(((AddCommand) other).toAdd));","lastModifiedDate":"2017-06-22"},{"lineNumber":78,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-22"},{"lineNumber":79,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-24"}],"authorContributionMap":{"DannyDakota":3,"cwq2326":9,"-":67}},{"path":"src/main/java/seedu/address/logic/commands/ArchiveCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"cwq2326"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2022-03-26"},{"lineNumber":2,"author":{"gitId":"cwq2326"},"content":"","lastModifiedDate":"2022-03-26"},{"lineNumber":3,"author":{"gitId":"cwq2326"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2022-03-26"},{"lineNumber":4,"author":{"gitId":"cwq2326"},"content":"","lastModifiedDate":"2022-03-26"},{"lineNumber":5,"author":{"gitId":"cwq2326"},"content":"import java.io.IOException;","lastModifiedDate":"2022-03-27"},{"lineNumber":6,"author":{"gitId":"cwq2326"},"content":"import java.nio.file.Files;","lastModifiedDate":"2022-03-27"},{"lineNumber":7,"author":{"gitId":"cwq2326"},"content":"import java.nio.file.Path;","lastModifiedDate":"2022-03-27"},{"lineNumber":8,"author":{"gitId":"cwq2326"},"content":"import java.nio.file.Paths;","lastModifiedDate":"2022-03-27"},{"lineNumber":9,"author":{"gitId":"cwq2326"},"content":"import java.nio.file.StandardCopyOption;","lastModifiedDate":"2022-03-27"},{"lineNumber":10,"author":{"gitId":"cwq2326"},"content":"import java.text.SimpleDateFormat;","lastModifiedDate":"2022-03-27"},{"lineNumber":11,"author":{"gitId":"cwq2326"},"content":"import java.util.Date;","lastModifiedDate":"2022-03-27"},{"lineNumber":12,"author":{"gitId":"cwq2326"},"content":"import java.util.regex.Pattern;","lastModifiedDate":"2022-03-27"},{"lineNumber":13,"author":{"gitId":"cwq2326"},"content":"","lastModifiedDate":"2022-03-27"},{"lineNumber":14,"author":{"gitId":"cwq2326"},"content":"import seedu.address.commons.util.FileUtil;","lastModifiedDate":"2022-03-27"},{"lineNumber":15,"author":{"gitId":"cwq2326"},"content":"import seedu.address.logic.commands.exceptions.CommandException;","lastModifiedDate":"2022-03-26"},{"lineNumber":16,"author":{"gitId":"cwq2326"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2022-03-26"},{"lineNumber":17,"author":{"gitId":"cwq2326"},"content":"","lastModifiedDate":"2022-03-26"},{"lineNumber":18,"author":{"gitId":"cwq2326"},"content":"/**","lastModifiedDate":"2022-03-26"},{"lineNumber":19,"author":{"gitId":"cwq2326"},"content":" * Archives the address book.","lastModifiedDate":"2022-03-26"},{"lineNumber":20,"author":{"gitId":"cwq2326"},"content":" */","lastModifiedDate":"2022-03-26"},{"lineNumber":21,"author":{"gitId":"cwq2326"},"content":"public class ArchiveCommand extends Command {","lastModifiedDate":"2022-03-26"},{"lineNumber":22,"author":{"gitId":"cwq2326"},"content":"","lastModifiedDate":"2022-03-26"},{"lineNumber":23,"author":{"gitId":"cwq2326"},"content":"    public static final String COMMAND_WORD \u003d \"archive\";","lastModifiedDate":"2022-03-26"},{"lineNumber":24,"author":{"gitId":"cwq2326"},"content":"    public static final String MESSAGE_SUCCESS \u003d \"Tracey has been archived!\";","lastModifiedDate":"2022-03-26"},{"lineNumber":25,"author":{"gitId":"cwq2326"},"content":"    public static final String MESSAGE_FAILURE \u003d \"Unable to archive the address book\";","lastModifiedDate":"2022-03-27"},{"lineNumber":26,"author":{"gitId":"cwq2326"},"content":"    public static final SimpleDateFormat ARCHIVE_DIRECTORY_NAME_FORMAT \u003d new SimpleDateFormat(\"ddMMyy\");","lastModifiedDate":"2022-03-28"},{"lineNumber":27,"author":{"gitId":"cwq2326"},"content":"    public static final SimpleDateFormat ARCHIVE_FILE_NAME_FORMAT \u003d new SimpleDateFormat(\"ddMMyy_HHmmssSSS\");","lastModifiedDate":"2022-03-28"},{"lineNumber":28,"author":{"gitId":"cwq2326"},"content":"","lastModifiedDate":"2022-03-26"},{"lineNumber":29,"author":{"gitId":"cwq2326"},"content":"    @Override","lastModifiedDate":"2022-03-26"},{"lineNumber":30,"author":{"gitId":"cwq2326"},"content":"    public CommandResult execute(Model model) throws CommandException {","lastModifiedDate":"2022-03-26"},{"lineNumber":31,"author":{"gitId":"cwq2326"},"content":"        requireNonNull(model);","lastModifiedDate":"2022-03-26"},{"lineNumber":32,"author":{"gitId":"cwq2326"},"content":"        archiveFile(model);","lastModifiedDate":"2022-03-28"},{"lineNumber":33,"author":{"gitId":"cwq2326"},"content":"        return new CommandResult(MESSAGE_SUCCESS);","lastModifiedDate":"2022-03-26"},{"lineNumber":34,"author":{"gitId":"cwq2326"},"content":"    }","lastModifiedDate":"2022-03-26"},{"lineNumber":35,"author":{"gitId":"cwq2326"},"content":"","lastModifiedDate":"2022-03-27"},{"lineNumber":36,"author":{"gitId":"cwq2326"},"content":"    /**","lastModifiedDate":"2022-03-27"},{"lineNumber":37,"author":{"gitId":"cwq2326"},"content":"     * Initialises the path for the archived address book file. This method will first get the directory path of the","lastModifiedDate":"2022-03-27"},{"lineNumber":38,"author":{"gitId":"cwq2326"},"content":"     * address book file path e.g. \"[ROOT]/data\" if the address book file path is \"[ROOT]/data/addressbook.json\".","lastModifiedDate":"2022-03-27"},{"lineNumber":39,"author":{"gitId":"cwq2326"},"content":"     *  A path to the archived address book file is then returned using this directory path as the reference path.","lastModifiedDate":"2022-03-28"},{"lineNumber":40,"author":{"gitId":"cwq2326"},"content":"     * @param addressBookFilePath path for address book file","lastModifiedDate":"2022-03-28"},{"lineNumber":41,"author":{"gitId":"cwq2326"},"content":"     * @param archiveDirectoryName name for the archive directory","lastModifiedDate":"2022-03-28"},{"lineNumber":42,"author":{"gitId":"cwq2326"},"content":"     * @param archiveFileName name for the archived file","lastModifiedDate":"2022-03-28"},{"lineNumber":43,"author":{"gitId":"cwq2326"},"content":"     * @return path for the archived address book file","lastModifiedDate":"2022-03-27"},{"lineNumber":44,"author":{"gitId":"cwq2326"},"content":"     */","lastModifiedDate":"2022-03-27"},{"lineNumber":45,"author":{"gitId":"cwq2326"},"content":"    private Path initArchiveFilePath(Path addressBookFilePath, String archiveDirectoryName, String archiveFileName) {","lastModifiedDate":"2022-03-28"},{"lineNumber":46,"author":{"gitId":"cwq2326"},"content":"        String splitRegex \u003d Pattern.quote(System.getProperty(\"file.separator\")); // \"\\\" is the regex in this case","lastModifiedDate":"2022-03-27"},{"lineNumber":47,"author":{"gitId":"cwq2326"},"content":"        StringBuilder addressBookFileDirectory \u003d new StringBuilder();","lastModifiedDate":"2022-03-27"},{"lineNumber":48,"author":{"gitId":"cwq2326"},"content":"        String[] splitAddressBookFilePath \u003d addressBookFilePath.toString().split(splitRegex);","lastModifiedDate":"2022-03-27"},{"lineNumber":49,"author":{"gitId":"cwq2326"},"content":"","lastModifiedDate":"2022-03-27"},{"lineNumber":50,"author":{"gitId":"cwq2326"},"content":"        // to get the directory path of the address book file path","lastModifiedDate":"2022-03-27"},{"lineNumber":51,"author":{"gitId":"cwq2326"},"content":"        for (int i \u003d 0; i \u003c splitAddressBookFilePath.length - 1; i++) {","lastModifiedDate":"2022-03-27"},{"lineNumber":52,"author":{"gitId":"cwq2326"},"content":"            addressBookFileDirectory.append(splitAddressBookFilePath[i]);","lastModifiedDate":"2022-03-27"},{"lineNumber":53,"author":{"gitId":"cwq2326"},"content":"            if (i + 1 !\u003d splitAddressBookFilePath.length) {","lastModifiedDate":"2022-03-27"},{"lineNumber":54,"author":{"gitId":"cwq2326"},"content":"                addressBookFileDirectory.append(\"\\\\\");","lastModifiedDate":"2022-03-27"},{"lineNumber":55,"author":{"gitId":"cwq2326"},"content":"            }","lastModifiedDate":"2022-03-27"},{"lineNumber":56,"author":{"gitId":"cwq2326"},"content":"        }","lastModifiedDate":"2022-03-27"},{"lineNumber":57,"author":{"gitId":"cwq2326"},"content":"","lastModifiedDate":"2022-03-27"},{"lineNumber":58,"author":{"gitId":"cwq2326"},"content":"        // path for the archived address book file","lastModifiedDate":"2022-03-27"},{"lineNumber":59,"author":{"gitId":"cwq2326"},"content":"        Path fullArchiveFilePath \u003d Paths.get(addressBookFileDirectory.toString(), COMMAND_WORD, archiveDirectoryName,","lastModifiedDate":"2022-03-27"},{"lineNumber":60,"author":{"gitId":"cwq2326"},"content":"                archiveFileName);","lastModifiedDate":"2022-03-27"},{"lineNumber":61,"author":{"gitId":"cwq2326"},"content":"        return fullArchiveFilePath;","lastModifiedDate":"2022-03-27"},{"lineNumber":62,"author":{"gitId":"cwq2326"},"content":"    }","lastModifiedDate":"2022-03-27"},{"lineNumber":63,"author":{"gitId":"cwq2326"},"content":"","lastModifiedDate":"2022-03-27"},{"lineNumber":64,"author":{"gitId":"cwq2326"},"content":"    /**","lastModifiedDate":"2022-03-27"},{"lineNumber":65,"author":{"gitId":"cwq2326"},"content":"     * Initialises the name for the directory for the archived file using the current date.","lastModifiedDate":"2022-03-27"},{"lineNumber":66,"author":{"gitId":"cwq2326"},"content":"     * @return Name for the directory for the archived file","lastModifiedDate":"2022-03-27"},{"lineNumber":67,"author":{"gitId":"cwq2326"},"content":"     */","lastModifiedDate":"2022-03-27"},{"lineNumber":68,"author":{"gitId":"cwq2326"},"content":"    private String initArchiveDirectoryPathName() {","lastModifiedDate":"2022-03-27"},{"lineNumber":69,"author":{"gitId":"cwq2326"},"content":"        Date date \u003d new Date();","lastModifiedDate":"2022-03-28"},{"lineNumber":70,"author":{"gitId":"cwq2326"},"content":"        return ARCHIVE_DIRECTORY_NAME_FORMAT.format(date);","lastModifiedDate":"2022-03-28"},{"lineNumber":71,"author":{"gitId":"cwq2326"},"content":"    }","lastModifiedDate":"2022-03-27"},{"lineNumber":72,"author":{"gitId":"cwq2326"},"content":"","lastModifiedDate":"2022-03-27"},{"lineNumber":73,"author":{"gitId":"cwq2326"},"content":"    /**","lastModifiedDate":"2022-03-27"},{"lineNumber":74,"author":{"gitId":"cwq2326"},"content":"     * Initialises the name for the archived file using the current date and time.","lastModifiedDate":"2022-03-27"},{"lineNumber":75,"author":{"gitId":"cwq2326"},"content":"     * @return Name for the archived file","lastModifiedDate":"2022-03-27"},{"lineNumber":76,"author":{"gitId":"cwq2326"},"content":"     */","lastModifiedDate":"2022-03-27"},{"lineNumber":77,"author":{"gitId":"cwq2326"},"content":"    private String initArchiveFilePathName() {","lastModifiedDate":"2022-03-27"},{"lineNumber":78,"author":{"gitId":"cwq2326"},"content":"        Date date \u003d new Date();","lastModifiedDate":"2022-03-28"},{"lineNumber":79,"author":{"gitId":"cwq2326"},"content":"        return ARCHIVE_FILE_NAME_FORMAT.format(date) + \".json\";","lastModifiedDate":"2022-03-28"},{"lineNumber":80,"author":{"gitId":"cwq2326"},"content":"    }","lastModifiedDate":"2022-03-27"},{"lineNumber":81,"author":{"gitId":"cwq2326"},"content":"","lastModifiedDate":"2022-03-27"},{"lineNumber":82,"author":{"gitId":"cwq2326"},"content":"    /**","lastModifiedDate":"2022-03-27"},{"lineNumber":83,"author":{"gitId":"cwq2326"},"content":"     * Creates the archived address book file in the specified path and copies the information in the address book","lastModifiedDate":"2022-03-27"},{"lineNumber":84,"author":{"gitId":"cwq2326"},"content":"     * to the archived address book.","lastModifiedDate":"2022-03-27"},{"lineNumber":85,"author":{"gitId":"cwq2326"},"content":"     * @param model Address book model.","lastModifiedDate":"2022-03-28"},{"lineNumber":86,"author":{"gitId":"cwq2326"},"content":"     * @throws CommandException if the file or directory cannot be created, or if the file cannot be copied.","lastModifiedDate":"2022-03-27"},{"lineNumber":87,"author":{"gitId":"cwq2326"},"content":"     */","lastModifiedDate":"2022-03-27"},{"lineNumber":88,"author":{"gitId":"cwq2326"},"content":"    private void archiveFile(Model model) throws CommandException {","lastModifiedDate":"2022-03-28"},{"lineNumber":89,"author":{"gitId":"cwq2326"},"content":"        Path addressBookFilePath \u003d model.getAddressBookFilePath();","lastModifiedDate":"2022-03-28"},{"lineNumber":90,"author":{"gitId":"cwq2326"},"content":"        String archiveDirectoryName \u003d initArchiveDirectoryPathName();","lastModifiedDate":"2022-03-28"},{"lineNumber":91,"author":{"gitId":"cwq2326"},"content":"        String archiveFileName \u003d initArchiveFilePathName();","lastModifiedDate":"2022-03-28"},{"lineNumber":92,"author":{"gitId":"cwq2326"},"content":"        Path archiveFilePath \u003d initArchiveFilePath(addressBookFilePath, archiveDirectoryName, archiveFileName);","lastModifiedDate":"2022-03-28"},{"lineNumber":93,"author":{"gitId":"cwq2326"},"content":"        try {","lastModifiedDate":"2022-03-27"},{"lineNumber":94,"author":{"gitId":"cwq2326"},"content":"            FileUtil.createIfMissing(archiveFilePath);","lastModifiedDate":"2022-03-27"},{"lineNumber":95,"author":{"gitId":"cwq2326"},"content":"            Files.copy(addressBookFilePath, archiveFilePath, StandardCopyOption.REPLACE_EXISTING);","lastModifiedDate":"2022-03-27"},{"lineNumber":96,"author":{"gitId":"cwq2326"},"content":"        } catch (IOException error) {","lastModifiedDate":"2022-03-27"},{"lineNumber":97,"author":{"gitId":"cwq2326"},"content":"            throw new CommandException(MESSAGE_FAILURE);","lastModifiedDate":"2022-03-27"},{"lineNumber":98,"author":{"gitId":"cwq2326"},"content":"        }","lastModifiedDate":"2022-03-27"},{"lineNumber":99,"author":{"gitId":"cwq2326"},"content":"    }","lastModifiedDate":"2022-03-27"},{"lineNumber":100,"author":{"gitId":"cwq2326"},"content":"}","lastModifiedDate":"2022-03-26"}],"authorContributionMap":{"cwq2326":100}},{"path":"src/main/java/seedu/address/logic/commands/ClearCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2016-09-22"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2017-05-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-15"},{"lineNumber":5,"author":{"gitId":"cwq2326"},"content":"import seedu.address.logic.commands.exceptions.CommandException;","lastModifiedDate":"2022-02-28"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import seedu.address.model.AddressBook;","lastModifiedDate":"2022-03-08"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2018-08-08"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":9,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-24"},{"lineNumber":10,"author":{"gitId":"-"},"content":" * Clears the address book.","lastModifiedDate":"2016-08-24"},{"lineNumber":11,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-24"},{"lineNumber":12,"author":{"gitId":"-"},"content":"public class ClearCommand extends Command {","lastModifiedDate":"2018-04-19"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":14,"author":{"gitId":"-"},"content":"    public static final String COMMAND_WORD \u003d \"clear\";","lastModifiedDate":"2016-08-24"},{"lineNumber":15,"author":{"gitId":"cwq2326"},"content":"    public static final String MESSAGE_SUCCESS \u003d \"Tracey has been cleared!\";","lastModifiedDate":"2022-02-28"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-24"},{"lineNumber":18,"author":{"gitId":"cwq2326"},"content":"    public CommandResult execute(Model model) throws CommandException {","lastModifiedDate":"2022-02-28"},{"lineNumber":19,"author":{"gitId":"-"},"content":"        requireNonNull(model);","lastModifiedDate":"2017-05-15"},{"lineNumber":20,"author":{"gitId":"-"},"content":"        model.setAddressBook(new AddressBook());","lastModifiedDate":"2022-03-08"},{"lineNumber":21,"author":{"gitId":"-"},"content":"        return new CommandResult(MESSAGE_SUCCESS);","lastModifiedDate":"2016-08-24"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":23,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-24"}],"authorContributionMap":{"cwq2326":3,"-":20}},{"path":"src/main/java/seedu/address/logic/commands/Command.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2016-09-22"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.exceptions.CommandException;","lastModifiedDate":"2017-02-05"},{"lineNumber":4,"author":{"gitId":"kevinkuo0320"},"content":"import seedu.address.logic.parser.exceptions.ParseException;","lastModifiedDate":"2022-04-01"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2016-09-25"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":7,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-24"},{"lineNumber":8,"author":{"gitId":"-"},"content":" * Represents a command with hidden internal logic and the ability to be executed.","lastModifiedDate":"2016-08-24"},{"lineNumber":9,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-24"},{"lineNumber":10,"author":{"gitId":"-"},"content":"public abstract class Command {","lastModifiedDate":"2016-08-24"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-24"},{"lineNumber":13,"author":{"gitId":"-"},"content":"     * Executes the command and returns the result message.","lastModifiedDate":"2016-08-24"},{"lineNumber":14,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2016-08-24"},{"lineNumber":15,"author":{"gitId":"-"},"content":"     * @param model {@code Model} which the command should operate on.","lastModifiedDate":"2018-08-08"},{"lineNumber":16,"author":{"gitId":"-"},"content":"     * @return feedback message of the operation result for display","lastModifiedDate":"2016-08-24"},{"lineNumber":17,"author":{"gitId":"-"},"content":"     * @throws CommandException If an error occurs during command execution.","lastModifiedDate":"2017-02-05"},{"lineNumber":18,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-24"},{"lineNumber":19,"author":{"gitId":"kevinkuo0320"},"content":"    public abstract CommandResult execute(Model model) throws CommandException, ParseException;","lastModifiedDate":"2022-04-01"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":21,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-24"}],"authorContributionMap":{"kevinkuo0320":2,"-":19}},{"path":"src/main/java/seedu/address/logic/commands/CommandResult.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2016-09-22"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2017-05-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.util.Objects;","lastModifiedDate":"2018-12-09"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":7,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-24"},{"lineNumber":8,"author":{"gitId":"-"},"content":" * Represents the result of a command execution.","lastModifiedDate":"2016-08-24"},{"lineNumber":9,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-24"},{"lineNumber":10,"author":{"gitId":"-"},"content":"public class CommandResult {","lastModifiedDate":"2016-08-24"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-28"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    private final String feedbackToUser;","lastModifiedDate":"2018-12-09"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":14,"author":{"gitId":"cwq2326"},"content":"    /** Result display window should be resized. */","lastModifiedDate":"2022-03-31"},{"lineNumber":15,"author":{"gitId":"cwq2326"},"content":"    private final boolean resizeWindow;","lastModifiedDate":"2022-03-31"},{"lineNumber":16,"author":{"gitId":"cwq2326"},"content":"","lastModifiedDate":"2022-03-31"},{"lineNumber":17,"author":{"gitId":"cwq2326"},"content":"    /** Pie Chart should be shown to the user. */","lastModifiedDate":"2022-03-22"},{"lineNumber":18,"author":{"gitId":"cwq2326"},"content":"    private final boolean summarisePieChart;","lastModifiedDate":"2022-03-22"},{"lineNumber":19,"author":{"gitId":"cwq2326"},"content":"","lastModifiedDate":"2022-03-22"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    /** Help information should be shown to the user. */","lastModifiedDate":"2018-12-09"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    private final boolean showHelp;","lastModifiedDate":"2018-12-09"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    /** The application should exit. */","lastModifiedDate":"2018-12-09"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    private final boolean exit;","lastModifiedDate":"2018-12-09"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":26,"author":{"gitId":"DannyDakota"},"content":"    /** Email information should be shown to the user. */","lastModifiedDate":"2022-03-31"},{"lineNumber":27,"author":{"gitId":"DannyDakota"},"content":"    private final boolean showEmail;","lastModifiedDate":"2022-03-31"},{"lineNumber":28,"author":{"gitId":"DannyDakota"},"content":"","lastModifiedDate":"2022-03-31"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-12-09"},{"lineNumber":30,"author":{"gitId":"-"},"content":"     * Constructs a {@code CommandResult} with the specified fields.","lastModifiedDate":"2018-12-09"},{"lineNumber":31,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-12-09"},{"lineNumber":32,"author":{"gitId":"DannyDakota"},"content":"    public CommandResult(String feedbackToUser, boolean showHelp, boolean exit, boolean summarisePieChart,","lastModifiedDate":"2022-03-31"},{"lineNumber":33,"author":{"gitId":"DannyDakota"},"content":"                         boolean showEmail, boolean resizeWindow) {","lastModifiedDate":"2022-03-31"},{"lineNumber":34,"author":{"gitId":"-"},"content":"        this.feedbackToUser \u003d requireNonNull(feedbackToUser);","lastModifiedDate":"2017-05-15"},{"lineNumber":35,"author":{"gitId":"cwq2326"},"content":"        this.resizeWindow \u003d resizeWindow;","lastModifiedDate":"2022-03-31"},{"lineNumber":36,"author":{"gitId":"cwq2326"},"content":"        this.summarisePieChart \u003d summarisePieChart;","lastModifiedDate":"2022-03-22"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        this.showHelp \u003d showHelp;","lastModifiedDate":"2018-12-09"},{"lineNumber":38,"author":{"gitId":"DannyDakota"},"content":"        this.showEmail \u003d showEmail;","lastModifiedDate":"2022-03-31"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        this.exit \u003d exit;","lastModifiedDate":"2018-12-09"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-12-09"},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-12-09"},{"lineNumber":43,"author":{"gitId":"-"},"content":"     * Constructs a {@code CommandResult} with the specified {@code feedbackToUser},","lastModifiedDate":"2018-12-09"},{"lineNumber":44,"author":{"gitId":"-"},"content":"     * and other fields set to their default value.","lastModifiedDate":"2018-12-09"},{"lineNumber":45,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-12-09"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    public CommandResult(String feedbackToUser) {","lastModifiedDate":"2018-12-09"},{"lineNumber":47,"author":{"gitId":"DannyDakota"},"content":"        this(feedbackToUser, false, false, false, false, false);","lastModifiedDate":"2022-03-31"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":49,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    public String getFeedbackToUser() {","lastModifiedDate":"2018-12-09"},{"lineNumber":51,"author":{"gitId":"-"},"content":"        return feedbackToUser;","lastModifiedDate":"2018-12-09"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-12-09"},{"lineNumber":53,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":54,"author":{"gitId":"cwq2326"},"content":"    public boolean isSummarise() {","lastModifiedDate":"2022-03-22"},{"lineNumber":55,"author":{"gitId":"cwq2326"},"content":"        return summarisePieChart;","lastModifiedDate":"2022-03-22"},{"lineNumber":56,"author":{"gitId":"cwq2326"},"content":"    }","lastModifiedDate":"2022-03-22"},{"lineNumber":57,"author":{"gitId":"cwq2326"},"content":"","lastModifiedDate":"2022-03-22"},{"lineNumber":58,"author":{"gitId":"cwq2326"},"content":"    public boolean isResize() {","lastModifiedDate":"2022-03-31"},{"lineNumber":59,"author":{"gitId":"cwq2326"},"content":"        return resizeWindow;","lastModifiedDate":"2022-03-31"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-12-09"},{"lineNumber":61,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":62,"author":{"gitId":"DannyDakota"},"content":"    public boolean isShowEmail() {","lastModifiedDate":"2022-03-31"},{"lineNumber":63,"author":{"gitId":"DannyDakota"},"content":"        return showEmail;","lastModifiedDate":"2022-03-31"},{"lineNumber":64,"author":{"gitId":"DannyDakota"},"content":"    }","lastModifiedDate":"2022-03-31"},{"lineNumber":65,"author":{"gitId":"DannyDakota"},"content":"","lastModifiedDate":"2022-03-31"},{"lineNumber":66,"author":{"gitId":"-"},"content":"    public boolean isShowHelp() {","lastModifiedDate":"2018-12-09"},{"lineNumber":67,"author":{"gitId":"-"},"content":"        return showHelp;","lastModifiedDate":"2018-12-09"},{"lineNumber":68,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-12-09"},{"lineNumber":69,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":70,"author":{"gitId":"-"},"content":"    public boolean isExit() {","lastModifiedDate":"2018-12-09"},{"lineNumber":71,"author":{"gitId":"-"},"content":"        return exit;","lastModifiedDate":"2018-12-09"},{"lineNumber":72,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-12-09"},{"lineNumber":73,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":74,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2018-12-09"},{"lineNumber":75,"author":{"gitId":"-"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2018-12-09"},{"lineNumber":76,"author":{"gitId":"-"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2018-12-09"},{"lineNumber":77,"author":{"gitId":"-"},"content":"            return true;","lastModifiedDate":"2018-12-09"},{"lineNumber":78,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-12-09"},{"lineNumber":79,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":80,"author":{"gitId":"-"},"content":"        // instanceof handles nulls","lastModifiedDate":"2018-12-09"},{"lineNumber":81,"author":{"gitId":"-"},"content":"        if (!(other instanceof CommandResult)) {","lastModifiedDate":"2018-12-09"},{"lineNumber":82,"author":{"gitId":"-"},"content":"            return false;","lastModifiedDate":"2018-12-09"},{"lineNumber":83,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-12-09"},{"lineNumber":84,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":85,"author":{"gitId":"-"},"content":"        CommandResult otherCommandResult \u003d (CommandResult) other;","lastModifiedDate":"2018-12-09"},{"lineNumber":86,"author":{"gitId":"-"},"content":"        return feedbackToUser.equals(otherCommandResult.feedbackToUser)","lastModifiedDate":"2018-12-09"},{"lineNumber":87,"author":{"gitId":"-"},"content":"                \u0026\u0026 showHelp \u003d\u003d otherCommandResult.showHelp","lastModifiedDate":"2018-12-09"},{"lineNumber":88,"author":{"gitId":"DannyDakota"},"content":"                \u0026\u0026 exit \u003d\u003d otherCommandResult.exit","lastModifiedDate":"2022-03-31"},{"lineNumber":89,"author":{"gitId":"DannyDakota"},"content":"                \u0026\u0026 summarisePieChart \u003d\u003d otherCommandResult.summarisePieChart","lastModifiedDate":"2022-03-31"},{"lineNumber":90,"author":{"gitId":"DannyDakota"},"content":"                \u0026\u0026 showEmail \u003d\u003d otherCommandResult.showEmail","lastModifiedDate":"2022-03-31"},{"lineNumber":91,"author":{"gitId":"DannyDakota"},"content":"                \u0026\u0026 resizeWindow \u003d\u003d otherCommandResult.resizeWindow;","lastModifiedDate":"2022-03-31"},{"lineNumber":92,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-12-09"},{"lineNumber":93,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":94,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2018-12-09"},{"lineNumber":95,"author":{"gitId":"-"},"content":"    public int hashCode() {","lastModifiedDate":"2018-12-09"},{"lineNumber":96,"author":{"gitId":"DannyDakota"},"content":"        return Objects.hash(feedbackToUser, showHelp, exit, summarisePieChart, showEmail, resizeWindow);","lastModifiedDate":"2022-03-31"},{"lineNumber":97,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-12-09"},{"lineNumber":98,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":99,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-24"}],"authorContributionMap":{"DannyDakota":16,"cwq2326":14,"-":69}},{"path":"src/main/java/seedu/address/logic/commands/EditCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2016-12-26"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2017-05-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_ADDRESS;","lastModifiedDate":"2017-05-09"},{"lineNumber":5,"author":{"gitId":"DannyDakota"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_BLOCK;","lastModifiedDate":"2022-03-17"},{"lineNumber":6,"author":{"gitId":"DannyDakota"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_COVID_STATUS;","lastModifiedDate":"2022-03-08"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_EMAIL;","lastModifiedDate":"2017-05-09"},{"lineNumber":8,"author":{"gitId":"DannyDakota"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_FACULTY;","lastModifiedDate":"2022-03-08"},{"lineNumber":9,"author":{"gitId":"DannyDakota"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_MATRICULATION_NUMBER;","lastModifiedDate":"2022-03-08"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_NAME;","lastModifiedDate":"2017-06-06"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_PHONE;","lastModifiedDate":"2017-05-09"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_TAG;","lastModifiedDate":"2017-05-09"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import static seedu.address.model.Model.PREDICATE_SHOW_ALL_PERSONS;","lastModifiedDate":"2017-08-05"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-09"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import java.util.Collections;","lastModifiedDate":"2018-01-11"},{"lineNumber":16,"author":{"gitId":"-"},"content":"import java.util.HashSet;","lastModifiedDate":"2018-01-11"},{"lineNumber":17,"author":{"gitId":"-"},"content":"import java.util.List;","lastModifiedDate":"2016-12-26"},{"lineNumber":18,"author":{"gitId":"-"},"content":"import java.util.Optional;","lastModifiedDate":"2016-12-26"},{"lineNumber":19,"author":{"gitId":"-"},"content":"import java.util.Set;","lastModifiedDate":"2017-03-07"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":21,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.Messages;","lastModifiedDate":"2016-12-26"},{"lineNumber":22,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.index.Index;","lastModifiedDate":"2017-05-25"},{"lineNumber":23,"author":{"gitId":"-"},"content":"import seedu.address.commons.util.CollectionUtil;","lastModifiedDate":"2016-12-26"},{"lineNumber":24,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.exceptions.CommandException;","lastModifiedDate":"2017-02-05"},{"lineNumber":25,"author":{"gitId":"-"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2018-08-08"},{"lineNumber":26,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Address;","lastModifiedDate":"2016-12-26"},{"lineNumber":27,"author":{"gitId":"DannyDakota"},"content":"import seedu.address.model.person.Block;","lastModifiedDate":"2022-03-17"},{"lineNumber":28,"author":{"gitId":"cwq2326"},"content":"import seedu.address.model.person.CovidStatus;","lastModifiedDate":"2022-02-28"},{"lineNumber":29,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Email;","lastModifiedDate":"2016-12-26"},{"lineNumber":30,"author":{"gitId":"cwq2326"},"content":"import seedu.address.model.person.Faculty;","lastModifiedDate":"2022-02-28"},{"lineNumber":31,"author":{"gitId":"cwq2326"},"content":"import seedu.address.model.person.MatriculationNumber;","lastModifiedDate":"2022-02-28"},{"lineNumber":32,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Name;","lastModifiedDate":"2016-12-26"},{"lineNumber":33,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2016-12-26"},{"lineNumber":34,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Phone;","lastModifiedDate":"2016-12-26"},{"lineNumber":35,"author":{"gitId":"-"},"content":"import seedu.address.model.tag.Tag;","lastModifiedDate":"2017-03-07"},{"lineNumber":36,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":37,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-12-26"},{"lineNumber":38,"author":{"gitId":"-"},"content":" * Edits the details of an existing person in the address book.","lastModifiedDate":"2016-12-26"},{"lineNumber":39,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-12-26"},{"lineNumber":40,"author":{"gitId":"-"},"content":"public class EditCommand extends Command {","lastModifiedDate":"2018-04-19"},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    public static final String COMMAND_WORD \u003d \"edit\";","lastModifiedDate":"2016-12-26"},{"lineNumber":43,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_USAGE \u003d COMMAND_WORD + \": Edits the details of the person identified \"","lastModifiedDate":"2016-12-26"},{"lineNumber":45,"author":{"gitId":"-"},"content":"            + \"by the index number used in the displayed person list. \"","lastModifiedDate":"2018-04-01"},{"lineNumber":46,"author":{"gitId":"-"},"content":"            + \"Existing values will be overwritten by the input values.\\n\"","lastModifiedDate":"2016-12-26"},{"lineNumber":47,"author":{"gitId":"-"},"content":"            + \"Parameters: INDEX (must be a positive integer) \"","lastModifiedDate":"2017-06-06"},{"lineNumber":48,"author":{"gitId":"-"},"content":"            + \"[\" + PREFIX_NAME + \"NAME] \"","lastModifiedDate":"2017-06-06"},{"lineNumber":49,"author":{"gitId":"DannyDakota"},"content":"            + \"[\" + PREFIX_BLOCK + \"BLOCK] \"","lastModifiedDate":"2022-03-17"},{"lineNumber":50,"author":{"gitId":"DannyDakota"},"content":"            + \"[\" + PREFIX_FACULTY + \"FACULTY]\"","lastModifiedDate":"2022-03-08"},{"lineNumber":51,"author":{"gitId":"-"},"content":"            + \"[\" + PREFIX_PHONE + \"PHONE] \"","lastModifiedDate":"2017-05-09"},{"lineNumber":52,"author":{"gitId":"-"},"content":"            + \"[\" + PREFIX_EMAIL + \"EMAIL] \"","lastModifiedDate":"2017-05-09"},{"lineNumber":53,"author":{"gitId":"-"},"content":"            + \"[\" + PREFIX_ADDRESS + \"ADDRESS] \"","lastModifiedDate":"2017-05-09"},{"lineNumber":54,"author":{"gitId":"DannyDakota"},"content":"            + \"[\" + PREFIX_MATRICULATION_NUMBER + \"MATRICULATIONNUMBER] \"","lastModifiedDate":"2022-03-08"},{"lineNumber":55,"author":{"gitId":"DannyDakota"},"content":"            + \"[\" + PREFIX_COVID_STATUS + \"COVIDSTATUS] \"","lastModifiedDate":"2022-03-08"},{"lineNumber":56,"author":{"gitId":"-"},"content":"            + \"[\" + PREFIX_TAG + \"TAG]...\\n\"","lastModifiedDate":"2017-05-09"},{"lineNumber":57,"author":{"gitId":"-"},"content":"            + \"Example: \" + COMMAND_WORD + \" 1 \"","lastModifiedDate":"2017-05-09"},{"lineNumber":58,"author":{"gitId":"-"},"content":"            + PREFIX_PHONE + \"91234567 \"","lastModifiedDate":"2017-05-09"},{"lineNumber":59,"author":{"gitId":"-"},"content":"            + PREFIX_EMAIL + \"johndoe@example.com\";","lastModifiedDate":"2017-05-09"},{"lineNumber":60,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":61,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_EDIT_PERSON_SUCCESS \u003d \"Edited Person: %1$s\";","lastModifiedDate":"2016-12-26"},{"lineNumber":62,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_NOT_EDITED \u003d \"At least one field to edit must be provided.\";","lastModifiedDate":"2016-12-26"},{"lineNumber":63,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_DUPLICATE_PERSON \u003d \"This person already exists in the address book.\";","lastModifiedDate":"2016-12-26"},{"lineNumber":64,"author":{"gitId":"kevinkuo0320"},"content":"    public static final String MESSAGE_SAME_INPUT \u003d \"The edited value is the same as the current one\";","lastModifiedDate":"2022-03-17"},{"lineNumber":65,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":66,"author":{"gitId":"-"},"content":"    private final Index index;","lastModifiedDate":"2017-05-25"},{"lineNumber":67,"author":{"gitId":"-"},"content":"    private final EditPersonDescriptor editPersonDescriptor;","lastModifiedDate":"2016-12-26"},{"lineNumber":68,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":69,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-12-26"},{"lineNumber":70,"author":{"gitId":"-"},"content":"     * @param index of the person in the filtered person list to edit","lastModifiedDate":"2017-05-25"},{"lineNumber":71,"author":{"gitId":"-"},"content":"     * @param editPersonDescriptor details to edit the person with","lastModifiedDate":"2016-12-26"},{"lineNumber":72,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-12-26"},{"lineNumber":73,"author":{"gitId":"-"},"content":"    public EditCommand(Index index, EditPersonDescriptor editPersonDescriptor) {","lastModifiedDate":"2017-05-25"},{"lineNumber":74,"author":{"gitId":"-"},"content":"        requireNonNull(index);","lastModifiedDate":"2017-05-25"},{"lineNumber":75,"author":{"gitId":"-"},"content":"        requireNonNull(editPersonDescriptor);","lastModifiedDate":"2017-05-15"},{"lineNumber":76,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":77,"author":{"gitId":"-"},"content":"        this.index \u003d index;","lastModifiedDate":"2017-05-25"},{"lineNumber":78,"author":{"gitId":"-"},"content":"        this.editPersonDescriptor \u003d new EditPersonDescriptor(editPersonDescriptor);","lastModifiedDate":"2016-12-26"},{"lineNumber":79,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-26"},{"lineNumber":80,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":81,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-12-26"},{"lineNumber":82,"author":{"gitId":"-"},"content":"    public CommandResult execute(Model model) throws CommandException {","lastModifiedDate":"2019-01-25"},{"lineNumber":83,"author":{"gitId":"-"},"content":"        requireNonNull(model);","lastModifiedDate":"2018-08-08"},{"lineNumber":84,"author":{"gitId":"-"},"content":"        List\u003cPerson\u003e lastShownList \u003d model.getFilteredPersonList();","lastModifiedDate":"2018-04-19"},{"lineNumber":85,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":86,"author":{"gitId":"-"},"content":"        if (index.getZeroBased() \u003e\u003d lastShownList.size()) {","lastModifiedDate":"2018-04-19"},{"lineNumber":87,"author":{"gitId":"-"},"content":"            throw new CommandException(Messages.MESSAGE_INVALID_PERSON_DISPLAYED_INDEX);","lastModifiedDate":"2018-04-19"},{"lineNumber":88,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-04-19"},{"lineNumber":89,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":90,"author":{"gitId":"-"},"content":"        Person personToEdit \u003d lastShownList.get(index.getZeroBased());","lastModifiedDate":"2018-04-19"},{"lineNumber":91,"author":{"gitId":"-"},"content":"        Person editedPerson \u003d createEditedPerson(personToEdit, editPersonDescriptor);","lastModifiedDate":"2018-04-19"},{"lineNumber":92,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":93,"author":{"gitId":"-"},"content":"        if (!personToEdit.isSamePerson(editedPerson) \u0026\u0026 model.hasPerson(editedPerson)) {","lastModifiedDate":"2018-08-07"},{"lineNumber":94,"author":{"gitId":"-"},"content":"            throw new CommandException(MESSAGE_DUPLICATE_PERSON);","lastModifiedDate":"2018-08-07"},{"lineNumber":95,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-08-07"},{"lineNumber":96,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-07"},{"lineNumber":97,"author":{"gitId":"-"},"content":"        model.setPerson(personToEdit, editedPerson);","lastModifiedDate":"2018-08-17"},{"lineNumber":98,"author":{"gitId":"-"},"content":"        model.updateFilteredPersonList(PREDICATE_SHOW_ALL_PERSONS);","lastModifiedDate":"2017-08-05"},{"lineNumber":99,"author":{"gitId":"-"},"content":"        return new CommandResult(String.format(MESSAGE_EDIT_PERSON_SUCCESS, editedPerson));","lastModifiedDate":"2017-08-05"},{"lineNumber":100,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-26"},{"lineNumber":101,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":102,"author":{"gitId":"kevinkuo0320"},"content":"    private static \u003cT\u003e T editChecker(Optional\u003cT\u003e updatedOptionalField, T prevField) throws","lastModifiedDate":"2022-03-17"},{"lineNumber":103,"author":{"gitId":"kevinkuo0320"},"content":"            CommandException {","lastModifiedDate":"2022-03-17"},{"lineNumber":104,"author":{"gitId":"kevinkuo0320"},"content":"        T updatedField \u003d updatedOptionalField.orElse(prevField);","lastModifiedDate":"2022-03-17"},{"lineNumber":105,"author":{"gitId":"kevinkuo0320"},"content":"        if (updatedOptionalField.isPresent() \u0026\u0026 updatedField.equals(prevField)) {","lastModifiedDate":"2022-03-17"},{"lineNumber":106,"author":{"gitId":"kevinkuo0320"},"content":"            throw new CommandException(MESSAGE_SAME_INPUT);","lastModifiedDate":"2022-03-17"},{"lineNumber":107,"author":{"gitId":"kevinkuo0320"},"content":"        }","lastModifiedDate":"2022-03-17"},{"lineNumber":108,"author":{"gitId":"kevinkuo0320"},"content":"        return updatedField;","lastModifiedDate":"2022-03-17"},{"lineNumber":109,"author":{"gitId":"kevinkuo0320"},"content":"    }","lastModifiedDate":"2022-03-17"},{"lineNumber":110,"author":{"gitId":"kevinkuo0320"},"content":"","lastModifiedDate":"2022-03-17"},{"lineNumber":111,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-12-26"},{"lineNumber":112,"author":{"gitId":"-"},"content":"     * Creates and returns a {@code Person} with the details of {@code personToEdit}","lastModifiedDate":"2016-12-26"},{"lineNumber":113,"author":{"gitId":"-"},"content":"     * edited with {@code editPersonDescriptor}.","lastModifiedDate":"2016-12-26"},{"lineNumber":114,"author":{"gitId":"DannyDakota"},"content":"     * @throws CommandException if the edited status is same as the current status of the student","lastModifiedDate":"2022-03-18"},{"lineNumber":115,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-12-26"},{"lineNumber":116,"author":{"gitId":"kevinkuo0320"},"content":"    private static Person createEditedPerson(Person personToEdit, EditPersonDescriptor editPersonDescriptor) throws","lastModifiedDate":"2022-03-15"},{"lineNumber":117,"author":{"gitId":"kevinkuo0320"},"content":"            CommandException {","lastModifiedDate":"2022-03-15"},{"lineNumber":118,"author":{"gitId":"-"},"content":"        assert personToEdit !\u003d null;","lastModifiedDate":"2016-12-26"},{"lineNumber":119,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":120,"author":{"gitId":"DannyDakota"},"content":"        Name updatedName \u003d editChecker(editPersonDescriptor.getName(), personToEdit.getName());","lastModifiedDate":"2022-03-18"},{"lineNumber":121,"author":{"gitId":"DannyDakota"},"content":"        Block updatedBlock \u003d editChecker(editPersonDescriptor.getBlock(), personToEdit.getBlock());","lastModifiedDate":"2022-03-18"},{"lineNumber":122,"author":{"gitId":"DannyDakota"},"content":"        Faculty updatedFaculty \u003d editChecker(editPersonDescriptor.getFaculty(), personToEdit.getFaculty());","lastModifiedDate":"2022-03-18"},{"lineNumber":123,"author":{"gitId":"DannyDakota"},"content":"        Phone updatedPhone \u003d editChecker(editPersonDescriptor.getPhone(), personToEdit.getPhone());","lastModifiedDate":"2022-03-18"},{"lineNumber":124,"author":{"gitId":"DannyDakota"},"content":"        Email updatedEmail \u003d editChecker(editPersonDescriptor.getEmail(), personToEdit.getEmail());","lastModifiedDate":"2022-03-18"},{"lineNumber":125,"author":{"gitId":"DannyDakota"},"content":"        Address updatedAddress \u003d editChecker(editPersonDescriptor.getAddress(), personToEdit.getAddress());","lastModifiedDate":"2022-03-18"},{"lineNumber":126,"author":{"gitId":"DannyDakota"},"content":"        MatriculationNumber updatedMatriculationNumber \u003d editChecker(","lastModifiedDate":"2022-03-18"},{"lineNumber":127,"author":{"gitId":"DannyDakota"},"content":"                editPersonDescriptor.getMatriculationNumber(), personToEdit.getMatriculationNumber());","lastModifiedDate":"2022-03-18"},{"lineNumber":128,"author":{"gitId":"DannyDakota"},"content":"        CovidStatus updatedCovidStatus \u003d editChecker(editPersonDescriptor.getCovidStatus(),","lastModifiedDate":"2022-03-18"},{"lineNumber":129,"author":{"gitId":"DannyDakota"},"content":"                personToEdit.getStatus());","lastModifiedDate":"2022-03-18"},{"lineNumber":130,"author":{"gitId":"kevinkuo0320"},"content":"","lastModifiedDate":"2022-03-31"},{"lineNumber":131,"author":{"gitId":"-"},"content":"        Set\u003cTag\u003e updatedTags \u003d editPersonDescriptor.getTags().orElse(personToEdit.getTags());","lastModifiedDate":"2017-06-21"},{"lineNumber":132,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":133,"author":{"gitId":"DannyDakota"},"content":"        return new Person(updatedName, updatedBlock, updatedFaculty, updatedPhone, updatedEmail, updatedAddress,","lastModifiedDate":"2022-03-17"},{"lineNumber":134,"author":{"gitId":"DannyDakota"},"content":"                updatedMatriculationNumber, updatedCovidStatus, updatedTags);","lastModifiedDate":"2022-03-08"},{"lineNumber":135,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-26"},{"lineNumber":136,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":137,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2017-05-08"},{"lineNumber":138,"author":{"gitId":"-"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2017-05-08"},{"lineNumber":139,"author":{"gitId":"-"},"content":"        // short circuit if same object","lastModifiedDate":"2017-05-08"},{"lineNumber":140,"author":{"gitId":"-"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2017-05-08"},{"lineNumber":141,"author":{"gitId":"-"},"content":"            return true;","lastModifiedDate":"2017-05-08"},{"lineNumber":142,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-08"},{"lineNumber":143,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-08"},{"lineNumber":144,"author":{"gitId":"-"},"content":"        // instanceof handles nulls","lastModifiedDate":"2017-05-08"},{"lineNumber":145,"author":{"gitId":"-"},"content":"        if (!(other instanceof EditCommand)) {","lastModifiedDate":"2017-05-08"},{"lineNumber":146,"author":{"gitId":"-"},"content":"            return false;","lastModifiedDate":"2017-05-08"},{"lineNumber":147,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-08"},{"lineNumber":148,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-08"},{"lineNumber":149,"author":{"gitId":"-"},"content":"        // state check","lastModifiedDate":"2017-05-08"},{"lineNumber":150,"author":{"gitId":"-"},"content":"        EditCommand e \u003d (EditCommand) other;","lastModifiedDate":"2017-05-08"},{"lineNumber":151,"author":{"gitId":"-"},"content":"        return index.equals(e.index)","lastModifiedDate":"2017-05-25"},{"lineNumber":152,"author":{"gitId":"-"},"content":"                \u0026\u0026 editPersonDescriptor.equals(e.editPersonDescriptor);","lastModifiedDate":"2018-04-19"},{"lineNumber":153,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-08"},{"lineNumber":154,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-08"},{"lineNumber":155,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-12-26"},{"lineNumber":156,"author":{"gitId":"-"},"content":"     * Stores the details to edit the person with. Each non-empty field value will replace the","lastModifiedDate":"2016-12-26"},{"lineNumber":157,"author":{"gitId":"-"},"content":"     * corresponding field value of the person.","lastModifiedDate":"2016-12-26"},{"lineNumber":158,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-12-26"},{"lineNumber":159,"author":{"gitId":"-"},"content":"    public static class EditPersonDescriptor {","lastModifiedDate":"2016-12-26"},{"lineNumber":160,"author":{"gitId":"-"},"content":"        private Name name;","lastModifiedDate":"2017-06-21"},{"lineNumber":161,"author":{"gitId":"DannyDakota"},"content":"        private Block block;","lastModifiedDate":"2022-03-17"},{"lineNumber":162,"author":{"gitId":"DannyDakota"},"content":"        private Faculty faculty;","lastModifiedDate":"2022-03-08"},{"lineNumber":163,"author":{"gitId":"-"},"content":"        private Phone phone;","lastModifiedDate":"2017-06-21"},{"lineNumber":164,"author":{"gitId":"-"},"content":"        private Email email;","lastModifiedDate":"2017-06-21"},{"lineNumber":165,"author":{"gitId":"-"},"content":"        private Address address;","lastModifiedDate":"2017-06-21"},{"lineNumber":166,"author":{"gitId":"DannyDakota"},"content":"        private MatriculationNumber matriculationNumber;","lastModifiedDate":"2022-03-08"},{"lineNumber":167,"author":{"gitId":"DannyDakota"},"content":"        private CovidStatus covidStatus;","lastModifiedDate":"2022-03-08"},{"lineNumber":168,"author":{"gitId":"-"},"content":"        private Set\u003cTag\u003e tags;","lastModifiedDate":"2017-06-21"},{"lineNumber":169,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":170,"author":{"gitId":"-"},"content":"        public EditPersonDescriptor() {}","lastModifiedDate":"2016-12-26"},{"lineNumber":171,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":172,"author":{"gitId":"-"},"content":"        /**","lastModifiedDate":"2018-01-11"},{"lineNumber":173,"author":{"gitId":"-"},"content":"         * Copy constructor.","lastModifiedDate":"2018-01-11"},{"lineNumber":174,"author":{"gitId":"-"},"content":"         * A defensive copy of {@code tags} is used internally.","lastModifiedDate":"2018-01-11"},{"lineNumber":175,"author":{"gitId":"-"},"content":"         */","lastModifiedDate":"2018-01-11"},{"lineNumber":176,"author":{"gitId":"-"},"content":"        public EditPersonDescriptor(EditPersonDescriptor toCopy) {","lastModifiedDate":"2016-12-26"},{"lineNumber":177,"author":{"gitId":"-"},"content":"            setName(toCopy.name);","lastModifiedDate":"2018-01-15"},{"lineNumber":178,"author":{"gitId":"DannyDakota"},"content":"            setBlock(toCopy.block);","lastModifiedDate":"2022-03-17"},{"lineNumber":179,"author":{"gitId":"DannyDakota"},"content":"            setFaculty(toCopy.faculty);","lastModifiedDate":"2022-03-08"},{"lineNumber":180,"author":{"gitId":"-"},"content":"            setPhone(toCopy.phone);","lastModifiedDate":"2018-01-15"},{"lineNumber":181,"author":{"gitId":"-"},"content":"            setEmail(toCopy.email);","lastModifiedDate":"2018-01-15"},{"lineNumber":182,"author":{"gitId":"-"},"content":"            setAddress(toCopy.address);","lastModifiedDate":"2018-01-15"},{"lineNumber":183,"author":{"gitId":"DannyDakota"},"content":"            setMatriculationNumber(toCopy.matriculationNumber);","lastModifiedDate":"2022-03-08"},{"lineNumber":184,"author":{"gitId":"DannyDakota"},"content":"            setCovidStatus(toCopy.covidStatus);","lastModifiedDate":"2022-03-08"},{"lineNumber":185,"author":{"gitId":"-"},"content":"            setTags(toCopy.tags);","lastModifiedDate":"2018-01-11"},{"lineNumber":186,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-12-26"},{"lineNumber":187,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":188,"author":{"gitId":"-"},"content":"        /**","lastModifiedDate":"2016-12-26"},{"lineNumber":189,"author":{"gitId":"-"},"content":"         * Returns true if at least one field is edited.","lastModifiedDate":"2016-12-26"},{"lineNumber":190,"author":{"gitId":"-"},"content":"         */","lastModifiedDate":"2016-12-26"},{"lineNumber":191,"author":{"gitId":"-"},"content":"        public boolean isAnyFieldEdited() {","lastModifiedDate":"2016-12-26"},{"lineNumber":192,"author":{"gitId":"DannyDakota"},"content":"            return CollectionUtil.isAnyNonNull(name, block, faculty, phone, email, address,","lastModifiedDate":"2022-03-17"},{"lineNumber":193,"author":{"gitId":"DannyDakota"},"content":"                    matriculationNumber, covidStatus, tags);","lastModifiedDate":"2022-03-08"},{"lineNumber":194,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-12-26"},{"lineNumber":195,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":196,"author":{"gitId":"DannyDakota"},"content":"        /**","lastModifiedDate":"2022-03-29"},{"lineNumber":197,"author":{"gitId":"DannyDakota"},"content":"         * Sets {@code Name} to this object\u0027s {@code Name}.","lastModifiedDate":"2022-03-29"},{"lineNumber":198,"author":{"gitId":"DannyDakota"},"content":"         */","lastModifiedDate":"2022-03-29"},{"lineNumber":199,"author":{"gitId":"-"},"content":"        public void setName(Name name) {","lastModifiedDate":"2017-06-21"},{"lineNumber":200,"author":{"gitId":"-"},"content":"            this.name \u003d name;","lastModifiedDate":"2017-06-21"},{"lineNumber":201,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-12-26"},{"lineNumber":202,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":203,"author":{"gitId":"DannyDakota"},"content":"        /**","lastModifiedDate":"2022-03-29"},{"lineNumber":204,"author":{"gitId":"DannyDakota"},"content":"         * Returns an Optional object with may or may not contain a Name.","lastModifiedDate":"2022-03-29"},{"lineNumber":205,"author":{"gitId":"DannyDakota"},"content":"         * Returns {@code Optional#empty()} if {@code Name} is null.","lastModifiedDate":"2022-03-29"},{"lineNumber":206,"author":{"gitId":"DannyDakota"},"content":"         */","lastModifiedDate":"2022-03-29"},{"lineNumber":207,"author":{"gitId":"-"},"content":"        public Optional\u003cName\u003e getName() {","lastModifiedDate":"2016-12-26"},{"lineNumber":208,"author":{"gitId":"-"},"content":"            return Optional.ofNullable(name);","lastModifiedDate":"2017-06-21"},{"lineNumber":209,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-12-26"},{"lineNumber":210,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":211,"author":{"gitId":"DannyDakota"},"content":"        /**","lastModifiedDate":"2022-03-29"},{"lineNumber":212,"author":{"gitId":"DannyDakota"},"content":"         * Sets {@code Block} to this object\u0027s {@code Block}.","lastModifiedDate":"2022-03-29"},{"lineNumber":213,"author":{"gitId":"DannyDakota"},"content":"         */","lastModifiedDate":"2022-03-29"},{"lineNumber":214,"author":{"gitId":"DannyDakota"},"content":"        public void setBlock(Block block) {","lastModifiedDate":"2022-03-17"},{"lineNumber":215,"author":{"gitId":"DannyDakota"},"content":"            this.block \u003d block;","lastModifiedDate":"2022-03-17"},{"lineNumber":216,"author":{"gitId":"DannyDakota"},"content":"        }","lastModifiedDate":"2022-03-17"},{"lineNumber":217,"author":{"gitId":"DannyDakota"},"content":"","lastModifiedDate":"2022-03-17"},{"lineNumber":218,"author":{"gitId":"DannyDakota"},"content":"        /**","lastModifiedDate":"2022-03-29"},{"lineNumber":219,"author":{"gitId":"DannyDakota"},"content":"         * Returns an Optional object with may or may not contain a Block.","lastModifiedDate":"2022-03-29"},{"lineNumber":220,"author":{"gitId":"DannyDakota"},"content":"         * Returns {@code Optional#empty()} if {@code Block} is null.","lastModifiedDate":"2022-03-29"},{"lineNumber":221,"author":{"gitId":"DannyDakota"},"content":"         */","lastModifiedDate":"2022-03-29"},{"lineNumber":222,"author":{"gitId":"DannyDakota"},"content":"        public Optional\u003cBlock\u003e getBlock() {","lastModifiedDate":"2022-03-17"},{"lineNumber":223,"author":{"gitId":"DannyDakota"},"content":"            return Optional.ofNullable(block);","lastModifiedDate":"2022-03-17"},{"lineNumber":224,"author":{"gitId":"DannyDakota"},"content":"        }","lastModifiedDate":"2022-03-17"},{"lineNumber":225,"author":{"gitId":"DannyDakota"},"content":"","lastModifiedDate":"2022-03-17"},{"lineNumber":226,"author":{"gitId":"DannyDakota"},"content":"        /**","lastModifiedDate":"2022-03-29"},{"lineNumber":227,"author":{"gitId":"DannyDakota"},"content":"         * Sets {@code Faculty} to this object\u0027s {@code Faculty}.","lastModifiedDate":"2022-03-29"},{"lineNumber":228,"author":{"gitId":"DannyDakota"},"content":"         */","lastModifiedDate":"2022-03-29"},{"lineNumber":229,"author":{"gitId":"DannyDakota"},"content":"        public void setFaculty(Faculty faculty) {","lastModifiedDate":"2022-03-08"},{"lineNumber":230,"author":{"gitId":"DannyDakota"},"content":"            this.faculty \u003d faculty;","lastModifiedDate":"2022-03-08"},{"lineNumber":231,"author":{"gitId":"DannyDakota"},"content":"        }","lastModifiedDate":"2022-03-08"},{"lineNumber":232,"author":{"gitId":"DannyDakota"},"content":"","lastModifiedDate":"2022-03-08"},{"lineNumber":233,"author":{"gitId":"DannyDakota"},"content":"        /**","lastModifiedDate":"2022-03-29"},{"lineNumber":234,"author":{"gitId":"DannyDakota"},"content":"         * Returns an Optional object with may or may not contain a Faculty.","lastModifiedDate":"2022-03-29"},{"lineNumber":235,"author":{"gitId":"DannyDakota"},"content":"         * Returns {@code Optional#empty()} if {@code Faculty} is null.","lastModifiedDate":"2022-03-29"},{"lineNumber":236,"author":{"gitId":"DannyDakota"},"content":"         */","lastModifiedDate":"2022-03-29"},{"lineNumber":237,"author":{"gitId":"DannyDakota"},"content":"        public Optional\u003cFaculty\u003e getFaculty() {","lastModifiedDate":"2022-03-08"},{"lineNumber":238,"author":{"gitId":"DannyDakota"},"content":"            return Optional.ofNullable(faculty);","lastModifiedDate":"2022-03-08"},{"lineNumber":239,"author":{"gitId":"DannyDakota"},"content":"        }","lastModifiedDate":"2022-03-08"},{"lineNumber":240,"author":{"gitId":"DannyDakota"},"content":"","lastModifiedDate":"2022-03-08"},{"lineNumber":241,"author":{"gitId":"DannyDakota"},"content":"        /**","lastModifiedDate":"2022-03-29"},{"lineNumber":242,"author":{"gitId":"DannyDakota"},"content":"         * Sets {@code Phone} to this object\u0027s {@code Phone}.","lastModifiedDate":"2022-03-29"},{"lineNumber":243,"author":{"gitId":"DannyDakota"},"content":"         */","lastModifiedDate":"2022-03-29"},{"lineNumber":244,"author":{"gitId":"-"},"content":"        public void setPhone(Phone phone) {","lastModifiedDate":"2017-06-21"},{"lineNumber":245,"author":{"gitId":"-"},"content":"            this.phone \u003d phone;","lastModifiedDate":"2017-06-21"},{"lineNumber":246,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-12-26"},{"lineNumber":247,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":248,"author":{"gitId":"DannyDakota"},"content":"        /**","lastModifiedDate":"2022-03-29"},{"lineNumber":249,"author":{"gitId":"DannyDakota"},"content":"         * Returns an Optional object with may or may not contain a Phone.","lastModifiedDate":"2022-03-29"},{"lineNumber":250,"author":{"gitId":"DannyDakota"},"content":"         * Returns {@code Optional#empty()} if {@code Phone} is null.","lastModifiedDate":"2022-03-29"},{"lineNumber":251,"author":{"gitId":"DannyDakota"},"content":"         */","lastModifiedDate":"2022-03-29"},{"lineNumber":252,"author":{"gitId":"-"},"content":"        public Optional\u003cPhone\u003e getPhone() {","lastModifiedDate":"2016-12-26"},{"lineNumber":253,"author":{"gitId":"-"},"content":"            return Optional.ofNullable(phone);","lastModifiedDate":"2017-06-21"},{"lineNumber":254,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-12-26"},{"lineNumber":255,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":256,"author":{"gitId":"DannyDakota"},"content":"        /**","lastModifiedDate":"2022-03-29"},{"lineNumber":257,"author":{"gitId":"DannyDakota"},"content":"         * Sets {@code Email} to this object\u0027s {@code Email}.","lastModifiedDate":"2022-03-29"},{"lineNumber":258,"author":{"gitId":"DannyDakota"},"content":"         */","lastModifiedDate":"2022-03-29"},{"lineNumber":259,"author":{"gitId":"-"},"content":"        public void setEmail(Email email) {","lastModifiedDate":"2017-06-21"},{"lineNumber":260,"author":{"gitId":"-"},"content":"            this.email \u003d email;","lastModifiedDate":"2017-06-21"},{"lineNumber":261,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-12-26"},{"lineNumber":262,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":263,"author":{"gitId":"DannyDakota"},"content":"        /**","lastModifiedDate":"2022-03-29"},{"lineNumber":264,"author":{"gitId":"DannyDakota"},"content":"         * Returns an Optional object with may or may not contain an Email.","lastModifiedDate":"2022-03-29"},{"lineNumber":265,"author":{"gitId":"DannyDakota"},"content":"         * Returns {@code Optional#empty()} if {@code Email} is null.","lastModifiedDate":"2022-03-29"},{"lineNumber":266,"author":{"gitId":"DannyDakota"},"content":"         */","lastModifiedDate":"2022-03-29"},{"lineNumber":267,"author":{"gitId":"-"},"content":"        public Optional\u003cEmail\u003e getEmail() {","lastModifiedDate":"2016-12-26"},{"lineNumber":268,"author":{"gitId":"-"},"content":"            return Optional.ofNullable(email);","lastModifiedDate":"2017-06-21"},{"lineNumber":269,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-12-26"},{"lineNumber":270,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":271,"author":{"gitId":"DannyDakota"},"content":"        /**","lastModifiedDate":"2022-03-29"},{"lineNumber":272,"author":{"gitId":"DannyDakota"},"content":"         * Sets {@code Address} to this object\u0027s {@code Address}.","lastModifiedDate":"2022-03-29"},{"lineNumber":273,"author":{"gitId":"DannyDakota"},"content":"         */","lastModifiedDate":"2022-03-29"},{"lineNumber":274,"author":{"gitId":"-"},"content":"        public void setAddress(Address address) {","lastModifiedDate":"2017-06-21"},{"lineNumber":275,"author":{"gitId":"-"},"content":"            this.address \u003d address;","lastModifiedDate":"2017-06-21"},{"lineNumber":276,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-12-26"},{"lineNumber":277,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":278,"author":{"gitId":"DannyDakota"},"content":"        /**","lastModifiedDate":"2022-03-29"},{"lineNumber":279,"author":{"gitId":"DannyDakota"},"content":"         * Returns an Optional object with may or may not contain an Address.","lastModifiedDate":"2022-03-29"},{"lineNumber":280,"author":{"gitId":"DannyDakota"},"content":"         * Returns {@code Optional#empty()} if {@code Address} is null.","lastModifiedDate":"2022-03-29"},{"lineNumber":281,"author":{"gitId":"DannyDakota"},"content":"         */","lastModifiedDate":"2022-03-29"},{"lineNumber":282,"author":{"gitId":"-"},"content":"        public Optional\u003cAddress\u003e getAddress() {","lastModifiedDate":"2016-12-26"},{"lineNumber":283,"author":{"gitId":"-"},"content":"            return Optional.ofNullable(address);","lastModifiedDate":"2017-06-21"},{"lineNumber":284,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-12-26"},{"lineNumber":285,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":286,"author":{"gitId":"DannyDakota"},"content":"        /**","lastModifiedDate":"2022-03-29"},{"lineNumber":287,"author":{"gitId":"DannyDakota"},"content":"         * Sets {@code MatriculationNumber} to this object\u0027s {@code MatriculationNumber}.","lastModifiedDate":"2022-03-29"},{"lineNumber":288,"author":{"gitId":"DannyDakota"},"content":"         */","lastModifiedDate":"2022-03-29"},{"lineNumber":289,"author":{"gitId":"DannyDakota"},"content":"        public void setMatriculationNumber(MatriculationNumber matriculationNumber) {","lastModifiedDate":"2022-03-08"},{"lineNumber":290,"author":{"gitId":"DannyDakota"},"content":"            this.matriculationNumber \u003d matriculationNumber;","lastModifiedDate":"2022-03-08"},{"lineNumber":291,"author":{"gitId":"DannyDakota"},"content":"        }","lastModifiedDate":"2022-03-08"},{"lineNumber":292,"author":{"gitId":"DannyDakota"},"content":"","lastModifiedDate":"2022-03-08"},{"lineNumber":293,"author":{"gitId":"DannyDakota"},"content":"        /**","lastModifiedDate":"2022-03-29"},{"lineNumber":294,"author":{"gitId":"DannyDakota"},"content":"         * Returns an Optional object with may or may not contain a MatriculationNumber.","lastModifiedDate":"2022-03-29"},{"lineNumber":295,"author":{"gitId":"DannyDakota"},"content":"         * Returns {@code Optional#empty()} if {@code MatriculationNumber} is null.","lastModifiedDate":"2022-03-29"},{"lineNumber":296,"author":{"gitId":"DannyDakota"},"content":"         */","lastModifiedDate":"2022-03-29"},{"lineNumber":297,"author":{"gitId":"DannyDakota"},"content":"        public Optional\u003cMatriculationNumber\u003e getMatriculationNumber() {","lastModifiedDate":"2022-03-08"},{"lineNumber":298,"author":{"gitId":"DannyDakota"},"content":"            return Optional.ofNullable(matriculationNumber);","lastModifiedDate":"2022-03-08"},{"lineNumber":299,"author":{"gitId":"DannyDakota"},"content":"        }","lastModifiedDate":"2022-03-08"},{"lineNumber":300,"author":{"gitId":"DannyDakota"},"content":"","lastModifiedDate":"2022-03-08"},{"lineNumber":301,"author":{"gitId":"kevinkuo0320"},"content":"        /**","lastModifiedDate":"2022-03-15"},{"lineNumber":302,"author":{"gitId":"DannyDakota"},"content":"         * Sets {@code CovidStatus} to this object\u0027s {@code CovidStatus}.","lastModifiedDate":"2022-03-29"},{"lineNumber":303,"author":{"gitId":"kevinkuo0320"},"content":"         */","lastModifiedDate":"2022-03-15"},{"lineNumber":304,"author":{"gitId":"DannyDakota"},"content":"        public void setCovidStatus(CovidStatus covidStatus) {","lastModifiedDate":"2022-03-08"},{"lineNumber":305,"author":{"gitId":"DannyDakota"},"content":"            this.covidStatus \u003d covidStatus;","lastModifiedDate":"2022-03-08"},{"lineNumber":306,"author":{"gitId":"DannyDakota"},"content":"        }","lastModifiedDate":"2022-03-08"},{"lineNumber":307,"author":{"gitId":"DannyDakota"},"content":"","lastModifiedDate":"2022-03-08"},{"lineNumber":308,"author":{"gitId":"DannyDakota"},"content":"        /**","lastModifiedDate":"2022-03-29"},{"lineNumber":309,"author":{"gitId":"DannyDakota"},"content":"         * Returns an Optional object with may or may not contain a CovidStatus","lastModifiedDate":"2022-03-29"},{"lineNumber":310,"author":{"gitId":"DannyDakota"},"content":"         * Returns {@code Optional#empty()} if {@code CovidStatus} is null.","lastModifiedDate":"2022-03-29"},{"lineNumber":311,"author":{"gitId":"DannyDakota"},"content":"         */","lastModifiedDate":"2022-03-29"},{"lineNumber":312,"author":{"gitId":"DannyDakota"},"content":"        public Optional\u003cCovidStatus\u003e getCovidStatus() {","lastModifiedDate":"2022-03-08"},{"lineNumber":313,"author":{"gitId":"DannyDakota"},"content":"            return Optional.ofNullable(covidStatus);","lastModifiedDate":"2022-03-08"},{"lineNumber":314,"author":{"gitId":"DannyDakota"},"content":"        }","lastModifiedDate":"2022-03-08"},{"lineNumber":315,"author":{"gitId":"DannyDakota"},"content":"","lastModifiedDate":"2022-03-08"},{"lineNumber":316,"author":{"gitId":"-"},"content":"        /**","lastModifiedDate":"2018-01-11"},{"lineNumber":317,"author":{"gitId":"-"},"content":"         * Sets {@code tags} to this object\u0027s {@code tags}.","lastModifiedDate":"2018-01-11"},{"lineNumber":318,"author":{"gitId":"-"},"content":"         * A defensive copy of {@code tags} is used internally.","lastModifiedDate":"2018-01-11"},{"lineNumber":319,"author":{"gitId":"-"},"content":"         */","lastModifiedDate":"2018-01-11"},{"lineNumber":320,"author":{"gitId":"-"},"content":"        public void setTags(Set\u003cTag\u003e tags) {","lastModifiedDate":"2017-06-21"},{"lineNumber":321,"author":{"gitId":"-"},"content":"            this.tags \u003d (tags !\u003d null) ? new HashSet\u003c\u003e(tags) : null;","lastModifiedDate":"2018-01-11"},{"lineNumber":322,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-12-26"},{"lineNumber":323,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":324,"author":{"gitId":"-"},"content":"        /**","lastModifiedDate":"2018-01-11"},{"lineNumber":325,"author":{"gitId":"-"},"content":"         * Returns an unmodifiable tag set, which throws {@code UnsupportedOperationException}","lastModifiedDate":"2018-01-11"},{"lineNumber":326,"author":{"gitId":"-"},"content":"         * if modification is attempted.","lastModifiedDate":"2018-01-11"},{"lineNumber":327,"author":{"gitId":"-"},"content":"         * Returns {@code Optional#empty()} if {@code tags} is null.","lastModifiedDate":"2018-01-11"},{"lineNumber":328,"author":{"gitId":"-"},"content":"         */","lastModifiedDate":"2018-01-11"},{"lineNumber":329,"author":{"gitId":"-"},"content":"        public Optional\u003cSet\u003cTag\u003e\u003e getTags() {","lastModifiedDate":"2017-03-07"},{"lineNumber":330,"author":{"gitId":"-"},"content":"            return (tags !\u003d null) ? Optional.of(Collections.unmodifiableSet(tags)) : Optional.empty();","lastModifiedDate":"2018-01-11"},{"lineNumber":331,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-12-26"},{"lineNumber":332,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":333,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2017-05-05"},{"lineNumber":334,"author":{"gitId":"-"},"content":"        public boolean equals(Object other) {","lastModifiedDate":"2017-05-05"},{"lineNumber":335,"author":{"gitId":"-"},"content":"            // short circuit if same object","lastModifiedDate":"2017-05-05"},{"lineNumber":336,"author":{"gitId":"-"},"content":"            if (other \u003d\u003d this) {","lastModifiedDate":"2017-05-05"},{"lineNumber":337,"author":{"gitId":"-"},"content":"                return true;","lastModifiedDate":"2017-05-05"},{"lineNumber":338,"author":{"gitId":"-"},"content":"            }","lastModifiedDate":"2017-05-05"},{"lineNumber":339,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":340,"author":{"gitId":"-"},"content":"            // instanceof handles nulls","lastModifiedDate":"2017-05-05"},{"lineNumber":341,"author":{"gitId":"-"},"content":"            if (!(other instanceof EditPersonDescriptor)) {","lastModifiedDate":"2017-05-05"},{"lineNumber":342,"author":{"gitId":"-"},"content":"                return false;","lastModifiedDate":"2017-05-05"},{"lineNumber":343,"author":{"gitId":"-"},"content":"            }","lastModifiedDate":"2017-05-05"},{"lineNumber":344,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":345,"author":{"gitId":"-"},"content":"            // state check","lastModifiedDate":"2017-05-05"},{"lineNumber":346,"author":{"gitId":"-"},"content":"            EditPersonDescriptor e \u003d (EditPersonDescriptor) other;","lastModifiedDate":"2017-05-05"},{"lineNumber":347,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-21"},{"lineNumber":348,"author":{"gitId":"-"},"content":"            return getName().equals(e.getName())","lastModifiedDate":"2017-06-21"},{"lineNumber":349,"author":{"gitId":"DannyDakota"},"content":"                    \u0026\u0026 getBlock().equals(e.getBlock())","lastModifiedDate":"2022-03-17"},{"lineNumber":350,"author":{"gitId":"-"},"content":"                    \u0026\u0026 getPhone().equals(e.getPhone())","lastModifiedDate":"2017-06-21"},{"lineNumber":351,"author":{"gitId":"DannyDakota"},"content":"                    \u0026\u0026 getFaculty().equals(e.getFaculty())","lastModifiedDate":"2022-03-08"},{"lineNumber":352,"author":{"gitId":"-"},"content":"                    \u0026\u0026 getEmail().equals(e.getEmail())","lastModifiedDate":"2017-06-21"},{"lineNumber":353,"author":{"gitId":"-"},"content":"                    \u0026\u0026 getAddress().equals(e.getAddress())","lastModifiedDate":"2017-06-21"},{"lineNumber":354,"author":{"gitId":"DannyDakota"},"content":"                    \u0026\u0026 getMatriculationNumber().equals(e.getMatriculationNumber())","lastModifiedDate":"2022-03-08"},{"lineNumber":355,"author":{"gitId":"DannyDakota"},"content":"                    \u0026\u0026 getCovidStatus().equals(e.getCovidStatus())","lastModifiedDate":"2022-03-08"},{"lineNumber":356,"author":{"gitId":"-"},"content":"                    \u0026\u0026 getTags().equals(e.getTags());","lastModifiedDate":"2017-06-21"},{"lineNumber":357,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-05"},{"lineNumber":358,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-26"},{"lineNumber":359,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-12-26"}],"authorContributionMap":{"DannyDakota":122,"kevinkuo0320":15,"cwq2326":3,"-":219}},{"path":"src/main/java/seedu/address/logic/commands/EmailCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"DannyDakota"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2022-03-31"},{"lineNumber":2,"author":{"gitId":"DannyDakota"},"content":"","lastModifiedDate":"2022-03-31"},{"lineNumber":3,"author":{"gitId":"DannyDakota"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2022-03-31"},{"lineNumber":4,"author":{"gitId":"DannyDakota"},"content":"","lastModifiedDate":"2022-03-31"},{"lineNumber":5,"author":{"gitId":"DannyDakota"},"content":"/**","lastModifiedDate":"2022-03-31"},{"lineNumber":6,"author":{"gitId":"DannyDakota"},"content":" * Gather all the emails in current list and opens up email window.","lastModifiedDate":"2022-03-31"},{"lineNumber":7,"author":{"gitId":"DannyDakota"},"content":" */","lastModifiedDate":"2022-03-31"},{"lineNumber":8,"author":{"gitId":"DannyDakota"},"content":"public class EmailCommand extends Command {","lastModifiedDate":"2022-03-31"},{"lineNumber":9,"author":{"gitId":"DannyDakota"},"content":"","lastModifiedDate":"2022-03-31"},{"lineNumber":10,"author":{"gitId":"DannyDakota"},"content":"    public static final String COMMAND_WORD \u003d \"email\";","lastModifiedDate":"2022-03-31"},{"lineNumber":11,"author":{"gitId":"DannyDakota"},"content":"","lastModifiedDate":"2022-03-31"},{"lineNumber":12,"author":{"gitId":"DannyDakota"},"content":"    public static final String MESSAGE_USAGE \u003d COMMAND_WORD + \": Shows email list.\\n\"","lastModifiedDate":"2022-03-31"},{"lineNumber":13,"author":{"gitId":"DannyDakota"},"content":"            + \"Example: \" + COMMAND_WORD;","lastModifiedDate":"2022-03-31"},{"lineNumber":14,"author":{"gitId":"DannyDakota"},"content":"","lastModifiedDate":"2022-03-31"},{"lineNumber":15,"author":{"gitId":"DannyDakota"},"content":"    public static final String SHOWING_EMAIL_MESSAGE \u003d \"Opened email window.\";","lastModifiedDate":"2022-03-31"},{"lineNumber":16,"author":{"gitId":"DannyDakota"},"content":"","lastModifiedDate":"2022-03-31"},{"lineNumber":17,"author":{"gitId":"DannyDakota"},"content":"    @Override","lastModifiedDate":"2022-03-31"},{"lineNumber":18,"author":{"gitId":"DannyDakota"},"content":"    public CommandResult execute(Model model) {","lastModifiedDate":"2022-03-31"},{"lineNumber":19,"author":{"gitId":"DannyDakota"},"content":"        return new CommandResult(SHOWING_EMAIL_MESSAGE, false, false,","lastModifiedDate":"2022-03-31"},{"lineNumber":20,"author":{"gitId":"DannyDakota"},"content":"                false, true, false);","lastModifiedDate":"2022-03-31"},{"lineNumber":21,"author":{"gitId":"DannyDakota"},"content":"    }","lastModifiedDate":"2022-03-31"},{"lineNumber":22,"author":{"gitId":"DannyDakota"},"content":"}","lastModifiedDate":"2022-03-31"}],"authorContributionMap":{"DannyDakota":22}},{"path":"src/main/java/seedu/address/logic/commands/ExitCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2016-09-22"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2018-08-08"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":5,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-09-22"},{"lineNumber":6,"author":{"gitId":"-"},"content":" * Terminates the program.","lastModifiedDate":"2016-09-22"},{"lineNumber":7,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-09-22"},{"lineNumber":8,"author":{"gitId":"-"},"content":"public class ExitCommand extends Command {","lastModifiedDate":"2016-09-22"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":10,"author":{"gitId":"-"},"content":"    public static final String COMMAND_WORD \u003d \"exit\";","lastModifiedDate":"2016-09-22"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_EXIT_ACKNOWLEDGEMENT \u003d \"Exiting Address Book as requested ...\";","lastModifiedDate":"2016-09-22"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":14,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-22"},{"lineNumber":15,"author":{"gitId":"-"},"content":"    public CommandResult execute(Model model) {","lastModifiedDate":"2019-01-25"},{"lineNumber":16,"author":{"gitId":"DannyDakota"},"content":"        return new CommandResult(MESSAGE_EXIT_ACKNOWLEDGEMENT, false, true, false, false, false);","lastModifiedDate":"2022-03-31"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-22"},{"lineNumber":18,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-09-22"}],"authorContributionMap":{"DannyDakota":1,"-":17}},{"path":"src/main/java/seedu/address/logic/commands/FilterCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"tanchinkiat99"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2022-03-11"},{"lineNumber":2,"author":{"gitId":"tanchinkiat99"},"content":"","lastModifiedDate":"2022-03-11"},{"lineNumber":3,"author":{"gitId":"tanchinkiat99"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2022-03-11"},{"lineNumber":4,"author":{"gitId":"tanchinkiat99"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_BLOCK;","lastModifiedDate":"2022-03-23"},{"lineNumber":5,"author":{"gitId":"tanchinkiat99"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_COVID_STATUS;","lastModifiedDate":"2022-03-18"},{"lineNumber":6,"author":{"gitId":"tanchinkiat99"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_FACULTY;","lastModifiedDate":"2022-03-18"},{"lineNumber":7,"author":{"gitId":"tanchinkiat99"},"content":"","lastModifiedDate":"2022-03-18"},{"lineNumber":8,"author":{"gitId":"tanchinkiat99"},"content":"import java.util.ArrayList;","lastModifiedDate":"2022-03-18"},{"lineNumber":9,"author":{"gitId":"tanchinkiat99"},"content":"import java.util.function.Predicate;","lastModifiedDate":"2022-03-18"},{"lineNumber":10,"author":{"gitId":"tanchinkiat99"},"content":"","lastModifiedDate":"2022-03-11"},{"lineNumber":11,"author":{"gitId":"tanchinkiat99"},"content":"import seedu.address.logic.commands.exceptions.CommandException;","lastModifiedDate":"2022-03-30"},{"lineNumber":12,"author":{"gitId":"tanchinkiat99"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2022-03-11"},{"lineNumber":13,"author":{"gitId":"tanchinkiat99"},"content":"import seedu.address.model.person.Block;","lastModifiedDate":"2022-03-22"},{"lineNumber":14,"author":{"gitId":"tanchinkiat99"},"content":"import seedu.address.model.person.CovidStatus;","lastModifiedDate":"2022-03-11"},{"lineNumber":15,"author":{"gitId":"tanchinkiat99"},"content":"import seedu.address.model.person.Faculty;","lastModifiedDate":"2022-03-18"},{"lineNumber":16,"author":{"gitId":"tanchinkiat99"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2022-03-18"},{"lineNumber":17,"author":{"gitId":"tanchinkiat99"},"content":"","lastModifiedDate":"2022-03-11"},{"lineNumber":18,"author":{"gitId":"tanchinkiat99"},"content":"/**","lastModifiedDate":"2022-03-11"},{"lineNumber":19,"author":{"gitId":"tanchinkiat99"},"content":" * Lists all persons with a specified covid status and/or faculty in the address book.","lastModifiedDate":"2022-03-18"},{"lineNumber":20,"author":{"gitId":"tanchinkiat99"},"content":" */","lastModifiedDate":"2022-03-11"},{"lineNumber":21,"author":{"gitId":"tanchinkiat99"},"content":"public class FilterCommand extends Command {","lastModifiedDate":"2022-03-11"},{"lineNumber":22,"author":{"gitId":"tanchinkiat99"},"content":"","lastModifiedDate":"2022-03-11"},{"lineNumber":23,"author":{"gitId":"tanchinkiat99"},"content":"    public static final String COMMAND_WORD \u003d \"filter\";","lastModifiedDate":"2022-03-11"},{"lineNumber":24,"author":{"gitId":"tanchinkiat99"},"content":"","lastModifiedDate":"2022-03-11"},{"lineNumber":25,"author":{"gitId":"tanchinkiat99"},"content":"    public static final String MESSAGE_USAGE \u003d COMMAND_WORD + \": Finds all persons who are of the specified health \"","lastModifiedDate":"2022-03-11"},{"lineNumber":26,"author":{"gitId":"tanchinkiat99"},"content":"            + \"status, faculty, and/or block (case-insensitive) and displays them as a list with index numbers.\\n\"","lastModifiedDate":"2022-03-23"},{"lineNumber":27,"author":{"gitId":"tanchinkiat99"},"content":"            + \"Parameters: \" + PREFIX_COVID_STATUS + \"[COVID STATUS] \" + PREFIX_FACULTY + \"[FACULTY] \"","lastModifiedDate":"2022-03-18"},{"lineNumber":28,"author":{"gitId":"tanchinkiat99"},"content":"            + PREFIX_BLOCK + \"[BLOCK]\\n\"","lastModifiedDate":"2022-03-23"},{"lineNumber":29,"author":{"gitId":"tanchinkiat99"},"content":"            + \"Example: \" + COMMAND_WORD + \" \" + PREFIX_COVID_STATUS + \"positive \" + PREFIX_FACULTY + \"soc \"","lastModifiedDate":"2022-03-23"},{"lineNumber":30,"author":{"gitId":"tanchinkiat99"},"content":"            + PREFIX_BLOCK + \"e\";","lastModifiedDate":"2022-03-23"},{"lineNumber":31,"author":{"gitId":"tanchinkiat99"},"content":"","lastModifiedDate":"2022-03-11"},{"lineNumber":32,"author":{"gitId":"tanchinkiat99"},"content":"    public static final String MESSAGE_SUCCESS \u003d \"Listed all persons.\";","lastModifiedDate":"2022-03-30"},{"lineNumber":33,"author":{"gitId":"tanchinkiat99"},"content":"    public static final String MESSAGE_NO_VALID_FILTERS \u003d \"No valid filters added.\";","lastModifiedDate":"2022-03-30"},{"lineNumber":34,"author":{"gitId":"tanchinkiat99"},"content":"","lastModifiedDate":"2022-03-11"},{"lineNumber":35,"author":{"gitId":"tanchinkiat99"},"content":"    private FilterDescriptor filterDescriptor;","lastModifiedDate":"2022-03-18"},{"lineNumber":36,"author":{"gitId":"tanchinkiat99"},"content":"","lastModifiedDate":"2022-03-11"},{"lineNumber":37,"author":{"gitId":"tanchinkiat99"},"content":"    /**","lastModifiedDate":"2022-03-12"},{"lineNumber":38,"author":{"gitId":"tanchinkiat99"},"content":"     * Constructor for this class to create a FilterCommand object.","lastModifiedDate":"2022-03-12"},{"lineNumber":39,"author":{"gitId":"tanchinkiat99"},"content":"     *","lastModifiedDate":"2022-03-12"},{"lineNumber":40,"author":{"gitId":"tanchinkiat99"},"content":"     * @param filterDescriptor containing the predicates require to output the filtered list.","lastModifiedDate":"2022-03-18"},{"lineNumber":41,"author":{"gitId":"tanchinkiat99"},"content":"     */","lastModifiedDate":"2022-03-12"},{"lineNumber":42,"author":{"gitId":"tanchinkiat99"},"content":"    public FilterCommand(FilterDescriptor filterDescriptor) {","lastModifiedDate":"2022-03-18"},{"lineNumber":43,"author":{"gitId":"tanchinkiat99"},"content":"        this.filterDescriptor \u003d filterDescriptor;","lastModifiedDate":"2022-03-18"},{"lineNumber":44,"author":{"gitId":"tanchinkiat99"},"content":"    }","lastModifiedDate":"2022-03-11"},{"lineNumber":45,"author":{"gitId":"tanchinkiat99"},"content":"","lastModifiedDate":"2022-03-11"},{"lineNumber":46,"author":{"gitId":"tanchinkiat99"},"content":"    @Override","lastModifiedDate":"2022-03-11"},{"lineNumber":47,"author":{"gitId":"tanchinkiat99"},"content":"    public CommandResult execute(Model model) throws CommandException {","lastModifiedDate":"2022-03-30"},{"lineNumber":48,"author":{"gitId":"tanchinkiat99"},"content":"        if (filterDescriptor.isEmpty()) {","lastModifiedDate":"2022-03-30"},{"lineNumber":49,"author":{"gitId":"tanchinkiat99"},"content":"            throw new CommandException(MESSAGE_NO_VALID_FILTERS);","lastModifiedDate":"2022-03-30"},{"lineNumber":50,"author":{"gitId":"tanchinkiat99"},"content":"        }","lastModifiedDate":"2022-03-30"},{"lineNumber":51,"author":{"gitId":"tanchinkiat99"},"content":"","lastModifiedDate":"2022-03-30"},{"lineNumber":52,"author":{"gitId":"tanchinkiat99"},"content":"        requireNonNull(model);","lastModifiedDate":"2022-03-11"},{"lineNumber":53,"author":{"gitId":"tanchinkiat99"},"content":"        Predicate\u003cPerson\u003e filters \u003d filterDescriptor.getFilters();","lastModifiedDate":"2022-03-22"},{"lineNumber":54,"author":{"gitId":"tanchinkiat99"},"content":"        model.updateFilteredPersonList(filters);","lastModifiedDate":"2022-03-22"},{"lineNumber":55,"author":{"gitId":"tanchinkiat99"},"content":"","lastModifiedDate":"2022-03-22"},{"lineNumber":56,"author":{"gitId":"tanchinkiat99"},"content":"        return new CommandResult(MESSAGE_SUCCESS);","lastModifiedDate":"2022-03-11"},{"lineNumber":57,"author":{"gitId":"tanchinkiat99"},"content":"    }","lastModifiedDate":"2022-03-11"},{"lineNumber":58,"author":{"gitId":"tanchinkiat99"},"content":"","lastModifiedDate":"2022-03-11"},{"lineNumber":59,"author":{"gitId":"tanchinkiat99"},"content":"    @Override","lastModifiedDate":"2022-03-11"},{"lineNumber":60,"author":{"gitId":"tanchinkiat99"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2022-03-11"},{"lineNumber":61,"author":{"gitId":"tanchinkiat99"},"content":"        // short circuit if same object","lastModifiedDate":"2022-03-11"},{"lineNumber":62,"author":{"gitId":"tanchinkiat99"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2022-03-11"},{"lineNumber":63,"author":{"gitId":"tanchinkiat99"},"content":"            return true;","lastModifiedDate":"2022-03-11"},{"lineNumber":64,"author":{"gitId":"tanchinkiat99"},"content":"        }","lastModifiedDate":"2022-03-11"},{"lineNumber":65,"author":{"gitId":"tanchinkiat99"},"content":"","lastModifiedDate":"2022-03-11"},{"lineNumber":66,"author":{"gitId":"tanchinkiat99"},"content":"        // instanceof handles nulls","lastModifiedDate":"2022-03-11"},{"lineNumber":67,"author":{"gitId":"tanchinkiat99"},"content":"        if (!(other instanceof FilterCommand)) {","lastModifiedDate":"2022-03-11"},{"lineNumber":68,"author":{"gitId":"tanchinkiat99"},"content":"            return false;","lastModifiedDate":"2022-03-11"},{"lineNumber":69,"author":{"gitId":"tanchinkiat99"},"content":"        }","lastModifiedDate":"2022-03-11"},{"lineNumber":70,"author":{"gitId":"tanchinkiat99"},"content":"","lastModifiedDate":"2022-03-11"},{"lineNumber":71,"author":{"gitId":"tanchinkiat99"},"content":"        // state check","lastModifiedDate":"2022-03-11"},{"lineNumber":72,"author":{"gitId":"tanchinkiat99"},"content":"        FilterCommand f \u003d (FilterCommand) other;","lastModifiedDate":"2022-03-22"},{"lineNumber":73,"author":{"gitId":"tanchinkiat99"},"content":"        return filterDescriptor.equals(f.filterDescriptor);","lastModifiedDate":"2022-03-22"},{"lineNumber":74,"author":{"gitId":"tanchinkiat99"},"content":"    }","lastModifiedDate":"2022-03-18"},{"lineNumber":75,"author":{"gitId":"tanchinkiat99"},"content":"","lastModifiedDate":"2022-03-18"},{"lineNumber":76,"author":{"gitId":"tanchinkiat99"},"content":"    /**","lastModifiedDate":"2022-03-18"},{"lineNumber":77,"author":{"gitId":"tanchinkiat99"},"content":"     * Stores the filters requested by the user.","lastModifiedDate":"2022-03-18"},{"lineNumber":78,"author":{"gitId":"tanchinkiat99"},"content":"     */","lastModifiedDate":"2022-03-18"},{"lineNumber":79,"author":{"gitId":"tanchinkiat99"},"content":"    public static class FilterDescriptor {","lastModifiedDate":"2022-03-18"},{"lineNumber":80,"author":{"gitId":"tanchinkiat99"},"content":"        private static final int FACULTY_INDEX \u003d 0;","lastModifiedDate":"2022-03-22"},{"lineNumber":81,"author":{"gitId":"tanchinkiat99"},"content":"        private static final int COVID_STATUS_INDEX \u003d 1;","lastModifiedDate":"2022-03-22"},{"lineNumber":82,"author":{"gitId":"tanchinkiat99"},"content":"        private static final int BLOCK_INDEX \u003d 2;","lastModifiedDate":"2022-03-22"},{"lineNumber":83,"author":{"gitId":"tanchinkiat99"},"content":"","lastModifiedDate":"2022-03-22"},{"lineNumber":84,"author":{"gitId":"tanchinkiat99"},"content":"        private Faculty faculty;","lastModifiedDate":"2022-03-18"},{"lineNumber":85,"author":{"gitId":"tanchinkiat99"},"content":"        private CovidStatus status;","lastModifiedDate":"2022-03-18"},{"lineNumber":86,"author":{"gitId":"tanchinkiat99"},"content":"        private Block block;","lastModifiedDate":"2022-03-22"},{"lineNumber":87,"author":{"gitId":"tanchinkiat99"},"content":"        private ArrayList\u003cPredicate\u003cPerson\u003e\u003e filters \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2022-03-18"},{"lineNumber":88,"author":{"gitId":"tanchinkiat99"},"content":"","lastModifiedDate":"2022-03-18"},{"lineNumber":89,"author":{"gitId":"tanchinkiat99"},"content":"        private Predicate\u003cPerson\u003e defaultFilter \u003d person -\u003e true;","lastModifiedDate":"2022-03-22"},{"lineNumber":90,"author":{"gitId":"tanchinkiat99"},"content":"","lastModifiedDate":"2022-03-22"},{"lineNumber":91,"author":{"gitId":"tanchinkiat99"},"content":"        private Predicate\u003cPerson\u003e facultyFilter \u003d person -\u003e person.isFaculty(faculty);","lastModifiedDate":"2022-03-18"},{"lineNumber":92,"author":{"gitId":"tanchinkiat99"},"content":"        private Predicate\u003cPerson\u003e covidStatusFilter \u003d person -\u003e person.isStatus(status);","lastModifiedDate":"2022-03-22"},{"lineNumber":93,"author":{"gitId":"tanchinkiat99"},"content":"        private Predicate\u003cPerson\u003e blockFilter \u003d person -\u003e person.isBlock(block);","lastModifiedDate":"2022-03-22"},{"lineNumber":94,"author":{"gitId":"tanchinkiat99"},"content":"","lastModifiedDate":"2022-03-22"},{"lineNumber":95,"author":{"gitId":"tanchinkiat99"},"content":"        /**","lastModifiedDate":"2022-03-22"},{"lineNumber":96,"author":{"gitId":"tanchinkiat99"},"content":"         * Constructor to create a FilterDescriptor object.","lastModifiedDate":"2022-03-22"},{"lineNumber":97,"author":{"gitId":"tanchinkiat99"},"content":"         */","lastModifiedDate":"2022-03-22"},{"lineNumber":98,"author":{"gitId":"tanchinkiat99"},"content":"        public FilterDescriptor() {","lastModifiedDate":"2022-03-22"},{"lineNumber":99,"author":{"gitId":"tanchinkiat99"},"content":"            filters.add(defaultFilter);","lastModifiedDate":"2022-03-22"},{"lineNumber":100,"author":{"gitId":"tanchinkiat99"},"content":"            filters.add(defaultFilter);","lastModifiedDate":"2022-03-22"},{"lineNumber":101,"author":{"gitId":"tanchinkiat99"},"content":"            filters.add(defaultFilter);","lastModifiedDate":"2022-03-22"},{"lineNumber":102,"author":{"gitId":"tanchinkiat99"},"content":"        }","lastModifiedDate":"2022-03-22"},{"lineNumber":103,"author":{"gitId":"tanchinkiat99"},"content":"","lastModifiedDate":"2022-03-18"},{"lineNumber":104,"author":{"gitId":"tanchinkiat99"},"content":"        public Predicate\u003cPerson\u003e getFilters() {","lastModifiedDate":"2022-03-22"},{"lineNumber":105,"author":{"gitId":"tanchinkiat99"},"content":"            return filters.get(FACULTY_INDEX).and(filters.get(COVID_STATUS_INDEX)).and(filters.get(BLOCK_INDEX));","lastModifiedDate":"2022-03-22"},{"lineNumber":106,"author":{"gitId":"tanchinkiat99"},"content":"        }","lastModifiedDate":"2022-03-18"},{"lineNumber":107,"author":{"gitId":"tanchinkiat99"},"content":"","lastModifiedDate":"2022-03-18"},{"lineNumber":108,"author":{"gitId":"tanchinkiat99"},"content":"        public void setFaculty(Faculty faculty) {","lastModifiedDate":"2022-03-18"},{"lineNumber":109,"author":{"gitId":"tanchinkiat99"},"content":"            this.faculty \u003d faculty;","lastModifiedDate":"2022-03-18"},{"lineNumber":110,"author":{"gitId":"tanchinkiat99"},"content":"            filters.set(FACULTY_INDEX, facultyFilter);","lastModifiedDate":"2022-03-22"},{"lineNumber":111,"author":{"gitId":"tanchinkiat99"},"content":"        }","lastModifiedDate":"2022-03-18"},{"lineNumber":112,"author":{"gitId":"tanchinkiat99"},"content":"","lastModifiedDate":"2022-03-18"},{"lineNumber":113,"author":{"gitId":"tanchinkiat99"},"content":"        public void setCovidStatus(CovidStatus status) {","lastModifiedDate":"2022-03-18"},{"lineNumber":114,"author":{"gitId":"tanchinkiat99"},"content":"            this.status \u003d status;","lastModifiedDate":"2022-03-18"},{"lineNumber":115,"author":{"gitId":"tanchinkiat99"},"content":"            filters.set(COVID_STATUS_INDEX, covidStatusFilter);","lastModifiedDate":"2022-03-22"},{"lineNumber":116,"author":{"gitId":"tanchinkiat99"},"content":"        }","lastModifiedDate":"2022-03-22"},{"lineNumber":117,"author":{"gitId":"tanchinkiat99"},"content":"","lastModifiedDate":"2022-03-22"},{"lineNumber":118,"author":{"gitId":"tanchinkiat99"},"content":"        public void setBlock(Block block) {","lastModifiedDate":"2022-03-22"},{"lineNumber":119,"author":{"gitId":"tanchinkiat99"},"content":"            this.block \u003d block;","lastModifiedDate":"2022-03-22"},{"lineNumber":120,"author":{"gitId":"tanchinkiat99"},"content":"            filters.set(BLOCK_INDEX, blockFilter);","lastModifiedDate":"2022-03-22"},{"lineNumber":121,"author":{"gitId":"tanchinkiat99"},"content":"        }","lastModifiedDate":"2022-03-18"},{"lineNumber":122,"author":{"gitId":"tanchinkiat99"},"content":"","lastModifiedDate":"2022-03-18"},{"lineNumber":123,"author":{"gitId":"tanchinkiat99"},"content":"        public boolean isEmpty() {","lastModifiedDate":"2022-03-30"},{"lineNumber":124,"author":{"gitId":"tanchinkiat99"},"content":"            return filters.get(FACULTY_INDEX) \u003d\u003d defaultFilter","lastModifiedDate":"2022-03-30"},{"lineNumber":125,"author":{"gitId":"tanchinkiat99"},"content":"                    \u0026\u0026 filters.get(COVID_STATUS_INDEX) \u003d\u003d defaultFilter","lastModifiedDate":"2022-03-30"},{"lineNumber":126,"author":{"gitId":"tanchinkiat99"},"content":"                    \u0026\u0026 filters.get(BLOCK_INDEX) \u003d\u003d defaultFilter;","lastModifiedDate":"2022-03-30"},{"lineNumber":127,"author":{"gitId":"tanchinkiat99"},"content":"        }","lastModifiedDate":"2022-03-30"},{"lineNumber":128,"author":{"gitId":"tanchinkiat99"},"content":"","lastModifiedDate":"2022-03-30"},{"lineNumber":129,"author":{"gitId":"tanchinkiat99"},"content":"        @Override","lastModifiedDate":"2022-03-18"},{"lineNumber":130,"author":{"gitId":"tanchinkiat99"},"content":"        public boolean equals(Object other) {","lastModifiedDate":"2022-03-18"},{"lineNumber":131,"author":{"gitId":"tanchinkiat99"},"content":"            // short circuit if same object","lastModifiedDate":"2022-03-18"},{"lineNumber":132,"author":{"gitId":"tanchinkiat99"},"content":"            if (other \u003d\u003d this) {","lastModifiedDate":"2022-03-18"},{"lineNumber":133,"author":{"gitId":"tanchinkiat99"},"content":"                return true;","lastModifiedDate":"2022-03-18"},{"lineNumber":134,"author":{"gitId":"tanchinkiat99"},"content":"            }","lastModifiedDate":"2022-03-18"},{"lineNumber":135,"author":{"gitId":"tanchinkiat99"},"content":"","lastModifiedDate":"2022-03-18"},{"lineNumber":136,"author":{"gitId":"tanchinkiat99"},"content":"            // instanceof handles nulls and other types","lastModifiedDate":"2022-03-18"},{"lineNumber":137,"author":{"gitId":"tanchinkiat99"},"content":"            if (!(other instanceof FilterDescriptor)) {","lastModifiedDate":"2022-03-18"},{"lineNumber":138,"author":{"gitId":"tanchinkiat99"},"content":"                return false;","lastModifiedDate":"2022-03-18"},{"lineNumber":139,"author":{"gitId":"tanchinkiat99"},"content":"            }","lastModifiedDate":"2022-03-18"},{"lineNumber":140,"author":{"gitId":"tanchinkiat99"},"content":"","lastModifiedDate":"2022-03-18"},{"lineNumber":141,"author":{"gitId":"tanchinkiat99"},"content":"            // state check","lastModifiedDate":"2022-03-18"},{"lineNumber":142,"author":{"gitId":"tanchinkiat99"},"content":"            FilterDescriptor f \u003d (FilterDescriptor) other;","lastModifiedDate":"2022-03-18"},{"lineNumber":143,"author":{"gitId":"tanchinkiat99"},"content":"            boolean sameFaculty;","lastModifiedDate":"2022-03-22"},{"lineNumber":144,"author":{"gitId":"tanchinkiat99"},"content":"            boolean sameCovidStatus;","lastModifiedDate":"2022-03-22"},{"lineNumber":145,"author":{"gitId":"tanchinkiat99"},"content":"            boolean sameBlock;","lastModifiedDate":"2022-03-22"},{"lineNumber":146,"author":{"gitId":"tanchinkiat99"},"content":"","lastModifiedDate":"2022-03-22"},{"lineNumber":147,"author":{"gitId":"tanchinkiat99"},"content":"            if (faculty \u003d\u003d null) {","lastModifiedDate":"2022-03-22"},{"lineNumber":148,"author":{"gitId":"tanchinkiat99"},"content":"                sameFaculty \u003d (f.faculty \u003d\u003d null);","lastModifiedDate":"2022-03-22"},{"lineNumber":149,"author":{"gitId":"tanchinkiat99"},"content":"            } else {","lastModifiedDate":"2022-03-22"},{"lineNumber":150,"author":{"gitId":"tanchinkiat99"},"content":"                sameFaculty \u003d faculty.equals(f.faculty);","lastModifiedDate":"2022-03-22"},{"lineNumber":151,"author":{"gitId":"tanchinkiat99"},"content":"            }","lastModifiedDate":"2022-03-22"},{"lineNumber":152,"author":{"gitId":"tanchinkiat99"},"content":"","lastModifiedDate":"2022-03-22"},{"lineNumber":153,"author":{"gitId":"tanchinkiat99"},"content":"            if (status \u003d\u003d null) {","lastModifiedDate":"2022-03-22"},{"lineNumber":154,"author":{"gitId":"tanchinkiat99"},"content":"                sameCovidStatus \u003d (f.status \u003d\u003d null);","lastModifiedDate":"2022-03-22"},{"lineNumber":155,"author":{"gitId":"tanchinkiat99"},"content":"            } else {","lastModifiedDate":"2022-03-22"},{"lineNumber":156,"author":{"gitId":"tanchinkiat99"},"content":"                sameCovidStatus \u003d status.equals(f.status);","lastModifiedDate":"2022-03-22"},{"lineNumber":157,"author":{"gitId":"tanchinkiat99"},"content":"            }","lastModifiedDate":"2022-03-22"},{"lineNumber":158,"author":{"gitId":"tanchinkiat99"},"content":"","lastModifiedDate":"2022-03-22"},{"lineNumber":159,"author":{"gitId":"tanchinkiat99"},"content":"            if (block \u003d\u003d null) {","lastModifiedDate":"2022-03-22"},{"lineNumber":160,"author":{"gitId":"tanchinkiat99"},"content":"                sameBlock \u003d (f.block \u003d\u003d null);","lastModifiedDate":"2022-03-22"},{"lineNumber":161,"author":{"gitId":"tanchinkiat99"},"content":"            } else {","lastModifiedDate":"2022-03-22"},{"lineNumber":162,"author":{"gitId":"tanchinkiat99"},"content":"                sameBlock \u003d block.equals(f.block);","lastModifiedDate":"2022-03-22"},{"lineNumber":163,"author":{"gitId":"tanchinkiat99"},"content":"            }","lastModifiedDate":"2022-03-22"},{"lineNumber":164,"author":{"gitId":"tanchinkiat99"},"content":"","lastModifiedDate":"2022-03-22"},{"lineNumber":165,"author":{"gitId":"tanchinkiat99"},"content":"            return sameFaculty \u0026\u0026 sameCovidStatus \u0026\u0026 sameBlock;","lastModifiedDate":"2022-03-22"},{"lineNumber":166,"author":{"gitId":"tanchinkiat99"},"content":"        }","lastModifiedDate":"2022-03-18"},{"lineNumber":167,"author":{"gitId":"tanchinkiat99"},"content":"    }","lastModifiedDate":"2022-03-11"},{"lineNumber":168,"author":{"gitId":"tanchinkiat99"},"content":"}","lastModifiedDate":"2022-03-11"}],"authorContributionMap":{"tanchinkiat99":168}},{"path":"src/main/java/seedu/address/logic/commands/FindCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2016-09-22"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2018-08-08"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.Messages;","lastModifiedDate":"2018-04-01"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2018-08-08"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import seedu.address.model.person.NameContainsKeywordsPredicate;","lastModifiedDate":"2017-06-12"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":9,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-09-22"},{"lineNumber":10,"author":{"gitId":"-"},"content":" * Finds and lists all persons in address book whose name contains any of the argument keywords.","lastModifiedDate":"2016-09-22"},{"lineNumber":11,"author":{"gitId":"kevinkuo0320"},"content":" * Keyword matching is case insensitive and does not require the full name of the contact","lastModifiedDate":"2022-03-24"},{"lineNumber":12,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-09-22"},{"lineNumber":13,"author":{"gitId":"-"},"content":"public class FindCommand extends Command {","lastModifiedDate":"2016-09-22"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":15,"author":{"gitId":"-"},"content":"    public static final String COMMAND_WORD \u003d \"find\";","lastModifiedDate":"2016-09-22"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_USAGE \u003d COMMAND_WORD + \": Finds all persons whose names contain any of \"","lastModifiedDate":"2016-09-22"},{"lineNumber":18,"author":{"gitId":"-"},"content":"            + \"the specified keywords (case-insensitive) and displays them as a list with index numbers.\\n\"","lastModifiedDate":"2018-04-01"},{"lineNumber":19,"author":{"gitId":"-"},"content":"            + \"Parameters: KEYWORD [MORE_KEYWORDS]...\\n\"","lastModifiedDate":"2016-09-22"},{"lineNumber":20,"author":{"gitId":"-"},"content":"            + \"Example: \" + COMMAND_WORD + \" alice bob charlie\";","lastModifiedDate":"2016-09-22"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":22,"author":{"gitId":"kevinkuo0320"},"content":"    private final NameContainsKeywordsPredicate namePredicate;","lastModifiedDate":"2022-03-23"},{"lineNumber":23,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    public FindCommand(NameContainsKeywordsPredicate predicate) {","lastModifiedDate":"2017-06-12"},{"lineNumber":25,"author":{"gitId":"kevinkuo0320"},"content":"        this.namePredicate \u003d predicate;","lastModifiedDate":"2022-03-23"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-22"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-22"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    public CommandResult execute(Model model) {","lastModifiedDate":"2019-01-25"},{"lineNumber":30,"author":{"gitId":"-"},"content":"        requireNonNull(model);","lastModifiedDate":"2018-08-08"},{"lineNumber":31,"author":{"gitId":"kevinkuo0320"},"content":"        model.updateFilteredPersonList(namePredicate);","lastModifiedDate":"2022-03-23"},{"lineNumber":32,"author":{"gitId":"-"},"content":"        return new CommandResult(","lastModifiedDate":"2018-04-01"},{"lineNumber":33,"author":{"gitId":"-"},"content":"                String.format(Messages.MESSAGE_PERSONS_LISTED_OVERVIEW, model.getFilteredPersonList().size()));","lastModifiedDate":"2018-04-01"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-22"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2017-06-27"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2017-06-27"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        return other \u003d\u003d this // short circuit if same object","lastModifiedDate":"2017-06-27"},{"lineNumber":39,"author":{"gitId":"-"},"content":"                || (other instanceof FindCommand // instanceof handles nulls","lastModifiedDate":"2017-06-27"},{"lineNumber":40,"author":{"gitId":"kevinkuo0320"},"content":"                \u0026\u0026 namePredicate.equals(((FindCommand) other).namePredicate)); // state check","lastModifiedDate":"2022-03-23"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-27"},{"lineNumber":42,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-09-22"}],"authorContributionMap":{"kevinkuo0320":5,"-":37}},{"path":"src/main/java/seedu/address/logic/commands/HelpCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2016-09-22"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2018-08-08"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-31"},{"lineNumber":5,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-24"},{"lineNumber":6,"author":{"gitId":"-"},"content":" * Format full help instructions for every command for display.","lastModifiedDate":"2016-08-24"},{"lineNumber":7,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-24"},{"lineNumber":8,"author":{"gitId":"-"},"content":"public class HelpCommand extends Command {","lastModifiedDate":"2016-08-24"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":10,"author":{"gitId":"-"},"content":"    public static final String COMMAND_WORD \u003d \"help\";","lastModifiedDate":"2016-08-24"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_USAGE \u003d COMMAND_WORD + \": Shows program usage instructions.\\n\"","lastModifiedDate":"2016-08-24"},{"lineNumber":13,"author":{"gitId":"-"},"content":"            + \"Example: \" + COMMAND_WORD;","lastModifiedDate":"2016-08-24"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":15,"author":{"gitId":"-"},"content":"    public static final String SHOWING_HELP_MESSAGE \u003d \"Opened help window.\";","lastModifiedDate":"2016-08-31"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-31"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-24"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    public CommandResult execute(Model model) {","lastModifiedDate":"2019-01-25"},{"lineNumber":19,"author":{"gitId":"DannyDakota"},"content":"        return new CommandResult(SHOWING_HELP_MESSAGE, true, false, false, false, false);","lastModifiedDate":"2022-03-31"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":21,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-24"}],"authorContributionMap":{"DannyDakota":1,"-":20}},{"path":"src/main/java/seedu/address/logic/commands/ImportCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"kevinkuo0320"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2022-04-01"},{"lineNumber":2,"author":{"gitId":"kevinkuo0320"},"content":"","lastModifiedDate":"2022-04-01"},{"lineNumber":3,"author":{"gitId":"kevinkuo0320"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2022-04-01"},{"lineNumber":4,"author":{"gitId":"kevinkuo0320"},"content":"","lastModifiedDate":"2022-04-01"},{"lineNumber":5,"author":{"gitId":"kevinkuo0320"},"content":"import java.io.File;","lastModifiedDate":"2022-04-01"},{"lineNumber":6,"author":{"gitId":"kevinkuo0320"},"content":"import java.util.List;","lastModifiedDate":"2022-04-01"},{"lineNumber":7,"author":{"gitId":"kevinkuo0320"},"content":"","lastModifiedDate":"2022-04-01"},{"lineNumber":8,"author":{"gitId":"kevinkuo0320"},"content":"import seedu.address.logic.commands.exceptions.CommandException;","lastModifiedDate":"2022-04-01"},{"lineNumber":9,"author":{"gitId":"kevinkuo0320"},"content":"import seedu.address.logic.parser.AddressBookParser;","lastModifiedDate":"2022-04-01"},{"lineNumber":10,"author":{"gitId":"kevinkuo0320"},"content":"import seedu.address.logic.parser.exceptions.ParseException;","lastModifiedDate":"2022-04-01"},{"lineNumber":11,"author":{"gitId":"kevinkuo0320"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2022-04-01"},{"lineNumber":12,"author":{"gitId":"kevinkuo0320"},"content":"import seedu.address.model.excel.ImportFileParser;","lastModifiedDate":"2022-04-01"},{"lineNumber":13,"author":{"gitId":"kevinkuo0320"},"content":"","lastModifiedDate":"2022-04-01"},{"lineNumber":14,"author":{"gitId":"kevinkuo0320"},"content":"/**","lastModifiedDate":"2022-04-01"},{"lineNumber":15,"author":{"gitId":"kevinkuo0320"},"content":" * Import Excel file to the address book.","lastModifiedDate":"2022-04-01"},{"lineNumber":16,"author":{"gitId":"kevinkuo0320"},"content":" */","lastModifiedDate":"2022-04-01"},{"lineNumber":17,"author":{"gitId":"kevinkuo0320"},"content":"public class ImportCommand extends Command {","lastModifiedDate":"2022-04-01"},{"lineNumber":18,"author":{"gitId":"kevinkuo0320"},"content":"","lastModifiedDate":"2022-04-01"},{"lineNumber":19,"author":{"gitId":"kevinkuo0320"},"content":"    public static final String COMMAND_WORD \u003d \"import\";","lastModifiedDate":"2022-04-01"},{"lineNumber":20,"author":{"gitId":"kevinkuo0320"},"content":"","lastModifiedDate":"2022-04-01"},{"lineNumber":21,"author":{"gitId":"kevinkuo0320"},"content":"    public static final String MESSAGE_USAGE \u003d COMMAND_WORD + \": Imports an excel file to the address book. \"","lastModifiedDate":"2022-04-01"},{"lineNumber":22,"author":{"gitId":"kevinkuo0320"},"content":"            + \"Parameters: \"","lastModifiedDate":"2022-04-01"},{"lineNumber":23,"author":{"gitId":"kevinkuo0320"},"content":"            + \"file path \"","lastModifiedDate":"2022-04-01"},{"lineNumber":24,"author":{"gitId":"kevinkuo0320"},"content":"            + \"Example: \" + COMMAND_WORD + \" \"","lastModifiedDate":"2022-04-01"},{"lineNumber":25,"author":{"gitId":"kevinkuo0320"},"content":"            + \":C//Users//Documents/students.xlsx \";","lastModifiedDate":"2022-04-01"},{"lineNumber":26,"author":{"gitId":"kevinkuo0320"},"content":"","lastModifiedDate":"2022-04-01"},{"lineNumber":27,"author":{"gitId":"kevinkuo0320"},"content":"    public static final String MESSAGE_SUCCESS \u003d \"New file added!\";","lastModifiedDate":"2022-04-01"},{"lineNumber":28,"author":{"gitId":"kevinkuo0320"},"content":"","lastModifiedDate":"2022-04-01"},{"lineNumber":29,"author":{"gitId":"kevinkuo0320"},"content":"    private static String toFile;","lastModifiedDate":"2022-04-01"},{"lineNumber":30,"author":{"gitId":"kevinkuo0320"},"content":"    /**","lastModifiedDate":"2022-04-01"},{"lineNumber":31,"author":{"gitId":"kevinkuo0320"},"content":"     * Creates an ImportCommand to add the specified","lastModifiedDate":"2022-04-01"},{"lineNumber":32,"author":{"gitId":"kevinkuo0320"},"content":"     */","lastModifiedDate":"2022-04-01"},{"lineNumber":33,"author":{"gitId":"kevinkuo0320"},"content":"    public ImportCommand(String filePath) {","lastModifiedDate":"2022-04-01"},{"lineNumber":34,"author":{"gitId":"kevinkuo0320"},"content":"        requireNonNull(filePath);","lastModifiedDate":"2022-04-01"},{"lineNumber":35,"author":{"gitId":"kevinkuo0320"},"content":"        toFile \u003d filePath;","lastModifiedDate":"2022-04-01"},{"lineNumber":36,"author":{"gitId":"kevinkuo0320"},"content":"    }","lastModifiedDate":"2022-04-01"},{"lineNumber":37,"author":{"gitId":"kevinkuo0320"},"content":"","lastModifiedDate":"2022-04-01"},{"lineNumber":38,"author":{"gitId":"kevinkuo0320"},"content":"    /**","lastModifiedDate":"2022-04-01"},{"lineNumber":39,"author":{"gitId":"kevinkuo0320"},"content":"     *","lastModifiedDate":"2022-04-01"},{"lineNumber":40,"author":{"gitId":"kevinkuo0320"},"content":"     * @param model {@code Model} which the command should operate on.","lastModifiedDate":"2022-04-01"},{"lineNumber":41,"author":{"gitId":"kevinkuo0320"},"content":"     * @return command result from execute the command","lastModifiedDate":"2022-04-01"},{"lineNumber":42,"author":{"gitId":"kevinkuo0320"},"content":"     * @throws CommandException when the command is invalid","lastModifiedDate":"2022-04-01"},{"lineNumber":43,"author":{"gitId":"kevinkuo0320"},"content":"     * @throws ParseException when import command is wrong format","lastModifiedDate":"2022-04-01"},{"lineNumber":44,"author":{"gitId":"kevinkuo0320"},"content":"     */","lastModifiedDate":"2022-04-01"},{"lineNumber":45,"author":{"gitId":"kevinkuo0320"},"content":"    @Override","lastModifiedDate":"2022-04-01"},{"lineNumber":46,"author":{"gitId":"kevinkuo0320"},"content":"    public CommandResult execute(Model model) throws CommandException, ParseException {","lastModifiedDate":"2022-04-01"},{"lineNumber":47,"author":{"gitId":"kevinkuo0320"},"content":"        requireNonNull(model);","lastModifiedDate":"2022-04-01"},{"lineNumber":48,"author":{"gitId":"kevinkuo0320"},"content":"","lastModifiedDate":"2022-04-01"},{"lineNumber":49,"author":{"gitId":"kevinkuo0320"},"content":"        File f \u003d new File(toFile);","lastModifiedDate":"2022-04-01"},{"lineNumber":50,"author":{"gitId":"kevinkuo0320"},"content":"        ImportFileParser converter \u003d new ImportFileParser();","lastModifiedDate":"2022-04-01"},{"lineNumber":51,"author":{"gitId":"kevinkuo0320"},"content":"        List\u003cString\u003e res \u003d converter.jsonToPerson(f);","lastModifiedDate":"2022-04-01"},{"lineNumber":52,"author":{"gitId":"kevinkuo0320"},"content":"        for (int i \u003d 0; i \u003c res.size(); i++) {","lastModifiedDate":"2022-04-01"},{"lineNumber":53,"author":{"gitId":"kevinkuo0320"},"content":"            Command c \u003d new AddressBookParser().parseCommand(res.get(i));","lastModifiedDate":"2022-04-01"},{"lineNumber":54,"author":{"gitId":"kevinkuo0320"},"content":"            c.execute(model);","lastModifiedDate":"2022-04-01"},{"lineNumber":55,"author":{"gitId":"kevinkuo0320"},"content":"        }","lastModifiedDate":"2022-04-01"},{"lineNumber":56,"author":{"gitId":"kevinkuo0320"},"content":"        return new CommandResult(String.format(MESSAGE_SUCCESS));","lastModifiedDate":"2022-04-01"},{"lineNumber":57,"author":{"gitId":"kevinkuo0320"},"content":"    }","lastModifiedDate":"2022-04-01"},{"lineNumber":58,"author":{"gitId":"kevinkuo0320"},"content":"","lastModifiedDate":"2022-04-01"},{"lineNumber":59,"author":{"gitId":"kevinkuo0320"},"content":"}","lastModifiedDate":"2022-04-01"}],"authorContributionMap":{"kevinkuo0320":59}},{"path":"src/main/java/seedu/address/logic/commands/RedoCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"tanchinkiat99"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2022-03-30"},{"lineNumber":2,"author":{"gitId":"tanchinkiat99"},"content":"","lastModifiedDate":"2022-03-30"},{"lineNumber":3,"author":{"gitId":"tanchinkiat99"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2022-03-30"},{"lineNumber":4,"author":{"gitId":"tanchinkiat99"},"content":"","lastModifiedDate":"2022-03-30"},{"lineNumber":5,"author":{"gitId":"tanchinkiat99"},"content":"import seedu.address.logic.commands.exceptions.CommandException;","lastModifiedDate":"2022-03-30"},{"lineNumber":6,"author":{"gitId":"tanchinkiat99"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2022-03-30"},{"lineNumber":7,"author":{"gitId":"tanchinkiat99"},"content":"","lastModifiedDate":"2022-03-30"},{"lineNumber":8,"author":{"gitId":"tanchinkiat99"},"content":"/**","lastModifiedDate":"2022-03-30"},{"lineNumber":9,"author":{"gitId":"tanchinkiat99"},"content":" * Reverses an executed Undo command.","lastModifiedDate":"2022-03-30"},{"lineNumber":10,"author":{"gitId":"tanchinkiat99"},"content":" */","lastModifiedDate":"2022-03-30"},{"lineNumber":11,"author":{"gitId":"tanchinkiat99"},"content":"public class RedoCommand extends Command {","lastModifiedDate":"2022-03-30"},{"lineNumber":12,"author":{"gitId":"tanchinkiat99"},"content":"","lastModifiedDate":"2022-03-30"},{"lineNumber":13,"author":{"gitId":"tanchinkiat99"},"content":"    public static final String COMMAND_WORD \u003d \"redo\";","lastModifiedDate":"2022-03-30"},{"lineNumber":14,"author":{"gitId":"tanchinkiat99"},"content":"","lastModifiedDate":"2022-03-30"},{"lineNumber":15,"author":{"gitId":"tanchinkiat99"},"content":"    public static final String MESSAGE_USAGE \u003d COMMAND_WORD","lastModifiedDate":"2022-03-30"},{"lineNumber":16,"author":{"gitId":"tanchinkiat99"},"content":"            + \": Erases the previous change by undo to the address book and restores the original state, \"","lastModifiedDate":"2022-03-30"},{"lineNumber":17,"author":{"gitId":"tanchinkiat99"},"content":"            + \"only can be used after a undo command.\\n\"","lastModifiedDate":"2022-03-30"},{"lineNumber":18,"author":{"gitId":"tanchinkiat99"},"content":"            + \"Example: \" + COMMAND_WORD;","lastModifiedDate":"2022-03-30"},{"lineNumber":19,"author":{"gitId":"tanchinkiat99"},"content":"","lastModifiedDate":"2022-03-30"},{"lineNumber":20,"author":{"gitId":"tanchinkiat99"},"content":"    public static final String MESSAGE_REDO_SUCCESS \u003d \"Reverted to original.\";","lastModifiedDate":"2022-03-30"},{"lineNumber":21,"author":{"gitId":"tanchinkiat99"},"content":"    public static final String MESSAGE_REDO_FAILURE \u003d \"You have to use the undo command first.\";","lastModifiedDate":"2022-03-30"},{"lineNumber":22,"author":{"gitId":"tanchinkiat99"},"content":"","lastModifiedDate":"2022-03-30"},{"lineNumber":23,"author":{"gitId":"tanchinkiat99"},"content":"    @Override","lastModifiedDate":"2022-03-30"},{"lineNumber":24,"author":{"gitId":"tanchinkiat99"},"content":"    public CommandResult execute(Model model) throws CommandException {","lastModifiedDate":"2022-03-30"},{"lineNumber":25,"author":{"gitId":"tanchinkiat99"},"content":"        requireNonNull(model);","lastModifiedDate":"2022-03-30"},{"lineNumber":26,"author":{"gitId":"tanchinkiat99"},"content":"","lastModifiedDate":"2022-03-30"},{"lineNumber":27,"author":{"gitId":"tanchinkiat99"},"content":"        if (model.checkOriginal() \u003d\u003d false) {","lastModifiedDate":"2022-03-30"},{"lineNumber":28,"author":{"gitId":"tanchinkiat99"},"content":"            throw new CommandException(MESSAGE_REDO_FAILURE);","lastModifiedDate":"2022-03-30"},{"lineNumber":29,"author":{"gitId":"tanchinkiat99"},"content":"        }","lastModifiedDate":"2022-03-30"},{"lineNumber":30,"author":{"gitId":"tanchinkiat99"},"content":"","lastModifiedDate":"2022-03-30"},{"lineNumber":31,"author":{"gitId":"tanchinkiat99"},"content":"        model.restoreOriginal();","lastModifiedDate":"2022-03-30"},{"lineNumber":32,"author":{"gitId":"tanchinkiat99"},"content":"        return new CommandResult(MESSAGE_REDO_SUCCESS);","lastModifiedDate":"2022-03-30"},{"lineNumber":33,"author":{"gitId":"tanchinkiat99"},"content":"    }","lastModifiedDate":"2022-03-30"},{"lineNumber":34,"author":{"gitId":"tanchinkiat99"},"content":"","lastModifiedDate":"2022-03-30"},{"lineNumber":35,"author":{"gitId":"tanchinkiat99"},"content":"    @Override","lastModifiedDate":"2022-03-30"},{"lineNumber":36,"author":{"gitId":"tanchinkiat99"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2022-03-30"},{"lineNumber":37,"author":{"gitId":"tanchinkiat99"},"content":"        return other \u003d\u003d this // short circuit if same object","lastModifiedDate":"2022-03-30"},{"lineNumber":38,"author":{"gitId":"tanchinkiat99"},"content":"                || (other instanceof RedoCommand); // instanceof handles nulls","lastModifiedDate":"2022-03-30"},{"lineNumber":39,"author":{"gitId":"tanchinkiat99"},"content":"    }","lastModifiedDate":"2022-03-30"},{"lineNumber":40,"author":{"gitId":"tanchinkiat99"},"content":"}","lastModifiedDate":"2022-03-30"}],"authorContributionMap":{"tanchinkiat99":40}},{"path":"src/main/java/seedu/address/logic/commands/ResizeCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"cwq2326"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2022-03-31"},{"lineNumber":2,"author":{"gitId":"cwq2326"},"content":"","lastModifiedDate":"2022-03-31"},{"lineNumber":3,"author":{"gitId":"cwq2326"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2022-03-31"},{"lineNumber":4,"author":{"gitId":"cwq2326"},"content":"","lastModifiedDate":"2022-03-31"},{"lineNumber":5,"author":{"gitId":"cwq2326"},"content":"/**","lastModifiedDate":"2022-03-31"},{"lineNumber":6,"author":{"gitId":"cwq2326"},"content":" * Resizes the result display window.","lastModifiedDate":"2022-03-31"},{"lineNumber":7,"author":{"gitId":"cwq2326"},"content":" */","lastModifiedDate":"2022-03-31"},{"lineNumber":8,"author":{"gitId":"cwq2326"},"content":"public class ResizeCommand extends Command {","lastModifiedDate":"2022-03-31"},{"lineNumber":9,"author":{"gitId":"cwq2326"},"content":"","lastModifiedDate":"2022-03-31"},{"lineNumber":10,"author":{"gitId":"cwq2326"},"content":"    public static final String COMMAND_WORD \u003d \"resize\";","lastModifiedDate":"2022-03-31"},{"lineNumber":11,"author":{"gitId":"cwq2326"},"content":"    public static final String MESSAGE_USAGE \u003d COMMAND_WORD + \": Resizes the result display window.\\n\"","lastModifiedDate":"2022-03-31"},{"lineNumber":12,"author":{"gitId":"cwq2326"},"content":"            + \"Parameters: SIZE (must be 1, 2 or 3)\\n\"","lastModifiedDate":"2022-03-31"},{"lineNumber":13,"author":{"gitId":"cwq2326"},"content":"            + \"Example: \" + COMMAND_WORD + \" 1\";","lastModifiedDate":"2022-03-31"},{"lineNumber":14,"author":{"gitId":"cwq2326"},"content":"    public static final String MESSAGE_RESIZE \u003d \"Result display window resized.\";","lastModifiedDate":"2022-03-31"},{"lineNumber":15,"author":{"gitId":"cwq2326"},"content":"    private static final int RESIZE_WINDOW_MULTIPLIER \u003d 100;","lastModifiedDate":"2022-03-31"},{"lineNumber":16,"author":{"gitId":"cwq2326"},"content":"    private static Double resultWindowDisplaySize;","lastModifiedDate":"2022-03-31"},{"lineNumber":17,"author":{"gitId":"cwq2326"},"content":"","lastModifiedDate":"2022-03-31"},{"lineNumber":18,"author":{"gitId":"cwq2326"},"content":"    public ResizeCommand(Double displaySize) {","lastModifiedDate":"2022-03-31"},{"lineNumber":19,"author":{"gitId":"cwq2326"},"content":"        this.resultWindowDisplaySize \u003d displaySize;","lastModifiedDate":"2022-03-31"},{"lineNumber":20,"author":{"gitId":"cwq2326"},"content":"    }","lastModifiedDate":"2022-03-31"},{"lineNumber":21,"author":{"gitId":"cwq2326"},"content":"","lastModifiedDate":"2022-03-31"},{"lineNumber":22,"author":{"gitId":"cwq2326"},"content":"    @Override","lastModifiedDate":"2022-03-31"},{"lineNumber":23,"author":{"gitId":"cwq2326"},"content":"    public CommandResult execute(Model model) {","lastModifiedDate":"2022-03-31"},{"lineNumber":24,"author":{"gitId":"DannyDakota"},"content":"        return new CommandResult(MESSAGE_RESIZE, false, false, false, false, true);","lastModifiedDate":"2022-03-31"},{"lineNumber":25,"author":{"gitId":"cwq2326"},"content":"    }","lastModifiedDate":"2022-03-31"},{"lineNumber":26,"author":{"gitId":"cwq2326"},"content":"","lastModifiedDate":"2022-03-31"},{"lineNumber":27,"author":{"gitId":"cwq2326"},"content":"    public static Double getResultWindowDisplaySize() {","lastModifiedDate":"2022-03-31"},{"lineNumber":28,"author":{"gitId":"cwq2326"},"content":"        return resultWindowDisplaySize;","lastModifiedDate":"2022-03-31"},{"lineNumber":29,"author":{"gitId":"cwq2326"},"content":"    }","lastModifiedDate":"2022-03-31"},{"lineNumber":30,"author":{"gitId":"cwq2326"},"content":"","lastModifiedDate":"2022-03-31"},{"lineNumber":31,"author":{"gitId":"cwq2326"},"content":"    public static int getResieWindowMultiplier() {","lastModifiedDate":"2022-03-31"},{"lineNumber":32,"author":{"gitId":"cwq2326"},"content":"        return RESIZE_WINDOW_MULTIPLIER;","lastModifiedDate":"2022-03-31"},{"lineNumber":33,"author":{"gitId":"cwq2326"},"content":"    }","lastModifiedDate":"2022-03-31"},{"lineNumber":34,"author":{"gitId":"cwq2326"},"content":"","lastModifiedDate":"2022-03-31"},{"lineNumber":35,"author":{"gitId":"cwq2326"},"content":"    @Override","lastModifiedDate":"2022-03-31"},{"lineNumber":36,"author":{"gitId":"cwq2326"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2022-03-31"},{"lineNumber":37,"author":{"gitId":"cwq2326"},"content":"        return other \u003d\u003d this // short circuit if same object","lastModifiedDate":"2022-03-31"},{"lineNumber":38,"author":{"gitId":"cwq2326"},"content":"                || (other instanceof ResizeCommand // instanceof handles nulls","lastModifiedDate":"2022-03-31"},{"lineNumber":39,"author":{"gitId":"cwq2326"},"content":"                \u0026\u0026 resultWindowDisplaySize.equals(((ResizeCommand) other).resultWindowDisplaySize)); // state check","lastModifiedDate":"2022-03-31"},{"lineNumber":40,"author":{"gitId":"cwq2326"},"content":"    }","lastModifiedDate":"2022-03-31"},{"lineNumber":41,"author":{"gitId":"cwq2326"},"content":"}","lastModifiedDate":"2022-03-31"}],"authorContributionMap":{"DannyDakota":1,"cwq2326":40}},{"path":"src/main/java/seedu/address/logic/commands/SummariseCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"jiale-c"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2022-03-09"},{"lineNumber":2,"author":{"gitId":"jiale-c"},"content":"","lastModifiedDate":"2022-03-09"},{"lineNumber":3,"author":{"gitId":"jiale-c"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2022-03-09"},{"lineNumber":4,"author":{"gitId":"jiale-c"},"content":"import static seedu.address.model.Model.PREDICATE_SHOW_ALL_PERSONS;","lastModifiedDate":"2022-03-09"},{"lineNumber":5,"author":{"gitId":"jiale-c"},"content":"","lastModifiedDate":"2022-03-09"},{"lineNumber":6,"author":{"gitId":"jiale-c"},"content":"import java.util.List;","lastModifiedDate":"2022-03-09"},{"lineNumber":7,"author":{"gitId":"jiale-c"},"content":"import java.util.TreeMap;","lastModifiedDate":"2022-03-23"},{"lineNumber":8,"author":{"gitId":"jiale-c"},"content":"import java.util.function.Predicate;","lastModifiedDate":"2022-03-09"},{"lineNumber":9,"author":{"gitId":"jiale-c"},"content":"import java.util.stream.Collectors;","lastModifiedDate":"2022-03-09"},{"lineNumber":10,"author":{"gitId":"jiale-c"},"content":"","lastModifiedDate":"2022-03-09"},{"lineNumber":11,"author":{"gitId":"jiale-c"},"content":"import seedu.address.logic.commands.exceptions.CommandException;","lastModifiedDate":"2022-03-09"},{"lineNumber":12,"author":{"gitId":"jiale-c"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2022-03-09"},{"lineNumber":13,"author":{"gitId":"jiale-c"},"content":"import seedu.address.model.person.Block;","lastModifiedDate":"2022-03-22"},{"lineNumber":14,"author":{"gitId":"jiale-c"},"content":"import seedu.address.model.person.Faculty;","lastModifiedDate":"2022-03-09"},{"lineNumber":15,"author":{"gitId":"jiale-c"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2022-03-09"},{"lineNumber":16,"author":{"gitId":"jiale-c"},"content":"","lastModifiedDate":"2022-03-09"},{"lineNumber":17,"author":{"gitId":"jiale-c"},"content":"/**","lastModifiedDate":"2022-03-09"},{"lineNumber":18,"author":{"gitId":"jiale-c"},"content":" * Summarise all the students by faculty and show how many students in that faculty and block are positive,","lastModifiedDate":"2022-03-22"},{"lineNumber":19,"author":{"gitId":"jiale-c"},"content":" * negative or on HRN.","lastModifiedDate":"2022-03-22"},{"lineNumber":20,"author":{"gitId":"jiale-c"},"content":" */","lastModifiedDate":"2022-03-09"},{"lineNumber":21,"author":{"gitId":"jiale-c"},"content":"public class SummariseCommand extends Command {","lastModifiedDate":"2022-03-09"},{"lineNumber":22,"author":{"gitId":"jiale-c"},"content":"","lastModifiedDate":"2022-03-09"},{"lineNumber":23,"author":{"gitId":"jiale-c"},"content":"    public static final String COMMAND_WORD \u003d \"summarise\";","lastModifiedDate":"2022-03-09"},{"lineNumber":24,"author":{"gitId":"jiale-c"},"content":"","lastModifiedDate":"2022-03-09"},{"lineNumber":25,"author":{"gitId":"jiale-c"},"content":"    public static final String MESSAGE_USAGE \u003d COMMAND_WORD","lastModifiedDate":"2022-03-09"},{"lineNumber":26,"author":{"gitId":"jiale-c"},"content":"            + \": Summarise all data in the address book and presents an overview of the covid situation in school.\\n\";","lastModifiedDate":"2022-03-09"},{"lineNumber":27,"author":{"gitId":"jiale-c"},"content":"","lastModifiedDate":"2022-03-09"},{"lineNumber":28,"author":{"gitId":"jiale-c"},"content":"    public static final String MESSAGE_SUMMARISE_PERSON_SUCCESS \u003d \"Summarising all students in this hall: \\n\";","lastModifiedDate":"2022-03-22"},{"lineNumber":29,"author":{"gitId":"jiale-c"},"content":"","lastModifiedDate":"2022-03-09"},{"lineNumber":30,"author":{"gitId":"jiale-c"},"content":"    public static final String MESSAGE_SUMMARISE_PERSON_FAILURE \u003d \"Unable to summarise \\n\";","lastModifiedDate":"2022-03-16"},{"lineNumber":31,"author":{"gitId":"jiale-c"},"content":"","lastModifiedDate":"2022-03-16"},{"lineNumber":32,"author":{"gitId":"jiale-c"},"content":"    private static final String FACULTY_SUMMARY_FORM \u003d \"\\nIn %s faculty with %d student(s),\\n\"","lastModifiedDate":"2022-03-22"},{"lineNumber":33,"author":{"gitId":"jiale-c"},"content":"            + \"Covid Positive: %d student(s)\\n\"","lastModifiedDate":"2022-03-09"},{"lineNumber":34,"author":{"gitId":"jiale-c"},"content":"            + \"Covid Negative: %d student(s)\\n\"","lastModifiedDate":"2022-03-09"},{"lineNumber":35,"author":{"gitId":"jiale-c"},"content":"            + \"Health Risk Notice: %d student(s)\\n\"","lastModifiedDate":"2022-03-22"},{"lineNumber":36,"author":{"gitId":"jiale-c"},"content":"            + \"%.2f percent of student(s) here are suffering...\\n\";","lastModifiedDate":"2022-03-22"},{"lineNumber":37,"author":{"gitId":"jiale-c"},"content":"    private static final String BLOCK_SUMMARY_FORM \u003d \"\\nIn %s block with %d student(s),\\n\"","lastModifiedDate":"2022-03-22"},{"lineNumber":38,"author":{"gitId":"jiale-c"},"content":"            + \"Covid Positive: %d student(s)\\n\"","lastModifiedDate":"2022-03-22"},{"lineNumber":39,"author":{"gitId":"jiale-c"},"content":"            + \"Covid Negative: %d student(s)\\n\"","lastModifiedDate":"2022-03-22"},{"lineNumber":40,"author":{"gitId":"jiale-c"},"content":"            + \"Health Risk Notice: %d student(s)\\n\"","lastModifiedDate":"2022-03-09"},{"lineNumber":41,"author":{"gitId":"jiale-c"},"content":"            + \"%.2f percent of student(s) here are suffering...\\n\";","lastModifiedDate":"2022-03-09"},{"lineNumber":42,"author":{"gitId":"jiale-c"},"content":"    private static final String HALL_SUMMARY_FORM \u003d \"\\nIn this hall, %d of %d student(s) are covid positive.\\n\"","lastModifiedDate":"2022-03-22"},{"lineNumber":43,"author":{"gitId":"jiale-c"},"content":"            + \"The breakdowns by Block level and Faculty level are given below:\\n\";","lastModifiedDate":"2022-03-22"},{"lineNumber":44,"author":{"gitId":"jiale-c"},"content":"","lastModifiedDate":"2022-03-09"},{"lineNumber":45,"author":{"gitId":"jiale-c"},"content":"    private static final List\u003cString\u003e FACULTIES \u003d Faculty.getFacultyEnumAsList();","lastModifiedDate":"2022-03-09"},{"lineNumber":46,"author":{"gitId":"jiale-c"},"content":"    private static final List\u003cString\u003e BLOCKS \u003d Block.getBlockEnumAsList();","lastModifiedDate":"2022-03-22"},{"lineNumber":47,"author":{"gitId":"jiale-c"},"content":"","lastModifiedDate":"2022-03-09"},{"lineNumber":48,"author":{"gitId":"jiale-c"},"content":"    private static final Predicate\u003cPerson\u003e BY_POSITIVE \u003d person -\u003e person.getStatusAsString().equals(\"POSITIVE\");","lastModifiedDate":"2022-03-09"},{"lineNumber":49,"author":{"gitId":"jiale-c"},"content":"    private static final Predicate\u003cPerson\u003e BY_NEGATIVE \u003d person -\u003e person.getStatusAsString().equals(\"NEGATIVE\");","lastModifiedDate":"2022-03-09"},{"lineNumber":50,"author":{"gitId":"jiale-c"},"content":"    private static final Predicate\u003cPerson\u003e BY_HRN \u003d person -\u003e person.getStatusAsString().equals(\"HRN\");","lastModifiedDate":"2022-03-09"},{"lineNumber":51,"author":{"gitId":"jiale-c"},"content":"    private static TreeMap\u003cString, TreeMap\u003cString, Integer\u003e\u003e covidStatsByBlockDataList;","lastModifiedDate":"2022-03-30"},{"lineNumber":52,"author":{"gitId":"jiale-c"},"content":"    private static TreeMap\u003cString, Integer\u003e positiveStatsByFacultyData;","lastModifiedDate":"2022-03-30"},{"lineNumber":53,"author":{"gitId":"jiale-c"},"content":"    private static int highestPositiveByFaculty;","lastModifiedDate":"2022-04-02"},{"lineNumber":54,"author":{"gitId":"jiale-c"},"content":"","lastModifiedDate":"2022-03-09"},{"lineNumber":55,"author":{"gitId":"jiale-c"},"content":"","lastModifiedDate":"2022-03-09"},{"lineNumber":56,"author":{"gitId":"jiale-c"},"content":"    @Override","lastModifiedDate":"2022-03-09"},{"lineNumber":57,"author":{"gitId":"jiale-c"},"content":"    public CommandResult execute(Model model) throws CommandException {","lastModifiedDate":"2022-03-09"},{"lineNumber":58,"author":{"gitId":"jiale-c"},"content":"        covidStatsByBlockDataList \u003d new TreeMap\u003c\u003e();","lastModifiedDate":"2022-03-30"},{"lineNumber":59,"author":{"gitId":"jiale-c"},"content":"        positiveStatsByFacultyData \u003d new TreeMap\u003c\u003e();","lastModifiedDate":"2022-03-30"},{"lineNumber":60,"author":{"gitId":"jiale-c"},"content":"        highestPositiveByFaculty \u003d 0;","lastModifiedDate":"2022-04-02"},{"lineNumber":61,"author":{"gitId":"jiale-c"},"content":"        requireNonNull(model);","lastModifiedDate":"2022-03-09"},{"lineNumber":62,"author":{"gitId":"jiale-c"},"content":"        model.updateFilteredPersonList(PREDICATE_SHOW_ALL_PERSONS);","lastModifiedDate":"2022-03-09"},{"lineNumber":63,"author":{"gitId":"jiale-c"},"content":"        List\u003cPerson\u003e lastShownList \u003d model.getFilteredPersonList();","lastModifiedDate":"2022-03-09"},{"lineNumber":64,"author":{"gitId":"jiale-c"},"content":"        // Summarises the contact list by Block first then by Faculty","lastModifiedDate":"2022-03-23"},{"lineNumber":65,"author":{"gitId":"jiale-c"},"content":"        String answer \u003d summariseAll(lastShownList) + filterByBlock(lastShownList) + filterByFaculty(lastShownList);","lastModifiedDate":"2022-03-22"},{"lineNumber":66,"author":{"gitId":"jiale-c"},"content":"        if (answer.isEmpty()) {","lastModifiedDate":"2022-03-16"},{"lineNumber":67,"author":{"gitId":"jiale-c"},"content":"            // Returns a message indicating Tracey is unable to summarise her contact list.","lastModifiedDate":"2022-03-23"},{"lineNumber":68,"author":{"gitId":"jiale-c"},"content":"            return new CommandResult(MESSAGE_SUMMARISE_PERSON_FAILURE);","lastModifiedDate":"2022-03-16"},{"lineNumber":69,"author":{"gitId":"jiale-c"},"content":"        } else {","lastModifiedDate":"2022-03-16"},{"lineNumber":70,"author":{"gitId":"jiale-c"},"content":"            return new CommandResult(MESSAGE_SUMMARISE_PERSON_SUCCESS + answer,","lastModifiedDate":"2022-03-22"},{"lineNumber":71,"author":{"gitId":"DannyDakota"},"content":"                    false, false, true, false, false);","lastModifiedDate":"2022-03-31"},{"lineNumber":72,"author":{"gitId":"jiale-c"},"content":"        }","lastModifiedDate":"2022-03-16"},{"lineNumber":73,"author":{"gitId":"jiale-c"},"content":"    }","lastModifiedDate":"2022-03-10"},{"lineNumber":74,"author":{"gitId":"jiale-c"},"content":"","lastModifiedDate":"2022-03-10"},{"lineNumber":75,"author":{"gitId":"jiale-c"},"content":"    /**","lastModifiedDate":"2022-03-10"},{"lineNumber":76,"author":{"gitId":"jiale-c"},"content":"     * Filters entire list by faculties to provide overview of covid situation in each faculty.","lastModifiedDate":"2022-03-30"},{"lineNumber":77,"author":{"gitId":"jiale-c"},"content":"     *","lastModifiedDate":"2022-03-10"},{"lineNumber":78,"author":{"gitId":"jiale-c"},"content":"     * @param list a list of all students found within the address book","lastModifiedDate":"2022-03-29"},{"lineNumber":79,"author":{"gitId":"jiale-c"},"content":"     * @return The summarised overview for all students by faculties","lastModifiedDate":"2022-03-22"},{"lineNumber":80,"author":{"gitId":"jiale-c"},"content":"     */","lastModifiedDate":"2022-03-10"},{"lineNumber":81,"author":{"gitId":"jiale-c"},"content":"    public String filterByFaculty(List\u003cPerson\u003e list) {","lastModifiedDate":"2022-03-16"},{"lineNumber":82,"author":{"gitId":"jiale-c"},"content":"        StringBuilder ans \u003d new StringBuilder();","lastModifiedDate":"2022-03-10"},{"lineNumber":83,"author":{"gitId":"jiale-c"},"content":"","lastModifiedDate":"2022-03-09"},{"lineNumber":84,"author":{"gitId":"jiale-c"},"content":"        for (String facultyName : FACULTIES) {","lastModifiedDate":"2022-03-09"},{"lineNumber":85,"author":{"gitId":"jiale-c"},"content":"            Predicate\u003cPerson\u003e byFaculty \u003d person -\u003e person.getFacultyAsString().equals(facultyName);","lastModifiedDate":"2022-03-09"},{"lineNumber":86,"author":{"gitId":"jiale-c"},"content":"            // Create a list of students in the said faculty.","lastModifiedDate":"2022-03-23"},{"lineNumber":87,"author":{"gitId":"jiale-c"},"content":"            List\u003cPerson\u003e students \u003d list.stream().filter(byFaculty).collect(Collectors.toList());","lastModifiedDate":"2022-03-10"},{"lineNumber":88,"author":{"gitId":"jiale-c"},"content":"            if (students.size() \u003c\u003d 0) {","lastModifiedDate":"2022-03-09"},{"lineNumber":89,"author":{"gitId":"jiale-c"},"content":"                // Faculties with no students will not be summarised.","lastModifiedDate":"2022-03-23"},{"lineNumber":90,"author":{"gitId":"jiale-c"},"content":"                continue;","lastModifiedDate":"2022-03-09"},{"lineNumber":91,"author":{"gitId":"jiale-c"},"content":"            }","lastModifiedDate":"2022-03-09"},{"lineNumber":92,"author":{"gitId":"jiale-c"},"content":"            ans.append(summariseFaculty(students, facultyName));","lastModifiedDate":"2022-03-10"},{"lineNumber":93,"author":{"gitId":"jiale-c"},"content":"        }","lastModifiedDate":"2022-03-09"},{"lineNumber":94,"author":{"gitId":"jiale-c"},"content":"        return ans.toString();","lastModifiedDate":"2022-03-10"},{"lineNumber":95,"author":{"gitId":"jiale-c"},"content":"    }","lastModifiedDate":"2022-03-09"},{"lineNumber":96,"author":{"gitId":"jiale-c"},"content":"","lastModifiedDate":"2022-03-09"},{"lineNumber":97,"author":{"gitId":"jiale-c"},"content":"    /**","lastModifiedDate":"2022-03-22"},{"lineNumber":98,"author":{"gitId":"jiale-c"},"content":"     * Filters entire list by the hall block to provide overview of covid situation in each block.","lastModifiedDate":"2022-03-30"},{"lineNumber":99,"author":{"gitId":"jiale-c"},"content":"     *","lastModifiedDate":"2022-03-22"},{"lineNumber":100,"author":{"gitId":"jiale-c"},"content":"     * @param list a list of all students found within the address book","lastModifiedDate":"2022-03-29"},{"lineNumber":101,"author":{"gitId":"jiale-c"},"content":"     * @return The summarised overview for all students by blocks","lastModifiedDate":"2022-03-22"},{"lineNumber":102,"author":{"gitId":"jiale-c"},"content":"     */","lastModifiedDate":"2022-03-22"},{"lineNumber":103,"author":{"gitId":"jiale-c"},"content":"    public String filterByBlock(List\u003cPerson\u003e list) {","lastModifiedDate":"2022-03-22"},{"lineNumber":104,"author":{"gitId":"jiale-c"},"content":"        StringBuilder ans \u003d new StringBuilder();","lastModifiedDate":"2022-03-22"},{"lineNumber":105,"author":{"gitId":"jiale-c"},"content":"","lastModifiedDate":"2022-03-22"},{"lineNumber":106,"author":{"gitId":"jiale-c"},"content":"        for (String blockLetter : BLOCKS) {","lastModifiedDate":"2022-03-22"},{"lineNumber":107,"author":{"gitId":"jiale-c"},"content":"            Predicate\u003cPerson\u003e byBlock \u003d person -\u003e person.getBlockAsString().equals(blockLetter);","lastModifiedDate":"2022-03-22"},{"lineNumber":108,"author":{"gitId":"jiale-c"},"content":"            // Create a list of students in the said Hall Block.","lastModifiedDate":"2022-03-23"},{"lineNumber":109,"author":{"gitId":"jiale-c"},"content":"            List\u003cPerson\u003e students \u003d list.stream().filter(byBlock).collect(Collectors.toList());","lastModifiedDate":"2022-03-22"},{"lineNumber":110,"author":{"gitId":"jiale-c"},"content":"            if (students.size() \u003c\u003d 0) {","lastModifiedDate":"2022-03-22"},{"lineNumber":111,"author":{"gitId":"jiale-c"},"content":"                // Hall Block with no students will not be summarised.","lastModifiedDate":"2022-03-23"},{"lineNumber":112,"author":{"gitId":"jiale-c"},"content":"                continue;","lastModifiedDate":"2022-03-22"},{"lineNumber":113,"author":{"gitId":"jiale-c"},"content":"            }","lastModifiedDate":"2022-03-22"},{"lineNumber":114,"author":{"gitId":"jiale-c"},"content":"            ans.append(summariseBlock(students, blockLetter));","lastModifiedDate":"2022-03-22"},{"lineNumber":115,"author":{"gitId":"jiale-c"},"content":"        }","lastModifiedDate":"2022-03-22"},{"lineNumber":116,"author":{"gitId":"jiale-c"},"content":"        return ans.toString();","lastModifiedDate":"2022-03-22"},{"lineNumber":117,"author":{"gitId":"jiale-c"},"content":"    }","lastModifiedDate":"2022-03-22"},{"lineNumber":118,"author":{"gitId":"jiale-c"},"content":"","lastModifiedDate":"2022-03-22"},{"lineNumber":119,"author":{"gitId":"jiale-c"},"content":"    /**","lastModifiedDate":"2022-03-09"},{"lineNumber":120,"author":{"gitId":"jiale-c"},"content":"     * Returns a standardised form with the breakdown of students by covid status within a specified faculty.","lastModifiedDate":"2022-03-09"},{"lineNumber":121,"author":{"gitId":"jiale-c"},"content":"     *","lastModifiedDate":"2022-03-09"},{"lineNumber":122,"author":{"gitId":"jiale-c"},"content":"     * @param result a list of students in said faculty","lastModifiedDate":"2022-03-09"},{"lineNumber":123,"author":{"gitId":"jiale-c"},"content":"     * @param facultyName the faculty in which students are from","lastModifiedDate":"2022-03-09"},{"lineNumber":124,"author":{"gitId":"jiale-c"},"content":"     * @return A string form containing the respective number of students with certain covid status","lastModifiedDate":"2022-03-22"},{"lineNumber":125,"author":{"gitId":"jiale-c"},"content":"     */","lastModifiedDate":"2022-03-09"},{"lineNumber":126,"author":{"gitId":"jiale-c"},"content":"    private String summariseFaculty(List\u003cPerson\u003e result, String facultyName) {","lastModifiedDate":"2022-03-10"},{"lineNumber":127,"author":{"gitId":"jiale-c"},"content":"        int totalNumberOfStudents \u003d result.size();","lastModifiedDate":"2022-03-09"},{"lineNumber":128,"author":{"gitId":"jiale-c"},"content":"        int numberOfPositive \u003d (int) result.stream().filter(BY_POSITIVE).count();","lastModifiedDate":"2022-03-09"},{"lineNumber":129,"author":{"gitId":"jiale-c"},"content":"        int numberOfNegative \u003d (int) result.stream().filter(BY_NEGATIVE).count();","lastModifiedDate":"2022-03-09"},{"lineNumber":130,"author":{"gitId":"jiale-c"},"content":"        int numberOfHrn \u003d (int) result.stream().filter(BY_HRN).count();","lastModifiedDate":"2022-03-09"},{"lineNumber":131,"author":{"gitId":"jiale-c"},"content":"        double percentagePositive \u003d (double) numberOfPositive / totalNumberOfStudents * 100;","lastModifiedDate":"2022-03-09"},{"lineNumber":132,"author":{"gitId":"jiale-c"},"content":"        if (numberOfPositive \u003e 0) {","lastModifiedDate":"2022-03-30"},{"lineNumber":133,"author":{"gitId":"jiale-c"},"content":"            // Collating this faculty\u0027s covid statuses in a TreeMap used for making of PieCharts.","lastModifiedDate":"2022-03-23"},{"lineNumber":134,"author":{"gitId":"jiale-c"},"content":"            positiveStatsByFacultyData.put(facultyName, numberOfPositive);","lastModifiedDate":"2022-03-30"},{"lineNumber":135,"author":{"gitId":"jiale-c"},"content":"        }","lastModifiedDate":"2022-03-30"},{"lineNumber":136,"author":{"gitId":"jiale-c"},"content":"        if (numberOfPositive \u003e highestPositiveByFaculty) {","lastModifiedDate":"2022-04-02"},{"lineNumber":137,"author":{"gitId":"jiale-c"},"content":"            highestPositiveByFaculty \u003d numberOfPositive;","lastModifiedDate":"2022-04-02"},{"lineNumber":138,"author":{"gitId":"jiale-c"},"content":"        }","lastModifiedDate":"2022-04-02"},{"lineNumber":139,"author":{"gitId":"jiale-c"},"content":"        return String.format(FACULTY_SUMMARY_FORM, facultyName, totalNumberOfStudents, numberOfPositive,","lastModifiedDate":"2022-03-09"},{"lineNumber":140,"author":{"gitId":"jiale-c"},"content":"                numberOfNegative, numberOfHrn, percentagePositive);","lastModifiedDate":"2022-03-22"},{"lineNumber":141,"author":{"gitId":"jiale-c"},"content":"    }","lastModifiedDate":"2022-03-22"},{"lineNumber":142,"author":{"gitId":"jiale-c"},"content":"","lastModifiedDate":"2022-03-22"},{"lineNumber":143,"author":{"gitId":"jiale-c"},"content":"    /**","lastModifiedDate":"2022-03-22"},{"lineNumber":144,"author":{"gitId":"jiale-c"},"content":"     * Returns a standardised form with the breakdown of students by covid status within a specified block.","lastModifiedDate":"2022-03-22"},{"lineNumber":145,"author":{"gitId":"jiale-c"},"content":"     *","lastModifiedDate":"2022-03-22"},{"lineNumber":146,"author":{"gitId":"jiale-c"},"content":"     * @param result a list of students in said block","lastModifiedDate":"2022-03-22"},{"lineNumber":147,"author":{"gitId":"jiale-c"},"content":"     * @param blockLetter the block in which students are from","lastModifiedDate":"2022-03-22"},{"lineNumber":148,"author":{"gitId":"jiale-c"},"content":"     * @return A string form containing the respective number of students with certain covid status","lastModifiedDate":"2022-03-22"},{"lineNumber":149,"author":{"gitId":"jiale-c"},"content":"     */","lastModifiedDate":"2022-03-22"},{"lineNumber":150,"author":{"gitId":"jiale-c"},"content":"    private String summariseBlock(List\u003cPerson\u003e result, String blockLetter) {","lastModifiedDate":"2022-03-22"},{"lineNumber":151,"author":{"gitId":"jiale-c"},"content":"        int totalNumberOfStudents \u003d result.size();","lastModifiedDate":"2022-03-22"},{"lineNumber":152,"author":{"gitId":"jiale-c"},"content":"        int numberOfPositive \u003d (int) result.stream().filter(BY_POSITIVE).count();","lastModifiedDate":"2022-03-22"},{"lineNumber":153,"author":{"gitId":"jiale-c"},"content":"        int numberOfNegative \u003d (int) result.stream().filter(BY_NEGATIVE).count();","lastModifiedDate":"2022-03-22"},{"lineNumber":154,"author":{"gitId":"jiale-c"},"content":"        int numberOfHrn \u003d (int) result.stream().filter(BY_HRN).count();","lastModifiedDate":"2022-03-22"},{"lineNumber":155,"author":{"gitId":"jiale-c"},"content":"        double percentagePositive \u003d (double) numberOfPositive / totalNumberOfStudents * 100;","lastModifiedDate":"2022-03-22"},{"lineNumber":156,"author":{"gitId":"jiale-c"},"content":"        TreeMap\u003cString, Integer\u003e covidStatsByBlockData \u003d new TreeMap\u003c\u003e();","lastModifiedDate":"2022-03-30"},{"lineNumber":157,"author":{"gitId":"jiale-c"},"content":"        if (numberOfPositive \u003e 0) {","lastModifiedDate":"2022-03-30"},{"lineNumber":158,"author":{"gitId":"jiale-c"},"content":"            covidStatsByBlockData.put(\"Positive\", numberOfPositive);","lastModifiedDate":"2022-03-30"},{"lineNumber":159,"author":{"gitId":"jiale-c"},"content":"        }","lastModifiedDate":"2022-03-30"},{"lineNumber":160,"author":{"gitId":"jiale-c"},"content":"        if (numberOfNegative \u003e 0) {","lastModifiedDate":"2022-03-30"},{"lineNumber":161,"author":{"gitId":"jiale-c"},"content":"            covidStatsByBlockData.put(\"Negative\", numberOfNegative);","lastModifiedDate":"2022-03-30"},{"lineNumber":162,"author":{"gitId":"jiale-c"},"content":"        }","lastModifiedDate":"2022-03-30"},{"lineNumber":163,"author":{"gitId":"jiale-c"},"content":"        if (numberOfHrn \u003e 0) {","lastModifiedDate":"2022-03-30"},{"lineNumber":164,"author":{"gitId":"jiale-c"},"content":"            covidStatsByBlockData.put(\"HRN\", numberOfHrn);","lastModifiedDate":"2022-03-30"},{"lineNumber":165,"author":{"gitId":"jiale-c"},"content":"        }","lastModifiedDate":"2022-03-30"},{"lineNumber":166,"author":{"gitId":"jiale-c"},"content":"        covidStatsByBlockDataList.put(String.format(\"%s\\n%d students\", blockLetter, totalNumberOfStudents),","lastModifiedDate":"2022-03-30"},{"lineNumber":167,"author":{"gitId":"jiale-c"},"content":"                covidStatsByBlockData);","lastModifiedDate":"2022-03-30"},{"lineNumber":168,"author":{"gitId":"jiale-c"},"content":"        return String.format(BLOCK_SUMMARY_FORM, blockLetter, totalNumberOfStudents, numberOfPositive,","lastModifiedDate":"2022-03-22"},{"lineNumber":169,"author":{"gitId":"jiale-c"},"content":"                numberOfNegative, numberOfHrn, percentagePositive);","lastModifiedDate":"2022-03-22"},{"lineNumber":170,"author":{"gitId":"jiale-c"},"content":"    }","lastModifiedDate":"2022-03-09"},{"lineNumber":171,"author":{"gitId":"jiale-c"},"content":"","lastModifiedDate":"2022-03-09"},{"lineNumber":172,"author":{"gitId":"jiale-c"},"content":"    /**","lastModifiedDate":"2022-03-22"},{"lineNumber":173,"author":{"gitId":"jiale-c"},"content":"     * Filters entire list to provide overview of covid situation in the hall.","lastModifiedDate":"2022-03-30"},{"lineNumber":174,"author":{"gitId":"jiale-c"},"content":"     *","lastModifiedDate":"2022-03-22"},{"lineNumber":175,"author":{"gitId":"jiale-c"},"content":"     * @param list a list of all students found within the address book","lastModifiedDate":"2022-03-29"},{"lineNumber":176,"author":{"gitId":"jiale-c"},"content":"     * @return The summarised overview for all students","lastModifiedDate":"2022-03-22"},{"lineNumber":177,"author":{"gitId":"jiale-c"},"content":"     */","lastModifiedDate":"2022-03-22"},{"lineNumber":178,"author":{"gitId":"jiale-c"},"content":"    private String summariseAll(List\u003cPerson\u003e list) {","lastModifiedDate":"2022-03-28"},{"lineNumber":179,"author":{"gitId":"jiale-c"},"content":"        StringBuilder ans \u003d new StringBuilder();","lastModifiedDate":"2022-03-22"},{"lineNumber":180,"author":{"gitId":"jiale-c"},"content":"        int numberOfStudents \u003d list.size();","lastModifiedDate":"2022-03-22"},{"lineNumber":181,"author":{"gitId":"jiale-c"},"content":"","lastModifiedDate":"2022-03-22"},{"lineNumber":182,"author":{"gitId":"jiale-c"},"content":"        // Create a list of students in the Hall that are covid positive.","lastModifiedDate":"2022-03-23"},{"lineNumber":183,"author":{"gitId":"jiale-c"},"content":"        List\u003cPerson\u003e students \u003d list.stream().filter(BY_POSITIVE).collect(Collectors.toList());","lastModifiedDate":"2022-03-22"},{"lineNumber":184,"author":{"gitId":"jiale-c"},"content":"        int numberOfPositive \u003d students.size();","lastModifiedDate":"2022-03-22"},{"lineNumber":185,"author":{"gitId":"jiale-c"},"content":"","lastModifiedDate":"2022-03-22"},{"lineNumber":186,"author":{"gitId":"jiale-c"},"content":"        return String.format(HALL_SUMMARY_FORM, numberOfPositive, numberOfStudents);","lastModifiedDate":"2022-03-22"},{"lineNumber":187,"author":{"gitId":"jiale-c"},"content":"    }","lastModifiedDate":"2022-03-22"},{"lineNumber":188,"author":{"gitId":"jiale-c"},"content":"","lastModifiedDate":"2022-03-23"},{"lineNumber":189,"author":{"gitId":"jiale-c"},"content":"    /**","lastModifiedDate":"2022-03-23"},{"lineNumber":190,"author":{"gitId":"cwq2326"},"content":"     * Returns all the relevant data present in a Block.","lastModifiedDate":"2022-03-24"},{"lineNumber":191,"author":{"gitId":"jiale-c"},"content":"     *","lastModifiedDate":"2022-03-23"},{"lineNumber":192,"author":{"gitId":"jiale-c"},"content":"     * @return A TreeMap with the block and its students categorised by covid statuses","lastModifiedDate":"2022-03-23"},{"lineNumber":193,"author":{"gitId":"jiale-c"},"content":"     */","lastModifiedDate":"2022-03-23"},{"lineNumber":194,"author":{"gitId":"jiale-c"},"content":"    public static TreeMap\u003cString, TreeMap\u003cString, Integer\u003e\u003e getCovidStatsByBlockDataList() {","lastModifiedDate":"2022-03-30"},{"lineNumber":195,"author":{"gitId":"jiale-c"},"content":"        return covidStatsByBlockDataList;","lastModifiedDate":"2022-03-23"},{"lineNumber":196,"author":{"gitId":"jiale-c"},"content":"    }","lastModifiedDate":"2022-03-23"},{"lineNumber":197,"author":{"gitId":"jiale-c"},"content":"","lastModifiedDate":"2022-03-23"},{"lineNumber":198,"author":{"gitId":"jiale-c"},"content":"    /**","lastModifiedDate":"2022-03-23"},{"lineNumber":199,"author":{"gitId":"cwq2326"},"content":"     * Returns all the relevant data present in a Faculty.","lastModifiedDate":"2022-03-24"},{"lineNumber":200,"author":{"gitId":"jiale-c"},"content":"     *","lastModifiedDate":"2022-03-23"},{"lineNumber":201,"author":{"gitId":"jiale-c"},"content":"     * @return A TreeMap with the faculty and its number of Covid Positive students","lastModifiedDate":"2022-03-23"},{"lineNumber":202,"author":{"gitId":"jiale-c"},"content":"     */","lastModifiedDate":"2022-03-23"},{"lineNumber":203,"author":{"gitId":"jiale-c"},"content":"    public static TreeMap\u003cString, Integer\u003e getPositiveStatsByFacultyData() {","lastModifiedDate":"2022-03-30"},{"lineNumber":204,"author":{"gitId":"jiale-c"},"content":"        return positiveStatsByFacultyData;","lastModifiedDate":"2022-03-23"},{"lineNumber":205,"author":{"gitId":"jiale-c"},"content":"    }","lastModifiedDate":"2022-03-23"},{"lineNumber":206,"author":{"gitId":"cwq2326"},"content":"","lastModifiedDate":"2022-03-24"},{"lineNumber":207,"author":{"gitId":"cwq2326"},"content":"    /**","lastModifiedDate":"2022-03-24"},{"lineNumber":208,"author":{"gitId":"jiale-c"},"content":"     * Returns true if both tree map are not empty and the pie chart window should be open, returns false otherwise","lastModifiedDate":"2022-04-02"},{"lineNumber":209,"author":{"gitId":"jiale-c"},"content":"     *","lastModifiedDate":"2022-04-02"},{"lineNumber":210,"author":{"gitId":"cwq2326"},"content":"     * @return boolean for whether the pie chart window should be opened","lastModifiedDate":"2022-03-24"},{"lineNumber":211,"author":{"gitId":"cwq2326"},"content":"     */","lastModifiedDate":"2022-03-24"},{"lineNumber":212,"author":{"gitId":"cwq2326"},"content":"    public static boolean shouldOpenPieChartWindow() {","lastModifiedDate":"2022-03-24"},{"lineNumber":213,"author":{"gitId":"cwq2326"},"content":"        return !(positiveStatsByFacultyData.isEmpty() \u0026\u0026 covidStatsByBlockDataList.isEmpty());","lastModifiedDate":"2022-03-24"},{"lineNumber":214,"author":{"gitId":"cwq2326"},"content":"    }","lastModifiedDate":"2022-03-24"},{"lineNumber":215,"author":{"gitId":"jiale-c"},"content":"","lastModifiedDate":"2022-04-02"},{"lineNumber":216,"author":{"gitId":"jiale-c"},"content":"    /**","lastModifiedDate":"2022-04-02"},{"lineNumber":217,"author":{"gitId":"jiale-c"},"content":"     * Returns the highest number of students with Covid categorised by Faculty.","lastModifiedDate":"2022-04-02"},{"lineNumber":218,"author":{"gitId":"jiale-c"},"content":"     *","lastModifiedDate":"2022-04-02"},{"lineNumber":219,"author":{"gitId":"jiale-c"},"content":"     * @return an integer value of the highest number of Covid positive students by Faculty","lastModifiedDate":"2022-04-02"},{"lineNumber":220,"author":{"gitId":"jiale-c"},"content":"     */","lastModifiedDate":"2022-04-02"},{"lineNumber":221,"author":{"gitId":"jiale-c"},"content":"    public static int getHighestPositiveByFaculty() {","lastModifiedDate":"2022-04-02"},{"lineNumber":222,"author":{"gitId":"jiale-c"},"content":"        return highestPositiveByFaculty;","lastModifiedDate":"2022-04-02"},{"lineNumber":223,"author":{"gitId":"jiale-c"},"content":"    }","lastModifiedDate":"2022-04-02"},{"lineNumber":224,"author":{"gitId":"jiale-c"},"content":"}","lastModifiedDate":"2022-03-09"},{"lineNumber":225,"author":{"gitId":"jiale-c"},"content":"","lastModifiedDate":"2022-03-09"},{"lineNumber":226,"author":{"gitId":"jiale-c"},"content":"","lastModifiedDate":"2022-03-09"}],"authorContributionMap":{"DannyDakota":1,"jiale-c":216,"cwq2326":9}},{"path":"src/main/java/seedu/address/logic/commands/UndoCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"tanchinkiat99"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2022-03-30"},{"lineNumber":2,"author":{"gitId":"tanchinkiat99"},"content":"","lastModifiedDate":"2022-03-30"},{"lineNumber":3,"author":{"gitId":"tanchinkiat99"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2022-03-30"},{"lineNumber":4,"author":{"gitId":"tanchinkiat99"},"content":"","lastModifiedDate":"2022-03-30"},{"lineNumber":5,"author":{"gitId":"tanchinkiat99"},"content":"import seedu.address.logic.commands.exceptions.CommandException;","lastModifiedDate":"2022-03-30"},{"lineNumber":6,"author":{"gitId":"tanchinkiat99"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2022-03-30"},{"lineNumber":7,"author":{"gitId":"tanchinkiat99"},"content":"","lastModifiedDate":"2022-03-30"},{"lineNumber":8,"author":{"gitId":"tanchinkiat99"},"content":"/**","lastModifiedDate":"2022-03-30"},{"lineNumber":9,"author":{"gitId":"tanchinkiat99"},"content":" * Undoes the previous command.","lastModifiedDate":"2022-03-30"},{"lineNumber":10,"author":{"gitId":"tanchinkiat99"},"content":" */","lastModifiedDate":"2022-03-30"},{"lineNumber":11,"author":{"gitId":"tanchinkiat99"},"content":"public class UndoCommand extends Command {","lastModifiedDate":"2022-03-30"},{"lineNumber":12,"author":{"gitId":"tanchinkiat99"},"content":"","lastModifiedDate":"2022-03-30"},{"lineNumber":13,"author":{"gitId":"tanchinkiat99"},"content":"    public static final String COMMAND_WORD \u003d \"undo\";","lastModifiedDate":"2022-03-30"},{"lineNumber":14,"author":{"gitId":"tanchinkiat99"},"content":"","lastModifiedDate":"2022-03-30"},{"lineNumber":15,"author":{"gitId":"tanchinkiat99"},"content":"    public static final String MESSAGE_USAGE \u003d COMMAND_WORD","lastModifiedDate":"2022-03-30"},{"lineNumber":16,"author":{"gitId":"tanchinkiat99"},"content":"            + \": Erases the previous change to the address book and restores the older state.\\n\"","lastModifiedDate":"2022-03-30"},{"lineNumber":17,"author":{"gitId":"tanchinkiat99"},"content":"            + \"Example: \" + COMMAND_WORD;","lastModifiedDate":"2022-03-30"},{"lineNumber":18,"author":{"gitId":"tanchinkiat99"},"content":"","lastModifiedDate":"2022-03-30"},{"lineNumber":19,"author":{"gitId":"tanchinkiat99"},"content":"    public static final String MESSAGE_UNDO_SUCCESS \u003d \"Undid last change.\";","lastModifiedDate":"2022-03-30"},{"lineNumber":20,"author":{"gitId":"tanchinkiat99"},"content":"    public static final String MESSAGE_UNDO_FAILURE \u003d \"No previous changes.\";","lastModifiedDate":"2022-03-30"},{"lineNumber":21,"author":{"gitId":"tanchinkiat99"},"content":"","lastModifiedDate":"2022-03-30"},{"lineNumber":22,"author":{"gitId":"tanchinkiat99"},"content":"    @Override","lastModifiedDate":"2022-03-30"},{"lineNumber":23,"author":{"gitId":"tanchinkiat99"},"content":"    public CommandResult execute(Model model) throws CommandException {","lastModifiedDate":"2022-03-30"},{"lineNumber":24,"author":{"gitId":"tanchinkiat99"},"content":"        requireNonNull(model);","lastModifiedDate":"2022-03-30"},{"lineNumber":25,"author":{"gitId":"tanchinkiat99"},"content":"","lastModifiedDate":"2022-03-30"},{"lineNumber":26,"author":{"gitId":"tanchinkiat99"},"content":"        if (model.checkHistory() \u003d\u003d false) {","lastModifiedDate":"2022-03-30"},{"lineNumber":27,"author":{"gitId":"tanchinkiat99"},"content":"            throw new CommandException(MESSAGE_UNDO_FAILURE);","lastModifiedDate":"2022-03-30"},{"lineNumber":28,"author":{"gitId":"tanchinkiat99"},"content":"        }","lastModifiedDate":"2022-03-30"},{"lineNumber":29,"author":{"gitId":"tanchinkiat99"},"content":"","lastModifiedDate":"2022-03-30"},{"lineNumber":30,"author":{"gitId":"tanchinkiat99"},"content":"        model.restoreHistory();","lastModifiedDate":"2022-03-30"},{"lineNumber":31,"author":{"gitId":"tanchinkiat99"},"content":"        return new CommandResult(MESSAGE_UNDO_SUCCESS);","lastModifiedDate":"2022-03-30"},{"lineNumber":32,"author":{"gitId":"tanchinkiat99"},"content":"    }","lastModifiedDate":"2022-03-30"},{"lineNumber":33,"author":{"gitId":"tanchinkiat99"},"content":"","lastModifiedDate":"2022-03-30"},{"lineNumber":34,"author":{"gitId":"tanchinkiat99"},"content":"    @Override","lastModifiedDate":"2022-03-30"},{"lineNumber":35,"author":{"gitId":"tanchinkiat99"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2022-03-30"},{"lineNumber":36,"author":{"gitId":"tanchinkiat99"},"content":"        return other \u003d\u003d this // short circuit if same object","lastModifiedDate":"2022-03-30"},{"lineNumber":37,"author":{"gitId":"tanchinkiat99"},"content":"                || (other instanceof UndoCommand); // instanceof handles nulls","lastModifiedDate":"2022-03-30"},{"lineNumber":38,"author":{"gitId":"tanchinkiat99"},"content":"    }","lastModifiedDate":"2022-03-30"},{"lineNumber":39,"author":{"gitId":"tanchinkiat99"},"content":"}","lastModifiedDate":"2022-03-30"}],"authorContributionMap":{"tanchinkiat99":39}},{"path":"src/main/java/seedu/address/logic/parser/AddCommandParser.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2017-02-05"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-05"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static seedu.address.commons.core.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2017-02-05"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_ADDRESS;","lastModifiedDate":"2017-02-05"},{"lineNumber":5,"author":{"gitId":"DannyDakota"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_BLOCK;","lastModifiedDate":"2022-03-17"},{"lineNumber":6,"author":{"gitId":"cwq2326"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_COVID_STATUS;","lastModifiedDate":"2022-02-28"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_EMAIL;","lastModifiedDate":"2017-02-05"},{"lineNumber":8,"author":{"gitId":"cwq2326"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_FACULTY;","lastModifiedDate":"2022-02-28"},{"lineNumber":9,"author":{"gitId":"cwq2326"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_MATRICULATION_NUMBER;","lastModifiedDate":"2022-02-28"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_NAME;","lastModifiedDate":"2017-06-06"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_PHONE;","lastModifiedDate":"2017-02-05"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_TAG;","lastModifiedDate":"2017-02-05"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-05"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import java.util.Set;","lastModifiedDate":"2017-03-17"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import java.util.stream.Stream;","lastModifiedDate":"2017-03-17"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-05"},{"lineNumber":17,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.AddCommand;","lastModifiedDate":"2017-02-05"},{"lineNumber":18,"author":{"gitId":"-"},"content":"import seedu.address.logic.parser.exceptions.ParseException;","lastModifiedDate":"2017-03-11"},{"lineNumber":19,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Address;","lastModifiedDate":"2017-03-17"},{"lineNumber":20,"author":{"gitId":"DannyDakota"},"content":"import seedu.address.model.person.Block;","lastModifiedDate":"2022-03-17"},{"lineNumber":21,"author":{"gitId":"cwq2326"},"content":"import seedu.address.model.person.CovidStatus;","lastModifiedDate":"2022-02-28"},{"lineNumber":22,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Email;","lastModifiedDate":"2017-03-17"},{"lineNumber":23,"author":{"gitId":"cwq2326"},"content":"import seedu.address.model.person.Faculty;","lastModifiedDate":"2022-02-28"},{"lineNumber":24,"author":{"gitId":"cwq2326"},"content":"import seedu.address.model.person.MatriculationNumber;","lastModifiedDate":"2022-02-28"},{"lineNumber":25,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Name;","lastModifiedDate":"2017-03-17"},{"lineNumber":26,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2017-03-17"},{"lineNumber":27,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Phone;","lastModifiedDate":"2017-03-17"},{"lineNumber":28,"author":{"gitId":"-"},"content":"import seedu.address.model.tag.Tag;","lastModifiedDate":"2017-03-17"},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-05"},{"lineNumber":30,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-02-05"},{"lineNumber":31,"author":{"gitId":"-"},"content":" * Parses input arguments and creates a new AddCommand object","lastModifiedDate":"2017-02-05"},{"lineNumber":32,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-02-05"},{"lineNumber":33,"author":{"gitId":"-"},"content":"public class AddCommandParser implements Parser\u003cAddCommand\u003e {","lastModifiedDate":"2017-07-06"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-05"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-02-05"},{"lineNumber":36,"author":{"gitId":"-"},"content":"     * Parses the given {@code String} of arguments in the context of the AddCommand","lastModifiedDate":"2017-02-05"},{"lineNumber":37,"author":{"gitId":"-"},"content":"     * and returns an AddCommand object for execution.","lastModifiedDate":"2017-02-05"},{"lineNumber":38,"author":{"gitId":"-"},"content":"     * @throws ParseException if the user input does not conform the expected format","lastModifiedDate":"2017-03-11"},{"lineNumber":39,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-02-05"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    public AddCommand parse(String args) throws ParseException {","lastModifiedDate":"2017-03-11"},{"lineNumber":41,"author":{"gitId":"-"},"content":"        ArgumentMultimap argMultimap \u003d","lastModifiedDate":"2017-03-20"},{"lineNumber":42,"author":{"gitId":"DannyDakota"},"content":"                ArgumentTokenizer.tokenize(args, PREFIX_NAME, PREFIX_BLOCK, PREFIX_FACULTY, PREFIX_PHONE,","lastModifiedDate":"2022-03-17"},{"lineNumber":43,"author":{"gitId":"cwq2326"},"content":"                        PREFIX_EMAIL, PREFIX_ADDRESS, PREFIX_MATRICULATION_NUMBER, PREFIX_COVID_STATUS, PREFIX_TAG);","lastModifiedDate":"2022-02-28"},{"lineNumber":44,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-17"},{"lineNumber":45,"author":{"gitId":"DannyDakota"},"content":"        if (!arePrefixesPresent(argMultimap, PREFIX_NAME, PREFIX_BLOCK, PREFIX_FACULTY, PREFIX_ADDRESS, PREFIX_PHONE,","lastModifiedDate":"2022-03-17"},{"lineNumber":46,"author":{"gitId":"DannyDakota"},"content":"                PREFIX_EMAIL, PREFIX_MATRICULATION_NUMBER, PREFIX_COVID_STATUS)","lastModifiedDate":"2022-03-17"},{"lineNumber":47,"author":{"gitId":"-"},"content":"                || !argMultimap.getPreamble().isEmpty()) {","lastModifiedDate":"2017-12-23"},{"lineNumber":48,"author":{"gitId":"-"},"content":"            throw new ParseException(String.format(MESSAGE_INVALID_COMMAND_FORMAT, AddCommand.MESSAGE_USAGE));","lastModifiedDate":"2017-03-11"},{"lineNumber":49,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-03-17"},{"lineNumber":50,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-17"},{"lineNumber":51,"author":{"gitId":"-"},"content":"        Name name \u003d ParserUtil.parseName(argMultimap.getValue(PREFIX_NAME).get());","lastModifiedDate":"2018-07-10"},{"lineNumber":52,"author":{"gitId":"DannyDakota"},"content":"        Block block \u003d ParserUtil.parseBlock(argMultimap.getValue(PREFIX_BLOCK).get());","lastModifiedDate":"2022-03-17"},{"lineNumber":53,"author":{"gitId":"cwq2326"},"content":"        Faculty faculty \u003d ParserUtil.parseFaculty(argMultimap.getValue(PREFIX_FACULTY).get());","lastModifiedDate":"2022-02-28"},{"lineNumber":54,"author":{"gitId":"-"},"content":"        Phone phone \u003d ParserUtil.parsePhone(argMultimap.getValue(PREFIX_PHONE).get());","lastModifiedDate":"2018-07-10"},{"lineNumber":55,"author":{"gitId":"-"},"content":"        Email email \u003d ParserUtil.parseEmail(argMultimap.getValue(PREFIX_EMAIL).get());","lastModifiedDate":"2018-07-10"},{"lineNumber":56,"author":{"gitId":"-"},"content":"        Address address \u003d ParserUtil.parseAddress(argMultimap.getValue(PREFIX_ADDRESS).get());","lastModifiedDate":"2018-07-10"},{"lineNumber":57,"author":{"gitId":"cwq2326"},"content":"        MatriculationNumber number \u003d ParserUtil.parseMatriculationNumber(","lastModifiedDate":"2022-02-28"},{"lineNumber":58,"author":{"gitId":"cwq2326"},"content":"                argMultimap.getValue(PREFIX_MATRICULATION_NUMBER).get());","lastModifiedDate":"2022-02-28"},{"lineNumber":59,"author":{"gitId":"cwq2326"},"content":"        CovidStatus status \u003d ParserUtil.parseCovidStatus(","lastModifiedDate":"2022-02-28"},{"lineNumber":60,"author":{"gitId":"cwq2326"},"content":"                argMultimap.getValue(PREFIX_COVID_STATUS).get());","lastModifiedDate":"2022-02-28"},{"lineNumber":61,"author":{"gitId":"-"},"content":"        Set\u003cTag\u003e tagList \u003d ParserUtil.parseTags(argMultimap.getAllValues(PREFIX_TAG));","lastModifiedDate":"2017-03-17"},{"lineNumber":62,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-17"},{"lineNumber":63,"author":{"gitId":"DannyDakota"},"content":"        Person person \u003d new Person(name, block, faculty, phone, email, address, number, status, tagList);","lastModifiedDate":"2022-03-17"},{"lineNumber":64,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-17"},{"lineNumber":65,"author":{"gitId":"-"},"content":"        return new AddCommand(person);","lastModifiedDate":"2017-03-17"},{"lineNumber":66,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-02-05"},{"lineNumber":67,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-05"},{"lineNumber":68,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-03-17"},{"lineNumber":69,"author":{"gitId":"-"},"content":"     * Returns true if none of the prefixes contains empty {@code Optional} values in the given","lastModifiedDate":"2017-03-17"},{"lineNumber":70,"author":{"gitId":"-"},"content":"     * {@code ArgumentMultimap}.","lastModifiedDate":"2017-03-17"},{"lineNumber":71,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-03-17"},{"lineNumber":72,"author":{"gitId":"-"},"content":"    private static boolean arePrefixesPresent(ArgumentMultimap argumentMultimap, Prefix... prefixes) {","lastModifiedDate":"2017-03-17"},{"lineNumber":73,"author":{"gitId":"-"},"content":"        return Stream.of(prefixes).allMatch(prefix -\u003e argumentMultimap.getValue(prefix).isPresent());","lastModifiedDate":"2017-03-17"},{"lineNumber":74,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-03-17"},{"lineNumber":75,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-17"},{"lineNumber":76,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-02-05"}],"authorContributionMap":{"DannyDakota":7,"cwq2326":12,"-":57}},{"path":"src/main/java/seedu/address/logic/parser/AddressBookParser.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2016-09-22"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static seedu.address.commons.core.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2017-01-19"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static seedu.address.commons.core.Messages.MESSAGE_UNKNOWN_COMMAND;","lastModifiedDate":"2017-01-19"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.util.regex.Matcher;","lastModifiedDate":"2017-01-19"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import java.util.regex.Pattern;","lastModifiedDate":"2017-01-19"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.AddCommand;","lastModifiedDate":"2022-03-09"},{"lineNumber":10,"author":{"gitId":"cwq2326"},"content":"import seedu.address.logic.commands.ArchiveCommand;","lastModifiedDate":"2022-03-26"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.ClearCommand;","lastModifiedDate":"2022-03-09"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.Command;","lastModifiedDate":"2022-03-09"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.DeleteCommand;","lastModifiedDate":"2022-03-09"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.EditCommand;","lastModifiedDate":"2022-03-09"},{"lineNumber":15,"author":{"gitId":"DannyDakota"},"content":"import seedu.address.logic.commands.EmailCommand;","lastModifiedDate":"2022-03-31"},{"lineNumber":16,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.ExitCommand;","lastModifiedDate":"2022-03-09"},{"lineNumber":17,"author":{"gitId":"tanchinkiat99"},"content":"import seedu.address.logic.commands.FilterCommand;","lastModifiedDate":"2022-03-11"},{"lineNumber":18,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.FindCommand;","lastModifiedDate":"2022-03-09"},{"lineNumber":19,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.HelpCommand;","lastModifiedDate":"2022-03-09"},{"lineNumber":20,"author":{"gitId":"kevinkuo0320"},"content":"import seedu.address.logic.commands.ImportCommand;","lastModifiedDate":"2022-04-01"},{"lineNumber":21,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.ListCommand;","lastModifiedDate":"2022-03-09"},{"lineNumber":22,"author":{"gitId":"tanchinkiat99"},"content":"import seedu.address.logic.commands.RedoCommand;","lastModifiedDate":"2022-03-30"},{"lineNumber":23,"author":{"gitId":"cwq2326"},"content":"import seedu.address.logic.commands.ResizeCommand;","lastModifiedDate":"2022-03-31"},{"lineNumber":24,"author":{"gitId":"jiale-c"},"content":"import seedu.address.logic.commands.SummariseCommand;","lastModifiedDate":"2022-03-09"},{"lineNumber":25,"author":{"gitId":"tanchinkiat99"},"content":"import seedu.address.logic.commands.UndoCommand;","lastModifiedDate":"2022-03-30"},{"lineNumber":26,"author":{"gitId":"-"},"content":"import seedu.address.logic.parser.exceptions.ParseException;","lastModifiedDate":"2017-03-11"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":28,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-24"},{"lineNumber":29,"author":{"gitId":"-"},"content":" * Parses user input.","lastModifiedDate":"2016-08-24"},{"lineNumber":30,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-24"},{"lineNumber":31,"author":{"gitId":"-"},"content":"public class AddressBookParser {","lastModifiedDate":"2017-07-07"},{"lineNumber":32,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":33,"author":{"gitId":"cwq2326"},"content":"    public static final String MESSAGE_IRRELEVANT_PARAMETERS \u003d \"Please ensure that there are no \"","lastModifiedDate":"2022-03-30"},{"lineNumber":34,"author":{"gitId":"cwq2326"},"content":"            + \"additional parameters for this type of command.\";","lastModifiedDate":"2022-03-30"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-24"},{"lineNumber":36,"author":{"gitId":"-"},"content":"     * Used for initial separation of command word and args.","lastModifiedDate":"2016-08-24"},{"lineNumber":37,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-24"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    private static final Pattern BASIC_COMMAND_FORMAT \u003d Pattern.compile(\"(?\u003ccommandWord\u003e\\\\S+)(?\u003carguments\u003e.*)\");","lastModifiedDate":"2016-09-22"},{"lineNumber":39,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":40,"author":{"gitId":"cwq2326"},"content":"    private String[] singleCommandList \u003d {ClearCommand.COMMAND_WORD, ListCommand.COMMAND_WORD,","lastModifiedDate":"2022-03-30"},{"lineNumber":41,"author":{"gitId":"cwq2326"},"content":"        ExitCommand.COMMAND_WORD, HelpCommand.COMMAND_WORD, SummariseCommand.COMMAND_WORD,","lastModifiedDate":"2022-03-30"},{"lineNumber":42,"author":{"gitId":"cwq2326"},"content":"        ArchiveCommand.COMMAND_WORD, UndoCommand.COMMAND_WORD, RedoCommand.COMMAND_WORD, EmailCommand.COMMAND_WORD};","lastModifiedDate":"2022-03-31"},{"lineNumber":43,"author":{"gitId":"cwq2326"},"content":"","lastModifiedDate":"2022-03-30"},{"lineNumber":44,"author":{"gitId":"cwq2326"},"content":"    /**","lastModifiedDate":"2022-03-30"},{"lineNumber":45,"author":{"gitId":"cwq2326"},"content":"     * Checks whether command that does not require any parameters such as {@Code ListCommand} are input by the user.","lastModifiedDate":"2022-03-30"},{"lineNumber":46,"author":{"gitId":"tanchinkiat99"},"content":"     * @param arguments any arguments that user may have added","lastModifiedDate":"2022-03-31"},{"lineNumber":47,"author":{"gitId":"cwq2326"},"content":"     * @param commandWord the type of command inputted","lastModifiedDate":"2022-03-30"},{"lineNumber":48,"author":{"gitId":"cwq2326"},"content":"     * @throws ParseException if the user input additional parameters","lastModifiedDate":"2022-03-30"},{"lineNumber":49,"author":{"gitId":"cwq2326"},"content":"     */","lastModifiedDate":"2022-03-30"},{"lineNumber":50,"author":{"gitId":"tanchinkiat99"},"content":"    private void checkForSingleCommandWord(String arguments, String commandWord) throws ParseException {","lastModifiedDate":"2022-03-30"},{"lineNumber":51,"author":{"gitId":"tanchinkiat99"},"content":"        String trimmedArgs \u003d arguments.trim();","lastModifiedDate":"2022-03-30"},{"lineNumber":52,"author":{"gitId":"tanchinkiat99"},"content":"        for (String command : singleCommandList) {","lastModifiedDate":"2022-03-30"},{"lineNumber":53,"author":{"gitId":"tanchinkiat99"},"content":"            if (command.equals(commandWord) \u0026\u0026 !trimmedArgs.isEmpty()) {","lastModifiedDate":"2022-03-30"},{"lineNumber":54,"author":{"gitId":"cwq2326"},"content":"                throw new ParseException(MESSAGE_IRRELEVANT_PARAMETERS);","lastModifiedDate":"2022-03-30"},{"lineNumber":55,"author":{"gitId":"cwq2326"},"content":"            }","lastModifiedDate":"2022-03-30"},{"lineNumber":56,"author":{"gitId":"cwq2326"},"content":"        }","lastModifiedDate":"2022-03-30"},{"lineNumber":57,"author":{"gitId":"cwq2326"},"content":"    }","lastModifiedDate":"2022-03-30"},{"lineNumber":58,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":59,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-24"},{"lineNumber":60,"author":{"gitId":"-"},"content":"     * Parses user input into command for execution.","lastModifiedDate":"2016-08-24"},{"lineNumber":61,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2016-08-24"},{"lineNumber":62,"author":{"gitId":"-"},"content":"     * @param userInput full user input string","lastModifiedDate":"2016-08-24"},{"lineNumber":63,"author":{"gitId":"-"},"content":"     * @return the command based on the user input","lastModifiedDate":"2016-08-24"},{"lineNumber":64,"author":{"gitId":"-"},"content":"     * @throws ParseException if the user input does not conform the expected format","lastModifiedDate":"2017-03-11"},{"lineNumber":65,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-24"},{"lineNumber":66,"author":{"gitId":"-"},"content":"    public Command parseCommand(String userInput) throws ParseException {","lastModifiedDate":"2017-03-11"},{"lineNumber":67,"author":{"gitId":"-"},"content":"        final Matcher matcher \u003d BASIC_COMMAND_FORMAT.matcher(userInput.trim());","lastModifiedDate":"2016-08-24"},{"lineNumber":68,"author":{"gitId":"-"},"content":"        if (!matcher.matches()) {","lastModifiedDate":"2016-08-24"},{"lineNumber":69,"author":{"gitId":"-"},"content":"            throw new ParseException(String.format(MESSAGE_INVALID_COMMAND_FORMAT, HelpCommand.MESSAGE_USAGE));","lastModifiedDate":"2017-03-11"},{"lineNumber":70,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-08-24"},{"lineNumber":71,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":72,"author":{"gitId":"-"},"content":"        final String commandWord \u003d matcher.group(\"commandWord\");","lastModifiedDate":"2016-08-24"},{"lineNumber":73,"author":{"gitId":"kevinkuo0320"},"content":"","lastModifiedDate":"2022-03-31"},{"lineNumber":74,"author":{"gitId":"-"},"content":"        final String arguments \u003d matcher.group(\"arguments\");","lastModifiedDate":"2016-08-24"},{"lineNumber":75,"author":{"gitId":"kevinkuo0320"},"content":"","lastModifiedDate":"2022-03-31"},{"lineNumber":76,"author":{"gitId":"tanchinkiat99"},"content":"        checkForSingleCommandWord(arguments, commandWord);","lastModifiedDate":"2022-03-30"},{"lineNumber":77,"author":{"gitId":"cwq2326"},"content":"","lastModifiedDate":"2022-03-30"},{"lineNumber":78,"author":{"gitId":"-"},"content":"        switch (commandWord) {","lastModifiedDate":"2016-08-24"},{"lineNumber":79,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":80,"author":{"gitId":"-"},"content":"        case AddCommand.COMMAND_WORD:","lastModifiedDate":"2016-09-21"},{"lineNumber":81,"author":{"gitId":"-"},"content":"            return new AddCommandParser().parse(arguments);","lastModifiedDate":"2017-02-05"},{"lineNumber":82,"author":{"gitId":"-"},"content":"        case EditCommand.COMMAND_WORD:","lastModifiedDate":"2016-12-21"},{"lineNumber":83,"author":{"gitId":"-"},"content":"            return new EditCommandParser().parse(arguments);","lastModifiedDate":"2017-01-26"},{"lineNumber":84,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-21"},{"lineNumber":85,"author":{"gitId":"-"},"content":"        case DeleteCommand.COMMAND_WORD:","lastModifiedDate":"2016-09-21"},{"lineNumber":86,"author":{"gitId":"-"},"content":"            return new DeleteCommandParser().parse(arguments);","lastModifiedDate":"2017-01-26"},{"lineNumber":87,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":88,"author":{"gitId":"-"},"content":"        case ClearCommand.COMMAND_WORD:","lastModifiedDate":"2016-09-21"},{"lineNumber":89,"author":{"gitId":"-"},"content":"            return new ClearCommand();","lastModifiedDate":"2016-09-21"},{"lineNumber":90,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":91,"author":{"gitId":"-"},"content":"        case FindCommand.COMMAND_WORD:","lastModifiedDate":"2016-09-21"},{"lineNumber":92,"author":{"gitId":"-"},"content":"            return new FindCommandParser().parse(arguments);","lastModifiedDate":"2017-01-26"},{"lineNumber":93,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":94,"author":{"gitId":"-"},"content":"        case ListCommand.COMMAND_WORD:","lastModifiedDate":"2016-09-21"},{"lineNumber":95,"author":{"gitId":"-"},"content":"            return new ListCommand();","lastModifiedDate":"2016-09-21"},{"lineNumber":96,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":97,"author":{"gitId":"-"},"content":"        case ExitCommand.COMMAND_WORD:","lastModifiedDate":"2016-08-24"},{"lineNumber":98,"author":{"gitId":"-"},"content":"            return new ExitCommand();","lastModifiedDate":"2016-08-24"},{"lineNumber":99,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":100,"author":{"gitId":"tanchinkiat99"},"content":"        case FilterCommand.COMMAND_WORD:","lastModifiedDate":"2022-03-11"},{"lineNumber":101,"author":{"gitId":"tanchinkiat99"},"content":"            return new FilterCommandParser().parse(arguments);","lastModifiedDate":"2022-03-11"},{"lineNumber":102,"author":{"gitId":"tanchinkiat99"},"content":"","lastModifiedDate":"2022-03-11"},{"lineNumber":103,"author":{"gitId":"-"},"content":"        case HelpCommand.COMMAND_WORD:","lastModifiedDate":"2016-08-26"},{"lineNumber":104,"author":{"gitId":"-"},"content":"            return new HelpCommand();","lastModifiedDate":"2016-08-24"},{"lineNumber":105,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-14"},{"lineNumber":106,"author":{"gitId":"jiale-c"},"content":"        case SummariseCommand.COMMAND_WORD:","lastModifiedDate":"2022-03-09"},{"lineNumber":107,"author":{"gitId":"jiale-c"},"content":"            return new SummariseCommand();","lastModifiedDate":"2022-03-09"},{"lineNumber":108,"author":{"gitId":"jiale-c"},"content":"","lastModifiedDate":"2022-03-09"},{"lineNumber":109,"author":{"gitId":"cwq2326"},"content":"        case ArchiveCommand.COMMAND_WORD:","lastModifiedDate":"2022-03-26"},{"lineNumber":110,"author":{"gitId":"cwq2326"},"content":"            return new ArchiveCommand();","lastModifiedDate":"2022-03-26"},{"lineNumber":111,"author":{"gitId":"cwq2326"},"content":"","lastModifiedDate":"2022-03-26"},{"lineNumber":112,"author":{"gitId":"tanchinkiat99"},"content":"        case UndoCommand.COMMAND_WORD:","lastModifiedDate":"2022-03-30"},{"lineNumber":113,"author":{"gitId":"tanchinkiat99"},"content":"            return new UndoCommand();","lastModifiedDate":"2022-03-30"},{"lineNumber":114,"author":{"gitId":"tanchinkiat99"},"content":"","lastModifiedDate":"2022-03-30"},{"lineNumber":115,"author":{"gitId":"tanchinkiat99"},"content":"        case RedoCommand.COMMAND_WORD:","lastModifiedDate":"2022-03-30"},{"lineNumber":116,"author":{"gitId":"tanchinkiat99"},"content":"            return new RedoCommand();","lastModifiedDate":"2022-03-30"},{"lineNumber":117,"author":{"gitId":"tanchinkiat99"},"content":"","lastModifiedDate":"2022-03-30"},{"lineNumber":118,"author":{"gitId":"cwq2326"},"content":"        case ResizeCommand.COMMAND_WORD:","lastModifiedDate":"2022-03-31"},{"lineNumber":119,"author":{"gitId":"cwq2326"},"content":"            return new ResizeCommandParser().parse(arguments);","lastModifiedDate":"2022-03-31"},{"lineNumber":120,"author":{"gitId":"cwq2326"},"content":"","lastModifiedDate":"2022-03-31"},{"lineNumber":121,"author":{"gitId":"DannyDakota"},"content":"        case EmailCommand.COMMAND_WORD:","lastModifiedDate":"2022-03-31"},{"lineNumber":122,"author":{"gitId":"DannyDakota"},"content":"            return new EmailCommand();","lastModifiedDate":"2022-03-31"},{"lineNumber":123,"author":{"gitId":"DannyDakota"},"content":"","lastModifiedDate":"2022-03-31"},{"lineNumber":124,"author":{"gitId":"kevinkuo0320"},"content":"        case ImportCommand.COMMAND_WORD:","lastModifiedDate":"2022-04-01"},{"lineNumber":125,"author":{"gitId":"kevinkuo0320"},"content":"            return new ImportCommandParser().parse(arguments);","lastModifiedDate":"2022-04-01"},{"lineNumber":126,"author":{"gitId":"cwq2326"},"content":"","lastModifiedDate":"2022-03-31"},{"lineNumber":127,"author":{"gitId":"-"},"content":"        default:","lastModifiedDate":"2016-08-26"},{"lineNumber":128,"author":{"gitId":"-"},"content":"            throw new ParseException(MESSAGE_UNKNOWN_COMMAND);","lastModifiedDate":"2017-03-11"},{"lineNumber":129,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-08-24"},{"lineNumber":130,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":131,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":132,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-24"}],"authorContributionMap":{"tanchinkiat99":18,"DannyDakota":4,"kevinkuo0320":5,"cwq2326":25,"jiale-c":4,"-":76}},{"path":"src/main/java/seedu/address/logic/parser/CliSyntax.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2017-02-11"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-11"},{"lineNumber":3,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-02-11"},{"lineNumber":4,"author":{"gitId":"-"},"content":" * Contains Command Line Interface (CLI) syntax definitions common to multiple commands","lastModifiedDate":"2017-02-11"},{"lineNumber":5,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-02-11"},{"lineNumber":6,"author":{"gitId":"-"},"content":"public class CliSyntax {","lastModifiedDate":"2017-02-11"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-11"},{"lineNumber":8,"author":{"gitId":"-"},"content":"    /* Prefix definitions */","lastModifiedDate":"2017-02-11"},{"lineNumber":9,"author":{"gitId":"-"},"content":"    public static final Prefix PREFIX_NAME \u003d new Prefix(\"n/\");","lastModifiedDate":"2017-06-06"},{"lineNumber":10,"author":{"gitId":"DannyDakota"},"content":"    public static final Prefix PREFIX_BLOCK \u003d new Prefix(\"b/\");","lastModifiedDate":"2022-03-17"},{"lineNumber":11,"author":{"gitId":"cwq2326"},"content":"    public static final Prefix PREFIX_FACULTY \u003d new Prefix(\"f/\");","lastModifiedDate":"2022-02-28"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    public static final Prefix PREFIX_PHONE \u003d new Prefix(\"p/\");","lastModifiedDate":"2017-02-11"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    public static final Prefix PREFIX_EMAIL \u003d new Prefix(\"e/\");","lastModifiedDate":"2017-02-11"},{"lineNumber":14,"author":{"gitId":"-"},"content":"    public static final Prefix PREFIX_ADDRESS \u003d new Prefix(\"a/\");","lastModifiedDate":"2017-02-11"},{"lineNumber":15,"author":{"gitId":"cwq2326"},"content":"    public static final Prefix PREFIX_MATRICULATION_NUMBER \u003d new Prefix(\"mc/\");","lastModifiedDate":"2022-02-28"},{"lineNumber":16,"author":{"gitId":"cwq2326"},"content":"    public static final Prefix PREFIX_COVID_STATUS \u003d new Prefix(\"cs/\");","lastModifiedDate":"2022-02-28"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    public static final Prefix PREFIX_TAG \u003d new Prefix(\"t/\");","lastModifiedDate":"2017-02-11"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-11"},{"lineNumber":19,"author":{"gitId":"cwq2326"},"content":"","lastModifiedDate":"2022-02-28"},{"lineNumber":20,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-02-11"}],"authorContributionMap":{"DannyDakota":1,"cwq2326":4,"-":15}},{"path":"src/main/java/seedu/address/logic/parser/EditCommandParser.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2017-01-26"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2017-05-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static seedu.address.commons.core.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2017-01-26"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_ADDRESS;","lastModifiedDate":"2017-01-26"},{"lineNumber":6,"author":{"gitId":"DannyDakota"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_BLOCK;","lastModifiedDate":"2022-03-17"},{"lineNumber":7,"author":{"gitId":"DannyDakota"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_COVID_STATUS;","lastModifiedDate":"2022-03-08"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_EMAIL;","lastModifiedDate":"2017-01-26"},{"lineNumber":9,"author":{"gitId":"DannyDakota"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_FACULTY;","lastModifiedDate":"2022-03-08"},{"lineNumber":10,"author":{"gitId":"DannyDakota"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_MATRICULATION_NUMBER;","lastModifiedDate":"2022-03-08"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_NAME;","lastModifiedDate":"2017-06-06"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_PHONE;","lastModifiedDate":"2017-01-26"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_TAG;","lastModifiedDate":"2017-01-26"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import java.util.Collection;","lastModifiedDate":"2017-01-26"},{"lineNumber":16,"author":{"gitId":"-"},"content":"import java.util.Collections;","lastModifiedDate":"2017-01-26"},{"lineNumber":17,"author":{"gitId":"-"},"content":"import java.util.Optional;","lastModifiedDate":"2017-01-26"},{"lineNumber":18,"author":{"gitId":"-"},"content":"import java.util.Set;","lastModifiedDate":"2017-03-07"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":20,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.index.Index;","lastModifiedDate":"2017-05-25"},{"lineNumber":21,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.EditCommand;","lastModifiedDate":"2017-01-26"},{"lineNumber":22,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.EditCommand.EditPersonDescriptor;","lastModifiedDate":"2017-01-26"},{"lineNumber":23,"author":{"gitId":"-"},"content":"import seedu.address.logic.parser.exceptions.ParseException;","lastModifiedDate":"2017-03-11"},{"lineNumber":24,"author":{"gitId":"-"},"content":"import seedu.address.model.tag.Tag;","lastModifiedDate":"2017-03-07"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":26,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-01-26"},{"lineNumber":27,"author":{"gitId":"-"},"content":" * Parses input arguments and creates a new EditCommand object","lastModifiedDate":"2017-01-26"},{"lineNumber":28,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-01-26"},{"lineNumber":29,"author":{"gitId":"-"},"content":"public class EditCommandParser implements Parser\u003cEditCommand\u003e {","lastModifiedDate":"2017-07-06"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-01-26"},{"lineNumber":32,"author":{"gitId":"-"},"content":"     * Parses the given {@code String} of arguments in the context of the EditCommand","lastModifiedDate":"2017-01-26"},{"lineNumber":33,"author":{"gitId":"-"},"content":"     * and returns an EditCommand object for execution.","lastModifiedDate":"2017-01-26"},{"lineNumber":34,"author":{"gitId":"-"},"content":"     * @throws ParseException if the user input does not conform the expected format","lastModifiedDate":"2017-03-11"},{"lineNumber":35,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-01-26"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    public EditCommand parse(String args) throws ParseException {","lastModifiedDate":"2017-03-11"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        requireNonNull(args);","lastModifiedDate":"2017-05-15"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        ArgumentMultimap argMultimap \u003d","lastModifiedDate":"2017-03-20"},{"lineNumber":39,"author":{"gitId":"DannyDakota"},"content":"                ArgumentTokenizer.tokenize(args, PREFIX_NAME, PREFIX_BLOCK, PREFIX_FACULTY, PREFIX_PHONE,","lastModifiedDate":"2022-03-17"},{"lineNumber":40,"author":{"gitId":"DannyDakota"},"content":"                        PREFIX_EMAIL, PREFIX_ADDRESS, PREFIX_MATRICULATION_NUMBER, PREFIX_COVID_STATUS, PREFIX_TAG);","lastModifiedDate":"2022-03-08"},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-15"},{"lineNumber":42,"author":{"gitId":"-"},"content":"        Index index;","lastModifiedDate":"2017-05-25"},{"lineNumber":43,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-15"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2017-05-15"},{"lineNumber":45,"author":{"gitId":"-"},"content":"            index \u003d ParserUtil.parseIndex(argMultimap.getPreamble());","lastModifiedDate":"2017-06-06"},{"lineNumber":46,"author":{"gitId":"-"},"content":"        } catch (ParseException pe) {","lastModifiedDate":"2018-07-10"},{"lineNumber":47,"author":{"gitId":"-"},"content":"            throw new ParseException(String.format(MESSAGE_INVALID_COMMAND_FORMAT, EditCommand.MESSAGE_USAGE), pe);","lastModifiedDate":"2018-08-06"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-01-26"},{"lineNumber":49,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":50,"author":{"gitId":"-"},"content":"        EditPersonDescriptor editPersonDescriptor \u003d new EditPersonDescriptor();","lastModifiedDate":"2017-01-26"},{"lineNumber":51,"author":{"gitId":"-"},"content":"        if (argMultimap.getValue(PREFIX_NAME).isPresent()) {","lastModifiedDate":"2018-07-10"},{"lineNumber":52,"author":{"gitId":"-"},"content":"            editPersonDescriptor.setName(ParserUtil.parseName(argMultimap.getValue(PREFIX_NAME).get()));","lastModifiedDate":"2018-07-10"},{"lineNumber":53,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-07-10"},{"lineNumber":54,"author":{"gitId":"DannyDakota"},"content":"        if (argMultimap.getValue(PREFIX_BLOCK).isPresent()) {","lastModifiedDate":"2022-03-17"},{"lineNumber":55,"author":{"gitId":"DannyDakota"},"content":"            editPersonDescriptor.setBlock(ParserUtil.parseBlock(argMultimap.getValue(PREFIX_BLOCK).get()));","lastModifiedDate":"2022-03-17"},{"lineNumber":56,"author":{"gitId":"DannyDakota"},"content":"        }","lastModifiedDate":"2022-03-17"},{"lineNumber":57,"author":{"gitId":"DannyDakota"},"content":"        if (argMultimap.getValue(PREFIX_FACULTY).isPresent()) {","lastModifiedDate":"2022-03-08"},{"lineNumber":58,"author":{"gitId":"DannyDakota"},"content":"            editPersonDescriptor.setFaculty(ParserUtil.parseFaculty(argMultimap.getValue(PREFIX_FACULTY).get()));","lastModifiedDate":"2022-03-08"},{"lineNumber":59,"author":{"gitId":"DannyDakota"},"content":"        }","lastModifiedDate":"2022-03-08"},{"lineNumber":60,"author":{"gitId":"-"},"content":"        if (argMultimap.getValue(PREFIX_PHONE).isPresent()) {","lastModifiedDate":"2018-07-10"},{"lineNumber":61,"author":{"gitId":"-"},"content":"            editPersonDescriptor.setPhone(ParserUtil.parsePhone(argMultimap.getValue(PREFIX_PHONE).get()));","lastModifiedDate":"2018-07-10"},{"lineNumber":62,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-07-10"},{"lineNumber":63,"author":{"gitId":"-"},"content":"        if (argMultimap.getValue(PREFIX_EMAIL).isPresent()) {","lastModifiedDate":"2018-07-10"},{"lineNumber":64,"author":{"gitId":"-"},"content":"            editPersonDescriptor.setEmail(ParserUtil.parseEmail(argMultimap.getValue(PREFIX_EMAIL).get()));","lastModifiedDate":"2018-07-10"},{"lineNumber":65,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-07-10"},{"lineNumber":66,"author":{"gitId":"-"},"content":"        if (argMultimap.getValue(PREFIX_ADDRESS).isPresent()) {","lastModifiedDate":"2018-07-10"},{"lineNumber":67,"author":{"gitId":"-"},"content":"            editPersonDescriptor.setAddress(ParserUtil.parseAddress(argMultimap.getValue(PREFIX_ADDRESS).get()));","lastModifiedDate":"2018-07-10"},{"lineNumber":68,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-07-10"},{"lineNumber":69,"author":{"gitId":"DannyDakota"},"content":"        if (argMultimap.getValue(PREFIX_MATRICULATION_NUMBER).isPresent()) {","lastModifiedDate":"2022-03-08"},{"lineNumber":70,"author":{"gitId":"DannyDakota"},"content":"            editPersonDescriptor.setMatriculationNumber(ParserUtil","lastModifiedDate":"2022-03-08"},{"lineNumber":71,"author":{"gitId":"DannyDakota"},"content":"                    .parseMatriculationNumber(argMultimap.getValue(PREFIX_MATRICULATION_NUMBER).get()));","lastModifiedDate":"2022-03-08"},{"lineNumber":72,"author":{"gitId":"DannyDakota"},"content":"        }","lastModifiedDate":"2022-03-08"},{"lineNumber":73,"author":{"gitId":"DannyDakota"},"content":"        if (argMultimap.getValue(PREFIX_COVID_STATUS).isPresent()) {","lastModifiedDate":"2022-03-08"},{"lineNumber":74,"author":{"gitId":"DannyDakota"},"content":"            editPersonDescriptor.setCovidStatus(ParserUtil","lastModifiedDate":"2022-03-08"},{"lineNumber":75,"author":{"gitId":"DannyDakota"},"content":"                    .parseCovidStatus(argMultimap.getValue(PREFIX_COVID_STATUS).get()));","lastModifiedDate":"2022-03-08"},{"lineNumber":76,"author":{"gitId":"DannyDakota"},"content":"        }","lastModifiedDate":"2022-03-08"},{"lineNumber":77,"author":{"gitId":"-"},"content":"        parseTagsForEdit(argMultimap.getAllValues(PREFIX_TAG)).ifPresent(editPersonDescriptor::setTags);","lastModifiedDate":"2017-06-21"},{"lineNumber":78,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":79,"author":{"gitId":"-"},"content":"        if (!editPersonDescriptor.isAnyFieldEdited()) {","lastModifiedDate":"2017-01-26"},{"lineNumber":80,"author":{"gitId":"-"},"content":"            throw new ParseException(EditCommand.MESSAGE_NOT_EDITED);","lastModifiedDate":"2017-03-11"},{"lineNumber":81,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-01-26"},{"lineNumber":82,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":83,"author":{"gitId":"-"},"content":"        return new EditCommand(index, editPersonDescriptor);","lastModifiedDate":"2017-05-15"},{"lineNumber":84,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-01-26"},{"lineNumber":85,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":86,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-01-26"},{"lineNumber":87,"author":{"gitId":"-"},"content":"     * Parses {@code Collection\u003cString\u003e tags} into a {@code Set\u003cTag\u003e} if {@code tags} is non-empty.","lastModifiedDate":"2017-03-07"},{"lineNumber":88,"author":{"gitId":"-"},"content":"     * If {@code tags} contain only one element which is an empty string, it will be parsed into a","lastModifiedDate":"2017-01-26"},{"lineNumber":89,"author":{"gitId":"-"},"content":"     * {@code Set\u003cTag\u003e} containing zero tags.","lastModifiedDate":"2017-03-07"},{"lineNumber":90,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-01-26"},{"lineNumber":91,"author":{"gitId":"-"},"content":"    private Optional\u003cSet\u003cTag\u003e\u003e parseTagsForEdit(Collection\u003cString\u003e tags) throws ParseException {","lastModifiedDate":"2018-07-10"},{"lineNumber":92,"author":{"gitId":"-"},"content":"        assert tags !\u003d null;","lastModifiedDate":"2017-01-26"},{"lineNumber":93,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":94,"author":{"gitId":"-"},"content":"        if (tags.isEmpty()) {","lastModifiedDate":"2017-01-26"},{"lineNumber":95,"author":{"gitId":"-"},"content":"            return Optional.empty();","lastModifiedDate":"2017-01-26"},{"lineNumber":96,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-01-26"},{"lineNumber":97,"author":{"gitId":"-"},"content":"        Collection\u003cString\u003e tagSet \u003d tags.size() \u003d\u003d 1 \u0026\u0026 tags.contains(\"\") ? Collections.emptySet() : tags;","lastModifiedDate":"2017-01-26"},{"lineNumber":98,"author":{"gitId":"-"},"content":"        return Optional.of(ParserUtil.parseTags(tagSet));","lastModifiedDate":"2017-01-26"},{"lineNumber":99,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-01-26"},{"lineNumber":100,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":101,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-01-26"}],"authorContributionMap":{"DannyDakota":20,"-":81}},{"path":"src/main/java/seedu/address/logic/parser/FilterCommandParser.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"tanchinkiat99"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2022-03-11"},{"lineNumber":2,"author":{"gitId":"tanchinkiat99"},"content":"","lastModifiedDate":"2022-03-11"},{"lineNumber":3,"author":{"gitId":"tanchinkiat99"},"content":"import static seedu.address.commons.core.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2022-03-11"},{"lineNumber":4,"author":{"gitId":"tanchinkiat99"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_BLOCK;","lastModifiedDate":"2022-03-22"},{"lineNumber":5,"author":{"gitId":"tanchinkiat99"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_COVID_STATUS;","lastModifiedDate":"2022-03-18"},{"lineNumber":6,"author":{"gitId":"tanchinkiat99"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_FACULTY;","lastModifiedDate":"2022-03-18"},{"lineNumber":7,"author":{"gitId":"tanchinkiat99"},"content":"","lastModifiedDate":"2022-03-11"},{"lineNumber":8,"author":{"gitId":"tanchinkiat99"},"content":"import seedu.address.logic.commands.FilterCommand;","lastModifiedDate":"2022-03-11"},{"lineNumber":9,"author":{"gitId":"tanchinkiat99"},"content":"import seedu.address.logic.commands.FilterCommand.FilterDescriptor;","lastModifiedDate":"2022-03-22"},{"lineNumber":10,"author":{"gitId":"tanchinkiat99"},"content":"import seedu.address.logic.parser.exceptions.ParseException;","lastModifiedDate":"2022-03-11"},{"lineNumber":11,"author":{"gitId":"tanchinkiat99"},"content":"","lastModifiedDate":"2022-03-11"},{"lineNumber":12,"author":{"gitId":"tanchinkiat99"},"content":"/**","lastModifiedDate":"2022-03-11"},{"lineNumber":13,"author":{"gitId":"tanchinkiat99"},"content":" * Parses input arguments and creates a new FilterCommand object","lastModifiedDate":"2022-03-14"},{"lineNumber":14,"author":{"gitId":"tanchinkiat99"},"content":" */","lastModifiedDate":"2022-03-11"},{"lineNumber":15,"author":{"gitId":"tanchinkiat99"},"content":"public class FilterCommandParser implements Parser\u003cFilterCommand\u003e {","lastModifiedDate":"2022-03-11"},{"lineNumber":16,"author":{"gitId":"tanchinkiat99"},"content":"","lastModifiedDate":"2022-03-11"},{"lineNumber":17,"author":{"gitId":"tanchinkiat99"},"content":"    /**","lastModifiedDate":"2022-03-11"},{"lineNumber":18,"author":{"gitId":"tanchinkiat99"},"content":"     * Parses the given {@code String} of arguments in the context of the FilterCommand","lastModifiedDate":"2022-03-18"},{"lineNumber":19,"author":{"gitId":"tanchinkiat99"},"content":"     * and returns a FilterCommand object for execution.","lastModifiedDate":"2022-03-18"},{"lineNumber":20,"author":{"gitId":"tanchinkiat99"},"content":"     * @throws ParseException if the user input does not conform the expected format","lastModifiedDate":"2022-03-11"},{"lineNumber":21,"author":{"gitId":"tanchinkiat99"},"content":"     */","lastModifiedDate":"2022-03-11"},{"lineNumber":22,"author":{"gitId":"tanchinkiat99"},"content":"    public FilterCommand parse(String args) throws ParseException {","lastModifiedDate":"2022-03-11"},{"lineNumber":23,"author":{"gitId":"tanchinkiat99"},"content":"","lastModifiedDate":"2022-03-22"},{"lineNumber":24,"author":{"gitId":"tanchinkiat99"},"content":"        if (args.isEmpty()) {","lastModifiedDate":"2022-03-18"},{"lineNumber":25,"author":{"gitId":"tanchinkiat99"},"content":"            throw new ParseException(","lastModifiedDate":"2022-03-11"},{"lineNumber":26,"author":{"gitId":"tanchinkiat99"},"content":"                    String.format(MESSAGE_INVALID_COMMAND_FORMAT, FilterCommand.MESSAGE_USAGE));","lastModifiedDate":"2022-03-11"},{"lineNumber":27,"author":{"gitId":"tanchinkiat99"},"content":"        }","lastModifiedDate":"2022-03-11"},{"lineNumber":28,"author":{"gitId":"tanchinkiat99"},"content":"","lastModifiedDate":"2022-03-11"},{"lineNumber":29,"author":{"gitId":"tanchinkiat99"},"content":"        ArgumentMultimap argMultimap \u003d","lastModifiedDate":"2022-03-18"},{"lineNumber":30,"author":{"gitId":"tanchinkiat99"},"content":"                ArgumentTokenizer.tokenize(args, PREFIX_FACULTY, PREFIX_COVID_STATUS, PREFIX_BLOCK);","lastModifiedDate":"2022-03-22"},{"lineNumber":31,"author":{"gitId":"tanchinkiat99"},"content":"","lastModifiedDate":"2022-03-18"},{"lineNumber":32,"author":{"gitId":"tanchinkiat99"},"content":"        FilterDescriptor filterDescriptor \u003d new FilterDescriptor();","lastModifiedDate":"2022-03-22"},{"lineNumber":33,"author":{"gitId":"tanchinkiat99"},"content":"        if (argMultimap.getValue(PREFIX_FACULTY).isPresent()) {","lastModifiedDate":"2022-03-18"},{"lineNumber":34,"author":{"gitId":"tanchinkiat99"},"content":"            filterDescriptor.setFaculty(ParserUtil.parseFaculty(","lastModifiedDate":"2022-03-18"},{"lineNumber":35,"author":{"gitId":"tanchinkiat99"},"content":"                    argMultimap.getValue(PREFIX_FACULTY).get()));","lastModifiedDate":"2022-03-18"},{"lineNumber":36,"author":{"gitId":"tanchinkiat99"},"content":"        }","lastModifiedDate":"2022-03-18"},{"lineNumber":37,"author":{"gitId":"tanchinkiat99"},"content":"        if (argMultimap.getValue(PREFIX_COVID_STATUS).isPresent()) {","lastModifiedDate":"2022-03-18"},{"lineNumber":38,"author":{"gitId":"tanchinkiat99"},"content":"            filterDescriptor.setCovidStatus(ParserUtil.parseCovidStatus(","lastModifiedDate":"2022-03-18"},{"lineNumber":39,"author":{"gitId":"tanchinkiat99"},"content":"                    argMultimap.getValue(PREFIX_COVID_STATUS).get()));","lastModifiedDate":"2022-03-18"},{"lineNumber":40,"author":{"gitId":"tanchinkiat99"},"content":"        }","lastModifiedDate":"2022-03-18"},{"lineNumber":41,"author":{"gitId":"tanchinkiat99"},"content":"        if (argMultimap.getValue(PREFIX_BLOCK).isPresent()) {","lastModifiedDate":"2022-03-22"},{"lineNumber":42,"author":{"gitId":"tanchinkiat99"},"content":"            filterDescriptor.setBlock(ParserUtil.parseBlock(","lastModifiedDate":"2022-03-22"},{"lineNumber":43,"author":{"gitId":"tanchinkiat99"},"content":"                    argMultimap.getValue(PREFIX_BLOCK).get()));","lastModifiedDate":"2022-03-22"},{"lineNumber":44,"author":{"gitId":"tanchinkiat99"},"content":"        }","lastModifiedDate":"2022-03-22"},{"lineNumber":45,"author":{"gitId":"tanchinkiat99"},"content":"","lastModifiedDate":"2022-03-18"},{"lineNumber":46,"author":{"gitId":"tanchinkiat99"},"content":"        if (filterDescriptor.isEmpty()) {","lastModifiedDate":"2022-03-30"},{"lineNumber":47,"author":{"gitId":"tanchinkiat99"},"content":"            throw new ParseException(","lastModifiedDate":"2022-03-30"},{"lineNumber":48,"author":{"gitId":"tanchinkiat99"},"content":"                    String.format(MESSAGE_INVALID_COMMAND_FORMAT, FilterCommand.MESSAGE_USAGE));","lastModifiedDate":"2022-03-30"},{"lineNumber":49,"author":{"gitId":"tanchinkiat99"},"content":"        }","lastModifiedDate":"2022-03-30"},{"lineNumber":50,"author":{"gitId":"tanchinkiat99"},"content":"","lastModifiedDate":"2022-03-30"},{"lineNumber":51,"author":{"gitId":"tanchinkiat99"},"content":"        return new FilterCommand(filterDescriptor);","lastModifiedDate":"2022-03-18"},{"lineNumber":52,"author":{"gitId":"tanchinkiat99"},"content":"    }","lastModifiedDate":"2022-03-11"},{"lineNumber":53,"author":{"gitId":"tanchinkiat99"},"content":"","lastModifiedDate":"2022-03-11"},{"lineNumber":54,"author":{"gitId":"tanchinkiat99"},"content":"}","lastModifiedDate":"2022-03-11"}],"authorContributionMap":{"tanchinkiat99":54}},{"path":"src/main/java/seedu/address/logic/parser/FindCommandParser.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2017-01-26"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static seedu.address.commons.core.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2017-01-26"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.util.Arrays;","lastModifiedDate":"2017-01-26"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.FindCommand;","lastModifiedDate":"2017-01-26"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import seedu.address.logic.parser.exceptions.ParseException;","lastModifiedDate":"2017-03-11"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import seedu.address.model.person.NameContainsKeywordsPredicate;","lastModifiedDate":"2017-06-12"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":11,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-01-26"},{"lineNumber":12,"author":{"gitId":"-"},"content":" * Parses input arguments and creates a new FindCommand object","lastModifiedDate":"2017-01-26"},{"lineNumber":13,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-01-26"},{"lineNumber":14,"author":{"gitId":"-"},"content":"public class FindCommandParser implements Parser\u003cFindCommand\u003e {","lastModifiedDate":"2017-07-06"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-01-26"},{"lineNumber":17,"author":{"gitId":"-"},"content":"     * Parses the given {@code String} of arguments in the context of the FindCommand","lastModifiedDate":"2017-01-26"},{"lineNumber":18,"author":{"gitId":"-"},"content":"     * and returns a FindCommand object for execution.","lastModifiedDate":"2019-05-11"},{"lineNumber":19,"author":{"gitId":"-"},"content":"     * @throws ParseException if the user input does not conform the expected format","lastModifiedDate":"2017-03-11"},{"lineNumber":20,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-01-26"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    public FindCommand parse(String args) throws ParseException {","lastModifiedDate":"2017-03-11"},{"lineNumber":22,"author":{"gitId":"-"},"content":"        String trimmedArgs \u003d args.trim();","lastModifiedDate":"2017-02-12"},{"lineNumber":23,"author":{"gitId":"-"},"content":"        if (trimmedArgs.isEmpty()) {","lastModifiedDate":"2017-02-12"},{"lineNumber":24,"author":{"gitId":"-"},"content":"            throw new ParseException(","lastModifiedDate":"2017-03-11"},{"lineNumber":25,"author":{"gitId":"-"},"content":"                    String.format(MESSAGE_INVALID_COMMAND_FORMAT, FindCommand.MESSAGE_USAGE));","lastModifiedDate":"2017-01-26"},{"lineNumber":26,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-01-26"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":28,"author":{"gitId":"-"},"content":"        String[] nameKeywords \u003d trimmedArgs.split(\"\\\\s+\");","lastModifiedDate":"2017-06-12"},{"lineNumber":29,"author":{"gitId":"kevinkuo0320"},"content":"        System.out.println(Arrays.asList(nameKeywords));","lastModifiedDate":"2022-03-23"},{"lineNumber":30,"author":{"gitId":"-"},"content":"        return new FindCommand(new NameContainsKeywordsPredicate(Arrays.asList(nameKeywords)));","lastModifiedDate":"2017-06-12"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-01-26"},{"lineNumber":32,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":33,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-01-26"}],"authorContributionMap":{"kevinkuo0320":1,"-":32}},{"path":"src/main/java/seedu/address/logic/parser/ImportCommandParser.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"kevinkuo0320"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2022-04-01"},{"lineNumber":2,"author":{"gitId":"kevinkuo0320"},"content":"","lastModifiedDate":"2022-04-01"},{"lineNumber":3,"author":{"gitId":"kevinkuo0320"},"content":"import seedu.address.logic.commands.ImportCommand;","lastModifiedDate":"2022-04-01"},{"lineNumber":4,"author":{"gitId":"kevinkuo0320"},"content":"import seedu.address.logic.parser.exceptions.ParseException;","lastModifiedDate":"2022-04-01"},{"lineNumber":5,"author":{"gitId":"kevinkuo0320"},"content":"","lastModifiedDate":"2022-04-01"},{"lineNumber":6,"author":{"gitId":"kevinkuo0320"},"content":"/**","lastModifiedDate":"2022-04-01"},{"lineNumber":7,"author":{"gitId":"kevinkuo0320"},"content":" * Parses input arguments and creates a new AddCommand object","lastModifiedDate":"2022-04-01"},{"lineNumber":8,"author":{"gitId":"kevinkuo0320"},"content":" */","lastModifiedDate":"2022-04-01"},{"lineNumber":9,"author":{"gitId":"kevinkuo0320"},"content":"public class ImportCommandParser implements Parser\u003cImportCommand\u003e {","lastModifiedDate":"2022-04-01"},{"lineNumber":10,"author":{"gitId":"kevinkuo0320"},"content":"","lastModifiedDate":"2022-04-01"},{"lineNumber":11,"author":{"gitId":"kevinkuo0320"},"content":"    /**","lastModifiedDate":"2022-04-01"},{"lineNumber":12,"author":{"gitId":"kevinkuo0320"},"content":"     * Parses the given {@code String} of arguments in the context of the AddCommand","lastModifiedDate":"2022-04-01"},{"lineNumber":13,"author":{"gitId":"kevinkuo0320"},"content":"     * and returns an AddCommand object for execution.","lastModifiedDate":"2022-04-01"},{"lineNumber":14,"author":{"gitId":"kevinkuo0320"},"content":"     * @throws ParseException if the user input does not conform the expected format","lastModifiedDate":"2022-04-01"},{"lineNumber":15,"author":{"gitId":"kevinkuo0320"},"content":"     */","lastModifiedDate":"2022-04-01"},{"lineNumber":16,"author":{"gitId":"kevinkuo0320"},"content":"    public ImportCommand parse(String args) throws ParseException {","lastModifiedDate":"2022-04-01"},{"lineNumber":17,"author":{"gitId":"kevinkuo0320"},"content":"        return new ImportCommand(args.trim());","lastModifiedDate":"2022-04-01"},{"lineNumber":18,"author":{"gitId":"kevinkuo0320"},"content":"    }","lastModifiedDate":"2022-04-01"},{"lineNumber":19,"author":{"gitId":"kevinkuo0320"},"content":"","lastModifiedDate":"2022-04-01"},{"lineNumber":20,"author":{"gitId":"kevinkuo0320"},"content":"","lastModifiedDate":"2022-04-01"},{"lineNumber":21,"author":{"gitId":"kevinkuo0320"},"content":"}","lastModifiedDate":"2022-04-01"},{"lineNumber":22,"author":{"gitId":"kevinkuo0320"},"content":"","lastModifiedDate":"2022-04-01"}],"authorContributionMap":{"kevinkuo0320":22}},{"path":"src/main/java/seedu/address/logic/parser/ParserUtil.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2017-02-11"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-11"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2017-05-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.util.Collection;","lastModifiedDate":"2017-02-11"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.util.HashSet;","lastModifiedDate":"2017-02-11"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import java.util.Set;","lastModifiedDate":"2017-02-11"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-11"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.index.Index;","lastModifiedDate":"2017-05-25"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import seedu.address.commons.util.StringUtil;","lastModifiedDate":"2017-02-11"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import seedu.address.logic.parser.exceptions.ParseException;","lastModifiedDate":"2018-07-10"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Address;","lastModifiedDate":"2017-02-11"},{"lineNumber":13,"author":{"gitId":"DannyDakota"},"content":"import seedu.address.model.person.Block;","lastModifiedDate":"2022-03-17"},{"lineNumber":14,"author":{"gitId":"cwq2326"},"content":"import seedu.address.model.person.CovidStatus;","lastModifiedDate":"2022-02-28"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Email;","lastModifiedDate":"2017-02-11"},{"lineNumber":16,"author":{"gitId":"cwq2326"},"content":"import seedu.address.model.person.Faculty;","lastModifiedDate":"2022-02-28"},{"lineNumber":17,"author":{"gitId":"cwq2326"},"content":"import seedu.address.model.person.MatriculationNumber;","lastModifiedDate":"2022-02-28"},{"lineNumber":18,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Name;","lastModifiedDate":"2017-02-11"},{"lineNumber":19,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Phone;","lastModifiedDate":"2017-02-11"},{"lineNumber":20,"author":{"gitId":"-"},"content":"import seedu.address.model.tag.Tag;","lastModifiedDate":"2017-02-11"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-11"},{"lineNumber":22,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-02-11"},{"lineNumber":23,"author":{"gitId":"-"},"content":" * Contains utility methods used for parsing strings in the various *Parser classes.","lastModifiedDate":"2017-07-18"},{"lineNumber":24,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-02-11"},{"lineNumber":25,"author":{"gitId":"-"},"content":"public class ParserUtil {","lastModifiedDate":"2017-02-11"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-11"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_INVALID_INDEX \u003d \"Index is not a non-zero unsigned integer.\";","lastModifiedDate":"2017-06-02"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-02"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-02-11"},{"lineNumber":30,"author":{"gitId":"-"},"content":"     * Parses {@code oneBasedIndex} into an {@code Index} and returns it. Leading and trailing whitespaces will be","lastModifiedDate":"2017-05-25"},{"lineNumber":31,"author":{"gitId":"-"},"content":"     * trimmed.","lastModifiedDate":"2017-05-25"},{"lineNumber":32,"author":{"gitId":"-"},"content":"     * @throws ParseException if the specified index is invalid (not non-zero unsigned integer).","lastModifiedDate":"2018-07-10"},{"lineNumber":33,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-02-11"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    public static Index parseIndex(String oneBasedIndex) throws ParseException {","lastModifiedDate":"2018-07-10"},{"lineNumber":35,"author":{"gitId":"-"},"content":"        String trimmedIndex \u003d oneBasedIndex.trim();","lastModifiedDate":"2017-05-25"},{"lineNumber":36,"author":{"gitId":"-"},"content":"        if (!StringUtil.isNonZeroUnsignedInteger(trimmedIndex)) {","lastModifiedDate":"2017-06-02"},{"lineNumber":37,"author":{"gitId":"-"},"content":"            throw new ParseException(MESSAGE_INVALID_INDEX);","lastModifiedDate":"2018-07-10"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-02-11"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        return Index.fromOneBased(Integer.parseInt(trimmedIndex));","lastModifiedDate":"2017-05-25"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-02-11"},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-11"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-05-29"},{"lineNumber":43,"author":{"gitId":"-"},"content":"     * Parses a {@code String name} into a {@code Name}.","lastModifiedDate":"2017-05-29"},{"lineNumber":44,"author":{"gitId":"-"},"content":"     * Leading and trailing whitespaces will be trimmed.","lastModifiedDate":"2017-05-29"},{"lineNumber":45,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2017-05-29"},{"lineNumber":46,"author":{"gitId":"-"},"content":"     * @throws ParseException if the given {@code name} is invalid.","lastModifiedDate":"2018-07-10"},{"lineNumber":47,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-05-29"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    public static Name parseName(String name) throws ParseException {","lastModifiedDate":"2018-07-10"},{"lineNumber":49,"author":{"gitId":"-"},"content":"        requireNonNull(name);","lastModifiedDate":"2017-05-29"},{"lineNumber":50,"author":{"gitId":"-"},"content":"        String trimmedName \u003d name.trim();","lastModifiedDate":"2017-05-29"},{"lineNumber":51,"author":{"gitId":"-"},"content":"        if (!Name.isValidName(trimmedName)) {","lastModifiedDate":"2017-05-30"},{"lineNumber":52,"author":{"gitId":"-"},"content":"            throw new ParseException(Name.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2018-09-22"},{"lineNumber":53,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-30"},{"lineNumber":54,"author":{"gitId":"-"},"content":"        return new Name(trimmedName);","lastModifiedDate":"2017-05-29"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-29"},{"lineNumber":56,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-29"},{"lineNumber":57,"author":{"gitId":"DannyDakota"},"content":"    /**","lastModifiedDate":"2022-03-17"},{"lineNumber":58,"author":{"gitId":"DannyDakota"},"content":"     * Parses a {@code String block} into a {@code Block}.","lastModifiedDate":"2022-03-17"},{"lineNumber":59,"author":{"gitId":"DannyDakota"},"content":"     * Leading and trailing whitespaces will be trimmed.","lastModifiedDate":"2022-03-17"},{"lineNumber":60,"author":{"gitId":"DannyDakota"},"content":"     *","lastModifiedDate":"2022-03-17"},{"lineNumber":61,"author":{"gitId":"DannyDakota"},"content":"     * @throws ParseException if the given {@code Block} is invalid.","lastModifiedDate":"2022-03-17"},{"lineNumber":62,"author":{"gitId":"DannyDakota"},"content":"     */","lastModifiedDate":"2022-03-17"},{"lineNumber":63,"author":{"gitId":"DannyDakota"},"content":"    public static Block parseBlock(String block) throws ParseException {","lastModifiedDate":"2022-03-17"},{"lineNumber":64,"author":{"gitId":"DannyDakota"},"content":"        requireNonNull(block);","lastModifiedDate":"2022-03-17"},{"lineNumber":65,"author":{"gitId":"DannyDakota"},"content":"        String trimmedBlock \u003d block.trim();","lastModifiedDate":"2022-03-17"},{"lineNumber":66,"author":{"gitId":"DannyDakota"},"content":"        if (!Block.isValidBlock(trimmedBlock)) {","lastModifiedDate":"2022-03-17"},{"lineNumber":67,"author":{"gitId":"DannyDakota"},"content":"            throw new ParseException(Block.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2022-03-17"},{"lineNumber":68,"author":{"gitId":"DannyDakota"},"content":"        }","lastModifiedDate":"2022-03-17"},{"lineNumber":69,"author":{"gitId":"DannyDakota"},"content":"        return new Block(trimmedBlock);","lastModifiedDate":"2022-03-17"},{"lineNumber":70,"author":{"gitId":"DannyDakota"},"content":"    }","lastModifiedDate":"2022-03-17"},{"lineNumber":71,"author":{"gitId":"DannyDakota"},"content":"","lastModifiedDate":"2022-03-17"},{"lineNumber":72,"author":{"gitId":"cwq2326"},"content":"    /**","lastModifiedDate":"2022-02-28"},{"lineNumber":73,"author":{"gitId":"cwq2326"},"content":"     * Parses a {@code String faculty} into a {@code Faculty}.","lastModifiedDate":"2022-02-28"},{"lineNumber":74,"author":{"gitId":"cwq2326"},"content":"     * Leading and trailing whitespaces will be trimmed.","lastModifiedDate":"2022-02-28"},{"lineNumber":75,"author":{"gitId":"cwq2326"},"content":"     *","lastModifiedDate":"2022-02-28"},{"lineNumber":76,"author":{"gitId":"cwq2326"},"content":"     * @throws ParseException if the given {@code faculty} is invalid.","lastModifiedDate":"2022-02-28"},{"lineNumber":77,"author":{"gitId":"cwq2326"},"content":"     */","lastModifiedDate":"2022-02-28"},{"lineNumber":78,"author":{"gitId":"cwq2326"},"content":"    public static Faculty parseFaculty(String faculty) throws ParseException {","lastModifiedDate":"2022-02-28"},{"lineNumber":79,"author":{"gitId":"cwq2326"},"content":"        requireNonNull(faculty);","lastModifiedDate":"2022-02-28"},{"lineNumber":80,"author":{"gitId":"cwq2326"},"content":"        String trimmedFaculty \u003d faculty.trim();","lastModifiedDate":"2022-02-28"},{"lineNumber":81,"author":{"gitId":"cwq2326"},"content":"        if (!Faculty.isValidFaculty(trimmedFaculty)) {","lastModifiedDate":"2022-02-28"},{"lineNumber":82,"author":{"gitId":"cwq2326"},"content":"            throw new ParseException(Faculty.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2022-02-28"},{"lineNumber":83,"author":{"gitId":"cwq2326"},"content":"        }","lastModifiedDate":"2022-02-28"},{"lineNumber":84,"author":{"gitId":"cwq2326"},"content":"        return new Faculty(trimmedFaculty);","lastModifiedDate":"2022-02-28"},{"lineNumber":85,"author":{"gitId":"cwq2326"},"content":"    }","lastModifiedDate":"2022-02-28"},{"lineNumber":86,"author":{"gitId":"cwq2326"},"content":"","lastModifiedDate":"2022-02-28"},{"lineNumber":87,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-05-30"},{"lineNumber":88,"author":{"gitId":"-"},"content":"     * Parses a {@code String phone} into a {@code Phone}.","lastModifiedDate":"2017-05-30"},{"lineNumber":89,"author":{"gitId":"-"},"content":"     * Leading and trailing whitespaces will be trimmed.","lastModifiedDate":"2017-05-30"},{"lineNumber":90,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2017-05-30"},{"lineNumber":91,"author":{"gitId":"-"},"content":"     * @throws ParseException if the given {@code phone} is invalid.","lastModifiedDate":"2018-07-10"},{"lineNumber":92,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-05-30"},{"lineNumber":93,"author":{"gitId":"-"},"content":"    public static Phone parsePhone(String phone) throws ParseException {","lastModifiedDate":"2018-07-10"},{"lineNumber":94,"author":{"gitId":"-"},"content":"        requireNonNull(phone);","lastModifiedDate":"2017-05-30"},{"lineNumber":95,"author":{"gitId":"-"},"content":"        String trimmedPhone \u003d phone.trim();","lastModifiedDate":"2017-05-30"},{"lineNumber":96,"author":{"gitId":"-"},"content":"        if (!Phone.isValidPhone(trimmedPhone)) {","lastModifiedDate":"2017-05-30"},{"lineNumber":97,"author":{"gitId":"-"},"content":"            throw new ParseException(Phone.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2018-09-22"},{"lineNumber":98,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-30"},{"lineNumber":99,"author":{"gitId":"-"},"content":"        return new Phone(trimmedPhone);","lastModifiedDate":"2017-05-30"},{"lineNumber":100,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-30"},{"lineNumber":101,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-30"},{"lineNumber":102,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-05-30"},{"lineNumber":103,"author":{"gitId":"-"},"content":"     * Parses a {@code String address} into an {@code Address}.","lastModifiedDate":"2017-05-30"},{"lineNumber":104,"author":{"gitId":"-"},"content":"     * Leading and trailing whitespaces will be trimmed.","lastModifiedDate":"2017-05-30"},{"lineNumber":105,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2017-05-30"},{"lineNumber":106,"author":{"gitId":"-"},"content":"     * @throws ParseException if the given {@code address} is invalid.","lastModifiedDate":"2018-07-10"},{"lineNumber":107,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-05-30"},{"lineNumber":108,"author":{"gitId":"-"},"content":"    public static Address parseAddress(String address) throws ParseException {","lastModifiedDate":"2018-07-10"},{"lineNumber":109,"author":{"gitId":"-"},"content":"        requireNonNull(address);","lastModifiedDate":"2017-05-30"},{"lineNumber":110,"author":{"gitId":"-"},"content":"        String trimmedAddress \u003d address.trim();","lastModifiedDate":"2017-05-30"},{"lineNumber":111,"author":{"gitId":"-"},"content":"        if (!Address.isValidAddress(trimmedAddress)) {","lastModifiedDate":"2017-05-30"},{"lineNumber":112,"author":{"gitId":"-"},"content":"            throw new ParseException(Address.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2018-09-22"},{"lineNumber":113,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-30"},{"lineNumber":114,"author":{"gitId":"-"},"content":"        return new Address(trimmedAddress);","lastModifiedDate":"2017-05-30"},{"lineNumber":115,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-30"},{"lineNumber":116,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-30"},{"lineNumber":117,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-05-30"},{"lineNumber":118,"author":{"gitId":"-"},"content":"     * Parses a {@code String email} into an {@code Email}.","lastModifiedDate":"2017-05-30"},{"lineNumber":119,"author":{"gitId":"-"},"content":"     * Leading and trailing whitespaces will be trimmed.","lastModifiedDate":"2017-05-30"},{"lineNumber":120,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2017-05-30"},{"lineNumber":121,"author":{"gitId":"-"},"content":"     * @throws ParseException if the given {@code email} is invalid.","lastModifiedDate":"2018-07-10"},{"lineNumber":122,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-05-30"},{"lineNumber":123,"author":{"gitId":"-"},"content":"    public static Email parseEmail(String email) throws ParseException {","lastModifiedDate":"2018-07-10"},{"lineNumber":124,"author":{"gitId":"-"},"content":"        requireNonNull(email);","lastModifiedDate":"2017-05-30"},{"lineNumber":125,"author":{"gitId":"-"},"content":"        String trimmedEmail \u003d email.trim();","lastModifiedDate":"2017-05-30"},{"lineNumber":126,"author":{"gitId":"-"},"content":"        if (!Email.isValidEmail(trimmedEmail)) {","lastModifiedDate":"2017-05-30"},{"lineNumber":127,"author":{"gitId":"-"},"content":"            throw new ParseException(Email.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2018-09-22"},{"lineNumber":128,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-30"},{"lineNumber":129,"author":{"gitId":"-"},"content":"        return new Email(trimmedEmail);","lastModifiedDate":"2017-05-30"},{"lineNumber":130,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-30"},{"lineNumber":131,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-30"},{"lineNumber":132,"author":{"gitId":"cwq2326"},"content":"    /**","lastModifiedDate":"2022-02-28"},{"lineNumber":133,"author":{"gitId":"cwq2326"},"content":"     * Parses a {@code String faculty} into a {@code MatriculationNumber}.","lastModifiedDate":"2022-02-28"},{"lineNumber":134,"author":{"gitId":"cwq2326"},"content":"     * Leading and trailing whitespaces will be trimmed.","lastModifiedDate":"2022-02-28"},{"lineNumber":135,"author":{"gitId":"cwq2326"},"content":"     *","lastModifiedDate":"2022-02-28"},{"lineNumber":136,"author":{"gitId":"cwq2326"},"content":"     * @throws ParseException if the given {@code number} is invalid.","lastModifiedDate":"2022-02-28"},{"lineNumber":137,"author":{"gitId":"cwq2326"},"content":"     */","lastModifiedDate":"2022-02-28"},{"lineNumber":138,"author":{"gitId":"cwq2326"},"content":"    public static MatriculationNumber parseMatriculationNumber(String number) throws ParseException {","lastModifiedDate":"2022-02-28"},{"lineNumber":139,"author":{"gitId":"cwq2326"},"content":"        requireNonNull(number);","lastModifiedDate":"2022-02-28"},{"lineNumber":140,"author":{"gitId":"cwq2326"},"content":"        String trimmedNumber \u003d number.trim();","lastModifiedDate":"2022-02-28"},{"lineNumber":141,"author":{"gitId":"cwq2326"},"content":"        if (!MatriculationNumber.isValidMatriculationNumber(trimmedNumber)) {","lastModifiedDate":"2022-02-28"},{"lineNumber":142,"author":{"gitId":"cwq2326"},"content":"            throw new ParseException(MatriculationNumber.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2022-02-28"},{"lineNumber":143,"author":{"gitId":"cwq2326"},"content":"        }","lastModifiedDate":"2022-02-28"},{"lineNumber":144,"author":{"gitId":"cwq2326"},"content":"        return new MatriculationNumber(trimmedNumber);","lastModifiedDate":"2022-02-28"},{"lineNumber":145,"author":{"gitId":"cwq2326"},"content":"    }","lastModifiedDate":"2022-02-28"},{"lineNumber":146,"author":{"gitId":"cwq2326"},"content":"","lastModifiedDate":"2022-02-28"},{"lineNumber":147,"author":{"gitId":"cwq2326"},"content":"    /**","lastModifiedDate":"2022-02-28"},{"lineNumber":148,"author":{"gitId":"cwq2326"},"content":"     * Parses a {@code String faculty} into a {@code Faculty}.","lastModifiedDate":"2022-02-28"},{"lineNumber":149,"author":{"gitId":"cwq2326"},"content":"     * Leading and trailing whitespaces will be trimmed.","lastModifiedDate":"2022-02-28"},{"lineNumber":150,"author":{"gitId":"cwq2326"},"content":"     *","lastModifiedDate":"2022-02-28"},{"lineNumber":151,"author":{"gitId":"cwq2326"},"content":"     * @throws ParseException if the given {@code faculty} is invalid.","lastModifiedDate":"2022-02-28"},{"lineNumber":152,"author":{"gitId":"cwq2326"},"content":"     */","lastModifiedDate":"2022-02-28"},{"lineNumber":153,"author":{"gitId":"cwq2326"},"content":"    public static CovidStatus parseCovidStatus(String status) throws ParseException {","lastModifiedDate":"2022-02-28"},{"lineNumber":154,"author":{"gitId":"cwq2326"},"content":"        requireNonNull(status);","lastModifiedDate":"2022-02-28"},{"lineNumber":155,"author":{"gitId":"cwq2326"},"content":"        String trimmedStatus \u003d status.trim();","lastModifiedDate":"2022-02-28"},{"lineNumber":156,"author":{"gitId":"cwq2326"},"content":"        if (!CovidStatus.isValidCovidStatus(trimmedStatus)) {","lastModifiedDate":"2022-02-28"},{"lineNumber":157,"author":{"gitId":"cwq2326"},"content":"            throw new ParseException(CovidStatus.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2022-02-28"},{"lineNumber":158,"author":{"gitId":"cwq2326"},"content":"        }","lastModifiedDate":"2022-02-28"},{"lineNumber":159,"author":{"gitId":"cwq2326"},"content":"        return new CovidStatus(trimmedStatus);","lastModifiedDate":"2022-02-28"},{"lineNumber":160,"author":{"gitId":"cwq2326"},"content":"    }","lastModifiedDate":"2022-02-28"},{"lineNumber":161,"author":{"gitId":"cwq2326"},"content":"","lastModifiedDate":"2022-02-28"},{"lineNumber":162,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-05-30"},{"lineNumber":163,"author":{"gitId":"-"},"content":"     * Parses a {@code String tag} into a {@code Tag}.","lastModifiedDate":"2017-05-30"},{"lineNumber":164,"author":{"gitId":"-"},"content":"     * Leading and trailing whitespaces will be trimmed.","lastModifiedDate":"2017-05-30"},{"lineNumber":165,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2017-05-30"},{"lineNumber":166,"author":{"gitId":"-"},"content":"     * @throws ParseException if the given {@code tag} is invalid.","lastModifiedDate":"2018-07-10"},{"lineNumber":167,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-05-30"},{"lineNumber":168,"author":{"gitId":"-"},"content":"    public static Tag parseTag(String tag) throws ParseException {","lastModifiedDate":"2018-07-10"},{"lineNumber":169,"author":{"gitId":"-"},"content":"        requireNonNull(tag);","lastModifiedDate":"2017-05-30"},{"lineNumber":170,"author":{"gitId":"-"},"content":"        String trimmedTag \u003d tag.trim();","lastModifiedDate":"2017-05-30"},{"lineNumber":171,"author":{"gitId":"-"},"content":"        if (!Tag.isValidTagName(trimmedTag)) {","lastModifiedDate":"2017-05-30"},{"lineNumber":172,"author":{"gitId":"-"},"content":"            throw new ParseException(Tag.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2018-09-22"},{"lineNumber":173,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-30"},{"lineNumber":174,"author":{"gitId":"-"},"content":"        return new Tag(trimmedTag);","lastModifiedDate":"2017-05-30"},{"lineNumber":175,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-30"},{"lineNumber":176,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-30"},{"lineNumber":177,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-02-11"},{"lineNumber":178,"author":{"gitId":"-"},"content":"     * Parses {@code Collection\u003cString\u003e tags} into a {@code Set\u003cTag\u003e}.","lastModifiedDate":"2017-03-07"},{"lineNumber":179,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-02-11"},{"lineNumber":180,"author":{"gitId":"-"},"content":"    public static Set\u003cTag\u003e parseTags(Collection\u003cString\u003e tags) throws ParseException {","lastModifiedDate":"2018-07-10"},{"lineNumber":181,"author":{"gitId":"-"},"content":"        requireNonNull(tags);","lastModifiedDate":"2017-05-15"},{"lineNumber":182,"author":{"gitId":"-"},"content":"        final Set\u003cTag\u003e tagSet \u003d new HashSet\u003c\u003e();","lastModifiedDate":"2017-02-11"},{"lineNumber":183,"author":{"gitId":"-"},"content":"        for (String tagName : tags) {","lastModifiedDate":"2017-02-11"},{"lineNumber":184,"author":{"gitId":"-"},"content":"            tagSet.add(parseTag(tagName));","lastModifiedDate":"2017-05-30"},{"lineNumber":185,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-02-11"},{"lineNumber":186,"author":{"gitId":"-"},"content":"        return tagSet;","lastModifiedDate":"2017-03-07"},{"lineNumber":187,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-02-11"},{"lineNumber":188,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-02-11"}],"authorContributionMap":{"DannyDakota":16,"cwq2326":48,"-":124}},{"path":"src/main/java/seedu/address/logic/parser/ResizeCommandParser.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"cwq2326"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2022-03-31"},{"lineNumber":2,"author":{"gitId":"cwq2326"},"content":"","lastModifiedDate":"2022-03-31"},{"lineNumber":3,"author":{"gitId":"cwq2326"},"content":"import static seedu.address.commons.core.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2022-03-31"},{"lineNumber":4,"author":{"gitId":"cwq2326"},"content":"","lastModifiedDate":"2022-03-31"},{"lineNumber":5,"author":{"gitId":"cwq2326"},"content":"import seedu.address.logic.commands.ResizeCommand;","lastModifiedDate":"2022-03-31"},{"lineNumber":6,"author":{"gitId":"cwq2326"},"content":"import seedu.address.logic.parser.exceptions.ParseException;","lastModifiedDate":"2022-03-31"},{"lineNumber":7,"author":{"gitId":"cwq2326"},"content":"","lastModifiedDate":"2022-03-31"},{"lineNumber":8,"author":{"gitId":"cwq2326"},"content":"/**","lastModifiedDate":"2022-03-31"},{"lineNumber":9,"author":{"gitId":"cwq2326"},"content":" * Parses input arguments and creates a new ResizeCommand object","lastModifiedDate":"2022-03-31"},{"lineNumber":10,"author":{"gitId":"cwq2326"},"content":" */","lastModifiedDate":"2022-03-31"},{"lineNumber":11,"author":{"gitId":"cwq2326"},"content":"public class ResizeCommandParser implements Parser\u003cResizeCommand\u003e {","lastModifiedDate":"2022-03-31"},{"lineNumber":12,"author":{"gitId":"cwq2326"},"content":"","lastModifiedDate":"2022-03-31"},{"lineNumber":13,"author":{"gitId":"cwq2326"},"content":"    private final int[] resizableWindowSizeList \u003d {1, 2, 3};","lastModifiedDate":"2022-03-31"},{"lineNumber":14,"author":{"gitId":"cwq2326"},"content":"","lastModifiedDate":"2022-03-31"},{"lineNumber":15,"author":{"gitId":"cwq2326"},"content":"    /**","lastModifiedDate":"2022-03-31"},{"lineNumber":16,"author":{"gitId":"cwq2326"},"content":"     * Parses the given {@code String} of arguments in the context of the DeleteCommand","lastModifiedDate":"2022-03-31"},{"lineNumber":17,"author":{"gitId":"cwq2326"},"content":"     * and returns a DeleteCommand object for execution.","lastModifiedDate":"2022-03-31"},{"lineNumber":18,"author":{"gitId":"cwq2326"},"content":"     *","lastModifiedDate":"2022-03-31"},{"lineNumber":19,"author":{"gitId":"cwq2326"},"content":"     * @throws ParseException if the user input does not conform the expected format","lastModifiedDate":"2022-03-31"},{"lineNumber":20,"author":{"gitId":"cwq2326"},"content":"     */","lastModifiedDate":"2022-03-31"},{"lineNumber":21,"author":{"gitId":"cwq2326"},"content":"    public ResizeCommand parse(String args) throws ParseException {","lastModifiedDate":"2022-03-31"},{"lineNumber":22,"author":{"gitId":"cwq2326"},"content":"        int resultWindowSize;","lastModifiedDate":"2022-03-31"},{"lineNumber":23,"author":{"gitId":"cwq2326"},"content":"","lastModifiedDate":"2022-03-31"},{"lineNumber":24,"author":{"gitId":"cwq2326"},"content":"        try {","lastModifiedDate":"2022-03-31"},{"lineNumber":25,"author":{"gitId":"cwq2326"},"content":"            resultWindowSize \u003d Integer.parseInt(args.trim());","lastModifiedDate":"2022-03-31"},{"lineNumber":26,"author":{"gitId":"cwq2326"},"content":"        } catch (NumberFormatException e) {","lastModifiedDate":"2022-03-31"},{"lineNumber":27,"author":{"gitId":"cwq2326"},"content":"            throw new ParseException(String.format(MESSAGE_INVALID_COMMAND_FORMAT, ResizeCommand.MESSAGE_USAGE));","lastModifiedDate":"2022-03-31"},{"lineNumber":28,"author":{"gitId":"cwq2326"},"content":"        }","lastModifiedDate":"2022-03-31"},{"lineNumber":29,"author":{"gitId":"cwq2326"},"content":"        for (int d : resizableWindowSizeList) {","lastModifiedDate":"2022-03-31"},{"lineNumber":30,"author":{"gitId":"cwq2326"},"content":"            if (resultWindowSize \u003d\u003d d) {","lastModifiedDate":"2022-03-31"},{"lineNumber":31,"author":{"gitId":"cwq2326"},"content":"                return new ResizeCommand((double) resultWindowSize);","lastModifiedDate":"2022-03-31"},{"lineNumber":32,"author":{"gitId":"cwq2326"},"content":"            }","lastModifiedDate":"2022-03-31"},{"lineNumber":33,"author":{"gitId":"cwq2326"},"content":"        }","lastModifiedDate":"2022-03-31"},{"lineNumber":34,"author":{"gitId":"cwq2326"},"content":"        throw new ParseException(String.format(MESSAGE_INVALID_COMMAND_FORMAT, ResizeCommand.MESSAGE_USAGE));","lastModifiedDate":"2022-03-31"},{"lineNumber":35,"author":{"gitId":"cwq2326"},"content":"    }","lastModifiedDate":"2022-03-31"},{"lineNumber":36,"author":{"gitId":"cwq2326"},"content":"","lastModifiedDate":"2022-03-31"},{"lineNumber":37,"author":{"gitId":"cwq2326"},"content":"}","lastModifiedDate":"2022-03-31"}],"authorContributionMap":{"cwq2326":37}},{"path":"src/main/java/seedu/address/model/AddressBook.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.model;","lastModifiedDate":"2016-09-21"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2017-05-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.util.List;","lastModifiedDate":"2017-01-19"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2017-01-19"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2016-08-24"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import seedu.address.model.person.UniquePersonList;","lastModifiedDate":"2016-08-24"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":11,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-08"},{"lineNumber":12,"author":{"gitId":"-"},"content":" * Wraps all data at the address-book level","lastModifiedDate":"2016-08-08"},{"lineNumber":13,"author":{"gitId":"-"},"content":" * Duplicates are not allowed (by .isSamePerson comparison)","lastModifiedDate":"2018-04-19"},{"lineNumber":14,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-08"},{"lineNumber":15,"author":{"gitId":"-"},"content":"public class AddressBook implements ReadOnlyAddressBook {","lastModifiedDate":"2016-08-08"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    private final UniquePersonList persons;","lastModifiedDate":"2016-08-26"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-03-30"},{"lineNumber":19,"author":{"gitId":"tanchinkiat99"},"content":"    private UniquePersonList personsHistory;","lastModifiedDate":"2022-03-30"},{"lineNumber":20,"author":{"gitId":"tanchinkiat99"},"content":"","lastModifiedDate":"2022-03-30"},{"lineNumber":21,"author":{"gitId":"tanchinkiat99"},"content":"    private UniquePersonList personsOriginal;","lastModifiedDate":"2022-03-30"},{"lineNumber":22,"author":{"gitId":"tanchinkiat99"},"content":"","lastModifiedDate":"2022-03-30"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    /*","lastModifiedDate":"2016-10-19"},{"lineNumber":24,"author":{"gitId":"-"},"content":"     * The \u0027unusual\u0027 code block below is a non-static initialization block, sometimes used to avoid duplication","lastModifiedDate":"2019-05-11"},{"lineNumber":25,"author":{"gitId":"-"},"content":"     * between constructors. See https://docs.oracle.com/javase/tutorial/java/javaOO/initial.html","lastModifiedDate":"2016-10-19"},{"lineNumber":26,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2016-10-19"},{"lineNumber":27,"author":{"gitId":"-"},"content":"     * Note that non-static init blocks are not recommended to use. There are other ways to avoid duplication","lastModifiedDate":"2016-10-19"},{"lineNumber":28,"author":{"gitId":"-"},"content":"     *   among constructors.","lastModifiedDate":"2016-10-19"},{"lineNumber":29,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-10-19"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    {","lastModifiedDate":"2016-08-08"},{"lineNumber":31,"author":{"gitId":"-"},"content":"        persons \u003d new UniquePersonList();","lastModifiedDate":"2016-08-26"},{"lineNumber":32,"author":{"gitId":"tanchinkiat99"},"content":"        personsHistory \u003d null;","lastModifiedDate":"2022-03-30"},{"lineNumber":33,"author":{"gitId":"tanchinkiat99"},"content":"        personsOriginal \u003d null;","lastModifiedDate":"2022-03-30"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    public AddressBook() {}","lastModifiedDate":"2016-08-08"},{"lineNumber":37,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-08"},{"lineNumber":39,"author":{"gitId":"-"},"content":"     * Creates an AddressBook using the Persons in the {@code toBeCopied}","lastModifiedDate":"2018-03-29"},{"lineNumber":40,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-08"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    public AddressBook(ReadOnlyAddressBook toBeCopied) {","lastModifiedDate":"2016-08-08"},{"lineNumber":42,"author":{"gitId":"-"},"content":"        this();","lastModifiedDate":"2016-12-24"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        resetData(toBeCopied);","lastModifiedDate":"2016-12-24"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-22"},{"lineNumber":45,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    //// list overwrite operations","lastModifiedDate":"2016-08-08"},{"lineNumber":47,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-08-07"},{"lineNumber":49,"author":{"gitId":"-"},"content":"     * Replaces the contents of the person list with {@code persons}.","lastModifiedDate":"2018-08-07"},{"lineNumber":50,"author":{"gitId":"-"},"content":"     * {@code persons} must not contain duplicate persons.","lastModifiedDate":"2018-08-07"},{"lineNumber":51,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-08-07"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    public void setPersons(List\u003cPerson\u003e persons) {","lastModifiedDate":"2018-08-07"},{"lineNumber":53,"author":{"gitId":"-"},"content":"        this.persons.setPersons(persons);","lastModifiedDate":"2016-10-19"},{"lineNumber":54,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":55,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-08-16"},{"lineNumber":57,"author":{"gitId":"-"},"content":"     * Resets the existing data of this {@code AddressBook} with {@code newData}.","lastModifiedDate":"2017-08-16"},{"lineNumber":58,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-08-16"},{"lineNumber":59,"author":{"gitId":"-"},"content":"    public void resetData(ReadOnlyAddressBook newData) {","lastModifiedDate":"2016-08-08"},{"lineNumber":60,"author":{"gitId":"-"},"content":"        requireNonNull(newData);","lastModifiedDate":"2017-05-15"},{"lineNumber":61,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-12-20"},{"lineNumber":62,"author":{"gitId":"-"},"content":"        setPersons(newData.getPersonList());","lastModifiedDate":"2018-03-29"},{"lineNumber":63,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":64,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":65,"author":{"gitId":"-"},"content":"    //// person-level operations","lastModifiedDate":"2016-08-08"},{"lineNumber":66,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":67,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-08-06"},{"lineNumber":68,"author":{"gitId":"-"},"content":"     * Returns true if a person with the same identity as {@code person} exists in the address book.","lastModifiedDate":"2018-08-06"},{"lineNumber":69,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-08-06"},{"lineNumber":70,"author":{"gitId":"-"},"content":"    public boolean hasPerson(Person person) {","lastModifiedDate":"2018-08-06"},{"lineNumber":71,"author":{"gitId":"-"},"content":"        requireNonNull(person);","lastModifiedDate":"2018-08-06"},{"lineNumber":72,"author":{"gitId":"-"},"content":"        return persons.contains(person);","lastModifiedDate":"2018-08-06"},{"lineNumber":73,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-06"},{"lineNumber":74,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-06"},{"lineNumber":75,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-09-21"},{"lineNumber":76,"author":{"gitId":"-"},"content":"     * Adds a person to the address book.","lastModifiedDate":"2016-09-21"},{"lineNumber":77,"author":{"gitId":"-"},"content":"     * The person must not already exist in the address book.","lastModifiedDate":"2018-08-07"},{"lineNumber":78,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-09-21"},{"lineNumber":79,"author":{"gitId":"-"},"content":"    public void addPerson(Person p) {","lastModifiedDate":"2018-08-07"},{"lineNumber":80,"author":{"gitId":"-"},"content":"        persons.add(p);","lastModifiedDate":"2018-03-29"},{"lineNumber":81,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":82,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":83,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-12-13"},{"lineNumber":84,"author":{"gitId":"-"},"content":"     * Replaces the given person {@code target} in the list with {@code editedPerson}.","lastModifiedDate":"2018-01-10"},{"lineNumber":85,"author":{"gitId":"-"},"content":"     * {@code target} must exist in the address book.","lastModifiedDate":"2018-08-07"},{"lineNumber":86,"author":{"gitId":"-"},"content":"     * The person identity of {@code editedPerson} must not be the same as another existing person in the address book.","lastModifiedDate":"2018-08-07"},{"lineNumber":87,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-12-13"},{"lineNumber":88,"author":{"gitId":"-"},"content":"    public void setPerson(Person target, Person editedPerson) {","lastModifiedDate":"2018-08-17"},{"lineNumber":89,"author":{"gitId":"-"},"content":"        requireNonNull(editedPerson);","lastModifiedDate":"2018-01-10"},{"lineNumber":90,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-13"},{"lineNumber":91,"author":{"gitId":"-"},"content":"        persons.setPerson(target, editedPerson);","lastModifiedDate":"2018-03-29"},{"lineNumber":92,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-21"},{"lineNumber":93,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":94,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-08-16"},{"lineNumber":95,"author":{"gitId":"-"},"content":"     * Removes {@code key} from this {@code AddressBook}.","lastModifiedDate":"2017-08-16"},{"lineNumber":96,"author":{"gitId":"-"},"content":"     * {@code key} must exist in the address book.","lastModifiedDate":"2018-08-07"},{"lineNumber":97,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-08-16"},{"lineNumber":98,"author":{"gitId":"-"},"content":"    public void removePerson(Person key) {","lastModifiedDate":"2018-08-07"},{"lineNumber":99,"author":{"gitId":"-"},"content":"        persons.remove(key);","lastModifiedDate":"2018-02-28"},{"lineNumber":100,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":101,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":102,"author":{"gitId":"tanchinkiat99"},"content":"    /**","lastModifiedDate":"2022-03-30"},{"lineNumber":103,"author":{"gitId":"tanchinkiat99"},"content":"     * Saves the previous list of persons in the address book.","lastModifiedDate":"2022-03-30"},{"lineNumber":104,"author":{"gitId":"tanchinkiat99"},"content":"     */","lastModifiedDate":"2022-03-30"},{"lineNumber":105,"author":{"gitId":"tanchinkiat99"},"content":"    public void saveHistory() {","lastModifiedDate":"2022-03-30"},{"lineNumber":106,"author":{"gitId":"tanchinkiat99"},"content":"        if (this.personsHistory \u003d\u003d null) {","lastModifiedDate":"2022-03-30"},{"lineNumber":107,"author":{"gitId":"tanchinkiat99"},"content":"            this.personsHistory \u003d new UniquePersonList();","lastModifiedDate":"2022-03-30"},{"lineNumber":108,"author":{"gitId":"tanchinkiat99"},"content":"        }","lastModifiedDate":"2022-03-30"},{"lineNumber":109,"author":{"gitId":"tanchinkiat99"},"content":"        this.personsHistory.setPersons(this.persons);","lastModifiedDate":"2022-03-30"},{"lineNumber":110,"author":{"gitId":"tanchinkiat99"},"content":"    }","lastModifiedDate":"2022-03-30"},{"lineNumber":111,"author":{"gitId":"tanchinkiat99"},"content":"","lastModifiedDate":"2022-03-30"},{"lineNumber":112,"author":{"gitId":"tanchinkiat99"},"content":"    /**","lastModifiedDate":"2022-03-30"},{"lineNumber":113,"author":{"gitId":"tanchinkiat99"},"content":"     * Restores the previous list of persons in the address book.","lastModifiedDate":"2022-03-30"},{"lineNumber":114,"author":{"gitId":"tanchinkiat99"},"content":"     */","lastModifiedDate":"2022-03-30"},{"lineNumber":115,"author":{"gitId":"tanchinkiat99"},"content":"    public void restoreHistory() {","lastModifiedDate":"2022-03-30"},{"lineNumber":116,"author":{"gitId":"tanchinkiat99"},"content":"        this.persons.setPersons(this.personsHistory);","lastModifiedDate":"2022-03-30"},{"lineNumber":117,"author":{"gitId":"tanchinkiat99"},"content":"    }","lastModifiedDate":"2022-03-30"},{"lineNumber":118,"author":{"gitId":"tanchinkiat99"},"content":"","lastModifiedDate":"2022-03-30"},{"lineNumber":119,"author":{"gitId":"tanchinkiat99"},"content":"    /**","lastModifiedDate":"2022-03-30"},{"lineNumber":120,"author":{"gitId":"tanchinkiat99"},"content":"     * Retrieves the previous list of persons in the address book.","lastModifiedDate":"2022-03-30"},{"lineNumber":121,"author":{"gitId":"tanchinkiat99"},"content":"     */","lastModifiedDate":"2022-03-30"},{"lineNumber":122,"author":{"gitId":"tanchinkiat99"},"content":"    public UniquePersonList getHistory() {","lastModifiedDate":"2022-03-30"},{"lineNumber":123,"author":{"gitId":"tanchinkiat99"},"content":"        return this.personsHistory;","lastModifiedDate":"2022-03-30"},{"lineNumber":124,"author":{"gitId":"tanchinkiat99"},"content":"    }","lastModifiedDate":"2022-03-30"},{"lineNumber":125,"author":{"gitId":"tanchinkiat99"},"content":"","lastModifiedDate":"2022-03-30"},{"lineNumber":126,"author":{"gitId":"tanchinkiat99"},"content":"    /**","lastModifiedDate":"2022-03-30"},{"lineNumber":127,"author":{"gitId":"tanchinkiat99"},"content":"     * Saves the original list of persons in the address book.","lastModifiedDate":"2022-03-30"},{"lineNumber":128,"author":{"gitId":"tanchinkiat99"},"content":"     */","lastModifiedDate":"2022-03-30"},{"lineNumber":129,"author":{"gitId":"tanchinkiat99"},"content":"    public void saveOriginal() {","lastModifiedDate":"2022-03-30"},{"lineNumber":130,"author":{"gitId":"tanchinkiat99"},"content":"        this.personsOriginal \u003d new UniquePersonList();","lastModifiedDate":"2022-03-30"},{"lineNumber":131,"author":{"gitId":"tanchinkiat99"},"content":"        this.personsOriginal.setPersons(this.persons);","lastModifiedDate":"2022-03-30"},{"lineNumber":132,"author":{"gitId":"tanchinkiat99"},"content":"    }","lastModifiedDate":"2022-03-30"},{"lineNumber":133,"author":{"gitId":"tanchinkiat99"},"content":"","lastModifiedDate":"2022-03-30"},{"lineNumber":134,"author":{"gitId":"tanchinkiat99"},"content":"    /**","lastModifiedDate":"2022-03-30"},{"lineNumber":135,"author":{"gitId":"tanchinkiat99"},"content":"     * Restores the current list of person in the address book.","lastModifiedDate":"2022-03-30"},{"lineNumber":136,"author":{"gitId":"tanchinkiat99"},"content":"     */","lastModifiedDate":"2022-03-30"},{"lineNumber":137,"author":{"gitId":"tanchinkiat99"},"content":"    public void restoreOriginal() {","lastModifiedDate":"2022-03-30"},{"lineNumber":138,"author":{"gitId":"tanchinkiat99"},"content":"        this.persons.setPersons(this.personsOriginal);","lastModifiedDate":"2022-03-30"},{"lineNumber":139,"author":{"gitId":"tanchinkiat99"},"content":"    }","lastModifiedDate":"2022-03-30"},{"lineNumber":140,"author":{"gitId":"tanchinkiat99"},"content":"","lastModifiedDate":"2022-03-30"},{"lineNumber":141,"author":{"gitId":"tanchinkiat99"},"content":"    /**","lastModifiedDate":"2022-03-30"},{"lineNumber":142,"author":{"gitId":"tanchinkiat99"},"content":"     * Retrieves the original list of persons in the address book.","lastModifiedDate":"2022-03-30"},{"lineNumber":143,"author":{"gitId":"tanchinkiat99"},"content":"     */","lastModifiedDate":"2022-03-30"},{"lineNumber":144,"author":{"gitId":"tanchinkiat99"},"content":"    public UniquePersonList getOriginal() {","lastModifiedDate":"2022-03-30"},{"lineNumber":145,"author":{"gitId":"tanchinkiat99"},"content":"        return this.personsOriginal;","lastModifiedDate":"2022-03-30"},{"lineNumber":146,"author":{"gitId":"tanchinkiat99"},"content":"    }","lastModifiedDate":"2022-03-30"},{"lineNumber":147,"author":{"gitId":"tanchinkiat99"},"content":"","lastModifiedDate":"2022-03-30"},{"lineNumber":148,"author":{"gitId":"tanchinkiat99"},"content":"    /**","lastModifiedDate":"2022-03-30"},{"lineNumber":149,"author":{"gitId":"tanchinkiat99"},"content":"     * Resets personsOriginal to null.","lastModifiedDate":"2022-03-30"},{"lineNumber":150,"author":{"gitId":"tanchinkiat99"},"content":"     */","lastModifiedDate":"2022-03-30"},{"lineNumber":151,"author":{"gitId":"tanchinkiat99"},"content":"    public void resetOriginal() {","lastModifiedDate":"2022-03-30"},{"lineNumber":152,"author":{"gitId":"tanchinkiat99"},"content":"        this.personsOriginal \u003d null;","lastModifiedDate":"2022-03-30"},{"lineNumber":153,"author":{"gitId":"tanchinkiat99"},"content":"    }","lastModifiedDate":"2022-03-30"},{"lineNumber":154,"author":{"gitId":"tanchinkiat99"},"content":"","lastModifiedDate":"2022-03-30"},{"lineNumber":155,"author":{"gitId":"-"},"content":"    //// util methods","lastModifiedDate":"2016-08-08"},{"lineNumber":156,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":157,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-08"},{"lineNumber":158,"author":{"gitId":"-"},"content":"    public String toString() {","lastModifiedDate":"2016-08-08"},{"lineNumber":159,"author":{"gitId":"-"},"content":"        return persons.asUnmodifiableObservableList().size() + \" persons\";","lastModifiedDate":"2018-04-05"},{"lineNumber":160,"author":{"gitId":"-"},"content":"        // TODO: refine later","lastModifiedDate":"2016-08-08"},{"lineNumber":161,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":162,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":163,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-08"},{"lineNumber":164,"author":{"gitId":"-"},"content":"    public ObservableList\u003cPerson\u003e getPersonList() {","lastModifiedDate":"2018-01-10"},{"lineNumber":165,"author":{"gitId":"-"},"content":"        return persons.asUnmodifiableObservableList();","lastModifiedDate":"2018-04-05"},{"lineNumber":166,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-01"},{"lineNumber":167,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-01"},{"lineNumber":168,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-21"},{"lineNumber":169,"author":{"gitId":"-"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2016-09-21"},{"lineNumber":170,"author":{"gitId":"-"},"content":"        return other \u003d\u003d this // short circuit if same object","lastModifiedDate":"2016-09-21"},{"lineNumber":171,"author":{"gitId":"-"},"content":"                || (other instanceof AddressBook // instanceof handles nulls","lastModifiedDate":"2016-09-21"},{"lineNumber":172,"author":{"gitId":"-"},"content":"                \u0026\u0026 persons.equals(((AddressBook) other).persons));","lastModifiedDate":"2018-08-14"},{"lineNumber":173,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-21"},{"lineNumber":174,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":175,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-21"},{"lineNumber":176,"author":{"gitId":"-"},"content":"    public int hashCode() {","lastModifiedDate":"2016-09-21"},{"lineNumber":177,"author":{"gitId":"-"},"content":"        return persons.hashCode();","lastModifiedDate":"2018-03-29"},{"lineNumber":178,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-21"},{"lineNumber":179,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"}],"authorContributionMap":{"tanchinkiat99":59,"-":120}},{"path":"src/main/java/seedu/address/model/Model.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.model;","lastModifiedDate":"2016-09-25"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-11-27"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import java.util.function.Predicate;","lastModifiedDate":"2017-06-12"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2017-09-01"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.GuiSettings;","lastModifiedDate":"2018-11-27"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2018-01-10"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":10,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-09-25"},{"lineNumber":11,"author":{"gitId":"-"},"content":" * The API of the Model component.","lastModifiedDate":"2016-09-25"},{"lineNumber":12,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-09-25"},{"lineNumber":13,"author":{"gitId":"-"},"content":"public interface Model {","lastModifiedDate":"2016-09-25"},{"lineNumber":14,"author":{"gitId":"-"},"content":"    /** {@code Predicate} that always evaluate to true */","lastModifiedDate":"2017-08-05"},{"lineNumber":15,"author":{"gitId":"-"},"content":"    Predicate\u003cPerson\u003e PREDICATE_SHOW_ALL_PERSONS \u003d unused -\u003e true;","lastModifiedDate":"2018-01-10"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-08-05"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-11-27"},{"lineNumber":18,"author":{"gitId":"-"},"content":"     * Replaces user prefs data with the data in {@code userPrefs}.","lastModifiedDate":"2018-12-06"},{"lineNumber":19,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-11-27"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    void setUserPrefs(ReadOnlyUserPrefs userPrefs);","lastModifiedDate":"2018-12-06"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-11-27"},{"lineNumber":23,"author":{"gitId":"-"},"content":"     * Returns the user prefs.","lastModifiedDate":"2018-11-27"},{"lineNumber":24,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-11-27"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    ReadOnlyUserPrefs getUserPrefs();","lastModifiedDate":"2018-11-27"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-11-27"},{"lineNumber":28,"author":{"gitId":"-"},"content":"     * Returns the user prefs\u0027 GUI settings.","lastModifiedDate":"2018-11-27"},{"lineNumber":29,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-11-27"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    GuiSettings getGuiSettings();","lastModifiedDate":"2018-11-27"},{"lineNumber":31,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-11-27"},{"lineNumber":33,"author":{"gitId":"-"},"content":"     * Sets the user prefs\u0027 GUI settings.","lastModifiedDate":"2018-11-27"},{"lineNumber":34,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-11-27"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    void setGuiSettings(GuiSettings guiSettings);","lastModifiedDate":"2018-11-27"},{"lineNumber":36,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-11-27"},{"lineNumber":38,"author":{"gitId":"-"},"content":"     * Returns the user prefs\u0027 address book file path.","lastModifiedDate":"2018-11-27"},{"lineNumber":39,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-11-27"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    Path getAddressBookFilePath();","lastModifiedDate":"2018-11-27"},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-11-27"},{"lineNumber":43,"author":{"gitId":"-"},"content":"     * Sets the user prefs\u0027 address book file path.","lastModifiedDate":"2018-11-27"},{"lineNumber":44,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-11-27"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    void setAddressBookFilePath(Path addressBookFilePath);","lastModifiedDate":"2018-11-27"},{"lineNumber":46,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-11-27"},{"lineNumber":48,"author":{"gitId":"-"},"content":"     * Replaces address book data with the data in {@code addressBook}.","lastModifiedDate":"2018-11-27"},{"lineNumber":49,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-11-27"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    void setAddressBook(ReadOnlyAddressBook addressBook);","lastModifiedDate":"2018-11-27"},{"lineNumber":51,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    /** Returns the AddressBook */","lastModifiedDate":"2016-09-25"},{"lineNumber":53,"author":{"gitId":"-"},"content":"    ReadOnlyAddressBook getAddressBook();","lastModifiedDate":"2016-09-25"},{"lineNumber":54,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-08-06"},{"lineNumber":56,"author":{"gitId":"-"},"content":"     * Returns true if a person with the same identity as {@code person} exists in the address book.","lastModifiedDate":"2018-08-06"},{"lineNumber":57,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-08-06"},{"lineNumber":58,"author":{"gitId":"-"},"content":"    boolean hasPerson(Person person);","lastModifiedDate":"2018-08-06"},{"lineNumber":59,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-06"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-08-07"},{"lineNumber":61,"author":{"gitId":"-"},"content":"     * Deletes the given person.","lastModifiedDate":"2018-08-07"},{"lineNumber":62,"author":{"gitId":"-"},"content":"     * The person must exist in the address book.","lastModifiedDate":"2018-08-07"},{"lineNumber":63,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-08-07"},{"lineNumber":64,"author":{"gitId":"-"},"content":"    void deletePerson(Person target);","lastModifiedDate":"2018-08-07"},{"lineNumber":65,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":66,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-08-07"},{"lineNumber":67,"author":{"gitId":"-"},"content":"     * Adds the given person.","lastModifiedDate":"2018-08-07"},{"lineNumber":68,"author":{"gitId":"-"},"content":"     * {@code person} must not already exist in the address book.","lastModifiedDate":"2018-08-07"},{"lineNumber":69,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-08-07"},{"lineNumber":70,"author":{"gitId":"-"},"content":"    void addPerson(Person person);","lastModifiedDate":"2018-08-07"},{"lineNumber":71,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":72,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-12-13"},{"lineNumber":73,"author":{"gitId":"-"},"content":"     * Replaces the given person {@code target} with {@code editedPerson}.","lastModifiedDate":"2017-06-07"},{"lineNumber":74,"author":{"gitId":"-"},"content":"     * {@code target} must exist in the address book.","lastModifiedDate":"2018-08-07"},{"lineNumber":75,"author":{"gitId":"-"},"content":"     * The person identity of {@code editedPerson} must not be the same as another existing person in the address book.","lastModifiedDate":"2018-08-07"},{"lineNumber":76,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-12-13"},{"lineNumber":77,"author":{"gitId":"-"},"content":"    void setPerson(Person target, Person editedPerson);","lastModifiedDate":"2018-08-17"},{"lineNumber":78,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-13"},{"lineNumber":79,"author":{"gitId":"tanchinkiat99"},"content":"    /**","lastModifiedDate":"2022-03-30"},{"lineNumber":80,"author":{"gitId":"tanchinkiat99"},"content":"     * Restores the previous state of the address book.","lastModifiedDate":"2022-03-30"},{"lineNumber":81,"author":{"gitId":"tanchinkiat99"},"content":"     */","lastModifiedDate":"2022-03-30"},{"lineNumber":82,"author":{"gitId":"tanchinkiat99"},"content":"    void restoreHistory();","lastModifiedDate":"2022-03-30"},{"lineNumber":83,"author":{"gitId":"tanchinkiat99"},"content":"","lastModifiedDate":"2022-03-30"},{"lineNumber":84,"author":{"gitId":"tanchinkiat99"},"content":"    /**","lastModifiedDate":"2022-03-30"},{"lineNumber":85,"author":{"gitId":"tanchinkiat99"},"content":"     * Checks the presence of a previous state of the address book.","lastModifiedDate":"2022-03-30"},{"lineNumber":86,"author":{"gitId":"tanchinkiat99"},"content":"     */","lastModifiedDate":"2022-03-30"},{"lineNumber":87,"author":{"gitId":"tanchinkiat99"},"content":"    boolean checkHistory();","lastModifiedDate":"2022-03-30"},{"lineNumber":88,"author":{"gitId":"tanchinkiat99"},"content":"","lastModifiedDate":"2022-03-30"},{"lineNumber":89,"author":{"gitId":"tanchinkiat99"},"content":"    /**","lastModifiedDate":"2022-03-30"},{"lineNumber":90,"author":{"gitId":"tanchinkiat99"},"content":"     * Restores the original state of the address book.","lastModifiedDate":"2022-03-30"},{"lineNumber":91,"author":{"gitId":"tanchinkiat99"},"content":"     */","lastModifiedDate":"2022-03-30"},{"lineNumber":92,"author":{"gitId":"tanchinkiat99"},"content":"    void restoreOriginal();","lastModifiedDate":"2022-03-30"},{"lineNumber":93,"author":{"gitId":"tanchinkiat99"},"content":"","lastModifiedDate":"2022-03-30"},{"lineNumber":94,"author":{"gitId":"tanchinkiat99"},"content":"    /**","lastModifiedDate":"2022-03-30"},{"lineNumber":95,"author":{"gitId":"tanchinkiat99"},"content":"     * Checks the presence of an original state of the address book.","lastModifiedDate":"2022-03-30"},{"lineNumber":96,"author":{"gitId":"tanchinkiat99"},"content":"     * @return","lastModifiedDate":"2022-03-30"},{"lineNumber":97,"author":{"gitId":"tanchinkiat99"},"content":"     */","lastModifiedDate":"2022-03-30"},{"lineNumber":98,"author":{"gitId":"tanchinkiat99"},"content":"    boolean checkOriginal();","lastModifiedDate":"2022-03-30"},{"lineNumber":99,"author":{"gitId":"tanchinkiat99"},"content":"","lastModifiedDate":"2022-03-30"},{"lineNumber":100,"author":{"gitId":"-"},"content":"    /** Returns an unmodifiable view of the filtered person list */","lastModifiedDate":"2017-09-01"},{"lineNumber":101,"author":{"gitId":"-"},"content":"    ObservableList\u003cPerson\u003e getFilteredPersonList();","lastModifiedDate":"2018-01-10"},{"lineNumber":102,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":103,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-08-05"},{"lineNumber":104,"author":{"gitId":"-"},"content":"     * Updates the filter of the filtered person list to filter by the given {@code predicate}.","lastModifiedDate":"2017-08-05"},{"lineNumber":105,"author":{"gitId":"-"},"content":"     * @throws NullPointerException if {@code predicate} is null.","lastModifiedDate":"2017-08-05"},{"lineNumber":106,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-08-05"},{"lineNumber":107,"author":{"gitId":"-"},"content":"    void updateFilteredPersonList(Predicate\u003cPerson\u003e predicate);","lastModifiedDate":"2018-01-10"},{"lineNumber":108,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-09-25"}],"authorContributionMap":{"tanchinkiat99":21,"-":87}},{"path":"src/main/java/seedu/address/model/ModelManager.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.model;","lastModifiedDate":"2016-08-08"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2017-08-05"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static seedu.address.commons.util.CollectionUtil.requireAllNonNull;","lastModifiedDate":"2017-05-19"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-15"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-11-27"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import java.util.function.Predicate;","lastModifiedDate":"2017-06-12"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import java.util.logging.Logger;","lastModifiedDate":"2017-01-19"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2017-09-01"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import javafx.collections.transformation.FilteredList;","lastModifiedDate":"2016-08-26"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.GuiSettings;","lastModifiedDate":"2018-11-27"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.LogsCenter;","lastModifiedDate":"2016-09-23"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2018-01-10"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":16,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-08"},{"lineNumber":17,"author":{"gitId":"-"},"content":" * Represents the in-memory model of the address book data.","lastModifiedDate":"2016-08-08"},{"lineNumber":18,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-08"},{"lineNumber":19,"author":{"gitId":"-"},"content":"public class ModelManager implements Model {","lastModifiedDate":"2018-12-09"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    private static final Logger logger \u003d LogsCenter.getLogger(ModelManager.class);","lastModifiedDate":"2016-09-23"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    private final AddressBook addressBook;","lastModifiedDate":"2019-01-25"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    private final UserPrefs userPrefs;","lastModifiedDate":"2018-12-06"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    private final FilteredList\u003cPerson\u003e filteredPersons;","lastModifiedDate":"2018-01-10"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-08"},{"lineNumber":27,"author":{"gitId":"-"},"content":"     * Initializes a ModelManager with the given addressBook and userPrefs.","lastModifiedDate":"2016-12-24"},{"lineNumber":28,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-08"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    public ModelManager(ReadOnlyAddressBook addressBook, ReadOnlyUserPrefs userPrefs) {","lastModifiedDate":"2018-12-06"},{"lineNumber":30,"author":{"gitId":"-"},"content":"        requireAllNonNull(addressBook, userPrefs);","lastModifiedDate":"2017-05-19"},{"lineNumber":31,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":32,"author":{"gitId":"-"},"content":"        logger.fine(\"Initializing with address book: \" + addressBook + \" and user prefs \" + userPrefs);","lastModifiedDate":"2016-12-24"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":34,"author":{"gitId":"-"},"content":"        this.addressBook \u003d new AddressBook(addressBook);","lastModifiedDate":"2019-01-25"},{"lineNumber":35,"author":{"gitId":"-"},"content":"        this.userPrefs \u003d new UserPrefs(userPrefs);","lastModifiedDate":"2018-12-06"},{"lineNumber":36,"author":{"gitId":"-"},"content":"        filteredPersons \u003d new FilteredList\u003c\u003e(this.addressBook.getPersonList());","lastModifiedDate":"2019-01-25"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":38,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    public ModelManager() {","lastModifiedDate":"2016-09-22"},{"lineNumber":40,"author":{"gitId":"-"},"content":"        this(new AddressBook(), new UserPrefs());","lastModifiedDate":"2016-09-25"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":42,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    //\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d UserPrefs \u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d","lastModifiedDate":"2018-11-27"},{"lineNumber":44,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2018-11-27"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    public void setUserPrefs(ReadOnlyUserPrefs userPrefs) {","lastModifiedDate":"2018-12-06"},{"lineNumber":47,"author":{"gitId":"-"},"content":"        requireNonNull(userPrefs);","lastModifiedDate":"2018-11-27"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        this.userPrefs.resetData(userPrefs);","lastModifiedDate":"2018-12-06"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":50,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2018-11-27"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    public ReadOnlyUserPrefs getUserPrefs() {","lastModifiedDate":"2018-11-27"},{"lineNumber":53,"author":{"gitId":"-"},"content":"        return userPrefs;","lastModifiedDate":"2018-11-27"},{"lineNumber":54,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":55,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2018-11-27"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    public GuiSettings getGuiSettings() {","lastModifiedDate":"2018-11-27"},{"lineNumber":58,"author":{"gitId":"-"},"content":"        return userPrefs.getGuiSettings();","lastModifiedDate":"2018-11-27"},{"lineNumber":59,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":60,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":61,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2018-11-27"},{"lineNumber":62,"author":{"gitId":"-"},"content":"    public void setGuiSettings(GuiSettings guiSettings) {","lastModifiedDate":"2018-11-27"},{"lineNumber":63,"author":{"gitId":"-"},"content":"        requireNonNull(guiSettings);","lastModifiedDate":"2018-11-27"},{"lineNumber":64,"author":{"gitId":"-"},"content":"        userPrefs.setGuiSettings(guiSettings);","lastModifiedDate":"2018-11-27"},{"lineNumber":65,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":66,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":67,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2018-11-27"},{"lineNumber":68,"author":{"gitId":"-"},"content":"    public Path getAddressBookFilePath() {","lastModifiedDate":"2018-11-27"},{"lineNumber":69,"author":{"gitId":"-"},"content":"        return userPrefs.getAddressBookFilePath();","lastModifiedDate":"2018-11-27"},{"lineNumber":70,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":71,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":72,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2018-11-27"},{"lineNumber":73,"author":{"gitId":"-"},"content":"    public void setAddressBookFilePath(Path addressBookFilePath) {","lastModifiedDate":"2018-11-27"},{"lineNumber":74,"author":{"gitId":"-"},"content":"        requireNonNull(addressBookFilePath);","lastModifiedDate":"2018-11-27"},{"lineNumber":75,"author":{"gitId":"-"},"content":"        userPrefs.setAddressBookFilePath(addressBookFilePath);","lastModifiedDate":"2018-11-27"},{"lineNumber":76,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":77,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":78,"author":{"gitId":"-"},"content":"    //\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d AddressBook \u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d","lastModifiedDate":"2018-11-27"},{"lineNumber":79,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":80,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-25"},{"lineNumber":81,"author":{"gitId":"-"},"content":"    public void setAddressBook(ReadOnlyAddressBook addressBook) {","lastModifiedDate":"2018-11-27"},{"lineNumber":82,"author":{"gitId":"-"},"content":"        this.addressBook.resetData(addressBook);","lastModifiedDate":"2019-01-25"},{"lineNumber":83,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":84,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":85,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-25"},{"lineNumber":86,"author":{"gitId":"-"},"content":"    public ReadOnlyAddressBook getAddressBook() {","lastModifiedDate":"2016-09-21"},{"lineNumber":87,"author":{"gitId":"-"},"content":"        return addressBook;","lastModifiedDate":"2019-01-25"},{"lineNumber":88,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-21"},{"lineNumber":89,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":90,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2018-08-06"},{"lineNumber":91,"author":{"gitId":"-"},"content":"    public boolean hasPerson(Person person) {","lastModifiedDate":"2018-08-15"},{"lineNumber":92,"author":{"gitId":"-"},"content":"        requireNonNull(person);","lastModifiedDate":"2018-08-06"},{"lineNumber":93,"author":{"gitId":"-"},"content":"        return addressBook.hasPerson(person);","lastModifiedDate":"2019-01-25"},{"lineNumber":94,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-06"},{"lineNumber":95,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-06"},{"lineNumber":96,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-25"},{"lineNumber":97,"author":{"gitId":"-"},"content":"    public void deletePerson(Person target) {","lastModifiedDate":"2018-08-15"},{"lineNumber":98,"author":{"gitId":"tanchinkiat99"},"content":"        addressBook.resetOriginal();","lastModifiedDate":"2022-03-30"},{"lineNumber":99,"author":{"gitId":"tanchinkiat99"},"content":"        addressBook.saveHistory();","lastModifiedDate":"2022-03-30"},{"lineNumber":100,"author":{"gitId":"-"},"content":"        addressBook.removePerson(target);","lastModifiedDate":"2019-01-25"},{"lineNumber":101,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":102,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":103,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-25"},{"lineNumber":104,"author":{"gitId":"-"},"content":"    public void addPerson(Person person) {","lastModifiedDate":"2018-08-15"},{"lineNumber":105,"author":{"gitId":"tanchinkiat99"},"content":"        addressBook.resetOriginal();","lastModifiedDate":"2022-03-30"},{"lineNumber":106,"author":{"gitId":"tanchinkiat99"},"content":"        addressBook.saveHistory();","lastModifiedDate":"2022-03-30"},{"lineNumber":107,"author":{"gitId":"-"},"content":"        addressBook.addPerson(person);","lastModifiedDate":"2019-01-25"},{"lineNumber":108,"author":{"gitId":"-"},"content":"        updateFilteredPersonList(PREDICATE_SHOW_ALL_PERSONS);","lastModifiedDate":"2017-08-05"},{"lineNumber":109,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-26"},{"lineNumber":110,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-26"},{"lineNumber":111,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-12-13"},{"lineNumber":112,"author":{"gitId":"-"},"content":"    public void setPerson(Person target, Person editedPerson) {","lastModifiedDate":"2018-08-17"},{"lineNumber":113,"author":{"gitId":"-"},"content":"        requireAllNonNull(target, editedPerson);","lastModifiedDate":"2017-06-07"},{"lineNumber":114,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-13"},{"lineNumber":115,"author":{"gitId":"tanchinkiat99"},"content":"        addressBook.resetOriginal();","lastModifiedDate":"2022-03-30"},{"lineNumber":116,"author":{"gitId":"tanchinkiat99"},"content":"        addressBook.saveHistory();","lastModifiedDate":"2022-03-30"},{"lineNumber":117,"author":{"gitId":"-"},"content":"        addressBook.setPerson(target, editedPerson);","lastModifiedDate":"2019-01-25"},{"lineNumber":118,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-13"},{"lineNumber":119,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-13"},{"lineNumber":120,"author":{"gitId":"tanchinkiat99"},"content":"    @Override","lastModifiedDate":"2022-03-30"},{"lineNumber":121,"author":{"gitId":"tanchinkiat99"},"content":"    public void restoreHistory() {","lastModifiedDate":"2022-03-30"},{"lineNumber":122,"author":{"gitId":"tanchinkiat99"},"content":"        addressBook.saveOriginal();","lastModifiedDate":"2022-03-30"},{"lineNumber":123,"author":{"gitId":"tanchinkiat99"},"content":"        addressBook.restoreHistory();","lastModifiedDate":"2022-03-30"},{"lineNumber":124,"author":{"gitId":"tanchinkiat99"},"content":"        updateFilteredPersonList(PREDICATE_SHOW_ALL_PERSONS);","lastModifiedDate":"2022-03-30"},{"lineNumber":125,"author":{"gitId":"tanchinkiat99"},"content":"    }","lastModifiedDate":"2022-03-30"},{"lineNumber":126,"author":{"gitId":"tanchinkiat99"},"content":"","lastModifiedDate":"2022-03-30"},{"lineNumber":127,"author":{"gitId":"tanchinkiat99"},"content":"    @Override","lastModifiedDate":"2022-03-30"},{"lineNumber":128,"author":{"gitId":"tanchinkiat99"},"content":"    public boolean checkHistory() {","lastModifiedDate":"2022-03-30"},{"lineNumber":129,"author":{"gitId":"tanchinkiat99"},"content":"        return addressBook.getHistory() !\u003d null;","lastModifiedDate":"2022-03-30"},{"lineNumber":130,"author":{"gitId":"tanchinkiat99"},"content":"    }","lastModifiedDate":"2022-03-30"},{"lineNumber":131,"author":{"gitId":"tanchinkiat99"},"content":"","lastModifiedDate":"2022-03-30"},{"lineNumber":132,"author":{"gitId":"tanchinkiat99"},"content":"    @Override","lastModifiedDate":"2022-03-30"},{"lineNumber":133,"author":{"gitId":"tanchinkiat99"},"content":"    public void restoreOriginal() {","lastModifiedDate":"2022-03-30"},{"lineNumber":134,"author":{"gitId":"tanchinkiat99"},"content":"        addressBook.restoreOriginal();","lastModifiedDate":"2022-03-30"},{"lineNumber":135,"author":{"gitId":"tanchinkiat99"},"content":"        updateFilteredPersonList(PREDICATE_SHOW_ALL_PERSONS);","lastModifiedDate":"2022-03-30"},{"lineNumber":136,"author":{"gitId":"tanchinkiat99"},"content":"    }","lastModifiedDate":"2022-03-30"},{"lineNumber":137,"author":{"gitId":"tanchinkiat99"},"content":"","lastModifiedDate":"2022-03-30"},{"lineNumber":138,"author":{"gitId":"tanchinkiat99"},"content":"    @Override","lastModifiedDate":"2022-03-30"},{"lineNumber":139,"author":{"gitId":"tanchinkiat99"},"content":"    public boolean checkOriginal() {","lastModifiedDate":"2022-03-30"},{"lineNumber":140,"author":{"gitId":"tanchinkiat99"},"content":"        return addressBook.getOriginal() !\u003d null;","lastModifiedDate":"2022-03-30"},{"lineNumber":141,"author":{"gitId":"tanchinkiat99"},"content":"    }","lastModifiedDate":"2022-03-30"},{"lineNumber":142,"author":{"gitId":"tanchinkiat99"},"content":"","lastModifiedDate":"2022-03-30"},{"lineNumber":143,"author":{"gitId":"-"},"content":"    //\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d Filtered Person List Accessors \u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d","lastModifiedDate":"2016-10-12"},{"lineNumber":144,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":145,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-05-19"},{"lineNumber":146,"author":{"gitId":"-"},"content":"     * Returns an unmodifiable view of the list of {@code Person} backed by the internal list of","lastModifiedDate":"2018-01-10"},{"lineNumber":147,"author":{"gitId":"-"},"content":"     * {@code versionedAddressBook}","lastModifiedDate":"2018-06-11"},{"lineNumber":148,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-05-19"},{"lineNumber":149,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-25"},{"lineNumber":150,"author":{"gitId":"-"},"content":"    public ObservableList\u003cPerson\u003e getFilteredPersonList() {","lastModifiedDate":"2018-01-10"},{"lineNumber":151,"author":{"gitId":"-"},"content":"        return filteredPersons;","lastModifiedDate":"2018-12-09"},{"lineNumber":152,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-22"},{"lineNumber":153,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":154,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-25"},{"lineNumber":155,"author":{"gitId":"-"},"content":"    public void updateFilteredPersonList(Predicate\u003cPerson\u003e predicate) {","lastModifiedDate":"2018-01-10"},{"lineNumber":156,"author":{"gitId":"-"},"content":"        requireNonNull(predicate);","lastModifiedDate":"2017-08-05"},{"lineNumber":157,"author":{"gitId":"-"},"content":"        filteredPersons.setPredicate(predicate);","lastModifiedDate":"2017-06-12"},{"lineNumber":158,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-22"},{"lineNumber":159,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":160,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2017-05-31"},{"lineNumber":161,"author":{"gitId":"-"},"content":"    public boolean equals(Object obj) {","lastModifiedDate":"2017-05-31"},{"lineNumber":162,"author":{"gitId":"-"},"content":"        // short circuit if same object","lastModifiedDate":"2017-05-31"},{"lineNumber":163,"author":{"gitId":"-"},"content":"        if (obj \u003d\u003d this) {","lastModifiedDate":"2017-05-31"},{"lineNumber":164,"author":{"gitId":"-"},"content":"            return true;","lastModifiedDate":"2017-05-31"},{"lineNumber":165,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-31"},{"lineNumber":166,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-31"},{"lineNumber":167,"author":{"gitId":"-"},"content":"        // instanceof handles nulls","lastModifiedDate":"2017-05-31"},{"lineNumber":168,"author":{"gitId":"-"},"content":"        if (!(obj instanceof ModelManager)) {","lastModifiedDate":"2017-05-31"},{"lineNumber":169,"author":{"gitId":"-"},"content":"            return false;","lastModifiedDate":"2017-05-31"},{"lineNumber":170,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-31"},{"lineNumber":171,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-31"},{"lineNumber":172,"author":{"gitId":"-"},"content":"        // state check","lastModifiedDate":"2017-05-31"},{"lineNumber":173,"author":{"gitId":"-"},"content":"        ModelManager other \u003d (ModelManager) obj;","lastModifiedDate":"2017-05-31"},{"lineNumber":174,"author":{"gitId":"-"},"content":"        return addressBook.equals(other.addressBook)","lastModifiedDate":"2019-01-25"},{"lineNumber":175,"author":{"gitId":"-"},"content":"                \u0026\u0026 userPrefs.equals(other.userPrefs)","lastModifiedDate":"2018-11-27"},{"lineNumber":176,"author":{"gitId":"-"},"content":"                \u0026\u0026 filteredPersons.equals(other.filteredPersons);","lastModifiedDate":"2019-01-25"},{"lineNumber":177,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-31"},{"lineNumber":178,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-31"},{"lineNumber":179,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"}],"authorContributionMap":{"tanchinkiat99":29,"-":150}},{"path":"src/main/java/seedu/address/model/excel/ExcelToJsonConverter.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"kevinkuo0320"},"content":"package seedu.address.model.excel;","lastModifiedDate":"2022-03-31"},{"lineNumber":2,"author":{"gitId":"kevinkuo0320"},"content":"","lastModifiedDate":"2022-03-31"},{"lineNumber":3,"author":{"gitId":"kevinkuo0320"},"content":"import java.io.File;","lastModifiedDate":"2022-03-31"},{"lineNumber":4,"author":{"gitId":"kevinkuo0320"},"content":"import java.io.FileInputStream;","lastModifiedDate":"2022-03-31"},{"lineNumber":5,"author":{"gitId":"kevinkuo0320"},"content":"import java.io.IOException;","lastModifiedDate":"2022-03-31"},{"lineNumber":6,"author":{"gitId":"kevinkuo0320"},"content":"import java.util.ArrayList;","lastModifiedDate":"2022-03-31"},{"lineNumber":7,"author":{"gitId":"kevinkuo0320"},"content":"import java.util.List;","lastModifiedDate":"2022-03-31"},{"lineNumber":8,"author":{"gitId":"kevinkuo0320"},"content":"","lastModifiedDate":"2022-03-31"},{"lineNumber":9,"author":{"gitId":"kevinkuo0320"},"content":"import org.apache.poi.hssf.usermodel.HSSFWorkbook;","lastModifiedDate":"2022-03-31"},{"lineNumber":10,"author":{"gitId":"kevinkuo0320"},"content":"import org.apache.poi.ss.usermodel.Cell;","lastModifiedDate":"2022-03-31"},{"lineNumber":11,"author":{"gitId":"kevinkuo0320"},"content":"import org.apache.poi.ss.usermodel.Row;","lastModifiedDate":"2022-03-31"},{"lineNumber":12,"author":{"gitId":"kevinkuo0320"},"content":"import org.apache.poi.ss.usermodel.Sheet;","lastModifiedDate":"2022-03-31"},{"lineNumber":13,"author":{"gitId":"kevinkuo0320"},"content":"import org.apache.poi.ss.usermodel.Workbook;","lastModifiedDate":"2022-03-31"},{"lineNumber":14,"author":{"gitId":"kevinkuo0320"},"content":"import org.apache.poi.xssf.usermodel.XSSFWorkbook;","lastModifiedDate":"2022-03-31"},{"lineNumber":15,"author":{"gitId":"kevinkuo0320"},"content":"","lastModifiedDate":"2022-03-31"},{"lineNumber":16,"author":{"gitId":"kevinkuo0320"},"content":"import com.fasterxml.jackson.databind.JsonNode;","lastModifiedDate":"2022-03-31"},{"lineNumber":17,"author":{"gitId":"kevinkuo0320"},"content":"import com.fasterxml.jackson.databind.ObjectMapper;","lastModifiedDate":"2022-03-31"},{"lineNumber":18,"author":{"gitId":"kevinkuo0320"},"content":"import com.fasterxml.jackson.databind.node.ArrayNode;","lastModifiedDate":"2022-03-31"},{"lineNumber":19,"author":{"gitId":"kevinkuo0320"},"content":"import com.fasterxml.jackson.databind.node.ObjectNode;","lastModifiedDate":"2022-03-31"},{"lineNumber":20,"author":{"gitId":"kevinkuo0320"},"content":"","lastModifiedDate":"2022-03-31"},{"lineNumber":21,"author":{"gitId":"kevinkuo0320"},"content":"/**","lastModifiedDate":"2022-03-31"},{"lineNumber":22,"author":{"gitId":"kevinkuo0320"},"content":" * Class for converting excel to json format","lastModifiedDate":"2022-03-31"},{"lineNumber":23,"author":{"gitId":"kevinkuo0320"},"content":" * reference from javacodepoint.com","lastModifiedDate":"2022-03-31"},{"lineNumber":24,"author":{"gitId":"kevinkuo0320"},"content":" */","lastModifiedDate":"2022-03-31"},{"lineNumber":25,"author":{"gitId":"kevinkuo0320"},"content":"public class ExcelToJsonConverter {","lastModifiedDate":"2022-03-31"},{"lineNumber":26,"author":{"gitId":"kevinkuo0320"},"content":"","lastModifiedDate":"2022-03-31"},{"lineNumber":27,"author":{"gitId":"kevinkuo0320"},"content":"    private ObjectMapper mapper \u003d new ObjectMapper();","lastModifiedDate":"2022-03-31"},{"lineNumber":28,"author":{"gitId":"kevinkuo0320"},"content":"","lastModifiedDate":"2022-03-31"},{"lineNumber":29,"author":{"gitId":"kevinkuo0320"},"content":"    /**","lastModifiedDate":"2022-03-31"},{"lineNumber":30,"author":{"gitId":"kevinkuo0320"},"content":"     * Method to convert excel sheet data to JSON format","lastModifiedDate":"2022-03-31"},{"lineNumber":31,"author":{"gitId":"kevinkuo0320"},"content":"     * @param excel for import","lastModifiedDate":"2022-03-31"},{"lineNumber":32,"author":{"gitId":"kevinkuo0320"},"content":"     * @return JsonNode that contains student records","lastModifiedDate":"2022-03-31"},{"lineNumber":33,"author":{"gitId":"kevinkuo0320"},"content":"     */","lastModifiedDate":"2022-03-31"},{"lineNumber":34,"author":{"gitId":"kevinkuo0320"},"content":"    public JsonNode excelToJson(File excel) {","lastModifiedDate":"2022-03-31"},{"lineNumber":35,"author":{"gitId":"kevinkuo0320"},"content":"        ObjectNode excelData \u003d mapper.createObjectNode();","lastModifiedDate":"2022-03-31"},{"lineNumber":36,"author":{"gitId":"kevinkuo0320"},"content":"        FileInputStream fis \u003d null;","lastModifiedDate":"2022-03-31"},{"lineNumber":37,"author":{"gitId":"kevinkuo0320"},"content":"        Workbook workbook \u003d null;","lastModifiedDate":"2022-03-31"},{"lineNumber":38,"author":{"gitId":"kevinkuo0320"},"content":"        try {","lastModifiedDate":"2022-03-31"},{"lineNumber":39,"author":{"gitId":"kevinkuo0320"},"content":"            fis \u003d new FileInputStream(excel);","lastModifiedDate":"2022-03-31"},{"lineNumber":40,"author":{"gitId":"kevinkuo0320"},"content":"","lastModifiedDate":"2022-03-31"},{"lineNumber":41,"author":{"gitId":"kevinkuo0320"},"content":"            String filename \u003d excel.getName().toLowerCase();","lastModifiedDate":"2022-03-31"},{"lineNumber":42,"author":{"gitId":"kevinkuo0320"},"content":"            if (filename.endsWith(\".xls\") || filename.endsWith(\".xlsx\")) {","lastModifiedDate":"2022-03-31"},{"lineNumber":43,"author":{"gitId":"kevinkuo0320"},"content":"                if (filename.endsWith(\".xls\")) {","lastModifiedDate":"2022-03-31"},{"lineNumber":44,"author":{"gitId":"kevinkuo0320"},"content":"                    workbook \u003d new HSSFWorkbook(fis);","lastModifiedDate":"2022-03-31"},{"lineNumber":45,"author":{"gitId":"kevinkuo0320"},"content":"                } else {","lastModifiedDate":"2022-03-31"},{"lineNumber":46,"author":{"gitId":"kevinkuo0320"},"content":"                    workbook \u003d new XSSFWorkbook(fis);","lastModifiedDate":"2022-03-31"},{"lineNumber":47,"author":{"gitId":"kevinkuo0320"},"content":"                }","lastModifiedDate":"2022-03-31"},{"lineNumber":48,"author":{"gitId":"kevinkuo0320"},"content":"","lastModifiedDate":"2022-03-31"},{"lineNumber":49,"author":{"gitId":"kevinkuo0320"},"content":"                int numOfSheet \u003d workbook.getNumberOfSheets();","lastModifiedDate":"2022-03-31"},{"lineNumber":50,"author":{"gitId":"kevinkuo0320"},"content":"","lastModifiedDate":"2022-03-31"},{"lineNumber":51,"author":{"gitId":"kevinkuo0320"},"content":"                setRowColData(numOfSheet, workbook, excelData);","lastModifiedDate":"2022-03-31"},{"lineNumber":52,"author":{"gitId":"kevinkuo0320"},"content":"","lastModifiedDate":"2022-03-31"},{"lineNumber":53,"author":{"gitId":"kevinkuo0320"},"content":"                return excelData;","lastModifiedDate":"2022-03-31"},{"lineNumber":54,"author":{"gitId":"kevinkuo0320"},"content":"            } else {","lastModifiedDate":"2022-03-31"},{"lineNumber":55,"author":{"gitId":"kevinkuo0320"},"content":"                throw new IllegalArgumentException(\"wrongFormat\");","lastModifiedDate":"2022-03-31"},{"lineNumber":56,"author":{"gitId":"kevinkuo0320"},"content":"            }","lastModifiedDate":"2022-03-31"},{"lineNumber":57,"author":{"gitId":"kevinkuo0320"},"content":"        } catch (Exception e) {","lastModifiedDate":"2022-03-31"},{"lineNumber":58,"author":{"gitId":"kevinkuo0320"},"content":"            e.printStackTrace();","lastModifiedDate":"2022-03-31"},{"lineNumber":59,"author":{"gitId":"kevinkuo0320"},"content":"        } finally {","lastModifiedDate":"2022-03-31"},{"lineNumber":60,"author":{"gitId":"kevinkuo0320"},"content":"            if (workbook !\u003d null) {","lastModifiedDate":"2022-03-31"},{"lineNumber":61,"author":{"gitId":"kevinkuo0320"},"content":"                try {","lastModifiedDate":"2022-03-31"},{"lineNumber":62,"author":{"gitId":"kevinkuo0320"},"content":"                    workbook.close();","lastModifiedDate":"2022-03-31"},{"lineNumber":63,"author":{"gitId":"kevinkuo0320"},"content":"                } catch (IOException e) {","lastModifiedDate":"2022-03-31"},{"lineNumber":64,"author":{"gitId":"kevinkuo0320"},"content":"                    e.printStackTrace();","lastModifiedDate":"2022-03-31"},{"lineNumber":65,"author":{"gitId":"kevinkuo0320"},"content":"                }","lastModifiedDate":"2022-03-31"},{"lineNumber":66,"author":{"gitId":"kevinkuo0320"},"content":"            }","lastModifiedDate":"2022-03-31"},{"lineNumber":67,"author":{"gitId":"kevinkuo0320"},"content":"            if (fis !\u003d null) {","lastModifiedDate":"2022-03-31"},{"lineNumber":68,"author":{"gitId":"kevinkuo0320"},"content":"                try {","lastModifiedDate":"2022-03-31"},{"lineNumber":69,"author":{"gitId":"kevinkuo0320"},"content":"                    fis.close();","lastModifiedDate":"2022-03-31"},{"lineNumber":70,"author":{"gitId":"kevinkuo0320"},"content":"                } catch (IOException e) {","lastModifiedDate":"2022-03-31"},{"lineNumber":71,"author":{"gitId":"kevinkuo0320"},"content":"                    e.printStackTrace();","lastModifiedDate":"2022-03-31"},{"lineNumber":72,"author":{"gitId":"kevinkuo0320"},"content":"                }","lastModifiedDate":"2022-03-31"},{"lineNumber":73,"author":{"gitId":"kevinkuo0320"},"content":"            }","lastModifiedDate":"2022-03-31"},{"lineNumber":74,"author":{"gitId":"kevinkuo0320"},"content":"","lastModifiedDate":"2022-03-31"},{"lineNumber":75,"author":{"gitId":"kevinkuo0320"},"content":"        }","lastModifiedDate":"2022-03-31"},{"lineNumber":76,"author":{"gitId":"kevinkuo0320"},"content":"        return null;","lastModifiedDate":"2022-03-31"},{"lineNumber":77,"author":{"gitId":"kevinkuo0320"},"content":"    }","lastModifiedDate":"2022-03-31"},{"lineNumber":78,"author":{"gitId":"kevinkuo0320"},"content":"","lastModifiedDate":"2022-03-31"},{"lineNumber":79,"author":{"gitId":"kevinkuo0320"},"content":"    /**","lastModifiedDate":"2022-03-31"},{"lineNumber":80,"author":{"gitId":"kevinkuo0320"},"content":"     * Helper function for reading each sheet one by one","lastModifiedDate":"2022-03-31"},{"lineNumber":81,"author":{"gitId":"kevinkuo0320"},"content":"     * @param numOfSheet","lastModifiedDate":"2022-03-31"},{"lineNumber":82,"author":{"gitId":"kevinkuo0320"},"content":"     * @param workbook","lastModifiedDate":"2022-03-31"},{"lineNumber":83,"author":{"gitId":"kevinkuo0320"},"content":"     * @param excelData","lastModifiedDate":"2022-03-31"},{"lineNumber":84,"author":{"gitId":"kevinkuo0320"},"content":"     */","lastModifiedDate":"2022-03-31"},{"lineNumber":85,"author":{"gitId":"kevinkuo0320"},"content":"    private void setRowColData(int numOfSheet, Workbook workbook, ObjectNode excelData) {","lastModifiedDate":"2022-03-31"},{"lineNumber":86,"author":{"gitId":"kevinkuo0320"},"content":"        for (int i \u003d 0; i \u003c numOfSheet; i++) {","lastModifiedDate":"2022-03-31"},{"lineNumber":87,"author":{"gitId":"kevinkuo0320"},"content":"            Sheet sheet \u003d workbook.getSheetAt(i);","lastModifiedDate":"2022-03-31"},{"lineNumber":88,"author":{"gitId":"kevinkuo0320"},"content":"            String sheetName \u003d sheet.getSheetName();","lastModifiedDate":"2022-03-31"},{"lineNumber":89,"author":{"gitId":"kevinkuo0320"},"content":"","lastModifiedDate":"2022-03-31"},{"lineNumber":90,"author":{"gitId":"kevinkuo0320"},"content":"            List\u003cString\u003e headers \u003d new ArrayList\u003cString\u003e();","lastModifiedDate":"2022-03-31"},{"lineNumber":91,"author":{"gitId":"kevinkuo0320"},"content":"            ArrayNode sheetData \u003d mapper.createArrayNode();","lastModifiedDate":"2022-03-31"},{"lineNumber":92,"author":{"gitId":"kevinkuo0320"},"content":"            // Reading each row of the sheet","lastModifiedDate":"2022-03-31"},{"lineNumber":93,"author":{"gitId":"kevinkuo0320"},"content":"            for (int j \u003d 0; j \u003c\u003d sheet.getLastRowNum(); j++) {","lastModifiedDate":"2022-03-31"},{"lineNumber":94,"author":{"gitId":"kevinkuo0320"},"content":"                Row row \u003d sheet.getRow(j);","lastModifiedDate":"2022-03-31"},{"lineNumber":95,"author":{"gitId":"kevinkuo0320"},"content":"                if (j \u003d\u003d 0) {","lastModifiedDate":"2022-03-31"},{"lineNumber":96,"author":{"gitId":"kevinkuo0320"},"content":"                    // reading sheet header\u0027s name","lastModifiedDate":"2022-03-31"},{"lineNumber":97,"author":{"gitId":"kevinkuo0320"},"content":"                    for (int k \u003d 0; k \u003c row.getLastCellNum(); k++) {","lastModifiedDate":"2022-03-31"},{"lineNumber":98,"author":{"gitId":"kevinkuo0320"},"content":"                        headers.add(row.getCell(k).getStringCellValue());","lastModifiedDate":"2022-03-31"},{"lineNumber":99,"author":{"gitId":"kevinkuo0320"},"content":"                    }","lastModifiedDate":"2022-03-31"},{"lineNumber":100,"author":{"gitId":"kevinkuo0320"},"content":"                } else {","lastModifiedDate":"2022-03-31"},{"lineNumber":101,"author":{"gitId":"kevinkuo0320"},"content":"                    // reading work sheet data","lastModifiedDate":"2022-03-31"},{"lineNumber":102,"author":{"gitId":"kevinkuo0320"},"content":"                    ObjectNode rowData \u003d mapper.createObjectNode();","lastModifiedDate":"2022-03-31"},{"lineNumber":103,"author":{"gitId":"kevinkuo0320"},"content":"","lastModifiedDate":"2022-03-31"},{"lineNumber":104,"author":{"gitId":"kevinkuo0320"},"content":"                    for (int k \u003d 0; k \u003c headers.size(); k++) {","lastModifiedDate":"2022-03-31"},{"lineNumber":105,"author":{"gitId":"kevinkuo0320"},"content":"                        Cell cell \u003d row.getCell(k);","lastModifiedDate":"2022-03-31"},{"lineNumber":106,"author":{"gitId":"kevinkuo0320"},"content":"                        String headerName \u003d headers.get(k);","lastModifiedDate":"2022-03-31"},{"lineNumber":107,"author":{"gitId":"kevinkuo0320"},"content":"                        if (cell !\u003d null) {","lastModifiedDate":"2022-03-31"},{"lineNumber":108,"author":{"gitId":"kevinkuo0320"},"content":"                            switch (cell.getCellTypeEnum()) {","lastModifiedDate":"2022-03-31"},{"lineNumber":109,"author":{"gitId":"kevinkuo0320"},"content":"                            case FORMULA:","lastModifiedDate":"2022-03-31"},{"lineNumber":110,"author":{"gitId":"kevinkuo0320"},"content":"                                rowData.put(headerName, cell.getCellFormula());","lastModifiedDate":"2022-03-31"},{"lineNumber":111,"author":{"gitId":"kevinkuo0320"},"content":"                                break;","lastModifiedDate":"2022-03-31"},{"lineNumber":112,"author":{"gitId":"kevinkuo0320"},"content":"                            case BOOLEAN:","lastModifiedDate":"2022-03-31"},{"lineNumber":113,"author":{"gitId":"kevinkuo0320"},"content":"                                rowData.put(headerName, cell.getBooleanCellValue());","lastModifiedDate":"2022-03-31"},{"lineNumber":114,"author":{"gitId":"kevinkuo0320"},"content":"                                break;","lastModifiedDate":"2022-03-31"},{"lineNumber":115,"author":{"gitId":"kevinkuo0320"},"content":"                            case NUMERIC:","lastModifiedDate":"2022-03-31"},{"lineNumber":116,"author":{"gitId":"kevinkuo0320"},"content":"                                rowData.put(headerName, cell.getNumericCellValue());","lastModifiedDate":"2022-03-31"},{"lineNumber":117,"author":{"gitId":"kevinkuo0320"},"content":"                                break;","lastModifiedDate":"2022-03-31"},{"lineNumber":118,"author":{"gitId":"kevinkuo0320"},"content":"                            case BLANK:","lastModifiedDate":"2022-03-31"},{"lineNumber":119,"author":{"gitId":"kevinkuo0320"},"content":"                                rowData.put(headerName, \"\");","lastModifiedDate":"2022-03-31"},{"lineNumber":120,"author":{"gitId":"kevinkuo0320"},"content":"                                break;","lastModifiedDate":"2022-03-31"},{"lineNumber":121,"author":{"gitId":"kevinkuo0320"},"content":"                            default:","lastModifiedDate":"2022-03-31"},{"lineNumber":122,"author":{"gitId":"kevinkuo0320"},"content":"                                rowData.put(headerName, cell.getStringCellValue());","lastModifiedDate":"2022-03-31"},{"lineNumber":123,"author":{"gitId":"kevinkuo0320"},"content":"                                break;","lastModifiedDate":"2022-03-31"},{"lineNumber":124,"author":{"gitId":"kevinkuo0320"},"content":"                            }","lastModifiedDate":"2022-03-31"},{"lineNumber":125,"author":{"gitId":"kevinkuo0320"},"content":"                        } else {","lastModifiedDate":"2022-03-31"},{"lineNumber":126,"author":{"gitId":"kevinkuo0320"},"content":"                            rowData.put(headerName, \"\");","lastModifiedDate":"2022-03-31"},{"lineNumber":127,"author":{"gitId":"kevinkuo0320"},"content":"                        }","lastModifiedDate":"2022-03-31"},{"lineNumber":128,"author":{"gitId":"kevinkuo0320"},"content":"                    }","lastModifiedDate":"2022-03-31"},{"lineNumber":129,"author":{"gitId":"kevinkuo0320"},"content":"                    sheetData.add(rowData);","lastModifiedDate":"2022-03-31"},{"lineNumber":130,"author":{"gitId":"kevinkuo0320"},"content":"                }","lastModifiedDate":"2022-03-31"},{"lineNumber":131,"author":{"gitId":"kevinkuo0320"},"content":"            }","lastModifiedDate":"2022-03-31"},{"lineNumber":132,"author":{"gitId":"kevinkuo0320"},"content":"            excelData.set(sheetName, sheetData);","lastModifiedDate":"2022-03-31"},{"lineNumber":133,"author":{"gitId":"kevinkuo0320"},"content":"        }","lastModifiedDate":"2022-03-31"},{"lineNumber":134,"author":{"gitId":"kevinkuo0320"},"content":"    }","lastModifiedDate":"2022-03-31"},{"lineNumber":135,"author":{"gitId":"kevinkuo0320"},"content":"}","lastModifiedDate":"2022-03-31"}],"authorContributionMap":{"kevinkuo0320":135}},{"path":"src/main/java/seedu/address/model/excel/ImportFileParser.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"kevinkuo0320"},"content":"package seedu.address.model.excel;","lastModifiedDate":"2022-03-31"},{"lineNumber":2,"author":{"gitId":"kevinkuo0320"},"content":"","lastModifiedDate":"2022-03-31"},{"lineNumber":3,"author":{"gitId":"kevinkuo0320"},"content":"import java.io.File;","lastModifiedDate":"2022-03-31"},{"lineNumber":4,"author":{"gitId":"kevinkuo0320"},"content":"import java.util.ArrayList;","lastModifiedDate":"2022-03-31"},{"lineNumber":5,"author":{"gitId":"kevinkuo0320"},"content":"import java.util.List;","lastModifiedDate":"2022-03-31"},{"lineNumber":6,"author":{"gitId":"kevinkuo0320"},"content":"","lastModifiedDate":"2022-03-31"},{"lineNumber":7,"author":{"gitId":"kevinkuo0320"},"content":"import com.fasterxml.jackson.databind.JsonNode;","lastModifiedDate":"2022-03-31"},{"lineNumber":8,"author":{"gitId":"kevinkuo0320"},"content":"","lastModifiedDate":"2022-03-31"},{"lineNumber":9,"author":{"gitId":"kevinkuo0320"},"content":"/**","lastModifiedDate":"2022-03-31"},{"lineNumber":10,"author":{"gitId":"kevinkuo0320"},"content":" * Parse import file into command format","lastModifiedDate":"2022-03-31"},{"lineNumber":11,"author":{"gitId":"kevinkuo0320"},"content":" */","lastModifiedDate":"2022-03-31"},{"lineNumber":12,"author":{"gitId":"kevinkuo0320"},"content":"public class ImportFileParser {","lastModifiedDate":"2022-03-31"},{"lineNumber":13,"author":{"gitId":"kevinkuo0320"},"content":"","lastModifiedDate":"2022-03-31"},{"lineNumber":14,"author":{"gitId":"kevinkuo0320"},"content":"    private List\u003cString\u003e resultList;","lastModifiedDate":"2022-03-31"},{"lineNumber":15,"author":{"gitId":"kevinkuo0320"},"content":"","lastModifiedDate":"2022-03-31"},{"lineNumber":16,"author":{"gitId":"kevinkuo0320"},"content":"    /**","lastModifiedDate":"2022-03-31"},{"lineNumber":17,"author":{"gitId":"kevinkuo0320"},"content":"     * Convert result file into list of command string","lastModifiedDate":"2022-03-31"},{"lineNumber":18,"author":{"gitId":"kevinkuo0320"},"content":"     * @param file","lastModifiedDate":"2022-03-31"},{"lineNumber":19,"author":{"gitId":"kevinkuo0320"},"content":"     * @return list of command for adding student records","lastModifiedDate":"2022-03-31"},{"lineNumber":20,"author":{"gitId":"kevinkuo0320"},"content":"     */","lastModifiedDate":"2022-03-31"},{"lineNumber":21,"author":{"gitId":"kevinkuo0320"},"content":"    public List\u003cString\u003e jsonToPerson(File file) {","lastModifiedDate":"2022-03-31"},{"lineNumber":22,"author":{"gitId":"kevinkuo0320"},"content":"        resultList \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2022-03-31"},{"lineNumber":23,"author":{"gitId":"kevinkuo0320"},"content":"        ExcelToJsonConverter converter \u003d new ExcelToJsonConverter();","lastModifiedDate":"2022-03-31"},{"lineNumber":24,"author":{"gitId":"kevinkuo0320"},"content":"        JsonNode data \u003d converter.excelToJson(file);","lastModifiedDate":"2022-03-31"},{"lineNumber":25,"author":{"gitId":"kevinkuo0320"},"content":"        int len \u003d data.get(\"Sheet1\").size();","lastModifiedDate":"2022-03-31"},{"lineNumber":26,"author":{"gitId":"kevinkuo0320"},"content":"        for (int i \u003d 0; i \u003c len; i++) {","lastModifiedDate":"2022-03-31"},{"lineNumber":27,"author":{"gitId":"kevinkuo0320"},"content":"            String res \u003d \"\";","lastModifiedDate":"2022-03-31"},{"lineNumber":28,"author":{"gitId":"kevinkuo0320"},"content":"            JsonNode person \u003d data.get(\"Sheet1\").get(i);","lastModifiedDate":"2022-03-31"},{"lineNumber":29,"author":{"gitId":"kevinkuo0320"},"content":"            String name \u003d person.get(\"NAME\").textValue() + \" \";","lastModifiedDate":"2022-03-31"},{"lineNumber":30,"author":{"gitId":"kevinkuo0320"},"content":"            String block \u003d person.get(\"BLOCK\").textValue() + \" \";","lastModifiedDate":"2022-03-31"},{"lineNumber":31,"author":{"gitId":"kevinkuo0320"},"content":"            String facaulty \u003d person.get(\"FACAULTY\").textValue() + \" \";","lastModifiedDate":"2022-03-31"},{"lineNumber":32,"author":{"gitId":"kevinkuo0320"},"content":"            String phone \u003d person.get(\"PHONE\").textValue().trim() + \" \";","lastModifiedDate":"2022-04-01"},{"lineNumber":33,"author":{"gitId":"kevinkuo0320"},"content":"            String email \u003d person.get(\"EMAIL\").textValue() + \" \";","lastModifiedDate":"2022-03-31"},{"lineNumber":34,"author":{"gitId":"kevinkuo0320"},"content":"            String address \u003d person.get(\"ADDRESS\").textValue() + \" \";","lastModifiedDate":"2022-03-31"},{"lineNumber":35,"author":{"gitId":"kevinkuo0320"},"content":"            String mc \u003d person.get(\"MATRICULATION NUMBER\").textValue() + \" \";","lastModifiedDate":"2022-03-31"},{"lineNumber":36,"author":{"gitId":"kevinkuo0320"},"content":"            String cs \u003d person.get(\"COVID STATUS\").textValue() + \" \";","lastModifiedDate":"2022-03-31"},{"lineNumber":37,"author":{"gitId":"kevinkuo0320"},"content":"            String tag \u003d person.get(\"TAG\").textValue() + \" \";","lastModifiedDate":"2022-03-31"},{"lineNumber":38,"author":{"gitId":"kevinkuo0320"},"content":"            res \u003d \"add \" + name + block + facaulty + phone + email + address + mc + cs + tag;","lastModifiedDate":"2022-03-31"},{"lineNumber":39,"author":{"gitId":"kevinkuo0320"},"content":"            resultList.add(res);","lastModifiedDate":"2022-03-31"},{"lineNumber":40,"author":{"gitId":"kevinkuo0320"},"content":"        }","lastModifiedDate":"2022-03-31"},{"lineNumber":41,"author":{"gitId":"kevinkuo0320"},"content":"        return resultList;","lastModifiedDate":"2022-03-31"},{"lineNumber":42,"author":{"gitId":"kevinkuo0320"},"content":"    }","lastModifiedDate":"2022-03-31"},{"lineNumber":43,"author":{"gitId":"kevinkuo0320"},"content":"}","lastModifiedDate":"2022-03-31"},{"lineNumber":44,"author":{"gitId":"kevinkuo0320"},"content":"","lastModifiedDate":"2022-03-31"}],"authorContributionMap":{"kevinkuo0320":44}},{"path":"src/main/java/seedu/address/model/person/Address.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.model.person;","lastModifiedDate":"2016-08-24"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2017-05-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static seedu.address.commons.util.AppUtil.checkArgument;","lastModifiedDate":"2017-05-30"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":6,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-24"},{"lineNumber":7,"author":{"gitId":"DannyDakota"},"content":" * Represents a Person\u0027s address in Tracey.","lastModifiedDate":"2022-03-29"},{"lineNumber":8,"author":{"gitId":"-"},"content":" * Guarantees: immutable; is valid as declared in {@link #isValidAddress(String)}","lastModifiedDate":"2016-08-24"},{"lineNumber":9,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-24"},{"lineNumber":10,"author":{"gitId":"-"},"content":"public class Address {","lastModifiedDate":"2016-09-21"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_CONSTRAINTS \u003d \"Addresses can take any values, and it should not be blank\";","lastModifiedDate":"2018-09-22"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-16"},{"lineNumber":14,"author":{"gitId":"-"},"content":"    /*","lastModifiedDate":"2017-01-16"},{"lineNumber":15,"author":{"gitId":"-"},"content":"     * The first character of the address must not be a whitespace,","lastModifiedDate":"2017-01-16"},{"lineNumber":16,"author":{"gitId":"-"},"content":"     * otherwise \" \" (a blank string) becomes a valid input.","lastModifiedDate":"2017-01-16"},{"lineNumber":17,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-01-16"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    public static final String VALIDATION_REGEX \u003d \"[^\\\\s].*\";","lastModifiedDate":"2018-09-22"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    public final String value;","lastModifiedDate":"2016-08-24"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-24"},{"lineNumber":23,"author":{"gitId":"-"},"content":"     * Constructs an {@code Address}.","lastModifiedDate":"2017-05-30"},{"lineNumber":24,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2016-08-24"},{"lineNumber":25,"author":{"gitId":"-"},"content":"     * @param address A valid address.","lastModifiedDate":"2017-05-30"},{"lineNumber":26,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-24"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    public Address(String address) {","lastModifiedDate":"2017-05-30"},{"lineNumber":28,"author":{"gitId":"-"},"content":"        requireNonNull(address);","lastModifiedDate":"2017-05-15"},{"lineNumber":29,"author":{"gitId":"-"},"content":"        checkArgument(isValidAddress(address), MESSAGE_CONSTRAINTS);","lastModifiedDate":"2018-09-22"},{"lineNumber":30,"author":{"gitId":"-"},"content":"        value \u003d address;","lastModifiedDate":"2018-08-14"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":32,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-24"},{"lineNumber":34,"author":{"gitId":"-"},"content":"     * Returns true if a given string is a valid email.","lastModifiedDate":"2018-04-05"},{"lineNumber":35,"author":{"gitId":"DannyDakota"},"content":"     *","lastModifiedDate":"2022-03-20"},{"lineNumber":36,"author":{"gitId":"DannyDakota"},"content":"     * @param test string to be tested to determine if valid address.","lastModifiedDate":"2022-03-20"},{"lineNumber":37,"author":{"gitId":"DannyDakota"},"content":"     * @return boolean where true if a given string is valid address, false otherwise.","lastModifiedDate":"2022-03-29"},{"lineNumber":38,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-24"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    public static boolean isValidAddress(String test) {","lastModifiedDate":"2016-08-24"},{"lineNumber":40,"author":{"gitId":"-"},"content":"        return test.matches(VALIDATION_REGEX);","lastModifiedDate":"2018-09-22"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":42,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-24"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    public String toString() {","lastModifiedDate":"2016-08-24"},{"lineNumber":45,"author":{"gitId":"-"},"content":"        return value;","lastModifiedDate":"2016-08-24"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":47,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-24"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2016-08-24"},{"lineNumber":50,"author":{"gitId":"-"},"content":"        return other \u003d\u003d this // short circuit if same object","lastModifiedDate":"2016-08-24"},{"lineNumber":51,"author":{"gitId":"-"},"content":"                || (other instanceof Address // instanceof handles nulls","lastModifiedDate":"2016-08-24"},{"lineNumber":52,"author":{"gitId":"-"},"content":"                \u0026\u0026 value.equals(((Address) other).value)); // state check","lastModifiedDate":"2018-08-14"},{"lineNumber":53,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":54,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-24"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    public int hashCode() {","lastModifiedDate":"2016-08-24"},{"lineNumber":57,"author":{"gitId":"-"},"content":"        return value.hashCode();","lastModifiedDate":"2016-08-24"},{"lineNumber":58,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":59,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":60,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-24"}],"authorContributionMap":{"DannyDakota":4,"-":56}},{"path":"src/main/java/seedu/address/model/person/Block.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"DannyDakota"},"content":"package seedu.address.model.person;","lastModifiedDate":"2022-03-17"},{"lineNumber":2,"author":{"gitId":"DannyDakota"},"content":"","lastModifiedDate":"2022-03-17"},{"lineNumber":3,"author":{"gitId":"DannyDakota"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2022-03-17"},{"lineNumber":4,"author":{"gitId":"DannyDakota"},"content":"import static seedu.address.commons.util.AppUtil.checkArgument;","lastModifiedDate":"2022-03-17"},{"lineNumber":5,"author":{"gitId":"DannyDakota"},"content":"","lastModifiedDate":"2022-03-17"},{"lineNumber":6,"author":{"gitId":"DannyDakota"},"content":"import java.util.List;","lastModifiedDate":"2022-03-17"},{"lineNumber":7,"author":{"gitId":"DannyDakota"},"content":"import java.util.stream.Collectors;","lastModifiedDate":"2022-03-17"},{"lineNumber":8,"author":{"gitId":"DannyDakota"},"content":"import java.util.stream.Stream;","lastModifiedDate":"2022-03-17"},{"lineNumber":9,"author":{"gitId":"DannyDakota"},"content":"","lastModifiedDate":"2022-03-17"},{"lineNumber":10,"author":{"gitId":"DannyDakota"},"content":"/**","lastModifiedDate":"2022-03-17"},{"lineNumber":11,"author":{"gitId":"DannyDakota"},"content":" * Represents a Person\u0027s block in Tracey.","lastModifiedDate":"2022-03-29"},{"lineNumber":12,"author":{"gitId":"DannyDakota"},"content":" * Guarantees: immutable; is valid as declared in {@link #isValidBlock(String)}","lastModifiedDate":"2022-03-17"},{"lineNumber":13,"author":{"gitId":"DannyDakota"},"content":" */","lastModifiedDate":"2022-03-17"},{"lineNumber":14,"author":{"gitId":"DannyDakota"},"content":"public class Block {","lastModifiedDate":"2022-03-17"},{"lineNumber":15,"author":{"gitId":"DannyDakota"},"content":"","lastModifiedDate":"2022-03-17"},{"lineNumber":16,"author":{"gitId":"DannyDakota"},"content":"    public static final String MESSAGE_CONSTRAINTS \u003d","lastModifiedDate":"2022-03-17"},{"lineNumber":17,"author":{"gitId":"DannyDakota"},"content":"            \"Only the following blocks exists: \" + getBlockEnumAsString();","lastModifiedDate":"2022-03-17"},{"lineNumber":18,"author":{"gitId":"DannyDakota"},"content":"","lastModifiedDate":"2022-03-17"},{"lineNumber":19,"author":{"gitId":"DannyDakota"},"content":"    public final String studentBlock;","lastModifiedDate":"2022-03-17"},{"lineNumber":20,"author":{"gitId":"DannyDakota"},"content":"","lastModifiedDate":"2022-03-17"},{"lineNumber":21,"author":{"gitId":"DannyDakota"},"content":"    public enum HallBlock {","lastModifiedDate":"2022-03-17"},{"lineNumber":22,"author":{"gitId":"DannyDakota"},"content":"        A,","lastModifiedDate":"2022-03-17"},{"lineNumber":23,"author":{"gitId":"DannyDakota"},"content":"        B,","lastModifiedDate":"2022-03-17"},{"lineNumber":24,"author":{"gitId":"DannyDakota"},"content":"        C,","lastModifiedDate":"2022-03-17"},{"lineNumber":25,"author":{"gitId":"DannyDakota"},"content":"        D,","lastModifiedDate":"2022-03-17"},{"lineNumber":26,"author":{"gitId":"DannyDakota"},"content":"        E","lastModifiedDate":"2022-03-17"},{"lineNumber":27,"author":{"gitId":"DannyDakota"},"content":"    }","lastModifiedDate":"2022-03-17"},{"lineNumber":28,"author":{"gitId":"DannyDakota"},"content":"","lastModifiedDate":"2022-03-17"},{"lineNumber":29,"author":{"gitId":"DannyDakota"},"content":"    /**","lastModifiedDate":"2022-03-17"},{"lineNumber":30,"author":{"gitId":"DannyDakota"},"content":"     * Constructs a {@code Block}.","lastModifiedDate":"2022-03-17"},{"lineNumber":31,"author":{"gitId":"DannyDakota"},"content":"     *","lastModifiedDate":"2022-03-17"},{"lineNumber":32,"author":{"gitId":"DannyDakota"},"content":"     * @param block A valid block.","lastModifiedDate":"2022-03-17"},{"lineNumber":33,"author":{"gitId":"DannyDakota"},"content":"     */","lastModifiedDate":"2022-03-17"},{"lineNumber":34,"author":{"gitId":"DannyDakota"},"content":"    public Block(String block) {","lastModifiedDate":"2022-03-17"},{"lineNumber":35,"author":{"gitId":"DannyDakota"},"content":"        requireNonNull(block);","lastModifiedDate":"2022-03-17"},{"lineNumber":36,"author":{"gitId":"DannyDakota"},"content":"        checkArgument(isValidBlock(block), MESSAGE_CONSTRAINTS);","lastModifiedDate":"2022-03-17"},{"lineNumber":37,"author":{"gitId":"DannyDakota"},"content":"        studentBlock \u003d block.toUpperCase();","lastModifiedDate":"2022-03-17"},{"lineNumber":38,"author":{"gitId":"DannyDakota"},"content":"    }","lastModifiedDate":"2022-03-17"},{"lineNumber":39,"author":{"gitId":"DannyDakota"},"content":"","lastModifiedDate":"2022-03-17"},{"lineNumber":40,"author":{"gitId":"DannyDakota"},"content":"    /**","lastModifiedDate":"2022-03-17"},{"lineNumber":41,"author":{"gitId":"DannyDakota"},"content":"     * Returns true if a given string is a valid block.","lastModifiedDate":"2022-03-17"},{"lineNumber":42,"author":{"gitId":"DannyDakota"},"content":"     *","lastModifiedDate":"2022-03-20"},{"lineNumber":43,"author":{"gitId":"DannyDakota"},"content":"     * @param test string to be tested to determine if valid block.","lastModifiedDate":"2022-03-20"},{"lineNumber":44,"author":{"gitId":"DannyDakota"},"content":"     * @return boolean where true if a given string is a valid block, false otherwise.","lastModifiedDate":"2022-03-29"},{"lineNumber":45,"author":{"gitId":"DannyDakota"},"content":"     */","lastModifiedDate":"2022-03-17"},{"lineNumber":46,"author":{"gitId":"DannyDakota"},"content":"    public static boolean isValidBlock(String test) {","lastModifiedDate":"2022-03-17"},{"lineNumber":47,"author":{"gitId":"DannyDakota"},"content":"        return Stream.of(HallBlock.values())","lastModifiedDate":"2022-03-17"},{"lineNumber":48,"author":{"gitId":"DannyDakota"},"content":"                .anyMatch(block -\u003e block.name()","lastModifiedDate":"2022-03-17"},{"lineNumber":49,"author":{"gitId":"DannyDakota"},"content":"                        .equalsIgnoreCase(test));","lastModifiedDate":"2022-03-17"},{"lineNumber":50,"author":{"gitId":"DannyDakota"},"content":"    }","lastModifiedDate":"2022-03-17"},{"lineNumber":51,"author":{"gitId":"DannyDakota"},"content":"","lastModifiedDate":"2022-03-17"},{"lineNumber":52,"author":{"gitId":"DannyDakota"},"content":"    /**","lastModifiedDate":"2022-03-17"},{"lineNumber":53,"author":{"gitId":"DannyDakota"},"content":"     * Returns the list of enum values from the HallBlock enum class as a string.","lastModifiedDate":"2022-03-29"},{"lineNumber":54,"author":{"gitId":"DannyDakota"},"content":"     *","lastModifiedDate":"2022-03-17"},{"lineNumber":55,"author":{"gitId":"DannyDakota"},"content":"     * @return String of HallBlock enum values.","lastModifiedDate":"2022-03-17"},{"lineNumber":56,"author":{"gitId":"DannyDakota"},"content":"     */","lastModifiedDate":"2022-03-17"},{"lineNumber":57,"author":{"gitId":"DannyDakota"},"content":"    public static String getBlockEnumAsString() {","lastModifiedDate":"2022-03-17"},{"lineNumber":58,"author":{"gitId":"DannyDakota"},"content":"        StringBuilder stringBuilder \u003d new StringBuilder();","lastModifiedDate":"2022-03-17"},{"lineNumber":59,"author":{"gitId":"DannyDakota"},"content":"        Stream.of(HallBlock.values()).forEach(block -\u003e stringBuilder.append(block + \" \"));","lastModifiedDate":"2022-03-17"},{"lineNumber":60,"author":{"gitId":"DannyDakota"},"content":"        return stringBuilder.toString();","lastModifiedDate":"2022-03-17"},{"lineNumber":61,"author":{"gitId":"DannyDakota"},"content":"    }","lastModifiedDate":"2022-03-17"},{"lineNumber":62,"author":{"gitId":"DannyDakota"},"content":"","lastModifiedDate":"2022-03-17"},{"lineNumber":63,"author":{"gitId":"DannyDakota"},"content":"    @Override","lastModifiedDate":"2022-03-17"},{"lineNumber":64,"author":{"gitId":"DannyDakota"},"content":"    public String toString() {","lastModifiedDate":"2022-03-17"},{"lineNumber":65,"author":{"gitId":"DannyDakota"},"content":"        return studentBlock;","lastModifiedDate":"2022-03-17"},{"lineNumber":66,"author":{"gitId":"DannyDakota"},"content":"    }","lastModifiedDate":"2022-03-17"},{"lineNumber":67,"author":{"gitId":"DannyDakota"},"content":"","lastModifiedDate":"2022-03-17"},{"lineNumber":68,"author":{"gitId":"DannyDakota"},"content":"    @Override","lastModifiedDate":"2022-03-17"},{"lineNumber":69,"author":{"gitId":"DannyDakota"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2022-03-17"},{"lineNumber":70,"author":{"gitId":"DannyDakota"},"content":"        return other \u003d\u003d this // short circuit if same object","lastModifiedDate":"2022-03-17"},{"lineNumber":71,"author":{"gitId":"DannyDakota"},"content":"                || (other instanceof Block // instanceof handles nulls","lastModifiedDate":"2022-03-17"},{"lineNumber":72,"author":{"gitId":"DannyDakota"},"content":"                \u0026\u0026 studentBlock.equals(((Block) other).studentBlock)); // state check","lastModifiedDate":"2022-03-17"},{"lineNumber":73,"author":{"gitId":"DannyDakota"},"content":"    }","lastModifiedDate":"2022-03-17"},{"lineNumber":74,"author":{"gitId":"DannyDakota"},"content":"","lastModifiedDate":"2022-03-17"},{"lineNumber":75,"author":{"gitId":"DannyDakota"},"content":"    @Override","lastModifiedDate":"2022-03-17"},{"lineNumber":76,"author":{"gitId":"DannyDakota"},"content":"    public int hashCode() {","lastModifiedDate":"2022-03-17"},{"lineNumber":77,"author":{"gitId":"DannyDakota"},"content":"        return studentBlock.hashCode();","lastModifiedDate":"2022-03-17"},{"lineNumber":78,"author":{"gitId":"DannyDakota"},"content":"    }","lastModifiedDate":"2022-03-17"},{"lineNumber":79,"author":{"gitId":"DannyDakota"},"content":"","lastModifiedDate":"2022-03-17"},{"lineNumber":80,"author":{"gitId":"DannyDakota"},"content":"    /**","lastModifiedDate":"2022-03-17"},{"lineNumber":81,"author":{"gitId":"DannyDakota"},"content":"     * Returns a list of strings with enum values from the HallBlock enum class.","lastModifiedDate":"2022-03-17"},{"lineNumber":82,"author":{"gitId":"DannyDakota"},"content":"     *","lastModifiedDate":"2022-03-17"},{"lineNumber":83,"author":{"gitId":"DannyDakota"},"content":"     * @return List of HallBlock enum values.","lastModifiedDate":"2022-03-17"},{"lineNumber":84,"author":{"gitId":"DannyDakota"},"content":"     */","lastModifiedDate":"2022-03-17"},{"lineNumber":85,"author":{"gitId":"DannyDakota"},"content":"    public static List\u003cString\u003e getBlockEnumAsList() {","lastModifiedDate":"2022-03-17"},{"lineNumber":86,"author":{"gitId":"DannyDakota"},"content":"        return Stream.of(HallBlock.values()).map(Enum::name).collect(Collectors.toList());","lastModifiedDate":"2022-03-17"},{"lineNumber":87,"author":{"gitId":"DannyDakota"},"content":"    }","lastModifiedDate":"2022-03-17"},{"lineNumber":88,"author":{"gitId":"DannyDakota"},"content":"}","lastModifiedDate":"2022-03-17"}],"authorContributionMap":{"DannyDakota":88}},{"path":"src/main/java/seedu/address/model/person/CovidStatus.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"cwq2326"},"content":"package seedu.address.model.person;","lastModifiedDate":"2022-02-28"},{"lineNumber":2,"author":{"gitId":"cwq2326"},"content":"","lastModifiedDate":"2022-02-28"},{"lineNumber":3,"author":{"gitId":"cwq2326"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2022-02-28"},{"lineNumber":4,"author":{"gitId":"cwq2326"},"content":"import static seedu.address.commons.util.AppUtil.checkArgument;","lastModifiedDate":"2022-02-28"},{"lineNumber":5,"author":{"gitId":"cwq2326"},"content":"","lastModifiedDate":"2022-02-28"},{"lineNumber":6,"author":{"gitId":"cwq2326"},"content":"import java.util.stream.Stream;","lastModifiedDate":"2022-02-28"},{"lineNumber":7,"author":{"gitId":"cwq2326"},"content":"","lastModifiedDate":"2022-02-28"},{"lineNumber":8,"author":{"gitId":"cwq2326"},"content":"/**","lastModifiedDate":"2022-02-28"},{"lineNumber":9,"author":{"gitId":"DannyDakota"},"content":" * Represents a Person\u0027s covid status in Tracey.","lastModifiedDate":"2022-03-29"},{"lineNumber":10,"author":{"gitId":"cwq2326"},"content":" * Guarantees: immutable; is valid as declared in {@link #isValidCovidStatus(String)}","lastModifiedDate":"2022-02-28"},{"lineNumber":11,"author":{"gitId":"cwq2326"},"content":" */","lastModifiedDate":"2022-02-28"},{"lineNumber":12,"author":{"gitId":"cwq2326"},"content":"public class CovidStatus {","lastModifiedDate":"2022-02-28"},{"lineNumber":13,"author":{"gitId":"cwq2326"},"content":"","lastModifiedDate":"2022-02-28"},{"lineNumber":14,"author":{"gitId":"cwq2326"},"content":"    public static final String MESSAGE_CONSTRAINTS \u003d","lastModifiedDate":"2022-02-28"},{"lineNumber":15,"author":{"gitId":"DannyDakota"},"content":"            \"Covid status should be one of the following: \" + getCovidStatusEnumAsString() + \", and it should \"","lastModifiedDate":"2022-03-17"},{"lineNumber":16,"author":{"gitId":"DannyDakota"},"content":"                    + \"not be blank\";","lastModifiedDate":"2022-03-17"},{"lineNumber":17,"author":{"gitId":"cwq2326"},"content":"","lastModifiedDate":"2022-02-28"},{"lineNumber":18,"author":{"gitId":"cwq2326"},"content":"    public enum CovidStatusTier {","lastModifiedDate":"2022-03-04"},{"lineNumber":19,"author":{"gitId":"cwq2326"},"content":"        HRN,","lastModifiedDate":"2022-02-28"},{"lineNumber":20,"author":{"gitId":"cwq2326"},"content":"        NEGATIVE,","lastModifiedDate":"2022-02-28"},{"lineNumber":21,"author":{"gitId":"cwq2326"},"content":"        POSITIVE","lastModifiedDate":"2022-02-28"},{"lineNumber":22,"author":{"gitId":"cwq2326"},"content":"    }","lastModifiedDate":"2022-02-28"},{"lineNumber":23,"author":{"gitId":"cwq2326"},"content":"","lastModifiedDate":"2022-02-28"},{"lineNumber":24,"author":{"gitId":"cwq2326"},"content":"    public final String covidStatus;","lastModifiedDate":"2022-02-28"},{"lineNumber":25,"author":{"gitId":"cwq2326"},"content":"","lastModifiedDate":"2022-02-28"},{"lineNumber":26,"author":{"gitId":"cwq2326"},"content":"    /**","lastModifiedDate":"2022-02-28"},{"lineNumber":27,"author":{"gitId":"cwq2326"},"content":"     * Constructs a {@code CovidStatus}.","lastModifiedDate":"2022-02-28"},{"lineNumber":28,"author":{"gitId":"cwq2326"},"content":"     *","lastModifiedDate":"2022-02-28"},{"lineNumber":29,"author":{"gitId":"cwq2326"},"content":"     * @param status A valid covid status.","lastModifiedDate":"2022-02-28"},{"lineNumber":30,"author":{"gitId":"cwq2326"},"content":"     */","lastModifiedDate":"2022-02-28"},{"lineNumber":31,"author":{"gitId":"cwq2326"},"content":"    public CovidStatus(String status) {","lastModifiedDate":"2022-02-28"},{"lineNumber":32,"author":{"gitId":"cwq2326"},"content":"        requireNonNull(status);","lastModifiedDate":"2022-02-28"},{"lineNumber":33,"author":{"gitId":"cwq2326"},"content":"        checkArgument(isValidCovidStatus(status), MESSAGE_CONSTRAINTS);","lastModifiedDate":"2022-02-28"},{"lineNumber":34,"author":{"gitId":"cwq2326"},"content":"        covidStatus \u003d status.toUpperCase();","lastModifiedDate":"2022-02-28"},{"lineNumber":35,"author":{"gitId":"cwq2326"},"content":"    }","lastModifiedDate":"2022-02-28"},{"lineNumber":36,"author":{"gitId":"cwq2326"},"content":"","lastModifiedDate":"2022-02-28"},{"lineNumber":37,"author":{"gitId":"cwq2326"},"content":"    /**","lastModifiedDate":"2022-02-28"},{"lineNumber":38,"author":{"gitId":"cwq2326"},"content":"     * Returns true if a given string is a valid covid status.","lastModifiedDate":"2022-02-28"},{"lineNumber":39,"author":{"gitId":"cwq2326"},"content":"     *","lastModifiedDate":"2022-03-04"},{"lineNumber":40,"author":{"gitId":"DannyDakota"},"content":"     * @param test covid status string to be tested.","lastModifiedDate":"2022-03-20"},{"lineNumber":41,"author":{"gitId":"DannyDakota"},"content":"     * @return Boolean result where true if given string is a valid status, false otherwise.","lastModifiedDate":"2022-03-20"},{"lineNumber":42,"author":{"gitId":"cwq2326"},"content":"     */","lastModifiedDate":"2022-02-28"},{"lineNumber":43,"author":{"gitId":"DannyDakota"},"content":"    public static boolean isValidCovidStatus(String test) {","lastModifiedDate":"2022-03-20"},{"lineNumber":44,"author":{"gitId":"cwq2326"},"content":"        return Stream.of(CovidStatusTier.values())","lastModifiedDate":"2022-03-04"},{"lineNumber":45,"author":{"gitId":"cwq2326"},"content":"                .anyMatch(status -\u003e status.name()","lastModifiedDate":"2022-02-28"},{"lineNumber":46,"author":{"gitId":"DannyDakota"},"content":"                        .equalsIgnoreCase(test));","lastModifiedDate":"2022-03-20"},{"lineNumber":47,"author":{"gitId":"cwq2326"},"content":"    }","lastModifiedDate":"2022-02-28"},{"lineNumber":48,"author":{"gitId":"cwq2326"},"content":"","lastModifiedDate":"2022-02-28"},{"lineNumber":49,"author":{"gitId":"cwq2326"},"content":"    /**","lastModifiedDate":"2022-02-28"},{"lineNumber":50,"author":{"gitId":"cwq2326"},"content":"     * Returns the list enum values from the CovidStatusTier enum class.","lastModifiedDate":"2022-03-04"},{"lineNumber":51,"author":{"gitId":"cwq2326"},"content":"     *","lastModifiedDate":"2022-02-28"},{"lineNumber":52,"author":{"gitId":"cwq2326"},"content":"     * @return String of CovidStatusTier enum values.","lastModifiedDate":"2022-03-04"},{"lineNumber":53,"author":{"gitId":"cwq2326"},"content":"     */","lastModifiedDate":"2022-02-28"},{"lineNumber":54,"author":{"gitId":"cwq2326"},"content":"    public static String getCovidStatusEnumAsString() {","lastModifiedDate":"2022-02-28"},{"lineNumber":55,"author":{"gitId":"cwq2326"},"content":"        StringBuilder stringBuilder \u003d new StringBuilder();","lastModifiedDate":"2022-02-28"},{"lineNumber":56,"author":{"gitId":"cwq2326"},"content":"        Stream.of(CovidStatusTier.values()).forEach(status -\u003e stringBuilder.append(status + \" \"));","lastModifiedDate":"2022-03-04"},{"lineNumber":57,"author":{"gitId":"cwq2326"},"content":"        return stringBuilder.toString();","lastModifiedDate":"2022-02-28"},{"lineNumber":58,"author":{"gitId":"cwq2326"},"content":"    }","lastModifiedDate":"2022-02-28"},{"lineNumber":59,"author":{"gitId":"cwq2326"},"content":"","lastModifiedDate":"2022-02-28"},{"lineNumber":60,"author":{"gitId":"cwq2326"},"content":"    @Override","lastModifiedDate":"2022-02-28"},{"lineNumber":61,"author":{"gitId":"cwq2326"},"content":"    public String toString() {","lastModifiedDate":"2022-02-28"},{"lineNumber":62,"author":{"gitId":"cwq2326"},"content":"        return covidStatus;","lastModifiedDate":"2022-02-28"},{"lineNumber":63,"author":{"gitId":"cwq2326"},"content":"    }","lastModifiedDate":"2022-02-28"},{"lineNumber":64,"author":{"gitId":"cwq2326"},"content":"","lastModifiedDate":"2022-02-28"},{"lineNumber":65,"author":{"gitId":"cwq2326"},"content":"    @Override","lastModifiedDate":"2022-02-28"},{"lineNumber":66,"author":{"gitId":"cwq2326"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2022-02-28"},{"lineNumber":67,"author":{"gitId":"cwq2326"},"content":"        return other \u003d\u003d this // short circuit if same object","lastModifiedDate":"2022-02-28"},{"lineNumber":68,"author":{"gitId":"cwq2326"},"content":"                || (other instanceof CovidStatus // instanceof handles nulls","lastModifiedDate":"2022-02-28"},{"lineNumber":69,"author":{"gitId":"cwq2326"},"content":"                \u0026\u0026 covidStatus.equals(((CovidStatus) other).covidStatus)); // state check","lastModifiedDate":"2022-02-28"},{"lineNumber":70,"author":{"gitId":"cwq2326"},"content":"    }","lastModifiedDate":"2022-02-28"},{"lineNumber":71,"author":{"gitId":"cwq2326"},"content":"","lastModifiedDate":"2022-02-28"},{"lineNumber":72,"author":{"gitId":"cwq2326"},"content":"    @Override","lastModifiedDate":"2022-02-28"},{"lineNumber":73,"author":{"gitId":"cwq2326"},"content":"    public int hashCode() {","lastModifiedDate":"2022-02-28"},{"lineNumber":74,"author":{"gitId":"cwq2326"},"content":"        return covidStatus.hashCode();","lastModifiedDate":"2022-02-28"},{"lineNumber":75,"author":{"gitId":"cwq2326"},"content":"    }","lastModifiedDate":"2022-02-28"},{"lineNumber":76,"author":{"gitId":"cwq2326"},"content":"}","lastModifiedDate":"2022-02-28"}],"authorContributionMap":{"DannyDakota":7,"cwq2326":69}},{"path":"src/main/java/seedu/address/model/person/Email.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.model.person;","lastModifiedDate":"2016-08-24"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2017-05-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static seedu.address.commons.util.AppUtil.checkArgument;","lastModifiedDate":"2017-05-30"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":6,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-24"},{"lineNumber":7,"author":{"gitId":"DannyDakota"},"content":" * Represents a Person\u0027s email in Tracey.","lastModifiedDate":"2022-03-29"},{"lineNumber":8,"author":{"gitId":"-"},"content":" * Guarantees: immutable; is valid as declared in {@link #isValidEmail(String)}","lastModifiedDate":"2016-08-24"},{"lineNumber":9,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-24"},{"lineNumber":10,"author":{"gitId":"-"},"content":"public class Email {","lastModifiedDate":"2016-09-21"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    private static final String SPECIAL_CHARACTERS \u003d \"+_.-\";","lastModifiedDate":"2021-07-20"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_CONSTRAINTS \u003d \"Emails should be of the format local-part@domain \"","lastModifiedDate":"2018-09-22"},{"lineNumber":14,"author":{"gitId":"-"},"content":"            + \"and adhere to the following constraints:\\n\"","lastModifiedDate":"2018-02-09"},{"lineNumber":15,"author":{"gitId":"-"},"content":"            + \"1. The local-part should only contain alphanumeric characters and these special characters, excluding \"","lastModifiedDate":"2018-02-09"},{"lineNumber":16,"author":{"gitId":"-"},"content":"            + \"the parentheses, (\" + SPECIAL_CHARACTERS + \"). The local-part may not start or end with any special \"","lastModifiedDate":"2021-07-20"},{"lineNumber":17,"author":{"gitId":"-"},"content":"            + \"characters.\\n\"","lastModifiedDate":"2021-07-20"},{"lineNumber":18,"author":{"gitId":"-"},"content":"            + \"2. This is followed by a \u0027@\u0027 and then a domain name. The domain name is made up of domain labels \"","lastModifiedDate":"2021-07-20"},{"lineNumber":19,"author":{"gitId":"-"},"content":"            + \"separated by periods.\\n\"","lastModifiedDate":"2021-07-20"},{"lineNumber":20,"author":{"gitId":"-"},"content":"            + \"The domain name must:\\n\"","lastModifiedDate":"2018-02-09"},{"lineNumber":21,"author":{"gitId":"-"},"content":"            + \"    - end with a domain label at least 2 characters long\\n\"","lastModifiedDate":"2021-07-20"},{"lineNumber":22,"author":{"gitId":"-"},"content":"            + \"    - have each domain label start and end with alphanumeric characters\\n\"","lastModifiedDate":"2021-07-20"},{"lineNumber":23,"author":{"gitId":"-"},"content":"            + \"    - have each domain label consist of alphanumeric characters, separated only by hyphens, if any.\";","lastModifiedDate":"2021-07-20"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    // alphanumeric and special characters","lastModifiedDate":"2018-02-09"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    private static final String ALPHANUMERIC_NO_UNDERSCORE \u003d \"[^\\\\W_]+\"; // alphanumeric characters except underscore","lastModifiedDate":"2021-07-20"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    private static final String LOCAL_PART_REGEX \u003d \"^\" + ALPHANUMERIC_NO_UNDERSCORE + \"([\" + SPECIAL_CHARACTERS + \"]\"","lastModifiedDate":"2021-07-20"},{"lineNumber":27,"author":{"gitId":"-"},"content":"            + ALPHANUMERIC_NO_UNDERSCORE + \")*\";","lastModifiedDate":"2021-07-20"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    private static final String DOMAIN_PART_REGEX \u003d ALPHANUMERIC_NO_UNDERSCORE","lastModifiedDate":"2021-07-20"},{"lineNumber":29,"author":{"gitId":"-"},"content":"            + \"(-\" + ALPHANUMERIC_NO_UNDERSCORE + \")*\";","lastModifiedDate":"2021-07-20"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    private static final String DOMAIN_LAST_PART_REGEX \u003d \"(\" + DOMAIN_PART_REGEX + \"){2,}$\"; // At least two chars","lastModifiedDate":"2021-07-20"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    private static final String DOMAIN_REGEX \u003d \"(\" + DOMAIN_PART_REGEX + \"\\\\.)*\" + DOMAIN_LAST_PART_REGEX;","lastModifiedDate":"2021-07-20"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    public static final String VALIDATION_REGEX \u003d LOCAL_PART_REGEX + \"@\" + DOMAIN_REGEX;","lastModifiedDate":"2021-07-20"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    public final String value;","lastModifiedDate":"2016-08-24"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-24"},{"lineNumber":37,"author":{"gitId":"-"},"content":"     * Constructs an {@code Email}.","lastModifiedDate":"2017-05-30"},{"lineNumber":38,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2016-08-24"},{"lineNumber":39,"author":{"gitId":"-"},"content":"     * @param email A valid email address.","lastModifiedDate":"2017-05-30"},{"lineNumber":40,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-24"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    public Email(String email) {","lastModifiedDate":"2017-05-30"},{"lineNumber":42,"author":{"gitId":"-"},"content":"        requireNonNull(email);","lastModifiedDate":"2017-05-15"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        checkArgument(isValidEmail(email), MESSAGE_CONSTRAINTS);","lastModifiedDate":"2018-09-22"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        value \u003d email;","lastModifiedDate":"2018-08-14"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":46,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-24"},{"lineNumber":48,"author":{"gitId":"-"},"content":"     * Returns if a given string is a valid email.","lastModifiedDate":"2018-04-05"},{"lineNumber":49,"author":{"gitId":"DannyDakota"},"content":"     *","lastModifiedDate":"2022-03-20"},{"lineNumber":50,"author":{"gitId":"DannyDakota"},"content":"     * @param test string to be tested to determine if valid email.","lastModifiedDate":"2022-03-20"},{"lineNumber":51,"author":{"gitId":"DannyDakota"},"content":"     * @return boolean where true if a given string is a valid email, false otherwise.","lastModifiedDate":"2022-03-29"},{"lineNumber":52,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-24"},{"lineNumber":53,"author":{"gitId":"-"},"content":"    public static boolean isValidEmail(String test) {","lastModifiedDate":"2016-08-24"},{"lineNumber":54,"author":{"gitId":"-"},"content":"        return test.matches(VALIDATION_REGEX);","lastModifiedDate":"2018-09-22"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":56,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-24"},{"lineNumber":58,"author":{"gitId":"-"},"content":"    public String toString() {","lastModifiedDate":"2016-08-24"},{"lineNumber":59,"author":{"gitId":"-"},"content":"        return value;","lastModifiedDate":"2016-08-24"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":61,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":62,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-24"},{"lineNumber":63,"author":{"gitId":"-"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2016-08-24"},{"lineNumber":64,"author":{"gitId":"-"},"content":"        return other \u003d\u003d this // short circuit if same object","lastModifiedDate":"2016-08-24"},{"lineNumber":65,"author":{"gitId":"-"},"content":"                || (other instanceof Email // instanceof handles nulls","lastModifiedDate":"2016-08-24"},{"lineNumber":66,"author":{"gitId":"-"},"content":"                \u0026\u0026 value.equals(((Email) other).value)); // state check","lastModifiedDate":"2018-08-14"},{"lineNumber":67,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":68,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":69,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-24"},{"lineNumber":70,"author":{"gitId":"-"},"content":"    public int hashCode() {","lastModifiedDate":"2016-08-24"},{"lineNumber":71,"author":{"gitId":"-"},"content":"        return value.hashCode();","lastModifiedDate":"2016-08-24"},{"lineNumber":72,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":73,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":74,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-24"}],"authorContributionMap":{"DannyDakota":4,"-":70}},{"path":"src/main/java/seedu/address/model/person/Faculty.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"cwq2326"},"content":"package seedu.address.model.person;","lastModifiedDate":"2022-02-28"},{"lineNumber":2,"author":{"gitId":"cwq2326"},"content":"","lastModifiedDate":"2022-02-28"},{"lineNumber":3,"author":{"gitId":"cwq2326"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2022-02-28"},{"lineNumber":4,"author":{"gitId":"cwq2326"},"content":"import static seedu.address.commons.util.AppUtil.checkArgument;","lastModifiedDate":"2022-02-28"},{"lineNumber":5,"author":{"gitId":"cwq2326"},"content":"","lastModifiedDate":"2022-02-28"},{"lineNumber":6,"author":{"gitId":"jiale-c"},"content":"import java.util.List;","lastModifiedDate":"2022-03-09"},{"lineNumber":7,"author":{"gitId":"jiale-c"},"content":"import java.util.stream.Collectors;","lastModifiedDate":"2022-03-09"},{"lineNumber":8,"author":{"gitId":"cwq2326"},"content":"import java.util.stream.Stream;","lastModifiedDate":"2022-02-28"},{"lineNumber":9,"author":{"gitId":"cwq2326"},"content":"","lastModifiedDate":"2022-02-28"},{"lineNumber":10,"author":{"gitId":"cwq2326"},"content":"/**","lastModifiedDate":"2022-02-28"},{"lineNumber":11,"author":{"gitId":"DannyDakota"},"content":" * Represents a Person\u0027s faculty in Tracey.","lastModifiedDate":"2022-03-29"},{"lineNumber":12,"author":{"gitId":"cwq2326"},"content":" * Guarantees: immutable; is valid as declared in {@link #isValidFaculty(String)}","lastModifiedDate":"2022-02-28"},{"lineNumber":13,"author":{"gitId":"cwq2326"},"content":" */","lastModifiedDate":"2022-02-28"},{"lineNumber":14,"author":{"gitId":"cwq2326"},"content":"public class Faculty {","lastModifiedDate":"2022-02-28"},{"lineNumber":15,"author":{"gitId":"cwq2326"},"content":"","lastModifiedDate":"2022-02-28"},{"lineNumber":16,"author":{"gitId":"cwq2326"},"content":"    public static final String MESSAGE_CONSTRAINTS \u003d","lastModifiedDate":"2022-02-28"},{"lineNumber":17,"author":{"gitId":"cwq2326"},"content":"            \"Only the following faculties exists: \" + getFacultyEnumAsString();","lastModifiedDate":"2022-02-28"},{"lineNumber":18,"author":{"gitId":"cwq2326"},"content":"","lastModifiedDate":"2022-02-28"},{"lineNumber":19,"author":{"gitId":"cwq2326"},"content":"    public final String studentFaculty;","lastModifiedDate":"2022-02-28"},{"lineNumber":20,"author":{"gitId":"cwq2326"},"content":"","lastModifiedDate":"2022-02-28"},{"lineNumber":21,"author":{"gitId":"cwq2326"},"content":"    public enum Nus {","lastModifiedDate":"2022-02-28"},{"lineNumber":22,"author":{"gitId":"cwq2326"},"content":"        FASS,","lastModifiedDate":"2022-02-28"},{"lineNumber":23,"author":{"gitId":"cwq2326"},"content":"        BIZ,","lastModifiedDate":"2022-02-28"},{"lineNumber":24,"author":{"gitId":"cwq2326"},"content":"        SOC,","lastModifiedDate":"2022-02-28"},{"lineNumber":25,"author":{"gitId":"cwq2326"},"content":"        SCALE,","lastModifiedDate":"2022-02-28"},{"lineNumber":26,"author":{"gitId":"cwq2326"},"content":"        FOD,","lastModifiedDate":"2022-02-28"},{"lineNumber":27,"author":{"gitId":"cwq2326"},"content":"        CDE,","lastModifiedDate":"2022-02-28"},{"lineNumber":28,"author":{"gitId":"cwq2326"},"content":"        DUKE,","lastModifiedDate":"2022-02-28"},{"lineNumber":29,"author":{"gitId":"cwq2326"},"content":"        FOL,","lastModifiedDate":"2022-02-28"},{"lineNumber":30,"author":{"gitId":"cwq2326"},"content":"        YLLSOM,","lastModifiedDate":"2022-02-28"},{"lineNumber":31,"author":{"gitId":"cwq2326"},"content":"        YSTCOM,","lastModifiedDate":"2022-02-28"},{"lineNumber":32,"author":{"gitId":"cwq2326"},"content":"        SOPP,","lastModifiedDate":"2022-02-28"},{"lineNumber":33,"author":{"gitId":"cwq2326"},"content":"        LKYSPP,","lastModifiedDate":"2022-02-28"},{"lineNumber":34,"author":{"gitId":"cwq2326"},"content":"        SPH,","lastModifiedDate":"2022-02-28"},{"lineNumber":35,"author":{"gitId":"cwq2326"},"content":"        FOS","lastModifiedDate":"2022-02-28"},{"lineNumber":36,"author":{"gitId":"cwq2326"},"content":"    }","lastModifiedDate":"2022-02-28"},{"lineNumber":37,"author":{"gitId":"cwq2326"},"content":"","lastModifiedDate":"2022-02-28"},{"lineNumber":38,"author":{"gitId":"cwq2326"},"content":"    /**","lastModifiedDate":"2022-03-04"},{"lineNumber":39,"author":{"gitId":"cwq2326"},"content":"     * Constructs a {@code Faculty}.","lastModifiedDate":"2022-03-04"},{"lineNumber":40,"author":{"gitId":"cwq2326"},"content":"     *","lastModifiedDate":"2022-03-04"},{"lineNumber":41,"author":{"gitId":"cwq2326"},"content":"     * @param faculty A valid faculty.","lastModifiedDate":"2022-03-04"},{"lineNumber":42,"author":{"gitId":"cwq2326"},"content":"     */","lastModifiedDate":"2022-03-04"},{"lineNumber":43,"author":{"gitId":"cwq2326"},"content":"    public Faculty(String faculty) {","lastModifiedDate":"2022-03-04"},{"lineNumber":44,"author":{"gitId":"cwq2326"},"content":"        requireNonNull(faculty);","lastModifiedDate":"2022-03-04"},{"lineNumber":45,"author":{"gitId":"cwq2326"},"content":"        checkArgument(isValidFaculty(faculty), MESSAGE_CONSTRAINTS);","lastModifiedDate":"2022-03-04"},{"lineNumber":46,"author":{"gitId":"cwq2326"},"content":"        studentFaculty \u003d faculty.toUpperCase();","lastModifiedDate":"2022-03-04"},{"lineNumber":47,"author":{"gitId":"cwq2326"},"content":"    }","lastModifiedDate":"2022-03-04"},{"lineNumber":48,"author":{"gitId":"cwq2326"},"content":"","lastModifiedDate":"2022-03-04"},{"lineNumber":49,"author":{"gitId":"cwq2326"},"content":"    /**","lastModifiedDate":"2022-02-28"},{"lineNumber":50,"author":{"gitId":"cwq2326"},"content":"     * Returns true if a given string is a valid faculty.","lastModifiedDate":"2022-02-28"},{"lineNumber":51,"author":{"gitId":"DannyDakota"},"content":"     *","lastModifiedDate":"2022-03-20"},{"lineNumber":52,"author":{"gitId":"DannyDakota"},"content":"     * @param test string to be tested to determine if valid faculty.","lastModifiedDate":"2022-03-20"},{"lineNumber":53,"author":{"gitId":"DannyDakota"},"content":"     * @return boolean where true if a given string is a valid faculty, false otherwise.","lastModifiedDate":"2022-03-29"},{"lineNumber":54,"author":{"gitId":"cwq2326"},"content":"     */","lastModifiedDate":"2022-02-28"},{"lineNumber":55,"author":{"gitId":"cwq2326"},"content":"    public static boolean isValidFaculty(String test) {","lastModifiedDate":"2022-02-28"},{"lineNumber":56,"author":{"gitId":"cwq2326"},"content":"        return Stream.of(Nus.values())","lastModifiedDate":"2022-02-28"},{"lineNumber":57,"author":{"gitId":"cwq2326"},"content":"                .anyMatch(faculty -\u003e faculty.name()","lastModifiedDate":"2022-02-28"},{"lineNumber":58,"author":{"gitId":"cwq2326"},"content":"                        .equalsIgnoreCase(test));","lastModifiedDate":"2022-02-28"},{"lineNumber":59,"author":{"gitId":"cwq2326"},"content":"    }","lastModifiedDate":"2022-02-28"},{"lineNumber":60,"author":{"gitId":"cwq2326"},"content":"","lastModifiedDate":"2022-02-28"},{"lineNumber":61,"author":{"gitId":"cwq2326"},"content":"    /**","lastModifiedDate":"2022-02-28"},{"lineNumber":62,"author":{"gitId":"cwq2326"},"content":"     * Returns the list enum values from the Nus enum class.","lastModifiedDate":"2022-02-28"},{"lineNumber":63,"author":{"gitId":"cwq2326"},"content":"     *","lastModifiedDate":"2022-02-28"},{"lineNumber":64,"author":{"gitId":"cwq2326"},"content":"     * @return String of Nus enum values.","lastModifiedDate":"2022-02-28"},{"lineNumber":65,"author":{"gitId":"cwq2326"},"content":"     */","lastModifiedDate":"2022-02-28"},{"lineNumber":66,"author":{"gitId":"cwq2326"},"content":"    public static String getFacultyEnumAsString() {","lastModifiedDate":"2022-02-28"},{"lineNumber":67,"author":{"gitId":"cwq2326"},"content":"        StringBuilder stringBuilder \u003d new StringBuilder();","lastModifiedDate":"2022-02-28"},{"lineNumber":68,"author":{"gitId":"cwq2326"},"content":"        Stream.of(Nus.values()).forEach(faculty -\u003e stringBuilder.append(faculty + \" \"));","lastModifiedDate":"2022-02-28"},{"lineNumber":69,"author":{"gitId":"cwq2326"},"content":"        return stringBuilder.toString();","lastModifiedDate":"2022-02-28"},{"lineNumber":70,"author":{"gitId":"cwq2326"},"content":"    }","lastModifiedDate":"2022-02-28"},{"lineNumber":71,"author":{"gitId":"cwq2326"},"content":"","lastModifiedDate":"2022-02-28"},{"lineNumber":72,"author":{"gitId":"cwq2326"},"content":"    @Override","lastModifiedDate":"2022-03-04"},{"lineNumber":73,"author":{"gitId":"cwq2326"},"content":"    public String toString() {","lastModifiedDate":"2022-02-28"},{"lineNumber":74,"author":{"gitId":"cwq2326"},"content":"        return studentFaculty;","lastModifiedDate":"2022-02-28"},{"lineNumber":75,"author":{"gitId":"cwq2326"},"content":"    }","lastModifiedDate":"2022-02-28"},{"lineNumber":76,"author":{"gitId":"cwq2326"},"content":"","lastModifiedDate":"2022-02-28"},{"lineNumber":77,"author":{"gitId":"cwq2326"},"content":"    @Override","lastModifiedDate":"2022-02-28"},{"lineNumber":78,"author":{"gitId":"cwq2326"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2022-02-28"},{"lineNumber":79,"author":{"gitId":"cwq2326"},"content":"        return other \u003d\u003d this // short circuit if same object","lastModifiedDate":"2022-02-28"},{"lineNumber":80,"author":{"gitId":"cwq2326"},"content":"                || (other instanceof Faculty // instanceof handles nulls","lastModifiedDate":"2022-02-28"},{"lineNumber":81,"author":{"gitId":"cwq2326"},"content":"                \u0026\u0026 studentFaculty.equals(((Faculty) other).studentFaculty)); // state check","lastModifiedDate":"2022-02-28"},{"lineNumber":82,"author":{"gitId":"cwq2326"},"content":"    }","lastModifiedDate":"2022-02-28"},{"lineNumber":83,"author":{"gitId":"cwq2326"},"content":"","lastModifiedDate":"2022-02-28"},{"lineNumber":84,"author":{"gitId":"cwq2326"},"content":"    @Override","lastModifiedDate":"2022-02-28"},{"lineNumber":85,"author":{"gitId":"cwq2326"},"content":"    public int hashCode() {","lastModifiedDate":"2022-02-28"},{"lineNumber":86,"author":{"gitId":"cwq2326"},"content":"        return studentFaculty.hashCode();","lastModifiedDate":"2022-02-28"},{"lineNumber":87,"author":{"gitId":"cwq2326"},"content":"    }","lastModifiedDate":"2022-02-28"},{"lineNumber":88,"author":{"gitId":"jiale-c"},"content":"","lastModifiedDate":"2022-03-09"},{"lineNumber":89,"author":{"gitId":"jiale-c"},"content":"    /**","lastModifiedDate":"2022-03-09"},{"lineNumber":90,"author":{"gitId":"jiale-c"},"content":"     * Returns a list of strings with enum values from the Nus enum class.","lastModifiedDate":"2022-03-09"},{"lineNumber":91,"author":{"gitId":"jiale-c"},"content":"     *","lastModifiedDate":"2022-03-09"},{"lineNumber":92,"author":{"gitId":"jiale-c"},"content":"     * @return List of Nus enum values.","lastModifiedDate":"2022-03-09"},{"lineNumber":93,"author":{"gitId":"jiale-c"},"content":"     */","lastModifiedDate":"2022-03-09"},{"lineNumber":94,"author":{"gitId":"jiale-c"},"content":"    public static List\u003cString\u003e getFacultyEnumAsList() {","lastModifiedDate":"2022-03-09"},{"lineNumber":95,"author":{"gitId":"jiale-c"},"content":"        return Stream.of(Nus.values()).map(Enum::name).collect(Collectors.toList());","lastModifiedDate":"2022-03-09"},{"lineNumber":96,"author":{"gitId":"jiale-c"},"content":"    }","lastModifiedDate":"2022-03-09"},{"lineNumber":97,"author":{"gitId":"cwq2326"},"content":"}","lastModifiedDate":"2022-02-28"}],"authorContributionMap":{"DannyDakota":4,"cwq2326":82,"jiale-c":11}},{"path":"src/main/java/seedu/address/model/person/MatriculationNumber.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"cwq2326"},"content":"package seedu.address.model.person;","lastModifiedDate":"2022-02-28"},{"lineNumber":2,"author":{"gitId":"cwq2326"},"content":"","lastModifiedDate":"2022-02-28"},{"lineNumber":3,"author":{"gitId":"cwq2326"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2022-02-28"},{"lineNumber":4,"author":{"gitId":"cwq2326"},"content":"import static seedu.address.commons.util.AppUtil.checkArgument;","lastModifiedDate":"2022-02-28"},{"lineNumber":5,"author":{"gitId":"cwq2326"},"content":"","lastModifiedDate":"2022-02-28"},{"lineNumber":6,"author":{"gitId":"cwq2326"},"content":"/**","lastModifiedDate":"2022-02-28"},{"lineNumber":7,"author":{"gitId":"DannyDakota"},"content":" * Represents a Person\u0027s matriculation number in Tracey.","lastModifiedDate":"2022-03-29"},{"lineNumber":8,"author":{"gitId":"cwq2326"},"content":" * Guarantees: immutable; is valid as declared in {@link #isValidMatriculationNumber(String)}","lastModifiedDate":"2022-02-28"},{"lineNumber":9,"author":{"gitId":"cwq2326"},"content":" */","lastModifiedDate":"2022-02-28"},{"lineNumber":10,"author":{"gitId":"cwq2326"},"content":"public class MatriculationNumber {","lastModifiedDate":"2022-02-28"},{"lineNumber":11,"author":{"gitId":"cwq2326"},"content":"","lastModifiedDate":"2022-02-28"},{"lineNumber":12,"author":{"gitId":"cwq2326"},"content":"","lastModifiedDate":"2022-02-28"},{"lineNumber":13,"author":{"gitId":"cwq2326"},"content":"    public static final String MESSAGE_CONSTRAINTS \u003d","lastModifiedDate":"2022-02-28"},{"lineNumber":14,"author":{"gitId":"cwq2326"},"content":"            \"Matriculation number should be in the following format: A1234567X, where X is a placeholder for the \"","lastModifiedDate":"2022-03-04"},{"lineNumber":15,"author":{"gitId":"DannyDakota"},"content":"                    + \"last alphabet of the student\u0027s matriculation number, and it should not be blank.\";","lastModifiedDate":"2022-03-17"},{"lineNumber":16,"author":{"gitId":"cwq2326"},"content":"","lastModifiedDate":"2022-02-28"},{"lineNumber":17,"author":{"gitId":"cwq2326"},"content":"    /*","lastModifiedDate":"2022-02-28"},{"lineNumber":18,"author":{"gitId":"cwq2326"},"content":"     * The first character of the matriculation number must be an A.","lastModifiedDate":"2022-02-28"},{"lineNumber":19,"author":{"gitId":"cwq2326"},"content":"     * The matriculation number must contain exactly 7 numbers in between two characters.","lastModifiedDate":"2022-02-28"},{"lineNumber":20,"author":{"gitId":"cwq2326"},"content":"     * The last character can be any alphabet.","lastModifiedDate":"2022-02-28"},{"lineNumber":21,"author":{"gitId":"cwq2326"},"content":"     */","lastModifiedDate":"2022-02-28"},{"lineNumber":22,"author":{"gitId":"cwq2326"},"content":"    public static final String VALIDATION_REGEX \u003d \"[aA][\\\\d]{7}[\\\\p{Alpha}]\";","lastModifiedDate":"2022-02-28"},{"lineNumber":23,"author":{"gitId":"cwq2326"},"content":"","lastModifiedDate":"2022-02-28"},{"lineNumber":24,"author":{"gitId":"cwq2326"},"content":"    public final String value;","lastModifiedDate":"2022-02-28"},{"lineNumber":25,"author":{"gitId":"cwq2326"},"content":"","lastModifiedDate":"2022-02-28"},{"lineNumber":26,"author":{"gitId":"cwq2326"},"content":"    /**","lastModifiedDate":"2022-02-28"},{"lineNumber":27,"author":{"gitId":"cwq2326"},"content":"     * Constructs a {@code MatriculationNumber}.","lastModifiedDate":"2022-02-28"},{"lineNumber":28,"author":{"gitId":"cwq2326"},"content":"     *","lastModifiedDate":"2022-02-28"},{"lineNumber":29,"author":{"gitId":"cwq2326"},"content":"     * @param number A valid matriculation number.","lastModifiedDate":"2022-02-28"},{"lineNumber":30,"author":{"gitId":"cwq2326"},"content":"     */","lastModifiedDate":"2022-02-28"},{"lineNumber":31,"author":{"gitId":"cwq2326"},"content":"    public MatriculationNumber(String number) {","lastModifiedDate":"2022-02-28"},{"lineNumber":32,"author":{"gitId":"cwq2326"},"content":"        requireNonNull(number);","lastModifiedDate":"2022-02-28"},{"lineNumber":33,"author":{"gitId":"cwq2326"},"content":"        checkArgument(isValidMatriculationNumber(number), MESSAGE_CONSTRAINTS);","lastModifiedDate":"2022-02-28"},{"lineNumber":34,"author":{"gitId":"cwq2326"},"content":"        value \u003d number.toUpperCase();","lastModifiedDate":"2022-02-28"},{"lineNumber":35,"author":{"gitId":"cwq2326"},"content":"    }","lastModifiedDate":"2022-02-28"},{"lineNumber":36,"author":{"gitId":"cwq2326"},"content":"","lastModifiedDate":"2022-02-28"},{"lineNumber":37,"author":{"gitId":"cwq2326"},"content":"    /**","lastModifiedDate":"2022-02-28"},{"lineNumber":38,"author":{"gitId":"cwq2326"},"content":"     * Returns true if a given string is a valid matriculation number.","lastModifiedDate":"2022-02-28"},{"lineNumber":39,"author":{"gitId":"DannyDakota"},"content":"     *","lastModifiedDate":"2022-03-20"},{"lineNumber":40,"author":{"gitId":"DannyDakota"},"content":"     * @param test string to be tested to determine if valid matriculation number.","lastModifiedDate":"2022-03-20"},{"lineNumber":41,"author":{"gitId":"DannyDakota"},"content":"     * @return boolean where true if a given string is a valid number, false otherwise.","lastModifiedDate":"2022-03-29"},{"lineNumber":42,"author":{"gitId":"cwq2326"},"content":"     */","lastModifiedDate":"2022-02-28"},{"lineNumber":43,"author":{"gitId":"cwq2326"},"content":"    public static boolean isValidMatriculationNumber(String test) {","lastModifiedDate":"2022-02-28"},{"lineNumber":44,"author":{"gitId":"cwq2326"},"content":"        return test.matches(VALIDATION_REGEX);","lastModifiedDate":"2022-02-28"},{"lineNumber":45,"author":{"gitId":"cwq2326"},"content":"    }","lastModifiedDate":"2022-02-28"},{"lineNumber":46,"author":{"gitId":"cwq2326"},"content":"","lastModifiedDate":"2022-02-28"},{"lineNumber":47,"author":{"gitId":"cwq2326"},"content":"    @Override","lastModifiedDate":"2022-02-28"},{"lineNumber":48,"author":{"gitId":"cwq2326"},"content":"    public String toString() {","lastModifiedDate":"2022-02-28"},{"lineNumber":49,"author":{"gitId":"cwq2326"},"content":"        return value;","lastModifiedDate":"2022-02-28"},{"lineNumber":50,"author":{"gitId":"cwq2326"},"content":"    }","lastModifiedDate":"2022-02-28"},{"lineNumber":51,"author":{"gitId":"cwq2326"},"content":"","lastModifiedDate":"2022-02-28"},{"lineNumber":52,"author":{"gitId":"cwq2326"},"content":"    @Override","lastModifiedDate":"2022-02-28"},{"lineNumber":53,"author":{"gitId":"cwq2326"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2022-02-28"},{"lineNumber":54,"author":{"gitId":"cwq2326"},"content":"        return other \u003d\u003d this // short circuit if same object","lastModifiedDate":"2022-02-28"},{"lineNumber":55,"author":{"gitId":"cwq2326"},"content":"                || (other instanceof MatriculationNumber // instanceof handles nulls","lastModifiedDate":"2022-02-28"},{"lineNumber":56,"author":{"gitId":"cwq2326"},"content":"                \u0026\u0026 value.equals(((MatriculationNumber) other).value)); // state check","lastModifiedDate":"2022-02-28"},{"lineNumber":57,"author":{"gitId":"cwq2326"},"content":"    }","lastModifiedDate":"2022-02-28"},{"lineNumber":58,"author":{"gitId":"cwq2326"},"content":"","lastModifiedDate":"2022-02-28"},{"lineNumber":59,"author":{"gitId":"cwq2326"},"content":"    @Override","lastModifiedDate":"2022-02-28"},{"lineNumber":60,"author":{"gitId":"cwq2326"},"content":"    public int hashCode() {","lastModifiedDate":"2022-02-28"},{"lineNumber":61,"author":{"gitId":"cwq2326"},"content":"        return value.hashCode();","lastModifiedDate":"2022-02-28"},{"lineNumber":62,"author":{"gitId":"cwq2326"},"content":"    }","lastModifiedDate":"2022-02-28"},{"lineNumber":63,"author":{"gitId":"cwq2326"},"content":"","lastModifiedDate":"2022-02-28"},{"lineNumber":64,"author":{"gitId":"cwq2326"},"content":"}","lastModifiedDate":"2022-02-28"}],"authorContributionMap":{"DannyDakota":5,"cwq2326":59}},{"path":"src/main/java/seedu/address/model/person/Name.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.model.person;","lastModifiedDate":"2016-08-24"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":3,"author":{"gitId":"kevinkuo0320"},"content":"","lastModifiedDate":"2022-03-24"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2022-03-24"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static seedu.address.commons.util.AppUtil.checkArgument;","lastModifiedDate":"2022-03-24"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-03-24"},{"lineNumber":7,"author":{"gitId":"kevinkuo0320"},"content":"import java.util.ArrayList;","lastModifiedDate":"2022-03-23"},{"lineNumber":8,"author":{"gitId":"kevinkuo0320"},"content":"import java.util.Arrays;","lastModifiedDate":"2022-03-23"},{"lineNumber":9,"author":{"gitId":"kevinkuo0320"},"content":"import java.util.List;","lastModifiedDate":"2022-03-23"},{"lineNumber":10,"author":{"gitId":"kevinkuo0320"},"content":"","lastModifiedDate":"2022-03-23"},{"lineNumber":11,"author":{"gitId":"kevinkuo0320"},"content":"","lastModifiedDate":"2022-03-24"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":13,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-24"},{"lineNumber":14,"author":{"gitId":"DannyDakota"},"content":" * Represents a Person\u0027s name in Tracey.","lastModifiedDate":"2022-03-29"},{"lineNumber":15,"author":{"gitId":"-"},"content":" * Guarantees: immutable; is valid as declared in {@link #isValidName(String)}","lastModifiedDate":"2016-08-24"},{"lineNumber":16,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-24"},{"lineNumber":17,"author":{"gitId":"-"},"content":"public class Name {","lastModifiedDate":"2016-08-24"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_CONSTRAINTS \u003d","lastModifiedDate":"2018-09-22"},{"lineNumber":20,"author":{"gitId":"-"},"content":"            \"Names should only contain alphanumeric characters and spaces, and it should not be blank\";","lastModifiedDate":"2018-04-04"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-16"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    /*","lastModifiedDate":"2017-01-16"},{"lineNumber":23,"author":{"gitId":"-"},"content":"     * The first character of the address must not be a whitespace,","lastModifiedDate":"2017-01-16"},{"lineNumber":24,"author":{"gitId":"-"},"content":"     * otherwise \" \" (a blank string) becomes a valid input.","lastModifiedDate":"2017-01-16"},{"lineNumber":25,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-01-16"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    public static final String VALIDATION_REGEX \u003d \"[\\\\p{Alnum}][\\\\p{Alnum} ]*\";","lastModifiedDate":"2018-09-22"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    public final String fullName;","lastModifiedDate":"2016-08-24"},{"lineNumber":29,"author":{"gitId":"kevinkuo0320"},"content":"    public final String searchName;","lastModifiedDate":"2022-03-23"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-24"},{"lineNumber":32,"author":{"gitId":"-"},"content":"     * Constructs a {@code Name}.","lastModifiedDate":"2017-05-30"},{"lineNumber":33,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2016-08-24"},{"lineNumber":34,"author":{"gitId":"-"},"content":"     * @param name A valid name.","lastModifiedDate":"2017-05-30"},{"lineNumber":35,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-24"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    public Name(String name) {","lastModifiedDate":"2017-05-30"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        requireNonNull(name);","lastModifiedDate":"2017-05-15"},{"lineNumber":38,"author":{"gitId":"kevinkuo0320"},"content":"        searchName \u003d addNameFormat(name);","lastModifiedDate":"2022-03-23"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        checkArgument(isValidName(name), MESSAGE_CONSTRAINTS);","lastModifiedDate":"2018-09-22"},{"lineNumber":40,"author":{"gitId":"-"},"content":"        fullName \u003d name;","lastModifiedDate":"2018-08-14"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":42,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":43,"author":{"gitId":"kevinkuo0320"},"content":"    /**","lastModifiedDate":"2022-03-23"},{"lineNumber":44,"author":{"gitId":"kevinkuo0320"},"content":"     * Return the combination of name for searching purpose","lastModifiedDate":"2022-03-23"},{"lineNumber":45,"author":{"gitId":"kevinkuo0320"},"content":"     * @param name a person name (family name with given name)","lastModifiedDate":"2022-03-23"},{"lineNumber":46,"author":{"gitId":"kevinkuo0320"},"content":"     * @return string of all combination of name string (John -\u003e J, Jo, Joh, John)","lastModifiedDate":"2022-03-23"},{"lineNumber":47,"author":{"gitId":"kevinkuo0320"},"content":"     */","lastModifiedDate":"2022-03-23"},{"lineNumber":48,"author":{"gitId":"kevinkuo0320"},"content":"    public String addNameFormat (String name) {","lastModifiedDate":"2022-03-23"},{"lineNumber":49,"author":{"gitId":"kevinkuo0320"},"content":"        List\u003cString\u003e combinationArray \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2022-03-23"},{"lineNumber":50,"author":{"gitId":"kevinkuo0320"},"content":"        for (int i \u003d 0; i \u003c name.length(); i++) {","lastModifiedDate":"2022-03-23"},{"lineNumber":51,"author":{"gitId":"kevinkuo0320"},"content":"            combinationArray.add(\" \" + name.substring(0, i + 1) + \" \");","lastModifiedDate":"2022-03-23"},{"lineNumber":52,"author":{"gitId":"kevinkuo0320"},"content":"        }","lastModifiedDate":"2022-03-23"},{"lineNumber":53,"author":{"gitId":"kevinkuo0320"},"content":"        return Arrays.toString(combinationArray.toArray());","lastModifiedDate":"2022-03-23"},{"lineNumber":54,"author":{"gitId":"kevinkuo0320"},"content":"    }","lastModifiedDate":"2022-03-23"},{"lineNumber":55,"author":{"gitId":"kevinkuo0320"},"content":"","lastModifiedDate":"2022-03-23"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-24"},{"lineNumber":57,"author":{"gitId":"-"},"content":"     * Returns true if a given string is a valid name.","lastModifiedDate":"2018-04-05"},{"lineNumber":58,"author":{"gitId":"DannyDakota"},"content":"     *","lastModifiedDate":"2022-03-20"},{"lineNumber":59,"author":{"gitId":"DannyDakota"},"content":"     * @param test string to be tested to determine if valid name.","lastModifiedDate":"2022-03-20"},{"lineNumber":60,"author":{"gitId":"DannyDakota"},"content":"     * @return boolean where true if a given string is a valid name, false otherwise.","lastModifiedDate":"2022-03-29"},{"lineNumber":61,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-24"},{"lineNumber":62,"author":{"gitId":"-"},"content":"    public static boolean isValidName(String test) {","lastModifiedDate":"2016-08-24"},{"lineNumber":63,"author":{"gitId":"-"},"content":"        return test.matches(VALIDATION_REGEX);","lastModifiedDate":"2018-09-22"},{"lineNumber":64,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":65,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":66,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":67,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-24"},{"lineNumber":68,"author":{"gitId":"-"},"content":"    public String toString() {","lastModifiedDate":"2016-08-24"},{"lineNumber":69,"author":{"gitId":"-"},"content":"        return fullName;","lastModifiedDate":"2016-08-24"},{"lineNumber":70,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":71,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":72,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-24"},{"lineNumber":73,"author":{"gitId":"-"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2016-08-24"},{"lineNumber":74,"author":{"gitId":"-"},"content":"        return other \u003d\u003d this // short circuit if same object","lastModifiedDate":"2016-08-24"},{"lineNumber":75,"author":{"gitId":"-"},"content":"                || (other instanceof Name // instanceof handles nulls","lastModifiedDate":"2016-08-24"},{"lineNumber":76,"author":{"gitId":"-"},"content":"                \u0026\u0026 fullName.equals(((Name) other).fullName)); // state check","lastModifiedDate":"2018-08-14"},{"lineNumber":77,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":78,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":79,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-24"},{"lineNumber":80,"author":{"gitId":"-"},"content":"    public int hashCode() {","lastModifiedDate":"2016-08-24"},{"lineNumber":81,"author":{"gitId":"-"},"content":"        return fullName.hashCode();","lastModifiedDate":"2016-08-24"},{"lineNumber":82,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":83,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":84,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-24"}],"authorContributionMap":{"DannyDakota":4,"kevinkuo0320":21,"-":59}},{"path":"src/main/java/seedu/address/model/person/NameContainsKeywordsPredicate.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.model.person;","lastModifiedDate":"2017-06-12"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.util.List;","lastModifiedDate":"2017-06-12"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import java.util.function.Predicate;","lastModifiedDate":"2017-06-12"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import seedu.address.commons.util.StringUtil;","lastModifiedDate":"2017-06-12"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":8,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-06-12"},{"lineNumber":9,"author":{"gitId":"-"},"content":" * Tests that a {@code Person}\u0027s {@code Name} matches any of the keywords given.","lastModifiedDate":"2018-01-10"},{"lineNumber":10,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-06-12"},{"lineNumber":11,"author":{"gitId":"-"},"content":"public class NameContainsKeywordsPredicate implements Predicate\u003cPerson\u003e {","lastModifiedDate":"2018-01-10"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    private final List\u003cString\u003e keywords;","lastModifiedDate":"2017-06-12"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":14,"author":{"gitId":"-"},"content":"    public NameContainsKeywordsPredicate(List\u003cString\u003e keywords) {","lastModifiedDate":"2017-06-12"},{"lineNumber":15,"author":{"gitId":"-"},"content":"        this.keywords \u003d keywords;","lastModifiedDate":"2017-06-12"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-12"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2017-06-12"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    public boolean test(Person person) {","lastModifiedDate":"2018-01-10"},{"lineNumber":20,"author":{"gitId":"-"},"content":"        return keywords.stream()","lastModifiedDate":"2017-06-12"},{"lineNumber":21,"author":{"gitId":"kevinkuo0320"},"content":"                .anyMatch(keyword -\u003e StringUtil.containsWordIgnoreCase(person.getName().searchName, keyword));","lastModifiedDate":"2022-03-23"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-12"},{"lineNumber":23,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":24,"author":{"gitId":"kevinkuo0320"},"content":"","lastModifiedDate":"2022-03-23"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2017-06-12"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2017-06-12"},{"lineNumber":27,"author":{"gitId":"-"},"content":"        return other \u003d\u003d this // short circuit if same object","lastModifiedDate":"2017-06-12"},{"lineNumber":28,"author":{"gitId":"-"},"content":"                || (other instanceof NameContainsKeywordsPredicate // instanceof handles nulls","lastModifiedDate":"2017-06-12"},{"lineNumber":29,"author":{"gitId":"-"},"content":"                \u0026\u0026 keywords.equals(((NameContainsKeywordsPredicate) other).keywords)); // state check","lastModifiedDate":"2018-08-14"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-12"},{"lineNumber":31,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":32,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-06-12"}],"authorContributionMap":{"kevinkuo0320":2,"-":30}},{"path":"src/main/java/seedu/address/model/person/Person.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.model.person;","lastModifiedDate":"2016-08-24"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static seedu.address.commons.util.CollectionUtil.requireAllNonNull;","lastModifiedDate":"2017-05-19"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.util.Collections;","lastModifiedDate":"2017-03-07"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.util.HashSet;","lastModifiedDate":"2018-03-26"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import java.util.Objects;","lastModifiedDate":"2017-01-19"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import java.util.Set;","lastModifiedDate":"2017-03-07"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import seedu.address.model.tag.Tag;","lastModifiedDate":"2017-03-07"},{"lineNumber":11,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-24"},{"lineNumber":12,"author":{"gitId":"DannyDakota"},"content":" * Represents a Person in Tracey.","lastModifiedDate":"2022-03-29"},{"lineNumber":13,"author":{"gitId":"-"},"content":" * Guarantees: details are present and not null, field values are validated, immutable.","lastModifiedDate":"2017-12-20"},{"lineNumber":14,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-24"},{"lineNumber":15,"author":{"gitId":"-"},"content":"public class Person {","lastModifiedDate":"2018-01-10"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    // Identity fields","lastModifiedDate":"2018-04-19"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    private final Name name;","lastModifiedDate":"2017-12-20"},{"lineNumber":18,"author":{"gitId":"DannyDakota"},"content":"    private final Block block;","lastModifiedDate":"2022-03-17"},{"lineNumber":19,"author":{"gitId":"cwq2326"},"content":"    private final Faculty faculty;","lastModifiedDate":"2022-02-28"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    private final Phone phone;","lastModifiedDate":"2017-12-20"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    private final Email email;","lastModifiedDate":"2017-12-20"},{"lineNumber":22,"author":{"gitId":"cwq2326"},"content":"    private final MatriculationNumber number;","lastModifiedDate":"2022-02-28"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    // Data fields","lastModifiedDate":"2018-04-19"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    private final Address address;","lastModifiedDate":"2018-04-19"},{"lineNumber":25,"author":{"gitId":"cwq2326"},"content":"    private final CovidStatus status;","lastModifiedDate":"2022-02-28"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    private final Set\u003cTag\u003e tags \u003d new HashSet\u003c\u003e();","lastModifiedDate":"2018-03-26"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-24"},{"lineNumber":28,"author":{"gitId":"-"},"content":"     * Every field must be present and not null.","lastModifiedDate":"2016-08-24"},{"lineNumber":29,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-24"},{"lineNumber":30,"author":{"gitId":"DannyDakota"},"content":"    public Person(Name name, Block block, Faculty faculty, Phone phone, Email email, Address address,","lastModifiedDate":"2022-03-17"},{"lineNumber":31,"author":{"gitId":"cwq2326"},"content":"                  MatriculationNumber number, CovidStatus status, Set\u003cTag\u003e tags) {","lastModifiedDate":"2022-02-28"},{"lineNumber":32,"author":{"gitId":"cwq2326"},"content":"        requireAllNonNull(name, faculty, phone, email, address, number, status, tags);","lastModifiedDate":"2022-03-04"},{"lineNumber":33,"author":{"gitId":"-"},"content":"        this.name \u003d name;","lastModifiedDate":"2017-12-20"},{"lineNumber":34,"author":{"gitId":"DannyDakota"},"content":"        this.block \u003d block;","lastModifiedDate":"2022-03-17"},{"lineNumber":35,"author":{"gitId":"cwq2326"},"content":"        this.faculty \u003d faculty;","lastModifiedDate":"2022-02-28"},{"lineNumber":36,"author":{"gitId":"-"},"content":"        this.phone \u003d phone;","lastModifiedDate":"2017-12-20"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        this.email \u003d email;","lastModifiedDate":"2017-12-20"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        this.address \u003d address;","lastModifiedDate":"2017-12-20"},{"lineNumber":39,"author":{"gitId":"cwq2326"},"content":"        this.number \u003d number;","lastModifiedDate":"2022-02-28"},{"lineNumber":40,"author":{"gitId":"cwq2326"},"content":"        this.status \u003d status;","lastModifiedDate":"2022-02-28"},{"lineNumber":41,"author":{"gitId":"-"},"content":"        this.tags.addAll(tags);","lastModifiedDate":"2018-03-26"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    public Name getName() {","lastModifiedDate":"2017-07-12"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        return name;","lastModifiedDate":"2017-12-20"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":46,"author":{"gitId":"DannyDakota"},"content":"    public Block getBlock() {","lastModifiedDate":"2022-03-17"},{"lineNumber":47,"author":{"gitId":"DannyDakota"},"content":"        return block;","lastModifiedDate":"2022-03-17"},{"lineNumber":48,"author":{"gitId":"DannyDakota"},"content":"    }","lastModifiedDate":"2022-03-17"},{"lineNumber":49,"author":{"gitId":"cwq2326"},"content":"    public Faculty getFaculty() {","lastModifiedDate":"2022-02-28"},{"lineNumber":50,"author":{"gitId":"cwq2326"},"content":"        return faculty;","lastModifiedDate":"2022-02-28"},{"lineNumber":51,"author":{"gitId":"cwq2326"},"content":"    }","lastModifiedDate":"2022-02-28"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    public Phone getPhone() {","lastModifiedDate":"2017-07-12"},{"lineNumber":53,"author":{"gitId":"-"},"content":"        return phone;","lastModifiedDate":"2017-12-20"},{"lineNumber":54,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    public Email getEmail() {","lastModifiedDate":"2017-07-12"},{"lineNumber":56,"author":{"gitId":"-"},"content":"        return email;","lastModifiedDate":"2017-12-20"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":58,"author":{"gitId":"cwq2326"},"content":"    public MatriculationNumber getMatriculationNumber() {","lastModifiedDate":"2022-02-28"},{"lineNumber":59,"author":{"gitId":"cwq2326"},"content":"        return number;","lastModifiedDate":"2022-02-28"},{"lineNumber":60,"author":{"gitId":"cwq2326"},"content":"    }","lastModifiedDate":"2022-02-28"},{"lineNumber":61,"author":{"gitId":"cwq2326"},"content":"    public CovidStatus getStatus() {","lastModifiedDate":"2022-02-28"},{"lineNumber":62,"author":{"gitId":"cwq2326"},"content":"        return status;","lastModifiedDate":"2022-02-28"},{"lineNumber":63,"author":{"gitId":"cwq2326"},"content":"    }","lastModifiedDate":"2022-02-28"},{"lineNumber":64,"author":{"gitId":"jiale-c"},"content":"    /**","lastModifiedDate":"2022-03-09"},{"lineNumber":65,"author":{"gitId":"jiale-c"},"content":"     * Returns the Covid Status as a String instead of type CovidStatus.","lastModifiedDate":"2022-03-09"},{"lineNumber":66,"author":{"gitId":"jiale-c"},"content":"     *","lastModifiedDate":"2022-03-09"},{"lineNumber":67,"author":{"gitId":"jiale-c"},"content":"     * @return A string of the covidStatus","lastModifiedDate":"2022-03-22"},{"lineNumber":68,"author":{"gitId":"jiale-c"},"content":"     */","lastModifiedDate":"2022-03-09"},{"lineNumber":69,"author":{"gitId":"jiale-c"},"content":"    public String getStatusAsString() {","lastModifiedDate":"2022-03-09"},{"lineNumber":70,"author":{"gitId":"jiale-c"},"content":"        return status.toString();","lastModifiedDate":"2022-03-09"},{"lineNumber":71,"author":{"gitId":"jiale-c"},"content":"    }","lastModifiedDate":"2022-03-09"},{"lineNumber":72,"author":{"gitId":"jiale-c"},"content":"    /**","lastModifiedDate":"2022-03-23"},{"lineNumber":73,"author":{"gitId":"jiale-c"},"content":"     * Returns the block as a String instead of type Block.","lastModifiedDate":"2022-03-23"},{"lineNumber":74,"author":{"gitId":"jiale-c"},"content":"     *","lastModifiedDate":"2022-03-23"},{"lineNumber":75,"author":{"gitId":"jiale-c"},"content":"     * @return A string of the block","lastModifiedDate":"2022-03-23"},{"lineNumber":76,"author":{"gitId":"jiale-c"},"content":"     */","lastModifiedDate":"2022-03-23"},{"lineNumber":77,"author":{"gitId":"jiale-c"},"content":"    public String getBlockAsString() {","lastModifiedDate":"2022-03-23"},{"lineNumber":78,"author":{"gitId":"jiale-c"},"content":"        return block.toString();","lastModifiedDate":"2022-03-23"},{"lineNumber":79,"author":{"gitId":"jiale-c"},"content":"    }","lastModifiedDate":"2022-03-23"},{"lineNumber":80,"author":{"gitId":"tanchinkiat99"},"content":"    /**","lastModifiedDate":"2022-03-11"},{"lineNumber":81,"author":{"gitId":"tanchinkiat99"},"content":"     * Predicate to check if the status of Person object matches the given CovidStatus.","lastModifiedDate":"2022-03-11"},{"lineNumber":82,"author":{"gitId":"tanchinkiat99"},"content":"     *","lastModifiedDate":"2022-03-11"},{"lineNumber":83,"author":{"gitId":"tanchinkiat99"},"content":"     * @param status given status to check if matched by status property in Person","lastModifiedDate":"2022-03-11"},{"lineNumber":84,"author":{"gitId":"jiale-c"},"content":"     * @return Boolean value to show if there is a match","lastModifiedDate":"2022-03-22"},{"lineNumber":85,"author":{"gitId":"tanchinkiat99"},"content":"     */","lastModifiedDate":"2022-03-11"},{"lineNumber":86,"author":{"gitId":"tanchinkiat99"},"content":"    public boolean isStatus(CovidStatus status) {","lastModifiedDate":"2022-03-11"},{"lineNumber":87,"author":{"gitId":"tanchinkiat99"},"content":"        return this.status.equals(status);","lastModifiedDate":"2022-03-11"},{"lineNumber":88,"author":{"gitId":"tanchinkiat99"},"content":"    }","lastModifiedDate":"2022-03-11"},{"lineNumber":89,"author":{"gitId":"tanchinkiat99"},"content":"","lastModifiedDate":"2022-03-11"},{"lineNumber":90,"author":{"gitId":"jiale-c"},"content":"    /**","lastModifiedDate":"2022-03-09"},{"lineNumber":91,"author":{"gitId":"tanchinkiat99"},"content":"     * Predicate to check if the faculty of Person object matches the given faculty.","lastModifiedDate":"2022-03-18"},{"lineNumber":92,"author":{"gitId":"tanchinkiat99"},"content":"     *","lastModifiedDate":"2022-03-18"},{"lineNumber":93,"author":{"gitId":"tanchinkiat99"},"content":"     * @param faculty given faculty to check if matched by faculty property in Person","lastModifiedDate":"2022-03-18"},{"lineNumber":94,"author":{"gitId":"tanchinkiat99"},"content":"     * @return boolean value to show if there is a match","lastModifiedDate":"2022-03-18"},{"lineNumber":95,"author":{"gitId":"tanchinkiat99"},"content":"     */","lastModifiedDate":"2022-03-18"},{"lineNumber":96,"author":{"gitId":"tanchinkiat99"},"content":"    public boolean isFaculty(Faculty faculty) {","lastModifiedDate":"2022-03-18"},{"lineNumber":97,"author":{"gitId":"tanchinkiat99"},"content":"        return this.faculty.equals(faculty);","lastModifiedDate":"2022-03-18"},{"lineNumber":98,"author":{"gitId":"tanchinkiat99"},"content":"    }","lastModifiedDate":"2022-03-18"},{"lineNumber":99,"author":{"gitId":"tanchinkiat99"},"content":"","lastModifiedDate":"2022-03-18"},{"lineNumber":100,"author":{"gitId":"jiale-c"},"content":"    /**","lastModifiedDate":"2022-03-09"},{"lineNumber":101,"author":{"gitId":"jiale-c"},"content":"     * Returns the Faculty of this person as a String instead of type Faculty.","lastModifiedDate":"2022-03-09"},{"lineNumber":102,"author":{"gitId":"jiale-c"},"content":"     *","lastModifiedDate":"2022-03-09"},{"lineNumber":103,"author":{"gitId":"jiale-c"},"content":"     * @return A string of the faculty","lastModifiedDate":"2022-03-22"},{"lineNumber":104,"author":{"gitId":"jiale-c"},"content":"     */","lastModifiedDate":"2022-03-09"},{"lineNumber":105,"author":{"gitId":"jiale-c"},"content":"    public String getFacultyAsString() {","lastModifiedDate":"2022-03-09"},{"lineNumber":106,"author":{"gitId":"jiale-c"},"content":"        return faculty.toString();","lastModifiedDate":"2022-03-09"},{"lineNumber":107,"author":{"gitId":"jiale-c"},"content":"    }","lastModifiedDate":"2022-03-09"},{"lineNumber":108,"author":{"gitId":"jiale-c"},"content":"","lastModifiedDate":"2022-03-09"},{"lineNumber":109,"author":{"gitId":"jiale-c"},"content":"    /**","lastModifiedDate":"2022-03-22"},{"lineNumber":110,"author":{"gitId":"tanchinkiat99"},"content":"     * Predicate to check if the block of Person object matches the given block.","lastModifiedDate":"2022-03-22"},{"lineNumber":111,"author":{"gitId":"jiale-c"},"content":"     *","lastModifiedDate":"2022-03-22"},{"lineNumber":112,"author":{"gitId":"tanchinkiat99"},"content":"     * @param block given block to check if matched by block property in Person","lastModifiedDate":"2022-03-22"},{"lineNumber":113,"author":{"gitId":"jiale-c"},"content":"     * @return Boolean value to show if there is a match","lastModifiedDate":"2022-03-23"},{"lineNumber":114,"author":{"gitId":"jiale-c"},"content":"     */","lastModifiedDate":"2022-03-22"},{"lineNumber":115,"author":{"gitId":"tanchinkiat99"},"content":"    public boolean isBlock(Block block) {","lastModifiedDate":"2022-03-22"},{"lineNumber":116,"author":{"gitId":"tanchinkiat99"},"content":"        return this.block.equals(block);","lastModifiedDate":"2022-03-22"},{"lineNumber":117,"author":{"gitId":"jiale-c"},"content":"    }","lastModifiedDate":"2022-03-22"},{"lineNumber":118,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-03-22"},{"lineNumber":119,"author":{"gitId":"-"},"content":"    public Address getAddress() {","lastModifiedDate":"2017-07-12"},{"lineNumber":120,"author":{"gitId":"-"},"content":"        return address;","lastModifiedDate":"2017-12-20"},{"lineNumber":121,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-07-12"},{"lineNumber":122,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-03-07"},{"lineNumber":123,"author":{"gitId":"-"},"content":"     * Returns an immutable tag set, which throws {@code UnsupportedOperationException}","lastModifiedDate":"2017-03-07"},{"lineNumber":124,"author":{"gitId":"-"},"content":"     * if modification is attempted.","lastModifiedDate":"2017-03-07"},{"lineNumber":125,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-03-07"},{"lineNumber":126,"author":{"gitId":"-"},"content":"    public Set\u003cTag\u003e getTags() {","lastModifiedDate":"2017-03-07"},{"lineNumber":127,"author":{"gitId":"-"},"content":"        return Collections.unmodifiableSet(tags);","lastModifiedDate":"2018-03-26"},{"lineNumber":128,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-21"},{"lineNumber":129,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-04-19"},{"lineNumber":130,"author":{"gitId":"cwq2326"},"content":"     * Returns true if both persons have the same phone number or matriculation number or email","lastModifiedDate":"2022-03-18"},{"lineNumber":131,"author":{"gitId":"cwq2326"},"content":"     * This defines a stronger notion of equality between two persons.","lastModifiedDate":"2022-03-18"},{"lineNumber":132,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-04-19"},{"lineNumber":133,"author":{"gitId":"-"},"content":"    public boolean isSamePerson(Person otherPerson) {","lastModifiedDate":"2018-04-19"},{"lineNumber":134,"author":{"gitId":"-"},"content":"        if (otherPerson \u003d\u003d this) {","lastModifiedDate":"2018-04-19"},{"lineNumber":135,"author":{"gitId":"-"},"content":"            return true;","lastModifiedDate":"2018-04-19"},{"lineNumber":136,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-04-19"},{"lineNumber":137,"author":{"gitId":"-"},"content":"        return otherPerson !\u003d null","lastModifiedDate":"2018-04-19"},{"lineNumber":138,"author":{"gitId":"cwq2326"},"content":"                \u0026\u0026 (otherPerson.getPhone().equals(getPhone())","lastModifiedDate":"2022-03-18"},{"lineNumber":139,"author":{"gitId":"cwq2326"},"content":"                || otherPerson.getMatriculationNumber().equals(getMatriculationNumber())","lastModifiedDate":"2022-03-18"},{"lineNumber":140,"author":{"gitId":"cwq2326"},"content":"                || otherPerson.getEmail().equals(getEmail()));","lastModifiedDate":"2022-03-18"},{"lineNumber":141,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-04-19"},{"lineNumber":142,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-04-19"},{"lineNumber":143,"author":{"gitId":"-"},"content":"     * Returns true if both persons have the same identity and data fields.","lastModifiedDate":"2018-04-19"},{"lineNumber":144,"author":{"gitId":"-"},"content":"     * This defines a stronger notion of equality between two persons.","lastModifiedDate":"2018-04-19"},{"lineNumber":145,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-04-19"},{"lineNumber":146,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-24"},{"lineNumber":147,"author":{"gitId":"-"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2016-08-24"},{"lineNumber":148,"author":{"gitId":"-"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2018-01-10"},{"lineNumber":149,"author":{"gitId":"-"},"content":"            return true;","lastModifiedDate":"2018-01-10"},{"lineNumber":150,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-01-10"},{"lineNumber":151,"author":{"gitId":"-"},"content":"        if (!(other instanceof Person)) {","lastModifiedDate":"2018-01-10"},{"lineNumber":152,"author":{"gitId":"-"},"content":"            return false;","lastModifiedDate":"2018-01-10"},{"lineNumber":153,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-01-10"},{"lineNumber":154,"author":{"gitId":"-"},"content":"        Person otherPerson \u003d (Person) other;","lastModifiedDate":"2018-01-10"},{"lineNumber":155,"author":{"gitId":"-"},"content":"        return otherPerson.getName().equals(getName())","lastModifiedDate":"2018-08-14"},{"lineNumber":156,"author":{"gitId":"DannyDakota"},"content":"                \u0026\u0026 otherPerson.getBlock().equals(getBlock())","lastModifiedDate":"2022-03-17"},{"lineNumber":157,"author":{"gitId":"cwq2326"},"content":"                \u0026\u0026 otherPerson.getFaculty().equals(getFaculty())","lastModifiedDate":"2022-02-28"},{"lineNumber":158,"author":{"gitId":"-"},"content":"                \u0026\u0026 otherPerson.getPhone().equals(getPhone())","lastModifiedDate":"2018-08-14"},{"lineNumber":159,"author":{"gitId":"-"},"content":"                \u0026\u0026 otherPerson.getEmail().equals(getEmail())","lastModifiedDate":"2018-08-14"},{"lineNumber":160,"author":{"gitId":"-"},"content":"                \u0026\u0026 otherPerson.getAddress().equals(getAddress())","lastModifiedDate":"2018-08-14"},{"lineNumber":161,"author":{"gitId":"cwq2326"},"content":"                \u0026\u0026 otherPerson.getMatriculationNumber().equals(getMatriculationNumber())","lastModifiedDate":"2022-03-04"},{"lineNumber":162,"author":{"gitId":"cwq2326"},"content":"                \u0026\u0026 otherPerson.getStatus().equals(getStatus())","lastModifiedDate":"2022-03-04"},{"lineNumber":163,"author":{"gitId":"-"},"content":"                \u0026\u0026 otherPerson.getTags().equals(getTags());","lastModifiedDate":"2018-08-14"},{"lineNumber":164,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":165,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-24"},{"lineNumber":166,"author":{"gitId":"-"},"content":"    public int hashCode() {","lastModifiedDate":"2016-08-24"},{"lineNumber":167,"author":{"gitId":"-"},"content":"        // use this method for custom fields hashing instead of implementing your own","lastModifiedDate":"2016-08-24"},{"lineNumber":168,"author":{"gitId":"DannyDakota"},"content":"        return Objects.hash(name, block, faculty, phone, email, address, number, status, tags);","lastModifiedDate":"2022-03-17"},{"lineNumber":169,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":170,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-24"},{"lineNumber":171,"author":{"gitId":"-"},"content":"    public String toString() {","lastModifiedDate":"2016-08-24"},{"lineNumber":172,"author":{"gitId":"-"},"content":"        final StringBuilder builder \u003d new StringBuilder();","lastModifiedDate":"2018-01-10"},{"lineNumber":173,"author":{"gitId":"-"},"content":"        builder.append(getName())","lastModifiedDate":"2018-01-10"},{"lineNumber":174,"author":{"gitId":"DannyDakota"},"content":"                .append(\"; Block: \")","lastModifiedDate":"2022-03-17"},{"lineNumber":175,"author":{"gitId":"DannyDakota"},"content":"                .append(getBlock())","lastModifiedDate":"2022-03-17"},{"lineNumber":176,"author":{"gitId":"cwq2326"},"content":"                .append(\"; Faculty: \")","lastModifiedDate":"2022-02-28"},{"lineNumber":177,"author":{"gitId":"cwq2326"},"content":"                .append(getFaculty())","lastModifiedDate":"2022-02-28"},{"lineNumber":178,"author":{"gitId":"-"},"content":"                .append(\"; Phone: \")","lastModifiedDate":"2020-12-11"},{"lineNumber":179,"author":{"gitId":"-"},"content":"                .append(getPhone())","lastModifiedDate":"2018-01-10"},{"lineNumber":180,"author":{"gitId":"-"},"content":"                .append(\"; Email: \")","lastModifiedDate":"2020-12-11"},{"lineNumber":181,"author":{"gitId":"-"},"content":"                .append(getEmail())","lastModifiedDate":"2018-01-10"},{"lineNumber":182,"author":{"gitId":"-"},"content":"                .append(\"; Address: \")","lastModifiedDate":"2020-12-11"},{"lineNumber":183,"author":{"gitId":"cwq2326"},"content":"                .append(getAddress())","lastModifiedDate":"2022-02-28"},{"lineNumber":184,"author":{"gitId":"cwq2326"},"content":"                .append(\"; Matriculation Number: \")","lastModifiedDate":"2022-03-04"},{"lineNumber":185,"author":{"gitId":"cwq2326"},"content":"                .append(getMatriculationNumber())","lastModifiedDate":"2022-03-04"},{"lineNumber":186,"author":{"gitId":"cwq2326"},"content":"                .append(\"; Covid Status: \")","lastModifiedDate":"2022-02-28"},{"lineNumber":187,"author":{"gitId":"cwq2326"},"content":"                .append(getStatus());","lastModifiedDate":"2022-03-04"},{"lineNumber":188,"author":{"gitId":"-"},"content":"        Set\u003cTag\u003e tags \u003d getTags();","lastModifiedDate":"2020-12-11"},{"lineNumber":189,"author":{"gitId":"-"},"content":"        if (!tags.isEmpty()) {","lastModifiedDate":"2020-12-11"},{"lineNumber":190,"author":{"gitId":"-"},"content":"            builder.append(\"; Tags: \");","lastModifiedDate":"2020-12-11"},{"lineNumber":191,"author":{"gitId":"-"},"content":"            tags.forEach(builder::append);","lastModifiedDate":"2020-12-11"},{"lineNumber":192,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2020-12-11"},{"lineNumber":193,"author":{"gitId":"-"},"content":"        return builder.toString();","lastModifiedDate":"2018-01-10"},{"lineNumber":194,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":195,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-24"}],"authorContributionMap":{"tanchinkiat99":22,"DannyDakota":11,"cwq2326":32,"jiale-c":32,"-":98}},{"path":"src/main/java/seedu/address/model/person/Phone.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.model.person;","lastModifiedDate":"2016-08-24"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2017-05-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static seedu.address.commons.util.AppUtil.checkArgument;","lastModifiedDate":"2017-05-30"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":6,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-24"},{"lineNumber":7,"author":{"gitId":"DannyDakota"},"content":" * Represents a Person\u0027s phone number in Tracey.","lastModifiedDate":"2022-03-29"},{"lineNumber":8,"author":{"gitId":"-"},"content":" * Guarantees: immutable; is valid as declared in {@link #isValidPhone(String)}","lastModifiedDate":"2016-08-24"},{"lineNumber":9,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-24"},{"lineNumber":10,"author":{"gitId":"-"},"content":"public class Phone {","lastModifiedDate":"2016-09-21"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_CONSTRAINTS \u003d","lastModifiedDate":"2018-09-22"},{"lineNumber":14,"author":{"gitId":"-"},"content":"            \"Phone numbers should only contain numbers, and it should be at least 3 digits long\";","lastModifiedDate":"2018-04-04"},{"lineNumber":15,"author":{"gitId":"-"},"content":"    public static final String VALIDATION_REGEX \u003d \"\\\\d{3,}\";","lastModifiedDate":"2018-09-22"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    public final String value;","lastModifiedDate":"2016-08-24"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-24"},{"lineNumber":19,"author":{"gitId":"-"},"content":"     * Constructs a {@code Phone}.","lastModifiedDate":"2017-05-30"},{"lineNumber":20,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2016-08-24"},{"lineNumber":21,"author":{"gitId":"-"},"content":"     * @param phone A valid phone number.","lastModifiedDate":"2017-05-30"},{"lineNumber":22,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-24"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    public Phone(String phone) {","lastModifiedDate":"2017-05-30"},{"lineNumber":24,"author":{"gitId":"-"},"content":"        requireNonNull(phone);","lastModifiedDate":"2017-05-15"},{"lineNumber":25,"author":{"gitId":"-"},"content":"        checkArgument(isValidPhone(phone), MESSAGE_CONSTRAINTS);","lastModifiedDate":"2018-09-22"},{"lineNumber":26,"author":{"gitId":"-"},"content":"        value \u003d phone;","lastModifiedDate":"2018-08-14"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-24"},{"lineNumber":30,"author":{"gitId":"-"},"content":"     * Returns true if a given string is a valid phone number.","lastModifiedDate":"2018-04-05"},{"lineNumber":31,"author":{"gitId":"DannyDakota"},"content":"     *","lastModifiedDate":"2022-03-20"},{"lineNumber":32,"author":{"gitId":"DannyDakota"},"content":"     * @param test string to be tested to determine if valid Phone.","lastModifiedDate":"2022-03-20"},{"lineNumber":33,"author":{"gitId":"DannyDakota"},"content":"     * @return boolean where true if a given string is a valid phone, false otherwise.","lastModifiedDate":"2022-03-29"},{"lineNumber":34,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-24"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    public static boolean isValidPhone(String test) {","lastModifiedDate":"2016-08-24"},{"lineNumber":36,"author":{"gitId":"-"},"content":"        return test.matches(VALIDATION_REGEX);","lastModifiedDate":"2018-09-22"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":38,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-24"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    public String toString() {","lastModifiedDate":"2016-08-24"},{"lineNumber":41,"author":{"gitId":"-"},"content":"        return value;","lastModifiedDate":"2016-08-24"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":43,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-24"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2016-08-24"},{"lineNumber":46,"author":{"gitId":"-"},"content":"        return other \u003d\u003d this // short circuit if same object","lastModifiedDate":"2016-08-24"},{"lineNumber":47,"author":{"gitId":"-"},"content":"                || (other instanceof Phone // instanceof handles nulls","lastModifiedDate":"2016-08-24"},{"lineNumber":48,"author":{"gitId":"-"},"content":"                \u0026\u0026 value.equals(((Phone) other).value)); // state check","lastModifiedDate":"2018-08-14"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":50,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-24"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    public int hashCode() {","lastModifiedDate":"2016-08-24"},{"lineNumber":53,"author":{"gitId":"-"},"content":"        return value.hashCode();","lastModifiedDate":"2016-08-24"},{"lineNumber":54,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":55,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":56,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-24"}],"authorContributionMap":{"DannyDakota":4,"-":52}},{"path":"src/main/java/seedu/address/model/tag/Tag.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.model.tag;","lastModifiedDate":"2016-09-21"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2017-05-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static seedu.address.commons.util.AppUtil.checkArgument;","lastModifiedDate":"2017-05-30"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":6,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-24"},{"lineNumber":7,"author":{"gitId":"DannyDakota"},"content":" * Represents a Tag in Tracey.","lastModifiedDate":"2022-03-29"},{"lineNumber":8,"author":{"gitId":"-"},"content":" * Guarantees: immutable; name is valid as declared in {@link #isValidTagName(String)}","lastModifiedDate":"2016-08-24"},{"lineNumber":9,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-24"},{"lineNumber":10,"author":{"gitId":"-"},"content":"public class Tag {","lastModifiedDate":"2016-08-24"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_CONSTRAINTS \u003d \"Tags names should be alphanumeric\";","lastModifiedDate":"2018-09-22"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    public static final String VALIDATION_REGEX \u003d \"\\\\p{Alnum}+\";","lastModifiedDate":"2018-09-22"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":15,"author":{"gitId":"-"},"content":"    public final String tagName;","lastModifiedDate":"2016-10-19"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-24"},{"lineNumber":18,"author":{"gitId":"-"},"content":"     * Constructs a {@code Tag}.","lastModifiedDate":"2017-05-30"},{"lineNumber":19,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2016-08-24"},{"lineNumber":20,"author":{"gitId":"-"},"content":"     * @param tagName A valid tag name.","lastModifiedDate":"2017-05-30"},{"lineNumber":21,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-24"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    public Tag(String tagName) {","lastModifiedDate":"2017-05-30"},{"lineNumber":23,"author":{"gitId":"-"},"content":"        requireNonNull(tagName);","lastModifiedDate":"2017-05-30"},{"lineNumber":24,"author":{"gitId":"-"},"content":"        checkArgument(isValidTagName(tagName), MESSAGE_CONSTRAINTS);","lastModifiedDate":"2018-09-22"},{"lineNumber":25,"author":{"gitId":"-"},"content":"        this.tagName \u003d tagName;","lastModifiedDate":"2017-05-30"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-24"},{"lineNumber":29,"author":{"gitId":"-"},"content":"     * Returns true if a given string is a valid tag name.","lastModifiedDate":"2016-09-22"},{"lineNumber":30,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-24"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    public static boolean isValidTagName(String test) {","lastModifiedDate":"2016-08-24"},{"lineNumber":32,"author":{"gitId":"-"},"content":"        return test.matches(VALIDATION_REGEX);","lastModifiedDate":"2018-09-22"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-24"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2016-08-24"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        return other \u003d\u003d this // short circuit if same object","lastModifiedDate":"2016-08-24"},{"lineNumber":38,"author":{"gitId":"-"},"content":"                || (other instanceof Tag // instanceof handles nulls","lastModifiedDate":"2016-08-24"},{"lineNumber":39,"author":{"gitId":"-"},"content":"                \u0026\u0026 tagName.equals(((Tag) other).tagName)); // state check","lastModifiedDate":"2018-08-14"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-24"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    public int hashCode() {","lastModifiedDate":"2016-08-24"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        return tagName.hashCode();","lastModifiedDate":"2016-08-24"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":46,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-24"},{"lineNumber":48,"author":{"gitId":"-"},"content":"     * Format state as text for viewing.","lastModifiedDate":"2016-08-24"},{"lineNumber":49,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-24"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    public String toString() {","lastModifiedDate":"2016-08-24"},{"lineNumber":51,"author":{"gitId":"-"},"content":"        return \u0027[\u0027 + tagName + \u0027]\u0027;","lastModifiedDate":"2016-08-24"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":53,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":54,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-24"}],"authorContributionMap":{"DannyDakota":1,"-":53}},{"path":"src/main/java/seedu/address/model/util/SampleDataUtil.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.model.util;","lastModifiedDate":"2016-12-20"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-20"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.util.Arrays;","lastModifiedDate":"2018-01-21"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import java.util.Set;","lastModifiedDate":"2017-03-14"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.util.stream.Collectors;","lastModifiedDate":"2018-01-21"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-14"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import seedu.address.model.AddressBook;","lastModifiedDate":"2016-12-20"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import seedu.address.model.ReadOnlyAddressBook;","lastModifiedDate":"2016-12-20"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Address;","lastModifiedDate":"2016-12-20"},{"lineNumber":10,"author":{"gitId":"DannyDakota"},"content":"import seedu.address.model.person.Block;","lastModifiedDate":"2022-03-17"},{"lineNumber":11,"author":{"gitId":"cwq2326"},"content":"import seedu.address.model.person.CovidStatus;","lastModifiedDate":"2022-02-28"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Email;","lastModifiedDate":"2016-12-20"},{"lineNumber":13,"author":{"gitId":"cwq2326"},"content":"import seedu.address.model.person.Faculty;","lastModifiedDate":"2022-02-28"},{"lineNumber":14,"author":{"gitId":"cwq2326"},"content":"import seedu.address.model.person.MatriculationNumber;","lastModifiedDate":"2022-02-28"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Name;","lastModifiedDate":"2016-12-20"},{"lineNumber":16,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2016-12-20"},{"lineNumber":17,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Phone;","lastModifiedDate":"2016-12-20"},{"lineNumber":18,"author":{"gitId":"-"},"content":"import seedu.address.model.tag.Tag;","lastModifiedDate":"2017-03-14"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-20"},{"lineNumber":20,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-08-16"},{"lineNumber":21,"author":{"gitId":"-"},"content":" * Contains utility methods for populating {@code AddressBook} with sample data.","lastModifiedDate":"2017-08-16"},{"lineNumber":22,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-08-16"},{"lineNumber":23,"author":{"gitId":"-"},"content":"public class SampleDataUtil {","lastModifiedDate":"2016-12-20"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    public static Person[] getSamplePersons() {","lastModifiedDate":"2016-12-20"},{"lineNumber":25,"author":{"gitId":"-"},"content":"        return new Person[]{","lastModifiedDate":"2016-12-20"},{"lineNumber":26,"author":{"gitId":"DannyDakota"},"content":"            new Person(new Name(\"Alex Yeoh\"), new Block(\"A\"), new Faculty(\"SOC\"), new Phone(\"87438807\"),","lastModifiedDate":"2022-03-17"},{"lineNumber":27,"author":{"gitId":"cwq2326"},"content":"                        new Email(\"alexyeoh@example.com\"), new Address(\"Blk 30 Geylang Street 29, #06-40\"),","lastModifiedDate":"2022-02-28"},{"lineNumber":28,"author":{"gitId":"DannyDakota"},"content":"                        new MatriculationNumber(\"a1234567m\"), new CovidStatus(\"hrn\"), getTagSet(\"friends\")),","lastModifiedDate":"2022-03-18"},{"lineNumber":29,"author":{"gitId":"DannyDakota"},"content":"            new Person(new Name(\"Bernice Yu\"), new Block(\"A\"), new Faculty(\"FOS\"), new Phone(\"99272758\"),","lastModifiedDate":"2022-03-17"},{"lineNumber":30,"author":{"gitId":"cwq2326"},"content":"                        new Email(\"berniceyu@example.com\"), new Address(\"Blk 30 Lorong 3 Serangoon Gardens, #07-18\"),","lastModifiedDate":"2022-02-28"},{"lineNumber":31,"author":{"gitId":"cwq2326"},"content":"                        new MatriculationNumber(\"a7364736m\"), new CovidStatus(\"negative\"),","lastModifiedDate":"2022-02-28"},{"lineNumber":32,"author":{"gitId":"-"},"content":"                        getTagSet(\"colleagues\", \"friends\")),","lastModifiedDate":"2017-03-14"},{"lineNumber":33,"author":{"gitId":"DannyDakota"},"content":"            new Person(new Name(\"Charlotte Oliveiro\"), new Block(\"B\"), new Faculty(\"FOD\"), new Phone(\"93210283\"),","lastModifiedDate":"2022-03-17"},{"lineNumber":34,"author":{"gitId":"cwq2326"},"content":"                        new Email(\"charlotte@example.com\"), new Address(\"Blk 11 Ang Mo Kio Street 74, #11-04\"),","lastModifiedDate":"2022-02-28"},{"lineNumber":35,"author":{"gitId":"cwq2326"},"content":"                        new MatriculationNumber(\"a4724567m\"), new CovidStatus(\"hrn\"), getTagSet(\"neighbours\")),","lastModifiedDate":"2022-02-28"},{"lineNumber":36,"author":{"gitId":"DannyDakota"},"content":"            new Person(new Name(\"David Li\"), new Block(\"C\"), new Faculty(\"FOL\"), new Phone(\"91031282\"),","lastModifiedDate":"2022-03-17"},{"lineNumber":37,"author":{"gitId":"cwq2326"},"content":"                        new Email(\"lidavid@example.com\"), new Address(\"Blk 436 Serangoon Gardens Street 26, #16-43\"),","lastModifiedDate":"2022-02-28"},{"lineNumber":38,"author":{"gitId":"cwq2326"},"content":"                        new MatriculationNumber(\"a1234423m\"), new CovidStatus(\"negative\"), getTagSet(\"family\")),","lastModifiedDate":"2022-02-28"},{"lineNumber":39,"author":{"gitId":"DannyDakota"},"content":"            new Person(new Name(\"Irfan Ibrahim\"), new Block(\"D\"), new Faculty(\"FASS\"), new Phone(\"92492021\"),","lastModifiedDate":"2022-03-17"},{"lineNumber":40,"author":{"gitId":"cwq2326"},"content":"                        new Email(\"irfan@example.com\"), new Address(\"Blk 47 Tampines Street 20, #17-35\"),","lastModifiedDate":"2022-02-28"},{"lineNumber":41,"author":{"gitId":"DannyDakota"},"content":"                        new MatriculationNumber(\"a6374567m\"), new CovidStatus(\"hrn\"),","lastModifiedDate":"2022-03-18"},{"lineNumber":42,"author":{"gitId":"-"},"content":"                        getTagSet(\"classmates\")),","lastModifiedDate":"2017-03-14"},{"lineNumber":43,"author":{"gitId":"DannyDakota"},"content":"            new Person(new Name(\"Roy Balakrishnan\"), new Block(\"E\"), new Faculty(\"BIZ\"), new Phone(\"92624417\"),","lastModifiedDate":"2022-03-17"},{"lineNumber":44,"author":{"gitId":"cwq2326"},"content":"                        new Email(\"royb@example.com\"), new Address(\"Blk 45 Aljunied Street 85, #11-31\"),","lastModifiedDate":"2022-02-28"},{"lineNumber":45,"author":{"gitId":"DannyDakota"},"content":"                        new MatriculationNumber(\"a8273645m\"), new CovidStatus(\"positive\"),","lastModifiedDate":"2022-03-30"},{"lineNumber":46,"author":{"gitId":"DannyDakota"},"content":"                    getTagSet(\"colleagues\")),","lastModifiedDate":"2022-03-30"},{"lineNumber":47,"author":{"gitId":"DannyDakota"},"content":"            new Person(new Name(\"Vivian Alex\"), new Block(\"E\"), new Faculty(\"SOC\"), new Phone(\"94482014\"),","lastModifiedDate":"2022-03-30"},{"lineNumber":48,"author":{"gitId":"DannyDakota"},"content":"                        new Email(\"Viviana@hotmail.com\"), new Address(\"33 Crescent Way\"),","lastModifiedDate":"2022-03-30"},{"lineNumber":49,"author":{"gitId":"DannyDakota"},"content":"                        new MatriculationNumber(\"a0215656g\"), new CovidStatus(\"HRN\"), getTagSet(\"Leader\")),","lastModifiedDate":"2022-03-30"},{"lineNumber":50,"author":{"gitId":"DannyDakota"},"content":"            new Person(new Name(\"Michael Alex\"), new Block(\"D\"), new Faculty(\"BIZ\"), new Phone(\"94405502\"),","lastModifiedDate":"2022-03-30"},{"lineNumber":51,"author":{"gitId":"DannyDakota"},"content":"                        new Email(\"MichaelHandsome@hotmail.com\"), new Address(\"33 Pasir Ris Drive\"),","lastModifiedDate":"2022-03-30"},{"lineNumber":52,"author":{"gitId":"DannyDakota"},"content":"                        new MatriculationNumber(\"a0113432e\"), new CovidStatus(\"positive\"),","lastModifiedDate":"2022-03-30"},{"lineNumber":53,"author":{"gitId":"DannyDakota"},"content":"                    getTagSet(\"Leader\")),","lastModifiedDate":"2022-03-30"},{"lineNumber":54,"author":{"gitId":"DannyDakota"},"content":"            new Person(new Name(\"Alex Ferguson\"), new Block(\"C\"), new Faculty(\"FOL\"), new Phone(\"87880914\"),","lastModifiedDate":"2022-03-30"},{"lineNumber":55,"author":{"gitId":"DannyDakota"},"content":"                        new Email(\"heyalexa@gmail.com\"), new Address(\"12 Kent Ridge Drive, #22-22\"),","lastModifiedDate":"2022-03-30"},{"lineNumber":56,"author":{"gitId":"DannyDakota"},"content":"                        new MatriculationNumber(\"a0014988b\"), new CovidStatus(\"HRN\"), getTagSet(\"Leader\")),","lastModifiedDate":"2022-03-30"},{"lineNumber":57,"author":{"gitId":"DannyDakota"},"content":"            new Person(new Name(\"Jurgen Klopp\"), new Block(\"E\"), new Faculty(\"FASS\"), new Phone(\"92882028\"),","lastModifiedDate":"2022-03-30"},{"lineNumber":58,"author":{"gitId":"DannyDakota"},"content":"                        new Email(\"champs@ynwa.com\"), new Address(\"74 Serangoon Avenue, #9-18\"),","lastModifiedDate":"2022-03-30"},{"lineNumber":59,"author":{"gitId":"DannyDakota"},"content":"                        new MatriculationNumber(\"a0436372e\"), new CovidStatus(\"negative\"), getTagSet(\"Leader\"))","lastModifiedDate":"2022-03-30"},{"lineNumber":60,"author":{"gitId":"-"},"content":"        };","lastModifiedDate":"2016-12-20"},{"lineNumber":61,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-20"},{"lineNumber":62,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-20"},{"lineNumber":63,"author":{"gitId":"-"},"content":"    public static ReadOnlyAddressBook getSampleAddressBook() {","lastModifiedDate":"2016-12-20"},{"lineNumber":64,"author":{"gitId":"-"},"content":"        AddressBook sampleAb \u003d new AddressBook();","lastModifiedDate":"2017-04-07"},{"lineNumber":65,"author":{"gitId":"-"},"content":"        for (Person samplePerson : getSamplePersons()) {","lastModifiedDate":"2016-12-20"},{"lineNumber":66,"author":{"gitId":"-"},"content":"            sampleAb.addPerson(samplePerson);","lastModifiedDate":"2017-04-07"},{"lineNumber":67,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-12-20"},{"lineNumber":68,"author":{"gitId":"-"},"content":"        return sampleAb;","lastModifiedDate":"2017-04-07"},{"lineNumber":69,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-20"},{"lineNumber":70,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-14"},{"lineNumber":71,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-03-14"},{"lineNumber":72,"author":{"gitId":"-"},"content":"     * Returns a tag set containing the list of strings given.","lastModifiedDate":"2017-03-14"},{"lineNumber":73,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-03-14"},{"lineNumber":74,"author":{"gitId":"-"},"content":"    public static Set\u003cTag\u003e getTagSet(String... strings) {","lastModifiedDate":"2017-05-30"},{"lineNumber":75,"author":{"gitId":"-"},"content":"        return Arrays.stream(strings)","lastModifiedDate":"2018-01-21"},{"lineNumber":76,"author":{"gitId":"-"},"content":"                .map(Tag::new)","lastModifiedDate":"2018-01-21"},{"lineNumber":77,"author":{"gitId":"-"},"content":"                .collect(Collectors.toSet());","lastModifiedDate":"2018-01-21"},{"lineNumber":78,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-03-14"},{"lineNumber":79,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-14"},{"lineNumber":80,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-12-20"}],"authorContributionMap":{"DannyDakota":24,"cwq2326":12,"-":44}},{"path":"src/main/java/seedu/address/storage/JsonAdaptedPerson.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.storage;","lastModifiedDate":"2018-08-13"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.util.ArrayList;","lastModifiedDate":"2018-08-13"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import java.util.HashSet;","lastModifiedDate":"2018-08-13"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.util.List;","lastModifiedDate":"2018-08-13"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.util.Set;","lastModifiedDate":"2018-08-13"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import java.util.stream.Collectors;","lastModifiedDate":"2018-08-13"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import com.fasterxml.jackson.annotation.JsonCreator;","lastModifiedDate":"2018-08-13"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import com.fasterxml.jackson.annotation.JsonProperty;","lastModifiedDate":"2018-08-13"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import seedu.address.commons.exceptions.IllegalValueException;","lastModifiedDate":"2018-08-13"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Address;","lastModifiedDate":"2018-08-13"},{"lineNumber":14,"author":{"gitId":"DannyDakota"},"content":"import seedu.address.model.person.Block;","lastModifiedDate":"2022-03-17"},{"lineNumber":15,"author":{"gitId":"cwq2326"},"content":"import seedu.address.model.person.CovidStatus;","lastModifiedDate":"2022-02-28"},{"lineNumber":16,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Email;","lastModifiedDate":"2018-08-13"},{"lineNumber":17,"author":{"gitId":"cwq2326"},"content":"import seedu.address.model.person.Faculty;","lastModifiedDate":"2022-02-28"},{"lineNumber":18,"author":{"gitId":"cwq2326"},"content":"import seedu.address.model.person.MatriculationNumber;","lastModifiedDate":"2022-02-28"},{"lineNumber":19,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Name;","lastModifiedDate":"2018-08-13"},{"lineNumber":20,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2018-08-13"},{"lineNumber":21,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Phone;","lastModifiedDate":"2018-08-13"},{"lineNumber":22,"author":{"gitId":"-"},"content":"import seedu.address.model.tag.Tag;","lastModifiedDate":"2018-08-13"},{"lineNumber":23,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":24,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2018-08-13"},{"lineNumber":25,"author":{"gitId":"-"},"content":" * Jackson-friendly version of {@link Person}.","lastModifiedDate":"2018-08-13"},{"lineNumber":26,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2018-08-13"},{"lineNumber":27,"author":{"gitId":"-"},"content":"class JsonAdaptedPerson {","lastModifiedDate":"2018-12-03"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    public static final String MISSING_FIELD_MESSAGE_FORMAT \u003d \"Person\u0027s %s field is missing!\";","lastModifiedDate":"2018-08-13"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    private final String name;","lastModifiedDate":"2018-08-13"},{"lineNumber":32,"author":{"gitId":"DannyDakota"},"content":"    private final String block;","lastModifiedDate":"2022-03-17"},{"lineNumber":33,"author":{"gitId":"cwq2326"},"content":"    private final String faculty;","lastModifiedDate":"2022-02-28"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    private final String phone;","lastModifiedDate":"2018-08-13"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    private final String email;","lastModifiedDate":"2018-08-13"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    private final String address;","lastModifiedDate":"2018-08-13"},{"lineNumber":37,"author":{"gitId":"cwq2326"},"content":"    private final String number;","lastModifiedDate":"2022-02-28"},{"lineNumber":38,"author":{"gitId":"cwq2326"},"content":"    private final String status;","lastModifiedDate":"2022-02-28"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    private final List\u003cJsonAdaptedTag\u003e tagged \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2018-08-13"},{"lineNumber":40,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-08-13"},{"lineNumber":42,"author":{"gitId":"-"},"content":"     * Constructs a {@code JsonAdaptedPerson} with the given person details.","lastModifiedDate":"2018-08-13"},{"lineNumber":43,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-08-13"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    @JsonCreator","lastModifiedDate":"2018-08-13"},{"lineNumber":45,"author":{"gitId":"DannyDakota"},"content":"    public JsonAdaptedPerson(@JsonProperty(\"name\") String name,","lastModifiedDate":"2022-03-17"},{"lineNumber":46,"author":{"gitId":"DannyDakota"},"content":"                             @JsonProperty(\"block\") String block,","lastModifiedDate":"2022-03-17"},{"lineNumber":47,"author":{"gitId":"DannyDakota"},"content":"                             @JsonProperty(\"faculty\") String faculty,","lastModifiedDate":"2022-03-17"},{"lineNumber":48,"author":{"gitId":"cwq2326"},"content":"                             @JsonProperty(\"phone\") String phone,","lastModifiedDate":"2022-02-28"},{"lineNumber":49,"author":{"gitId":"-"},"content":"                             @JsonProperty(\"email\") String email, @JsonProperty(\"address\") String address,","lastModifiedDate":"2018-08-13"},{"lineNumber":50,"author":{"gitId":"cwq2326"},"content":"                             @JsonProperty(\"number\") String number, @JsonProperty(\"status\") String status,","lastModifiedDate":"2022-02-28"},{"lineNumber":51,"author":{"gitId":"-"},"content":"                             @JsonProperty(\"tagged\") List\u003cJsonAdaptedTag\u003e tagged) {","lastModifiedDate":"2018-08-13"},{"lineNumber":52,"author":{"gitId":"-"},"content":"        this.name \u003d name;","lastModifiedDate":"2018-08-13"},{"lineNumber":53,"author":{"gitId":"DannyDakota"},"content":"        this.block \u003d block;","lastModifiedDate":"2022-03-17"},{"lineNumber":54,"author":{"gitId":"cwq2326"},"content":"        this.faculty \u003d faculty;","lastModifiedDate":"2022-02-28"},{"lineNumber":55,"author":{"gitId":"-"},"content":"        this.phone \u003d phone;","lastModifiedDate":"2018-08-13"},{"lineNumber":56,"author":{"gitId":"-"},"content":"        this.email \u003d email;","lastModifiedDate":"2018-08-13"},{"lineNumber":57,"author":{"gitId":"-"},"content":"        this.address \u003d address;","lastModifiedDate":"2018-08-13"},{"lineNumber":58,"author":{"gitId":"cwq2326"},"content":"        this.number \u003d number;","lastModifiedDate":"2022-02-28"},{"lineNumber":59,"author":{"gitId":"cwq2326"},"content":"        this.status \u003d status;","lastModifiedDate":"2022-02-28"},{"lineNumber":60,"author":{"gitId":"-"},"content":"        if (tagged !\u003d null) {","lastModifiedDate":"2018-08-13"},{"lineNumber":61,"author":{"gitId":"-"},"content":"            this.tagged.addAll(tagged);","lastModifiedDate":"2018-08-13"},{"lineNumber":62,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-08-13"},{"lineNumber":63,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":64,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":65,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-08-13"},{"lineNumber":66,"author":{"gitId":"-"},"content":"     * Converts a given {@code Person} into this class for Jackson use.","lastModifiedDate":"2018-08-13"},{"lineNumber":67,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-08-13"},{"lineNumber":68,"author":{"gitId":"-"},"content":"    public JsonAdaptedPerson(Person source) {","lastModifiedDate":"2018-08-13"},{"lineNumber":69,"author":{"gitId":"-"},"content":"        name \u003d source.getName().fullName;","lastModifiedDate":"2018-08-13"},{"lineNumber":70,"author":{"gitId":"DannyDakota"},"content":"        block \u003d source.getBlock().studentBlock;","lastModifiedDate":"2022-03-17"},{"lineNumber":71,"author":{"gitId":"cwq2326"},"content":"        faculty \u003d source.getFaculty().studentFaculty;","lastModifiedDate":"2022-02-28"},{"lineNumber":72,"author":{"gitId":"-"},"content":"        phone \u003d source.getPhone().value;","lastModifiedDate":"2018-08-13"},{"lineNumber":73,"author":{"gitId":"-"},"content":"        email \u003d source.getEmail().value;","lastModifiedDate":"2018-08-13"},{"lineNumber":74,"author":{"gitId":"-"},"content":"        address \u003d source.getAddress().value;","lastModifiedDate":"2018-08-13"},{"lineNumber":75,"author":{"gitId":"cwq2326"},"content":"        number \u003d source.getMatriculationNumber().value;","lastModifiedDate":"2022-02-28"},{"lineNumber":76,"author":{"gitId":"cwq2326"},"content":"        status \u003d source.getStatus().covidStatus;","lastModifiedDate":"2022-02-28"},{"lineNumber":77,"author":{"gitId":"-"},"content":"        tagged.addAll(source.getTags().stream()","lastModifiedDate":"2018-08-13"},{"lineNumber":78,"author":{"gitId":"-"},"content":"                .map(JsonAdaptedTag::new)","lastModifiedDate":"2018-08-13"},{"lineNumber":79,"author":{"gitId":"-"},"content":"                .collect(Collectors.toList()));","lastModifiedDate":"2018-08-13"},{"lineNumber":80,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":81,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":82,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-08-13"},{"lineNumber":83,"author":{"gitId":"-"},"content":"     * Converts this Jackson-friendly adapted person object into the model\u0027s {@code Person} object.","lastModifiedDate":"2018-08-13"},{"lineNumber":84,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2018-08-13"},{"lineNumber":85,"author":{"gitId":"-"},"content":"     * @throws IllegalValueException if there were any data constraints violated in the adapted person.","lastModifiedDate":"2018-08-13"},{"lineNumber":86,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-08-13"},{"lineNumber":87,"author":{"gitId":"-"},"content":"    public Person toModelType() throws IllegalValueException {","lastModifiedDate":"2018-08-13"},{"lineNumber":88,"author":{"gitId":"-"},"content":"        final List\u003cTag\u003e personTags \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2018-08-13"},{"lineNumber":89,"author":{"gitId":"-"},"content":"        for (JsonAdaptedTag tag : tagged) {","lastModifiedDate":"2018-08-13"},{"lineNumber":90,"author":{"gitId":"-"},"content":"            personTags.add(tag.toModelType());","lastModifiedDate":"2018-08-13"},{"lineNumber":91,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-08-13"},{"lineNumber":92,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":93,"author":{"gitId":"-"},"content":"        if (name \u003d\u003d null) {","lastModifiedDate":"2018-08-13"},{"lineNumber":94,"author":{"gitId":"-"},"content":"            throw new IllegalValueException(String.format(MISSING_FIELD_MESSAGE_FORMAT, Name.class.getSimpleName()));","lastModifiedDate":"2018-08-13"},{"lineNumber":95,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-08-13"},{"lineNumber":96,"author":{"gitId":"-"},"content":"        if (!Name.isValidName(name)) {","lastModifiedDate":"2018-08-13"},{"lineNumber":97,"author":{"gitId":"-"},"content":"            throw new IllegalValueException(Name.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2018-08-13"},{"lineNumber":98,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-08-13"},{"lineNumber":99,"author":{"gitId":"-"},"content":"        final Name modelName \u003d new Name(name);","lastModifiedDate":"2018-08-13"},{"lineNumber":100,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":101,"author":{"gitId":"DannyDakota"},"content":"        if (block \u003d\u003d null) {","lastModifiedDate":"2022-03-17"},{"lineNumber":102,"author":{"gitId":"DannyDakota"},"content":"            throw new IllegalValueException(String.format(MISSING_FIELD_MESSAGE_FORMAT, Block.class.getSimpleName()));","lastModifiedDate":"2022-03-17"},{"lineNumber":103,"author":{"gitId":"DannyDakota"},"content":"        }","lastModifiedDate":"2022-03-17"},{"lineNumber":104,"author":{"gitId":"DannyDakota"},"content":"        if (!Block.isValidBlock(block)) {","lastModifiedDate":"2022-03-17"},{"lineNumber":105,"author":{"gitId":"DannyDakota"},"content":"            throw new IllegalValueException(Block.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2022-03-17"},{"lineNumber":106,"author":{"gitId":"DannyDakota"},"content":"        }","lastModifiedDate":"2022-03-17"},{"lineNumber":107,"author":{"gitId":"DannyDakota"},"content":"        final Block modelBlock \u003d new Block(block);","lastModifiedDate":"2022-03-17"},{"lineNumber":108,"author":{"gitId":"DannyDakota"},"content":"","lastModifiedDate":"2022-03-17"},{"lineNumber":109,"author":{"gitId":"cwq2326"},"content":"        if (faculty \u003d\u003d null) {","lastModifiedDate":"2022-02-28"},{"lineNumber":110,"author":{"gitId":"cwq2326"},"content":"            throw new IllegalValueException(String.format(MISSING_FIELD_MESSAGE_FORMAT, Faculty.class.getSimpleName()));","lastModifiedDate":"2022-02-28"},{"lineNumber":111,"author":{"gitId":"cwq2326"},"content":"        }","lastModifiedDate":"2022-02-28"},{"lineNumber":112,"author":{"gitId":"cwq2326"},"content":"","lastModifiedDate":"2022-02-28"},{"lineNumber":113,"author":{"gitId":"cwq2326"},"content":"        if (!Faculty.isValidFaculty(faculty)) {","lastModifiedDate":"2022-02-28"},{"lineNumber":114,"author":{"gitId":"cwq2326"},"content":"            throw new IllegalValueException(Faculty.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2022-02-28"},{"lineNumber":115,"author":{"gitId":"cwq2326"},"content":"        }","lastModifiedDate":"2022-02-28"},{"lineNumber":116,"author":{"gitId":"cwq2326"},"content":"        final Faculty modelFaculty \u003d new Faculty(faculty);","lastModifiedDate":"2022-02-28"},{"lineNumber":117,"author":{"gitId":"cwq2326"},"content":"","lastModifiedDate":"2022-02-28"},{"lineNumber":118,"author":{"gitId":"-"},"content":"        if (phone \u003d\u003d null) {","lastModifiedDate":"2018-08-13"},{"lineNumber":119,"author":{"gitId":"-"},"content":"            throw new IllegalValueException(String.format(MISSING_FIELD_MESSAGE_FORMAT, Phone.class.getSimpleName()));","lastModifiedDate":"2018-08-13"},{"lineNumber":120,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-08-13"},{"lineNumber":121,"author":{"gitId":"-"},"content":"        if (!Phone.isValidPhone(phone)) {","lastModifiedDate":"2018-08-13"},{"lineNumber":122,"author":{"gitId":"-"},"content":"            throw new IllegalValueException(Phone.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2018-08-13"},{"lineNumber":123,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-08-13"},{"lineNumber":124,"author":{"gitId":"-"},"content":"        final Phone modelPhone \u003d new Phone(phone);","lastModifiedDate":"2018-08-13"},{"lineNumber":125,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":126,"author":{"gitId":"-"},"content":"        if (email \u003d\u003d null) {","lastModifiedDate":"2018-08-13"},{"lineNumber":127,"author":{"gitId":"-"},"content":"            throw new IllegalValueException(String.format(MISSING_FIELD_MESSAGE_FORMAT, Email.class.getSimpleName()));","lastModifiedDate":"2018-08-13"},{"lineNumber":128,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-08-13"},{"lineNumber":129,"author":{"gitId":"-"},"content":"        if (!Email.isValidEmail(email)) {","lastModifiedDate":"2018-08-13"},{"lineNumber":130,"author":{"gitId":"-"},"content":"            throw new IllegalValueException(Email.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2018-08-13"},{"lineNumber":131,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-08-13"},{"lineNumber":132,"author":{"gitId":"-"},"content":"        final Email modelEmail \u003d new Email(email);","lastModifiedDate":"2018-08-13"},{"lineNumber":133,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":134,"author":{"gitId":"-"},"content":"        if (address \u003d\u003d null) {","lastModifiedDate":"2018-08-13"},{"lineNumber":135,"author":{"gitId":"-"},"content":"            throw new IllegalValueException(String.format(MISSING_FIELD_MESSAGE_FORMAT, Address.class.getSimpleName()));","lastModifiedDate":"2018-08-13"},{"lineNumber":136,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-08-13"},{"lineNumber":137,"author":{"gitId":"-"},"content":"        if (!Address.isValidAddress(address)) {","lastModifiedDate":"2018-08-13"},{"lineNumber":138,"author":{"gitId":"-"},"content":"            throw new IllegalValueException(Address.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2018-08-13"},{"lineNumber":139,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-08-13"},{"lineNumber":140,"author":{"gitId":"-"},"content":"        final Address modelAddress \u003d new Address(address);","lastModifiedDate":"2018-08-13"},{"lineNumber":141,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":142,"author":{"gitId":"cwq2326"},"content":"        if (number \u003d\u003d null) {","lastModifiedDate":"2022-02-28"},{"lineNumber":143,"author":{"gitId":"cwq2326"},"content":"            throw new IllegalValueException(String.format(MISSING_FIELD_MESSAGE_FORMAT,","lastModifiedDate":"2022-02-28"},{"lineNumber":144,"author":{"gitId":"cwq2326"},"content":"                    MatriculationNumber.class.getSimpleName()));","lastModifiedDate":"2022-02-28"},{"lineNumber":145,"author":{"gitId":"cwq2326"},"content":"        }","lastModifiedDate":"2022-02-28"},{"lineNumber":146,"author":{"gitId":"cwq2326"},"content":"        if (!MatriculationNumber.isValidMatriculationNumber(number)) {","lastModifiedDate":"2022-02-28"},{"lineNumber":147,"author":{"gitId":"cwq2326"},"content":"            throw new IllegalValueException(MatriculationNumber.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2022-02-28"},{"lineNumber":148,"author":{"gitId":"cwq2326"},"content":"        }","lastModifiedDate":"2022-02-28"},{"lineNumber":149,"author":{"gitId":"cwq2326"},"content":"        final MatriculationNumber matriculationNumber \u003d new MatriculationNumber(number);","lastModifiedDate":"2022-02-28"},{"lineNumber":150,"author":{"gitId":"cwq2326"},"content":"","lastModifiedDate":"2022-02-28"},{"lineNumber":151,"author":{"gitId":"cwq2326"},"content":"        if (status \u003d\u003d null) {","lastModifiedDate":"2022-02-28"},{"lineNumber":152,"author":{"gitId":"cwq2326"},"content":"            throw new IllegalValueException(String.format(MISSING_FIELD_MESSAGE_FORMAT,","lastModifiedDate":"2022-02-28"},{"lineNumber":153,"author":{"gitId":"cwq2326"},"content":"                    CovidStatus.class.getSimpleName()));","lastModifiedDate":"2022-02-28"},{"lineNumber":154,"author":{"gitId":"cwq2326"},"content":"        }","lastModifiedDate":"2022-02-28"},{"lineNumber":155,"author":{"gitId":"DannyDakota"},"content":"        if (!CovidStatus.isValidCovidStatus(status)) {","lastModifiedDate":"2022-03-08"},{"lineNumber":156,"author":{"gitId":"cwq2326"},"content":"            throw new IllegalValueException(CovidStatus.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2022-02-28"},{"lineNumber":157,"author":{"gitId":"cwq2326"},"content":"        }","lastModifiedDate":"2022-02-28"},{"lineNumber":158,"author":{"gitId":"cwq2326"},"content":"        final CovidStatus covidStatus \u003d new CovidStatus(status);","lastModifiedDate":"2022-02-28"},{"lineNumber":159,"author":{"gitId":"cwq2326"},"content":"","lastModifiedDate":"2022-02-28"},{"lineNumber":160,"author":{"gitId":"-"},"content":"        final Set\u003cTag\u003e modelTags \u003d new HashSet\u003c\u003e(personTags);","lastModifiedDate":"2018-08-13"},{"lineNumber":161,"author":{"gitId":"DannyDakota"},"content":"        return new Person(modelName, modelBlock, modelFaculty, modelPhone, modelEmail, modelAddress,","lastModifiedDate":"2022-03-17"},{"lineNumber":162,"author":{"gitId":"DannyDakota"},"content":"                matriculationNumber, covidStatus, modelTags);","lastModifiedDate":"2022-03-17"},{"lineNumber":163,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":164,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":165,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2018-08-13"}],"authorContributionMap":{"DannyDakota":18,"cwq2326":40,"-":107}},{"path":"src/main/java/seedu/address/ui/ActionBar.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"DannyDakota"},"content":"package seedu.address.ui;","lastModifiedDate":"2022-03-22"},{"lineNumber":2,"author":{"gitId":"DannyDakota"},"content":"","lastModifiedDate":"2022-03-22"},{"lineNumber":3,"author":{"gitId":"DannyDakota"},"content":"import javafx.fxml.FXML;","lastModifiedDate":"2022-03-22"},{"lineNumber":4,"author":{"gitId":"DannyDakota"},"content":"import javafx.scene.layout.Region;","lastModifiedDate":"2022-03-22"},{"lineNumber":5,"author":{"gitId":"DannyDakota"},"content":"","lastModifiedDate":"2022-03-22"},{"lineNumber":6,"author":{"gitId":"DannyDakota"},"content":"public class ActionBar extends UiPart\u003cRegion\u003e {","lastModifiedDate":"2022-03-22"},{"lineNumber":7,"author":{"gitId":"DannyDakota"},"content":"","lastModifiedDate":"2022-03-22"},{"lineNumber":8,"author":{"gitId":"DannyDakota"},"content":"    private static final String FXML \u003d \"ActionBar.fxml\";","lastModifiedDate":"2022-03-22"},{"lineNumber":9,"author":{"gitId":"DannyDakota"},"content":"","lastModifiedDate":"2022-03-22"},{"lineNumber":10,"author":{"gitId":"DannyDakota"},"content":"    public ActionBar() {","lastModifiedDate":"2022-03-22"},{"lineNumber":11,"author":{"gitId":"DannyDakota"},"content":"        super(FXML);","lastModifiedDate":"2022-03-22"},{"lineNumber":12,"author":{"gitId":"DannyDakota"},"content":"    }","lastModifiedDate":"2022-03-22"},{"lineNumber":13,"author":{"gitId":"DannyDakota"},"content":"","lastModifiedDate":"2022-03-22"},{"lineNumber":14,"author":{"gitId":"DannyDakota"},"content":"}","lastModifiedDate":"2022-03-22"}],"authorContributionMap":{"DannyDakota":14}},{"path":"src/main/java/seedu/address/ui/EmailWindow.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"DannyDakota"},"content":"package seedu.address.ui;","lastModifiedDate":"2022-03-22"},{"lineNumber":2,"author":{"gitId":"DannyDakota"},"content":"","lastModifiedDate":"2022-03-22"},{"lineNumber":3,"author":{"gitId":"DannyDakota"},"content":"import java.util.logging.Logger;","lastModifiedDate":"2022-03-22"},{"lineNumber":4,"author":{"gitId":"DannyDakota"},"content":"","lastModifiedDate":"2022-03-22"},{"lineNumber":5,"author":{"gitId":"DannyDakota"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2022-03-22"},{"lineNumber":6,"author":{"gitId":"DannyDakota"},"content":"import javafx.fxml.FXML;","lastModifiedDate":"2022-03-22"},{"lineNumber":7,"author":{"gitId":"DannyDakota"},"content":"import javafx.scene.control.Button;","lastModifiedDate":"2022-03-22"},{"lineNumber":8,"author":{"gitId":"DannyDakota"},"content":"import javafx.scene.control.Label;","lastModifiedDate":"2022-03-22"},{"lineNumber":9,"author":{"gitId":"DannyDakota"},"content":"import javafx.scene.input.Clipboard;","lastModifiedDate":"2022-03-22"},{"lineNumber":10,"author":{"gitId":"DannyDakota"},"content":"import javafx.scene.input.ClipboardContent;","lastModifiedDate":"2022-03-22"},{"lineNumber":11,"author":{"gitId":"DannyDakota"},"content":"import javafx.stage.Stage;","lastModifiedDate":"2022-03-22"},{"lineNumber":12,"author":{"gitId":"DannyDakota"},"content":"import seedu.address.commons.core.LogsCenter;","lastModifiedDate":"2022-03-22"},{"lineNumber":13,"author":{"gitId":"DannyDakota"},"content":"import seedu.address.model.person.Email;","lastModifiedDate":"2022-03-22"},{"lineNumber":14,"author":{"gitId":"DannyDakota"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2022-03-22"},{"lineNumber":15,"author":{"gitId":"DannyDakota"},"content":"","lastModifiedDate":"2022-03-22"},{"lineNumber":16,"author":{"gitId":"DannyDakota"},"content":"/**","lastModifiedDate":"2022-03-29"},{"lineNumber":17,"author":{"gitId":"DannyDakota"},"content":" * Controller for a email page","lastModifiedDate":"2022-03-29"},{"lineNumber":18,"author":{"gitId":"DannyDakota"},"content":" */","lastModifiedDate":"2022-03-29"},{"lineNumber":19,"author":{"gitId":"DannyDakota"},"content":"public class EmailWindow extends UiPart\u003cStage\u003e {","lastModifiedDate":"2022-03-22"},{"lineNumber":20,"author":{"gitId":"DannyDakota"},"content":"","lastModifiedDate":"2022-03-22"},{"lineNumber":21,"author":{"gitId":"DannyDakota"},"content":"    private static final Logger logger \u003d LogsCenter.getLogger(EmailWindow.class);","lastModifiedDate":"2022-03-22"},{"lineNumber":22,"author":{"gitId":"DannyDakota"},"content":"    private static final String FXML \u003d \"EmailWindow.fxml\";","lastModifiedDate":"2022-03-22"},{"lineNumber":23,"author":{"gitId":"DannyDakota"},"content":"    private String emailStringForCopy;","lastModifiedDate":"2022-03-22"},{"lineNumber":24,"author":{"gitId":"DannyDakota"},"content":"","lastModifiedDate":"2022-03-22"},{"lineNumber":25,"author":{"gitId":"DannyDakota"},"content":"    @FXML","lastModifiedDate":"2022-03-22"},{"lineNumber":26,"author":{"gitId":"DannyDakota"},"content":"    private Button copyButton;","lastModifiedDate":"2022-03-22"},{"lineNumber":27,"author":{"gitId":"DannyDakota"},"content":"","lastModifiedDate":"2022-03-22"},{"lineNumber":28,"author":{"gitId":"DannyDakota"},"content":"    @FXML","lastModifiedDate":"2022-03-22"},{"lineNumber":29,"author":{"gitId":"DannyDakota"},"content":"    private Label emailList;","lastModifiedDate":"2022-03-22"},{"lineNumber":30,"author":{"gitId":"DannyDakota"},"content":"","lastModifiedDate":"2022-03-22"},{"lineNumber":31,"author":{"gitId":"DannyDakota"},"content":"    /**","lastModifiedDate":"2022-03-22"},{"lineNumber":32,"author":{"gitId":"DannyDakota"},"content":"     * Creates a new EmailWindow.","lastModifiedDate":"2022-03-22"},{"lineNumber":33,"author":{"gitId":"DannyDakota"},"content":"     *","lastModifiedDate":"2022-03-22"},{"lineNumber":34,"author":{"gitId":"DannyDakota"},"content":"     * @param root Stage to use as the root of the EmailWindow.","lastModifiedDate":"2022-03-22"},{"lineNumber":35,"author":{"gitId":"DannyDakota"},"content":"     */","lastModifiedDate":"2022-03-22"},{"lineNumber":36,"author":{"gitId":"DannyDakota"},"content":"    public EmailWindow(Stage root) {","lastModifiedDate":"2022-03-22"},{"lineNumber":37,"author":{"gitId":"DannyDakota"},"content":"        super(FXML, root);","lastModifiedDate":"2022-03-22"},{"lineNumber":38,"author":{"gitId":"DannyDakota"},"content":"    }","lastModifiedDate":"2022-03-22"},{"lineNumber":39,"author":{"gitId":"DannyDakota"},"content":"","lastModifiedDate":"2022-03-22"},{"lineNumber":40,"author":{"gitId":"DannyDakota"},"content":"    /**","lastModifiedDate":"2022-03-22"},{"lineNumber":41,"author":{"gitId":"DannyDakota"},"content":"     * Creates a new EmailWindow.","lastModifiedDate":"2022-03-22"},{"lineNumber":42,"author":{"gitId":"DannyDakota"},"content":"     *","lastModifiedDate":"2022-03-22"},{"lineNumber":43,"author":{"gitId":"DannyDakota"},"content":"     * @param personList list of Person objects currently in the PersonList.","lastModifiedDate":"2022-03-22"},{"lineNumber":44,"author":{"gitId":"DannyDakota"},"content":"     */","lastModifiedDate":"2022-03-22"},{"lineNumber":45,"author":{"gitId":"DannyDakota"},"content":"    public EmailWindow(ObservableList\u003cPerson\u003e personList) {","lastModifiedDate":"2022-03-22"},{"lineNumber":46,"author":{"gitId":"DannyDakota"},"content":"        this(new Stage());","lastModifiedDate":"2022-03-22"},{"lineNumber":47,"author":{"gitId":"DannyDakota"},"content":"        String emailString \u003d parseEmailFromList(personList);","lastModifiedDate":"2022-03-22"},{"lineNumber":48,"author":{"gitId":"DannyDakota"},"content":"        emailList.setText(emailString);","lastModifiedDate":"2022-03-22"},{"lineNumber":49,"author":{"gitId":"DannyDakota"},"content":"        this.emailStringForCopy \u003d emailString;","lastModifiedDate":"2022-03-22"},{"lineNumber":50,"author":{"gitId":"DannyDakota"},"content":"    }","lastModifiedDate":"2022-03-22"},{"lineNumber":51,"author":{"gitId":"DannyDakota"},"content":"","lastModifiedDate":"2022-03-22"},{"lineNumber":52,"author":{"gitId":"DannyDakota"},"content":"    /**","lastModifiedDate":"2022-03-22"},{"lineNumber":53,"author":{"gitId":"DannyDakota"},"content":"     * Iterate through the list of persons to generate an email string of all Persons.","lastModifiedDate":"2022-03-29"},{"lineNumber":54,"author":{"gitId":"DannyDakota"},"content":"     *","lastModifiedDate":"2022-03-22"},{"lineNumber":55,"author":{"gitId":"DannyDakota"},"content":"     * @param personList list of Person objects currently in the PersonList.","lastModifiedDate":"2022-03-22"},{"lineNumber":56,"author":{"gitId":"DannyDakota"},"content":"     */","lastModifiedDate":"2022-03-22"},{"lineNumber":57,"author":{"gitId":"DannyDakota"},"content":"    public String parseEmailFromList(ObservableList\u003cPerson\u003e personList) {","lastModifiedDate":"2022-03-22"},{"lineNumber":58,"author":{"gitId":"DannyDakota"},"content":"        String stringOfEmails \u003d \"\";","lastModifiedDate":"2022-03-22"},{"lineNumber":59,"author":{"gitId":"DannyDakota"},"content":"        for (Person p : personList) {","lastModifiedDate":"2022-03-22"},{"lineNumber":60,"author":{"gitId":"DannyDakota"},"content":"            Email personEmail \u003d p.getEmail();","lastModifiedDate":"2022-03-22"},{"lineNumber":61,"author":{"gitId":"DannyDakota"},"content":"            stringOfEmails \u003d stringOfEmails + personEmail.toString() + \"\\n\";","lastModifiedDate":"2022-03-22"},{"lineNumber":62,"author":{"gitId":"DannyDakota"},"content":"        }","lastModifiedDate":"2022-03-22"},{"lineNumber":63,"author":{"gitId":"DannyDakota"},"content":"        return stringOfEmails;","lastModifiedDate":"2022-03-22"},{"lineNumber":64,"author":{"gitId":"DannyDakota"},"content":"    }","lastModifiedDate":"2022-03-22"},{"lineNumber":65,"author":{"gitId":"DannyDakota"},"content":"","lastModifiedDate":"2022-03-22"},{"lineNumber":66,"author":{"gitId":"DannyDakota"},"content":"    /**","lastModifiedDate":"2022-03-22"},{"lineNumber":67,"author":{"gitId":"DannyDakota"},"content":"     * Shows the email window.","lastModifiedDate":"2022-03-22"},{"lineNumber":68,"author":{"gitId":"DannyDakota"},"content":"     * @throws IllegalStateException","lastModifiedDate":"2022-03-22"},{"lineNumber":69,"author":{"gitId":"DannyDakota"},"content":"     * \u003cul\u003e","lastModifiedDate":"2022-03-22"},{"lineNumber":70,"author":{"gitId":"DannyDakota"},"content":"     *     \u003cli\u003e","lastModifiedDate":"2022-03-22"},{"lineNumber":71,"author":{"gitId":"DannyDakota"},"content":"     *         if this method is called on a thread other than the JavaFX Application Thread.","lastModifiedDate":"2022-03-22"},{"lineNumber":72,"author":{"gitId":"DannyDakota"},"content":"     *     \u003c/li\u003e","lastModifiedDate":"2022-03-22"},{"lineNumber":73,"author":{"gitId":"DannyDakota"},"content":"     *     \u003cli\u003e","lastModifiedDate":"2022-03-22"},{"lineNumber":74,"author":{"gitId":"DannyDakota"},"content":"     *         if this method is called during animation or layout processing.","lastModifiedDate":"2022-03-22"},{"lineNumber":75,"author":{"gitId":"DannyDakota"},"content":"     *     \u003c/li\u003e","lastModifiedDate":"2022-03-22"},{"lineNumber":76,"author":{"gitId":"DannyDakota"},"content":"     *     \u003cli\u003e","lastModifiedDate":"2022-03-22"},{"lineNumber":77,"author":{"gitId":"DannyDakota"},"content":"     *         if this method is called on the primary stage.","lastModifiedDate":"2022-03-22"},{"lineNumber":78,"author":{"gitId":"DannyDakota"},"content":"     *     \u003c/li\u003e","lastModifiedDate":"2022-03-22"},{"lineNumber":79,"author":{"gitId":"DannyDakota"},"content":"     *     \u003cli\u003e","lastModifiedDate":"2022-03-22"},{"lineNumber":80,"author":{"gitId":"DannyDakota"},"content":"     *         if {@code dialogStage} is already showing.","lastModifiedDate":"2022-03-22"},{"lineNumber":81,"author":{"gitId":"DannyDakota"},"content":"     *     \u003c/li\u003e","lastModifiedDate":"2022-03-22"},{"lineNumber":82,"author":{"gitId":"DannyDakota"},"content":"     * \u003c/ul\u003e","lastModifiedDate":"2022-03-22"},{"lineNumber":83,"author":{"gitId":"DannyDakota"},"content":"     */","lastModifiedDate":"2022-03-22"},{"lineNumber":84,"author":{"gitId":"DannyDakota"},"content":"    public void show() {","lastModifiedDate":"2022-03-22"},{"lineNumber":85,"author":{"gitId":"DannyDakota"},"content":"        logger.fine(\"Showing email list page.\");","lastModifiedDate":"2022-03-22"},{"lineNumber":86,"author":{"gitId":"DannyDakota"},"content":"        getRoot().show();","lastModifiedDate":"2022-03-22"},{"lineNumber":87,"author":{"gitId":"DannyDakota"},"content":"        getRoot().centerOnScreen();","lastModifiedDate":"2022-03-22"},{"lineNumber":88,"author":{"gitId":"DannyDakota"},"content":"    }","lastModifiedDate":"2022-03-22"},{"lineNumber":89,"author":{"gitId":"DannyDakota"},"content":"","lastModifiedDate":"2022-03-22"},{"lineNumber":90,"author":{"gitId":"DannyDakota"},"content":"    /**","lastModifiedDate":"2022-03-22"},{"lineNumber":91,"author":{"gitId":"DannyDakota"},"content":"     * Returns true if the email window is currently being shown.","lastModifiedDate":"2022-03-22"},{"lineNumber":92,"author":{"gitId":"DannyDakota"},"content":"     */","lastModifiedDate":"2022-03-22"},{"lineNumber":93,"author":{"gitId":"DannyDakota"},"content":"    public boolean isShowing() {","lastModifiedDate":"2022-03-22"},{"lineNumber":94,"author":{"gitId":"DannyDakota"},"content":"        return getRoot().isShowing();","lastModifiedDate":"2022-03-22"},{"lineNumber":95,"author":{"gitId":"DannyDakota"},"content":"    }","lastModifiedDate":"2022-03-22"},{"lineNumber":96,"author":{"gitId":"DannyDakota"},"content":"","lastModifiedDate":"2022-03-22"},{"lineNumber":97,"author":{"gitId":"DannyDakota"},"content":"    /**","lastModifiedDate":"2022-03-22"},{"lineNumber":98,"author":{"gitId":"DannyDakota"},"content":"     * Hides the email window.","lastModifiedDate":"2022-03-22"},{"lineNumber":99,"author":{"gitId":"DannyDakota"},"content":"     */","lastModifiedDate":"2022-03-22"},{"lineNumber":100,"author":{"gitId":"DannyDakota"},"content":"    public void hide() {","lastModifiedDate":"2022-03-22"},{"lineNumber":101,"author":{"gitId":"DannyDakota"},"content":"        getRoot().hide();","lastModifiedDate":"2022-03-22"},{"lineNumber":102,"author":{"gitId":"DannyDakota"},"content":"    }","lastModifiedDate":"2022-03-22"},{"lineNumber":103,"author":{"gitId":"DannyDakota"},"content":"","lastModifiedDate":"2022-03-22"},{"lineNumber":104,"author":{"gitId":"DannyDakota"},"content":"    /**","lastModifiedDate":"2022-03-22"},{"lineNumber":105,"author":{"gitId":"DannyDakota"},"content":"     * Focuses on the email window.","lastModifiedDate":"2022-03-22"},{"lineNumber":106,"author":{"gitId":"DannyDakota"},"content":"     */","lastModifiedDate":"2022-03-22"},{"lineNumber":107,"author":{"gitId":"DannyDakota"},"content":"    public void focus() {","lastModifiedDate":"2022-03-22"},{"lineNumber":108,"author":{"gitId":"DannyDakota"},"content":"        getRoot().requestFocus();","lastModifiedDate":"2022-03-22"},{"lineNumber":109,"author":{"gitId":"DannyDakota"},"content":"    }","lastModifiedDate":"2022-03-22"},{"lineNumber":110,"author":{"gitId":"DannyDakota"},"content":"","lastModifiedDate":"2022-03-22"},{"lineNumber":111,"author":{"gitId":"DannyDakota"},"content":"    /**","lastModifiedDate":"2022-03-22"},{"lineNumber":112,"author":{"gitId":"DannyDakota"},"content":"     * Copies the emails in the string of emails to the user\u0027s clipboard.","lastModifiedDate":"2022-03-29"},{"lineNumber":113,"author":{"gitId":"DannyDakota"},"content":"     */","lastModifiedDate":"2022-03-22"},{"lineNumber":114,"author":{"gitId":"DannyDakota"},"content":"    @FXML","lastModifiedDate":"2022-03-22"},{"lineNumber":115,"author":{"gitId":"DannyDakota"},"content":"    private void copyEmail() {","lastModifiedDate":"2022-03-22"},{"lineNumber":116,"author":{"gitId":"DannyDakota"},"content":"        final Clipboard clipboard \u003d Clipboard.getSystemClipboard();","lastModifiedDate":"2022-03-22"},{"lineNumber":117,"author":{"gitId":"DannyDakota"},"content":"        final ClipboardContent copyEmail \u003d new ClipboardContent();","lastModifiedDate":"2022-03-22"},{"lineNumber":118,"author":{"gitId":"DannyDakota"},"content":"        copyEmail.putString(emailStringForCopy);","lastModifiedDate":"2022-03-22"},{"lineNumber":119,"author":{"gitId":"DannyDakota"},"content":"        clipboard.setContent(copyEmail);","lastModifiedDate":"2022-03-22"},{"lineNumber":120,"author":{"gitId":"DannyDakota"},"content":"    }","lastModifiedDate":"2022-03-22"},{"lineNumber":121,"author":{"gitId":"DannyDakota"},"content":"","lastModifiedDate":"2022-03-22"},{"lineNumber":122,"author":{"gitId":"DannyDakota"},"content":"}","lastModifiedDate":"2022-03-22"}],"authorContributionMap":{"DannyDakota":122}},{"path":"src/main/java/seedu/address/ui/HelpWindow.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.ui;","lastModifiedDate":"2016-09-22"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":3,"author":{"gitId":"DannyDakota"},"content":"import java.awt.Desktop;","lastModifiedDate":"2022-03-28"},{"lineNumber":4,"author":{"gitId":"DannyDakota"},"content":"import java.io.IOException;","lastModifiedDate":"2022-03-28"},{"lineNumber":5,"author":{"gitId":"DannyDakota"},"content":"import java.net.URI;","lastModifiedDate":"2022-03-28"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.util.logging.Logger;","lastModifiedDate":"2017-01-19"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import javafx.fxml.FXML;","lastModifiedDate":"2016-12-24"},{"lineNumber":9,"author":{"gitId":"DannyDakota"},"content":"import javafx.scene.control.Alert;","lastModifiedDate":"2022-03-28"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import javafx.scene.control.Button;","lastModifiedDate":"2019-08-19"},{"lineNumber":11,"author":{"gitId":"DannyDakota"},"content":"import javafx.scene.control.TextArea;","lastModifiedDate":"2022-04-02"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import javafx.stage.Stage;","lastModifiedDate":"2016-08-18"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.LogsCenter;","lastModifiedDate":"2016-09-23"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-09"},{"lineNumber":15,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-18"},{"lineNumber":16,"author":{"gitId":"-"},"content":" * Controller for a help page","lastModifiedDate":"2016-08-18"},{"lineNumber":17,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-18"},{"lineNumber":18,"author":{"gitId":"-"},"content":"public class HelpWindow extends UiPart\u003cStage\u003e {","lastModifiedDate":"2017-12-01"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":20,"author":{"gitId":"DannyDakota"},"content":"    public static final String USERGUIDE_URL \u003d \"https://ay2122s2-cs2103t-t12-3.github.io/tp/UserGuide.html\";","lastModifiedDate":"2022-03-08"},{"lineNumber":21,"author":{"gitId":"DannyDakota"},"content":"    public static final String NEWLINE_AND_INDENTATION \u003d \"\\n     \";","lastModifiedDate":"2022-03-08"},{"lineNumber":22,"author":{"gitId":"DannyDakota"},"content":"    public static final String HELP_MESSAGE \u003d \"Tracey supports the following features: Find, Add, Delete, Edit, Clear, \"","lastModifiedDate":"2022-03-08"},{"lineNumber":23,"author":{"gitId":"DannyDakota"},"content":"            + \"Summarise, List, Help, Filter, Import, Undo, Redo, Email, Archive and Resize.\\n\"","lastModifiedDate":"2022-04-02"},{"lineNumber":24,"author":{"gitId":"DannyDakota"},"content":"            + \"This guide aims to showcase the syntax used for the aforementioned features.\\n\"","lastModifiedDate":"2022-03-08"},{"lineNumber":25,"author":{"gitId":"DannyDakota"},"content":"            + \"For a full comprehensive guide, please refer to \" + USERGUIDE_URL","lastModifiedDate":"2022-03-08"},{"lineNumber":26,"author":{"gitId":"DannyDakota"},"content":"            + \"\\n\"","lastModifiedDate":"2022-03-08"},{"lineNumber":27,"author":{"gitId":"DannyDakota"},"content":"","lastModifiedDate":"2022-03-08"},{"lineNumber":28,"author":{"gitId":"kevinkuo0320"},"content":"            + \"\\n1. FIND a particular contact in Tracey. The input keywords does not require the full name of a contact\"","lastModifiedDate":"2022-03-24"},{"lineNumber":29,"author":{"gitId":"DannyDakota"},"content":"            + NEWLINE_AND_INDENTATION","lastModifiedDate":"2022-03-08"},{"lineNumber":30,"author":{"gitId":"DannyDakota"},"content":"            + \"Format: find NAME\"","lastModifiedDate":"2022-03-08"},{"lineNumber":31,"author":{"gitId":"DannyDakota"},"content":"            + NEWLINE_AND_INDENTATION","lastModifiedDate":"2022-03-08"},{"lineNumber":32,"author":{"gitId":"DannyDakota"},"content":"            + \"Example 1: find John\\n\"","lastModifiedDate":"2022-03-08"},{"lineNumber":33,"author":{"gitId":"DannyDakota"},"content":"","lastModifiedDate":"2022-03-08"},{"lineNumber":34,"author":{"gitId":"DannyDakota"},"content":"            + \"\\n2. ADD a student with relevant details into Tracey.\"","lastModifiedDate":"2022-03-08"},{"lineNumber":35,"author":{"gitId":"DannyDakota"},"content":"            + NEWLINE_AND_INDENTATION","lastModifiedDate":"2022-03-08"},{"lineNumber":36,"author":{"gitId":"DannyDakota"},"content":"            + \"List of tags: n/Name b/Block f/Faculty p/Phone Number a/Address e/Email \"","lastModifiedDate":"2022-04-02"},{"lineNumber":37,"author":{"gitId":"DannyDakota"},"content":"            + \"mc/Matriculation Number CS/Covid Status\"","lastModifiedDate":"2022-04-02"},{"lineNumber":38,"author":{"gitId":"DannyDakota"},"content":"            + NEWLINE_AND_INDENTATION","lastModifiedDate":"2022-03-09"},{"lineNumber":39,"author":{"gitId":"DannyDakota"},"content":"            + \"Format: add n/NAME p/PHONENUMBER e/EMAIL ...\"","lastModifiedDate":"2022-03-08"},{"lineNumber":40,"author":{"gitId":"DannyDakota"},"content":"            + NEWLINE_AND_INDENTATION","lastModifiedDate":"2022-03-08"},{"lineNumber":41,"author":{"gitId":"DannyDakota"},"content":"            + \"Example 1: add n/Melvin b/e f/SOC p/99999999 a/12 Kent Ridge Drive \"","lastModifiedDate":"2022-03-30"},{"lineNumber":42,"author":{"gitId":"DannyDakota"},"content":"            + \"e/melvin@bing.com mc/a0216456n cs/negative\"","lastModifiedDate":"2022-03-30"},{"lineNumber":43,"author":{"gitId":"DannyDakota"},"content":"            + NEWLINE_AND_INDENTATION","lastModifiedDate":"2022-03-08"},{"lineNumber":44,"author":{"gitId":"DannyDakota"},"content":"            + \"Example 2: add f/FOL p/84848002 a/13 Kent Ridge Drive e/danny@yahoo.com \"","lastModifiedDate":"2022-03-30"},{"lineNumber":45,"author":{"gitId":"DannyDakota"},"content":"            + \"mc/a0024345h n/Danny cs/positive b/c\\n\"","lastModifiedDate":"2022-03-30"},{"lineNumber":46,"author":{"gitId":"DannyDakota"},"content":"            + \"\\n3. DELETE a contact at a specific INDEX. The index refers to the index number shown in the \"","lastModifiedDate":"2022-03-08"},{"lineNumber":47,"author":{"gitId":"DannyDakota"},"content":"            + \"displayed person list.\"","lastModifiedDate":"2022-03-08"},{"lineNumber":48,"author":{"gitId":"DannyDakota"},"content":"            + NEWLINE_AND_INDENTATION","lastModifiedDate":"2022-03-08"},{"lineNumber":49,"author":{"gitId":"DannyDakota"},"content":"            + \"Format: delete INDEX\"","lastModifiedDate":"2022-03-08"},{"lineNumber":50,"author":{"gitId":"DannyDakota"},"content":"            + NEWLINE_AND_INDENTATION","lastModifiedDate":"2022-03-08"},{"lineNumber":51,"author":{"gitId":"DannyDakota"},"content":"            + \"Example 1: Delete 2\"","lastModifiedDate":"2022-03-08"},{"lineNumber":52,"author":{"gitId":"DannyDakota"},"content":"            + NEWLINE_AND_INDENTATION","lastModifiedDate":"2022-03-08"},{"lineNumber":53,"author":{"gitId":"DannyDakota"},"content":"            + \"Example 2: Delete 4\\n\"","lastModifiedDate":"2022-03-08"},{"lineNumber":54,"author":{"gitId":"DannyDakota"},"content":"","lastModifiedDate":"2022-03-08"},{"lineNumber":55,"author":{"gitId":"DannyDakota"},"content":"            + \"\\n4. EDIT the person at the specified INDEX. The index refers to the index number shown in the \"","lastModifiedDate":"2022-03-08"},{"lineNumber":56,"author":{"gitId":"DannyDakota"},"content":"            + \"displayed person list.\"","lastModifiedDate":"2022-03-08"},{"lineNumber":57,"author":{"gitId":"DannyDakota"},"content":"            + NEWLINE_AND_INDENTATION","lastModifiedDate":"2022-03-08"},{"lineNumber":58,"author":{"gitId":"DannyDakota"},"content":"            + \"Format: edit INDEX n/NAME ...\"","lastModifiedDate":"2022-03-08"},{"lineNumber":59,"author":{"gitId":"DannyDakota"},"content":"            + NEWLINE_AND_INDENTATION","lastModifiedDate":"2022-03-08"},{"lineNumber":60,"author":{"gitId":"DannyDakota"},"content":"            + \"Example 1: edit 1 p/91234567 e/johndoe@example.com\"","lastModifiedDate":"2022-03-08"},{"lineNumber":61,"author":{"gitId":"DannyDakota"},"content":"            + NEWLINE_AND_INDENTATION","lastModifiedDate":"2022-03-08"},{"lineNumber":62,"author":{"gitId":"DannyDakota"},"content":"            + \"Example 2: edit 2 n/David Limpeh t/\\n\"","lastModifiedDate":"2022-03-08"},{"lineNumber":63,"author":{"gitId":"DannyDakota"},"content":"","lastModifiedDate":"2022-03-08"},{"lineNumber":64,"author":{"gitId":"DannyDakota"},"content":"            + \"\\n5. CLEAR all the data inside Tracey\"","lastModifiedDate":"2022-03-08"},{"lineNumber":65,"author":{"gitId":"DannyDakota"},"content":"            + NEWLINE_AND_INDENTATION","lastModifiedDate":"2022-03-08"},{"lineNumber":66,"author":{"gitId":"DannyDakota"},"content":"            + \"WARNING: Cleared data cannot be retrieved!\"","lastModifiedDate":"2022-03-09"},{"lineNumber":67,"author":{"gitId":"DannyDakota"},"content":"            + NEWLINE_AND_INDENTATION","lastModifiedDate":"2022-03-09"},{"lineNumber":68,"author":{"gitId":"DannyDakota"},"content":"            + \"Format: clear\\n\"","lastModifiedDate":"2022-03-08"},{"lineNumber":69,"author":{"gitId":"DannyDakota"},"content":"","lastModifiedDate":"2022-03-08"},{"lineNumber":70,"author":{"gitId":"DannyDakota"},"content":"            + \"\\n6. SUMMARISE the record inside Tracey that to provide an overview of the data,\"","lastModifiedDate":"2022-04-02"},{"lineNumber":71,"author":{"gitId":"DannyDakota"},"content":"            + \" such as the number of students who are Covid Positive\"","lastModifiedDate":"2022-04-02"},{"lineNumber":72,"author":{"gitId":"DannyDakota"},"content":"            + NEWLINE_AND_INDENTATION","lastModifiedDate":"2022-03-08"},{"lineNumber":73,"author":{"gitId":"tanchinkiat99"},"content":"            + \"Format: summarise\\n\"","lastModifiedDate":"2022-03-17"},{"lineNumber":74,"author":{"gitId":"DannyDakota"},"content":"","lastModifiedDate":"2022-03-08"},{"lineNumber":75,"author":{"gitId":"DannyDakota"},"content":"            + \"\\n7. LIST the full record, which displays all the student’s data that are logged into Tracey\"","lastModifiedDate":"2022-03-08"},{"lineNumber":76,"author":{"gitId":"DannyDakota"},"content":"            + NEWLINE_AND_INDENTATION","lastModifiedDate":"2022-03-08"},{"lineNumber":77,"author":{"gitId":"DannyDakota"},"content":"            + \"Format: list\\n\"","lastModifiedDate":"2022-03-08"},{"lineNumber":78,"author":{"gitId":"DannyDakota"},"content":"","lastModifiedDate":"2022-03-08"},{"lineNumber":79,"author":{"gitId":"DannyDakota"},"content":"            + \"\\n8. Display syntax examples through HELP\"","lastModifiedDate":"2022-03-08"},{"lineNumber":80,"author":{"gitId":"DannyDakota"},"content":"            + NEWLINE_AND_INDENTATION","lastModifiedDate":"2022-03-08"},{"lineNumber":81,"author":{"gitId":"DannyDakota"},"content":"            + \"Format: help\\n\"","lastModifiedDate":"2022-03-08"},{"lineNumber":82,"author":{"gitId":"DannyDakota"},"content":"","lastModifiedDate":"2022-03-08"},{"lineNumber":83,"author":{"gitId":"DannyDakota"},"content":"            + \"\\n9. FILTER student based on covid status, block or faculty\"","lastModifiedDate":"2022-04-02"},{"lineNumber":84,"author":{"gitId":"DannyDakota"},"content":"            + NEWLINE_AND_INDENTATION","lastModifiedDate":"2022-03-08"},{"lineNumber":85,"author":{"gitId":"DannyDakota"},"content":"            + \"Format: filter f/FACULTY cs/COVID_STATUS b/BLOCK\"","lastModifiedDate":"2022-04-02"},{"lineNumber":86,"author":{"gitId":"DannyDakota"},"content":"            + NEWLINE_AND_INDENTATION","lastModifiedDate":"2022-04-02"},{"lineNumber":87,"author":{"gitId":"DannyDakota"},"content":"            + \"Example 1: cs/positive\"","lastModifiedDate":"2022-04-02"},{"lineNumber":88,"author":{"gitId":"DannyDakota"},"content":"            + NEWLINE_AND_INDENTATION","lastModifiedDate":"2022-04-02"},{"lineNumber":89,"author":{"gitId":"DannyDakota"},"content":"            + \"Example 2: b/c\\n\"","lastModifiedDate":"2022-04-02"},{"lineNumber":90,"author":{"gitId":"kevinkuo0320"},"content":"","lastModifiedDate":"2022-04-01"},{"lineNumber":91,"author":{"gitId":"kevinkuo0320"},"content":"            + \"\\n10. IMPORT excel files\"","lastModifiedDate":"2022-04-01"},{"lineNumber":92,"author":{"gitId":"kevinkuo0320"},"content":"            + NEWLINE_AND_INDENTATION","lastModifiedDate":"2022-04-01"},{"lineNumber":93,"author":{"gitId":"DannyDakota"},"content":"            + \"Format: import C:\\\\Users\\\\users\\\\Documents\\\\tp.xlsx\\n\"","lastModifiedDate":"2022-04-02"},{"lineNumber":94,"author":{"gitId":"kevinkuo0320"},"content":"","lastModifiedDate":"2022-04-01"},{"lineNumber":95,"author":{"gitId":"kevinkuo0320"},"content":"            + \"\\n11. UNDO an executed add, edit or delete command.\"","lastModifiedDate":"2022-04-01"},{"lineNumber":96,"author":{"gitId":"jiale-c"},"content":"            + NEWLINE_AND_INDENTATION","lastModifiedDate":"2022-03-31"},{"lineNumber":97,"author":{"gitId":"jiale-c"},"content":"            + \"Format: undo\\n\"","lastModifiedDate":"2022-03-31"},{"lineNumber":98,"author":{"gitId":"jiale-c"},"content":"","lastModifiedDate":"2022-03-31"},{"lineNumber":99,"author":{"gitId":"kevinkuo0320"},"content":"            + \"\\n12. REDO an executed undo command..\"","lastModifiedDate":"2022-04-01"},{"lineNumber":100,"author":{"gitId":"jiale-c"},"content":"            + NEWLINE_AND_INDENTATION","lastModifiedDate":"2022-03-31"},{"lineNumber":101,"author":{"gitId":"jiale-c"},"content":"            + \"Format: redo\\n\"","lastModifiedDate":"2022-03-31"},{"lineNumber":102,"author":{"gitId":"jiale-c"},"content":"","lastModifiedDate":"2022-03-31"},{"lineNumber":103,"author":{"gitId":"DannyDakota"},"content":"            + \"\\n13. EMAIL addresses of the students in the list are collated.\"","lastModifiedDate":"2022-04-02"},{"lineNumber":104,"author":{"gitId":"jiale-c"},"content":"            + NEWLINE_AND_INDENTATION","lastModifiedDate":"2022-03-31"},{"lineNumber":105,"author":{"gitId":"DannyDakota"},"content":"            + \"Format: email\\n\"","lastModifiedDate":"2022-04-02"},{"lineNumber":106,"author":{"gitId":"DannyDakota"},"content":"","lastModifiedDate":"2022-04-02"},{"lineNumber":107,"author":{"gitId":"DannyDakota"},"content":"            + \"\\n14. Archive the current database, saving the data in [ROOT]/data/archive/[DATE]/[ARCHIVED_FILE].\"","lastModifiedDate":"2022-04-02"},{"lineNumber":108,"author":{"gitId":"DannyDakota"},"content":"            + NEWLINE_AND_INDENTATION","lastModifiedDate":"2022-04-02"},{"lineNumber":109,"author":{"gitId":"DannyDakota"},"content":"            + \"Format: archive\\n\"","lastModifiedDate":"2022-04-02"},{"lineNumber":110,"author":{"gitId":"DannyDakota"},"content":"","lastModifiedDate":"2022-04-02"},{"lineNumber":111,"author":{"gitId":"DannyDakota"},"content":"            + \"\\n13. RESIZE the display of the response box according to size 1, 2 or 3.\"","lastModifiedDate":"2022-04-02"},{"lineNumber":112,"author":{"gitId":"DannyDakota"},"content":"            + NEWLINE_AND_INDENTATION","lastModifiedDate":"2022-04-02"},{"lineNumber":113,"author":{"gitId":"DannyDakota"},"content":"            + \"Format: RESIZE SIZE\"","lastModifiedDate":"2022-04-02"},{"lineNumber":114,"author":{"gitId":"DannyDakota"},"content":"            + NEWLINE_AND_INDENTATION","lastModifiedDate":"2022-04-02"},{"lineNumber":115,"author":{"gitId":"DannyDakota"},"content":"            + \"Example 1: resize 1\"","lastModifiedDate":"2022-04-02"},{"lineNumber":116,"author":{"gitId":"DannyDakota"},"content":"            + NEWLINE_AND_INDENTATION","lastModifiedDate":"2022-04-02"},{"lineNumber":117,"author":{"gitId":"DannyDakota"},"content":"            + \"Example 2: resize 3\";","lastModifiedDate":"2022-04-02"},{"lineNumber":118,"author":{"gitId":"DannyDakota"},"content":"","lastModifiedDate":"2022-04-02"},{"lineNumber":119,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-03-08"},{"lineNumber":120,"author":{"gitId":"-"},"content":"    private static final Logger logger \u003d LogsCenter.getLogger(HelpWindow.class);","lastModifiedDate":"2022-03-08"},{"lineNumber":121,"author":{"gitId":"-"},"content":"    private static final String FXML \u003d \"HelpWindow.fxml\";","lastModifiedDate":"2022-03-08"},{"lineNumber":122,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-03-08"},{"lineNumber":123,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":124,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-12-24"},{"lineNumber":125,"author":{"gitId":"DannyDakota"},"content":"    private Button openUserGuideButton;","lastModifiedDate":"2022-03-28"},{"lineNumber":126,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-08-19"},{"lineNumber":127,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2019-08-19"},{"lineNumber":128,"author":{"gitId":"DannyDakota"},"content":"    private TextArea helpMessage;","lastModifiedDate":"2022-04-02"},{"lineNumber":129,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":130,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-12-01"},{"lineNumber":131,"author":{"gitId":"-"},"content":"     * Creates a new HelpWindow.","lastModifiedDate":"2017-12-01"},{"lineNumber":132,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2017-12-01"},{"lineNumber":133,"author":{"gitId":"-"},"content":"     * @param root Stage to use as the root of the HelpWindow.","lastModifiedDate":"2017-12-01"},{"lineNumber":134,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-12-01"},{"lineNumber":135,"author":{"gitId":"-"},"content":"    public HelpWindow(Stage root) {","lastModifiedDate":"2017-12-01"},{"lineNumber":136,"author":{"gitId":"-"},"content":"        super(FXML, root);","lastModifiedDate":"2017-12-01"},{"lineNumber":137,"author":{"gitId":"-"},"content":"        helpMessage.setText(HELP_MESSAGE);","lastModifiedDate":"2019-08-19"},{"lineNumber":138,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-18"},{"lineNumber":139,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":140,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-12-01"},{"lineNumber":141,"author":{"gitId":"-"},"content":"     * Creates a new HelpWindow.","lastModifiedDate":"2017-12-01"},{"lineNumber":142,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-12-01"},{"lineNumber":143,"author":{"gitId":"-"},"content":"    public HelpWindow() {","lastModifiedDate":"2017-12-01"},{"lineNumber":144,"author":{"gitId":"-"},"content":"        this(new Stage());","lastModifiedDate":"2017-12-01"},{"lineNumber":145,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-12-01"},{"lineNumber":146,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-12-01"},{"lineNumber":147,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-08-16"},{"lineNumber":148,"author":{"gitId":"-"},"content":"     * Shows the help window.","lastModifiedDate":"2017-08-16"},{"lineNumber":149,"author":{"gitId":"-"},"content":"     * @throws IllegalStateException","lastModifiedDate":"2017-08-16"},{"lineNumber":150,"author":{"gitId":"-"},"content":"     * \u003cul\u003e","lastModifiedDate":"2017-08-16"},{"lineNumber":151,"author":{"gitId":"-"},"content":"     *     \u003cli\u003e","lastModifiedDate":"2017-08-16"},{"lineNumber":152,"author":{"gitId":"-"},"content":"     *         if this method is called on a thread other than the JavaFX Application Thread.","lastModifiedDate":"2017-08-16"},{"lineNumber":153,"author":{"gitId":"-"},"content":"     *     \u003c/li\u003e","lastModifiedDate":"2017-08-16"},{"lineNumber":154,"author":{"gitId":"-"},"content":"     *     \u003cli\u003e","lastModifiedDate":"2017-08-16"},{"lineNumber":155,"author":{"gitId":"-"},"content":"     *         if this method is called during animation or layout processing.","lastModifiedDate":"2017-08-16"},{"lineNumber":156,"author":{"gitId":"-"},"content":"     *     \u003c/li\u003e","lastModifiedDate":"2017-08-16"},{"lineNumber":157,"author":{"gitId":"-"},"content":"     *     \u003cli\u003e","lastModifiedDate":"2017-08-16"},{"lineNumber":158,"author":{"gitId":"-"},"content":"     *         if this method is called on the primary stage.","lastModifiedDate":"2017-08-16"},{"lineNumber":159,"author":{"gitId":"-"},"content":"     *     \u003c/li\u003e","lastModifiedDate":"2017-08-16"},{"lineNumber":160,"author":{"gitId":"-"},"content":"     *     \u003cli\u003e","lastModifiedDate":"2017-08-16"},{"lineNumber":161,"author":{"gitId":"-"},"content":"     *         if {@code dialogStage} is already showing.","lastModifiedDate":"2017-08-16"},{"lineNumber":162,"author":{"gitId":"-"},"content":"     *     \u003c/li\u003e","lastModifiedDate":"2017-08-16"},{"lineNumber":163,"author":{"gitId":"-"},"content":"     * \u003c/ul\u003e","lastModifiedDate":"2017-08-16"},{"lineNumber":164,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-08-16"},{"lineNumber":165,"author":{"gitId":"-"},"content":"    public void show() {","lastModifiedDate":"2016-08-18"},{"lineNumber":166,"author":{"gitId":"-"},"content":"        logger.fine(\"Showing help page about the application.\");","lastModifiedDate":"2016-12-24"},{"lineNumber":167,"author":{"gitId":"-"},"content":"        getRoot().show();","lastModifiedDate":"2018-02-13"},{"lineNumber":168,"author":{"gitId":"-"},"content":"        getRoot().centerOnScreen();","lastModifiedDate":"2019-08-19"},{"lineNumber":169,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-18"},{"lineNumber":170,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-03-15"},{"lineNumber":171,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-03-15"},{"lineNumber":172,"author":{"gitId":"-"},"content":"     * Returns true if the help window is currently being shown.","lastModifiedDate":"2018-03-15"},{"lineNumber":173,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-03-15"},{"lineNumber":174,"author":{"gitId":"-"},"content":"    public boolean isShowing() {","lastModifiedDate":"2018-03-15"},{"lineNumber":175,"author":{"gitId":"-"},"content":"        return getRoot().isShowing();","lastModifiedDate":"2018-03-15"},{"lineNumber":176,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-03-15"},{"lineNumber":177,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-03-15"},{"lineNumber":178,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-12-08"},{"lineNumber":179,"author":{"gitId":"-"},"content":"     * Hides the help window.","lastModifiedDate":"2018-12-08"},{"lineNumber":180,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-12-08"},{"lineNumber":181,"author":{"gitId":"-"},"content":"    public void hide() {","lastModifiedDate":"2018-12-08"},{"lineNumber":182,"author":{"gitId":"-"},"content":"        getRoot().hide();","lastModifiedDate":"2018-12-08"},{"lineNumber":183,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-12-08"},{"lineNumber":184,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-08"},{"lineNumber":185,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-03-15"},{"lineNumber":186,"author":{"gitId":"-"},"content":"     * Focuses on the help window.","lastModifiedDate":"2018-03-15"},{"lineNumber":187,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-03-15"},{"lineNumber":188,"author":{"gitId":"-"},"content":"    public void focus() {","lastModifiedDate":"2018-03-15"},{"lineNumber":189,"author":{"gitId":"-"},"content":"        getRoot().requestFocus();","lastModifiedDate":"2018-03-15"},{"lineNumber":190,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-03-15"},{"lineNumber":191,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-08-19"},{"lineNumber":192,"author":{"gitId":"DannyDakota"},"content":"","lastModifiedDate":"2022-03-28"},{"lineNumber":193,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2022-03-28"},{"lineNumber":194,"author":{"gitId":"DannyDakota"},"content":"     * Open the User Guide in the user\u0027s default browser.","lastModifiedDate":"2022-03-29"},{"lineNumber":195,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2022-03-28"},{"lineNumber":196,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2019-08-19"},{"lineNumber":197,"author":{"gitId":"DannyDakota"},"content":"    private void openUG() {","lastModifiedDate":"2022-03-28"},{"lineNumber":198,"author":{"gitId":"DannyDakota"},"content":"        if (Desktop.isDesktopSupported() \u0026\u0026 Desktop.getDesktop().isSupported(Desktop.Action.BROWSE)) {","lastModifiedDate":"2022-03-28"},{"lineNumber":199,"author":{"gitId":"DannyDakota"},"content":"            try {","lastModifiedDate":"2022-03-28"},{"lineNumber":200,"author":{"gitId":"DannyDakota"},"content":"                Desktop desktop \u003d Desktop.getDesktop();","lastModifiedDate":"2022-03-28"},{"lineNumber":201,"author":{"gitId":"DannyDakota"},"content":"                desktop.browse(URI.create(USERGUIDE_URL));","lastModifiedDate":"2022-03-28"},{"lineNumber":202,"author":{"gitId":"DannyDakota"},"content":"            } catch (IOException e) {","lastModifiedDate":"2022-03-28"},{"lineNumber":203,"author":{"gitId":"DannyDakota"},"content":"                logger.warning(\"User Guide page is currently down\");","lastModifiedDate":"2022-03-29"},{"lineNumber":204,"author":{"gitId":"DannyDakota"},"content":"                Alert alert \u003d new Alert(Alert.AlertType.ERROR, \"The URL is currently down/being changed!\");","lastModifiedDate":"2022-03-28"},{"lineNumber":205,"author":{"gitId":"DannyDakota"},"content":"                alert.show();","lastModifiedDate":"2022-03-28"},{"lineNumber":206,"author":{"gitId":"DannyDakota"},"content":"                e.printStackTrace();","lastModifiedDate":"2022-03-28"},{"lineNumber":207,"author":{"gitId":"DannyDakota"},"content":"            }","lastModifiedDate":"2022-03-28"},{"lineNumber":208,"author":{"gitId":"DannyDakota"},"content":"        } else {","lastModifiedDate":"2022-03-28"},{"lineNumber":209,"author":{"gitId":"DannyDakota"},"content":"            logger.warning(\"User operating system not supported\");","lastModifiedDate":"2022-03-28"},{"lineNumber":210,"author":{"gitId":"DannyDakota"},"content":"            Alert alert \u003d new Alert(Alert.AlertType.ERROR, \"Your operating system is currently not supported!\");","lastModifiedDate":"2022-03-28"},{"lineNumber":211,"author":{"gitId":"DannyDakota"},"content":"            alert.show();","lastModifiedDate":"2022-03-28"},{"lineNumber":212,"author":{"gitId":"DannyDakota"},"content":"        }","lastModifiedDate":"2022-03-28"},{"lineNumber":213,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2019-08-19"},{"lineNumber":214,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-18"}],"authorContributionMap":{"tanchinkiat99":1,"DannyDakota":109,"kevinkuo0320":7,"jiale-c":7,"-":90}},{"path":"src/main/java/seedu/address/ui/ImportWindow.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"kevinkuo0320"},"content":"package seedu.address.ui;","lastModifiedDate":"2022-03-31"},{"lineNumber":2,"author":{"gitId":"kevinkuo0320"},"content":"","lastModifiedDate":"2022-03-31"},{"lineNumber":3,"author":{"gitId":"kevinkuo0320"},"content":"import java.util.logging.Logger;","lastModifiedDate":"2022-03-31"},{"lineNumber":4,"author":{"gitId":"kevinkuo0320"},"content":"","lastModifiedDate":"2022-03-31"},{"lineNumber":5,"author":{"gitId":"kevinkuo0320"},"content":"import javafx.fxml.FXML;","lastModifiedDate":"2022-03-31"},{"lineNumber":6,"author":{"gitId":"kevinkuo0320"},"content":"import javafx.scene.control.Label;","lastModifiedDate":"2022-03-31"},{"lineNumber":7,"author":{"gitId":"kevinkuo0320"},"content":"import javafx.stage.Stage;","lastModifiedDate":"2022-03-31"},{"lineNumber":8,"author":{"gitId":"kevinkuo0320"},"content":"import seedu.address.commons.core.LogsCenter;","lastModifiedDate":"2022-03-31"},{"lineNumber":9,"author":{"gitId":"kevinkuo0320"},"content":"","lastModifiedDate":"2022-03-31"},{"lineNumber":10,"author":{"gitId":"kevinkuo0320"},"content":"/**","lastModifiedDate":"2022-03-31"},{"lineNumber":11,"author":{"gitId":"kevinkuo0320"},"content":" * class for displaying import window","lastModifiedDate":"2022-03-31"},{"lineNumber":12,"author":{"gitId":"kevinkuo0320"},"content":" */","lastModifiedDate":"2022-03-31"},{"lineNumber":13,"author":{"gitId":"kevinkuo0320"},"content":"public class ImportWindow extends UiPart\u003cStage\u003e {","lastModifiedDate":"2022-03-31"},{"lineNumber":14,"author":{"gitId":"kevinkuo0320"},"content":"","lastModifiedDate":"2022-03-31"},{"lineNumber":15,"author":{"gitId":"kevinkuo0320"},"content":"    private static final String FXML \u003d \"ImportWindow.fxml\";","lastModifiedDate":"2022-03-31"},{"lineNumber":16,"author":{"gitId":"kevinkuo0320"},"content":"    private static final Logger logger \u003d LogsCenter.getLogger(ImportWindow.class);","lastModifiedDate":"2022-03-31"},{"lineNumber":17,"author":{"gitId":"kevinkuo0320"},"content":"","lastModifiedDate":"2022-03-31"},{"lineNumber":18,"author":{"gitId":"kevinkuo0320"},"content":"    @FXML","lastModifiedDate":"2022-03-31"},{"lineNumber":19,"author":{"gitId":"kevinkuo0320"},"content":"    private Label importFile;","lastModifiedDate":"2022-03-31"},{"lineNumber":20,"author":{"gitId":"kevinkuo0320"},"content":"","lastModifiedDate":"2022-03-31"},{"lineNumber":21,"author":{"gitId":"kevinkuo0320"},"content":"    /**","lastModifiedDate":"2022-03-31"},{"lineNumber":22,"author":{"gitId":"kevinkuo0320"},"content":"     * Creates a new ImportWindow","lastModifiedDate":"2022-03-31"},{"lineNumber":23,"author":{"gitId":"kevinkuo0320"},"content":"     * @param root Stage to use as the root of the ImportWindow","lastModifiedDate":"2022-03-31"},{"lineNumber":24,"author":{"gitId":"kevinkuo0320"},"content":"     */","lastModifiedDate":"2022-03-31"},{"lineNumber":25,"author":{"gitId":"kevinkuo0320"},"content":"    public ImportWindow(Stage root) {","lastModifiedDate":"2022-03-31"},{"lineNumber":26,"author":{"gitId":"kevinkuo0320"},"content":"        super(FXML, root);","lastModifiedDate":"2022-03-31"},{"lineNumber":27,"author":{"gitId":"kevinkuo0320"},"content":"    }","lastModifiedDate":"2022-03-31"},{"lineNumber":28,"author":{"gitId":"kevinkuo0320"},"content":"","lastModifiedDate":"2022-03-31"},{"lineNumber":29,"author":{"gitId":"kevinkuo0320"},"content":"    /**","lastModifiedDate":"2022-03-31"},{"lineNumber":30,"author":{"gitId":"kevinkuo0320"},"content":"     * Creates a new ImportWindow","lastModifiedDate":"2022-03-31"},{"lineNumber":31,"author":{"gitId":"kevinkuo0320"},"content":"     */","lastModifiedDate":"2022-03-31"},{"lineNumber":32,"author":{"gitId":"kevinkuo0320"},"content":"    public ImportWindow() {","lastModifiedDate":"2022-03-31"},{"lineNumber":33,"author":{"gitId":"kevinkuo0320"},"content":"        this(new Stage());","lastModifiedDate":"2022-03-31"},{"lineNumber":34,"author":{"gitId":"kevinkuo0320"},"content":"    }","lastModifiedDate":"2022-03-31"},{"lineNumber":35,"author":{"gitId":"kevinkuo0320"},"content":"","lastModifiedDate":"2022-03-31"},{"lineNumber":36,"author":{"gitId":"kevinkuo0320"},"content":"    /**","lastModifiedDate":"2022-03-31"},{"lineNumber":37,"author":{"gitId":"kevinkuo0320"},"content":"     * Shows the import window.","lastModifiedDate":"2022-03-31"},{"lineNumber":38,"author":{"gitId":"kevinkuo0320"},"content":"     * @throws IllegalStateException","lastModifiedDate":"2022-03-31"},{"lineNumber":39,"author":{"gitId":"kevinkuo0320"},"content":"     * \u003cul\u003e","lastModifiedDate":"2022-03-31"},{"lineNumber":40,"author":{"gitId":"kevinkuo0320"},"content":"     *     \u003cli\u003e","lastModifiedDate":"2022-03-31"},{"lineNumber":41,"author":{"gitId":"kevinkuo0320"},"content":"     *         if this method is called on a thread other than the JavaFX Application Thread.","lastModifiedDate":"2022-03-31"},{"lineNumber":42,"author":{"gitId":"kevinkuo0320"},"content":"     *     \u003c/li\u003e","lastModifiedDate":"2022-03-31"},{"lineNumber":43,"author":{"gitId":"kevinkuo0320"},"content":"     *     \u003cli\u003e","lastModifiedDate":"2022-03-31"},{"lineNumber":44,"author":{"gitId":"kevinkuo0320"},"content":"     *         if this method is called during animation or layout processing.","lastModifiedDate":"2022-03-31"},{"lineNumber":45,"author":{"gitId":"kevinkuo0320"},"content":"     *     \u003c/li\u003e","lastModifiedDate":"2022-03-31"},{"lineNumber":46,"author":{"gitId":"kevinkuo0320"},"content":"     *     \u003cli\u003e","lastModifiedDate":"2022-03-31"},{"lineNumber":47,"author":{"gitId":"kevinkuo0320"},"content":"     *         if this method is called on the primary stage.","lastModifiedDate":"2022-03-31"},{"lineNumber":48,"author":{"gitId":"kevinkuo0320"},"content":"     *     \u003c/li\u003e","lastModifiedDate":"2022-03-31"},{"lineNumber":49,"author":{"gitId":"kevinkuo0320"},"content":"     *     \u003cli\u003e","lastModifiedDate":"2022-03-31"},{"lineNumber":50,"author":{"gitId":"kevinkuo0320"},"content":"     *         if {@code dialogStage} is already showing.","lastModifiedDate":"2022-03-31"},{"lineNumber":51,"author":{"gitId":"kevinkuo0320"},"content":"     *     \u003c/li\u003e","lastModifiedDate":"2022-03-31"},{"lineNumber":52,"author":{"gitId":"kevinkuo0320"},"content":"     * \u003c/ul\u003e","lastModifiedDate":"2022-03-31"},{"lineNumber":53,"author":{"gitId":"kevinkuo0320"},"content":"     */","lastModifiedDate":"2022-03-31"},{"lineNumber":54,"author":{"gitId":"kevinkuo0320"},"content":"    public void show() {","lastModifiedDate":"2022-03-31"},{"lineNumber":55,"author":{"gitId":"kevinkuo0320"},"content":"        logger.fine(\"Importing excel file\");","lastModifiedDate":"2022-03-31"},{"lineNumber":56,"author":{"gitId":"kevinkuo0320"},"content":"        getRoot().show();","lastModifiedDate":"2022-03-31"},{"lineNumber":57,"author":{"gitId":"kevinkuo0320"},"content":"        getRoot().centerOnScreen();","lastModifiedDate":"2022-03-31"},{"lineNumber":58,"author":{"gitId":"kevinkuo0320"},"content":"    }","lastModifiedDate":"2022-03-31"},{"lineNumber":59,"author":{"gitId":"kevinkuo0320"},"content":"","lastModifiedDate":"2022-03-31"},{"lineNumber":60,"author":{"gitId":"kevinkuo0320"},"content":"    /**","lastModifiedDate":"2022-03-31"},{"lineNumber":61,"author":{"gitId":"kevinkuo0320"},"content":"     * Returns true if the import window is currently being shown.","lastModifiedDate":"2022-03-31"},{"lineNumber":62,"author":{"gitId":"kevinkuo0320"},"content":"     */","lastModifiedDate":"2022-03-31"},{"lineNumber":63,"author":{"gitId":"kevinkuo0320"},"content":"    public boolean isShowing() {","lastModifiedDate":"2022-03-31"},{"lineNumber":64,"author":{"gitId":"kevinkuo0320"},"content":"        return getRoot().isShowing();","lastModifiedDate":"2022-03-31"},{"lineNumber":65,"author":{"gitId":"kevinkuo0320"},"content":"    }","lastModifiedDate":"2022-03-31"},{"lineNumber":66,"author":{"gitId":"kevinkuo0320"},"content":"","lastModifiedDate":"2022-03-31"},{"lineNumber":67,"author":{"gitId":"kevinkuo0320"},"content":"    /**","lastModifiedDate":"2022-03-31"},{"lineNumber":68,"author":{"gitId":"kevinkuo0320"},"content":"     * Hides the import window.","lastModifiedDate":"2022-03-31"},{"lineNumber":69,"author":{"gitId":"kevinkuo0320"},"content":"     */","lastModifiedDate":"2022-03-31"},{"lineNumber":70,"author":{"gitId":"kevinkuo0320"},"content":"    public void hide() {","lastModifiedDate":"2022-03-31"},{"lineNumber":71,"author":{"gitId":"kevinkuo0320"},"content":"        getRoot().hide();","lastModifiedDate":"2022-03-31"},{"lineNumber":72,"author":{"gitId":"kevinkuo0320"},"content":"    }","lastModifiedDate":"2022-03-31"},{"lineNumber":73,"author":{"gitId":"kevinkuo0320"},"content":"","lastModifiedDate":"2022-03-31"},{"lineNumber":74,"author":{"gitId":"kevinkuo0320"},"content":"    /**","lastModifiedDate":"2022-03-31"},{"lineNumber":75,"author":{"gitId":"kevinkuo0320"},"content":"     * Focuses on the import window.","lastModifiedDate":"2022-03-31"},{"lineNumber":76,"author":{"gitId":"kevinkuo0320"},"content":"     */","lastModifiedDate":"2022-03-31"},{"lineNumber":77,"author":{"gitId":"kevinkuo0320"},"content":"    public void focus() {","lastModifiedDate":"2022-03-31"},{"lineNumber":78,"author":{"gitId":"kevinkuo0320"},"content":"        getRoot().requestFocus();","lastModifiedDate":"2022-03-31"},{"lineNumber":79,"author":{"gitId":"kevinkuo0320"},"content":"    }","lastModifiedDate":"2022-03-31"},{"lineNumber":80,"author":{"gitId":"kevinkuo0320"},"content":"}","lastModifiedDate":"2022-03-31"}],"authorContributionMap":{"kevinkuo0320":80}},{"path":"src/main/java/seedu/address/ui/MainWindow.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.ui;","lastModifiedDate":"2016-09-22"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":3,"author":{"gitId":"kevinkuo0320"},"content":"import java.io.File;","lastModifiedDate":"2022-03-31"},{"lineNumber":4,"author":{"gitId":"kevinkuo0320"},"content":"import java.util.List;","lastModifiedDate":"2022-03-31"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.util.logging.Logger;","lastModifiedDate":"2017-06-16"},{"lineNumber":6,"author":{"gitId":"kevinkuo0320"},"content":"import javax.swing.JDialog;","lastModifiedDate":"2022-03-31"},{"lineNumber":7,"author":{"gitId":"kevinkuo0320"},"content":"import javax.swing.JFileChooser;","lastModifiedDate":"2022-03-31"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-16"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import javafx.event.ActionEvent;","lastModifiedDate":"2016-12-18"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import javafx.fxml.FXML;","lastModifiedDate":"2016-08-26"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import javafx.scene.control.MenuItem;","lastModifiedDate":"2016-08-26"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import javafx.scene.control.TextInputControl;","lastModifiedDate":"2016-12-18"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import javafx.scene.input.KeyCombination;","lastModifiedDate":"2016-08-26"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import javafx.scene.input.KeyEvent;","lastModifiedDate":"2016-12-18"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import javafx.scene.layout.StackPane;","lastModifiedDate":"2017-05-09"},{"lineNumber":16,"author":{"gitId":"-"},"content":"import javafx.stage.Stage;","lastModifiedDate":"2016-08-18"},{"lineNumber":17,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.GuiSettings;","lastModifiedDate":"2016-09-28"},{"lineNumber":18,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.LogsCenter;","lastModifiedDate":"2017-06-16"},{"lineNumber":19,"author":{"gitId":"-"},"content":"import seedu.address.logic.Logic;","lastModifiedDate":"2016-09-25"},{"lineNumber":20,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.CommandResult;","lastModifiedDate":"2018-12-09"},{"lineNumber":21,"author":{"gitId":"cwq2326"},"content":"import seedu.address.logic.commands.ResizeCommand;","lastModifiedDate":"2022-03-31"},{"lineNumber":22,"author":{"gitId":"cwq2326"},"content":"import seedu.address.logic.commands.SummariseCommand;","lastModifiedDate":"2022-03-24"},{"lineNumber":23,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.exceptions.CommandException;","lastModifiedDate":"2018-12-09"},{"lineNumber":24,"author":{"gitId":"-"},"content":"import seedu.address.logic.parser.exceptions.ParseException;","lastModifiedDate":"2018-12-09"},{"lineNumber":25,"author":{"gitId":"kevinkuo0320"},"content":"import seedu.address.model.excel.ImportFileParser;","lastModifiedDate":"2022-03-31"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-09"},{"lineNumber":27,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-18"},{"lineNumber":28,"author":{"gitId":"-"},"content":" * The Main Window. Provides the basic application layout containing","lastModifiedDate":"2016-08-18"},{"lineNumber":29,"author":{"gitId":"-"},"content":" * a menu bar and space where other JavaFX elements can be placed.","lastModifiedDate":"2016-08-18"},{"lineNumber":30,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-18"},{"lineNumber":31,"author":{"gitId":"-"},"content":"public class MainWindow extends UiPart\u003cStage\u003e {","lastModifiedDate":"2017-11-29"},{"lineNumber":32,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-28"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    private static final String FXML \u003d \"MainWindow.fxml\";","lastModifiedDate":"2016-08-18"},{"lineNumber":34,"author":{"gitId":"kevinkuo0320"},"content":"    private static HelpWindow helpWindow;","lastModifiedDate":"2022-03-31"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    private final Logger logger \u003d LogsCenter.getLogger(getClass());","lastModifiedDate":"2018-08-14"},{"lineNumber":37,"author":{"gitId":"cwq2326"},"content":"    private final Double resultDisplaySizeOne \u003d 100.0;","lastModifiedDate":"2022-03-28"},{"lineNumber":38,"author":{"gitId":"cwq2326"},"content":"    private final Double resultDisplaySizeTwo \u003d 200.0;","lastModifiedDate":"2022-03-28"},{"lineNumber":39,"author":{"gitId":"cwq2326"},"content":"    private final Double resultDisplaySizeThree \u003d 300.0;","lastModifiedDate":"2022-03-28"},{"lineNumber":40,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-16"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    private Stage primaryStage;","lastModifiedDate":"2016-12-02"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    private Logic logic;","lastModifiedDate":"2016-09-25"},{"lineNumber":43,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    // Independent Ui parts residing in this Ui container","lastModifiedDate":"2016-08-18"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    private PersonListPanel personListPanel;","lastModifiedDate":"2016-08-18"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    private ResultDisplay resultDisplay;","lastModifiedDate":"2018-12-09"},{"lineNumber":47,"author":{"gitId":"DannyDakota"},"content":"    private EmailWindow emailWindow;","lastModifiedDate":"2022-03-22"},{"lineNumber":48,"author":{"gitId":"kevinkuo0320"},"content":"    private ImportWindow importWindow;","lastModifiedDate":"2022-03-31"},{"lineNumber":49,"author":{"gitId":"kevinkuo0320"},"content":"","lastModifiedDate":"2022-03-31"},{"lineNumber":50,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":51,"author":{"gitId":"cwq2326"},"content":"    @FXML","lastModifiedDate":"2022-03-22"},{"lineNumber":52,"author":{"gitId":"cwq2326"},"content":"    private PieChartWindow pieChartWindow;","lastModifiedDate":"2022-03-22"},{"lineNumber":53,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-03-22"},{"lineNumber":54,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-09-21"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    private StackPane commandBoxPlaceholder;","lastModifiedDate":"2017-05-09"},{"lineNumber":56,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-08-18"},{"lineNumber":58,"author":{"gitId":"-"},"content":"    private MenuItem helpMenuItem;","lastModifiedDate":"2016-08-18"},{"lineNumber":59,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-09-21"},{"lineNumber":61,"author":{"gitId":"-"},"content":"    private StackPane personListPanelPlaceholder;","lastModifiedDate":"2017-05-09"},{"lineNumber":62,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":63,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-09-21"},{"lineNumber":64,"author":{"gitId":"-"},"content":"    private StackPane resultDisplayPlaceholder;","lastModifiedDate":"2017-05-09"},{"lineNumber":65,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":66,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-09-21"},{"lineNumber":67,"author":{"gitId":"-"},"content":"    private StackPane statusbarPlaceholder;","lastModifiedDate":"2017-05-09"},{"lineNumber":68,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":69,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2020-05-27"},{"lineNumber":70,"author":{"gitId":"-"},"content":"     * Creates a {@code MainWindow} with the given {@code Stage} and {@code Logic}.","lastModifiedDate":"2020-05-27"},{"lineNumber":71,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2020-05-27"},{"lineNumber":72,"author":{"gitId":"-"},"content":"    public MainWindow(Stage primaryStage, Logic logic) {","lastModifiedDate":"2018-12-08"},{"lineNumber":73,"author":{"gitId":"-"},"content":"        super(FXML, primaryStage);","lastModifiedDate":"2017-11-29"},{"lineNumber":74,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":75,"author":{"gitId":"-"},"content":"        // Set dependencies","lastModifiedDate":"2016-09-21"},{"lineNumber":76,"author":{"gitId":"-"},"content":"        this.primaryStage \u003d primaryStage;","lastModifiedDate":"2016-12-02"},{"lineNumber":77,"author":{"gitId":"-"},"content":"        this.logic \u003d logic;","lastModifiedDate":"2016-09-25"},{"lineNumber":78,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":79,"author":{"gitId":"-"},"content":"        // Configure the UI","lastModifiedDate":"2016-09-21"},{"lineNumber":80,"author":{"gitId":"-"},"content":"        setWindowDefaultSize(logic.getGuiSettings());","lastModifiedDate":"2018-11-27"},{"lineNumber":81,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":82,"author":{"gitId":"-"},"content":"        setAccelerators();","lastModifiedDate":"2016-09-21"},{"lineNumber":83,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-03-15"},{"lineNumber":84,"author":{"gitId":"-"},"content":"        helpWindow \u003d new HelpWindow();","lastModifiedDate":"2018-03-15"},{"lineNumber":85,"author":{"gitId":"DannyDakota"},"content":"        emailWindow \u003d new EmailWindow(logic.getFilteredPersonList());","lastModifiedDate":"2022-03-24"},{"lineNumber":86,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-18"},{"lineNumber":87,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":88,"author":{"gitId":"-"},"content":"    public Stage getPrimaryStage() {","lastModifiedDate":"2016-12-24"},{"lineNumber":89,"author":{"gitId":"-"},"content":"        return primaryStage;","lastModifiedDate":"2016-12-24"},{"lineNumber":90,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-24"},{"lineNumber":91,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-24"},{"lineNumber":92,"author":{"gitId":"-"},"content":"    private void setAccelerators() {","lastModifiedDate":"2016-09-21"},{"lineNumber":93,"author":{"gitId":"-"},"content":"        setAccelerator(helpMenuItem, KeyCombination.valueOf(\"F1\"));","lastModifiedDate":"2016-12-18"},{"lineNumber":94,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-18"},{"lineNumber":95,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-18"},{"lineNumber":96,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-12-18"},{"lineNumber":97,"author":{"gitId":"-"},"content":"     * Sets the accelerator of a MenuItem.","lastModifiedDate":"2016-12-18"},{"lineNumber":98,"author":{"gitId":"cwq2326"},"content":"     *","lastModifiedDate":"2022-03-22"},{"lineNumber":99,"author":{"gitId":"-"},"content":"     * @param keyCombination the KeyCombination value of the accelerator","lastModifiedDate":"2016-12-18"},{"lineNumber":100,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-12-18"},{"lineNumber":101,"author":{"gitId":"-"},"content":"    private void setAccelerator(MenuItem menuItem, KeyCombination keyCombination) {","lastModifiedDate":"2016-12-18"},{"lineNumber":102,"author":{"gitId":"-"},"content":"        menuItem.setAccelerator(keyCombination);","lastModifiedDate":"2016-12-18"},{"lineNumber":103,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-18"},{"lineNumber":104,"author":{"gitId":"-"},"content":"        /*","lastModifiedDate":"2016-12-18"},{"lineNumber":105,"author":{"gitId":"-"},"content":"         * TODO: the code below can be removed once the bug reported here","lastModifiedDate":"2016-12-18"},{"lineNumber":106,"author":{"gitId":"-"},"content":"         * https://bugs.openjdk.java.net/browse/JDK-8131666","lastModifiedDate":"2016-12-18"},{"lineNumber":107,"author":{"gitId":"-"},"content":"         * is fixed in later version of SDK.","lastModifiedDate":"2016-12-18"},{"lineNumber":108,"author":{"gitId":"-"},"content":"         *","lastModifiedDate":"2016-12-18"},{"lineNumber":109,"author":{"gitId":"-"},"content":"         * According to the bug report, TextInputControl (TextField, TextArea) will","lastModifiedDate":"2016-12-18"},{"lineNumber":110,"author":{"gitId":"-"},"content":"         * consume function-key events. Because CommandBox contains a TextField, and","lastModifiedDate":"2016-12-18"},{"lineNumber":111,"author":{"gitId":"-"},"content":"         * ResultDisplay contains a TextArea, thus some accelerators (e.g F1) will","lastModifiedDate":"2016-12-18"},{"lineNumber":112,"author":{"gitId":"-"},"content":"         * not work when the focus is in them because the key event is consumed by","lastModifiedDate":"2016-12-18"},{"lineNumber":113,"author":{"gitId":"-"},"content":"         * the TextInputControl(s).","lastModifiedDate":"2016-12-18"},{"lineNumber":114,"author":{"gitId":"-"},"content":"         *","lastModifiedDate":"2016-12-18"},{"lineNumber":115,"author":{"gitId":"-"},"content":"         * For now, we add following event filter to capture such key events and open","lastModifiedDate":"2016-12-18"},{"lineNumber":116,"author":{"gitId":"-"},"content":"         * help window purposely so to support accelerators even when focus is","lastModifiedDate":"2016-12-18"},{"lineNumber":117,"author":{"gitId":"-"},"content":"         * in CommandBox or ResultDisplay.","lastModifiedDate":"2016-12-18"},{"lineNumber":118,"author":{"gitId":"-"},"content":"         */","lastModifiedDate":"2016-12-18"},{"lineNumber":119,"author":{"gitId":"-"},"content":"        getRoot().addEventFilter(KeyEvent.KEY_PRESSED, event -\u003e {","lastModifiedDate":"2016-12-24"},{"lineNumber":120,"author":{"gitId":"-"},"content":"            if (event.getTarget() instanceof TextInputControl \u0026\u0026 keyCombination.match(event)) {","lastModifiedDate":"2016-12-18"},{"lineNumber":121,"author":{"gitId":"-"},"content":"                menuItem.getOnAction().handle(new ActionEvent());","lastModifiedDate":"2016-12-18"},{"lineNumber":122,"author":{"gitId":"-"},"content":"                event.consume();","lastModifiedDate":"2016-12-18"},{"lineNumber":123,"author":{"gitId":"-"},"content":"            }","lastModifiedDate":"2016-12-18"},{"lineNumber":124,"author":{"gitId":"-"},"content":"        });","lastModifiedDate":"2016-12-18"},{"lineNumber":125,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-21"},{"lineNumber":126,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":127,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-08-16"},{"lineNumber":128,"author":{"gitId":"-"},"content":"     * Fills up all the placeholders of this window.","lastModifiedDate":"2017-08-16"},{"lineNumber":129,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-08-16"},{"lineNumber":130,"author":{"gitId":"cwq2326"},"content":"","lastModifiedDate":"2022-03-22"},{"lineNumber":131,"author":{"gitId":"-"},"content":"    void fillInnerParts() {","lastModifiedDate":"2016-09-21"},{"lineNumber":132,"author":{"gitId":"cwq2326"},"content":"","lastModifiedDate":"2022-03-22"},{"lineNumber":133,"author":{"gitId":"-"},"content":"        personListPanel \u003d new PersonListPanel(logic.getFilteredPersonList());","lastModifiedDate":"2019-01-25"},{"lineNumber":134,"author":{"gitId":"-"},"content":"        personListPanelPlaceholder.getChildren().add(personListPanel.getRoot());","lastModifiedDate":"2017-06-14"},{"lineNumber":135,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-14"},{"lineNumber":136,"author":{"gitId":"-"},"content":"        resultDisplay \u003d new ResultDisplay();","lastModifiedDate":"2018-12-09"},{"lineNumber":137,"author":{"gitId":"-"},"content":"        resultDisplayPlaceholder.getChildren().add(resultDisplay.getRoot());","lastModifiedDate":"2017-06-14"},{"lineNumber":138,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-14"},{"lineNumber":139,"author":{"gitId":"-"},"content":"        StatusBarFooter statusBarFooter \u003d new StatusBarFooter(logic.getAddressBookFilePath());","lastModifiedDate":"2019-01-25"},{"lineNumber":140,"author":{"gitId":"-"},"content":"        statusbarPlaceholder.getChildren().add(statusBarFooter.getRoot());","lastModifiedDate":"2017-06-14"},{"lineNumber":141,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-14"},{"lineNumber":142,"author":{"gitId":"-"},"content":"        CommandBox commandBox \u003d new CommandBox(this::executeCommand);","lastModifiedDate":"2019-01-25"},{"lineNumber":143,"author":{"gitId":"-"},"content":"        commandBoxPlaceholder.getChildren().add(commandBox.getRoot());","lastModifiedDate":"2017-06-14"},{"lineNumber":144,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-18"},{"lineNumber":145,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":146,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-18"},{"lineNumber":147,"author":{"gitId":"-"},"content":"     * Sets the default size based on {@code guiSettings}.","lastModifiedDate":"2018-11-27"},{"lineNumber":148,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-18"},{"lineNumber":149,"author":{"gitId":"-"},"content":"    private void setWindowDefaultSize(GuiSettings guiSettings) {","lastModifiedDate":"2018-11-27"},{"lineNumber":150,"author":{"gitId":"-"},"content":"        primaryStage.setHeight(guiSettings.getWindowHeight());","lastModifiedDate":"2018-11-27"},{"lineNumber":151,"author":{"gitId":"-"},"content":"        primaryStage.setWidth(guiSettings.getWindowWidth());","lastModifiedDate":"2018-11-27"},{"lineNumber":152,"author":{"gitId":"-"},"content":"        if (guiSettings.getWindowCoordinates() !\u003d null) {","lastModifiedDate":"2018-11-27"},{"lineNumber":153,"author":{"gitId":"-"},"content":"            primaryStage.setX(guiSettings.getWindowCoordinates().getX());","lastModifiedDate":"2018-11-27"},{"lineNumber":154,"author":{"gitId":"-"},"content":"            primaryStage.setY(guiSettings.getWindowCoordinates().getY());","lastModifiedDate":"2018-11-27"},{"lineNumber":155,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-08-18"},{"lineNumber":156,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-18"},{"lineNumber":157,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":158,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-08-16"},{"lineNumber":159,"author":{"gitId":"-"},"content":"     * Opens the help window or focuses on it if it\u0027s already opened.","lastModifiedDate":"2018-03-15"},{"lineNumber":160,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-08-16"},{"lineNumber":161,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-08-18"},{"lineNumber":162,"author":{"gitId":"-"},"content":"    public void handleHelp() {","lastModifiedDate":"2016-08-31"},{"lineNumber":163,"author":{"gitId":"-"},"content":"        if (!helpWindow.isShowing()) {","lastModifiedDate":"2018-03-15"},{"lineNumber":164,"author":{"gitId":"-"},"content":"            helpWindow.show();","lastModifiedDate":"2016-08-18"},{"lineNumber":165,"author":{"gitId":"-"},"content":"        } else {","lastModifiedDate":"2018-03-15"},{"lineNumber":166,"author":{"gitId":"-"},"content":"            helpWindow.focus();","lastModifiedDate":"2018-03-15"},{"lineNumber":167,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-03-15"},{"lineNumber":168,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-18"},{"lineNumber":169,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":170,"author":{"gitId":"kevinkuo0320"},"content":"    /**","lastModifiedDate":"2022-03-31"},{"lineNumber":171,"author":{"gitId":"kevinkuo0320"},"content":"     * Opens file manager for import window","lastModifiedDate":"2022-03-31"},{"lineNumber":172,"author":{"gitId":"kevinkuo0320"},"content":"     */","lastModifiedDate":"2022-03-31"},{"lineNumber":173,"author":{"gitId":"kevinkuo0320"},"content":"    @FXML","lastModifiedDate":"2022-03-31"},{"lineNumber":174,"author":{"gitId":"kevinkuo0320"},"content":"    public void handleImport () throws ParseException, CommandException {","lastModifiedDate":"2022-03-31"},{"lineNumber":175,"author":{"gitId":"kevinkuo0320"},"content":"        JFileChooser fileChooser \u003d new JFileChooser();","lastModifiedDate":"2022-03-31"},{"lineNumber":176,"author":{"gitId":"kevinkuo0320"},"content":"        JDialog dialog \u003d new JDialog();","lastModifiedDate":"2022-03-31"},{"lineNumber":177,"author":{"gitId":"kevinkuo0320"},"content":"        fileChooser.setCurrentDirectory(new File(System.getProperty(\"user.dir\")));","lastModifiedDate":"2022-03-31"},{"lineNumber":178,"author":{"gitId":"kevinkuo0320"},"content":"        int returnValue \u003d fileChooser.showOpenDialog(dialog);","lastModifiedDate":"2022-03-31"},{"lineNumber":179,"author":{"gitId":"kevinkuo0320"},"content":"        if (returnValue \u003d\u003d JFileChooser.APPROVE_OPTION) {","lastModifiedDate":"2022-03-31"},{"lineNumber":180,"author":{"gitId":"kevinkuo0320"},"content":"            File selectedFile \u003d fileChooser.getSelectedFile();","lastModifiedDate":"2022-03-31"},{"lineNumber":181,"author":{"gitId":"kevinkuo0320"},"content":"            assert (selectedFile !\u003d null);","lastModifiedDate":"2022-03-31"},{"lineNumber":182,"author":{"gitId":"kevinkuo0320"},"content":"            ImportFileParser converter \u003d new ImportFileParser();","lastModifiedDate":"2022-03-31"},{"lineNumber":183,"author":{"gitId":"kevinkuo0320"},"content":"            List\u003cString\u003e res \u003d converter.jsonToPerson(selectedFile);","lastModifiedDate":"2022-03-31"},{"lineNumber":184,"author":{"gitId":"kevinkuo0320"},"content":"            for (int i \u003d 0; i \u003c res.size(); i++) {","lastModifiedDate":"2022-03-31"},{"lineNumber":185,"author":{"gitId":"kevinkuo0320"},"content":"                executeCommand(res.get(i));","lastModifiedDate":"2022-03-31"},{"lineNumber":186,"author":{"gitId":"kevinkuo0320"},"content":"            }","lastModifiedDate":"2022-03-31"},{"lineNumber":187,"author":{"gitId":"kevinkuo0320"},"content":"        }","lastModifiedDate":"2022-03-31"},{"lineNumber":188,"author":{"gitId":"kevinkuo0320"},"content":"    }","lastModifiedDate":"2022-03-31"},{"lineNumber":189,"author":{"gitId":"kevinkuo0320"},"content":"","lastModifiedDate":"2022-03-31"},{"lineNumber":190,"author":{"gitId":"cwq2326"},"content":"    /**","lastModifiedDate":"2022-03-28"},{"lineNumber":191,"author":{"gitId":"cwq2326"},"content":"     * Toggles display text place holder height to grow and shrink.","lastModifiedDate":"2022-03-28"},{"lineNumber":192,"author":{"gitId":"cwq2326"},"content":"     */","lastModifiedDate":"2022-03-28"},{"lineNumber":193,"author":{"gitId":"cwq2326"},"content":"    @FXML","lastModifiedDate":"2022-03-28"},{"lineNumber":194,"author":{"gitId":"cwq2326"},"content":"    public void handleResize() {","lastModifiedDate":"2022-03-28"},{"lineNumber":195,"author":{"gitId":"cwq2326"},"content":"        double height \u003d resultDisplayPlaceholder.getHeight();","lastModifiedDate":"2022-03-28"},{"lineNumber":196,"author":{"gitId":"cwq2326"},"content":"        if (height \u003d\u003d resultDisplaySizeOne) {","lastModifiedDate":"2022-03-28"},{"lineNumber":197,"author":{"gitId":"cwq2326"},"content":"            resultDisplayPlaceholder.setMinHeight(resultDisplaySizeTwo);","lastModifiedDate":"2022-03-28"},{"lineNumber":198,"author":{"gitId":"cwq2326"},"content":"        } else if (height \u003d\u003d resultDisplaySizeTwo) {","lastModifiedDate":"2022-03-28"},{"lineNumber":199,"author":{"gitId":"cwq2326"},"content":"            resultDisplayPlaceholder.setMinHeight(resultDisplaySizeThree);","lastModifiedDate":"2022-03-28"},{"lineNumber":200,"author":{"gitId":"cwq2326"},"content":"        } else {","lastModifiedDate":"2022-03-28"},{"lineNumber":201,"author":{"gitId":"cwq2326"},"content":"            resultDisplayPlaceholder.setMinHeight(resultDisplaySizeOne);","lastModifiedDate":"2022-03-28"},{"lineNumber":202,"author":{"gitId":"cwq2326"},"content":"        }","lastModifiedDate":"2022-03-28"},{"lineNumber":203,"author":{"gitId":"cwq2326"},"content":"    }","lastModifiedDate":"2022-03-28"},{"lineNumber":204,"author":{"gitId":"cwq2326"},"content":"","lastModifiedDate":"2022-03-28"},{"lineNumber":205,"author":{"gitId":"kevinkuo0320"},"content":"    /**","lastModifiedDate":"2022-03-31"},{"lineNumber":206,"author":{"gitId":"kevinkuo0320"},"content":"     * Instantiates a new EmailWindow and shows it.","lastModifiedDate":"2022-03-31"},{"lineNumber":207,"author":{"gitId":"kevinkuo0320"},"content":"     */","lastModifiedDate":"2022-03-31"},{"lineNumber":208,"author":{"gitId":"kevinkuo0320"},"content":"    public void createImportWindow() {","lastModifiedDate":"2022-03-31"},{"lineNumber":209,"author":{"gitId":"kevinkuo0320"},"content":"        importWindow \u003d new ImportWindow();","lastModifiedDate":"2022-03-31"},{"lineNumber":210,"author":{"gitId":"kevinkuo0320"},"content":"        importWindow.show();","lastModifiedDate":"2022-03-31"},{"lineNumber":211,"author":{"gitId":"kevinkuo0320"},"content":"    }","lastModifiedDate":"2022-03-31"},{"lineNumber":212,"author":{"gitId":"kevinkuo0320"},"content":"","lastModifiedDate":"2022-03-31"},{"lineNumber":213,"author":{"gitId":"DannyDakota"},"content":"    /**","lastModifiedDate":"2022-03-22"},{"lineNumber":214,"author":{"gitId":"DannyDakota"},"content":"     * Opens the email window or opens an updated window it if it\u0027s already opened.","lastModifiedDate":"2022-03-22"},{"lineNumber":215,"author":{"gitId":"DannyDakota"},"content":"     */","lastModifiedDate":"2022-03-22"},{"lineNumber":216,"author":{"gitId":"DannyDakota"},"content":"    @FXML","lastModifiedDate":"2022-03-22"},{"lineNumber":217,"author":{"gitId":"DannyDakota"},"content":"    public void handleEmailWindow() {","lastModifiedDate":"2022-03-22"},{"lineNumber":218,"author":{"gitId":"DannyDakota"},"content":"        if (!emailWindow.isShowing()) {","lastModifiedDate":"2022-03-22"},{"lineNumber":219,"author":{"gitId":"DannyDakota"},"content":"            createEmailWindow();","lastModifiedDate":"2022-03-22"},{"lineNumber":220,"author":{"gitId":"DannyDakota"},"content":"        } else {","lastModifiedDate":"2022-03-22"},{"lineNumber":221,"author":{"gitId":"DannyDakota"},"content":"            emailWindow.hide();","lastModifiedDate":"2022-03-22"},{"lineNumber":222,"author":{"gitId":"DannyDakota"},"content":"            createEmailWindow();","lastModifiedDate":"2022-03-22"},{"lineNumber":223,"author":{"gitId":"DannyDakota"},"content":"        }","lastModifiedDate":"2022-03-22"},{"lineNumber":224,"author":{"gitId":"DannyDakota"},"content":"    }","lastModifiedDate":"2022-03-22"},{"lineNumber":225,"author":{"gitId":"DannyDakota"},"content":"","lastModifiedDate":"2022-03-22"},{"lineNumber":226,"author":{"gitId":"cwq2326"},"content":"    /**","lastModifiedDate":"2022-03-31"},{"lineNumber":227,"author":{"gitId":"cwq2326"},"content":"     * Resizes the result display window according to 3 different sizes.","lastModifiedDate":"2022-03-31"},{"lineNumber":228,"author":{"gitId":"cwq2326"},"content":"     */","lastModifiedDate":"2022-03-31"},{"lineNumber":229,"author":{"gitId":"cwq2326"},"content":"    @FXML","lastModifiedDate":"2022-03-31"},{"lineNumber":230,"author":{"gitId":"cwq2326"},"content":"    public void handleResizeResultDisplayWindow() {","lastModifiedDate":"2022-03-31"},{"lineNumber":231,"author":{"gitId":"cwq2326"},"content":"        resultDisplayPlaceholder.setMinHeight(ResizeCommand.getResultWindowDisplaySize()","lastModifiedDate":"2022-03-31"},{"lineNumber":232,"author":{"gitId":"cwq2326"},"content":"                * ResizeCommand.getResieWindowMultiplier());","lastModifiedDate":"2022-03-31"},{"lineNumber":233,"author":{"gitId":"cwq2326"},"content":"    }","lastModifiedDate":"2022-03-31"},{"lineNumber":234,"author":{"gitId":"cwq2326"},"content":"","lastModifiedDate":"2022-03-31"},{"lineNumber":235,"author":{"gitId":"DannyDakota"},"content":"    /**","lastModifiedDate":"2022-03-22"},{"lineNumber":236,"author":{"gitId":"DannyDakota"},"content":"     * Instantiates a new EmailWindow and shows it.","lastModifiedDate":"2022-03-24"},{"lineNumber":237,"author":{"gitId":"DannyDakota"},"content":"     */","lastModifiedDate":"2022-03-22"},{"lineNumber":238,"author":{"gitId":"DannyDakota"},"content":"    public void createEmailWindow() {","lastModifiedDate":"2022-03-22"},{"lineNumber":239,"author":{"gitId":"DannyDakota"},"content":"        emailWindow \u003d new EmailWindow(logic.getFilteredPersonList());","lastModifiedDate":"2022-03-22"},{"lineNumber":240,"author":{"gitId":"DannyDakota"},"content":"        emailWindow.show();","lastModifiedDate":"2022-03-22"},{"lineNumber":241,"author":{"gitId":"DannyDakota"},"content":"    }","lastModifiedDate":"2022-03-22"},{"lineNumber":242,"author":{"gitId":"DannyDakota"},"content":"","lastModifiedDate":"2022-03-22"},{"lineNumber":243,"author":{"gitId":"-"},"content":"    void show() {","lastModifiedDate":"2016-10-15"},{"lineNumber":244,"author":{"gitId":"-"},"content":"        primaryStage.show();","lastModifiedDate":"2016-08-18"},{"lineNumber":245,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-18"},{"lineNumber":246,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":247,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-18"},{"lineNumber":248,"author":{"gitId":"-"},"content":"     * Closes the application.","lastModifiedDate":"2016-08-18"},{"lineNumber":249,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-18"},{"lineNumber":250,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-08-18"},{"lineNumber":251,"author":{"gitId":"-"},"content":"    private void handleExit() {","lastModifiedDate":"2016-08-18"},{"lineNumber":252,"author":{"gitId":"-"},"content":"        GuiSettings guiSettings \u003d new GuiSettings(primaryStage.getWidth(), primaryStage.getHeight(),","lastModifiedDate":"2018-12-08"},{"lineNumber":253,"author":{"gitId":"-"},"content":"                (int) primaryStage.getX(), (int) primaryStage.getY());","lastModifiedDate":"2018-12-08"},{"lineNumber":254,"author":{"gitId":"-"},"content":"        logic.setGuiSettings(guiSettings);","lastModifiedDate":"2018-12-08"},{"lineNumber":255,"author":{"gitId":"-"},"content":"        helpWindow.hide();","lastModifiedDate":"2018-12-08"},{"lineNumber":256,"author":{"gitId":"DannyDakota"},"content":"        emailWindow.hide();","lastModifiedDate":"2022-03-22"},{"lineNumber":257,"author":{"gitId":"jiale-c"},"content":"        pieChartWindow.hide();","lastModifiedDate":"2022-04-03"},{"lineNumber":258,"author":{"gitId":"-"},"content":"        primaryStage.hide();","lastModifiedDate":"2018-12-08"},{"lineNumber":259,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-18"},{"lineNumber":260,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-25"},{"lineNumber":261,"author":{"gitId":"cwq2326"},"content":"    /**","lastModifiedDate":"2022-03-22"},{"lineNumber":262,"author":{"gitId":"cwq2326"},"content":"     * Creates and open a pie chart window if it is not yet created or not showing. Or else it will close, create and","lastModifiedDate":"2022-03-22"},{"lineNumber":263,"author":{"gitId":"cwq2326"},"content":"     * open a new pie chart window. Focus of window is not used because user might edit the contact in Tracey and","lastModifiedDate":"2022-03-22"},{"lineNumber":264,"author":{"gitId":"cwq2326"},"content":"     * use the {@code SummariseCommand} again, so an updated window is needed to be shown.","lastModifiedDate":"2022-03-22"},{"lineNumber":265,"author":{"gitId":"cwq2326"},"content":"     *","lastModifiedDate":"2022-03-28"},{"lineNumber":266,"author":{"gitId":"cwq2326"},"content":"     * @param message Feedback message from {@code SummariseCommand} to user","lastModifiedDate":"2022-03-22"},{"lineNumber":267,"author":{"gitId":"cwq2326"},"content":"     */","lastModifiedDate":"2022-03-22"},{"lineNumber":268,"author":{"gitId":"cwq2326"},"content":"    @FXML","lastModifiedDate":"2022-03-22"},{"lineNumber":269,"author":{"gitId":"cwq2326"},"content":"    private void handleSummarise(String message) {","lastModifiedDate":"2022-03-22"},{"lineNumber":270,"author":{"gitId":"cwq2326"},"content":"        if (SummariseCommand.shouldOpenPieChartWindow()) {","lastModifiedDate":"2022-03-24"},{"lineNumber":271,"author":{"gitId":"cwq2326"},"content":"            if (pieChartWindow \u003d\u003d null || !pieChartWindow.isShowing()) {","lastModifiedDate":"2022-03-22"},{"lineNumber":272,"author":{"gitId":"jiale-c"},"content":"                pieChartWindow \u003d new PieChartWindow();","lastModifiedDate":"2022-03-23"},{"lineNumber":273,"author":{"gitId":"cwq2326"},"content":"                pieChartWindow.show();","lastModifiedDate":"2022-03-22"},{"lineNumber":274,"author":{"gitId":"cwq2326"},"content":"                logger.info(\"Pie chart window is not yet initialised or not showing!\");","lastModifiedDate":"2022-03-24"},{"lineNumber":275,"author":{"gitId":"cwq2326"},"content":"            } else {","lastModifiedDate":"2022-03-22"},{"lineNumber":276,"author":{"gitId":"cwq2326"},"content":"                pieChartWindow.hide();","lastModifiedDate":"2022-03-22"},{"lineNumber":277,"author":{"gitId":"jiale-c"},"content":"                pieChartWindow \u003d new PieChartWindow();","lastModifiedDate":"2022-03-23"},{"lineNumber":278,"author":{"gitId":"cwq2326"},"content":"                pieChartWindow.show();","lastModifiedDate":"2022-03-22"},{"lineNumber":279,"author":{"gitId":"cwq2326"},"content":"                logger.info(\"Pie chart window already showing, proceeding to reopen it!\");","lastModifiedDate":"2022-03-24"},{"lineNumber":280,"author":{"gitId":"cwq2326"},"content":"            }","lastModifiedDate":"2022-03-24"},{"lineNumber":281,"author":{"gitId":"cwq2326"},"content":"        } else {","lastModifiedDate":"2022-03-24"},{"lineNumber":282,"author":{"gitId":"cwq2326"},"content":"            logger.info(\"Pie chart window not opened because address book is empty!\");","lastModifiedDate":"2022-03-24"},{"lineNumber":283,"author":{"gitId":"cwq2326"},"content":"        }","lastModifiedDate":"2022-03-22"},{"lineNumber":284,"author":{"gitId":"cwq2326"},"content":"    }","lastModifiedDate":"2022-03-22"},{"lineNumber":285,"author":{"gitId":"cwq2326"},"content":"","lastModifiedDate":"2022-03-22"},{"lineNumber":286,"author":{"gitId":"-"},"content":"    public PersonListPanel getPersonListPanel() {","lastModifiedDate":"2016-08-25"},{"lineNumber":287,"author":{"gitId":"-"},"content":"        return personListPanel;","lastModifiedDate":"2018-08-14"},{"lineNumber":288,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-25"},{"lineNumber":289,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":290,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-12-09"},{"lineNumber":291,"author":{"gitId":"-"},"content":"     * Executes the command and returns the result.","lastModifiedDate":"2018-12-09"},{"lineNumber":292,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2018-12-09"},{"lineNumber":293,"author":{"gitId":"-"},"content":"     * @see seedu.address.logic.Logic#execute(String)","lastModifiedDate":"2018-12-09"},{"lineNumber":294,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-12-09"},{"lineNumber":295,"author":{"gitId":"-"},"content":"    private CommandResult executeCommand(String commandText) throws CommandException, ParseException {","lastModifiedDate":"2018-12-09"},{"lineNumber":296,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2018-12-09"},{"lineNumber":297,"author":{"gitId":"-"},"content":"            CommandResult commandResult \u003d logic.execute(commandText);","lastModifiedDate":"2018-12-09"},{"lineNumber":298,"author":{"gitId":"-"},"content":"            logger.info(\"Result: \" + commandResult.getFeedbackToUser());","lastModifiedDate":"2018-12-09"},{"lineNumber":299,"author":{"gitId":"-"},"content":"            resultDisplay.setFeedbackToUser(commandResult.getFeedbackToUser());","lastModifiedDate":"2018-12-09"},{"lineNumber":300,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":301,"author":{"gitId":"cwq2326"},"content":"            if (commandResult.isSummarise()) {","lastModifiedDate":"2022-03-22"},{"lineNumber":302,"author":{"gitId":"cwq2326"},"content":"                handleSummarise(commandResult.getFeedbackToUser());","lastModifiedDate":"2022-03-22"},{"lineNumber":303,"author":{"gitId":"cwq2326"},"content":"            }","lastModifiedDate":"2022-03-22"},{"lineNumber":304,"author":{"gitId":"cwq2326"},"content":"","lastModifiedDate":"2022-03-22"},{"lineNumber":305,"author":{"gitId":"cwq2326"},"content":"            if (commandResult.isResize()) {","lastModifiedDate":"2022-03-31"},{"lineNumber":306,"author":{"gitId":"cwq2326"},"content":"                handleResizeResultDisplayWindow();","lastModifiedDate":"2022-03-31"},{"lineNumber":307,"author":{"gitId":"cwq2326"},"content":"            }","lastModifiedDate":"2022-03-31"},{"lineNumber":308,"author":{"gitId":"cwq2326"},"content":"","lastModifiedDate":"2022-03-31"},{"lineNumber":309,"author":{"gitId":"-"},"content":"            if (commandResult.isShowHelp()) {","lastModifiedDate":"2018-12-09"},{"lineNumber":310,"author":{"gitId":"-"},"content":"                handleHelp();","lastModifiedDate":"2018-12-09"},{"lineNumber":311,"author":{"gitId":"-"},"content":"            }","lastModifiedDate":"2018-12-09"},{"lineNumber":312,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":313,"author":{"gitId":"DannyDakota"},"content":"            if (commandResult.isShowEmail()) {","lastModifiedDate":"2022-03-31"},{"lineNumber":314,"author":{"gitId":"DannyDakota"},"content":"                handleEmailWindow();","lastModifiedDate":"2022-03-31"},{"lineNumber":315,"author":{"gitId":"DannyDakota"},"content":"            }","lastModifiedDate":"2022-03-31"},{"lineNumber":316,"author":{"gitId":"DannyDakota"},"content":"","lastModifiedDate":"2022-03-31"},{"lineNumber":317,"author":{"gitId":"-"},"content":"            if (commandResult.isExit()) {","lastModifiedDate":"2018-12-09"},{"lineNumber":318,"author":{"gitId":"-"},"content":"                handleExit();","lastModifiedDate":"2018-12-09"},{"lineNumber":319,"author":{"gitId":"-"},"content":"            }","lastModifiedDate":"2018-12-09"},{"lineNumber":320,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":321,"author":{"gitId":"-"},"content":"            return commandResult;","lastModifiedDate":"2018-12-09"},{"lineNumber":322,"author":{"gitId":"-"},"content":"        } catch (CommandException | ParseException e) {","lastModifiedDate":"2018-12-09"},{"lineNumber":323,"author":{"gitId":"-"},"content":"            logger.info(\"Invalid command: \" + commandText);","lastModifiedDate":"2018-12-09"},{"lineNumber":324,"author":{"gitId":"-"},"content":"            resultDisplay.setFeedbackToUser(e.getMessage());","lastModifiedDate":"2018-12-09"},{"lineNumber":325,"author":{"gitId":"-"},"content":"            throw e;","lastModifiedDate":"2018-12-09"},{"lineNumber":326,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-12-09"},{"lineNumber":327,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-12-09"},{"lineNumber":328,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-18"}],"authorContributionMap":{"DannyDakota":28,"kevinkuo0320":36,"cwq2326":65,"jiale-c":3,"-":196}},{"path":"src/main/java/seedu/address/ui/PersonCard.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.ui;","lastModifiedDate":"2016-09-22"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.util.Comparator;","lastModifiedDate":"2019-01-02"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-01-02"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import javafx.fxml.FXML;","lastModifiedDate":"2016-09-21"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import javafx.scene.control.Label;","lastModifiedDate":"2016-09-21"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import javafx.scene.layout.FlowPane;","lastModifiedDate":"2016-12-18"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import javafx.scene.layout.HBox;","lastModifiedDate":"2016-09-21"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import javafx.scene.layout.Region;","lastModifiedDate":"2016-12-24"},{"lineNumber":10,"author":{"gitId":"cwq2326"},"content":"import seedu.address.model.person.CovidStatus;","lastModifiedDate":"2022-02-28"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2018-01-10"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":13,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-08-16"},{"lineNumber":14,"author":{"gitId":"-"},"content":" * An UI component that displays information of a {@code Person}.","lastModifiedDate":"2017-08-16"},{"lineNumber":15,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-08-16"},{"lineNumber":16,"author":{"gitId":"-"},"content":"public class PersonCard extends UiPart\u003cRegion\u003e {","lastModifiedDate":"2016-12-24"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    private static final String FXML \u003d \"PersonListCard.fxml\";","lastModifiedDate":"2016-09-21"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-03-25"},{"lineNumber":21,"author":{"gitId":"-"},"content":"     * Note: Certain keywords such as \"location\" and \"resources\" are reserved keywords in JavaFX.","lastModifiedDate":"2017-03-25"},{"lineNumber":22,"author":{"gitId":"-"},"content":"     * As a consequence, UI elements\u0027 variable names cannot be set to such keywords","lastModifiedDate":"2017-03-25"},{"lineNumber":23,"author":{"gitId":"-"},"content":"     * or an exception will be thrown by JavaFX during runtime.","lastModifiedDate":"2017-03-25"},{"lineNumber":24,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2017-03-25"},{"lineNumber":25,"author":{"gitId":"-"},"content":"     * @see \u003ca href\u003d\"https://github.com/se-edu/addressbook-level4/issues/336\"\u003eThe issue on AddressBook level 4\u003c/a\u003e","lastModifiedDate":"2017-03-25"},{"lineNumber":26,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-03-25"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-25"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    public final Person person;","lastModifiedDate":"2018-01-10"},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-12"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-09-21"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    private HBox cardPane;","lastModifiedDate":"2016-09-21"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-09-21"},{"lineNumber":33,"author":{"gitId":"cwq2326"},"content":"    private HBox covidStatusPane;","lastModifiedDate":"2022-02-28"},{"lineNumber":34,"author":{"gitId":"cwq2326"},"content":"    @FXML","lastModifiedDate":"2022-02-28"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    private Label name;","lastModifiedDate":"2016-09-21"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-09-21"},{"lineNumber":37,"author":{"gitId":"DannyDakota"},"content":"    private Label block;","lastModifiedDate":"2022-03-17"},{"lineNumber":38,"author":{"gitId":"DannyDakota"},"content":"    @FXML","lastModifiedDate":"2022-03-17"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    private Label id;","lastModifiedDate":"2016-09-21"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-09-21"},{"lineNumber":41,"author":{"gitId":"cwq2326"},"content":"    private Label faculty;","lastModifiedDate":"2022-02-28"},{"lineNumber":42,"author":{"gitId":"cwq2326"},"content":"    @FXML","lastModifiedDate":"2022-02-28"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    private Label phone;","lastModifiedDate":"2016-09-21"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-09-21"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    private Label address;","lastModifiedDate":"2016-09-21"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-09-21"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    private Label email;","lastModifiedDate":"2016-09-21"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-09-21"},{"lineNumber":49,"author":{"gitId":"cwq2326"},"content":"    private Label status;","lastModifiedDate":"2022-02-28"},{"lineNumber":50,"author":{"gitId":"cwq2326"},"content":"    @FXML","lastModifiedDate":"2022-02-28"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    private FlowPane tags;","lastModifiedDate":"2016-12-18"},{"lineNumber":52,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":53,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2020-05-27"},{"lineNumber":54,"author":{"gitId":"-"},"content":"     * Creates a {@code PersonCode} with the given {@code Person} and index to display.","lastModifiedDate":"2020-05-27"},{"lineNumber":55,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2020-05-27"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    public PersonCard(Person person, int displayedIndex) {","lastModifiedDate":"2018-01-10"},{"lineNumber":57,"author":{"gitId":"-"},"content":"        super(FXML);","lastModifiedDate":"2016-12-24"},{"lineNumber":58,"author":{"gitId":"-"},"content":"        this.person \u003d person;","lastModifiedDate":"2017-07-12"},{"lineNumber":59,"author":{"gitId":"-"},"content":"        id.setText(displayedIndex + \". \");","lastModifiedDate":"2016-09-21"},{"lineNumber":60,"author":{"gitId":"cwq2326"},"content":"        name.setText(String.format(\"%s %s\", person.getName().fullName, person.getMatriculationNumber().value));","lastModifiedDate":"2022-02-28"},{"lineNumber":61,"author":{"gitId":"DannyDakota"},"content":"        block.setText(person.getBlock().studentBlock);","lastModifiedDate":"2022-03-17"},{"lineNumber":62,"author":{"gitId":"cwq2326"},"content":"        faculty.setText(person.getFaculty().studentFaculty);","lastModifiedDate":"2022-02-28"},{"lineNumber":63,"author":{"gitId":"-"},"content":"        phone.setText(person.getPhone().value);","lastModifiedDate":"2017-12-20"},{"lineNumber":64,"author":{"gitId":"-"},"content":"        address.setText(person.getAddress().value);","lastModifiedDate":"2017-12-20"},{"lineNumber":65,"author":{"gitId":"-"},"content":"        email.setText(person.getEmail().value);","lastModifiedDate":"2017-12-20"},{"lineNumber":66,"author":{"gitId":"cwq2326"},"content":"        status.setText(person.getStatus().covidStatus);","lastModifiedDate":"2022-02-28"},{"lineNumber":67,"author":{"gitId":"-"},"content":"        person.getTags().stream()","lastModifiedDate":"2019-01-02"},{"lineNumber":68,"author":{"gitId":"-"},"content":"                .sorted(Comparator.comparing(tag -\u003e tag.tagName))","lastModifiedDate":"2019-01-02"},{"lineNumber":69,"author":{"gitId":"-"},"content":"                .forEach(tag -\u003e tags.getChildren().add(new Label(tag.tagName)));","lastModifiedDate":"2019-01-02"},{"lineNumber":70,"author":{"gitId":"cwq2326"},"content":"        setStatusPaneColor(person.getStatus().covidStatus);","lastModifiedDate":"2022-02-28"},{"lineNumber":71,"author":{"gitId":"cwq2326"},"content":"    }","lastModifiedDate":"2022-02-28"},{"lineNumber":72,"author":{"gitId":"cwq2326"},"content":"","lastModifiedDate":"2022-02-28"},{"lineNumber":73,"author":{"gitId":"cwq2326"},"content":"    /**","lastModifiedDate":"2022-02-28"},{"lineNumber":74,"author":{"gitId":"cwq2326"},"content":"     * Sets the background of the covid status pane according to the severity of the given {@code status}.","lastModifiedDate":"2022-02-28"},{"lineNumber":75,"author":{"gitId":"cwq2326"},"content":"     * @param status The covid status of the person.","lastModifiedDate":"2022-02-28"},{"lineNumber":76,"author":{"gitId":"cwq2326"},"content":"     */","lastModifiedDate":"2022-02-28"},{"lineNumber":77,"author":{"gitId":"cwq2326"},"content":"    private void setStatusPaneColor(String status) {","lastModifiedDate":"2022-02-28"},{"lineNumber":78,"author":{"gitId":"cwq2326"},"content":"        assert CovidStatus.isValidCovidStatus(status);","lastModifiedDate":"2022-02-28"},{"lineNumber":79,"author":{"gitId":"cwq2326"},"content":"        String covidStatus \u003d status.toLowerCase().trim();","lastModifiedDate":"2022-02-28"},{"lineNumber":80,"author":{"gitId":"cwq2326"},"content":"        String color;","lastModifiedDate":"2022-02-28"},{"lineNumber":81,"author":{"gitId":"cwq2326"},"content":"","lastModifiedDate":"2022-02-28"},{"lineNumber":82,"author":{"gitId":"cwq2326"},"content":"        final String baseStyle \u003d (\"-fx-background-color: %s; \"","lastModifiedDate":"2022-03-20"},{"lineNumber":83,"author":{"gitId":"cwq2326"},"content":"                + \"-fx-background-radius: 15px; \"","lastModifiedDate":"2022-03-20"},{"lineNumber":84,"author":{"gitId":"cwq2326"},"content":"                + \"-fx-border-radius: 15px; \"","lastModifiedDate":"2022-03-20"},{"lineNumber":85,"author":{"gitId":"cwq2326"},"content":"                + \"-fx-border-color: white; \"","lastModifiedDate":"2022-03-20"},{"lineNumber":86,"author":{"gitId":"cwq2326"},"content":"                + \"-fx-max-width: 100px; \"","lastModifiedDate":"2022-03-20"},{"lineNumber":87,"author":{"gitId":"cwq2326"},"content":"                + \"-fx-max-height: 50px;\");","lastModifiedDate":"2022-03-20"},{"lineNumber":88,"author":{"gitId":"cwq2326"},"content":"","lastModifiedDate":"2022-03-20"},{"lineNumber":89,"author":{"gitId":"cwq2326"},"content":"        switch(covidStatus) {","lastModifiedDate":"2022-02-28"},{"lineNumber":90,"author":{"gitId":"cwq2326"},"content":"        case \"positive\":","lastModifiedDate":"2022-02-28"},{"lineNumber":91,"author":{"gitId":"cwq2326"},"content":"            color \u003d \"RED\";","lastModifiedDate":"2022-02-28"},{"lineNumber":92,"author":{"gitId":"cwq2326"},"content":"            break;","lastModifiedDate":"2022-02-28"},{"lineNumber":93,"author":{"gitId":"cwq2326"},"content":"        case \"negative\":","lastModifiedDate":"2022-02-28"},{"lineNumber":94,"author":{"gitId":"cwq2326"},"content":"            color \u003d \"LIGHTGREEN\";","lastModifiedDate":"2022-02-28"},{"lineNumber":95,"author":{"gitId":"cwq2326"},"content":"            break;","lastModifiedDate":"2022-02-28"},{"lineNumber":96,"author":{"gitId":"cwq2326"},"content":"        case \"hrw\":","lastModifiedDate":"2022-02-28"},{"lineNumber":97,"author":{"gitId":"cwq2326"},"content":"            color \u003d \"ORANGE\";","lastModifiedDate":"2022-02-28"},{"lineNumber":98,"author":{"gitId":"cwq2326"},"content":"            break;","lastModifiedDate":"2022-02-28"},{"lineNumber":99,"author":{"gitId":"cwq2326"},"content":"        case \"hrn\":","lastModifiedDate":"2022-02-28"},{"lineNumber":100,"author":{"gitId":"cwq2326"},"content":"            color \u003d \"YELLOW\";","lastModifiedDate":"2022-02-28"},{"lineNumber":101,"author":{"gitId":"cwq2326"},"content":"            break;","lastModifiedDate":"2022-02-28"},{"lineNumber":102,"author":{"gitId":"cwq2326"},"content":"        default:","lastModifiedDate":"2022-02-28"},{"lineNumber":103,"author":{"gitId":"cwq2326"},"content":"            color \u003d \"BLACK\";","lastModifiedDate":"2022-02-28"},{"lineNumber":104,"author":{"gitId":"cwq2326"},"content":"            assert false : covidStatus;","lastModifiedDate":"2022-02-28"},{"lineNumber":105,"author":{"gitId":"cwq2326"},"content":"        }","lastModifiedDate":"2022-02-28"},{"lineNumber":106,"author":{"gitId":"cwq2326"},"content":"","lastModifiedDate":"2022-02-28"},{"lineNumber":107,"author":{"gitId":"cwq2326"},"content":"        String style \u003d String.format(baseStyle, color);","lastModifiedDate":"2022-03-20"},{"lineNumber":108,"author":{"gitId":"cwq2326"},"content":"","lastModifiedDate":"2022-02-28"},{"lineNumber":109,"author":{"gitId":"cwq2326"},"content":"        covidStatusPane.setStyle(style);","lastModifiedDate":"2022-02-28"},{"lineNumber":110,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-18"},{"lineNumber":111,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-14"},{"lineNumber":112,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2017-07-14"},{"lineNumber":113,"author":{"gitId":"-"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2017-07-14"},{"lineNumber":114,"author":{"gitId":"-"},"content":"        // short circuit if same object","lastModifiedDate":"2017-07-14"},{"lineNumber":115,"author":{"gitId":"-"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2017-07-14"},{"lineNumber":116,"author":{"gitId":"-"},"content":"            return true;","lastModifiedDate":"2017-07-14"},{"lineNumber":117,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-07-14"},{"lineNumber":118,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-14"},{"lineNumber":119,"author":{"gitId":"-"},"content":"        // instanceof handles nulls","lastModifiedDate":"2017-07-14"},{"lineNumber":120,"author":{"gitId":"-"},"content":"        if (!(other instanceof PersonCard)) {","lastModifiedDate":"2017-07-14"},{"lineNumber":121,"author":{"gitId":"-"},"content":"            return false;","lastModifiedDate":"2017-07-14"},{"lineNumber":122,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-07-14"},{"lineNumber":123,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-14"},{"lineNumber":124,"author":{"gitId":"-"},"content":"        // state check","lastModifiedDate":"2017-07-14"},{"lineNumber":125,"author":{"gitId":"-"},"content":"        PersonCard card \u003d (PersonCard) other;","lastModifiedDate":"2017-07-14"},{"lineNumber":126,"author":{"gitId":"-"},"content":"        return id.getText().equals(card.id.getText())","lastModifiedDate":"2017-07-14"},{"lineNumber":127,"author":{"gitId":"-"},"content":"                \u0026\u0026 person.equals(card.person);","lastModifiedDate":"2017-07-14"},{"lineNumber":128,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-07-14"},{"lineNumber":129,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-09-21"}],"authorContributionMap":{"DannyDakota":3,"cwq2326":50,"-":76}},{"path":"src/main/java/seedu/address/ui/PieChartWindow.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"cwq2326"},"content":"package seedu.address.ui;","lastModifiedDate":"2022-03-22"},{"lineNumber":2,"author":{"gitId":"cwq2326"},"content":"","lastModifiedDate":"2022-03-22"},{"lineNumber":3,"author":{"gitId":"cwq2326"},"content":"import java.util.Map;","lastModifiedDate":"2022-03-22"},{"lineNumber":4,"author":{"gitId":"cwq2326"},"content":"import java.util.TreeMap;","lastModifiedDate":"2022-03-22"},{"lineNumber":5,"author":{"gitId":"cwq2326"},"content":"import java.util.logging.Logger;","lastModifiedDate":"2022-03-22"},{"lineNumber":6,"author":{"gitId":"cwq2326"},"content":"","lastModifiedDate":"2022-03-22"},{"lineNumber":7,"author":{"gitId":"cwq2326"},"content":"import javafx.collections.FXCollections;","lastModifiedDate":"2022-03-22"},{"lineNumber":8,"author":{"gitId":"cwq2326"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2022-03-22"},{"lineNumber":9,"author":{"gitId":"jiale-c"},"content":"import javafx.geometry.Pos;","lastModifiedDate":"2022-03-23"},{"lineNumber":10,"author":{"gitId":"cwq2326"},"content":"import javafx.scene.Scene;","lastModifiedDate":"2022-03-22"},{"lineNumber":11,"author":{"gitId":"jiale-c"},"content":"import javafx.scene.chart.BarChart;","lastModifiedDate":"2022-03-30"},{"lineNumber":12,"author":{"gitId":"jiale-c"},"content":"import javafx.scene.chart.CategoryAxis;","lastModifiedDate":"2022-03-30"},{"lineNumber":13,"author":{"gitId":"jiale-c"},"content":"import javafx.scene.chart.NumberAxis;","lastModifiedDate":"2022-03-30"},{"lineNumber":14,"author":{"gitId":"cwq2326"},"content":"import javafx.scene.chart.PieChart;","lastModifiedDate":"2022-03-22"},{"lineNumber":15,"author":{"gitId":"jiale-c"},"content":"import javafx.scene.chart.XYChart;","lastModifiedDate":"2022-03-30"},{"lineNumber":16,"author":{"gitId":"jiale-c"},"content":"import javafx.scene.control.ScrollPane;","lastModifiedDate":"2022-04-03"},{"lineNumber":17,"author":{"gitId":"cwq2326"},"content":"import javafx.scene.layout.VBox;","lastModifiedDate":"2022-03-22"},{"lineNumber":18,"author":{"gitId":"cwq2326"},"content":"import javafx.stage.Stage;","lastModifiedDate":"2022-03-22"},{"lineNumber":19,"author":{"gitId":"cwq2326"},"content":"import seedu.address.commons.core.LogsCenter;","lastModifiedDate":"2022-03-22"},{"lineNumber":20,"author":{"gitId":"jiale-c"},"content":"import seedu.address.logic.commands.SummariseCommand;","lastModifiedDate":"2022-03-23"},{"lineNumber":21,"author":{"gitId":"cwq2326"},"content":"","lastModifiedDate":"2022-03-22"},{"lineNumber":22,"author":{"gitId":"cwq2326"},"content":"/**","lastModifiedDate":"2022-03-22"},{"lineNumber":23,"author":{"gitId":"jiale-c"},"content":" * Controller for a pie chart page.","lastModifiedDate":"2022-03-23"},{"lineNumber":24,"author":{"gitId":"cwq2326"},"content":" */","lastModifiedDate":"2022-03-22"},{"lineNumber":25,"author":{"gitId":"cwq2326"},"content":"public class PieChartWindow extends UiPart\u003cStage\u003e {","lastModifiedDate":"2022-03-22"},{"lineNumber":26,"author":{"gitId":"cwq2326"},"content":"","lastModifiedDate":"2022-03-22"},{"lineNumber":27,"author":{"gitId":"cwq2326"},"content":"    private static final Logger logger \u003d LogsCenter.getLogger(PieChartWindow.class);","lastModifiedDate":"2022-03-22"},{"lineNumber":28,"author":{"gitId":"cwq2326"},"content":"    private static final String FXML \u003d \"PieChartWindow.fxml\";","lastModifiedDate":"2022-03-22"},{"lineNumber":29,"author":{"gitId":"jiale-c"},"content":"    private TreeMap\u003cString, Integer\u003e covidStatsByBlockData;","lastModifiedDate":"2022-03-30"},{"lineNumber":30,"author":{"gitId":"jiale-c"},"content":"    private TreeMap\u003cString, Integer\u003e positiveStatsByFacultyData;","lastModifiedDate":"2022-03-30"},{"lineNumber":31,"author":{"gitId":"jiale-c"},"content":"    private TreeMap\u003cString, TreeMap\u003cString, Integer\u003e\u003e covidStatsDataByBlocks;","lastModifiedDate":"2022-03-30"},{"lineNumber":32,"author":{"gitId":"cwq2326"},"content":"    private PieChart pieChart;","lastModifiedDate":"2022-03-22"},{"lineNumber":33,"author":{"gitId":"cwq2326"},"content":"    private Scene chartScene;","lastModifiedDate":"2022-03-30"},{"lineNumber":34,"author":{"gitId":"jiale-c"},"content":"    private VBox charts;","lastModifiedDate":"2022-04-03"},{"lineNumber":35,"author":{"gitId":"cwq2326"},"content":"","lastModifiedDate":"2022-03-22"},{"lineNumber":36,"author":{"gitId":"cwq2326"},"content":"    /**","lastModifiedDate":"2022-03-22"},{"lineNumber":37,"author":{"gitId":"cwq2326"},"content":"     * Creates a new PieChartWindow.","lastModifiedDate":"2022-03-22"},{"lineNumber":38,"author":{"gitId":"cwq2326"},"content":"     *","lastModifiedDate":"2022-03-22"},{"lineNumber":39,"author":{"gitId":"cwq2326"},"content":"     * @param root Stage to use as the root of the PieChartWindow.","lastModifiedDate":"2022-03-22"},{"lineNumber":40,"author":{"gitId":"cwq2326"},"content":"     */","lastModifiedDate":"2022-03-22"},{"lineNumber":41,"author":{"gitId":"cwq2326"},"content":"    public PieChartWindow(Stage root) {","lastModifiedDate":"2022-03-22"},{"lineNumber":42,"author":{"gitId":"cwq2326"},"content":"        super(FXML, root);","lastModifiedDate":"2022-03-22"},{"lineNumber":43,"author":{"gitId":"cwq2326"},"content":"    }","lastModifiedDate":"2022-03-22"},{"lineNumber":44,"author":{"gitId":"cwq2326"},"content":"","lastModifiedDate":"2022-03-22"},{"lineNumber":45,"author":{"gitId":"cwq2326"},"content":"    /**","lastModifiedDate":"2022-03-22"},{"lineNumber":46,"author":{"gitId":"cwq2326"},"content":"     * Creates a new PieChartWindow.","lastModifiedDate":"2022-03-22"},{"lineNumber":47,"author":{"gitId":"jiale-c"},"content":"     * Obtain the organised covid statuses from SummariseCommand.","lastModifiedDate":"2022-03-23"},{"lineNumber":48,"author":{"gitId":"jiale-c"},"content":"     * Pie Charts by blocks and for faculties are created.","lastModifiedDate":"2022-03-23"},{"lineNumber":49,"author":{"gitId":"cwq2326"},"content":"     */","lastModifiedDate":"2022-03-22"},{"lineNumber":50,"author":{"gitId":"jiale-c"},"content":"    public PieChartWindow() {","lastModifiedDate":"2022-03-23"},{"lineNumber":51,"author":{"gitId":"cwq2326"},"content":"        this(new Stage());","lastModifiedDate":"2022-03-22"},{"lineNumber":52,"author":{"gitId":"jiale-c"},"content":"        charts \u003d new VBox();","lastModifiedDate":"2022-04-03"},{"lineNumber":53,"author":{"gitId":"jiale-c"},"content":"        covidStatsDataByBlocks \u003d SummariseCommand.getCovidStatsByBlockDataList();","lastModifiedDate":"2022-03-23"},{"lineNumber":54,"author":{"gitId":"jiale-c"},"content":"        covidStatsByBlockData \u003d new TreeMap\u003c\u003e();","lastModifiedDate":"2022-03-30"},{"lineNumber":55,"author":{"gitId":"jiale-c"},"content":"        positiveStatsByFacultyData \u003d SummariseCommand.getPositiveStatsByFacultyData();","lastModifiedDate":"2022-03-23"},{"lineNumber":56,"author":{"gitId":"jiale-c"},"content":"        execute();","lastModifiedDate":"2022-03-23"},{"lineNumber":57,"author":{"gitId":"cwq2326"},"content":"    }","lastModifiedDate":"2022-03-22"},{"lineNumber":58,"author":{"gitId":"cwq2326"},"content":"","lastModifiedDate":"2022-03-22"},{"lineNumber":59,"author":{"gitId":"jiale-c"},"content":"    /**","lastModifiedDate":"2022-03-22"},{"lineNumber":60,"author":{"gitId":"jiale-c"},"content":"     * Organises the data into Charts in a new window.","lastModifiedDate":"2022-04-03"},{"lineNumber":61,"author":{"gitId":"jiale-c"},"content":"     */","lastModifiedDate":"2022-03-22"},{"lineNumber":62,"author":{"gitId":"jiale-c"},"content":"    private void execute() {","lastModifiedDate":"2022-03-23"},{"lineNumber":63,"author":{"gitId":"jiale-c"},"content":"        collateBlocksChart();","lastModifiedDate":"2022-03-23"},{"lineNumber":64,"author":{"gitId":"jiale-c"},"content":"        charts.getChildren().add(createFacultyChartPositive());","lastModifiedDate":"2022-04-03"},{"lineNumber":65,"author":{"gitId":"jiale-c"},"content":"        charts.setSpacing(70);","lastModifiedDate":"2022-04-03"},{"lineNumber":66,"author":{"gitId":"jiale-c"},"content":"        chartScene \u003d makeChartScene(charts);","lastModifiedDate":"2022-04-03"},{"lineNumber":67,"author":{"gitId":"cwq2326"},"content":"        this.getRoot().setScene(chartScene);","lastModifiedDate":"2022-03-30"},{"lineNumber":68,"author":{"gitId":"jiale-c"},"content":"    }","lastModifiedDate":"2022-03-22"},{"lineNumber":69,"author":{"gitId":"jiale-c"},"content":"","lastModifiedDate":"2022-03-22"},{"lineNumber":70,"author":{"gitId":"cwq2326"},"content":"    /**","lastModifiedDate":"2022-03-22"},{"lineNumber":71,"author":{"gitId":"jiale-c"},"content":"     * Collates the pie charts for each block into a H-box by stacking the charts together.","lastModifiedDate":"2022-03-30"},{"lineNumber":72,"author":{"gitId":"jiale-c"},"content":"     * Pie charts are created one at a time by blocks. ie, if there are 5 blocks, 5 pie charts are created.","lastModifiedDate":"2022-03-23"},{"lineNumber":73,"author":{"gitId":"cwq2326"},"content":"     */","lastModifiedDate":"2022-03-22"},{"lineNumber":74,"author":{"gitId":"jiale-c"},"content":"    private void collateBlocksChart() {","lastModifiedDate":"2022-03-23"},{"lineNumber":75,"author":{"gitId":"jiale-c"},"content":"        for (Map.Entry\u003cString, TreeMap\u003cString, Integer\u003e\u003e entry : covidStatsDataByBlocks.entrySet()) {","lastModifiedDate":"2022-03-30"},{"lineNumber":76,"author":{"gitId":"jiale-c"},"content":"            String title \u003d entry.getKey(); // ie. A, B, C, D, E","lastModifiedDate":"2022-03-23"},{"lineNumber":77,"author":{"gitId":"jiale-c"},"content":"            covidStatsByBlockData \u003d entry.getValue();","lastModifiedDate":"2022-03-23"},{"lineNumber":78,"author":{"gitId":"jiale-c"},"content":"            if (!covidStatsByBlockData.isEmpty()) {","lastModifiedDate":"2022-03-30"},{"lineNumber":79,"author":{"gitId":"jiale-c"},"content":"                pieChart \u003d makePieChart(covidStatsByBlockData, title);","lastModifiedDate":"2022-03-23"},{"lineNumber":80,"author":{"gitId":"jiale-c"},"content":"            }","lastModifiedDate":"2022-03-30"},{"lineNumber":81,"author":{"gitId":"jiale-c"},"content":"            charts.getChildren().add(pieChart);","lastModifiedDate":"2022-03-23"},{"lineNumber":82,"author":{"gitId":"jiale-c"},"content":"        }","lastModifiedDate":"2022-03-23"},{"lineNumber":83,"author":{"gitId":"cwq2326"},"content":"    }","lastModifiedDate":"2022-03-22"},{"lineNumber":84,"author":{"gitId":"cwq2326"},"content":"","lastModifiedDate":"2022-03-22"},{"lineNumber":85,"author":{"gitId":"cwq2326"},"content":"    /**","lastModifiedDate":"2022-03-22"},{"lineNumber":86,"author":{"gitId":"jiale-c"},"content":"     * Creates Bar Chart for hall containing Covid Positive statistics only, by Faculty.","lastModifiedDate":"2022-03-30"},{"lineNumber":87,"author":{"gitId":"cwq2326"},"content":"     */","lastModifiedDate":"2022-03-22"},{"lineNumber":88,"author":{"gitId":"jiale-c"},"content":"    private VBox createFacultyChartPositive() {","lastModifiedDate":"2022-04-03"},{"lineNumber":89,"author":{"gitId":"jiale-c"},"content":"        if (positiveStatsByFacultyData.isEmpty()) {","lastModifiedDate":"2022-03-30"},{"lineNumber":90,"author":{"gitId":"jiale-c"},"content":"            // No positive students to create chart","lastModifiedDate":"2022-03-30"},{"lineNumber":91,"author":{"gitId":"jiale-c"},"content":"            return new VBox();","lastModifiedDate":"2022-04-03"},{"lineNumber":92,"author":{"gitId":"jiale-c"},"content":"        }","lastModifiedDate":"2022-03-30"},{"lineNumber":93,"author":{"gitId":"jiale-c"},"content":"        VBox facChart \u003d new VBox();","lastModifiedDate":"2022-04-03"},{"lineNumber":94,"author":{"gitId":"jiale-c"},"content":"        // Makes the x-axis","lastModifiedDate":"2022-04-03"},{"lineNumber":95,"author":{"gitId":"jiale-c"},"content":"        CategoryAxis xAxis \u003d new CategoryAxis();","lastModifiedDate":"2022-03-30"},{"lineNumber":96,"author":{"gitId":"jiale-c"},"content":"        xAxis.setLabel(\"Faculty\");","lastModifiedDate":"2022-03-30"},{"lineNumber":97,"author":{"gitId":"jiale-c"},"content":"        NumberAxis yAxis \u003d new NumberAxis(0, SummariseCommand.getHighestPositiveByFaculty(), 1);","lastModifiedDate":"2022-04-03"},{"lineNumber":98,"author":{"gitId":"jiale-c"},"content":"        // Makes the y-axis","lastModifiedDate":"2022-04-03"},{"lineNumber":99,"author":{"gitId":"jiale-c"},"content":"        yAxis.setLabel(\"Number of Students\");","lastModifiedDate":"2022-03-30"},{"lineNumber":100,"author":{"gitId":"jiale-c"},"content":"        yAxis.setMinorTickVisible(false);","lastModifiedDate":"2022-04-02"},{"lineNumber":101,"author":{"gitId":"jiale-c"},"content":"        // Combine x-axis and y-axis into a bar chart","lastModifiedDate":"2022-04-03"},{"lineNumber":102,"author":{"gitId":"jiale-c"},"content":"        BarChart\u003cString, Number\u003e barChart \u003d new BarChart\u003c\u003e(xAxis, yAxis);","lastModifiedDate":"2022-04-03"},{"lineNumber":103,"author":{"gitId":"jiale-c"},"content":"        barChart.setTitle(\"Covid Positive by Faculty\");","lastModifiedDate":"2022-04-03"},{"lineNumber":104,"author":{"gitId":"jiale-c"},"content":"        barChart.setBarGap(50);","lastModifiedDate":"2022-03-30"},{"lineNumber":105,"author":{"gitId":"jiale-c"},"content":"        barChart.setCategoryGap(150);","lastModifiedDate":"2022-03-30"},{"lineNumber":106,"author":{"gitId":"jiale-c"},"content":"","lastModifiedDate":"2022-03-30"},{"lineNumber":107,"author":{"gitId":"jiale-c"},"content":"        for (Map.Entry\u003cString, Integer\u003e entry : positiveStatsByFacultyData.entrySet()) {","lastModifiedDate":"2022-03-30"},{"lineNumber":108,"author":{"gitId":"jiale-c"},"content":"            XYChart.Series\u003cString, Number\u003e fac \u003d new XYChart.Series\u003c\u003e();","lastModifiedDate":"2022-03-30"},{"lineNumber":109,"author":{"gitId":"jiale-c"},"content":"            fac.setName(entry.getKey());","lastModifiedDate":"2022-03-30"},{"lineNumber":110,"author":{"gitId":"jiale-c"},"content":"            fac.getData().add(new XYChart.Data\u003c\u003e(\"\", entry.getValue()));","lastModifiedDate":"2022-03-30"},{"lineNumber":111,"author":{"gitId":"jiale-c"},"content":"            barChart.getData().add(fac);","lastModifiedDate":"2022-03-30"},{"lineNumber":112,"author":{"gitId":"jiale-c"},"content":"        }","lastModifiedDate":"2022-03-30"},{"lineNumber":113,"author":{"gitId":"jiale-c"},"content":"        facChart.getChildren().add(barChart);","lastModifiedDate":"2022-03-30"},{"lineNumber":114,"author":{"gitId":"jiale-c"},"content":"        facChart.setAlignment(Pos.CENTER);","lastModifiedDate":"2022-03-23"},{"lineNumber":115,"author":{"gitId":"jiale-c"},"content":"        return facChart;","lastModifiedDate":"2022-03-23"},{"lineNumber":116,"author":{"gitId":"cwq2326"},"content":"    }","lastModifiedDate":"2022-03-22"},{"lineNumber":117,"author":{"gitId":"cwq2326"},"content":"","lastModifiedDate":"2022-03-22"},{"lineNumber":118,"author":{"gitId":"cwq2326"},"content":"    /**","lastModifiedDate":"2022-03-22"},{"lineNumber":119,"author":{"gitId":"jiale-c"},"content":"     * A method to produce the pie chart that shows covid status breakdown.","lastModifiedDate":"2022-03-23"},{"lineNumber":120,"author":{"gitId":"cwq2326"},"content":"     *","lastModifiedDate":"2022-03-22"},{"lineNumber":121,"author":{"gitId":"cwq2326"},"content":"     * @param data Covid positive percentage for each faculty present in Tracey","lastModifiedDate":"2022-03-22"},{"lineNumber":122,"author":{"gitId":"jiale-c"},"content":"     * @param title Label of this particular pie chart","lastModifiedDate":"2022-03-23"},{"lineNumber":123,"author":{"gitId":"jiale-c"},"content":"     * @return A pie chart that shows covid status breakdown","lastModifiedDate":"2022-03-23"},{"lineNumber":124,"author":{"gitId":"cwq2326"},"content":"     */","lastModifiedDate":"2022-03-22"},{"lineNumber":125,"author":{"gitId":"jiale-c"},"content":"    private PieChart makePieChart(TreeMap\u003cString, Integer\u003e data, String title) {","lastModifiedDate":"2022-03-30"},{"lineNumber":126,"author":{"gitId":"jiale-c"},"content":"        TreeMap\u003cString, Integer\u003e treeMap \u003d data;","lastModifiedDate":"2022-03-30"},{"lineNumber":127,"author":{"gitId":"jiale-c"},"content":"        ObservableList\u003cPieChart.Data\u003e pieChartData \u003d FXCollections.observableArrayList();","lastModifiedDate":"2022-03-23"},{"lineNumber":128,"author":{"gitId":"jiale-c"},"content":"","lastModifiedDate":"2022-03-30"},{"lineNumber":129,"author":{"gitId":"cwq2326"},"content":"        PieChart pieChart \u003d new PieChart(pieChartData);","lastModifiedDate":"2022-03-22"},{"lineNumber":130,"author":{"gitId":"jiale-c"},"content":"        pieChart.setTitle(\"Covid overview in \" + title);","lastModifiedDate":"2022-03-23"},{"lineNumber":131,"author":{"gitId":"jiale-c"},"content":"        for (Map.Entry\u003cString, Integer\u003e entry : treeMap.entrySet()) {","lastModifiedDate":"2022-03-30"},{"lineNumber":132,"author":{"gitId":"jiale-c"},"content":"            PieChart.Data statusType \u003d new PieChart.Data(entry.getKey(), entry.getValue());","lastModifiedDate":"2022-03-30"},{"lineNumber":133,"author":{"gitId":"jiale-c"},"content":"            statusType.setName(String.format(\"%s (%.0f)\", statusType.getName(),","lastModifiedDate":"2022-03-30"},{"lineNumber":134,"author":{"gitId":"jiale-c"},"content":"                    statusType.pieValueProperty().getValue()));","lastModifiedDate":"2022-03-30"},{"lineNumber":135,"author":{"gitId":"jiale-c"},"content":"            pieChartData.add(statusType);","lastModifiedDate":"2022-03-30"},{"lineNumber":136,"author":{"gitId":"cwq2326"},"content":"        }","lastModifiedDate":"2022-03-22"},{"lineNumber":137,"author":{"gitId":"jiale-c"},"content":"        setPieChartColor(pieChartData);","lastModifiedDate":"2022-04-03"},{"lineNumber":138,"author":{"gitId":"jiale-c"},"content":"        pieChart.setLegendVisible(false);","lastModifiedDate":"2022-04-03"},{"lineNumber":139,"author":{"gitId":"cwq2326"},"content":"        return pieChart;","lastModifiedDate":"2022-03-22"},{"lineNumber":140,"author":{"gitId":"cwq2326"},"content":"    }","lastModifiedDate":"2022-03-22"},{"lineNumber":141,"author":{"gitId":"cwq2326"},"content":"","lastModifiedDate":"2022-03-22"},{"lineNumber":142,"author":{"gitId":"jiale-c"},"content":"    /**","lastModifiedDate":"2022-04-03"},{"lineNumber":143,"author":{"gitId":"jiale-c"},"content":"     * Sets each pir chart sections to have a specific colour according to their Covid status.","lastModifiedDate":"2022-04-03"},{"lineNumber":144,"author":{"gitId":"jiale-c"},"content":"     * If it represents positive, it is set to red. If it represents negative, it is set to green.","lastModifiedDate":"2022-04-03"},{"lineNumber":145,"author":{"gitId":"jiale-c"},"content":"     * If it represents HRN, it is set to yellowish-gold.","lastModifiedDate":"2022-04-03"},{"lineNumber":146,"author":{"gitId":"jiale-c"},"content":"     *","lastModifiedDate":"2022-04-03"},{"lineNumber":147,"author":{"gitId":"jiale-c"},"content":"     * @param pieChartData The pie chart that will undergo colouring","lastModifiedDate":"2022-04-03"},{"lineNumber":148,"author":{"gitId":"jiale-c"},"content":"     */","lastModifiedDate":"2022-04-03"},{"lineNumber":149,"author":{"gitId":"jiale-c"},"content":"    private void setPieChartColor(ObservableList\u003cPieChart.Data\u003e pieChartData) {","lastModifiedDate":"2022-04-03"},{"lineNumber":150,"author":{"gitId":"jiale-c"},"content":"        for (PieChart.Data data : pieChartData) {","lastModifiedDate":"2022-04-03"},{"lineNumber":151,"author":{"gitId":"jiale-c"},"content":"            String covidType \u003d data.getName();","lastModifiedDate":"2022-04-03"},{"lineNumber":152,"author":{"gitId":"jiale-c"},"content":"            String color \u003d \"\";","lastModifiedDate":"2022-04-03"},{"lineNumber":153,"author":{"gitId":"jiale-c"},"content":"            if (covidType.contains(\"Positive\")) {","lastModifiedDate":"2022-04-03"},{"lineNumber":154,"author":{"gitId":"jiale-c"},"content":"                color \u003d \"-fx-pie-color: red;\";","lastModifiedDate":"2022-04-03"},{"lineNumber":155,"author":{"gitId":"jiale-c"},"content":"            } else if (covidType.contains(\"Negative\")) {","lastModifiedDate":"2022-04-03"},{"lineNumber":156,"author":{"gitId":"jiale-c"},"content":"                color \u003d \"-fx-pie-color: green;\";","lastModifiedDate":"2022-04-03"},{"lineNumber":157,"author":{"gitId":"jiale-c"},"content":"            } else if (covidType.contains(\"HRN\")) {","lastModifiedDate":"2022-04-03"},{"lineNumber":158,"author":{"gitId":"jiale-c"},"content":"                color \u003d \"-fx-pie-color: gold;\";","lastModifiedDate":"2022-04-03"},{"lineNumber":159,"author":{"gitId":"jiale-c"},"content":"            }","lastModifiedDate":"2022-04-03"},{"lineNumber":160,"author":{"gitId":"jiale-c"},"content":"            data.getNode().setStyle(color);","lastModifiedDate":"2022-04-03"},{"lineNumber":161,"author":{"gitId":"jiale-c"},"content":"        }","lastModifiedDate":"2022-04-03"},{"lineNumber":162,"author":{"gitId":"jiale-c"},"content":"    }","lastModifiedDate":"2022-04-03"},{"lineNumber":163,"author":{"gitId":"jiale-c"},"content":"","lastModifiedDate":"2022-04-03"},{"lineNumber":164,"author":{"gitId":"cwq2326"},"content":"    /**","lastModifiedDate":"2022-03-22"},{"lineNumber":165,"author":{"gitId":"cwq2326"},"content":"     * Creates the scene which contains the pie chart.","lastModifiedDate":"2022-03-22"},{"lineNumber":166,"author":{"gitId":"jiale-c"},"content":"     *","lastModifiedDate":"2022-03-23"},{"lineNumber":167,"author":{"gitId":"jiale-c"},"content":"     * @param pieCharts collated group of charts to be displayed","lastModifiedDate":"2022-03-23"},{"lineNumber":168,"author":{"gitId":"cwq2326"},"content":"     * @return Scene containing the pie chart","lastModifiedDate":"2022-03-22"},{"lineNumber":169,"author":{"gitId":"cwq2326"},"content":"     */","lastModifiedDate":"2022-03-22"},{"lineNumber":170,"author":{"gitId":"jiale-c"},"content":"    private Scene makeChartScene(VBox pieCharts) {","lastModifiedDate":"2022-03-30"},{"lineNumber":171,"author":{"gitId":"jiale-c"},"content":"        ScrollPane sp \u003d new ScrollPane(pieCharts);","lastModifiedDate":"2022-04-03"},{"lineNumber":172,"author":{"gitId":"jiale-c"},"content":"        chartScene \u003d new Scene(sp, 550, 100);","lastModifiedDate":"2022-04-03"},{"lineNumber":173,"author":{"gitId":"cwq2326"},"content":"        return chartScene;","lastModifiedDate":"2022-03-30"},{"lineNumber":174,"author":{"gitId":"cwq2326"},"content":"    }","lastModifiedDate":"2022-03-22"},{"lineNumber":175,"author":{"gitId":"cwq2326"},"content":"","lastModifiedDate":"2022-03-22"},{"lineNumber":176,"author":{"gitId":"cwq2326"},"content":"    /**","lastModifiedDate":"2022-03-22"},{"lineNumber":177,"author":{"gitId":"cwq2326"},"content":"     * Shows the pie chart window.","lastModifiedDate":"2022-03-22"},{"lineNumber":178,"author":{"gitId":"jiale-c"},"content":"     *","lastModifiedDate":"2022-03-23"},{"lineNumber":179,"author":{"gitId":"cwq2326"},"content":"     * @throws IllegalStateException","lastModifiedDate":"2022-03-22"},{"lineNumber":180,"author":{"gitId":"cwq2326"},"content":"     * \u003cul\u003e","lastModifiedDate":"2022-03-22"},{"lineNumber":181,"author":{"gitId":"cwq2326"},"content":"     *     \u003cli\u003e","lastModifiedDate":"2022-03-22"},{"lineNumber":182,"author":{"gitId":"cwq2326"},"content":"     *         if this method is called on a thread other than the JavaFX Application Thread.","lastModifiedDate":"2022-03-22"},{"lineNumber":183,"author":{"gitId":"cwq2326"},"content":"     *     \u003c/li\u003e","lastModifiedDate":"2022-03-22"},{"lineNumber":184,"author":{"gitId":"cwq2326"},"content":"     *     \u003cli\u003e","lastModifiedDate":"2022-03-22"},{"lineNumber":185,"author":{"gitId":"cwq2326"},"content":"     *         if this method is called during animation or layout processing.","lastModifiedDate":"2022-03-22"},{"lineNumber":186,"author":{"gitId":"cwq2326"},"content":"     *     \u003c/li\u003e","lastModifiedDate":"2022-03-22"},{"lineNumber":187,"author":{"gitId":"cwq2326"},"content":"     *     \u003cli\u003e","lastModifiedDate":"2022-03-22"},{"lineNumber":188,"author":{"gitId":"cwq2326"},"content":"     *         if this method is called on the primary stage.","lastModifiedDate":"2022-03-22"},{"lineNumber":189,"author":{"gitId":"cwq2326"},"content":"     *     \u003c/li\u003e","lastModifiedDate":"2022-03-22"},{"lineNumber":190,"author":{"gitId":"cwq2326"},"content":"     *     \u003cli\u003e","lastModifiedDate":"2022-03-22"},{"lineNumber":191,"author":{"gitId":"cwq2326"},"content":"     *         if {@code dialogStage} is already showing.","lastModifiedDate":"2022-03-22"},{"lineNumber":192,"author":{"gitId":"cwq2326"},"content":"     *     \u003c/li\u003e","lastModifiedDate":"2022-03-22"},{"lineNumber":193,"author":{"gitId":"cwq2326"},"content":"     * \u003c/ul\u003e","lastModifiedDate":"2022-03-22"},{"lineNumber":194,"author":{"gitId":"cwq2326"},"content":"     */","lastModifiedDate":"2022-03-22"},{"lineNumber":195,"author":{"gitId":"cwq2326"},"content":"    public void show() {","lastModifiedDate":"2022-03-22"},{"lineNumber":196,"author":{"gitId":"cwq2326"},"content":"        logger.fine(\"Showing pie chart page about the application.\");","lastModifiedDate":"2022-03-22"},{"lineNumber":197,"author":{"gitId":"cwq2326"},"content":"        getRoot().show();","lastModifiedDate":"2022-03-22"},{"lineNumber":198,"author":{"gitId":"cwq2326"},"content":"        getRoot().centerOnScreen();","lastModifiedDate":"2022-03-22"},{"lineNumber":199,"author":{"gitId":"cwq2326"},"content":"    }","lastModifiedDate":"2022-03-22"},{"lineNumber":200,"author":{"gitId":"cwq2326"},"content":"","lastModifiedDate":"2022-03-22"},{"lineNumber":201,"author":{"gitId":"cwq2326"},"content":"    /**","lastModifiedDate":"2022-03-22"},{"lineNumber":202,"author":{"gitId":"cwq2326"},"content":"     * Returns true if the pie chart window is currently being shown.","lastModifiedDate":"2022-03-22"},{"lineNumber":203,"author":{"gitId":"cwq2326"},"content":"     */","lastModifiedDate":"2022-03-22"},{"lineNumber":204,"author":{"gitId":"cwq2326"},"content":"    public boolean isShowing() {","lastModifiedDate":"2022-03-22"},{"lineNumber":205,"author":{"gitId":"cwq2326"},"content":"        return getRoot().isShowing();","lastModifiedDate":"2022-03-22"},{"lineNumber":206,"author":{"gitId":"cwq2326"},"content":"    }","lastModifiedDate":"2022-03-22"},{"lineNumber":207,"author":{"gitId":"cwq2326"},"content":"","lastModifiedDate":"2022-03-22"},{"lineNumber":208,"author":{"gitId":"cwq2326"},"content":"    /**","lastModifiedDate":"2022-03-22"},{"lineNumber":209,"author":{"gitId":"cwq2326"},"content":"     * Hides the pie chart window.","lastModifiedDate":"2022-03-22"},{"lineNumber":210,"author":{"gitId":"cwq2326"},"content":"     */","lastModifiedDate":"2022-03-22"},{"lineNumber":211,"author":{"gitId":"cwq2326"},"content":"    public void hide() {","lastModifiedDate":"2022-03-22"},{"lineNumber":212,"author":{"gitId":"cwq2326"},"content":"        getRoot().hide();","lastModifiedDate":"2022-03-22"},{"lineNumber":213,"author":{"gitId":"cwq2326"},"content":"    }","lastModifiedDate":"2022-03-22"},{"lineNumber":214,"author":{"gitId":"cwq2326"},"content":"}","lastModifiedDate":"2022-03-22"}],"authorContributionMap":{"cwq2326":101,"jiale-c":113}},{"path":"src/main/java/seedu/address/ui/ResultDisplay.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.ui;","lastModifiedDate":"2016-09-22"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2018-12-09"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import javafx.fxml.FXML;","lastModifiedDate":"2017-01-19"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import javafx.scene.control.TextArea;","lastModifiedDate":"2016-09-15"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import javafx.scene.layout.Region;","lastModifiedDate":"2016-12-24"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":9,"author":{"gitId":"kevinkuo0320"},"content":"","lastModifiedDate":"2022-03-25"},{"lineNumber":10,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-18"},{"lineNumber":11,"author":{"gitId":"-"},"content":" * A ui for the status bar that is displayed at the header of the application.","lastModifiedDate":"2016-09-28"},{"lineNumber":12,"author":{"gitId":"kevinkuo0320"},"content":" * Display Box is flexible to the length of text","lastModifiedDate":"2022-03-25"},{"lineNumber":13,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-18"},{"lineNumber":14,"author":{"gitId":"-"},"content":"public class ResultDisplay extends UiPart\u003cRegion\u003e {","lastModifiedDate":"2016-12-24"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    private static final String FXML \u003d \"ResultDisplay.fxml\";","lastModifiedDate":"2016-09-14"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-10-15"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    private TextArea resultDisplay;","lastModifiedDate":"2016-10-15"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-15"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    public ResultDisplay() {","lastModifiedDate":"2017-06-14"},{"lineNumber":22,"author":{"gitId":"-"},"content":"        super(FXML);","lastModifiedDate":"2016-12-24"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-18"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    public void setFeedbackToUser(String feedbackToUser) {","lastModifiedDate":"2018-12-09"},{"lineNumber":26,"author":{"gitId":"-"},"content":"        requireNonNull(feedbackToUser);","lastModifiedDate":"2018-12-09"},{"lineNumber":27,"author":{"gitId":"-"},"content":"        resultDisplay.setText(feedbackToUser);","lastModifiedDate":"2018-12-09"},{"lineNumber":28,"author":{"gitId":"kevinkuo0320"},"content":"        resultDisplay.setWrapText(true);","lastModifiedDate":"2022-03-25"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-21"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":31,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-18"}],"authorContributionMap":{"kevinkuo0320":3,"-":28}},{"path":"src/main/java/seedu/address/ui/UiAlert.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"cwq2326"},"content":"package seedu.address.ui;","lastModifiedDate":"2022-02-28"},{"lineNumber":2,"author":{"gitId":"cwq2326"},"content":"","lastModifiedDate":"2022-02-28"},{"lineNumber":3,"author":{"gitId":"cwq2326"},"content":"import javafx.scene.control.Alert;","lastModifiedDate":"2022-02-28"},{"lineNumber":4,"author":{"gitId":"cwq2326"},"content":"import javafx.scene.layout.Region;","lastModifiedDate":"2022-02-28"},{"lineNumber":5,"author":{"gitId":"cwq2326"},"content":"","lastModifiedDate":"2022-02-28"},{"lineNumber":6,"author":{"gitId":"cwq2326"},"content":"/**","lastModifiedDate":"2022-02-28"},{"lineNumber":7,"author":{"gitId":"cwq2326"},"content":" * Alerts to notify user.","lastModifiedDate":"2022-02-28"},{"lineNumber":8,"author":{"gitId":"cwq2326"},"content":" */","lastModifiedDate":"2022-02-28"},{"lineNumber":9,"author":{"gitId":"cwq2326"},"content":"public class UiAlert {","lastModifiedDate":"2022-02-28"},{"lineNumber":10,"author":{"gitId":"cwq2326"},"content":"","lastModifiedDate":"2022-02-28"},{"lineNumber":11,"author":{"gitId":"cwq2326"},"content":"    /**","lastModifiedDate":"2022-02-28"},{"lineNumber":12,"author":{"gitId":"cwq2326"},"content":"     * Returns a confirmation alert pop-up to notify the user.","lastModifiedDate":"2022-02-28"},{"lineNumber":13,"author":{"gitId":"cwq2326"},"content":"     * @param headerMessage Message for the header of the alert.","lastModifiedDate":"2022-02-28"},{"lineNumber":14,"author":{"gitId":"cwq2326"},"content":"     * @param contentMessage Messge for the content of the alert.","lastModifiedDate":"2022-02-28"},{"lineNumber":15,"author":{"gitId":"cwq2326"},"content":"     * @return Confirmation alert.","lastModifiedDate":"2022-02-28"},{"lineNumber":16,"author":{"gitId":"cwq2326"},"content":"     */","lastModifiedDate":"2022-02-28"},{"lineNumber":17,"author":{"gitId":"cwq2326"},"content":"    public static Alert makeConfirmationAlert(String headerMessage, String contentMessage) {","lastModifiedDate":"2022-02-28"},{"lineNumber":18,"author":{"gitId":"cwq2326"},"content":"        Alert alert \u003d new Alert(Alert.AlertType.CONFIRMATION);","lastModifiedDate":"2022-02-28"},{"lineNumber":19,"author":{"gitId":"cwq2326"},"content":"        alert.setHeaderText(headerMessage);","lastModifiedDate":"2022-02-28"},{"lineNumber":20,"author":{"gitId":"cwq2326"},"content":"        alert.setContentText(contentMessage);","lastModifiedDate":"2022-02-28"},{"lineNumber":21,"author":{"gitId":"cwq2326"},"content":"        alert.getDialogPane().setMinHeight(Region.USE_PREF_SIZE);","lastModifiedDate":"2022-02-28"},{"lineNumber":22,"author":{"gitId":"cwq2326"},"content":"        alert.showAndWait();","lastModifiedDate":"2022-02-28"},{"lineNumber":23,"author":{"gitId":"cwq2326"},"content":"        return alert;","lastModifiedDate":"2022-02-28"},{"lineNumber":24,"author":{"gitId":"cwq2326"},"content":"    }","lastModifiedDate":"2022-02-28"},{"lineNumber":25,"author":{"gitId":"cwq2326"},"content":"}","lastModifiedDate":"2022-02-28"}],"authorContributionMap":{"cwq2326":25}},{"path":"src/main/java/seedu/address/ui/UiManager.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.ui;","lastModifiedDate":"2016-09-22"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.util.logging.Logger;","lastModifiedDate":"2017-01-19"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import javafx.application.Platform;","lastModifiedDate":"2016-08-18"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import javafx.scene.control.Alert;","lastModifiedDate":"2016-08-18"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import javafx.scene.control.Alert.AlertType;","lastModifiedDate":"2016-08-18"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import javafx.scene.image.Image;","lastModifiedDate":"2016-08-18"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import javafx.stage.Stage;","lastModifiedDate":"2016-08-18"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import seedu.address.MainApp;","lastModifiedDate":"2016-08-25"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.LogsCenter;","lastModifiedDate":"2016-09-23"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import seedu.address.commons.util.StringUtil;","lastModifiedDate":"2016-09-25"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import seedu.address.logic.Logic;","lastModifiedDate":"2016-09-25"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":15,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-18"},{"lineNumber":16,"author":{"gitId":"-"},"content":" * The manager of the UI component.","lastModifiedDate":"2016-09-25"},{"lineNumber":17,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-18"},{"lineNumber":18,"author":{"gitId":"-"},"content":"public class UiManager implements Ui {","lastModifiedDate":"2018-12-09"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-04-01"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    public static final String ALERT_DIALOG_PANE_FIELD_ID \u003d \"alertDialogPane\";","lastModifiedDate":"2017-04-01"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-04-01"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    private static final Logger logger \u003d LogsCenter.getLogger(UiManager.class);","lastModifiedDate":"2016-09-23"},{"lineNumber":23,"author":{"gitId":"cwq2326"},"content":"    private static final String ICON_APPLICATION \u003d \"/images/tracey_icon.png\";","lastModifiedDate":"2022-03-31"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    private Logic logic;","lastModifiedDate":"2016-09-25"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    private MainWindow mainWindow;","lastModifiedDate":"2016-08-18"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2020-05-27"},{"lineNumber":29,"author":{"gitId":"-"},"content":"     * Creates a {@code UiManager} with the given {@code Logic}.","lastModifiedDate":"2020-05-27"},{"lineNumber":30,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2020-05-27"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    public UiManager(Logic logic) {","lastModifiedDate":"2018-12-08"},{"lineNumber":32,"author":{"gitId":"-"},"content":"        this.logic \u003d logic;","lastModifiedDate":"2016-09-25"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-18"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-25"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    public void start(Stage primaryStage) {","lastModifiedDate":"2016-09-25"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        logger.info(\"Starting UI...\");","lastModifiedDate":"2016-09-21"},{"lineNumber":38,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        //Set the application icon.","lastModifiedDate":"2016-08-18"},{"lineNumber":40,"author":{"gitId":"-"},"content":"        primaryStage.getIcons().add(getImage(ICON_APPLICATION));","lastModifiedDate":"2016-08-18"},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":42,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2016-08-18"},{"lineNumber":43,"author":{"gitId":"-"},"content":"            mainWindow \u003d new MainWindow(primaryStage, logic);","lastModifiedDate":"2018-12-08"},{"lineNumber":44,"author":{"gitId":"-"},"content":"            mainWindow.show(); //This should be called before creating other UI parts","lastModifiedDate":"2016-08-18"},{"lineNumber":45,"author":{"gitId":"-"},"content":"            mainWindow.fillInnerParts();","lastModifiedDate":"2016-08-18"},{"lineNumber":46,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":47,"author":{"gitId":"-"},"content":"        } catch (Throwable e) {","lastModifiedDate":"2016-08-18"},{"lineNumber":48,"author":{"gitId":"-"},"content":"            logger.severe(StringUtil.getDetails(e));","lastModifiedDate":"2016-09-21"},{"lineNumber":49,"author":{"gitId":"-"},"content":"            showFatalErrorDialogAndShutdown(\"Fatal error during initializing\", e);","lastModifiedDate":"2016-08-18"},{"lineNumber":50,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-08-18"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-18"},{"lineNumber":52,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":53,"author":{"gitId":"-"},"content":"    private Image getImage(String imagePath) {","lastModifiedDate":"2016-08-18"},{"lineNumber":54,"author":{"gitId":"-"},"content":"        return new Image(MainApp.class.getResourceAsStream(imagePath));","lastModifiedDate":"2016-08-18"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-18"},{"lineNumber":56,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    void showAlertDialogAndWait(Alert.AlertType type, String title, String headerText, String contentText) {","lastModifiedDate":"2016-09-21"},{"lineNumber":58,"author":{"gitId":"-"},"content":"        showAlertDialogAndWait(mainWindow.getPrimaryStage(), type, title, headerText, contentText);","lastModifiedDate":"2016-08-18"},{"lineNumber":59,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-18"},{"lineNumber":60,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":61,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-08-16"},{"lineNumber":62,"author":{"gitId":"-"},"content":"     * Shows an alert dialog on {@code owner} with the given parameters.","lastModifiedDate":"2017-08-16"},{"lineNumber":63,"author":{"gitId":"-"},"content":"     * This method only returns after the user has closed the alert dialog.","lastModifiedDate":"2017-08-16"},{"lineNumber":64,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-08-16"},{"lineNumber":65,"author":{"gitId":"-"},"content":"    private static void showAlertDialogAndWait(Stage owner, AlertType type, String title, String headerText,","lastModifiedDate":"2016-09-21"},{"lineNumber":66,"author":{"gitId":"-"},"content":"                                               String contentText) {","lastModifiedDate":"2016-08-18"},{"lineNumber":67,"author":{"gitId":"-"},"content":"        final Alert alert \u003d new Alert(type);","lastModifiedDate":"2016-08-18"},{"lineNumber":68,"author":{"gitId":"-"},"content":"        alert.getDialogPane().getStylesheets().add(\"view/DarkTheme.css\");","lastModifiedDate":"2016-08-20"},{"lineNumber":69,"author":{"gitId":"-"},"content":"        alert.initOwner(owner);","lastModifiedDate":"2016-08-18"},{"lineNumber":70,"author":{"gitId":"-"},"content":"        alert.setTitle(title);","lastModifiedDate":"2016-08-18"},{"lineNumber":71,"author":{"gitId":"-"},"content":"        alert.setHeaderText(headerText);","lastModifiedDate":"2016-08-18"},{"lineNumber":72,"author":{"gitId":"-"},"content":"        alert.setContentText(contentText);","lastModifiedDate":"2016-08-18"},{"lineNumber":73,"author":{"gitId":"-"},"content":"        alert.getDialogPane().setId(ALERT_DIALOG_PANE_FIELD_ID);","lastModifiedDate":"2016-10-12"},{"lineNumber":74,"author":{"gitId":"-"},"content":"        alert.showAndWait();","lastModifiedDate":"2016-08-18"},{"lineNumber":75,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-18"},{"lineNumber":76,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":77,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-08-16"},{"lineNumber":78,"author":{"gitId":"-"},"content":"     * Shows an error alert dialog with {@code title} and error message, {@code e},","lastModifiedDate":"2017-08-16"},{"lineNumber":79,"author":{"gitId":"-"},"content":"     * and exits the application after the user has closed the alert dialog.","lastModifiedDate":"2017-08-16"},{"lineNumber":80,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-08-16"},{"lineNumber":81,"author":{"gitId":"-"},"content":"    private void showFatalErrorDialogAndShutdown(String title, Throwable e) {","lastModifiedDate":"2016-09-21"},{"lineNumber":82,"author":{"gitId":"-"},"content":"        logger.severe(title + \" \" + e.getMessage() + StringUtil.getDetails(e));","lastModifiedDate":"2016-09-21"},{"lineNumber":83,"author":{"gitId":"-"},"content":"        showAlertDialogAndWait(Alert.AlertType.ERROR, title, e.getMessage(), e.toString());","lastModifiedDate":"2016-08-18"},{"lineNumber":84,"author":{"gitId":"-"},"content":"        Platform.exit();","lastModifiedDate":"2016-08-18"},{"lineNumber":85,"author":{"gitId":"-"},"content":"        System.exit(1);","lastModifiedDate":"2016-08-18"},{"lineNumber":86,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-18"},{"lineNumber":87,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-25"},{"lineNumber":88,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-18"}],"authorContributionMap":{"cwq2326":1,"-":87}},{"path":"src/main/resources/view/EmailWindow.css","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"DannyDakota"},"content":"#emailButton, #helpMessage {","lastModifiedDate":"2022-03-22"},{"lineNumber":2,"author":{"gitId":"DannyDakota"},"content":"    -fx-text-fill: white;","lastModifiedDate":"2022-03-22"},{"lineNumber":3,"author":{"gitId":"DannyDakota"},"content":"}","lastModifiedDate":"2022-03-22"},{"lineNumber":4,"author":{"gitId":"DannyDakota"},"content":"","lastModifiedDate":"2022-03-22"},{"lineNumber":5,"author":{"gitId":"DannyDakota"},"content":"#emailButton {","lastModifiedDate":"2022-03-22"},{"lineNumber":6,"author":{"gitId":"DannyDakota"},"content":"    -fx-background-color: dimgray;","lastModifiedDate":"2022-03-22"},{"lineNumber":7,"author":{"gitId":"DannyDakota"},"content":"}","lastModifiedDate":"2022-03-22"},{"lineNumber":8,"author":{"gitId":"DannyDakota"},"content":"","lastModifiedDate":"2022-03-22"},{"lineNumber":9,"author":{"gitId":"DannyDakota"},"content":"#emailButton:hover {","lastModifiedDate":"2022-03-22"},{"lineNumber":10,"author":{"gitId":"DannyDakota"},"content":"    -fx-background-color: gray;","lastModifiedDate":"2022-03-22"},{"lineNumber":11,"author":{"gitId":"DannyDakota"},"content":"}","lastModifiedDate":"2022-03-22"},{"lineNumber":12,"author":{"gitId":"DannyDakota"},"content":"","lastModifiedDate":"2022-03-22"},{"lineNumber":13,"author":{"gitId":"DannyDakota"},"content":"#emailButton:armed {","lastModifiedDate":"2022-03-22"},{"lineNumber":14,"author":{"gitId":"DannyDakota"},"content":"    -fx-background-color: darkgray;","lastModifiedDate":"2022-03-22"},{"lineNumber":15,"author":{"gitId":"DannyDakota"},"content":"}","lastModifiedDate":"2022-03-22"},{"lineNumber":16,"author":{"gitId":"DannyDakota"},"content":"","lastModifiedDate":"2022-03-22"},{"lineNumber":17,"author":{"gitId":"DannyDakota"},"content":"#emailMessageContainer {","lastModifiedDate":"2022-03-22"},{"lineNumber":18,"author":{"gitId":"DannyDakota"},"content":"    -fx-background-color: derive(#1d1d1d, 20%);","lastModifiedDate":"2022-03-22"},{"lineNumber":19,"author":{"gitId":"DannyDakota"},"content":"}","lastModifiedDate":"2022-03-22"}],"authorContributionMap":{"DannyDakota":19}},{"path":"src/main/resources/view/EmailWindow.fxml","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"DannyDakota"},"content":"\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e","lastModifiedDate":"2022-03-22"},{"lineNumber":2,"author":{"gitId":"DannyDakota"},"content":"","lastModifiedDate":"2022-03-22"},{"lineNumber":3,"author":{"gitId":"DannyDakota"},"content":"\u003c?import java.net.URL?\u003e","lastModifiedDate":"2022-03-22"},{"lineNumber":4,"author":{"gitId":"DannyDakota"},"content":"\u003c?import javafx.geometry.Insets?\u003e","lastModifiedDate":"2022-03-22"},{"lineNumber":5,"author":{"gitId":"DannyDakota"},"content":"\u003c?import javafx.scene.Scene?\u003e","lastModifiedDate":"2022-03-22"},{"lineNumber":6,"author":{"gitId":"DannyDakota"},"content":"\u003c?import javafx.scene.control.Button?\u003e","lastModifiedDate":"2022-03-22"},{"lineNumber":7,"author":{"gitId":"DannyDakota"},"content":"\u003c?import javafx.scene.control.Label?\u003e","lastModifiedDate":"2022-03-22"},{"lineNumber":8,"author":{"gitId":"DannyDakota"},"content":"\u003c?import javafx.scene.image.Image?\u003e","lastModifiedDate":"2022-03-22"},{"lineNumber":9,"author":{"gitId":"DannyDakota"},"content":"\u003c?import javafx.scene.layout.HBox?\u003e","lastModifiedDate":"2022-03-22"},{"lineNumber":10,"author":{"gitId":"DannyDakota"},"content":"\u003c?import javafx.stage.Stage?\u003e","lastModifiedDate":"2022-03-22"},{"lineNumber":11,"author":{"gitId":"DannyDakota"},"content":"","lastModifiedDate":"2022-03-22"},{"lineNumber":12,"author":{"gitId":"DannyDakota"},"content":"\u003cfx:root resizable\u003d\"false\" title\u003d\"Email List\" type\u003d\"javafx.stage.Stage\" xmlns\u003d\"http://javafx.com/javafx/17\" xmlns:fx\u003d\"http://javafx.com/fxml/1\"\u003e","lastModifiedDate":"2022-03-22"},{"lineNumber":13,"author":{"gitId":"DannyDakota"},"content":"    \u003cicons\u003e","lastModifiedDate":"2022-03-22"},{"lineNumber":14,"author":{"gitId":"DannyDakota"},"content":"        \u003cImage url\u003d\"@/images/info_icon.png\" /\u003e","lastModifiedDate":"2022-03-22"},{"lineNumber":15,"author":{"gitId":"DannyDakota"},"content":"    \u003c/icons\u003e","lastModifiedDate":"2022-03-22"},{"lineNumber":16,"author":{"gitId":"DannyDakota"},"content":"    \u003cscene\u003e","lastModifiedDate":"2022-03-22"},{"lineNumber":17,"author":{"gitId":"DannyDakota"},"content":"        \u003cScene\u003e","lastModifiedDate":"2022-03-22"},{"lineNumber":18,"author":{"gitId":"DannyDakota"},"content":"            \u003cstylesheets\u003e","lastModifiedDate":"2022-03-22"},{"lineNumber":19,"author":{"gitId":"DannyDakota"},"content":"                \u003cURL value\u003d\"@EmailWindow.css\" /\u003e","lastModifiedDate":"2022-03-22"},{"lineNumber":20,"author":{"gitId":"DannyDakota"},"content":"            \u003c/stylesheets\u003e","lastModifiedDate":"2022-03-22"},{"lineNumber":21,"author":{"gitId":"DannyDakota"},"content":"","lastModifiedDate":"2022-03-22"},{"lineNumber":22,"author":{"gitId":"DannyDakota"},"content":"            \u003cHBox fx:id\u003d\"emailMessageContainer\" alignment\u003d\"CENTER\"\u003e","lastModifiedDate":"2022-03-22"},{"lineNumber":23,"author":{"gitId":"DannyDakota"},"content":"                \u003cchildren\u003e","lastModifiedDate":"2022-03-22"},{"lineNumber":24,"author":{"gitId":"DannyDakota"},"content":"                    \u003cLabel fx:id\u003d\"emailList\" text\u003d\"Label\" textFill\u003d\"WHITE\" prefWidth\u003d\"300\"\u003e","lastModifiedDate":"2022-03-22"},{"lineNumber":25,"author":{"gitId":"DannyDakota"},"content":"                        \u003cHBox.margin\u003e","lastModifiedDate":"2022-03-22"},{"lineNumber":26,"author":{"gitId":"DannyDakota"},"content":"                            \u003cInsets right\u003d\"5.0\" /\u003e","lastModifiedDate":"2022-03-22"},{"lineNumber":27,"author":{"gitId":"DannyDakota"},"content":"                        \u003c/HBox.margin\u003e","lastModifiedDate":"2022-03-22"},{"lineNumber":28,"author":{"gitId":"DannyDakota"},"content":"                    \u003c/Label\u003e","lastModifiedDate":"2022-03-22"},{"lineNumber":29,"author":{"gitId":"DannyDakota"},"content":"                    \u003cButton fx:id\u003d\"emailButton\" mnemonicParsing\u003d\"false\" onAction\u003d\"#copyEmail\" text\u003d\"Copy Email\"\u003e","lastModifiedDate":"2022-03-22"},{"lineNumber":30,"author":{"gitId":"DannyDakota"},"content":"                        \u003cHBox.margin\u003e","lastModifiedDate":"2022-03-22"},{"lineNumber":31,"author":{"gitId":"DannyDakota"},"content":"                            \u003cInsets left\u003d\"5.0\" /\u003e","lastModifiedDate":"2022-03-22"},{"lineNumber":32,"author":{"gitId":"DannyDakota"},"content":"                        \u003c/HBox.margin\u003e","lastModifiedDate":"2022-03-22"},{"lineNumber":33,"author":{"gitId":"DannyDakota"},"content":"                    \u003c/Button\u003e","lastModifiedDate":"2022-03-22"},{"lineNumber":34,"author":{"gitId":"DannyDakota"},"content":"                \u003c/children\u003e","lastModifiedDate":"2022-03-22"},{"lineNumber":35,"author":{"gitId":"DannyDakota"},"content":"                \u003copaqueInsets\u003e","lastModifiedDate":"2022-03-22"},{"lineNumber":36,"author":{"gitId":"DannyDakota"},"content":"                    \u003cInsets bottom\u003d\"10.0\" left\u003d\"5.0\" right\u003d\"10.0\" top\u003d\"5.0\" /\u003e","lastModifiedDate":"2022-03-22"},{"lineNumber":37,"author":{"gitId":"DannyDakota"},"content":"                \u003c/opaqueInsets\u003e","lastModifiedDate":"2022-03-22"},{"lineNumber":38,"author":{"gitId":"DannyDakota"},"content":"                \u003cpadding\u003e","lastModifiedDate":"2022-03-22"},{"lineNumber":39,"author":{"gitId":"DannyDakota"},"content":"                    \u003cInsets bottom\u003d\"10.0\" left\u003d\"5.0\" right\u003d\"10.0\" top\u003d\"5.0\" /\u003e","lastModifiedDate":"2022-03-22"},{"lineNumber":40,"author":{"gitId":"DannyDakota"},"content":"                \u003c/padding\u003e","lastModifiedDate":"2022-03-22"},{"lineNumber":41,"author":{"gitId":"DannyDakota"},"content":"            \u003c/HBox\u003e","lastModifiedDate":"2022-03-22"},{"lineNumber":42,"author":{"gitId":"DannyDakota"},"content":"        \u003c/Scene\u003e","lastModifiedDate":"2022-03-22"},{"lineNumber":43,"author":{"gitId":"DannyDakota"},"content":"    \u003c/scene\u003e","lastModifiedDate":"2022-03-22"},{"lineNumber":44,"author":{"gitId":"DannyDakota"},"content":"\u003c/fx:root\u003e","lastModifiedDate":"2022-03-22"}],"authorContributionMap":{"DannyDakota":44}},{"path":"src/main/resources/view/HelpWindow.fxml","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e","lastModifiedDate":"2016-08-18"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":3,"author":{"gitId":"-"},"content":"\u003c?import java.net.URL?\u003e","lastModifiedDate":"2021-08-28"},{"lineNumber":4,"author":{"gitId":"-"},"content":"\u003c?import javafx.geometry.Insets?\u003e","lastModifiedDate":"2019-08-19"},{"lineNumber":5,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.Scene?\u003e","lastModifiedDate":"2017-12-01"},{"lineNumber":6,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.control.Button?\u003e","lastModifiedDate":"2019-08-19"},{"lineNumber":7,"author":{"gitId":"DannyDakota"},"content":"\u003c?import javafx.scene.control.TextArea?\u003e","lastModifiedDate":"2022-04-02"},{"lineNumber":8,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.image.Image?\u003e","lastModifiedDate":"2017-12-01"},{"lineNumber":9,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.layout.HBox?\u003e","lastModifiedDate":"2019-08-19"},{"lineNumber":10,"author":{"gitId":"DannyDakota"},"content":"\u003c?import javafx.scene.text.Font?\u003e","lastModifiedDate":"2022-04-03"},{"lineNumber":11,"author":{"gitId":"-"},"content":"\u003c?import javafx.stage.Stage?\u003e","lastModifiedDate":"2019-08-19"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-25"},{"lineNumber":13,"author":{"gitId":"DannyDakota"},"content":"\u003cfx:root resizable\u003d\"false\" title\u003d\"Help\" type\u003d\"javafx.stage.Stage\" xmlns\u003d\"http://javafx.com/javafx/17\" xmlns:fx\u003d\"http://javafx.com/fxml/1\"\u003e","lastModifiedDate":"2022-04-02"},{"lineNumber":14,"author":{"gitId":"-"},"content":"  \u003cicons\u003e","lastModifiedDate":"2017-12-01"},{"lineNumber":15,"author":{"gitId":"-"},"content":"    \u003cImage url\u003d\"@/images/help_icon.png\" /\u003e","lastModifiedDate":"2017-12-01"},{"lineNumber":16,"author":{"gitId":"-"},"content":"  \u003c/icons\u003e","lastModifiedDate":"2017-12-01"},{"lineNumber":17,"author":{"gitId":"-"},"content":"  \u003cscene\u003e","lastModifiedDate":"2017-12-01"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    \u003cScene\u003e","lastModifiedDate":"2017-12-01"},{"lineNumber":19,"author":{"gitId":"-"},"content":"      \u003cstylesheets\u003e","lastModifiedDate":"2021-08-28"},{"lineNumber":20,"author":{"gitId":"-"},"content":"        \u003cURL value\u003d\"@HelpWindow.css\" /\u003e","lastModifiedDate":"2021-08-28"},{"lineNumber":21,"author":{"gitId":"DannyDakota"},"content":"        \u003cURL value\u003d\"@Label.css\" /\u003e","lastModifiedDate":"2022-04-02"},{"lineNumber":22,"author":{"gitId":"-"},"content":"      \u003c/stylesheets\u003e","lastModifiedDate":"2021-08-28"},{"lineNumber":23,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-08-28"},{"lineNumber":24,"author":{"gitId":"DannyDakota"},"content":"      \u003cHBox fx:id\u003d\"helpMessageContainer\" alignment\u003d\"CENTER\" maxHeight\u003d\"650\" maxWidth\u003d\"800\" prefHeight\u003d\"650\" prefWidth\u003d\"800\"\u003e","lastModifiedDate":"2022-04-02"},{"lineNumber":25,"author":{"gitId":"-"},"content":"        \u003cchildren\u003e","lastModifiedDate":"2019-08-19"},{"lineNumber":26,"author":{"gitId":"DannyDakota"},"content":"          \u003cTextArea fx:id\u003d\"helpMessage\" maxWidth\u003d\"700\" prefWidth\u003d\"700\" wrapText\u003d\"true\"\u003e","lastModifiedDate":"2022-04-02"},{"lineNumber":27,"author":{"gitId":"-"},"content":"            \u003cHBox.margin\u003e","lastModifiedDate":"2019-08-19"},{"lineNumber":28,"author":{"gitId":"-"},"content":"              \u003cInsets right\u003d\"5.0\" /\u003e","lastModifiedDate":"2019-08-19"},{"lineNumber":29,"author":{"gitId":"-"},"content":"            \u003c/HBox.margin\u003e","lastModifiedDate":"2019-08-19"},{"lineNumber":30,"author":{"gitId":"DannyDakota"},"content":"                  \u003cfont\u003e","lastModifiedDate":"2022-04-03"},{"lineNumber":31,"author":{"gitId":"DannyDakota"},"content":"                     \u003cFont size\u003d\"16.0\" /\u003e","lastModifiedDate":"2022-04-03"},{"lineNumber":32,"author":{"gitId":"DannyDakota"},"content":"                  \u003c/font\u003e","lastModifiedDate":"2022-04-03"},{"lineNumber":33,"author":{"gitId":"DannyDakota"},"content":"          \u003c/TextArea\u003e","lastModifiedDate":"2022-04-02"},{"lineNumber":34,"author":{"gitId":"DannyDakota"},"content":"          \u003cButton fx:id\u003d\"openUserGuideButton\" mnemonicParsing\u003d\"false\" onAction\u003d\"#openUG\" text\u003d\"Open User Guide\" wrapText\u003d\"true\"\u003e","lastModifiedDate":"2022-04-02"},{"lineNumber":35,"author":{"gitId":"-"},"content":"            \u003cHBox.margin\u003e","lastModifiedDate":"2019-08-19"},{"lineNumber":36,"author":{"gitId":"-"},"content":"              \u003cInsets left\u003d\"5.0\" /\u003e","lastModifiedDate":"2019-08-19"},{"lineNumber":37,"author":{"gitId":"-"},"content":"            \u003c/HBox.margin\u003e","lastModifiedDate":"2019-08-19"},{"lineNumber":38,"author":{"gitId":"-"},"content":"          \u003c/Button\u003e","lastModifiedDate":"2019-08-19"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        \u003c/children\u003e","lastModifiedDate":"2019-08-19"},{"lineNumber":40,"author":{"gitId":"-"},"content":"        \u003copaqueInsets\u003e","lastModifiedDate":"2019-08-19"},{"lineNumber":41,"author":{"gitId":"-"},"content":"          \u003cInsets bottom\u003d\"10.0\" left\u003d\"5.0\" right\u003d\"10.0\" top\u003d\"5.0\" /\u003e","lastModifiedDate":"2019-08-19"},{"lineNumber":42,"author":{"gitId":"-"},"content":"        \u003c/opaqueInsets\u003e","lastModifiedDate":"2019-08-19"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        \u003cpadding\u003e","lastModifiedDate":"2019-08-19"},{"lineNumber":44,"author":{"gitId":"-"},"content":"          \u003cInsets bottom\u003d\"10.0\" left\u003d\"5.0\" right\u003d\"10.0\" top\u003d\"5.0\" /\u003e","lastModifiedDate":"2019-08-19"},{"lineNumber":45,"author":{"gitId":"-"},"content":"        \u003c/padding\u003e","lastModifiedDate":"2019-08-19"},{"lineNumber":46,"author":{"gitId":"-"},"content":"      \u003c/HBox\u003e","lastModifiedDate":"2019-08-19"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    \u003c/Scene\u003e","lastModifiedDate":"2017-12-01"},{"lineNumber":48,"author":{"gitId":"-"},"content":"  \u003c/scene\u003e","lastModifiedDate":"2017-12-01"},{"lineNumber":49,"author":{"gitId":"-"},"content":"\u003c/fx:root\u003e","lastModifiedDate":"2017-12-01"}],"authorContributionMap":{"DannyDakota":11,"-":38}},{"path":"src/main/resources/view/Label.css","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"DannyDakota"},"content":"#helpMessage {","lastModifiedDate":"2022-04-02"},{"lineNumber":2,"author":{"gitId":"DannyDakota"},"content":"    -fx-control-inner-background:#383838;","lastModifiedDate":"2022-04-02"},{"lineNumber":3,"author":{"gitId":"DannyDakota"},"content":"}","lastModifiedDate":"2022-04-02"},{"lineNumber":4,"author":{"gitId":"DannyDakota"},"content":"","lastModifiedDate":"2022-04-02"},{"lineNumber":5,"author":{"gitId":"DannyDakota"},"content":"#helpMessage {","lastModifiedDate":"2022-04-02"},{"lineNumber":6,"author":{"gitId":"DannyDakota"},"content":"      -fx-highlight-text-fill: #000000;","lastModifiedDate":"2022-04-02"},{"lineNumber":7,"author":{"gitId":"DannyDakota"},"content":"}","lastModifiedDate":"2022-04-02"},{"lineNumber":8,"author":{"gitId":"DannyDakota"},"content":"","lastModifiedDate":"2022-04-02"},{"lineNumber":9,"author":{"gitId":"DannyDakota"},"content":"#helpMessage {","lastModifiedDate":"2022-04-02"},{"lineNumber":10,"author":{"gitId":"DannyDakota"},"content":"       -fx-text-fill: white;","lastModifiedDate":"2022-04-02"},{"lineNumber":11,"author":{"gitId":"DannyDakota"},"content":"}","lastModifiedDate":"2022-04-02"},{"lineNumber":12,"author":{"gitId":"DannyDakota"},"content":"","lastModifiedDate":"2022-04-02"},{"lineNumber":13,"author":{"gitId":"DannyDakota"},"content":"#helpMessage {","lastModifiedDate":"2022-04-02"},{"lineNumber":14,"author":{"gitId":"DannyDakota"},"content":"    -fx-border-color: #383838;","lastModifiedDate":"2022-04-02"},{"lineNumber":15,"author":{"gitId":"DannyDakota"},"content":"     -fx-border-width: 0 ;","lastModifiedDate":"2022-04-02"},{"lineNumber":16,"author":{"gitId":"DannyDakota"},"content":"}","lastModifiedDate":"2022-04-02"}],"authorContributionMap":{"DannyDakota":16}},{"path":"src/main/resources/view/MainWindow.css","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"DannyDakota"},"content":"#emailButton {","lastModifiedDate":"2022-03-22"},{"lineNumber":2,"author":{"gitId":"DannyDakota"},"content":"    -fx-text-fill: white;","lastModifiedDate":"2022-03-22"},{"lineNumber":3,"author":{"gitId":"DannyDakota"},"content":"}","lastModifiedDate":"2022-03-22"},{"lineNumber":4,"author":{"gitId":"DannyDakota"},"content":"","lastModifiedDate":"2022-03-22"},{"lineNumber":5,"author":{"gitId":"DannyDakota"},"content":"#emailButton {","lastModifiedDate":"2022-03-22"},{"lineNumber":6,"author":{"gitId":"DannyDakota"},"content":"    -fx-background-color: dimgray;","lastModifiedDate":"2022-03-22"},{"lineNumber":7,"author":{"gitId":"DannyDakota"},"content":"}","lastModifiedDate":"2022-03-22"},{"lineNumber":8,"author":{"gitId":"DannyDakota"},"content":"","lastModifiedDate":"2022-03-22"},{"lineNumber":9,"author":{"gitId":"DannyDakota"},"content":"#emailButton {","lastModifiedDate":"2022-03-22"},{"lineNumber":10,"author":{"gitId":"DannyDakota"},"content":"    -fx-border-radius: 5px;","lastModifiedDate":"2022-03-22"},{"lineNumber":11,"author":{"gitId":"DannyDakota"},"content":"}","lastModifiedDate":"2022-03-22"},{"lineNumber":12,"author":{"gitId":"DannyDakota"},"content":"","lastModifiedDate":"2022-03-22"},{"lineNumber":13,"author":{"gitId":"DannyDakota"},"content":"#emailButton:hover {","lastModifiedDate":"2022-03-22"},{"lineNumber":14,"author":{"gitId":"DannyDakota"},"content":"    -fx-background-color: gray;","lastModifiedDate":"2022-03-22"},{"lineNumber":15,"author":{"gitId":"DannyDakota"},"content":"}","lastModifiedDate":"2022-03-22"},{"lineNumber":16,"author":{"gitId":"kevinkuo0320"},"content":"","lastModifiedDate":"2022-03-31"},{"lineNumber":17,"author":{"gitId":"kevinkuo0320"},"content":"","lastModifiedDate":"2022-03-31"},{"lineNumber":18,"author":{"gitId":"kevinkuo0320"},"content":"#importButton {","lastModifiedDate":"2022-03-31"},{"lineNumber":19,"author":{"gitId":"kevinkuo0320"},"content":"    -fx-text-fill: white;","lastModifiedDate":"2022-03-31"},{"lineNumber":20,"author":{"gitId":"kevinkuo0320"},"content":"}","lastModifiedDate":"2022-03-31"},{"lineNumber":21,"author":{"gitId":"kevinkuo0320"},"content":"","lastModifiedDate":"2022-03-31"},{"lineNumber":22,"author":{"gitId":"kevinkuo0320"},"content":"#importButton {","lastModifiedDate":"2022-03-31"},{"lineNumber":23,"author":{"gitId":"kevinkuo0320"},"content":"    -fx-background-color: dimgray;","lastModifiedDate":"2022-03-31"},{"lineNumber":24,"author":{"gitId":"kevinkuo0320"},"content":"}","lastModifiedDate":"2022-03-31"},{"lineNumber":25,"author":{"gitId":"kevinkuo0320"},"content":"","lastModifiedDate":"2022-03-31"},{"lineNumber":26,"author":{"gitId":"cwq2326"},"content":"#importButton:hover {","lastModifiedDate":"2022-04-03"},{"lineNumber":27,"author":{"gitId":"cwq2326"},"content":"    -fx-background-color: gray;","lastModifiedDate":"2022-04-03"},{"lineNumber":28,"author":{"gitId":"cwq2326"},"content":"","lastModifiedDate":"2022-04-03"},{"lineNumber":29,"author":{"gitId":"cwq2326"},"content":"}","lastModifiedDate":"2022-04-03"},{"lineNumber":30,"author":{"gitId":"cwq2326"},"content":"","lastModifiedDate":"2022-04-03"},{"lineNumber":31,"author":{"gitId":"kevinkuo0320"},"content":"#importButton {","lastModifiedDate":"2022-03-31"},{"lineNumber":32,"author":{"gitId":"kevinkuo0320"},"content":"    -fx-border-radius: 5px;","lastModifiedDate":"2022-03-31"},{"lineNumber":33,"author":{"gitId":"kevinkuo0320"},"content":"}","lastModifiedDate":"2022-03-31"},{"lineNumber":34,"author":{"gitId":"kevinkuo0320"},"content":"","lastModifiedDate":"2022-03-31"},{"lineNumber":35,"author":{"gitId":"kevinkuo0320"},"content":"#importButton:hover {","lastModifiedDate":"2022-03-31"},{"lineNumber":36,"author":{"gitId":"cwq2326"},"content":"#resizeButton {","lastModifiedDate":"2022-03-28"},{"lineNumber":37,"author":{"gitId":"cwq2326"},"content":"    -fx-text-fill: white;","lastModifiedDate":"2022-03-28"},{"lineNumber":38,"author":{"gitId":"cwq2326"},"content":"}","lastModifiedDate":"2022-03-28"},{"lineNumber":39,"author":{"gitId":"cwq2326"},"content":"","lastModifiedDate":"2022-03-28"},{"lineNumber":40,"author":{"gitId":"cwq2326"},"content":"#resizeButton {","lastModifiedDate":"2022-03-28"},{"lineNumber":41,"author":{"gitId":"cwq2326"},"content":"    -fx-background-color: dimgray;","lastModifiedDate":"2022-04-03"},{"lineNumber":42,"author":{"gitId":"cwq2326"},"content":"}","lastModifiedDate":"2022-03-28"},{"lineNumber":43,"author":{"gitId":"cwq2326"},"content":"","lastModifiedDate":"2022-03-28"},{"lineNumber":44,"author":{"gitId":"cwq2326"},"content":"#resizeButton {","lastModifiedDate":"2022-03-28"},{"lineNumber":45,"author":{"gitId":"cwq2326"},"content":"    -fx-border-radius: 5px;","lastModifiedDate":"2022-03-28"},{"lineNumber":46,"author":{"gitId":"cwq2326"},"content":"}","lastModifiedDate":"2022-03-28"},{"lineNumber":47,"author":{"gitId":"cwq2326"},"content":"","lastModifiedDate":"2022-03-28"},{"lineNumber":48,"author":{"gitId":"cwq2326"},"content":"#resizeButton:hover {","lastModifiedDate":"2022-03-28"},{"lineNumber":49,"author":{"gitId":"kevinkuo0320"},"content":"    -fx-background-color: gray;","lastModifiedDate":"2022-03-31"},{"lineNumber":50,"author":{"gitId":"kevinkuo0320"},"content":"}","lastModifiedDate":"2022-03-31"}],"authorContributionMap":{"DannyDakota":15,"kevinkuo0320":17,"cwq2326":18}},{"path":"src/main/resources/view/MainWindow.fxml","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":3,"author":{"gitId":"-"},"content":"\u003c?import java.net.URL?\u003e","lastModifiedDate":"2016-08-26"},{"lineNumber":4,"author":{"gitId":"-"},"content":"\u003c?import javafx.geometry.Insets?\u003e","lastModifiedDate":"2017-03-25"},{"lineNumber":5,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.Scene?\u003e","lastModifiedDate":"2017-11-29"},{"lineNumber":6,"author":{"gitId":"cwq2326"},"content":"\u003c?import javafx.scene.control.Button?\u003e","lastModifiedDate":"2022-03-28"},{"lineNumber":7,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.control.Menu?\u003e","lastModifiedDate":"2017-03-25"},{"lineNumber":8,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.control.MenuBar?\u003e","lastModifiedDate":"2017-03-25"},{"lineNumber":9,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.control.MenuItem?\u003e","lastModifiedDate":"2017-03-25"},{"lineNumber":10,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.image.Image?\u003e","lastModifiedDate":"2017-11-29"},{"lineNumber":11,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.layout.StackPane?\u003e","lastModifiedDate":"2017-05-09"},{"lineNumber":12,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.layout.VBox?\u003e","lastModifiedDate":"2017-03-25"},{"lineNumber":13,"author":{"gitId":"DannyDakota"},"content":"\u003c?import javafx.stage.Stage?\u003e","lastModifiedDate":"2022-03-22"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-25"},{"lineNumber":15,"author":{"gitId":"DannyDakota"},"content":"\u003cfx:root minHeight\u003d\"600\" minWidth\u003d\"450\" onCloseRequest\u003d\"#handleExit\" title\u003d\"Tracey\" type\u003d\"javafx.stage.Stage\" xmlns\u003d\"http://javafx.com/javafx/17\" xmlns:fx\u003d\"http://javafx.com/fxml/1\"\u003e","lastModifiedDate":"2022-03-28"},{"lineNumber":16,"author":{"gitId":"-"},"content":"  \u003cicons\u003e","lastModifiedDate":"2017-11-29"},{"lineNumber":17,"author":{"gitId":"jiale-c"},"content":"    \u003cImage url\u003d\"@/images/tracey_icon.png\" /\u003e","lastModifiedDate":"2022-03-31"},{"lineNumber":18,"author":{"gitId":"-"},"content":"  \u003c/icons\u003e","lastModifiedDate":"2017-11-29"},{"lineNumber":19,"author":{"gitId":"-"},"content":"  \u003cscene\u003e","lastModifiedDate":"2017-11-29"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    \u003cScene\u003e","lastModifiedDate":"2017-11-29"},{"lineNumber":21,"author":{"gitId":"-"},"content":"      \u003cstylesheets\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":22,"author":{"gitId":"-"},"content":"        \u003cURL value\u003d\"@DarkTheme.css\" /\u003e","lastModifiedDate":"2016-08-20"},{"lineNumber":23,"author":{"gitId":"-"},"content":"        \u003cURL value\u003d\"@Extensions.css\" /\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":24,"author":{"gitId":"DannyDakota"},"content":"        \u003cURL value\u003d\"@MainWindow.css\" /\u003e","lastModifiedDate":"2022-03-22"},{"lineNumber":25,"author":{"gitId":"-"},"content":"      \u003c/stylesheets\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-25"},{"lineNumber":27,"author":{"gitId":"-"},"content":"      \u003cVBox\u003e","lastModifiedDate":"2017-11-29"},{"lineNumber":28,"author":{"gitId":"-"},"content":"        \u003cMenuBar fx:id\u003d\"menuBar\" VBox.vgrow\u003d\"NEVER\"\u003e","lastModifiedDate":"2017-06-13"},{"lineNumber":29,"author":{"gitId":"-"},"content":"          \u003cMenu mnemonicParsing\u003d\"false\" text\u003d\"File\"\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":30,"author":{"gitId":"-"},"content":"            \u003cMenuItem mnemonicParsing\u003d\"false\" onAction\u003d\"#handleExit\" text\u003d\"Exit\" /\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":31,"author":{"gitId":"-"},"content":"          \u003c/Menu\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":32,"author":{"gitId":"-"},"content":"          \u003cMenu mnemonicParsing\u003d\"false\" text\u003d\"Help\"\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":33,"author":{"gitId":"-"},"content":"            \u003cMenuItem fx:id\u003d\"helpMenuItem\" mnemonicParsing\u003d\"false\" onAction\u003d\"#handleHelp\" text\u003d\"Help\" /\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":34,"author":{"gitId":"-"},"content":"          \u003c/Menu\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":35,"author":{"gitId":"-"},"content":"        \u003c/MenuBar\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":36,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-25"},{"lineNumber":37,"author":{"gitId":"DannyDakota"},"content":"        \u003cStackPane fx:id\u003d\"commandBoxPlaceholder\" styleClass\u003d\"pane-with-border\" VBox.vgrow\u003d\"NEVER\"\u003e","lastModifiedDate":"2022-03-22"},{"lineNumber":38,"author":{"gitId":"-"},"content":"          \u003cpadding\u003e","lastModifiedDate":"2016-09-14"},{"lineNumber":39,"author":{"gitId":"DannyDakota"},"content":"            \u003cInsets bottom\u003d\"5\" left\u003d\"10\" right\u003d\"10\" top\u003d\"5\" /\u003e","lastModifiedDate":"2022-03-22"},{"lineNumber":40,"author":{"gitId":"-"},"content":"          \u003c/padding\u003e","lastModifiedDate":"2016-09-14"},{"lineNumber":41,"author":{"gitId":"-"},"content":"        \u003c/StackPane\u003e","lastModifiedDate":"2017-05-09"},{"lineNumber":42,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-25"},{"lineNumber":43,"author":{"gitId":"cwq2326"},"content":"        \u003cStackPane fx:id\u003d\"actionBarPlaceholder\" maxHeight\u003d\"35\" minHeight\u003d\"35\" prefHeight\u003d\"35\" styleClass\u003d\"pane-with-border\" VBox.vgrow\u003d\"NEVER\"\u003e","lastModifiedDate":"2022-03-28"},{"lineNumber":44,"author":{"gitId":"-"},"content":"          \u003cpadding\u003e","lastModifiedDate":"2016-09-14"},{"lineNumber":45,"author":{"gitId":"DannyDakota"},"content":"            \u003cInsets bottom\u003d\"5\" left\u003d\"10\" right\u003d\"10\" top\u003d\"5\" /\u003e","lastModifiedDate":"2022-03-22"},{"lineNumber":46,"author":{"gitId":"-"},"content":"          \u003c/padding\u003e","lastModifiedDate":"2016-09-14"},{"lineNumber":47,"author":{"gitId":"cwq2326"},"content":"               \u003cStackPane maxWidth\u003d\"425.0\" StackPane.alignment\u003d\"CENTER_RIGHT\"\u003e","lastModifiedDate":"2022-04-03"},{"lineNumber":48,"author":{"gitId":"cwq2326"},"content":"                  \u003cchildren\u003e","lastModifiedDate":"2022-03-28"},{"lineNumber":49,"author":{"gitId":"cwq2326"},"content":"                \u003cButton fx:id\u003d\"emailButton\" onAction\u003d\"#handleEmailWindow\" text\u003d\"Show Email\" StackPane.alignment\u003d\"CENTER_RIGHT\"\u003e","lastModifiedDate":"2022-03-28"},{"lineNumber":50,"author":{"gitId":"cwq2326"},"content":"          \u003c/Button\u003e","lastModifiedDate":"2022-04-03"},{"lineNumber":51,"author":{"gitId":"cwq2326"},"content":"                      \u003cButton fx:id\u003d\"importButton\" onAction\u003d\"#handleImport\" text\u003d\"Import\" StackPane.alignment\u003d\"CENTER_LEFT\"\u003e","lastModifiedDate":"2022-04-03"},{"lineNumber":52,"author":{"gitId":"cwq2326"},"content":"                      \u003c/Button\u003e","lastModifiedDate":"2022-04-03"},{"lineNumber":53,"author":{"gitId":"cwq2326"},"content":"                     \u003cButton fx:id\u003d\"resizeButton\" alignment\u003d\"CENTER_RIGHT\" onAction\u003d\"#handleResize\" text\u003d\"Resize Display\" textFill\u003d\"#4b1010\" StackPane.alignment\u003d\"CENTER\"\u003e","lastModifiedDate":"2022-04-03"},{"lineNumber":54,"author":{"gitId":"cwq2326"},"content":"                        \u003cStackPane.margin\u003e","lastModifiedDate":"2022-04-03"},{"lineNumber":55,"author":{"gitId":"cwq2326"},"content":"                           \u003cInsets right\u003d\"20.0\" /\u003e","lastModifiedDate":"2022-04-03"},{"lineNumber":56,"author":{"gitId":"cwq2326"},"content":"                        \u003c/StackPane.margin\u003e","lastModifiedDate":"2022-04-03"},{"lineNumber":57,"author":{"gitId":"cwq2326"},"content":"                     \u003c/Button\u003e","lastModifiedDate":"2022-03-28"},{"lineNumber":58,"author":{"gitId":"cwq2326"},"content":"                  \u003c/children\u003e","lastModifiedDate":"2022-03-28"},{"lineNumber":59,"author":{"gitId":"-"},"content":"               \u003c/StackPane\u003e","lastModifiedDate":"2017-05-09"},{"lineNumber":60,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-25"},{"lineNumber":61,"author":{"gitId":"cwq2326"},"content":"        \u003c/StackPane\u003e","lastModifiedDate":"2022-03-28"},{"lineNumber":62,"author":{"gitId":"cwq2326"},"content":"","lastModifiedDate":"2022-03-28"},{"lineNumber":63,"author":{"gitId":"cwq2326"},"content":"","lastModifiedDate":"2022-03-28"},{"lineNumber":64,"author":{"gitId":"cwq2326"},"content":"        \u003cStackPane fx:id\u003d\"resultDisplayPlaceholder\" maxHeight\u003d\"100.0\" minHeight\u003d\"100.0\" prefHeight\u003d\"150.0\" styleClass\u003d\"pane-with-border\" VBox.vgrow\u003d\"NEVER\"\u003e","lastModifiedDate":"2022-03-28"},{"lineNumber":65,"author":{"gitId":"-"},"content":"          \u003cpadding\u003e","lastModifiedDate":"2016-08-15"},{"lineNumber":66,"author":{"gitId":"DannyDakota"},"content":"            \u003cInsets bottom\u003d\"5\" left\u003d\"10\" right\u003d\"10\" top\u003d\"5\" /\u003e","lastModifiedDate":"2022-03-22"},{"lineNumber":67,"author":{"gitId":"-"},"content":"          \u003c/padding\u003e","lastModifiedDate":"2016-09-14"},{"lineNumber":68,"author":{"gitId":"kevinkuo0320"},"content":"","lastModifiedDate":"2022-03-31"},{"lineNumber":69,"author":{"gitId":"DannyDakota"},"content":"          \u003cButton fx:id\u003d\"emailButton\" onAction\u003d\"#handleEmailWindow\" text\u003d\"Show Email\" StackPane.alignment\u003d\"CENTER_RIGHT\"\u003e","lastModifiedDate":"2022-03-22"},{"lineNumber":70,"author":{"gitId":"DannyDakota"},"content":"          \u003c/Button\u003e","lastModifiedDate":"2022-03-22"},{"lineNumber":71,"author":{"gitId":"DannyDakota"},"content":"","lastModifiedDate":"2022-03-22"},{"lineNumber":72,"author":{"gitId":"-"},"content":"        \u003c/StackPane\u003e","lastModifiedDate":"2017-05-09"},{"lineNumber":73,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-25"},{"lineNumber":74,"author":{"gitId":"DannyDakota"},"content":"        \u003cVBox fx:id\u003d\"personList\" minWidth\u003d\"340\" prefWidth\u003d\"340\" styleClass\u003d\"pane-with-border\" VBox.vgrow\u003d\"ALWAYS\"\u003e","lastModifiedDate":"2022-03-22"},{"lineNumber":75,"author":{"gitId":"-"},"content":"          \u003cpadding\u003e","lastModifiedDate":"2016-08-15"},{"lineNumber":76,"author":{"gitId":"DannyDakota"},"content":"            \u003cInsets bottom\u003d\"10\" left\u003d\"10\" right\u003d\"10\" top\u003d\"10\" /\u003e","lastModifiedDate":"2022-03-22"},{"lineNumber":77,"author":{"gitId":"-"},"content":"          \u003c/padding\u003e","lastModifiedDate":"2016-08-15"},{"lineNumber":78,"author":{"gitId":"-"},"content":"          \u003cStackPane fx:id\u003d\"personListPanelPlaceholder\" VBox.vgrow\u003d\"ALWAYS\" /\u003e","lastModifiedDate":"2017-06-21"},{"lineNumber":79,"author":{"gitId":"-"},"content":"        \u003c/VBox\u003e","lastModifiedDate":"2016-08-15"},{"lineNumber":80,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-25"},{"lineNumber":81,"author":{"gitId":"-"},"content":"        \u003cStackPane fx:id\u003d\"statusbarPlaceholder\" VBox.vgrow\u003d\"NEVER\" /\u003e","lastModifiedDate":"2017-05-09"},{"lineNumber":82,"author":{"gitId":"-"},"content":"      \u003c/VBox\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":83,"author":{"gitId":"-"},"content":"    \u003c/Scene\u003e","lastModifiedDate":"2017-11-29"},{"lineNumber":84,"author":{"gitId":"-"},"content":"  \u003c/scene\u003e","lastModifiedDate":"2017-11-29"},{"lineNumber":85,"author":{"gitId":"-"},"content":"\u003c/fx:root\u003e","lastModifiedDate":"2017-11-29"}],"authorContributionMap":{"DannyDakota":12,"kevinkuo0320":1,"cwq2326":18,"jiale-c":1,"-":53}},{"path":"src/main/resources/view/PersonListCard.fxml","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":3,"author":{"gitId":"-"},"content":"\u003c?import javafx.geometry.Insets?\u003e","lastModifiedDate":"2016-12-18"},{"lineNumber":4,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.control.Label?\u003e","lastModifiedDate":"2016-12-18"},{"lineNumber":5,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.layout.ColumnConstraints?\u003e","lastModifiedDate":"2016-12-18"},{"lineNumber":6,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.layout.FlowPane?\u003e","lastModifiedDate":"2016-12-18"},{"lineNumber":7,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.layout.GridPane?\u003e","lastModifiedDate":"2016-12-18"},{"lineNumber":8,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.layout.HBox?\u003e","lastModifiedDate":"2016-12-18"},{"lineNumber":9,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.layout.Region?\u003e","lastModifiedDate":"2017-03-20"},{"lineNumber":10,"author":{"gitId":"cwq2326"},"content":"\u003c?import javafx.scene.layout.RowConstraints?\u003e","lastModifiedDate":"2022-02-28"},{"lineNumber":11,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.layout.VBox?\u003e","lastModifiedDate":"2016-12-18"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-18"},{"lineNumber":13,"author":{"gitId":"cwq2326"},"content":"\u003cHBox id\u003d\"cardPane\" fx:id\u003d\"cardPane\" alignment\u003d\"CENTER\" xmlns\u003d\"http://javafx.com/javafx/17\" xmlns:fx\u003d\"http://javafx.com/fxml/1\"\u003e","lastModifiedDate":"2022-02-28"},{"lineNumber":14,"author":{"gitId":"-"},"content":"  \u003cGridPane HBox.hgrow\u003d\"ALWAYS\"\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":15,"author":{"gitId":"-"},"content":"    \u003ccolumnConstraints\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":16,"author":{"gitId":"-"},"content":"      \u003cColumnConstraints hgrow\u003d\"SOMETIMES\" minWidth\u003d\"10\" prefWidth\u003d\"150\" /\u003e","lastModifiedDate":"2017-03-28"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    \u003c/columnConstraints\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    \u003cVBox alignment\u003d\"CENTER_LEFT\" minHeight\u003d\"105\" GridPane.columnIndex\u003d\"0\"\u003e","lastModifiedDate":"2017-03-28"},{"lineNumber":19,"author":{"gitId":"-"},"content":"      \u003cpadding\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":20,"author":{"gitId":"cwq2326"},"content":"        \u003cInsets bottom\u003d\"5\" left\u003d\"15\" right\u003d\"5\" top\u003d\"5\" /\u003e","lastModifiedDate":"2022-02-28"},{"lineNumber":21,"author":{"gitId":"-"},"content":"      \u003c/padding\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":22,"author":{"gitId":"cwq2326"},"content":"      \u003cHBox alignment\u003d\"CENTER_LEFT\" spacing\u003d\"5\"\u003e","lastModifiedDate":"2022-02-28"},{"lineNumber":23,"author":{"gitId":"-"},"content":"        \u003cLabel fx:id\u003d\"id\" styleClass\u003d\"cell_big_label\"\u003e","lastModifiedDate":"2017-03-20"},{"lineNumber":24,"author":{"gitId":"-"},"content":"          \u003cminWidth\u003e","lastModifiedDate":"2017-03-20"},{"lineNumber":25,"author":{"gitId":"-"},"content":"            \u003c!-- Ensures that the label text is never truncated --\u003e","lastModifiedDate":"2017-03-20"},{"lineNumber":26,"author":{"gitId":"-"},"content":"            \u003cRegion fx:constant\u003d\"USE_PREF_SIZE\" /\u003e","lastModifiedDate":"2017-03-20"},{"lineNumber":27,"author":{"gitId":"-"},"content":"          \u003c/minWidth\u003e","lastModifiedDate":"2017-03-20"},{"lineNumber":28,"author":{"gitId":"-"},"content":"        \u003c/Label\u003e","lastModifiedDate":"2017-03-20"},{"lineNumber":29,"author":{"gitId":"cwq2326"},"content":"        \u003cLabel fx:id\u003d\"name\" styleClass\u003d\"cell_big_label\" text\u003d\"\\$first\" /\u003e","lastModifiedDate":"2022-02-28"},{"lineNumber":30,"author":{"gitId":"-"},"content":"      \u003c/HBox\u003e","lastModifiedDate":"2016-09-03"},{"lineNumber":31,"author":{"gitId":"-"},"content":"      \u003cFlowPane fx:id\u003d\"tags\" /\u003e","lastModifiedDate":"2016-12-18"},{"lineNumber":32,"author":{"gitId":"cwq2326"},"content":"      \u003cLabel fx:id\u003d\"faculty\" styleClass\u003d\"cell_small_label\" text\u003d\"\\$faculty\" /\u003e","lastModifiedDate":"2022-02-28"},{"lineNumber":33,"author":{"gitId":"DannyDakota"},"content":"      \u003cLabel fx:id\u003d\"block\" styleClass\u003d\"cell_small_label\" text\u003d\"\\$block\" /\u003e","lastModifiedDate":"2022-03-17"},{"lineNumber":34,"author":{"gitId":"-"},"content":"      \u003cLabel fx:id\u003d\"phone\" styleClass\u003d\"cell_small_label\" text\u003d\"\\$phone\" /\u003e","lastModifiedDate":"2016-08-24"},{"lineNumber":35,"author":{"gitId":"-"},"content":"      \u003cLabel fx:id\u003d\"address\" styleClass\u003d\"cell_small_label\" text\u003d\"\\$address\" /\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":36,"author":{"gitId":"-"},"content":"      \u003cLabel fx:id\u003d\"email\" styleClass\u003d\"cell_small_label\" text\u003d\"\\$email\" /\u003e","lastModifiedDate":"2016-08-24"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    \u003c/VBox\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":38,"author":{"gitId":"cwq2326"},"content":"      \u003crowConstraints\u003e","lastModifiedDate":"2022-02-28"},{"lineNumber":39,"author":{"gitId":"cwq2326"},"content":"         \u003cRowConstraints /\u003e","lastModifiedDate":"2022-02-28"},{"lineNumber":40,"author":{"gitId":"cwq2326"},"content":"      \u003c/rowConstraints\u003e","lastModifiedDate":"2022-02-28"},{"lineNumber":41,"author":{"gitId":"-"},"content":"  \u003c/GridPane\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":42,"author":{"gitId":"cwq2326"},"content":"   \u003cHBox fx:id\u003d\"covidStatusPane\" alignment\u003d\"CENTER\" prefHeight\u003d\"100.0\" prefWidth\u003d\"200.0\" style\u003d\"-fx-background-color: aquamarine; -fx-background-radius: 10px; -fx-border-radius: 10px; -fx-border-color: black; -fx-max-width: 100px; -fx-max-height: 50px;\"\u003e","lastModifiedDate":"2022-02-28"},{"lineNumber":43,"author":{"gitId":"cwq2326"},"content":"      \u003cchildren\u003e","lastModifiedDate":"2022-02-28"},{"lineNumber":44,"author":{"gitId":"cwq2326"},"content":"      \u003cLabel fx:id\u003d\"status\" alignment\u003d\"BOTTOM_RIGHT\" style\u003d\"-fx-font-size: 15px; -fx-text-fill: BLACK; -fx-font-weight: bold;\" text\u003d\"\\$status\" /\u003e","lastModifiedDate":"2022-02-28"},{"lineNumber":45,"author":{"gitId":"cwq2326"},"content":"      \u003c/children\u003e","lastModifiedDate":"2022-02-28"},{"lineNumber":46,"author":{"gitId":"cwq2326"},"content":"      \u003cHBox.margin\u003e","lastModifiedDate":"2022-02-28"},{"lineNumber":47,"author":{"gitId":"cwq2326"},"content":"         \u003cInsets right\u003d\"50.0\" /\u003e","lastModifiedDate":"2022-02-28"},{"lineNumber":48,"author":{"gitId":"cwq2326"},"content":"      \u003c/HBox.margin\u003e","lastModifiedDate":"2022-02-28"},{"lineNumber":49,"author":{"gitId":"cwq2326"},"content":"   \u003c/HBox\u003e","lastModifiedDate":"2022-02-28"},{"lineNumber":50,"author":{"gitId":"-"},"content":"\u003c/HBox\u003e","lastModifiedDate":"2016-08-08"}],"authorContributionMap":{"DannyDakota":1,"cwq2326":17,"-":32}},{"path":"src/main/resources/view/PieChartWindow.css","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"jiale-c"},"content":".default-color0.chart-pie { -fx-pie-color: blue; }","lastModifiedDate":"2022-04-03"},{"lineNumber":2,"author":{"gitId":"jiale-c"},"content":".default-color1.chart-pie { -fx-pie-color: red; }","lastModifiedDate":"2022-04-03"},{"lineNumber":3,"author":{"gitId":"jiale-c"},"content":".default-color2.chart-pie { -fx-pie-color: green; }","lastModifiedDate":"2022-04-03"},{"lineNumber":4,"author":{"gitId":"jiale-c"},"content":".default-color3.chart-pie { -fx-pie-color: yellow; }","lastModifiedDate":"2022-04-03"},{"lineNumber":5,"author":{"gitId":"jiale-c"},"content":".default-color4.chart-pie { -fx-pie-color: pink; }","lastModifiedDate":"2022-04-03"}],"authorContributionMap":{"jiale-c":5}},{"path":"src/main/resources/view/PieChartWindow.fxml","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"cwq2326"},"content":"\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e","lastModifiedDate":"2022-03-22"},{"lineNumber":2,"author":{"gitId":"cwq2326"},"content":"\u003c?import javafx.geometry.Insets?\u003e","lastModifiedDate":"2022-03-22"},{"lineNumber":3,"author":{"gitId":"cwq2326"},"content":"\u003c?import javafx.scene.Scene?\u003e","lastModifiedDate":"2022-03-22"},{"lineNumber":4,"author":{"gitId":"jiale-c"},"content":"\u003c?import javafx.scene.layout.VBox?\u003e","lastModifiedDate":"2022-04-03"},{"lineNumber":5,"author":{"gitId":"cwq2326"},"content":"\u003c?import javafx.stage.Stage?\u003e","lastModifiedDate":"2022-03-22"},{"lineNumber":6,"author":{"gitId":"cwq2326"},"content":"","lastModifiedDate":"2022-03-22"},{"lineNumber":7,"author":{"gitId":"jiale-c"},"content":"\u003cfx:root minHeight\u003d\"600\" minWidth\u003d\"450\" maxWidth\u003d\"550\" title\u003d\"Charts\" type\u003d\"javafx.stage.Stage\" xmlns\u003d\"http://javafx.com/javafx/11\" xmlns:fx\u003d\"http://javafx.com/fxml/1\"\u003e","lastModifiedDate":"2022-04-03"},{"lineNumber":8,"author":{"gitId":"cwq2326"},"content":"    \u003cscene\u003e","lastModifiedDate":"2022-03-22"},{"lineNumber":9,"author":{"gitId":"cwq2326"},"content":"        \u003cScene\u003e","lastModifiedDate":"2022-03-22"},{"lineNumber":10,"author":{"gitId":"jiale-c"},"content":"            \u003cVBox alignment\u003d\"CENTER\" fx:id\u003d\"pieChartContainer\" VBox.vgrow\u003d\"ALWAYS\"\u003e","lastModifiedDate":"2022-04-03"},{"lineNumber":11,"author":{"gitId":"cwq2326"},"content":"                \u003copaqueInsets\u003e","lastModifiedDate":"2022-03-22"},{"lineNumber":12,"author":{"gitId":"cwq2326"},"content":"                    \u003cInsets bottom\u003d\"10.0\" left\u003d\"5.0\" right\u003d\"10.0\" top\u003d\"5.0\" /\u003e","lastModifiedDate":"2022-03-22"},{"lineNumber":13,"author":{"gitId":"cwq2326"},"content":"                \u003c/opaqueInsets\u003e","lastModifiedDate":"2022-03-22"},{"lineNumber":14,"author":{"gitId":"cwq2326"},"content":"                \u003cpadding\u003e","lastModifiedDate":"2022-03-22"},{"lineNumber":15,"author":{"gitId":"cwq2326"},"content":"                    \u003cInsets bottom\u003d\"10.0\" left\u003d\"5.0\" right\u003d\"10.0\" top\u003d\"5.0\" /\u003e","lastModifiedDate":"2022-03-22"},{"lineNumber":16,"author":{"gitId":"cwq2326"},"content":"                \u003c/padding\u003e","lastModifiedDate":"2022-03-22"},{"lineNumber":17,"author":{"gitId":"jiale-c"},"content":"            \u003c/VBox\u003e","lastModifiedDate":"2022-04-03"},{"lineNumber":18,"author":{"gitId":"cwq2326"},"content":"        \u003c/Scene\u003e","lastModifiedDate":"2022-03-22"},{"lineNumber":19,"author":{"gitId":"cwq2326"},"content":"    \u003c/scene\u003e","lastModifiedDate":"2022-03-22"},{"lineNumber":20,"author":{"gitId":"cwq2326"},"content":"\u003c/fx:root\u003e","lastModifiedDate":"2022-03-22"}],"authorContributionMap":{"cwq2326":16,"jiale-c":4}},{"path":"src/test/java/seedu/address/logic/LogicManagerTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic;","lastModifiedDate":"2016-09-21"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static seedu.address.commons.core.Messages.MESSAGE_INVALID_PERSON_DISPLAYED_INDEX;","lastModifiedDate":"2017-01-19"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static seedu.address.commons.core.Messages.MESSAGE_UNKNOWN_COMMAND;","lastModifiedDate":"2017-01-19"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.ADDRESS_DESC_AMY;","lastModifiedDate":"2018-12-09"},{"lineNumber":7,"author":{"gitId":"DannyDakota"},"content":"import static seedu.address.logic.commands.CommandTestUtil.BLOCK_DESC_AMY;","lastModifiedDate":"2022-03-17"},{"lineNumber":8,"author":{"gitId":"DannyDakota"},"content":"import static seedu.address.logic.commands.CommandTestUtil.COVID_STATUS_DESC_AMY;","lastModifiedDate":"2022-03-08"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.EMAIL_DESC_AMY;","lastModifiedDate":"2018-12-09"},{"lineNumber":10,"author":{"gitId":"DannyDakota"},"content":"import static seedu.address.logic.commands.CommandTestUtil.FACULTY_DESC_AMY;","lastModifiedDate":"2022-03-08"},{"lineNumber":11,"author":{"gitId":"DannyDakota"},"content":"import static seedu.address.logic.commands.CommandTestUtil.MATRICULATION_NUMBER_DESC_AMY;","lastModifiedDate":"2022-03-08"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.NAME_DESC_AMY;","lastModifiedDate":"2018-12-09"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.PHONE_DESC_AMY;","lastModifiedDate":"2018-12-09"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.Assert.assertThrows;","lastModifiedDate":"2019-03-14"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.TypicalPersons.AMY;","lastModifiedDate":"2018-12-09"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":17,"author":{"gitId":"-"},"content":"import java.io.IOException;","lastModifiedDate":"2018-12-09"},{"lineNumber":18,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-12-09"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":20,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.BeforeEach;","lastModifiedDate":"2019-04-25"},{"lineNumber":21,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-25"},{"lineNumber":22,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.io.TempDir;","lastModifiedDate":"2019-04-25"},{"lineNumber":23,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":24,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.AddCommand;","lastModifiedDate":"2018-12-09"},{"lineNumber":25,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.CommandResult;","lastModifiedDate":"2017-01-18"},{"lineNumber":26,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.ListCommand;","lastModifiedDate":"2017-06-19"},{"lineNumber":27,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.exceptions.CommandException;","lastModifiedDate":"2017-02-05"},{"lineNumber":28,"author":{"gitId":"-"},"content":"import seedu.address.logic.parser.exceptions.ParseException;","lastModifiedDate":"2017-03-11"},{"lineNumber":29,"author":{"gitId":"-"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2016-09-25"},{"lineNumber":30,"author":{"gitId":"-"},"content":"import seedu.address.model.ModelManager;","lastModifiedDate":"2016-09-21"},{"lineNumber":31,"author":{"gitId":"-"},"content":"import seedu.address.model.ReadOnlyAddressBook;","lastModifiedDate":"2018-12-09"},{"lineNumber":32,"author":{"gitId":"-"},"content":"import seedu.address.model.UserPrefs;","lastModifiedDate":"2017-05-31"},{"lineNumber":33,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2018-12-09"},{"lineNumber":34,"author":{"gitId":"-"},"content":"import seedu.address.storage.JsonAddressBookStorage;","lastModifiedDate":"2018-12-09"},{"lineNumber":35,"author":{"gitId":"-"},"content":"import seedu.address.storage.JsonUserPrefsStorage;","lastModifiedDate":"2018-12-09"},{"lineNumber":36,"author":{"gitId":"-"},"content":"import seedu.address.storage.StorageManager;","lastModifiedDate":"2018-12-09"},{"lineNumber":37,"author":{"gitId":"-"},"content":"import seedu.address.testutil.PersonBuilder;","lastModifiedDate":"2018-12-09"},{"lineNumber":38,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":39,"author":{"gitId":"-"},"content":"public class LogicManagerTest {","lastModifiedDate":"2016-09-22"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    private static final IOException DUMMY_IO_EXCEPTION \u003d new IOException(\"dummy exception\");","lastModifiedDate":"2018-12-09"},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    @TempDir","lastModifiedDate":"2019-04-25"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    public Path temporaryFolder;","lastModifiedDate":"2019-04-25"},{"lineNumber":44,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    private Model model \u003d new ModelManager();","lastModifiedDate":"2017-06-20"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    private Logic logic;","lastModifiedDate":"2018-12-09"},{"lineNumber":47,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    @BeforeEach","lastModifiedDate":"2019-04-25"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    public void setUp() {","lastModifiedDate":"2019-04-25"},{"lineNumber":50,"author":{"gitId":"-"},"content":"        JsonAddressBookStorage addressBookStorage \u003d","lastModifiedDate":"2019-04-25"},{"lineNumber":51,"author":{"gitId":"-"},"content":"                new JsonAddressBookStorage(temporaryFolder.resolve(\"addressBook.json\"));","lastModifiedDate":"2019-04-25"},{"lineNumber":52,"author":{"gitId":"-"},"content":"        JsonUserPrefsStorage userPrefsStorage \u003d new JsonUserPrefsStorage(temporaryFolder.resolve(\"userPrefs.json\"));","lastModifiedDate":"2019-04-25"},{"lineNumber":53,"author":{"gitId":"-"},"content":"        StorageManager storage \u003d new StorageManager(addressBookStorage, userPrefsStorage);","lastModifiedDate":"2018-12-09"},{"lineNumber":54,"author":{"gitId":"-"},"content":"        logic \u003d new LogicManager(model, storage);","lastModifiedDate":"2018-12-09"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-12-09"},{"lineNumber":56,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-20"},{"lineNumber":58,"author":{"gitId":"-"},"content":"    public void execute_invalidCommandFormat_throwsParseException() {","lastModifiedDate":"2017-08-15"},{"lineNumber":59,"author":{"gitId":"-"},"content":"        String invalidCommand \u003d \"uicfhmowqewca\";","lastModifiedDate":"2017-06-20"},{"lineNumber":60,"author":{"gitId":"-"},"content":"        assertParseException(invalidCommand, MESSAGE_UNKNOWN_COMMAND);","lastModifiedDate":"2017-06-20"},{"lineNumber":61,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-20"},{"lineNumber":62,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-20"},{"lineNumber":63,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-14"},{"lineNumber":64,"author":{"gitId":"-"},"content":"    public void execute_commandExecutionError_throwsCommandException() {","lastModifiedDate":"2017-08-15"},{"lineNumber":65,"author":{"gitId":"-"},"content":"        String deleteCommand \u003d \"delete 9\";","lastModifiedDate":"2017-06-14"},{"lineNumber":66,"author":{"gitId":"-"},"content":"        assertCommandException(deleteCommand, MESSAGE_INVALID_PERSON_DISPLAYED_INDEX);","lastModifiedDate":"2017-06-14"},{"lineNumber":67,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-14"},{"lineNumber":68,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-14"},{"lineNumber":69,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-19"},{"lineNumber":70,"author":{"gitId":"-"},"content":"    public void execute_validCommand_success() throws Exception {","lastModifiedDate":"2019-03-14"},{"lineNumber":71,"author":{"gitId":"-"},"content":"        String listCommand \u003d ListCommand.COMMAND_WORD;","lastModifiedDate":"2017-06-19"},{"lineNumber":72,"author":{"gitId":"-"},"content":"        assertCommandSuccess(listCommand, ListCommand.MESSAGE_SUCCESS, model);","lastModifiedDate":"2017-06-19"},{"lineNumber":73,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-20"},{"lineNumber":74,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-20"},{"lineNumber":75,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-12-09"},{"lineNumber":76,"author":{"gitId":"-"},"content":"    public void execute_storageThrowsIoException_throwsCommandException() {","lastModifiedDate":"2019-04-25"},{"lineNumber":77,"author":{"gitId":"-"},"content":"        // Setup LogicManager with JsonAddressBookIoExceptionThrowingStub","lastModifiedDate":"2018-12-09"},{"lineNumber":78,"author":{"gitId":"-"},"content":"        JsonAddressBookStorage addressBookStorage \u003d","lastModifiedDate":"2018-12-09"},{"lineNumber":79,"author":{"gitId":"-"},"content":"                new JsonAddressBookIoExceptionThrowingStub(temporaryFolder.resolve(\"ioExceptionAddressBook.json\"));","lastModifiedDate":"2019-04-25"},{"lineNumber":80,"author":{"gitId":"-"},"content":"        JsonUserPrefsStorage userPrefsStorage \u003d","lastModifiedDate":"2019-04-25"},{"lineNumber":81,"author":{"gitId":"-"},"content":"                new JsonUserPrefsStorage(temporaryFolder.resolve(\"ioExceptionUserPrefs.json\"));","lastModifiedDate":"2019-04-25"},{"lineNumber":82,"author":{"gitId":"-"},"content":"        StorageManager storage \u003d new StorageManager(addressBookStorage, userPrefsStorage);","lastModifiedDate":"2018-12-09"},{"lineNumber":83,"author":{"gitId":"-"},"content":"        logic \u003d new LogicManager(model, storage);","lastModifiedDate":"2018-12-09"},{"lineNumber":84,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":85,"author":{"gitId":"-"},"content":"        // Execute add command","lastModifiedDate":"2018-12-09"},{"lineNumber":86,"author":{"gitId":"DannyDakota"},"content":"        String addCommand \u003d AddCommand.COMMAND_WORD + NAME_DESC_AMY + BLOCK_DESC_AMY + FACULTY_DESC_AMY + PHONE_DESC_AMY","lastModifiedDate":"2022-03-17"},{"lineNumber":87,"author":{"gitId":"DannyDakota"},"content":"                + EMAIL_DESC_AMY + ADDRESS_DESC_AMY + MATRICULATION_NUMBER_DESC_AMY + COVID_STATUS_DESC_AMY;","lastModifiedDate":"2022-03-08"},{"lineNumber":88,"author":{"gitId":"-"},"content":"        Person expectedPerson \u003d new PersonBuilder(AMY).withTags().build();","lastModifiedDate":"2018-12-09"},{"lineNumber":89,"author":{"gitId":"-"},"content":"        ModelManager expectedModel \u003d new ModelManager();","lastModifiedDate":"2018-12-09"},{"lineNumber":90,"author":{"gitId":"-"},"content":"        expectedModel.addPerson(expectedPerson);","lastModifiedDate":"2018-12-09"},{"lineNumber":91,"author":{"gitId":"-"},"content":"        String expectedMessage \u003d LogicManager.FILE_OPS_ERROR_MESSAGE + DUMMY_IO_EXCEPTION;","lastModifiedDate":"2018-12-09"},{"lineNumber":92,"author":{"gitId":"-"},"content":"        assertCommandFailure(addCommand, CommandException.class, expectedMessage, expectedModel);","lastModifiedDate":"2019-03-14"},{"lineNumber":93,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-12-09"},{"lineNumber":94,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":95,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-09-01"},{"lineNumber":96,"author":{"gitId":"-"},"content":"    public void getFilteredPersonList_modifyList_throwsUnsupportedOperationException() {","lastModifiedDate":"2017-09-01"},{"lineNumber":97,"author":{"gitId":"-"},"content":"        assertThrows(UnsupportedOperationException.class, () -\u003e logic.getFilteredPersonList().remove(0));","lastModifiedDate":"2019-03-23"},{"lineNumber":98,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-09-01"},{"lineNumber":99,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-09-01"},{"lineNumber":100,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-09-21"},{"lineNumber":101,"author":{"gitId":"-"},"content":"     * Executes the command and confirms that","lastModifiedDate":"2019-03-14"},{"lineNumber":102,"author":{"gitId":"-"},"content":"     * - no exceptions are thrown \u003cbr\u003e","lastModifiedDate":"2019-03-14"},{"lineNumber":103,"author":{"gitId":"-"},"content":"     * - the feedback message is equal to {@code expectedMessage} \u003cbr\u003e","lastModifiedDate":"2019-03-14"},{"lineNumber":104,"author":{"gitId":"-"},"content":"     * - the internal model manager state is the same as that in {@code expectedModel} \u003cbr\u003e","lastModifiedDate":"2019-03-14"},{"lineNumber":105,"author":{"gitId":"-"},"content":"     * @see #assertCommandFailure(String, Class, String, Model)","lastModifiedDate":"2019-03-14"},{"lineNumber":106,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-09-21"},{"lineNumber":107,"author":{"gitId":"-"},"content":"    private void assertCommandSuccess(String inputCommand, String expectedMessage,","lastModifiedDate":"2019-03-14"},{"lineNumber":108,"author":{"gitId":"-"},"content":"            Model expectedModel) throws CommandException, ParseException {","lastModifiedDate":"2019-03-14"},{"lineNumber":109,"author":{"gitId":"-"},"content":"        CommandResult result \u003d logic.execute(inputCommand);","lastModifiedDate":"2019-03-14"},{"lineNumber":110,"author":{"gitId":"-"},"content":"        assertEquals(expectedMessage, result.getFeedbackToUser());","lastModifiedDate":"2019-03-14"},{"lineNumber":111,"author":{"gitId":"-"},"content":"        assertEquals(expectedModel, model);","lastModifiedDate":"2019-03-14"},{"lineNumber":112,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-21"},{"lineNumber":113,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":114,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-03-11"},{"lineNumber":115,"author":{"gitId":"-"},"content":"     * Executes the command, confirms that a ParseException is thrown and that the result message is correct.","lastModifiedDate":"2017-03-11"},{"lineNumber":116,"author":{"gitId":"-"},"content":"     * @see #assertCommandFailure(String, Class, String, Model)","lastModifiedDate":"2019-03-14"},{"lineNumber":117,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-03-11"},{"lineNumber":118,"author":{"gitId":"-"},"content":"    private void assertParseException(String inputCommand, String expectedMessage) {","lastModifiedDate":"2017-03-11"},{"lineNumber":119,"author":{"gitId":"-"},"content":"        assertCommandFailure(inputCommand, ParseException.class, expectedMessage);","lastModifiedDate":"2017-03-11"},{"lineNumber":120,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-03-11"},{"lineNumber":121,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-11"},{"lineNumber":122,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-06-14"},{"lineNumber":123,"author":{"gitId":"-"},"content":"     * Executes the command, confirms that a CommandException is thrown and that the result message is correct.","lastModifiedDate":"2017-06-14"},{"lineNumber":124,"author":{"gitId":"-"},"content":"     * @see #assertCommandFailure(String, Class, String, Model)","lastModifiedDate":"2019-03-14"},{"lineNumber":125,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-06-14"},{"lineNumber":126,"author":{"gitId":"-"},"content":"    private void assertCommandException(String inputCommand, String expectedMessage) {","lastModifiedDate":"2017-06-14"},{"lineNumber":127,"author":{"gitId":"-"},"content":"        assertCommandFailure(inputCommand, CommandException.class, expectedMessage);","lastModifiedDate":"2017-06-14"},{"lineNumber":128,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-14"},{"lineNumber":129,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-14"},{"lineNumber":130,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-03-11"},{"lineNumber":131,"author":{"gitId":"-"},"content":"     * Executes the command, confirms that the exception is thrown and that the result message is correct.","lastModifiedDate":"2017-03-11"},{"lineNumber":132,"author":{"gitId":"-"},"content":"     * @see #assertCommandFailure(String, Class, String, Model)","lastModifiedDate":"2019-03-14"},{"lineNumber":133,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-03-11"},{"lineNumber":134,"author":{"gitId":"-"},"content":"    private void assertCommandFailure(String inputCommand, Class\u003c? extends Throwable\u003e expectedException,","lastModifiedDate":"2019-03-14"},{"lineNumber":135,"author":{"gitId":"-"},"content":"            String expectedMessage) {","lastModifiedDate":"2019-03-14"},{"lineNumber":136,"author":{"gitId":"-"},"content":"        Model expectedModel \u003d new ModelManager(model.getAddressBook(), new UserPrefs());","lastModifiedDate":"2017-05-31"},{"lineNumber":137,"author":{"gitId":"-"},"content":"        assertCommandFailure(inputCommand, expectedException, expectedMessage, expectedModel);","lastModifiedDate":"2019-03-14"},{"lineNumber":138,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-02-05"},{"lineNumber":139,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-05"},{"lineNumber":140,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-02-05"},{"lineNumber":141,"author":{"gitId":"-"},"content":"     * Executes the command and confirms that","lastModifiedDate":"2019-03-14"},{"lineNumber":142,"author":{"gitId":"-"},"content":"     * - the {@code expectedException} is thrown \u003cbr\u003e","lastModifiedDate":"2019-03-14"},{"lineNumber":143,"author":{"gitId":"-"},"content":"     * - the resulting error message is equal to {@code expectedMessage} \u003cbr\u003e","lastModifiedDate":"2019-03-14"},{"lineNumber":144,"author":{"gitId":"-"},"content":"     * - the internal model manager state is the same as that in {@code expectedModel} \u003cbr\u003e","lastModifiedDate":"2019-03-14"},{"lineNumber":145,"author":{"gitId":"-"},"content":"     * @see #assertCommandSuccess(String, String, Model)","lastModifiedDate":"2019-03-14"},{"lineNumber":146,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-09-21"},{"lineNumber":147,"author":{"gitId":"-"},"content":"    private void assertCommandFailure(String inputCommand, Class\u003c? extends Throwable\u003e expectedException,","lastModifiedDate":"2019-03-14"},{"lineNumber":148,"author":{"gitId":"-"},"content":"            String expectedMessage, Model expectedModel) {","lastModifiedDate":"2017-05-31"},{"lineNumber":149,"author":{"gitId":"-"},"content":"        assertThrows(expectedException, expectedMessage, () -\u003e logic.execute(inputCommand));","lastModifiedDate":"2019-03-14"},{"lineNumber":150,"author":{"gitId":"-"},"content":"        assertEquals(expectedModel, model);","lastModifiedDate":"2017-05-31"},{"lineNumber":151,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-21"},{"lineNumber":152,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-19"},{"lineNumber":153,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-12-09"},{"lineNumber":154,"author":{"gitId":"-"},"content":"     * A stub class to throw an {@code IOException} when the save method is called.","lastModifiedDate":"2018-12-09"},{"lineNumber":155,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-12-09"},{"lineNumber":156,"author":{"gitId":"-"},"content":"    private static class JsonAddressBookIoExceptionThrowingStub extends JsonAddressBookStorage {","lastModifiedDate":"2018-12-09"},{"lineNumber":157,"author":{"gitId":"-"},"content":"        private JsonAddressBookIoExceptionThrowingStub(Path filePath) {","lastModifiedDate":"2018-12-09"},{"lineNumber":158,"author":{"gitId":"-"},"content":"            super(filePath);","lastModifiedDate":"2018-12-09"},{"lineNumber":159,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-12-09"},{"lineNumber":160,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":161,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2018-12-09"},{"lineNumber":162,"author":{"gitId":"-"},"content":"        public void saveAddressBook(ReadOnlyAddressBook addressBook, Path filePath) throws IOException {","lastModifiedDate":"2018-12-09"},{"lineNumber":163,"author":{"gitId":"-"},"content":"            throw DUMMY_IO_EXCEPTION;","lastModifiedDate":"2018-12-09"},{"lineNumber":164,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-12-09"},{"lineNumber":165,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-12-09"},{"lineNumber":166,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-09-21"}],"authorContributionMap":{"DannyDakota":6,"-":160}},{"path":"src/test/java/seedu/address/logic/commands/AddCommandTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2017-05-12"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2018-01-10"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2019-03-15"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2019-03-15"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.Assert.assertThrows;","lastModifiedDate":"2019-03-23"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-11-27"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import java.util.ArrayList;","lastModifiedDate":"2017-05-12"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import java.util.Arrays;","lastModifiedDate":"2017-05-12"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import java.util.function.Predicate;","lastModifiedDate":"2017-06-12"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":16,"author":{"gitId":"-"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2017-09-01"},{"lineNumber":17,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.GuiSettings;","lastModifiedDate":"2018-11-27"},{"lineNumber":18,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.exceptions.CommandException;","lastModifiedDate":"2017-05-12"},{"lineNumber":19,"author":{"gitId":"-"},"content":"import seedu.address.model.AddressBook;","lastModifiedDate":"2017-05-04"},{"lineNumber":20,"author":{"gitId":"-"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2017-05-12"},{"lineNumber":21,"author":{"gitId":"-"},"content":"import seedu.address.model.ReadOnlyAddressBook;","lastModifiedDate":"2017-05-12"},{"lineNumber":22,"author":{"gitId":"-"},"content":"import seedu.address.model.ReadOnlyUserPrefs;","lastModifiedDate":"2018-11-27"},{"lineNumber":23,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2017-05-12"},{"lineNumber":24,"author":{"gitId":"-"},"content":"import seedu.address.testutil.PersonBuilder;","lastModifiedDate":"2017-05-12"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":26,"author":{"gitId":"-"},"content":"public class AddCommandTest {","lastModifiedDate":"2017-05-12"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":28,"author":{"gitId":"cwq2326"},"content":"    @Test","lastModifiedDate":"2022-03-28"},{"lineNumber":29,"author":{"gitId":"cwq2326"},"content":"    public void test_addCommandWordIsCorrect() {","lastModifiedDate":"2022-03-28"},{"lineNumber":30,"author":{"gitId":"cwq2326"},"content":"        assertTrue(AddCommand.COMMAND_WORD.equals(\"add\"));","lastModifiedDate":"2022-03-28"},{"lineNumber":31,"author":{"gitId":"cwq2326"},"content":"    }","lastModifiedDate":"2022-03-28"},{"lineNumber":32,"author":{"gitId":"cwq2326"},"content":"","lastModifiedDate":"2022-03-28"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-12"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    public void constructor_nullPerson_throwsNullPointerException() {","lastModifiedDate":"2017-08-15"},{"lineNumber":35,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e new AddCommand(null));","lastModifiedDate":"2019-03-23"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-12"},{"lineNumber":37,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-12"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    public void execute_personAcceptedByModel_addSuccessful() throws Exception {","lastModifiedDate":"2017-05-12"},{"lineNumber":40,"author":{"gitId":"-"},"content":"        ModelStubAcceptingPersonAdded modelStub \u003d new ModelStubAcceptingPersonAdded();","lastModifiedDate":"2017-05-12"},{"lineNumber":41,"author":{"gitId":"-"},"content":"        Person validPerson \u003d new PersonBuilder().build();","lastModifiedDate":"2017-05-12"},{"lineNumber":42,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        CommandResult commandResult \u003d new AddCommand(validPerson).execute(modelStub);","lastModifiedDate":"2019-01-25"},{"lineNumber":44,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":45,"author":{"gitId":"-"},"content":"        assertEquals(String.format(AddCommand.MESSAGE_SUCCESS, validPerson), commandResult.getFeedbackToUser());","lastModifiedDate":"2018-12-09"},{"lineNumber":46,"author":{"gitId":"-"},"content":"        assertEquals(Arrays.asList(validPerson), modelStub.personsAdded);","lastModifiedDate":"2017-05-12"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-12"},{"lineNumber":48,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-12"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    public void execute_duplicatePerson_throwsCommandException() {","lastModifiedDate":"2019-03-23"},{"lineNumber":51,"author":{"gitId":"-"},"content":"        Person validPerson \u003d new PersonBuilder().build();","lastModifiedDate":"2017-05-12"},{"lineNumber":52,"author":{"gitId":"-"},"content":"        AddCommand addCommand \u003d new AddCommand(validPerson);","lastModifiedDate":"2018-08-08"},{"lineNumber":53,"author":{"gitId":"-"},"content":"        ModelStub modelStub \u003d new ModelStubWithPerson(validPerson);","lastModifiedDate":"2018-08-07"},{"lineNumber":54,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":55,"author":{"gitId":"-"},"content":"        assertThrows(CommandException.class, AddCommand.MESSAGE_DUPLICATE_PERSON, () -\u003e addCommand.execute(modelStub));","lastModifiedDate":"2019-05-03"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-12"},{"lineNumber":57,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":58,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-22"},{"lineNumber":59,"author":{"gitId":"-"},"content":"    public void equals() {","lastModifiedDate":"2017-08-15"},{"lineNumber":60,"author":{"gitId":"-"},"content":"        Person alice \u003d new PersonBuilder().withName(\"Alice\").build();","lastModifiedDate":"2017-06-22"},{"lineNumber":61,"author":{"gitId":"-"},"content":"        Person bob \u003d new PersonBuilder().withName(\"Bob\").build();","lastModifiedDate":"2017-06-22"},{"lineNumber":62,"author":{"gitId":"-"},"content":"        AddCommand addAliceCommand \u003d new AddCommand(alice);","lastModifiedDate":"2017-06-22"},{"lineNumber":63,"author":{"gitId":"-"},"content":"        AddCommand addBobCommand \u003d new AddCommand(bob);","lastModifiedDate":"2017-06-22"},{"lineNumber":64,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-22"},{"lineNumber":65,"author":{"gitId":"-"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2017-06-22"},{"lineNumber":66,"author":{"gitId":"-"},"content":"        assertTrue(addAliceCommand.equals(addAliceCommand));","lastModifiedDate":"2017-06-22"},{"lineNumber":67,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-22"},{"lineNumber":68,"author":{"gitId":"-"},"content":"        // same values -\u003e returns true","lastModifiedDate":"2017-06-22"},{"lineNumber":69,"author":{"gitId":"-"},"content":"        AddCommand addAliceCommandCopy \u003d new AddCommand(alice);","lastModifiedDate":"2017-06-22"},{"lineNumber":70,"author":{"gitId":"-"},"content":"        assertTrue(addAliceCommand.equals(addAliceCommandCopy));","lastModifiedDate":"2017-06-22"},{"lineNumber":71,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-22"},{"lineNumber":72,"author":{"gitId":"-"},"content":"        // different types -\u003e returns false","lastModifiedDate":"2017-06-22"},{"lineNumber":73,"author":{"gitId":"-"},"content":"        assertFalse(addAliceCommand.equals(1));","lastModifiedDate":"2017-06-22"},{"lineNumber":74,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-22"},{"lineNumber":75,"author":{"gitId":"-"},"content":"        // null -\u003e returns false","lastModifiedDate":"2017-06-22"},{"lineNumber":76,"author":{"gitId":"-"},"content":"        assertFalse(addAliceCommand.equals(null));","lastModifiedDate":"2017-06-22"},{"lineNumber":77,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-22"},{"lineNumber":78,"author":{"gitId":"-"},"content":"        // different person -\u003e returns false","lastModifiedDate":"2017-06-22"},{"lineNumber":79,"author":{"gitId":"-"},"content":"        assertFalse(addAliceCommand.equals(addBobCommand));","lastModifiedDate":"2017-06-22"},{"lineNumber":80,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-22"},{"lineNumber":81,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-22"},{"lineNumber":82,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-05-12"},{"lineNumber":83,"author":{"gitId":"-"},"content":"     * A default model stub that have all of the methods failing.","lastModifiedDate":"2017-05-12"},{"lineNumber":84,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-05-12"},{"lineNumber":85,"author":{"gitId":"-"},"content":"    private class ModelStub implements Model {","lastModifiedDate":"2017-05-12"},{"lineNumber":86,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2018-11-27"},{"lineNumber":87,"author":{"gitId":"-"},"content":"        public void setUserPrefs(ReadOnlyUserPrefs userPrefs) {","lastModifiedDate":"2018-12-06"},{"lineNumber":88,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2018-11-27"},{"lineNumber":89,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-11-27"},{"lineNumber":90,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":91,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2018-11-27"},{"lineNumber":92,"author":{"gitId":"-"},"content":"        public ReadOnlyUserPrefs getUserPrefs() {","lastModifiedDate":"2018-11-27"},{"lineNumber":93,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2018-11-27"},{"lineNumber":94,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-11-27"},{"lineNumber":95,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":96,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2018-11-27"},{"lineNumber":97,"author":{"gitId":"-"},"content":"        public GuiSettings getGuiSettings() {","lastModifiedDate":"2018-11-27"},{"lineNumber":98,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2018-11-27"},{"lineNumber":99,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-11-27"},{"lineNumber":100,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":101,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2018-11-27"},{"lineNumber":102,"author":{"gitId":"-"},"content":"        public void setGuiSettings(GuiSettings guiSettings) {","lastModifiedDate":"2018-11-27"},{"lineNumber":103,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2018-11-27"},{"lineNumber":104,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-11-27"},{"lineNumber":105,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":106,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2018-11-27"},{"lineNumber":107,"author":{"gitId":"-"},"content":"        public Path getAddressBookFilePath() {","lastModifiedDate":"2018-11-27"},{"lineNumber":108,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2018-11-27"},{"lineNumber":109,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-11-27"},{"lineNumber":110,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":111,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2018-11-27"},{"lineNumber":112,"author":{"gitId":"-"},"content":"        public void setAddressBookFilePath(Path addressBookFilePath) {","lastModifiedDate":"2018-11-27"},{"lineNumber":113,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2018-11-27"},{"lineNumber":114,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-11-27"},{"lineNumber":115,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":116,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2017-05-12"},{"lineNumber":117,"author":{"gitId":"-"},"content":"        public void addPerson(Person person) {","lastModifiedDate":"2018-08-07"},{"lineNumber":118,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2018-08-06"},{"lineNumber":119,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-12"},{"lineNumber":120,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":121,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2017-05-12"},{"lineNumber":122,"author":{"gitId":"-"},"content":"        public void setAddressBook(ReadOnlyAddressBook newData) {","lastModifiedDate":"2018-11-27"},{"lineNumber":123,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2018-08-06"},{"lineNumber":124,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-12"},{"lineNumber":125,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":126,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2017-05-12"},{"lineNumber":127,"author":{"gitId":"-"},"content":"        public ReadOnlyAddressBook getAddressBook() {","lastModifiedDate":"2017-05-12"},{"lineNumber":128,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2018-08-06"},{"lineNumber":129,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-12"},{"lineNumber":130,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":131,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2018-08-06"},{"lineNumber":132,"author":{"gitId":"-"},"content":"        public boolean hasPerson(Person person) {","lastModifiedDate":"2018-08-06"},{"lineNumber":133,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2018-08-06"},{"lineNumber":134,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-08-06"},{"lineNumber":135,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-06"},{"lineNumber":136,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2017-05-12"},{"lineNumber":137,"author":{"gitId":"-"},"content":"        public void deletePerson(Person target) {","lastModifiedDate":"2018-08-08"},{"lineNumber":138,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2018-08-06"},{"lineNumber":139,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-12"},{"lineNumber":140,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":141,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2017-05-12"},{"lineNumber":142,"author":{"gitId":"-"},"content":"        public void setPerson(Person target, Person editedPerson) {","lastModifiedDate":"2018-08-17"},{"lineNumber":143,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2018-08-06"},{"lineNumber":144,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-12"},{"lineNumber":145,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":146,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2017-05-12"},{"lineNumber":147,"author":{"gitId":"-"},"content":"        public ObservableList\u003cPerson\u003e getFilteredPersonList() {","lastModifiedDate":"2018-01-10"},{"lineNumber":148,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2018-08-06"},{"lineNumber":149,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-12"},{"lineNumber":150,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":151,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2017-05-12"},{"lineNumber":152,"author":{"gitId":"-"},"content":"        public void updateFilteredPersonList(Predicate\u003cPerson\u003e predicate) {","lastModifiedDate":"2018-01-10"},{"lineNumber":153,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2018-08-06"},{"lineNumber":154,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-12"},{"lineNumber":155,"author":{"gitId":"tanchinkiat99"},"content":"","lastModifiedDate":"2022-03-30"},{"lineNumber":156,"author":{"gitId":"tanchinkiat99"},"content":"        @Override","lastModifiedDate":"2022-03-30"},{"lineNumber":157,"author":{"gitId":"tanchinkiat99"},"content":"        public void restoreHistory() {","lastModifiedDate":"2022-03-30"},{"lineNumber":158,"author":{"gitId":"tanchinkiat99"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2022-03-30"},{"lineNumber":159,"author":{"gitId":"tanchinkiat99"},"content":"        }","lastModifiedDate":"2022-03-30"},{"lineNumber":160,"author":{"gitId":"tanchinkiat99"},"content":"","lastModifiedDate":"2022-03-30"},{"lineNumber":161,"author":{"gitId":"tanchinkiat99"},"content":"        @Override","lastModifiedDate":"2022-03-30"},{"lineNumber":162,"author":{"gitId":"tanchinkiat99"},"content":"        public boolean checkHistory() {","lastModifiedDate":"2022-03-30"},{"lineNumber":163,"author":{"gitId":"tanchinkiat99"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2022-03-30"},{"lineNumber":164,"author":{"gitId":"tanchinkiat99"},"content":"        }","lastModifiedDate":"2022-03-30"},{"lineNumber":165,"author":{"gitId":"tanchinkiat99"},"content":"","lastModifiedDate":"2022-03-30"},{"lineNumber":166,"author":{"gitId":"tanchinkiat99"},"content":"        @Override","lastModifiedDate":"2022-03-30"},{"lineNumber":167,"author":{"gitId":"tanchinkiat99"},"content":"        public void restoreOriginal() {","lastModifiedDate":"2022-03-30"},{"lineNumber":168,"author":{"gitId":"tanchinkiat99"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2022-03-30"},{"lineNumber":169,"author":{"gitId":"tanchinkiat99"},"content":"        }","lastModifiedDate":"2022-03-30"},{"lineNumber":170,"author":{"gitId":"tanchinkiat99"},"content":"","lastModifiedDate":"2022-03-30"},{"lineNumber":171,"author":{"gitId":"tanchinkiat99"},"content":"        @Override","lastModifiedDate":"2022-03-30"},{"lineNumber":172,"author":{"gitId":"tanchinkiat99"},"content":"        public boolean checkOriginal() {","lastModifiedDate":"2022-03-30"},{"lineNumber":173,"author":{"gitId":"tanchinkiat99"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2022-03-30"},{"lineNumber":174,"author":{"gitId":"tanchinkiat99"},"content":"        }","lastModifiedDate":"2022-03-30"},{"lineNumber":175,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-12"},{"lineNumber":176,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":177,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-05-12"},{"lineNumber":178,"author":{"gitId":"-"},"content":"     * A Model stub that contains a single person.","lastModifiedDate":"2018-08-07"},{"lineNumber":179,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-05-12"},{"lineNumber":180,"author":{"gitId":"-"},"content":"    private class ModelStubWithPerson extends ModelStub {","lastModifiedDate":"2018-08-07"},{"lineNumber":181,"author":{"gitId":"-"},"content":"        private final Person person;","lastModifiedDate":"2018-08-07"},{"lineNumber":182,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-07"},{"lineNumber":183,"author":{"gitId":"-"},"content":"        ModelStubWithPerson(Person person) {","lastModifiedDate":"2018-08-07"},{"lineNumber":184,"author":{"gitId":"-"},"content":"            requireNonNull(person);","lastModifiedDate":"2018-08-07"},{"lineNumber":185,"author":{"gitId":"-"},"content":"            this.person \u003d person;","lastModifiedDate":"2018-08-07"},{"lineNumber":186,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-12"},{"lineNumber":187,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":188,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2017-05-04"},{"lineNumber":189,"author":{"gitId":"-"},"content":"        public boolean hasPerson(Person person) {","lastModifiedDate":"2018-08-07"},{"lineNumber":190,"author":{"gitId":"-"},"content":"            requireNonNull(person);","lastModifiedDate":"2018-08-07"},{"lineNumber":191,"author":{"gitId":"-"},"content":"            return this.person.isSamePerson(person);","lastModifiedDate":"2018-08-07"},{"lineNumber":192,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-04"},{"lineNumber":193,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-12"},{"lineNumber":194,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":195,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-05-12"},{"lineNumber":196,"author":{"gitId":"-"},"content":"     * A Model stub that always accept the person being added.","lastModifiedDate":"2017-05-12"},{"lineNumber":197,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-05-12"},{"lineNumber":198,"author":{"gitId":"-"},"content":"    private class ModelStubAcceptingPersonAdded extends ModelStub {","lastModifiedDate":"2017-05-12"},{"lineNumber":199,"author":{"gitId":"-"},"content":"        final ArrayList\u003cPerson\u003e personsAdded \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2017-05-12"},{"lineNumber":200,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":201,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2018-08-07"},{"lineNumber":202,"author":{"gitId":"-"},"content":"        public boolean hasPerson(Person person) {","lastModifiedDate":"2018-08-07"},{"lineNumber":203,"author":{"gitId":"-"},"content":"            requireNonNull(person);","lastModifiedDate":"2018-08-07"},{"lineNumber":204,"author":{"gitId":"-"},"content":"            return personsAdded.stream().anyMatch(person::isSamePerson);","lastModifiedDate":"2018-08-07"},{"lineNumber":205,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-08-07"},{"lineNumber":206,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-07"},{"lineNumber":207,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2017-05-12"},{"lineNumber":208,"author":{"gitId":"-"},"content":"        public void addPerson(Person person) {","lastModifiedDate":"2018-08-08"},{"lineNumber":209,"author":{"gitId":"-"},"content":"            requireNonNull(person);","lastModifiedDate":"2018-01-10"},{"lineNumber":210,"author":{"gitId":"-"},"content":"            personsAdded.add(person);","lastModifiedDate":"2018-01-10"},{"lineNumber":211,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-12"},{"lineNumber":212,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":213,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2017-05-04"},{"lineNumber":214,"author":{"gitId":"-"},"content":"        public ReadOnlyAddressBook getAddressBook() {","lastModifiedDate":"2017-05-04"},{"lineNumber":215,"author":{"gitId":"-"},"content":"            return new AddressBook();","lastModifiedDate":"2017-05-04"},{"lineNumber":216,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-04"},{"lineNumber":217,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-12"},{"lineNumber":218,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":219,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-05-12"}],"authorContributionMap":{"tanchinkiat99":20,"cwq2326":5,"-":194}},{"path":"src/test/java/seedu/address/logic/commands/ArchiveCommandTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"cwq2326"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2022-03-27"},{"lineNumber":2,"author":{"gitId":"cwq2326"},"content":"","lastModifiedDate":"2022-03-27"},{"lineNumber":3,"author":{"gitId":"cwq2326"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2022-03-28"},{"lineNumber":4,"author":{"gitId":"cwq2326"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2022-03-28"},{"lineNumber":5,"author":{"gitId":"cwq2326"},"content":"import static seedu.address.logic.commands.CommandTestUtil.assertCommandFailure;","lastModifiedDate":"2022-03-27"},{"lineNumber":6,"author":{"gitId":"cwq2326"},"content":"import static seedu.address.testutil.TypicalPersons.getTypicalAddressBook;","lastModifiedDate":"2022-03-27"},{"lineNumber":7,"author":{"gitId":"cwq2326"},"content":"","lastModifiedDate":"2022-03-27"},{"lineNumber":8,"author":{"gitId":"cwq2326"},"content":"import java.nio.file.Files;","lastModifiedDate":"2022-03-28"},{"lineNumber":9,"author":{"gitId":"cwq2326"},"content":"import java.nio.file.Path;","lastModifiedDate":"2022-03-27"},{"lineNumber":10,"author":{"gitId":"cwq2326"},"content":"import java.nio.file.Paths;","lastModifiedDate":"2022-03-27"},{"lineNumber":11,"author":{"gitId":"cwq2326"},"content":"","lastModifiedDate":"2022-03-27"},{"lineNumber":12,"author":{"gitId":"cwq2326"},"content":"import org.junit.jupiter.api.BeforeEach;","lastModifiedDate":"2022-03-27"},{"lineNumber":13,"author":{"gitId":"cwq2326"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2022-03-27"},{"lineNumber":14,"author":{"gitId":"cwq2326"},"content":"","lastModifiedDate":"2022-03-27"},{"lineNumber":15,"author":{"gitId":"cwq2326"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2022-03-27"},{"lineNumber":16,"author":{"gitId":"cwq2326"},"content":"import seedu.address.model.ModelManager;","lastModifiedDate":"2022-03-27"},{"lineNumber":17,"author":{"gitId":"cwq2326"},"content":"import seedu.address.model.UserPrefs;","lastModifiedDate":"2022-03-27"},{"lineNumber":18,"author":{"gitId":"cwq2326"},"content":"","lastModifiedDate":"2022-03-27"},{"lineNumber":19,"author":{"gitId":"cwq2326"},"content":"public class ArchiveCommandTest {","lastModifiedDate":"2022-03-27"},{"lineNumber":20,"author":{"gitId":"cwq2326"},"content":"","lastModifiedDate":"2022-03-28"},{"lineNumber":21,"author":{"gitId":"cwq2326"},"content":"    private Path validTestFilePath;","lastModifiedDate":"2022-03-27"},{"lineNumber":22,"author":{"gitId":"cwq2326"},"content":"    private Path invalidTestFilePath;","lastModifiedDate":"2022-03-27"},{"lineNumber":23,"author":{"gitId":"cwq2326"},"content":"","lastModifiedDate":"2022-03-27"},{"lineNumber":24,"author":{"gitId":"cwq2326"},"content":"    @BeforeEach","lastModifiedDate":"2022-03-27"},{"lineNumber":25,"author":{"gitId":"cwq2326"},"content":"    public void setUp() {","lastModifiedDate":"2022-03-27"},{"lineNumber":26,"author":{"gitId":"cwq2326"},"content":"        validTestFilePath \u003d Paths.get(\"src\\\\test\\\\data\\\\ArchiveFilesTest\\\\testAddressBook.json\");","lastModifiedDate":"2022-03-27"},{"lineNumber":27,"author":{"gitId":"cwq2326"},"content":"        invalidTestFilePath \u003d Paths.get(\"src\\\\test\\\\data\\\\ArchiveFilesTest\\\\noSuchAddressBook.json\");","lastModifiedDate":"2022-03-27"},{"lineNumber":28,"author":{"gitId":"cwq2326"},"content":"    }","lastModifiedDate":"2022-03-28"},{"lineNumber":29,"author":{"gitId":"cwq2326"},"content":"","lastModifiedDate":"2022-03-28"},{"lineNumber":30,"author":{"gitId":"cwq2326"},"content":"    @Test","lastModifiedDate":"2022-03-28"},{"lineNumber":31,"author":{"gitId":"cwq2326"},"content":"    public void invalidTestFileDoesNotExist() {","lastModifiedDate":"2022-03-28"},{"lineNumber":32,"author":{"gitId":"cwq2326"},"content":"        assertFalse(Files.exists(invalidTestFilePath));","lastModifiedDate":"2022-03-28"},{"lineNumber":33,"author":{"gitId":"cwq2326"},"content":"    }","lastModifiedDate":"2022-03-27"},{"lineNumber":34,"author":{"gitId":"cwq2326"},"content":"","lastModifiedDate":"2022-03-27"},{"lineNumber":35,"author":{"gitId":"cwq2326"},"content":"    @Test","lastModifiedDate":"2022-03-27"},{"lineNumber":36,"author":{"gitId":"cwq2326"},"content":"    public void execute_archiveInvalidFile_archiveUnsuccessful() {","lastModifiedDate":"2022-03-27"},{"lineNumber":37,"author":{"gitId":"cwq2326"},"content":"        Model model \u003d new ModelManager(getTypicalAddressBook(), new UserPrefs());","lastModifiedDate":"2022-03-28"},{"lineNumber":38,"author":{"gitId":"cwq2326"},"content":"        model.setAddressBookFilePath(invalidTestFilePath);","lastModifiedDate":"2022-03-27"},{"lineNumber":39,"author":{"gitId":"cwq2326"},"content":"        assertCommandFailure(new ArchiveCommand(), model, ArchiveCommand.MESSAGE_FAILURE);","lastModifiedDate":"2022-03-27"},{"lineNumber":40,"author":{"gitId":"cwq2326"},"content":"    }","lastModifiedDate":"2022-03-27"},{"lineNumber":41,"author":{"gitId":"cwq2326"},"content":"","lastModifiedDate":"2022-03-27"},{"lineNumber":42,"author":{"gitId":"cwq2326"},"content":"    @Test","lastModifiedDate":"2022-03-28"},{"lineNumber":43,"author":{"gitId":"cwq2326"},"content":"    public void directoryNameIsCorrectFormat() {","lastModifiedDate":"2022-03-28"},{"lineNumber":44,"author":{"gitId":"cwq2326"},"content":"        assertTrue(ArchiveCommand.ARCHIVE_DIRECTORY_NAME_FORMAT.toPattern().matches(\"ddMMyy\"));","lastModifiedDate":"2022-03-28"},{"lineNumber":45,"author":{"gitId":"cwq2326"},"content":"    }","lastModifiedDate":"2022-03-28"},{"lineNumber":46,"author":{"gitId":"cwq2326"},"content":"","lastModifiedDate":"2022-03-28"},{"lineNumber":47,"author":{"gitId":"cwq2326"},"content":"    @Test","lastModifiedDate":"2022-03-28"},{"lineNumber":48,"author":{"gitId":"cwq2326"},"content":"    public void archivedFileNameIsCorrectFormat() {","lastModifiedDate":"2022-03-28"},{"lineNumber":49,"author":{"gitId":"cwq2326"},"content":"        assertTrue(ArchiveCommand.ARCHIVE_FILE_NAME_FORMAT.toPattern().matches(\"ddMMyy_HHmmssSSS\"));","lastModifiedDate":"2022-03-28"},{"lineNumber":50,"author":{"gitId":"cwq2326"},"content":"    }","lastModifiedDate":"2022-03-28"},{"lineNumber":51,"author":{"gitId":"cwq2326"},"content":"","lastModifiedDate":"2022-03-28"},{"lineNumber":52,"author":{"gitId":"cwq2326"},"content":"    @Test","lastModifiedDate":"2022-03-28"},{"lineNumber":53,"author":{"gitId":"cwq2326"},"content":"    public void test_archiveCommandWordIsCorrect() {","lastModifiedDate":"2022-03-28"},{"lineNumber":54,"author":{"gitId":"cwq2326"},"content":"        assertTrue(ArchiveCommand.COMMAND_WORD.equals(\"archive\"));","lastModifiedDate":"2022-03-28"},{"lineNumber":55,"author":{"gitId":"cwq2326"},"content":"    }","lastModifiedDate":"2022-03-28"},{"lineNumber":56,"author":{"gitId":"cwq2326"},"content":"","lastModifiedDate":"2022-03-28"},{"lineNumber":57,"author":{"gitId":"cwq2326"},"content":"}","lastModifiedDate":"2022-03-27"}],"authorContributionMap":{"cwq2326":57}},{"path":"src/test/java/seedu/address/logic/commands/ClearCommandTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2017-06-08"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-08"},{"lineNumber":3,"author":{"gitId":"cwq2326"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2022-03-28"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.assertCommandSuccess;","lastModifiedDate":"2017-07-05"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.TypicalPersons.getTypicalAddressBook;","lastModifiedDate":"2017-07-19"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-08"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-08"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import seedu.address.model.AddressBook;","lastModifiedDate":"2018-08-08"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2017-06-08"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import seedu.address.model.ModelManager;","lastModifiedDate":"2017-06-08"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import seedu.address.model.UserPrefs;","lastModifiedDate":"2017-06-08"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-08"},{"lineNumber":14,"author":{"gitId":"-"},"content":"public class ClearCommandTest {","lastModifiedDate":"2017-06-08"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-08"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-08"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    public void execute_emptyAddressBook_success() {","lastModifiedDate":"2017-08-15"},{"lineNumber":18,"author":{"gitId":"-"},"content":"        Model model \u003d new ModelManager();","lastModifiedDate":"2017-06-08"},{"lineNumber":19,"author":{"gitId":"-"},"content":"        Model expectedModel \u003d new ModelManager();","lastModifiedDate":"2018-08-08"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":21,"author":{"gitId":"-"},"content":"        assertCommandSuccess(new ClearCommand(), model, ClearCommand.MESSAGE_SUCCESS, expectedModel);","lastModifiedDate":"2019-01-25"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-08"},{"lineNumber":23,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-08"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-08"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    public void execute_nonEmptyAddressBook_success() {","lastModifiedDate":"2017-08-15"},{"lineNumber":26,"author":{"gitId":"-"},"content":"        Model model \u003d new ModelManager(getTypicalAddressBook(), new UserPrefs());","lastModifiedDate":"2017-07-19"},{"lineNumber":27,"author":{"gitId":"-"},"content":"        Model expectedModel \u003d new ModelManager(getTypicalAddressBook(), new UserPrefs());","lastModifiedDate":"2018-08-08"},{"lineNumber":28,"author":{"gitId":"-"},"content":"        expectedModel.setAddressBook(new AddressBook());","lastModifiedDate":"2018-11-27"},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":30,"author":{"gitId":"-"},"content":"        assertCommandSuccess(new ClearCommand(), model, ClearCommand.MESSAGE_SUCCESS, expectedModel);","lastModifiedDate":"2019-01-25"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-08"},{"lineNumber":32,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-08"},{"lineNumber":33,"author":{"gitId":"cwq2326"},"content":"    @Test","lastModifiedDate":"2022-03-28"},{"lineNumber":34,"author":{"gitId":"cwq2326"},"content":"    public void test_clearCommandWordIsCorrect() {","lastModifiedDate":"2022-03-28"},{"lineNumber":35,"author":{"gitId":"cwq2326"},"content":"        assertTrue(ClearCommand.COMMAND_WORD.equals(\"clear\"));","lastModifiedDate":"2022-03-28"},{"lineNumber":36,"author":{"gitId":"cwq2326"},"content":"    }","lastModifiedDate":"2022-03-28"},{"lineNumber":37,"author":{"gitId":"cwq2326"},"content":"","lastModifiedDate":"2022-03-28"},{"lineNumber":38,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-06-08"}],"authorContributionMap":{"cwq2326":6,"-":32}},{"path":"src/test/java/seedu/address/logic/commands/CommandResultTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2018-12-09"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertNotEquals;","lastModifiedDate":"2019-03-15"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2019-03-15"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":10,"author":{"gitId":"-"},"content":"public class CommandResultTest {","lastModifiedDate":"2018-12-09"},{"lineNumber":11,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-12-09"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    public void equals() {","lastModifiedDate":"2018-12-09"},{"lineNumber":13,"author":{"gitId":"-"},"content":"        CommandResult commandResult \u003d new CommandResult(\"feedback\");","lastModifiedDate":"2018-12-09"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":15,"author":{"gitId":"-"},"content":"        // same values -\u003e returns true","lastModifiedDate":"2018-12-09"},{"lineNumber":16,"author":{"gitId":"-"},"content":"        assertTrue(commandResult.equals(new CommandResult(\"feedback\")));","lastModifiedDate":"2018-12-09"},{"lineNumber":17,"author":{"gitId":"DannyDakota"},"content":"        assertTrue(commandResult.equals(new CommandResult(\"feedback\", false, false, false, false, false)));","lastModifiedDate":"2022-03-31"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":19,"author":{"gitId":"-"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2018-12-09"},{"lineNumber":20,"author":{"gitId":"-"},"content":"        assertTrue(commandResult.equals(commandResult));","lastModifiedDate":"2018-12-09"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":22,"author":{"gitId":"-"},"content":"        // null -\u003e returns false","lastModifiedDate":"2018-12-09"},{"lineNumber":23,"author":{"gitId":"-"},"content":"        assertFalse(commandResult.equals(null));","lastModifiedDate":"2018-12-09"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":25,"author":{"gitId":"-"},"content":"        // different types -\u003e returns false","lastModifiedDate":"2018-12-09"},{"lineNumber":26,"author":{"gitId":"-"},"content":"        assertFalse(commandResult.equals(0.5f));","lastModifiedDate":"2018-12-09"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":28,"author":{"gitId":"-"},"content":"        // different feedbackToUser value -\u003e returns false","lastModifiedDate":"2018-12-09"},{"lineNumber":29,"author":{"gitId":"-"},"content":"        assertFalse(commandResult.equals(new CommandResult(\"different\")));","lastModifiedDate":"2018-12-09"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":31,"author":{"gitId":"-"},"content":"        // different showHelp value -\u003e returns false","lastModifiedDate":"2018-12-09"},{"lineNumber":32,"author":{"gitId":"DannyDakota"},"content":"        assertFalse(commandResult.equals(new CommandResult(\"feedback\", true, false, false, false, false)));","lastModifiedDate":"2022-03-31"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":34,"author":{"gitId":"-"},"content":"        // different exit value -\u003e returns false","lastModifiedDate":"2018-12-09"},{"lineNumber":35,"author":{"gitId":"DannyDakota"},"content":"        assertFalse(commandResult.equals(new CommandResult(\"feedback\", false, true, false, false, false)));","lastModifiedDate":"2022-03-31"},{"lineNumber":36,"author":{"gitId":"DannyDakota"},"content":"","lastModifiedDate":"2022-03-31"},{"lineNumber":37,"author":{"gitId":"DannyDakota"},"content":"        // different summarise value -\u003e returns false","lastModifiedDate":"2022-03-31"},{"lineNumber":38,"author":{"gitId":"DannyDakota"},"content":"        assertFalse(commandResult.equals(new CommandResult(\"feedback\", false, false, true, false, false)));","lastModifiedDate":"2022-03-31"},{"lineNumber":39,"author":{"gitId":"DannyDakota"},"content":"","lastModifiedDate":"2022-03-31"},{"lineNumber":40,"author":{"gitId":"DannyDakota"},"content":"        // different email value -\u003e returns false","lastModifiedDate":"2022-03-31"},{"lineNumber":41,"author":{"gitId":"DannyDakota"},"content":"        assertFalse(commandResult.equals(new CommandResult(\"feedback\", false, false, false, true, false)));","lastModifiedDate":"2022-03-31"},{"lineNumber":42,"author":{"gitId":"DannyDakota"},"content":"","lastModifiedDate":"2022-03-31"},{"lineNumber":43,"author":{"gitId":"DannyDakota"},"content":"        // different resize value -\u003e returns false","lastModifiedDate":"2022-03-31"},{"lineNumber":44,"author":{"gitId":"DannyDakota"},"content":"        assertFalse(commandResult.equals(new CommandResult(\"feedback\", false, false, false, false, true)));","lastModifiedDate":"2022-03-31"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-12-09"},{"lineNumber":46,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":47,"author":{"gitId":"DannyDakota"},"content":"    @Test","lastModifiedDate":"2022-03-31"},{"lineNumber":48,"author":{"gitId":"DannyDakota"},"content":"    public void constructor_helpCommandResultAssignment_success() {","lastModifiedDate":"2022-03-31"},{"lineNumber":49,"author":{"gitId":"DannyDakota"},"content":"        CommandResult helpCommand \u003d","lastModifiedDate":"2022-03-31"},{"lineNumber":50,"author":{"gitId":"DannyDakota"},"content":"                new CommandResult(HelpCommand.SHOWING_HELP_MESSAGE, true, false, false, false, false);","lastModifiedDate":"2022-03-31"},{"lineNumber":51,"author":{"gitId":"DannyDakota"},"content":"        assertTrue(helpCommand.isShowHelp());","lastModifiedDate":"2022-03-31"},{"lineNumber":52,"author":{"gitId":"DannyDakota"},"content":"    }","lastModifiedDate":"2022-03-31"},{"lineNumber":53,"author":{"gitId":"DannyDakota"},"content":"","lastModifiedDate":"2022-03-31"},{"lineNumber":54,"author":{"gitId":"DannyDakota"},"content":"    @Test","lastModifiedDate":"2022-03-31"},{"lineNumber":55,"author":{"gitId":"DannyDakota"},"content":"    public void constructor_summariseCommandResultAssignment_success() {","lastModifiedDate":"2022-03-31"},{"lineNumber":56,"author":{"gitId":"DannyDakota"},"content":"        CommandResult summariseCommand \u003d","lastModifiedDate":"2022-03-31"},{"lineNumber":57,"author":{"gitId":"DannyDakota"},"content":"                new CommandResult(SummariseCommand.MESSAGE_SUMMARISE_PERSON_SUCCESS, false,","lastModifiedDate":"2022-03-31"},{"lineNumber":58,"author":{"gitId":"DannyDakota"},"content":"                        false, true, false, false);","lastModifiedDate":"2022-03-31"},{"lineNumber":59,"author":{"gitId":"DannyDakota"},"content":"        assertTrue(summariseCommand.isSummarise());","lastModifiedDate":"2022-03-31"},{"lineNumber":60,"author":{"gitId":"DannyDakota"},"content":"    }","lastModifiedDate":"2022-03-31"},{"lineNumber":61,"author":{"gitId":"DannyDakota"},"content":"","lastModifiedDate":"2022-03-31"},{"lineNumber":62,"author":{"gitId":"cwq2326"},"content":"    @Test","lastModifiedDate":"2022-03-31"},{"lineNumber":63,"author":{"gitId":"cwq2326"},"content":"    public void constructor_resizeCommandResultAssignment_success() {","lastModifiedDate":"2022-03-31"},{"lineNumber":64,"author":{"gitId":"DannyDakota"},"content":"        CommandResult resizeCommand \u003d","lastModifiedDate":"2022-03-31"},{"lineNumber":65,"author":{"gitId":"cwq2326"},"content":"                new CommandResult(ResizeCommand.MESSAGE_RESIZE, false,","lastModifiedDate":"2022-03-31"},{"lineNumber":66,"author":{"gitId":"DannyDakota"},"content":"                        false, false, false, true);","lastModifiedDate":"2022-03-31"},{"lineNumber":67,"author":{"gitId":"DannyDakota"},"content":"        assertTrue(resizeCommand.isResize());","lastModifiedDate":"2022-03-31"},{"lineNumber":68,"author":{"gitId":"DannyDakota"},"content":"    }","lastModifiedDate":"2022-03-31"},{"lineNumber":69,"author":{"gitId":"DannyDakota"},"content":"","lastModifiedDate":"2022-03-31"},{"lineNumber":70,"author":{"gitId":"DannyDakota"},"content":"    @Test","lastModifiedDate":"2022-03-31"},{"lineNumber":71,"author":{"gitId":"DannyDakota"},"content":"    public void constructor_exitCommandResultAssignment_success() {","lastModifiedDate":"2022-03-31"},{"lineNumber":72,"author":{"gitId":"DannyDakota"},"content":"        CommandResult exitCommand \u003d","lastModifiedDate":"2022-03-31"},{"lineNumber":73,"author":{"gitId":"DannyDakota"},"content":"                new CommandResult(SummariseCommand.MESSAGE_SUMMARISE_PERSON_SUCCESS, false,","lastModifiedDate":"2022-03-31"},{"lineNumber":74,"author":{"gitId":"DannyDakota"},"content":"                        true, false, false, false);","lastModifiedDate":"2022-03-31"},{"lineNumber":75,"author":{"gitId":"DannyDakota"},"content":"        assertTrue(exitCommand.isExit());","lastModifiedDate":"2022-03-31"},{"lineNumber":76,"author":{"gitId":"DannyDakota"},"content":"    }","lastModifiedDate":"2022-03-31"},{"lineNumber":77,"author":{"gitId":"DannyDakota"},"content":"","lastModifiedDate":"2022-03-31"},{"lineNumber":78,"author":{"gitId":"DannyDakota"},"content":"    @Test","lastModifiedDate":"2022-03-31"},{"lineNumber":79,"author":{"gitId":"DannyDakota"},"content":"    public void constructor_emailCommandResultAssignment_success() {","lastModifiedDate":"2022-03-31"},{"lineNumber":80,"author":{"gitId":"DannyDakota"},"content":"        CommandResult emailCommand \u003d","lastModifiedDate":"2022-03-31"},{"lineNumber":81,"author":{"gitId":"DannyDakota"},"content":"                new CommandResult(SummariseCommand.MESSAGE_SUMMARISE_PERSON_SUCCESS, false,","lastModifiedDate":"2022-03-31"},{"lineNumber":82,"author":{"gitId":"DannyDakota"},"content":"                        false, false, true, false);","lastModifiedDate":"2022-03-31"},{"lineNumber":83,"author":{"gitId":"DannyDakota"},"content":"        assertTrue(emailCommand.isShowEmail());","lastModifiedDate":"2022-03-31"},{"lineNumber":84,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2022-03-31"},{"lineNumber":85,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-03-31"},{"lineNumber":86,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-12-09"},{"lineNumber":87,"author":{"gitId":"-"},"content":"    public void hashcode() {","lastModifiedDate":"2018-12-09"},{"lineNumber":88,"author":{"gitId":"-"},"content":"        CommandResult commandResult \u003d new CommandResult(\"feedback\");","lastModifiedDate":"2018-12-09"},{"lineNumber":89,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":90,"author":{"gitId":"-"},"content":"        // same values -\u003e returns same hashcode","lastModifiedDate":"2018-12-09"},{"lineNumber":91,"author":{"gitId":"-"},"content":"        assertEquals(commandResult.hashCode(), new CommandResult(\"feedback\").hashCode());","lastModifiedDate":"2018-12-09"},{"lineNumber":92,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":93,"author":{"gitId":"-"},"content":"        // different feedbackToUser value -\u003e returns different hashcode","lastModifiedDate":"2018-12-09"},{"lineNumber":94,"author":{"gitId":"-"},"content":"        assertNotEquals(commandResult.hashCode(), new CommandResult(\"different\").hashCode());","lastModifiedDate":"2018-12-09"},{"lineNumber":95,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":96,"author":{"gitId":"-"},"content":"        // different showHelp value -\u003e returns different hashcode","lastModifiedDate":"2018-12-09"},{"lineNumber":97,"author":{"gitId":"DannyDakota"},"content":"        assertNotEquals(commandResult.hashCode(), new CommandResult(\"feedback\", true,","lastModifiedDate":"2022-03-31"},{"lineNumber":98,"author":{"gitId":"DannyDakota"},"content":"                false, false, false, false).hashCode());","lastModifiedDate":"2022-03-31"},{"lineNumber":99,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":100,"author":{"gitId":"-"},"content":"        // different exit value -\u003e returns different hashcode","lastModifiedDate":"2018-12-09"},{"lineNumber":101,"author":{"gitId":"DannyDakota"},"content":"        assertNotEquals(commandResult.hashCode(), new CommandResult(\"feedback\", false,","lastModifiedDate":"2022-03-31"},{"lineNumber":102,"author":{"gitId":"DannyDakota"},"content":"                true, false, false, false).hashCode());","lastModifiedDate":"2022-03-31"},{"lineNumber":103,"author":{"gitId":"DannyDakota"},"content":"","lastModifiedDate":"2022-03-31"},{"lineNumber":104,"author":{"gitId":"DannyDakota"},"content":"        // different summarise value -\u003e returns different hashcode","lastModifiedDate":"2022-03-31"},{"lineNumber":105,"author":{"gitId":"DannyDakota"},"content":"        assertNotEquals(commandResult.hashCode(), new CommandResult(\"feedback\", false,","lastModifiedDate":"2022-03-31"},{"lineNumber":106,"author":{"gitId":"DannyDakota"},"content":"                false, true, false, false).hashCode());","lastModifiedDate":"2022-03-31"},{"lineNumber":107,"author":{"gitId":"DannyDakota"},"content":"","lastModifiedDate":"2022-03-31"},{"lineNumber":108,"author":{"gitId":"DannyDakota"},"content":"        // different email value -\u003e returns different hashcode","lastModifiedDate":"2022-03-31"},{"lineNumber":109,"author":{"gitId":"DannyDakota"},"content":"        assertNotEquals(commandResult.hashCode(), new CommandResult(\"feedback\", false,","lastModifiedDate":"2022-03-31"},{"lineNumber":110,"author":{"gitId":"DannyDakota"},"content":"                false, false, true, false).hashCode());","lastModifiedDate":"2022-03-31"},{"lineNumber":111,"author":{"gitId":"DannyDakota"},"content":"","lastModifiedDate":"2022-03-31"},{"lineNumber":112,"author":{"gitId":"DannyDakota"},"content":"        //different resize value -\u003e return different hashcode","lastModifiedDate":"2022-03-31"},{"lineNumber":113,"author":{"gitId":"DannyDakota"},"content":"        assertNotEquals(commandResult.hashCode(), new CommandResult(\"feedback\", false,","lastModifiedDate":"2022-03-31"},{"lineNumber":114,"author":{"gitId":"DannyDakota"},"content":"                false, false, false, true).hashCode());","lastModifiedDate":"2022-03-31"},{"lineNumber":115,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-12-09"},{"lineNumber":116,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2018-12-09"}],"authorContributionMap":{"DannyDakota":62,"cwq2326":3,"-":51}},{"path":"src/test/java/seedu/address/logic/commands/CommandTestUtil.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2017-06-05"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"jiale-c"},"content":"import static org.junit.jupiter.api.Assertions.assertNotEquals;","lastModifiedDate":"2022-03-16"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2019-03-15"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_ADDRESS;","lastModifiedDate":"2022-03-17"},{"lineNumber":7,"author":{"gitId":"DannyDakota"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_BLOCK;","lastModifiedDate":"2022-03-17"},{"lineNumber":8,"author":{"gitId":"DannyDakota"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_COVID_STATUS;","lastModifiedDate":"2022-03-17"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_EMAIL;","lastModifiedDate":"2022-03-17"},{"lineNumber":10,"author":{"gitId":"DannyDakota"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_FACULTY;","lastModifiedDate":"2022-03-17"},{"lineNumber":11,"author":{"gitId":"DannyDakota"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_MATRICULATION_NUMBER;","lastModifiedDate":"2022-03-17"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_NAME;","lastModifiedDate":"2022-03-17"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_PHONE;","lastModifiedDate":"2022-03-17"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_TAG;","lastModifiedDate":"2022-03-17"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.Assert.assertThrows;","lastModifiedDate":"2019-03-23"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":17,"author":{"gitId":"-"},"content":"import java.util.ArrayList;","lastModifiedDate":"2017-06-05"},{"lineNumber":18,"author":{"gitId":"-"},"content":"import java.util.Arrays;","lastModifiedDate":"2017-07-20"},{"lineNumber":19,"author":{"gitId":"-"},"content":"import java.util.List;","lastModifiedDate":"2017-06-05"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":21,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.index.Index;","lastModifiedDate":"2018-01-31"},{"lineNumber":22,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.exceptions.CommandException;","lastModifiedDate":"2017-06-05"},{"lineNumber":23,"author":{"gitId":"kevinkuo0320"},"content":"import seedu.address.logic.parser.exceptions.ParseException;","lastModifiedDate":"2022-04-01"},{"lineNumber":24,"author":{"gitId":"-"},"content":"import seedu.address.model.AddressBook;","lastModifiedDate":"2017-06-05"},{"lineNumber":25,"author":{"gitId":"-"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2017-06-05"},{"lineNumber":26,"author":{"gitId":"-"},"content":"import seedu.address.model.person.NameContainsKeywordsPredicate;","lastModifiedDate":"2017-07-20"},{"lineNumber":27,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2018-01-10"},{"lineNumber":28,"author":{"gitId":"-"},"content":"import seedu.address.testutil.EditPersonDescriptorBuilder;","lastModifiedDate":"2017-07-05"},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":30,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-06-05"},{"lineNumber":31,"author":{"gitId":"-"},"content":" * Contains helper methods for testing commands.","lastModifiedDate":"2017-06-05"},{"lineNumber":32,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-06-05"},{"lineNumber":33,"author":{"gitId":"-"},"content":"public class CommandTestUtil {","lastModifiedDate":"2017-06-05"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    public static final String VALID_NAME_AMY \u003d \"Amy Bee\";","lastModifiedDate":"2017-07-05"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    public static final String VALID_NAME_BOB \u003d \"Bob Choo\";","lastModifiedDate":"2017-07-05"},{"lineNumber":37,"author":{"gitId":"DannyDakota"},"content":"    public static final String VALID_BLOCK_AMY \u003d \"B\";","lastModifiedDate":"2022-03-17"},{"lineNumber":38,"author":{"gitId":"DannyDakota"},"content":"    public static final String VALID_BLOCK_BOB \u003d \"E\";","lastModifiedDate":"2022-03-17"},{"lineNumber":39,"author":{"gitId":"DannyDakota"},"content":"    public static final String VALID_FACULTY_AMY \u003d \"SOC\";","lastModifiedDate":"2022-03-08"},{"lineNumber":40,"author":{"gitId":"DannyDakota"},"content":"    public static final String VALID_FACULTY_BOB \u003d \"FASS\";","lastModifiedDate":"2022-03-08"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    public static final String VALID_PHONE_AMY \u003d \"11111111\";","lastModifiedDate":"2017-07-05"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    public static final String VALID_PHONE_BOB \u003d \"22222222\";","lastModifiedDate":"2017-07-05"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    public static final String VALID_EMAIL_AMY \u003d \"amy@example.com\";","lastModifiedDate":"2017-07-05"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    public static final String VALID_EMAIL_BOB \u003d \"bob@example.com\";","lastModifiedDate":"2017-07-05"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    public static final String VALID_ADDRESS_AMY \u003d \"Block 312, Amy Street 1\";","lastModifiedDate":"2017-07-05"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    public static final String VALID_ADDRESS_BOB \u003d \"Block 123, Bobby Street 3\";","lastModifiedDate":"2017-07-05"},{"lineNumber":47,"author":{"gitId":"DannyDakota"},"content":"    public static final String VALID_MATRICULATION_NUMBER_AMY \u003d \"A1234567A\";","lastModifiedDate":"2022-03-08"},{"lineNumber":48,"author":{"gitId":"DannyDakota"},"content":"    public static final String VALID_MATRICULATION_NUMBER_BOB \u003d \"A2180000A\";","lastModifiedDate":"2022-03-08"},{"lineNumber":49,"author":{"gitId":"DannyDakota"},"content":"    public static final String VALID_COVID_STATUS_AMY \u003d \"HRN\";","lastModifiedDate":"2022-03-18"},{"lineNumber":50,"author":{"gitId":"DannyDakota"},"content":"    public static final String VALID_COVID_STATUS_BOB \u003d \"POSITIVE\";","lastModifiedDate":"2022-03-08"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    public static final String VALID_TAG_HUSBAND \u003d \"husband\";","lastModifiedDate":"2017-07-05"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    public static final String VALID_TAG_FRIEND \u003d \"friend\";","lastModifiedDate":"2017-07-05"},{"lineNumber":53,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-05"},{"lineNumber":54,"author":{"gitId":"-"},"content":"    public static final String NAME_DESC_AMY \u003d \" \" + PREFIX_NAME + VALID_NAME_AMY;","lastModifiedDate":"2017-07-05"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    public static final String NAME_DESC_BOB \u003d \" \" + PREFIX_NAME + VALID_NAME_BOB;","lastModifiedDate":"2017-07-05"},{"lineNumber":56,"author":{"gitId":"DannyDakota"},"content":"    public static final String BLOCK_DESC_AMY \u003d \" \" + PREFIX_BLOCK + VALID_BLOCK_AMY;","lastModifiedDate":"2022-03-17"},{"lineNumber":57,"author":{"gitId":"DannyDakota"},"content":"    public static final String BLOCK_DESC_BOB \u003d \" \" + PREFIX_BLOCK + VALID_BLOCK_BOB;","lastModifiedDate":"2022-03-17"},{"lineNumber":58,"author":{"gitId":"DannyDakota"},"content":"    public static final String FACULTY_DESC_AMY \u003d \" \" + PREFIX_FACULTY + VALID_FACULTY_AMY;","lastModifiedDate":"2022-03-08"},{"lineNumber":59,"author":{"gitId":"DannyDakota"},"content":"    public static final String FACULTY_DESC_BOB \u003d \" \" + PREFIX_FACULTY + VALID_FACULTY_BOB;","lastModifiedDate":"2022-03-08"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    public static final String PHONE_DESC_AMY \u003d \" \" + PREFIX_PHONE + VALID_PHONE_AMY;","lastModifiedDate":"2017-07-05"},{"lineNumber":61,"author":{"gitId":"-"},"content":"    public static final String PHONE_DESC_BOB \u003d \" \" + PREFIX_PHONE + VALID_PHONE_BOB;","lastModifiedDate":"2017-07-05"},{"lineNumber":62,"author":{"gitId":"-"},"content":"    public static final String EMAIL_DESC_AMY \u003d \" \" + PREFIX_EMAIL + VALID_EMAIL_AMY;","lastModifiedDate":"2017-07-05"},{"lineNumber":63,"author":{"gitId":"-"},"content":"    public static final String EMAIL_DESC_BOB \u003d \" \" + PREFIX_EMAIL + VALID_EMAIL_BOB;","lastModifiedDate":"2017-07-05"},{"lineNumber":64,"author":{"gitId":"-"},"content":"    public static final String ADDRESS_DESC_AMY \u003d \" \" + PREFIX_ADDRESS + VALID_ADDRESS_AMY;","lastModifiedDate":"2017-07-05"},{"lineNumber":65,"author":{"gitId":"-"},"content":"    public static final String ADDRESS_DESC_BOB \u003d \" \" + PREFIX_ADDRESS + VALID_ADDRESS_BOB;","lastModifiedDate":"2017-07-05"},{"lineNumber":66,"author":{"gitId":"DannyDakota"},"content":"    public static final String MATRICULATION_NUMBER_DESC_AMY \u003d \" \" + PREFIX_MATRICULATION_NUMBER","lastModifiedDate":"2022-03-08"},{"lineNumber":67,"author":{"gitId":"DannyDakota"},"content":"            + VALID_MATRICULATION_NUMBER_AMY;","lastModifiedDate":"2022-03-08"},{"lineNumber":68,"author":{"gitId":"DannyDakota"},"content":"    public static final String MATRICULATION_NUMBER_DESC_BOB \u003d \" \" + PREFIX_MATRICULATION_NUMBER","lastModifiedDate":"2022-03-08"},{"lineNumber":69,"author":{"gitId":"DannyDakota"},"content":"            + VALID_MATRICULATION_NUMBER_BOB;","lastModifiedDate":"2022-03-08"},{"lineNumber":70,"author":{"gitId":"DannyDakota"},"content":"    public static final String COVID_STATUS_DESC_AMY \u003d \" \" + PREFIX_COVID_STATUS + VALID_COVID_STATUS_AMY;","lastModifiedDate":"2022-03-08"},{"lineNumber":71,"author":{"gitId":"DannyDakota"},"content":"    public static final String COVID_STATUS_DESC_BOB \u003d \" \" + PREFIX_COVID_STATUS + VALID_COVID_STATUS_BOB;","lastModifiedDate":"2022-03-08"},{"lineNumber":72,"author":{"gitId":"-"},"content":"    public static final String TAG_DESC_FRIEND \u003d \" \" + PREFIX_TAG + VALID_TAG_FRIEND;","lastModifiedDate":"2017-07-05"},{"lineNumber":73,"author":{"gitId":"-"},"content":"    public static final String TAG_DESC_HUSBAND \u003d \" \" + PREFIX_TAG + VALID_TAG_HUSBAND;","lastModifiedDate":"2017-07-05"},{"lineNumber":74,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-05"},{"lineNumber":75,"author":{"gitId":"-"},"content":"    public static final String INVALID_NAME_DESC \u003d \" \" + PREFIX_NAME + \"James\u0026\"; // \u0027\u0026\u0027 not allowed in names","lastModifiedDate":"2017-07-05"},{"lineNumber":76,"author":{"gitId":"DannyDakota"},"content":"    public static final String INVALID_BLOCK_DESC \u003d \" \" + PREFIX_BLOCK + \"1\"; // \u00271\u0027 not allowed in blocks","lastModifiedDate":"2022-03-17"},{"lineNumber":77,"author":{"gitId":"DannyDakota"},"content":"    public static final String INVALID_FACULTY_DESC \u003d \" \" + PREFIX_FACULTY + \"@\"; // \u0027@\u0027 not allowed in faculties","lastModifiedDate":"2022-03-17"},{"lineNumber":78,"author":{"gitId":"-"},"content":"    public static final String INVALID_PHONE_DESC \u003d \" \" + PREFIX_PHONE + \"911a\"; // \u0027a\u0027 not allowed in phones","lastModifiedDate":"2017-07-05"},{"lineNumber":79,"author":{"gitId":"-"},"content":"    public static final String INVALID_EMAIL_DESC \u003d \" \" + PREFIX_EMAIL + \"bob!yahoo\"; // missing \u0027@\u0027 symbol","lastModifiedDate":"2017-07-05"},{"lineNumber":80,"author":{"gitId":"-"},"content":"    public static final String INVALID_ADDRESS_DESC \u003d \" \" + PREFIX_ADDRESS; // empty string not allowed for addresses","lastModifiedDate":"2017-07-05"},{"lineNumber":81,"author":{"gitId":"DannyDakota"},"content":"    public static final String INVALID_MATRICULATION_NUMBER_DESC \u003d \" \" + PREFIX_MATRICULATION_NUMBER; // empty string","lastModifiedDate":"2022-03-17"},{"lineNumber":82,"author":{"gitId":"DannyDakota"},"content":"    // not allowed for matriculation number","lastModifiedDate":"2022-03-17"},{"lineNumber":83,"author":{"gitId":"DannyDakota"},"content":"    public static final String INVALID_COVID_STATUS_DESC \u003d \" \" + PREFIX_COVID_STATUS; // empty string not allowed","lastModifiedDate":"2022-03-17"},{"lineNumber":84,"author":{"gitId":"DannyDakota"},"content":"    // for covid status","lastModifiedDate":"2022-03-17"},{"lineNumber":85,"author":{"gitId":"-"},"content":"    public static final String INVALID_TAG_DESC \u003d \" \" + PREFIX_TAG + \"hubby*\"; // \u0027*\u0027 not allowed in tags","lastModifiedDate":"2017-07-05"},{"lineNumber":86,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-05"},{"lineNumber":87,"author":{"gitId":"-"},"content":"    public static final String PREAMBLE_WHITESPACE \u003d \"\\t  \\r  \\n\";","lastModifiedDate":"2017-12-23"},{"lineNumber":88,"author":{"gitId":"-"},"content":"    public static final String PREAMBLE_NON_EMPTY \u003d \"NonEmptyPreamble\";","lastModifiedDate":"2017-12-23"},{"lineNumber":89,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-12-23"},{"lineNumber":90,"author":{"gitId":"-"},"content":"    public static final EditCommand.EditPersonDescriptor DESC_AMY;","lastModifiedDate":"2017-07-05"},{"lineNumber":91,"author":{"gitId":"-"},"content":"    public static final EditCommand.EditPersonDescriptor DESC_BOB;","lastModifiedDate":"2017-07-05"},{"lineNumber":92,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-05"},{"lineNumber":93,"author":{"gitId":"-"},"content":"    static {","lastModifiedDate":"2017-07-05"},{"lineNumber":94,"author":{"gitId":"-"},"content":"        DESC_AMY \u003d new EditPersonDescriptorBuilder().withName(VALID_NAME_AMY)","lastModifiedDate":"2017-07-05"},{"lineNumber":95,"author":{"gitId":"DannyDakota"},"content":"                .withBlock(VALID_BLOCK_AMY)","lastModifiedDate":"2022-03-17"},{"lineNumber":96,"author":{"gitId":"DannyDakota"},"content":"                .withFaculty(VALID_FACULTY_AMY)","lastModifiedDate":"2022-03-08"},{"lineNumber":97,"author":{"gitId":"DannyDakota"},"content":"                .withPhone(VALID_PHONE_AMY)","lastModifiedDate":"2022-03-08"},{"lineNumber":98,"author":{"gitId":"DannyDakota"},"content":"                .withEmail(VALID_EMAIL_AMY)","lastModifiedDate":"2022-03-08"},{"lineNumber":99,"author":{"gitId":"DannyDakota"},"content":"                .withAddress(VALID_ADDRESS_AMY)","lastModifiedDate":"2022-03-08"},{"lineNumber":100,"author":{"gitId":"DannyDakota"},"content":"                .withMatriculationNumber(VALID_MATRICULATION_NUMBER_AMY)","lastModifiedDate":"2022-03-08"},{"lineNumber":101,"author":{"gitId":"DannyDakota"},"content":"                .withCovidStatus(VALID_COVID_STATUS_AMY)","lastModifiedDate":"2022-03-08"},{"lineNumber":102,"author":{"gitId":"-"},"content":"                .withTags(VALID_TAG_FRIEND).build();","lastModifiedDate":"2017-07-05"},{"lineNumber":103,"author":{"gitId":"-"},"content":"        DESC_BOB \u003d new EditPersonDescriptorBuilder().withName(VALID_NAME_BOB)","lastModifiedDate":"2017-07-05"},{"lineNumber":104,"author":{"gitId":"DannyDakota"},"content":"                .withBlock(VALID_BLOCK_BOB)","lastModifiedDate":"2022-03-17"},{"lineNumber":105,"author":{"gitId":"DannyDakota"},"content":"                .withFaculty(VALID_FACULTY_BOB)","lastModifiedDate":"2022-03-08"},{"lineNumber":106,"author":{"gitId":"DannyDakota"},"content":"                .withPhone(VALID_PHONE_BOB)","lastModifiedDate":"2022-03-08"},{"lineNumber":107,"author":{"gitId":"DannyDakota"},"content":"                .withEmail(VALID_EMAIL_BOB)","lastModifiedDate":"2022-03-08"},{"lineNumber":108,"author":{"gitId":"DannyDakota"},"content":"                .withAddress(VALID_ADDRESS_BOB)","lastModifiedDate":"2022-03-08"},{"lineNumber":109,"author":{"gitId":"DannyDakota"},"content":"                .withMatriculationNumber(VALID_MATRICULATION_NUMBER_BOB)","lastModifiedDate":"2022-03-08"},{"lineNumber":110,"author":{"gitId":"DannyDakota"},"content":"                .withCovidStatus(VALID_COVID_STATUS_BOB)","lastModifiedDate":"2022-03-08"},{"lineNumber":111,"author":{"gitId":"-"},"content":"                .withTags(VALID_TAG_HUSBAND, VALID_TAG_FRIEND).build();","lastModifiedDate":"2017-07-05"},{"lineNumber":112,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-07-05"},{"lineNumber":113,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-05"},{"lineNumber":114,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-06-05"},{"lineNumber":115,"author":{"gitId":"-"},"content":"     * Executes the given {@code command}, confirms that \u003cbr\u003e","lastModifiedDate":"2017-06-05"},{"lineNumber":116,"author":{"gitId":"-"},"content":"     * - the returned {@link CommandResult} matches {@code expectedCommandResult} \u003cbr\u003e","lastModifiedDate":"2018-12-09"},{"lineNumber":117,"author":{"gitId":"-"},"content":"     * - the {@code actualModel} matches {@code expectedModel}","lastModifiedDate":"2019-01-25"},{"lineNumber":118,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-06-05"},{"lineNumber":119,"author":{"gitId":"-"},"content":"    public static void assertCommandSuccess(Command command, Model actualModel, CommandResult expectedCommandResult,","lastModifiedDate":"2019-01-25"},{"lineNumber":120,"author":{"gitId":"-"},"content":"            Model expectedModel) {","lastModifiedDate":"2019-01-25"},{"lineNumber":121,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2017-08-15"},{"lineNumber":122,"author":{"gitId":"-"},"content":"            CommandResult result \u003d command.execute(actualModel);","lastModifiedDate":"2019-01-25"},{"lineNumber":123,"author":{"gitId":"-"},"content":"            assertEquals(expectedCommandResult, result);","lastModifiedDate":"2018-12-09"},{"lineNumber":124,"author":{"gitId":"-"},"content":"            assertEquals(expectedModel, actualModel);","lastModifiedDate":"2017-06-05"},{"lineNumber":125,"author":{"gitId":"kevinkuo0320"},"content":"        } catch (CommandException | ParseException ce) {","lastModifiedDate":"2022-04-01"},{"lineNumber":126,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"Execution of command should not fail.\", ce);","lastModifiedDate":"2017-08-15"},{"lineNumber":127,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-08-15"},{"lineNumber":128,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-05"},{"lineNumber":129,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":130,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-12-09"},{"lineNumber":131,"author":{"gitId":"-"},"content":"     * Convenience wrapper to {@link #assertCommandSuccess(Command, Model, CommandResult, Model)}","lastModifiedDate":"2019-01-25"},{"lineNumber":132,"author":{"gitId":"-"},"content":"     * that takes a string {@code expectedMessage}.","lastModifiedDate":"2018-12-09"},{"lineNumber":133,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-12-09"},{"lineNumber":134,"author":{"gitId":"-"},"content":"    public static void assertCommandSuccess(Command command, Model actualModel, String expectedMessage,","lastModifiedDate":"2019-01-25"},{"lineNumber":135,"author":{"gitId":"-"},"content":"            Model expectedModel) {","lastModifiedDate":"2019-01-25"},{"lineNumber":136,"author":{"gitId":"-"},"content":"        CommandResult expectedCommandResult \u003d new CommandResult(expectedMessage);","lastModifiedDate":"2018-12-09"},{"lineNumber":137,"author":{"gitId":"-"},"content":"        assertCommandSuccess(command, actualModel, expectedCommandResult, expectedModel);","lastModifiedDate":"2019-01-25"},{"lineNumber":138,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-12-09"},{"lineNumber":139,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":140,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-06-05"},{"lineNumber":141,"author":{"gitId":"-"},"content":"     * Executes the given {@code command}, confirms that \u003cbr\u003e","lastModifiedDate":"2017-06-05"},{"lineNumber":142,"author":{"gitId":"-"},"content":"     * - a {@code CommandException} is thrown \u003cbr\u003e","lastModifiedDate":"2017-06-05"},{"lineNumber":143,"author":{"gitId":"-"},"content":"     * - the CommandException message matches {@code expectedMessage} \u003cbr\u003e","lastModifiedDate":"2017-06-05"},{"lineNumber":144,"author":{"gitId":"-"},"content":"     * - the address book, filtered person list and selected person in {@code actualModel} remain unchanged","lastModifiedDate":"2019-01-25"},{"lineNumber":145,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-06-05"},{"lineNumber":146,"author":{"gitId":"-"},"content":"    public static void assertCommandFailure(Command command, Model actualModel, String expectedMessage) {","lastModifiedDate":"2019-01-25"},{"lineNumber":147,"author":{"gitId":"-"},"content":"        // we are unable to defensively copy the model for comparison later, so we can","lastModifiedDate":"2017-06-05"},{"lineNumber":148,"author":{"gitId":"-"},"content":"        // only do so by copying its components.","lastModifiedDate":"2017-06-05"},{"lineNumber":149,"author":{"gitId":"-"},"content":"        AddressBook expectedAddressBook \u003d new AddressBook(actualModel.getAddressBook());","lastModifiedDate":"2017-06-05"},{"lineNumber":150,"author":{"gitId":"-"},"content":"        List\u003cPerson\u003e expectedFilteredList \u003d new ArrayList\u003c\u003e(actualModel.getFilteredPersonList());","lastModifiedDate":"2018-01-10"},{"lineNumber":151,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":152,"author":{"gitId":"-"},"content":"        assertThrows(CommandException.class, expectedMessage, () -\u003e command.execute(actualModel));","lastModifiedDate":"2019-05-03"},{"lineNumber":153,"author":{"gitId":"-"},"content":"        assertEquals(expectedAddressBook, actualModel.getAddressBook());","lastModifiedDate":"2017-06-05"},{"lineNumber":154,"author":{"gitId":"-"},"content":"        assertEquals(expectedFilteredList, actualModel.getFilteredPersonList());","lastModifiedDate":"2017-06-05"},{"lineNumber":155,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-05"},{"lineNumber":156,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-07-20"},{"lineNumber":157,"author":{"gitId":"-"},"content":"     * Updates {@code model}\u0027s filtered list to show only the person at the given {@code targetIndex} in the","lastModifiedDate":"2018-01-31"},{"lineNumber":158,"author":{"gitId":"-"},"content":"     * {@code model}\u0027s address book.","lastModifiedDate":"2018-01-31"},{"lineNumber":159,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-07-20"},{"lineNumber":160,"author":{"gitId":"-"},"content":"    public static void showPersonAtIndex(Model model, Index targetIndex) {","lastModifiedDate":"2018-01-31"},{"lineNumber":161,"author":{"gitId":"-"},"content":"        assertTrue(targetIndex.getZeroBased() \u003c model.getFilteredPersonList().size());","lastModifiedDate":"2018-01-31"},{"lineNumber":162,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-01-31"},{"lineNumber":163,"author":{"gitId":"-"},"content":"        Person person \u003d model.getFilteredPersonList().get(targetIndex.getZeroBased());","lastModifiedDate":"2018-01-31"},{"lineNumber":164,"author":{"gitId":"-"},"content":"        final String[] splitName \u003d person.getName().fullName.split(\"\\\\s+\");","lastModifiedDate":"2017-07-20"},{"lineNumber":165,"author":{"gitId":"-"},"content":"        model.updateFilteredPersonList(new NameContainsKeywordsPredicate(Arrays.asList(splitName[0])));","lastModifiedDate":"2017-07-20"},{"lineNumber":166,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-20"},{"lineNumber":167,"author":{"gitId":"-"},"content":"        assertEquals(1, model.getFilteredPersonList().size());","lastModifiedDate":"2018-02-08"},{"lineNumber":168,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-07-20"},{"lineNumber":169,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":170,"author":{"gitId":"jiale-c"},"content":"    /**","lastModifiedDate":"2022-03-16"},{"lineNumber":171,"author":{"gitId":"jiale-c"},"content":"     * Executes the given {@code command}, confirms that \u003cbr\u003e","lastModifiedDate":"2022-03-16"},{"lineNumber":172,"author":{"gitId":"jiale-c"},"content":"     * - the returned {@link String} does not match {@code nonExpectedMessage} \u003cbr\u003e","lastModifiedDate":"2022-03-16"},{"lineNumber":173,"author":{"gitId":"jiale-c"},"content":"     * - the {@code actualModel} matches {@code expectedModel}","lastModifiedDate":"2022-03-16"},{"lineNumber":174,"author":{"gitId":"jiale-c"},"content":"     */","lastModifiedDate":"2022-03-16"},{"lineNumber":175,"author":{"gitId":"jiale-c"},"content":"    public static void assertResponseSuccess(Command command, Model actualModel, String nonExpectedMessage,","lastModifiedDate":"2022-03-16"},{"lineNumber":176,"author":{"gitId":"jiale-c"},"content":"                                            Model expectedModel) {","lastModifiedDate":"2022-03-16"},{"lineNumber":177,"author":{"gitId":"jiale-c"},"content":"        CommandResult nonExpectedCommandResult \u003d new CommandResult(nonExpectedMessage);","lastModifiedDate":"2022-03-16"},{"lineNumber":178,"author":{"gitId":"jiale-c"},"content":"        try {","lastModifiedDate":"2022-03-16"},{"lineNumber":179,"author":{"gitId":"jiale-c"},"content":"            CommandResult result \u003d command.execute(actualModel);","lastModifiedDate":"2022-03-16"},{"lineNumber":180,"author":{"gitId":"jiale-c"},"content":"            assertNotEquals(nonExpectedCommandResult, result);","lastModifiedDate":"2022-03-16"},{"lineNumber":181,"author":{"gitId":"jiale-c"},"content":"            assertEquals(expectedModel, actualModel);","lastModifiedDate":"2022-03-16"},{"lineNumber":182,"author":{"gitId":"kevinkuo0320"},"content":"        } catch (CommandException | ParseException ce) {","lastModifiedDate":"2022-04-01"},{"lineNumber":183,"author":{"gitId":"jiale-c"},"content":"            throw new AssertionError(\"Execution of command should not fail.\", ce);","lastModifiedDate":"2022-03-16"},{"lineNumber":184,"author":{"gitId":"jiale-c"},"content":"        }","lastModifiedDate":"2022-03-16"},{"lineNumber":185,"author":{"gitId":"jiale-c"},"content":"    }","lastModifiedDate":"2022-03-16"},{"lineNumber":186,"author":{"gitId":"jiale-c"},"content":"","lastModifiedDate":"2022-03-16"},{"lineNumber":187,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-06-05"}],"authorContributionMap":{"DannyDakota":42,"kevinkuo0320":3,"jiale-c":17,"-":125}},{"path":"src/test/java/seedu/address/logic/commands/DeleteCommandTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2017-06-05"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.assertCommandFailure;","lastModifiedDate":"2017-07-05"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.assertCommandSuccess;","lastModifiedDate":"2017-07-05"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.showPersonAtIndex;","lastModifiedDate":"2018-01-31"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.TypicalIndexes.INDEX_FIRST_PERSON;","lastModifiedDate":"2017-08-05"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.TypicalIndexes.INDEX_SECOND_PERSON;","lastModifiedDate":"2017-08-05"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.TypicalPersons.getTypicalAddressBook;","lastModifiedDate":"2017-07-19"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.Messages;","lastModifiedDate":"2017-06-05"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.index.Index;","lastModifiedDate":"2017-06-05"},{"lineNumber":16,"author":{"gitId":"-"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2017-06-05"},{"lineNumber":17,"author":{"gitId":"-"},"content":"import seedu.address.model.ModelManager;","lastModifiedDate":"2017-06-05"},{"lineNumber":18,"author":{"gitId":"-"},"content":"import seedu.address.model.UserPrefs;","lastModifiedDate":"2017-06-05"},{"lineNumber":19,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2018-01-10"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":21,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-06-05"},{"lineNumber":22,"author":{"gitId":"-"},"content":" * Contains integration tests (interaction with the Model) and unit tests for","lastModifiedDate":"2020-12-16"},{"lineNumber":23,"author":{"gitId":"-"},"content":" * {@code DeleteCommand}.","lastModifiedDate":"2018-01-23"},{"lineNumber":24,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-06-05"},{"lineNumber":25,"author":{"gitId":"-"},"content":"public class DeleteCommandTest {","lastModifiedDate":"2017-06-05"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    private Model model \u003d new ModelManager(getTypicalAddressBook(), new UserPrefs());","lastModifiedDate":"2017-07-19"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-05"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    public void execute_validIndexUnfilteredList_success() {","lastModifiedDate":"2018-08-07"},{"lineNumber":31,"author":{"gitId":"-"},"content":"        Person personToDelete \u003d model.getFilteredPersonList().get(INDEX_FIRST_PERSON.getZeroBased());","lastModifiedDate":"2018-01-10"},{"lineNumber":32,"author":{"gitId":"-"},"content":"        DeleteCommand deleteCommand \u003d new DeleteCommand(INDEX_FIRST_PERSON);","lastModifiedDate":"2018-08-08"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":34,"author":{"gitId":"-"},"content":"        String expectedMessage \u003d String.format(DeleteCommand.MESSAGE_DELETE_PERSON_SUCCESS, personToDelete);","lastModifiedDate":"2017-06-05"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":36,"author":{"gitId":"-"},"content":"        ModelManager expectedModel \u003d new ModelManager(model.getAddressBook(), new UserPrefs());","lastModifiedDate":"2017-06-05"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        expectedModel.deletePerson(personToDelete);","lastModifiedDate":"2017-06-05"},{"lineNumber":38,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        assertCommandSuccess(deleteCommand, model, expectedMessage, expectedModel);","lastModifiedDate":"2019-01-25"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-05"},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-05"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    public void execute_invalidIndexUnfilteredList_throwsCommandException() {","lastModifiedDate":"2018-08-08"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        Index outOfBoundIndex \u003d Index.fromOneBased(model.getFilteredPersonList().size() + 1);","lastModifiedDate":"2017-06-05"},{"lineNumber":45,"author":{"gitId":"-"},"content":"        DeleteCommand deleteCommand \u003d new DeleteCommand(outOfBoundIndex);","lastModifiedDate":"2018-08-08"},{"lineNumber":46,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":47,"author":{"gitId":"-"},"content":"        assertCommandFailure(deleteCommand, model, Messages.MESSAGE_INVALID_PERSON_DISPLAYED_INDEX);","lastModifiedDate":"2019-01-25"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-05"},{"lineNumber":49,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-05"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    public void execute_validIndexFilteredList_success() {","lastModifiedDate":"2018-08-07"},{"lineNumber":52,"author":{"gitId":"-"},"content":"        showPersonAtIndex(model, INDEX_FIRST_PERSON);","lastModifiedDate":"2018-01-31"},{"lineNumber":53,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":54,"author":{"gitId":"-"},"content":"        Person personToDelete \u003d model.getFilteredPersonList().get(INDEX_FIRST_PERSON.getZeroBased());","lastModifiedDate":"2018-01-10"},{"lineNumber":55,"author":{"gitId":"-"},"content":"        DeleteCommand deleteCommand \u003d new DeleteCommand(INDEX_FIRST_PERSON);","lastModifiedDate":"2018-08-08"},{"lineNumber":56,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":57,"author":{"gitId":"-"},"content":"        String expectedMessage \u003d String.format(DeleteCommand.MESSAGE_DELETE_PERSON_SUCCESS, personToDelete);","lastModifiedDate":"2017-06-05"},{"lineNumber":58,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":59,"author":{"gitId":"-"},"content":"        Model expectedModel \u003d new ModelManager(model.getAddressBook(), new UserPrefs());","lastModifiedDate":"2017-06-05"},{"lineNumber":60,"author":{"gitId":"-"},"content":"        expectedModel.deletePerson(personToDelete);","lastModifiedDate":"2017-06-05"},{"lineNumber":61,"author":{"gitId":"-"},"content":"        showNoPerson(expectedModel);","lastModifiedDate":"2017-06-05"},{"lineNumber":62,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":63,"author":{"gitId":"-"},"content":"        assertCommandSuccess(deleteCommand, model, expectedMessage, expectedModel);","lastModifiedDate":"2019-01-25"},{"lineNumber":64,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-05"},{"lineNumber":65,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":66,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-05"},{"lineNumber":67,"author":{"gitId":"-"},"content":"    public void execute_invalidIndexFilteredList_throwsCommandException() {","lastModifiedDate":"2017-08-15"},{"lineNumber":68,"author":{"gitId":"-"},"content":"        showPersonAtIndex(model, INDEX_FIRST_PERSON);","lastModifiedDate":"2018-01-31"},{"lineNumber":69,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":70,"author":{"gitId":"-"},"content":"        Index outOfBoundIndex \u003d INDEX_SECOND_PERSON;","lastModifiedDate":"2017-06-05"},{"lineNumber":71,"author":{"gitId":"-"},"content":"        // ensures that outOfBoundIndex is still in bounds of address book list","lastModifiedDate":"2017-06-05"},{"lineNumber":72,"author":{"gitId":"-"},"content":"        assertTrue(outOfBoundIndex.getZeroBased() \u003c model.getAddressBook().getPersonList().size());","lastModifiedDate":"2017-06-05"},{"lineNumber":73,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":74,"author":{"gitId":"-"},"content":"        DeleteCommand deleteCommand \u003d new DeleteCommand(outOfBoundIndex);","lastModifiedDate":"2018-08-08"},{"lineNumber":75,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":76,"author":{"gitId":"-"},"content":"        assertCommandFailure(deleteCommand, model, Messages.MESSAGE_INVALID_PERSON_DISPLAYED_INDEX);","lastModifiedDate":"2019-01-25"},{"lineNumber":77,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-05"},{"lineNumber":78,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":79,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-01-23"},{"lineNumber":80,"author":{"gitId":"-"},"content":"    public void equals() {","lastModifiedDate":"2018-08-08"},{"lineNumber":81,"author":{"gitId":"-"},"content":"        DeleteCommand deleteFirstCommand \u003d new DeleteCommand(INDEX_FIRST_PERSON);","lastModifiedDate":"2018-08-08"},{"lineNumber":82,"author":{"gitId":"-"},"content":"        DeleteCommand deleteSecondCommand \u003d new DeleteCommand(INDEX_SECOND_PERSON);","lastModifiedDate":"2018-08-08"},{"lineNumber":83,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":84,"author":{"gitId":"-"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2017-06-27"},{"lineNumber":85,"author":{"gitId":"-"},"content":"        assertTrue(deleteFirstCommand.equals(deleteFirstCommand));","lastModifiedDate":"2017-06-27"},{"lineNumber":86,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":87,"author":{"gitId":"-"},"content":"        // same values -\u003e returns true","lastModifiedDate":"2017-06-27"},{"lineNumber":88,"author":{"gitId":"-"},"content":"        DeleteCommand deleteFirstCommandCopy \u003d new DeleteCommand(INDEX_FIRST_PERSON);","lastModifiedDate":"2018-08-08"},{"lineNumber":89,"author":{"gitId":"-"},"content":"        assertTrue(deleteFirstCommand.equals(deleteFirstCommandCopy));","lastModifiedDate":"2017-06-27"},{"lineNumber":90,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":91,"author":{"gitId":"-"},"content":"        // different types -\u003e returns false","lastModifiedDate":"2017-06-27"},{"lineNumber":92,"author":{"gitId":"-"},"content":"        assertFalse(deleteFirstCommand.equals(1));","lastModifiedDate":"2017-06-27"},{"lineNumber":93,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":94,"author":{"gitId":"-"},"content":"        // null -\u003e returns false","lastModifiedDate":"2017-06-27"},{"lineNumber":95,"author":{"gitId":"-"},"content":"        assertFalse(deleteFirstCommand.equals(null));","lastModifiedDate":"2017-06-27"},{"lineNumber":96,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":97,"author":{"gitId":"-"},"content":"        // different person -\u003e returns false","lastModifiedDate":"2017-06-27"},{"lineNumber":98,"author":{"gitId":"-"},"content":"        assertFalse(deleteFirstCommand.equals(deleteSecondCommand));","lastModifiedDate":"2017-06-27"},{"lineNumber":99,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-27"},{"lineNumber":100,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":101,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-06-05"},{"lineNumber":102,"author":{"gitId":"-"},"content":"     * Updates {@code model}\u0027s filtered list to show no one.","lastModifiedDate":"2017-06-05"},{"lineNumber":103,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-06-05"},{"lineNumber":104,"author":{"gitId":"-"},"content":"    private void showNoPerson(Model model) {","lastModifiedDate":"2017-06-05"},{"lineNumber":105,"author":{"gitId":"-"},"content":"        model.updateFilteredPersonList(p -\u003e false);","lastModifiedDate":"2017-06-12"},{"lineNumber":106,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":107,"author":{"gitId":"-"},"content":"        assertTrue(model.getFilteredPersonList().isEmpty());","lastModifiedDate":"2018-02-08"},{"lineNumber":108,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-05"},{"lineNumber":109,"author":{"gitId":"cwq2326"},"content":"","lastModifiedDate":"2022-03-28"},{"lineNumber":110,"author":{"gitId":"cwq2326"},"content":"    @Test","lastModifiedDate":"2022-03-28"},{"lineNumber":111,"author":{"gitId":"cwq2326"},"content":"    public void test_deleteCommandWordIsCorrect() {","lastModifiedDate":"2022-03-28"},{"lineNumber":112,"author":{"gitId":"cwq2326"},"content":"        assertTrue(DeleteCommand.COMMAND_WORD.equals(\"delete\"));","lastModifiedDate":"2022-03-28"},{"lineNumber":113,"author":{"gitId":"cwq2326"},"content":"    }","lastModifiedDate":"2022-03-28"},{"lineNumber":114,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-06-05"}],"authorContributionMap":{"cwq2326":5,"-":109}},{"path":"src/test/java/seedu/address/logic/commands/EditCommandTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2017-05-08"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-08"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.DESC_AMY;","lastModifiedDate":"2017-07-05"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.DESC_BOB;","lastModifiedDate":"2017-07-05"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_NAME_BOB;","lastModifiedDate":"2017-07-05"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_PHONE_BOB;","lastModifiedDate":"2022-03-17"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_TAG_HUSBAND;","lastModifiedDate":"2022-03-17"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.assertCommandFailure;","lastModifiedDate":"2017-07-05"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.assertCommandSuccess;","lastModifiedDate":"2017-07-05"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.showPersonAtIndex;","lastModifiedDate":"2018-01-31"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.TypicalIndexes.INDEX_FIRST_PERSON;","lastModifiedDate":"2017-08-05"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.TypicalIndexes.INDEX_SECOND_PERSON;","lastModifiedDate":"2017-08-05"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.TypicalPersons.getTypicalAddressBook;","lastModifiedDate":"2017-07-19"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-08"},{"lineNumber":17,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-08"},{"lineNumber":19,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.Messages;","lastModifiedDate":"2017-05-04"},{"lineNumber":20,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.index.Index;","lastModifiedDate":"2017-05-25"},{"lineNumber":21,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.EditCommand.EditPersonDescriptor;","lastModifiedDate":"2017-05-08"},{"lineNumber":22,"author":{"gitId":"-"},"content":"import seedu.address.model.AddressBook;","lastModifiedDate":"2017-05-04"},{"lineNumber":23,"author":{"gitId":"-"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2017-05-04"},{"lineNumber":24,"author":{"gitId":"-"},"content":"import seedu.address.model.ModelManager;","lastModifiedDate":"2017-05-04"},{"lineNumber":25,"author":{"gitId":"-"},"content":"import seedu.address.model.UserPrefs;","lastModifiedDate":"2017-05-04"},{"lineNumber":26,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2017-05-04"},{"lineNumber":27,"author":{"gitId":"-"},"content":"import seedu.address.testutil.EditPersonDescriptorBuilder;","lastModifiedDate":"2017-05-22"},{"lineNumber":28,"author":{"gitId":"-"},"content":"import seedu.address.testutil.PersonBuilder;","lastModifiedDate":"2017-05-04"},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-08"},{"lineNumber":30,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-05-04"},{"lineNumber":31,"author":{"gitId":"-"},"content":" * Contains integration tests (interaction with the Model) and unit tests for EditCommand.","lastModifiedDate":"2020-12-16"},{"lineNumber":32,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-05-04"},{"lineNumber":33,"author":{"gitId":"-"},"content":"public class EditCommandTest {","lastModifiedDate":"2017-05-08"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-08"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    private Model model \u003d new ModelManager(getTypicalAddressBook(), new UserPrefs());","lastModifiedDate":"2017-07-19"},{"lineNumber":36,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2022-03-17"},{"lineNumber":38,"author":{"gitId":"DannyDakota"},"content":"    public void execute_allFieldsSpecifiedUnfilteredList_failure() {","lastModifiedDate":"2022-03-18"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        Person editedPerson \u003d new PersonBuilder().build();","lastModifiedDate":"2022-03-17"},{"lineNumber":40,"author":{"gitId":"-"},"content":"        EditPersonDescriptor descriptor \u003d new EditPersonDescriptorBuilder(editedPerson).build();","lastModifiedDate":"2022-03-17"},{"lineNumber":41,"author":{"gitId":"-"},"content":"        EditCommand editCommand \u003d new EditCommand(INDEX_FIRST_PERSON, descriptor);","lastModifiedDate":"2022-03-17"},{"lineNumber":42,"author":{"gitId":"DannyDakota"},"content":"        String expectedMessage \u003d String.format(EditCommand.MESSAGE_SAME_INPUT, editedPerson);","lastModifiedDate":"2022-03-18"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        Model expectedModel \u003d new ModelManager(new AddressBook(model.getAddressBook()), new UserPrefs());","lastModifiedDate":"2022-03-17"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        expectedModel.setPerson(model.getFilteredPersonList().get(0), editedPerson);","lastModifiedDate":"2022-03-17"},{"lineNumber":45,"author":{"gitId":"DannyDakota"},"content":"        assertCommandFailure(editCommand, model, expectedMessage);","lastModifiedDate":"2022-03-18"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2022-03-17"},{"lineNumber":47,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-03-17"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2022-03-17"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    public void execute_someFieldsSpecifiedUnfilteredList_success() {","lastModifiedDate":"2022-03-17"},{"lineNumber":50,"author":{"gitId":"-"},"content":"        Index indexLastPerson \u003d Index.fromOneBased(model.getFilteredPersonList().size());","lastModifiedDate":"2022-03-17"},{"lineNumber":51,"author":{"gitId":"-"},"content":"        Person lastPerson \u003d model.getFilteredPersonList().get(indexLastPerson.getZeroBased());","lastModifiedDate":"2022-03-17"},{"lineNumber":52,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-03-17"},{"lineNumber":53,"author":{"gitId":"-"},"content":"        PersonBuilder personInList \u003d new PersonBuilder(lastPerson);","lastModifiedDate":"2022-03-17"},{"lineNumber":54,"author":{"gitId":"-"},"content":"        Person editedPerson \u003d personInList.withName(VALID_NAME_BOB).withPhone(VALID_PHONE_BOB)","lastModifiedDate":"2022-03-17"},{"lineNumber":55,"author":{"gitId":"-"},"content":"                .withTags(VALID_TAG_HUSBAND).build();","lastModifiedDate":"2022-03-17"},{"lineNumber":56,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-03-17"},{"lineNumber":57,"author":{"gitId":"-"},"content":"        EditPersonDescriptor descriptor \u003d new EditPersonDescriptorBuilder().withName(VALID_NAME_BOB)","lastModifiedDate":"2022-03-17"},{"lineNumber":58,"author":{"gitId":"-"},"content":"                .withPhone(VALID_PHONE_BOB).withTags(VALID_TAG_HUSBAND).build();","lastModifiedDate":"2022-03-17"},{"lineNumber":59,"author":{"gitId":"-"},"content":"        EditCommand editCommand \u003d new EditCommand(indexLastPerson, descriptor);","lastModifiedDate":"2022-03-17"},{"lineNumber":60,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-03-17"},{"lineNumber":61,"author":{"gitId":"-"},"content":"        String expectedMessage \u003d String.format(EditCommand.MESSAGE_EDIT_PERSON_SUCCESS, editedPerson);","lastModifiedDate":"2022-03-17"},{"lineNumber":62,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-03-17"},{"lineNumber":63,"author":{"gitId":"-"},"content":"        Model expectedModel \u003d new ModelManager(new AddressBook(model.getAddressBook()), new UserPrefs());","lastModifiedDate":"2022-03-17"},{"lineNumber":64,"author":{"gitId":"-"},"content":"        expectedModel.setPerson(lastPerson, editedPerson);","lastModifiedDate":"2022-03-17"},{"lineNumber":65,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-03-17"},{"lineNumber":66,"author":{"gitId":"-"},"content":"        assertCommandSuccess(editCommand, model, expectedMessage, expectedModel);","lastModifiedDate":"2022-03-17"},{"lineNumber":67,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2022-03-17"},{"lineNumber":68,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-03-17"},{"lineNumber":69,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-18"},{"lineNumber":70,"author":{"gitId":"-"},"content":"    public void execute_noFieldSpecifiedUnfilteredList_success() {","lastModifiedDate":"2017-08-15"},{"lineNumber":71,"author":{"gitId":"-"},"content":"        EditCommand editCommand \u003d new EditCommand(INDEX_FIRST_PERSON, new EditPersonDescriptor());","lastModifiedDate":"2018-08-08"},{"lineNumber":72,"author":{"gitId":"-"},"content":"        Person editedPerson \u003d model.getFilteredPersonList().get(INDEX_FIRST_PERSON.getZeroBased());","lastModifiedDate":"2018-01-10"},{"lineNumber":73,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-18"},{"lineNumber":74,"author":{"gitId":"-"},"content":"        String expectedMessage \u003d String.format(EditCommand.MESSAGE_EDIT_PERSON_SUCCESS, editedPerson);","lastModifiedDate":"2017-05-18"},{"lineNumber":75,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-18"},{"lineNumber":76,"author":{"gitId":"-"},"content":"        Model expectedModel \u003d new ModelManager(new AddressBook(model.getAddressBook()), new UserPrefs());","lastModifiedDate":"2017-05-18"},{"lineNumber":77,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-18"},{"lineNumber":78,"author":{"gitId":"-"},"content":"        assertCommandSuccess(editCommand, model, expectedMessage, expectedModel);","lastModifiedDate":"2019-01-25"},{"lineNumber":79,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-18"},{"lineNumber":80,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-18"},{"lineNumber":81,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-18"},{"lineNumber":82,"author":{"gitId":"-"},"content":"    public void execute_filteredList_success() {","lastModifiedDate":"2018-08-07"},{"lineNumber":83,"author":{"gitId":"-"},"content":"        showPersonAtIndex(model, INDEX_FIRST_PERSON);","lastModifiedDate":"2018-01-31"},{"lineNumber":84,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-18"},{"lineNumber":85,"author":{"gitId":"-"},"content":"        Person personInFilteredList \u003d model.getFilteredPersonList().get(INDEX_FIRST_PERSON.getZeroBased());","lastModifiedDate":"2018-01-10"},{"lineNumber":86,"author":{"gitId":"-"},"content":"        Person editedPerson \u003d new PersonBuilder(personInFilteredList).withName(VALID_NAME_BOB).build();","lastModifiedDate":"2017-05-18"},{"lineNumber":87,"author":{"gitId":"-"},"content":"        EditCommand editCommand \u003d new EditCommand(INDEX_FIRST_PERSON,","lastModifiedDate":"2018-08-08"},{"lineNumber":88,"author":{"gitId":"-"},"content":"                new EditPersonDescriptorBuilder().withName(VALID_NAME_BOB).build());","lastModifiedDate":"2017-05-18"},{"lineNumber":89,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-18"},{"lineNumber":90,"author":{"gitId":"-"},"content":"        String expectedMessage \u003d String.format(EditCommand.MESSAGE_EDIT_PERSON_SUCCESS, editedPerson);","lastModifiedDate":"2017-05-18"},{"lineNumber":91,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-18"},{"lineNumber":92,"author":{"gitId":"-"},"content":"        Model expectedModel \u003d new ModelManager(new AddressBook(model.getAddressBook()), new UserPrefs());","lastModifiedDate":"2017-05-18"},{"lineNumber":93,"author":{"gitId":"-"},"content":"        expectedModel.setPerson(model.getFilteredPersonList().get(0), editedPerson);","lastModifiedDate":"2018-08-17"},{"lineNumber":94,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-18"},{"lineNumber":95,"author":{"gitId":"-"},"content":"        assertCommandSuccess(editCommand, model, expectedMessage, expectedModel);","lastModifiedDate":"2019-01-25"},{"lineNumber":96,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-18"},{"lineNumber":97,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-18"},{"lineNumber":98,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-18"},{"lineNumber":99,"author":{"gitId":"-"},"content":"    public void execute_duplicatePersonUnfilteredList_failure() {","lastModifiedDate":"2017-08-15"},{"lineNumber":100,"author":{"gitId":"-"},"content":"        Person firstPerson \u003d model.getFilteredPersonList().get(INDEX_FIRST_PERSON.getZeroBased());","lastModifiedDate":"2018-01-10"},{"lineNumber":101,"author":{"gitId":"-"},"content":"        EditPersonDescriptor descriptor \u003d new EditPersonDescriptorBuilder(firstPerson).build();","lastModifiedDate":"2017-06-05"},{"lineNumber":102,"author":{"gitId":"-"},"content":"        EditCommand editCommand \u003d new EditCommand(INDEX_SECOND_PERSON, descriptor);","lastModifiedDate":"2018-08-08"},{"lineNumber":103,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":104,"author":{"gitId":"-"},"content":"        assertCommandFailure(editCommand, model, EditCommand.MESSAGE_DUPLICATE_PERSON);","lastModifiedDate":"2019-01-25"},{"lineNumber":105,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-04"},{"lineNumber":106,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":107,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-04"},{"lineNumber":108,"author":{"gitId":"-"},"content":"    public void execute_duplicatePersonFilteredList_failure() {","lastModifiedDate":"2017-08-15"},{"lineNumber":109,"author":{"gitId":"-"},"content":"        showPersonAtIndex(model, INDEX_FIRST_PERSON);","lastModifiedDate":"2018-01-31"},{"lineNumber":110,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-18"},{"lineNumber":111,"author":{"gitId":"-"},"content":"        // edit person in filtered list into a duplicate in address book","lastModifiedDate":"2017-05-18"},{"lineNumber":112,"author":{"gitId":"-"},"content":"        Person personInList \u003d model.getAddressBook().getPersonList().get(INDEX_SECOND_PERSON.getZeroBased());","lastModifiedDate":"2018-01-10"},{"lineNumber":113,"author":{"gitId":"-"},"content":"        EditCommand editCommand \u003d new EditCommand(INDEX_FIRST_PERSON,","lastModifiedDate":"2018-08-08"},{"lineNumber":114,"author":{"gitId":"-"},"content":"                new EditPersonDescriptorBuilder(personInList).build());","lastModifiedDate":"2017-05-18"},{"lineNumber":115,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":116,"author":{"gitId":"-"},"content":"        assertCommandFailure(editCommand, model, EditCommand.MESSAGE_DUPLICATE_PERSON);","lastModifiedDate":"2019-01-25"},{"lineNumber":117,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-18"},{"lineNumber":118,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-18"},{"lineNumber":119,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-18"},{"lineNumber":120,"author":{"gitId":"-"},"content":"    public void execute_invalidPersonIndexUnfilteredList_failure() {","lastModifiedDate":"2017-08-15"},{"lineNumber":121,"author":{"gitId":"-"},"content":"        Index outOfBoundIndex \u003d Index.fromOneBased(model.getFilteredPersonList().size() + 1);","lastModifiedDate":"2017-05-18"},{"lineNumber":122,"author":{"gitId":"-"},"content":"        EditPersonDescriptor descriptor \u003d new EditPersonDescriptorBuilder().withName(VALID_NAME_BOB).build();","lastModifiedDate":"2017-05-22"},{"lineNumber":123,"author":{"gitId":"-"},"content":"        EditCommand editCommand \u003d new EditCommand(outOfBoundIndex, descriptor);","lastModifiedDate":"2018-08-08"},{"lineNumber":124,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":125,"author":{"gitId":"-"},"content":"        assertCommandFailure(editCommand, model, Messages.MESSAGE_INVALID_PERSON_DISPLAYED_INDEX);","lastModifiedDate":"2019-01-25"},{"lineNumber":126,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-04"},{"lineNumber":127,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":128,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-05-18"},{"lineNumber":129,"author":{"gitId":"-"},"content":"     * Edit filtered list where index is larger than size of filtered list,","lastModifiedDate":"2017-05-18"},{"lineNumber":130,"author":{"gitId":"-"},"content":"     * but smaller than size of address book","lastModifiedDate":"2017-05-18"},{"lineNumber":131,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-05-18"},{"lineNumber":132,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-18"},{"lineNumber":133,"author":{"gitId":"-"},"content":"    public void execute_invalidPersonIndexFilteredList_failure() {","lastModifiedDate":"2017-08-15"},{"lineNumber":134,"author":{"gitId":"-"},"content":"        showPersonAtIndex(model, INDEX_FIRST_PERSON);","lastModifiedDate":"2018-01-31"},{"lineNumber":135,"author":{"gitId":"-"},"content":"        Index outOfBoundIndex \u003d INDEX_SECOND_PERSON;","lastModifiedDate":"2017-05-18"},{"lineNumber":136,"author":{"gitId":"-"},"content":"        // ensures that outOfBoundIndex is still in bounds of address book list","lastModifiedDate":"2017-05-18"},{"lineNumber":137,"author":{"gitId":"-"},"content":"        assertTrue(outOfBoundIndex.getZeroBased() \u003c model.getAddressBook().getPersonList().size());","lastModifiedDate":"2017-05-18"},{"lineNumber":138,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-18"},{"lineNumber":139,"author":{"gitId":"-"},"content":"        EditCommand editCommand \u003d new EditCommand(outOfBoundIndex,","lastModifiedDate":"2018-08-08"},{"lineNumber":140,"author":{"gitId":"-"},"content":"                new EditPersonDescriptorBuilder().withName(VALID_NAME_BOB).build());","lastModifiedDate":"2017-05-18"},{"lineNumber":141,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":142,"author":{"gitId":"-"},"content":"        assertCommandFailure(editCommand, model, Messages.MESSAGE_INVALID_PERSON_DISPLAYED_INDEX);","lastModifiedDate":"2019-01-25"},{"lineNumber":143,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-18"},{"lineNumber":144,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-18"},{"lineNumber":145,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-01-23"},{"lineNumber":146,"author":{"gitId":"-"},"content":"    public void equals() {","lastModifiedDate":"2018-08-08"},{"lineNumber":147,"author":{"gitId":"-"},"content":"        final EditCommand standardCommand \u003d new EditCommand(INDEX_FIRST_PERSON, DESC_AMY);","lastModifiedDate":"2018-08-08"},{"lineNumber":148,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-08"},{"lineNumber":149,"author":{"gitId":"-"},"content":"        // same values -\u003e returns true","lastModifiedDate":"2017-05-08"},{"lineNumber":150,"author":{"gitId":"-"},"content":"        EditPersonDescriptor copyDescriptor \u003d new EditPersonDescriptor(DESC_AMY);","lastModifiedDate":"2017-05-08"},{"lineNumber":151,"author":{"gitId":"-"},"content":"        EditCommand commandWithSameValues \u003d new EditCommand(INDEX_FIRST_PERSON, copyDescriptor);","lastModifiedDate":"2018-08-08"},{"lineNumber":152,"author":{"gitId":"-"},"content":"        assertTrue(standardCommand.equals(commandWithSameValues));","lastModifiedDate":"2017-05-08"},{"lineNumber":153,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-08"},{"lineNumber":154,"author":{"gitId":"-"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2017-05-08"},{"lineNumber":155,"author":{"gitId":"-"},"content":"        assertTrue(standardCommand.equals(standardCommand));","lastModifiedDate":"2017-05-08"},{"lineNumber":156,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-08"},{"lineNumber":157,"author":{"gitId":"-"},"content":"        // null -\u003e returns false","lastModifiedDate":"2017-05-08"},{"lineNumber":158,"author":{"gitId":"-"},"content":"        assertFalse(standardCommand.equals(null));","lastModifiedDate":"2017-05-08"},{"lineNumber":159,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-08"},{"lineNumber":160,"author":{"gitId":"-"},"content":"        // different types -\u003e returns false","lastModifiedDate":"2017-05-08"},{"lineNumber":161,"author":{"gitId":"-"},"content":"        assertFalse(standardCommand.equals(new ClearCommand()));","lastModifiedDate":"2017-05-08"},{"lineNumber":162,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-08"},{"lineNumber":163,"author":{"gitId":"-"},"content":"        // different index -\u003e returns false","lastModifiedDate":"2017-05-08"},{"lineNumber":164,"author":{"gitId":"-"},"content":"        assertFalse(standardCommand.equals(new EditCommand(INDEX_SECOND_PERSON, DESC_AMY)));","lastModifiedDate":"2017-05-25"},{"lineNumber":165,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-08"},{"lineNumber":166,"author":{"gitId":"-"},"content":"        // different descriptor -\u003e returns false","lastModifiedDate":"2017-05-08"},{"lineNumber":167,"author":{"gitId":"-"},"content":"        assertFalse(standardCommand.equals(new EditCommand(INDEX_FIRST_PERSON, DESC_BOB)));","lastModifiedDate":"2017-05-25"},{"lineNumber":168,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-08"},{"lineNumber":169,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":170,"author":{"gitId":"cwq2326"},"content":"    @Test","lastModifiedDate":"2022-03-28"},{"lineNumber":171,"author":{"gitId":"cwq2326"},"content":"    public void test_editCommandWordIsCorrect() {","lastModifiedDate":"2022-03-28"},{"lineNumber":172,"author":{"gitId":"cwq2326"},"content":"        assertTrue(EditCommand.COMMAND_WORD.equals(\"edit\"));","lastModifiedDate":"2022-03-28"},{"lineNumber":173,"author":{"gitId":"cwq2326"},"content":"    }","lastModifiedDate":"2022-03-28"},{"lineNumber":174,"author":{"gitId":"cwq2326"},"content":"","lastModifiedDate":"2022-03-28"},{"lineNumber":175,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-05-08"}],"authorContributionMap":{"DannyDakota":3,"cwq2326":5,"-":167}},{"path":"src/test/java/seedu/address/logic/commands/EditPersonDescriptorTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2017-05-05"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2022-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2022-03-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.DESC_AMY;","lastModifiedDate":"2022-03-15"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.DESC_BOB;","lastModifiedDate":"2022-03-15"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_ADDRESS_BOB;","lastModifiedDate":"2022-03-15"},{"lineNumber":8,"author":{"gitId":"kevinkuo0320"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_COVID_STATUS_BOB;","lastModifiedDate":"2022-03-15"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_EMAIL_BOB;","lastModifiedDate":"2022-03-15"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_NAME_BOB;","lastModifiedDate":"2022-03-15"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_PHONE_BOB;","lastModifiedDate":"2022-03-15"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_TAG_HUSBAND;","lastModifiedDate":"2022-03-15"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-03-15"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-03-15"},{"lineNumber":16,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.EditCommand.EditPersonDescriptor;","lastModifiedDate":"2017-05-05"},{"lineNumber":17,"author":{"gitId":"-"},"content":"import seedu.address.testutil.EditPersonDescriptorBuilder;","lastModifiedDate":"2017-05-05"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":19,"author":{"gitId":"-"},"content":"public class EditPersonDescriptorTest {","lastModifiedDate":"2017-05-05"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-05"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    public void equals() {","lastModifiedDate":"2017-08-15"},{"lineNumber":23,"author":{"gitId":"-"},"content":"        // same values -\u003e returns true","lastModifiedDate":"2017-05-05"},{"lineNumber":24,"author":{"gitId":"-"},"content":"        EditPersonDescriptor descriptorWithSameValues \u003d new EditPersonDescriptor(DESC_AMY);","lastModifiedDate":"2017-05-05"},{"lineNumber":25,"author":{"gitId":"-"},"content":"        assertTrue(DESC_AMY.equals(descriptorWithSameValues));","lastModifiedDate":"2017-05-05"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":27,"author":{"gitId":"-"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2017-05-05"},{"lineNumber":28,"author":{"gitId":"-"},"content":"        assertTrue(DESC_AMY.equals(DESC_AMY));","lastModifiedDate":"2017-05-05"},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":30,"author":{"gitId":"-"},"content":"        // null -\u003e returns false","lastModifiedDate":"2017-05-05"},{"lineNumber":31,"author":{"gitId":"-"},"content":"        assertFalse(DESC_AMY.equals(null));","lastModifiedDate":"2017-05-05"},{"lineNumber":32,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":33,"author":{"gitId":"-"},"content":"        // different types -\u003e returns false","lastModifiedDate":"2017-05-05"},{"lineNumber":34,"author":{"gitId":"-"},"content":"        assertFalse(DESC_AMY.equals(5));","lastModifiedDate":"2017-05-05"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":36,"author":{"gitId":"-"},"content":"        // different values -\u003e returns false","lastModifiedDate":"2017-05-05"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        assertFalse(DESC_AMY.equals(DESC_BOB));","lastModifiedDate":"2017-05-05"},{"lineNumber":38,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        // different name -\u003e returns false","lastModifiedDate":"2017-05-05"},{"lineNumber":40,"author":{"gitId":"-"},"content":"        EditPersonDescriptor editedAmy \u003d new EditPersonDescriptorBuilder(DESC_AMY).withName(VALID_NAME_BOB).build();","lastModifiedDate":"2017-05-05"},{"lineNumber":41,"author":{"gitId":"-"},"content":"        assertFalse(DESC_AMY.equals(editedAmy));","lastModifiedDate":"2017-05-05"},{"lineNumber":42,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        // different phone -\u003e returns false","lastModifiedDate":"2017-05-05"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        editedAmy \u003d new EditPersonDescriptorBuilder(DESC_AMY).withPhone(VALID_PHONE_BOB).build();","lastModifiedDate":"2017-05-05"},{"lineNumber":45,"author":{"gitId":"-"},"content":"        assertFalse(DESC_AMY.equals(editedAmy));","lastModifiedDate":"2017-05-05"},{"lineNumber":46,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":47,"author":{"gitId":"-"},"content":"        // different email -\u003e returns false","lastModifiedDate":"2017-05-05"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        editedAmy \u003d new EditPersonDescriptorBuilder(DESC_AMY).withEmail(VALID_EMAIL_BOB).build();","lastModifiedDate":"2017-05-05"},{"lineNumber":49,"author":{"gitId":"-"},"content":"        assertFalse(DESC_AMY.equals(editedAmy));","lastModifiedDate":"2017-05-05"},{"lineNumber":50,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":51,"author":{"gitId":"-"},"content":"        // different address -\u003e returns false","lastModifiedDate":"2017-05-05"},{"lineNumber":52,"author":{"gitId":"-"},"content":"        editedAmy \u003d new EditPersonDescriptorBuilder(DESC_AMY).withAddress(VALID_ADDRESS_BOB).build();","lastModifiedDate":"2017-05-05"},{"lineNumber":53,"author":{"gitId":"-"},"content":"        assertFalse(DESC_AMY.equals(editedAmy));","lastModifiedDate":"2017-05-05"},{"lineNumber":54,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":55,"author":{"gitId":"-"},"content":"        // different tags -\u003e returns false","lastModifiedDate":"2017-05-05"},{"lineNumber":56,"author":{"gitId":"-"},"content":"        editedAmy \u003d new EditPersonDescriptorBuilder(DESC_AMY).withTags(VALID_TAG_HUSBAND).build();","lastModifiedDate":"2017-05-05"},{"lineNumber":57,"author":{"gitId":"-"},"content":"        assertFalse(DESC_AMY.equals(editedAmy));","lastModifiedDate":"2017-05-05"},{"lineNumber":58,"author":{"gitId":"kevinkuo0320"},"content":"","lastModifiedDate":"2022-03-15"},{"lineNumber":59,"author":{"gitId":"kevinkuo0320"},"content":"        //different status -\u003e returns false","lastModifiedDate":"2022-03-15"},{"lineNumber":60,"author":{"gitId":"kevinkuo0320"},"content":"        editedAmy \u003d new EditPersonDescriptorBuilder(DESC_AMY).withCovidStatus(VALID_COVID_STATUS_BOB).build();","lastModifiedDate":"2022-03-15"},{"lineNumber":61,"author":{"gitId":"kevinkuo0320"},"content":"        assertFalse(DESC_AMY.equals(editedAmy));","lastModifiedDate":"2022-03-15"},{"lineNumber":62,"author":{"gitId":"kevinkuo0320"},"content":"","lastModifiedDate":"2022-03-15"},{"lineNumber":63,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-05"},{"lineNumber":64,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-05-05"}],"authorContributionMap":{"kevinkuo0320":6,"-":58}},{"path":"src/test/java/seedu/address/logic/commands/EmailCommandTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"DannyDakota"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2022-03-31"},{"lineNumber":2,"author":{"gitId":"DannyDakota"},"content":"","lastModifiedDate":"2022-03-31"},{"lineNumber":3,"author":{"gitId":"DannyDakota"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2022-03-31"},{"lineNumber":4,"author":{"gitId":"DannyDakota"},"content":"import static seedu.address.logic.commands.CommandTestUtil.assertCommandSuccess;","lastModifiedDate":"2022-03-31"},{"lineNumber":5,"author":{"gitId":"DannyDakota"},"content":"import static seedu.address.logic.commands.EmailCommand.SHOWING_EMAIL_MESSAGE;","lastModifiedDate":"2022-03-31"},{"lineNumber":6,"author":{"gitId":"DannyDakota"},"content":"","lastModifiedDate":"2022-03-31"},{"lineNumber":7,"author":{"gitId":"DannyDakota"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2022-03-31"},{"lineNumber":8,"author":{"gitId":"DannyDakota"},"content":"","lastModifiedDate":"2022-03-31"},{"lineNumber":9,"author":{"gitId":"DannyDakota"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2022-03-31"},{"lineNumber":10,"author":{"gitId":"DannyDakota"},"content":"import seedu.address.model.ModelManager;","lastModifiedDate":"2022-03-31"},{"lineNumber":11,"author":{"gitId":"DannyDakota"},"content":"","lastModifiedDate":"2022-03-31"},{"lineNumber":12,"author":{"gitId":"DannyDakota"},"content":"public class EmailCommandTest {","lastModifiedDate":"2022-03-31"},{"lineNumber":13,"author":{"gitId":"DannyDakota"},"content":"    private Model model \u003d new ModelManager();","lastModifiedDate":"2022-03-31"},{"lineNumber":14,"author":{"gitId":"DannyDakota"},"content":"    private Model expectedModel \u003d new ModelManager();","lastModifiedDate":"2022-03-31"},{"lineNumber":15,"author":{"gitId":"DannyDakota"},"content":"","lastModifiedDate":"2022-03-31"},{"lineNumber":16,"author":{"gitId":"DannyDakota"},"content":"    @Test","lastModifiedDate":"2022-03-31"},{"lineNumber":17,"author":{"gitId":"DannyDakota"},"content":"    public void execute_email_success() {","lastModifiedDate":"2022-03-31"},{"lineNumber":18,"author":{"gitId":"DannyDakota"},"content":"        CommandResult expectedCommandResult \u003d new CommandResult(SHOWING_EMAIL_MESSAGE, false,","lastModifiedDate":"2022-03-31"},{"lineNumber":19,"author":{"gitId":"DannyDakota"},"content":"                false, false, true, false);","lastModifiedDate":"2022-03-31"},{"lineNumber":20,"author":{"gitId":"DannyDakota"},"content":"        assertCommandSuccess(new EmailCommand(), model, expectedCommandResult, expectedModel);","lastModifiedDate":"2022-03-31"},{"lineNumber":21,"author":{"gitId":"DannyDakota"},"content":"    }","lastModifiedDate":"2022-03-31"},{"lineNumber":22,"author":{"gitId":"DannyDakota"},"content":"","lastModifiedDate":"2022-03-31"},{"lineNumber":23,"author":{"gitId":"DannyDakota"},"content":"    @Test","lastModifiedDate":"2022-03-31"},{"lineNumber":24,"author":{"gitId":"DannyDakota"},"content":"    public void test_helpCommandWordIsCorrect() {","lastModifiedDate":"2022-03-31"},{"lineNumber":25,"author":{"gitId":"DannyDakota"},"content":"        assertTrue(EmailCommand.COMMAND_WORD.equals(\"email\"));","lastModifiedDate":"2022-03-31"},{"lineNumber":26,"author":{"gitId":"DannyDakota"},"content":"    }","lastModifiedDate":"2022-03-31"},{"lineNumber":27,"author":{"gitId":"DannyDakota"},"content":"}","lastModifiedDate":"2022-03-31"}],"authorContributionMap":{"DannyDakota":27}},{"path":"src/test/java/seedu/address/logic/commands/ExitCommandTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2017-06-08"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-08"},{"lineNumber":3,"author":{"gitId":"cwq2326"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2022-03-28"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.assertCommandSuccess;","lastModifiedDate":"2018-12-09"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.ExitCommand.MESSAGE_EXIT_ACKNOWLEDGEMENT;","lastModifiedDate":"2017-06-08"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-08"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-08"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2018-08-08"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import seedu.address.model.ModelManager;","lastModifiedDate":"2018-08-08"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-08"},{"lineNumber":12,"author":{"gitId":"-"},"content":"public class ExitCommandTest {","lastModifiedDate":"2017-06-08"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    private Model model \u003d new ModelManager();","lastModifiedDate":"2018-08-08"},{"lineNumber":14,"author":{"gitId":"-"},"content":"    private Model expectedModel \u003d new ModelManager();","lastModifiedDate":"2018-12-09"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-08"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    public void execute_exit_success() {","lastModifiedDate":"2017-06-08"},{"lineNumber":18,"author":{"gitId":"DannyDakota"},"content":"        CommandResult expectedCommandResult \u003d new CommandResult(MESSAGE_EXIT_ACKNOWLEDGEMENT, false,","lastModifiedDate":"2022-03-31"},{"lineNumber":19,"author":{"gitId":"DannyDakota"},"content":"                true, false, false, false);","lastModifiedDate":"2022-03-31"},{"lineNumber":20,"author":{"gitId":"-"},"content":"        assertCommandSuccess(new ExitCommand(), model, expectedCommandResult, expectedModel);","lastModifiedDate":"2019-01-25"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-08"},{"lineNumber":22,"author":{"gitId":"cwq2326"},"content":"","lastModifiedDate":"2022-03-28"},{"lineNumber":23,"author":{"gitId":"cwq2326"},"content":"    @Test","lastModifiedDate":"2022-03-28"},{"lineNumber":24,"author":{"gitId":"cwq2326"},"content":"    public void test_exitCommandWordIsCorrect() {","lastModifiedDate":"2022-03-28"},{"lineNumber":25,"author":{"gitId":"cwq2326"},"content":"        assertTrue(ExitCommand.COMMAND_WORD.equals(\"exit\"));","lastModifiedDate":"2022-03-28"},{"lineNumber":26,"author":{"gitId":"cwq2326"},"content":"    }","lastModifiedDate":"2022-03-28"},{"lineNumber":27,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-06-08"}],"authorContributionMap":{"DannyDakota":2,"cwq2326":6,"-":19}},{"path":"src/test/java/seedu/address/logic/commands/FilterCommandTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"tanchinkiat99"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2022-03-14"},{"lineNumber":2,"author":{"gitId":"tanchinkiat99"},"content":"","lastModifiedDate":"2022-03-14"},{"lineNumber":3,"author":{"gitId":"tanchinkiat99"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2022-03-14"},{"lineNumber":4,"author":{"gitId":"tanchinkiat99"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2022-03-14"},{"lineNumber":5,"author":{"gitId":"tanchinkiat99"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_BLOCK_BOB;","lastModifiedDate":"2022-03-22"},{"lineNumber":6,"author":{"gitId":"tanchinkiat99"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_COVID_STATUS_BOB;","lastModifiedDate":"2022-03-22"},{"lineNumber":7,"author":{"gitId":"tanchinkiat99"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_FACULTY_AMY;","lastModifiedDate":"2022-03-22"},{"lineNumber":8,"author":{"gitId":"tanchinkiat99"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_FACULTY_BOB;","lastModifiedDate":"2022-03-22"},{"lineNumber":9,"author":{"gitId":"tanchinkiat99"},"content":"import static seedu.address.logic.commands.CommandTestUtil.assertCommandSuccess;","lastModifiedDate":"2022-03-14"},{"lineNumber":10,"author":{"gitId":"tanchinkiat99"},"content":"import static seedu.address.logic.commands.FilterCommand.MESSAGE_SUCCESS;","lastModifiedDate":"2022-03-14"},{"lineNumber":11,"author":{"gitId":"tanchinkiat99"},"content":"import static seedu.address.testutil.TypicalPersons.getTypicalAddressBook;","lastModifiedDate":"2022-03-14"},{"lineNumber":12,"author":{"gitId":"tanchinkiat99"},"content":"","lastModifiedDate":"2022-03-14"},{"lineNumber":13,"author":{"gitId":"tanchinkiat99"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2022-03-14"},{"lineNumber":14,"author":{"gitId":"tanchinkiat99"},"content":"","lastModifiedDate":"2022-03-14"},{"lineNumber":15,"author":{"gitId":"tanchinkiat99"},"content":"import seedu.address.logic.commands.FilterCommand.FilterDescriptor;","lastModifiedDate":"2022-03-22"},{"lineNumber":16,"author":{"gitId":"tanchinkiat99"},"content":"import seedu.address.model.AddressBook;","lastModifiedDate":"2022-03-22"},{"lineNumber":17,"author":{"gitId":"tanchinkiat99"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2022-03-14"},{"lineNumber":18,"author":{"gitId":"tanchinkiat99"},"content":"import seedu.address.model.ModelManager;","lastModifiedDate":"2022-03-14"},{"lineNumber":19,"author":{"gitId":"tanchinkiat99"},"content":"import seedu.address.model.UserPrefs;","lastModifiedDate":"2022-03-14"},{"lineNumber":20,"author":{"gitId":"tanchinkiat99"},"content":"import seedu.address.model.person.Block;","lastModifiedDate":"2022-03-22"},{"lineNumber":21,"author":{"gitId":"tanchinkiat99"},"content":"import seedu.address.model.person.CovidStatus;","lastModifiedDate":"2022-03-14"},{"lineNumber":22,"author":{"gitId":"tanchinkiat99"},"content":"import seedu.address.model.person.Faculty;","lastModifiedDate":"2022-03-22"},{"lineNumber":23,"author":{"gitId":"tanchinkiat99"},"content":"","lastModifiedDate":"2022-03-14"},{"lineNumber":24,"author":{"gitId":"tanchinkiat99"},"content":"","lastModifiedDate":"2022-03-22"},{"lineNumber":25,"author":{"gitId":"tanchinkiat99"},"content":"/**","lastModifiedDate":"2022-03-14"},{"lineNumber":26,"author":{"gitId":"tanchinkiat99"},"content":" * Contains integration tests (interaction with the Model) for {@code FindCommand}.","lastModifiedDate":"2022-03-14"},{"lineNumber":27,"author":{"gitId":"tanchinkiat99"},"content":" */","lastModifiedDate":"2022-03-14"},{"lineNumber":28,"author":{"gitId":"tanchinkiat99"},"content":"public class FilterCommandTest {","lastModifiedDate":"2022-03-14"},{"lineNumber":29,"author":{"gitId":"tanchinkiat99"},"content":"","lastModifiedDate":"2022-03-22"},{"lineNumber":30,"author":{"gitId":"tanchinkiat99"},"content":"    private Model model \u003d new ModelManager(getTypicalAddressBook(), new UserPrefs());","lastModifiedDate":"2022-03-22"},{"lineNumber":31,"author":{"gitId":"tanchinkiat99"},"content":"","lastModifiedDate":"2022-03-22"},{"lineNumber":32,"author":{"gitId":"tanchinkiat99"},"content":"    @Test","lastModifiedDate":"2022-03-22"},{"lineNumber":33,"author":{"gitId":"tanchinkiat99"},"content":"    public void execute_someFieldsSpecifiedUnfilteredList_success() {","lastModifiedDate":"2022-03-22"},{"lineNumber":34,"author":{"gitId":"tanchinkiat99"},"content":"        Faculty faculty \u003d new Faculty(VALID_FACULTY_BOB);","lastModifiedDate":"2022-03-22"},{"lineNumber":35,"author":{"gitId":"tanchinkiat99"},"content":"        CovidStatus status \u003d new CovidStatus(VALID_COVID_STATUS_BOB);","lastModifiedDate":"2022-03-22"},{"lineNumber":36,"author":{"gitId":"tanchinkiat99"},"content":"        Block block \u003d new Block(VALID_BLOCK_BOB);","lastModifiedDate":"2022-03-22"},{"lineNumber":37,"author":{"gitId":"tanchinkiat99"},"content":"        CommandResult expectedCommandResult \u003d new CommandResult(MESSAGE_SUCCESS);","lastModifiedDate":"2022-03-22"},{"lineNumber":38,"author":{"gitId":"tanchinkiat99"},"content":"        Model expectedModel \u003d new ModelManager(new AddressBook(model.getAddressBook()), new UserPrefs());","lastModifiedDate":"2022-03-22"},{"lineNumber":39,"author":{"gitId":"tanchinkiat99"},"content":"","lastModifiedDate":"2022-03-22"},{"lineNumber":40,"author":{"gitId":"tanchinkiat99"},"content":"        // only faculty specified","lastModifiedDate":"2022-03-22"},{"lineNumber":41,"author":{"gitId":"tanchinkiat99"},"content":"        FilterDescriptor descriptorFaculty \u003d new FilterDescriptor();","lastModifiedDate":"2022-03-22"},{"lineNumber":42,"author":{"gitId":"tanchinkiat99"},"content":"        descriptorFaculty.setFaculty(faculty);","lastModifiedDate":"2022-03-22"},{"lineNumber":43,"author":{"gitId":"tanchinkiat99"},"content":"        FilterCommand commandFaculty \u003d new FilterCommand(descriptorFaculty);","lastModifiedDate":"2022-03-22"},{"lineNumber":44,"author":{"gitId":"tanchinkiat99"},"content":"        expectedModel.updateFilteredPersonList(person -\u003e person.isFaculty(faculty));","lastModifiedDate":"2022-03-22"},{"lineNumber":45,"author":{"gitId":"tanchinkiat99"},"content":"","lastModifiedDate":"2022-03-22"},{"lineNumber":46,"author":{"gitId":"tanchinkiat99"},"content":"        assertCommandSuccess(commandFaculty, model, expectedCommandResult, expectedModel);","lastModifiedDate":"2022-03-22"},{"lineNumber":47,"author":{"gitId":"tanchinkiat99"},"content":"","lastModifiedDate":"2022-03-22"},{"lineNumber":48,"author":{"gitId":"tanchinkiat99"},"content":"        // only covid status specified","lastModifiedDate":"2022-03-22"},{"lineNumber":49,"author":{"gitId":"tanchinkiat99"},"content":"        FilterDescriptor descriptorStatus \u003d new FilterDescriptor();","lastModifiedDate":"2022-03-22"},{"lineNumber":50,"author":{"gitId":"tanchinkiat99"},"content":"        descriptorStatus.setCovidStatus(status);","lastModifiedDate":"2022-03-22"},{"lineNumber":51,"author":{"gitId":"tanchinkiat99"},"content":"        FilterCommand commandStatus \u003d new FilterCommand(descriptorStatus);","lastModifiedDate":"2022-03-22"},{"lineNumber":52,"author":{"gitId":"tanchinkiat99"},"content":"        expectedModel.updateFilteredPersonList(person -\u003e person.isStatus(status));","lastModifiedDate":"2022-03-22"},{"lineNumber":53,"author":{"gitId":"tanchinkiat99"},"content":"","lastModifiedDate":"2022-03-22"},{"lineNumber":54,"author":{"gitId":"tanchinkiat99"},"content":"        assertCommandSuccess(commandStatus, model, expectedCommandResult, expectedModel);","lastModifiedDate":"2022-03-22"},{"lineNumber":55,"author":{"gitId":"tanchinkiat99"},"content":"","lastModifiedDate":"2022-03-22"},{"lineNumber":56,"author":{"gitId":"tanchinkiat99"},"content":"        // only block specified","lastModifiedDate":"2022-03-22"},{"lineNumber":57,"author":{"gitId":"tanchinkiat99"},"content":"        FilterDescriptor descriptorBlock \u003d new FilterDescriptor();","lastModifiedDate":"2022-03-22"},{"lineNumber":58,"author":{"gitId":"tanchinkiat99"},"content":"        descriptorBlock.setBlock(block);","lastModifiedDate":"2022-03-22"},{"lineNumber":59,"author":{"gitId":"tanchinkiat99"},"content":"        FilterCommand commandBlock \u003d new FilterCommand(descriptorBlock);","lastModifiedDate":"2022-03-22"},{"lineNumber":60,"author":{"gitId":"tanchinkiat99"},"content":"        expectedModel.updateFilteredPersonList(person -\u003e person.isBlock(block));","lastModifiedDate":"2022-03-22"},{"lineNumber":61,"author":{"gitId":"tanchinkiat99"},"content":"","lastModifiedDate":"2022-03-22"},{"lineNumber":62,"author":{"gitId":"tanchinkiat99"},"content":"        assertCommandSuccess(commandBlock, model, expectedCommandResult, expectedModel);","lastModifiedDate":"2022-03-22"},{"lineNumber":63,"author":{"gitId":"tanchinkiat99"},"content":"","lastModifiedDate":"2022-03-22"},{"lineNumber":64,"author":{"gitId":"tanchinkiat99"},"content":"        // only faculty and covid status specified","lastModifiedDate":"2022-03-22"},{"lineNumber":65,"author":{"gitId":"tanchinkiat99"},"content":"        FilterDescriptor descriptorFacultyAndStatus \u003d new FilterDescriptor();","lastModifiedDate":"2022-03-22"},{"lineNumber":66,"author":{"gitId":"tanchinkiat99"},"content":"        descriptorFacultyAndStatus.setFaculty(faculty);","lastModifiedDate":"2022-03-22"},{"lineNumber":67,"author":{"gitId":"tanchinkiat99"},"content":"        descriptorFacultyAndStatus.setCovidStatus(status);","lastModifiedDate":"2022-03-22"},{"lineNumber":68,"author":{"gitId":"tanchinkiat99"},"content":"        FilterCommand commandFacultyAndStatus \u003d new FilterCommand(descriptorFacultyAndStatus);","lastModifiedDate":"2022-03-22"},{"lineNumber":69,"author":{"gitId":"tanchinkiat99"},"content":"        expectedModel.updateFilteredPersonList(person -\u003e person.isFaculty(faculty) \u0026\u0026 person.isStatus(status));","lastModifiedDate":"2022-03-22"},{"lineNumber":70,"author":{"gitId":"tanchinkiat99"},"content":"","lastModifiedDate":"2022-03-22"},{"lineNumber":71,"author":{"gitId":"tanchinkiat99"},"content":"        assertCommandSuccess(commandFacultyAndStatus, model, expectedCommandResult, expectedModel);","lastModifiedDate":"2022-03-22"},{"lineNumber":72,"author":{"gitId":"tanchinkiat99"},"content":"","lastModifiedDate":"2022-03-22"},{"lineNumber":73,"author":{"gitId":"tanchinkiat99"},"content":"        // only faculty and block specified","lastModifiedDate":"2022-03-22"},{"lineNumber":74,"author":{"gitId":"tanchinkiat99"},"content":"        FilterDescriptor descriptorFacultyAndBlock \u003d new FilterDescriptor();","lastModifiedDate":"2022-03-22"},{"lineNumber":75,"author":{"gitId":"tanchinkiat99"},"content":"        descriptorFacultyAndBlock.setFaculty(faculty);","lastModifiedDate":"2022-03-22"},{"lineNumber":76,"author":{"gitId":"tanchinkiat99"},"content":"        descriptorFacultyAndBlock.setBlock(block);","lastModifiedDate":"2022-03-22"},{"lineNumber":77,"author":{"gitId":"tanchinkiat99"},"content":"        FilterCommand commandFacultyAndBlock \u003d new FilterCommand(descriptorFacultyAndBlock);","lastModifiedDate":"2022-03-22"},{"lineNumber":78,"author":{"gitId":"tanchinkiat99"},"content":"        expectedModel.updateFilteredPersonList(person -\u003e person.isFaculty(faculty) \u0026\u0026 person.isBlock(block));","lastModifiedDate":"2022-03-22"},{"lineNumber":79,"author":{"gitId":"tanchinkiat99"},"content":"","lastModifiedDate":"2022-03-22"},{"lineNumber":80,"author":{"gitId":"tanchinkiat99"},"content":"        assertCommandSuccess(commandFacultyAndBlock, model, expectedCommandResult, expectedModel);","lastModifiedDate":"2022-03-22"},{"lineNumber":81,"author":{"gitId":"tanchinkiat99"},"content":"","lastModifiedDate":"2022-03-22"},{"lineNumber":82,"author":{"gitId":"tanchinkiat99"},"content":"        // only covid status and block specified","lastModifiedDate":"2022-03-22"},{"lineNumber":83,"author":{"gitId":"tanchinkiat99"},"content":"        FilterDescriptor descriptorStatusAndBlock \u003d new FilterDescriptor();","lastModifiedDate":"2022-03-22"},{"lineNumber":84,"author":{"gitId":"tanchinkiat99"},"content":"        descriptorStatusAndBlock.setCovidStatus(status);","lastModifiedDate":"2022-03-22"},{"lineNumber":85,"author":{"gitId":"tanchinkiat99"},"content":"        descriptorStatusAndBlock.setBlock(block);","lastModifiedDate":"2022-03-22"},{"lineNumber":86,"author":{"gitId":"tanchinkiat99"},"content":"        FilterCommand commandStatusAndBlock \u003d new FilterCommand(descriptorStatusAndBlock);","lastModifiedDate":"2022-03-22"},{"lineNumber":87,"author":{"gitId":"tanchinkiat99"},"content":"        expectedModel.updateFilteredPersonList(person -\u003e person.isStatus(status) \u0026\u0026 person.isBlock(block));","lastModifiedDate":"2022-03-22"},{"lineNumber":88,"author":{"gitId":"tanchinkiat99"},"content":"","lastModifiedDate":"2022-03-22"},{"lineNumber":89,"author":{"gitId":"tanchinkiat99"},"content":"        assertCommandSuccess(commandStatusAndBlock, model, expectedCommandResult, expectedModel);","lastModifiedDate":"2022-03-22"},{"lineNumber":90,"author":{"gitId":"tanchinkiat99"},"content":"    }","lastModifiedDate":"2022-03-22"},{"lineNumber":91,"author":{"gitId":"tanchinkiat99"},"content":"","lastModifiedDate":"2022-03-22"},{"lineNumber":92,"author":{"gitId":"tanchinkiat99"},"content":"    @Test","lastModifiedDate":"2022-03-22"},{"lineNumber":93,"author":{"gitId":"tanchinkiat99"},"content":"    public void execute_allFieldsSpecifiedUnfilteredList_success() {","lastModifiedDate":"2022-03-22"},{"lineNumber":94,"author":{"gitId":"tanchinkiat99"},"content":"        // all fields specified","lastModifiedDate":"2022-03-22"},{"lineNumber":95,"author":{"gitId":"tanchinkiat99"},"content":"        FilterDescriptor filterDescriptor \u003d new FilterDescriptor();","lastModifiedDate":"2022-03-22"},{"lineNumber":96,"author":{"gitId":"tanchinkiat99"},"content":"        Faculty faculty \u003d new Faculty(VALID_FACULTY_BOB);","lastModifiedDate":"2022-03-22"},{"lineNumber":97,"author":{"gitId":"tanchinkiat99"},"content":"        CovidStatus status \u003d new CovidStatus(VALID_COVID_STATUS_BOB);","lastModifiedDate":"2022-03-22"},{"lineNumber":98,"author":{"gitId":"tanchinkiat99"},"content":"        Block block \u003d new Block(VALID_BLOCK_BOB);","lastModifiedDate":"2022-03-22"},{"lineNumber":99,"author":{"gitId":"tanchinkiat99"},"content":"        filterDescriptor.setFaculty(faculty);","lastModifiedDate":"2022-03-22"},{"lineNumber":100,"author":{"gitId":"tanchinkiat99"},"content":"        filterDescriptor.setCovidStatus(status);","lastModifiedDate":"2022-03-22"},{"lineNumber":101,"author":{"gitId":"tanchinkiat99"},"content":"        filterDescriptor.setBlock(block);","lastModifiedDate":"2022-03-22"},{"lineNumber":102,"author":{"gitId":"tanchinkiat99"},"content":"        FilterCommand command \u003d new FilterCommand(filterDescriptor);","lastModifiedDate":"2022-03-22"},{"lineNumber":103,"author":{"gitId":"tanchinkiat99"},"content":"","lastModifiedDate":"2022-03-22"},{"lineNumber":104,"author":{"gitId":"tanchinkiat99"},"content":"        CommandResult expectedCommandResult \u003d new CommandResult(MESSAGE_SUCCESS);","lastModifiedDate":"2022-03-22"},{"lineNumber":105,"author":{"gitId":"tanchinkiat99"},"content":"        Model expectedModel \u003d new ModelManager(new AddressBook(model.getAddressBook()), new UserPrefs());","lastModifiedDate":"2022-03-22"},{"lineNumber":106,"author":{"gitId":"tanchinkiat99"},"content":"        expectedModel.updateFilteredPersonList(person -\u003e person.isFaculty(faculty) \u0026\u0026 person.isStatus(status)","lastModifiedDate":"2022-03-22"},{"lineNumber":107,"author":{"gitId":"tanchinkiat99"},"content":"                \u0026\u0026 person.isBlock(block));","lastModifiedDate":"2022-03-22"},{"lineNumber":108,"author":{"gitId":"tanchinkiat99"},"content":"","lastModifiedDate":"2022-03-22"},{"lineNumber":109,"author":{"gitId":"tanchinkiat99"},"content":"        assertCommandSuccess(command, model, expectedCommandResult, expectedModel);","lastModifiedDate":"2022-03-22"},{"lineNumber":110,"author":{"gitId":"tanchinkiat99"},"content":"    }","lastModifiedDate":"2022-03-22"},{"lineNumber":111,"author":{"gitId":"tanchinkiat99"},"content":"","lastModifiedDate":"2022-03-22"},{"lineNumber":112,"author":{"gitId":"tanchinkiat99"},"content":"    @Test","lastModifiedDate":"2022-03-22"},{"lineNumber":113,"author":{"gitId":"tanchinkiat99"},"content":"    public void equals() {","lastModifiedDate":"2022-03-22"},{"lineNumber":114,"author":{"gitId":"tanchinkiat99"},"content":"","lastModifiedDate":"2022-03-22"},{"lineNumber":115,"author":{"gitId":"tanchinkiat99"},"content":"        FilterDescriptor firstFilterDescriptor \u003d new FilterDescriptor();","lastModifiedDate":"2022-03-22"},{"lineNumber":116,"author":{"gitId":"tanchinkiat99"},"content":"        FilterDescriptor secondFilterDescriptor \u003d new FilterDescriptor();","lastModifiedDate":"2022-03-22"},{"lineNumber":117,"author":{"gitId":"tanchinkiat99"},"content":"","lastModifiedDate":"2022-03-22"},{"lineNumber":118,"author":{"gitId":"tanchinkiat99"},"content":"        CovidStatus firstStatus \u003d new CovidStatus(VALID_COVID_STATUS_BOB);","lastModifiedDate":"2022-03-22"},{"lineNumber":119,"author":{"gitId":"tanchinkiat99"},"content":"        Faculty firstFaculty \u003d new Faculty(VALID_FACULTY_BOB);","lastModifiedDate":"2022-03-22"},{"lineNumber":120,"author":{"gitId":"tanchinkiat99"},"content":"        Block firstBlock \u003d new Block(VALID_BLOCK_BOB);","lastModifiedDate":"2022-03-22"},{"lineNumber":121,"author":{"gitId":"tanchinkiat99"},"content":"","lastModifiedDate":"2022-03-22"},{"lineNumber":122,"author":{"gitId":"tanchinkiat99"},"content":"        Faculty secondFaculty \u003d new Faculty(VALID_FACULTY_AMY);","lastModifiedDate":"2022-03-22"},{"lineNumber":123,"author":{"gitId":"tanchinkiat99"},"content":"","lastModifiedDate":"2022-03-22"},{"lineNumber":124,"author":{"gitId":"tanchinkiat99"},"content":"        firstFilterDescriptor.setCovidStatus(firstStatus);","lastModifiedDate":"2022-03-22"},{"lineNumber":125,"author":{"gitId":"tanchinkiat99"},"content":"        firstFilterDescriptor.setFaculty(firstFaculty);","lastModifiedDate":"2022-03-22"},{"lineNumber":126,"author":{"gitId":"tanchinkiat99"},"content":"        firstFilterDescriptor.setBlock(firstBlock);","lastModifiedDate":"2022-03-22"},{"lineNumber":127,"author":{"gitId":"tanchinkiat99"},"content":"","lastModifiedDate":"2022-03-22"},{"lineNumber":128,"author":{"gitId":"tanchinkiat99"},"content":"        secondFilterDescriptor.setFaculty(secondFaculty);","lastModifiedDate":"2022-03-22"},{"lineNumber":129,"author":{"gitId":"tanchinkiat99"},"content":"","lastModifiedDate":"2022-03-22"},{"lineNumber":130,"author":{"gitId":"tanchinkiat99"},"content":"        FilterCommand firstFilterCommand \u003d new FilterCommand(firstFilterDescriptor);","lastModifiedDate":"2022-03-22"},{"lineNumber":131,"author":{"gitId":"tanchinkiat99"},"content":"        FilterCommand secondFilterCommand \u003d new FilterCommand(secondFilterDescriptor);","lastModifiedDate":"2022-03-22"},{"lineNumber":132,"author":{"gitId":"tanchinkiat99"},"content":"","lastModifiedDate":"2022-03-22"},{"lineNumber":133,"author":{"gitId":"tanchinkiat99"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2022-03-22"},{"lineNumber":134,"author":{"gitId":"tanchinkiat99"},"content":"        assertTrue(firstFilterCommand.equals(firstFilterCommand));","lastModifiedDate":"2022-03-22"},{"lineNumber":135,"author":{"gitId":"tanchinkiat99"},"content":"","lastModifiedDate":"2022-03-22"},{"lineNumber":136,"author":{"gitId":"tanchinkiat99"},"content":"        // same values -\u003e returns true","lastModifiedDate":"2022-03-22"},{"lineNumber":137,"author":{"gitId":"tanchinkiat99"},"content":"        FilterCommand firstFilterCommandCopy \u003d new FilterCommand(firstFilterDescriptor);","lastModifiedDate":"2022-03-22"},{"lineNumber":138,"author":{"gitId":"tanchinkiat99"},"content":"        assertTrue(firstFilterCommand.equals(firstFilterCommandCopy));","lastModifiedDate":"2022-03-22"},{"lineNumber":139,"author":{"gitId":"tanchinkiat99"},"content":"","lastModifiedDate":"2022-03-22"},{"lineNumber":140,"author":{"gitId":"tanchinkiat99"},"content":"        // different types -\u003e returns false","lastModifiedDate":"2022-03-22"},{"lineNumber":141,"author":{"gitId":"tanchinkiat99"},"content":"        assertFalse(firstFilterCommand.equals(1));","lastModifiedDate":"2022-03-22"},{"lineNumber":142,"author":{"gitId":"tanchinkiat99"},"content":"","lastModifiedDate":"2022-03-22"},{"lineNumber":143,"author":{"gitId":"tanchinkiat99"},"content":"        // null -\u003e returns false","lastModifiedDate":"2022-03-22"},{"lineNumber":144,"author":{"gitId":"tanchinkiat99"},"content":"        assertFalse(firstFilterCommand.equals(null));","lastModifiedDate":"2022-03-22"},{"lineNumber":145,"author":{"gitId":"tanchinkiat99"},"content":"","lastModifiedDate":"2022-03-22"},{"lineNumber":146,"author":{"gitId":"tanchinkiat99"},"content":"        // different person -\u003e returns false","lastModifiedDate":"2022-03-22"},{"lineNumber":147,"author":{"gitId":"tanchinkiat99"},"content":"        assertFalse(firstFilterCommand.equals(secondFilterCommand));","lastModifiedDate":"2022-03-22"},{"lineNumber":148,"author":{"gitId":"tanchinkiat99"},"content":"    }","lastModifiedDate":"2022-03-22"},{"lineNumber":149,"author":{"gitId":"cwq2326"},"content":"","lastModifiedDate":"2022-03-28"},{"lineNumber":150,"author":{"gitId":"cwq2326"},"content":"    @Test","lastModifiedDate":"2022-03-28"},{"lineNumber":151,"author":{"gitId":"cwq2326"},"content":"    public void test_filterCommandWordIsCorrect() {","lastModifiedDate":"2022-03-28"},{"lineNumber":152,"author":{"gitId":"cwq2326"},"content":"        assertTrue(FilterCommand.COMMAND_WORD.equals(\"filter\"));","lastModifiedDate":"2022-03-28"},{"lineNumber":153,"author":{"gitId":"cwq2326"},"content":"    }","lastModifiedDate":"2022-03-28"},{"lineNumber":154,"author":{"gitId":"tanchinkiat99"},"content":"}","lastModifiedDate":"2022-03-14"}],"authorContributionMap":{"tanchinkiat99":149,"cwq2326":5}},{"path":"src/test/java/seedu/address/logic/commands/FindCommandTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2017-06-12"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2019-03-15"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import static seedu.address.commons.core.Messages.MESSAGE_PERSONS_LISTED_OVERVIEW;","lastModifiedDate":"2017-06-12"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.assertCommandSuccess;","lastModifiedDate":"2018-08-08"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.TypicalPersons.CARL;","lastModifiedDate":"2017-07-19"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.TypicalPersons.ELLE;","lastModifiedDate":"2017-07-19"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.TypicalPersons.FIONA;","lastModifiedDate":"2017-07-19"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.TypicalPersons.getTypicalAddressBook;","lastModifiedDate":"2017-07-19"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import java.util.Arrays;","lastModifiedDate":"2017-06-12"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import java.util.Collections;","lastModifiedDate":"2017-06-12"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":16,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":18,"author":{"gitId":"-"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2017-06-12"},{"lineNumber":19,"author":{"gitId":"-"},"content":"import seedu.address.model.ModelManager;","lastModifiedDate":"2017-06-12"},{"lineNumber":20,"author":{"gitId":"-"},"content":"import seedu.address.model.UserPrefs;","lastModifiedDate":"2017-06-12"},{"lineNumber":21,"author":{"gitId":"-"},"content":"import seedu.address.model.person.NameContainsKeywordsPredicate;","lastModifiedDate":"2017-06-12"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":23,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-06-12"},{"lineNumber":24,"author":{"gitId":"-"},"content":" * Contains integration tests (interaction with the Model) for {@code FindCommand}.","lastModifiedDate":"2017-06-12"},{"lineNumber":25,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-06-12"},{"lineNumber":26,"author":{"gitId":"-"},"content":"public class FindCommandTest {","lastModifiedDate":"2017-06-12"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    private Model model \u003d new ModelManager(getTypicalAddressBook(), new UserPrefs());","lastModifiedDate":"2017-07-19"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    private Model expectedModel \u003d new ModelManager(getTypicalAddressBook(), new UserPrefs());","lastModifiedDate":"2018-08-08"},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-27"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    public void equals() {","lastModifiedDate":"2017-06-27"},{"lineNumber":32,"author":{"gitId":"-"},"content":"        NameContainsKeywordsPredicate firstPredicate \u003d","lastModifiedDate":"2017-06-12"},{"lineNumber":33,"author":{"gitId":"-"},"content":"                new NameContainsKeywordsPredicate(Collections.singletonList(\"first\"));","lastModifiedDate":"2017-06-12"},{"lineNumber":34,"author":{"gitId":"-"},"content":"        NameContainsKeywordsPredicate secondPredicate \u003d","lastModifiedDate":"2017-06-12"},{"lineNumber":35,"author":{"gitId":"-"},"content":"                new NameContainsKeywordsPredicate(Collections.singletonList(\"second\"));","lastModifiedDate":"2017-06-12"},{"lineNumber":36,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        FindCommand findFirstCommand \u003d new FindCommand(firstPredicate);","lastModifiedDate":"2017-06-12"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        FindCommand findSecondCommand \u003d new FindCommand(secondPredicate);","lastModifiedDate":"2017-06-12"},{"lineNumber":39,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":40,"author":{"gitId":"-"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2017-06-27"},{"lineNumber":41,"author":{"gitId":"-"},"content":"        assertTrue(findFirstCommand.equals(findFirstCommand));","lastModifiedDate":"2017-06-27"},{"lineNumber":42,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        // same values -\u003e returns true","lastModifiedDate":"2017-06-27"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        FindCommand findFirstCommandCopy \u003d new FindCommand(firstPredicate);","lastModifiedDate":"2017-06-12"},{"lineNumber":45,"author":{"gitId":"-"},"content":"        assertTrue(findFirstCommand.equals(findFirstCommandCopy));","lastModifiedDate":"2017-06-27"},{"lineNumber":46,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":47,"author":{"gitId":"-"},"content":"        // different types -\u003e returns false","lastModifiedDate":"2017-06-27"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        assertFalse(findFirstCommand.equals(1));","lastModifiedDate":"2017-06-27"},{"lineNumber":49,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":50,"author":{"gitId":"-"},"content":"        // null -\u003e returns false","lastModifiedDate":"2017-06-27"},{"lineNumber":51,"author":{"gitId":"-"},"content":"        assertFalse(findFirstCommand.equals(null));","lastModifiedDate":"2017-06-27"},{"lineNumber":52,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":53,"author":{"gitId":"-"},"content":"        // different person -\u003e returns false","lastModifiedDate":"2017-06-27"},{"lineNumber":54,"author":{"gitId":"-"},"content":"        assertFalse(findFirstCommand.equals(findSecondCommand));","lastModifiedDate":"2017-06-27"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-27"},{"lineNumber":56,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-12"},{"lineNumber":58,"author":{"gitId":"-"},"content":"    public void execute_zeroKeywords_noPersonFound() {","lastModifiedDate":"2017-08-15"},{"lineNumber":59,"author":{"gitId":"jiale-c"},"content":"        // no keywords -\u003e no list","lastModifiedDate":"2022-03-30"},{"lineNumber":60,"author":{"gitId":"-"},"content":"        String expectedMessage \u003d String.format(MESSAGE_PERSONS_LISTED_OVERVIEW, 0);","lastModifiedDate":"2017-06-12"},{"lineNumber":61,"author":{"gitId":"-"},"content":"        NameContainsKeywordsPredicate predicate \u003d preparePredicate(\" \");","lastModifiedDate":"2018-08-08"},{"lineNumber":62,"author":{"gitId":"-"},"content":"        FindCommand command \u003d new FindCommand(predicate);","lastModifiedDate":"2018-08-08"},{"lineNumber":63,"author":{"gitId":"-"},"content":"        expectedModel.updateFilteredPersonList(predicate);","lastModifiedDate":"2018-08-08"},{"lineNumber":64,"author":{"gitId":"-"},"content":"        assertCommandSuccess(command, model, expectedMessage, expectedModel);","lastModifiedDate":"2019-01-25"},{"lineNumber":65,"author":{"gitId":"-"},"content":"        assertEquals(Collections.emptyList(), model.getFilteredPersonList());","lastModifiedDate":"2018-08-08"},{"lineNumber":66,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-12"},{"lineNumber":67,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":68,"author":{"gitId":"jiale-c"},"content":"    @Test","lastModifiedDate":"2022-03-30"},{"lineNumber":69,"author":{"gitId":"jiale-c"},"content":"    public void execute_oneKeyword_onePersonFound() {","lastModifiedDate":"2022-03-30"},{"lineNumber":70,"author":{"gitId":"jiale-c"},"content":"        // One name inputted and only one person has this name -\u003e one person shown","lastModifiedDate":"2022-03-30"},{"lineNumber":71,"author":{"gitId":"jiale-c"},"content":"        String expectedMessage \u003d String.format(MESSAGE_PERSONS_LISTED_OVERVIEW, 1);","lastModifiedDate":"2022-03-30"},{"lineNumber":72,"author":{"gitId":"jiale-c"},"content":"        NameContainsKeywordsPredicate predicate \u003d preparePredicate(\"Elle\");","lastModifiedDate":"2022-03-30"},{"lineNumber":73,"author":{"gitId":"jiale-c"},"content":"        FindCommand command \u003d new FindCommand(predicate);","lastModifiedDate":"2022-03-30"},{"lineNumber":74,"author":{"gitId":"jiale-c"},"content":"        expectedModel.updateFilteredPersonList(predicate);","lastModifiedDate":"2022-03-30"},{"lineNumber":75,"author":{"gitId":"jiale-c"},"content":"        assertCommandSuccess(command, model, expectedMessage, expectedModel);","lastModifiedDate":"2022-03-30"},{"lineNumber":76,"author":{"gitId":"jiale-c"},"content":"        assertEquals(Arrays.asList(ELLE), model.getFilteredPersonList());","lastModifiedDate":"2022-03-30"},{"lineNumber":77,"author":{"gitId":"jiale-c"},"content":"    }","lastModifiedDate":"2022-03-30"},{"lineNumber":78,"author":{"gitId":"jiale-c"},"content":"","lastModifiedDate":"2022-03-30"},{"lineNumber":79,"author":{"gitId":"jiale-c"},"content":"    @Test","lastModifiedDate":"2022-03-30"},{"lineNumber":80,"author":{"gitId":"jiale-c"},"content":"    public void execute_oneKeywordWithLessRestrictions_onePersonFound() {","lastModifiedDate":"2022-03-30"},{"lineNumber":81,"author":{"gitId":"jiale-c"},"content":"        // One incomplete inputted keyword and only one person has this incomplete keyword in name -\u003e one person shown","lastModifiedDate":"2022-03-30"},{"lineNumber":82,"author":{"gitId":"jiale-c"},"content":"        String expectedMessage \u003d String.format(MESSAGE_PERSONS_LISTED_OVERVIEW, 1);","lastModifiedDate":"2022-03-30"},{"lineNumber":83,"author":{"gitId":"jiale-c"},"content":"        NameContainsKeywordsPredicate predicate \u003d preparePredicate(\"E\");","lastModifiedDate":"2022-03-30"},{"lineNumber":84,"author":{"gitId":"jiale-c"},"content":"        FindCommand command \u003d new FindCommand(predicate);","lastModifiedDate":"2022-03-30"},{"lineNumber":85,"author":{"gitId":"jiale-c"},"content":"        expectedModel.updateFilteredPersonList(predicate);","lastModifiedDate":"2022-03-30"},{"lineNumber":86,"author":{"gitId":"jiale-c"},"content":"        assertCommandSuccess(command, model, expectedMessage, expectedModel);","lastModifiedDate":"2022-03-30"},{"lineNumber":87,"author":{"gitId":"jiale-c"},"content":"        assertEquals(Arrays.asList(ELLE), model.getFilteredPersonList());","lastModifiedDate":"2022-03-30"},{"lineNumber":88,"author":{"gitId":"jiale-c"},"content":"    }","lastModifiedDate":"2022-03-30"},{"lineNumber":89,"author":{"gitId":"jiale-c"},"content":"","lastModifiedDate":"2022-03-30"},{"lineNumber":90,"author":{"gitId":"jiale-c"},"content":"    @Test","lastModifiedDate":"2022-03-30"},{"lineNumber":91,"author":{"gitId":"jiale-c"},"content":"    public void execute_oneCorrectAndOneWrongKeyword_onePersonFound() {","lastModifiedDate":"2022-03-30"},{"lineNumber":92,"author":{"gitId":"jiale-c"},"content":"        // Two names inputted but only one can be found in the list -\u003e one person shown","lastModifiedDate":"2022-03-30"},{"lineNumber":93,"author":{"gitId":"jiale-c"},"content":"        String expectedMessage \u003d String.format(MESSAGE_PERSONS_LISTED_OVERVIEW, 1);","lastModifiedDate":"2022-03-30"},{"lineNumber":94,"author":{"gitId":"jiale-c"},"content":"        NameContainsKeywordsPredicate predicate \u003d preparePredicate(\"Elle Kunnz\");","lastModifiedDate":"2022-03-30"},{"lineNumber":95,"author":{"gitId":"jiale-c"},"content":"        FindCommand command \u003d new FindCommand(predicate);","lastModifiedDate":"2022-03-30"},{"lineNumber":96,"author":{"gitId":"jiale-c"},"content":"        expectedModel.updateFilteredPersonList(predicate);","lastModifiedDate":"2022-03-30"},{"lineNumber":97,"author":{"gitId":"jiale-c"},"content":"        assertCommandSuccess(command, model, expectedMessage, expectedModel);","lastModifiedDate":"2022-03-30"},{"lineNumber":98,"author":{"gitId":"jiale-c"},"content":"        assertEquals(Arrays.asList(ELLE), model.getFilteredPersonList());","lastModifiedDate":"2022-03-30"},{"lineNumber":99,"author":{"gitId":"jiale-c"},"content":"    }","lastModifiedDate":"2022-03-30"},{"lineNumber":100,"author":{"gitId":"jiale-c"},"content":"","lastModifiedDate":"2022-03-30"},{"lineNumber":101,"author":{"gitId":"jiale-c"},"content":"    @Test","lastModifiedDate":"2022-03-30"},{"lineNumber":102,"author":{"gitId":"jiale-c"},"content":"    public void execute_oneIncompleteCorrectAndOneWrongKeyword_onePersonFound() {","lastModifiedDate":"2022-03-30"},{"lineNumber":103,"author":{"gitId":"jiale-c"},"content":"        // Two names inputted but one is incomplete can be found in the list -\u003e one person shown","lastModifiedDate":"2022-03-30"},{"lineNumber":104,"author":{"gitId":"jiale-c"},"content":"        String expectedMessage \u003d String.format(MESSAGE_PERSONS_LISTED_OVERVIEW, 1);","lastModifiedDate":"2022-03-30"},{"lineNumber":105,"author":{"gitId":"jiale-c"},"content":"        NameContainsKeywordsPredicate predicate \u003d preparePredicate(\"El Kunnz\");","lastModifiedDate":"2022-03-30"},{"lineNumber":106,"author":{"gitId":"jiale-c"},"content":"        FindCommand command \u003d new FindCommand(predicate);","lastModifiedDate":"2022-03-30"},{"lineNumber":107,"author":{"gitId":"jiale-c"},"content":"        expectedModel.updateFilteredPersonList(predicate);","lastModifiedDate":"2022-03-30"},{"lineNumber":108,"author":{"gitId":"jiale-c"},"content":"        assertCommandSuccess(command, model, expectedMessage, expectedModel);","lastModifiedDate":"2022-03-30"},{"lineNumber":109,"author":{"gitId":"jiale-c"},"content":"        assertEquals(Arrays.asList(ELLE), model.getFilteredPersonList());","lastModifiedDate":"2022-03-30"},{"lineNumber":110,"author":{"gitId":"jiale-c"},"content":"    }","lastModifiedDate":"2022-03-30"},{"lineNumber":111,"author":{"gitId":"jiale-c"},"content":"","lastModifiedDate":"2022-03-30"},{"lineNumber":112,"author":{"gitId":"jiale-c"},"content":"    @Test","lastModifiedDate":"2022-03-30"},{"lineNumber":113,"author":{"gitId":"jiale-c"},"content":"    public void execute_correctAndWrongKeywordWithLessRestrictions_onePersonFound() {","lastModifiedDate":"2022-03-30"},{"lineNumber":114,"author":{"gitId":"jiale-c"},"content":"        // Two names inputted but one that is incomplete cannot be found in the list -\u003e one person shown","lastModifiedDate":"2022-03-30"},{"lineNumber":115,"author":{"gitId":"jiale-c"},"content":"        String expectedMessage \u003d String.format(MESSAGE_PERSONS_LISTED_OVERVIEW, 1);","lastModifiedDate":"2022-03-30"},{"lineNumber":116,"author":{"gitId":"jiale-c"},"content":"        NameContainsKeywordsPredicate predicate \u003d preparePredicate(\"El Qi\");","lastModifiedDate":"2022-03-30"},{"lineNumber":117,"author":{"gitId":"jiale-c"},"content":"        FindCommand command \u003d new FindCommand(predicate);","lastModifiedDate":"2022-03-30"},{"lineNumber":118,"author":{"gitId":"jiale-c"},"content":"        expectedModel.updateFilteredPersonList(predicate);","lastModifiedDate":"2022-03-30"},{"lineNumber":119,"author":{"gitId":"jiale-c"},"content":"        assertCommandSuccess(command, model, expectedMessage, expectedModel);","lastModifiedDate":"2022-03-30"},{"lineNumber":120,"author":{"gitId":"jiale-c"},"content":"        assertEquals(Arrays.asList(ELLE), model.getFilteredPersonList());","lastModifiedDate":"2022-03-30"},{"lineNumber":121,"author":{"gitId":"jiale-c"},"content":"    }","lastModifiedDate":"2022-03-30"},{"lineNumber":122,"author":{"gitId":"jiale-c"},"content":"","lastModifiedDate":"2022-03-30"},{"lineNumber":123,"author":{"gitId":"jiale-c"},"content":"    @Test","lastModifiedDate":"2022-03-30"},{"lineNumber":124,"author":{"gitId":"jiale-c"},"content":"    public void execute_oneCorrectKeywordWithLessRestriction_multiplePersonFound() {","lastModifiedDate":"2022-03-30"},{"lineNumber":125,"author":{"gitId":"jiale-c"},"content":"        // One incomplete name inputted but more than one person have this name -\u003e multiple people shown","lastModifiedDate":"2022-03-30"},{"lineNumber":126,"author":{"gitId":"jiale-c"},"content":"        String expectedMessage \u003d String.format(MESSAGE_PERSONS_LISTED_OVERVIEW, 2);","lastModifiedDate":"2022-03-30"},{"lineNumber":127,"author":{"gitId":"jiale-c"},"content":"        NameContainsKeywordsPredicate predicate \u003d preparePredicate(\"Ku\");","lastModifiedDate":"2022-03-30"},{"lineNumber":128,"author":{"gitId":"jiale-c"},"content":"        FindCommand command \u003d new FindCommand(predicate);","lastModifiedDate":"2022-03-30"},{"lineNumber":129,"author":{"gitId":"jiale-c"},"content":"        expectedModel.updateFilteredPersonList(predicate);","lastModifiedDate":"2022-03-30"},{"lineNumber":130,"author":{"gitId":"jiale-c"},"content":"        assertCommandSuccess(command, model, expectedMessage, expectedModel);","lastModifiedDate":"2022-03-30"},{"lineNumber":131,"author":{"gitId":"jiale-c"},"content":"        assertEquals(Arrays.asList(CARL, FIONA), model.getFilteredPersonList());","lastModifiedDate":"2022-03-30"},{"lineNumber":132,"author":{"gitId":"jiale-c"},"content":"    }","lastModifiedDate":"2022-03-30"},{"lineNumber":133,"author":{"gitId":"jiale-c"},"content":"","lastModifiedDate":"2022-03-30"},{"lineNumber":134,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-12"},{"lineNumber":135,"author":{"gitId":"-"},"content":"    public void execute_multipleKeywords_multiplePersonsFound() {","lastModifiedDate":"2017-08-15"},{"lineNumber":136,"author":{"gitId":"jiale-c"},"content":"        // Multiple names inputted and multiple people can be found -\u003e multiple people shown","lastModifiedDate":"2022-03-30"},{"lineNumber":137,"author":{"gitId":"-"},"content":"        String expectedMessage \u003d String.format(MESSAGE_PERSONS_LISTED_OVERVIEW, 3);","lastModifiedDate":"2017-06-12"},{"lineNumber":138,"author":{"gitId":"-"},"content":"        NameContainsKeywordsPredicate predicate \u003d preparePredicate(\"Kurz Elle Kunz\");","lastModifiedDate":"2018-08-08"},{"lineNumber":139,"author":{"gitId":"-"},"content":"        FindCommand command \u003d new FindCommand(predicate);","lastModifiedDate":"2018-08-08"},{"lineNumber":140,"author":{"gitId":"-"},"content":"        expectedModel.updateFilteredPersonList(predicate);","lastModifiedDate":"2018-08-08"},{"lineNumber":141,"author":{"gitId":"-"},"content":"        assertCommandSuccess(command, model, expectedMessage, expectedModel);","lastModifiedDate":"2019-01-25"},{"lineNumber":142,"author":{"gitId":"-"},"content":"        assertEquals(Arrays.asList(CARL, ELLE, FIONA), model.getFilteredPersonList());","lastModifiedDate":"2018-08-08"},{"lineNumber":143,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-12"},{"lineNumber":144,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":145,"author":{"gitId":"cwq2326"},"content":"    @Test","lastModifiedDate":"2022-03-28"},{"lineNumber":146,"author":{"gitId":"cwq2326"},"content":"    public void execute_multipleKeywordsWithLessRestrictions_multiplePersonsFound() {","lastModifiedDate":"2022-03-28"},{"lineNumber":147,"author":{"gitId":"jiale-c"},"content":"        // Multiple incomplete names inputted and multiple people can be found -\u003e multiple people shown","lastModifiedDate":"2022-03-30"},{"lineNumber":148,"author":{"gitId":"cwq2326"},"content":"        String expectedMessage \u003d String.format(MESSAGE_PERSONS_LISTED_OVERVIEW, 3);","lastModifiedDate":"2022-03-28"},{"lineNumber":149,"author":{"gitId":"cwq2326"},"content":"        NameContainsKeywordsPredicate predicate \u003d preparePredicate(\"Ku El Ku\");","lastModifiedDate":"2022-03-28"},{"lineNumber":150,"author":{"gitId":"cwq2326"},"content":"        FindCommand command \u003d new FindCommand(predicate);","lastModifiedDate":"2022-03-28"},{"lineNumber":151,"author":{"gitId":"cwq2326"},"content":"        expectedModel.updateFilteredPersonList(predicate);","lastModifiedDate":"2022-03-28"},{"lineNumber":152,"author":{"gitId":"cwq2326"},"content":"        assertCommandSuccess(command, model, expectedMessage, expectedModel);","lastModifiedDate":"2022-03-28"},{"lineNumber":153,"author":{"gitId":"cwq2326"},"content":"        assertEquals(Arrays.asList(CARL, ELLE, FIONA), model.getFilteredPersonList());","lastModifiedDate":"2022-03-28"},{"lineNumber":154,"author":{"gitId":"cwq2326"},"content":"    }","lastModifiedDate":"2022-03-28"},{"lineNumber":155,"author":{"gitId":"cwq2326"},"content":"","lastModifiedDate":"2022-03-28"},{"lineNumber":156,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-06-12"},{"lineNumber":157,"author":{"gitId":"-"},"content":"     * Parses {@code userInput} into a {@code NameContainsKeywordsPredicate}.","lastModifiedDate":"2018-08-08"},{"lineNumber":158,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-06-12"},{"lineNumber":159,"author":{"gitId":"-"},"content":"    private NameContainsKeywordsPredicate preparePredicate(String userInput) {","lastModifiedDate":"2018-08-08"},{"lineNumber":160,"author":{"gitId":"-"},"content":"        return new NameContainsKeywordsPredicate(Arrays.asList(userInput.split(\"\\\\s+\")));","lastModifiedDate":"2018-08-08"},{"lineNumber":161,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-12"},{"lineNumber":162,"author":{"gitId":"cwq2326"},"content":"","lastModifiedDate":"2022-03-28"},{"lineNumber":163,"author":{"gitId":"cwq2326"},"content":"    @Test","lastModifiedDate":"2022-03-28"},{"lineNumber":164,"author":{"gitId":"cwq2326"},"content":"    public void test_findCommandWordIsCorrect() {","lastModifiedDate":"2022-03-28"},{"lineNumber":165,"author":{"gitId":"jiale-c"},"content":"        // Check this command is a find command","lastModifiedDate":"2022-03-30"},{"lineNumber":166,"author":{"gitId":"cwq2326"},"content":"        assertTrue(FindCommand.COMMAND_WORD.equals(\"find\"));","lastModifiedDate":"2022-03-28"},{"lineNumber":167,"author":{"gitId":"cwq2326"},"content":"    }","lastModifiedDate":"2022-03-28"},{"lineNumber":168,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-06-12"}],"authorContributionMap":{"jiale-c":70,"cwq2326":15,"-":83}},{"path":"src/test/java/seedu/address/logic/commands/HelpCommandTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2017-06-08"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-08"},{"lineNumber":3,"author":{"gitId":"cwq2326"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2022-03-28"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.assertCommandSuccess;","lastModifiedDate":"2018-08-08"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.HelpCommand.SHOWING_HELP_MESSAGE;","lastModifiedDate":"2017-06-08"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-08"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-08"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2018-08-08"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import seedu.address.model.ModelManager;","lastModifiedDate":"2018-08-08"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-08"},{"lineNumber":12,"author":{"gitId":"-"},"content":"public class HelpCommandTest {","lastModifiedDate":"2017-06-08"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    private Model model \u003d new ModelManager();","lastModifiedDate":"2018-08-08"},{"lineNumber":14,"author":{"gitId":"-"},"content":"    private Model expectedModel \u003d new ModelManager();","lastModifiedDate":"2018-08-08"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-08"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    public void execute_help_success() {","lastModifiedDate":"2017-06-08"},{"lineNumber":18,"author":{"gitId":"DannyDakota"},"content":"        CommandResult expectedCommandResult \u003d new CommandResult(SHOWING_HELP_MESSAGE, true, false, false, false, false);","lastModifiedDate":"2022-03-31"},{"lineNumber":19,"author":{"gitId":"-"},"content":"        assertCommandSuccess(new HelpCommand(), model, expectedCommandResult, expectedModel);","lastModifiedDate":"2019-01-25"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-08"},{"lineNumber":21,"author":{"gitId":"cwq2326"},"content":"","lastModifiedDate":"2022-03-28"},{"lineNumber":22,"author":{"gitId":"cwq2326"},"content":"    @Test","lastModifiedDate":"2022-03-28"},{"lineNumber":23,"author":{"gitId":"cwq2326"},"content":"    public void test_helpCommandWordIsCorrect() {","lastModifiedDate":"2022-03-28"},{"lineNumber":24,"author":{"gitId":"cwq2326"},"content":"        assertTrue(HelpCommand.COMMAND_WORD.equals(\"help\"));","lastModifiedDate":"2022-03-28"},{"lineNumber":25,"author":{"gitId":"cwq2326"},"content":"    }","lastModifiedDate":"2022-03-28"},{"lineNumber":26,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-06-08"}],"authorContributionMap":{"DannyDakota":1,"cwq2326":6,"-":19}},{"path":"src/test/java/seedu/address/logic/commands/ListCommandTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2017-06-12"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":3,"author":{"gitId":"cwq2326"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2022-03-28"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.assertCommandSuccess;","lastModifiedDate":"2017-07-05"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.showPersonAtIndex;","lastModifiedDate":"2018-01-31"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.TypicalIndexes.INDEX_FIRST_PERSON;","lastModifiedDate":"2018-01-31"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.TypicalPersons.getTypicalAddressBook;","lastModifiedDate":"2017-07-19"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.BeforeEach;","lastModifiedDate":"2019-04-27"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2017-06-12"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import seedu.address.model.ModelManager;","lastModifiedDate":"2017-06-12"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import seedu.address.model.UserPrefs;","lastModifiedDate":"2017-06-12"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":16,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-06-12"},{"lineNumber":17,"author":{"gitId":"-"},"content":" * Contains integration tests (interaction with the Model) and unit tests for ListCommand.","lastModifiedDate":"2017-06-12"},{"lineNumber":18,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-06-12"},{"lineNumber":19,"author":{"gitId":"-"},"content":"public class ListCommandTest {","lastModifiedDate":"2017-06-12"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    private Model model;","lastModifiedDate":"2017-06-12"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    private Model expectedModel;","lastModifiedDate":"2017-06-12"},{"lineNumber":23,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    @BeforeEach","lastModifiedDate":"2019-04-27"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    public void setUp() {","lastModifiedDate":"2017-06-12"},{"lineNumber":26,"author":{"gitId":"-"},"content":"        model \u003d new ModelManager(getTypicalAddressBook(), new UserPrefs());","lastModifiedDate":"2017-07-19"},{"lineNumber":27,"author":{"gitId":"-"},"content":"        expectedModel \u003d new ModelManager(model.getAddressBook(), new UserPrefs());","lastModifiedDate":"2017-06-12"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-12"},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-12"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    public void execute_listIsNotFiltered_showsSameList() {","lastModifiedDate":"2017-08-15"},{"lineNumber":32,"author":{"gitId":"-"},"content":"        assertCommandSuccess(new ListCommand(), model, ListCommand.MESSAGE_SUCCESS, expectedModel);","lastModifiedDate":"2019-01-25"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-12"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-12"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    public void execute_listIsFiltered_showsEverything() {","lastModifiedDate":"2017-08-15"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        showPersonAtIndex(model, INDEX_FIRST_PERSON);","lastModifiedDate":"2018-01-31"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        assertCommandSuccess(new ListCommand(), model, ListCommand.MESSAGE_SUCCESS, expectedModel);","lastModifiedDate":"2019-01-25"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-12"},{"lineNumber":40,"author":{"gitId":"cwq2326"},"content":"","lastModifiedDate":"2022-03-28"},{"lineNumber":41,"author":{"gitId":"cwq2326"},"content":"    @Test","lastModifiedDate":"2022-03-28"},{"lineNumber":42,"author":{"gitId":"cwq2326"},"content":"    public void test_listCommandWordIsCorrect() {","lastModifiedDate":"2022-03-28"},{"lineNumber":43,"author":{"gitId":"cwq2326"},"content":"        assertTrue(ListCommand.COMMAND_WORD.equals(\"list\"));","lastModifiedDate":"2022-03-28"},{"lineNumber":44,"author":{"gitId":"cwq2326"},"content":"    }","lastModifiedDate":"2022-03-28"},{"lineNumber":45,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-06-12"}],"authorContributionMap":{"cwq2326":6,"-":39}},{"path":"src/test/java/seedu/address/logic/commands/RedoCommandTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"tanchinkiat99"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2022-03-30"},{"lineNumber":2,"author":{"gitId":"tanchinkiat99"},"content":"","lastModifiedDate":"2022-03-30"},{"lineNumber":3,"author":{"gitId":"tanchinkiat99"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2022-03-30"},{"lineNumber":4,"author":{"gitId":"tanchinkiat99"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_NAME_BOB;","lastModifiedDate":"2022-03-30"},{"lineNumber":5,"author":{"gitId":"tanchinkiat99"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_PHONE_BOB;","lastModifiedDate":"2022-03-30"},{"lineNumber":6,"author":{"gitId":"tanchinkiat99"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_TAG_HUSBAND;","lastModifiedDate":"2022-03-30"},{"lineNumber":7,"author":{"gitId":"tanchinkiat99"},"content":"import static seedu.address.logic.commands.CommandTestUtil.assertCommandFailure;","lastModifiedDate":"2022-03-30"},{"lineNumber":8,"author":{"gitId":"tanchinkiat99"},"content":"import static seedu.address.logic.commands.CommandTestUtil.assertCommandSuccess;","lastModifiedDate":"2022-03-30"},{"lineNumber":9,"author":{"gitId":"tanchinkiat99"},"content":"import static seedu.address.logic.commands.RedoCommand.COMMAND_WORD;","lastModifiedDate":"2022-03-30"},{"lineNumber":10,"author":{"gitId":"tanchinkiat99"},"content":"import static seedu.address.logic.commands.RedoCommand.MESSAGE_REDO_FAILURE;","lastModifiedDate":"2022-03-30"},{"lineNumber":11,"author":{"gitId":"tanchinkiat99"},"content":"import static seedu.address.logic.commands.RedoCommand.MESSAGE_REDO_SUCCESS;","lastModifiedDate":"2022-03-30"},{"lineNumber":12,"author":{"gitId":"tanchinkiat99"},"content":"import static seedu.address.testutil.TypicalIndexes.INDEX_FIRST_PERSON;","lastModifiedDate":"2022-03-30"},{"lineNumber":13,"author":{"gitId":"tanchinkiat99"},"content":"import static seedu.address.testutil.TypicalPersons.getTypicalAddressBook;","lastModifiedDate":"2022-03-30"},{"lineNumber":14,"author":{"gitId":"tanchinkiat99"},"content":"","lastModifiedDate":"2022-03-30"},{"lineNumber":15,"author":{"gitId":"tanchinkiat99"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2022-03-30"},{"lineNumber":16,"author":{"gitId":"tanchinkiat99"},"content":"","lastModifiedDate":"2022-03-30"},{"lineNumber":17,"author":{"gitId":"tanchinkiat99"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2022-03-30"},{"lineNumber":18,"author":{"gitId":"tanchinkiat99"},"content":"import seedu.address.model.ModelManager;","lastModifiedDate":"2022-03-30"},{"lineNumber":19,"author":{"gitId":"tanchinkiat99"},"content":"import seedu.address.model.UserPrefs;","lastModifiedDate":"2022-03-30"},{"lineNumber":20,"author":{"gitId":"tanchinkiat99"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2022-03-30"},{"lineNumber":21,"author":{"gitId":"tanchinkiat99"},"content":"import seedu.address.testutil.PersonBuilder;","lastModifiedDate":"2022-03-30"},{"lineNumber":22,"author":{"gitId":"tanchinkiat99"},"content":"import seedu.address.testutil.TypicalPersons;","lastModifiedDate":"2022-03-30"},{"lineNumber":23,"author":{"gitId":"tanchinkiat99"},"content":"","lastModifiedDate":"2022-03-30"},{"lineNumber":24,"author":{"gitId":"tanchinkiat99"},"content":"/**","lastModifiedDate":"2022-03-30"},{"lineNumber":25,"author":{"gitId":"tanchinkiat99"},"content":" * Contains integration tests (interaction with the Model) for {@code RedoCommand}.","lastModifiedDate":"2022-03-30"},{"lineNumber":26,"author":{"gitId":"tanchinkiat99"},"content":" */","lastModifiedDate":"2022-03-30"},{"lineNumber":27,"author":{"gitId":"tanchinkiat99"},"content":"public class RedoCommandTest {","lastModifiedDate":"2022-03-30"},{"lineNumber":28,"author":{"gitId":"tanchinkiat99"},"content":"","lastModifiedDate":"2022-03-30"},{"lineNumber":29,"author":{"gitId":"tanchinkiat99"},"content":"    @Test","lastModifiedDate":"2022-03-30"},{"lineNumber":30,"author":{"gitId":"tanchinkiat99"},"content":"    public void execute_redoAsFirstFunction_failure() {","lastModifiedDate":"2022-03-30"},{"lineNumber":31,"author":{"gitId":"tanchinkiat99"},"content":"        Model model \u003d new ModelManager();","lastModifiedDate":"2022-03-30"},{"lineNumber":32,"author":{"gitId":"tanchinkiat99"},"content":"","lastModifiedDate":"2022-03-30"},{"lineNumber":33,"author":{"gitId":"tanchinkiat99"},"content":"        assertCommandFailure(new RedoCommand(), model, MESSAGE_REDO_FAILURE);","lastModifiedDate":"2022-03-30"},{"lineNumber":34,"author":{"gitId":"tanchinkiat99"},"content":"    }","lastModifiedDate":"2022-03-30"},{"lineNumber":35,"author":{"gitId":"tanchinkiat99"},"content":"","lastModifiedDate":"2022-03-30"},{"lineNumber":36,"author":{"gitId":"tanchinkiat99"},"content":"    @Test","lastModifiedDate":"2022-03-30"},{"lineNumber":37,"author":{"gitId":"tanchinkiat99"},"content":"    public void execute_redoAfterAddFunction_failure() {","lastModifiedDate":"2022-03-30"},{"lineNumber":38,"author":{"gitId":"tanchinkiat99"},"content":"        Model model \u003d new ModelManager();","lastModifiedDate":"2022-03-30"},{"lineNumber":39,"author":{"gitId":"tanchinkiat99"},"content":"","lastModifiedDate":"2022-03-30"},{"lineNumber":40,"author":{"gitId":"tanchinkiat99"},"content":"        model.addPerson(TypicalPersons.ALICE);","lastModifiedDate":"2022-03-30"},{"lineNumber":41,"author":{"gitId":"tanchinkiat99"},"content":"","lastModifiedDate":"2022-03-30"},{"lineNumber":42,"author":{"gitId":"tanchinkiat99"},"content":"        assertCommandFailure(new RedoCommand(), model, MESSAGE_REDO_FAILURE);","lastModifiedDate":"2022-03-30"},{"lineNumber":43,"author":{"gitId":"tanchinkiat99"},"content":"","lastModifiedDate":"2022-03-30"},{"lineNumber":44,"author":{"gitId":"tanchinkiat99"},"content":"        model \u003d new ModelManager(getTypicalAddressBook(), new UserPrefs());","lastModifiedDate":"2022-03-30"},{"lineNumber":45,"author":{"gitId":"tanchinkiat99"},"content":"","lastModifiedDate":"2022-03-30"},{"lineNumber":46,"author":{"gitId":"tanchinkiat99"},"content":"        model.addPerson(TypicalPersons.HOON);","lastModifiedDate":"2022-03-30"},{"lineNumber":47,"author":{"gitId":"tanchinkiat99"},"content":"","lastModifiedDate":"2022-03-30"},{"lineNumber":48,"author":{"gitId":"tanchinkiat99"},"content":"        assertCommandFailure(new RedoCommand(), model, MESSAGE_REDO_FAILURE);","lastModifiedDate":"2022-03-30"},{"lineNumber":49,"author":{"gitId":"tanchinkiat99"},"content":"    }","lastModifiedDate":"2022-03-30"},{"lineNumber":50,"author":{"gitId":"tanchinkiat99"},"content":"","lastModifiedDate":"2022-03-30"},{"lineNumber":51,"author":{"gitId":"tanchinkiat99"},"content":"    @Test","lastModifiedDate":"2022-03-30"},{"lineNumber":52,"author":{"gitId":"tanchinkiat99"},"content":"    public void execute_redoAfterDeleteFunction_failure() {","lastModifiedDate":"2022-03-30"},{"lineNumber":53,"author":{"gitId":"tanchinkiat99"},"content":"        Model model \u003d new ModelManager();","lastModifiedDate":"2022-03-30"},{"lineNumber":54,"author":{"gitId":"tanchinkiat99"},"content":"","lastModifiedDate":"2022-03-30"},{"lineNumber":55,"author":{"gitId":"tanchinkiat99"},"content":"        model.addPerson(TypicalPersons.ALICE);","lastModifiedDate":"2022-03-30"},{"lineNumber":56,"author":{"gitId":"tanchinkiat99"},"content":"        model.deletePerson(TypicalPersons.ALICE);","lastModifiedDate":"2022-03-30"},{"lineNumber":57,"author":{"gitId":"tanchinkiat99"},"content":"","lastModifiedDate":"2022-03-30"},{"lineNumber":58,"author":{"gitId":"tanchinkiat99"},"content":"        assertCommandFailure(new RedoCommand(), model, MESSAGE_REDO_FAILURE);","lastModifiedDate":"2022-03-30"},{"lineNumber":59,"author":{"gitId":"tanchinkiat99"},"content":"","lastModifiedDate":"2022-03-30"},{"lineNumber":60,"author":{"gitId":"tanchinkiat99"},"content":"        model \u003d new ModelManager(getTypicalAddressBook(), new UserPrefs());","lastModifiedDate":"2022-03-30"},{"lineNumber":61,"author":{"gitId":"tanchinkiat99"},"content":"","lastModifiedDate":"2022-03-30"},{"lineNumber":62,"author":{"gitId":"tanchinkiat99"},"content":"        model.addPerson(TypicalPersons.HOON);","lastModifiedDate":"2022-03-30"},{"lineNumber":63,"author":{"gitId":"tanchinkiat99"},"content":"        model.deletePerson(TypicalPersons.HOON);","lastModifiedDate":"2022-03-30"},{"lineNumber":64,"author":{"gitId":"tanchinkiat99"},"content":"","lastModifiedDate":"2022-03-30"},{"lineNumber":65,"author":{"gitId":"tanchinkiat99"},"content":"        assertCommandFailure(new RedoCommand(), model, MESSAGE_REDO_FAILURE);","lastModifiedDate":"2022-03-30"},{"lineNumber":66,"author":{"gitId":"tanchinkiat99"},"content":"    }","lastModifiedDate":"2022-03-30"},{"lineNumber":67,"author":{"gitId":"tanchinkiat99"},"content":"","lastModifiedDate":"2022-03-30"},{"lineNumber":68,"author":{"gitId":"tanchinkiat99"},"content":"    @Test","lastModifiedDate":"2022-03-30"},{"lineNumber":69,"author":{"gitId":"tanchinkiat99"},"content":"    public void execute_redoAfterEditFunction_failure() {","lastModifiedDate":"2022-03-30"},{"lineNumber":70,"author":{"gitId":"tanchinkiat99"},"content":"        Model model \u003d new ModelManager();","lastModifiedDate":"2022-03-30"},{"lineNumber":71,"author":{"gitId":"tanchinkiat99"},"content":"","lastModifiedDate":"2022-03-30"},{"lineNumber":72,"author":{"gitId":"tanchinkiat99"},"content":"        model.addPerson(TypicalPersons.ALICE);","lastModifiedDate":"2022-03-30"},{"lineNumber":73,"author":{"gitId":"tanchinkiat99"},"content":"","lastModifiedDate":"2022-03-30"},{"lineNumber":74,"author":{"gitId":"tanchinkiat99"},"content":"        Person firstPerson \u003d model.getFilteredPersonList().get(INDEX_FIRST_PERSON.getZeroBased());","lastModifiedDate":"2022-03-30"},{"lineNumber":75,"author":{"gitId":"tanchinkiat99"},"content":"","lastModifiedDate":"2022-03-30"},{"lineNumber":76,"author":{"gitId":"tanchinkiat99"},"content":"        PersonBuilder personInList \u003d new PersonBuilder(firstPerson);","lastModifiedDate":"2022-03-30"},{"lineNumber":77,"author":{"gitId":"tanchinkiat99"},"content":"        Person editedPerson \u003d personInList.withName(VALID_NAME_BOB).withPhone(VALID_PHONE_BOB)","lastModifiedDate":"2022-03-30"},{"lineNumber":78,"author":{"gitId":"tanchinkiat99"},"content":"                .withTags(VALID_TAG_HUSBAND).build();","lastModifiedDate":"2022-03-30"},{"lineNumber":79,"author":{"gitId":"tanchinkiat99"},"content":"","lastModifiedDate":"2022-03-30"},{"lineNumber":80,"author":{"gitId":"tanchinkiat99"},"content":"        model.setPerson(firstPerson, editedPerson);","lastModifiedDate":"2022-03-30"},{"lineNumber":81,"author":{"gitId":"tanchinkiat99"},"content":"","lastModifiedDate":"2022-03-30"},{"lineNumber":82,"author":{"gitId":"tanchinkiat99"},"content":"        assertCommandFailure(new RedoCommand(), model, MESSAGE_REDO_FAILURE);","lastModifiedDate":"2022-03-30"},{"lineNumber":83,"author":{"gitId":"tanchinkiat99"},"content":"","lastModifiedDate":"2022-03-30"},{"lineNumber":84,"author":{"gitId":"tanchinkiat99"},"content":"        model \u003d new ModelManager(getTypicalAddressBook(), new UserPrefs());","lastModifiedDate":"2022-03-30"},{"lineNumber":85,"author":{"gitId":"tanchinkiat99"},"content":"","lastModifiedDate":"2022-03-30"},{"lineNumber":86,"author":{"gitId":"tanchinkiat99"},"content":"        firstPerson \u003d model.getFilteredPersonList().get(INDEX_FIRST_PERSON.getZeroBased());","lastModifiedDate":"2022-03-30"},{"lineNumber":87,"author":{"gitId":"tanchinkiat99"},"content":"","lastModifiedDate":"2022-03-30"},{"lineNumber":88,"author":{"gitId":"tanchinkiat99"},"content":"        model.setPerson(firstPerson, editedPerson);","lastModifiedDate":"2022-03-30"},{"lineNumber":89,"author":{"gitId":"tanchinkiat99"},"content":"","lastModifiedDate":"2022-03-30"},{"lineNumber":90,"author":{"gitId":"tanchinkiat99"},"content":"        assertCommandFailure(new RedoCommand(), model, MESSAGE_REDO_FAILURE);","lastModifiedDate":"2022-03-30"},{"lineNumber":91,"author":{"gitId":"tanchinkiat99"},"content":"    }","lastModifiedDate":"2022-03-30"},{"lineNumber":92,"author":{"gitId":"tanchinkiat99"},"content":"","lastModifiedDate":"2022-03-30"},{"lineNumber":93,"author":{"gitId":"tanchinkiat99"},"content":"    @Test","lastModifiedDate":"2022-03-30"},{"lineNumber":94,"author":{"gitId":"tanchinkiat99"},"content":"    public void execute_redoForUndoAfterAddFunction_success() {","lastModifiedDate":"2022-03-30"},{"lineNumber":95,"author":{"gitId":"tanchinkiat99"},"content":"        Model model \u003d new ModelManager();","lastModifiedDate":"2022-03-30"},{"lineNumber":96,"author":{"gitId":"tanchinkiat99"},"content":"        Model expectedModel \u003d new ModelManager();","lastModifiedDate":"2022-03-30"},{"lineNumber":97,"author":{"gitId":"tanchinkiat99"},"content":"","lastModifiedDate":"2022-03-30"},{"lineNumber":98,"author":{"gitId":"tanchinkiat99"},"content":"        model.addPerson(TypicalPersons.ALICE);","lastModifiedDate":"2022-03-30"},{"lineNumber":99,"author":{"gitId":"tanchinkiat99"},"content":"        model.restoreHistory();","lastModifiedDate":"2022-03-30"},{"lineNumber":100,"author":{"gitId":"tanchinkiat99"},"content":"","lastModifiedDate":"2022-03-30"},{"lineNumber":101,"author":{"gitId":"tanchinkiat99"},"content":"        expectedModel.addPerson(TypicalPersons.ALICE);","lastModifiedDate":"2022-03-30"},{"lineNumber":102,"author":{"gitId":"tanchinkiat99"},"content":"","lastModifiedDate":"2022-03-30"},{"lineNumber":103,"author":{"gitId":"tanchinkiat99"},"content":"        assertCommandSuccess(new RedoCommand(), model, MESSAGE_REDO_SUCCESS, expectedModel);","lastModifiedDate":"2022-03-30"},{"lineNumber":104,"author":{"gitId":"tanchinkiat99"},"content":"","lastModifiedDate":"2022-03-30"},{"lineNumber":105,"author":{"gitId":"tanchinkiat99"},"content":"        model \u003d new ModelManager(getTypicalAddressBook(), new UserPrefs());","lastModifiedDate":"2022-03-30"},{"lineNumber":106,"author":{"gitId":"tanchinkiat99"},"content":"        expectedModel \u003d new ModelManager(getTypicalAddressBook(), new UserPrefs());","lastModifiedDate":"2022-03-30"},{"lineNumber":107,"author":{"gitId":"tanchinkiat99"},"content":"","lastModifiedDate":"2022-03-30"},{"lineNumber":108,"author":{"gitId":"tanchinkiat99"},"content":"        model.addPerson(TypicalPersons.HOON);","lastModifiedDate":"2022-03-30"},{"lineNumber":109,"author":{"gitId":"tanchinkiat99"},"content":"        model.restoreHistory();","lastModifiedDate":"2022-03-30"},{"lineNumber":110,"author":{"gitId":"tanchinkiat99"},"content":"","lastModifiedDate":"2022-03-30"},{"lineNumber":111,"author":{"gitId":"tanchinkiat99"},"content":"        expectedModel.addPerson(TypicalPersons.HOON);","lastModifiedDate":"2022-03-30"},{"lineNumber":112,"author":{"gitId":"tanchinkiat99"},"content":"","lastModifiedDate":"2022-03-30"},{"lineNumber":113,"author":{"gitId":"tanchinkiat99"},"content":"        assertCommandSuccess(new RedoCommand(), model, MESSAGE_REDO_SUCCESS, expectedModel);","lastModifiedDate":"2022-03-30"},{"lineNumber":114,"author":{"gitId":"tanchinkiat99"},"content":"    }","lastModifiedDate":"2022-03-30"},{"lineNumber":115,"author":{"gitId":"tanchinkiat99"},"content":"","lastModifiedDate":"2022-03-30"},{"lineNumber":116,"author":{"gitId":"tanchinkiat99"},"content":"    @Test","lastModifiedDate":"2022-03-30"},{"lineNumber":117,"author":{"gitId":"tanchinkiat99"},"content":"    public void execute_redoForUndoAfterDeleteFunction_success() {","lastModifiedDate":"2022-03-30"},{"lineNumber":118,"author":{"gitId":"tanchinkiat99"},"content":"        Model model \u003d new ModelManager();","lastModifiedDate":"2022-03-30"},{"lineNumber":119,"author":{"gitId":"tanchinkiat99"},"content":"        Model expectedModel \u003d new ModelManager();","lastModifiedDate":"2022-03-30"},{"lineNumber":120,"author":{"gitId":"tanchinkiat99"},"content":"","lastModifiedDate":"2022-03-30"},{"lineNumber":121,"author":{"gitId":"tanchinkiat99"},"content":"        model.addPerson(TypicalPersons.ALICE);","lastModifiedDate":"2022-03-30"},{"lineNumber":122,"author":{"gitId":"tanchinkiat99"},"content":"        model.deletePerson(TypicalPersons.ALICE);","lastModifiedDate":"2022-03-30"},{"lineNumber":123,"author":{"gitId":"tanchinkiat99"},"content":"        model.restoreHistory();","lastModifiedDate":"2022-03-30"},{"lineNumber":124,"author":{"gitId":"tanchinkiat99"},"content":"","lastModifiedDate":"2022-03-30"},{"lineNumber":125,"author":{"gitId":"tanchinkiat99"},"content":"        assertCommandSuccess(new RedoCommand(), model, MESSAGE_REDO_SUCCESS, expectedModel);","lastModifiedDate":"2022-03-30"},{"lineNumber":126,"author":{"gitId":"tanchinkiat99"},"content":"","lastModifiedDate":"2022-03-30"},{"lineNumber":127,"author":{"gitId":"tanchinkiat99"},"content":"        model \u003d new ModelManager(getTypicalAddressBook(), new UserPrefs());","lastModifiedDate":"2022-03-30"},{"lineNumber":128,"author":{"gitId":"tanchinkiat99"},"content":"        expectedModel \u003d new ModelManager(getTypicalAddressBook(), new UserPrefs());","lastModifiedDate":"2022-03-30"},{"lineNumber":129,"author":{"gitId":"tanchinkiat99"},"content":"","lastModifiedDate":"2022-03-30"},{"lineNumber":130,"author":{"gitId":"tanchinkiat99"},"content":"        model.addPerson(TypicalPersons.HOON);","lastModifiedDate":"2022-03-30"},{"lineNumber":131,"author":{"gitId":"tanchinkiat99"},"content":"        model.deletePerson(TypicalPersons.HOON);","lastModifiedDate":"2022-03-30"},{"lineNumber":132,"author":{"gitId":"tanchinkiat99"},"content":"        model.restoreHistory();","lastModifiedDate":"2022-03-30"},{"lineNumber":133,"author":{"gitId":"tanchinkiat99"},"content":"","lastModifiedDate":"2022-03-30"},{"lineNumber":134,"author":{"gitId":"tanchinkiat99"},"content":"        assertCommandSuccess(new RedoCommand(), model, MESSAGE_REDO_SUCCESS, expectedModel);","lastModifiedDate":"2022-03-30"},{"lineNumber":135,"author":{"gitId":"tanchinkiat99"},"content":"    }","lastModifiedDate":"2022-03-30"},{"lineNumber":136,"author":{"gitId":"tanchinkiat99"},"content":"","lastModifiedDate":"2022-03-30"},{"lineNumber":137,"author":{"gitId":"tanchinkiat99"},"content":"    @Test","lastModifiedDate":"2022-03-30"},{"lineNumber":138,"author":{"gitId":"tanchinkiat99"},"content":"    public void execute_redoForUndoAfterEditFunction_success() {","lastModifiedDate":"2022-03-30"},{"lineNumber":139,"author":{"gitId":"tanchinkiat99"},"content":"        Model model \u003d new ModelManager();","lastModifiedDate":"2022-03-30"},{"lineNumber":140,"author":{"gitId":"tanchinkiat99"},"content":"        Model expectedModel \u003d new ModelManager();","lastModifiedDate":"2022-03-30"},{"lineNumber":141,"author":{"gitId":"tanchinkiat99"},"content":"","lastModifiedDate":"2022-03-30"},{"lineNumber":142,"author":{"gitId":"tanchinkiat99"},"content":"        model.addPerson(TypicalPersons.ALICE);","lastModifiedDate":"2022-03-30"},{"lineNumber":143,"author":{"gitId":"tanchinkiat99"},"content":"        expectedModel.addPerson(TypicalPersons.ALICE);","lastModifiedDate":"2022-03-30"},{"lineNumber":144,"author":{"gitId":"tanchinkiat99"},"content":"","lastModifiedDate":"2022-03-30"},{"lineNumber":145,"author":{"gitId":"tanchinkiat99"},"content":"        Person firstPerson \u003d model.getFilteredPersonList().get(INDEX_FIRST_PERSON.getZeroBased());","lastModifiedDate":"2022-03-30"},{"lineNumber":146,"author":{"gitId":"tanchinkiat99"},"content":"","lastModifiedDate":"2022-03-30"},{"lineNumber":147,"author":{"gitId":"tanchinkiat99"},"content":"        PersonBuilder personInList \u003d new PersonBuilder(firstPerson);","lastModifiedDate":"2022-03-30"},{"lineNumber":148,"author":{"gitId":"tanchinkiat99"},"content":"        Person editedPerson \u003d personInList.withName(VALID_NAME_BOB).withPhone(VALID_PHONE_BOB)","lastModifiedDate":"2022-03-30"},{"lineNumber":149,"author":{"gitId":"tanchinkiat99"},"content":"                .withTags(VALID_TAG_HUSBAND).build();","lastModifiedDate":"2022-03-30"},{"lineNumber":150,"author":{"gitId":"tanchinkiat99"},"content":"","lastModifiedDate":"2022-03-30"},{"lineNumber":151,"author":{"gitId":"tanchinkiat99"},"content":"        model.setPerson(firstPerson, editedPerson);","lastModifiedDate":"2022-03-30"},{"lineNumber":152,"author":{"gitId":"tanchinkiat99"},"content":"        model.restoreHistory();","lastModifiedDate":"2022-03-30"},{"lineNumber":153,"author":{"gitId":"tanchinkiat99"},"content":"        expectedModel.setPerson(firstPerson, editedPerson);","lastModifiedDate":"2022-03-30"},{"lineNumber":154,"author":{"gitId":"tanchinkiat99"},"content":"","lastModifiedDate":"2022-03-30"},{"lineNumber":155,"author":{"gitId":"tanchinkiat99"},"content":"        assertCommandSuccess(new RedoCommand(), model, MESSAGE_REDO_SUCCESS, expectedModel);","lastModifiedDate":"2022-03-30"},{"lineNumber":156,"author":{"gitId":"tanchinkiat99"},"content":"","lastModifiedDate":"2022-03-30"},{"lineNumber":157,"author":{"gitId":"tanchinkiat99"},"content":"        model \u003d new ModelManager(getTypicalAddressBook(), new UserPrefs());","lastModifiedDate":"2022-03-30"},{"lineNumber":158,"author":{"gitId":"tanchinkiat99"},"content":"        expectedModel \u003d new ModelManager(getTypicalAddressBook(), new UserPrefs());","lastModifiedDate":"2022-03-30"},{"lineNumber":159,"author":{"gitId":"tanchinkiat99"},"content":"","lastModifiedDate":"2022-03-30"},{"lineNumber":160,"author":{"gitId":"tanchinkiat99"},"content":"        firstPerson \u003d model.getFilteredPersonList().get(INDEX_FIRST_PERSON.getZeroBased());","lastModifiedDate":"2022-03-30"},{"lineNumber":161,"author":{"gitId":"tanchinkiat99"},"content":"","lastModifiedDate":"2022-03-30"},{"lineNumber":162,"author":{"gitId":"tanchinkiat99"},"content":"        personInList \u003d new PersonBuilder(firstPerson);","lastModifiedDate":"2022-03-30"},{"lineNumber":163,"author":{"gitId":"tanchinkiat99"},"content":"        editedPerson \u003d personInList.withName(VALID_NAME_BOB).withPhone(VALID_PHONE_BOB)","lastModifiedDate":"2022-03-30"},{"lineNumber":164,"author":{"gitId":"tanchinkiat99"},"content":"                .withTags(VALID_TAG_HUSBAND).build();","lastModifiedDate":"2022-03-30"},{"lineNumber":165,"author":{"gitId":"tanchinkiat99"},"content":"","lastModifiedDate":"2022-03-30"},{"lineNumber":166,"author":{"gitId":"tanchinkiat99"},"content":"        model.setPerson(firstPerson, editedPerson);","lastModifiedDate":"2022-03-30"},{"lineNumber":167,"author":{"gitId":"tanchinkiat99"},"content":"        model.restoreHistory();","lastModifiedDate":"2022-03-30"},{"lineNumber":168,"author":{"gitId":"tanchinkiat99"},"content":"        expectedModel.setPerson(firstPerson, editedPerson);","lastModifiedDate":"2022-03-30"},{"lineNumber":169,"author":{"gitId":"tanchinkiat99"},"content":"","lastModifiedDate":"2022-03-30"},{"lineNumber":170,"author":{"gitId":"tanchinkiat99"},"content":"        assertCommandSuccess(new RedoCommand(), model, MESSAGE_REDO_SUCCESS, expectedModel);","lastModifiedDate":"2022-03-30"},{"lineNumber":171,"author":{"gitId":"tanchinkiat99"},"content":"    }","lastModifiedDate":"2022-03-30"},{"lineNumber":172,"author":{"gitId":"tanchinkiat99"},"content":"","lastModifiedDate":"2022-03-30"},{"lineNumber":173,"author":{"gitId":"tanchinkiat99"},"content":"    @Test","lastModifiedDate":"2022-03-30"},{"lineNumber":174,"author":{"gitId":"tanchinkiat99"},"content":"    public void test_redoCommandWordIsCorrect() {","lastModifiedDate":"2022-03-30"},{"lineNumber":175,"author":{"gitId":"tanchinkiat99"},"content":"        assertTrue(COMMAND_WORD.equals(\"redo\"));","lastModifiedDate":"2022-03-30"},{"lineNumber":176,"author":{"gitId":"tanchinkiat99"},"content":"    }","lastModifiedDate":"2022-03-30"},{"lineNumber":177,"author":{"gitId":"tanchinkiat99"},"content":"","lastModifiedDate":"2022-03-30"},{"lineNumber":178,"author":{"gitId":"tanchinkiat99"},"content":"    @Test","lastModifiedDate":"2022-03-30"},{"lineNumber":179,"author":{"gitId":"tanchinkiat99"},"content":"    public void equals() {","lastModifiedDate":"2022-03-30"},{"lineNumber":180,"author":{"gitId":"tanchinkiat99"},"content":"        RedoCommand command \u003d new RedoCommand();","lastModifiedDate":"2022-03-30"},{"lineNumber":181,"author":{"gitId":"tanchinkiat99"},"content":"        assertTrue(command.equals(new RedoCommand()));","lastModifiedDate":"2022-03-30"},{"lineNumber":182,"author":{"gitId":"tanchinkiat99"},"content":"    }","lastModifiedDate":"2022-03-30"},{"lineNumber":183,"author":{"gitId":"tanchinkiat99"},"content":"}","lastModifiedDate":"2022-03-30"}],"authorContributionMap":{"tanchinkiat99":183}},{"path":"src/test/java/seedu/address/logic/commands/SummariseCommandTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"jiale-c"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2022-03-16"},{"lineNumber":2,"author":{"gitId":"jiale-c"},"content":"","lastModifiedDate":"2022-03-16"},{"lineNumber":3,"author":{"gitId":"jiale-c"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2022-03-16"},{"lineNumber":4,"author":{"gitId":"jiale-c"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2022-03-16"},{"lineNumber":5,"author":{"gitId":"jiale-c"},"content":"import static seedu.address.logic.commands.CommandTestUtil.assertResponseSuccess;","lastModifiedDate":"2022-03-16"},{"lineNumber":6,"author":{"gitId":"jiale-c"},"content":"import static seedu.address.logic.commands.CommandTestUtil.showPersonAtIndex;","lastModifiedDate":"2022-03-16"},{"lineNumber":7,"author":{"gitId":"jiale-c"},"content":"import static seedu.address.testutil.TypicalIndexes.INDEX_FIRST_PERSON;","lastModifiedDate":"2022-03-16"},{"lineNumber":8,"author":{"gitId":"jiale-c"},"content":"import static seedu.address.testutil.TypicalPersons.getTypicalAddressBook;","lastModifiedDate":"2022-03-16"},{"lineNumber":9,"author":{"gitId":"jiale-c"},"content":"","lastModifiedDate":"2022-03-16"},{"lineNumber":10,"author":{"gitId":"jiale-c"},"content":"import java.util.ArrayList;","lastModifiedDate":"2022-03-16"},{"lineNumber":11,"author":{"gitId":"jiale-c"},"content":"import java.util.List;","lastModifiedDate":"2022-03-16"},{"lineNumber":12,"author":{"gitId":"jiale-c"},"content":"","lastModifiedDate":"2022-03-16"},{"lineNumber":13,"author":{"gitId":"jiale-c"},"content":"import org.junit.jupiter.api.BeforeEach;","lastModifiedDate":"2022-03-16"},{"lineNumber":14,"author":{"gitId":"jiale-c"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2022-03-16"},{"lineNumber":15,"author":{"gitId":"jiale-c"},"content":"","lastModifiedDate":"2022-03-16"},{"lineNumber":16,"author":{"gitId":"jiale-c"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2022-03-16"},{"lineNumber":17,"author":{"gitId":"jiale-c"},"content":"import seedu.address.model.ModelManager;","lastModifiedDate":"2022-03-16"},{"lineNumber":18,"author":{"gitId":"jiale-c"},"content":"import seedu.address.model.UserPrefs;","lastModifiedDate":"2022-03-16"},{"lineNumber":19,"author":{"gitId":"jiale-c"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2022-03-16"},{"lineNumber":20,"author":{"gitId":"jiale-c"},"content":"","lastModifiedDate":"2022-03-16"},{"lineNumber":21,"author":{"gitId":"jiale-c"},"content":"/**","lastModifiedDate":"2022-03-16"},{"lineNumber":22,"author":{"gitId":"jiale-c"},"content":" * Contains integration tests (interaction with the Model) and unit tests for SummariseCommand.","lastModifiedDate":"2022-03-16"},{"lineNumber":23,"author":{"gitId":"jiale-c"},"content":" */","lastModifiedDate":"2022-03-16"},{"lineNumber":24,"author":{"gitId":"jiale-c"},"content":"public class SummariseCommandTest {","lastModifiedDate":"2022-03-16"},{"lineNumber":25,"author":{"gitId":"jiale-c"},"content":"    private Model model;","lastModifiedDate":"2022-03-16"},{"lineNumber":26,"author":{"gitId":"jiale-c"},"content":"    private Model expectedModel;","lastModifiedDate":"2022-03-16"},{"lineNumber":27,"author":{"gitId":"jiale-c"},"content":"","lastModifiedDate":"2022-03-16"},{"lineNumber":28,"author":{"gitId":"jiale-c"},"content":"    @BeforeEach","lastModifiedDate":"2022-03-16"},{"lineNumber":29,"author":{"gitId":"jiale-c"},"content":"    public void setUp() {","lastModifiedDate":"2022-03-16"},{"lineNumber":30,"author":{"gitId":"jiale-c"},"content":"        model \u003d new ModelManager(getTypicalAddressBook(), new UserPrefs());","lastModifiedDate":"2022-03-16"},{"lineNumber":31,"author":{"gitId":"jiale-c"},"content":"        expectedModel \u003d new ModelManager(model.getAddressBook(), new UserPrefs());","lastModifiedDate":"2022-03-16"},{"lineNumber":32,"author":{"gitId":"jiale-c"},"content":"    }","lastModifiedDate":"2022-03-16"},{"lineNumber":33,"author":{"gitId":"jiale-c"},"content":"","lastModifiedDate":"2022-03-16"},{"lineNumber":34,"author":{"gitId":"jiale-c"},"content":"    @Test","lastModifiedDate":"2022-03-16"},{"lineNumber":35,"author":{"gitId":"jiale-c"},"content":"    public void execute_listIsNotFiltered_showsCorrectResponse() {","lastModifiedDate":"2022-03-16"},{"lineNumber":36,"author":{"gitId":"jiale-c"},"content":"        assertResponseSuccess(new SummariseCommand(), model,","lastModifiedDate":"2022-03-16"},{"lineNumber":37,"author":{"gitId":"jiale-c"},"content":"                SummariseCommand.MESSAGE_SUMMARISE_PERSON_FAILURE, expectedModel);","lastModifiedDate":"2022-03-16"},{"lineNumber":38,"author":{"gitId":"jiale-c"},"content":"    }","lastModifiedDate":"2022-03-16"},{"lineNumber":39,"author":{"gitId":"jiale-c"},"content":"","lastModifiedDate":"2022-03-16"},{"lineNumber":40,"author":{"gitId":"jiale-c"},"content":"    @Test","lastModifiedDate":"2022-03-16"},{"lineNumber":41,"author":{"gitId":"jiale-c"},"content":"    public void execute_listIsFiltered_showsCorrectResponse() {","lastModifiedDate":"2022-03-16"},{"lineNumber":42,"author":{"gitId":"jiale-c"},"content":"        showPersonAtIndex(model, INDEX_FIRST_PERSON);","lastModifiedDate":"2022-03-16"},{"lineNumber":43,"author":{"gitId":"jiale-c"},"content":"        assertResponseSuccess(new SummariseCommand(), model,","lastModifiedDate":"2022-03-16"},{"lineNumber":44,"author":{"gitId":"jiale-c"},"content":"                SummariseCommand.MESSAGE_SUMMARISE_PERSON_FAILURE, expectedModel);","lastModifiedDate":"2022-03-16"},{"lineNumber":45,"author":{"gitId":"jiale-c"},"content":"    }","lastModifiedDate":"2022-03-16"},{"lineNumber":46,"author":{"gitId":"jiale-c"},"content":"","lastModifiedDate":"2022-03-16"},{"lineNumber":47,"author":{"gitId":"jiale-c"},"content":"    @Test","lastModifiedDate":"2022-03-16"},{"lineNumber":48,"author":{"gitId":"jiale-c"},"content":"    public void filterByFaculty_onEmptyList_showsEmptyString() {","lastModifiedDate":"2022-03-16"},{"lineNumber":49,"author":{"gitId":"jiale-c"},"content":"        List\u003cPerson\u003e emptyList \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2022-03-16"},{"lineNumber":50,"author":{"gitId":"jiale-c"},"content":"        String actual \u003d new SummariseCommand().filterByFaculty(emptyList);","lastModifiedDate":"2022-03-16"},{"lineNumber":51,"author":{"gitId":"jiale-c"},"content":"        assertEquals(actual, \"\");","lastModifiedDate":"2022-03-16"},{"lineNumber":52,"author":{"gitId":"jiale-c"},"content":"    }","lastModifiedDate":"2022-03-16"},{"lineNumber":53,"author":{"gitId":"jiale-c"},"content":"","lastModifiedDate":"2022-03-16"},{"lineNumber":54,"author":{"gitId":"jiale-c"},"content":"    @Test","lastModifiedDate":"2022-03-16"},{"lineNumber":55,"author":{"gitId":"jiale-c"},"content":"    public void filterByFaculty_onValidList_showsNonEmptyString() {","lastModifiedDate":"2022-03-16"},{"lineNumber":56,"author":{"gitId":"jiale-c"},"content":"        List\u003cPerson\u003e validList \u003d model.getFilteredPersonList();","lastModifiedDate":"2022-03-16"},{"lineNumber":57,"author":{"gitId":"jiale-c"},"content":"        String actual \u003d new SummariseCommand().filterByFaculty(validList);","lastModifiedDate":"2022-03-16"},{"lineNumber":58,"author":{"gitId":"jiale-c"},"content":"        assertTrue(actual.length() \u003e 0);","lastModifiedDate":"2022-03-16"},{"lineNumber":59,"author":{"gitId":"jiale-c"},"content":"    }","lastModifiedDate":"2022-03-16"},{"lineNumber":60,"author":{"gitId":"jiale-c"},"content":"","lastModifiedDate":"2022-03-16"},{"lineNumber":61,"author":{"gitId":"jiale-c"},"content":"    @Test","lastModifiedDate":"2022-03-28"},{"lineNumber":62,"author":{"gitId":"jiale-c"},"content":"    public void filterByBlock_onEmptyList_showsEmptyString() {","lastModifiedDate":"2022-03-28"},{"lineNumber":63,"author":{"gitId":"jiale-c"},"content":"        List\u003cPerson\u003e emptyList \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2022-03-28"},{"lineNumber":64,"author":{"gitId":"jiale-c"},"content":"        String actual \u003d new SummariseCommand().filterByBlock(emptyList);","lastModifiedDate":"2022-03-28"},{"lineNumber":65,"author":{"gitId":"jiale-c"},"content":"        assertEquals(actual, \"\");","lastModifiedDate":"2022-03-28"},{"lineNumber":66,"author":{"gitId":"jiale-c"},"content":"    }","lastModifiedDate":"2022-03-28"},{"lineNumber":67,"author":{"gitId":"jiale-c"},"content":"","lastModifiedDate":"2022-03-28"},{"lineNumber":68,"author":{"gitId":"jiale-c"},"content":"    @Test","lastModifiedDate":"2022-03-28"},{"lineNumber":69,"author":{"gitId":"jiale-c"},"content":"    public void filterByBlock_onValidList_showsNonEmptyString() {","lastModifiedDate":"2022-03-28"},{"lineNumber":70,"author":{"gitId":"jiale-c"},"content":"        List\u003cPerson\u003e validList \u003d model.getFilteredPersonList();","lastModifiedDate":"2022-03-28"},{"lineNumber":71,"author":{"gitId":"jiale-c"},"content":"        String actual \u003d new SummariseCommand().filterByBlock(validList);","lastModifiedDate":"2022-03-28"},{"lineNumber":72,"author":{"gitId":"jiale-c"},"content":"        assertTrue(actual.length() \u003e 0);","lastModifiedDate":"2022-03-28"},{"lineNumber":73,"author":{"gitId":"jiale-c"},"content":"    }","lastModifiedDate":"2022-03-28"},{"lineNumber":74,"author":{"gitId":"jiale-c"},"content":"","lastModifiedDate":"2022-03-29"},{"lineNumber":75,"author":{"gitId":"cwq2326"},"content":"    @Test","lastModifiedDate":"2022-03-28"},{"lineNumber":76,"author":{"gitId":"cwq2326"},"content":"    public void test_summariseCommandWordIsCorrect() {","lastModifiedDate":"2022-03-28"},{"lineNumber":77,"author":{"gitId":"cwq2326"},"content":"        assertTrue(SummariseCommand.COMMAND_WORD.equals(\"summarise\"));","lastModifiedDate":"2022-03-28"},{"lineNumber":78,"author":{"gitId":"cwq2326"},"content":"    }","lastModifiedDate":"2022-03-28"},{"lineNumber":79,"author":{"gitId":"jiale-c"},"content":"}","lastModifiedDate":"2022-03-16"}],"authorContributionMap":{"jiale-c":75,"cwq2326":4}},{"path":"src/test/java/seedu/address/logic/commands/UndoCommandTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"tanchinkiat99"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2022-03-30"},{"lineNumber":2,"author":{"gitId":"tanchinkiat99"},"content":"","lastModifiedDate":"2022-03-30"},{"lineNumber":3,"author":{"gitId":"tanchinkiat99"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2022-03-30"},{"lineNumber":4,"author":{"gitId":"tanchinkiat99"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_NAME_BOB;","lastModifiedDate":"2022-03-30"},{"lineNumber":5,"author":{"gitId":"tanchinkiat99"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_PHONE_BOB;","lastModifiedDate":"2022-03-30"},{"lineNumber":6,"author":{"gitId":"tanchinkiat99"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_TAG_HUSBAND;","lastModifiedDate":"2022-03-30"},{"lineNumber":7,"author":{"gitId":"tanchinkiat99"},"content":"import static seedu.address.logic.commands.CommandTestUtil.assertCommandFailure;","lastModifiedDate":"2022-03-30"},{"lineNumber":8,"author":{"gitId":"tanchinkiat99"},"content":"import static seedu.address.logic.commands.CommandTestUtil.assertCommandSuccess;","lastModifiedDate":"2022-03-30"},{"lineNumber":9,"author":{"gitId":"tanchinkiat99"},"content":"import static seedu.address.logic.commands.UndoCommand.MESSAGE_UNDO_FAILURE;","lastModifiedDate":"2022-03-30"},{"lineNumber":10,"author":{"gitId":"tanchinkiat99"},"content":"import static seedu.address.testutil.TypicalIndexes.INDEX_FIRST_PERSON;","lastModifiedDate":"2022-03-30"},{"lineNumber":11,"author":{"gitId":"tanchinkiat99"},"content":"import static seedu.address.testutil.TypicalPersons.getTypicalAddressBook;","lastModifiedDate":"2022-03-30"},{"lineNumber":12,"author":{"gitId":"tanchinkiat99"},"content":"","lastModifiedDate":"2022-03-30"},{"lineNumber":13,"author":{"gitId":"tanchinkiat99"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2022-03-30"},{"lineNumber":14,"author":{"gitId":"tanchinkiat99"},"content":"","lastModifiedDate":"2022-03-30"},{"lineNumber":15,"author":{"gitId":"tanchinkiat99"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2022-03-30"},{"lineNumber":16,"author":{"gitId":"tanchinkiat99"},"content":"import seedu.address.model.ModelManager;","lastModifiedDate":"2022-03-30"},{"lineNumber":17,"author":{"gitId":"tanchinkiat99"},"content":"import seedu.address.model.UserPrefs;","lastModifiedDate":"2022-03-30"},{"lineNumber":18,"author":{"gitId":"tanchinkiat99"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2022-03-30"},{"lineNumber":19,"author":{"gitId":"tanchinkiat99"},"content":"import seedu.address.testutil.PersonBuilder;","lastModifiedDate":"2022-03-30"},{"lineNumber":20,"author":{"gitId":"tanchinkiat99"},"content":"import seedu.address.testutil.TypicalPersons;","lastModifiedDate":"2022-03-30"},{"lineNumber":21,"author":{"gitId":"tanchinkiat99"},"content":"","lastModifiedDate":"2022-03-30"},{"lineNumber":22,"author":{"gitId":"tanchinkiat99"},"content":"/**","lastModifiedDate":"2022-03-30"},{"lineNumber":23,"author":{"gitId":"tanchinkiat99"},"content":" * Contains integration tests (interaction with the Model) for {@code UndoCommand}.","lastModifiedDate":"2022-03-30"},{"lineNumber":24,"author":{"gitId":"tanchinkiat99"},"content":" */","lastModifiedDate":"2022-03-30"},{"lineNumber":25,"author":{"gitId":"tanchinkiat99"},"content":"public class UndoCommandTest {","lastModifiedDate":"2022-03-30"},{"lineNumber":26,"author":{"gitId":"tanchinkiat99"},"content":"","lastModifiedDate":"2022-03-30"},{"lineNumber":27,"author":{"gitId":"tanchinkiat99"},"content":"    @Test","lastModifiedDate":"2022-03-30"},{"lineNumber":28,"author":{"gitId":"tanchinkiat99"},"content":"    public void execute_undoAsFirstFunction_failure() {","lastModifiedDate":"2022-03-30"},{"lineNumber":29,"author":{"gitId":"tanchinkiat99"},"content":"        Model model \u003d new ModelManager();","lastModifiedDate":"2022-03-30"},{"lineNumber":30,"author":{"gitId":"tanchinkiat99"},"content":"","lastModifiedDate":"2022-03-30"},{"lineNumber":31,"author":{"gitId":"tanchinkiat99"},"content":"        assertCommandFailure(new UndoCommand(), model, MESSAGE_UNDO_FAILURE);","lastModifiedDate":"2022-03-30"},{"lineNumber":32,"author":{"gitId":"tanchinkiat99"},"content":"    }","lastModifiedDate":"2022-03-30"},{"lineNumber":33,"author":{"gitId":"tanchinkiat99"},"content":"","lastModifiedDate":"2022-03-30"},{"lineNumber":34,"author":{"gitId":"tanchinkiat99"},"content":"    @Test","lastModifiedDate":"2022-03-30"},{"lineNumber":35,"author":{"gitId":"tanchinkiat99"},"content":"    public void execute_undoForAddFunction_success() {","lastModifiedDate":"2022-03-30"},{"lineNumber":36,"author":{"gitId":"tanchinkiat99"},"content":"        Model model \u003d new ModelManager();","lastModifiedDate":"2022-03-30"},{"lineNumber":37,"author":{"gitId":"tanchinkiat99"},"content":"        Model expectedModel \u003d new ModelManager();","lastModifiedDate":"2022-03-30"},{"lineNumber":38,"author":{"gitId":"tanchinkiat99"},"content":"","lastModifiedDate":"2022-03-30"},{"lineNumber":39,"author":{"gitId":"tanchinkiat99"},"content":"        model.addPerson(TypicalPersons.ALICE);","lastModifiedDate":"2022-03-30"},{"lineNumber":40,"author":{"gitId":"tanchinkiat99"},"content":"","lastModifiedDate":"2022-03-30"},{"lineNumber":41,"author":{"gitId":"tanchinkiat99"},"content":"        assertCommandSuccess(new UndoCommand(), model, UndoCommand.MESSAGE_UNDO_SUCCESS, expectedModel);","lastModifiedDate":"2022-03-30"},{"lineNumber":42,"author":{"gitId":"tanchinkiat99"},"content":"","lastModifiedDate":"2022-03-30"},{"lineNumber":43,"author":{"gitId":"tanchinkiat99"},"content":"        model \u003d new ModelManager(getTypicalAddressBook(), new UserPrefs());","lastModifiedDate":"2022-03-30"},{"lineNumber":44,"author":{"gitId":"tanchinkiat99"},"content":"        expectedModel \u003d new ModelManager(getTypicalAddressBook(), new UserPrefs());","lastModifiedDate":"2022-03-30"},{"lineNumber":45,"author":{"gitId":"tanchinkiat99"},"content":"","lastModifiedDate":"2022-03-30"},{"lineNumber":46,"author":{"gitId":"tanchinkiat99"},"content":"        model.addPerson(TypicalPersons.HOON);","lastModifiedDate":"2022-03-30"},{"lineNumber":47,"author":{"gitId":"tanchinkiat99"},"content":"","lastModifiedDate":"2022-03-30"},{"lineNumber":48,"author":{"gitId":"tanchinkiat99"},"content":"        assertCommandSuccess(new UndoCommand(), model, UndoCommand.MESSAGE_UNDO_SUCCESS, expectedModel);","lastModifiedDate":"2022-03-30"},{"lineNumber":49,"author":{"gitId":"tanchinkiat99"},"content":"    }","lastModifiedDate":"2022-03-30"},{"lineNumber":50,"author":{"gitId":"tanchinkiat99"},"content":"","lastModifiedDate":"2022-03-30"},{"lineNumber":51,"author":{"gitId":"tanchinkiat99"},"content":"    @Test","lastModifiedDate":"2022-03-30"},{"lineNumber":52,"author":{"gitId":"tanchinkiat99"},"content":"    public void execute_undoForDeleteFunction_success() {","lastModifiedDate":"2022-03-30"},{"lineNumber":53,"author":{"gitId":"tanchinkiat99"},"content":"        Model model \u003d new ModelManager();","lastModifiedDate":"2022-03-30"},{"lineNumber":54,"author":{"gitId":"tanchinkiat99"},"content":"        Model expectedModel \u003d new ModelManager();","lastModifiedDate":"2022-03-30"},{"lineNumber":55,"author":{"gitId":"tanchinkiat99"},"content":"","lastModifiedDate":"2022-03-30"},{"lineNumber":56,"author":{"gitId":"tanchinkiat99"},"content":"        model.addPerson(TypicalPersons.ALICE);","lastModifiedDate":"2022-03-30"},{"lineNumber":57,"author":{"gitId":"tanchinkiat99"},"content":"        expectedModel.addPerson(TypicalPersons.ALICE);","lastModifiedDate":"2022-03-30"},{"lineNumber":58,"author":{"gitId":"tanchinkiat99"},"content":"","lastModifiedDate":"2022-03-30"},{"lineNumber":59,"author":{"gitId":"tanchinkiat99"},"content":"        model.deletePerson(TypicalPersons.ALICE);","lastModifiedDate":"2022-03-30"},{"lineNumber":60,"author":{"gitId":"tanchinkiat99"},"content":"","lastModifiedDate":"2022-03-30"},{"lineNumber":61,"author":{"gitId":"tanchinkiat99"},"content":"        assertCommandSuccess(new UndoCommand(), model, UndoCommand.MESSAGE_UNDO_SUCCESS, expectedModel);","lastModifiedDate":"2022-03-30"},{"lineNumber":62,"author":{"gitId":"tanchinkiat99"},"content":"","lastModifiedDate":"2022-03-30"},{"lineNumber":63,"author":{"gitId":"tanchinkiat99"},"content":"        model \u003d new ModelManager(getTypicalAddressBook(), new UserPrefs());","lastModifiedDate":"2022-03-30"},{"lineNumber":64,"author":{"gitId":"tanchinkiat99"},"content":"        expectedModel \u003d new ModelManager(getTypicalAddressBook(), new UserPrefs());","lastModifiedDate":"2022-03-30"},{"lineNumber":65,"author":{"gitId":"tanchinkiat99"},"content":"","lastModifiedDate":"2022-03-30"},{"lineNumber":66,"author":{"gitId":"tanchinkiat99"},"content":"        model.addPerson(TypicalPersons.HOON);","lastModifiedDate":"2022-03-30"},{"lineNumber":67,"author":{"gitId":"tanchinkiat99"},"content":"","lastModifiedDate":"2022-03-30"},{"lineNumber":68,"author":{"gitId":"tanchinkiat99"},"content":"        assertCommandSuccess(new UndoCommand(), model, UndoCommand.MESSAGE_UNDO_SUCCESS, expectedModel);","lastModifiedDate":"2022-03-30"},{"lineNumber":69,"author":{"gitId":"tanchinkiat99"},"content":"    }","lastModifiedDate":"2022-03-30"},{"lineNumber":70,"author":{"gitId":"tanchinkiat99"},"content":"","lastModifiedDate":"2022-03-30"},{"lineNumber":71,"author":{"gitId":"tanchinkiat99"},"content":"    @Test","lastModifiedDate":"2022-03-30"},{"lineNumber":72,"author":{"gitId":"tanchinkiat99"},"content":"    public void execute_undoForEditFunction_success() {","lastModifiedDate":"2022-03-30"},{"lineNumber":73,"author":{"gitId":"tanchinkiat99"},"content":"        Model model \u003d new ModelManager();","lastModifiedDate":"2022-03-30"},{"lineNumber":74,"author":{"gitId":"tanchinkiat99"},"content":"        Model expectedModel \u003d new ModelManager();","lastModifiedDate":"2022-03-30"},{"lineNumber":75,"author":{"gitId":"tanchinkiat99"},"content":"","lastModifiedDate":"2022-03-30"},{"lineNumber":76,"author":{"gitId":"tanchinkiat99"},"content":"        model.addPerson(TypicalPersons.ALICE);","lastModifiedDate":"2022-03-30"},{"lineNumber":77,"author":{"gitId":"tanchinkiat99"},"content":"        expectedModel.addPerson(TypicalPersons.ALICE);","lastModifiedDate":"2022-03-30"},{"lineNumber":78,"author":{"gitId":"tanchinkiat99"},"content":"","lastModifiedDate":"2022-03-30"},{"lineNumber":79,"author":{"gitId":"tanchinkiat99"},"content":"        Person firstPerson \u003d model.getFilteredPersonList().get(INDEX_FIRST_PERSON.getZeroBased());","lastModifiedDate":"2022-03-30"},{"lineNumber":80,"author":{"gitId":"tanchinkiat99"},"content":"","lastModifiedDate":"2022-03-30"},{"lineNumber":81,"author":{"gitId":"tanchinkiat99"},"content":"        PersonBuilder personInList \u003d new PersonBuilder(firstPerson);","lastModifiedDate":"2022-03-30"},{"lineNumber":82,"author":{"gitId":"tanchinkiat99"},"content":"        Person editedPerson \u003d personInList.withName(VALID_NAME_BOB).withPhone(VALID_PHONE_BOB)","lastModifiedDate":"2022-03-30"},{"lineNumber":83,"author":{"gitId":"tanchinkiat99"},"content":"                .withTags(VALID_TAG_HUSBAND).build();","lastModifiedDate":"2022-03-30"},{"lineNumber":84,"author":{"gitId":"tanchinkiat99"},"content":"","lastModifiedDate":"2022-03-30"},{"lineNumber":85,"author":{"gitId":"tanchinkiat99"},"content":"        model.setPerson(firstPerson, editedPerson);","lastModifiedDate":"2022-03-30"},{"lineNumber":86,"author":{"gitId":"tanchinkiat99"},"content":"","lastModifiedDate":"2022-03-30"},{"lineNumber":87,"author":{"gitId":"tanchinkiat99"},"content":"        assertCommandSuccess(new UndoCommand(), model, UndoCommand.MESSAGE_UNDO_SUCCESS, expectedModel);","lastModifiedDate":"2022-03-30"},{"lineNumber":88,"author":{"gitId":"tanchinkiat99"},"content":"","lastModifiedDate":"2022-03-30"},{"lineNumber":89,"author":{"gitId":"tanchinkiat99"},"content":"        model \u003d new ModelManager(getTypicalAddressBook(), new UserPrefs());","lastModifiedDate":"2022-03-30"},{"lineNumber":90,"author":{"gitId":"tanchinkiat99"},"content":"        expectedModel \u003d new ModelManager(getTypicalAddressBook(), new UserPrefs());","lastModifiedDate":"2022-03-30"},{"lineNumber":91,"author":{"gitId":"tanchinkiat99"},"content":"","lastModifiedDate":"2022-03-30"},{"lineNumber":92,"author":{"gitId":"tanchinkiat99"},"content":"        firstPerson \u003d model.getFilteredPersonList().get(INDEX_FIRST_PERSON.getZeroBased());","lastModifiedDate":"2022-03-30"},{"lineNumber":93,"author":{"gitId":"tanchinkiat99"},"content":"","lastModifiedDate":"2022-03-30"},{"lineNumber":94,"author":{"gitId":"tanchinkiat99"},"content":"        personInList \u003d new PersonBuilder(firstPerson);","lastModifiedDate":"2022-03-30"},{"lineNumber":95,"author":{"gitId":"tanchinkiat99"},"content":"        editedPerson \u003d personInList.withName(VALID_NAME_BOB).withPhone(VALID_PHONE_BOB)","lastModifiedDate":"2022-03-30"},{"lineNumber":96,"author":{"gitId":"tanchinkiat99"},"content":"                .withTags(VALID_TAG_HUSBAND).build();","lastModifiedDate":"2022-03-30"},{"lineNumber":97,"author":{"gitId":"tanchinkiat99"},"content":"","lastModifiedDate":"2022-03-30"},{"lineNumber":98,"author":{"gitId":"tanchinkiat99"},"content":"        model.setPerson(firstPerson, editedPerson);","lastModifiedDate":"2022-03-30"},{"lineNumber":99,"author":{"gitId":"tanchinkiat99"},"content":"","lastModifiedDate":"2022-03-30"},{"lineNumber":100,"author":{"gitId":"tanchinkiat99"},"content":"        assertCommandSuccess(new UndoCommand(), model, UndoCommand.MESSAGE_UNDO_SUCCESS, expectedModel);","lastModifiedDate":"2022-03-30"},{"lineNumber":101,"author":{"gitId":"tanchinkiat99"},"content":"    }","lastModifiedDate":"2022-03-30"},{"lineNumber":102,"author":{"gitId":"tanchinkiat99"},"content":"","lastModifiedDate":"2022-03-30"},{"lineNumber":103,"author":{"gitId":"tanchinkiat99"},"content":"    @Test","lastModifiedDate":"2022-03-30"},{"lineNumber":104,"author":{"gitId":"tanchinkiat99"},"content":"    public void test_undoCommandWordIsCorrect() {","lastModifiedDate":"2022-03-30"},{"lineNumber":105,"author":{"gitId":"tanchinkiat99"},"content":"        assertTrue(UndoCommand.COMMAND_WORD.equals(\"undo\"));","lastModifiedDate":"2022-03-30"},{"lineNumber":106,"author":{"gitId":"tanchinkiat99"},"content":"    }","lastModifiedDate":"2022-03-30"},{"lineNumber":107,"author":{"gitId":"tanchinkiat99"},"content":"","lastModifiedDate":"2022-03-30"},{"lineNumber":108,"author":{"gitId":"tanchinkiat99"},"content":"    @Test","lastModifiedDate":"2022-03-30"},{"lineNumber":109,"author":{"gitId":"tanchinkiat99"},"content":"    public void equals() {","lastModifiedDate":"2022-03-30"},{"lineNumber":110,"author":{"gitId":"tanchinkiat99"},"content":"        UndoCommand command \u003d new UndoCommand();","lastModifiedDate":"2022-03-30"},{"lineNumber":111,"author":{"gitId":"tanchinkiat99"},"content":"        assertTrue(command.equals(new UndoCommand()));","lastModifiedDate":"2022-03-30"},{"lineNumber":112,"author":{"gitId":"tanchinkiat99"},"content":"    }","lastModifiedDate":"2022-03-30"},{"lineNumber":113,"author":{"gitId":"tanchinkiat99"},"content":"}","lastModifiedDate":"2022-03-30"}],"authorContributionMap":{"tanchinkiat99":113}},{"path":"src/test/java/seedu/address/logic/parser/AddCommandParserTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2017-06-15"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static seedu.address.commons.core.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2017-06-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.ADDRESS_DESC_AMY;","lastModifiedDate":"2017-07-05"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.ADDRESS_DESC_BOB;","lastModifiedDate":"2017-07-05"},{"lineNumber":6,"author":{"gitId":"DannyDakota"},"content":"import static seedu.address.logic.commands.CommandTestUtil.BLOCK_DESC_AMY;","lastModifiedDate":"2022-03-17"},{"lineNumber":7,"author":{"gitId":"DannyDakota"},"content":"import static seedu.address.logic.commands.CommandTestUtil.BLOCK_DESC_BOB;","lastModifiedDate":"2022-03-17"},{"lineNumber":8,"author":{"gitId":"DannyDakota"},"content":"import static seedu.address.logic.commands.CommandTestUtil.COVID_STATUS_DESC_AMY;","lastModifiedDate":"2022-03-08"},{"lineNumber":9,"author":{"gitId":"DannyDakota"},"content":"import static seedu.address.logic.commands.CommandTestUtil.COVID_STATUS_DESC_BOB;","lastModifiedDate":"2022-03-08"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.EMAIL_DESC_AMY;","lastModifiedDate":"2017-07-05"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.EMAIL_DESC_BOB;","lastModifiedDate":"2017-07-05"},{"lineNumber":12,"author":{"gitId":"DannyDakota"},"content":"import static seedu.address.logic.commands.CommandTestUtil.FACULTY_DESC_AMY;","lastModifiedDate":"2022-03-08"},{"lineNumber":13,"author":{"gitId":"DannyDakota"},"content":"import static seedu.address.logic.commands.CommandTestUtil.FACULTY_DESC_BOB;","lastModifiedDate":"2022-03-08"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.INVALID_ADDRESS_DESC;","lastModifiedDate":"2017-07-05"},{"lineNumber":15,"author":{"gitId":"DannyDakota"},"content":"import static seedu.address.logic.commands.CommandTestUtil.INVALID_BLOCK_DESC;","lastModifiedDate":"2022-03-17"},{"lineNumber":16,"author":{"gitId":"DannyDakota"},"content":"import static seedu.address.logic.commands.CommandTestUtil.INVALID_COVID_STATUS_DESC;","lastModifiedDate":"2022-03-17"},{"lineNumber":17,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.INVALID_EMAIL_DESC;","lastModifiedDate":"2017-07-05"},{"lineNumber":18,"author":{"gitId":"DannyDakota"},"content":"import static seedu.address.logic.commands.CommandTestUtil.INVALID_FACULTY_DESC;","lastModifiedDate":"2022-03-17"},{"lineNumber":19,"author":{"gitId":"DannyDakota"},"content":"import static seedu.address.logic.commands.CommandTestUtil.INVALID_MATRICULATION_NUMBER_DESC;","lastModifiedDate":"2022-03-17"},{"lineNumber":20,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.INVALID_NAME_DESC;","lastModifiedDate":"2017-07-05"},{"lineNumber":21,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.INVALID_PHONE_DESC;","lastModifiedDate":"2017-07-05"},{"lineNumber":22,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.INVALID_TAG_DESC;","lastModifiedDate":"2017-07-05"},{"lineNumber":23,"author":{"gitId":"DannyDakota"},"content":"import static seedu.address.logic.commands.CommandTestUtil.MATRICULATION_NUMBER_DESC_AMY;","lastModifiedDate":"2022-03-08"},{"lineNumber":24,"author":{"gitId":"DannyDakota"},"content":"import static seedu.address.logic.commands.CommandTestUtil.MATRICULATION_NUMBER_DESC_BOB;","lastModifiedDate":"2022-03-08"},{"lineNumber":25,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.NAME_DESC_AMY;","lastModifiedDate":"2017-07-05"},{"lineNumber":26,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.NAME_DESC_BOB;","lastModifiedDate":"2017-07-05"},{"lineNumber":27,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.PHONE_DESC_AMY;","lastModifiedDate":"2017-07-05"},{"lineNumber":28,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.PHONE_DESC_BOB;","lastModifiedDate":"2017-07-05"},{"lineNumber":29,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.PREAMBLE_NON_EMPTY;","lastModifiedDate":"2017-12-23"},{"lineNumber":30,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.PREAMBLE_WHITESPACE;","lastModifiedDate":"2017-12-23"},{"lineNumber":31,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.TAG_DESC_FRIEND;","lastModifiedDate":"2017-07-05"},{"lineNumber":32,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.TAG_DESC_HUSBAND;","lastModifiedDate":"2017-07-05"},{"lineNumber":33,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_ADDRESS_BOB;","lastModifiedDate":"2017-07-05"},{"lineNumber":34,"author":{"gitId":"DannyDakota"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_BLOCK_BOB;","lastModifiedDate":"2022-03-17"},{"lineNumber":35,"author":{"gitId":"DannyDakota"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_COVID_STATUS_BOB;","lastModifiedDate":"2022-03-08"},{"lineNumber":36,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_EMAIL_BOB;","lastModifiedDate":"2022-03-08"},{"lineNumber":37,"author":{"gitId":"DannyDakota"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_FACULTY_BOB;","lastModifiedDate":"2022-03-08"},{"lineNumber":38,"author":{"gitId":"DannyDakota"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_MATRICULATION_NUMBER_BOB;","lastModifiedDate":"2022-03-08"},{"lineNumber":39,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_NAME_BOB;","lastModifiedDate":"2017-07-05"},{"lineNumber":40,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_PHONE_BOB;","lastModifiedDate":"2017-07-05"},{"lineNumber":41,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_TAG_FRIEND;","lastModifiedDate":"2017-07-05"},{"lineNumber":42,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_TAG_HUSBAND;","lastModifiedDate":"2017-07-05"},{"lineNumber":43,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CommandParserTestUtil.assertParseFailure;","lastModifiedDate":"2017-07-06"},{"lineNumber":44,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CommandParserTestUtil.assertParseSuccess;","lastModifiedDate":"2017-07-06"},{"lineNumber":45,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.TypicalPersons.AMY;","lastModifiedDate":"2018-07-25"},{"lineNumber":46,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.TypicalPersons.BOB;","lastModifiedDate":"2018-07-25"},{"lineNumber":47,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":48,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":49,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":50,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.AddCommand;","lastModifiedDate":"2017-06-15"},{"lineNumber":51,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Address;","lastModifiedDate":"2017-06-15"},{"lineNumber":52,"author":{"gitId":"DannyDakota"},"content":"import seedu.address.model.person.Block;","lastModifiedDate":"2022-03-17"},{"lineNumber":53,"author":{"gitId":"DannyDakota"},"content":"import seedu.address.model.person.CovidStatus;","lastModifiedDate":"2022-03-17"},{"lineNumber":54,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Email;","lastModifiedDate":"2017-06-15"},{"lineNumber":55,"author":{"gitId":"DannyDakota"},"content":"import seedu.address.model.person.Faculty;","lastModifiedDate":"2022-03-17"},{"lineNumber":56,"author":{"gitId":"DannyDakota"},"content":"import seedu.address.model.person.MatriculationNumber;","lastModifiedDate":"2022-03-17"},{"lineNumber":57,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Name;","lastModifiedDate":"2017-06-15"},{"lineNumber":58,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2017-06-15"},{"lineNumber":59,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Phone;","lastModifiedDate":"2017-06-15"},{"lineNumber":60,"author":{"gitId":"-"},"content":"import seedu.address.model.tag.Tag;","lastModifiedDate":"2017-06-15"},{"lineNumber":61,"author":{"gitId":"-"},"content":"import seedu.address.testutil.PersonBuilder;","lastModifiedDate":"2017-06-15"},{"lineNumber":62,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":63,"author":{"gitId":"-"},"content":"public class AddCommandParserTest {","lastModifiedDate":"2017-06-15"},{"lineNumber":64,"author":{"gitId":"-"},"content":"    private AddCommandParser parser \u003d new AddCommandParser();","lastModifiedDate":"2017-06-15"},{"lineNumber":65,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":66,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-15"},{"lineNumber":67,"author":{"gitId":"-"},"content":"    public void parse_allFieldsPresent_success() {","lastModifiedDate":"2017-08-15"},{"lineNumber":68,"author":{"gitId":"-"},"content":"        Person expectedPerson \u003d new PersonBuilder(BOB).withTags(VALID_TAG_FRIEND).build();","lastModifiedDate":"2018-07-25"},{"lineNumber":69,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":70,"author":{"gitId":"-"},"content":"        // whitespace only preamble","lastModifiedDate":"2017-12-23"},{"lineNumber":71,"author":{"gitId":"DannyDakota"},"content":"        assertParseSuccess(parser, PREAMBLE_WHITESPACE + NAME_DESC_BOB + BLOCK_DESC_BOB + FACULTY_DESC_BOB","lastModifiedDate":"2022-03-17"},{"lineNumber":72,"author":{"gitId":"DannyDakota"},"content":"                + PHONE_DESC_BOB + EMAIL_DESC_BOB + ADDRESS_DESC_BOB + MATRICULATION_NUMBER_DESC_BOB","lastModifiedDate":"2022-03-17"},{"lineNumber":73,"author":{"gitId":"DannyDakota"},"content":"                + COVID_STATUS_DESC_BOB + TAG_DESC_FRIEND, new AddCommand(expectedPerson));","lastModifiedDate":"2022-03-08"},{"lineNumber":74,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-12-23"},{"lineNumber":75,"author":{"gitId":"-"},"content":"        // multiple names - last name accepted","lastModifiedDate":"2017-06-15"},{"lineNumber":76,"author":{"gitId":"DannyDakota"},"content":"        assertParseSuccess(parser, NAME_DESC_AMY + NAME_DESC_BOB + BLOCK_DESC_BOB + FACULTY_DESC_BOB","lastModifiedDate":"2022-03-17"},{"lineNumber":77,"author":{"gitId":"DannyDakota"},"content":"                + PHONE_DESC_BOB + EMAIL_DESC_BOB + ADDRESS_DESC_BOB + MATRICULATION_NUMBER_DESC_BOB","lastModifiedDate":"2022-03-17"},{"lineNumber":78,"author":{"gitId":"DannyDakota"},"content":"                + COVID_STATUS_DESC_BOB + TAG_DESC_FRIEND, new AddCommand(expectedPerson));","lastModifiedDate":"2022-03-17"},{"lineNumber":79,"author":{"gitId":"DannyDakota"},"content":"","lastModifiedDate":"2022-03-17"},{"lineNumber":80,"author":{"gitId":"DannyDakota"},"content":"        // multiple blocks - last block accepted","lastModifiedDate":"2022-03-17"},{"lineNumber":81,"author":{"gitId":"DannyDakota"},"content":"        assertParseSuccess(parser, NAME_DESC_BOB + BLOCK_DESC_AMY + BLOCK_DESC_BOB + FACULTY_DESC_BOB","lastModifiedDate":"2022-03-17"},{"lineNumber":82,"author":{"gitId":"DannyDakota"},"content":"                + PHONE_DESC_BOB + EMAIL_DESC_BOB + ADDRESS_DESC_BOB + MATRICULATION_NUMBER_DESC_BOB","lastModifiedDate":"2022-03-17"},{"lineNumber":83,"author":{"gitId":"DannyDakota"},"content":"                + COVID_STATUS_DESC_BOB + TAG_DESC_FRIEND, new AddCommand(expectedPerson));","lastModifiedDate":"2022-03-17"},{"lineNumber":84,"author":{"gitId":"DannyDakota"},"content":"","lastModifiedDate":"2022-03-17"},{"lineNumber":85,"author":{"gitId":"DannyDakota"},"content":"        // multiple faculties - last faculty accepted","lastModifiedDate":"2022-03-17"},{"lineNumber":86,"author":{"gitId":"DannyDakota"},"content":"        assertParseSuccess(parser, NAME_DESC_BOB + BLOCK_DESC_BOB + FACULTY_DESC_AMY","lastModifiedDate":"2022-03-17"},{"lineNumber":87,"author":{"gitId":"DannyDakota"},"content":"                + FACULTY_DESC_BOB + PHONE_DESC_BOB + EMAIL_DESC_BOB + ADDRESS_DESC_BOB + MATRICULATION_NUMBER_DESC_BOB","lastModifiedDate":"2022-03-17"},{"lineNumber":88,"author":{"gitId":"DannyDakota"},"content":"                + COVID_STATUS_DESC_BOB + TAG_DESC_FRIEND, new AddCommand(expectedPerson));","lastModifiedDate":"2022-03-08"},{"lineNumber":89,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":90,"author":{"gitId":"-"},"content":"        // multiple phones - last phone accepted","lastModifiedDate":"2017-06-15"},{"lineNumber":91,"author":{"gitId":"DannyDakota"},"content":"        assertParseSuccess(parser, NAME_DESC_BOB + FACULTY_DESC_BOB + BLOCK_DESC_BOB + PHONE_DESC_AMY","lastModifiedDate":"2022-03-17"},{"lineNumber":92,"author":{"gitId":"DannyDakota"},"content":"                + PHONE_DESC_BOB + EMAIL_DESC_BOB + ADDRESS_DESC_BOB + MATRICULATION_NUMBER_DESC_BOB","lastModifiedDate":"2022-03-17"},{"lineNumber":93,"author":{"gitId":"DannyDakota"},"content":"                + COVID_STATUS_DESC_BOB + TAG_DESC_FRIEND, new AddCommand(expectedPerson));","lastModifiedDate":"2022-03-08"},{"lineNumber":94,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":95,"author":{"gitId":"-"},"content":"        // multiple emails - last email accepted","lastModifiedDate":"2017-06-15"},{"lineNumber":96,"author":{"gitId":"DannyDakota"},"content":"        assertParseSuccess(parser, NAME_DESC_BOB + BLOCK_DESC_BOB + FACULTY_DESC_BOB + PHONE_DESC_BOB","lastModifiedDate":"2022-03-17"},{"lineNumber":97,"author":{"gitId":"DannyDakota"},"content":"                + EMAIL_DESC_AMY + EMAIL_DESC_BOB + ADDRESS_DESC_BOB + MATRICULATION_NUMBER_DESC_BOB","lastModifiedDate":"2022-03-17"},{"lineNumber":98,"author":{"gitId":"DannyDakota"},"content":"                + COVID_STATUS_DESC_BOB + TAG_DESC_FRIEND, new AddCommand(expectedPerson));","lastModifiedDate":"2022-03-08"},{"lineNumber":99,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":100,"author":{"gitId":"-"},"content":"        // multiple addresses - last address accepted","lastModifiedDate":"2017-06-15"},{"lineNumber":101,"author":{"gitId":"DannyDakota"},"content":"        assertParseSuccess(parser, NAME_DESC_BOB + BLOCK_DESC_BOB + FACULTY_DESC_BOB + PHONE_DESC_BOB","lastModifiedDate":"2022-03-17"},{"lineNumber":102,"author":{"gitId":"DannyDakota"},"content":"                + EMAIL_DESC_BOB + ADDRESS_DESC_AMY + ADDRESS_DESC_BOB + MATRICULATION_NUMBER_DESC_BOB","lastModifiedDate":"2022-03-17"},{"lineNumber":103,"author":{"gitId":"DannyDakota"},"content":"                + COVID_STATUS_DESC_BOB + TAG_DESC_FRIEND, new AddCommand(expectedPerson));","lastModifiedDate":"2022-03-08"},{"lineNumber":104,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":105,"author":{"gitId":"DannyDakota"},"content":"        // multiple matriculation numbers - last number accepted","lastModifiedDate":"2022-03-17"},{"lineNumber":106,"author":{"gitId":"DannyDakota"},"content":"        assertParseSuccess(parser, NAME_DESC_BOB + BLOCK_DESC_BOB + FACULTY_DESC_BOB","lastModifiedDate":"2022-03-17"},{"lineNumber":107,"author":{"gitId":"DannyDakota"},"content":"                + PHONE_DESC_BOB + EMAIL_DESC_BOB + ADDRESS_DESC_BOB + MATRICULATION_NUMBER_DESC_AMY","lastModifiedDate":"2022-03-17"},{"lineNumber":108,"author":{"gitId":"DannyDakota"},"content":"                + MATRICULATION_NUMBER_DESC_BOB + COVID_STATUS_DESC_BOB","lastModifiedDate":"2022-03-17"},{"lineNumber":109,"author":{"gitId":"DannyDakota"},"content":"                + TAG_DESC_FRIEND, new AddCommand(expectedPerson));","lastModifiedDate":"2022-03-17"},{"lineNumber":110,"author":{"gitId":"DannyDakota"},"content":"","lastModifiedDate":"2022-03-17"},{"lineNumber":111,"author":{"gitId":"DannyDakota"},"content":"        // multiple statuses - last status accepted","lastModifiedDate":"2022-03-17"},{"lineNumber":112,"author":{"gitId":"DannyDakota"},"content":"        assertParseSuccess(parser, NAME_DESC_BOB + BLOCK_DESC_BOB + FACULTY_DESC_BOB","lastModifiedDate":"2022-03-17"},{"lineNumber":113,"author":{"gitId":"DannyDakota"},"content":"                + PHONE_DESC_BOB + EMAIL_DESC_BOB + ADDRESS_DESC_BOB + MATRICULATION_NUMBER_DESC_BOB","lastModifiedDate":"2022-03-17"},{"lineNumber":114,"author":{"gitId":"DannyDakota"},"content":"                + COVID_STATUS_DESC_AMY + COVID_STATUS_DESC_BOB + TAG_DESC_FRIEND, new AddCommand(expectedPerson));","lastModifiedDate":"2022-03-17"},{"lineNumber":115,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-03-17"},{"lineNumber":116,"author":{"gitId":"-"},"content":"        // multiple tags - all accepted","lastModifiedDate":"2017-06-15"},{"lineNumber":117,"author":{"gitId":"-"},"content":"        Person expectedPersonMultipleTags \u003d new PersonBuilder(BOB).withTags(VALID_TAG_FRIEND, VALID_TAG_HUSBAND)","lastModifiedDate":"2018-07-25"},{"lineNumber":118,"author":{"gitId":"-"},"content":"                .build();","lastModifiedDate":"2018-07-25"},{"lineNumber":119,"author":{"gitId":"DannyDakota"},"content":"        assertParseSuccess(parser, NAME_DESC_BOB + BLOCK_DESC_BOB + FACULTY_DESC_BOB + PHONE_DESC_BOB","lastModifiedDate":"2022-03-17"},{"lineNumber":120,"author":{"gitId":"DannyDakota"},"content":"                + EMAIL_DESC_BOB + ADDRESS_DESC_BOB + MATRICULATION_NUMBER_DESC_BOB + COVID_STATUS_DESC_BOB","lastModifiedDate":"2022-03-17"},{"lineNumber":121,"author":{"gitId":"-"},"content":"                + TAG_DESC_HUSBAND + TAG_DESC_FRIEND, new AddCommand(expectedPersonMultipleTags));","lastModifiedDate":"2017-12-23"},{"lineNumber":122,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-15"},{"lineNumber":123,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":124,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-15"},{"lineNumber":125,"author":{"gitId":"-"},"content":"    public void parse_optionalFieldsMissing_success() {","lastModifiedDate":"2017-08-15"},{"lineNumber":126,"author":{"gitId":"-"},"content":"        // zero tags","lastModifiedDate":"2017-06-15"},{"lineNumber":127,"author":{"gitId":"-"},"content":"        Person expectedPerson \u003d new PersonBuilder(AMY).withTags().build();","lastModifiedDate":"2018-07-25"},{"lineNumber":128,"author":{"gitId":"DannyDakota"},"content":"        assertParseSuccess(parser, NAME_DESC_AMY + BLOCK_DESC_AMY + FACULTY_DESC_AMY + PHONE_DESC_AMY","lastModifiedDate":"2022-03-17"},{"lineNumber":129,"author":{"gitId":"DannyDakota"},"content":"                        + EMAIL_DESC_AMY + ADDRESS_DESC_AMY + MATRICULATION_NUMBER_DESC_AMY + COVID_STATUS_DESC_AMY,","lastModifiedDate":"2022-03-17"},{"lineNumber":130,"author":{"gitId":"-"},"content":"                new AddCommand(expectedPerson));","lastModifiedDate":"2017-12-23"},{"lineNumber":131,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-15"},{"lineNumber":132,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":133,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-15"},{"lineNumber":134,"author":{"gitId":"-"},"content":"    public void parse_compulsoryFieldMissing_failure() {","lastModifiedDate":"2017-06-15"},{"lineNumber":135,"author":{"gitId":"-"},"content":"        String expectedMessage \u003d String.format(MESSAGE_INVALID_COMMAND_FORMAT, AddCommand.MESSAGE_USAGE);","lastModifiedDate":"2017-06-15"},{"lineNumber":136,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":137,"author":{"gitId":"-"},"content":"        // missing name prefix","lastModifiedDate":"2017-06-15"},{"lineNumber":138,"author":{"gitId":"DannyDakota"},"content":"        assertParseFailure(parser, VALID_NAME_BOB + BLOCK_DESC_BOB + FACULTY_DESC_BOB + PHONE_DESC_BOB","lastModifiedDate":"2022-03-17"},{"lineNumber":139,"author":{"gitId":"DannyDakota"},"content":"                        + EMAIL_DESC_BOB + ADDRESS_DESC_BOB + MATRICULATION_NUMBER_DESC_BOB + COVID_STATUS_DESC_BOB,","lastModifiedDate":"2022-03-17"},{"lineNumber":140,"author":{"gitId":"DannyDakota"},"content":"                expectedMessage);","lastModifiedDate":"2022-03-17"},{"lineNumber":141,"author":{"gitId":"DannyDakota"},"content":"","lastModifiedDate":"2022-03-17"},{"lineNumber":142,"author":{"gitId":"DannyDakota"},"content":"        // missing block prefix","lastModifiedDate":"2022-03-17"},{"lineNumber":143,"author":{"gitId":"DannyDakota"},"content":"        assertParseFailure(parser, NAME_DESC_BOB + VALID_BLOCK_BOB + FACULTY_DESC_BOB + PHONE_DESC_BOB","lastModifiedDate":"2022-03-17"},{"lineNumber":144,"author":{"gitId":"DannyDakota"},"content":"                        + EMAIL_DESC_BOB + ADDRESS_DESC_BOB + MATRICULATION_NUMBER_DESC_BOB + COVID_STATUS_DESC_BOB,","lastModifiedDate":"2022-03-17"},{"lineNumber":145,"author":{"gitId":"DannyDakota"},"content":"                expectedMessage);","lastModifiedDate":"2022-03-08"},{"lineNumber":146,"author":{"gitId":"DannyDakota"},"content":"","lastModifiedDate":"2022-03-08"},{"lineNumber":147,"author":{"gitId":"DannyDakota"},"content":"        // missing faculty prefix","lastModifiedDate":"2022-03-08"},{"lineNumber":148,"author":{"gitId":"DannyDakota"},"content":"        assertParseFailure(parser, NAME_DESC_BOB + BLOCK_DESC_BOB + VALID_FACULTY_BOB + PHONE_DESC_BOB","lastModifiedDate":"2022-03-17"},{"lineNumber":149,"author":{"gitId":"DannyDakota"},"content":"                        + EMAIL_DESC_BOB + ADDRESS_DESC_BOB + MATRICULATION_NUMBER_DESC_BOB + COVID_STATUS_DESC_BOB,","lastModifiedDate":"2022-03-17"},{"lineNumber":150,"author":{"gitId":"-"},"content":"                expectedMessage);","lastModifiedDate":"2017-12-23"},{"lineNumber":151,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":152,"author":{"gitId":"-"},"content":"        // missing phone prefix","lastModifiedDate":"2017-06-15"},{"lineNumber":153,"author":{"gitId":"DannyDakota"},"content":"        assertParseFailure(parser, NAME_DESC_BOB + BLOCK_DESC_BOB + FACULTY_DESC_BOB + VALID_PHONE_BOB","lastModifiedDate":"2022-03-17"},{"lineNumber":154,"author":{"gitId":"DannyDakota"},"content":"                        + EMAIL_DESC_BOB + ADDRESS_DESC_BOB + MATRICULATION_NUMBER_DESC_BOB + COVID_STATUS_DESC_BOB,","lastModifiedDate":"2022-03-17"},{"lineNumber":155,"author":{"gitId":"-"},"content":"                expectedMessage);","lastModifiedDate":"2017-12-23"},{"lineNumber":156,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":157,"author":{"gitId":"-"},"content":"        // missing email prefix","lastModifiedDate":"2017-06-15"},{"lineNumber":158,"author":{"gitId":"DannyDakota"},"content":"        assertParseFailure(parser, NAME_DESC_BOB + BLOCK_DESC_BOB + FACULTY_DESC_BOB + PHONE_DESC_BOB","lastModifiedDate":"2022-03-17"},{"lineNumber":159,"author":{"gitId":"DannyDakota"},"content":"                        + VALID_EMAIL_BOB + ADDRESS_DESC_BOB + MATRICULATION_NUMBER_DESC_BOB + COVID_STATUS_DESC_BOB,","lastModifiedDate":"2022-03-17"},{"lineNumber":160,"author":{"gitId":"-"},"content":"                expectedMessage);","lastModifiedDate":"2017-12-23"},{"lineNumber":161,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":162,"author":{"gitId":"-"},"content":"        // missing address prefix","lastModifiedDate":"2017-06-15"},{"lineNumber":163,"author":{"gitId":"DannyDakota"},"content":"        assertParseFailure(parser, NAME_DESC_BOB + BLOCK_DESC_BOB + FACULTY_DESC_BOB + PHONE_DESC_BOB","lastModifiedDate":"2022-03-17"},{"lineNumber":164,"author":{"gitId":"DannyDakota"},"content":"                        + EMAIL_DESC_BOB + VALID_ADDRESS_BOB + MATRICULATION_NUMBER_DESC_BOB + COVID_STATUS_DESC_BOB,","lastModifiedDate":"2022-03-17"},{"lineNumber":165,"author":{"gitId":"DannyDakota"},"content":"                expectedMessage);","lastModifiedDate":"2022-03-08"},{"lineNumber":166,"author":{"gitId":"DannyDakota"},"content":"","lastModifiedDate":"2022-03-08"},{"lineNumber":167,"author":{"gitId":"DannyDakota"},"content":"        // missing matriculation number prefix","lastModifiedDate":"2022-03-08"},{"lineNumber":168,"author":{"gitId":"DannyDakota"},"content":"        assertParseFailure(parser, NAME_DESC_BOB + BLOCK_DESC_BOB + FACULTY_DESC_BOB + PHONE_DESC_BOB","lastModifiedDate":"2022-03-17"},{"lineNumber":169,"author":{"gitId":"DannyDakota"},"content":"                        + EMAIL_DESC_BOB + ADDRESS_DESC_BOB + VALID_MATRICULATION_NUMBER_BOB + COVID_STATUS_DESC_BOB,","lastModifiedDate":"2022-03-17"},{"lineNumber":170,"author":{"gitId":"DannyDakota"},"content":"                expectedMessage);","lastModifiedDate":"2022-03-08"},{"lineNumber":171,"author":{"gitId":"DannyDakota"},"content":"","lastModifiedDate":"2022-03-08"},{"lineNumber":172,"author":{"gitId":"DannyDakota"},"content":"        // missing covid status prefix","lastModifiedDate":"2022-03-08"},{"lineNumber":173,"author":{"gitId":"DannyDakota"},"content":"        assertParseFailure(parser, NAME_DESC_BOB + BLOCK_DESC_BOB + FACULTY_DESC_BOB + PHONE_DESC_BOB","lastModifiedDate":"2022-03-17"},{"lineNumber":174,"author":{"gitId":"DannyDakota"},"content":"                        + EMAIL_DESC_BOB + ADDRESS_DESC_BOB + MATRICULATION_NUMBER_DESC_BOB + VALID_COVID_STATUS_BOB,","lastModifiedDate":"2022-03-17"},{"lineNumber":175,"author":{"gitId":"-"},"content":"                expectedMessage);","lastModifiedDate":"2017-12-23"},{"lineNumber":176,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":177,"author":{"gitId":"-"},"content":"        // all prefixes missing","lastModifiedDate":"2017-06-15"},{"lineNumber":178,"author":{"gitId":"DannyDakota"},"content":"        assertParseFailure(parser, VALID_NAME_BOB + VALID_BLOCK_BOB + VALID_FACULTY_BOB + VALID_PHONE_BOB","lastModifiedDate":"2022-03-17"},{"lineNumber":179,"author":{"gitId":"DannyDakota"},"content":"                        + VALID_EMAIL_BOB + VALID_ADDRESS_BOB + VALID_MATRICULATION_NUMBER_BOB + VALID_COVID_STATUS_BOB,","lastModifiedDate":"2022-03-17"},{"lineNumber":180,"author":{"gitId":"-"},"content":"                expectedMessage);","lastModifiedDate":"2017-12-23"},{"lineNumber":181,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-15"},{"lineNumber":182,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":183,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-15"},{"lineNumber":184,"author":{"gitId":"-"},"content":"    public void parse_invalidValue_failure() {","lastModifiedDate":"2017-06-15"},{"lineNumber":185,"author":{"gitId":"-"},"content":"        // invalid name","lastModifiedDate":"2017-06-15"},{"lineNumber":186,"author":{"gitId":"DannyDakota"},"content":"        assertParseFailure(parser, INVALID_NAME_DESC + BLOCK_DESC_BOB + FACULTY_DESC_BOB + PHONE_DESC_BOB","lastModifiedDate":"2022-03-17"},{"lineNumber":187,"author":{"gitId":"DannyDakota"},"content":"                + EMAIL_DESC_BOB + ADDRESS_DESC_BOB + MATRICULATION_NUMBER_DESC_BOB + COVID_STATUS_DESC_BOB","lastModifiedDate":"2022-03-17"},{"lineNumber":188,"author":{"gitId":"-"},"content":"                + TAG_DESC_HUSBAND + TAG_DESC_FRIEND, Name.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2018-09-22"},{"lineNumber":189,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":190,"author":{"gitId":"DannyDakota"},"content":"        // invalid block","lastModifiedDate":"2022-03-17"},{"lineNumber":191,"author":{"gitId":"DannyDakota"},"content":"        assertParseFailure(parser, NAME_DESC_BOB + INVALID_BLOCK_DESC + FACULTY_DESC_BOB + PHONE_DESC_BOB","lastModifiedDate":"2022-03-17"},{"lineNumber":192,"author":{"gitId":"DannyDakota"},"content":"                + EMAIL_DESC_BOB + ADDRESS_DESC_BOB + MATRICULATION_NUMBER_DESC_BOB + COVID_STATUS_DESC_BOB","lastModifiedDate":"2022-03-17"},{"lineNumber":193,"author":{"gitId":"DannyDakota"},"content":"                + TAG_DESC_HUSBAND + TAG_DESC_FRIEND, Block.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2022-03-17"},{"lineNumber":194,"author":{"gitId":"DannyDakota"},"content":"","lastModifiedDate":"2022-03-17"},{"lineNumber":195,"author":{"gitId":"DannyDakota"},"content":"        // invalid faculty","lastModifiedDate":"2022-03-17"},{"lineNumber":196,"author":{"gitId":"DannyDakota"},"content":"        assertParseFailure(parser, NAME_DESC_BOB + BLOCK_DESC_BOB + INVALID_FACULTY_DESC + PHONE_DESC_BOB","lastModifiedDate":"2022-03-17"},{"lineNumber":197,"author":{"gitId":"DannyDakota"},"content":"                + EMAIL_DESC_BOB + ADDRESS_DESC_BOB + MATRICULATION_NUMBER_DESC_BOB + COVID_STATUS_DESC_BOB","lastModifiedDate":"2022-03-17"},{"lineNumber":198,"author":{"gitId":"DannyDakota"},"content":"                + TAG_DESC_HUSBAND + TAG_DESC_FRIEND, Faculty.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2022-03-17"},{"lineNumber":199,"author":{"gitId":"DannyDakota"},"content":"","lastModifiedDate":"2022-03-17"},{"lineNumber":200,"author":{"gitId":"-"},"content":"        // invalid phone","lastModifiedDate":"2017-06-15"},{"lineNumber":201,"author":{"gitId":"DannyDakota"},"content":"        assertParseFailure(parser, NAME_DESC_BOB + BLOCK_DESC_BOB + FACULTY_DESC_BOB + INVALID_PHONE_DESC","lastModifiedDate":"2022-03-17"},{"lineNumber":202,"author":{"gitId":"DannyDakota"},"content":"                + EMAIL_DESC_BOB + ADDRESS_DESC_BOB + MATRICULATION_NUMBER_DESC_BOB + COVID_STATUS_DESC_BOB","lastModifiedDate":"2022-03-17"},{"lineNumber":203,"author":{"gitId":"-"},"content":"                + TAG_DESC_HUSBAND + TAG_DESC_FRIEND, Phone.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2018-09-22"},{"lineNumber":204,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":205,"author":{"gitId":"-"},"content":"        // invalid email","lastModifiedDate":"2017-06-15"},{"lineNumber":206,"author":{"gitId":"DannyDakota"},"content":"        assertParseFailure(parser, NAME_DESC_BOB + BLOCK_DESC_BOB + FACULTY_DESC_BOB + PHONE_DESC_BOB","lastModifiedDate":"2022-03-17"},{"lineNumber":207,"author":{"gitId":"DannyDakota"},"content":"                + INVALID_EMAIL_DESC + ADDRESS_DESC_BOB + MATRICULATION_NUMBER_DESC_BOB + COVID_STATUS_DESC_BOB","lastModifiedDate":"2022-03-17"},{"lineNumber":208,"author":{"gitId":"-"},"content":"                + TAG_DESC_HUSBAND + TAG_DESC_FRIEND, Email.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2018-09-22"},{"lineNumber":209,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":210,"author":{"gitId":"-"},"content":"        // invalid address","lastModifiedDate":"2017-06-15"},{"lineNumber":211,"author":{"gitId":"DannyDakota"},"content":"        assertParseFailure(parser, NAME_DESC_BOB + BLOCK_DESC_BOB + FACULTY_DESC_BOB + PHONE_DESC_BOB","lastModifiedDate":"2022-03-17"},{"lineNumber":212,"author":{"gitId":"DannyDakota"},"content":"                + EMAIL_DESC_BOB + INVALID_ADDRESS_DESC + MATRICULATION_NUMBER_DESC_BOB + COVID_STATUS_DESC_BOB","lastModifiedDate":"2022-03-17"},{"lineNumber":213,"author":{"gitId":"-"},"content":"                + TAG_DESC_HUSBAND + TAG_DESC_FRIEND, Address.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2018-09-22"},{"lineNumber":214,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":215,"author":{"gitId":"DannyDakota"},"content":"        // invalid matriculation number","lastModifiedDate":"2022-03-17"},{"lineNumber":216,"author":{"gitId":"DannyDakota"},"content":"        assertParseFailure(parser, NAME_DESC_BOB + BLOCK_DESC_BOB + FACULTY_DESC_BOB + PHONE_DESC_BOB","lastModifiedDate":"2022-03-17"},{"lineNumber":217,"author":{"gitId":"DannyDakota"},"content":"                + EMAIL_DESC_BOB + ADDRESS_DESC_BOB + INVALID_MATRICULATION_NUMBER_DESC + COVID_STATUS_DESC_BOB","lastModifiedDate":"2022-03-17"},{"lineNumber":218,"author":{"gitId":"DannyDakota"},"content":"                + TAG_DESC_HUSBAND + TAG_DESC_FRIEND, MatriculationNumber.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2022-03-17"},{"lineNumber":219,"author":{"gitId":"DannyDakota"},"content":"","lastModifiedDate":"2022-03-17"},{"lineNumber":220,"author":{"gitId":"DannyDakota"},"content":"        // invalid covid status","lastModifiedDate":"2022-03-17"},{"lineNumber":221,"author":{"gitId":"DannyDakota"},"content":"        assertParseFailure(parser, NAME_DESC_BOB + BLOCK_DESC_BOB + FACULTY_DESC_BOB + PHONE_DESC_BOB","lastModifiedDate":"2022-03-17"},{"lineNumber":222,"author":{"gitId":"DannyDakota"},"content":"                + EMAIL_DESC_BOB + ADDRESS_DESC_BOB + MATRICULATION_NUMBER_DESC_BOB + INVALID_COVID_STATUS_DESC","lastModifiedDate":"2022-03-17"},{"lineNumber":223,"author":{"gitId":"DannyDakota"},"content":"                + TAG_DESC_HUSBAND + TAG_DESC_FRIEND, CovidStatus.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2022-03-17"},{"lineNumber":224,"author":{"gitId":"DannyDakota"},"content":"","lastModifiedDate":"2022-03-17"},{"lineNumber":225,"author":{"gitId":"-"},"content":"        // invalid tag","lastModifiedDate":"2017-06-15"},{"lineNumber":226,"author":{"gitId":"DannyDakota"},"content":"        assertParseFailure(parser, NAME_DESC_BOB + BLOCK_DESC_BOB + FACULTY_DESC_BOB + PHONE_DESC_BOB","lastModifiedDate":"2022-03-17"},{"lineNumber":227,"author":{"gitId":"DannyDakota"},"content":"                + EMAIL_DESC_BOB + ADDRESS_DESC_BOB + MATRICULATION_NUMBER_DESC_BOB + COVID_STATUS_DESC_BOB","lastModifiedDate":"2022-03-17"},{"lineNumber":228,"author":{"gitId":"-"},"content":"                + INVALID_TAG_DESC + VALID_TAG_FRIEND, Tag.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2018-09-22"},{"lineNumber":229,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":230,"author":{"gitId":"-"},"content":"        // two invalid values, only first invalid value reported","lastModifiedDate":"2017-06-15"},{"lineNumber":231,"author":{"gitId":"DannyDakota"},"content":"        assertParseFailure(parser, INVALID_NAME_DESC + BLOCK_DESC_BOB + FACULTY_DESC_BOB + PHONE_DESC_BOB","lastModifiedDate":"2022-03-17"},{"lineNumber":232,"author":{"gitId":"DannyDakota"},"content":"                        + EMAIL_DESC_BOB + INVALID_ADDRESS_DESC + MATRICULATION_NUMBER_DESC_BOB + COVID_STATUS_DESC_BOB,","lastModifiedDate":"2022-03-17"},{"lineNumber":233,"author":{"gitId":"-"},"content":"                Name.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2018-09-22"},{"lineNumber":234,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-12-23"},{"lineNumber":235,"author":{"gitId":"-"},"content":"        // non-empty preamble","lastModifiedDate":"2017-12-23"},{"lineNumber":236,"author":{"gitId":"DannyDakota"},"content":"        assertParseFailure(parser, PREAMBLE_NON_EMPTY + NAME_DESC_BOB + BLOCK_DESC_BOB + FACULTY_DESC_BOB","lastModifiedDate":"2022-03-17"},{"lineNumber":237,"author":{"gitId":"DannyDakota"},"content":"                        + PHONE_DESC_BOB + EMAIL_DESC_BOB + ADDRESS_DESC_BOB + MATRICULATION_NUMBER_DESC_BOB","lastModifiedDate":"2022-03-17"},{"lineNumber":238,"author":{"gitId":"DannyDakota"},"content":"                        + COVID_STATUS_DESC_BOB + TAG_DESC_HUSBAND + TAG_DESC_FRIEND,","lastModifiedDate":"2022-03-17"},{"lineNumber":239,"author":{"gitId":"-"},"content":"                String.format(MESSAGE_INVALID_COMMAND_FORMAT, AddCommand.MESSAGE_USAGE));","lastModifiedDate":"2017-12-23"},{"lineNumber":240,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-15"},{"lineNumber":241,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-06-15"}],"authorContributionMap":{"DannyDakota":124,"-":117}},{"path":"src/test/java/seedu/address/logic/parser/AddressBookParserTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2017-05-24"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-24"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static seedu.address.commons.core.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2017-06-27"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import static seedu.address.commons.core.Messages.MESSAGE_UNKNOWN_COMMAND;","lastModifiedDate":"2017-05-24"},{"lineNumber":7,"author":{"gitId":"tanchinkiat99"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_COVID_STATUS_BOB;","lastModifiedDate":"2022-03-30"},{"lineNumber":8,"author":{"gitId":"tanchinkiat99"},"content":"import static seedu.address.logic.parser.AddressBookParser.MESSAGE_IRRELEVANT_PARAMETERS;","lastModifiedDate":"2022-03-31"},{"lineNumber":9,"author":{"gitId":"tanchinkiat99"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_COVID_STATUS;","lastModifiedDate":"2022-03-30"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.Assert.assertThrows;","lastModifiedDate":"2019-03-23"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.TypicalIndexes.INDEX_FIRST_PERSON;","lastModifiedDate":"2017-08-05"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-24"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import java.util.Arrays;","lastModifiedDate":"2017-06-27"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import java.util.List;","lastModifiedDate":"2017-06-12"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import java.util.stream.Collectors;","lastModifiedDate":"2017-06-27"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":17,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-24"},{"lineNumber":19,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.AddCommand;","lastModifiedDate":"2017-06-27"},{"lineNumber":20,"author":{"gitId":"jiale-c"},"content":"import seedu.address.logic.commands.ArchiveCommand;","lastModifiedDate":"2022-03-28"},{"lineNumber":21,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.ClearCommand;","lastModifiedDate":"2017-06-27"},{"lineNumber":22,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.DeleteCommand;","lastModifiedDate":"2017-06-27"},{"lineNumber":23,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.EditCommand;","lastModifiedDate":"2017-06-27"},{"lineNumber":24,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.EditCommand.EditPersonDescriptor;","lastModifiedDate":"2017-06-27"},{"lineNumber":25,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.ExitCommand;","lastModifiedDate":"2017-06-27"},{"lineNumber":26,"author":{"gitId":"jiale-c"},"content":"import seedu.address.logic.commands.FilterCommand;","lastModifiedDate":"2022-03-28"},{"lineNumber":27,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.FindCommand;","lastModifiedDate":"2017-06-27"},{"lineNumber":28,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.HelpCommand;","lastModifiedDate":"2017-06-27"},{"lineNumber":29,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.ListCommand;","lastModifiedDate":"2017-06-27"},{"lineNumber":30,"author":{"gitId":"tanchinkiat99"},"content":"import seedu.address.logic.commands.RedoCommand;","lastModifiedDate":"2022-03-31"},{"lineNumber":31,"author":{"gitId":"jiale-c"},"content":"import seedu.address.logic.commands.SummariseCommand;","lastModifiedDate":"2022-03-28"},{"lineNumber":32,"author":{"gitId":"tanchinkiat99"},"content":"import seedu.address.logic.commands.UndoCommand;","lastModifiedDate":"2022-03-31"},{"lineNumber":33,"author":{"gitId":"-"},"content":"import seedu.address.logic.parser.exceptions.ParseException;","lastModifiedDate":"2017-05-24"},{"lineNumber":34,"author":{"gitId":"tanchinkiat99"},"content":"import seedu.address.model.person.CovidStatus;","lastModifiedDate":"2022-03-30"},{"lineNumber":35,"author":{"gitId":"-"},"content":"import seedu.address.model.person.NameContainsKeywordsPredicate;","lastModifiedDate":"2017-06-12"},{"lineNumber":36,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2017-06-27"},{"lineNumber":37,"author":{"gitId":"-"},"content":"import seedu.address.testutil.EditPersonDescriptorBuilder;","lastModifiedDate":"2017-06-27"},{"lineNumber":38,"author":{"gitId":"-"},"content":"import seedu.address.testutil.PersonBuilder;","lastModifiedDate":"2017-06-27"},{"lineNumber":39,"author":{"gitId":"-"},"content":"import seedu.address.testutil.PersonUtil;","lastModifiedDate":"2017-06-27"},{"lineNumber":40,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-24"},{"lineNumber":41,"author":{"gitId":"jiale-c"},"content":"/**","lastModifiedDate":"2022-03-28"},{"lineNumber":42,"author":{"gitId":"jiale-c"},"content":" * Contains helper methods for testing address book parsers.","lastModifiedDate":"2022-03-28"},{"lineNumber":43,"author":{"gitId":"jiale-c"},"content":" */","lastModifiedDate":"2022-03-28"},{"lineNumber":44,"author":{"gitId":"-"},"content":"public class AddressBookParserTest {","lastModifiedDate":"2017-07-07"},{"lineNumber":45,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    private final AddressBookParser parser \u003d new AddressBookParser();","lastModifiedDate":"2017-07-07"},{"lineNumber":47,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-24"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-27"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    public void parseCommand_add() throws Exception {","lastModifiedDate":"2017-06-27"},{"lineNumber":50,"author":{"gitId":"-"},"content":"        Person person \u003d new PersonBuilder().build();","lastModifiedDate":"2017-06-27"},{"lineNumber":51,"author":{"gitId":"-"},"content":"        AddCommand command \u003d (AddCommand) parser.parseCommand(PersonUtil.getAddCommand(person));","lastModifiedDate":"2017-06-27"},{"lineNumber":52,"author":{"gitId":"-"},"content":"        assertEquals(new AddCommand(person), command);","lastModifiedDate":"2017-06-27"},{"lineNumber":53,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-27"},{"lineNumber":54,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-27"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    public void parseCommand_clear() throws Exception {","lastModifiedDate":"2017-06-27"},{"lineNumber":57,"author":{"gitId":"-"},"content":"        assertTrue(parser.parseCommand(ClearCommand.COMMAND_WORD) instanceof ClearCommand);","lastModifiedDate":"2017-06-27"},{"lineNumber":58,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-27"},{"lineNumber":59,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":60,"author":{"gitId":"tanchinkiat99"},"content":"    @Test","lastModifiedDate":"2022-03-31"},{"lineNumber":61,"author":{"gitId":"tanchinkiat99"},"content":"    public void parseCommand_clear_withExtraArgs() {","lastModifiedDate":"2022-03-31"},{"lineNumber":62,"author":{"gitId":"tanchinkiat99"},"content":"        String userInput \u003d ClearCommand.COMMAND_WORD + \" \" + VALID_COVID_STATUS_BOB;","lastModifiedDate":"2022-03-31"},{"lineNumber":63,"author":{"gitId":"tanchinkiat99"},"content":"        assertThrows(ParseException.class, MESSAGE_IRRELEVANT_PARAMETERS, () -\u003e parser.parseCommand(userInput));","lastModifiedDate":"2022-03-31"},{"lineNumber":64,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2022-03-31"},{"lineNumber":65,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-03-31"},{"lineNumber":66,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-27"},{"lineNumber":67,"author":{"gitId":"-"},"content":"    public void parseCommand_delete() throws Exception {","lastModifiedDate":"2017-06-27"},{"lineNumber":68,"author":{"gitId":"-"},"content":"        DeleteCommand command \u003d (DeleteCommand) parser.parseCommand(","lastModifiedDate":"2017-06-27"},{"lineNumber":69,"author":{"gitId":"-"},"content":"                DeleteCommand.COMMAND_WORD + \" \" + INDEX_FIRST_PERSON.getOneBased());","lastModifiedDate":"2017-06-27"},{"lineNumber":70,"author":{"gitId":"-"},"content":"        assertEquals(new DeleteCommand(INDEX_FIRST_PERSON), command);","lastModifiedDate":"2017-06-27"},{"lineNumber":71,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-27"},{"lineNumber":72,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":73,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-27"},{"lineNumber":74,"author":{"gitId":"-"},"content":"    public void parseCommand_edit() throws Exception {","lastModifiedDate":"2017-06-27"},{"lineNumber":75,"author":{"gitId":"-"},"content":"        Person person \u003d new PersonBuilder().build();","lastModifiedDate":"2017-06-27"},{"lineNumber":76,"author":{"gitId":"-"},"content":"        EditPersonDescriptor descriptor \u003d new EditPersonDescriptorBuilder(person).build();","lastModifiedDate":"2017-06-27"},{"lineNumber":77,"author":{"gitId":"-"},"content":"        EditCommand command \u003d (EditCommand) parser.parseCommand(EditCommand.COMMAND_WORD + \" \"","lastModifiedDate":"2017-06-27"},{"lineNumber":78,"author":{"gitId":"-"},"content":"                + INDEX_FIRST_PERSON.getOneBased() + \" \" + PersonUtil.getEditPersonDescriptorDetails(descriptor));","lastModifiedDate":"2018-03-26"},{"lineNumber":79,"author":{"gitId":"-"},"content":"        assertEquals(new EditCommand(INDEX_FIRST_PERSON, descriptor), command);","lastModifiedDate":"2017-06-27"},{"lineNumber":80,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-27"},{"lineNumber":81,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":82,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-27"},{"lineNumber":83,"author":{"gitId":"-"},"content":"    public void parseCommand_exit() throws Exception {","lastModifiedDate":"2017-06-27"},{"lineNumber":84,"author":{"gitId":"-"},"content":"        assertTrue(parser.parseCommand(ExitCommand.COMMAND_WORD) instanceof ExitCommand);","lastModifiedDate":"2017-06-27"},{"lineNumber":85,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-27"},{"lineNumber":86,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":87,"author":{"gitId":"tanchinkiat99"},"content":"    @Test","lastModifiedDate":"2022-03-31"},{"lineNumber":88,"author":{"gitId":"tanchinkiat99"},"content":"    public void parseCommand_exit_withExtraArgs() {","lastModifiedDate":"2022-03-31"},{"lineNumber":89,"author":{"gitId":"tanchinkiat99"},"content":"        String userInput \u003d ExitCommand.COMMAND_WORD + \" \" + VALID_COVID_STATUS_BOB;","lastModifiedDate":"2022-03-31"},{"lineNumber":90,"author":{"gitId":"tanchinkiat99"},"content":"        assertThrows(ParseException.class, MESSAGE_IRRELEVANT_PARAMETERS, () -\u003e parser.parseCommand(userInput));","lastModifiedDate":"2022-03-31"},{"lineNumber":91,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2022-03-31"},{"lineNumber":92,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-03-31"},{"lineNumber":93,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-27"},{"lineNumber":94,"author":{"gitId":"-"},"content":"    public void parseCommand_find() throws Exception {","lastModifiedDate":"2017-06-27"},{"lineNumber":95,"author":{"gitId":"-"},"content":"        List\u003cString\u003e keywords \u003d Arrays.asList(\"foo\", \"bar\", \"baz\");","lastModifiedDate":"2017-06-12"},{"lineNumber":96,"author":{"gitId":"-"},"content":"        FindCommand command \u003d (FindCommand) parser.parseCommand(","lastModifiedDate":"2017-06-27"},{"lineNumber":97,"author":{"gitId":"-"},"content":"                FindCommand.COMMAND_WORD + \" \" + keywords.stream().collect(Collectors.joining(\" \")));","lastModifiedDate":"2017-06-27"},{"lineNumber":98,"author":{"gitId":"-"},"content":"        assertEquals(new FindCommand(new NameContainsKeywordsPredicate(keywords)), command);","lastModifiedDate":"2017-06-12"},{"lineNumber":99,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-27"},{"lineNumber":100,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":101,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-27"},{"lineNumber":102,"author":{"gitId":"-"},"content":"    public void parseCommand_help() throws Exception {","lastModifiedDate":"2017-06-27"},{"lineNumber":103,"author":{"gitId":"-"},"content":"        assertTrue(parser.parseCommand(HelpCommand.COMMAND_WORD) instanceof HelpCommand);","lastModifiedDate":"2017-06-27"},{"lineNumber":104,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-27"},{"lineNumber":105,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":106,"author":{"gitId":"tanchinkiat99"},"content":"    @Test","lastModifiedDate":"2022-03-31"},{"lineNumber":107,"author":{"gitId":"tanchinkiat99"},"content":"    public void parseCommand_help_withExtraArgs() {","lastModifiedDate":"2022-03-31"},{"lineNumber":108,"author":{"gitId":"tanchinkiat99"},"content":"        String userInput \u003d HelpCommand.COMMAND_WORD + \" \" + VALID_COVID_STATUS_BOB;","lastModifiedDate":"2022-03-31"},{"lineNumber":109,"author":{"gitId":"tanchinkiat99"},"content":"        assertThrows(ParseException.class, MESSAGE_IRRELEVANT_PARAMETERS, () -\u003e parser.parseCommand(userInput));","lastModifiedDate":"2022-03-31"},{"lineNumber":110,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2022-03-31"},{"lineNumber":111,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-03-31"},{"lineNumber":112,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-27"},{"lineNumber":113,"author":{"gitId":"-"},"content":"    public void parseCommand_list() throws Exception {","lastModifiedDate":"2017-06-27"},{"lineNumber":114,"author":{"gitId":"-"},"content":"        assertTrue(parser.parseCommand(ListCommand.COMMAND_WORD) instanceof ListCommand);","lastModifiedDate":"2017-06-27"},{"lineNumber":115,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-27"},{"lineNumber":116,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":117,"author":{"gitId":"tanchinkiat99"},"content":"    @Test","lastModifiedDate":"2022-03-31"},{"lineNumber":118,"author":{"gitId":"tanchinkiat99"},"content":"    public void parseCommand_list_withExtraArgs() {","lastModifiedDate":"2022-03-31"},{"lineNumber":119,"author":{"gitId":"tanchinkiat99"},"content":"        String userInput \u003d ListCommand.COMMAND_WORD + \" \" + VALID_COVID_STATUS_BOB;","lastModifiedDate":"2022-03-31"},{"lineNumber":120,"author":{"gitId":"tanchinkiat99"},"content":"        assertThrows(ParseException.class, MESSAGE_IRRELEVANT_PARAMETERS, () -\u003e parser.parseCommand(userInput));","lastModifiedDate":"2022-03-31"},{"lineNumber":121,"author":{"gitId":"tanchinkiat99"},"content":"    }","lastModifiedDate":"2022-03-31"},{"lineNumber":122,"author":{"gitId":"tanchinkiat99"},"content":"","lastModifiedDate":"2022-03-31"},{"lineNumber":123,"author":{"gitId":"jiale-c"},"content":"    @Test","lastModifiedDate":"2022-03-28"},{"lineNumber":124,"author":{"gitId":"jiale-c"},"content":"    public void parseCommand_summarise() throws Exception {","lastModifiedDate":"2022-03-28"},{"lineNumber":125,"author":{"gitId":"jiale-c"},"content":"        assertTrue(parser.parseCommand(SummariseCommand.COMMAND_WORD) instanceof SummariseCommand);","lastModifiedDate":"2022-03-28"},{"lineNumber":126,"author":{"gitId":"jiale-c"},"content":"    }","lastModifiedDate":"2022-03-28"},{"lineNumber":127,"author":{"gitId":"jiale-c"},"content":"","lastModifiedDate":"2022-03-28"},{"lineNumber":128,"author":{"gitId":"tanchinkiat99"},"content":"    @Test","lastModifiedDate":"2022-03-31"},{"lineNumber":129,"author":{"gitId":"tanchinkiat99"},"content":"    public void parseCommand_summarise_withExtraArgs() {","lastModifiedDate":"2022-03-31"},{"lineNumber":130,"author":{"gitId":"tanchinkiat99"},"content":"        String userInput \u003d SummariseCommand.COMMAND_WORD + \" \" + VALID_COVID_STATUS_BOB;","lastModifiedDate":"2022-03-31"},{"lineNumber":131,"author":{"gitId":"tanchinkiat99"},"content":"        assertThrows(ParseException.class, MESSAGE_IRRELEVANT_PARAMETERS, () -\u003e parser.parseCommand(userInput));","lastModifiedDate":"2022-03-31"},{"lineNumber":132,"author":{"gitId":"tanchinkiat99"},"content":"    }","lastModifiedDate":"2022-03-31"},{"lineNumber":133,"author":{"gitId":"tanchinkiat99"},"content":"","lastModifiedDate":"2022-03-31"},{"lineNumber":134,"author":{"gitId":"jiale-c"},"content":"    @Test","lastModifiedDate":"2022-03-28"},{"lineNumber":135,"author":{"gitId":"jiale-c"},"content":"    public void parseCommand_archive() throws Exception {","lastModifiedDate":"2022-03-28"},{"lineNumber":136,"author":{"gitId":"jiale-c"},"content":"        assertTrue(parser.parseCommand(ArchiveCommand.COMMAND_WORD) instanceof ArchiveCommand);","lastModifiedDate":"2022-03-28"},{"lineNumber":137,"author":{"gitId":"jiale-c"},"content":"    }","lastModifiedDate":"2022-03-28"},{"lineNumber":138,"author":{"gitId":"jiale-c"},"content":"","lastModifiedDate":"2022-03-28"},{"lineNumber":139,"author":{"gitId":"tanchinkiat99"},"content":"    @Test","lastModifiedDate":"2022-03-31"},{"lineNumber":140,"author":{"gitId":"tanchinkiat99"},"content":"    public void parseCommand_archive_withExtraArgs() {","lastModifiedDate":"2022-03-31"},{"lineNumber":141,"author":{"gitId":"tanchinkiat99"},"content":"        String userInput \u003d ArchiveCommand.COMMAND_WORD + \" \" + VALID_COVID_STATUS_BOB;","lastModifiedDate":"2022-03-31"},{"lineNumber":142,"author":{"gitId":"tanchinkiat99"},"content":"        assertThrows(ParseException.class, MESSAGE_IRRELEVANT_PARAMETERS, () -\u003e parser.parseCommand(userInput));","lastModifiedDate":"2022-03-31"},{"lineNumber":143,"author":{"gitId":"tanchinkiat99"},"content":"    }","lastModifiedDate":"2022-03-31"},{"lineNumber":144,"author":{"gitId":"tanchinkiat99"},"content":"","lastModifiedDate":"2022-03-31"},{"lineNumber":145,"author":{"gitId":"jiale-c"},"content":"    @Test","lastModifiedDate":"2022-03-28"},{"lineNumber":146,"author":{"gitId":"jiale-c"},"content":"    public void parseCommand_filter() throws Exception {","lastModifiedDate":"2022-03-28"},{"lineNumber":147,"author":{"gitId":"jiale-c"},"content":"        FilterCommand.FilterDescriptor filterDescriptorTest \u003d new FilterCommand.FilterDescriptor();","lastModifiedDate":"2022-03-28"},{"lineNumber":148,"author":{"gitId":"tanchinkiat99"},"content":"        CovidStatus positive \u003d new CovidStatus(\"positive\");","lastModifiedDate":"2022-03-30"},{"lineNumber":149,"author":{"gitId":"tanchinkiat99"},"content":"        filterDescriptorTest.setCovidStatus(positive);","lastModifiedDate":"2022-03-30"},{"lineNumber":150,"author":{"gitId":"jiale-c"},"content":"        FilterCommand command \u003d (FilterCommand) parser.parseCommand(","lastModifiedDate":"2022-03-29"},{"lineNumber":151,"author":{"gitId":"tanchinkiat99"},"content":"                FilterCommand.COMMAND_WORD + \" \" + PREFIX_COVID_STATUS + VALID_COVID_STATUS_BOB);","lastModifiedDate":"2022-03-30"},{"lineNumber":152,"author":{"gitId":"jiale-c"},"content":"        assertEquals(new FilterCommand(filterDescriptorTest), command);","lastModifiedDate":"2022-03-29"},{"lineNumber":153,"author":{"gitId":"jiale-c"},"content":"    }","lastModifiedDate":"2022-03-28"},{"lineNumber":154,"author":{"gitId":"jiale-c"},"content":"","lastModifiedDate":"2022-03-28"},{"lineNumber":155,"author":{"gitId":"tanchinkiat99"},"content":"    @Test","lastModifiedDate":"2022-03-31"},{"lineNumber":156,"author":{"gitId":"tanchinkiat99"},"content":"    public void parseCommand_undo() throws Exception {","lastModifiedDate":"2022-03-31"},{"lineNumber":157,"author":{"gitId":"tanchinkiat99"},"content":"        assertTrue(parser.parseCommand(UndoCommand.COMMAND_WORD) instanceof UndoCommand);","lastModifiedDate":"2022-03-31"},{"lineNumber":158,"author":{"gitId":"tanchinkiat99"},"content":"    }","lastModifiedDate":"2022-03-31"},{"lineNumber":159,"author":{"gitId":"tanchinkiat99"},"content":"","lastModifiedDate":"2022-03-31"},{"lineNumber":160,"author":{"gitId":"tanchinkiat99"},"content":"    @Test","lastModifiedDate":"2022-03-31"},{"lineNumber":161,"author":{"gitId":"tanchinkiat99"},"content":"    public void parseCommand_undo_withExtraArgs() {","lastModifiedDate":"2022-03-31"},{"lineNumber":162,"author":{"gitId":"tanchinkiat99"},"content":"        String userInput \u003d UndoCommand.COMMAND_WORD + \" \" + VALID_COVID_STATUS_BOB;","lastModifiedDate":"2022-03-31"},{"lineNumber":163,"author":{"gitId":"tanchinkiat99"},"content":"        assertThrows(ParseException.class, MESSAGE_IRRELEVANT_PARAMETERS, () -\u003e parser.parseCommand(userInput));","lastModifiedDate":"2022-03-31"},{"lineNumber":164,"author":{"gitId":"tanchinkiat99"},"content":"    }","lastModifiedDate":"2022-03-31"},{"lineNumber":165,"author":{"gitId":"tanchinkiat99"},"content":"","lastModifiedDate":"2022-03-31"},{"lineNumber":166,"author":{"gitId":"tanchinkiat99"},"content":"    @Test","lastModifiedDate":"2022-03-31"},{"lineNumber":167,"author":{"gitId":"tanchinkiat99"},"content":"    public void parseCommand_redo() throws Exception {","lastModifiedDate":"2022-03-31"},{"lineNumber":168,"author":{"gitId":"tanchinkiat99"},"content":"        assertTrue(parser.parseCommand(RedoCommand.COMMAND_WORD) instanceof RedoCommand);","lastModifiedDate":"2022-03-31"},{"lineNumber":169,"author":{"gitId":"tanchinkiat99"},"content":"    }","lastModifiedDate":"2022-03-31"},{"lineNumber":170,"author":{"gitId":"tanchinkiat99"},"content":"","lastModifiedDate":"2022-03-31"},{"lineNumber":171,"author":{"gitId":"tanchinkiat99"},"content":"    @Test","lastModifiedDate":"2022-03-31"},{"lineNumber":172,"author":{"gitId":"tanchinkiat99"},"content":"    public void parseCommand_redo_withExtraArgs() {","lastModifiedDate":"2022-03-31"},{"lineNumber":173,"author":{"gitId":"tanchinkiat99"},"content":"        String userInput \u003d RedoCommand.COMMAND_WORD + \" \" + VALID_COVID_STATUS_BOB;","lastModifiedDate":"2022-03-31"},{"lineNumber":174,"author":{"gitId":"tanchinkiat99"},"content":"        assertThrows(ParseException.class, MESSAGE_IRRELEVANT_PARAMETERS, () -\u003e parser.parseCommand(userInput));","lastModifiedDate":"2022-03-31"},{"lineNumber":175,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2022-03-31"},{"lineNumber":176,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-03-31"},{"lineNumber":177,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-27"},{"lineNumber":178,"author":{"gitId":"-"},"content":"    public void parseCommand_unrecognisedInput_throwsParseException() {","lastModifiedDate":"2019-03-23"},{"lineNumber":179,"author":{"gitId":"-"},"content":"        assertThrows(ParseException.class, String.format(MESSAGE_INVALID_COMMAND_FORMAT, HelpCommand.MESSAGE_USAGE), ()","lastModifiedDate":"2019-03-23"},{"lineNumber":180,"author":{"gitId":"-"},"content":"            -\u003e parser.parseCommand(\"\"));","lastModifiedDate":"2019-03-23"},{"lineNumber":181,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-27"},{"lineNumber":182,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":183,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-27"},{"lineNumber":184,"author":{"gitId":"-"},"content":"    public void parseCommand_unknownCommand_throwsParseException() {","lastModifiedDate":"2019-03-23"},{"lineNumber":185,"author":{"gitId":"-"},"content":"        assertThrows(ParseException.class, MESSAGE_UNKNOWN_COMMAND, () -\u003e parser.parseCommand(\"unknownCommand\"));","lastModifiedDate":"2019-03-23"},{"lineNumber":186,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-27"},{"lineNumber":187,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-05-24"}],"authorContributionMap":{"tanchinkiat99":59,"jiale-c":23,"-":105}},{"path":"src/test/java/seedu/address/logic/parser/DeleteCommandParserTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2017-06-09"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-09"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static seedu.address.commons.core.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2017-06-09"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CommandParserTestUtil.assertParseFailure;","lastModifiedDate":"2017-07-06"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CommandParserTestUtil.assertParseSuccess;","lastModifiedDate":"2017-07-06"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.TypicalIndexes.INDEX_FIRST_PERSON;","lastModifiedDate":"2017-08-05"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-09"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-09"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.DeleteCommand;","lastModifiedDate":"2017-06-09"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-09"},{"lineNumber":12,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-06-09"},{"lineNumber":13,"author":{"gitId":"-"},"content":" * As we are only doing white-box testing, our test cases do not cover path variations","lastModifiedDate":"2017-06-09"},{"lineNumber":14,"author":{"gitId":"-"},"content":" * outside of the DeleteCommand code. For example, inputs \"1\" and \"1 abc\" take the","lastModifiedDate":"2017-06-09"},{"lineNumber":15,"author":{"gitId":"-"},"content":" * same path through the DeleteCommand, and therefore we test only one of them.","lastModifiedDate":"2017-06-09"},{"lineNumber":16,"author":{"gitId":"-"},"content":" * The path variation for those two cases occur inside the ParserUtil, and","lastModifiedDate":"2017-06-09"},{"lineNumber":17,"author":{"gitId":"-"},"content":" * therefore should be covered by the ParserUtilTest.","lastModifiedDate":"2017-06-09"},{"lineNumber":18,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-06-09"},{"lineNumber":19,"author":{"gitId":"-"},"content":"public class DeleteCommandParserTest {","lastModifiedDate":"2017-06-09"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-09"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    private DeleteCommandParser parser \u003d new DeleteCommandParser();","lastModifiedDate":"2017-06-09"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-09"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-09"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    public void parse_validArgs_returnsDeleteCommand() {","lastModifiedDate":"2017-08-15"},{"lineNumber":25,"author":{"gitId":"jiale-c"},"content":"        // Tests valid input number 1","lastModifiedDate":"2022-03-30"},{"lineNumber":26,"author":{"gitId":"-"},"content":"        assertParseSuccess(parser, \"1\", new DeleteCommand(INDEX_FIRST_PERSON));","lastModifiedDate":"2017-07-06"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-09"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-09"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-09"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    public void parse_invalidArgs_throwsParseException() {","lastModifiedDate":"2017-08-15"},{"lineNumber":31,"author":{"gitId":"jiale-c"},"content":"        // Tests invalid input alphabet","lastModifiedDate":"2022-03-30"},{"lineNumber":32,"author":{"gitId":"jiale-c"},"content":"        assertParseFailure(parser, \"a\",","lastModifiedDate":"2022-03-30"},{"lineNumber":33,"author":{"gitId":"jiale-c"},"content":"                String.format(MESSAGE_INVALID_COMMAND_FORMAT, DeleteCommand.MESSAGE_USAGE));","lastModifiedDate":"2022-03-30"},{"lineNumber":34,"author":{"gitId":"jiale-c"},"content":"    }","lastModifiedDate":"2022-03-30"},{"lineNumber":35,"author":{"gitId":"jiale-c"},"content":"","lastModifiedDate":"2022-03-30"},{"lineNumber":36,"author":{"gitId":"jiale-c"},"content":"    @Test","lastModifiedDate":"2022-03-30"},{"lineNumber":37,"author":{"gitId":"jiale-c"},"content":"    public void parse_numberZero_throwsParseException() {","lastModifiedDate":"2022-03-30"},{"lineNumber":38,"author":{"gitId":"jiale-c"},"content":"        // Tests invalid input number 0","lastModifiedDate":"2022-03-30"},{"lineNumber":39,"author":{"gitId":"jiale-c"},"content":"        assertParseFailure(parser, \"0\",","lastModifiedDate":"2022-03-30"},{"lineNumber":40,"author":{"gitId":"jiale-c"},"content":"                String.format(MESSAGE_INVALID_COMMAND_FORMAT, DeleteCommand.MESSAGE_USAGE));","lastModifiedDate":"2022-03-30"},{"lineNumber":41,"author":{"gitId":"jiale-c"},"content":"    }","lastModifiedDate":"2022-03-30"},{"lineNumber":42,"author":{"gitId":"jiale-c"},"content":"","lastModifiedDate":"2022-03-30"},{"lineNumber":43,"author":{"gitId":"jiale-c"},"content":"    @Test","lastModifiedDate":"2022-03-30"},{"lineNumber":44,"author":{"gitId":"jiale-c"},"content":"    public void parse_numberNegative_throwsParseException() {","lastModifiedDate":"2022-03-30"},{"lineNumber":45,"author":{"gitId":"jiale-c"},"content":"        // Tests invalid negative number","lastModifiedDate":"2022-03-30"},{"lineNumber":46,"author":{"gitId":"jiale-c"},"content":"        assertParseFailure(parser, \"-1\",","lastModifiedDate":"2022-03-30"},{"lineNumber":47,"author":{"gitId":"jiale-c"},"content":"                String.format(MESSAGE_INVALID_COMMAND_FORMAT, DeleteCommand.MESSAGE_USAGE));","lastModifiedDate":"2022-03-30"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2022-03-30"},{"lineNumber":49,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-06-09"}],"authorContributionMap":{"jiale-c":18,"-":31}},{"path":"src/test/java/seedu/address/logic/parser/EditCommandParserTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2017-05-04"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static seedu.address.commons.core.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2017-05-04"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.ADDRESS_DESC_AMY;","lastModifiedDate":"2017-07-05"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.ADDRESS_DESC_BOB;","lastModifiedDate":"2017-07-05"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.EMAIL_DESC_AMY;","lastModifiedDate":"2017-07-05"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.EMAIL_DESC_BOB;","lastModifiedDate":"2017-07-05"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.INVALID_ADDRESS_DESC;","lastModifiedDate":"2017-07-05"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.INVALID_EMAIL_DESC;","lastModifiedDate":"2017-07-05"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.INVALID_NAME_DESC;","lastModifiedDate":"2017-07-05"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.INVALID_PHONE_DESC;","lastModifiedDate":"2017-07-05"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.INVALID_TAG_DESC;","lastModifiedDate":"2017-07-05"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.NAME_DESC_AMY;","lastModifiedDate":"2017-07-05"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.PHONE_DESC_AMY;","lastModifiedDate":"2017-07-05"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.PHONE_DESC_BOB;","lastModifiedDate":"2017-07-05"},{"lineNumber":16,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.TAG_DESC_FRIEND;","lastModifiedDate":"2017-07-05"},{"lineNumber":17,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.TAG_DESC_HUSBAND;","lastModifiedDate":"2017-07-05"},{"lineNumber":18,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_ADDRESS_AMY;","lastModifiedDate":"2017-07-05"},{"lineNumber":19,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_ADDRESS_BOB;","lastModifiedDate":"2017-07-05"},{"lineNumber":20,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_EMAIL_AMY;","lastModifiedDate":"2017-07-05"},{"lineNumber":21,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_EMAIL_BOB;","lastModifiedDate":"2017-07-05"},{"lineNumber":22,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_NAME_AMY;","lastModifiedDate":"2017-07-05"},{"lineNumber":23,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_PHONE_AMY;","lastModifiedDate":"2017-07-05"},{"lineNumber":24,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_PHONE_BOB;","lastModifiedDate":"2017-07-05"},{"lineNumber":25,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_TAG_FRIEND;","lastModifiedDate":"2017-07-05"},{"lineNumber":26,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_TAG_HUSBAND;","lastModifiedDate":"2017-07-05"},{"lineNumber":27,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_TAG;","lastModifiedDate":"2017-05-04"},{"lineNumber":28,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CommandParserTestUtil.assertParseFailure;","lastModifiedDate":"2017-07-06"},{"lineNumber":29,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CommandParserTestUtil.assertParseSuccess;","lastModifiedDate":"2017-07-06"},{"lineNumber":30,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.TypicalIndexes.INDEX_FIRST_PERSON;","lastModifiedDate":"2017-08-05"},{"lineNumber":31,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.TypicalIndexes.INDEX_SECOND_PERSON;","lastModifiedDate":"2017-08-05"},{"lineNumber":32,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.TypicalIndexes.INDEX_THIRD_PERSON;","lastModifiedDate":"2017-08-05"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":34,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":36,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.index.Index;","lastModifiedDate":"2017-05-25"},{"lineNumber":37,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.EditCommand;","lastModifiedDate":"2017-05-04"},{"lineNumber":38,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.EditCommand.EditPersonDescriptor;","lastModifiedDate":"2017-05-04"},{"lineNumber":39,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Address;","lastModifiedDate":"2017-05-04"},{"lineNumber":40,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Email;","lastModifiedDate":"2017-05-04"},{"lineNumber":41,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Name;","lastModifiedDate":"2017-05-04"},{"lineNumber":42,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Phone;","lastModifiedDate":"2017-05-04"},{"lineNumber":43,"author":{"gitId":"-"},"content":"import seedu.address.model.tag.Tag;","lastModifiedDate":"2017-05-04"},{"lineNumber":44,"author":{"gitId":"-"},"content":"import seedu.address.testutil.EditPersonDescriptorBuilder;","lastModifiedDate":"2017-05-04"},{"lineNumber":45,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":46,"author":{"gitId":"jiale-c"},"content":"/**","lastModifiedDate":"2022-03-30"},{"lineNumber":47,"author":{"gitId":"jiale-c"},"content":" * As we are only doing white-box testing, our test cases do not cover path variations","lastModifiedDate":"2022-03-30"},{"lineNumber":48,"author":{"gitId":"jiale-c"},"content":" * outside of the EditCommand code. The path variation for those two cases occur inside","lastModifiedDate":"2022-03-30"},{"lineNumber":49,"author":{"gitId":"jiale-c"},"content":" * the ParserUtil, and therefore should be covered by the ParserUtilTest.","lastModifiedDate":"2022-03-30"},{"lineNumber":50,"author":{"gitId":"jiale-c"},"content":" */","lastModifiedDate":"2022-03-30"},{"lineNumber":51,"author":{"gitId":"-"},"content":"public class EditCommandParserTest {","lastModifiedDate":"2017-05-04"},{"lineNumber":52,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":53,"author":{"gitId":"-"},"content":"    private static final String TAG_EMPTY \u003d \" \" + PREFIX_TAG;","lastModifiedDate":"2017-05-04"},{"lineNumber":54,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    private static final String MESSAGE_INVALID_FORMAT \u003d","lastModifiedDate":"2017-05-04"},{"lineNumber":56,"author":{"gitId":"-"},"content":"            String.format(MESSAGE_INVALID_COMMAND_FORMAT, EditCommand.MESSAGE_USAGE);","lastModifiedDate":"2017-05-04"},{"lineNumber":57,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":58,"author":{"gitId":"-"},"content":"    private EditCommandParser parser \u003d new EditCommandParser();","lastModifiedDate":"2017-05-04"},{"lineNumber":59,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-04"},{"lineNumber":61,"author":{"gitId":"-"},"content":"    public void parse_missingParts_failure() {","lastModifiedDate":"2017-05-04"},{"lineNumber":62,"author":{"gitId":"-"},"content":"        // no index specified","lastModifiedDate":"2017-05-04"},{"lineNumber":63,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, VALID_NAME_AMY, MESSAGE_INVALID_FORMAT);","lastModifiedDate":"2017-07-06"},{"lineNumber":64,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":65,"author":{"gitId":"-"},"content":"        // no field specified","lastModifiedDate":"2017-05-04"},{"lineNumber":66,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, \"1\", EditCommand.MESSAGE_NOT_EDITED);","lastModifiedDate":"2017-07-06"},{"lineNumber":67,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":68,"author":{"gitId":"-"},"content":"        // no index and no field specified","lastModifiedDate":"2017-05-04"},{"lineNumber":69,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, \"\", MESSAGE_INVALID_FORMAT);","lastModifiedDate":"2017-07-06"},{"lineNumber":70,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-04"},{"lineNumber":71,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":72,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-04"},{"lineNumber":73,"author":{"gitId":"-"},"content":"    public void parse_invalidPreamble_failure() {","lastModifiedDate":"2017-06-06"},{"lineNumber":74,"author":{"gitId":"-"},"content":"        // negative index","lastModifiedDate":"2017-05-04"},{"lineNumber":75,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, \"-5\" + NAME_DESC_AMY, MESSAGE_INVALID_FORMAT);","lastModifiedDate":"2017-07-06"},{"lineNumber":76,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":77,"author":{"gitId":"-"},"content":"        // zero index","lastModifiedDate":"2017-06-06"},{"lineNumber":78,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, \"0\" + NAME_DESC_AMY, MESSAGE_INVALID_FORMAT);","lastModifiedDate":"2017-07-06"},{"lineNumber":79,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-06"},{"lineNumber":80,"author":{"gitId":"-"},"content":"        // invalid arguments being parsed as preamble","lastModifiedDate":"2017-06-06"},{"lineNumber":81,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, \"1 some random string\", MESSAGE_INVALID_FORMAT);","lastModifiedDate":"2017-07-06"},{"lineNumber":82,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-06"},{"lineNumber":83,"author":{"gitId":"-"},"content":"        // invalid prefix being parsed as preamble","lastModifiedDate":"2017-06-06"},{"lineNumber":84,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, \"1 i/ string\", MESSAGE_INVALID_FORMAT);","lastModifiedDate":"2017-07-06"},{"lineNumber":85,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-04"},{"lineNumber":86,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":87,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-04"},{"lineNumber":88,"author":{"gitId":"-"},"content":"    public void parse_invalidValue_failure() {","lastModifiedDate":"2017-05-04"},{"lineNumber":89,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, \"1\" + INVALID_NAME_DESC, Name.MESSAGE_CONSTRAINTS); // invalid name","lastModifiedDate":"2018-09-22"},{"lineNumber":90,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, \"1\" + INVALID_PHONE_DESC, Phone.MESSAGE_CONSTRAINTS); // invalid phone","lastModifiedDate":"2018-09-22"},{"lineNumber":91,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, \"1\" + INVALID_EMAIL_DESC, Email.MESSAGE_CONSTRAINTS); // invalid email","lastModifiedDate":"2018-09-22"},{"lineNumber":92,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, \"1\" + INVALID_ADDRESS_DESC, Address.MESSAGE_CONSTRAINTS); // invalid address","lastModifiedDate":"2018-09-22"},{"lineNumber":93,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, \"1\" + INVALID_TAG_DESC, Tag.MESSAGE_CONSTRAINTS); // invalid tag","lastModifiedDate":"2018-09-22"},{"lineNumber":94,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":95,"author":{"gitId":"-"},"content":"        // invalid phone followed by valid email","lastModifiedDate":"2017-05-04"},{"lineNumber":96,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, \"1\" + INVALID_PHONE_DESC + EMAIL_DESC_AMY, Phone.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2018-09-22"},{"lineNumber":97,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":98,"author":{"gitId":"-"},"content":"        // valid phone followed by invalid phone. The test case for invalid phone followed by valid phone","lastModifiedDate":"2017-05-04"},{"lineNumber":99,"author":{"gitId":"-"},"content":"        // is tested at {@code parse_invalidValueFollowedByValidValue_success()}","lastModifiedDate":"2017-05-04"},{"lineNumber":100,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, \"1\" + PHONE_DESC_BOB + INVALID_PHONE_DESC, Phone.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2018-09-22"},{"lineNumber":101,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":102,"author":{"gitId":"-"},"content":"        // while parsing {@code PREFIX_TAG} alone will reset the tags of the {@code Person} being edited,","lastModifiedDate":"2017-05-04"},{"lineNumber":103,"author":{"gitId":"-"},"content":"        // parsing it together with a valid tag results in error","lastModifiedDate":"2017-05-04"},{"lineNumber":104,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, \"1\" + TAG_DESC_FRIEND + TAG_DESC_HUSBAND + TAG_EMPTY, Tag.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2018-09-22"},{"lineNumber":105,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, \"1\" + TAG_DESC_FRIEND + TAG_EMPTY + TAG_DESC_HUSBAND, Tag.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2018-09-22"},{"lineNumber":106,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, \"1\" + TAG_EMPTY + TAG_DESC_FRIEND + TAG_DESC_HUSBAND, Tag.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2018-09-22"},{"lineNumber":107,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":108,"author":{"gitId":"-"},"content":"        // multiple invalid values, but only the first invalid value is captured","lastModifiedDate":"2017-05-04"},{"lineNumber":109,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, \"1\" + INVALID_NAME_DESC + INVALID_EMAIL_DESC + VALID_ADDRESS_AMY + VALID_PHONE_AMY,","lastModifiedDate":"2017-07-06"},{"lineNumber":110,"author":{"gitId":"-"},"content":"                Name.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2018-09-22"},{"lineNumber":111,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-04"},{"lineNumber":112,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":113,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-04"},{"lineNumber":114,"author":{"gitId":"-"},"content":"    public void parse_allFieldsSpecified_success() {","lastModifiedDate":"2017-08-15"},{"lineNumber":115,"author":{"gitId":"-"},"content":"        Index targetIndex \u003d INDEX_SECOND_PERSON;","lastModifiedDate":"2017-05-25"},{"lineNumber":116,"author":{"gitId":"-"},"content":"        String userInput \u003d targetIndex.getOneBased() + PHONE_DESC_BOB + TAG_DESC_HUSBAND","lastModifiedDate":"2017-06-06"},{"lineNumber":117,"author":{"gitId":"-"},"content":"                + EMAIL_DESC_AMY + ADDRESS_DESC_AMY + NAME_DESC_AMY + TAG_DESC_FRIEND;","lastModifiedDate":"2017-06-06"},{"lineNumber":118,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":119,"author":{"gitId":"-"},"content":"        EditPersonDescriptor descriptor \u003d new EditPersonDescriptorBuilder().withName(VALID_NAME_AMY)","lastModifiedDate":"2017-05-04"},{"lineNumber":120,"author":{"gitId":"-"},"content":"                .withPhone(VALID_PHONE_BOB).withEmail(VALID_EMAIL_AMY).withAddress(VALID_ADDRESS_AMY)","lastModifiedDate":"2017-05-04"},{"lineNumber":121,"author":{"gitId":"-"},"content":"                .withTags(VALID_TAG_HUSBAND, VALID_TAG_FRIEND).build();","lastModifiedDate":"2017-05-04"},{"lineNumber":122,"author":{"gitId":"-"},"content":"        EditCommand expectedCommand \u003d new EditCommand(targetIndex, descriptor);","lastModifiedDate":"2017-05-04"},{"lineNumber":123,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":124,"author":{"gitId":"-"},"content":"        assertParseSuccess(parser, userInput, expectedCommand);","lastModifiedDate":"2017-07-06"},{"lineNumber":125,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-04"},{"lineNumber":126,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":127,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-04"},{"lineNumber":128,"author":{"gitId":"-"},"content":"    public void parse_someFieldsSpecified_success() {","lastModifiedDate":"2017-08-15"},{"lineNumber":129,"author":{"gitId":"-"},"content":"        Index targetIndex \u003d INDEX_FIRST_PERSON;","lastModifiedDate":"2017-05-25"},{"lineNumber":130,"author":{"gitId":"-"},"content":"        String userInput \u003d targetIndex.getOneBased() + PHONE_DESC_BOB + EMAIL_DESC_AMY;","lastModifiedDate":"2017-05-25"},{"lineNumber":131,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":132,"author":{"gitId":"-"},"content":"        EditPersonDescriptor descriptor \u003d new EditPersonDescriptorBuilder().withPhone(VALID_PHONE_BOB)","lastModifiedDate":"2017-05-04"},{"lineNumber":133,"author":{"gitId":"-"},"content":"                .withEmail(VALID_EMAIL_AMY).build();","lastModifiedDate":"2017-05-04"},{"lineNumber":134,"author":{"gitId":"-"},"content":"        EditCommand expectedCommand \u003d new EditCommand(targetIndex, descriptor);","lastModifiedDate":"2017-05-04"},{"lineNumber":135,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":136,"author":{"gitId":"-"},"content":"        assertParseSuccess(parser, userInput, expectedCommand);","lastModifiedDate":"2017-07-06"},{"lineNumber":137,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-04"},{"lineNumber":138,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":139,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-04"},{"lineNumber":140,"author":{"gitId":"-"},"content":"    public void parse_oneFieldSpecified_success() {","lastModifiedDate":"2017-08-15"},{"lineNumber":141,"author":{"gitId":"-"},"content":"        // name","lastModifiedDate":"2017-05-04"},{"lineNumber":142,"author":{"gitId":"-"},"content":"        Index targetIndex \u003d INDEX_THIRD_PERSON;","lastModifiedDate":"2017-05-25"},{"lineNumber":143,"author":{"gitId":"-"},"content":"        String userInput \u003d targetIndex.getOneBased() + NAME_DESC_AMY;","lastModifiedDate":"2017-05-25"},{"lineNumber":144,"author":{"gitId":"-"},"content":"        EditPersonDescriptor descriptor \u003d new EditPersonDescriptorBuilder().withName(VALID_NAME_AMY).build();","lastModifiedDate":"2017-05-04"},{"lineNumber":145,"author":{"gitId":"-"},"content":"        EditCommand expectedCommand \u003d new EditCommand(targetIndex, descriptor);","lastModifiedDate":"2017-05-04"},{"lineNumber":146,"author":{"gitId":"-"},"content":"        assertParseSuccess(parser, userInput, expectedCommand);","lastModifiedDate":"2017-07-06"},{"lineNumber":147,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":148,"author":{"gitId":"-"},"content":"        // phone","lastModifiedDate":"2017-05-04"},{"lineNumber":149,"author":{"gitId":"-"},"content":"        userInput \u003d targetIndex.getOneBased() + PHONE_DESC_AMY;","lastModifiedDate":"2017-05-25"},{"lineNumber":150,"author":{"gitId":"-"},"content":"        descriptor \u003d new EditPersonDescriptorBuilder().withPhone(VALID_PHONE_AMY).build();","lastModifiedDate":"2017-05-04"},{"lineNumber":151,"author":{"gitId":"-"},"content":"        expectedCommand \u003d new EditCommand(targetIndex, descriptor);","lastModifiedDate":"2017-05-04"},{"lineNumber":152,"author":{"gitId":"-"},"content":"        assertParseSuccess(parser, userInput, expectedCommand);","lastModifiedDate":"2017-07-06"},{"lineNumber":153,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":154,"author":{"gitId":"-"},"content":"        // email","lastModifiedDate":"2017-05-04"},{"lineNumber":155,"author":{"gitId":"-"},"content":"        userInput \u003d targetIndex.getOneBased() + EMAIL_DESC_AMY;","lastModifiedDate":"2017-05-25"},{"lineNumber":156,"author":{"gitId":"-"},"content":"        descriptor \u003d new EditPersonDescriptorBuilder().withEmail(VALID_EMAIL_AMY).build();","lastModifiedDate":"2017-05-04"},{"lineNumber":157,"author":{"gitId":"-"},"content":"        expectedCommand \u003d new EditCommand(targetIndex, descriptor);","lastModifiedDate":"2017-05-04"},{"lineNumber":158,"author":{"gitId":"-"},"content":"        assertParseSuccess(parser, userInput, expectedCommand);","lastModifiedDate":"2017-07-06"},{"lineNumber":159,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":160,"author":{"gitId":"-"},"content":"        // address","lastModifiedDate":"2017-05-04"},{"lineNumber":161,"author":{"gitId":"-"},"content":"        userInput \u003d targetIndex.getOneBased() + ADDRESS_DESC_AMY;","lastModifiedDate":"2017-05-25"},{"lineNumber":162,"author":{"gitId":"-"},"content":"        descriptor \u003d new EditPersonDescriptorBuilder().withAddress(VALID_ADDRESS_AMY).build();","lastModifiedDate":"2017-05-04"},{"lineNumber":163,"author":{"gitId":"-"},"content":"        expectedCommand \u003d new EditCommand(targetIndex, descriptor);","lastModifiedDate":"2017-05-04"},{"lineNumber":164,"author":{"gitId":"-"},"content":"        assertParseSuccess(parser, userInput, expectedCommand);","lastModifiedDate":"2017-07-06"},{"lineNumber":165,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":166,"author":{"gitId":"-"},"content":"        // tags","lastModifiedDate":"2017-05-04"},{"lineNumber":167,"author":{"gitId":"-"},"content":"        userInput \u003d targetIndex.getOneBased() + TAG_DESC_FRIEND;","lastModifiedDate":"2017-05-25"},{"lineNumber":168,"author":{"gitId":"-"},"content":"        descriptor \u003d new EditPersonDescriptorBuilder().withTags(VALID_TAG_FRIEND).build();","lastModifiedDate":"2017-05-04"},{"lineNumber":169,"author":{"gitId":"-"},"content":"        expectedCommand \u003d new EditCommand(targetIndex, descriptor);","lastModifiedDate":"2017-05-04"},{"lineNumber":170,"author":{"gitId":"-"},"content":"        assertParseSuccess(parser, userInput, expectedCommand);","lastModifiedDate":"2017-07-06"},{"lineNumber":171,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-04"},{"lineNumber":172,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":173,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-04"},{"lineNumber":174,"author":{"gitId":"-"},"content":"    public void parse_multipleRepeatedFields_acceptsLast() {","lastModifiedDate":"2017-08-15"},{"lineNumber":175,"author":{"gitId":"-"},"content":"        Index targetIndex \u003d INDEX_FIRST_PERSON;","lastModifiedDate":"2017-05-25"},{"lineNumber":176,"author":{"gitId":"-"},"content":"        String userInput \u003d targetIndex.getOneBased() + PHONE_DESC_AMY + ADDRESS_DESC_AMY + EMAIL_DESC_AMY","lastModifiedDate":"2017-05-25"},{"lineNumber":177,"author":{"gitId":"-"},"content":"                + TAG_DESC_FRIEND + PHONE_DESC_AMY + ADDRESS_DESC_AMY + EMAIL_DESC_AMY + TAG_DESC_FRIEND","lastModifiedDate":"2017-05-25"},{"lineNumber":178,"author":{"gitId":"-"},"content":"                + PHONE_DESC_BOB + ADDRESS_DESC_BOB + EMAIL_DESC_BOB + TAG_DESC_HUSBAND;","lastModifiedDate":"2017-05-25"},{"lineNumber":179,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":180,"author":{"gitId":"-"},"content":"        EditPersonDescriptor descriptor \u003d new EditPersonDescriptorBuilder().withPhone(VALID_PHONE_BOB)","lastModifiedDate":"2017-05-04"},{"lineNumber":181,"author":{"gitId":"-"},"content":"                .withEmail(VALID_EMAIL_BOB).withAddress(VALID_ADDRESS_BOB).withTags(VALID_TAG_FRIEND, VALID_TAG_HUSBAND)","lastModifiedDate":"2017-05-04"},{"lineNumber":182,"author":{"gitId":"-"},"content":"                .build();","lastModifiedDate":"2017-05-04"},{"lineNumber":183,"author":{"gitId":"-"},"content":"        EditCommand expectedCommand \u003d new EditCommand(targetIndex, descriptor);","lastModifiedDate":"2017-05-04"},{"lineNumber":184,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":185,"author":{"gitId":"-"},"content":"        assertParseSuccess(parser, userInput, expectedCommand);","lastModifiedDate":"2017-07-06"},{"lineNumber":186,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-04"},{"lineNumber":187,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":188,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-04"},{"lineNumber":189,"author":{"gitId":"-"},"content":"    public void parse_invalidValueFollowedByValidValue_success() {","lastModifiedDate":"2017-08-15"},{"lineNumber":190,"author":{"gitId":"-"},"content":"        // no other valid values specified","lastModifiedDate":"2017-05-04"},{"lineNumber":191,"author":{"gitId":"-"},"content":"        Index targetIndex \u003d INDEX_FIRST_PERSON;","lastModifiedDate":"2017-05-25"},{"lineNumber":192,"author":{"gitId":"-"},"content":"        String userInput \u003d targetIndex.getOneBased() + INVALID_PHONE_DESC + PHONE_DESC_BOB;","lastModifiedDate":"2017-05-25"},{"lineNumber":193,"author":{"gitId":"-"},"content":"        EditPersonDescriptor descriptor \u003d new EditPersonDescriptorBuilder().withPhone(VALID_PHONE_BOB).build();","lastModifiedDate":"2017-05-04"},{"lineNumber":194,"author":{"gitId":"-"},"content":"        EditCommand expectedCommand \u003d new EditCommand(targetIndex, descriptor);","lastModifiedDate":"2017-05-04"},{"lineNumber":195,"author":{"gitId":"-"},"content":"        assertParseSuccess(parser, userInput, expectedCommand);","lastModifiedDate":"2017-07-06"},{"lineNumber":196,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":197,"author":{"gitId":"-"},"content":"        // other valid values specified","lastModifiedDate":"2017-05-04"},{"lineNumber":198,"author":{"gitId":"-"},"content":"        userInput \u003d targetIndex.getOneBased() + EMAIL_DESC_BOB + INVALID_PHONE_DESC + ADDRESS_DESC_BOB","lastModifiedDate":"2017-05-25"},{"lineNumber":199,"author":{"gitId":"-"},"content":"                + PHONE_DESC_BOB;","lastModifiedDate":"2017-05-25"},{"lineNumber":200,"author":{"gitId":"-"},"content":"        descriptor \u003d new EditPersonDescriptorBuilder().withPhone(VALID_PHONE_BOB).withEmail(VALID_EMAIL_BOB)","lastModifiedDate":"2017-05-04"},{"lineNumber":201,"author":{"gitId":"-"},"content":"                .withAddress(VALID_ADDRESS_BOB).build();","lastModifiedDate":"2017-05-04"},{"lineNumber":202,"author":{"gitId":"-"},"content":"        expectedCommand \u003d new EditCommand(targetIndex, descriptor);","lastModifiedDate":"2017-05-04"},{"lineNumber":203,"author":{"gitId":"-"},"content":"        assertParseSuccess(parser, userInput, expectedCommand);","lastModifiedDate":"2017-07-06"},{"lineNumber":204,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-04"},{"lineNumber":205,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":206,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-04"},{"lineNumber":207,"author":{"gitId":"-"},"content":"    public void parse_resetTags_success() {","lastModifiedDate":"2017-08-15"},{"lineNumber":208,"author":{"gitId":"-"},"content":"        Index targetIndex \u003d INDEX_THIRD_PERSON;","lastModifiedDate":"2017-05-25"},{"lineNumber":209,"author":{"gitId":"-"},"content":"        String userInput \u003d targetIndex.getOneBased() + TAG_EMPTY;","lastModifiedDate":"2017-05-25"},{"lineNumber":210,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":211,"author":{"gitId":"-"},"content":"        EditPersonDescriptor descriptor \u003d new EditPersonDescriptorBuilder().withTags().build();","lastModifiedDate":"2017-05-04"},{"lineNumber":212,"author":{"gitId":"-"},"content":"        EditCommand expectedCommand \u003d new EditCommand(targetIndex, descriptor);","lastModifiedDate":"2017-05-04"},{"lineNumber":213,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":214,"author":{"gitId":"-"},"content":"        assertParseSuccess(parser, userInput, expectedCommand);","lastModifiedDate":"2017-07-06"},{"lineNumber":215,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-04"},{"lineNumber":216,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-05-04"}],"authorContributionMap":{"jiale-c":5,"-":211}},{"path":"src/test/java/seedu/address/logic/parser/FilterCommandParserTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"tanchinkiat99"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2022-03-14"},{"lineNumber":2,"author":{"gitId":"tanchinkiat99"},"content":"","lastModifiedDate":"2022-03-14"},{"lineNumber":3,"author":{"gitId":"tanchinkiat99"},"content":"import static seedu.address.commons.core.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2022-03-14"},{"lineNumber":4,"author":{"gitId":"tanchinkiat99"},"content":"import static seedu.address.logic.commands.CommandTestUtil.INVALID_BLOCK_DESC;","lastModifiedDate":"2022-03-22"},{"lineNumber":5,"author":{"gitId":"tanchinkiat99"},"content":"import static seedu.address.logic.commands.CommandTestUtil.INVALID_COVID_STATUS_DESC;","lastModifiedDate":"2022-03-22"},{"lineNumber":6,"author":{"gitId":"tanchinkiat99"},"content":"import static seedu.address.logic.commands.CommandTestUtil.INVALID_FACULTY_DESC;","lastModifiedDate":"2022-03-22"},{"lineNumber":7,"author":{"gitId":"tanchinkiat99"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_BLOCK_BOB;","lastModifiedDate":"2022-03-22"},{"lineNumber":8,"author":{"gitId":"tanchinkiat99"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_COVID_STATUS_BOB;","lastModifiedDate":"2022-03-22"},{"lineNumber":9,"author":{"gitId":"tanchinkiat99"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_FACULTY_BOB;","lastModifiedDate":"2022-03-22"},{"lineNumber":10,"author":{"gitId":"tanchinkiat99"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_NAME_BOB;","lastModifiedDate":"2022-03-30"},{"lineNumber":11,"author":{"gitId":"tanchinkiat99"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_BLOCK;","lastModifiedDate":"2022-03-22"},{"lineNumber":12,"author":{"gitId":"tanchinkiat99"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_COVID_STATUS;","lastModifiedDate":"2022-03-22"},{"lineNumber":13,"author":{"gitId":"tanchinkiat99"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_FACULTY;","lastModifiedDate":"2022-03-22"},{"lineNumber":14,"author":{"gitId":"tanchinkiat99"},"content":"import static seedu.address.logic.parser.CommandParserTestUtil.assertParseFailure;","lastModifiedDate":"2022-03-14"},{"lineNumber":15,"author":{"gitId":"tanchinkiat99"},"content":"import static seedu.address.logic.parser.CommandParserTestUtil.assertParseSuccess;","lastModifiedDate":"2022-03-14"},{"lineNumber":16,"author":{"gitId":"tanchinkiat99"},"content":"","lastModifiedDate":"2022-03-14"},{"lineNumber":17,"author":{"gitId":"tanchinkiat99"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2022-03-14"},{"lineNumber":18,"author":{"gitId":"tanchinkiat99"},"content":"","lastModifiedDate":"2022-03-14"},{"lineNumber":19,"author":{"gitId":"tanchinkiat99"},"content":"import seedu.address.logic.commands.FilterCommand;","lastModifiedDate":"2022-03-14"},{"lineNumber":20,"author":{"gitId":"tanchinkiat99"},"content":"import seedu.address.logic.commands.FilterCommand.FilterDescriptor;","lastModifiedDate":"2022-03-22"},{"lineNumber":21,"author":{"gitId":"tanchinkiat99"},"content":"import seedu.address.model.person.Block;","lastModifiedDate":"2022-03-22"},{"lineNumber":22,"author":{"gitId":"tanchinkiat99"},"content":"import seedu.address.model.person.CovidStatus;","lastModifiedDate":"2022-03-14"},{"lineNumber":23,"author":{"gitId":"tanchinkiat99"},"content":"import seedu.address.model.person.Faculty;","lastModifiedDate":"2022-03-22"},{"lineNumber":24,"author":{"gitId":"tanchinkiat99"},"content":"","lastModifiedDate":"2022-03-14"},{"lineNumber":25,"author":{"gitId":"tanchinkiat99"},"content":"","lastModifiedDate":"2022-03-22"},{"lineNumber":26,"author":{"gitId":"tanchinkiat99"},"content":"public class FilterCommandParserTest {","lastModifiedDate":"2022-03-14"},{"lineNumber":27,"author":{"gitId":"tanchinkiat99"},"content":"","lastModifiedDate":"2022-03-14"},{"lineNumber":28,"author":{"gitId":"tanchinkiat99"},"content":"    private FilterCommandParser parser \u003d new FilterCommandParser();","lastModifiedDate":"2022-03-14"},{"lineNumber":29,"author":{"gitId":"tanchinkiat99"},"content":"","lastModifiedDate":"2022-03-14"},{"lineNumber":30,"author":{"gitId":"tanchinkiat99"},"content":"    @Test","lastModifiedDate":"2022-03-14"},{"lineNumber":31,"author":{"gitId":"tanchinkiat99"},"content":"    public void parse_emptyArg_throwsParseException() {","lastModifiedDate":"2022-03-14"},{"lineNumber":32,"author":{"gitId":"tanchinkiat99"},"content":"        assertParseFailure(parser, \"\", String.format(MESSAGE_INVALID_COMMAND_FORMAT, FilterCommand.MESSAGE_USAGE));","lastModifiedDate":"2022-03-14"},{"lineNumber":33,"author":{"gitId":"tanchinkiat99"},"content":"    }","lastModifiedDate":"2022-03-14"},{"lineNumber":34,"author":{"gitId":"tanchinkiat99"},"content":"","lastModifiedDate":"2022-03-22"},{"lineNumber":35,"author":{"gitId":"tanchinkiat99"},"content":"    @Test","lastModifiedDate":"2022-03-22"},{"lineNumber":36,"author":{"gitId":"tanchinkiat99"},"content":"    public void parse_invalidValue_failure() {","lastModifiedDate":"2022-03-22"},{"lineNumber":37,"author":{"gitId":"tanchinkiat99"},"content":"        // values without prefixes","lastModifiedDate":"2022-03-30"},{"lineNumber":38,"author":{"gitId":"tanchinkiat99"},"content":"        assertParseFailure(parser, VALID_BLOCK_BOB, String.format(MESSAGE_INVALID_COMMAND_FORMAT,","lastModifiedDate":"2022-03-30"},{"lineNumber":39,"author":{"gitId":"tanchinkiat99"},"content":"                FilterCommand.MESSAGE_USAGE));","lastModifiedDate":"2022-03-30"},{"lineNumber":40,"author":{"gitId":"tanchinkiat99"},"content":"","lastModifiedDate":"2022-03-30"},{"lineNumber":41,"author":{"gitId":"tanchinkiat99"},"content":"        // wrong types of values","lastModifiedDate":"2022-03-30"},{"lineNumber":42,"author":{"gitId":"tanchinkiat99"},"content":"        assertParseFailure(parser, VALID_NAME_BOB, String.format(MESSAGE_INVALID_COMMAND_FORMAT,","lastModifiedDate":"2022-03-30"},{"lineNumber":43,"author":{"gitId":"tanchinkiat99"},"content":"                FilterCommand.MESSAGE_USAGE));","lastModifiedDate":"2022-03-30"},{"lineNumber":44,"author":{"gitId":"tanchinkiat99"},"content":"","lastModifiedDate":"2022-03-30"},{"lineNumber":45,"author":{"gitId":"tanchinkiat99"},"content":"        // invalid faculty","lastModifiedDate":"2022-03-22"},{"lineNumber":46,"author":{"gitId":"tanchinkiat99"},"content":"        assertParseFailure(parser, INVALID_FACULTY_DESC, Faculty.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2022-03-22"},{"lineNumber":47,"author":{"gitId":"tanchinkiat99"},"content":"","lastModifiedDate":"2022-03-22"},{"lineNumber":48,"author":{"gitId":"tanchinkiat99"},"content":"        // invalid covid status","lastModifiedDate":"2022-03-22"},{"lineNumber":49,"author":{"gitId":"tanchinkiat99"},"content":"        assertParseFailure(parser, INVALID_COVID_STATUS_DESC, CovidStatus.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2022-03-22"},{"lineNumber":50,"author":{"gitId":"tanchinkiat99"},"content":"","lastModifiedDate":"2022-03-22"},{"lineNumber":51,"author":{"gitId":"tanchinkiat99"},"content":"        // invalid block","lastModifiedDate":"2022-03-22"},{"lineNumber":52,"author":{"gitId":"tanchinkiat99"},"content":"        assertParseFailure(parser, INVALID_BLOCK_DESC, Block.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2022-03-22"},{"lineNumber":53,"author":{"gitId":"tanchinkiat99"},"content":"","lastModifiedDate":"2022-03-22"},{"lineNumber":54,"author":{"gitId":"tanchinkiat99"},"content":"        // invalid faculty with valid covid status and valid block","lastModifiedDate":"2022-03-22"},{"lineNumber":55,"author":{"gitId":"tanchinkiat99"},"content":"        assertParseFailure(parser, INVALID_FACULTY_DESC + PREFIX_COVID_STATUS + VALID_COVID_STATUS_BOB","lastModifiedDate":"2022-03-22"},{"lineNumber":56,"author":{"gitId":"tanchinkiat99"},"content":"                + PREFIX_BLOCK + VALID_BLOCK_BOB, Faculty.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2022-03-22"},{"lineNumber":57,"author":{"gitId":"tanchinkiat99"},"content":"","lastModifiedDate":"2022-03-22"},{"lineNumber":58,"author":{"gitId":"tanchinkiat99"},"content":"        // invalid covid status with valid faculty and valid block","lastModifiedDate":"2022-03-22"},{"lineNumber":59,"author":{"gitId":"tanchinkiat99"},"content":"        assertParseFailure(parser, PREFIX_FACULTY + VALID_FACULTY_BOB + INVALID_COVID_STATUS_DESC","lastModifiedDate":"2022-03-22"},{"lineNumber":60,"author":{"gitId":"tanchinkiat99"},"content":"                + PREFIX_BLOCK + VALID_BLOCK_BOB, CovidStatus.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2022-03-22"},{"lineNumber":61,"author":{"gitId":"tanchinkiat99"},"content":"","lastModifiedDate":"2022-03-22"},{"lineNumber":62,"author":{"gitId":"tanchinkiat99"},"content":"        // invalid block with valid faculty and valid covid status","lastModifiedDate":"2022-03-22"},{"lineNumber":63,"author":{"gitId":"tanchinkiat99"},"content":"        assertParseFailure(parser, PREFIX_FACULTY + VALID_FACULTY_BOB + PREFIX_COVID_STATUS","lastModifiedDate":"2022-03-22"},{"lineNumber":64,"author":{"gitId":"tanchinkiat99"},"content":"                + VALID_COVID_STATUS_BOB + INVALID_BLOCK_DESC, Block.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2022-03-22"},{"lineNumber":65,"author":{"gitId":"tanchinkiat99"},"content":"    }","lastModifiedDate":"2022-03-22"},{"lineNumber":66,"author":{"gitId":"tanchinkiat99"},"content":"","lastModifiedDate":"2022-03-22"},{"lineNumber":67,"author":{"gitId":"tanchinkiat99"},"content":"    @Test","lastModifiedDate":"2022-03-22"},{"lineNumber":68,"author":{"gitId":"tanchinkiat99"},"content":"    public void parse_allFieldsSpecified_success() {","lastModifiedDate":"2022-03-22"},{"lineNumber":69,"author":{"gitId":"tanchinkiat99"},"content":"        String userInput \u003d FilterCommand.COMMAND_WORD + \" \" + PREFIX_FACULTY + VALID_FACULTY_BOB + \" \"","lastModifiedDate":"2022-03-22"},{"lineNumber":70,"author":{"gitId":"tanchinkiat99"},"content":"                + PREFIX_COVID_STATUS + VALID_COVID_STATUS_BOB + \" \" + PREFIX_BLOCK + VALID_BLOCK_BOB;","lastModifiedDate":"2022-03-22"},{"lineNumber":71,"author":{"gitId":"tanchinkiat99"},"content":"","lastModifiedDate":"2022-03-22"},{"lineNumber":72,"author":{"gitId":"tanchinkiat99"},"content":"        FilterDescriptor descriptor \u003d new FilterDescriptor();","lastModifiedDate":"2022-03-22"},{"lineNumber":73,"author":{"gitId":"tanchinkiat99"},"content":"        Faculty faculty \u003d new Faculty(VALID_FACULTY_BOB);","lastModifiedDate":"2022-03-22"},{"lineNumber":74,"author":{"gitId":"tanchinkiat99"},"content":"        CovidStatus status \u003d new CovidStatus(VALID_COVID_STATUS_BOB);","lastModifiedDate":"2022-03-22"},{"lineNumber":75,"author":{"gitId":"tanchinkiat99"},"content":"        Block block \u003d new Block(VALID_BLOCK_BOB);","lastModifiedDate":"2022-03-22"},{"lineNumber":76,"author":{"gitId":"tanchinkiat99"},"content":"        descriptor.setFaculty(faculty);","lastModifiedDate":"2022-03-22"},{"lineNumber":77,"author":{"gitId":"tanchinkiat99"},"content":"        descriptor.setCovidStatus(status);","lastModifiedDate":"2022-03-22"},{"lineNumber":78,"author":{"gitId":"tanchinkiat99"},"content":"        descriptor.setBlock(block);","lastModifiedDate":"2022-03-22"},{"lineNumber":79,"author":{"gitId":"tanchinkiat99"},"content":"        FilterCommand expectedCommand \u003d new FilterCommand(descriptor);","lastModifiedDate":"2022-03-22"},{"lineNumber":80,"author":{"gitId":"tanchinkiat99"},"content":"","lastModifiedDate":"2022-03-22"},{"lineNumber":81,"author":{"gitId":"tanchinkiat99"},"content":"        assertParseSuccess(parser, userInput, expectedCommand);","lastModifiedDate":"2022-03-22"},{"lineNumber":82,"author":{"gitId":"tanchinkiat99"},"content":"    }","lastModifiedDate":"2022-03-22"},{"lineNumber":83,"author":{"gitId":"tanchinkiat99"},"content":"","lastModifiedDate":"2022-03-22"},{"lineNumber":84,"author":{"gitId":"tanchinkiat99"},"content":"    @Test","lastModifiedDate":"2022-03-22"},{"lineNumber":85,"author":{"gitId":"tanchinkiat99"},"content":"    public void parse_someFieldsSpecified_success() {","lastModifiedDate":"2022-03-22"},{"lineNumber":86,"author":{"gitId":"tanchinkiat99"},"content":"","lastModifiedDate":"2022-03-22"},{"lineNumber":87,"author":{"gitId":"tanchinkiat99"},"content":"        // only faculty specified","lastModifiedDate":"2022-03-22"},{"lineNumber":88,"author":{"gitId":"tanchinkiat99"},"content":"        FilterDescriptor descriptorFaculty \u003d new FilterDescriptor();","lastModifiedDate":"2022-03-22"},{"lineNumber":89,"author":{"gitId":"tanchinkiat99"},"content":"        Faculty faculty \u003d new Faculty(VALID_FACULTY_BOB);","lastModifiedDate":"2022-03-22"},{"lineNumber":90,"author":{"gitId":"tanchinkiat99"},"content":"        descriptorFaculty.setFaculty(faculty);","lastModifiedDate":"2022-03-22"},{"lineNumber":91,"author":{"gitId":"tanchinkiat99"},"content":"        FilterCommand expectedCommand \u003d new FilterCommand(descriptorFaculty);","lastModifiedDate":"2022-03-22"},{"lineNumber":92,"author":{"gitId":"tanchinkiat99"},"content":"","lastModifiedDate":"2022-03-22"},{"lineNumber":93,"author":{"gitId":"tanchinkiat99"},"content":"        assertParseSuccess(parser, \"filter f/fass\", expectedCommand);","lastModifiedDate":"2022-03-22"},{"lineNumber":94,"author":{"gitId":"tanchinkiat99"},"content":"","lastModifiedDate":"2022-03-22"},{"lineNumber":95,"author":{"gitId":"tanchinkiat99"},"content":"        // only covid status specified","lastModifiedDate":"2022-03-22"},{"lineNumber":96,"author":{"gitId":"tanchinkiat99"},"content":"        FilterDescriptor descriptorStatus \u003d new FilterDescriptor();","lastModifiedDate":"2022-03-22"},{"lineNumber":97,"author":{"gitId":"tanchinkiat99"},"content":"        CovidStatus status \u003d new CovidStatus(VALID_COVID_STATUS_BOB);","lastModifiedDate":"2022-03-22"},{"lineNumber":98,"author":{"gitId":"tanchinkiat99"},"content":"        descriptorStatus.setCovidStatus(status);","lastModifiedDate":"2022-03-22"},{"lineNumber":99,"author":{"gitId":"tanchinkiat99"},"content":"        expectedCommand \u003d new FilterCommand(descriptorStatus);","lastModifiedDate":"2022-03-22"},{"lineNumber":100,"author":{"gitId":"tanchinkiat99"},"content":"","lastModifiedDate":"2022-03-22"},{"lineNumber":101,"author":{"gitId":"tanchinkiat99"},"content":"        assertParseSuccess(parser, \"filter cs/positive\", expectedCommand);","lastModifiedDate":"2022-03-22"},{"lineNumber":102,"author":{"gitId":"tanchinkiat99"},"content":"","lastModifiedDate":"2022-03-22"},{"lineNumber":103,"author":{"gitId":"tanchinkiat99"},"content":"        // only block specified","lastModifiedDate":"2022-03-22"},{"lineNumber":104,"author":{"gitId":"tanchinkiat99"},"content":"        FilterDescriptor descriptorBlock \u003d new FilterDescriptor();","lastModifiedDate":"2022-03-22"},{"lineNumber":105,"author":{"gitId":"tanchinkiat99"},"content":"        Block block \u003d new Block(VALID_BLOCK_BOB);","lastModifiedDate":"2022-03-22"},{"lineNumber":106,"author":{"gitId":"tanchinkiat99"},"content":"        descriptorBlock.setBlock(block);","lastModifiedDate":"2022-03-22"},{"lineNumber":107,"author":{"gitId":"tanchinkiat99"},"content":"        expectedCommand \u003d new FilterCommand(descriptorBlock);","lastModifiedDate":"2022-03-22"},{"lineNumber":108,"author":{"gitId":"tanchinkiat99"},"content":"","lastModifiedDate":"2022-03-22"},{"lineNumber":109,"author":{"gitId":"tanchinkiat99"},"content":"        assertParseSuccess(parser, \"filter b/e\", expectedCommand);","lastModifiedDate":"2022-03-22"},{"lineNumber":110,"author":{"gitId":"tanchinkiat99"},"content":"","lastModifiedDate":"2022-03-22"},{"lineNumber":111,"author":{"gitId":"tanchinkiat99"},"content":"        // only faculty and covid status specified","lastModifiedDate":"2022-03-22"},{"lineNumber":112,"author":{"gitId":"tanchinkiat99"},"content":"        FilterDescriptor descriptorFacultyAndStatus \u003d new FilterDescriptor();","lastModifiedDate":"2022-03-22"},{"lineNumber":113,"author":{"gitId":"tanchinkiat99"},"content":"        descriptorFacultyAndStatus.setFaculty(faculty);","lastModifiedDate":"2022-03-22"},{"lineNumber":114,"author":{"gitId":"tanchinkiat99"},"content":"        descriptorFacultyAndStatus.setCovidStatus(status);","lastModifiedDate":"2022-03-22"},{"lineNumber":115,"author":{"gitId":"tanchinkiat99"},"content":"        expectedCommand \u003d new FilterCommand(descriptorFacultyAndStatus);","lastModifiedDate":"2022-03-22"},{"lineNumber":116,"author":{"gitId":"tanchinkiat99"},"content":"","lastModifiedDate":"2022-03-22"},{"lineNumber":117,"author":{"gitId":"tanchinkiat99"},"content":"        assertParseSuccess(parser, \"filter f/fass cs/positive\", expectedCommand);","lastModifiedDate":"2022-03-22"},{"lineNumber":118,"author":{"gitId":"tanchinkiat99"},"content":"","lastModifiedDate":"2022-03-22"},{"lineNumber":119,"author":{"gitId":"tanchinkiat99"},"content":"        // only faculty and block specified","lastModifiedDate":"2022-03-22"},{"lineNumber":120,"author":{"gitId":"tanchinkiat99"},"content":"        FilterDescriptor descriptorFacultyAndBlock \u003d new FilterDescriptor();","lastModifiedDate":"2022-03-22"},{"lineNumber":121,"author":{"gitId":"tanchinkiat99"},"content":"        descriptorFacultyAndBlock.setFaculty(faculty);","lastModifiedDate":"2022-03-22"},{"lineNumber":122,"author":{"gitId":"tanchinkiat99"},"content":"        descriptorFacultyAndBlock.setBlock(block);","lastModifiedDate":"2022-03-22"},{"lineNumber":123,"author":{"gitId":"tanchinkiat99"},"content":"        expectedCommand \u003d new FilterCommand(descriptorFacultyAndBlock);","lastModifiedDate":"2022-03-22"},{"lineNumber":124,"author":{"gitId":"tanchinkiat99"},"content":"","lastModifiedDate":"2022-03-22"},{"lineNumber":125,"author":{"gitId":"tanchinkiat99"},"content":"        assertParseSuccess(parser, \"filter f/fass b/e\", expectedCommand);","lastModifiedDate":"2022-03-22"},{"lineNumber":126,"author":{"gitId":"tanchinkiat99"},"content":"","lastModifiedDate":"2022-03-22"},{"lineNumber":127,"author":{"gitId":"tanchinkiat99"},"content":"        // only covid status and block specified","lastModifiedDate":"2022-03-22"},{"lineNumber":128,"author":{"gitId":"tanchinkiat99"},"content":"        FilterDescriptor descriptorStatusAndBlock \u003d new FilterDescriptor();","lastModifiedDate":"2022-03-22"},{"lineNumber":129,"author":{"gitId":"tanchinkiat99"},"content":"        descriptorStatusAndBlock.setCovidStatus(status);","lastModifiedDate":"2022-03-22"},{"lineNumber":130,"author":{"gitId":"tanchinkiat99"},"content":"        descriptorStatusAndBlock.setBlock(block);","lastModifiedDate":"2022-03-22"},{"lineNumber":131,"author":{"gitId":"tanchinkiat99"},"content":"        expectedCommand \u003d new FilterCommand(descriptorStatusAndBlock);","lastModifiedDate":"2022-03-22"},{"lineNumber":132,"author":{"gitId":"tanchinkiat99"},"content":"","lastModifiedDate":"2022-03-22"},{"lineNumber":133,"author":{"gitId":"tanchinkiat99"},"content":"        assertParseSuccess(parser, \"filter b/e cs/positive\", expectedCommand);","lastModifiedDate":"2022-03-22"},{"lineNumber":134,"author":{"gitId":"tanchinkiat99"},"content":"","lastModifiedDate":"2022-03-22"},{"lineNumber":135,"author":{"gitId":"tanchinkiat99"},"content":"","lastModifiedDate":"2022-03-22"},{"lineNumber":136,"author":{"gitId":"tanchinkiat99"},"content":"    }","lastModifiedDate":"2022-03-22"},{"lineNumber":137,"author":{"gitId":"tanchinkiat99"},"content":"","lastModifiedDate":"2022-03-14"},{"lineNumber":138,"author":{"gitId":"tanchinkiat99"},"content":"}","lastModifiedDate":"2022-03-14"}],"authorContributionMap":{"tanchinkiat99":138}},{"path":"src/test/java/seedu/address/logic/parser/FindCommandParserTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2017-06-27"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static seedu.address.commons.core.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2017-06-27"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CommandParserTestUtil.assertParseFailure;","lastModifiedDate":"2017-07-06"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CommandParserTestUtil.assertParseSuccess;","lastModifiedDate":"2017-07-06"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import java.util.Arrays;","lastModifiedDate":"2017-06-27"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.FindCommand;","lastModifiedDate":"2017-06-27"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import seedu.address.model.person.NameContainsKeywordsPredicate;","lastModifiedDate":"2017-06-12"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":14,"author":{"gitId":"jiale-c"},"content":"/**","lastModifiedDate":"2022-03-30"},{"lineNumber":15,"author":{"gitId":"jiale-c"},"content":" * As we are only doing white-box testing, our test cases do not cover path variations","lastModifiedDate":"2022-03-30"},{"lineNumber":16,"author":{"gitId":"jiale-c"},"content":" * outside of the FindCommand code. For example, inputs \"Alex\" and \"Ale\" take the","lastModifiedDate":"2022-03-30"},{"lineNumber":17,"author":{"gitId":"jiale-c"},"content":" * same path through the FindCommand, and therefore we test only one of them.","lastModifiedDate":"2022-03-30"},{"lineNumber":18,"author":{"gitId":"jiale-c"},"content":" * The path variation for those two cases occur inside the ParserUtil, and","lastModifiedDate":"2022-03-30"},{"lineNumber":19,"author":{"gitId":"jiale-c"},"content":" * therefore should be covered by the ParserUtilTest.","lastModifiedDate":"2022-03-30"},{"lineNumber":20,"author":{"gitId":"jiale-c"},"content":" */","lastModifiedDate":"2022-03-30"},{"lineNumber":21,"author":{"gitId":"-"},"content":"public class FindCommandParserTest {","lastModifiedDate":"2017-06-27"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    private FindCommandParser parser \u003d new FindCommandParser();","lastModifiedDate":"2017-06-27"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-27"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    public void parse_emptyArg_throwsParseException() {","lastModifiedDate":"2017-06-27"},{"lineNumber":27,"author":{"gitId":"jiale-c"},"content":"        assertParseFailure(parser, \"     \",","lastModifiedDate":"2022-03-30"},{"lineNumber":28,"author":{"gitId":"jiale-c"},"content":"                String.format(MESSAGE_INVALID_COMMAND_FORMAT, FindCommand.MESSAGE_USAGE));","lastModifiedDate":"2022-03-30"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-27"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-27"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    public void parse_validArgs_returnsFindCommand() {","lastModifiedDate":"2017-08-15"},{"lineNumber":33,"author":{"gitId":"-"},"content":"        // no leading and trailing whitespaces","lastModifiedDate":"2017-06-27"},{"lineNumber":34,"author":{"gitId":"-"},"content":"        FindCommand expectedFindCommand \u003d","lastModifiedDate":"2017-06-12"},{"lineNumber":35,"author":{"gitId":"-"},"content":"                new FindCommand(new NameContainsKeywordsPredicate(Arrays.asList(\"Alice\", \"Bob\")));","lastModifiedDate":"2017-06-12"},{"lineNumber":36,"author":{"gitId":"-"},"content":"        assertParseSuccess(parser, \"Alice Bob\", expectedFindCommand);","lastModifiedDate":"2017-07-06"},{"lineNumber":37,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        // multiple whitespaces between keywords","lastModifiedDate":"2017-06-27"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        assertParseSuccess(parser, \" \\n Alice \\n \\t Bob  \\t\", expectedFindCommand);","lastModifiedDate":"2017-07-06"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-27"},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":42,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-06-27"}],"authorContributionMap":{"jiale-c":9,"-":33}},{"path":"src/test/java/seedu/address/logic/parser/ResizeCommandParserTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"cwq2326"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2022-03-31"},{"lineNumber":2,"author":{"gitId":"cwq2326"},"content":"","lastModifiedDate":"2022-03-31"},{"lineNumber":3,"author":{"gitId":"cwq2326"},"content":"import static seedu.address.commons.core.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2022-03-31"},{"lineNumber":4,"author":{"gitId":"cwq2326"},"content":"import static seedu.address.logic.parser.CommandParserTestUtil.assertParseFailure;","lastModifiedDate":"2022-03-31"},{"lineNumber":5,"author":{"gitId":"cwq2326"},"content":"import static seedu.address.logic.parser.CommandParserTestUtil.assertParseSuccess;","lastModifiedDate":"2022-03-31"},{"lineNumber":6,"author":{"gitId":"cwq2326"},"content":"","lastModifiedDate":"2022-03-31"},{"lineNumber":7,"author":{"gitId":"cwq2326"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2022-03-31"},{"lineNumber":8,"author":{"gitId":"cwq2326"},"content":"","lastModifiedDate":"2022-03-31"},{"lineNumber":9,"author":{"gitId":"cwq2326"},"content":"import seedu.address.logic.commands.ResizeCommand;","lastModifiedDate":"2022-03-31"},{"lineNumber":10,"author":{"gitId":"cwq2326"},"content":"","lastModifiedDate":"2022-03-31"},{"lineNumber":11,"author":{"gitId":"cwq2326"},"content":"public class ResizeCommandParserTest {","lastModifiedDate":"2022-03-31"},{"lineNumber":12,"author":{"gitId":"cwq2326"},"content":"","lastModifiedDate":"2022-03-31"},{"lineNumber":13,"author":{"gitId":"cwq2326"},"content":"    private ResizeCommandParser parser \u003d new ResizeCommandParser();","lastModifiedDate":"2022-03-31"},{"lineNumber":14,"author":{"gitId":"cwq2326"},"content":"","lastModifiedDate":"2022-03-31"},{"lineNumber":15,"author":{"gitId":"cwq2326"},"content":"    @Test","lastModifiedDate":"2022-03-31"},{"lineNumber":16,"author":{"gitId":"cwq2326"},"content":"    public void parse_validResizeResultWindowSize_returnsResizeCommand() {","lastModifiedDate":"2022-03-31"},{"lineNumber":17,"author":{"gitId":"cwq2326"},"content":"        assertParseSuccess(parser, \"1\", new ResizeCommand((double) 1));","lastModifiedDate":"2022-03-31"},{"lineNumber":18,"author":{"gitId":"cwq2326"},"content":"        assertParseSuccess(parser, \"2\", new ResizeCommand(2.0));","lastModifiedDate":"2022-03-31"},{"lineNumber":19,"author":{"gitId":"cwq2326"},"content":"        assertParseSuccess(parser, \"3\", new ResizeCommand(3.0));","lastModifiedDate":"2022-03-31"},{"lineNumber":20,"author":{"gitId":"cwq2326"},"content":"        assertParseSuccess(parser, \"   1\", new ResizeCommand(1.0));","lastModifiedDate":"2022-03-31"},{"lineNumber":21,"author":{"gitId":"cwq2326"},"content":"        assertParseSuccess(parser, \"1   \", new ResizeCommand(1.0));","lastModifiedDate":"2022-03-31"},{"lineNumber":22,"author":{"gitId":"cwq2326"},"content":"    }","lastModifiedDate":"2022-03-31"},{"lineNumber":23,"author":{"gitId":"cwq2326"},"content":"","lastModifiedDate":"2022-03-31"},{"lineNumber":24,"author":{"gitId":"cwq2326"},"content":"    @Test","lastModifiedDate":"2022-03-31"},{"lineNumber":25,"author":{"gitId":"cwq2326"},"content":"    public void parse_invalidResizeResultWindowSize_returnsResizeCommand() {","lastModifiedDate":"2022-03-31"},{"lineNumber":26,"author":{"gitId":"cwq2326"},"content":"        assertParseFailure(parser, \"-1\",","lastModifiedDate":"2022-03-31"},{"lineNumber":27,"author":{"gitId":"cwq2326"},"content":"                String.format(MESSAGE_INVALID_COMMAND_FORMAT, ResizeCommand.MESSAGE_USAGE));","lastModifiedDate":"2022-03-31"},{"lineNumber":28,"author":{"gitId":"cwq2326"},"content":"        assertParseFailure(parser, \"one\",","lastModifiedDate":"2022-03-31"},{"lineNumber":29,"author":{"gitId":"cwq2326"},"content":"                String.format(MESSAGE_INVALID_COMMAND_FORMAT, ResizeCommand.MESSAGE_USAGE));","lastModifiedDate":"2022-03-31"},{"lineNumber":30,"author":{"gitId":"cwq2326"},"content":"        assertParseFailure(parser, \"1 2\",","lastModifiedDate":"2022-03-31"},{"lineNumber":31,"author":{"gitId":"cwq2326"},"content":"                String.format(MESSAGE_INVALID_COMMAND_FORMAT, ResizeCommand.MESSAGE_USAGE));","lastModifiedDate":"2022-03-31"},{"lineNumber":32,"author":{"gitId":"cwq2326"},"content":"        assertParseFailure(parser, \"test 1\",","lastModifiedDate":"2022-03-31"},{"lineNumber":33,"author":{"gitId":"cwq2326"},"content":"                String.format(MESSAGE_INVALID_COMMAND_FORMAT, ResizeCommand.MESSAGE_USAGE));","lastModifiedDate":"2022-03-31"},{"lineNumber":34,"author":{"gitId":"cwq2326"},"content":"    }","lastModifiedDate":"2022-03-31"},{"lineNumber":35,"author":{"gitId":"cwq2326"},"content":"}","lastModifiedDate":"2022-03-31"}],"authorContributionMap":{"cwq2326":35}},{"path":"src/test/java/seedu/address/model/person/AddressTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.model.person;","lastModifiedDate":"2017-01-16"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-16"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.Assert.assertThrows;","lastModifiedDate":"2019-03-14"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-16"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-16"},{"lineNumber":9,"author":{"gitId":"DannyDakota"},"content":"/**","lastModifiedDate":"2022-03-20"},{"lineNumber":10,"author":{"gitId":"DannyDakota"},"content":" * Contains unit tests for Address class and its methods.","lastModifiedDate":"2022-03-20"},{"lineNumber":11,"author":{"gitId":"DannyDakota"},"content":" */","lastModifiedDate":"2022-03-20"},{"lineNumber":12,"author":{"gitId":"-"},"content":"public class AddressTest {","lastModifiedDate":"2017-01-16"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-16"},{"lineNumber":14,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-12-04"},{"lineNumber":15,"author":{"gitId":"-"},"content":"    public void constructor_null_throwsNullPointerException() {","lastModifiedDate":"2017-12-04"},{"lineNumber":16,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e new Address(null));","lastModifiedDate":"2019-03-14"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-12-04"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-12-04"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-30"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    public void constructor_invalidAddress_throwsIllegalArgumentException() {","lastModifiedDate":"2017-05-30"},{"lineNumber":21,"author":{"gitId":"-"},"content":"        String invalidAddress \u003d \"\";","lastModifiedDate":"2017-05-30"},{"lineNumber":22,"author":{"gitId":"-"},"content":"        assertThrows(IllegalArgumentException.class, () -\u003e new Address(invalidAddress));","lastModifiedDate":"2019-03-14"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-30"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-30"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-01-16"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    public void isValidAddress() {","lastModifiedDate":"2017-01-16"},{"lineNumber":27,"author":{"gitId":"-"},"content":"        // null address","lastModifiedDate":"2017-12-04"},{"lineNumber":28,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e Address.isValidAddress(null));","lastModifiedDate":"2019-03-14"},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-12-04"},{"lineNumber":30,"author":{"gitId":"-"},"content":"        // invalid addresses","lastModifiedDate":"2017-01-16"},{"lineNumber":31,"author":{"gitId":"-"},"content":"        assertFalse(Address.isValidAddress(\"\")); // empty string","lastModifiedDate":"2017-01-16"},{"lineNumber":32,"author":{"gitId":"-"},"content":"        assertFalse(Address.isValidAddress(\" \")); // spaces only","lastModifiedDate":"2017-01-16"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-16"},{"lineNumber":34,"author":{"gitId":"-"},"content":"        // valid addresses","lastModifiedDate":"2017-01-16"},{"lineNumber":35,"author":{"gitId":"-"},"content":"        assertTrue(Address.isValidAddress(\"Blk 456, Den Road, #01-355\"));","lastModifiedDate":"2017-01-16"},{"lineNumber":36,"author":{"gitId":"-"},"content":"        assertTrue(Address.isValidAddress(\"-\")); // one character","lastModifiedDate":"2017-01-16"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        assertTrue(Address.isValidAddress(\"Leng Inc; 1234 Market St; San Francisco CA 2349879; USA\")); // long address","lastModifiedDate":"2017-01-16"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-01-16"},{"lineNumber":39,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-01-16"}],"authorContributionMap":{"DannyDakota":3,"-":36}},{"path":"src/test/java/seedu/address/model/person/BlockTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"DannyDakota"},"content":"package seedu.address.model.person;","lastModifiedDate":"2022-03-18"},{"lineNumber":2,"author":{"gitId":"DannyDakota"},"content":"","lastModifiedDate":"2022-03-18"},{"lineNumber":3,"author":{"gitId":"DannyDakota"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2022-03-18"},{"lineNumber":4,"author":{"gitId":"DannyDakota"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2022-03-18"},{"lineNumber":5,"author":{"gitId":"DannyDakota"},"content":"import static org.junit.jupiter.api.Assertions.assertThrows;","lastModifiedDate":"2022-03-18"},{"lineNumber":6,"author":{"gitId":"DannyDakota"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2022-03-18"},{"lineNumber":7,"author":{"gitId":"DannyDakota"},"content":"","lastModifiedDate":"2022-03-18"},{"lineNumber":8,"author":{"gitId":"DannyDakota"},"content":"import java.util.stream.Stream;","lastModifiedDate":"2022-03-18"},{"lineNumber":9,"author":{"gitId":"DannyDakota"},"content":"","lastModifiedDate":"2022-03-18"},{"lineNumber":10,"author":{"gitId":"DannyDakota"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2022-03-18"},{"lineNumber":11,"author":{"gitId":"DannyDakota"},"content":"","lastModifiedDate":"2022-03-18"},{"lineNumber":12,"author":{"gitId":"DannyDakota"},"content":"/**","lastModifiedDate":"2022-03-20"},{"lineNumber":13,"author":{"gitId":"DannyDakota"},"content":" * Contains unit tests for Block class and its methods.","lastModifiedDate":"2022-03-20"},{"lineNumber":14,"author":{"gitId":"DannyDakota"},"content":" */","lastModifiedDate":"2022-03-20"},{"lineNumber":15,"author":{"gitId":"DannyDakota"},"content":"public class BlockTest {","lastModifiedDate":"2022-03-18"},{"lineNumber":16,"author":{"gitId":"DannyDakota"},"content":"","lastModifiedDate":"2022-03-18"},{"lineNumber":17,"author":{"gitId":"DannyDakota"},"content":"    @Test","lastModifiedDate":"2022-03-18"},{"lineNumber":18,"author":{"gitId":"DannyDakota"},"content":"    public void constructor_null_throwsNullPointerException() {","lastModifiedDate":"2022-03-18"},{"lineNumber":19,"author":{"gitId":"DannyDakota"},"content":"        assertThrows(NullPointerException.class, () -\u003e new Block(null));","lastModifiedDate":"2022-03-18"},{"lineNumber":20,"author":{"gitId":"DannyDakota"},"content":"    }","lastModifiedDate":"2022-03-18"},{"lineNumber":21,"author":{"gitId":"DannyDakota"},"content":"","lastModifiedDate":"2022-03-18"},{"lineNumber":22,"author":{"gitId":"DannyDakota"},"content":"    @Test","lastModifiedDate":"2022-03-18"},{"lineNumber":23,"author":{"gitId":"DannyDakota"},"content":"    public void constructor_invalidBlock_throwsIllegalArgumentException() {","lastModifiedDate":"2022-03-18"},{"lineNumber":24,"author":{"gitId":"DannyDakota"},"content":"        String invalidBlock \u003d \"\";","lastModifiedDate":"2022-03-18"},{"lineNumber":25,"author":{"gitId":"DannyDakota"},"content":"        assertThrows(IllegalArgumentException.class, () -\u003e new Block(invalidBlock));","lastModifiedDate":"2022-03-18"},{"lineNumber":26,"author":{"gitId":"DannyDakota"},"content":"    }","lastModifiedDate":"2022-03-18"},{"lineNumber":27,"author":{"gitId":"DannyDakota"},"content":"","lastModifiedDate":"2022-03-18"},{"lineNumber":28,"author":{"gitId":"DannyDakota"},"content":"    @Test","lastModifiedDate":"2022-03-18"},{"lineNumber":29,"author":{"gitId":"DannyDakota"},"content":"    public void isValidBlock() {","lastModifiedDate":"2022-03-18"},{"lineNumber":30,"author":{"gitId":"DannyDakota"},"content":"        //null faculty","lastModifiedDate":"2022-03-18"},{"lineNumber":31,"author":{"gitId":"DannyDakota"},"content":"        assertFalse(Block.isValidBlock(null));","lastModifiedDate":"2022-03-18"},{"lineNumber":32,"author":{"gitId":"DannyDakota"},"content":"","lastModifiedDate":"2022-03-18"},{"lineNumber":33,"author":{"gitId":"DannyDakota"},"content":"        //invalid faculty","lastModifiedDate":"2022-03-18"},{"lineNumber":34,"author":{"gitId":"DannyDakota"},"content":"        assertFalse(Block.isValidBlock(\"\")); // empty string","lastModifiedDate":"2022-03-18"},{"lineNumber":35,"author":{"gitId":"DannyDakota"},"content":"        assertFalse(Block.isValidBlock(\" \")); // spaces only","lastModifiedDate":"2022-03-18"},{"lineNumber":36,"author":{"gitId":"DannyDakota"},"content":"        assertFalse(Block.isValidBlock(\"F\")); // incorrect status","lastModifiedDate":"2022-03-18"},{"lineNumber":37,"author":{"gitId":"DannyDakota"},"content":"        assertFalse(Block.isValidBlock(\"1\")); // incorrect status","lastModifiedDate":"2022-03-18"},{"lineNumber":38,"author":{"gitId":"DannyDakota"},"content":"","lastModifiedDate":"2022-03-18"},{"lineNumber":39,"author":{"gitId":"DannyDakota"},"content":"        //Valid faculty","lastModifiedDate":"2022-03-18"},{"lineNumber":40,"author":{"gitId":"DannyDakota"},"content":"        assertTrue(Block.isValidBlock(\"a\")); // lowercase, correct status","lastModifiedDate":"2022-03-18"},{"lineNumber":41,"author":{"gitId":"DannyDakota"},"content":"        assertTrue(Block.isValidBlock(\"A\")); // correct status","lastModifiedDate":"2022-03-18"},{"lineNumber":42,"author":{"gitId":"DannyDakota"},"content":"    }","lastModifiedDate":"2022-03-18"},{"lineNumber":43,"author":{"gitId":"DannyDakota"},"content":"","lastModifiedDate":"2022-03-18"},{"lineNumber":44,"author":{"gitId":"DannyDakota"},"content":"    @Test","lastModifiedDate":"2022-03-18"},{"lineNumber":45,"author":{"gitId":"DannyDakota"},"content":"    public void getBlockEnumAsString() {","lastModifiedDate":"2022-03-18"},{"lineNumber":46,"author":{"gitId":"DannyDakota"},"content":"        String listOfBlock \u003d \"A B C D E \";","lastModifiedDate":"2022-03-18"},{"lineNumber":47,"author":{"gitId":"DannyDakota"},"content":"        StringBuilder stringBuilder \u003d new StringBuilder();","lastModifiedDate":"2022-03-18"},{"lineNumber":48,"author":{"gitId":"DannyDakota"},"content":"        Stream.of(Block.HallBlock.values()).forEach(block -\u003e stringBuilder.append(block + \" \"));","lastModifiedDate":"2022-03-18"},{"lineNumber":49,"author":{"gitId":"DannyDakota"},"content":"        assertEquals(listOfBlock, stringBuilder.toString());","lastModifiedDate":"2022-03-18"},{"lineNumber":50,"author":{"gitId":"DannyDakota"},"content":"    }","lastModifiedDate":"2022-03-18"},{"lineNumber":51,"author":{"gitId":"DannyDakota"},"content":"}","lastModifiedDate":"2022-03-18"}],"authorContributionMap":{"DannyDakota":51}},{"path":"src/test/java/seedu/address/model/person/CovidStatusTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"DannyDakota"},"content":"package seedu.address.model.person;","lastModifiedDate":"2022-03-18"},{"lineNumber":2,"author":{"gitId":"DannyDakota"},"content":"","lastModifiedDate":"2022-03-18"},{"lineNumber":3,"author":{"gitId":"DannyDakota"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2022-03-18"},{"lineNumber":4,"author":{"gitId":"DannyDakota"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2022-03-18"},{"lineNumber":5,"author":{"gitId":"DannyDakota"},"content":"import static org.junit.jupiter.api.Assertions.assertThrows;","lastModifiedDate":"2022-03-18"},{"lineNumber":6,"author":{"gitId":"DannyDakota"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2022-03-18"},{"lineNumber":7,"author":{"gitId":"DannyDakota"},"content":"","lastModifiedDate":"2022-03-18"},{"lineNumber":8,"author":{"gitId":"DannyDakota"},"content":"import java.util.stream.Stream;","lastModifiedDate":"2022-03-18"},{"lineNumber":9,"author":{"gitId":"DannyDakota"},"content":"","lastModifiedDate":"2022-03-18"},{"lineNumber":10,"author":{"gitId":"DannyDakota"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2022-03-18"},{"lineNumber":11,"author":{"gitId":"DannyDakota"},"content":"","lastModifiedDate":"2022-03-18"},{"lineNumber":12,"author":{"gitId":"DannyDakota"},"content":"/**","lastModifiedDate":"2022-03-20"},{"lineNumber":13,"author":{"gitId":"DannyDakota"},"content":" * Contains unit tests for CovidStatus class and its methods.","lastModifiedDate":"2022-03-20"},{"lineNumber":14,"author":{"gitId":"DannyDakota"},"content":" */","lastModifiedDate":"2022-03-20"},{"lineNumber":15,"author":{"gitId":"DannyDakota"},"content":"public class CovidStatusTest {","lastModifiedDate":"2022-03-18"},{"lineNumber":16,"author":{"gitId":"DannyDakota"},"content":"","lastModifiedDate":"2022-03-18"},{"lineNumber":17,"author":{"gitId":"DannyDakota"},"content":"    @Test","lastModifiedDate":"2022-03-18"},{"lineNumber":18,"author":{"gitId":"DannyDakota"},"content":"    public void constructor_null_throwsNullPointerException() {","lastModifiedDate":"2022-03-18"},{"lineNumber":19,"author":{"gitId":"DannyDakota"},"content":"        assertThrows(NullPointerException.class, () -\u003e new CovidStatus(null));","lastModifiedDate":"2022-03-18"},{"lineNumber":20,"author":{"gitId":"DannyDakota"},"content":"    }","lastModifiedDate":"2022-03-18"},{"lineNumber":21,"author":{"gitId":"DannyDakota"},"content":"","lastModifiedDate":"2022-03-18"},{"lineNumber":22,"author":{"gitId":"DannyDakota"},"content":"    @Test","lastModifiedDate":"2022-03-18"},{"lineNumber":23,"author":{"gitId":"DannyDakota"},"content":"    public void constructor_invalidCovidStatus_throwsIllegalArgumentException() {","lastModifiedDate":"2022-03-18"},{"lineNumber":24,"author":{"gitId":"DannyDakota"},"content":"        String invalidCovidStatus \u003d \"\";","lastModifiedDate":"2022-03-18"},{"lineNumber":25,"author":{"gitId":"DannyDakota"},"content":"        assertThrows(IllegalArgumentException.class, () -\u003e new CovidStatus(invalidCovidStatus));","lastModifiedDate":"2022-03-18"},{"lineNumber":26,"author":{"gitId":"DannyDakota"},"content":"    }","lastModifiedDate":"2022-03-18"},{"lineNumber":27,"author":{"gitId":"DannyDakota"},"content":"","lastModifiedDate":"2022-03-18"},{"lineNumber":28,"author":{"gitId":"DannyDakota"},"content":"    @Test","lastModifiedDate":"2022-03-18"},{"lineNumber":29,"author":{"gitId":"DannyDakota"},"content":"    public void isValidCovidStatus() {","lastModifiedDate":"2022-03-18"},{"lineNumber":30,"author":{"gitId":"DannyDakota"},"content":"        //null status","lastModifiedDate":"2022-03-20"},{"lineNumber":31,"author":{"gitId":"DannyDakota"},"content":"        assertFalse(CovidStatus.isValidCovidStatus(null));","lastModifiedDate":"2022-03-18"},{"lineNumber":32,"author":{"gitId":"DannyDakota"},"content":"","lastModifiedDate":"2022-03-18"},{"lineNumber":33,"author":{"gitId":"DannyDakota"},"content":"        //invalid status","lastModifiedDate":"2022-03-20"},{"lineNumber":34,"author":{"gitId":"DannyDakota"},"content":"        assertFalse(CovidStatus.isValidCovidStatus(\"\")); // empty string","lastModifiedDate":"2022-03-18"},{"lineNumber":35,"author":{"gitId":"DannyDakota"},"content":"        assertFalse(CovidStatus.isValidCovidStatus(\" \")); // spaces only","lastModifiedDate":"2022-03-18"},{"lineNumber":36,"author":{"gitId":"DannyDakota"},"content":"        assertFalse(CovidStatus.isValidCovidStatus(\"HRW\")); // incorrect status","lastModifiedDate":"2022-03-18"},{"lineNumber":37,"author":{"gitId":"DannyDakota"},"content":"","lastModifiedDate":"2022-03-18"},{"lineNumber":38,"author":{"gitId":"DannyDakota"},"content":"        //Valid status","lastModifiedDate":"2022-03-20"},{"lineNumber":39,"author":{"gitId":"DannyDakota"},"content":"        assertTrue(CovidStatus.isValidCovidStatus(\"hrn\")); // all lowercase, correct status","lastModifiedDate":"2022-03-18"},{"lineNumber":40,"author":{"gitId":"DannyDakota"},"content":"        assertTrue(CovidStatus.isValidCovidStatus(\"POSITIVE\")); // correct status","lastModifiedDate":"2022-03-18"},{"lineNumber":41,"author":{"gitId":"DannyDakota"},"content":"    }","lastModifiedDate":"2022-03-18"},{"lineNumber":42,"author":{"gitId":"DannyDakota"},"content":"","lastModifiedDate":"2022-03-18"},{"lineNumber":43,"author":{"gitId":"DannyDakota"},"content":"    @Test","lastModifiedDate":"2022-03-18"},{"lineNumber":44,"author":{"gitId":"DannyDakota"},"content":"    public void getCovidStatusEnumAsString() {","lastModifiedDate":"2022-03-18"},{"lineNumber":45,"author":{"gitId":"DannyDakota"},"content":"        String listOfCovidStatus \u003d \"HRN NEGATIVE POSITIVE \";","lastModifiedDate":"2022-03-18"},{"lineNumber":46,"author":{"gitId":"DannyDakota"},"content":"        StringBuilder stringBuilder \u003d new StringBuilder();","lastModifiedDate":"2022-03-18"},{"lineNumber":47,"author":{"gitId":"DannyDakota"},"content":"        Stream.of(CovidStatus.CovidStatusTier.values()).forEach(status -\u003e stringBuilder.append(status + \" \"));","lastModifiedDate":"2022-03-18"},{"lineNumber":48,"author":{"gitId":"DannyDakota"},"content":"        assertEquals(listOfCovidStatus, stringBuilder.toString());","lastModifiedDate":"2022-03-18"},{"lineNumber":49,"author":{"gitId":"DannyDakota"},"content":"    }","lastModifiedDate":"2022-03-18"},{"lineNumber":50,"author":{"gitId":"DannyDakota"},"content":"}","lastModifiedDate":"2022-03-18"}],"authorContributionMap":{"DannyDakota":50}},{"path":"src/test/java/seedu/address/model/person/EmailTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.model.person;","lastModifiedDate":"2017-01-16"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-16"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.Assert.assertThrows;","lastModifiedDate":"2019-03-14"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-16"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-16"},{"lineNumber":9,"author":{"gitId":"DannyDakota"},"content":"/**","lastModifiedDate":"2022-03-20"},{"lineNumber":10,"author":{"gitId":"DannyDakota"},"content":" * Contains unit tests for Email class and its methods.","lastModifiedDate":"2022-03-20"},{"lineNumber":11,"author":{"gitId":"DannyDakota"},"content":" */","lastModifiedDate":"2022-03-20"},{"lineNumber":12,"author":{"gitId":"-"},"content":"public class EmailTest {","lastModifiedDate":"2017-01-16"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-16"},{"lineNumber":14,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-12-04"},{"lineNumber":15,"author":{"gitId":"-"},"content":"    public void constructor_null_throwsNullPointerException() {","lastModifiedDate":"2017-12-04"},{"lineNumber":16,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e new Email(null));","lastModifiedDate":"2019-03-14"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-12-04"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-12-04"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-30"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    public void constructor_invalidEmail_throwsIllegalArgumentException() {","lastModifiedDate":"2017-05-30"},{"lineNumber":21,"author":{"gitId":"-"},"content":"        String invalidEmail \u003d \"\";","lastModifiedDate":"2017-05-30"},{"lineNumber":22,"author":{"gitId":"-"},"content":"        assertThrows(IllegalArgumentException.class, () -\u003e new Email(invalidEmail));","lastModifiedDate":"2019-03-14"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-30"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-30"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-01-16"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    public void isValidEmail() {","lastModifiedDate":"2017-01-16"},{"lineNumber":27,"author":{"gitId":"-"},"content":"        // null email","lastModifiedDate":"2017-12-04"},{"lineNumber":28,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e Email.isValidEmail(null));","lastModifiedDate":"2019-03-14"},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-12-04"},{"lineNumber":30,"author":{"gitId":"-"},"content":"        // blank email","lastModifiedDate":"2017-01-16"},{"lineNumber":31,"author":{"gitId":"-"},"content":"        assertFalse(Email.isValidEmail(\"\")); // empty string","lastModifiedDate":"2017-01-16"},{"lineNumber":32,"author":{"gitId":"-"},"content":"        assertFalse(Email.isValidEmail(\" \")); // spaces only","lastModifiedDate":"2017-01-16"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-16"},{"lineNumber":34,"author":{"gitId":"-"},"content":"        // missing parts","lastModifiedDate":"2017-01-16"},{"lineNumber":35,"author":{"gitId":"-"},"content":"        assertFalse(Email.isValidEmail(\"@example.com\")); // missing local part","lastModifiedDate":"2017-04-05"},{"lineNumber":36,"author":{"gitId":"-"},"content":"        assertFalse(Email.isValidEmail(\"peterjackexample.com\")); // missing \u0027@\u0027 symbol","lastModifiedDate":"2017-04-05"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        assertFalse(Email.isValidEmail(\"peterjack@\")); // missing domain name","lastModifiedDate":"2017-01-16"},{"lineNumber":38,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-16"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        // invalid parts","lastModifiedDate":"2017-01-16"},{"lineNumber":40,"author":{"gitId":"-"},"content":"        assertFalse(Email.isValidEmail(\"peterjack@-\")); // invalid domain name","lastModifiedDate":"2017-01-16"},{"lineNumber":41,"author":{"gitId":"-"},"content":"        assertFalse(Email.isValidEmail(\"peterjack@exam_ple.com\")); // underscore in domain name","lastModifiedDate":"2018-02-09"},{"lineNumber":42,"author":{"gitId":"-"},"content":"        assertFalse(Email.isValidEmail(\"peter jack@example.com\")); // spaces in local part","lastModifiedDate":"2017-04-05"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        assertFalse(Email.isValidEmail(\"peterjack@exam ple.com\")); // spaces in domain name","lastModifiedDate":"2017-04-05"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        assertFalse(Email.isValidEmail(\" peterjack@example.com\")); // leading space","lastModifiedDate":"2018-02-09"},{"lineNumber":45,"author":{"gitId":"-"},"content":"        assertFalse(Email.isValidEmail(\"peterjack@example.com \")); // trailing space","lastModifiedDate":"2018-02-09"},{"lineNumber":46,"author":{"gitId":"-"},"content":"        assertFalse(Email.isValidEmail(\"peterjack@@example.com\")); // double \u0027@\u0027 symbol","lastModifiedDate":"2017-04-05"},{"lineNumber":47,"author":{"gitId":"-"},"content":"        assertFalse(Email.isValidEmail(\"peter@jack@example.com\")); // \u0027@\u0027 symbol in local part","lastModifiedDate":"2017-04-05"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        assertFalse(Email.isValidEmail(\"-peterjack@example.com\")); // local part starts with a hyphen","lastModifiedDate":"2021-07-20"},{"lineNumber":49,"author":{"gitId":"-"},"content":"        assertFalse(Email.isValidEmail(\"peterjack-@example.com\")); // local part ends with a hyphen","lastModifiedDate":"2021-07-20"},{"lineNumber":50,"author":{"gitId":"-"},"content":"        assertFalse(Email.isValidEmail(\"peter..jack@example.com\")); // local part has two consecutive periods","lastModifiedDate":"2021-07-20"},{"lineNumber":51,"author":{"gitId":"-"},"content":"        assertFalse(Email.isValidEmail(\"peterjack@example@com\")); // \u0027@\u0027 symbol in domain name","lastModifiedDate":"2017-04-05"},{"lineNumber":52,"author":{"gitId":"-"},"content":"        assertFalse(Email.isValidEmail(\"peterjack@.example.com\")); // domain name starts with a period","lastModifiedDate":"2018-02-09"},{"lineNumber":53,"author":{"gitId":"-"},"content":"        assertFalse(Email.isValidEmail(\"peterjack@example.com.\")); // domain name ends with a period","lastModifiedDate":"2018-02-09"},{"lineNumber":54,"author":{"gitId":"-"},"content":"        assertFalse(Email.isValidEmail(\"peterjack@-example.com\")); // domain name starts with a hyphen","lastModifiedDate":"2018-02-09"},{"lineNumber":55,"author":{"gitId":"-"},"content":"        assertFalse(Email.isValidEmail(\"peterjack@example.com-\")); // domain name ends with a hyphen","lastModifiedDate":"2018-02-09"},{"lineNumber":56,"author":{"gitId":"-"},"content":"        assertFalse(Email.isValidEmail(\"peterjack@example.c\")); // top level domain has less than two chars","lastModifiedDate":"2021-07-20"},{"lineNumber":57,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-16"},{"lineNumber":58,"author":{"gitId":"-"},"content":"        // valid email","lastModifiedDate":"2017-01-16"},{"lineNumber":59,"author":{"gitId":"-"},"content":"        assertTrue(Email.isValidEmail(\"PeterJack_1190@example.com\")); // underscore in local part","lastModifiedDate":"2021-07-20"},{"lineNumber":60,"author":{"gitId":"-"},"content":"        assertTrue(Email.isValidEmail(\"PeterJack.1190@example.com\")); // period in local part","lastModifiedDate":"2021-07-20"},{"lineNumber":61,"author":{"gitId":"-"},"content":"        assertTrue(Email.isValidEmail(\"PeterJack+1190@example.com\")); // \u0027+\u0027 symbol in local part","lastModifiedDate":"2021-07-20"},{"lineNumber":62,"author":{"gitId":"-"},"content":"        assertTrue(Email.isValidEmail(\"PeterJack-1190@example.com\")); // hyphen in local part","lastModifiedDate":"2021-07-20"},{"lineNumber":63,"author":{"gitId":"-"},"content":"        assertTrue(Email.isValidEmail(\"a@bc\")); // minimal","lastModifiedDate":"2018-02-09"},{"lineNumber":64,"author":{"gitId":"-"},"content":"        assertTrue(Email.isValidEmail(\"test@localhost\")); // alphabets only","lastModifiedDate":"2017-01-16"},{"lineNumber":65,"author":{"gitId":"-"},"content":"        assertTrue(Email.isValidEmail(\"123@145\")); // numeric local part and domain name","lastModifiedDate":"2017-01-16"},{"lineNumber":66,"author":{"gitId":"-"},"content":"        assertTrue(Email.isValidEmail(\"a1+be.d@example1.com\")); // mixture of alphanumeric and special characters","lastModifiedDate":"2021-07-20"},{"lineNumber":67,"author":{"gitId":"-"},"content":"        assertTrue(Email.isValidEmail(\"peter_jack@very-very-very-long-example.com\")); // long domain name","lastModifiedDate":"2018-02-09"},{"lineNumber":68,"author":{"gitId":"-"},"content":"        assertTrue(Email.isValidEmail(\"if.you.dream.it_you.can.do.it@example.com\")); // long local part","lastModifiedDate":"2017-04-05"},{"lineNumber":69,"author":{"gitId":"-"},"content":"        assertTrue(Email.isValidEmail(\"e1234567@u.nus.edu\")); // more than one period in domain","lastModifiedDate":"2021-07-20"},{"lineNumber":70,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-01-16"},{"lineNumber":71,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-01-16"}],"authorContributionMap":{"DannyDakota":3,"-":68}},{"path":"src/test/java/seedu/address/model/person/FacultyTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"DannyDakota"},"content":"package seedu.address.model.person;","lastModifiedDate":"2022-03-18"},{"lineNumber":2,"author":{"gitId":"DannyDakota"},"content":"","lastModifiedDate":"2022-03-18"},{"lineNumber":3,"author":{"gitId":"DannyDakota"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2022-03-18"},{"lineNumber":4,"author":{"gitId":"DannyDakota"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2022-03-18"},{"lineNumber":5,"author":{"gitId":"DannyDakota"},"content":"import static org.junit.jupiter.api.Assertions.assertThrows;","lastModifiedDate":"2022-03-18"},{"lineNumber":6,"author":{"gitId":"DannyDakota"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2022-03-18"},{"lineNumber":7,"author":{"gitId":"DannyDakota"},"content":"","lastModifiedDate":"2022-03-18"},{"lineNumber":8,"author":{"gitId":"DannyDakota"},"content":"import java.util.stream.Stream;","lastModifiedDate":"2022-03-18"},{"lineNumber":9,"author":{"gitId":"DannyDakota"},"content":"","lastModifiedDate":"2022-03-18"},{"lineNumber":10,"author":{"gitId":"DannyDakota"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2022-03-18"},{"lineNumber":11,"author":{"gitId":"DannyDakota"},"content":"","lastModifiedDate":"2022-03-18"},{"lineNumber":12,"author":{"gitId":"DannyDakota"},"content":"/**","lastModifiedDate":"2022-03-20"},{"lineNumber":13,"author":{"gitId":"DannyDakota"},"content":" * Contains unit tests for Faculty class and its methods.","lastModifiedDate":"2022-03-20"},{"lineNumber":14,"author":{"gitId":"DannyDakota"},"content":" */","lastModifiedDate":"2022-03-20"},{"lineNumber":15,"author":{"gitId":"DannyDakota"},"content":"public class FacultyTest {","lastModifiedDate":"2022-03-18"},{"lineNumber":16,"author":{"gitId":"DannyDakota"},"content":"","lastModifiedDate":"2022-03-18"},{"lineNumber":17,"author":{"gitId":"DannyDakota"},"content":"    @Test","lastModifiedDate":"2022-03-18"},{"lineNumber":18,"author":{"gitId":"DannyDakota"},"content":"    public void constructor_null_throwsNullPointerException() {","lastModifiedDate":"2022-03-18"},{"lineNumber":19,"author":{"gitId":"DannyDakota"},"content":"        assertThrows(NullPointerException.class, () -\u003e new Faculty(null));","lastModifiedDate":"2022-03-18"},{"lineNumber":20,"author":{"gitId":"DannyDakota"},"content":"    }","lastModifiedDate":"2022-03-18"},{"lineNumber":21,"author":{"gitId":"DannyDakota"},"content":"","lastModifiedDate":"2022-03-18"},{"lineNumber":22,"author":{"gitId":"DannyDakota"},"content":"    @Test","lastModifiedDate":"2022-03-18"},{"lineNumber":23,"author":{"gitId":"DannyDakota"},"content":"    public void constructor_invalidFaculty_throwsIllegalArgumentException() {","lastModifiedDate":"2022-03-18"},{"lineNumber":24,"author":{"gitId":"DannyDakota"},"content":"        String invalidFaculty \u003d \"\";","lastModifiedDate":"2022-03-18"},{"lineNumber":25,"author":{"gitId":"DannyDakota"},"content":"        assertThrows(IllegalArgumentException.class, () -\u003e new Faculty(invalidFaculty));","lastModifiedDate":"2022-03-18"},{"lineNumber":26,"author":{"gitId":"DannyDakota"},"content":"    }","lastModifiedDate":"2022-03-18"},{"lineNumber":27,"author":{"gitId":"DannyDakota"},"content":"","lastModifiedDate":"2022-03-18"},{"lineNumber":28,"author":{"gitId":"DannyDakota"},"content":"    @Test","lastModifiedDate":"2022-03-18"},{"lineNumber":29,"author":{"gitId":"DannyDakota"},"content":"    public void isValidFaculty() {","lastModifiedDate":"2022-03-18"},{"lineNumber":30,"author":{"gitId":"DannyDakota"},"content":"        //null faculty","lastModifiedDate":"2022-03-18"},{"lineNumber":31,"author":{"gitId":"DannyDakota"},"content":"        assertFalse(Faculty.isValidFaculty(null));","lastModifiedDate":"2022-03-18"},{"lineNumber":32,"author":{"gitId":"DannyDakota"},"content":"","lastModifiedDate":"2022-03-18"},{"lineNumber":33,"author":{"gitId":"DannyDakota"},"content":"        //invalid faculty","lastModifiedDate":"2022-03-18"},{"lineNumber":34,"author":{"gitId":"DannyDakota"},"content":"        assertFalse(Faculty.isValidFaculty(\"\")); // empty string","lastModifiedDate":"2022-03-18"},{"lineNumber":35,"author":{"gitId":"DannyDakota"},"content":"        assertFalse(Faculty.isValidFaculty(\" \")); // spaces only","lastModifiedDate":"2022-03-18"},{"lineNumber":36,"author":{"gitId":"DannyDakota"},"content":"        assertFalse(Faculty.isValidFaculty(\"SOOC\")); // incorrect faculty","lastModifiedDate":"2022-03-18"},{"lineNumber":37,"author":{"gitId":"DannyDakota"},"content":"","lastModifiedDate":"2022-03-18"},{"lineNumber":38,"author":{"gitId":"DannyDakota"},"content":"        //Valid faculty","lastModifiedDate":"2022-03-18"},{"lineNumber":39,"author":{"gitId":"DannyDakota"},"content":"        assertTrue(Faculty.isValidFaculty(\"soc\")); // all lowercase, correct faculty","lastModifiedDate":"2022-03-18"},{"lineNumber":40,"author":{"gitId":"DannyDakota"},"content":"        assertTrue(Faculty.isValidFaculty(\"SoC\")); // correct faculty","lastModifiedDate":"2022-03-18"},{"lineNumber":41,"author":{"gitId":"DannyDakota"},"content":"        assertTrue(Faculty.isValidFaculty(\"SOC\")); // all uppercase, correct faculty","lastModifiedDate":"2022-03-18"},{"lineNumber":42,"author":{"gitId":"DannyDakota"},"content":"    }","lastModifiedDate":"2022-03-18"},{"lineNumber":43,"author":{"gitId":"DannyDakota"},"content":"","lastModifiedDate":"2022-03-18"},{"lineNumber":44,"author":{"gitId":"DannyDakota"},"content":"    @Test","lastModifiedDate":"2022-03-18"},{"lineNumber":45,"author":{"gitId":"DannyDakota"},"content":"    public void getFacultyEnumAsString() {","lastModifiedDate":"2022-03-18"},{"lineNumber":46,"author":{"gitId":"cwq2326"},"content":"        String listOfFaculties \u003d \"FASS BIZ SOC SCALE FOD CDE DUKE FOL YLLSOM YSTCOM SOPP LKYSPP SPH FOS \";","lastModifiedDate":"2022-03-27"},{"lineNumber":47,"author":{"gitId":"DannyDakota"},"content":"        StringBuilder stringBuilder \u003d new StringBuilder();","lastModifiedDate":"2022-03-18"},{"lineNumber":48,"author":{"gitId":"DannyDakota"},"content":"        Stream.of(Faculty.Nus.values()).forEach(faculty -\u003e stringBuilder.append(faculty + \" \"));","lastModifiedDate":"2022-03-18"},{"lineNumber":49,"author":{"gitId":"DannyDakota"},"content":"        assertEquals(listOfFaculties, stringBuilder.toString());","lastModifiedDate":"2022-03-18"},{"lineNumber":50,"author":{"gitId":"DannyDakota"},"content":"    }","lastModifiedDate":"2022-03-18"},{"lineNumber":51,"author":{"gitId":"DannyDakota"},"content":"}","lastModifiedDate":"2022-03-18"}],"authorContributionMap":{"DannyDakota":50,"cwq2326":1}},{"path":"src/test/java/seedu/address/model/person/MatriculationNumberTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"DannyDakota"},"content":"package seedu.address.model.person;","lastModifiedDate":"2022-03-18"},{"lineNumber":2,"author":{"gitId":"DannyDakota"},"content":"","lastModifiedDate":"2022-03-18"},{"lineNumber":3,"author":{"gitId":"DannyDakota"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2022-03-18"},{"lineNumber":4,"author":{"gitId":"DannyDakota"},"content":"import static org.junit.jupiter.api.Assertions.assertThrows;","lastModifiedDate":"2022-03-18"},{"lineNumber":5,"author":{"gitId":"DannyDakota"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2022-03-18"},{"lineNumber":6,"author":{"gitId":"DannyDakota"},"content":"","lastModifiedDate":"2022-03-18"},{"lineNumber":7,"author":{"gitId":"DannyDakota"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2022-03-18"},{"lineNumber":8,"author":{"gitId":"DannyDakota"},"content":"","lastModifiedDate":"2022-03-18"},{"lineNumber":9,"author":{"gitId":"DannyDakota"},"content":"/**","lastModifiedDate":"2022-03-20"},{"lineNumber":10,"author":{"gitId":"DannyDakota"},"content":" * Contains unit tests for MatriculationNumber class and its methods.","lastModifiedDate":"2022-03-20"},{"lineNumber":11,"author":{"gitId":"DannyDakota"},"content":" */","lastModifiedDate":"2022-03-20"},{"lineNumber":12,"author":{"gitId":"DannyDakota"},"content":"public class MatriculationNumberTest {","lastModifiedDate":"2022-03-18"},{"lineNumber":13,"author":{"gitId":"DannyDakota"},"content":"","lastModifiedDate":"2022-03-18"},{"lineNumber":14,"author":{"gitId":"DannyDakota"},"content":"    @Test","lastModifiedDate":"2022-03-18"},{"lineNumber":15,"author":{"gitId":"DannyDakota"},"content":"    public void constructor_null_throwsNullPointerException() {","lastModifiedDate":"2022-03-18"},{"lineNumber":16,"author":{"gitId":"DannyDakota"},"content":"        assertThrows(NullPointerException.class, () -\u003e new MatriculationNumber(null));","lastModifiedDate":"2022-03-18"},{"lineNumber":17,"author":{"gitId":"DannyDakota"},"content":"    }","lastModifiedDate":"2022-03-18"},{"lineNumber":18,"author":{"gitId":"DannyDakota"},"content":"","lastModifiedDate":"2022-03-18"},{"lineNumber":19,"author":{"gitId":"DannyDakota"},"content":"    @Test","lastModifiedDate":"2022-03-18"},{"lineNumber":20,"author":{"gitId":"DannyDakota"},"content":"    public void constructor_invalidMatriculationNumber_throwsIllegalArgumentException() {","lastModifiedDate":"2022-03-18"},{"lineNumber":21,"author":{"gitId":"DannyDakota"},"content":"        String invalidMatriculationNumber \u003d \"\";","lastModifiedDate":"2022-03-18"},{"lineNumber":22,"author":{"gitId":"DannyDakota"},"content":"        assertThrows(IllegalArgumentException.class, () -\u003e new MatriculationNumber(invalidMatriculationNumber));","lastModifiedDate":"2022-03-18"},{"lineNumber":23,"author":{"gitId":"DannyDakota"},"content":"    }","lastModifiedDate":"2022-03-18"},{"lineNumber":24,"author":{"gitId":"DannyDakota"},"content":"","lastModifiedDate":"2022-03-18"},{"lineNumber":25,"author":{"gitId":"DannyDakota"},"content":"    @Test","lastModifiedDate":"2022-03-18"},{"lineNumber":26,"author":{"gitId":"DannyDakota"},"content":"    public void isValidMatriculationNumber() {","lastModifiedDate":"2022-03-18"},{"lineNumber":27,"author":{"gitId":"DannyDakota"},"content":"        // null matriculation number","lastModifiedDate":"2022-03-18"},{"lineNumber":28,"author":{"gitId":"DannyDakota"},"content":"        assertThrows(NullPointerException.class, () -\u003e MatriculationNumber.isValidMatriculationNumber(null));","lastModifiedDate":"2022-03-18"},{"lineNumber":29,"author":{"gitId":"DannyDakota"},"content":"","lastModifiedDate":"2022-03-18"},{"lineNumber":30,"author":{"gitId":"DannyDakota"},"content":"        // invalid matriculation number","lastModifiedDate":"2022-03-18"},{"lineNumber":31,"author":{"gitId":"DannyDakota"},"content":"        assertFalse(MatriculationNumber.isValidMatriculationNumber(\"\")); // empty string","lastModifiedDate":"2022-03-18"},{"lineNumber":32,"author":{"gitId":"DannyDakota"},"content":"        assertFalse(MatriculationNumber.isValidMatriculationNumber(\" \")); // spaces only","lastModifiedDate":"2022-03-18"},{"lineNumber":33,"author":{"gitId":"DannyDakota"},"content":"        assertFalse(MatriculationNumber.isValidMatriculationNumber(\"A123456D\")); // 6 numbers","lastModifiedDate":"2022-03-18"},{"lineNumber":34,"author":{"gitId":"DannyDakota"},"content":"        assertFalse(MatriculationNumber.isValidMatriculationNumber(\"A12345678\")); // 8 numbers","lastModifiedDate":"2022-03-18"},{"lineNumber":35,"author":{"gitId":"DannyDakota"},"content":"        assertFalse(MatriculationNumber.isValidMatriculationNumber(\"A12345678$\")); // format is of AXXXXXXX{Alpha}","lastModifiedDate":"2022-03-18"},{"lineNumber":36,"author":{"gitId":"DannyDakota"},"content":"        assertFalse(MatriculationNumber.isValidMatriculationNumber(\"B12345678G\")); // first character","lastModifiedDate":"2022-03-20"},{"lineNumber":37,"author":{"gitId":"DannyDakota"},"content":"        // should be an a/A","lastModifiedDate":"2022-03-20"},{"lineNumber":38,"author":{"gitId":"DannyDakota"},"content":"","lastModifiedDate":"2022-03-18"},{"lineNumber":39,"author":{"gitId":"DannyDakota"},"content":"        // valid matriculation number","lastModifiedDate":"2022-03-18"},{"lineNumber":40,"author":{"gitId":"DannyDakota"},"content":"        assertTrue(MatriculationNumber.isValidMatriculationNumber(\"a1234567g\")); // all lowercase, correct number","lastModifiedDate":"2022-03-18"},{"lineNumber":41,"author":{"gitId":"DannyDakota"},"content":"        assertTrue(MatriculationNumber.isValidMatriculationNumber(\"A0000000H\")); // all uppercase, correct number","lastModifiedDate":"2022-03-18"},{"lineNumber":42,"author":{"gitId":"DannyDakota"},"content":"        assertTrue(MatriculationNumber.isValidMatriculationNumber(\"A0000000d\")); // all uppercase,","lastModifiedDate":"2022-03-18"},{"lineNumber":43,"author":{"gitId":"DannyDakota"},"content":"        // lowercase alphanumeric, correct number","lastModifiedDate":"2022-03-18"},{"lineNumber":44,"author":{"gitId":"DannyDakota"},"content":"        assertTrue(MatriculationNumber.isValidMatriculationNumber(\"a0000000D\")); // all uppercase,","lastModifiedDate":"2022-03-18"},{"lineNumber":45,"author":{"gitId":"DannyDakota"},"content":"        // lowercase first character, correct number","lastModifiedDate":"2022-03-18"},{"lineNumber":46,"author":{"gitId":"DannyDakota"},"content":"    }","lastModifiedDate":"2022-03-18"},{"lineNumber":47,"author":{"gitId":"DannyDakota"},"content":"}","lastModifiedDate":"2022-03-18"}],"authorContributionMap":{"DannyDakota":47}},{"path":"src/test/java/seedu/address/model/person/NameContainsKeywordsPredicateTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.model.person;","lastModifiedDate":"2017-06-12"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.util.Arrays;","lastModifiedDate":"2017-06-12"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import java.util.Collections;","lastModifiedDate":"2017-06-12"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import java.util.List;","lastModifiedDate":"2017-06-12"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import seedu.address.testutil.PersonBuilder;","lastModifiedDate":"2017-06-12"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":14,"author":{"gitId":"DannyDakota"},"content":"/**","lastModifiedDate":"2022-03-20"},{"lineNumber":15,"author":{"gitId":"DannyDakota"},"content":" * Contains unit tests for NameContainsKeywordsPredicate class and its methods.","lastModifiedDate":"2022-03-20"},{"lineNumber":16,"author":{"gitId":"DannyDakota"},"content":" */","lastModifiedDate":"2022-03-20"},{"lineNumber":17,"author":{"gitId":"-"},"content":"public class NameContainsKeywordsPredicateTest {","lastModifiedDate":"2017-06-12"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-12"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    public void equals() {","lastModifiedDate":"2017-06-12"},{"lineNumber":21,"author":{"gitId":"-"},"content":"        List\u003cString\u003e firstPredicateKeywordList \u003d Collections.singletonList(\"first\");","lastModifiedDate":"2017-06-12"},{"lineNumber":22,"author":{"gitId":"-"},"content":"        List\u003cString\u003e secondPredicateKeywordList \u003d Arrays.asList(\"first\", \"second\");","lastModifiedDate":"2017-06-12"},{"lineNumber":23,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":24,"author":{"gitId":"-"},"content":"        NameContainsKeywordsPredicate firstPredicate \u003d new NameContainsKeywordsPredicate(firstPredicateKeywordList);","lastModifiedDate":"2017-06-12"},{"lineNumber":25,"author":{"gitId":"-"},"content":"        NameContainsKeywordsPredicate secondPredicate \u003d new NameContainsKeywordsPredicate(secondPredicateKeywordList);","lastModifiedDate":"2017-06-12"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":27,"author":{"gitId":"-"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2017-06-12"},{"lineNumber":28,"author":{"gitId":"-"},"content":"        assertTrue(firstPredicate.equals(firstPredicate));","lastModifiedDate":"2017-06-12"},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":30,"author":{"gitId":"-"},"content":"        // same values -\u003e returns true","lastModifiedDate":"2017-06-12"},{"lineNumber":31,"author":{"gitId":"-"},"content":"        NameContainsKeywordsPredicate firstPredicateCopy \u003d new NameContainsKeywordsPredicate(firstPredicateKeywordList);","lastModifiedDate":"2017-06-12"},{"lineNumber":32,"author":{"gitId":"-"},"content":"        assertTrue(firstPredicate.equals(firstPredicateCopy));","lastModifiedDate":"2017-06-12"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":34,"author":{"gitId":"-"},"content":"        // different types -\u003e returns false","lastModifiedDate":"2017-06-12"},{"lineNumber":35,"author":{"gitId":"-"},"content":"        assertFalse(firstPredicate.equals(1));","lastModifiedDate":"2017-06-12"},{"lineNumber":36,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        // null -\u003e returns false","lastModifiedDate":"2017-06-12"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        assertFalse(firstPredicate.equals(null));","lastModifiedDate":"2017-06-12"},{"lineNumber":39,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":40,"author":{"gitId":"-"},"content":"        // different person -\u003e returns false","lastModifiedDate":"2017-06-12"},{"lineNumber":41,"author":{"gitId":"-"},"content":"        assertFalse(firstPredicate.equals(secondPredicate));","lastModifiedDate":"2017-06-12"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-12"},{"lineNumber":43,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-12"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    public void test_nameContainsKeywords_returnsTrue() {","lastModifiedDate":"2017-08-15"},{"lineNumber":46,"author":{"gitId":"-"},"content":"        // One keyword","lastModifiedDate":"2017-06-12"},{"lineNumber":47,"author":{"gitId":"-"},"content":"        NameContainsKeywordsPredicate predicate \u003d new NameContainsKeywordsPredicate(Collections.singletonList(\"Alice\"));","lastModifiedDate":"2017-06-12"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        assertTrue(predicate.test(new PersonBuilder().withName(\"Alice Bob\").build()));","lastModifiedDate":"2017-06-12"},{"lineNumber":49,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":50,"author":{"gitId":"-"},"content":"        // Multiple keywords","lastModifiedDate":"2017-06-12"},{"lineNumber":51,"author":{"gitId":"-"},"content":"        predicate \u003d new NameContainsKeywordsPredicate(Arrays.asList(\"Alice\", \"Bob\"));","lastModifiedDate":"2017-06-12"},{"lineNumber":52,"author":{"gitId":"-"},"content":"        assertTrue(predicate.test(new PersonBuilder().withName(\"Alice Bob\").build()));","lastModifiedDate":"2017-06-12"},{"lineNumber":53,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":54,"author":{"gitId":"-"},"content":"        // Only one matching keyword","lastModifiedDate":"2017-06-12"},{"lineNumber":55,"author":{"gitId":"-"},"content":"        predicate \u003d new NameContainsKeywordsPredicate(Arrays.asList(\"Bob\", \"Carol\"));","lastModifiedDate":"2017-06-12"},{"lineNumber":56,"author":{"gitId":"-"},"content":"        assertTrue(predicate.test(new PersonBuilder().withName(\"Alice Carol\").build()));","lastModifiedDate":"2017-06-12"},{"lineNumber":57,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":58,"author":{"gitId":"-"},"content":"        // Mixed-case keywords","lastModifiedDate":"2017-06-12"},{"lineNumber":59,"author":{"gitId":"-"},"content":"        predicate \u003d new NameContainsKeywordsPredicate(Arrays.asList(\"aLIce\", \"bOB\"));","lastModifiedDate":"2017-06-12"},{"lineNumber":60,"author":{"gitId":"-"},"content":"        assertTrue(predicate.test(new PersonBuilder().withName(\"Alice Bob\").build()));","lastModifiedDate":"2017-06-12"},{"lineNumber":61,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-12"},{"lineNumber":62,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":63,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-12"},{"lineNumber":64,"author":{"gitId":"-"},"content":"    public void test_nameDoesNotContainKeywords_returnsFalse() {","lastModifiedDate":"2017-08-15"},{"lineNumber":65,"author":{"gitId":"-"},"content":"        // Zero keywords","lastModifiedDate":"2017-06-12"},{"lineNumber":66,"author":{"gitId":"-"},"content":"        NameContainsKeywordsPredicate predicate \u003d new NameContainsKeywordsPredicate(Collections.emptyList());","lastModifiedDate":"2017-06-12"},{"lineNumber":67,"author":{"gitId":"-"},"content":"        assertFalse(predicate.test(new PersonBuilder().withName(\"Alice\").build()));","lastModifiedDate":"2017-06-12"},{"lineNumber":68,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":69,"author":{"gitId":"-"},"content":"        // Non-matching keyword","lastModifiedDate":"2017-06-12"},{"lineNumber":70,"author":{"gitId":"-"},"content":"        predicate \u003d new NameContainsKeywordsPredicate(Arrays.asList(\"Carol\"));","lastModifiedDate":"2017-06-12"},{"lineNumber":71,"author":{"gitId":"-"},"content":"        assertFalse(predicate.test(new PersonBuilder().withName(\"Alice Bob\").build()));","lastModifiedDate":"2017-06-12"},{"lineNumber":72,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":73,"author":{"gitId":"-"},"content":"        // Keywords match phone, email and address, but does not match name","lastModifiedDate":"2017-06-12"},{"lineNumber":74,"author":{"gitId":"-"},"content":"        predicate \u003d new NameContainsKeywordsPredicate(Arrays.asList(\"12345\", \"alice@email.com\", \"Main\", \"Street\"));","lastModifiedDate":"2017-06-12"},{"lineNumber":75,"author":{"gitId":"-"},"content":"        assertFalse(predicate.test(new PersonBuilder().withName(\"Alice\").withPhone(\"12345\")","lastModifiedDate":"2017-06-12"},{"lineNumber":76,"author":{"gitId":"-"},"content":"                .withEmail(\"alice@email.com\").withAddress(\"Main Street\").build()));","lastModifiedDate":"2017-06-12"},{"lineNumber":77,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-12"},{"lineNumber":78,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-06-12"}],"authorContributionMap":{"DannyDakota":3,"-":75}},{"path":"src/test/java/seedu/address/model/person/NameTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.model.person;","lastModifiedDate":"2017-01-16"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-16"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.Assert.assertThrows;","lastModifiedDate":"2019-03-14"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-16"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-16"},{"lineNumber":9,"author":{"gitId":"DannyDakota"},"content":"/**","lastModifiedDate":"2022-03-20"},{"lineNumber":10,"author":{"gitId":"DannyDakota"},"content":" * Contains unit tests for Name class and its methods.","lastModifiedDate":"2022-03-20"},{"lineNumber":11,"author":{"gitId":"DannyDakota"},"content":" */","lastModifiedDate":"2022-03-20"},{"lineNumber":12,"author":{"gitId":"-"},"content":"public class NameTest {","lastModifiedDate":"2017-01-16"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-16"},{"lineNumber":14,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-12-04"},{"lineNumber":15,"author":{"gitId":"-"},"content":"    public void constructor_null_throwsNullPointerException() {","lastModifiedDate":"2017-12-04"},{"lineNumber":16,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e new Name(null));","lastModifiedDate":"2019-03-14"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-12-04"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-12-04"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-30"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    public void constructor_invalidName_throwsIllegalArgumentException() {","lastModifiedDate":"2017-05-30"},{"lineNumber":21,"author":{"gitId":"-"},"content":"        String invalidName \u003d \"\";","lastModifiedDate":"2017-05-30"},{"lineNumber":22,"author":{"gitId":"-"},"content":"        assertThrows(IllegalArgumentException.class, () -\u003e new Name(invalidName));","lastModifiedDate":"2019-03-14"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-30"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-30"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-01-16"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    public void isValidName() {","lastModifiedDate":"2017-01-16"},{"lineNumber":27,"author":{"gitId":"-"},"content":"        // null name","lastModifiedDate":"2017-12-04"},{"lineNumber":28,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e Name.isValidName(null));","lastModifiedDate":"2019-03-14"},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-12-04"},{"lineNumber":30,"author":{"gitId":"-"},"content":"        // invalid name","lastModifiedDate":"2017-01-16"},{"lineNumber":31,"author":{"gitId":"-"},"content":"        assertFalse(Name.isValidName(\"\")); // empty string","lastModifiedDate":"2017-01-16"},{"lineNumber":32,"author":{"gitId":"-"},"content":"        assertFalse(Name.isValidName(\" \")); // spaces only","lastModifiedDate":"2017-01-16"},{"lineNumber":33,"author":{"gitId":"-"},"content":"        assertFalse(Name.isValidName(\"^\")); // only non-alphanumeric characters","lastModifiedDate":"2017-01-16"},{"lineNumber":34,"author":{"gitId":"-"},"content":"        assertFalse(Name.isValidName(\"peter*\")); // contains non-alphanumeric characters","lastModifiedDate":"2017-01-16"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-16"},{"lineNumber":36,"author":{"gitId":"-"},"content":"        // valid name","lastModifiedDate":"2017-01-16"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        assertTrue(Name.isValidName(\"peter jack\")); // alphabets only","lastModifiedDate":"2017-01-16"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        assertTrue(Name.isValidName(\"12345\")); // numbers only","lastModifiedDate":"2017-01-16"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        assertTrue(Name.isValidName(\"peter the 2nd\")); // alphanumeric characters","lastModifiedDate":"2017-01-16"},{"lineNumber":40,"author":{"gitId":"-"},"content":"        assertTrue(Name.isValidName(\"Capital Tan\")); // with capital letters","lastModifiedDate":"2017-01-16"},{"lineNumber":41,"author":{"gitId":"-"},"content":"        assertTrue(Name.isValidName(\"David Roger Jackson Ray Jr 2nd\")); // long names","lastModifiedDate":"2017-01-16"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-01-16"},{"lineNumber":43,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-01-16"}],"authorContributionMap":{"DannyDakota":3,"-":40}},{"path":"src/test/java/seedu/address/model/person/PersonTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.model.person;","lastModifiedDate":"2018-03-26"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-09-01"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_ADDRESS_BOB;","lastModifiedDate":"2018-04-19"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_EMAIL_BOB;","lastModifiedDate":"2018-04-19"},{"lineNumber":7,"author":{"gitId":"cwq2326"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_MATRICULATION_NUMBER_BOB;","lastModifiedDate":"2022-03-18"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_NAME_BOB;","lastModifiedDate":"2018-04-19"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_PHONE_BOB;","lastModifiedDate":"2018-04-19"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_TAG_HUSBAND;","lastModifiedDate":"2018-04-19"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.Assert.assertThrows;","lastModifiedDate":"2019-03-23"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.TypicalPersons.ALICE;","lastModifiedDate":"2018-04-19"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.TypicalPersons.BOB;","lastModifiedDate":"2018-04-19"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-09-01"},{"lineNumber":17,"author":{"gitId":"-"},"content":"import seedu.address.testutil.PersonBuilder;","lastModifiedDate":"2018-03-26"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-09-01"},{"lineNumber":19,"author":{"gitId":"DannyDakota"},"content":"/**","lastModifiedDate":"2022-03-20"},{"lineNumber":20,"author":{"gitId":"DannyDakota"},"content":" * Contains unit tests for Person class and its methods.","lastModifiedDate":"2022-03-20"},{"lineNumber":21,"author":{"gitId":"DannyDakota"},"content":" */","lastModifiedDate":"2022-03-20"},{"lineNumber":22,"author":{"gitId":"-"},"content":"public class PersonTest {","lastModifiedDate":"2018-03-26"},{"lineNumber":23,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-09-01"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-09-01"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    public void asObservableList_modifyList_throwsUnsupportedOperationException() {","lastModifiedDate":"2017-09-01"},{"lineNumber":26,"author":{"gitId":"-"},"content":"        Person person \u003d new PersonBuilder().build();","lastModifiedDate":"2018-03-26"},{"lineNumber":27,"author":{"gitId":"-"},"content":"        assertThrows(UnsupportedOperationException.class, () -\u003e person.getTags().remove(0));","lastModifiedDate":"2019-03-23"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-09-01"},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-04-19"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    public void isSamePerson() {","lastModifiedDate":"2018-04-19"},{"lineNumber":32,"author":{"gitId":"-"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2018-04-19"},{"lineNumber":33,"author":{"gitId":"-"},"content":"        assertTrue(ALICE.isSamePerson(ALICE));","lastModifiedDate":"2018-04-19"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":35,"author":{"gitId":"-"},"content":"        // null -\u003e returns false","lastModifiedDate":"2018-04-19"},{"lineNumber":36,"author":{"gitId":"-"},"content":"        assertFalse(ALICE.isSamePerson(null));","lastModifiedDate":"2018-04-19"},{"lineNumber":37,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        Person editedAlice \u003d new PersonBuilder(ALICE).withPhone(VALID_PHONE_BOB).withEmail(VALID_EMAIL_BOB)","lastModifiedDate":"2020-12-18"},{"lineNumber":39,"author":{"gitId":"-"},"content":"                .withAddress(VALID_ADDRESS_BOB).withTags(VALID_TAG_HUSBAND).build();","lastModifiedDate":"2020-12-18"},{"lineNumber":40,"author":{"gitId":"cwq2326"},"content":"","lastModifiedDate":"2022-03-18"},{"lineNumber":41,"author":{"gitId":"cwq2326"},"content":"        // different phone number, all other attributes same --\u003e returns true","lastModifiedDate":"2022-03-18"},{"lineNumber":42,"author":{"gitId":"cwq2326"},"content":"        editedAlice \u003d new PersonBuilder(ALICE).withPhone(VALID_PHONE_BOB).build();","lastModifiedDate":"2022-03-18"},{"lineNumber":43,"author":{"gitId":"cwq2326"},"content":"        assertTrue(ALICE.isSamePerson(editedAlice));","lastModifiedDate":"2022-03-18"},{"lineNumber":44,"author":{"gitId":"cwq2326"},"content":"","lastModifiedDate":"2022-03-18"},{"lineNumber":45,"author":{"gitId":"cwq2326"},"content":"        // different matriculation number, all the other attributes same --\u003e returns true","lastModifiedDate":"2022-03-18"},{"lineNumber":46,"author":{"gitId":"DannyDakota"},"content":"        editedAlice \u003d new PersonBuilder(ALICE).withMatriculationNumber(VALID_MATRICULATION_NUMBER_BOB).build();","lastModifiedDate":"2022-03-29"},{"lineNumber":47,"author":{"gitId":"cwq2326"},"content":"        assertTrue(ALICE.isSamePerson(editedAlice));","lastModifiedDate":"2022-03-18"},{"lineNumber":48,"author":{"gitId":"cwq2326"},"content":"","lastModifiedDate":"2022-03-18"},{"lineNumber":49,"author":{"gitId":"cwq2326"},"content":"        // different email, all the other attributes the same --\u003e returns true","lastModifiedDate":"2022-03-18"},{"lineNumber":50,"author":{"gitId":"cwq2326"},"content":"        editedAlice \u003d new PersonBuilder(ALICE).withEmail(VALID_EMAIL_BOB).build();","lastModifiedDate":"2022-03-18"},{"lineNumber":51,"author":{"gitId":"cwq2326"},"content":"        assertTrue(ALICE.isSamePerson(editedAlice));","lastModifiedDate":"2022-03-18"},{"lineNumber":52,"author":{"gitId":"cwq2326"},"content":"","lastModifiedDate":"2022-03-18"},{"lineNumber":53,"author":{"gitId":"cwq2326"},"content":"        // different phone number and matriculation, all other attributes same --\u003e returns true","lastModifiedDate":"2022-03-18"},{"lineNumber":54,"author":{"gitId":"cwq2326"},"content":"        editedAlice \u003d new PersonBuilder(ALICE).withPhone(VALID_PHONE_BOB)","lastModifiedDate":"2022-03-18"},{"lineNumber":55,"author":{"gitId":"DannyDakota"},"content":"                .withMatriculationNumber(VALID_MATRICULATION_NUMBER_BOB).build();","lastModifiedDate":"2022-03-29"},{"lineNumber":56,"author":{"gitId":"cwq2326"},"content":"        assertTrue(ALICE.isSamePerson(editedAlice));","lastModifiedDate":"2022-03-18"},{"lineNumber":57,"author":{"gitId":"cwq2326"},"content":"","lastModifiedDate":"2022-03-18"},{"lineNumber":58,"author":{"gitId":"cwq2326"},"content":"        // different phone number and email, all other attributes same --\u003e returns true","lastModifiedDate":"2022-03-18"},{"lineNumber":59,"author":{"gitId":"cwq2326"},"content":"        editedAlice \u003d new PersonBuilder(ALICE).withPhone(VALID_PHONE_BOB).withEmail(VALID_EMAIL_BOB).build();","lastModifiedDate":"2022-03-18"},{"lineNumber":60,"author":{"gitId":"-"},"content":"        assertTrue(ALICE.isSamePerson(editedAlice));","lastModifiedDate":"2020-12-18"},{"lineNumber":61,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":62,"author":{"gitId":"cwq2326"},"content":"        // different matriculation number and email, all other attributes same --\u003e returns true","lastModifiedDate":"2022-03-18"},{"lineNumber":63,"author":{"gitId":"DannyDakota"},"content":"        editedAlice \u003d new PersonBuilder(ALICE).withMatriculationNumber(VALID_MATRICULATION_NUMBER_BOB)","lastModifiedDate":"2022-03-29"},{"lineNumber":64,"author":{"gitId":"cwq2326"},"content":"                .withEmail(VALID_EMAIL_BOB).build();","lastModifiedDate":"2022-03-18"},{"lineNumber":65,"author":{"gitId":"-"},"content":"        assertTrue(ALICE.isSamePerson(editedAlice));","lastModifiedDate":"2020-12-18"},{"lineNumber":66,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":67,"author":{"gitId":"cwq2326"},"content":"        // different phone, matriculation number and email, all the other attributes the same --\u003e returns false","lastModifiedDate":"2022-03-18"},{"lineNumber":68,"author":{"gitId":"cwq2326"},"content":"        editedAlice \u003d new PersonBuilder(ALICE).withPhone(VALID_PHONE_BOB)","lastModifiedDate":"2022-03-18"},{"lineNumber":69,"author":{"gitId":"DannyDakota"},"content":"                .withMatriculationNumber(VALID_MATRICULATION_NUMBER_BOB).withEmail(VALID_EMAIL_BOB).build();","lastModifiedDate":"2022-03-29"},{"lineNumber":70,"author":{"gitId":"-"},"content":"        assertFalse(ALICE.isSamePerson(editedAlice));","lastModifiedDate":"2018-04-19"},{"lineNumber":71,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":72,"author":{"gitId":"cwq2326"},"content":"        // email differs in case, all other attributes same -\u003e returns true","lastModifiedDate":"2022-03-18"},{"lineNumber":73,"author":{"gitId":"cwq2326"},"content":"        Person editedBob \u003d new PersonBuilder(BOB).withEmail(VALID_EMAIL_BOB.toUpperCase()).build();","lastModifiedDate":"2022-03-18"},{"lineNumber":74,"author":{"gitId":"cwq2326"},"content":"        assertTrue(BOB.isSamePerson(editedBob));","lastModifiedDate":"2022-03-18"},{"lineNumber":75,"author":{"gitId":"cwq2326"},"content":"","lastModifiedDate":"2022-03-18"},{"lineNumber":76,"author":{"gitId":"cwq2326"},"content":"        // matriculation number differs in case, all other attributes same -\u003e returns true","lastModifiedDate":"2022-03-18"},{"lineNumber":77,"author":{"gitId":"DannyDakota"},"content":"        editedBob \u003d new PersonBuilder(BOB)","lastModifiedDate":"2022-03-29"},{"lineNumber":78,"author":{"gitId":"DannyDakota"},"content":"                .withMatriculationNumber(VALID_MATRICULATION_NUMBER_BOB.toUpperCase()).build();","lastModifiedDate":"2022-03-29"},{"lineNumber":79,"author":{"gitId":"cwq2326"},"content":"        assertTrue(BOB.isSamePerson(editedBob));","lastModifiedDate":"2022-03-18"},{"lineNumber":80,"author":{"gitId":"cwq2326"},"content":"","lastModifiedDate":"2022-03-18"},{"lineNumber":81,"author":{"gitId":"DannyDakota"},"content":"        editedBob \u003d new PersonBuilder(BOB)","lastModifiedDate":"2022-03-29"},{"lineNumber":82,"author":{"gitId":"DannyDakota"},"content":"                .withMatriculationNumber(VALID_MATRICULATION_NUMBER_BOB.toLowerCase()).build();","lastModifiedDate":"2022-03-29"},{"lineNumber":83,"author":{"gitId":"cwq2326"},"content":"        assertTrue(BOB.isSamePerson(editedBob));","lastModifiedDate":"2022-03-18"},{"lineNumber":84,"author":{"gitId":"cwq2326"},"content":"","lastModifiedDate":"2022-03-18"},{"lineNumber":85,"author":{"gitId":"cwq2326"},"content":"        // First character is upper case last character is lower case eg. A0253625m --\u003e returns true","lastModifiedDate":"2022-03-20"},{"lineNumber":86,"author":{"gitId":"cwq2326"},"content":"        String editedMatriculationNumber \u003d VALID_MATRICULATION_NUMBER_BOB.substring(0, 1).toUpperCase()","lastModifiedDate":"2022-03-18"},{"lineNumber":87,"author":{"gitId":"cwq2326"},"content":"                + VALID_MATRICULATION_NUMBER_BOB.substring(1).toLowerCase();","lastModifiedDate":"2022-03-18"},{"lineNumber":88,"author":{"gitId":"cwq2326"},"content":"","lastModifiedDate":"2022-03-18"},{"lineNumber":89,"author":{"gitId":"DannyDakota"},"content":"        editedBob \u003d new PersonBuilder(BOB).withMatriculationNumber(editedMatriculationNumber).build();","lastModifiedDate":"2022-03-29"},{"lineNumber":90,"author":{"gitId":"cwq2326"},"content":"        assertTrue(BOB.isSamePerson(editedBob));","lastModifiedDate":"2022-03-18"},{"lineNumber":91,"author":{"gitId":"cwq2326"},"content":"","lastModifiedDate":"2022-03-18"},{"lineNumber":92,"author":{"gitId":"cwq2326"},"content":"        // First character is lower case last character is upper case eg. a0253625M --\u003e returns true","lastModifiedDate":"2022-03-20"},{"lineNumber":93,"author":{"gitId":"cwq2326"},"content":"        editedMatriculationNumber \u003d VALID_MATRICULATION_NUMBER_BOB.substring(0, 1).toLowerCase()","lastModifiedDate":"2022-03-18"},{"lineNumber":94,"author":{"gitId":"cwq2326"},"content":"                + VALID_MATRICULATION_NUMBER_BOB.substring(1).toUpperCase();","lastModifiedDate":"2022-03-18"},{"lineNumber":95,"author":{"gitId":"DannyDakota"},"content":"        editedBob \u003d new PersonBuilder(BOB).withMatriculationNumber(editedMatriculationNumber).build();","lastModifiedDate":"2022-03-29"},{"lineNumber":96,"author":{"gitId":"cwq2326"},"content":"        assertTrue(BOB.isSamePerson(editedBob));","lastModifiedDate":"2022-03-18"},{"lineNumber":97,"author":{"gitId":"cwq2326"},"content":"","lastModifiedDate":"2022-03-18"},{"lineNumber":98,"author":{"gitId":"cwq2326"},"content":"        // email has trailing spaces, all other attributes same -\u003e returns true","lastModifiedDate":"2022-03-20"},{"lineNumber":99,"author":{"gitId":"cwq2326"},"content":"        String emailWithTrailingSpaces \u003d VALID_EMAIL_BOB + \" \";","lastModifiedDate":"2022-03-18"},{"lineNumber":100,"author":{"gitId":"cwq2326"},"content":"        editedBob \u003d new PersonBuilder(BOB).withEmail(emailWithTrailingSpaces).build();","lastModifiedDate":"2022-03-18"},{"lineNumber":101,"author":{"gitId":"cwq2326"},"content":"        assertTrue(BOB.isSamePerson(editedBob));","lastModifiedDate":"2022-03-18"},{"lineNumber":102,"author":{"gitId":"cwq2326"},"content":"","lastModifiedDate":"2022-03-18"},{"lineNumber":103,"author":{"gitId":"cwq2326"},"content":"        // phone has trailing spaces, all other attributes same -\u003e returns true","lastModifiedDate":"2022-03-20"},{"lineNumber":104,"author":{"gitId":"cwq2326"},"content":"        String phoneWithTrailingSpaces \u003d VALID_PHONE_BOB + \" \";","lastModifiedDate":"2022-03-18"},{"lineNumber":105,"author":{"gitId":"cwq2326"},"content":"        editedBob \u003d new PersonBuilder(BOB).withPhone(phoneWithTrailingSpaces).build();","lastModifiedDate":"2022-03-20"},{"lineNumber":106,"author":{"gitId":"cwq2326"},"content":"        assertTrue(BOB.isSamePerson(editedBob));","lastModifiedDate":"2022-03-18"},{"lineNumber":107,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":108,"author":{"gitId":"cwq2326"},"content":"        // matriculation number has trailing spaces, all other attributes same -\u003e returns true","lastModifiedDate":"2022-03-20"},{"lineNumber":109,"author":{"gitId":"cwq2326"},"content":"        String matriculationNumberWithTrailingSpaces \u003d VALID_MATRICULATION_NUMBER_BOB + \" \";","lastModifiedDate":"2022-03-18"},{"lineNumber":110,"author":{"gitId":"DannyDakota"},"content":"        editedBob \u003d new PersonBuilder(BOB).withMatriculationNumber(matriculationNumberWithTrailingSpaces).build();","lastModifiedDate":"2022-03-29"},{"lineNumber":111,"author":{"gitId":"cwq2326"},"content":"        assertTrue(BOB.isSamePerson(editedBob));","lastModifiedDate":"2022-03-18"},{"lineNumber":112,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-04-19"},{"lineNumber":113,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":114,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-04-19"},{"lineNumber":115,"author":{"gitId":"-"},"content":"    public void equals() {","lastModifiedDate":"2018-04-19"},{"lineNumber":116,"author":{"gitId":"-"},"content":"        // same values -\u003e returns true","lastModifiedDate":"2018-04-19"},{"lineNumber":117,"author":{"gitId":"-"},"content":"        Person aliceCopy \u003d new PersonBuilder(ALICE).build();","lastModifiedDate":"2018-04-19"},{"lineNumber":118,"author":{"gitId":"-"},"content":"        assertTrue(ALICE.equals(aliceCopy));","lastModifiedDate":"2018-04-19"},{"lineNumber":119,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":120,"author":{"gitId":"-"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2018-04-19"},{"lineNumber":121,"author":{"gitId":"-"},"content":"        assertTrue(ALICE.equals(ALICE));","lastModifiedDate":"2018-04-19"},{"lineNumber":122,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":123,"author":{"gitId":"-"},"content":"        // null -\u003e returns false","lastModifiedDate":"2018-04-19"},{"lineNumber":124,"author":{"gitId":"-"},"content":"        assertFalse(ALICE.equals(null));","lastModifiedDate":"2018-04-19"},{"lineNumber":125,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":126,"author":{"gitId":"-"},"content":"        // different type -\u003e returns false","lastModifiedDate":"2018-04-19"},{"lineNumber":127,"author":{"gitId":"-"},"content":"        assertFalse(ALICE.equals(5));","lastModifiedDate":"2018-04-19"},{"lineNumber":128,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":129,"author":{"gitId":"-"},"content":"        // different person -\u003e returns false","lastModifiedDate":"2018-04-19"},{"lineNumber":130,"author":{"gitId":"-"},"content":"        assertFalse(ALICE.equals(BOB));","lastModifiedDate":"2018-04-19"},{"lineNumber":131,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":132,"author":{"gitId":"-"},"content":"        // different name -\u003e returns false","lastModifiedDate":"2018-04-19"},{"lineNumber":133,"author":{"gitId":"-"},"content":"        Person editedAlice \u003d new PersonBuilder(ALICE).withName(VALID_NAME_BOB).build();","lastModifiedDate":"2018-04-19"},{"lineNumber":134,"author":{"gitId":"-"},"content":"        assertFalse(ALICE.equals(editedAlice));","lastModifiedDate":"2018-04-19"},{"lineNumber":135,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":136,"author":{"gitId":"-"},"content":"        // different phone -\u003e returns false","lastModifiedDate":"2018-04-19"},{"lineNumber":137,"author":{"gitId":"-"},"content":"        editedAlice \u003d new PersonBuilder(ALICE).withPhone(VALID_PHONE_BOB).build();","lastModifiedDate":"2018-04-19"},{"lineNumber":138,"author":{"gitId":"-"},"content":"        assertFalse(ALICE.equals(editedAlice));","lastModifiedDate":"2018-04-19"},{"lineNumber":139,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":140,"author":{"gitId":"-"},"content":"        // different email -\u003e returns false","lastModifiedDate":"2018-04-19"},{"lineNumber":141,"author":{"gitId":"-"},"content":"        editedAlice \u003d new PersonBuilder(ALICE).withEmail(VALID_EMAIL_BOB).build();","lastModifiedDate":"2018-04-19"},{"lineNumber":142,"author":{"gitId":"-"},"content":"        assertFalse(ALICE.equals(editedAlice));","lastModifiedDate":"2018-04-19"},{"lineNumber":143,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":144,"author":{"gitId":"-"},"content":"        // different address -\u003e returns false","lastModifiedDate":"2018-04-19"},{"lineNumber":145,"author":{"gitId":"-"},"content":"        editedAlice \u003d new PersonBuilder(ALICE).withAddress(VALID_ADDRESS_BOB).build();","lastModifiedDate":"2018-04-19"},{"lineNumber":146,"author":{"gitId":"-"},"content":"        assertFalse(ALICE.equals(editedAlice));","lastModifiedDate":"2018-04-19"},{"lineNumber":147,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-18"},{"lineNumber":148,"author":{"gitId":"-"},"content":"        // different tags -\u003e returns false","lastModifiedDate":"2018-04-18"},{"lineNumber":149,"author":{"gitId":"-"},"content":"        editedAlice \u003d new PersonBuilder(ALICE).withTags(VALID_TAG_HUSBAND).build();","lastModifiedDate":"2018-04-18"},{"lineNumber":150,"author":{"gitId":"-"},"content":"        assertFalse(ALICE.equals(editedAlice));","lastModifiedDate":"2018-04-18"},{"lineNumber":151,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-04-19"},{"lineNumber":152,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-09-01"}],"authorContributionMap":{"DannyDakota":14,"cwq2326":55,"-":83}},{"path":"src/test/java/seedu/address/model/person/PhoneTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.model.person;","lastModifiedDate":"2017-01-16"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-16"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.Assert.assertThrows;","lastModifiedDate":"2019-03-14"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-16"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-16"},{"lineNumber":9,"author":{"gitId":"DannyDakota"},"content":"/**","lastModifiedDate":"2022-03-20"},{"lineNumber":10,"author":{"gitId":"DannyDakota"},"content":" * Contains unit tests for Phone class and its methods.","lastModifiedDate":"2022-03-20"},{"lineNumber":11,"author":{"gitId":"DannyDakota"},"content":" */","lastModifiedDate":"2022-03-20"},{"lineNumber":12,"author":{"gitId":"-"},"content":"public class PhoneTest {","lastModifiedDate":"2017-01-16"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-16"},{"lineNumber":14,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-12-04"},{"lineNumber":15,"author":{"gitId":"-"},"content":"    public void constructor_null_throwsNullPointerException() {","lastModifiedDate":"2017-12-04"},{"lineNumber":16,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e new Phone(null));","lastModifiedDate":"2019-03-14"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-12-04"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-12-04"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-30"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    public void constructor_invalidPhone_throwsIllegalArgumentException() {","lastModifiedDate":"2017-05-30"},{"lineNumber":21,"author":{"gitId":"-"},"content":"        String invalidPhone \u003d \"\";","lastModifiedDate":"2017-05-30"},{"lineNumber":22,"author":{"gitId":"-"},"content":"        assertThrows(IllegalArgumentException.class, () -\u003e new Phone(invalidPhone));","lastModifiedDate":"2019-03-14"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-30"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-30"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-01-16"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    public void isValidPhone() {","lastModifiedDate":"2017-01-16"},{"lineNumber":27,"author":{"gitId":"-"},"content":"        // null phone number","lastModifiedDate":"2017-12-04"},{"lineNumber":28,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e Phone.isValidPhone(null));","lastModifiedDate":"2019-03-14"},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-12-04"},{"lineNumber":30,"author":{"gitId":"-"},"content":"        // invalid phone numbers","lastModifiedDate":"2017-01-16"},{"lineNumber":31,"author":{"gitId":"-"},"content":"        assertFalse(Phone.isValidPhone(\"\")); // empty string","lastModifiedDate":"2017-01-16"},{"lineNumber":32,"author":{"gitId":"-"},"content":"        assertFalse(Phone.isValidPhone(\" \")); // spaces only","lastModifiedDate":"2017-01-16"},{"lineNumber":33,"author":{"gitId":"-"},"content":"        assertFalse(Phone.isValidPhone(\"91\")); // less than 3 numbers","lastModifiedDate":"2017-05-04"},{"lineNumber":34,"author":{"gitId":"-"},"content":"        assertFalse(Phone.isValidPhone(\"phone\")); // non-numeric","lastModifiedDate":"2017-01-16"},{"lineNumber":35,"author":{"gitId":"-"},"content":"        assertFalse(Phone.isValidPhone(\"9011p041\")); // alphabets within digits","lastModifiedDate":"2017-01-16"},{"lineNumber":36,"author":{"gitId":"-"},"content":"        assertFalse(Phone.isValidPhone(\"9312 1534\")); // spaces within digits","lastModifiedDate":"2017-01-16"},{"lineNumber":37,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-16"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        // valid phone numbers","lastModifiedDate":"2017-01-16"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        assertTrue(Phone.isValidPhone(\"911\")); // exactly 3 numbers","lastModifiedDate":"2017-05-04"},{"lineNumber":40,"author":{"gitId":"-"},"content":"        assertTrue(Phone.isValidPhone(\"93121534\"));","lastModifiedDate":"2017-01-16"},{"lineNumber":41,"author":{"gitId":"-"},"content":"        assertTrue(Phone.isValidPhone(\"124293842033123\")); // long phone numbers","lastModifiedDate":"2017-01-16"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-01-16"},{"lineNumber":43,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-01-16"}],"authorContributionMap":{"DannyDakota":3,"-":40}},{"path":"src/test/java/seedu/address/model/person/UniquePersonListTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.model.person;","lastModifiedDate":"2018-08-09"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-09-01"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2019-03-15"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_ADDRESS_BOB;","lastModifiedDate":"2018-08-08"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_TAG_HUSBAND;","lastModifiedDate":"2018-08-08"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.Assert.assertThrows;","lastModifiedDate":"2019-03-23"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.TypicalPersons.ALICE;","lastModifiedDate":"2018-08-08"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.TypicalPersons.BOB;","lastModifiedDate":"2018-08-08"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import java.util.Arrays;","lastModifiedDate":"2018-08-08"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import java.util.Collections;","lastModifiedDate":"2018-08-08"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import java.util.List;","lastModifiedDate":"2018-08-08"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":16,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-09-01"},{"lineNumber":18,"author":{"gitId":"-"},"content":"import seedu.address.model.person.exceptions.DuplicatePersonException;","lastModifiedDate":"2018-08-08"},{"lineNumber":19,"author":{"gitId":"-"},"content":"import seedu.address.model.person.exceptions.PersonNotFoundException;","lastModifiedDate":"2018-08-08"},{"lineNumber":20,"author":{"gitId":"-"},"content":"import seedu.address.testutil.PersonBuilder;","lastModifiedDate":"2018-08-08"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":22,"author":{"gitId":"DannyDakota"},"content":"/**","lastModifiedDate":"2022-03-20"},{"lineNumber":23,"author":{"gitId":"DannyDakota"},"content":" * Contains unit tests for UniquePersonList class and its methods.","lastModifiedDate":"2022-03-20"},{"lineNumber":24,"author":{"gitId":"DannyDakota"},"content":" */","lastModifiedDate":"2022-03-20"},{"lineNumber":25,"author":{"gitId":"-"},"content":"public class UniquePersonListTest {","lastModifiedDate":"2017-09-01"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-09-01"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    private final UniquePersonList uniquePersonList \u003d new UniquePersonList();","lastModifiedDate":"2018-08-08"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-08"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    public void contains_nullPerson_throwsNullPointerException() {","lastModifiedDate":"2018-08-08"},{"lineNumber":31,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e uniquePersonList.contains(null));","lastModifiedDate":"2019-03-23"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-08"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-08"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    public void contains_personNotInList_returnsFalse() {","lastModifiedDate":"2018-08-08"},{"lineNumber":36,"author":{"gitId":"-"},"content":"        assertFalse(uniquePersonList.contains(ALICE));","lastModifiedDate":"2018-08-08"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-08"},{"lineNumber":38,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-08"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    public void contains_personInList_returnsTrue() {","lastModifiedDate":"2018-08-08"},{"lineNumber":41,"author":{"gitId":"-"},"content":"        uniquePersonList.add(ALICE);","lastModifiedDate":"2018-08-08"},{"lineNumber":42,"author":{"gitId":"-"},"content":"        assertTrue(uniquePersonList.contains(ALICE));","lastModifiedDate":"2018-08-08"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-08"},{"lineNumber":44,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-08"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    public void contains_personWithSameIdentityFieldsInList_returnsTrue() {","lastModifiedDate":"2018-08-08"},{"lineNumber":47,"author":{"gitId":"-"},"content":"        uniquePersonList.add(ALICE);","lastModifiedDate":"2018-08-08"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        Person editedAlice \u003d new PersonBuilder(ALICE).withAddress(VALID_ADDRESS_BOB).withTags(VALID_TAG_HUSBAND)","lastModifiedDate":"2018-08-08"},{"lineNumber":49,"author":{"gitId":"-"},"content":"                .build();","lastModifiedDate":"2018-08-08"},{"lineNumber":50,"author":{"gitId":"-"},"content":"        assertTrue(uniquePersonList.contains(editedAlice));","lastModifiedDate":"2018-08-08"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-08"},{"lineNumber":52,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":53,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-08"},{"lineNumber":54,"author":{"gitId":"-"},"content":"    public void add_nullPerson_throwsNullPointerException() {","lastModifiedDate":"2018-08-08"},{"lineNumber":55,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e uniquePersonList.add(null));","lastModifiedDate":"2019-03-23"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-08"},{"lineNumber":57,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":58,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-08"},{"lineNumber":59,"author":{"gitId":"-"},"content":"    public void add_duplicatePerson_throwsDuplicatePersonException() {","lastModifiedDate":"2018-08-08"},{"lineNumber":60,"author":{"gitId":"-"},"content":"        uniquePersonList.add(ALICE);","lastModifiedDate":"2018-08-08"},{"lineNumber":61,"author":{"gitId":"-"},"content":"        assertThrows(DuplicatePersonException.class, () -\u003e uniquePersonList.add(ALICE));","lastModifiedDate":"2019-03-23"},{"lineNumber":62,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-08"},{"lineNumber":63,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":64,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-08"},{"lineNumber":65,"author":{"gitId":"-"},"content":"    public void setPerson_nullTargetPerson_throwsNullPointerException() {","lastModifiedDate":"2018-08-08"},{"lineNumber":66,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e uniquePersonList.setPerson(null, ALICE));","lastModifiedDate":"2019-03-23"},{"lineNumber":67,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-08"},{"lineNumber":68,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":69,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-08"},{"lineNumber":70,"author":{"gitId":"-"},"content":"    public void setPerson_nullEditedPerson_throwsNullPointerException() {","lastModifiedDate":"2018-08-08"},{"lineNumber":71,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e uniquePersonList.setPerson(ALICE, null));","lastModifiedDate":"2019-03-23"},{"lineNumber":72,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-08"},{"lineNumber":73,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":74,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-08"},{"lineNumber":75,"author":{"gitId":"-"},"content":"    public void setPerson_targetPersonNotInList_throwsPersonNotFoundException() {","lastModifiedDate":"2018-08-08"},{"lineNumber":76,"author":{"gitId":"-"},"content":"        assertThrows(PersonNotFoundException.class, () -\u003e uniquePersonList.setPerson(ALICE, ALICE));","lastModifiedDate":"2019-03-23"},{"lineNumber":77,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-08"},{"lineNumber":78,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":79,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-08"},{"lineNumber":80,"author":{"gitId":"-"},"content":"    public void setPerson_editedPersonIsSamePerson_success() {","lastModifiedDate":"2018-08-08"},{"lineNumber":81,"author":{"gitId":"-"},"content":"        uniquePersonList.add(ALICE);","lastModifiedDate":"2018-08-08"},{"lineNumber":82,"author":{"gitId":"-"},"content":"        uniquePersonList.setPerson(ALICE, ALICE);","lastModifiedDate":"2018-08-08"},{"lineNumber":83,"author":{"gitId":"-"},"content":"        UniquePersonList expectedUniquePersonList \u003d new UniquePersonList();","lastModifiedDate":"2018-08-08"},{"lineNumber":84,"author":{"gitId":"-"},"content":"        expectedUniquePersonList.add(ALICE);","lastModifiedDate":"2018-08-08"},{"lineNumber":85,"author":{"gitId":"-"},"content":"        assertEquals(expectedUniquePersonList, uniquePersonList);","lastModifiedDate":"2018-08-08"},{"lineNumber":86,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-08"},{"lineNumber":87,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":88,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-08"},{"lineNumber":89,"author":{"gitId":"-"},"content":"    public void setPerson_editedPersonHasSameIdentity_success() {","lastModifiedDate":"2018-08-08"},{"lineNumber":90,"author":{"gitId":"-"},"content":"        uniquePersonList.add(ALICE);","lastModifiedDate":"2018-08-08"},{"lineNumber":91,"author":{"gitId":"-"},"content":"        Person editedAlice \u003d new PersonBuilder(ALICE).withAddress(VALID_ADDRESS_BOB).withTags(VALID_TAG_HUSBAND)","lastModifiedDate":"2018-08-08"},{"lineNumber":92,"author":{"gitId":"-"},"content":"                .build();","lastModifiedDate":"2018-08-08"},{"lineNumber":93,"author":{"gitId":"-"},"content":"        uniquePersonList.setPerson(ALICE, editedAlice);","lastModifiedDate":"2018-08-08"},{"lineNumber":94,"author":{"gitId":"-"},"content":"        UniquePersonList expectedUniquePersonList \u003d new UniquePersonList();","lastModifiedDate":"2018-08-08"},{"lineNumber":95,"author":{"gitId":"-"},"content":"        expectedUniquePersonList.add(editedAlice);","lastModifiedDate":"2018-08-08"},{"lineNumber":96,"author":{"gitId":"-"},"content":"        assertEquals(expectedUniquePersonList, uniquePersonList);","lastModifiedDate":"2018-08-08"},{"lineNumber":97,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-08"},{"lineNumber":98,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":99,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-08"},{"lineNumber":100,"author":{"gitId":"-"},"content":"    public void setPerson_editedPersonHasDifferentIdentity_success() {","lastModifiedDate":"2018-08-08"},{"lineNumber":101,"author":{"gitId":"-"},"content":"        uniquePersonList.add(ALICE);","lastModifiedDate":"2018-08-08"},{"lineNumber":102,"author":{"gitId":"-"},"content":"        uniquePersonList.setPerson(ALICE, BOB);","lastModifiedDate":"2018-08-08"},{"lineNumber":103,"author":{"gitId":"-"},"content":"        UniquePersonList expectedUniquePersonList \u003d new UniquePersonList();","lastModifiedDate":"2018-08-08"},{"lineNumber":104,"author":{"gitId":"-"},"content":"        expectedUniquePersonList.add(BOB);","lastModifiedDate":"2018-08-08"},{"lineNumber":105,"author":{"gitId":"-"},"content":"        assertEquals(expectedUniquePersonList, uniquePersonList);","lastModifiedDate":"2018-08-08"},{"lineNumber":106,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-08"},{"lineNumber":107,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":108,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-08"},{"lineNumber":109,"author":{"gitId":"-"},"content":"    public void setPerson_editedPersonHasNonUniqueIdentity_throwsDuplicatePersonException() {","lastModifiedDate":"2018-08-08"},{"lineNumber":110,"author":{"gitId":"-"},"content":"        uniquePersonList.add(ALICE);","lastModifiedDate":"2018-08-08"},{"lineNumber":111,"author":{"gitId":"-"},"content":"        uniquePersonList.add(BOB);","lastModifiedDate":"2018-08-08"},{"lineNumber":112,"author":{"gitId":"-"},"content":"        assertThrows(DuplicatePersonException.class, () -\u003e uniquePersonList.setPerson(ALICE, BOB));","lastModifiedDate":"2019-03-23"},{"lineNumber":113,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-08"},{"lineNumber":114,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":115,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-08"},{"lineNumber":116,"author":{"gitId":"-"},"content":"    public void remove_nullPerson_throwsNullPointerException() {","lastModifiedDate":"2018-08-08"},{"lineNumber":117,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e uniquePersonList.remove(null));","lastModifiedDate":"2019-03-23"},{"lineNumber":118,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-08"},{"lineNumber":119,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":120,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-08"},{"lineNumber":121,"author":{"gitId":"-"},"content":"    public void remove_personDoesNotExist_throwsPersonNotFoundException() {","lastModifiedDate":"2018-08-08"},{"lineNumber":122,"author":{"gitId":"-"},"content":"        assertThrows(PersonNotFoundException.class, () -\u003e uniquePersonList.remove(ALICE));","lastModifiedDate":"2019-03-23"},{"lineNumber":123,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-08"},{"lineNumber":124,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":125,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-08"},{"lineNumber":126,"author":{"gitId":"-"},"content":"    public void remove_existingPerson_removesPerson() {","lastModifiedDate":"2018-08-08"},{"lineNumber":127,"author":{"gitId":"-"},"content":"        uniquePersonList.add(ALICE);","lastModifiedDate":"2018-08-08"},{"lineNumber":128,"author":{"gitId":"-"},"content":"        uniquePersonList.remove(ALICE);","lastModifiedDate":"2018-08-08"},{"lineNumber":129,"author":{"gitId":"-"},"content":"        UniquePersonList expectedUniquePersonList \u003d new UniquePersonList();","lastModifiedDate":"2018-08-08"},{"lineNumber":130,"author":{"gitId":"-"},"content":"        assertEquals(expectedUniquePersonList, uniquePersonList);","lastModifiedDate":"2018-08-08"},{"lineNumber":131,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-08"},{"lineNumber":132,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":133,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-08"},{"lineNumber":134,"author":{"gitId":"-"},"content":"    public void setPersons_nullUniquePersonList_throwsNullPointerException() {","lastModifiedDate":"2018-08-08"},{"lineNumber":135,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e uniquePersonList.setPersons((UniquePersonList) null));","lastModifiedDate":"2019-03-23"},{"lineNumber":136,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-08"},{"lineNumber":137,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":138,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-08"},{"lineNumber":139,"author":{"gitId":"-"},"content":"    public void setPersons_uniquePersonList_replacesOwnListWithProvidedUniquePersonList() {","lastModifiedDate":"2018-08-08"},{"lineNumber":140,"author":{"gitId":"-"},"content":"        uniquePersonList.add(ALICE);","lastModifiedDate":"2018-08-08"},{"lineNumber":141,"author":{"gitId":"-"},"content":"        UniquePersonList expectedUniquePersonList \u003d new UniquePersonList();","lastModifiedDate":"2018-08-08"},{"lineNumber":142,"author":{"gitId":"-"},"content":"        expectedUniquePersonList.add(BOB);","lastModifiedDate":"2018-08-08"},{"lineNumber":143,"author":{"gitId":"-"},"content":"        uniquePersonList.setPersons(expectedUniquePersonList);","lastModifiedDate":"2018-08-08"},{"lineNumber":144,"author":{"gitId":"-"},"content":"        assertEquals(expectedUniquePersonList, uniquePersonList);","lastModifiedDate":"2018-08-08"},{"lineNumber":145,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-08"},{"lineNumber":146,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":147,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-08"},{"lineNumber":148,"author":{"gitId":"-"},"content":"    public void setPersons_nullList_throwsNullPointerException() {","lastModifiedDate":"2018-08-08"},{"lineNumber":149,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e uniquePersonList.setPersons((List\u003cPerson\u003e) null));","lastModifiedDate":"2019-03-23"},{"lineNumber":150,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-08"},{"lineNumber":151,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":152,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-08"},{"lineNumber":153,"author":{"gitId":"-"},"content":"    public void setPersons_list_replacesOwnListWithProvidedList() {","lastModifiedDate":"2018-08-08"},{"lineNumber":154,"author":{"gitId":"-"},"content":"        uniquePersonList.add(ALICE);","lastModifiedDate":"2018-08-08"},{"lineNumber":155,"author":{"gitId":"-"},"content":"        List\u003cPerson\u003e personList \u003d Collections.singletonList(BOB);","lastModifiedDate":"2018-08-08"},{"lineNumber":156,"author":{"gitId":"-"},"content":"        uniquePersonList.setPersons(personList);","lastModifiedDate":"2018-08-08"},{"lineNumber":157,"author":{"gitId":"-"},"content":"        UniquePersonList expectedUniquePersonList \u003d new UniquePersonList();","lastModifiedDate":"2018-08-08"},{"lineNumber":158,"author":{"gitId":"-"},"content":"        expectedUniquePersonList.add(BOB);","lastModifiedDate":"2018-08-08"},{"lineNumber":159,"author":{"gitId":"-"},"content":"        assertEquals(expectedUniquePersonList, uniquePersonList);","lastModifiedDate":"2018-08-08"},{"lineNumber":160,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-08"},{"lineNumber":161,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":162,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-08"},{"lineNumber":163,"author":{"gitId":"-"},"content":"    public void setPersons_listWithDuplicatePersons_throwsDuplicatePersonException() {","lastModifiedDate":"2018-08-08"},{"lineNumber":164,"author":{"gitId":"-"},"content":"        List\u003cPerson\u003e listWithDuplicatePersons \u003d Arrays.asList(ALICE, ALICE);","lastModifiedDate":"2018-08-08"},{"lineNumber":165,"author":{"gitId":"-"},"content":"        assertThrows(DuplicatePersonException.class, () -\u003e uniquePersonList.setPersons(listWithDuplicatePersons));","lastModifiedDate":"2019-03-23"},{"lineNumber":166,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-08"},{"lineNumber":167,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":168,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-09-01"},{"lineNumber":169,"author":{"gitId":"-"},"content":"    public void asUnmodifiableObservableList_modifyList_throwsUnsupportedOperationException() {","lastModifiedDate":"2018-04-05"},{"lineNumber":170,"author":{"gitId":"-"},"content":"        assertThrows(UnsupportedOperationException.class, ()","lastModifiedDate":"2019-03-23"},{"lineNumber":171,"author":{"gitId":"-"},"content":"            -\u003e uniquePersonList.asUnmodifiableObservableList().remove(0));","lastModifiedDate":"2019-03-23"},{"lineNumber":172,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-09-01"},{"lineNumber":173,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-09-01"}],"authorContributionMap":{"DannyDakota":3,"-":170}},{"path":"src/test/java/seedu/address/storage/JsonAdaptedPersonTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.storage;","lastModifiedDate":"2018-08-13"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static seedu.address.storage.JsonAdaptedPerson.MISSING_FIELD_MESSAGE_FORMAT;","lastModifiedDate":"2018-08-13"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.Assert.assertThrows;","lastModifiedDate":"2019-03-14"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.TypicalPersons.BENSON;","lastModifiedDate":"2018-08-13"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import java.util.ArrayList;","lastModifiedDate":"2018-08-13"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import java.util.List;","lastModifiedDate":"2018-08-13"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import java.util.stream.Collectors;","lastModifiedDate":"2018-08-13"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import seedu.address.commons.exceptions.IllegalValueException;","lastModifiedDate":"2018-08-13"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Address;","lastModifiedDate":"2022-03-17"},{"lineNumber":16,"author":{"gitId":"DannyDakota"},"content":"import seedu.address.model.person.Block;","lastModifiedDate":"2022-03-17"},{"lineNumber":17,"author":{"gitId":"DannyDakota"},"content":"import seedu.address.model.person.CovidStatus;","lastModifiedDate":"2022-03-17"},{"lineNumber":18,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Email;","lastModifiedDate":"2022-03-17"},{"lineNumber":19,"author":{"gitId":"DannyDakota"},"content":"import seedu.address.model.person.Faculty;","lastModifiedDate":"2022-03-17"},{"lineNumber":20,"author":{"gitId":"DannyDakota"},"content":"import seedu.address.model.person.MatriculationNumber;","lastModifiedDate":"2022-03-17"},{"lineNumber":21,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Name;","lastModifiedDate":"2022-03-17"},{"lineNumber":22,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Phone;","lastModifiedDate":"2022-03-17"},{"lineNumber":23,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-02-28"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":25,"author":{"gitId":"-"},"content":"public class JsonAdaptedPersonTest {","lastModifiedDate":"2018-08-13"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    private static final String INVALID_NAME \u003d \"R@chel\";","lastModifiedDate":"2018-08-13"},{"lineNumber":27,"author":{"gitId":"DannyDakota"},"content":"    private static final String INVALID_BLOCK \u003d \"3\";","lastModifiedDate":"2022-03-17"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    private static final String INVALID_PHONE \u003d \"+651234\";","lastModifiedDate":"2018-08-13"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    private static final String INVALID_ADDRESS \u003d \" \";","lastModifiedDate":"2018-08-13"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    private static final String INVALID_EMAIL \u003d \"example.com\";","lastModifiedDate":"2018-08-13"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    private static final String INVALID_TAG \u003d \"#friend\";","lastModifiedDate":"2018-08-13"},{"lineNumber":32,"author":{"gitId":"cwq2326"},"content":"    private static final String INVALID_FACULTY \u003d \"sco\";","lastModifiedDate":"2022-02-28"},{"lineNumber":33,"author":{"gitId":"cwq2326"},"content":"    private static final String INVALID_MATRICULATION_NUMBER \u003d \"b1234567v\";","lastModifiedDate":"2022-02-28"},{"lineNumber":34,"author":{"gitId":"cwq2326"},"content":"    private static final String INVALID_COVID_STATUS \u003d \"shn\";","lastModifiedDate":"2022-02-28"},{"lineNumber":35,"author":{"gitId":"cwq2326"},"content":"","lastModifiedDate":"2022-02-28"},{"lineNumber":36,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    private static final String VALID_NAME \u003d BENSON.getName().toString();","lastModifiedDate":"2018-08-13"},{"lineNumber":38,"author":{"gitId":"DannyDakota"},"content":"    private static final String VALID_BLOCK \u003d BENSON.getBlock().toString();","lastModifiedDate":"2022-03-17"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    private static final String VALID_PHONE \u003d BENSON.getPhone().toString();","lastModifiedDate":"2018-08-13"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    private static final String VALID_EMAIL \u003d BENSON.getEmail().toString();","lastModifiedDate":"2018-08-13"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    private static final String VALID_ADDRESS \u003d BENSON.getAddress().toString();","lastModifiedDate":"2018-08-13"},{"lineNumber":42,"author":{"gitId":"cwq2326"},"content":"    private static final String VALID_FACULTY \u003d BENSON.getFaculty().toString();","lastModifiedDate":"2022-02-28"},{"lineNumber":43,"author":{"gitId":"cwq2326"},"content":"    private static final String VALID_MATRICULATION_NUMBER \u003d BENSON.getMatriculationNumber().toString();","lastModifiedDate":"2022-02-28"},{"lineNumber":44,"author":{"gitId":"cwq2326"},"content":"    private static final String VALID_COVID_STATUS \u003d BENSON.getStatus().toString();","lastModifiedDate":"2022-02-28"},{"lineNumber":45,"author":{"gitId":"cwq2326"},"content":"","lastModifiedDate":"2022-02-28"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    private static final List\u003cJsonAdaptedTag\u003e VALID_TAGS \u003d BENSON.getTags().stream()","lastModifiedDate":"2018-08-13"},{"lineNumber":47,"author":{"gitId":"-"},"content":"            .map(JsonAdaptedTag::new)","lastModifiedDate":"2018-08-13"},{"lineNumber":48,"author":{"gitId":"-"},"content":"            .collect(Collectors.toList());","lastModifiedDate":"2018-08-13"},{"lineNumber":49,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-13"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    public void toModelType_validPersonDetails_returnsPerson() throws Exception {","lastModifiedDate":"2018-08-13"},{"lineNumber":52,"author":{"gitId":"-"},"content":"        JsonAdaptedPerson person \u003d new JsonAdaptedPerson(BENSON);","lastModifiedDate":"2018-08-13"},{"lineNumber":53,"author":{"gitId":"-"},"content":"        assertEquals(BENSON, person.toModelType());","lastModifiedDate":"2018-08-13"},{"lineNumber":54,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":55,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-13"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    public void toModelType_invalidName_throwsIllegalValueException() {","lastModifiedDate":"2018-08-13"},{"lineNumber":58,"author":{"gitId":"-"},"content":"        JsonAdaptedPerson person \u003d","lastModifiedDate":"2018-08-13"},{"lineNumber":59,"author":{"gitId":"DannyDakota"},"content":"                new JsonAdaptedPerson(INVALID_NAME, VALID_BLOCK, VALID_FACULTY, VALID_PHONE, VALID_EMAIL, VALID_ADDRESS,","lastModifiedDate":"2022-03-17"},{"lineNumber":60,"author":{"gitId":"cwq2326"},"content":"                        VALID_MATRICULATION_NUMBER, VALID_COVID_STATUS, VALID_TAGS);","lastModifiedDate":"2022-02-28"},{"lineNumber":61,"author":{"gitId":"-"},"content":"        String expectedMessage \u003d Name.MESSAGE_CONSTRAINTS;","lastModifiedDate":"2018-08-13"},{"lineNumber":62,"author":{"gitId":"-"},"content":"        assertThrows(IllegalValueException.class, expectedMessage, person::toModelType);","lastModifiedDate":"2019-03-14"},{"lineNumber":63,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":64,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":65,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-13"},{"lineNumber":66,"author":{"gitId":"-"},"content":"    public void toModelType_nullName_throwsIllegalValueException() {","lastModifiedDate":"2018-08-13"},{"lineNumber":67,"author":{"gitId":"DannyDakota"},"content":"        JsonAdaptedPerson person \u003d new JsonAdaptedPerson(null, VALID_BLOCK, VALID_FACULTY, VALID_PHONE, VALID_EMAIL,","lastModifiedDate":"2022-03-17"},{"lineNumber":68,"author":{"gitId":"cwq2326"},"content":"                VALID_ADDRESS, VALID_MATRICULATION_NUMBER, VALID_COVID_STATUS, VALID_TAGS);","lastModifiedDate":"2022-02-28"},{"lineNumber":69,"author":{"gitId":"-"},"content":"        String expectedMessage \u003d String.format(MISSING_FIELD_MESSAGE_FORMAT, Name.class.getSimpleName());","lastModifiedDate":"2018-08-13"},{"lineNumber":70,"author":{"gitId":"-"},"content":"        assertThrows(IllegalValueException.class, expectedMessage, person::toModelType);","lastModifiedDate":"2019-03-14"},{"lineNumber":71,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":72,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":73,"author":{"gitId":"DannyDakota"},"content":"    @Test","lastModifiedDate":"2022-03-17"},{"lineNumber":74,"author":{"gitId":"DannyDakota"},"content":"    public void toModelType_invalidBlock_throwsIllegalValueException() {","lastModifiedDate":"2022-03-17"},{"lineNumber":75,"author":{"gitId":"DannyDakota"},"content":"        JsonAdaptedPerson person \u003d","lastModifiedDate":"2022-03-17"},{"lineNumber":76,"author":{"gitId":"DannyDakota"},"content":"                new JsonAdaptedPerson(VALID_NAME, INVALID_BLOCK, VALID_FACULTY, VALID_PHONE, VALID_EMAIL, VALID_ADDRESS,","lastModifiedDate":"2022-03-17"},{"lineNumber":77,"author":{"gitId":"DannyDakota"},"content":"                        VALID_MATRICULATION_NUMBER, VALID_COVID_STATUS, VALID_TAGS);","lastModifiedDate":"2022-03-17"},{"lineNumber":78,"author":{"gitId":"DannyDakota"},"content":"        String expectedMessage \u003d Block.MESSAGE_CONSTRAINTS;","lastModifiedDate":"2022-03-17"},{"lineNumber":79,"author":{"gitId":"DannyDakota"},"content":"        assertThrows(IllegalValueException.class, expectedMessage, person::toModelType);","lastModifiedDate":"2022-03-17"},{"lineNumber":80,"author":{"gitId":"DannyDakota"},"content":"    }","lastModifiedDate":"2022-03-17"},{"lineNumber":81,"author":{"gitId":"DannyDakota"},"content":"","lastModifiedDate":"2022-03-17"},{"lineNumber":82,"author":{"gitId":"DannyDakota"},"content":"    @Test","lastModifiedDate":"2022-03-17"},{"lineNumber":83,"author":{"gitId":"DannyDakota"},"content":"    public void toModelType_nullBlock_throwsIllegalValueException() {","lastModifiedDate":"2022-03-17"},{"lineNumber":84,"author":{"gitId":"DannyDakota"},"content":"        JsonAdaptedPerson person \u003d new JsonAdaptedPerson(VALID_NAME, null, VALID_FACULTY, VALID_PHONE, VALID_EMAIL,","lastModifiedDate":"2022-03-17"},{"lineNumber":85,"author":{"gitId":"DannyDakota"},"content":"                VALID_ADDRESS, VALID_MATRICULATION_NUMBER, VALID_COVID_STATUS, VALID_TAGS);","lastModifiedDate":"2022-03-17"},{"lineNumber":86,"author":{"gitId":"DannyDakota"},"content":"        String expectedMessage \u003d String.format(MISSING_FIELD_MESSAGE_FORMAT, Block.class.getSimpleName());","lastModifiedDate":"2022-03-17"},{"lineNumber":87,"author":{"gitId":"DannyDakota"},"content":"        assertThrows(IllegalValueException.class, expectedMessage, person::toModelType);","lastModifiedDate":"2022-03-17"},{"lineNumber":88,"author":{"gitId":"DannyDakota"},"content":"    }","lastModifiedDate":"2022-03-17"},{"lineNumber":89,"author":{"gitId":"DannyDakota"},"content":"","lastModifiedDate":"2022-03-17"},{"lineNumber":90,"author":{"gitId":"cwq2326"},"content":"    @Test","lastModifiedDate":"2022-02-28"},{"lineNumber":91,"author":{"gitId":"cwq2326"},"content":"    public void toModelType_invalidFaculty_throwsIllegalValueException() {","lastModifiedDate":"2022-02-28"},{"lineNumber":92,"author":{"gitId":"cwq2326"},"content":"        JsonAdaptedPerson person \u003d","lastModifiedDate":"2022-02-28"},{"lineNumber":93,"author":{"gitId":"DannyDakota"},"content":"                new JsonAdaptedPerson(VALID_NAME, VALID_BLOCK, INVALID_FACULTY, VALID_PHONE, VALID_EMAIL, VALID_ADDRESS,","lastModifiedDate":"2022-03-17"},{"lineNumber":94,"author":{"gitId":"cwq2326"},"content":"                        VALID_MATRICULATION_NUMBER, VALID_COVID_STATUS, VALID_TAGS);","lastModifiedDate":"2022-02-28"},{"lineNumber":95,"author":{"gitId":"cwq2326"},"content":"        String expectedMessage \u003d Faculty.MESSAGE_CONSTRAINTS;","lastModifiedDate":"2022-02-28"},{"lineNumber":96,"author":{"gitId":"cwq2326"},"content":"        assertThrows(IllegalValueException.class, expectedMessage, person::toModelType);","lastModifiedDate":"2022-02-28"},{"lineNumber":97,"author":{"gitId":"cwq2326"},"content":"    }","lastModifiedDate":"2022-02-28"},{"lineNumber":98,"author":{"gitId":"cwq2326"},"content":"","lastModifiedDate":"2022-02-28"},{"lineNumber":99,"author":{"gitId":"cwq2326"},"content":"    @Test","lastModifiedDate":"2022-02-28"},{"lineNumber":100,"author":{"gitId":"cwq2326"},"content":"    public void toModelType_nullFaculty_throwsIllegalValueException() {","lastModifiedDate":"2022-02-28"},{"lineNumber":101,"author":{"gitId":"DannyDakota"},"content":"        JsonAdaptedPerson person \u003d new JsonAdaptedPerson(VALID_NAME, VALID_BLOCK, null, VALID_PHONE, VALID_EMAIL,","lastModifiedDate":"2022-03-17"},{"lineNumber":102,"author":{"gitId":"cwq2326"},"content":"                VALID_ADDRESS, VALID_MATRICULATION_NUMBER, VALID_COVID_STATUS, VALID_TAGS);","lastModifiedDate":"2022-02-28"},{"lineNumber":103,"author":{"gitId":"cwq2326"},"content":"        String expectedMessage \u003d String.format(MISSING_FIELD_MESSAGE_FORMAT, Faculty.class.getSimpleName());","lastModifiedDate":"2022-02-28"},{"lineNumber":104,"author":{"gitId":"cwq2326"},"content":"        assertThrows(IllegalValueException.class, expectedMessage, person::toModelType);","lastModifiedDate":"2022-02-28"},{"lineNumber":105,"author":{"gitId":"cwq2326"},"content":"    }","lastModifiedDate":"2022-02-28"},{"lineNumber":106,"author":{"gitId":"cwq2326"},"content":"","lastModifiedDate":"2022-02-28"},{"lineNumber":107,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-13"},{"lineNumber":108,"author":{"gitId":"-"},"content":"    public void toModelType_invalidPhone_throwsIllegalValueException() {","lastModifiedDate":"2018-08-13"},{"lineNumber":109,"author":{"gitId":"-"},"content":"        JsonAdaptedPerson person \u003d","lastModifiedDate":"2018-08-13"},{"lineNumber":110,"author":{"gitId":"DannyDakota"},"content":"                new JsonAdaptedPerson(VALID_NAME, VALID_BLOCK, VALID_FACULTY, INVALID_PHONE, VALID_EMAIL, VALID_ADDRESS,","lastModifiedDate":"2022-03-17"},{"lineNumber":111,"author":{"gitId":"cwq2326"},"content":"                        VALID_MATRICULATION_NUMBER, VALID_COVID_STATUS, VALID_TAGS);","lastModifiedDate":"2022-02-28"},{"lineNumber":112,"author":{"gitId":"-"},"content":"        String expectedMessage \u003d Phone.MESSAGE_CONSTRAINTS;","lastModifiedDate":"2018-08-13"},{"lineNumber":113,"author":{"gitId":"-"},"content":"        assertThrows(IllegalValueException.class, expectedMessage, person::toModelType);","lastModifiedDate":"2019-03-14"},{"lineNumber":114,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":115,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":116,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-13"},{"lineNumber":117,"author":{"gitId":"-"},"content":"    public void toModelType_nullPhone_throwsIllegalValueException() {","lastModifiedDate":"2018-08-13"},{"lineNumber":118,"author":{"gitId":"DannyDakota"},"content":"        JsonAdaptedPerson person \u003d new JsonAdaptedPerson(VALID_NAME, VALID_BLOCK, VALID_FACULTY, null, VALID_EMAIL,","lastModifiedDate":"2022-03-17"},{"lineNumber":119,"author":{"gitId":"cwq2326"},"content":"                VALID_ADDRESS, VALID_MATRICULATION_NUMBER, VALID_COVID_STATUS, VALID_TAGS);","lastModifiedDate":"2022-02-28"},{"lineNumber":120,"author":{"gitId":"-"},"content":"        String expectedMessage \u003d String.format(MISSING_FIELD_MESSAGE_FORMAT, Phone.class.getSimpleName());","lastModifiedDate":"2018-08-13"},{"lineNumber":121,"author":{"gitId":"-"},"content":"        assertThrows(IllegalValueException.class, expectedMessage, person::toModelType);","lastModifiedDate":"2019-03-14"},{"lineNumber":122,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":123,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":124,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-13"},{"lineNumber":125,"author":{"gitId":"-"},"content":"    public void toModelType_invalidEmail_throwsIllegalValueException() {","lastModifiedDate":"2018-08-13"},{"lineNumber":126,"author":{"gitId":"-"},"content":"        JsonAdaptedPerson person \u003d","lastModifiedDate":"2018-08-13"},{"lineNumber":127,"author":{"gitId":"DannyDakota"},"content":"                new JsonAdaptedPerson(VALID_NAME, VALID_BLOCK, VALID_FACULTY, VALID_PHONE, INVALID_EMAIL, VALID_ADDRESS,","lastModifiedDate":"2022-03-17"},{"lineNumber":128,"author":{"gitId":"cwq2326"},"content":"                        VALID_MATRICULATION_NUMBER, VALID_COVID_STATUS, VALID_TAGS);","lastModifiedDate":"2022-02-28"},{"lineNumber":129,"author":{"gitId":"-"},"content":"        String expectedMessage \u003d Email.MESSAGE_CONSTRAINTS;","lastModifiedDate":"2018-08-13"},{"lineNumber":130,"author":{"gitId":"-"},"content":"        assertThrows(IllegalValueException.class, expectedMessage, person::toModelType);","lastModifiedDate":"2019-03-14"},{"lineNumber":131,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":132,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":133,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-13"},{"lineNumber":134,"author":{"gitId":"-"},"content":"    public void toModelType_nullEmail_throwsIllegalValueException() {","lastModifiedDate":"2018-08-13"},{"lineNumber":135,"author":{"gitId":"DannyDakota"},"content":"        JsonAdaptedPerson person \u003d new JsonAdaptedPerson(VALID_NAME, VALID_BLOCK, VALID_FACULTY, VALID_PHONE, null,","lastModifiedDate":"2022-03-17"},{"lineNumber":136,"author":{"gitId":"cwq2326"},"content":"                VALID_ADDRESS, VALID_MATRICULATION_NUMBER, VALID_COVID_STATUS, VALID_TAGS);","lastModifiedDate":"2022-02-28"},{"lineNumber":137,"author":{"gitId":"-"},"content":"        String expectedMessage \u003d String.format(MISSING_FIELD_MESSAGE_FORMAT, Email.class.getSimpleName());","lastModifiedDate":"2018-08-13"},{"lineNumber":138,"author":{"gitId":"-"},"content":"        assertThrows(IllegalValueException.class, expectedMessage, person::toModelType);","lastModifiedDate":"2019-03-14"},{"lineNumber":139,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":140,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":141,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-13"},{"lineNumber":142,"author":{"gitId":"-"},"content":"    public void toModelType_invalidAddress_throwsIllegalValueException() {","lastModifiedDate":"2018-08-13"},{"lineNumber":143,"author":{"gitId":"-"},"content":"        JsonAdaptedPerson person \u003d","lastModifiedDate":"2018-08-13"},{"lineNumber":144,"author":{"gitId":"DannyDakota"},"content":"                new JsonAdaptedPerson(VALID_NAME, VALID_BLOCK, VALID_FACULTY, VALID_PHONE, VALID_EMAIL,","lastModifiedDate":"2022-03-17"},{"lineNumber":145,"author":{"gitId":"DannyDakota"},"content":"                        INVALID_ADDRESS, VALID_MATRICULATION_NUMBER, VALID_COVID_STATUS, VALID_TAGS);","lastModifiedDate":"2022-03-17"},{"lineNumber":146,"author":{"gitId":"-"},"content":"        String expectedMessage \u003d Address.MESSAGE_CONSTRAINTS;","lastModifiedDate":"2018-08-13"},{"lineNumber":147,"author":{"gitId":"-"},"content":"        assertThrows(IllegalValueException.class, expectedMessage, person::toModelType);","lastModifiedDate":"2019-03-14"},{"lineNumber":148,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":149,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":150,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-13"},{"lineNumber":151,"author":{"gitId":"-"},"content":"    public void toModelType_nullAddress_throwsIllegalValueException() {","lastModifiedDate":"2018-08-13"},{"lineNumber":152,"author":{"gitId":"DannyDakota"},"content":"        JsonAdaptedPerson person \u003d new JsonAdaptedPerson(VALID_NAME, VALID_BLOCK, VALID_FACULTY, VALID_PHONE,","lastModifiedDate":"2022-03-17"},{"lineNumber":153,"author":{"gitId":"DannyDakota"},"content":"                VALID_EMAIL, null, VALID_MATRICULATION_NUMBER, VALID_COVID_STATUS, VALID_TAGS);","lastModifiedDate":"2022-03-17"},{"lineNumber":154,"author":{"gitId":"-"},"content":"        String expectedMessage \u003d String.format(MISSING_FIELD_MESSAGE_FORMAT, Address.class.getSimpleName());","lastModifiedDate":"2018-08-13"},{"lineNumber":155,"author":{"gitId":"-"},"content":"        assertThrows(IllegalValueException.class, expectedMessage, person::toModelType);","lastModifiedDate":"2019-03-14"},{"lineNumber":156,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":157,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":158,"author":{"gitId":"cwq2326"},"content":"    @Test","lastModifiedDate":"2022-02-28"},{"lineNumber":159,"author":{"gitId":"cwq2326"},"content":"    public void toModelType_invalidMatriculationNumber_throwsIllegalValueException() {","lastModifiedDate":"2022-02-28"},{"lineNumber":160,"author":{"gitId":"cwq2326"},"content":"        JsonAdaptedPerson person \u003d","lastModifiedDate":"2022-02-28"},{"lineNumber":161,"author":{"gitId":"DannyDakota"},"content":"                new JsonAdaptedPerson(VALID_NAME, VALID_BLOCK, VALID_FACULTY, VALID_PHONE, VALID_EMAIL, VALID_ADDRESS,","lastModifiedDate":"2022-03-17"},{"lineNumber":162,"author":{"gitId":"cwq2326"},"content":"                        INVALID_MATRICULATION_NUMBER, VALID_COVID_STATUS, VALID_TAGS);","lastModifiedDate":"2022-02-28"},{"lineNumber":163,"author":{"gitId":"cwq2326"},"content":"        String expectedMessage \u003d MatriculationNumber.MESSAGE_CONSTRAINTS;","lastModifiedDate":"2022-02-28"},{"lineNumber":164,"author":{"gitId":"cwq2326"},"content":"        assertThrows(IllegalValueException.class, expectedMessage, person::toModelType);","lastModifiedDate":"2022-02-28"},{"lineNumber":165,"author":{"gitId":"cwq2326"},"content":"    }","lastModifiedDate":"2022-02-28"},{"lineNumber":166,"author":{"gitId":"cwq2326"},"content":"","lastModifiedDate":"2022-02-28"},{"lineNumber":167,"author":{"gitId":"cwq2326"},"content":"    @Test","lastModifiedDate":"2022-02-28"},{"lineNumber":168,"author":{"gitId":"cwq2326"},"content":"    public void toModelType_nullMatriculationNumber_throwsIllegalValueException() {","lastModifiedDate":"2022-02-28"},{"lineNumber":169,"author":{"gitId":"DannyDakota"},"content":"        JsonAdaptedPerson person \u003d new JsonAdaptedPerson(VALID_NAME, VALID_BLOCK, VALID_FACULTY, VALID_PHONE,","lastModifiedDate":"2022-03-17"},{"lineNumber":170,"author":{"gitId":"DannyDakota"},"content":"                VALID_EMAIL, VALID_ADDRESS, null, VALID_COVID_STATUS, VALID_TAGS);","lastModifiedDate":"2022-03-17"},{"lineNumber":171,"author":{"gitId":"DannyDakota"},"content":"        String expectedMessage \u003d String.format(MISSING_FIELD_MESSAGE_FORMAT, MatriculationNumber.class.getSimpleName());","lastModifiedDate":"2022-03-08"},{"lineNumber":172,"author":{"gitId":"cwq2326"},"content":"        assertThrows(IllegalValueException.class, expectedMessage, person::toModelType);","lastModifiedDate":"2022-02-28"},{"lineNumber":173,"author":{"gitId":"cwq2326"},"content":"    }","lastModifiedDate":"2022-02-28"},{"lineNumber":174,"author":{"gitId":"cwq2326"},"content":"","lastModifiedDate":"2022-02-28"},{"lineNumber":175,"author":{"gitId":"cwq2326"},"content":"    @Test","lastModifiedDate":"2022-02-28"},{"lineNumber":176,"author":{"gitId":"cwq2326"},"content":"    public void toModelType_invalidCovidStatus_throwsIllegalValueException() {","lastModifiedDate":"2022-02-28"},{"lineNumber":177,"author":{"gitId":"cwq2326"},"content":"        JsonAdaptedPerson person \u003d","lastModifiedDate":"2022-02-28"},{"lineNumber":178,"author":{"gitId":"DannyDakota"},"content":"                new JsonAdaptedPerson(VALID_NAME, VALID_BLOCK, VALID_FACULTY, VALID_PHONE, VALID_EMAIL, VALID_ADDRESS,","lastModifiedDate":"2022-03-17"},{"lineNumber":179,"author":{"gitId":"cwq2326"},"content":"                        VALID_MATRICULATION_NUMBER, INVALID_COVID_STATUS, VALID_TAGS);","lastModifiedDate":"2022-02-28"},{"lineNumber":180,"author":{"gitId":"cwq2326"},"content":"        String expectedMessage \u003d CovidStatus.MESSAGE_CONSTRAINTS;","lastModifiedDate":"2022-02-28"},{"lineNumber":181,"author":{"gitId":"cwq2326"},"content":"        assertThrows(IllegalValueException.class, expectedMessage, person::toModelType);","lastModifiedDate":"2022-02-28"},{"lineNumber":182,"author":{"gitId":"cwq2326"},"content":"    }","lastModifiedDate":"2022-02-28"},{"lineNumber":183,"author":{"gitId":"cwq2326"},"content":"","lastModifiedDate":"2022-02-28"},{"lineNumber":184,"author":{"gitId":"cwq2326"},"content":"    @Test","lastModifiedDate":"2022-02-28"},{"lineNumber":185,"author":{"gitId":"cwq2326"},"content":"    public void toModelType_nullCovidStatus_throwsIllegalValueException() {","lastModifiedDate":"2022-02-28"},{"lineNumber":186,"author":{"gitId":"DannyDakota"},"content":"        JsonAdaptedPerson person \u003d new JsonAdaptedPerson(VALID_NAME, VALID_BLOCK, VALID_FACULTY, VALID_PHONE,","lastModifiedDate":"2022-03-17"},{"lineNumber":187,"author":{"gitId":"DannyDakota"},"content":"                VALID_EMAIL, VALID_ADDRESS, VALID_MATRICULATION_NUMBER, null, VALID_TAGS);","lastModifiedDate":"2022-03-17"},{"lineNumber":188,"author":{"gitId":"DannyDakota"},"content":"        String expectedMessage \u003d String.format(MISSING_FIELD_MESSAGE_FORMAT, CovidStatus.class.getSimpleName());","lastModifiedDate":"2022-03-08"},{"lineNumber":189,"author":{"gitId":"cwq2326"},"content":"        assertThrows(IllegalValueException.class, expectedMessage, person::toModelType);","lastModifiedDate":"2022-02-28"},{"lineNumber":190,"author":{"gitId":"cwq2326"},"content":"    }","lastModifiedDate":"2022-02-28"},{"lineNumber":191,"author":{"gitId":"cwq2326"},"content":"","lastModifiedDate":"2022-02-28"},{"lineNumber":192,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-13"},{"lineNumber":193,"author":{"gitId":"-"},"content":"    public void toModelType_invalidTags_throwsIllegalValueException() {","lastModifiedDate":"2018-08-13"},{"lineNumber":194,"author":{"gitId":"-"},"content":"        List\u003cJsonAdaptedTag\u003e invalidTags \u003d new ArrayList\u003c\u003e(VALID_TAGS);","lastModifiedDate":"2018-08-13"},{"lineNumber":195,"author":{"gitId":"-"},"content":"        invalidTags.add(new JsonAdaptedTag(INVALID_TAG));","lastModifiedDate":"2018-08-13"},{"lineNumber":196,"author":{"gitId":"-"},"content":"        JsonAdaptedPerson person \u003d","lastModifiedDate":"2018-08-13"},{"lineNumber":197,"author":{"gitId":"DannyDakota"},"content":"                new JsonAdaptedPerson(VALID_NAME, VALID_BLOCK, VALID_FACULTY, VALID_PHONE, VALID_EMAIL, VALID_ADDRESS,","lastModifiedDate":"2022-03-17"},{"lineNumber":198,"author":{"gitId":"cwq2326"},"content":"                        VALID_MATRICULATION_NUMBER, VALID_COVID_STATUS, invalidTags);","lastModifiedDate":"2022-02-28"},{"lineNumber":199,"author":{"gitId":"-"},"content":"        assertThrows(IllegalValueException.class, person::toModelType);","lastModifiedDate":"2019-03-14"},{"lineNumber":200,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":201,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":202,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2018-08-13"}],"authorContributionMap":{"DannyDakota":44,"cwq2326":56,"-":102}},{"path":"src/test/java/seedu/address/testutil/EditPersonDescriptorBuilder.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.testutil;","lastModifiedDate":"2017-05-05"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.util.Set;","lastModifiedDate":"2017-12-23"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import java.util.stream.Collectors;","lastModifiedDate":"2017-12-23"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.util.stream.Stream;","lastModifiedDate":"2017-12-23"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.EditCommand.EditPersonDescriptor;","lastModifiedDate":"2017-05-05"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Address;","lastModifiedDate":"2017-12-23"},{"lineNumber":9,"author":{"gitId":"DannyDakota"},"content":"import seedu.address.model.person.Block;","lastModifiedDate":"2022-03-17"},{"lineNumber":10,"author":{"gitId":"DannyDakota"},"content":"import seedu.address.model.person.CovidStatus;","lastModifiedDate":"2022-03-08"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Email;","lastModifiedDate":"2017-12-23"},{"lineNumber":12,"author":{"gitId":"DannyDakota"},"content":"import seedu.address.model.person.Faculty;","lastModifiedDate":"2022-03-08"},{"lineNumber":13,"author":{"gitId":"DannyDakota"},"content":"import seedu.address.model.person.MatriculationNumber;","lastModifiedDate":"2022-03-08"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Name;","lastModifiedDate":"2017-12-23"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2018-01-10"},{"lineNumber":16,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Phone;","lastModifiedDate":"2017-12-23"},{"lineNumber":17,"author":{"gitId":"-"},"content":"import seedu.address.model.tag.Tag;","lastModifiedDate":"2017-12-23"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":19,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-05-05"},{"lineNumber":20,"author":{"gitId":"-"},"content":" * A utility class to help with building EditPersonDescriptor objects.","lastModifiedDate":"2017-05-05"},{"lineNumber":21,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-05-05"},{"lineNumber":22,"author":{"gitId":"-"},"content":"public class EditPersonDescriptorBuilder {","lastModifiedDate":"2017-05-05"},{"lineNumber":23,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    private EditPersonDescriptor descriptor;","lastModifiedDate":"2017-05-05"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    public EditPersonDescriptorBuilder() {","lastModifiedDate":"2017-05-05"},{"lineNumber":27,"author":{"gitId":"-"},"content":"        descriptor \u003d new EditPersonDescriptor();","lastModifiedDate":"2017-05-05"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-05"},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    public EditPersonDescriptorBuilder(EditPersonDescriptor descriptor) {","lastModifiedDate":"2017-05-05"},{"lineNumber":31,"author":{"gitId":"-"},"content":"        this.descriptor \u003d new EditPersonDescriptor(descriptor);","lastModifiedDate":"2017-05-05"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-05"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-06-05"},{"lineNumber":35,"author":{"gitId":"-"},"content":"     * Returns an {@code EditPersonDescriptor} with fields containing {@code person}\u0027s details","lastModifiedDate":"2017-06-05"},{"lineNumber":36,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-06-05"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    public EditPersonDescriptorBuilder(Person person) {","lastModifiedDate":"2018-01-10"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        descriptor \u003d new EditPersonDescriptor();","lastModifiedDate":"2017-06-05"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        descriptor.setName(person.getName());","lastModifiedDate":"2017-06-21"},{"lineNumber":40,"author":{"gitId":"DannyDakota"},"content":"        descriptor.setBlock(person.getBlock());","lastModifiedDate":"2022-03-17"},{"lineNumber":41,"author":{"gitId":"DannyDakota"},"content":"        descriptor.setFaculty(person.getFaculty());","lastModifiedDate":"2022-03-08"},{"lineNumber":42,"author":{"gitId":"-"},"content":"        descriptor.setPhone(person.getPhone());","lastModifiedDate":"2017-06-21"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        descriptor.setEmail(person.getEmail());","lastModifiedDate":"2017-06-21"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        descriptor.setAddress(person.getAddress());","lastModifiedDate":"2017-06-21"},{"lineNumber":45,"author":{"gitId":"DannyDakota"},"content":"        descriptor.setMatriculationNumber(person.getMatriculationNumber());","lastModifiedDate":"2022-03-08"},{"lineNumber":46,"author":{"gitId":"DannyDakota"},"content":"        descriptor.setCovidStatus(person.getStatus());","lastModifiedDate":"2022-03-08"},{"lineNumber":47,"author":{"gitId":"-"},"content":"        descriptor.setTags(person.getTags());","lastModifiedDate":"2017-06-21"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-05"},{"lineNumber":49,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-07-26"},{"lineNumber":51,"author":{"gitId":"-"},"content":"     * Sets the {@code Name} of the {@code EditPersonDescriptor} that we are building.","lastModifiedDate":"2017-07-26"},{"lineNumber":52,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-07-26"},{"lineNumber":53,"author":{"gitId":"-"},"content":"    public EditPersonDescriptorBuilder withName(String name) {","lastModifiedDate":"2017-08-15"},{"lineNumber":54,"author":{"gitId":"-"},"content":"        descriptor.setName(new Name(name));","lastModifiedDate":"2017-12-23"},{"lineNumber":55,"author":{"gitId":"-"},"content":"        return this;","lastModifiedDate":"2017-05-05"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-05"},{"lineNumber":57,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":58,"author":{"gitId":"DannyDakota"},"content":"    /**","lastModifiedDate":"2022-03-17"},{"lineNumber":59,"author":{"gitId":"DannyDakota"},"content":"     * Sets the {@code Block} of the {@code EditPersonDescriptor} that we are building.","lastModifiedDate":"2022-03-17"},{"lineNumber":60,"author":{"gitId":"DannyDakota"},"content":"     */","lastModifiedDate":"2022-03-17"},{"lineNumber":61,"author":{"gitId":"DannyDakota"},"content":"    public EditPersonDescriptorBuilder withBlock(String block) {","lastModifiedDate":"2022-03-17"},{"lineNumber":62,"author":{"gitId":"DannyDakota"},"content":"        descriptor.setBlock(new Block(block));","lastModifiedDate":"2022-03-17"},{"lineNumber":63,"author":{"gitId":"DannyDakota"},"content":"        return this;","lastModifiedDate":"2022-03-17"},{"lineNumber":64,"author":{"gitId":"DannyDakota"},"content":"    }","lastModifiedDate":"2022-03-17"},{"lineNumber":65,"author":{"gitId":"DannyDakota"},"content":"","lastModifiedDate":"2022-03-17"},{"lineNumber":66,"author":{"gitId":"DannyDakota"},"content":"    /**","lastModifiedDate":"2022-03-08"},{"lineNumber":67,"author":{"gitId":"DannyDakota"},"content":"     * Sets the {@code Faculty} of the {@code EditPersonDescriptor} that we are building.","lastModifiedDate":"2022-03-08"},{"lineNumber":68,"author":{"gitId":"DannyDakota"},"content":"     */","lastModifiedDate":"2022-03-08"},{"lineNumber":69,"author":{"gitId":"DannyDakota"},"content":"    public EditPersonDescriptorBuilder withFaculty(String faculty) {","lastModifiedDate":"2022-03-08"},{"lineNumber":70,"author":{"gitId":"DannyDakota"},"content":"        descriptor.setFaculty(new Faculty(faculty));","lastModifiedDate":"2022-03-08"},{"lineNumber":71,"author":{"gitId":"DannyDakota"},"content":"        return this;","lastModifiedDate":"2022-03-08"},{"lineNumber":72,"author":{"gitId":"DannyDakota"},"content":"    }","lastModifiedDate":"2022-03-08"},{"lineNumber":73,"author":{"gitId":"DannyDakota"},"content":"","lastModifiedDate":"2022-03-08"},{"lineNumber":74,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-07-26"},{"lineNumber":75,"author":{"gitId":"-"},"content":"     * Sets the {@code Phone} of the {@code EditPersonDescriptor} that we are building.","lastModifiedDate":"2017-07-26"},{"lineNumber":76,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-07-26"},{"lineNumber":77,"author":{"gitId":"-"},"content":"    public EditPersonDescriptorBuilder withPhone(String phone) {","lastModifiedDate":"2017-08-15"},{"lineNumber":78,"author":{"gitId":"-"},"content":"        descriptor.setPhone(new Phone(phone));","lastModifiedDate":"2017-12-23"},{"lineNumber":79,"author":{"gitId":"-"},"content":"        return this;","lastModifiedDate":"2017-05-05"},{"lineNumber":80,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-05"},{"lineNumber":81,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":82,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-07-26"},{"lineNumber":83,"author":{"gitId":"-"},"content":"     * Sets the {@code Email} of the {@code EditPersonDescriptor} that we are building.","lastModifiedDate":"2017-07-26"},{"lineNumber":84,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-07-26"},{"lineNumber":85,"author":{"gitId":"-"},"content":"    public EditPersonDescriptorBuilder withEmail(String email) {","lastModifiedDate":"2017-08-15"},{"lineNumber":86,"author":{"gitId":"-"},"content":"        descriptor.setEmail(new Email(email));","lastModifiedDate":"2017-12-23"},{"lineNumber":87,"author":{"gitId":"-"},"content":"        return this;","lastModifiedDate":"2017-05-05"},{"lineNumber":88,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-05"},{"lineNumber":89,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":90,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-07-26"},{"lineNumber":91,"author":{"gitId":"-"},"content":"     * Sets the {@code Address} of the {@code EditPersonDescriptor} that we are building.","lastModifiedDate":"2017-07-26"},{"lineNumber":92,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-07-26"},{"lineNumber":93,"author":{"gitId":"-"},"content":"    public EditPersonDescriptorBuilder withAddress(String address) {","lastModifiedDate":"2017-08-15"},{"lineNumber":94,"author":{"gitId":"-"},"content":"        descriptor.setAddress(new Address(address));","lastModifiedDate":"2017-12-23"},{"lineNumber":95,"author":{"gitId":"-"},"content":"        return this;","lastModifiedDate":"2017-05-05"},{"lineNumber":96,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-05"},{"lineNumber":97,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":98,"author":{"gitId":"DannyDakota"},"content":"    /**","lastModifiedDate":"2022-03-08"},{"lineNumber":99,"author":{"gitId":"DannyDakota"},"content":"     * Sets the {@code MatriculationNumber} of the {@code EditPersonDescriptor} that we are building.","lastModifiedDate":"2022-03-08"},{"lineNumber":100,"author":{"gitId":"DannyDakota"},"content":"     */","lastModifiedDate":"2022-03-08"},{"lineNumber":101,"author":{"gitId":"DannyDakota"},"content":"    public EditPersonDescriptorBuilder withMatriculationNumber(String matriculationNumber) {","lastModifiedDate":"2022-03-08"},{"lineNumber":102,"author":{"gitId":"DannyDakota"},"content":"        descriptor.setMatriculationNumber(new MatriculationNumber(matriculationNumber));","lastModifiedDate":"2022-03-08"},{"lineNumber":103,"author":{"gitId":"DannyDakota"},"content":"        return this;","lastModifiedDate":"2022-03-08"},{"lineNumber":104,"author":{"gitId":"DannyDakota"},"content":"    }","lastModifiedDate":"2022-03-08"},{"lineNumber":105,"author":{"gitId":"DannyDakota"},"content":"","lastModifiedDate":"2022-03-08"},{"lineNumber":106,"author":{"gitId":"DannyDakota"},"content":"    /**","lastModifiedDate":"2022-03-08"},{"lineNumber":107,"author":{"gitId":"DannyDakota"},"content":"     * Sets the {@code CovidStatus} of the {@code EditPersonDescriptor} that we are building.","lastModifiedDate":"2022-03-08"},{"lineNumber":108,"author":{"gitId":"DannyDakota"},"content":"     */","lastModifiedDate":"2022-03-08"},{"lineNumber":109,"author":{"gitId":"DannyDakota"},"content":"    public EditPersonDescriptorBuilder withCovidStatus(String covidStatus) {","lastModifiedDate":"2022-03-08"},{"lineNumber":110,"author":{"gitId":"DannyDakota"},"content":"        descriptor.setCovidStatus(new CovidStatus(covidStatus));","lastModifiedDate":"2022-03-08"},{"lineNumber":111,"author":{"gitId":"DannyDakota"},"content":"        return this;","lastModifiedDate":"2022-03-08"},{"lineNumber":112,"author":{"gitId":"DannyDakota"},"content":"    }","lastModifiedDate":"2022-03-08"},{"lineNumber":113,"author":{"gitId":"DannyDakota"},"content":"","lastModifiedDate":"2022-03-08"},{"lineNumber":114,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-07-26"},{"lineNumber":115,"author":{"gitId":"-"},"content":"     * Parses the {@code tags} into a {@code Set\u003cTag\u003e} and set it to the {@code EditPersonDescriptor}","lastModifiedDate":"2017-07-26"},{"lineNumber":116,"author":{"gitId":"-"},"content":"     * that we are building.","lastModifiedDate":"2017-07-26"},{"lineNumber":117,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-07-26"},{"lineNumber":118,"author":{"gitId":"-"},"content":"    public EditPersonDescriptorBuilder withTags(String... tags) {","lastModifiedDate":"2017-08-15"},{"lineNumber":119,"author":{"gitId":"-"},"content":"        Set\u003cTag\u003e tagSet \u003d Stream.of(tags).map(Tag::new).collect(Collectors.toSet());","lastModifiedDate":"2017-12-23"},{"lineNumber":120,"author":{"gitId":"-"},"content":"        descriptor.setTags(tagSet);","lastModifiedDate":"2017-12-23"},{"lineNumber":121,"author":{"gitId":"-"},"content":"        return this;","lastModifiedDate":"2017-05-05"},{"lineNumber":122,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-05"},{"lineNumber":123,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":124,"author":{"gitId":"-"},"content":"    public EditPersonDescriptor build() {","lastModifiedDate":"2017-05-05"},{"lineNumber":125,"author":{"gitId":"-"},"content":"        return descriptor;","lastModifiedDate":"2017-05-05"},{"lineNumber":126,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-05"},{"lineNumber":127,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-05-05"}],"authorContributionMap":{"DannyDakota":40,"-":87}},{"path":"src/test/java/seedu/address/testutil/PersonBuilder.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.testutil;","lastModifiedDate":"2016-09-03"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-03"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.util.HashSet;","lastModifiedDate":"2017-12-20"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import java.util.Set;","lastModifiedDate":"2017-04-05"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-04-05"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Address;","lastModifiedDate":"2017-01-18"},{"lineNumber":7,"author":{"gitId":"DannyDakota"},"content":"import seedu.address.model.person.Block;","lastModifiedDate":"2022-03-17"},{"lineNumber":8,"author":{"gitId":"cwq2326"},"content":"import seedu.address.model.person.CovidStatus;","lastModifiedDate":"2022-02-28"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Email;","lastModifiedDate":"2017-01-18"},{"lineNumber":10,"author":{"gitId":"cwq2326"},"content":"import seedu.address.model.person.Faculty;","lastModifiedDate":"2022-02-28"},{"lineNumber":11,"author":{"gitId":"cwq2326"},"content":"import seedu.address.model.person.MatriculationNumber;","lastModifiedDate":"2022-02-28"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Name;","lastModifiedDate":"2017-01-18"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2017-04-05"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Phone;","lastModifiedDate":"2017-01-18"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import seedu.address.model.tag.Tag;","lastModifiedDate":"2017-04-05"},{"lineNumber":16,"author":{"gitId":"-"},"content":"import seedu.address.model.util.SampleDataUtil;","lastModifiedDate":"2017-04-05"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-03"},{"lineNumber":18,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-09-03"},{"lineNumber":19,"author":{"gitId":"-"},"content":" * A utility class to help with building Person objects.","lastModifiedDate":"2017-04-05"},{"lineNumber":20,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-09-03"},{"lineNumber":21,"author":{"gitId":"-"},"content":"public class PersonBuilder {","lastModifiedDate":"2016-09-03"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-03"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    public static final String DEFAULT_NAME \u003d \"Amy Bee\";","lastModifiedDate":"2020-12-18"},{"lineNumber":24,"author":{"gitId":"DannyDakota"},"content":"    public static final String DEFAULT_BLOCK \u003d \"C\";","lastModifiedDate":"2022-03-17"},{"lineNumber":25,"author":{"gitId":"cwq2326"},"content":"    public static final String DEFAULT_FACULTY \u003d \"FOL\";","lastModifiedDate":"2022-02-28"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    public static final String DEFAULT_PHONE \u003d \"85355255\";","lastModifiedDate":"2017-04-05"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    public static final String DEFAULT_EMAIL \u003d \"amy@gmail.com\";","lastModifiedDate":"2020-12-18"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    public static final String DEFAULT_ADDRESS \u003d \"123, Jurong West Ave 6, #08-111\";","lastModifiedDate":"2017-04-05"},{"lineNumber":29,"author":{"gitId":"cwq2326"},"content":"    public static final String DEFAULT_MATRICULATION_NUMBER \u003d \"A0263512N\";","lastModifiedDate":"2022-02-28"},{"lineNumber":30,"author":{"gitId":"cwq2326"},"content":"    public static final String DEFAULT_COVID_STATUS \u003d \"negative\";","lastModifiedDate":"2022-02-28"},{"lineNumber":31,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-04-05"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    private Name name;","lastModifiedDate":"2017-12-20"},{"lineNumber":33,"author":{"gitId":"DannyDakota"},"content":"    private Block block;","lastModifiedDate":"2022-03-17"},{"lineNumber":34,"author":{"gitId":"cwq2326"},"content":"    private Faculty faculty;","lastModifiedDate":"2022-02-28"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    private Phone phone;","lastModifiedDate":"2017-12-20"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    private Email email;","lastModifiedDate":"2017-12-20"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    private Address address;","lastModifiedDate":"2017-12-20"},{"lineNumber":38,"author":{"gitId":"DannyDakota"},"content":"    private MatriculationNumber matriculationNumber;","lastModifiedDate":"2022-03-08"},{"lineNumber":39,"author":{"gitId":"DannyDakota"},"content":"    private CovidStatus covidStatus;","lastModifiedDate":"2022-03-08"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    private Set\u003cTag\u003e tags;","lastModifiedDate":"2017-12-20"},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-03"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2020-05-27"},{"lineNumber":43,"author":{"gitId":"-"},"content":"     * Creates a {@code PersonBuilder} with the default details.","lastModifiedDate":"2020-05-27"},{"lineNumber":44,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2020-05-27"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    public PersonBuilder() {","lastModifiedDate":"2017-08-15"},{"lineNumber":46,"author":{"gitId":"-"},"content":"        name \u003d new Name(DEFAULT_NAME);","lastModifiedDate":"2017-12-20"},{"lineNumber":47,"author":{"gitId":"DannyDakota"},"content":"        block \u003d new Block(DEFAULT_BLOCK);","lastModifiedDate":"2022-03-17"},{"lineNumber":48,"author":{"gitId":"DannyDakota"},"content":"        faculty \u003d new Faculty(DEFAULT_FACULTY);","lastModifiedDate":"2022-03-08"},{"lineNumber":49,"author":{"gitId":"-"},"content":"        phone \u003d new Phone(DEFAULT_PHONE);","lastModifiedDate":"2017-12-20"},{"lineNumber":50,"author":{"gitId":"-"},"content":"        email \u003d new Email(DEFAULT_EMAIL);","lastModifiedDate":"2017-12-20"},{"lineNumber":51,"author":{"gitId":"-"},"content":"        address \u003d new Address(DEFAULT_ADDRESS);","lastModifiedDate":"2017-12-20"},{"lineNumber":52,"author":{"gitId":"DannyDakota"},"content":"        matriculationNumber \u003d new MatriculationNumber(DEFAULT_MATRICULATION_NUMBER);","lastModifiedDate":"2022-03-08"},{"lineNumber":53,"author":{"gitId":"DannyDakota"},"content":"        covidStatus \u003d new CovidStatus(DEFAULT_COVID_STATUS);","lastModifiedDate":"2022-03-08"},{"lineNumber":54,"author":{"gitId":"-"},"content":"        tags \u003d new HashSet\u003c\u003e();","lastModifiedDate":"2018-03-26"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-03"},{"lineNumber":56,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-03"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-12-11"},{"lineNumber":58,"author":{"gitId":"-"},"content":"     * Initializes the PersonBuilder with the data of {@code personToCopy}.","lastModifiedDate":"2016-12-11"},{"lineNumber":59,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-12-11"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    public PersonBuilder(Person personToCopy) {","lastModifiedDate":"2018-01-10"},{"lineNumber":61,"author":{"gitId":"-"},"content":"        name \u003d personToCopy.getName();","lastModifiedDate":"2017-12-20"},{"lineNumber":62,"author":{"gitId":"DannyDakota"},"content":"        block \u003d personToCopy.getBlock();","lastModifiedDate":"2022-03-17"},{"lineNumber":63,"author":{"gitId":"DannyDakota"},"content":"        faculty \u003d personToCopy.getFaculty();","lastModifiedDate":"2022-03-08"},{"lineNumber":64,"author":{"gitId":"-"},"content":"        phone \u003d personToCopy.getPhone();","lastModifiedDate":"2017-12-20"},{"lineNumber":65,"author":{"gitId":"-"},"content":"        email \u003d personToCopy.getEmail();","lastModifiedDate":"2017-12-20"},{"lineNumber":66,"author":{"gitId":"-"},"content":"        address \u003d personToCopy.getAddress();","lastModifiedDate":"2017-12-20"},{"lineNumber":67,"author":{"gitId":"DannyDakota"},"content":"        matriculationNumber \u003d personToCopy.getMatriculationNumber();","lastModifiedDate":"2022-03-08"},{"lineNumber":68,"author":{"gitId":"DannyDakota"},"content":"        covidStatus \u003d personToCopy.getStatus();","lastModifiedDate":"2022-03-08"},{"lineNumber":69,"author":{"gitId":"-"},"content":"        tags \u003d new HashSet\u003c\u003e(personToCopy.getTags());","lastModifiedDate":"2017-12-20"},{"lineNumber":70,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-11"},{"lineNumber":71,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-11"},{"lineNumber":72,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-07-26"},{"lineNumber":73,"author":{"gitId":"-"},"content":"     * Sets the {@code Name} of the {@code Person} that we are building.","lastModifiedDate":"2017-07-26"},{"lineNumber":74,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-07-26"},{"lineNumber":75,"author":{"gitId":"-"},"content":"    public PersonBuilder withName(String name) {","lastModifiedDate":"2017-08-15"},{"lineNumber":76,"author":{"gitId":"-"},"content":"        this.name \u003d new Name(name);","lastModifiedDate":"2017-12-20"},{"lineNumber":77,"author":{"gitId":"-"},"content":"        return this;","lastModifiedDate":"2016-09-03"},{"lineNumber":78,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-03"},{"lineNumber":79,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-03"},{"lineNumber":80,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-07-26"},{"lineNumber":81,"author":{"gitId":"-"},"content":"     * Parses the {@code tags} into a {@code Set\u003cTag\u003e} and set it to the {@code Person} that we are building.","lastModifiedDate":"2017-07-26"},{"lineNumber":82,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-07-26"},{"lineNumber":83,"author":{"gitId":"-"},"content":"    public PersonBuilder withTags(String ... tags) {","lastModifiedDate":"2017-08-15"},{"lineNumber":84,"author":{"gitId":"-"},"content":"        this.tags \u003d SampleDataUtil.getTagSet(tags);","lastModifiedDate":"2017-12-20"},{"lineNumber":85,"author":{"gitId":"-"},"content":"        return this;","lastModifiedDate":"2016-09-03"},{"lineNumber":86,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-03"},{"lineNumber":87,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-03"},{"lineNumber":88,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-07-26"},{"lineNumber":89,"author":{"gitId":"-"},"content":"     * Sets the {@code Address} of the {@code Person} that we are building.","lastModifiedDate":"2017-07-26"},{"lineNumber":90,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-07-26"},{"lineNumber":91,"author":{"gitId":"-"},"content":"    public PersonBuilder withAddress(String address) {","lastModifiedDate":"2017-08-15"},{"lineNumber":92,"author":{"gitId":"-"},"content":"        this.address \u003d new Address(address);","lastModifiedDate":"2017-12-20"},{"lineNumber":93,"author":{"gitId":"-"},"content":"        return this;","lastModifiedDate":"2016-09-03"},{"lineNumber":94,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-03"},{"lineNumber":95,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-03"},{"lineNumber":96,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-07-26"},{"lineNumber":97,"author":{"gitId":"-"},"content":"     * Sets the {@code Phone} of the {@code Person} that we are building.","lastModifiedDate":"2017-07-26"},{"lineNumber":98,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-07-26"},{"lineNumber":99,"author":{"gitId":"-"},"content":"    public PersonBuilder withPhone(String phone) {","lastModifiedDate":"2017-08-15"},{"lineNumber":100,"author":{"gitId":"cwq2326"},"content":"        this.phone \u003d new Phone(phone.trim());","lastModifiedDate":"2022-03-20"},{"lineNumber":101,"author":{"gitId":"-"},"content":"        return this;","lastModifiedDate":"2016-09-03"},{"lineNumber":102,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-03"},{"lineNumber":103,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-03"},{"lineNumber":104,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-07-26"},{"lineNumber":105,"author":{"gitId":"-"},"content":"     * Sets the {@code Email} of the {@code Person} that we are building.","lastModifiedDate":"2017-07-26"},{"lineNumber":106,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-07-26"},{"lineNumber":107,"author":{"gitId":"-"},"content":"    public PersonBuilder withEmail(String email) {","lastModifiedDate":"2017-08-15"},{"lineNumber":108,"author":{"gitId":"cwq2326"},"content":"        this.email \u003d new Email(email.trim());","lastModifiedDate":"2022-03-18"},{"lineNumber":109,"author":{"gitId":"-"},"content":"        return this;","lastModifiedDate":"2016-09-03"},{"lineNumber":110,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-03"},{"lineNumber":111,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-03"},{"lineNumber":112,"author":{"gitId":"DannyDakota"},"content":"    /**","lastModifiedDate":"2022-03-08"},{"lineNumber":113,"author":{"gitId":"DannyDakota"},"content":"     * Sets the {@Code Faculty} of the {@Code Person} that we are building","lastModifiedDate":"2022-03-08"},{"lineNumber":114,"author":{"gitId":"DannyDakota"},"content":"     */","lastModifiedDate":"2022-03-08"},{"lineNumber":115,"author":{"gitId":"DannyDakota"},"content":"    public PersonBuilder withFaculty(String faculty) {","lastModifiedDate":"2022-03-08"},{"lineNumber":116,"author":{"gitId":"DannyDakota"},"content":"        this.faculty \u003d new Faculty(faculty);","lastModifiedDate":"2022-03-08"},{"lineNumber":117,"author":{"gitId":"DannyDakota"},"content":"        return this;","lastModifiedDate":"2022-03-08"},{"lineNumber":118,"author":{"gitId":"DannyDakota"},"content":"    }","lastModifiedDate":"2022-03-08"},{"lineNumber":119,"author":{"gitId":"DannyDakota"},"content":"","lastModifiedDate":"2022-03-08"},{"lineNumber":120,"author":{"gitId":"DannyDakota"},"content":"    /**","lastModifiedDate":"2022-03-08"},{"lineNumber":121,"author":{"gitId":"DannyDakota"},"content":"     * Sets the {@Code MatriculationNumber} of the {@Code Person} that we are building","lastModifiedDate":"2022-03-08"},{"lineNumber":122,"author":{"gitId":"DannyDakota"},"content":"     */","lastModifiedDate":"2022-03-08"},{"lineNumber":123,"author":{"gitId":"DannyDakota"},"content":"    public PersonBuilder withMatriculationNumber(String matriculationNumber) {","lastModifiedDate":"2022-03-29"},{"lineNumber":124,"author":{"gitId":"cwq2326"},"content":"        this.matriculationNumber \u003d new MatriculationNumber(matriculationNumber.trim());","lastModifiedDate":"2022-03-20"},{"lineNumber":125,"author":{"gitId":"DannyDakota"},"content":"        return this;","lastModifiedDate":"2022-03-08"},{"lineNumber":126,"author":{"gitId":"DannyDakota"},"content":"    }","lastModifiedDate":"2022-03-08"},{"lineNumber":127,"author":{"gitId":"DannyDakota"},"content":"","lastModifiedDate":"2022-03-08"},{"lineNumber":128,"author":{"gitId":"DannyDakota"},"content":"    /**","lastModifiedDate":"2022-03-08"},{"lineNumber":129,"author":{"gitId":"DannyDakota"},"content":"     * Sets the {@Code CovidStatus} of the {@Code Person} that we are building","lastModifiedDate":"2022-03-08"},{"lineNumber":130,"author":{"gitId":"DannyDakota"},"content":"     */","lastModifiedDate":"2022-03-08"},{"lineNumber":131,"author":{"gitId":"DannyDakota"},"content":"    public PersonBuilder withCovidStatus(String covidStatus) {","lastModifiedDate":"2022-03-08"},{"lineNumber":132,"author":{"gitId":"DannyDakota"},"content":"        this.covidStatus \u003d new CovidStatus(covidStatus);","lastModifiedDate":"2022-03-08"},{"lineNumber":133,"author":{"gitId":"DannyDakota"},"content":"        return this;","lastModifiedDate":"2022-03-08"},{"lineNumber":134,"author":{"gitId":"DannyDakota"},"content":"    }","lastModifiedDate":"2022-03-08"},{"lineNumber":135,"author":{"gitId":"DannyDakota"},"content":"","lastModifiedDate":"2022-03-08"},{"lineNumber":136,"author":{"gitId":"DannyDakota"},"content":"    /**","lastModifiedDate":"2022-03-17"},{"lineNumber":137,"author":{"gitId":"DannyDakota"},"content":"     * Sets the {@Code Block} of the {@Code Person} that we are building","lastModifiedDate":"2022-03-17"},{"lineNumber":138,"author":{"gitId":"DannyDakota"},"content":"     */","lastModifiedDate":"2022-03-17"},{"lineNumber":139,"author":{"gitId":"DannyDakota"},"content":"    public PersonBuilder withBlock(String block) {","lastModifiedDate":"2022-03-17"},{"lineNumber":140,"author":{"gitId":"DannyDakota"},"content":"        this.block \u003d new Block(block);","lastModifiedDate":"2022-03-17"},{"lineNumber":141,"author":{"gitId":"DannyDakota"},"content":"        return this;","lastModifiedDate":"2022-03-17"},{"lineNumber":142,"author":{"gitId":"DannyDakota"},"content":"    }","lastModifiedDate":"2022-03-17"},{"lineNumber":143,"author":{"gitId":"DannyDakota"},"content":"","lastModifiedDate":"2022-03-17"},{"lineNumber":144,"author":{"gitId":"DannyDakota"},"content":"    /**","lastModifiedDate":"2022-03-29"},{"lineNumber":145,"author":{"gitId":"DannyDakota"},"content":"     * Build a Person object.","lastModifiedDate":"2022-03-29"},{"lineNumber":146,"author":{"gitId":"DannyDakota"},"content":"     * @return Person object with this Object\u0027s attributes.","lastModifiedDate":"2022-03-29"},{"lineNumber":147,"author":{"gitId":"DannyDakota"},"content":"     */","lastModifiedDate":"2022-03-29"},{"lineNumber":148,"author":{"gitId":"-"},"content":"    public Person build() {","lastModifiedDate":"2017-04-05"},{"lineNumber":149,"author":{"gitId":"DannyDakota"},"content":"        return new Person(name, block, faculty, phone, email, address, matriculationNumber, covidStatus, tags);","lastModifiedDate":"2022-03-17"},{"lineNumber":150,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-03"},{"lineNumber":151,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-03"},{"lineNumber":152,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-09-03"}],"authorContributionMap":{"DannyDakota":49,"cwq2326":10,"-":93}},{"path":"src/test/java/seedu/address/testutil/PersonUtil.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.testutil;","lastModifiedDate":"2017-04-05"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-04-05"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_ADDRESS;","lastModifiedDate":"2017-05-09"},{"lineNumber":4,"author":{"gitId":"DannyDakota"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_BLOCK;","lastModifiedDate":"2022-03-17"},{"lineNumber":5,"author":{"gitId":"DannyDakota"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_COVID_STATUS;","lastModifiedDate":"2022-03-08"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_EMAIL;","lastModifiedDate":"2017-05-09"},{"lineNumber":7,"author":{"gitId":"DannyDakota"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_FACULTY;","lastModifiedDate":"2022-03-08"},{"lineNumber":8,"author":{"gitId":"DannyDakota"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_MATRICULATION_NUMBER;","lastModifiedDate":"2022-03-08"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_NAME;","lastModifiedDate":"2017-06-06"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_PHONE;","lastModifiedDate":"2017-05-09"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_TAG;","lastModifiedDate":"2017-05-09"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-09"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import java.util.Set;","lastModifiedDate":"2018-03-26"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-03-26"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.AddCommand;","lastModifiedDate":"2017-03-29"},{"lineNumber":16,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.EditCommand.EditPersonDescriptor;","lastModifiedDate":"2018-03-26"},{"lineNumber":17,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2018-01-10"},{"lineNumber":18,"author":{"gitId":"-"},"content":"import seedu.address.model.tag.Tag;","lastModifiedDate":"2018-03-26"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-04-05"},{"lineNumber":20,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-04-05"},{"lineNumber":21,"author":{"gitId":"-"},"content":" * A utility class for Person.","lastModifiedDate":"2017-04-05"},{"lineNumber":22,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-04-05"},{"lineNumber":23,"author":{"gitId":"-"},"content":"public class PersonUtil {","lastModifiedDate":"2017-04-05"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-04-05"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-04-05"},{"lineNumber":26,"author":{"gitId":"-"},"content":"     * Returns an add command string for adding the {@code person}.","lastModifiedDate":"2017-04-05"},{"lineNumber":27,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-04-05"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    public static String getAddCommand(Person person) {","lastModifiedDate":"2018-01-10"},{"lineNumber":29,"author":{"gitId":"-"},"content":"        return AddCommand.COMMAND_WORD + \" \" + getPersonDetails(person);","lastModifiedDate":"2017-03-29"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-04-06"},{"lineNumber":31,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-04-06"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-04-06"},{"lineNumber":33,"author":{"gitId":"-"},"content":"     * Returns the part of command string for the given {@code person}\u0027s details.","lastModifiedDate":"2017-04-06"},{"lineNumber":34,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-04-06"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    public static String getPersonDetails(Person person) {","lastModifiedDate":"2018-01-10"},{"lineNumber":36,"author":{"gitId":"-"},"content":"        StringBuilder sb \u003d new StringBuilder();","lastModifiedDate":"2017-04-05"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        sb.append(PREFIX_NAME + person.getName().fullName + \" \");","lastModifiedDate":"2017-06-06"},{"lineNumber":38,"author":{"gitId":"DannyDakota"},"content":"        sb.append(PREFIX_BLOCK + person.getBlock().studentBlock + \" \");","lastModifiedDate":"2022-03-17"},{"lineNumber":39,"author":{"gitId":"DannyDakota"},"content":"        sb.append(PREFIX_FACULTY + person.getFaculty().studentFaculty + \" \");","lastModifiedDate":"2022-03-08"},{"lineNumber":40,"author":{"gitId":"-"},"content":"        sb.append(PREFIX_PHONE + person.getPhone().value + \" \");","lastModifiedDate":"2017-05-09"},{"lineNumber":41,"author":{"gitId":"-"},"content":"        sb.append(PREFIX_EMAIL + person.getEmail().value + \" \");","lastModifiedDate":"2017-05-09"},{"lineNumber":42,"author":{"gitId":"-"},"content":"        sb.append(PREFIX_ADDRESS + person.getAddress().value + \" \");","lastModifiedDate":"2017-05-09"},{"lineNumber":43,"author":{"gitId":"DannyDakota"},"content":"        sb.append(PREFIX_MATRICULATION_NUMBER + person.getMatriculationNumber().value + \" \");","lastModifiedDate":"2022-03-08"},{"lineNumber":44,"author":{"gitId":"DannyDakota"},"content":"        sb.append(PREFIX_COVID_STATUS + person.getStatus().covidStatus + \" \");","lastModifiedDate":"2022-03-08"},{"lineNumber":45,"author":{"gitId":"-"},"content":"        person.getTags().stream().forEach(","lastModifiedDate":"2017-05-09"},{"lineNumber":46,"author":{"gitId":"-"},"content":"            s -\u003e sb.append(PREFIX_TAG + s.tagName + \" \")","lastModifiedDate":"2017-05-09"},{"lineNumber":47,"author":{"gitId":"-"},"content":"        );","lastModifiedDate":"2017-05-09"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        return sb.toString();","lastModifiedDate":"2017-04-05"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-04-05"},{"lineNumber":50,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-03-26"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-03-26"},{"lineNumber":52,"author":{"gitId":"-"},"content":"     * Returns the part of command string for the given {@code EditPersonDescriptor}\u0027s details.","lastModifiedDate":"2018-03-26"},{"lineNumber":53,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-03-26"},{"lineNumber":54,"author":{"gitId":"-"},"content":"    public static String getEditPersonDescriptorDetails(EditPersonDescriptor descriptor) {","lastModifiedDate":"2018-03-26"},{"lineNumber":55,"author":{"gitId":"-"},"content":"        StringBuilder sb \u003d new StringBuilder();","lastModifiedDate":"2018-03-26"},{"lineNumber":56,"author":{"gitId":"-"},"content":"        descriptor.getName().ifPresent(name -\u003e sb.append(PREFIX_NAME).append(name.fullName).append(\" \"));","lastModifiedDate":"2018-03-26"},{"lineNumber":57,"author":{"gitId":"DannyDakota"},"content":"        descriptor.getBlock().ifPresent(block -\u003e sb.append(PREFIX_BLOCK).append(block.studentBlock).append(\" \"));","lastModifiedDate":"2022-03-17"},{"lineNumber":58,"author":{"gitId":"DannyDakota"},"content":"        descriptor.getFaculty().ifPresent(faculty -\u003e","lastModifiedDate":"2022-03-08"},{"lineNumber":59,"author":{"gitId":"DannyDakota"},"content":"                sb.append(PREFIX_FACULTY).append(faculty.studentFaculty).append(\" \"));","lastModifiedDate":"2022-03-08"},{"lineNumber":60,"author":{"gitId":"-"},"content":"        descriptor.getPhone().ifPresent(phone -\u003e sb.append(PREFIX_PHONE).append(phone.value).append(\" \"));","lastModifiedDate":"2018-03-26"},{"lineNumber":61,"author":{"gitId":"-"},"content":"        descriptor.getEmail().ifPresent(email -\u003e sb.append(PREFIX_EMAIL).append(email.value).append(\" \"));","lastModifiedDate":"2018-03-26"},{"lineNumber":62,"author":{"gitId":"-"},"content":"        descriptor.getAddress().ifPresent(address -\u003e sb.append(PREFIX_ADDRESS).append(address.value).append(\" \"));","lastModifiedDate":"2018-03-26"},{"lineNumber":63,"author":{"gitId":"DannyDakota"},"content":"        descriptor.getMatriculationNumber().ifPresent(matriculationNumber -\u003e","lastModifiedDate":"2022-03-08"},{"lineNumber":64,"author":{"gitId":"DannyDakota"},"content":"                sb.append(PREFIX_MATRICULATION_NUMBER).append(matriculationNumber.value).append(\" \"));","lastModifiedDate":"2022-03-08"},{"lineNumber":65,"author":{"gitId":"DannyDakota"},"content":"        descriptor.getCovidStatus().ifPresent(covidStatus -\u003e","lastModifiedDate":"2022-03-08"},{"lineNumber":66,"author":{"gitId":"DannyDakota"},"content":"                sb.append(PREFIX_COVID_STATUS).append(covidStatus.covidStatus).append(\" \"));","lastModifiedDate":"2022-03-08"},{"lineNumber":67,"author":{"gitId":"-"},"content":"        if (descriptor.getTags().isPresent()) {","lastModifiedDate":"2018-03-26"},{"lineNumber":68,"author":{"gitId":"-"},"content":"            Set\u003cTag\u003e tags \u003d descriptor.getTags().get();","lastModifiedDate":"2018-03-26"},{"lineNumber":69,"author":{"gitId":"-"},"content":"            if (tags.isEmpty()) {","lastModifiedDate":"2018-03-26"},{"lineNumber":70,"author":{"gitId":"-"},"content":"                sb.append(PREFIX_TAG);","lastModifiedDate":"2018-03-26"},{"lineNumber":71,"author":{"gitId":"-"},"content":"            } else {","lastModifiedDate":"2018-03-26"},{"lineNumber":72,"author":{"gitId":"-"},"content":"                tags.forEach(s -\u003e sb.append(PREFIX_TAG).append(s.tagName).append(\" \"));","lastModifiedDate":"2018-03-26"},{"lineNumber":73,"author":{"gitId":"-"},"content":"            }","lastModifiedDate":"2018-03-26"},{"lineNumber":74,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-03-26"},{"lineNumber":75,"author":{"gitId":"-"},"content":"        return sb.toString();","lastModifiedDate":"2018-03-26"},{"lineNumber":76,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-03-26"},{"lineNumber":77,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-04-05"}],"authorContributionMap":{"DannyDakota":15,"-":62}},{"path":"src/test/java/seedu/address/testutil/TypicalPersons.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.testutil;","lastModifiedDate":"2016-09-13"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-13"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_ADDRESS_AMY;","lastModifiedDate":"2022-03-08"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_ADDRESS_BOB;","lastModifiedDate":"2022-03-08"},{"lineNumber":5,"author":{"gitId":"DannyDakota"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_BLOCK_AMY;","lastModifiedDate":"2022-03-17"},{"lineNumber":6,"author":{"gitId":"DannyDakota"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_BLOCK_BOB;","lastModifiedDate":"2022-03-17"},{"lineNumber":7,"author":{"gitId":"DannyDakota"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_COVID_STATUS_AMY;","lastModifiedDate":"2022-03-08"},{"lineNumber":8,"author":{"gitId":"DannyDakota"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_COVID_STATUS_BOB;","lastModifiedDate":"2022-03-08"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_EMAIL_AMY;","lastModifiedDate":"2022-03-08"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_EMAIL_BOB;","lastModifiedDate":"2022-03-08"},{"lineNumber":11,"author":{"gitId":"DannyDakota"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_FACULTY_AMY;","lastModifiedDate":"2022-03-08"},{"lineNumber":12,"author":{"gitId":"DannyDakota"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_FACULTY_BOB;","lastModifiedDate":"2022-03-08"},{"lineNumber":13,"author":{"gitId":"DannyDakota"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_MATRICULATION_NUMBER_AMY;","lastModifiedDate":"2022-03-08"},{"lineNumber":14,"author":{"gitId":"DannyDakota"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_MATRICULATION_NUMBER_BOB;","lastModifiedDate":"2022-03-08"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_NAME_AMY;","lastModifiedDate":"2022-03-08"},{"lineNumber":16,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_NAME_BOB;","lastModifiedDate":"2022-03-08"},{"lineNumber":17,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_PHONE_AMY;","lastModifiedDate":"2022-03-08"},{"lineNumber":18,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_PHONE_BOB;","lastModifiedDate":"2022-03-08"},{"lineNumber":19,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_TAG_FRIEND;","lastModifiedDate":"2022-03-08"},{"lineNumber":20,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_TAG_HUSBAND;","lastModifiedDate":"2022-03-08"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-03-08"},{"lineNumber":22,"author":{"gitId":"-"},"content":"import java.util.ArrayList;","lastModifiedDate":"2017-08-07"},{"lineNumber":23,"author":{"gitId":"-"},"content":"import java.util.Arrays;","lastModifiedDate":"2017-08-07"},{"lineNumber":24,"author":{"gitId":"-"},"content":"import java.util.List;","lastModifiedDate":"2017-08-07"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-08-07"},{"lineNumber":26,"author":{"gitId":"-"},"content":"import seedu.address.model.AddressBook;","lastModifiedDate":"2016-09-21"},{"lineNumber":27,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2018-01-10"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-13"},{"lineNumber":29,"author":{"gitId":"DannyDakota"},"content":"","lastModifiedDate":"2022-03-08"},{"lineNumber":30,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-09-13"},{"lineNumber":31,"author":{"gitId":"-"},"content":" * A utility class containing a list of {@code Person} objects to be used in tests.","lastModifiedDate":"2017-08-05"},{"lineNumber":32,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-09-13"},{"lineNumber":33,"author":{"gitId":"-"},"content":"public class TypicalPersons {","lastModifiedDate":"2017-04-05"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-13"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    public static final Person ALICE \u003d new PersonBuilder().withName(\"Alice Pauline\")","lastModifiedDate":"2018-01-10"},{"lineNumber":36,"author":{"gitId":"DannyDakota"},"content":"            .withBlock(\"B\")","lastModifiedDate":"2022-03-17"},{"lineNumber":37,"author":{"gitId":"DannyDakota"},"content":"            .withFaculty(\"SOC\")","lastModifiedDate":"2022-03-08"},{"lineNumber":38,"author":{"gitId":"-"},"content":"            .withAddress(\"123, Jurong West Ave 6, #08-111\").withEmail(\"alice@example.com\")","lastModifiedDate":"2017-04-05"},{"lineNumber":39,"author":{"gitId":"-"},"content":"            .withPhone(\"94351253\")","lastModifiedDate":"2018-04-19"},{"lineNumber":40,"author":{"gitId":"DannyDakota"},"content":"            .withMatriculationNumber(\"A0000000E\")","lastModifiedDate":"2022-03-29"},{"lineNumber":41,"author":{"gitId":"DannyDakota"},"content":"            .withCovidStatus(\"NEGATIVE\")","lastModifiedDate":"2022-03-08"},{"lineNumber":42,"author":{"gitId":"DannyDakota"},"content":"            .withTags(\"friends\")","lastModifiedDate":"2022-03-08"},{"lineNumber":43,"author":{"gitId":"DannyDakota"},"content":"            .build();","lastModifiedDate":"2022-03-08"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    public static final Person BENSON \u003d new PersonBuilder().withName(\"Benson Meier\")","lastModifiedDate":"2018-01-10"},{"lineNumber":45,"author":{"gitId":"DannyDakota"},"content":"            .withBlock(\"C\")","lastModifiedDate":"2022-03-17"},{"lineNumber":46,"author":{"gitId":"DannyDakota"},"content":"            .withFaculty(\"BIZ\")","lastModifiedDate":"2022-03-08"},{"lineNumber":47,"author":{"gitId":"-"},"content":"            .withAddress(\"311, Clementi Ave 2, #02-25\")","lastModifiedDate":"2017-09-21"},{"lineNumber":48,"author":{"gitId":"-"},"content":"            .withEmail(\"johnd@example.com\").withPhone(\"98765432\")","lastModifiedDate":"2017-04-05"},{"lineNumber":49,"author":{"gitId":"DannyDakota"},"content":"            .withMatriculationNumber(\"A1234567X\")","lastModifiedDate":"2022-03-29"},{"lineNumber":50,"author":{"gitId":"DannyDakota"},"content":"            .withCovidStatus(\"HRN\")","lastModifiedDate":"2022-03-18"},{"lineNumber":51,"author":{"gitId":"DannyDakota"},"content":"            .withTags(\"owesMoney\", \"friends\")","lastModifiedDate":"2022-03-08"},{"lineNumber":52,"author":{"gitId":"DannyDakota"},"content":"            .build();","lastModifiedDate":"2022-03-08"},{"lineNumber":53,"author":{"gitId":"DannyDakota"},"content":"    public static final Person CARL \u003d new PersonBuilder().withName(\"Carl Kurz\")","lastModifiedDate":"2022-03-08"},{"lineNumber":54,"author":{"gitId":"DannyDakota"},"content":"            .withBlock(\"E\")","lastModifiedDate":"2022-03-17"},{"lineNumber":55,"author":{"gitId":"DannyDakota"},"content":"            .withFaculty(\"YLLSOM\")","lastModifiedDate":"2022-03-08"},{"lineNumber":56,"author":{"gitId":"DannyDakota"},"content":"            .withPhone(\"95352563\")","lastModifiedDate":"2022-03-08"},{"lineNumber":57,"author":{"gitId":"DannyDakota"},"content":"            .withEmail(\"heinz@example.com\")","lastModifiedDate":"2022-03-08"},{"lineNumber":58,"author":{"gitId":"DannyDakota"},"content":"            .withAddress(\"wall street\")","lastModifiedDate":"2022-03-08"},{"lineNumber":59,"author":{"gitId":"DannyDakota"},"content":"            .withMatriculationNumber(\"A9988773V\")","lastModifiedDate":"2022-03-29"},{"lineNumber":60,"author":{"gitId":"DannyDakota"},"content":"            .withCovidStatus(\"HRN\")","lastModifiedDate":"2022-03-08"},{"lineNumber":61,"author":{"gitId":"DannyDakota"},"content":"            .build();","lastModifiedDate":"2022-03-08"},{"lineNumber":62,"author":{"gitId":"DannyDakota"},"content":"    public static final Person DANIEL \u003d new PersonBuilder().withName(\"Daniel Meier\")","lastModifiedDate":"2022-03-08"},{"lineNumber":63,"author":{"gitId":"DannyDakota"},"content":"            .withBlock(\"A\")","lastModifiedDate":"2022-03-17"},{"lineNumber":64,"author":{"gitId":"DannyDakota"},"content":"            .withFaculty(\"FOS\")","lastModifiedDate":"2022-03-08"},{"lineNumber":65,"author":{"gitId":"DannyDakota"},"content":"            .withPhone(\"87652533\")","lastModifiedDate":"2022-03-08"},{"lineNumber":66,"author":{"gitId":"DannyDakota"},"content":"            .withEmail(\"cornelia@example.com\")","lastModifiedDate":"2022-03-08"},{"lineNumber":67,"author":{"gitId":"DannyDakota"},"content":"            .withAddress(\"10th street\")","lastModifiedDate":"2022-03-08"},{"lineNumber":68,"author":{"gitId":"DannyDakota"},"content":"            .withMatriculationNumber(\"A3212345B\")","lastModifiedDate":"2022-03-29"},{"lineNumber":69,"author":{"gitId":"DannyDakota"},"content":"            .withCovidStatus(\"POSITIVE\")","lastModifiedDate":"2022-03-08"},{"lineNumber":70,"author":{"gitId":"DannyDakota"},"content":"            .withTags(\"friends\")","lastModifiedDate":"2022-03-08"},{"lineNumber":71,"author":{"gitId":"DannyDakota"},"content":"            .build();","lastModifiedDate":"2022-03-08"},{"lineNumber":72,"author":{"gitId":"DannyDakota"},"content":"    public static final Person ELLE \u003d new PersonBuilder().withName(\"Elle Meyer\")","lastModifiedDate":"2022-03-08"},{"lineNumber":73,"author":{"gitId":"DannyDakota"},"content":"            .withBlock(\"E\")","lastModifiedDate":"2022-03-17"},{"lineNumber":74,"author":{"gitId":"DannyDakota"},"content":"            .withFaculty(\"DUKE\")","lastModifiedDate":"2022-03-08"},{"lineNumber":75,"author":{"gitId":"DannyDakota"},"content":"            .withPhone(\"9482224\")","lastModifiedDate":"2022-03-08"},{"lineNumber":76,"author":{"gitId":"DannyDakota"},"content":"            .withEmail(\"werner@example.com\")","lastModifiedDate":"2022-03-08"},{"lineNumber":77,"author":{"gitId":"DannyDakota"},"content":"            .withAddress(\"michegan ave\")","lastModifiedDate":"2022-03-08"},{"lineNumber":78,"author":{"gitId":"DannyDakota"},"content":"            .withMatriculationNumber(\"A4345678N\")","lastModifiedDate":"2022-03-29"},{"lineNumber":79,"author":{"gitId":"DannyDakota"},"content":"            .withCovidStatus(\"HRN\")","lastModifiedDate":"2022-03-18"},{"lineNumber":80,"author":{"gitId":"DannyDakota"},"content":"            .build();","lastModifiedDate":"2022-03-08"},{"lineNumber":81,"author":{"gitId":"DannyDakota"},"content":"    public static final Person FIONA \u003d new PersonBuilder().withName(\"Fiona Kunz\")","lastModifiedDate":"2022-03-08"},{"lineNumber":82,"author":{"gitId":"DannyDakota"},"content":"            .withBlock(\"B\")","lastModifiedDate":"2022-03-17"},{"lineNumber":83,"author":{"gitId":"DannyDakota"},"content":"            .withFaculty(\"CDE\")","lastModifiedDate":"2022-03-08"},{"lineNumber":84,"author":{"gitId":"DannyDakota"},"content":"            .withPhone(\"9482427\")","lastModifiedDate":"2022-03-08"},{"lineNumber":85,"author":{"gitId":"DannyDakota"},"content":"            .withEmail(\"lydia@example.com\")","lastModifiedDate":"2022-03-08"},{"lineNumber":86,"author":{"gitId":"DannyDakota"},"content":"            .withAddress(\"little tokyo\")","lastModifiedDate":"2022-03-08"},{"lineNumber":87,"author":{"gitId":"DannyDakota"},"content":"            .withMatriculationNumber(\"A1114446J\")","lastModifiedDate":"2022-03-29"},{"lineNumber":88,"author":{"gitId":"DannyDakota"},"content":"            .withCovidStatus(\"NEGATIVE\")","lastModifiedDate":"2022-03-08"},{"lineNumber":89,"author":{"gitId":"DannyDakota"},"content":"            .build();","lastModifiedDate":"2022-03-08"},{"lineNumber":90,"author":{"gitId":"DannyDakota"},"content":"    public static final Person GEORGE \u003d new PersonBuilder().withName(\"George Best\")","lastModifiedDate":"2022-03-08"},{"lineNumber":91,"author":{"gitId":"DannyDakota"},"content":"            .withBlock(\"E\")","lastModifiedDate":"2022-03-17"},{"lineNumber":92,"author":{"gitId":"DannyDakota"},"content":"            .withFaculty(\"YSTCOM\")","lastModifiedDate":"2022-03-08"},{"lineNumber":93,"author":{"gitId":"DannyDakota"},"content":"            .withPhone(\"9482442\")","lastModifiedDate":"2022-03-08"},{"lineNumber":94,"author":{"gitId":"DannyDakota"},"content":"            .withEmail(\"anna@example.com\")","lastModifiedDate":"2022-03-08"},{"lineNumber":95,"author":{"gitId":"DannyDakota"},"content":"            .withAddress(\"4th street\")","lastModifiedDate":"2022-03-08"},{"lineNumber":96,"author":{"gitId":"DannyDakota"},"content":"            .withMatriculationNumber(\"A0043245H\")","lastModifiedDate":"2022-03-29"},{"lineNumber":97,"author":{"gitId":"DannyDakota"},"content":"            .withCovidStatus(\"POSITIVE\")","lastModifiedDate":"2022-03-08"},{"lineNumber":98,"author":{"gitId":"DannyDakota"},"content":"            .build();","lastModifiedDate":"2022-03-08"},{"lineNumber":99,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-13"},{"lineNumber":100,"author":{"gitId":"-"},"content":"    // Manually added","lastModifiedDate":"2016-09-13"},{"lineNumber":101,"author":{"gitId":"tanchinkiat99"},"content":"    public static final Person HOON \u003d new PersonBuilder().withName(\"Hoon Meier\")","lastModifiedDate":"2022-03-30"},{"lineNumber":102,"author":{"gitId":"tanchinkiat99"},"content":"            .withBlock(\"E\")","lastModifiedDate":"2022-03-30"},{"lineNumber":103,"author":{"gitId":"tanchinkiat99"},"content":"            .withFaculty(\"SOC\")","lastModifiedDate":"2022-03-30"},{"lineNumber":104,"author":{"gitId":"tanchinkiat99"},"content":"            .withPhone(\"8482424\")","lastModifiedDate":"2022-03-30"},{"lineNumber":105,"author":{"gitId":"tanchinkiat99"},"content":"            .withEmail(\"stefan@example.com\")","lastModifiedDate":"2022-03-30"},{"lineNumber":106,"author":{"gitId":"tanchinkiat99"},"content":"            .withAddress(\"little india\")","lastModifiedDate":"2022-03-30"},{"lineNumber":107,"author":{"gitId":"tanchinkiat99"},"content":"            .withMatriculationNumber(\"A0843245H\")","lastModifiedDate":"2022-03-30"},{"lineNumber":108,"author":{"gitId":"tanchinkiat99"},"content":"            .withCovidStatus(\"POSITIVE\")","lastModifiedDate":"2022-03-30"},{"lineNumber":109,"author":{"gitId":"tanchinkiat99"},"content":"            .build();","lastModifiedDate":"2022-03-30"},{"lineNumber":110,"author":{"gitId":"-"},"content":"    public static final Person IDA \u003d new PersonBuilder().withName(\"Ida Mueller\").withPhone(\"8482131\")","lastModifiedDate":"2018-01-10"},{"lineNumber":111,"author":{"gitId":"DannyDakota"},"content":"            .withEmail(\"hans@example.com\").withAddress(\"chicago ave\").withMatriculationNumber(\"A5243627L\").build();","lastModifiedDate":"2022-03-29"},{"lineNumber":112,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-08-22"},{"lineNumber":113,"author":{"gitId":"-"},"content":"    // Manually added - Person\u0027s details found in {@code CommandTestUtil}","lastModifiedDate":"2017-08-22"},{"lineNumber":114,"author":{"gitId":"DannyDakota"},"content":"    public static final Person AMY \u003d new PersonBuilder().withName(VALID_NAME_AMY)","lastModifiedDate":"2022-03-08"},{"lineNumber":115,"author":{"gitId":"DannyDakota"},"content":"            .withBlock(VALID_BLOCK_AMY)","lastModifiedDate":"2022-03-17"},{"lineNumber":116,"author":{"gitId":"DannyDakota"},"content":"            .withFaculty(VALID_FACULTY_AMY)","lastModifiedDate":"2022-03-08"},{"lineNumber":117,"author":{"gitId":"DannyDakota"},"content":"            .withPhone(VALID_PHONE_AMY)","lastModifiedDate":"2022-03-08"},{"lineNumber":118,"author":{"gitId":"DannyDakota"},"content":"            .withEmail(VALID_EMAIL_AMY)","lastModifiedDate":"2022-03-08"},{"lineNumber":119,"author":{"gitId":"DannyDakota"},"content":"            .withAddress(VALID_ADDRESS_AMY)","lastModifiedDate":"2022-03-08"},{"lineNumber":120,"author":{"gitId":"DannyDakota"},"content":"            .withMatriculationNumber(VALID_MATRICULATION_NUMBER_AMY)","lastModifiedDate":"2022-03-29"},{"lineNumber":121,"author":{"gitId":"DannyDakota"},"content":"            .withCovidStatus(VALID_COVID_STATUS_AMY)","lastModifiedDate":"2022-03-08"},{"lineNumber":122,"author":{"gitId":"DannyDakota"},"content":"            .withTags(VALID_TAG_FRIEND)","lastModifiedDate":"2022-03-08"},{"lineNumber":123,"author":{"gitId":"DannyDakota"},"content":"            .build();","lastModifiedDate":"2022-03-08"},{"lineNumber":124,"author":{"gitId":"DannyDakota"},"content":"    public static final Person BOB \u003d new PersonBuilder().withName(VALID_NAME_BOB)","lastModifiedDate":"2022-03-08"},{"lineNumber":125,"author":{"gitId":"DannyDakota"},"content":"            .withBlock(VALID_BLOCK_BOB)","lastModifiedDate":"2022-03-17"},{"lineNumber":126,"author":{"gitId":"DannyDakota"},"content":"            .withFaculty(VALID_FACULTY_BOB)","lastModifiedDate":"2022-03-08"},{"lineNumber":127,"author":{"gitId":"DannyDakota"},"content":"            .withPhone(VALID_PHONE_BOB)","lastModifiedDate":"2022-03-08"},{"lineNumber":128,"author":{"gitId":"DannyDakota"},"content":"            .withEmail(VALID_EMAIL_BOB)","lastModifiedDate":"2022-03-08"},{"lineNumber":129,"author":{"gitId":"DannyDakota"},"content":"            .withAddress(VALID_ADDRESS_BOB)","lastModifiedDate":"2022-03-08"},{"lineNumber":130,"author":{"gitId":"DannyDakota"},"content":"            .withMatriculationNumber(VALID_MATRICULATION_NUMBER_BOB)","lastModifiedDate":"2022-03-29"},{"lineNumber":131,"author":{"gitId":"DannyDakota"},"content":"            .withCovidStatus(VALID_COVID_STATUS_BOB)","lastModifiedDate":"2022-03-08"},{"lineNumber":132,"author":{"gitId":"DannyDakota"},"content":"            .withTags(VALID_TAG_HUSBAND, VALID_TAG_FRIEND)","lastModifiedDate":"2022-03-08"},{"lineNumber":133,"author":{"gitId":"-"},"content":"            .build();","lastModifiedDate":"2017-09-21"},{"lineNumber":134,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-09-21"},{"lineNumber":135,"author":{"gitId":"-"},"content":"    public static final String KEYWORD_MATCHING_MEIER \u003d \"Meier\"; // A keyword that matches MEIER","lastModifiedDate":"2017-09-21"},{"lineNumber":136,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-13"},{"lineNumber":137,"author":{"gitId":"-"},"content":"    private TypicalPersons() {} // prevents instantiation","lastModifiedDate":"2017-07-20"},{"lineNumber":138,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-20"},{"lineNumber":139,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-07-26"},{"lineNumber":140,"author":{"gitId":"-"},"content":"     * Returns an {@code AddressBook} with all the typical persons.","lastModifiedDate":"2017-08-05"},{"lineNumber":141,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-07-26"},{"lineNumber":142,"author":{"gitId":"-"},"content":"    public static AddressBook getTypicalAddressBook() {","lastModifiedDate":"2017-08-05"},{"lineNumber":143,"author":{"gitId":"-"},"content":"        AddressBook ab \u003d new AddressBook();","lastModifiedDate":"2017-08-05"},{"lineNumber":144,"author":{"gitId":"-"},"content":"        for (Person person : getTypicalPersons()) {","lastModifiedDate":"2018-01-10"},{"lineNumber":145,"author":{"gitId":"-"},"content":"            ab.addPerson(person);","lastModifiedDate":"2017-08-05"},{"lineNumber":146,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-09-13"},{"lineNumber":147,"author":{"gitId":"-"},"content":"        return ab;","lastModifiedDate":"2016-09-24"},{"lineNumber":148,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":149,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-08-04"},{"lineNumber":150,"author":{"gitId":"-"},"content":"    public static List\u003cPerson\u003e getTypicalPersons() {","lastModifiedDate":"2018-01-10"},{"lineNumber":151,"author":{"gitId":"-"},"content":"        return new ArrayList\u003c\u003e(Arrays.asList(ALICE, BENSON, CARL, DANIEL, ELLE, FIONA, GEORGE));","lastModifiedDate":"2017-08-07"},{"lineNumber":152,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-08-04"},{"lineNumber":153,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-09-13"}],"authorContributionMap":{"tanchinkiat99":9,"DannyDakota":87,"-":57}}]
