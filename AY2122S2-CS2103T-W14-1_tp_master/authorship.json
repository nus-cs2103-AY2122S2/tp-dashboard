[{"path":"README.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"yl-ang"},"content":"# LibTask","lastModifiedDate":"2022-03-01"},{"lineNumber":2,"author":{"gitId":"yl-ang"},"content":"","lastModifiedDate":"2022-02-23"},{"lineNumber":3,"author":{"gitId":"yl-ang"},"content":"[![CI Status](https://github.com/AY2122S2-CS2103T-W14-1/tp/workflows/Java%20CI/badge.svg)](https://github.com/AY2122S2-CS2103T-W14-1/tp/actions)","lastModifiedDate":"2022-02-23"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":5,"author":{"gitId":"-"},"content":"![Ui](docs/images/Ui.png)","lastModifiedDate":"2020-05-23"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":7,"author":{"gitId":"yl-ang"},"content":"* **LibTask** is a desktop application to allow librarians to keep track of book statuses and contact details of patrons who have borrowed them or requested for them.","lastModifiedDate":"2022-02-23"},{"lineNumber":8,"author":{"gitId":"yl-ang"},"content":"","lastModifiedDate":"2022-02-23"},{"lineNumber":9,"author":{"gitId":"yl-ang"},"content":"* Example usages:","lastModifiedDate":"2022-02-23"},{"lineNumber":10,"author":{"gitId":"yl-ang"},"content":"  * as a tracking tool to track patrons with overdue books.","lastModifiedDate":"2022-02-23"},{"lineNumber":11,"author":{"gitId":"yl-ang"},"content":"  * as a tracking tool to patrons that are interested in certain books.","lastModifiedDate":"2022-02-23"},{"lineNumber":12,"author":{"gitId":"yl-ang"},"content":"","lastModifiedDate":"2022-02-23"},{"lineNumber":13,"author":{"gitId":"yl-ang"},"content":"* It is named `LibTask` as we aim to help librarians to accomplish their daily tasks efficiently.","lastModifiedDate":"2022-02-23"},{"lineNumber":14,"author":{"gitId":"yl-ang"},"content":"","lastModifiedDate":"2022-02-23"},{"lineNumber":15,"author":{"gitId":"yl-ang"},"content":"* For the detailed documentation of this project, you may refer to our **[user](https://ay2122s2-cs2103t-w14-1.github.io/tp/UserGuide.html)** and **[developer guide](https://ay2122s2-cs2103t-w14-1.github.io/tp/DeveloperGuide.html)**.","lastModifiedDate":"2022-03-01"},{"lineNumber":16,"author":{"gitId":"yl-ang"},"content":"","lastModifiedDate":"2022-02-23"},{"lineNumber":17,"author":{"gitId":"yl-ang"},"content":"* This project is based on the AddressBook-Level3 project created by the [SE-EDU initiative](https://se-education.org).","lastModifiedDate":"2022-02-23"}],"authorContributionMap":{"yl-ang":14,"-":3}},{"path":"docs/AboutUs.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"---","lastModifiedDate":"2020-05-23"},{"lineNumber":2,"author":{"gitId":"-"},"content":"layout: page","lastModifiedDate":"2020-05-23"},{"lineNumber":3,"author":{"gitId":"-"},"content":"title: About Us","lastModifiedDate":"2020-05-23"},{"lineNumber":4,"author":{"gitId":"-"},"content":"---","lastModifiedDate":"2020-05-23"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":6,"author":{"gitId":"-"},"content":"We are a team based in the [School of Computing, National University of Singapore](http://www.comp.nus.edu.sg).","lastModifiedDate":"2020-05-23"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":8,"author":{"gitId":"-"},"content":"## Project team","lastModifiedDate":"2020-06-07"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":10,"author":{"gitId":"bingsen0806"},"content":"### Lim Bing Sen","lastModifiedDate":"2022-02-24"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":12,"author":{"gitId":"bingsen0806"},"content":"\u003cimg src\u003d\"images/bingsen0806.png\" width\u003d\"200px\"\u003e","lastModifiedDate":"2022-02-24"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":14,"author":{"gitId":"bingsen0806"},"content":"[[github](https://github.com/bingsen0806)]","lastModifiedDate":"2022-02-24"},{"lineNumber":15,"author":{"gitId":"bingsen0806"},"content":"[[portfolio](team/bingsen0806.md)]","lastModifiedDate":"2022-02-24"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":17,"author":{"gitId":"bingsen0806"},"content":"* Role: Developer, Project Lead","lastModifiedDate":"2022-02-24"},{"lineNumber":18,"author":{"gitId":"bingsen0806"},"content":"* Responsibilities: Book commands","lastModifiedDate":"2022-02-24"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":20,"author":{"gitId":"yl-ang"},"content":"### Ang Yong Liang","lastModifiedDate":"2022-02-23"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":22,"author":{"gitId":"yl-ang"},"content":"\u003cimg src\u003d\"images/yl-ang.png\" width\u003d\"200px\"\u003e","lastModifiedDate":"2022-02-23"},{"lineNumber":23,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":24,"author":{"gitId":"yl-ang"},"content":"[[github](http://github.com/yl-ang)]","lastModifiedDate":"2022-02-23"},{"lineNumber":25,"author":{"gitId":"yl-ang"},"content":"[[portfolio](team/yl-ang.md)]","lastModifiedDate":"2022-02-23"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":27,"author":{"gitId":"yl-ang"},"content":"* Role: Developer","lastModifiedDate":"2022-02-23"},{"lineNumber":28,"author":{"gitId":"-"},"content":"* Responsibilities: UI","lastModifiedDate":"2020-05-23"},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":30,"author":{"gitId":"yuqitanyq"},"content":"### Tan Yu Qi","lastModifiedDate":"2022-02-23"},{"lineNumber":31,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":32,"author":{"gitId":"yuqitanyq"},"content":"\u003cimg src\u003d\"images/yuqitanyq.png\" width\u003d\"200px\"\u003e","lastModifiedDate":"2022-02-23"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":34,"author":{"gitId":"yuqitanyq"},"content":"[[github](http://github.com/yuqitanyq)] [[portfolio](team/yuqitanyq.md)]","lastModifiedDate":"2022-02-23"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":36,"author":{"gitId":"-"},"content":"* Role: Developer","lastModifiedDate":"2020-05-23"},{"lineNumber":37,"author":{"gitId":"yuqitanyq"},"content":"* Responsibilities: Implementation of some book, patron and general commands, plus integration.","lastModifiedDate":"2022-03-05"},{"lineNumber":38,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":39,"author":{"gitId":"Halpfrog"},"content":"### Sarthak Pradhan","lastModifiedDate":"2022-02-26"},{"lineNumber":40,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":41,"author":{"gitId":"Halpfrog"},"content":"\u003cimg src\u003d\"images/halpfrog.png\" width\u003d\"200px\"\u003e","lastModifiedDate":"2022-02-26"},{"lineNumber":42,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":43,"author":{"gitId":"Halpfrog"},"content":"[[github](http://github.com/halpfrog)]","lastModifiedDate":"2022-02-26"},{"lineNumber":44,"author":{"gitId":"Halpfrog"},"content":"[[portfolio](team/halpfrog.md)]","lastModifiedDate":"2022-02-26"},{"lineNumber":45,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":46,"author":{"gitId":"-"},"content":"* Role: Developer","lastModifiedDate":"2020-05-23"},{"lineNumber":47,"author":{"gitId":"Halpfrog"},"content":"* Responsibilities: General Commands","lastModifiedDate":"2022-02-26"},{"lineNumber":48,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":49,"author":{"gitId":"aditi2313"},"content":"### Aditi Gupta","lastModifiedDate":"2022-02-25"},{"lineNumber":50,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":51,"author":{"gitId":"aditi2313"},"content":"\u003cimg src\u003d\"images/aditi2313.png\" width\u003d\"200px\"\u003e","lastModifiedDate":"2022-02-25"},{"lineNumber":52,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":53,"author":{"gitId":"aditi2313"},"content":"[[github](http://github.com/aditi2313)]","lastModifiedDate":"2022-02-25"},{"lineNumber":54,"author":{"gitId":"aditi2313"},"content":"[[portfolio](team/aditi2313.md)]","lastModifiedDate":"2022-02-25"},{"lineNumber":55,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":56,"author":{"gitId":"-"},"content":"* Role: Developer","lastModifiedDate":"2020-05-23"},{"lineNumber":57,"author":{"gitId":"aditi2313"},"content":"* Responsibilities: Patron commands","lastModifiedDate":"2022-02-25"}],"authorContributionMap":{"yl-ang":5,"yuqitanyq":4,"-":32,"bingsen0806":6,"Halpfrog":5,"aditi2313":5}},{"path":"docs/DeveloperGuide.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"---","lastModifiedDate":"2020-05-23"},{"lineNumber":2,"author":{"gitId":"-"},"content":"layout: page","lastModifiedDate":"2020-05-23"},{"lineNumber":3,"author":{"gitId":"-"},"content":"title: Developer Guide","lastModifiedDate":"2020-05-23"},{"lineNumber":4,"author":{"gitId":"-"},"content":"---","lastModifiedDate":"2020-05-23"},{"lineNumber":5,"author":{"gitId":"-"},"content":"* Table of Contents","lastModifiedDate":"2020-05-23"},{"lineNumber":6,"author":{"gitId":"-"},"content":"  {:toc}","lastModifiedDate":"2020-05-23"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":8,"author":{"gitId":"-"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2020-05-23"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-30"},{"lineNumber":10,"author":{"gitId":"-"},"content":"## **Acknowledgements**","lastModifiedDate":"2021-07-30"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-30"},{"lineNumber":12,"author":{"gitId":"-"},"content":"* {list here sources of all reused/adapted ideas, code, documentation, and third-party libraries -- include links to the original source as well}","lastModifiedDate":"2021-07-30"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-30"},{"lineNumber":14,"author":{"gitId":"-"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2021-07-30"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":16,"author":{"gitId":"-"},"content":"## **Setting up, getting started**","lastModifiedDate":"2020-05-23"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":18,"author":{"gitId":"-"},"content":"Refer to the guide [_Setting up and getting started_](SettingUp.md).","lastModifiedDate":"2020-05-23"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":20,"author":{"gitId":"-"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2020-05-23"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":22,"author":{"gitId":"-"},"content":"## **Design**","lastModifiedDate":"2020-05-23"},{"lineNumber":23,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":24,"author":{"gitId":"-"},"content":"\u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-primary\"\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":26,"author":{"gitId":"-"},"content":":bulb: **Tip:** The `.puml` files used to create diagrams in this document can be found in the [diagrams](https://github.com/se-edu/addressbook-level3/tree/master/docs/diagrams/) folder. Refer to the [_PlantUML Tutorial_ at se-edu/guides](https://se-education.org/guides/tutorials/plantUml.html) to learn how to create and edit diagrams.","lastModifiedDate":"2021-07-31"},{"lineNumber":27,"author":{"gitId":"-"},"content":"\u003c/div\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":29,"author":{"gitId":"-"},"content":"### Architecture","lastModifiedDate":"2021-07-31"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":31,"author":{"gitId":"-"},"content":"\u003cimg src\u003d\"images/ArchitectureDiagram.png\" width\u003d\"280\" /\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":32,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":33,"author":{"gitId":"-"},"content":"The ***Architecture Diagram*** given above explains the high-level design of the App.","lastModifiedDate":"2021-07-31"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":35,"author":{"gitId":"-"},"content":"Given below is a quick overview of main components and how they interact with each other.","lastModifiedDate":"2021-07-31"},{"lineNumber":36,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":37,"author":{"gitId":"-"},"content":"**Main components of the architecture**","lastModifiedDate":"2021-07-31"},{"lineNumber":38,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":39,"author":{"gitId":"-"},"content":"**`Main`** has two classes called [`Main`](https://github.com/se-edu/addressbook-level3/tree/master/src/main/java/seedu/address/Main.java) and [`MainApp`](https://github.com/se-edu/addressbook-level3/tree/master/src/main/java/seedu/address/MainApp.java). It is responsible for,","lastModifiedDate":"2020-05-23"},{"lineNumber":40,"author":{"gitId":"-"},"content":"* At app launch: Initializes the components in the correct sequence, and connects them up with each other.","lastModifiedDate":"2020-05-23"},{"lineNumber":41,"author":{"gitId":"-"},"content":"* At shut down: Shuts down the components and invokes cleanup methods where necessary.","lastModifiedDate":"2020-05-23"},{"lineNumber":42,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":43,"author":{"gitId":"-"},"content":"[**`Commons`**](#common-classes) represents a collection of classes used by multiple other components.","lastModifiedDate":"2020-05-23"},{"lineNumber":44,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":45,"author":{"gitId":"-"},"content":"The rest of the App consists of four components.","lastModifiedDate":"2020-05-23"},{"lineNumber":46,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":47,"author":{"gitId":"-"},"content":"* [**`UI`**](#ui-component): The UI of the App.","lastModifiedDate":"2020-05-23"},{"lineNumber":48,"author":{"gitId":"-"},"content":"* [**`Logic`**](#logic-component): The command executor.","lastModifiedDate":"2020-05-23"},{"lineNumber":49,"author":{"gitId":"-"},"content":"* [**`Model`**](#model-component): Holds the data of the App in memory.","lastModifiedDate":"2020-05-23"},{"lineNumber":50,"author":{"gitId":"-"},"content":"* [**`Storage`**](#storage-component): Reads data from, and writes data to, the hard disk.","lastModifiedDate":"2020-05-23"},{"lineNumber":51,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":52,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":53,"author":{"gitId":"-"},"content":"**How the architecture components interact with each other**","lastModifiedDate":"2020-05-23"},{"lineNumber":54,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":55,"author":{"gitId":"-"},"content":"The *Sequence Diagram* below shows how the components interact with each other for the scenario where the user issues the command `delete 1`.","lastModifiedDate":"2020-05-23"},{"lineNumber":56,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":57,"author":{"gitId":"-"},"content":"\u003cimg src\u003d\"images/ArchitectureSequenceDiagram.png\" width\u003d\"574\" /\u003e","lastModifiedDate":"2020-06-07"},{"lineNumber":58,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":59,"author":{"gitId":"-"},"content":"Each of the four main components (also shown in the diagram above),","lastModifiedDate":"2021-07-31"},{"lineNumber":60,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":61,"author":{"gitId":"-"},"content":"* defines its *API* in an `interface` with the same name as the Component.","lastModifiedDate":"2021-07-31"},{"lineNumber":62,"author":{"gitId":"-"},"content":"* implements its functionality using a concrete `{Component Name}Manager` class (which follows the corresponding API `interface` mentioned in the previous point.","lastModifiedDate":"2021-07-31"},{"lineNumber":63,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":64,"author":{"gitId":"-"},"content":"For example, the `Logic` component defines its API in the `Logic.java` interface and implements its functionality using the `LogicManager.java` class which follows the `Logic` interface. Other components interact with a given component through its interface rather than the concrete class (reason: to prevent outside component\u0027s being coupled to the implementation of a component), as illustrated in the (partial) class diagram below.","lastModifiedDate":"2021-07-31"},{"lineNumber":65,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":66,"author":{"gitId":"-"},"content":"\u003cimg src\u003d\"images/ComponentManagers.png\" width\u003d\"300\" /\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":67,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":68,"author":{"gitId":"-"},"content":"The sections below give more details of each component.","lastModifiedDate":"2020-05-23"},{"lineNumber":69,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":70,"author":{"gitId":"-"},"content":"### UI component","lastModifiedDate":"2020-05-23"},{"lineNumber":71,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":72,"author":{"gitId":"-"},"content":"The **API** of this component is specified in [`Ui.java`](https://github.com/se-edu/addressbook-level3/tree/master/src/main/java/seedu/address/ui/Ui.java)","lastModifiedDate":"2021-07-31"},{"lineNumber":73,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":74,"author":{"gitId":"-"},"content":"![Structure of the UI Component](images/UiClassDiagram.png)","lastModifiedDate":"2021-07-31"},{"lineNumber":75,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":76,"author":{"gitId":"-"},"content":"The UI consists of a `MainWindow` that is made up of parts e.g.`CommandBox`, `ResultDisplay`, `PersonListPanel`, `StatusBarFooter` etc. All these, including the `MainWindow`, inherit from the abstract `UiPart` class which captures the commonalities between classes that represent parts of the visible GUI.","lastModifiedDate":"2021-07-31"},{"lineNumber":77,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":78,"author":{"gitId":"-"},"content":"The `UI` component uses the JavaFx UI framework. The layout of these UI parts are defined in matching `.fxml` files that are in the `src/main/resources/view` folder. For example, the layout of the [`MainWindow`](https://github.com/se-edu/addressbook-level3/tree/master/src/main/java/seedu/address/ui/MainWindow.java) is specified in [`MainWindow.fxml`](https://github.com/se-edu/addressbook-level3/tree/master/src/main/resources/view/MainWindow.fxml)","lastModifiedDate":"2021-07-31"},{"lineNumber":79,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":80,"author":{"gitId":"-"},"content":"The `UI` component,","lastModifiedDate":"2020-05-23"},{"lineNumber":81,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":82,"author":{"gitId":"-"},"content":"* executes user commands using the `Logic` component.","lastModifiedDate":"2021-07-31"},{"lineNumber":83,"author":{"gitId":"-"},"content":"* listens for changes to `Model` data so that the UI can be updated with the modified data.","lastModifiedDate":"2021-07-31"},{"lineNumber":84,"author":{"gitId":"-"},"content":"* keeps a reference to the `Logic` component, because the `UI` relies on the `Logic` to execute commands.","lastModifiedDate":"2021-07-31"},{"lineNumber":85,"author":{"gitId":"-"},"content":"* depends on some classes in the `Model` component, as it displays `Person` object residing in the `Model`.","lastModifiedDate":"2021-07-31"},{"lineNumber":86,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":87,"author":{"gitId":"-"},"content":"### Logic component","lastModifiedDate":"2020-05-23"},{"lineNumber":88,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":89,"author":{"gitId":"-"},"content":"**API** : [`Logic.java`](https://github.com/se-edu/addressbook-level3/tree/master/src/main/java/seedu/address/logic/Logic.java)","lastModifiedDate":"2021-07-31"},{"lineNumber":90,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":91,"author":{"gitId":"-"},"content":"Here\u0027s a (partial) class diagram of the `Logic` component:","lastModifiedDate":"2021-07-31"},{"lineNumber":92,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":93,"author":{"gitId":"-"},"content":"\u003cimg src\u003d\"images/LogicClassDiagram.png\" width\u003d\"550\"/\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":94,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":95,"author":{"gitId":"-"},"content":"How the `Logic` component works:","lastModifiedDate":"2021-07-31"},{"lineNumber":96,"author":{"gitId":"-"},"content":"1. When `Logic` is called upon to execute a command, it uses the `AddressBookParser` class to parse the user command.","lastModifiedDate":"2021-07-31"},{"lineNumber":97,"author":{"gitId":"-"},"content":"1. This results in a `Command` object (more precisely, an object of one of its subclasses e.g., `AddCommand`) which is executed by the `LogicManager`.","lastModifiedDate":"2021-07-31"},{"lineNumber":98,"author":{"gitId":"-"},"content":"1. The command can communicate with the `Model` when it is executed (e.g. to add a person).","lastModifiedDate":"2021-07-31"},{"lineNumber":99,"author":{"gitId":"-"},"content":"1. The result of the command execution is encapsulated as a `CommandResult` object which is returned back from `Logic`.","lastModifiedDate":"2021-07-31"},{"lineNumber":100,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":101,"author":{"gitId":"-"},"content":"The Sequence Diagram below illustrates the interactions within the `Logic` component for the `execute(\"delete 1\")` API call.","lastModifiedDate":"2021-07-31"},{"lineNumber":102,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":103,"author":{"gitId":"-"},"content":"![Interactions Inside the Logic Component for the `delete 1` Command](images/DeleteSequenceDiagram.png)","lastModifiedDate":"2020-05-23"},{"lineNumber":104,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":105,"author":{"gitId":"-"},"content":"\u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-info\"\u003e:information_source: **Note:** The lifeline for `DeleteCommandParser` should end at the destroy marker (X) but due to a limitation of PlantUML, the lifeline reaches the end of diagram.","lastModifiedDate":"2020-05-23"},{"lineNumber":106,"author":{"gitId":"-"},"content":"\u003c/div\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":107,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":108,"author":{"gitId":"-"},"content":"Here are the other classes in `Logic` (omitted from the class diagram above) that are used for parsing a user command:","lastModifiedDate":"2021-07-31"},{"lineNumber":109,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":110,"author":{"gitId":"-"},"content":"\u003cimg src\u003d\"images/ParserClasses.png\" width\u003d\"600\"/\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":111,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":112,"author":{"gitId":"-"},"content":"How the parsing works:","lastModifiedDate":"2021-07-31"},{"lineNumber":113,"author":{"gitId":"-"},"content":"* When called upon to parse a user command, the `AddressBookParser` class creates an `XYZCommandParser` (`XYZ` is a placeholder for the specific command name e.g., `AddCommandParser`) which uses the other classes shown above to parse the user command and create a `XYZCommand` object (e.g., `AddCommand`) which the `AddressBookParser` returns back as a `Command` object.","lastModifiedDate":"2021-07-31"},{"lineNumber":114,"author":{"gitId":"-"},"content":"* All `XYZCommandParser` classes (e.g., `AddCommandParser`, `DeleteCommandParser`, ...) inherit from the `Parser` interface so that they can be treated similarly where possible e.g, during testing.","lastModifiedDate":"2021-07-31"},{"lineNumber":115,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":116,"author":{"gitId":"-"},"content":"### Model component","lastModifiedDate":"2021-07-31"},{"lineNumber":117,"author":{"gitId":"-"},"content":"**API** : [`Model.java`](https://github.com/se-edu/addressbook-level3/tree/master/src/main/java/seedu/address/model/Model.java)","lastModifiedDate":"2020-05-23"},{"lineNumber":118,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":119,"author":{"gitId":"-"},"content":"\u003cimg src\u003d\"images/ModelClassDiagram.png\" width\u003d\"450\" /\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":120,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":121,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":122,"author":{"gitId":"-"},"content":"The `Model` component,","lastModifiedDate":"2021-07-31"},{"lineNumber":123,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":124,"author":{"gitId":"-"},"content":"* stores the address book data i.e., all `Person` objects (which are contained in a `UniquePersonList` object).","lastModifiedDate":"2021-07-31"},{"lineNumber":125,"author":{"gitId":"-"},"content":"* stores the currently \u0027selected\u0027 `Person` objects (e.g., results of a search query) as a separate _filtered_ list which is exposed to outsiders as an unmodifiable `ObservableList\u003cPerson\u003e` that can be \u0027observed\u0027 e.g. the UI can be bound to this list so that the UI automatically updates when the data in the list change.","lastModifiedDate":"2021-07-31"},{"lineNumber":126,"author":{"gitId":"-"},"content":"* stores a `UserPref` object that represents the user’s preferences. This is exposed to the outside as a `ReadOnlyUserPref` objects.","lastModifiedDate":"2021-07-31"},{"lineNumber":127,"author":{"gitId":"-"},"content":"* does not depend on any of the other three components (as the `Model` represents data entities of the domain, they should make sense on their own without depending on other components)","lastModifiedDate":"2021-07-31"},{"lineNumber":128,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":129,"author":{"gitId":"-"},"content":"\u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-info\"\u003e:information_source: **Note:** An alternative (arguably, a more OOP) model is given below. It has a `Tag` list in the `AddressBook`, which `Person` references. This allows `AddressBook` to only require one `Tag` object per unique tag, instead of each `Person` needing their own `Tag` objects.\u003cbr\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":130,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":131,"author":{"gitId":"-"},"content":"\u003cimg src\u003d\"images/BetterModelClassDiagram.png\" width\u003d\"450\" /\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":132,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":133,"author":{"gitId":"-"},"content":"\u003c/div\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":134,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":135,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":136,"author":{"gitId":"-"},"content":"### Storage component","lastModifiedDate":"2020-05-23"},{"lineNumber":137,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":138,"author":{"gitId":"-"},"content":"**API** : [`Storage.java`](https://github.com/se-edu/addressbook-level3/tree/master/src/main/java/seedu/address/storage/Storage.java)","lastModifiedDate":"2020-05-23"},{"lineNumber":139,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":140,"author":{"gitId":"-"},"content":"\u003cimg src\u003d\"images/StorageClassDiagram.png\" width\u003d\"550\" /\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":141,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":142,"author":{"gitId":"-"},"content":"The `Storage` component,","lastModifiedDate":"2020-05-23"},{"lineNumber":143,"author":{"gitId":"-"},"content":"* can save both address book data and user preference data in json format, and read them back into corresponding objects.","lastModifiedDate":"2021-07-31"},{"lineNumber":144,"author":{"gitId":"-"},"content":"* inherits from both `AddressBookStorage` and `UserPrefStorage`, which means it can be treated as either one (if only the functionality of only one is needed).","lastModifiedDate":"2021-07-31"},{"lineNumber":145,"author":{"gitId":"-"},"content":"* depends on some classes in the `Model` component (because the `Storage` component\u0027s job is to save/retrieve objects that belong to the `Model`)","lastModifiedDate":"2021-07-21"},{"lineNumber":146,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":147,"author":{"gitId":"-"},"content":"### Common classes","lastModifiedDate":"2020-05-23"},{"lineNumber":148,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":149,"author":{"gitId":"-"},"content":"Classes used by multiple components are in the `seedu.addressbook.commons` package.","lastModifiedDate":"2020-05-23"},{"lineNumber":150,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":151,"author":{"gitId":"-"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2020-05-23"},{"lineNumber":152,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":153,"author":{"gitId":"-"},"content":"## **Implementation**","lastModifiedDate":"2020-05-23"},{"lineNumber":154,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":155,"author":{"gitId":"-"},"content":"This section describes some noteworthy details on how certain features are implemented.","lastModifiedDate":"2020-05-23"},{"lineNumber":156,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":157,"author":{"gitId":"-"},"content":"### \\[Proposed\\] Undo/redo feature","lastModifiedDate":"2020-06-07"},{"lineNumber":158,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":159,"author":{"gitId":"-"},"content":"#### Proposed Implementation","lastModifiedDate":"2020-05-23"},{"lineNumber":160,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":161,"author":{"gitId":"-"},"content":"The proposed undo/redo mechanism is facilitated by `VersionedAddressBook`. It extends `AddressBook` with an undo/redo history, stored internally as an `addressBookStateList` and `currentStatePointer`. Additionally, it implements the following operations:","lastModifiedDate":"2020-05-23"},{"lineNumber":162,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":163,"author":{"gitId":"-"},"content":"* `VersionedAddressBook#commit()` — Saves the current address book state in its history.","lastModifiedDate":"2020-05-23"},{"lineNumber":164,"author":{"gitId":"-"},"content":"* `VersionedAddressBook#undo()` — Restores the previous address book state from its history.","lastModifiedDate":"2020-05-23"},{"lineNumber":165,"author":{"gitId":"-"},"content":"* `VersionedAddressBook#redo()` — Restores a previously undone address book state from its history.","lastModifiedDate":"2020-05-23"},{"lineNumber":166,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":167,"author":{"gitId":"-"},"content":"These operations are exposed in the `Model` interface as `Model#commitAddressBook()`, `Model#undoAddressBook()` and `Model#redoAddressBook()` respectively.","lastModifiedDate":"2020-05-23"},{"lineNumber":168,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":169,"author":{"gitId":"-"},"content":"Given below is an example usage scenario and how the undo/redo mechanism behaves at each step.","lastModifiedDate":"2020-05-23"},{"lineNumber":170,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":171,"author":{"gitId":"-"},"content":"Step 1. The user launches the application for the first time. The `VersionedAddressBook` will be initialized with the initial address book state, and the `currentStatePointer` pointing to that single address book state.","lastModifiedDate":"2020-05-23"},{"lineNumber":172,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":173,"author":{"gitId":"-"},"content":"![UndoRedoState0](images/UndoRedoState0.png)","lastModifiedDate":"2020-05-23"},{"lineNumber":174,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":175,"author":{"gitId":"-"},"content":"Step 2. The user executes `delete 5` command to delete the 5th person in the address book. The `delete` command calls `Model#commitAddressBook()`, causing the modified state of the address book after the `delete 5` command executes to be saved in the `addressBookStateList`, and the `currentStatePointer` is shifted to the newly inserted address book state.","lastModifiedDate":"2020-05-23"},{"lineNumber":176,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":177,"author":{"gitId":"-"},"content":"![UndoRedoState1](images/UndoRedoState1.png)","lastModifiedDate":"2020-05-23"},{"lineNumber":178,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":179,"author":{"gitId":"-"},"content":"Step 3. The user executes `add n/David …​` to add a new person. The `add` command also calls `Model#commitAddressBook()`, causing another modified address book state to be saved into the `addressBookStateList`.","lastModifiedDate":"2020-05-23"},{"lineNumber":180,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":181,"author":{"gitId":"-"},"content":"![UndoRedoState2](images/UndoRedoState2.png)","lastModifiedDate":"2020-05-23"},{"lineNumber":182,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":183,"author":{"gitId":"-"},"content":"\u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-info\"\u003e:information_source: **Note:** If a command fails its execution, it will not call `Model#commitAddressBook()`, so the address book state will not be saved into the `addressBookStateList`.","lastModifiedDate":"2020-05-23"},{"lineNumber":184,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":185,"author":{"gitId":"-"},"content":"\u003c/div\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":186,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":187,"author":{"gitId":"-"},"content":"Step 4. The user now decides that adding the person was a mistake, and decides to undo that action by executing the `undo` command. The `undo` command will call `Model#undoAddressBook()`, which will shift the `currentStatePointer` once to the left, pointing it to the previous address book state, and restores the address book to that state.","lastModifiedDate":"2020-05-23"},{"lineNumber":188,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":189,"author":{"gitId":"-"},"content":"![UndoRedoState3](images/UndoRedoState3.png)","lastModifiedDate":"2020-05-23"},{"lineNumber":190,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":191,"author":{"gitId":"-"},"content":"\u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-info\"\u003e:information_source: **Note:** If the `currentStatePointer` is at index 0, pointing to the initial AddressBook state, then there are no previous AddressBook states to restore. The `undo` command uses `Model#canUndoAddressBook()` to check if this is the case. If so, it will return an error to the user rather","lastModifiedDate":"2020-05-23"},{"lineNumber":192,"author":{"gitId":"-"},"content":"than attempting to perform the undo.","lastModifiedDate":"2020-05-23"},{"lineNumber":193,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":194,"author":{"gitId":"-"},"content":"\u003c/div\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":195,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":196,"author":{"gitId":"-"},"content":"The following sequence diagram shows how the undo operation works:","lastModifiedDate":"2020-05-23"},{"lineNumber":197,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":198,"author":{"gitId":"-"},"content":"![UndoSequenceDiagram](images/UndoSequenceDiagram.png)","lastModifiedDate":"2020-05-23"},{"lineNumber":199,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":200,"author":{"gitId":"-"},"content":"\u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-info\"\u003e:information_source: **Note:** The lifeline for `UndoCommand` should end at the destroy marker (X) but due to a limitation of PlantUML, the lifeline reaches the end of diagram.","lastModifiedDate":"2020-05-23"},{"lineNumber":201,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":202,"author":{"gitId":"-"},"content":"\u003c/div\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":203,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":204,"author":{"gitId":"-"},"content":"The `redo` command does the opposite — it calls `Model#redoAddressBook()`, which shifts the `currentStatePointer` once to the right, pointing to the previously undone state, and restores the address book to that state.","lastModifiedDate":"2020-05-23"},{"lineNumber":205,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":206,"author":{"gitId":"-"},"content":"\u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-info\"\u003e:information_source: **Note:** If the `currentStatePointer` is at index `addressBookStateList.size() - 1`, pointing to the latest address book state, then there are no undone AddressBook states to restore. The `redo` command uses `Model#canRedoAddressBook()` to check if this is the case. If so, it will return an error to the user rather than attempting to perform the redo.","lastModifiedDate":"2020-05-23"},{"lineNumber":207,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":208,"author":{"gitId":"-"},"content":"\u003c/div\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":209,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":210,"author":{"gitId":"-"},"content":"Step 5. The user then decides to execute the command `list`. Commands that do not modify the address book, such as `list`, will usually not call `Model#commitAddressBook()`, `Model#undoAddressBook()` or `Model#redoAddressBook()`. Thus, the `addressBookStateList` remains unchanged.","lastModifiedDate":"2020-05-23"},{"lineNumber":211,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":212,"author":{"gitId":"-"},"content":"![UndoRedoState4](images/UndoRedoState4.png)","lastModifiedDate":"2020-05-23"},{"lineNumber":213,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":214,"author":{"gitId":"-"},"content":"Step 6. The user executes `clear`, which calls `Model#commitAddressBook()`. Since the `currentStatePointer` is not pointing at the end of the `addressBookStateList`, all address book states after the `currentStatePointer` will be purged. Reason: It no longer makes sense to redo the `add n/David …​` command. This is the behavior that most modern desktop applications follow.","lastModifiedDate":"2020-05-23"},{"lineNumber":215,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":216,"author":{"gitId":"-"},"content":"![UndoRedoState5](images/UndoRedoState5.png)","lastModifiedDate":"2020-05-23"},{"lineNumber":217,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":218,"author":{"gitId":"-"},"content":"The following activity diagram summarizes what happens when a user executes a new command:","lastModifiedDate":"2020-05-23"},{"lineNumber":219,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":220,"author":{"gitId":"-"},"content":"\u003cimg src\u003d\"images/CommitActivityDiagram.png\" width\u003d\"250\" /\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":221,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":222,"author":{"gitId":"-"},"content":"#### Design considerations:","lastModifiedDate":"2021-07-31"},{"lineNumber":223,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":224,"author":{"gitId":"-"},"content":"**Aspect: How undo \u0026 redo executes:**","lastModifiedDate":"2021-07-31"},{"lineNumber":225,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":226,"author":{"gitId":"-"},"content":"* **Alternative 1 (current choice):** Saves the entire address book.","lastModifiedDate":"2020-05-23"},{"lineNumber":227,"author":{"gitId":"-"},"content":"    * Pros: Easy to implement.","lastModifiedDate":"2020-05-23"},{"lineNumber":228,"author":{"gitId":"-"},"content":"    * Cons: May have performance issues in terms of memory usage.","lastModifiedDate":"2020-05-23"},{"lineNumber":229,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":230,"author":{"gitId":"-"},"content":"* **Alternative 2:** Individual command knows how to undo/redo by","lastModifiedDate":"2020-05-23"},{"lineNumber":231,"author":{"gitId":"-"},"content":"  itself.","lastModifiedDate":"2020-05-23"},{"lineNumber":232,"author":{"gitId":"-"},"content":"    * Pros: Will use less memory (e.g. for `delete`, just save the person being deleted).","lastModifiedDate":"2020-05-23"},{"lineNumber":233,"author":{"gitId":"-"},"content":"    * Cons: We must ensure that the implementation of each individual command are correct.","lastModifiedDate":"2020-05-23"},{"lineNumber":234,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":235,"author":{"gitId":"-"},"content":"_{more aspects and alternatives to be added}_","lastModifiedDate":"2020-05-23"},{"lineNumber":236,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":237,"author":{"gitId":"-"},"content":"### \\[Proposed\\] Data archiving","lastModifiedDate":"2020-05-23"},{"lineNumber":238,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":239,"author":{"gitId":"-"},"content":"_{Explain here how the data archiving feature will be implemented}_","lastModifiedDate":"2020-05-23"},{"lineNumber":240,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":241,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":242,"author":{"gitId":"-"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2020-05-23"},{"lineNumber":243,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":244,"author":{"gitId":"-"},"content":"## **Documentation, logging, testing, configuration, dev-ops**","lastModifiedDate":"2020-06-07"},{"lineNumber":245,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":246,"author":{"gitId":"-"},"content":"* [Documentation guide](Documentation.md)","lastModifiedDate":"2020-06-07"},{"lineNumber":247,"author":{"gitId":"-"},"content":"* [Testing guide](Testing.md)","lastModifiedDate":"2020-06-07"},{"lineNumber":248,"author":{"gitId":"-"},"content":"* [Logging guide](Logging.md)","lastModifiedDate":"2020-06-07"},{"lineNumber":249,"author":{"gitId":"-"},"content":"* [Configuration guide](Configuration.md)","lastModifiedDate":"2020-06-07"},{"lineNumber":250,"author":{"gitId":"-"},"content":"* [DevOps guide](DevOps.md)","lastModifiedDate":"2020-06-07"},{"lineNumber":251,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":252,"author":{"gitId":"-"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2020-05-23"},{"lineNumber":253,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":254,"author":{"gitId":"-"},"content":"## **Appendix: Requirements**","lastModifiedDate":"2020-05-23"},{"lineNumber":255,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":256,"author":{"gitId":"-"},"content":"### Product scope","lastModifiedDate":"2020-05-23"},{"lineNumber":257,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":258,"author":{"gitId":"-"},"content":"**Target user profile**:","lastModifiedDate":"2020-05-23"},{"lineNumber":259,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":260,"author":{"gitId":"yl-ang"},"content":"* a librarian who wants to manage book loans and requests by patrons","lastModifiedDate":"2022-03-04"},{"lineNumber":261,"author":{"gitId":"-"},"content":"* prefer desktop apps over other types","lastModifiedDate":"2020-05-23"},{"lineNumber":262,"author":{"gitId":"-"},"content":"* can type fast","lastModifiedDate":"2020-05-23"},{"lineNumber":263,"author":{"gitId":"-"},"content":"* prefers typing to mouse interactions","lastModifiedDate":"2020-05-26"},{"lineNumber":264,"author":{"gitId":"-"},"content":"* is reasonably comfortable using CLI apps","lastModifiedDate":"2020-05-23"},{"lineNumber":265,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":266,"author":{"gitId":"yl-ang"},"content":"**Value proposition**: simplifying how librarians manage the status of library book loans and requests by patrons","lastModifiedDate":"2022-03-04"},{"lineNumber":267,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":268,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":269,"author":{"gitId":"-"},"content":"### User stories","lastModifiedDate":"2020-06-07"},{"lineNumber":270,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":271,"author":{"gitId":"-"},"content":"Priorities: High (must have) - `* * *`, Medium (nice to have) - `* *`, Low (unlikely to have) - `*`","lastModifiedDate":"2020-05-23"},{"lineNumber":272,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":273,"author":{"gitId":"yl-ang"},"content":"| Priority | As a …​                                                   | I want to …​                                                                  | So that …​                                                                                                                            |","lastModifiedDate":"2022-03-07"},{"lineNumber":274,"author":{"gitId":"yuqitanyq"},"content":"|----------|-----------------------------------------------------------|-------------------------------------------------------------------------------|---------------------------------------------------------------------------------------------------------------------------------------|","lastModifiedDate":"2022-02-24"},{"lineNumber":275,"author":{"gitId":"yuqitanyq"},"content":"| `*`      | Librarian                                                 | add a patron (student or staff) to my database                                | I can keep track of books borrowed or requested by the patron                                                                         |","lastModifiedDate":"2022-02-24"},{"lineNumber":276,"author":{"gitId":"yuqitanyq"},"content":"| `*`      | Librarian                                                 | delete a patron from my database                                              | I do not get overwhelmed by data of graduated students or retired staff.                                                              |","lastModifiedDate":"2022-02-24"},{"lineNumber":277,"author":{"gitId":"yuqitanyq"},"content":"| `*`      | Admin in charge of updating student records               | update information about patrons in my database                               | I have their latest contact when I need to contact them                                                                               |","lastModifiedDate":"2022-02-24"},{"lineNumber":278,"author":{"gitId":"yuqitanyq"},"content":"| `*`      | Efficient librarian                                       | filter patrons in my database based on books                                  | I can know which patrons are requesting or borrowing the book                                                                         |","lastModifiedDate":"2022-02-24"},{"lineNumber":279,"author":{"gitId":"yuqitanyq"},"content":"| `*`      | Efficient librarian                                       | find patrons based on categories                                              | I do not get overwhelmed by long lists of patrons in uncategorized search results                                                     |","lastModifiedDate":"2022-02-24"},{"lineNumber":280,"author":{"gitId":"yuqitanyq"},"content":"| `*`      | Admin                                                     | view information of a specific patron                                         | I can see the books they borrowed or requested for                                                                                    |","lastModifiedDate":"2022-02-24"},{"lineNumber":281,"author":{"gitId":"yuqitanyq"},"content":"| `*`      | Efficient librarian                                       | view patrons who have not returned overdue books                              | I can automate the process of sending reminders instead of sending reminders individually                                             |","lastModifiedDate":"2022-02-24"},{"lineNumber":282,"author":{"gitId":"yuqitanyq"},"content":"| `*`      | Librarian                                                 | add a book to my database                                                     | I can keep track of details of the book                                                                                               |","lastModifiedDate":"2022-02-24"},{"lineNumber":283,"author":{"gitId":"yuqitanyq"},"content":"| `*`      | Easily overwhelmed librarian                              | delete a book from my database                                                | I do not get overwhelmed by information about books that no longer exist                                                              |","lastModifiedDate":"2022-02-24"},{"lineNumber":284,"author":{"gitId":"yuqitanyq"},"content":"| `*`      | Careless librarian                                        | edit information about a book                                                 | I can correct typos in the details of the books when I first added them to the database                                               |","lastModifiedDate":"2022-02-24"},{"lineNumber":285,"author":{"gitId":"yuqitanyq"},"content":"| `*`      | Book recommender                                          | classify books into categories                                                | I can more easily provide book recommendations                                                                                        |","lastModifiedDate":"2022-02-24"},{"lineNumber":286,"author":{"gitId":"yuqitanyq"},"content":"| `*`      | Request handler                                           | filter books based on authors and keywords                                    | I can quickly navigate the book when a patron is requesting it                                                                        |","lastModifiedDate":"2022-02-24"},{"lineNumber":287,"author":{"gitId":"yuqitanyq"},"content":"| `*`      | Forward looking librarian                                 | filter books based on their borrowing date and expected return date           | I can have an estimate of my incoming workload for processing returned books                                                          |","lastModifiedDate":"2022-02-24"},{"lineNumber":288,"author":{"gitId":"yuqitanyq"},"content":"| `*`      | Librarian                                                 | store details about a book loan by a patron                                   | I can perform tasks such as sorting, searching or categorizing books and patrons later                                                |","lastModifiedDate":"2022-02-24"},{"lineNumber":289,"author":{"gitId":"yuqitanyq"},"content":"| `*`      | Librarian                                                 | update return and order status of books                                       | I can keep track of a book’s availability                                                                                             |","lastModifiedDate":"2022-02-24"},{"lineNumber":290,"author":{"gitId":"yuqitanyq"},"content":"| `*`      | Request handler                                           | take note of requests from students to be notified when a book is returned    | I can easily notify the student when the book under request is returned                                                               |","lastModifiedDate":"2022-02-24"},{"lineNumber":291,"author":{"gitId":"yuqitanyq"},"content":"| `*`      | Request handler                                           | take note of book order requests from professors                              | I can easily inform the professor when the book has arrived                                                                           |","lastModifiedDate":"2022-02-24"},{"lineNumber":292,"author":{"gitId":"yuqitanyq"},"content":"| `*`      | Librarian                                                 | view all books in my database                                                 | I can make use of the list to perform other tasks                                                                                     |","lastModifiedDate":"2022-02-24"},{"lineNumber":293,"author":{"gitId":"yuqitanyq"},"content":"| `*`      | Librarian overwhelmed with lots of book requests          | delete book requests I have                                                   | records of book requests are minimized by not keeping track of cancelled and fulfilled requests                                       |","lastModifiedDate":"2022-02-24"},{"lineNumber":294,"author":{"gitId":"yuqitanyq"},"content":"| `*`      | New user                                                  | be able to access help                                                        | I can learn how to use the application                                                                                                |","lastModifiedDate":"2022-02-24"},{"lineNumber":295,"author":{"gitId":"yuqitanyq"},"content":"| `*`      | User who has done learning how to use the application     | remove all the current entries and sample data                                | I can start a fresh and input my own data                                                                                             |","lastModifiedDate":"2022-02-24"},{"lineNumber":296,"author":{"gitId":"yuqitanyq"},"content":"| `*`      | User                                                      | exit the application                                                          | I can leave the application                                                                                                           |","lastModifiedDate":"2022-02-24"},{"lineNumber":297,"author":{"gitId":"yuqitanyq"},"content":"| `*`      | User with strong personal preference                      | change the background theme of the dashboard                                  | it looks more visually appealing to me and motivates me to use the application                                                        |","lastModifiedDate":"2022-02-24"},{"lineNumber":298,"author":{"gitId":"yuqitanyq"},"content":"| `*`      | User                                                      | be able to adjust the window size                                             | I can see the data more clearly.                                                                                                      |","lastModifiedDate":"2022-02-24"},{"lineNumber":299,"author":{"gitId":"yuqitanyq"},"content":"| `*`      | Efficient user who is familiar with CLI tools             | refer to recent commands using up and down arrows                             | I can save time from retyping past commands                                                                                           |","lastModifiedDate":"2022-02-24"},{"lineNumber":300,"author":{"gitId":"yuqitanyq"},"content":"| `*`      | User with poor eyesight and strong personal preference    | edit font size and style                                                      | I can read contents on the application better                                                                                         |","lastModifiedDate":"2022-02-24"},{"lineNumber":301,"author":{"gitId":"yuqitanyq"},"content":"| `*`      | User who likes to stay on top of tasks                    | have a short note taking session to take down notes                           | I do not need to remember small details.                                                                                              |","lastModifiedDate":"2022-02-24"},{"lineNumber":302,"author":{"gitId":"yuqitanyq"},"content":"| `*`      | Admin in charge of sending emails                         | be able to export a group of emails such as overdue emails based on templates | I can craft personalized emails without the need to draft them individually                                                           |","lastModifiedDate":"2022-02-24"},{"lineNumber":303,"author":{"gitId":"yuqitanyq"},"content":"| `*`      | Efficient librarian                                       | continue where I left off from the previous days                              | I can continue to deliver to my borrowers the books they wanted                                                                       |","lastModifiedDate":"2022-02-24"},{"lineNumber":304,"author":{"gitId":"yuqitanyq"},"content":"| `*`      | Librarian in charge of placing book orders                | view statistics for different book categories                                 | I can make important decisions for the library such as getting more copies of a certain book/getting more books of a certain category |","lastModifiedDate":"2022-02-24"},{"lineNumber":305,"author":{"gitId":"yuqitanyq"},"content":"| `*`      | Book recommender who used the application for a long time | recommend books using stored statistics of most frequently requested books    | I can make better recommendations for students that come to us                                                                        |","lastModifiedDate":"2022-02-24"},{"lineNumber":306,"author":{"gitId":"yuqitanyq"},"content":"| `*`      | Impatient user                                            | be able to experience reasonable response time while using the application    | I can do my job more efficiently                                                                                                      |","lastModifiedDate":"2022-02-24"},{"lineNumber":307,"author":{"gitId":"yuqitanyq"},"content":"| `*`      | Easily overwhelmed request handler                        | be able to prioritize my book requests                                        | I can effectively handle requests                                                                                                     |","lastModifiedDate":"2022-02-24"},{"lineNumber":308,"author":{"gitId":"yl-ang"},"content":"| `***`    | Librarian                                                 | be able to view patron and book details through a GUI                         |                                                                                                                                       |","lastModifiedDate":"2022-03-09"},{"lineNumber":309,"author":{"gitId":"yl-ang"},"content":"| `***`    | Librarian                                                 | have visual feedback of the commands I executed                               | I will know if my commands have been successfully executed                                                                            |","lastModifiedDate":"2022-03-09"},{"lineNumber":310,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":311,"author":{"gitId":"-"},"content":"*{More to be added}*","lastModifiedDate":"2020-05-23"},{"lineNumber":312,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":313,"author":{"gitId":"-"},"content":"### Use cases","lastModifiedDate":"2020-06-07"},{"lineNumber":314,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":315,"author":{"gitId":"Halpfrog"},"content":"(For all use cases below, the **System** is the `LibTask` and the **Actor** is the `user`, unless specified otherwise)","lastModifiedDate":"2022-03-02"},{"lineNumber":316,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":317,"author":{"gitId":"Halpfrog"},"content":"### UC01: Adding a patron to LibTask","lastModifiedDate":"2022-03-02"},{"lineNumber":318,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":319,"author":{"gitId":"-"},"content":"**MSS**","lastModifiedDate":"2020-05-23"},{"lineNumber":320,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":321,"author":{"gitId":"Halpfrog"},"content":"1. User requests to add a patron and provides the name and details of the patron.","lastModifiedDate":"2022-03-02"},{"lineNumber":322,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-03-02"},{"lineNumber":323,"author":{"gitId":"Halpfrog"},"content":"2. LibTask adds the patron.","lastModifiedDate":"2022-03-02"},{"lineNumber":324,"author":{"gitId":"Halpfrog"},"content":"","lastModifiedDate":"2022-03-02"},{"lineNumber":325,"author":{"gitId":"Halpfrog"},"content":"   Use case ends.","lastModifiedDate":"2022-03-02"},{"lineNumber":326,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-03-02"},{"lineNumber":327,"author":{"gitId":"-"},"content":"**Extensions**","lastModifiedDate":"2022-03-02"},{"lineNumber":328,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-03-02"},{"lineNumber":329,"author":{"gitId":"Halpfrog"},"content":"* 1a. Compulsory fields are not provided.","lastModifiedDate":"2022-03-02"},{"lineNumber":330,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-03-02"},{"lineNumber":331,"author":{"gitId":"Halpfrog"},"content":"    * 1a1. LibTask shows an error message.","lastModifiedDate":"2022-03-02"},{"lineNumber":332,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-03-02"},{"lineNumber":333,"author":{"gitId":"Halpfrog"},"content":"      Use case resumes from step 1.","lastModifiedDate":"2022-03-02"},{"lineNumber":334,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-03-02"},{"lineNumber":335,"author":{"gitId":"Halpfrog"},"content":"* 1b. The patron details are invalid.","lastModifiedDate":"2022-03-02"},{"lineNumber":336,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-03-02"},{"lineNumber":337,"author":{"gitId":"Halpfrog"},"content":"    * 1b1. LibTask shows an error message.","lastModifiedDate":"2022-03-02"},{"lineNumber":338,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-03-02"},{"lineNumber":339,"author":{"gitId":"Halpfrog"},"content":"      Use case resumes from step 1.","lastModifiedDate":"2022-03-02"},{"lineNumber":340,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-03-02"},{"lineNumber":341,"author":{"gitId":"Halpfrog"},"content":"* 1c. The given name and details are duplicated.","lastModifiedDate":"2022-03-02"},{"lineNumber":342,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-03-02"},{"lineNumber":343,"author":{"gitId":"Halpfrog"},"content":"    * 1c1. LibTask shows an error message.","lastModifiedDate":"2022-03-02"},{"lineNumber":344,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-03-02"},{"lineNumber":345,"author":{"gitId":"Halpfrog"},"content":"      Use case resume from step 1.","lastModifiedDate":"2022-03-02"},{"lineNumber":346,"author":{"gitId":"Halpfrog"},"content":"","lastModifiedDate":"2022-03-02"},{"lineNumber":347,"author":{"gitId":"Halpfrog"},"content":"","lastModifiedDate":"2022-03-02"},{"lineNumber":348,"author":{"gitId":"Halpfrog"},"content":"### UC02: List patron\u0027s on LibTask","lastModifiedDate":"2022-03-02"},{"lineNumber":349,"author":{"gitId":"Halpfrog"},"content":"","lastModifiedDate":"2022-03-02"},{"lineNumber":350,"author":{"gitId":"Halpfrog"},"content":"**MSS**","lastModifiedDate":"2022-03-02"},{"lineNumber":351,"author":{"gitId":"Halpfrog"},"content":"","lastModifiedDate":"2022-03-02"},{"lineNumber":352,"author":{"gitId":"Halpfrog"},"content":"1. User requests to list all patrons","lastModifiedDate":"2022-03-02"},{"lineNumber":353,"author":{"gitId":"Halpfrog"},"content":"","lastModifiedDate":"2022-03-02"},{"lineNumber":354,"author":{"gitId":"Halpfrog"},"content":"2. LibTask shows the list of all the patrons.","lastModifiedDate":"2022-03-02"},{"lineNumber":355,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":356,"author":{"gitId":"-"},"content":"   Use case ends.","lastModifiedDate":"2020-05-23"},{"lineNumber":357,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":358,"author":{"gitId":"-"},"content":"**Extensions**","lastModifiedDate":"2020-05-23"},{"lineNumber":359,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":360,"author":{"gitId":"Halpfrog"},"content":"* 2a. LibTask has no stored patrons.","lastModifiedDate":"2022-03-02"},{"lineNumber":361,"author":{"gitId":"Halpfrog"},"content":"","lastModifiedDate":"2022-03-02"},{"lineNumber":362,"author":{"gitId":"Halpfrog"},"content":"    * 2a1. LibTask shows an empty list.","lastModifiedDate":"2022-03-02"},{"lineNumber":363,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":364,"author":{"gitId":"-"},"content":"      Use case ends.","lastModifiedDate":"2020-05-23"},{"lineNumber":365,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":366,"author":{"gitId":"Halpfrog"},"content":"### UC03: Editing a patron on LibTask","lastModifiedDate":"2022-03-02"},{"lineNumber":367,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":368,"author":{"gitId":"Halpfrog"},"content":"**MSS**","lastModifiedDate":"2022-03-02"},{"lineNumber":369,"author":{"gitId":"Halpfrog"},"content":"1. User list all patrons [UC02](#uc02-list-patrons-on-libtask)","lastModifiedDate":"2022-03-02"},{"lineNumber":370,"author":{"gitId":"Halpfrog"},"content":"","lastModifiedDate":"2022-03-02"},{"lineNumber":371,"author":{"gitId":"Halpfrog"},"content":"2. User requests to edit a patron and provide the index and the necessary details to be edited.","lastModifiedDate":"2022-03-02"},{"lineNumber":372,"author":{"gitId":"Halpfrog"},"content":"","lastModifiedDate":"2022-03-02"},{"lineNumber":373,"author":{"gitId":"Halpfrog"},"content":"3. LibTask edits the patron.","lastModifiedDate":"2022-03-02"},{"lineNumber":374,"author":{"gitId":"Halpfrog"},"content":"","lastModifiedDate":"2022-03-02"},{"lineNumber":375,"author":{"gitId":"Halpfrog"},"content":"   Use case ends.","lastModifiedDate":"2022-03-02"},{"lineNumber":376,"author":{"gitId":"Halpfrog"},"content":"","lastModifiedDate":"2022-03-02"},{"lineNumber":377,"author":{"gitId":"Halpfrog"},"content":"**Extensions**","lastModifiedDate":"2022-03-02"},{"lineNumber":378,"author":{"gitId":"Halpfrog"},"content":"","lastModifiedDate":"2022-03-02"},{"lineNumber":379,"author":{"gitId":"Halpfrog"},"content":"* 1a. The index is not provided or is invalid.","lastModifiedDate":"2022-03-02"},{"lineNumber":380,"author":{"gitId":"Halpfrog"},"content":"","lastModifiedDate":"2022-03-02"},{"lineNumber":381,"author":{"gitId":"Halpfrog"},"content":"    * 1a1. LibTask shows an error message.","lastModifiedDate":"2022-03-02"},{"lineNumber":382,"author":{"gitId":"Halpfrog"},"content":"","lastModifiedDate":"2022-03-02"},{"lineNumber":383,"author":{"gitId":"Halpfrog"},"content":"      Use case resumes from step 1.","lastModifiedDate":"2022-03-02"},{"lineNumber":384,"author":{"gitId":"Halpfrog"},"content":"","lastModifiedDate":"2022-03-02"},{"lineNumber":385,"author":{"gitId":"Halpfrog"},"content":"* 1b. The details are not provided or are invalid.","lastModifiedDate":"2022-03-02"},{"lineNumber":386,"author":{"gitId":"Halpfrog"},"content":"","lastModifiedDate":"2022-03-02"},{"lineNumber":387,"author":{"gitId":"Halpfrog"},"content":"    * 1b1.  LibTask shows an error message.","lastModifiedDate":"2022-03-02"},{"lineNumber":388,"author":{"gitId":"Halpfrog"},"content":"","lastModifiedDate":"2022-03-02"},{"lineNumber":389,"author":{"gitId":"Halpfrog"},"content":"      Use case resume from step 1.","lastModifiedDate":"2022-03-02"},{"lineNumber":390,"author":{"gitId":"Halpfrog"},"content":"","lastModifiedDate":"2022-03-02"},{"lineNumber":391,"author":{"gitId":"Halpfrog"},"content":"","lastModifiedDate":"2022-03-02"},{"lineNumber":392,"author":{"gitId":"Halpfrog"},"content":"### UC04: Find a patron on LibTask","lastModifiedDate":"2022-03-02"},{"lineNumber":393,"author":{"gitId":"Halpfrog"},"content":"","lastModifiedDate":"2022-03-02"},{"lineNumber":394,"author":{"gitId":"Halpfrog"},"content":"**MSS**","lastModifiedDate":"2022-03-02"},{"lineNumber":395,"author":{"gitId":"Halpfrog"},"content":"","lastModifiedDate":"2022-03-02"},{"lineNumber":396,"author":{"gitId":"Halpfrog"},"content":"1. User request to find patron(s) and provide a number of keywords.","lastModifiedDate":"2022-03-02"},{"lineNumber":397,"author":{"gitId":"Halpfrog"},"content":"","lastModifiedDate":"2022-03-02"},{"lineNumber":398,"author":{"gitId":"Halpfrog"},"content":"2. LibTask shows the list of patrons that match the search.","lastModifiedDate":"2022-03-02"},{"lineNumber":399,"author":{"gitId":"Halpfrog"},"content":"","lastModifiedDate":"2022-03-02"},{"lineNumber":400,"author":{"gitId":"Halpfrog"},"content":"   Use case ends.","lastModifiedDate":"2022-03-02"},{"lineNumber":401,"author":{"gitId":"Halpfrog"},"content":"","lastModifiedDate":"2022-03-02"},{"lineNumber":402,"author":{"gitId":"Halpfrog"},"content":"**Extensions**","lastModifiedDate":"2022-03-02"},{"lineNumber":403,"author":{"gitId":"Halpfrog"},"content":"","lastModifiedDate":"2022-03-02"},{"lineNumber":404,"author":{"gitId":"Halpfrog"},"content":"* 1a. Keywords not provided or are invalid.","lastModifiedDate":"2022-03-02"},{"lineNumber":405,"author":{"gitId":"Halpfrog"},"content":"","lastModifiedDate":"2022-03-02"},{"lineNumber":406,"author":{"gitId":"Halpfrog"},"content":"    * 1a1. LibTask shows an error message.","lastModifiedDate":"2022-03-02"},{"lineNumber":407,"author":{"gitId":"Halpfrog"},"content":"","lastModifiedDate":"2022-03-02"},{"lineNumber":408,"author":{"gitId":"Halpfrog"},"content":"      Use case resumes from step 1.","lastModifiedDate":"2022-03-02"},{"lineNumber":409,"author":{"gitId":"Halpfrog"},"content":"","lastModifiedDate":"2022-03-02"},{"lineNumber":410,"author":{"gitId":"Halpfrog"},"content":"* 2a.  No patrons fulfil the search criteria.","lastModifiedDate":"2022-03-02"},{"lineNumber":411,"author":{"gitId":"Halpfrog"},"content":"","lastModifiedDate":"2022-03-02"},{"lineNumber":412,"author":{"gitId":"Halpfrog"},"content":"    * 2a1. LibTask shows an empty list.","lastModifiedDate":"2022-03-02"},{"lineNumber":413,"author":{"gitId":"Halpfrog"},"content":"","lastModifiedDate":"2022-03-02"},{"lineNumber":414,"author":{"gitId":"Halpfrog"},"content":"      Use case ends.","lastModifiedDate":"2022-03-02"},{"lineNumber":415,"author":{"gitId":"Halpfrog"},"content":"","lastModifiedDate":"2022-03-02"},{"lineNumber":416,"author":{"gitId":"Halpfrog"},"content":"","lastModifiedDate":"2022-03-02"},{"lineNumber":417,"author":{"gitId":"Halpfrog"},"content":"### UC05: Delete a patron from LibTask","lastModifiedDate":"2022-03-02"},{"lineNumber":418,"author":{"gitId":"Halpfrog"},"content":"","lastModifiedDate":"2022-03-02"},{"lineNumber":419,"author":{"gitId":"Halpfrog"},"content":"**MSS**","lastModifiedDate":"2022-03-02"},{"lineNumber":420,"author":{"gitId":"Halpfrog"},"content":"","lastModifiedDate":"2022-03-02"},{"lineNumber":421,"author":{"gitId":"Halpfrog"},"content":"1. User list all patrons [UC02](#uc02-list-patrons-on-libtask).","lastModifiedDate":"2022-03-02"},{"lineNumber":422,"author":{"gitId":"Halpfrog"},"content":"","lastModifiedDate":"2022-03-02"},{"lineNumber":423,"author":{"gitId":"Halpfrog"},"content":"2. User requests to delete a patron and provide the index.","lastModifiedDate":"2022-03-02"},{"lineNumber":424,"author":{"gitId":"Halpfrog"},"content":"","lastModifiedDate":"2022-03-02"},{"lineNumber":425,"author":{"gitId":"Halpfrog"},"content":"3. LibTask deletes the patron.","lastModifiedDate":"2022-03-02"},{"lineNumber":426,"author":{"gitId":"Halpfrog"},"content":"","lastModifiedDate":"2022-03-02"},{"lineNumber":427,"author":{"gitId":"Halpfrog"},"content":"   Use case ends.","lastModifiedDate":"2022-03-02"},{"lineNumber":428,"author":{"gitId":"Halpfrog"},"content":"","lastModifiedDate":"2022-03-02"},{"lineNumber":429,"author":{"gitId":"Halpfrog"},"content":"**Extensions**","lastModifiedDate":"2022-03-02"},{"lineNumber":430,"author":{"gitId":"Halpfrog"},"content":"","lastModifiedDate":"2022-03-02"},{"lineNumber":431,"author":{"gitId":"Halpfrog"},"content":"* 1a. The index is not provided or is invalid.","lastModifiedDate":"2022-03-02"},{"lineNumber":432,"author":{"gitId":"Halpfrog"},"content":"","lastModifiedDate":"2022-03-02"},{"lineNumber":433,"author":{"gitId":"Halpfrog"},"content":"    * 1a1. LibTask shows an error message.","lastModifiedDate":"2022-03-02"},{"lineNumber":434,"author":{"gitId":"Halpfrog"},"content":"","lastModifiedDate":"2022-03-02"},{"lineNumber":435,"author":{"gitId":"Halpfrog"},"content":"      Use case resumes from step 1.","lastModifiedDate":"2022-03-02"},{"lineNumber":436,"author":{"gitId":"Halpfrog"},"content":"","lastModifiedDate":"2022-03-02"},{"lineNumber":437,"author":{"gitId":"Halpfrog"},"content":"### UC06: Add book to LibTask","lastModifiedDate":"2022-03-02"},{"lineNumber":438,"author":{"gitId":"Halpfrog"},"content":"","lastModifiedDate":"2022-03-02"},{"lineNumber":439,"author":{"gitId":"Halpfrog"},"content":"**MSS**","lastModifiedDate":"2022-03-02"},{"lineNumber":440,"author":{"gitId":"Halpfrog"},"content":"","lastModifiedDate":"2022-03-02"},{"lineNumber":441,"author":{"gitId":"Halpfrog"},"content":"1. User requests to add a book and provides the name and details of the book","lastModifiedDate":"2022-03-02"},{"lineNumber":442,"author":{"gitId":"Halpfrog"},"content":"","lastModifiedDate":"2022-03-02"},{"lineNumber":443,"author":{"gitId":"Halpfrog"},"content":"2. LibTask adds the module.","lastModifiedDate":"2022-03-02"},{"lineNumber":444,"author":{"gitId":"Halpfrog"},"content":"","lastModifiedDate":"2022-03-02"},{"lineNumber":445,"author":{"gitId":"Halpfrog"},"content":"   Use case ends.","lastModifiedDate":"2022-03-02"},{"lineNumber":446,"author":{"gitId":"Halpfrog"},"content":"","lastModifiedDate":"2022-03-02"},{"lineNumber":447,"author":{"gitId":"Halpfrog"},"content":"**Extensions**","lastModifiedDate":"2022-03-02"},{"lineNumber":448,"author":{"gitId":"Halpfrog"},"content":"","lastModifiedDate":"2022-03-02"},{"lineNumber":449,"author":{"gitId":"Halpfrog"},"content":"* 1a. Compulsory fields are not provided.","lastModifiedDate":"2022-03-02"},{"lineNumber":450,"author":{"gitId":"Halpfrog"},"content":"","lastModifiedDate":"2022-03-02"},{"lineNumber":451,"author":{"gitId":"Halpfrog"},"content":"    * 1a1. LibTask shows an error message.","lastModifiedDate":"2022-03-02"},{"lineNumber":452,"author":{"gitId":"Halpfrog"},"content":"","lastModifiedDate":"2022-03-02"},{"lineNumber":453,"author":{"gitId":"Halpfrog"},"content":"      Use case resumes from step 1.","lastModifiedDate":"2022-03-02"},{"lineNumber":454,"author":{"gitId":"Halpfrog"},"content":"","lastModifiedDate":"2022-03-02"},{"lineNumber":455,"author":{"gitId":"Halpfrog"},"content":"* 1b. The book details are invalid.","lastModifiedDate":"2022-03-02"},{"lineNumber":456,"author":{"gitId":"Halpfrog"},"content":"","lastModifiedDate":"2022-03-02"},{"lineNumber":457,"author":{"gitId":"Halpfrog"},"content":"    * 1b1. LibTask shows an error message.","lastModifiedDate":"2022-03-02"},{"lineNumber":458,"author":{"gitId":"Halpfrog"},"content":"","lastModifiedDate":"2022-03-02"},{"lineNumber":459,"author":{"gitId":"Halpfrog"},"content":"      Use case resumes from step 1.","lastModifiedDate":"2022-03-02"},{"lineNumber":460,"author":{"gitId":"Halpfrog"},"content":"","lastModifiedDate":"2022-03-02"},{"lineNumber":461,"author":{"gitId":"Halpfrog"},"content":"### UC07: List Books on LibTask","lastModifiedDate":"2022-03-02"},{"lineNumber":462,"author":{"gitId":"Halpfrog"},"content":"","lastModifiedDate":"2022-03-02"},{"lineNumber":463,"author":{"gitId":"Halpfrog"},"content":"**MSS**","lastModifiedDate":"2022-03-02"},{"lineNumber":464,"author":{"gitId":"Halpfrog"},"content":"1. User requests to list all books.","lastModifiedDate":"2022-03-02"},{"lineNumber":465,"author":{"gitId":"Halpfrog"},"content":"","lastModifiedDate":"2022-03-02"},{"lineNumber":466,"author":{"gitId":"Halpfrog"},"content":"2. LibTask shows the list of all the books.","lastModifiedDate":"2022-03-02"},{"lineNumber":467,"author":{"gitId":"Halpfrog"},"content":"","lastModifiedDate":"2022-03-02"},{"lineNumber":468,"author":{"gitId":"Halpfrog"},"content":"   Use case ends.","lastModifiedDate":"2022-03-02"},{"lineNumber":469,"author":{"gitId":"Halpfrog"},"content":"","lastModifiedDate":"2022-03-02"},{"lineNumber":470,"author":{"gitId":"Halpfrog"},"content":"### UC08: Edit a book on LibTask","lastModifiedDate":"2022-03-02"},{"lineNumber":471,"author":{"gitId":"Halpfrog"},"content":"","lastModifiedDate":"2022-03-02"},{"lineNumber":472,"author":{"gitId":"Halpfrog"},"content":"**MSS**","lastModifiedDate":"2022-03-02"},{"lineNumber":473,"author":{"gitId":"Halpfrog"},"content":"","lastModifiedDate":"2022-03-02"},{"lineNumber":474,"author":{"gitId":"Halpfrog"},"content":"1. User requests to edit a book and provides the index of the book and the new details.","lastModifiedDate":"2022-03-02"},{"lineNumber":475,"author":{"gitId":"Halpfrog"},"content":"","lastModifiedDate":"2022-03-02"},{"lineNumber":476,"author":{"gitId":"Halpfrog"},"content":"2. LibTask edits the book.","lastModifiedDate":"2022-03-02"},{"lineNumber":477,"author":{"gitId":"Halpfrog"},"content":"","lastModifiedDate":"2022-03-02"},{"lineNumber":478,"author":{"gitId":"Halpfrog"},"content":"   Use case ends.","lastModifiedDate":"2022-03-02"},{"lineNumber":479,"author":{"gitId":"Halpfrog"},"content":"","lastModifiedDate":"2022-03-02"},{"lineNumber":480,"author":{"gitId":"Halpfrog"},"content":"**Extensions**","lastModifiedDate":"2022-03-02"},{"lineNumber":481,"author":{"gitId":"Halpfrog"},"content":"","lastModifiedDate":"2022-03-02"},{"lineNumber":482,"author":{"gitId":"Halpfrog"},"content":"* 1a. The given index is invalid.","lastModifiedDate":"2022-03-02"},{"lineNumber":483,"author":{"gitId":"Halpfrog"},"content":"","lastModifiedDate":"2022-03-02"},{"lineNumber":484,"author":{"gitId":"Halpfrog"},"content":"    * 1a1. LibTask shows an error message.","lastModifiedDate":"2022-03-02"},{"lineNumber":485,"author":{"gitId":"Halpfrog"},"content":"","lastModifiedDate":"2022-03-02"},{"lineNumber":486,"author":{"gitId":"Halpfrog"},"content":"      Use case resumes from step 1.","lastModifiedDate":"2022-03-02"},{"lineNumber":487,"author":{"gitId":"Halpfrog"},"content":"","lastModifiedDate":"2022-03-02"},{"lineNumber":488,"author":{"gitId":"Halpfrog"},"content":"* 1b. The new details are invalid.","lastModifiedDate":"2022-03-02"},{"lineNumber":489,"author":{"gitId":"Halpfrog"},"content":"","lastModifiedDate":"2022-03-02"},{"lineNumber":490,"author":{"gitId":"Halpfrog"},"content":"    * 1b1. LibTask shows an error message.","lastModifiedDate":"2022-03-02"},{"lineNumber":491,"author":{"gitId":"Halpfrog"},"content":"","lastModifiedDate":"2022-03-02"},{"lineNumber":492,"author":{"gitId":"Halpfrog"},"content":"      Use case resumes from step 1.","lastModifiedDate":"2022-03-02"},{"lineNumber":493,"author":{"gitId":"Halpfrog"},"content":"","lastModifiedDate":"2022-03-02"},{"lineNumber":494,"author":{"gitId":"Halpfrog"},"content":"### UC09: Delete Book from LibTask","lastModifiedDate":"2022-03-02"},{"lineNumber":495,"author":{"gitId":"Halpfrog"},"content":"","lastModifiedDate":"2022-03-02"},{"lineNumber":496,"author":{"gitId":"Halpfrog"},"content":"**MSS**","lastModifiedDate":"2022-03-02"},{"lineNumber":497,"author":{"gitId":"Halpfrog"},"content":"","lastModifiedDate":"2022-03-02"},{"lineNumber":498,"author":{"gitId":"Halpfrog"},"content":"1. User requests to delete a book and provides the index.","lastModifiedDate":"2022-03-02"},{"lineNumber":499,"author":{"gitId":"Halpfrog"},"content":"","lastModifiedDate":"2022-03-02"},{"lineNumber":500,"author":{"gitId":"Halpfrog"},"content":"2. LibTask deletes the book.","lastModifiedDate":"2022-03-02"},{"lineNumber":501,"author":{"gitId":"Halpfrog"},"content":"","lastModifiedDate":"2022-03-02"},{"lineNumber":502,"author":{"gitId":"Halpfrog"},"content":"   Use case ends.","lastModifiedDate":"2022-03-02"},{"lineNumber":503,"author":{"gitId":"Halpfrog"},"content":"","lastModifiedDate":"2022-03-02"},{"lineNumber":504,"author":{"gitId":"Halpfrog"},"content":"**Extensions**","lastModifiedDate":"2022-03-02"},{"lineNumber":505,"author":{"gitId":"Halpfrog"},"content":"","lastModifiedDate":"2022-03-02"},{"lineNumber":506,"author":{"gitId":"Halpfrog"},"content":"* 1a. The given index is invalid.","lastModifiedDate":"2022-03-02"},{"lineNumber":507,"author":{"gitId":"Halpfrog"},"content":"","lastModifiedDate":"2022-03-02"},{"lineNumber":508,"author":{"gitId":"Halpfrog"},"content":"    * 1a1. LibTask shows an error message.","lastModifiedDate":"2022-03-02"},{"lineNumber":509,"author":{"gitId":"Halpfrog"},"content":"","lastModifiedDate":"2022-03-02"},{"lineNumber":510,"author":{"gitId":"Halpfrog"},"content":"      Use case resumes from step 1.","lastModifiedDate":"2022-03-02"},{"lineNumber":511,"author":{"gitId":"Halpfrog"},"content":"","lastModifiedDate":"2022-03-02"},{"lineNumber":512,"author":{"gitId":"Halpfrog"},"content":"### UC10: Borrow Book","lastModifiedDate":"2022-03-02"},{"lineNumber":513,"author":{"gitId":"Halpfrog"},"content":"","lastModifiedDate":"2022-03-02"},{"lineNumber":514,"author":{"gitId":"Halpfrog"},"content":"**MSS**","lastModifiedDate":"2022-03-02"},{"lineNumber":515,"author":{"gitId":"Halpfrog"},"content":"","lastModifiedDate":"2022-03-02"},{"lineNumber":516,"author":{"gitId":"Halpfrog"},"content":"1. User lists all patrons [UC02](#uc02-list-patrons-on-libtask)","lastModifiedDate":"2022-03-02"},{"lineNumber":517,"author":{"gitId":"Halpfrog"},"content":"","lastModifiedDate":"2022-03-02"},{"lineNumber":518,"author":{"gitId":"Halpfrog"},"content":"2. User lists all books [UC07](#uc07-list-books-on-libtask)","lastModifiedDate":"2022-03-02"},{"lineNumber":519,"author":{"gitId":"Halpfrog"},"content":"","lastModifiedDate":"2022-03-02"},{"lineNumber":520,"author":{"gitId":"Halpfrog"},"content":"3. User requests to establish a borrow relationship and provides index of the patron and index of the book in lists, as well as return date of the book.","lastModifiedDate":"2022-03-02"},{"lineNumber":521,"author":{"gitId":"Halpfrog"},"content":"","lastModifiedDate":"2022-03-02"},{"lineNumber":522,"author":{"gitId":"Halpfrog"},"content":"4. LibTask establishes a borrow relationship between the patron and the book.","lastModifiedDate":"2022-03-02"},{"lineNumber":523,"author":{"gitId":"Halpfrog"},"content":"","lastModifiedDate":"2022-03-02"},{"lineNumber":524,"author":{"gitId":"Halpfrog"},"content":"   Use case ends.","lastModifiedDate":"2022-03-02"},{"lineNumber":525,"author":{"gitId":"Halpfrog"},"content":"","lastModifiedDate":"2022-03-02"},{"lineNumber":526,"author":{"gitId":"Halpfrog"},"content":"**Extensions**","lastModifiedDate":"2022-03-02"},{"lineNumber":527,"author":{"gitId":"Halpfrog"},"content":"","lastModifiedDate":"2022-03-02"},{"lineNumber":528,"author":{"gitId":"Halpfrog"},"content":"* 3a. The given index of patron or book is invalid.","lastModifiedDate":"2022-03-02"},{"lineNumber":529,"author":{"gitId":"Halpfrog"},"content":"","lastModifiedDate":"2022-03-02"},{"lineNumber":530,"author":{"gitId":"Halpfrog"},"content":"    * 3a1. LibTask shows an error message.","lastModifiedDate":"2022-03-02"},{"lineNumber":531,"author":{"gitId":"Halpfrog"},"content":"","lastModifiedDate":"2022-03-02"},{"lineNumber":532,"author":{"gitId":"Halpfrog"},"content":"      Use case resumes from step 3.","lastModifiedDate":"2022-03-02"},{"lineNumber":533,"author":{"gitId":"Halpfrog"},"content":"","lastModifiedDate":"2022-03-02"},{"lineNumber":534,"author":{"gitId":"Halpfrog"},"content":"* 3b. The return date of the book is invalid.","lastModifiedDate":"2022-03-02"},{"lineNumber":535,"author":{"gitId":"Halpfrog"},"content":"","lastModifiedDate":"2022-03-02"},{"lineNumber":536,"author":{"gitId":"Halpfrog"},"content":"    * 3a1. LibTask shows an error message.","lastModifiedDate":"2022-03-02"},{"lineNumber":537,"author":{"gitId":"Halpfrog"},"content":"","lastModifiedDate":"2022-03-02"},{"lineNumber":538,"author":{"gitId":"Halpfrog"},"content":"      Use case resumes from step 3.","lastModifiedDate":"2022-03-02"},{"lineNumber":539,"author":{"gitId":"Halpfrog"},"content":"","lastModifiedDate":"2022-03-02"},{"lineNumber":540,"author":{"gitId":"Halpfrog"},"content":"* 3b. The book is already borrowed.","lastModifiedDate":"2022-03-02"},{"lineNumber":541,"author":{"gitId":"Halpfrog"},"content":"","lastModifiedDate":"2022-03-02"},{"lineNumber":542,"author":{"gitId":"Halpfrog"},"content":"    * 3a1. LibTask shows an error message.","lastModifiedDate":"2022-03-02"},{"lineNumber":543,"author":{"gitId":"Halpfrog"},"content":"","lastModifiedDate":"2022-03-02"},{"lineNumber":544,"author":{"gitId":"Halpfrog"},"content":"      Use case resumes from step 3.","lastModifiedDate":"2022-03-02"},{"lineNumber":545,"author":{"gitId":"Halpfrog"},"content":"","lastModifiedDate":"2022-03-02"},{"lineNumber":546,"author":{"gitId":"Halpfrog"},"content":"### UC11: Return Book on LibTask","lastModifiedDate":"2022-03-02"},{"lineNumber":547,"author":{"gitId":"Halpfrog"},"content":"","lastModifiedDate":"2022-03-02"},{"lineNumber":548,"author":{"gitId":"Halpfrog"},"content":"**MSS**","lastModifiedDate":"2022-03-02"},{"lineNumber":549,"author":{"gitId":"Halpfrog"},"content":"","lastModifiedDate":"2022-03-02"},{"lineNumber":550,"author":{"gitId":"Halpfrog"},"content":"1. User finds a patron [UC04](#uc04-find-a-patron-on-libtask)","lastModifiedDate":"2022-03-02"},{"lineNumber":551,"author":{"gitId":"Halpfrog"},"content":"","lastModifiedDate":"2022-03-02"},{"lineNumber":552,"author":{"gitId":"Halpfrog"},"content":"2. User requests to end a borrow relationship and provides index of the patron and index of the book in lists.","lastModifiedDate":"2022-03-02"},{"lineNumber":553,"author":{"gitId":"Halpfrog"},"content":"","lastModifiedDate":"2022-03-02"},{"lineNumber":554,"author":{"gitId":"Halpfrog"},"content":"3. LibTask removes the borrow relationship between the patron and the book.","lastModifiedDate":"2022-03-02"},{"lineNumber":555,"author":{"gitId":"Halpfrog"},"content":"","lastModifiedDate":"2022-03-02"},{"lineNumber":556,"author":{"gitId":"Halpfrog"},"content":"Use case ends.","lastModifiedDate":"2022-03-02"},{"lineNumber":557,"author":{"gitId":"Halpfrog"},"content":"","lastModifiedDate":"2022-03-02"},{"lineNumber":558,"author":{"gitId":"Halpfrog"},"content":"**Extensions**","lastModifiedDate":"2022-03-02"},{"lineNumber":559,"author":{"gitId":"Halpfrog"},"content":"","lastModifiedDate":"2022-03-02"},{"lineNumber":560,"author":{"gitId":"Halpfrog"},"content":"* 2a. The given index of patron or book is invalid.","lastModifiedDate":"2022-03-02"},{"lineNumber":561,"author":{"gitId":"Halpfrog"},"content":"","lastModifiedDate":"2022-03-02"},{"lineNumber":562,"author":{"gitId":"Halpfrog"},"content":"    * 2a1. LibTask shows an error message.","lastModifiedDate":"2022-03-02"},{"lineNumber":563,"author":{"gitId":"Halpfrog"},"content":"","lastModifiedDate":"2022-03-02"},{"lineNumber":564,"author":{"gitId":"Halpfrog"},"content":"      Use case resumes from step 2.","lastModifiedDate":"2022-03-02"},{"lineNumber":565,"author":{"gitId":"Halpfrog"},"content":"","lastModifiedDate":"2022-03-02"},{"lineNumber":566,"author":{"gitId":"Halpfrog"},"content":"* 2b. The book is not borrowed by the patron.","lastModifiedDate":"2022-03-02"},{"lineNumber":567,"author":{"gitId":"Halpfrog"},"content":"","lastModifiedDate":"2022-03-02"},{"lineNumber":568,"author":{"gitId":"Halpfrog"},"content":"    * 2a1. LibTask shows an error message.","lastModifiedDate":"2022-03-02"},{"lineNumber":569,"author":{"gitId":"Halpfrog"},"content":"","lastModifiedDate":"2022-03-02"},{"lineNumber":570,"author":{"gitId":"Halpfrog"},"content":"      Use case resumes from step 2.","lastModifiedDate":"2022-03-02"},{"lineNumber":571,"author":{"gitId":"Halpfrog"},"content":"","lastModifiedDate":"2022-03-02"},{"lineNumber":572,"author":{"gitId":"Halpfrog"},"content":"### UC12: Asking for Help on LibTask","lastModifiedDate":"2022-03-02"},{"lineNumber":573,"author":{"gitId":"Halpfrog"},"content":"","lastModifiedDate":"2022-03-02"},{"lineNumber":574,"author":{"gitId":"Halpfrog"},"content":"**MSS**","lastModifiedDate":"2022-03-02"},{"lineNumber":575,"author":{"gitId":"Halpfrog"},"content":"1. User requests to list all commands","lastModifiedDate":"2022-03-02"},{"lineNumber":576,"author":{"gitId":"Halpfrog"},"content":"","lastModifiedDate":"2022-03-02"},{"lineNumber":577,"author":{"gitId":"Halpfrog"},"content":"2. LibTask shows the list of all the commands","lastModifiedDate":"2022-03-02"},{"lineNumber":578,"author":{"gitId":"Halpfrog"},"content":"","lastModifiedDate":"2022-03-02"},{"lineNumber":579,"author":{"gitId":"Halpfrog"},"content":"   Use case ends.","lastModifiedDate":"2022-03-02"},{"lineNumber":580,"author":{"gitId":"Halpfrog"},"content":"","lastModifiedDate":"2022-03-02"},{"lineNumber":581,"author":{"gitId":"Halpfrog"},"content":"### UC13: Exiting LibTask","lastModifiedDate":"2022-03-02"},{"lineNumber":582,"author":{"gitId":"Halpfrog"},"content":"","lastModifiedDate":"2022-03-02"},{"lineNumber":583,"author":{"gitId":"Halpfrog"},"content":"**MSS**","lastModifiedDate":"2022-03-02"},{"lineNumber":584,"author":{"gitId":"Halpfrog"},"content":"1. User requests to exit LibTask","lastModifiedDate":"2022-03-02"},{"lineNumber":585,"author":{"gitId":"Halpfrog"},"content":"","lastModifiedDate":"2022-03-02"},{"lineNumber":586,"author":{"gitId":"Halpfrog"},"content":"2. LibTask closes.","lastModifiedDate":"2022-03-02"},{"lineNumber":587,"author":{"gitId":"Halpfrog"},"content":"","lastModifiedDate":"2022-03-02"},{"lineNumber":588,"author":{"gitId":"Halpfrog"},"content":"   Use case ends.","lastModifiedDate":"2022-03-02"},{"lineNumber":589,"author":{"gitId":"Halpfrog"},"content":"","lastModifiedDate":"2022-03-02"},{"lineNumber":590,"author":{"gitId":"Halpfrog"},"content":"### UC14: Clear database of all Patron\u0027s and Book\u0027s","lastModifiedDate":"2022-03-02"},{"lineNumber":591,"author":{"gitId":"Halpfrog"},"content":"","lastModifiedDate":"2022-03-02"},{"lineNumber":592,"author":{"gitId":"Halpfrog"},"content":"**MSS**","lastModifiedDate":"2022-03-02"},{"lineNumber":593,"author":{"gitId":"Halpfrog"},"content":"","lastModifiedDate":"2022-03-02"},{"lineNumber":594,"author":{"gitId":"Halpfrog"},"content":"1. User requests to clear database","lastModifiedDate":"2022-03-02"},{"lineNumber":595,"author":{"gitId":"Halpfrog"},"content":"","lastModifiedDate":"2022-03-02"},{"lineNumber":596,"author":{"gitId":"Halpfrog"},"content":"2. LibTask clears the database.","lastModifiedDate":"2022-03-02"},{"lineNumber":597,"author":{"gitId":"Halpfrog"},"content":"","lastModifiedDate":"2022-03-02"},{"lineNumber":598,"author":{"gitId":"Halpfrog"},"content":"   Use case ends.","lastModifiedDate":"2022-03-02"},{"lineNumber":599,"author":{"gitId":"Halpfrog"},"content":"","lastModifiedDate":"2022-03-02"},{"lineNumber":600,"author":{"gitId":"Halpfrog"},"content":"Extension","lastModifiedDate":"2022-03-02"},{"lineNumber":601,"author":{"gitId":"Halpfrog"},"content":"","lastModifiedDate":"2022-03-02"},{"lineNumber":602,"author":{"gitId":"Halpfrog"},"content":"* 1a. The database is already empty","lastModifiedDate":"2022-03-02"},{"lineNumber":603,"author":{"gitId":"Halpfrog"},"content":"","lastModifiedDate":"2022-03-02"},{"lineNumber":604,"author":{"gitId":"Halpfrog"},"content":"    * 1a1. LibTask shows an error message","lastModifiedDate":"2022-03-02"},{"lineNumber":605,"author":{"gitId":"Halpfrog"},"content":"","lastModifiedDate":"2022-03-02"},{"lineNumber":606,"author":{"gitId":"Halpfrog"},"content":"      Use case ends","lastModifiedDate":"2022-03-02"},{"lineNumber":607,"author":{"gitId":"Halpfrog"},"content":"","lastModifiedDate":"2022-03-02"},{"lineNumber":608,"author":{"gitId":"Halpfrog"},"content":"### UC15: Show previously run commands","lastModifiedDate":"2022-03-02"},{"lineNumber":609,"author":{"gitId":"Halpfrog"},"content":"","lastModifiedDate":"2022-03-02"},{"lineNumber":610,"author":{"gitId":"Halpfrog"},"content":"**MSS**","lastModifiedDate":"2022-03-02"},{"lineNumber":611,"author":{"gitId":"Halpfrog"},"content":"1. User requests to see previous command","lastModifiedDate":"2022-03-02"},{"lineNumber":612,"author":{"gitId":"Halpfrog"},"content":"","lastModifiedDate":"2022-03-02"},{"lineNumber":613,"author":{"gitId":"Halpfrog"},"content":"2. LibTask shows the last command used","lastModifiedDate":"2022-03-02"},{"lineNumber":614,"author":{"gitId":"Halpfrog"},"content":"","lastModifiedDate":"2022-03-02"},{"lineNumber":615,"author":{"gitId":"Halpfrog"},"content":"   Use case ends.","lastModifiedDate":"2022-03-02"},{"lineNumber":616,"author":{"gitId":"Halpfrog"},"content":"","lastModifiedDate":"2022-03-02"},{"lineNumber":617,"author":{"gitId":"Halpfrog"},"content":"Extension","lastModifiedDate":"2022-03-02"},{"lineNumber":618,"author":{"gitId":"Halpfrog"},"content":"","lastModifiedDate":"2022-03-02"},{"lineNumber":619,"author":{"gitId":"Halpfrog"},"content":"* 1a. No previous command","lastModifiedDate":"2022-03-02"},{"lineNumber":620,"author":{"gitId":"Halpfrog"},"content":"","lastModifiedDate":"2022-03-02"},{"lineNumber":621,"author":{"gitId":"Halpfrog"},"content":"    * 1a1. LibTask shows an empty field","lastModifiedDate":"2022-03-02"},{"lineNumber":622,"author":{"gitId":"Halpfrog"},"content":"","lastModifiedDate":"2022-03-02"},{"lineNumber":623,"author":{"gitId":"Halpfrog"},"content":"      Use case ends.","lastModifiedDate":"2022-03-02"},{"lineNumber":624,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":625,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":626,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":627,"author":{"gitId":"-"},"content":"### Non-Functional Requirements","lastModifiedDate":"2020-05-23"},{"lineNumber":628,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":629,"author":{"gitId":"-"},"content":"1. Should work on any _mainstream OS_ as long as it has Java `11` or above installed.","lastModifiedDate":"2020-05-23"},{"lineNumber":630,"author":{"gitId":"-"},"content":"2. Should be able to hold up to 1000 persons without a noticeable sluggishness in performance for typical usage.","lastModifiedDate":"2020-05-23"},{"lineNumber":631,"author":{"gitId":"-"},"content":"3. A user with above average typing speed for regular English text (i.e. not code, not system admin commands) should be able to accomplish most of the tasks faster using commands than using the mouse.","lastModifiedDate":"2020-05-23"},{"lineNumber":632,"author":{"gitId":"Halpfrog"},"content":"4. A novice with no coding background should be able to use the Lib Task.","lastModifiedDate":"2022-03-02"},{"lineNumber":633,"author":{"gitId":"Halpfrog"},"content":"5. The system should respond in 1 second.","lastModifiedDate":"2022-03-02"},{"lineNumber":634,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":635,"author":{"gitId":"-"},"content":"### Glossary","lastModifiedDate":"2020-05-23"},{"lineNumber":636,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":637,"author":{"gitId":"Halpfrog"},"content":"* **Mainstream OS**: Windows, Linux, Unix, macOS","lastModifiedDate":"2022-03-02"},{"lineNumber":638,"author":{"gitId":"-"},"content":"* **Private contact detail**: A contact detail that is not meant to be shared with others","lastModifiedDate":"2020-05-23"},{"lineNumber":639,"author":{"gitId":"Halpfrog"},"content":"* **Patron**: A user of the library","lastModifiedDate":"2022-03-02"},{"lineNumber":640,"author":{"gitId":"Halpfrog"},"content":"* **ISBN**: An International Standard Book Number 13 digits in length.","lastModifiedDate":"2022-03-02"},{"lineNumber":641,"author":{"gitId":"Halpfrog"},"content":"","lastModifiedDate":"2022-03-02"},{"lineNumber":642,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":643,"author":{"gitId":"-"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2020-05-23"},{"lineNumber":644,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":645,"author":{"gitId":"-"},"content":"## **Appendix: Instructions for manual testing**","lastModifiedDate":"2020-05-23"},{"lineNumber":646,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":647,"author":{"gitId":"-"},"content":"Given below are instructions to test the app manually.","lastModifiedDate":"2020-05-23"},{"lineNumber":648,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":649,"author":{"gitId":"-"},"content":"\u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-info\"\u003e:information_source: **Note:** These instructions only provide a starting point for testers to work on;","lastModifiedDate":"2020-05-23"},{"lineNumber":650,"author":{"gitId":"-"},"content":"testers are expected to do more *exploratory* testing.","lastModifiedDate":"2020-05-23"},{"lineNumber":651,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":652,"author":{"gitId":"-"},"content":"\u003c/div\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":653,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":654,"author":{"gitId":"-"},"content":"### Launch and shutdown","lastModifiedDate":"2020-05-23"},{"lineNumber":655,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":656,"author":{"gitId":"-"},"content":"1. Initial launch","lastModifiedDate":"2020-05-23"},{"lineNumber":657,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":658,"author":{"gitId":"-"},"content":"    1. Download the jar file and copy into an empty folder","lastModifiedDate":"2020-05-23"},{"lineNumber":659,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":660,"author":{"gitId":"-"},"content":"    1. Double-click the jar file Expected: Shows the GUI with a set of sample contacts. The window size may not be optimum.","lastModifiedDate":"2020-05-23"},{"lineNumber":661,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":662,"author":{"gitId":"-"},"content":"1. Saving window preferences","lastModifiedDate":"2020-05-23"},{"lineNumber":663,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":664,"author":{"gitId":"-"},"content":"    1. Resize the window to an optimum size. Move the window to a different location. Close the window.","lastModifiedDate":"2020-05-23"},{"lineNumber":665,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":666,"author":{"gitId":"-"},"content":"    1. Re-launch the app by double-clicking the jar file.\u003cbr\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":667,"author":{"gitId":"-"},"content":"       Expected: The most recent window size and location is retained.","lastModifiedDate":"2020-05-23"},{"lineNumber":668,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":669,"author":{"gitId":"-"},"content":"1. _{ more test cases …​ }_","lastModifiedDate":"2020-05-23"},{"lineNumber":670,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":671,"author":{"gitId":"-"},"content":"### Deleting a person","lastModifiedDate":"2020-05-23"},{"lineNumber":672,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":673,"author":{"gitId":"-"},"content":"1. Deleting a person while all persons are being shown","lastModifiedDate":"2020-05-23"},{"lineNumber":674,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":675,"author":{"gitId":"-"},"content":"    1. Prerequisites: List all persons using the `list` command. Multiple persons in the list.","lastModifiedDate":"2020-05-23"},{"lineNumber":676,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":677,"author":{"gitId":"-"},"content":"    1. Test case: `delete 1`\u003cbr\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":678,"author":{"gitId":"-"},"content":"       Expected: First contact is deleted from the list. Details of the deleted contact shown in the status message. Timestamp in the status bar is updated.","lastModifiedDate":"2020-05-23"},{"lineNumber":679,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":680,"author":{"gitId":"-"},"content":"    1. Test case: `delete 0`\u003cbr\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":681,"author":{"gitId":"-"},"content":"       Expected: No person is deleted. Error details shown in the status message. Status bar remains the same.","lastModifiedDate":"2020-05-23"},{"lineNumber":682,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":683,"author":{"gitId":"-"},"content":"    1. Other incorrect delete commands to try: `delete`, `delete x`, `...` (where x is larger than the list size)\u003cbr\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":684,"author":{"gitId":"-"},"content":"       Expected: Similar to previous.","lastModifiedDate":"2020-05-23"},{"lineNumber":685,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":686,"author":{"gitId":"-"},"content":"1. _{ more test cases …​ }_","lastModifiedDate":"2020-05-23"},{"lineNumber":687,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":688,"author":{"gitId":"-"},"content":"### Saving data","lastModifiedDate":"2020-05-23"},{"lineNumber":689,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":690,"author":{"gitId":"-"},"content":"1. Dealing with missing/corrupted data files","lastModifiedDate":"2020-05-23"},{"lineNumber":691,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":692,"author":{"gitId":"-"},"content":"    1. _{explain how to simulate a missing/corrupted file, and the expected behavior}_","lastModifiedDate":"2020-05-23"},{"lineNumber":693,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":694,"author":{"gitId":"-"},"content":"1. _{ more test cases …​ }_","lastModifiedDate":"2020-05-23"}],"authorContributionMap":{"yl-ang":5,"yuqitanyq":34,"-":365,"Halpfrog":290}},{"path":"docs/UserGuide.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"---","lastModifiedDate":"2020-05-23"},{"lineNumber":2,"author":{"gitId":"-"},"content":"layout: page","lastModifiedDate":"2020-05-23"},{"lineNumber":3,"author":{"gitId":"-"},"content":"title: User Guide","lastModifiedDate":"2020-05-23"},{"lineNumber":4,"author":{"gitId":"-"},"content":"---","lastModifiedDate":"2020-05-23"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":6,"author":{"gitId":"yl-ang"},"content":"LibTask is a **desktop application for librarians to manage book loans and requests by patrons, optimized for use via a Command Line Interface (CLI)** while still having the benefits of a Graphical User Interface (GUI). If you can type fast, AB3 can get your book tracking tasks done faster than traditional GUI apps. ","lastModifiedDate":"2022-02-24"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":8,"author":{"gitId":"-"},"content":"* Table of Contents","lastModifiedDate":"2020-05-23"},{"lineNumber":9,"author":{"gitId":"-"},"content":"{:toc}","lastModifiedDate":"2020-05-23"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":11,"author":{"gitId":"-"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2020-05-23"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":13,"author":{"gitId":"yl-ang"},"content":"## Introduction","lastModifiedDate":"2022-03-07"},{"lineNumber":14,"author":{"gitId":"yl-ang"},"content":"","lastModifiedDate":"2022-02-24"},{"lineNumber":15,"author":{"gitId":"yl-ang"},"content":"As a school librarian of a large library, you may already have your own desktop library software. However, existing library softwares are GUI-based and slow to work with. If you prefer to work with CLI commands efficiently while still having the benefits of aesthetic displays, then LibTask is designed just for you! LibTask provides you with a well packaged system of commands for managing book loans and book requests by your patrons. Using LibTask, you can quickly process borrowing and returning books, and view different groups of patrons and books to perform tasks such as notifying patrons with overdue books. The system also maintains two independent lists of books and patrons, allowing you to perform queries more efficiently.","lastModifiedDate":"2022-02-24"},{"lineNumber":16,"author":{"gitId":"yl-ang"},"content":"","lastModifiedDate":"2022-02-24"},{"lineNumber":17,"author":{"gitId":"yl-ang"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2022-02-24"},{"lineNumber":18,"author":{"gitId":"yl-ang"},"content":"","lastModifiedDate":"2022-02-24"},{"lineNumber":19,"author":{"gitId":"-"},"content":"## Quick start","lastModifiedDate":"2022-03-07"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":21,"author":{"gitId":"-"},"content":"1. Ensure you have Java `11` or above installed in your Computer.","lastModifiedDate":"2020-05-23"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":23,"author":{"gitId":"yl-ang"},"content":"1. Download the latest `libtask.jar` from [here](https://github.com/AY2122S2-CS2103T-W14-1/tp/releases).","lastModifiedDate":"2022-02-24"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":25,"author":{"gitId":"yl-ang"},"content":"1. Copy the file to the folder you want to use as the _home folder_ for your LibTask.","lastModifiedDate":"2022-02-24"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":27,"author":{"gitId":"yl-ang"},"content":"1. Double-click the file to start the app. The GUI similar to the below should appear in a few seconds.\u003cbr\u003e","lastModifiedDate":"2022-02-24"},{"lineNumber":28,"author":{"gitId":"-"},"content":"   ![Ui](images/Ui.png)","lastModifiedDate":"2020-05-23"},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":30,"author":{"gitId":"-"},"content":"1. Type the command in the command box and press Enter to execute it. e.g. typing **`help`** and pressing Enter will open the help window.\u003cbr\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":31,"author":{"gitId":"-"},"content":"   Some example commands you can try:","lastModifiedDate":"2020-05-23"},{"lineNumber":32,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":33,"author":{"gitId":"yl-ang"},"content":"   * **`patron list`** : Lists all the patrons in libTask.","lastModifiedDate":"2022-02-24"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-02-24"},{"lineNumber":35,"author":{"gitId":"yl-ang"},"content":"   * **`patron add`**`n/Alice s/S01823283S p/90123212 e/profA@u.nus.edu ` : Adds a patron named `Alice` into LibTask.","lastModifiedDate":"2022-02-24"},{"lineNumber":36,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-02-24"},{"lineNumber":37,"author":{"gitId":"yl-ang"},"content":"   * **`patron delete`**`3` : Deletes the 3rd patron shown in the current patron list.","lastModifiedDate":"2022-02-24"},{"lineNumber":38,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":39,"author":{"gitId":"yl-ang"},"content":"   * **`book add`**` n/Harry Potter i/12398-12398-239 a/J.K.Rowling t/Thriller t/Magic`: Adds a book titled `Harry Potter`.","lastModifiedDate":"2022-02-24"},{"lineNumber":40,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":41,"author":{"gitId":"yl-ang"},"content":"   * **`book list`** : Lists all the books in libTask.","lastModifiedDate":"2022-02-24"},{"lineNumber":42,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":43,"author":{"gitId":"yl-ang"},"content":"   * **`book delete`**`1` : Deletes the 1st book shown in the current book list.","lastModifiedDate":"2022-02-24"},{"lineNumber":44,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":45,"author":{"gitId":"yl-ang"},"content":"   * **`exit`** : Exits libTask.","lastModifiedDate":"2022-02-24"},{"lineNumber":46,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":47,"author":{"gitId":"-"},"content":"1. Refer to the [Features](#features) below for details of each command.","lastModifiedDate":"2020-05-23"},{"lineNumber":48,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":49,"author":{"gitId":"-"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2020-05-23"},{"lineNumber":50,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":51,"author":{"gitId":"-"},"content":"## Features","lastModifiedDate":"2020-05-23"},{"lineNumber":52,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":53,"author":{"gitId":"-"},"content":"\u003cdiv markdown\u003d\"block\" class\u003d\"alert alert-info\"\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":54,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":55,"author":{"gitId":"-"},"content":"**:information_source: Notes about the command format:**\u003cbr\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":56,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":57,"author":{"gitId":"-"},"content":"* Words in `UPPER_CASE` are the parameters to be supplied by the user.\u003cbr\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":58,"author":{"gitId":"-"},"content":"  e.g. in `add n/NAME`, `NAME` is a parameter which can be used as `add n/John Doe`.","lastModifiedDate":"2020-05-23"},{"lineNumber":59,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":60,"author":{"gitId":"-"},"content":"* Items in square brackets are optional.\u003cbr\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":61,"author":{"gitId":"-"},"content":"  e.g `n/NAME [t/TAG]` can be used as `n/John Doe t/friend` or as `n/John Doe`.","lastModifiedDate":"2020-05-23"},{"lineNumber":62,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":63,"author":{"gitId":"-"},"content":"* Items with `…`​ after them can be used multiple times including zero times.\u003cbr\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":64,"author":{"gitId":"-"},"content":"  e.g. `[t/TAG]…​` can be used as ` ` (i.e. 0 times), `t/friend`, `t/friend t/family` etc.","lastModifiedDate":"2020-05-23"},{"lineNumber":65,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":66,"author":{"gitId":"-"},"content":"* Parameters can be in any order.\u003cbr\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":67,"author":{"gitId":"-"},"content":"  e.g. if the command specifies `n/NAME p/PHONE_NUMBER`, `p/PHONE_NUMBER n/NAME` is also acceptable.","lastModifiedDate":"2020-05-23"},{"lineNumber":68,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":69,"author":{"gitId":"-"},"content":"* If a parameter is expected only once in the command but you specified it multiple times, only the last occurrence of the parameter will be taken.\u003cbr\u003e","lastModifiedDate":"2021-02-04"},{"lineNumber":70,"author":{"gitId":"-"},"content":"  e.g. if you specify `p/12341234 p/56785678`, only `p/56785678` will be taken.","lastModifiedDate":"2021-02-04"},{"lineNumber":71,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-02-04"},{"lineNumber":72,"author":{"gitId":"-"},"content":"* Extraneous parameters for commands that do not take in parameters (such as `help`, `list`, `exit` and `clear`) will be ignored.\u003cbr\u003e","lastModifiedDate":"2021-02-03"},{"lineNumber":73,"author":{"gitId":"-"},"content":"  e.g. if the command specifies `help 123`, it will be interpreted as `help`.","lastModifiedDate":"2021-02-03"},{"lineNumber":74,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-02-03"},{"lineNumber":75,"author":{"gitId":"-"},"content":"\u003c/div\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":76,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":77,"author":{"gitId":"-"},"content":"### Viewing help : `help`","lastModifiedDate":"2020-05-23"},{"lineNumber":78,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":79,"author":{"gitId":"-"},"content":"Shows a message explaning how to access the help page.","lastModifiedDate":"2020-05-23"},{"lineNumber":80,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":81,"author":{"gitId":"-"},"content":"![help message](images/helpMessage.png)","lastModifiedDate":"2020-05-23"},{"lineNumber":82,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":83,"author":{"gitId":"-"},"content":"Format: `help`","lastModifiedDate":"2020-05-23"},{"lineNumber":84,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":85,"author":{"gitId":"aditi2313"},"content":"### Adding a patron: `add`","lastModifiedDate":"2022-03-01"},{"lineNumber":86,"author":{"gitId":"aditi2313"},"content":"Adds a patron to the library database.","lastModifiedDate":"2022-03-01"},{"lineNumber":87,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":88,"author":{"gitId":"aditi2313"},"content":"Format: `patron add n/NAME s/ID p/PHONE e/EMAIL [t/TAG]…​`","lastModifiedDate":"2022-03-01"},{"lineNumber":89,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":90,"author":{"gitId":"-"},"content":"\u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-primary\"\u003e:bulb: **Tip:**","lastModifiedDate":"2020-05-23"},{"lineNumber":91,"author":{"gitId":"aditi2313"},"content":"A patron can have any number of tags (including 0)","lastModifiedDate":"2022-03-01"},{"lineNumber":92,"author":{"gitId":"-"},"content":"\u003c/div\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":93,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":94,"author":{"gitId":"-"},"content":"Examples:","lastModifiedDate":"2020-05-23"},{"lineNumber":95,"author":{"gitId":"aditi2313"},"content":"* `patron add n/John s/A02128282A p/93231222 e/e03482@u.nus.edu t/student`","lastModifiedDate":"2022-03-01"},{"lineNumber":96,"author":{"gitId":"aditi2313"},"content":"* `patron add n/Alice s/S01823283S p/90123212 e/profA@u.nus.edu`","lastModifiedDate":"2022-03-01"},{"lineNumber":97,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":98,"author":{"gitId":"aditi2313"},"content":"### Listing all patrons : `list`","lastModifiedDate":"2022-03-01"},{"lineNumber":99,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":100,"author":{"gitId":"aditi2313"},"content":"Shows a list of all patrons in the database.","lastModifiedDate":"2022-03-01"},{"lineNumber":101,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":102,"author":{"gitId":"aditi2313"},"content":"Format: `patron list`","lastModifiedDate":"2022-03-01"},{"lineNumber":103,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":104,"author":{"gitId":"aditi2313"},"content":"### Editing a patron : `edit`","lastModifiedDate":"2022-03-01"},{"lineNumber":105,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":106,"author":{"gitId":"aditi2313"},"content":"Edits a patron at a specified index of the displayed patron list.","lastModifiedDate":"2022-03-01"},{"lineNumber":107,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":108,"author":{"gitId":"aditi2313"},"content":"Format: `patron edit INDEX [n/NAME] [s/ID] [p/PHONE] [e/EMAIL] [t/TAG]…​`","lastModifiedDate":"2022-03-01"},{"lineNumber":109,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":110,"author":{"gitId":"aditi2313"},"content":"* Edits the patron at the specified `INDEX`. The index refers to the index number shown in the displayed patron list. The index **must be a positive integer** 1, 2, 3, …​","lastModifiedDate":"2022-03-01"},{"lineNumber":111,"author":{"gitId":"-"},"content":"* At least one of the optional fields must be provided.","lastModifiedDate":"2020-05-23"},{"lineNumber":112,"author":{"gitId":"-"},"content":"* Existing values will be updated to the input values.","lastModifiedDate":"2020-05-23"},{"lineNumber":113,"author":{"gitId":"aditi2313"},"content":"* When editing tags, the existing tags of the patron will be removed i.e. adding of tags is not cumulative.","lastModifiedDate":"2022-03-01"},{"lineNumber":114,"author":{"gitId":"aditi2313"},"content":"* You can remove all the patron’s tags by typing `t/` without","lastModifiedDate":"2022-03-01"},{"lineNumber":115,"author":{"gitId":"-"},"content":"    specifying any tags after it.","lastModifiedDate":"2020-05-23"},{"lineNumber":116,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":117,"author":{"gitId":"-"},"content":"Examples:","lastModifiedDate":"2020-05-23"},{"lineNumber":118,"author":{"gitId":"aditi2313"},"content":"* `patron edit 1 n/John Cena p/91959491 e/johncena@u.nus.edu` Edits the name, phone number and email address of the 1st patron to be `John Cena`, `91959491` and `johncena@u.nus.edu` respectively.","lastModifiedDate":"2022-03-01"},{"lineNumber":119,"author":{"gitId":"aditi2313"},"content":"* `patron edit 2 n/Alice t/Professor t/Horror ` Edits the name of the 2nd patron to be `Alice` and changes tags to `Professor` and `Horror`.","lastModifiedDate":"2022-03-01"},{"lineNumber":120,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":121,"author":{"gitId":"aditi2313"},"content":"### Finding a patron by name: `find`","lastModifiedDate":"2022-03-01"},{"lineNumber":122,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":123,"author":{"gitId":"aditi2313"},"content":"Finds all patrons with names matching the given keywords in the database.","lastModifiedDate":"2022-03-01"},{"lineNumber":124,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":125,"author":{"gitId":"aditi2313"},"content":"Format: `patron find n/KEYWORD [n/KEYWORD]…​`","lastModifiedDate":"2022-03-01"},{"lineNumber":126,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":127,"author":{"gitId":"aditi2313"},"content":"* The search is case-insensitive. e.g. `hans` will match `Hans`","lastModifiedDate":"2022-03-01"},{"lineNumber":128,"author":{"gitId":"-"},"content":"* The order of the keywords does not matter. e.g. `Hans Bo` will match `Bo Hans`","lastModifiedDate":"2020-05-23"},{"lineNumber":129,"author":{"gitId":"-"},"content":"* Only the name is searched.","lastModifiedDate":"2020-05-23"},{"lineNumber":130,"author":{"gitId":"-"},"content":"* Only full words will be matched e.g. `Han` will not match `Hans`","lastModifiedDate":"2020-05-23"},{"lineNumber":131,"author":{"gitId":"aditi2313"},"content":"* Patrons matching at least one keyword will be returned (i.e. `OR` search).","lastModifiedDate":"2022-03-01"},{"lineNumber":132,"author":{"gitId":"-"},"content":"  e.g. `Hans Bo` will return `Hans Gruber`, `Bo Yang`","lastModifiedDate":"2020-05-23"},{"lineNumber":133,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":134,"author":{"gitId":"aditi2313"},"content":"Example:","lastModifiedDate":"2022-03-01"},{"lineNumber":135,"author":{"gitId":"aditi2313"},"content":"","lastModifiedDate":"2022-03-01"},{"lineNumber":136,"author":{"gitId":"aditi2313"},"content":"`patron find n/alex n/david` returns `Alex Yeoh`, `David Li`\u003cbr\u003e","lastModifiedDate":"2022-03-01"},{"lineNumber":137,"author":{"gitId":"aditi2313"},"content":"","lastModifiedDate":"2022-03-01"},{"lineNumber":138,"author":{"gitId":"-"},"content":"  ![result for \u0027find alex david\u0027](images/findAlexDavidResult.png)","lastModifiedDate":"2020-05-23"},{"lineNumber":139,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":140,"author":{"gitId":"aditi2313"},"content":"### Deleting a patron : `delete`","lastModifiedDate":"2022-03-01"},{"lineNumber":141,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":142,"author":{"gitId":"aditi2313"},"content":"Delete a patron from the system at a specified index of the displayed patron list.","lastModifiedDate":"2022-03-01"},{"lineNumber":143,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":144,"author":{"gitId":"aditi2313"},"content":"Format: `patron delete INDEX`","lastModifiedDate":"2022-03-01"},{"lineNumber":145,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":146,"author":{"gitId":"aditi2313"},"content":"* Deletes the patron at the specified `INDEX`.","lastModifiedDate":"2022-03-01"},{"lineNumber":147,"author":{"gitId":"aditi2313"},"content":"* The index refers to the index number shown in the displayed patron list.","lastModifiedDate":"2022-03-01"},{"lineNumber":148,"author":{"gitId":"-"},"content":"* The index **must be a positive integer** 1, 2, 3, …​","lastModifiedDate":"2020-05-23"},{"lineNumber":149,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":150,"author":{"gitId":"-"},"content":"Examples:","lastModifiedDate":"2020-05-23"},{"lineNumber":151,"author":{"gitId":"aditi2313"},"content":"* `patron list` followed by `patron delete 2` deletes the 2nd patron in the patron list.","lastModifiedDate":"2022-03-01"},{"lineNumber":152,"author":{"gitId":"aditi2313"},"content":"* `patron find n/Betsy` followed by `patron delete 1` deletes the 1st person in the results of the `find` command.","lastModifiedDate":"2022-03-01"},{"lineNumber":153,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":154,"author":{"gitId":"bingsen0806"},"content":"### Adding a book: `add`","lastModifiedDate":"2022-03-01"},{"lineNumber":155,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":156,"author":{"gitId":"bingsen0806"},"content":"Adds a book to LibTask database.","lastModifiedDate":"2022-03-01"},{"lineNumber":157,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":158,"author":{"gitId":"bingsen0806"},"content":"Format: `book add n/NAME i/ISBN [a/AUTHOR …] [t/CATEGORY_TAG …] `","lastModifiedDate":"2022-03-01"},{"lineNumber":159,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":160,"author":{"gitId":"-"},"content":"\u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-primary\"\u003e:bulb: **Tip:**","lastModifiedDate":"2020-05-23"},{"lineNumber":161,"author":{"gitId":"bingsen0806"},"content":"* ISBN must be 10 or 13 digits in length","lastModifiedDate":"2022-03-01"},{"lineNumber":162,"author":{"gitId":"-"},"content":"\u003c/div\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":163,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":164,"author":{"gitId":"-"},"content":"Examples:","lastModifiedDate":"2020-05-23"},{"lineNumber":165,"author":{"gitId":"bingsen0806"},"content":"* `book add n/Harry Potter i/978-7-783828-15-1 a/J.K.Rowling t/Thriller t/Magic`","lastModifiedDate":"2022-03-01"},{"lineNumber":166,"author":{"gitId":"bingsen0806"},"content":"* `book add n/Heads You Lose i/979-381-26-8943-3 a/Lisa Lutz a/David Hayward`","lastModifiedDate":"2022-03-01"},{"lineNumber":167,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":168,"author":{"gitId":"bingsen0806"},"content":"### Listing all books : `list`","lastModifiedDate":"2022-03-01"},{"lineNumber":169,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":170,"author":{"gitId":"bingsen0806"},"content":"List all books in LibTask database.","lastModifiedDate":"2022-03-01"},{"lineNumber":171,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":172,"author":{"gitId":"bingsen0806"},"content":"Format: `book list`","lastModifiedDate":"2022-03-01"},{"lineNumber":173,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":174,"author":{"gitId":"bingsen0806"},"content":"### Editing a book : `edit`","lastModifiedDate":"2022-03-01"},{"lineNumber":175,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":176,"author":{"gitId":"bingsen0806"},"content":"Edit details of the book at the specified index.","lastModifiedDate":"2022-03-01"},{"lineNumber":177,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":178,"author":{"gitId":"bingsen0806"},"content":"Format: `book edit INDEX [n/NAME] [i/ISBN] [a/AUTHOR …] [t/CATEGORY_TAG …]`","lastModifiedDate":"2022-03-01"},{"lineNumber":179,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":180,"author":{"gitId":"bingsen0806"},"content":"* Edits the book at the specified `INDEX`. The index refers to the index number shown in the displayed book list. The index **must be a positive integer** 1, 2, 3, … and smaller than or equal to the number of books in the displayed list.","lastModifiedDate":"2022-03-01"},{"lineNumber":181,"author":{"gitId":"-"},"content":"* At least one of the optional fields must be provided.","lastModifiedDate":"2020-05-23"},{"lineNumber":182,"author":{"gitId":"-"},"content":"* Existing values will be updated to the input values.","lastModifiedDate":"2020-05-23"},{"lineNumber":183,"author":{"gitId":"bingsen0806"},"content":"* When editing tags or authors, the existing tags or authors of the book will be removed i.e. adding of tags and authors is not cumulative.","lastModifiedDate":"2022-03-01"},{"lineNumber":184,"author":{"gitId":"bingsen0806"},"content":"* You can remove all the book’s authors and tags by typing `a/` or `t/` respectively without","lastModifiedDate":"2022-03-01"},{"lineNumber":185,"author":{"gitId":"-"},"content":"    specifying any tags after it.","lastModifiedDate":"2020-05-23"},{"lineNumber":186,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":187,"author":{"gitId":"-"},"content":"Examples:","lastModifiedDate":"2020-05-23"},{"lineNumber":188,"author":{"gitId":"bingsen0806"},"content":"*  `book edit 1 n/Harry Potter: Sorcerer\u0027s Stone t/Adventure` Edits the name of the 1st book to be `Harry Potter: Sorceror\u0027s Stone` and edit its category tag to be `Adventure`.","lastModifiedDate":"2022-03-01"},{"lineNumber":189,"author":{"gitId":"bingsen0806"},"content":"*  `book edit 2 i/978-79317-3-542-3 a/Another Rowling t/` Edits the ISBN of the 2nd book to be `978-79317-3-542-3`, changes the author to `Another Rowling` and clears all existing tags.","lastModifiedDate":"2022-03-01"},{"lineNumber":190,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":191,"author":{"gitId":"bingsen0806"},"content":"### Deleting a book : `delete`","lastModifiedDate":"2022-03-01"},{"lineNumber":192,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":193,"author":{"gitId":"bingsen0806"},"content":"Deletes the book at the specified index.","lastModifiedDate":"2022-03-01"},{"lineNumber":194,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":195,"author":{"gitId":"bingsen0806"},"content":"Format: `book delete INDEX`","lastModifiedDate":"2022-03-01"},{"lineNumber":196,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":197,"author":{"gitId":"bingsen0806"},"content":"* Deletes the book at the specified `INDEX`.","lastModifiedDate":"2022-03-01"},{"lineNumber":198,"author":{"gitId":"bingsen0806"},"content":"* The index refers to the index number shown in the displayed book list.","lastModifiedDate":"2022-03-01"},{"lineNumber":199,"author":{"gitId":"bingsen0806"},"content":"* The index **must be a positive integer** 1, 2, 3, … and smaller than or equal to the number of books in the displayed list.","lastModifiedDate":"2022-03-01"},{"lineNumber":200,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":201,"author":{"gitId":"-"},"content":"Examples:","lastModifiedDate":"2020-05-23"},{"lineNumber":202,"author":{"gitId":"bingsen0806"},"content":"* `book list` followed by `book delete 2` deletes the 2nd book from LibTask\u0027s database.","lastModifiedDate":"2022-03-01"},{"lineNumber":203,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":204,"author":{"gitId":"bingsen0806"},"content":"### Borrowing a book : `borrow`","lastModifiedDate":"2022-03-01"},{"lineNumber":205,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":206,"author":{"gitId":"bingsen0806"},"content":"Establishes a relationship that patron at index INDEX1 borrows a book at index INDEX2.","lastModifiedDate":"2022-03-01"},{"lineNumber":207,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":208,"author":{"gitId":"bingsen0806"},"content":"Format: `borrow INDEX1 INDEX2`","lastModifiedDate":"2022-03-01"},{"lineNumber":209,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":210,"author":{"gitId":"bingsen0806"},"content":"* `INDEX1` refers to the index number shown in the displayed patron list.","lastModifiedDate":"2022-03-01"},{"lineNumber":211,"author":{"gitId":"bingsen0806"},"content":"* `INDEX2` refers to the index number shown in the displayed book list.","lastModifiedDate":"2022-03-01"},{"lineNumber":212,"author":{"gitId":"bingsen0806"},"content":"* `INDEX1` **must be a positive integer** 1, 2, 3, … and smaller than or equal to the number of patrons in the displayed list.","lastModifiedDate":"2022-03-01"},{"lineNumber":213,"author":{"gitId":"bingsen0806"},"content":"* `INDEX2` **must be a positive integer** 1, 2, 3, … and smaller than or equal to the number of books in the displayed list.","lastModifiedDate":"2022-03-01"},{"lineNumber":214,"author":{"gitId":"bingsen0806"},"content":"* The book at `INDEX2` must not be already borrowed.","lastModifiedDate":"2022-03-01"},{"lineNumber":215,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":216,"author":{"gitId":"-"},"content":"Examples:","lastModifiedDate":"2020-05-23"},{"lineNumber":217,"author":{"gitId":"bingsen0806"},"content":"* `patron list` and `book list` followed by `borrow 2 3` establishes a relationship that the 2nd patron borrows the 3rd book.","lastModifiedDate":"2022-03-01"},{"lineNumber":218,"author":{"gitId":"bingsen0806"},"content":"","lastModifiedDate":"2022-03-01"},{"lineNumber":219,"author":{"gitId":"bingsen0806"},"content":"### Returning a book : `return`","lastModifiedDate":"2022-03-01"},{"lineNumber":220,"author":{"gitId":"bingsen0806"},"content":"","lastModifiedDate":"2022-03-01"},{"lineNumber":221,"author":{"gitId":"bingsen0806"},"content":"Depending on the exact command, return all books borrowed by a patron at the specified index, or return a book at the specified index.","lastModifiedDate":"2022-03-01"},{"lineNumber":222,"author":{"gitId":"bingsen0806"},"content":"","lastModifiedDate":"2022-03-01"},{"lineNumber":223,"author":{"gitId":"bingsen0806"},"content":"Format: `return PREFIX/INDEX`","lastModifiedDate":"2022-03-01"},{"lineNumber":224,"author":{"gitId":"bingsen0806"},"content":"","lastModifiedDate":"2022-03-01"},{"lineNumber":225,"author":{"gitId":"bingsen0806"},"content":"* `PREFIX` must be either `p` for patrons or `b` for books.","lastModifiedDate":"2022-03-01"},{"lineNumber":226,"author":{"gitId":"bingsen0806"},"content":"* If `PREFIX` is `p`, `INDEX` refers to the index number shown in the displayed patron list.","lastModifiedDate":"2022-03-01"},{"lineNumber":227,"author":{"gitId":"bingsen0806"},"content":"* If `PREFIX` is `b`, `INDEX` refers to the index number shown in the displayed book list.","lastModifiedDate":"2022-03-01"},{"lineNumber":228,"author":{"gitId":"bingsen0806"},"content":"* `INDEX` **must be a positive integer** 1, 2, 3, … and smaller than or equal to the number of patrons or books in the displayed list.","lastModifiedDate":"2022-03-01"},{"lineNumber":229,"author":{"gitId":"bingsen0806"},"content":"* If the book at index `INDEX` is not borrowed, or if the patron at index `INDEX` does not borrow any books, nothing happens.","lastModifiedDate":"2022-03-01"},{"lineNumber":230,"author":{"gitId":"bingsen0806"},"content":"","lastModifiedDate":"2022-03-01"},{"lineNumber":231,"author":{"gitId":"bingsen0806"},"content":"Examples:","lastModifiedDate":"2022-03-01"},{"lineNumber":232,"author":{"gitId":"bingsen0806"},"content":"* `patron list` followed by `return p/3` will return all books borrowed by the 3rd patron, if any.","lastModifiedDate":"2022-03-01"},{"lineNumber":233,"author":{"gitId":"bingsen0806"},"content":"* `book list` followed by `return b/2` will return the 2nd book, if it is borrowed.","lastModifiedDate":"2022-03-01"},{"lineNumber":234,"author":{"gitId":"bingsen0806"},"content":"","lastModifiedDate":"2022-03-01"},{"lineNumber":235,"author":{"gitId":"bingsen0806"},"content":"### Requesting a book : `request`","lastModifiedDate":"2022-03-01"},{"lineNumber":236,"author":{"gitId":"bingsen0806"},"content":"","lastModifiedDate":"2022-03-01"},{"lineNumber":237,"author":{"gitId":"bingsen0806"},"content":"Establishes a relationship that patron at index INDEX1 is requesting to be notified when the book at index INDEX2 is available.","lastModifiedDate":"2022-03-01"},{"lineNumber":238,"author":{"gitId":"bingsen0806"},"content":"","lastModifiedDate":"2022-03-01"},{"lineNumber":239,"author":{"gitId":"bingsen0806"},"content":"Format: `request INDEX1 INDEX2`","lastModifiedDate":"2022-03-01"},{"lineNumber":240,"author":{"gitId":"bingsen0806"},"content":"","lastModifiedDate":"2022-03-01"},{"lineNumber":241,"author":{"gitId":"bingsen0806"},"content":"* `INDEX1` **must be a positive integer** 1, 2, 3, … and smaller than or equal to the number of patrons in the displayed list.","lastModifiedDate":"2022-03-01"},{"lineNumber":242,"author":{"gitId":"bingsen0806"},"content":"* `INDEX2` **must be a positive integer** 1, 2, 3, … and smaller than or equal to the number of books in the displayed list.","lastModifiedDate":"2022-03-01"},{"lineNumber":243,"author":{"gitId":"bingsen0806"},"content":"* If the book at index `INDEX2` is currently available, a message will be displayed.","lastModifiedDate":"2022-03-01"},{"lineNumber":244,"author":{"gitId":"bingsen0806"},"content":"","lastModifiedDate":"2022-03-01"},{"lineNumber":245,"author":{"gitId":"bingsen0806"},"content":"Examples:","lastModifiedDate":"2022-03-01"},{"lineNumber":246,"author":{"gitId":"bingsen0806"},"content":"* `patron list` and `book list` followed by `request 1 2` keeps a record that the 1st patron would like to be notified when the 2nd book is available.","lastModifiedDate":"2022-03-01"},{"lineNumber":247,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":248,"author":{"gitId":"-"},"content":"### Clearing all entries : `clear`","lastModifiedDate":"2020-05-23"},{"lineNumber":249,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":250,"author":{"gitId":"-"},"content":"Clears all entries from the address book.","lastModifiedDate":"2020-05-23"},{"lineNumber":251,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":252,"author":{"gitId":"-"},"content":"Format: `clear`","lastModifiedDate":"2020-05-23"},{"lineNumber":253,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":254,"author":{"gitId":"-"},"content":"### Exiting the program : `exit`","lastModifiedDate":"2020-05-23"},{"lineNumber":255,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":256,"author":{"gitId":"-"},"content":"Exits the program.","lastModifiedDate":"2020-05-23"},{"lineNumber":257,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":258,"author":{"gitId":"-"},"content":"Format: `exit`","lastModifiedDate":"2020-05-23"},{"lineNumber":259,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":260,"author":{"gitId":"-"},"content":"### Saving the data","lastModifiedDate":"2020-05-23"},{"lineNumber":261,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":262,"author":{"gitId":"-"},"content":"AddressBook data are saved in the hard disk automatically after any command that changes the data. There is no need to save manually.","lastModifiedDate":"2020-05-23"},{"lineNumber":263,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":264,"author":{"gitId":"-"},"content":"### Editing the data file","lastModifiedDate":"2021-02-04"},{"lineNumber":265,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-02-04"},{"lineNumber":266,"author":{"gitId":"-"},"content":"AddressBook data are saved as a JSON file `[JAR file location]/data/addressbook.json`. Advanced users are welcome to update data directly by editing that data file.","lastModifiedDate":"2021-02-04"},{"lineNumber":267,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-02-04"},{"lineNumber":268,"author":{"gitId":"-"},"content":"\u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-warning\"\u003e:exclamation: **Caution:**","lastModifiedDate":"2021-02-04"},{"lineNumber":269,"author":{"gitId":"-"},"content":"If your changes to the data file makes its format invalid, AddressBook will discard all data and start with an empty data file at the next run.","lastModifiedDate":"2021-02-04"},{"lineNumber":270,"author":{"gitId":"-"},"content":"\u003c/div\u003e","lastModifiedDate":"2021-02-04"},{"lineNumber":271,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-02-04"},{"lineNumber":272,"author":{"gitId":"-"},"content":"### Archiving data files `[coming in v2.0]`","lastModifiedDate":"2020-05-23"},{"lineNumber":273,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":274,"author":{"gitId":"-"},"content":"_Details coming soon ..._","lastModifiedDate":"2021-02-04"},{"lineNumber":275,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":276,"author":{"gitId":"-"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2020-05-23"},{"lineNumber":277,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":278,"author":{"gitId":"-"},"content":"## FAQ","lastModifiedDate":"2020-05-23"},{"lineNumber":279,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":280,"author":{"gitId":"yuqitanyq"},"content":"**Q**: How does this app help current librarians?\u003cbr\u003e","lastModifiedDate":"2022-02-24"},{"lineNumber":281,"author":{"gitId":"yuqitanyq"},"content":"**A**: The app helps librarians manage the statuses of books borrowed and borrowers.","lastModifiedDate":"2022-02-24"},{"lineNumber":282,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":283,"author":{"gitId":"-"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2020-05-23"},{"lineNumber":284,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":285,"author":{"gitId":"-"},"content":"## Command summary","lastModifiedDate":"2020-05-23"},{"lineNumber":286,"author":{"gitId":"yuqitanyq"},"content":"### Category: Patron Commands","lastModifiedDate":"2022-02-27"},{"lineNumber":287,"author":{"gitId":"yuqitanyq"},"content":"","lastModifiedDate":"2022-03-06"},{"lineNumber":288,"author":{"gitId":"yuqitanyq"},"content":"| Function             | Format Of Command                                                 |","lastModifiedDate":"2022-03-06"},{"lineNumber":289,"author":{"gitId":"yuqitanyq"},"content":"|----------------------|-------------------------------------------------------------------|","lastModifiedDate":"2022-03-06"},{"lineNumber":290,"author":{"gitId":"yuqitanyq"},"content":"| **Add a new patron** | `patron add n/NAME s/ID p/PHONE e/EMAIL [t/TAG]…​`                |","lastModifiedDate":"2022-03-06"},{"lineNumber":291,"author":{"gitId":"yuqitanyq"},"content":"| **List all patrons** | `patron list`                                                     |","lastModifiedDate":"2022-03-06"},{"lineNumber":292,"author":{"gitId":"yuqitanyq"},"content":"| **Edit a patron**    | `patron edit INDEX [n/NAME] [s/ID] [p/PHONE] [e/EMAIL] [t/TAG]…​` |","lastModifiedDate":"2022-03-06"},{"lineNumber":293,"author":{"gitId":"yuqitanyq"},"content":"| **Find a patron**    | `patron find n/KEYWORD [n/KEYWORD]…​`                             |","lastModifiedDate":"2022-03-06"},{"lineNumber":294,"author":{"gitId":"yuqitanyq"},"content":"| **Delete a patron**  | `patron delete INDEX`                                             |","lastModifiedDate":"2022-03-06"},{"lineNumber":295,"author":{"gitId":"yuqitanyq"},"content":"","lastModifiedDate":"2022-03-06"},{"lineNumber":296,"author":{"gitId":"yuqitanyq"},"content":"### Category: Book Commands","lastModifiedDate":"2022-02-27"},{"lineNumber":297,"author":{"gitId":"yuqitanyq"},"content":"","lastModifiedDate":"2022-03-06"},{"lineNumber":298,"author":{"gitId":"yuqitanyq"},"content":"| Function           | Format Of Command                                                   |","lastModifiedDate":"2022-03-06"},{"lineNumber":299,"author":{"gitId":"yuqitanyq"},"content":"|--------------------|---------------------------------------------------------------------|","lastModifiedDate":"2022-03-06"},{"lineNumber":300,"author":{"gitId":"yuqitanyq"},"content":"| **Add a book**     | `book add n/NAME i/ISBN [a/AUTHOR …] [t/CATEGORY_TAG …]`            |","lastModifiedDate":"2022-03-06"},{"lineNumber":301,"author":{"gitId":"yuqitanyq"},"content":"| **List all books** | `book list`                                                         |","lastModifiedDate":"2022-03-06"},{"lineNumber":302,"author":{"gitId":"yuqitanyq"},"content":"| **Edit a book**    | `book edit INDEX [n/NAME] [i/ISBN] [a/AUTHOR …] [t/CATEGORY_TAG …]` |","lastModifiedDate":"2022-03-06"},{"lineNumber":303,"author":{"gitId":"yuqitanyq"},"content":"| **Delete a book**  | `book delete INDEX`                                                 |","lastModifiedDate":"2022-03-06"},{"lineNumber":304,"author":{"gitId":"yuqitanyq"},"content":"| **Borrow a book**  | `borrow INDEX1 INDEX2`                                              |","lastModifiedDate":"2022-03-06"},{"lineNumber":305,"author":{"gitId":"yuqitanyq"},"content":"| **Return a book**  | `return PREFIX/INDEX`                                               |","lastModifiedDate":"2022-03-06"},{"lineNumber":306,"author":{"gitId":"yuqitanyq"},"content":"| **Request a book** | `request INDEX1 INDEX2`                                             |","lastModifiedDate":"2022-03-06"},{"lineNumber":307,"author":{"gitId":"yuqitanyq"},"content":"","lastModifiedDate":"2022-03-06"},{"lineNumber":308,"author":{"gitId":"yuqitanyq"},"content":"### Category: General Commands","lastModifiedDate":"2022-02-27"},{"lineNumber":309,"author":{"gitId":"yuqitanyq"},"content":"","lastModifiedDate":"2022-03-06"},{"lineNumber":310,"author":{"gitId":"yuqitanyq"},"content":"| Function                                   | Format Of Command                                                          |","lastModifiedDate":"2022-03-06"},{"lineNumber":311,"author":{"gitId":"yuqitanyq"},"content":"|--------------------------------------------|----------------------------------------------------------------------------|","lastModifiedDate":"2022-03-06"},{"lineNumber":312,"author":{"gitId":"yuqitanyq"},"content":"| **Clear all entries**                      | `clear`                                                                    |","lastModifiedDate":"2022-03-06"},{"lineNumber":313,"author":{"gitId":"yuqitanyq"},"content":"| **Exit the program**                       | `exit`                                                                     |","lastModifiedDate":"2022-03-06"},{"lineNumber":314,"author":{"gitId":"yuqitanyq"},"content":"| **Show message to help page**              | `help`                                                                     |","lastModifiedDate":"2022-03-06"},{"lineNumber":315,"author":{"gitId":"yuqitanyq"},"content":"| **Navigating the different patrons/books** | **Pressing the :arrow_up: and :arrow_down: arrows on keyboard :keyboard:** |","lastModifiedDate":"2022-03-06"}],"authorContributionMap":{"yl-ang":17,"yuqitanyq":32,"-":171,"aditi2313":33,"bingsen0806":62}},{"path":"docs/index.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"---","lastModifiedDate":"2020-05-23"},{"lineNumber":2,"author":{"gitId":"-"},"content":"layout: page","lastModifiedDate":"2020-05-23"},{"lineNumber":3,"author":{"gitId":"yl-ang"},"content":"title: LibTask","lastModifiedDate":"2022-03-07"},{"lineNumber":4,"author":{"gitId":"-"},"content":"---","lastModifiedDate":"2020-05-23"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":6,"author":{"gitId":"yl-ang"},"content":"[![CI Status](https://github.com/AY2122S2-CS2103T-W14-1/tp/workflows/Java%20CI/badge.svg)](https://github.com/AY2122S2-CS2103T-W14-1/tp/actions)","lastModifiedDate":"2022-03-07"},{"lineNumber":7,"author":{"gitId":"-"},"content":"[![codecov](https://codecov.io/gh/AY2122S2-CS2103T-W14-1/tp/branch/master/graph/badge.svg?token\u003dXNUDJ0U08U)](https://codecov.io/gh/AY2122S2-CS2103T-W14-1/tp)","lastModifiedDate":"2022-02-13"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":9,"author":{"gitId":"-"},"content":"![Ui](images/Ui.png)","lastModifiedDate":"2020-05-23"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":11,"author":{"gitId":"yl-ang"},"content":"**LibTask** is a desktop application to allow librarians to keep track of book statuses and contact details of patrons who have borrowed them or requested for them. While it has a GUI, most of the user interactions happen using a CLI (Command Line Interface).","lastModifiedDate":"2022-03-07"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":13,"author":{"gitId":"yl-ang"},"content":"* If you are interested in using LibTask, head over to the [_Quick Start_ section of the **User Guide**](UserGuide.html#quick-start).","lastModifiedDate":"2022-03-07"},{"lineNumber":14,"author":{"gitId":"yl-ang"},"content":"* If you are interested about developing LibTask, the [**Developer Guide**](DeveloperGuide.html) is a good place to start.","lastModifiedDate":"2022-03-07"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":17,"author":{"gitId":"-"},"content":"**Acknowledgements**","lastModifiedDate":"2020-05-23"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":19,"author":{"gitId":"-"},"content":"* Libraries used: [JavaFX](https://openjfx.io/), [Jackson](https://github.com/FasterXML/jackson), [JUnit5](https://github.com/junit-team/junit5)","lastModifiedDate":"2020-05-23"}],"authorContributionMap":{"yl-ang":5,"-":14}},{"path":"docs/team/aditi2313.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"aditi2313"},"content":"---","lastModifiedDate":"2022-02-25"},{"lineNumber":2,"author":{"gitId":"aditi2313"},"content":"layout: page","lastModifiedDate":"2022-02-25"},{"lineNumber":3,"author":{"gitId":"aditi2313"},"content":"title: Aditi Gupta\u0027s Project Portfolio Page","lastModifiedDate":"2022-02-25"},{"lineNumber":4,"author":{"gitId":"aditi2313"},"content":"---","lastModifiedDate":"2022-02-25"},{"lineNumber":5,"author":{"gitId":"aditi2313"},"content":"","lastModifiedDate":"2022-02-25"},{"lineNumber":6,"author":{"gitId":"aditi2313"},"content":"### Project: LibTask","lastModifiedDate":"2022-02-25"},{"lineNumber":7,"author":{"gitId":"aditi2313"},"content":"","lastModifiedDate":"2022-02-25"},{"lineNumber":8,"author":{"gitId":"aditi2313"},"content":"LibTask is a desktop application used by librarians to keep track of books, overdue books, and contact details of patrons who have borrowed them and those who requested them. The user interacts with it using a CLI, and it has a GUI created with JavaFX. It is written in Java, and has about 10 kLoC. This project is based on AddressBook - Level 3.","lastModifiedDate":"2022-02-25"},{"lineNumber":9,"author":{"gitId":"aditi2313"},"content":"","lastModifiedDate":"2022-02-25"},{"lineNumber":10,"author":{"gitId":"aditi2313"},"content":"Given below are my contributions to the project.","lastModifiedDate":"2022-02-25"},{"lineNumber":11,"author":{"gitId":"aditi2313"},"content":"","lastModifiedDate":"2022-02-25"},{"lineNumber":12,"author":{"gitId":"aditi2313"},"content":"* **New Feature**:","lastModifiedDate":"2022-02-25"},{"lineNumber":13,"author":{"gitId":"aditi2313"},"content":"","lastModifiedDate":"2022-02-25"},{"lineNumber":14,"author":{"gitId":"aditi2313"},"content":"* **Code contributed**:","lastModifiedDate":"2022-02-25"},{"lineNumber":15,"author":{"gitId":"aditi2313"},"content":"","lastModifiedDate":"2022-02-25"},{"lineNumber":16,"author":{"gitId":"aditi2313"},"content":"* **Project management**:","lastModifiedDate":"2022-02-25"},{"lineNumber":17,"author":{"gitId":"aditi2313"},"content":"","lastModifiedDate":"2022-02-25"},{"lineNumber":18,"author":{"gitId":"aditi2313"},"content":"* **Enhancements to existing features**:","lastModifiedDate":"2022-02-25"},{"lineNumber":19,"author":{"gitId":"aditi2313"},"content":"","lastModifiedDate":"2022-02-25"},{"lineNumber":20,"author":{"gitId":"aditi2313"},"content":"* **Documentation**:","lastModifiedDate":"2022-02-25"},{"lineNumber":21,"author":{"gitId":"aditi2313"},"content":"    * User Guide:","lastModifiedDate":"2022-02-25"},{"lineNumber":22,"author":{"gitId":"aditi2313"},"content":"","lastModifiedDate":"2022-02-25"},{"lineNumber":23,"author":{"gitId":"aditi2313"},"content":"    * Developer Guide:","lastModifiedDate":"2022-02-25"},{"lineNumber":24,"author":{"gitId":"aditi2313"},"content":"","lastModifiedDate":"2022-02-25"},{"lineNumber":25,"author":{"gitId":"aditi2313"},"content":"* **Community**:","lastModifiedDate":"2022-02-25"},{"lineNumber":26,"author":{"gitId":"aditi2313"},"content":"","lastModifiedDate":"2022-02-25"},{"lineNumber":27,"author":{"gitId":"aditi2313"},"content":"* **Tools**:","lastModifiedDate":"2022-02-25"},{"lineNumber":28,"author":{"gitId":"aditi2313"},"content":"","lastModifiedDate":"2022-02-25"}],"authorContributionMap":{"aditi2313":28}},{"path":"docs/team/bingsen0806.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"bingsen0806"},"content":"---","lastModifiedDate":"2022-02-24"},{"lineNumber":2,"author":{"gitId":"bingsen0806"},"content":"layout: page","lastModifiedDate":"2022-02-24"},{"lineNumber":3,"author":{"gitId":"bingsen0806"},"content":"title: Lim Bing Sen\u0027s Project Portfolio Page","lastModifiedDate":"2022-02-24"},{"lineNumber":4,"author":{"gitId":"bingsen0806"},"content":"---","lastModifiedDate":"2022-02-24"},{"lineNumber":5,"author":{"gitId":"bingsen0806"},"content":"","lastModifiedDate":"2022-02-24"},{"lineNumber":6,"author":{"gitId":"bingsen0806"},"content":"### Project: LibTask","lastModifiedDate":"2022-02-24"},{"lineNumber":7,"author":{"gitId":"bingsen0806"},"content":"","lastModifiedDate":"2022-02-24"},{"lineNumber":8,"author":{"gitId":"bingsen0806"},"content":"LibTask is a desktop application used by librarians to keep track of books, overdue books, and contact details of patrons who have borrowed them and those who requested them. The user interacts with it using a CLI, and it has a GUI created with JavaFX. It is written in Java, and has about 10 kLoC. This project is based on AddressBook - Level 3.","lastModifiedDate":"2022-02-24"},{"lineNumber":9,"author":{"gitId":"bingsen0806"},"content":"","lastModifiedDate":"2022-02-24"},{"lineNumber":10,"author":{"gitId":"bingsen0806"},"content":"### Summary of contributions","lastModifiedDate":"2022-02-24"},{"lineNumber":11,"author":{"gitId":"bingsen0806"},"content":"","lastModifiedDate":"2022-02-24"},{"lineNumber":12,"author":{"gitId":"bingsen0806"},"content":"* **Code contributed**:","lastModifiedDate":"2022-02-24"},{"lineNumber":13,"author":{"gitId":"bingsen0806"},"content":"","lastModifiedDate":"2022-02-24"},{"lineNumber":14,"author":{"gitId":"bingsen0806"},"content":"* **Enhancements implemented**:","lastModifiedDate":"2022-02-24"},{"lineNumber":15,"author":{"gitId":"bingsen0806"},"content":"","lastModifiedDate":"2022-02-24"},{"lineNumber":16,"author":{"gitId":"bingsen0806"},"content":"* **User Guide contribution**:","lastModifiedDate":"2022-02-24"},{"lineNumber":17,"author":{"gitId":"bingsen0806"},"content":"","lastModifiedDate":"2022-02-24"},{"lineNumber":18,"author":{"gitId":"bingsen0806"},"content":"* **Developer Guide contribution**:","lastModifiedDate":"2022-02-24"},{"lineNumber":19,"author":{"gitId":"bingsen0806"},"content":"","lastModifiedDate":"2022-02-24"},{"lineNumber":20,"author":{"gitId":"bingsen0806"},"content":"* **Team-based tasks contributions**:","lastModifiedDate":"2022-02-24"},{"lineNumber":21,"author":{"gitId":"bingsen0806"},"content":"  * Created team organization and setup CI/CD and workflow","lastModifiedDate":"2022-02-24"},{"lineNumber":22,"author":{"gitId":"bingsen0806"},"content":"  * Setup team repo, CodeCov, GitHub actions","lastModifiedDate":"2022-02-24"},{"lineNumber":23,"author":{"gitId":"bingsen0806"},"content":"  * Set target for milestone and manage milestone issues","lastModifiedDate":"2022-02-24"},{"lineNumber":24,"author":{"gitId":"bingsen0806"},"content":"","lastModifiedDate":"2022-02-24"},{"lineNumber":25,"author":{"gitId":"bingsen0806"},"content":"* **Project management**:","lastModifiedDate":"2022-02-24"},{"lineNumber":26,"author":{"gitId":"bingsen0806"},"content":"","lastModifiedDate":"2022-02-24"},{"lineNumber":27,"author":{"gitId":"bingsen0806"},"content":"* **Community**:","lastModifiedDate":"2022-02-24"},{"lineNumber":28,"author":{"gitId":"bingsen0806"},"content":"","lastModifiedDate":"2022-02-24"},{"lineNumber":29,"author":{"gitId":"bingsen0806"},"content":"* **Tools**:","lastModifiedDate":"2022-02-24"},{"lineNumber":30,"author":{"gitId":"bingsen0806"},"content":"","lastModifiedDate":"2022-02-24"}],"authorContributionMap":{"bingsen0806":30}},{"path":"docs/team/halpfrog.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"Halpfrog"},"content":"---","lastModifiedDate":"2022-02-26"},{"lineNumber":2,"author":{"gitId":"Halpfrog"},"content":"layout: page","lastModifiedDate":"2022-02-26"},{"lineNumber":3,"author":{"gitId":"Halpfrog"},"content":"title: Sarthak Pradhan\u0027s Project Portfolio Page","lastModifiedDate":"2022-02-26"},{"lineNumber":4,"author":{"gitId":"Halpfrog"},"content":"---","lastModifiedDate":"2022-02-26"},{"lineNumber":5,"author":{"gitId":"Halpfrog"},"content":"","lastModifiedDate":"2022-02-26"},{"lineNumber":6,"author":{"gitId":"Halpfrog"},"content":"### Project: LibTask","lastModifiedDate":"2022-02-26"},{"lineNumber":7,"author":{"gitId":"Halpfrog"},"content":"","lastModifiedDate":"2022-02-26"},{"lineNumber":8,"author":{"gitId":"Halpfrog"},"content":"","lastModifiedDate":"2022-02-26"},{"lineNumber":9,"author":{"gitId":"Halpfrog"},"content":"LibTask is a desktop application used by NUS libraries to keep track of books, overdue books, and contact details of patrons who have borrowed them and those who requested them.","lastModifiedDate":"2022-02-26"},{"lineNumber":10,"author":{"gitId":"Halpfrog"},"content":"The user interacts with it using a CLI, and it has a GUI created with JavaFX. It is written in Java, and has about 10 kLoC. This project is based on AddressBook - Level 3.","lastModifiedDate":"2022-02-26"},{"lineNumber":11,"author":{"gitId":"Halpfrog"},"content":"","lastModifiedDate":"2022-02-26"},{"lineNumber":12,"author":{"gitId":"Halpfrog"},"content":"Given below are my contributions to the project.","lastModifiedDate":"2022-02-26"},{"lineNumber":13,"author":{"gitId":"Halpfrog"},"content":"","lastModifiedDate":"2022-02-26"},{"lineNumber":14,"author":{"gitId":"Halpfrog"},"content":"* **New Feature**:","lastModifiedDate":"2022-02-26"},{"lineNumber":15,"author":{"gitId":"Halpfrog"},"content":"","lastModifiedDate":"2022-02-26"},{"lineNumber":16,"author":{"gitId":"Halpfrog"},"content":"","lastModifiedDate":"2022-02-26"},{"lineNumber":17,"author":{"gitId":"Halpfrog"},"content":"* **Code contributed**:","lastModifiedDate":"2022-02-26"},{"lineNumber":18,"author":{"gitId":"Halpfrog"},"content":"","lastModifiedDate":"2022-02-26"},{"lineNumber":19,"author":{"gitId":"Halpfrog"},"content":"","lastModifiedDate":"2022-02-26"},{"lineNumber":20,"author":{"gitId":"Halpfrog"},"content":"* **Project management**:","lastModifiedDate":"2022-02-26"},{"lineNumber":21,"author":{"gitId":"Halpfrog"},"content":"","lastModifiedDate":"2022-02-26"},{"lineNumber":22,"author":{"gitId":"Halpfrog"},"content":"","lastModifiedDate":"2022-02-26"},{"lineNumber":23,"author":{"gitId":"Halpfrog"},"content":"* **Enhancements to existing features**:","lastModifiedDate":"2022-02-26"},{"lineNumber":24,"author":{"gitId":"Halpfrog"},"content":"","lastModifiedDate":"2022-02-26"},{"lineNumber":25,"author":{"gitId":"Halpfrog"},"content":"","lastModifiedDate":"2022-02-26"},{"lineNumber":26,"author":{"gitId":"Halpfrog"},"content":"* **Documentation**:","lastModifiedDate":"2022-02-26"},{"lineNumber":27,"author":{"gitId":"Halpfrog"},"content":"  * User Guide:","lastModifiedDate":"2022-02-26"},{"lineNumber":28,"author":{"gitId":"Halpfrog"},"content":"  * Developer Guide:","lastModifiedDate":"2022-02-26"},{"lineNumber":29,"author":{"gitId":"Halpfrog"},"content":"","lastModifiedDate":"2022-02-26"},{"lineNumber":30,"author":{"gitId":"Halpfrog"},"content":"","lastModifiedDate":"2022-02-26"},{"lineNumber":31,"author":{"gitId":"Halpfrog"},"content":"* **Community**:","lastModifiedDate":"2022-02-26"},{"lineNumber":32,"author":{"gitId":"Halpfrog"},"content":"","lastModifiedDate":"2022-02-26"},{"lineNumber":33,"author":{"gitId":"Halpfrog"},"content":"","lastModifiedDate":"2022-02-26"},{"lineNumber":34,"author":{"gitId":"Halpfrog"},"content":"* **Tools**:","lastModifiedDate":"2022-02-26"},{"lineNumber":35,"author":{"gitId":"Halpfrog"},"content":"","lastModifiedDate":"2022-02-26"},{"lineNumber":36,"author":{"gitId":"Halpfrog"},"content":"","lastModifiedDate":"2022-02-26"}],"authorContributionMap":{"Halpfrog":36}},{"path":"docs/team/yl-ang.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"yl-ang"},"content":"---","lastModifiedDate":"2022-02-23"},{"lineNumber":2,"author":{"gitId":"yl-ang"},"content":"layout: page","lastModifiedDate":"2022-02-23"},{"lineNumber":3,"author":{"gitId":"yl-ang"},"content":"title: Ang Yong Liang\u0027s Project Portfolio Page","lastModifiedDate":"2022-02-23"},{"lineNumber":4,"author":{"gitId":"yl-ang"},"content":"---","lastModifiedDate":"2022-02-23"},{"lineNumber":5,"author":{"gitId":"yl-ang"},"content":"","lastModifiedDate":"2022-02-23"},{"lineNumber":6,"author":{"gitId":"yl-ang"},"content":"### Project: LibTask","lastModifiedDate":"2022-02-23"},{"lineNumber":7,"author":{"gitId":"yl-ang"},"content":"","lastModifiedDate":"2022-02-23"},{"lineNumber":8,"author":{"gitId":"yl-ang"},"content":"LibTask is a desktop application used by librarians to keep track of books, overdue books, and contact details of patrons who have borrowed them and those who requested them. The user interacts with it using a CLI, and it has a GUI created with JavaFX. It is written in Java, and has about 10 kLoC. This project is based on AddressBook - Level 3.","lastModifiedDate":"2022-02-24"},{"lineNumber":9,"author":{"gitId":"yl-ang"},"content":"","lastModifiedDate":"2022-02-23"},{"lineNumber":10,"author":{"gitId":"yl-ang"},"content":"Given below are my contributions to the project.","lastModifiedDate":"2022-02-23"},{"lineNumber":11,"author":{"gitId":"yl-ang"},"content":"","lastModifiedDate":"2022-02-23"},{"lineNumber":12,"author":{"gitId":"yl-ang"},"content":"* **New Feature**:","lastModifiedDate":"2022-02-23"},{"lineNumber":13,"author":{"gitId":"yl-ang"},"content":"","lastModifiedDate":"2022-02-23"},{"lineNumber":14,"author":{"gitId":"yl-ang"},"content":"* **Code contributed**:","lastModifiedDate":"2022-02-23"},{"lineNumber":15,"author":{"gitId":"yl-ang"},"content":"","lastModifiedDate":"2022-02-23"},{"lineNumber":16,"author":{"gitId":"yl-ang"},"content":"* **Project management**:","lastModifiedDate":"2022-02-23"},{"lineNumber":17,"author":{"gitId":"yl-ang"},"content":"","lastModifiedDate":"2022-02-23"},{"lineNumber":18,"author":{"gitId":"yl-ang"},"content":"* **Enhancements to existing features**:","lastModifiedDate":"2022-02-23"},{"lineNumber":19,"author":{"gitId":"yl-ang"},"content":"","lastModifiedDate":"2022-02-23"},{"lineNumber":20,"author":{"gitId":"yl-ang"},"content":"* **Documentation**:","lastModifiedDate":"2022-02-23"},{"lineNumber":21,"author":{"gitId":"yl-ang"},"content":"    * User Guide:","lastModifiedDate":"2022-02-23"},{"lineNumber":22,"author":{"gitId":"yl-ang"},"content":"","lastModifiedDate":"2022-02-23"},{"lineNumber":23,"author":{"gitId":"yl-ang"},"content":"    * Developer Guide:","lastModifiedDate":"2022-02-23"},{"lineNumber":24,"author":{"gitId":"yl-ang"},"content":"","lastModifiedDate":"2022-02-23"},{"lineNumber":25,"author":{"gitId":"yl-ang"},"content":"* **Community**:","lastModifiedDate":"2022-02-23"},{"lineNumber":26,"author":{"gitId":"yl-ang"},"content":"","lastModifiedDate":"2022-02-23"},{"lineNumber":27,"author":{"gitId":"yl-ang"},"content":"* **Tools**:","lastModifiedDate":"2022-02-23"},{"lineNumber":28,"author":{"gitId":"yl-ang"},"content":"","lastModifiedDate":"2022-02-23"}],"authorContributionMap":{"yl-ang":28}},{"path":"docs/team/yuqitanyq.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"---","lastModifiedDate":"2020-05-23"},{"lineNumber":2,"author":{"gitId":"yuqitanyq"},"content":"layout: page","lastModifiedDate":"2022-03-05"},{"lineNumber":3,"author":{"gitId":"yuqitanyq"},"content":"title: Tan Yu Qi\u0027s Project Portfolio Page","lastModifiedDate":"2022-03-05"},{"lineNumber":4,"author":{"gitId":"-"},"content":"---","lastModifiedDate":"2020-05-23"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":6,"author":{"gitId":"yuqitanyq"},"content":"### Project: LibTask","lastModifiedDate":"2022-02-24"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":8,"author":{"gitId":"yuqitanyq"},"content":"LibTask is a desktop application used by librarians to keep track of books, overdue books, and contact details of patrons who have borrowed them and those who requested them. The user interacts with it using a CLI, and it has a GUI created with JavaFX. It is written in Java, and has about 10 kLoC. This project is based on AddressBook - Level 3.","lastModifiedDate":"2022-03-05"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":10,"author":{"gitId":"-"},"content":"Given below are my contributions to the project.","lastModifiedDate":"2020-05-23"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":12,"author":{"gitId":"yuqitanyq"},"content":"* **New Feature**:","lastModifiedDate":"2022-02-24"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":14,"author":{"gitId":"yuqitanyq"},"content":"* **Code contributed**:","lastModifiedDate":"2022-02-24"},{"lineNumber":15,"author":{"gitId":"yuqitanyq"},"content":"","lastModifiedDate":"2022-02-24"},{"lineNumber":16,"author":{"gitId":"-"},"content":"* **Project management**:","lastModifiedDate":"2020-05-23"},{"lineNumber":17,"author":{"gitId":"yuqitanyq"},"content":"","lastModifiedDate":"2022-02-24"},{"lineNumber":18,"author":{"gitId":"-"},"content":"* **Enhancements to existing features**:","lastModifiedDate":"2020-05-23"},{"lineNumber":19,"author":{"gitId":"yuqitanyq"},"content":"","lastModifiedDate":"2022-02-24"},{"lineNumber":20,"author":{"gitId":"-"},"content":"* **Documentation**:","lastModifiedDate":"2020-05-23"},{"lineNumber":21,"author":{"gitId":"-"},"content":"  * User Guide:","lastModifiedDate":"2020-05-23"},{"lineNumber":22,"author":{"gitId":"yuqitanyq"},"content":"","lastModifiedDate":"2022-02-24"},{"lineNumber":23,"author":{"gitId":"yuqitanyq"},"content":"  * Developer Guide:","lastModifiedDate":"2022-03-05"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":25,"author":{"gitId":"-"},"content":"* **Community**:","lastModifiedDate":"2020-05-23"},{"lineNumber":26,"author":{"gitId":"yuqitanyq"},"content":"","lastModifiedDate":"2022-02-24"},{"lineNumber":27,"author":{"gitId":"-"},"content":"* **Tools**:","lastModifiedDate":"2020-05-23"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"}],"authorContributionMap":{"yuqitanyq":12,"-":16}},{"path":"src/main/java/seedu/address/commons/core/Messages.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.commons.core;","lastModifiedDate":"2016-09-23"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":3,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-24"},{"lineNumber":4,"author":{"gitId":"-"},"content":" * Container for user visible messages.","lastModifiedDate":"2016-08-24"},{"lineNumber":5,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-24"},{"lineNumber":6,"author":{"gitId":"-"},"content":"public class Messages {","lastModifiedDate":"2016-08-24"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":8,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_UNKNOWN_COMMAND \u003d \"Unknown command\";","lastModifiedDate":"2016-09-21"},{"lineNumber":9,"author":{"gitId":"aditi2313"},"content":"    public static final String MESSAGE_EMPTY_COMMAND \u003d \"Command cannot be blank\";","lastModifiedDate":"2022-03-10"},{"lineNumber":10,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_INVALID_COMMAND_FORMAT \u003d \"Invalid command format! \\n%1$s\";","lastModifiedDate":"2016-08-24"},{"lineNumber":11,"author":{"gitId":"aditi2313"},"content":"    public static final String MESSAGE_INVALID_PERSON_DISPLAYED_INDEX \u003d \"The patron index provided is invalid\";","lastModifiedDate":"2022-03-09"},{"lineNumber":12,"author":{"gitId":"aditi2313"},"content":"    public static final String MESSAGE_PERSONS_LISTED_OVERVIEW \u003d \"%1$d patrons listed!\";","lastModifiedDate":"2022-03-09"},{"lineNumber":13,"author":{"gitId":"bingsen0806"},"content":"    public static final String MESSAGE_INVALID_BOOK_DISPLAYED_INDEX \u003d \"The book index provided is invalid\";","lastModifiedDate":"2022-03-11"},{"lineNumber":14,"author":{"gitId":"bingsen0806"},"content":"    public static final String MESSAGE_BOOKS_LISTED_OVERVIEW \u003d \"%1$d books listed!\";","lastModifiedDate":"2022-03-11"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-28"},{"lineNumber":16,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-24"}],"authorContributionMap":{"-":11,"aditi2313":3,"bingsen0806":2}},{"path":"src/main/java/seedu/address/logic/Logic.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic;","lastModifiedDate":"2016-09-25"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-11-27"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2016-09-25"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.GuiSettings;","lastModifiedDate":"2018-11-27"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.CommandResult;","lastModifiedDate":"2016-09-25"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.exceptions.CommandException;","lastModifiedDate":"2017-02-05"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import seedu.address.logic.parser.exceptions.ParseException;","lastModifiedDate":"2017-03-11"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import seedu.address.model.ReadOnlyAddressBook;","lastModifiedDate":"2018-12-03"},{"lineNumber":11,"author":{"gitId":"yl-ang"},"content":"import seedu.address.model.book.Book;","lastModifiedDate":"2022-03-10"},{"lineNumber":12,"author":{"gitId":"aditi2313"},"content":"import seedu.address.model.person.Patron;","lastModifiedDate":"2022-03-09"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":14,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-09-25"},{"lineNumber":15,"author":{"gitId":"-"},"content":" * API of the Logic component","lastModifiedDate":"2016-09-25"},{"lineNumber":16,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-09-25"},{"lineNumber":17,"author":{"gitId":"-"},"content":"public interface Logic {","lastModifiedDate":"2016-09-25"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-09-25"},{"lineNumber":19,"author":{"gitId":"-"},"content":"     * Executes the command and returns the result.","lastModifiedDate":"2016-09-25"},{"lineNumber":20,"author":{"gitId":"-"},"content":"     * @param commandText The command as entered by the user.","lastModifiedDate":"2016-09-25"},{"lineNumber":21,"author":{"gitId":"-"},"content":"     * @return the result of the command execution.","lastModifiedDate":"2016-09-25"},{"lineNumber":22,"author":{"gitId":"-"},"content":"     * @throws CommandException If an error occurs during command execution.","lastModifiedDate":"2017-02-05"},{"lineNumber":23,"author":{"gitId":"-"},"content":"     * @throws ParseException If an error occurs during parsing.","lastModifiedDate":"2017-03-11"},{"lineNumber":24,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-09-25"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    CommandResult execute(String commandText) throws CommandException, ParseException;","lastModifiedDate":"2017-03-11"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-12-03"},{"lineNumber":28,"author":{"gitId":"-"},"content":"     * Returns the AddressBook.","lastModifiedDate":"2018-12-03"},{"lineNumber":29,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2018-12-03"},{"lineNumber":30,"author":{"gitId":"-"},"content":"     * @see seedu.address.model.Model#getAddressBook()","lastModifiedDate":"2018-12-03"},{"lineNumber":31,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-12-03"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    ReadOnlyAddressBook getAddressBook();","lastModifiedDate":"2018-12-03"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-03"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    /** Returns an unmodifiable view of the filtered list of persons */","lastModifiedDate":"2017-09-01"},{"lineNumber":35,"author":{"gitId":"aditi2313"},"content":"    ObservableList\u003cPatron\u003e getFilteredPersonList();","lastModifiedDate":"2022-03-09"},{"lineNumber":36,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-26"},{"lineNumber":37,"author":{"gitId":"yl-ang"},"content":"    /** Returns an unmodifiable view of the filtered list of books */","lastModifiedDate":"2022-03-10"},{"lineNumber":38,"author":{"gitId":"yl-ang"},"content":"    ObservableList\u003cBook\u003e getFilteredBookList();","lastModifiedDate":"2022-03-10"},{"lineNumber":39,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-03-10"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-11-27"},{"lineNumber":41,"author":{"gitId":"-"},"content":"     * Returns the user prefs\u0027 address book file path.","lastModifiedDate":"2018-11-27"},{"lineNumber":42,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-11-27"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    Path getAddressBookFilePath();","lastModifiedDate":"2018-11-27"},{"lineNumber":44,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-11-27"},{"lineNumber":46,"author":{"gitId":"-"},"content":"     * Returns the user prefs\u0027 GUI settings.","lastModifiedDate":"2018-11-27"},{"lineNumber":47,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-11-27"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    GuiSettings getGuiSettings();","lastModifiedDate":"2018-11-27"},{"lineNumber":49,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-11-27"},{"lineNumber":51,"author":{"gitId":"-"},"content":"     * Set the user prefs\u0027 GUI settings.","lastModifiedDate":"2018-11-27"},{"lineNumber":52,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-11-27"},{"lineNumber":53,"author":{"gitId":"-"},"content":"    void setGuiSettings(GuiSettings guiSettings);","lastModifiedDate":"2018-11-27"},{"lineNumber":54,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-09-25"}],"authorContributionMap":{"yl-ang":3,"-":49,"aditi2313":2}},{"path":"src/main/java/seedu/address/logic/LogicManager.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic;","lastModifiedDate":"2016-09-21"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.io.IOException;","lastModifiedDate":"2018-12-09"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-11-27"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.util.logging.Logger;","lastModifiedDate":"2017-01-19"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2016-09-24"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.GuiSettings;","lastModifiedDate":"2018-11-27"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.LogsCenter;","lastModifiedDate":"2016-09-29"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.Command;","lastModifiedDate":"2016-09-22"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.CommandResult;","lastModifiedDate":"2016-09-22"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.exceptions.CommandException;","lastModifiedDate":"2017-02-05"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import seedu.address.logic.parser.AddressBookParser;","lastModifiedDate":"2017-07-07"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import seedu.address.logic.parser.exceptions.ParseException;","lastModifiedDate":"2017-03-11"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2016-09-25"},{"lineNumber":16,"author":{"gitId":"-"},"content":"import seedu.address.model.ReadOnlyAddressBook;","lastModifiedDate":"2018-12-03"},{"lineNumber":17,"author":{"gitId":"yl-ang"},"content":"import seedu.address.model.book.Book;","lastModifiedDate":"2022-03-10"},{"lineNumber":18,"author":{"gitId":"aditi2313"},"content":"import seedu.address.model.person.Patron;","lastModifiedDate":"2022-03-09"},{"lineNumber":19,"author":{"gitId":"-"},"content":"import seedu.address.storage.Storage;","lastModifiedDate":"2018-12-09"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":21,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-09-21"},{"lineNumber":22,"author":{"gitId":"-"},"content":" * The main LogicManager of the app.","lastModifiedDate":"2016-09-22"},{"lineNumber":23,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-09-21"},{"lineNumber":24,"author":{"gitId":"-"},"content":"public class LogicManager implements Logic {","lastModifiedDate":"2018-12-09"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    public static final String FILE_OPS_ERROR_MESSAGE \u003d \"Could not save data to file: \";","lastModifiedDate":"2018-12-09"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    private final Logger logger \u003d LogsCenter.getLogger(LogicManager.class);","lastModifiedDate":"2016-09-29"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-28"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    private final Model model;","lastModifiedDate":"2016-09-25"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    private final Storage storage;","lastModifiedDate":"2018-12-09"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    private final AddressBookParser addressBookParser;","lastModifiedDate":"2017-07-07"},{"lineNumber":31,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2020-05-27"},{"lineNumber":33,"author":{"gitId":"-"},"content":"     * Constructs a {@code LogicManager} with the given {@code Model} and {@code Storage}.","lastModifiedDate":"2020-05-27"},{"lineNumber":34,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2020-05-27"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    public LogicManager(Model model, Storage storage) {","lastModifiedDate":"2018-12-09"},{"lineNumber":36,"author":{"gitId":"-"},"content":"        this.model \u003d model;","lastModifiedDate":"2016-09-25"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        this.storage \u003d storage;","lastModifiedDate":"2018-12-09"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        addressBookParser \u003d new AddressBookParser();","lastModifiedDate":"2018-01-25"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-21"},{"lineNumber":40,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-25"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    public CommandResult execute(String commandText) throws CommandException, ParseException {","lastModifiedDate":"2017-03-11"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        logger.info(\"----------------[USER COMMAND][\" + commandText + \"]\");","lastModifiedDate":"2016-09-29"},{"lineNumber":44,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":45,"author":{"gitId":"-"},"content":"        CommandResult commandResult;","lastModifiedDate":"2018-12-09"},{"lineNumber":46,"author":{"gitId":"-"},"content":"        Command command \u003d addressBookParser.parseCommand(commandText);","lastModifiedDate":"2022-03-11"},{"lineNumber":47,"author":{"gitId":"-"},"content":"        commandResult \u003d command.execute(model);","lastModifiedDate":"2019-01-25"},{"lineNumber":48,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":49,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2018-12-09"},{"lineNumber":50,"author":{"gitId":"-"},"content":"            storage.saveAddressBook(model.getAddressBook());","lastModifiedDate":"2018-12-09"},{"lineNumber":51,"author":{"gitId":"-"},"content":"        } catch (IOException ioe) {","lastModifiedDate":"2018-12-09"},{"lineNumber":52,"author":{"gitId":"-"},"content":"            throw new CommandException(FILE_OPS_ERROR_MESSAGE + ioe, ioe);","lastModifiedDate":"2018-12-09"},{"lineNumber":53,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-12-09"},{"lineNumber":54,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":55,"author":{"gitId":"-"},"content":"        return commandResult;","lastModifiedDate":"2018-12-09"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-21"},{"lineNumber":57,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":58,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2018-12-03"},{"lineNumber":59,"author":{"gitId":"-"},"content":"    public ReadOnlyAddressBook getAddressBook() {","lastModifiedDate":"2018-12-03"},{"lineNumber":60,"author":{"gitId":"-"},"content":"        return model.getAddressBook();","lastModifiedDate":"2018-12-03"},{"lineNumber":61,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-12-03"},{"lineNumber":62,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-03"},{"lineNumber":63,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-25"},{"lineNumber":64,"author":{"gitId":"aditi2313"},"content":"    public ObservableList\u003cPatron\u003e getFilteredPersonList() {","lastModifiedDate":"2022-03-09"},{"lineNumber":65,"author":{"gitId":"-"},"content":"        return model.getFilteredPersonList();","lastModifiedDate":"2016-09-25"},{"lineNumber":66,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":67,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-29"},{"lineNumber":68,"author":{"gitId":"yl-ang"},"content":"    @Override","lastModifiedDate":"2022-03-10"},{"lineNumber":69,"author":{"gitId":"yl-ang"},"content":"    public ObservableList\u003cBook\u003e getFilteredBookList() {","lastModifiedDate":"2022-03-10"},{"lineNumber":70,"author":{"gitId":"yl-ang"},"content":"        return model.getFilteredBookList();","lastModifiedDate":"2022-03-10"},{"lineNumber":71,"author":{"gitId":"yl-ang"},"content":"    }","lastModifiedDate":"2022-03-10"},{"lineNumber":72,"author":{"gitId":"yl-ang"},"content":"","lastModifiedDate":"2022-03-10"},{"lineNumber":73,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2018-11-27"},{"lineNumber":74,"author":{"gitId":"-"},"content":"    public Path getAddressBookFilePath() {","lastModifiedDate":"2018-11-27"},{"lineNumber":75,"author":{"gitId":"-"},"content":"        return model.getAddressBookFilePath();","lastModifiedDate":"2018-11-27"},{"lineNumber":76,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":77,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":78,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2018-11-27"},{"lineNumber":79,"author":{"gitId":"-"},"content":"    public GuiSettings getGuiSettings() {","lastModifiedDate":"2018-11-27"},{"lineNumber":80,"author":{"gitId":"-"},"content":"        return model.getGuiSettings();","lastModifiedDate":"2018-11-27"},{"lineNumber":81,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":82,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":83,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2018-11-27"},{"lineNumber":84,"author":{"gitId":"-"},"content":"    public void setGuiSettings(GuiSettings guiSettings) {","lastModifiedDate":"2018-11-27"},{"lineNumber":85,"author":{"gitId":"-"},"content":"        model.setGuiSettings(guiSettings);","lastModifiedDate":"2018-11-27"},{"lineNumber":86,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":87,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-09-21"}],"authorContributionMap":{"yl-ang":6,"-":79,"aditi2313":2}},{"path":"src/main/java/seedu/address/logic/commands/Command.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2016-09-22"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.exceptions.CommandException;","lastModifiedDate":"2017-02-05"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2016-09-25"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":6,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-24"},{"lineNumber":7,"author":{"gitId":"-"},"content":" * Represents a command with hidden internal logic and the ability to be executed.","lastModifiedDate":"2016-08-24"},{"lineNumber":8,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-24"},{"lineNumber":9,"author":{"gitId":"-"},"content":"public abstract class Command {","lastModifiedDate":"2016-08-24"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":11,"author":{"gitId":"bingsen0806"},"content":"    public static final String PATRON_COMMAND_GROUP \u003d \"patron\";","lastModifiedDate":"2022-03-10"},{"lineNumber":12,"author":{"gitId":"bingsen0806"},"content":"    public static final String BOOK_COMMAND_GROUP \u003d \"book\";","lastModifiedDate":"2022-03-10"},{"lineNumber":13,"author":{"gitId":"bingsen0806"},"content":"","lastModifiedDate":"2022-03-10"},{"lineNumber":14,"author":{"gitId":"bingsen0806"},"content":"    public static final String ADD_COMMAND_WORD \u003d \"add\";","lastModifiedDate":"2022-03-10"},{"lineNumber":15,"author":{"gitId":"bingsen0806"},"content":"    public static final String HELP_COMMAND_WORD \u003d \"help\";","lastModifiedDate":"2022-03-10"},{"lineNumber":16,"author":{"gitId":"bingsen0806"},"content":"    public static final String EXIT_COMMAND_WORD \u003d \"exit\";","lastModifiedDate":"2022-03-10"},{"lineNumber":17,"author":{"gitId":"bingsen0806"},"content":"    public static final String CLEAR_COMMAND_WORD \u003d \"clear\";","lastModifiedDate":"2022-03-10"},{"lineNumber":18,"author":{"gitId":"aditi2313"},"content":"    public static final String EDIT_COMMAND_WORD \u003d \"edit\";","lastModifiedDate":"2022-03-11"},{"lineNumber":19,"author":{"gitId":"aditi2313"},"content":"    public static final String DELETE_COMMAND_WORD \u003d \"delete\";","lastModifiedDate":"2022-03-11"},{"lineNumber":20,"author":{"gitId":"aditi2313"},"content":"    public static final String FIND_COMMAND_WORD \u003d \"find\";","lastModifiedDate":"2022-03-11"},{"lineNumber":21,"author":{"gitId":"aditi2313"},"content":"    public static final String LIST_COMMAND_WORD \u003d \"list\";","lastModifiedDate":"2022-03-11"},{"lineNumber":22,"author":{"gitId":"bingsen0806"},"content":"","lastModifiedDate":"2022-03-10"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-24"},{"lineNumber":24,"author":{"gitId":"-"},"content":"     * Executes the command and returns the result message.","lastModifiedDate":"2016-08-24"},{"lineNumber":25,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2016-08-24"},{"lineNumber":26,"author":{"gitId":"-"},"content":"     * @param model {@code Model} which the command should operate on.","lastModifiedDate":"2018-08-08"},{"lineNumber":27,"author":{"gitId":"-"},"content":"     * @return feedback message of the operation result for display","lastModifiedDate":"2016-08-24"},{"lineNumber":28,"author":{"gitId":"-"},"content":"     * @throws CommandException If an error occurs during command execution.","lastModifiedDate":"2017-02-05"},{"lineNumber":29,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-24"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    public abstract CommandResult execute(Model model) throws CommandException;","lastModifiedDate":"2019-01-25"},{"lineNumber":31,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":32,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-24"}],"authorContributionMap":{"-":20,"bingsen0806":8,"aditi2313":4}},{"path":"src/main/java/seedu/address/logic/commands/book/AddBookCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"bingsen0806"},"content":"package seedu.address.logic.commands.book;","lastModifiedDate":"2022-03-10"},{"lineNumber":2,"author":{"gitId":"bingsen0806"},"content":"","lastModifiedDate":"2022-03-10"},{"lineNumber":3,"author":{"gitId":"bingsen0806"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2022-03-10"},{"lineNumber":4,"author":{"gitId":"bingsen0806"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_AUTHOR;","lastModifiedDate":"2022-03-11"},{"lineNumber":5,"author":{"gitId":"bingsen0806"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_ISBN;","lastModifiedDate":"2022-03-11"},{"lineNumber":6,"author":{"gitId":"bingsen0806"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_NAME;","lastModifiedDate":"2022-03-11"},{"lineNumber":7,"author":{"gitId":"bingsen0806"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_TAG;","lastModifiedDate":"2022-03-11"},{"lineNumber":8,"author":{"gitId":"bingsen0806"},"content":"","lastModifiedDate":"2022-03-10"},{"lineNumber":9,"author":{"gitId":"bingsen0806"},"content":"import seedu.address.logic.commands.Command;","lastModifiedDate":"2022-03-10"},{"lineNumber":10,"author":{"gitId":"bingsen0806"},"content":"import seedu.address.logic.commands.CommandResult;","lastModifiedDate":"2022-03-10"},{"lineNumber":11,"author":{"gitId":"bingsen0806"},"content":"import seedu.address.logic.commands.exceptions.CommandException;","lastModifiedDate":"2022-03-10"},{"lineNumber":12,"author":{"gitId":"bingsen0806"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2022-03-10"},{"lineNumber":13,"author":{"gitId":"bingsen0806"},"content":"import seedu.address.model.book.Book;","lastModifiedDate":"2022-03-10"},{"lineNumber":14,"author":{"gitId":"bingsen0806"},"content":"","lastModifiedDate":"2022-03-10"},{"lineNumber":15,"author":{"gitId":"bingsen0806"},"content":"/**","lastModifiedDate":"2022-03-10"},{"lineNumber":16,"author":{"gitId":"bingsen0806"},"content":" * Adds a book to the address book.","lastModifiedDate":"2022-03-10"},{"lineNumber":17,"author":{"gitId":"bingsen0806"},"content":" */","lastModifiedDate":"2022-03-10"},{"lineNumber":18,"author":{"gitId":"bingsen0806"},"content":"public class AddBookCommand extends Command {","lastModifiedDate":"2022-03-10"},{"lineNumber":19,"author":{"gitId":"bingsen0806"},"content":"","lastModifiedDate":"2022-03-10"},{"lineNumber":20,"author":{"gitId":"bingsen0806"},"content":"    // TODO : Improve messages","lastModifiedDate":"2022-03-10"},{"lineNumber":21,"author":{"gitId":"bingsen0806"},"content":"    public static final String MESSAGE_USAGE \u003d BOOK_COMMAND_GROUP + \" \" + ADD_COMMAND_WORD","lastModifiedDate":"2022-03-11"},{"lineNumber":22,"author":{"gitId":"bingsen0806"},"content":"            + \": Adds a book to LibTask. \"","lastModifiedDate":"2022-03-11"},{"lineNumber":23,"author":{"gitId":"bingsen0806"},"content":"            + \"Parameters: \"","lastModifiedDate":"2022-03-11"},{"lineNumber":24,"author":{"gitId":"bingsen0806"},"content":"            + PREFIX_NAME + \"NAME \"","lastModifiedDate":"2022-03-11"},{"lineNumber":25,"author":{"gitId":"bingsen0806"},"content":"            + PREFIX_ISBN + \"ISBN \"","lastModifiedDate":"2022-03-11"},{"lineNumber":26,"author":{"gitId":"bingsen0806"},"content":"            + \"[\" + PREFIX_TAG + \"TAG]...\"","lastModifiedDate":"2022-03-11"},{"lineNumber":27,"author":{"gitId":"bingsen0806"},"content":"            + \"[\" + PREFIX_AUTHOR + \"AUTHOR]...\\n\"","lastModifiedDate":"2022-03-11"},{"lineNumber":28,"author":{"gitId":"bingsen0806"},"content":"            + \"Example: \" + BOOK_COMMAND_GROUP + \" \" + ADD_COMMAND_WORD + \" \"","lastModifiedDate":"2022-03-11"},{"lineNumber":29,"author":{"gitId":"bingsen0806"},"content":"            + PREFIX_NAME + \"Harry Potter \"","lastModifiedDate":"2022-03-11"},{"lineNumber":30,"author":{"gitId":"bingsen0806"},"content":"            + PREFIX_ISBN + \"978-71617-018-8-5 \"","lastModifiedDate":"2022-03-11"},{"lineNumber":31,"author":{"gitId":"bingsen0806"},"content":"            + PREFIX_AUTHOR + \"J. K. Rowling \"","lastModifiedDate":"2022-03-11"},{"lineNumber":32,"author":{"gitId":"bingsen0806"},"content":"            + PREFIX_TAG + \"Adventure \"","lastModifiedDate":"2022-03-11"},{"lineNumber":33,"author":{"gitId":"bingsen0806"},"content":"            + PREFIX_TAG + \"Magic\";","lastModifiedDate":"2022-03-11"},{"lineNumber":34,"author":{"gitId":"bingsen0806"},"content":"","lastModifiedDate":"2022-03-10"},{"lineNumber":35,"author":{"gitId":"bingsen0806"},"content":"    public static final String MESSAGE_SUCCESS \u003d \"New book added: %1$s\";","lastModifiedDate":"2022-03-10"},{"lineNumber":36,"author":{"gitId":"bingsen0806"},"content":"","lastModifiedDate":"2022-03-10"},{"lineNumber":37,"author":{"gitId":"bingsen0806"},"content":"    private final Book toAdd;","lastModifiedDate":"2022-03-10"},{"lineNumber":38,"author":{"gitId":"bingsen0806"},"content":"","lastModifiedDate":"2022-03-10"},{"lineNumber":39,"author":{"gitId":"bingsen0806"},"content":"    /**","lastModifiedDate":"2022-03-10"},{"lineNumber":40,"author":{"gitId":"bingsen0806"},"content":"     * Creates an AddBookCommand to add the specified {@code Book}","lastModifiedDate":"2022-03-10"},{"lineNumber":41,"author":{"gitId":"bingsen0806"},"content":"     */","lastModifiedDate":"2022-03-10"},{"lineNumber":42,"author":{"gitId":"bingsen0806"},"content":"    public AddBookCommand(Book book) {","lastModifiedDate":"2022-03-10"},{"lineNumber":43,"author":{"gitId":"bingsen0806"},"content":"        requireNonNull(book);","lastModifiedDate":"2022-03-10"},{"lineNumber":44,"author":{"gitId":"bingsen0806"},"content":"        toAdd \u003d book;","lastModifiedDate":"2022-03-10"},{"lineNumber":45,"author":{"gitId":"bingsen0806"},"content":"    }","lastModifiedDate":"2022-03-10"},{"lineNumber":46,"author":{"gitId":"bingsen0806"},"content":"","lastModifiedDate":"2022-03-10"},{"lineNumber":47,"author":{"gitId":"bingsen0806"},"content":"    @Override","lastModifiedDate":"2022-03-10"},{"lineNumber":48,"author":{"gitId":"bingsen0806"},"content":"    public CommandResult execute(Model model) throws CommandException {","lastModifiedDate":"2022-03-10"},{"lineNumber":49,"author":{"gitId":"bingsen0806"},"content":"        requireNonNull(model);","lastModifiedDate":"2022-03-10"},{"lineNumber":50,"author":{"gitId":"bingsen0806"},"content":"","lastModifiedDate":"2022-03-10"},{"lineNumber":51,"author":{"gitId":"bingsen0806"},"content":"        model.addBook(toAdd);","lastModifiedDate":"2022-03-10"},{"lineNumber":52,"author":{"gitId":"bingsen0806"},"content":"        return new CommandResult(String.format(MESSAGE_SUCCESS, toAdd));","lastModifiedDate":"2022-03-10"},{"lineNumber":53,"author":{"gitId":"bingsen0806"},"content":"    }","lastModifiedDate":"2022-03-10"},{"lineNumber":54,"author":{"gitId":"bingsen0806"},"content":"","lastModifiedDate":"2022-03-10"},{"lineNumber":55,"author":{"gitId":"bingsen0806"},"content":"    @Override","lastModifiedDate":"2022-03-10"},{"lineNumber":56,"author":{"gitId":"bingsen0806"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2022-03-10"},{"lineNumber":57,"author":{"gitId":"bingsen0806"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2022-03-11"},{"lineNumber":58,"author":{"gitId":"bingsen0806"},"content":"            return true;","lastModifiedDate":"2022-03-11"},{"lineNumber":59,"author":{"gitId":"bingsen0806"},"content":"        }","lastModifiedDate":"2022-03-11"},{"lineNumber":60,"author":{"gitId":"bingsen0806"},"content":"        if (!(other instanceof AddBookCommand)) {","lastModifiedDate":"2022-03-11"},{"lineNumber":61,"author":{"gitId":"bingsen0806"},"content":"            return false;","lastModifiedDate":"2022-03-11"},{"lineNumber":62,"author":{"gitId":"bingsen0806"},"content":"        }","lastModifiedDate":"2022-03-11"},{"lineNumber":63,"author":{"gitId":"bingsen0806"},"content":"        Book otherToAdd \u003d ((AddBookCommand) other).toAdd;","lastModifiedDate":"2022-03-11"},{"lineNumber":64,"author":{"gitId":"bingsen0806"},"content":"        // Compare without timeAdded attribute of Book","lastModifiedDate":"2022-03-11"},{"lineNumber":65,"author":{"gitId":"bingsen0806"},"content":"        return otherToAdd.getBookName().equals(toAdd.getBookName())","lastModifiedDate":"2022-03-11"},{"lineNumber":66,"author":{"gitId":"bingsen0806"},"content":"                \u0026\u0026 otherToAdd.getIsbn().equals(toAdd.getIsbn())","lastModifiedDate":"2022-03-11"},{"lineNumber":67,"author":{"gitId":"bingsen0806"},"content":"                \u0026\u0026 otherToAdd.getTags().equals(toAdd.getTags())","lastModifiedDate":"2022-03-11"},{"lineNumber":68,"author":{"gitId":"bingsen0806"},"content":"                \u0026\u0026 otherToAdd.getAuthors().equals(toAdd.getAuthors());","lastModifiedDate":"2022-03-11"},{"lineNumber":69,"author":{"gitId":"bingsen0806"},"content":"    }","lastModifiedDate":"2022-03-10"},{"lineNumber":70,"author":{"gitId":"bingsen0806"},"content":"}","lastModifiedDate":"2022-03-10"}],"authorContributionMap":{"bingsen0806":70}},{"path":"src/main/java/seedu/address/logic/commands/book/DeleteBookCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"bingsen0806"},"content":"package seedu.address.logic.commands.book;","lastModifiedDate":"2022-03-10"},{"lineNumber":2,"author":{"gitId":"bingsen0806"},"content":"","lastModifiedDate":"2022-03-10"},{"lineNumber":3,"author":{"gitId":"bingsen0806"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2022-03-10"},{"lineNumber":4,"author":{"gitId":"bingsen0806"},"content":"","lastModifiedDate":"2022-03-10"},{"lineNumber":5,"author":{"gitId":"bingsen0806"},"content":"import java.util.List;","lastModifiedDate":"2022-03-10"},{"lineNumber":6,"author":{"gitId":"bingsen0806"},"content":"","lastModifiedDate":"2022-03-10"},{"lineNumber":7,"author":{"gitId":"bingsen0806"},"content":"import seedu.address.commons.core.Messages;","lastModifiedDate":"2022-03-10"},{"lineNumber":8,"author":{"gitId":"bingsen0806"},"content":"import seedu.address.commons.core.index.Index;","lastModifiedDate":"2022-03-10"},{"lineNumber":9,"author":{"gitId":"bingsen0806"},"content":"import seedu.address.logic.commands.Command;","lastModifiedDate":"2022-03-10"},{"lineNumber":10,"author":{"gitId":"bingsen0806"},"content":"import seedu.address.logic.commands.CommandResult;","lastModifiedDate":"2022-03-10"},{"lineNumber":11,"author":{"gitId":"bingsen0806"},"content":"import seedu.address.logic.commands.exceptions.CommandException;","lastModifiedDate":"2022-03-10"},{"lineNumber":12,"author":{"gitId":"bingsen0806"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2022-03-10"},{"lineNumber":13,"author":{"gitId":"bingsen0806"},"content":"import seedu.address.model.book.Book;","lastModifiedDate":"2022-03-10"},{"lineNumber":14,"author":{"gitId":"bingsen0806"},"content":"","lastModifiedDate":"2022-03-10"},{"lineNumber":15,"author":{"gitId":"bingsen0806"},"content":"/**","lastModifiedDate":"2022-03-10"},{"lineNumber":16,"author":{"gitId":"bingsen0806"},"content":" * Deletes a book identified using it\u0027s displayed index from LibTask.","lastModifiedDate":"2022-03-10"},{"lineNumber":17,"author":{"gitId":"bingsen0806"},"content":" */","lastModifiedDate":"2022-03-10"},{"lineNumber":18,"author":{"gitId":"bingsen0806"},"content":"public class DeleteBookCommand extends Command {","lastModifiedDate":"2022-03-10"},{"lineNumber":19,"author":{"gitId":"bingsen0806"},"content":"","lastModifiedDate":"2022-03-10"},{"lineNumber":20,"author":{"gitId":"bingsen0806"},"content":"    public static final String MESSAGE_USAGE \u003d BOOK_COMMAND_GROUP + \" \" + DELETE_COMMAND_WORD","lastModifiedDate":"2022-03-11"},{"lineNumber":21,"author":{"gitId":"bingsen0806"},"content":"            + \": Deletes the book identified by the index number used in the displayed book list.\\n\"","lastModifiedDate":"2022-03-10"},{"lineNumber":22,"author":{"gitId":"bingsen0806"},"content":"            + \"Parameters: INDEX (must be a positive integer)\\n\"","lastModifiedDate":"2022-03-10"},{"lineNumber":23,"author":{"gitId":"bingsen0806"},"content":"            + \"Example: \" + BOOK_COMMAND_GROUP + \" \" + DELETE_COMMAND_WORD + \" 1\";","lastModifiedDate":"2022-03-11"},{"lineNumber":24,"author":{"gitId":"bingsen0806"},"content":"","lastModifiedDate":"2022-03-10"},{"lineNumber":25,"author":{"gitId":"bingsen0806"},"content":"    public static final String MESSAGE_DELETE_BOOK_SUCCESS \u003d \"Deleted Book: %1$s\";","lastModifiedDate":"2022-03-11"},{"lineNumber":26,"author":{"gitId":"bingsen0806"},"content":"","lastModifiedDate":"2022-03-10"},{"lineNumber":27,"author":{"gitId":"bingsen0806"},"content":"    private final Index targetIndex;","lastModifiedDate":"2022-03-10"},{"lineNumber":28,"author":{"gitId":"bingsen0806"},"content":"","lastModifiedDate":"2022-03-10"},{"lineNumber":29,"author":{"gitId":"bingsen0806"},"content":"    public DeleteBookCommand(Index targetIndex) {","lastModifiedDate":"2022-03-10"},{"lineNumber":30,"author":{"gitId":"bingsen0806"},"content":"        this.targetIndex \u003d targetIndex;","lastModifiedDate":"2022-03-10"},{"lineNumber":31,"author":{"gitId":"bingsen0806"},"content":"    }","lastModifiedDate":"2022-03-10"},{"lineNumber":32,"author":{"gitId":"bingsen0806"},"content":"","lastModifiedDate":"2022-03-10"},{"lineNumber":33,"author":{"gitId":"bingsen0806"},"content":"    @Override","lastModifiedDate":"2022-03-10"},{"lineNumber":34,"author":{"gitId":"bingsen0806"},"content":"    public CommandResult execute(Model model) throws CommandException {","lastModifiedDate":"2022-03-10"},{"lineNumber":35,"author":{"gitId":"bingsen0806"},"content":"        requireNonNull(model);","lastModifiedDate":"2022-03-10"},{"lineNumber":36,"author":{"gitId":"bingsen0806"},"content":"        List\u003cBook\u003e lastShownList \u003d model.getFilteredBookList();","lastModifiedDate":"2022-03-10"},{"lineNumber":37,"author":{"gitId":"bingsen0806"},"content":"","lastModifiedDate":"2022-03-10"},{"lineNumber":38,"author":{"gitId":"bingsen0806"},"content":"        if (targetIndex.getZeroBased() \u003e\u003d lastShownList.size()) {","lastModifiedDate":"2022-03-10"},{"lineNumber":39,"author":{"gitId":"bingsen0806"},"content":"            throw new CommandException(Messages.MESSAGE_INVALID_BOOK_DISPLAYED_INDEX);","lastModifiedDate":"2022-03-11"},{"lineNumber":40,"author":{"gitId":"bingsen0806"},"content":"        }","lastModifiedDate":"2022-03-10"},{"lineNumber":41,"author":{"gitId":"bingsen0806"},"content":"","lastModifiedDate":"2022-03-10"},{"lineNumber":42,"author":{"gitId":"bingsen0806"},"content":"        Book bookToDelete \u003d lastShownList.get(targetIndex.getZeroBased());","lastModifiedDate":"2022-03-10"},{"lineNumber":43,"author":{"gitId":"bingsen0806"},"content":"        model.deleteBook(bookToDelete);","lastModifiedDate":"2022-03-10"},{"lineNumber":44,"author":{"gitId":"bingsen0806"},"content":"","lastModifiedDate":"2022-03-11"},{"lineNumber":45,"author":{"gitId":"bingsen0806"},"content":"        return new CommandResult(String.format(MESSAGE_DELETE_BOOK_SUCCESS, bookToDelete));","lastModifiedDate":"2022-03-11"},{"lineNumber":46,"author":{"gitId":"bingsen0806"},"content":"    }","lastModifiedDate":"2022-03-10"},{"lineNumber":47,"author":{"gitId":"bingsen0806"},"content":"","lastModifiedDate":"2022-03-10"},{"lineNumber":48,"author":{"gitId":"bingsen0806"},"content":"    @Override","lastModifiedDate":"2022-03-10"},{"lineNumber":49,"author":{"gitId":"bingsen0806"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2022-03-10"},{"lineNumber":50,"author":{"gitId":"bingsen0806"},"content":"        return other \u003d\u003d this // short circuit if same object","lastModifiedDate":"2022-03-10"},{"lineNumber":51,"author":{"gitId":"bingsen0806"},"content":"                || (other instanceof DeleteBookCommand // instanceof handles nulls","lastModifiedDate":"2022-03-10"},{"lineNumber":52,"author":{"gitId":"bingsen0806"},"content":"                \u0026\u0026 targetIndex.equals(((DeleteBookCommand) other).targetIndex)); // state check","lastModifiedDate":"2022-03-10"},{"lineNumber":53,"author":{"gitId":"bingsen0806"},"content":"    }","lastModifiedDate":"2022-03-10"},{"lineNumber":54,"author":{"gitId":"bingsen0806"},"content":"}","lastModifiedDate":"2022-03-10"}],"authorContributionMap":{"bingsen0806":54}},{"path":"src/main/java/seedu/address/logic/commands/book/EditBookCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"yuqitanyq"},"content":"package seedu.address.logic.commands.book;","lastModifiedDate":"2022-03-10"},{"lineNumber":2,"author":{"gitId":"yuqitanyq"},"content":"","lastModifiedDate":"2022-03-10"},{"lineNumber":3,"author":{"gitId":"yuqitanyq"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2022-03-10"},{"lineNumber":4,"author":{"gitId":"yuqitanyq"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_AUTHOR;","lastModifiedDate":"2022-03-10"},{"lineNumber":5,"author":{"gitId":"yuqitanyq"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_ISBN;","lastModifiedDate":"2022-03-10"},{"lineNumber":6,"author":{"gitId":"yuqitanyq"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_NAME;","lastModifiedDate":"2022-03-10"},{"lineNumber":7,"author":{"gitId":"yuqitanyq"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_TAG;","lastModifiedDate":"2022-03-10"},{"lineNumber":8,"author":{"gitId":"yuqitanyq"},"content":"import static seedu.address.model.Model.PREDICATE_SHOW_ALL_BOOKS;","lastModifiedDate":"2022-03-10"},{"lineNumber":9,"author":{"gitId":"yuqitanyq"},"content":"","lastModifiedDate":"2022-03-10"},{"lineNumber":10,"author":{"gitId":"yuqitanyq"},"content":"import java.util.Collections;","lastModifiedDate":"2022-03-10"},{"lineNumber":11,"author":{"gitId":"yuqitanyq"},"content":"import java.util.HashSet;","lastModifiedDate":"2022-03-10"},{"lineNumber":12,"author":{"gitId":"yuqitanyq"},"content":"import java.util.List;","lastModifiedDate":"2022-03-10"},{"lineNumber":13,"author":{"gitId":"yuqitanyq"},"content":"import java.util.Optional;","lastModifiedDate":"2022-03-10"},{"lineNumber":14,"author":{"gitId":"yuqitanyq"},"content":"import java.util.Set;","lastModifiedDate":"2022-03-10"},{"lineNumber":15,"author":{"gitId":"yuqitanyq"},"content":"","lastModifiedDate":"2022-03-10"},{"lineNumber":16,"author":{"gitId":"yuqitanyq"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2022-03-10"},{"lineNumber":17,"author":{"gitId":"yuqitanyq"},"content":"import seedu.address.commons.core.Messages;","lastModifiedDate":"2022-03-10"},{"lineNumber":18,"author":{"gitId":"yuqitanyq"},"content":"import seedu.address.commons.core.index.Index;","lastModifiedDate":"2022-03-10"},{"lineNumber":19,"author":{"gitId":"yuqitanyq"},"content":"import seedu.address.commons.util.CollectionUtil;","lastModifiedDate":"2022-03-10"},{"lineNumber":20,"author":{"gitId":"yuqitanyq"},"content":"import seedu.address.logic.commands.Command;","lastModifiedDate":"2022-03-10"},{"lineNumber":21,"author":{"gitId":"yuqitanyq"},"content":"import seedu.address.logic.commands.CommandResult;","lastModifiedDate":"2022-03-10"},{"lineNumber":22,"author":{"gitId":"yuqitanyq"},"content":"import seedu.address.logic.commands.exceptions.CommandException;","lastModifiedDate":"2022-03-10"},{"lineNumber":23,"author":{"gitId":"yuqitanyq"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2022-03-10"},{"lineNumber":24,"author":{"gitId":"yuqitanyq"},"content":"import seedu.address.model.book.Author;","lastModifiedDate":"2022-03-10"},{"lineNumber":25,"author":{"gitId":"yuqitanyq"},"content":"import seedu.address.model.book.Book;","lastModifiedDate":"2022-03-10"},{"lineNumber":26,"author":{"gitId":"yuqitanyq"},"content":"import seedu.address.model.book.BookName;","lastModifiedDate":"2022-03-10"},{"lineNumber":27,"author":{"gitId":"yuqitanyq"},"content":"import seedu.address.model.book.Isbn;","lastModifiedDate":"2022-03-10"},{"lineNumber":28,"author":{"gitId":"yuqitanyq"},"content":"import seedu.address.model.tag.Tag;","lastModifiedDate":"2022-03-10"},{"lineNumber":29,"author":{"gitId":"yuqitanyq"},"content":"","lastModifiedDate":"2022-03-10"},{"lineNumber":30,"author":{"gitId":"yuqitanyq"},"content":"/**","lastModifiedDate":"2022-03-10"},{"lineNumber":31,"author":{"gitId":"yuqitanyq"},"content":" * Edits the details of an existing book in the address book.","lastModifiedDate":"2022-03-10"},{"lineNumber":32,"author":{"gitId":"yuqitanyq"},"content":" */","lastModifiedDate":"2022-03-10"},{"lineNumber":33,"author":{"gitId":"yuqitanyq"},"content":"public class EditBookCommand extends Command {","lastModifiedDate":"2022-03-10"},{"lineNumber":34,"author":{"gitId":"yuqitanyq"},"content":"","lastModifiedDate":"2022-03-10"},{"lineNumber":35,"author":{"gitId":"yuqitanyq"},"content":"    public static final String MESSAGE_USAGE \u003d BOOK_COMMAND_GROUP + \" \" + EDIT_COMMAND_WORD","lastModifiedDate":"2022-03-12"},{"lineNumber":36,"author":{"gitId":"yuqitanyq"},"content":"            + \": Edits the details of the book at a specified index \"","lastModifiedDate":"2022-03-12"},{"lineNumber":37,"author":{"gitId":"yuqitanyq"},"content":"            + \"by the index number used in the displayed book list. \"","lastModifiedDate":"2022-03-10"},{"lineNumber":38,"author":{"gitId":"yuqitanyq"},"content":"            + \"Existing values will be overwritten by the input values.\\n\"","lastModifiedDate":"2022-03-10"},{"lineNumber":39,"author":{"gitId":"yuqitanyq"},"content":"            + \"Parameters: INDEX (must be a positive integer) \"","lastModifiedDate":"2022-03-10"},{"lineNumber":40,"author":{"gitId":"yuqitanyq"},"content":"            + \"[\" + PREFIX_NAME + \"NAME] \"","lastModifiedDate":"2022-03-10"},{"lineNumber":41,"author":{"gitId":"yuqitanyq"},"content":"            + \"[\" + PREFIX_ISBN + \"ISBN] \"","lastModifiedDate":"2022-03-10"},{"lineNumber":42,"author":{"gitId":"yuqitanyq"},"content":"            + \"[\" + PREFIX_AUTHOR + \"AUTHOR] \"","lastModifiedDate":"2022-03-10"},{"lineNumber":43,"author":{"gitId":"yuqitanyq"},"content":"            + \"[\" + PREFIX_TAG + \"TAG]...\\n\"","lastModifiedDate":"2022-03-10"},{"lineNumber":44,"author":{"gitId":"yuqitanyq"},"content":"            + \"Example: \" + BOOK_COMMAND_GROUP + \" \" + EDIT_COMMAND_WORD + \" 1 \"","lastModifiedDate":"2022-03-12"},{"lineNumber":45,"author":{"gitId":"yuqitanyq"},"content":"            + PREFIX_NAME + \"John Doe \"","lastModifiedDate":"2022-03-10"},{"lineNumber":46,"author":{"gitId":"yuqitanyq"},"content":"            + PREFIX_ISBN + \"9780747532743\"","lastModifiedDate":"2022-03-10"},{"lineNumber":47,"author":{"gitId":"yuqitanyq"},"content":"            + PREFIX_AUTHOR + \"JK Rowling\"","lastModifiedDate":"2022-03-10"},{"lineNumber":48,"author":{"gitId":"yuqitanyq"},"content":"            + PREFIX_TAG + \"Fiction\";","lastModifiedDate":"2022-03-10"},{"lineNumber":49,"author":{"gitId":"yuqitanyq"},"content":"","lastModifiedDate":"2022-03-10"},{"lineNumber":50,"author":{"gitId":"yuqitanyq"},"content":"    public static final String MESSAGE_EDIT_BOOK_SUCCESS \u003d \"Edited Book: %1$s\";","lastModifiedDate":"2022-03-10"},{"lineNumber":51,"author":{"gitId":"yuqitanyq"},"content":"    public static final String MESSAGE_NOT_EDITED \u003d \"At least ISBN, author or category must be provided.\";","lastModifiedDate":"2022-03-10"},{"lineNumber":52,"author":{"gitId":"yuqitanyq"},"content":"","lastModifiedDate":"2022-03-10"},{"lineNumber":53,"author":{"gitId":"yuqitanyq"},"content":"    private final Index index;","lastModifiedDate":"2022-03-10"},{"lineNumber":54,"author":{"gitId":"yuqitanyq"},"content":"    private final EditBookDescriptor editBookDescriptor;","lastModifiedDate":"2022-03-10"},{"lineNumber":55,"author":{"gitId":"yuqitanyq"},"content":"","lastModifiedDate":"2022-03-10"},{"lineNumber":56,"author":{"gitId":"yuqitanyq"},"content":"    /**","lastModifiedDate":"2022-03-10"},{"lineNumber":57,"author":{"gitId":"yuqitanyq"},"content":"     * @param index of the book in the filtered book list to edit","lastModifiedDate":"2022-03-10"},{"lineNumber":58,"author":{"gitId":"yuqitanyq"},"content":"     * @param editBookDescriptor details to edit the book with","lastModifiedDate":"2022-03-10"},{"lineNumber":59,"author":{"gitId":"yuqitanyq"},"content":"     */","lastModifiedDate":"2022-03-10"},{"lineNumber":60,"author":{"gitId":"yuqitanyq"},"content":"    public EditBookCommand(Index index, EditBookDescriptor editBookDescriptor) {","lastModifiedDate":"2022-03-10"},{"lineNumber":61,"author":{"gitId":"yuqitanyq"},"content":"        requireNonNull(index);","lastModifiedDate":"2022-03-10"},{"lineNumber":62,"author":{"gitId":"yuqitanyq"},"content":"        requireNonNull(editBookDescriptor);","lastModifiedDate":"2022-03-10"},{"lineNumber":63,"author":{"gitId":"yuqitanyq"},"content":"","lastModifiedDate":"2022-03-10"},{"lineNumber":64,"author":{"gitId":"yuqitanyq"},"content":"        this.index \u003d index;","lastModifiedDate":"2022-03-10"},{"lineNumber":65,"author":{"gitId":"yuqitanyq"},"content":"        this.editBookDescriptor \u003d new EditBookDescriptor(editBookDescriptor);","lastModifiedDate":"2022-03-10"},{"lineNumber":66,"author":{"gitId":"yuqitanyq"},"content":"    }","lastModifiedDate":"2022-03-10"},{"lineNumber":67,"author":{"gitId":"yuqitanyq"},"content":"","lastModifiedDate":"2022-03-10"},{"lineNumber":68,"author":{"gitId":"yuqitanyq"},"content":"    @Override","lastModifiedDate":"2022-03-10"},{"lineNumber":69,"author":{"gitId":"yuqitanyq"},"content":"    public CommandResult execute(Model model) throws CommandException {","lastModifiedDate":"2022-03-10"},{"lineNumber":70,"author":{"gitId":"yuqitanyq"},"content":"        requireNonNull(model);","lastModifiedDate":"2022-03-10"},{"lineNumber":71,"author":{"gitId":"yuqitanyq"},"content":"        ObservableList\u003cBook\u003e lastShownList \u003d model.getFilteredBookList();","lastModifiedDate":"2022-03-10"},{"lineNumber":72,"author":{"gitId":"yuqitanyq"},"content":"","lastModifiedDate":"2022-03-10"},{"lineNumber":73,"author":{"gitId":"yuqitanyq"},"content":"        if (index.getZeroBased() \u003e\u003d lastShownList.size()) {","lastModifiedDate":"2022-03-10"},{"lineNumber":74,"author":{"gitId":"yuqitanyq"},"content":"            throw new CommandException(Messages.MESSAGE_INVALID_BOOK_DISPLAYED_INDEX);","lastModifiedDate":"2022-03-10"},{"lineNumber":75,"author":{"gitId":"yuqitanyq"},"content":"        }","lastModifiedDate":"2022-03-10"},{"lineNumber":76,"author":{"gitId":"yuqitanyq"},"content":"","lastModifiedDate":"2022-03-10"},{"lineNumber":77,"author":{"gitId":"yuqitanyq"},"content":"        Book bookToEdit \u003d lastShownList.get(index.getZeroBased()); //change to bookList","lastModifiedDate":"2022-03-10"},{"lineNumber":78,"author":{"gitId":"yuqitanyq"},"content":"        Book editedBook \u003d createEditedBook(bookToEdit, editBookDescriptor);","lastModifiedDate":"2022-03-10"},{"lineNumber":79,"author":{"gitId":"yuqitanyq"},"content":"","lastModifiedDate":"2022-03-10"},{"lineNumber":80,"author":{"gitId":"yuqitanyq"},"content":"        model.setBook(bookToEdit, editedBook);","lastModifiedDate":"2022-03-10"},{"lineNumber":81,"author":{"gitId":"yuqitanyq"},"content":"        model.updateFilteredBookList(PREDICATE_SHOW_ALL_BOOKS);","lastModifiedDate":"2022-03-10"},{"lineNumber":82,"author":{"gitId":"yuqitanyq"},"content":"        return new CommandResult(String.format(MESSAGE_EDIT_BOOK_SUCCESS, editedBook));","lastModifiedDate":"2022-03-10"},{"lineNumber":83,"author":{"gitId":"yuqitanyq"},"content":"    }","lastModifiedDate":"2022-03-10"},{"lineNumber":84,"author":{"gitId":"yuqitanyq"},"content":"","lastModifiedDate":"2022-03-10"},{"lineNumber":85,"author":{"gitId":"yuqitanyq"},"content":"    /**","lastModifiedDate":"2022-03-10"},{"lineNumber":86,"author":{"gitId":"yuqitanyq"},"content":"     * Creates and returns a {@code Book} with the details of {@code bookToEdit}","lastModifiedDate":"2022-03-10"},{"lineNumber":87,"author":{"gitId":"yuqitanyq"},"content":"     * edited with {@code editBookDescriptor}.","lastModifiedDate":"2022-03-10"},{"lineNumber":88,"author":{"gitId":"yuqitanyq"},"content":"     */","lastModifiedDate":"2022-03-10"},{"lineNumber":89,"author":{"gitId":"yuqitanyq"},"content":"    private static Book createEditedBook(Book bookToEdit, EditBookDescriptor editBookDescriptor) {","lastModifiedDate":"2022-03-10"},{"lineNumber":90,"author":{"gitId":"yuqitanyq"},"content":"        assert bookToEdit !\u003d null;","lastModifiedDate":"2022-03-10"},{"lineNumber":91,"author":{"gitId":"yuqitanyq"},"content":"","lastModifiedDate":"2022-03-10"},{"lineNumber":92,"author":{"gitId":"yuqitanyq"},"content":"        BookName updatedName \u003d editBookDescriptor.getBookName().orElse(bookToEdit.getBookName());","lastModifiedDate":"2022-03-10"},{"lineNumber":93,"author":{"gitId":"yuqitanyq"},"content":"        Isbn updatedIsbn \u003d editBookDescriptor.getIsbn().orElse(bookToEdit.getIsbn());","lastModifiedDate":"2022-03-10"},{"lineNumber":94,"author":{"gitId":"yuqitanyq"},"content":"        List\u003cAuthor\u003e updatedAuthor \u003d editBookDescriptor.getAuthors().orElse(bookToEdit.getAuthors());","lastModifiedDate":"2022-03-10"},{"lineNumber":95,"author":{"gitId":"yuqitanyq"},"content":"        Set\u003cTag\u003e updatedTags \u003d editBookDescriptor.getTags().orElse(bookToEdit.getTags());","lastModifiedDate":"2022-03-10"},{"lineNumber":96,"author":{"gitId":"yuqitanyq"},"content":"        long updatedTimeAdded \u003d bookToEdit.getTimeAdded();","lastModifiedDate":"2022-03-12"},{"lineNumber":97,"author":{"gitId":"yuqitanyq"},"content":"","lastModifiedDate":"2022-03-10"},{"lineNumber":98,"author":{"gitId":"yuqitanyq"},"content":"        return new Book(updatedName, updatedIsbn, updatedAuthor, updatedTags, updatedTimeAdded);","lastModifiedDate":"2022-03-12"},{"lineNumber":99,"author":{"gitId":"yuqitanyq"},"content":"    }","lastModifiedDate":"2022-03-10"},{"lineNumber":100,"author":{"gitId":"yuqitanyq"},"content":"","lastModifiedDate":"2022-03-10"},{"lineNumber":101,"author":{"gitId":"yuqitanyq"},"content":"    @Override","lastModifiedDate":"2022-03-10"},{"lineNumber":102,"author":{"gitId":"yuqitanyq"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2022-03-10"},{"lineNumber":103,"author":{"gitId":"yuqitanyq"},"content":"        // short circuit if same object","lastModifiedDate":"2022-03-10"},{"lineNumber":104,"author":{"gitId":"yuqitanyq"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2022-03-10"},{"lineNumber":105,"author":{"gitId":"yuqitanyq"},"content":"            return true;","lastModifiedDate":"2022-03-10"},{"lineNumber":106,"author":{"gitId":"yuqitanyq"},"content":"        }","lastModifiedDate":"2022-03-10"},{"lineNumber":107,"author":{"gitId":"yuqitanyq"},"content":"","lastModifiedDate":"2022-03-10"},{"lineNumber":108,"author":{"gitId":"yuqitanyq"},"content":"        // instanceof handles nulls","lastModifiedDate":"2022-03-10"},{"lineNumber":109,"author":{"gitId":"yuqitanyq"},"content":"        if (!(other instanceof EditBookCommand)) {","lastModifiedDate":"2022-03-10"},{"lineNumber":110,"author":{"gitId":"yuqitanyq"},"content":"            return false;","lastModifiedDate":"2022-03-10"},{"lineNumber":111,"author":{"gitId":"yuqitanyq"},"content":"        }","lastModifiedDate":"2022-03-10"},{"lineNumber":112,"author":{"gitId":"yuqitanyq"},"content":"","lastModifiedDate":"2022-03-10"},{"lineNumber":113,"author":{"gitId":"yuqitanyq"},"content":"        // state check","lastModifiedDate":"2022-03-10"},{"lineNumber":114,"author":{"gitId":"yuqitanyq"},"content":"        EditBookCommand e \u003d (EditBookCommand) other;","lastModifiedDate":"2022-03-10"},{"lineNumber":115,"author":{"gitId":"yuqitanyq"},"content":"        return index.equals(e.index)","lastModifiedDate":"2022-03-10"},{"lineNumber":116,"author":{"gitId":"yuqitanyq"},"content":"                \u0026\u0026 editBookDescriptor.equals(e.editBookDescriptor);","lastModifiedDate":"2022-03-10"},{"lineNumber":117,"author":{"gitId":"yuqitanyq"},"content":"    }","lastModifiedDate":"2022-03-10"},{"lineNumber":118,"author":{"gitId":"yuqitanyq"},"content":"","lastModifiedDate":"2022-03-10"},{"lineNumber":119,"author":{"gitId":"yuqitanyq"},"content":"    /**","lastModifiedDate":"2022-03-10"},{"lineNumber":120,"author":{"gitId":"yuqitanyq"},"content":"     * Stores the details to edit the book with. Each non-empty field value will replace the","lastModifiedDate":"2022-03-10"},{"lineNumber":121,"author":{"gitId":"yuqitanyq"},"content":"     * corresponding field value of the book.","lastModifiedDate":"2022-03-10"},{"lineNumber":122,"author":{"gitId":"yuqitanyq"},"content":"     */","lastModifiedDate":"2022-03-10"},{"lineNumber":123,"author":{"gitId":"yuqitanyq"},"content":"    public static class EditBookDescriptor {","lastModifiedDate":"2022-03-10"},{"lineNumber":124,"author":{"gitId":"yuqitanyq"},"content":"        private BookName bookName;","lastModifiedDate":"2022-03-10"},{"lineNumber":125,"author":{"gitId":"yuqitanyq"},"content":"        private Isbn isbn;","lastModifiedDate":"2022-03-10"},{"lineNumber":126,"author":{"gitId":"yuqitanyq"},"content":"        private List\u003cAuthor\u003e authors;","lastModifiedDate":"2022-03-10"},{"lineNumber":127,"author":{"gitId":"yuqitanyq"},"content":"        private Set\u003cTag\u003e tags;","lastModifiedDate":"2022-03-10"},{"lineNumber":128,"author":{"gitId":"yuqitanyq"},"content":"","lastModifiedDate":"2022-03-10"},{"lineNumber":129,"author":{"gitId":"yuqitanyq"},"content":"        public EditBookDescriptor() {","lastModifiedDate":"2022-03-10"},{"lineNumber":130,"author":{"gitId":"yuqitanyq"},"content":"        }","lastModifiedDate":"2022-03-10"},{"lineNumber":131,"author":{"gitId":"yuqitanyq"},"content":"","lastModifiedDate":"2022-03-10"},{"lineNumber":132,"author":{"gitId":"yuqitanyq"},"content":"        /**","lastModifiedDate":"2022-03-10"},{"lineNumber":133,"author":{"gitId":"yuqitanyq"},"content":"         * Copy constructor.","lastModifiedDate":"2022-03-10"},{"lineNumber":134,"author":{"gitId":"yuqitanyq"},"content":"         * A defensive copy of {@code tags} is used internally.","lastModifiedDate":"2022-03-10"},{"lineNumber":135,"author":{"gitId":"yuqitanyq"},"content":"         */","lastModifiedDate":"2022-03-10"},{"lineNumber":136,"author":{"gitId":"yuqitanyq"},"content":"        public EditBookDescriptor(EditBookDescriptor toCopy) {","lastModifiedDate":"2022-03-10"},{"lineNumber":137,"author":{"gitId":"yuqitanyq"},"content":"            setBookName(toCopy.bookName);","lastModifiedDate":"2022-03-10"},{"lineNumber":138,"author":{"gitId":"yuqitanyq"},"content":"            setIsbn(toCopy.isbn);","lastModifiedDate":"2022-03-10"},{"lineNumber":139,"author":{"gitId":"yuqitanyq"},"content":"            setAuthors(toCopy.authors);","lastModifiedDate":"2022-03-10"},{"lineNumber":140,"author":{"gitId":"yuqitanyq"},"content":"            setTags(toCopy.tags);","lastModifiedDate":"2022-03-10"},{"lineNumber":141,"author":{"gitId":"yuqitanyq"},"content":"        }","lastModifiedDate":"2022-03-10"},{"lineNumber":142,"author":{"gitId":"yuqitanyq"},"content":"","lastModifiedDate":"2022-03-10"},{"lineNumber":143,"author":{"gitId":"yuqitanyq"},"content":"        /**","lastModifiedDate":"2022-03-10"},{"lineNumber":144,"author":{"gitId":"yuqitanyq"},"content":"         * Returns true if at least one field is edited.","lastModifiedDate":"2022-03-10"},{"lineNumber":145,"author":{"gitId":"yuqitanyq"},"content":"         */","lastModifiedDate":"2022-03-10"},{"lineNumber":146,"author":{"gitId":"yuqitanyq"},"content":"        public boolean isAnyFieldEdited() {","lastModifiedDate":"2022-03-10"},{"lineNumber":147,"author":{"gitId":"yuqitanyq"},"content":"            return CollectionUtil.isAnyNonNull(bookName, isbn, authors, tags);","lastModifiedDate":"2022-03-10"},{"lineNumber":148,"author":{"gitId":"yuqitanyq"},"content":"        }","lastModifiedDate":"2022-03-10"},{"lineNumber":149,"author":{"gitId":"yuqitanyq"},"content":"","lastModifiedDate":"2022-03-10"},{"lineNumber":150,"author":{"gitId":"yuqitanyq"},"content":"        public void setBookName(BookName bookname) {","lastModifiedDate":"2022-03-10"},{"lineNumber":151,"author":{"gitId":"yuqitanyq"},"content":"            this.bookName \u003d bookname;","lastModifiedDate":"2022-03-10"},{"lineNumber":152,"author":{"gitId":"yuqitanyq"},"content":"        }","lastModifiedDate":"2022-03-10"},{"lineNumber":153,"author":{"gitId":"yuqitanyq"},"content":"","lastModifiedDate":"2022-03-10"},{"lineNumber":154,"author":{"gitId":"yuqitanyq"},"content":"        public Optional\u003cBookName\u003e getBookName() {","lastModifiedDate":"2022-03-10"},{"lineNumber":155,"author":{"gitId":"yuqitanyq"},"content":"            return Optional.ofNullable(bookName);","lastModifiedDate":"2022-03-10"},{"lineNumber":156,"author":{"gitId":"yuqitanyq"},"content":"        }","lastModifiedDate":"2022-03-10"},{"lineNumber":157,"author":{"gitId":"yuqitanyq"},"content":"","lastModifiedDate":"2022-03-10"},{"lineNumber":158,"author":{"gitId":"yuqitanyq"},"content":"        public void setIsbn(Isbn isbn) {","lastModifiedDate":"2022-03-10"},{"lineNumber":159,"author":{"gitId":"yuqitanyq"},"content":"            this.isbn \u003d isbn;","lastModifiedDate":"2022-03-10"},{"lineNumber":160,"author":{"gitId":"yuqitanyq"},"content":"        }","lastModifiedDate":"2022-03-10"},{"lineNumber":161,"author":{"gitId":"yuqitanyq"},"content":"","lastModifiedDate":"2022-03-10"},{"lineNumber":162,"author":{"gitId":"yuqitanyq"},"content":"        public Optional\u003cIsbn\u003e getIsbn() {","lastModifiedDate":"2022-03-10"},{"lineNumber":163,"author":{"gitId":"yuqitanyq"},"content":"            return Optional.ofNullable(isbn);","lastModifiedDate":"2022-03-10"},{"lineNumber":164,"author":{"gitId":"yuqitanyq"},"content":"        }","lastModifiedDate":"2022-03-10"},{"lineNumber":165,"author":{"gitId":"yuqitanyq"},"content":"","lastModifiedDate":"2022-03-10"},{"lineNumber":166,"author":{"gitId":"yuqitanyq"},"content":"        public void setAuthors(List\u003cAuthor\u003e authors) {","lastModifiedDate":"2022-03-10"},{"lineNumber":167,"author":{"gitId":"yuqitanyq"},"content":"            this.authors \u003d authors;","lastModifiedDate":"2022-03-10"},{"lineNumber":168,"author":{"gitId":"yuqitanyq"},"content":"        }","lastModifiedDate":"2022-03-10"},{"lineNumber":169,"author":{"gitId":"yuqitanyq"},"content":"","lastModifiedDate":"2022-03-10"},{"lineNumber":170,"author":{"gitId":"yuqitanyq"},"content":"        public Optional\u003cList\u003cAuthor\u003e\u003e getAuthors() {","lastModifiedDate":"2022-03-10"},{"lineNumber":171,"author":{"gitId":"yuqitanyq"},"content":"            return Optional.ofNullable(authors);","lastModifiedDate":"2022-03-10"},{"lineNumber":172,"author":{"gitId":"yuqitanyq"},"content":"        }","lastModifiedDate":"2022-03-10"},{"lineNumber":173,"author":{"gitId":"yuqitanyq"},"content":"","lastModifiedDate":"2022-03-10"},{"lineNumber":174,"author":{"gitId":"yuqitanyq"},"content":"        /**","lastModifiedDate":"2022-03-10"},{"lineNumber":175,"author":{"gitId":"yuqitanyq"},"content":"         * Sets {@code tags} to this object\u0027s {@code tags}.","lastModifiedDate":"2022-03-10"},{"lineNumber":176,"author":{"gitId":"yuqitanyq"},"content":"         * A defensive copy of {@code tags} is used internally.","lastModifiedDate":"2022-03-10"},{"lineNumber":177,"author":{"gitId":"yuqitanyq"},"content":"         */","lastModifiedDate":"2022-03-10"},{"lineNumber":178,"author":{"gitId":"yuqitanyq"},"content":"        public void setTags(Set\u003cTag\u003e tags) {","lastModifiedDate":"2022-03-10"},{"lineNumber":179,"author":{"gitId":"yuqitanyq"},"content":"            this.tags \u003d (tags !\u003d null) ? new HashSet\u003c\u003e(tags) : null;","lastModifiedDate":"2022-03-10"},{"lineNumber":180,"author":{"gitId":"yuqitanyq"},"content":"        }","lastModifiedDate":"2022-03-10"},{"lineNumber":181,"author":{"gitId":"yuqitanyq"},"content":"","lastModifiedDate":"2022-03-10"},{"lineNumber":182,"author":{"gitId":"yuqitanyq"},"content":"        /**","lastModifiedDate":"2022-03-10"},{"lineNumber":183,"author":{"gitId":"yuqitanyq"},"content":"         * Returns an unmodifiable tag set, which throws {@code UnsupportedOperationException}","lastModifiedDate":"2022-03-10"},{"lineNumber":184,"author":{"gitId":"yuqitanyq"},"content":"         * if modification is attempted.","lastModifiedDate":"2022-03-10"},{"lineNumber":185,"author":{"gitId":"yuqitanyq"},"content":"         * Returns {@code Optional#empty()} if {@code tags} is null.","lastModifiedDate":"2022-03-10"},{"lineNumber":186,"author":{"gitId":"yuqitanyq"},"content":"         */","lastModifiedDate":"2022-03-10"},{"lineNumber":187,"author":{"gitId":"yuqitanyq"},"content":"        public Optional\u003cSet\u003cTag\u003e\u003e getTags() {","lastModifiedDate":"2022-03-10"},{"lineNumber":188,"author":{"gitId":"yuqitanyq"},"content":"            return (tags !\u003d null) ? Optional.of(Collections.unmodifiableSet(tags)) : Optional.empty();","lastModifiedDate":"2022-03-10"},{"lineNumber":189,"author":{"gitId":"yuqitanyq"},"content":"        }","lastModifiedDate":"2022-03-10"},{"lineNumber":190,"author":{"gitId":"yuqitanyq"},"content":"","lastModifiedDate":"2022-03-10"},{"lineNumber":191,"author":{"gitId":"yuqitanyq"},"content":"        @Override","lastModifiedDate":"2022-03-10"},{"lineNumber":192,"author":{"gitId":"yuqitanyq"},"content":"        public boolean equals(Object other) {","lastModifiedDate":"2022-03-10"},{"lineNumber":193,"author":{"gitId":"yuqitanyq"},"content":"            // short circuit if same object","lastModifiedDate":"2022-03-10"},{"lineNumber":194,"author":{"gitId":"yuqitanyq"},"content":"            if (other \u003d\u003d this) {","lastModifiedDate":"2022-03-10"},{"lineNumber":195,"author":{"gitId":"yuqitanyq"},"content":"                return true;","lastModifiedDate":"2022-03-10"},{"lineNumber":196,"author":{"gitId":"yuqitanyq"},"content":"            }","lastModifiedDate":"2022-03-10"},{"lineNumber":197,"author":{"gitId":"yuqitanyq"},"content":"","lastModifiedDate":"2022-03-10"},{"lineNumber":198,"author":{"gitId":"yuqitanyq"},"content":"            // instanceof handles nulls","lastModifiedDate":"2022-03-10"},{"lineNumber":199,"author":{"gitId":"yuqitanyq"},"content":"            if (!(other instanceof EditBookDescriptor)) {","lastModifiedDate":"2022-03-10"},{"lineNumber":200,"author":{"gitId":"yuqitanyq"},"content":"                return false;","lastModifiedDate":"2022-03-10"},{"lineNumber":201,"author":{"gitId":"yuqitanyq"},"content":"            }","lastModifiedDate":"2022-03-10"},{"lineNumber":202,"author":{"gitId":"yuqitanyq"},"content":"","lastModifiedDate":"2022-03-10"},{"lineNumber":203,"author":{"gitId":"yuqitanyq"},"content":"            // state check","lastModifiedDate":"2022-03-10"},{"lineNumber":204,"author":{"gitId":"yuqitanyq"},"content":"            EditBookDescriptor e \u003d (EditBookDescriptor) other;","lastModifiedDate":"2022-03-10"},{"lineNumber":205,"author":{"gitId":"yuqitanyq"},"content":"","lastModifiedDate":"2022-03-10"},{"lineNumber":206,"author":{"gitId":"yuqitanyq"},"content":"            return getBookName().equals(e.getBookName())","lastModifiedDate":"2022-03-10"},{"lineNumber":207,"author":{"gitId":"yuqitanyq"},"content":"                    \u0026\u0026 getIsbn().equals(e.getIsbn())","lastModifiedDate":"2022-03-10"},{"lineNumber":208,"author":{"gitId":"yuqitanyq"},"content":"                    \u0026\u0026 getAuthors().equals(e.getAuthors())","lastModifiedDate":"2022-03-10"},{"lineNumber":209,"author":{"gitId":"yuqitanyq"},"content":"                    \u0026\u0026 getTags().equals(e.getTags());","lastModifiedDate":"2022-03-10"},{"lineNumber":210,"author":{"gitId":"yuqitanyq"},"content":"        }","lastModifiedDate":"2022-03-10"},{"lineNumber":211,"author":{"gitId":"yuqitanyq"},"content":"    }","lastModifiedDate":"2022-03-10"},{"lineNumber":212,"author":{"gitId":"yuqitanyq"},"content":"}","lastModifiedDate":"2022-03-10"}],"authorContributionMap":{"yuqitanyq":212}},{"path":"src/main/java/seedu/address/logic/commands/exceptions/CommandException.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.commands.exceptions;","lastModifiedDate":"2017-02-05"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-05"},{"lineNumber":3,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-02-05"},{"lineNumber":4,"author":{"gitId":"aditi2313"},"content":" * Represents an error which occurs during execution of a Command.","lastModifiedDate":"2022-03-11"},{"lineNumber":5,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-02-05"},{"lineNumber":6,"author":{"gitId":"-"},"content":"public class CommandException extends Exception {","lastModifiedDate":"2017-02-05"},{"lineNumber":7,"author":{"gitId":"-"},"content":"    public CommandException(String message) {","lastModifiedDate":"2017-02-05"},{"lineNumber":8,"author":{"gitId":"-"},"content":"        super(message);","lastModifiedDate":"2017-02-05"},{"lineNumber":9,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-02-05"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-06"},{"lineNumber":11,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-08-06"},{"lineNumber":12,"author":{"gitId":"-"},"content":"     * Constructs a new {@code CommandException} with the specified detail {@code message} and {@code cause}.","lastModifiedDate":"2018-08-06"},{"lineNumber":13,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-08-06"},{"lineNumber":14,"author":{"gitId":"-"},"content":"    public CommandException(String message, Throwable cause) {","lastModifiedDate":"2018-08-06"},{"lineNumber":15,"author":{"gitId":"-"},"content":"        super(message, cause);","lastModifiedDate":"2018-08-06"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-06"},{"lineNumber":17,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-02-05"}],"authorContributionMap":{"-":16,"aditi2313":1}},{"path":"src/main/java/seedu/address/logic/commands/patron/AddPatronCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"aditi2313"},"content":"package seedu.address.logic.commands.patron;","lastModifiedDate":"2022-03-11"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2017-05-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_EMAIL;","lastModifiedDate":"2017-05-09"},{"lineNumber":5,"author":{"gitId":"aditi2313"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_ID;","lastModifiedDate":"2022-03-11"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_NAME;","lastModifiedDate":"2017-06-06"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_PHONE;","lastModifiedDate":"2017-05-09"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_TAG;","lastModifiedDate":"2017-05-09"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-09"},{"lineNumber":10,"author":{"gitId":"aditi2313"},"content":"import seedu.address.logic.commands.Command;","lastModifiedDate":"2022-03-11"},{"lineNumber":11,"author":{"gitId":"aditi2313"},"content":"import seedu.address.logic.commands.CommandResult;","lastModifiedDate":"2022-03-11"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.exceptions.CommandException;","lastModifiedDate":"2017-02-05"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2018-08-08"},{"lineNumber":14,"author":{"gitId":"aditi2313"},"content":"import seedu.address.model.person.Patron;","lastModifiedDate":"2022-03-09"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":16,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-24"},{"lineNumber":17,"author":{"gitId":"aditi2313"},"content":" * Adds a patron to the address book.","lastModifiedDate":"2022-03-11"},{"lineNumber":18,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-24"},{"lineNumber":19,"author":{"gitId":"aditi2313"},"content":"public class AddPatronCommand extends Command {","lastModifiedDate":"2022-03-11"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":21,"author":{"gitId":"aditi2313"},"content":"    public static final String MESSAGE_USAGE \u003d ADD_COMMAND_WORD + \": Adds a patron to the address book. \"","lastModifiedDate":"2022-03-11"},{"lineNumber":22,"author":{"gitId":"-"},"content":"            + \"Parameters: \"","lastModifiedDate":"2017-06-06"},{"lineNumber":23,"author":{"gitId":"-"},"content":"            + PREFIX_NAME + \"NAME \"","lastModifiedDate":"2017-06-06"},{"lineNumber":24,"author":{"gitId":"-"},"content":"            + PREFIX_PHONE + \"PHONE \"","lastModifiedDate":"2017-05-09"},{"lineNumber":25,"author":{"gitId":"-"},"content":"            + PREFIX_EMAIL + \"EMAIL \"","lastModifiedDate":"2017-05-09"},{"lineNumber":26,"author":{"gitId":"aditi2313"},"content":"            + PREFIX_ID + \"ID \"","lastModifiedDate":"2022-03-09"},{"lineNumber":27,"author":{"gitId":"-"},"content":"            + \"[\" + PREFIX_TAG + \"TAG]...\\n\"","lastModifiedDate":"2017-05-09"},{"lineNumber":28,"author":{"gitId":"aditi2313"},"content":"            + \"Example: \" + ADD_COMMAND_WORD + \" \"","lastModifiedDate":"2022-03-11"},{"lineNumber":29,"author":{"gitId":"-"},"content":"            + PREFIX_NAME + \"John Doe \"","lastModifiedDate":"2017-06-06"},{"lineNumber":30,"author":{"gitId":"-"},"content":"            + PREFIX_PHONE + \"98765432 \"","lastModifiedDate":"2017-05-09"},{"lineNumber":31,"author":{"gitId":"-"},"content":"            + PREFIX_EMAIL + \"johnd@example.com \"","lastModifiedDate":"2017-05-09"},{"lineNumber":32,"author":{"gitId":"aditi2313"},"content":"            + PREFIX_ID + \"A1234567X\"","lastModifiedDate":"2022-03-09"},{"lineNumber":33,"author":{"gitId":"-"},"content":"            + PREFIX_TAG + \"friends \"","lastModifiedDate":"2017-05-09"},{"lineNumber":34,"author":{"gitId":"-"},"content":"            + PREFIX_TAG + \"owesMoney\";","lastModifiedDate":"2017-05-09"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":36,"author":{"gitId":"aditi2313"},"content":"    public static final String MESSAGE_SUCCESS \u003d \"New patron added: %1$s\";","lastModifiedDate":"2022-03-09"},{"lineNumber":37,"author":{"gitId":"aditi2313"},"content":"    public static final String MESSAGE_DUPLICATE_PERSON \u003d \"This patron already exists in the address book\";","lastModifiedDate":"2022-03-09"},{"lineNumber":38,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":39,"author":{"gitId":"aditi2313"},"content":"    private final Patron toAdd;","lastModifiedDate":"2022-03-09"},{"lineNumber":40,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-09-21"},{"lineNumber":42,"author":{"gitId":"aditi2313"},"content":"     * Creates an AddPatronCommand to add the specified {@code Patron}","lastModifiedDate":"2022-03-11"},{"lineNumber":43,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-09-21"},{"lineNumber":44,"author":{"gitId":"aditi2313"},"content":"    public AddPatronCommand(Patron person) {","lastModifiedDate":"2022-03-11"},{"lineNumber":45,"author":{"gitId":"-"},"content":"        requireNonNull(person);","lastModifiedDate":"2018-01-10"},{"lineNumber":46,"author":{"gitId":"-"},"content":"        toAdd \u003d person;","lastModifiedDate":"2018-01-10"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-21"},{"lineNumber":48,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-24"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    public CommandResult execute(Model model) throws CommandException {","lastModifiedDate":"2019-01-25"},{"lineNumber":51,"author":{"gitId":"-"},"content":"        requireNonNull(model);","lastModifiedDate":"2017-05-15"},{"lineNumber":52,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-07"},{"lineNumber":53,"author":{"gitId":"-"},"content":"        if (model.hasPerson(toAdd)) {","lastModifiedDate":"2018-08-07"},{"lineNumber":54,"author":{"gitId":"-"},"content":"            throw new CommandException(MESSAGE_DUPLICATE_PERSON);","lastModifiedDate":"2018-08-07"},{"lineNumber":55,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-08-07"},{"lineNumber":56,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-07"},{"lineNumber":57,"author":{"gitId":"-"},"content":"        model.addPerson(toAdd);","lastModifiedDate":"2016-09-25"},{"lineNumber":58,"author":{"gitId":"-"},"content":"        return new CommandResult(String.format(MESSAGE_SUCCESS, toAdd));","lastModifiedDate":"2016-08-24"},{"lineNumber":59,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":60,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":61,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2017-06-22"},{"lineNumber":62,"author":{"gitId":"-"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2017-06-22"},{"lineNumber":63,"author":{"gitId":"-"},"content":"        return other \u003d\u003d this // short circuit if same object","lastModifiedDate":"2017-06-22"},{"lineNumber":64,"author":{"gitId":"aditi2313"},"content":"                || (other instanceof seedu.address.logic.commands.patron.AddPatronCommand // instanceof handles nulls","lastModifiedDate":"2022-03-11"},{"lineNumber":65,"author":{"gitId":"aditi2313"},"content":"                \u0026\u0026 toAdd.equals(((seedu.address.logic.commands.patron.AddPatronCommand) other).toAdd));","lastModifiedDate":"2022-03-11"},{"lineNumber":66,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-22"},{"lineNumber":67,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-24"}],"authorContributionMap":{"aditi2313":18,"-":49}},{"path":"src/main/java/seedu/address/logic/commands/patron/DeletePatronCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"aditi2313"},"content":"package seedu.address.logic.commands.patron;","lastModifiedDate":"2022-03-11"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2018-08-08"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.util.List;","lastModifiedDate":"2017-09-01"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-09-01"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.Messages;","lastModifiedDate":"2016-09-23"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.index.Index;","lastModifiedDate":"2017-05-25"},{"lineNumber":9,"author":{"gitId":"aditi2313"},"content":"import seedu.address.logic.commands.Command;","lastModifiedDate":"2022-03-11"},{"lineNumber":10,"author":{"gitId":"aditi2313"},"content":"import seedu.address.logic.commands.CommandResult;","lastModifiedDate":"2022-03-11"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.exceptions.CommandException;","lastModifiedDate":"2017-02-05"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2018-08-08"},{"lineNumber":13,"author":{"gitId":"aditi2313"},"content":"import seedu.address.model.person.Patron;","lastModifiedDate":"2022-03-09"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":15,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-24"},{"lineNumber":16,"author":{"gitId":"aditi2313"},"content":" * Deletes a patron identified using it\u0027s displayed index from the address book.","lastModifiedDate":"2022-03-11"},{"lineNumber":17,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-24"},{"lineNumber":18,"author":{"gitId":"aditi2313"},"content":"public class DeletePatronCommand extends Command {","lastModifiedDate":"2022-03-11"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":20,"author":{"gitId":"aditi2313"},"content":"    public static final String MESSAGE_USAGE \u003d DELETE_COMMAND_WORD","lastModifiedDate":"2022-03-11"},{"lineNumber":21,"author":{"gitId":"aditi2313"},"content":"            + \": Deletes the patron identified by the index number used in the displayed patron list.\\n\"","lastModifiedDate":"2022-03-09"},{"lineNumber":22,"author":{"gitId":"-"},"content":"            + \"Parameters: INDEX (must be a positive integer)\\n\"","lastModifiedDate":"2016-09-29"},{"lineNumber":23,"author":{"gitId":"aditi2313"},"content":"            + \"Example: \" + DELETE_COMMAND_WORD + \" 1\";","lastModifiedDate":"2022-03-11"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":25,"author":{"gitId":"aditi2313"},"content":"    public static final String MESSAGE_DELETE_PERSON_SUCCESS \u003d \"Deleted Patron: %1$s\";","lastModifiedDate":"2022-03-09"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    private final Index targetIndex;","lastModifiedDate":"2017-06-27"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":29,"author":{"gitId":"aditi2313"},"content":"    public DeletePatronCommand(Index targetIndex) {","lastModifiedDate":"2022-03-11"},{"lineNumber":30,"author":{"gitId":"-"},"content":"        this.targetIndex \u003d targetIndex;","lastModifiedDate":"2016-09-22"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":32,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-24"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    public CommandResult execute(Model model) throws CommandException {","lastModifiedDate":"2019-01-25"},{"lineNumber":35,"author":{"gitId":"-"},"content":"        requireNonNull(model);","lastModifiedDate":"2018-08-08"},{"lineNumber":36,"author":{"gitId":"aditi2313"},"content":"        List\u003cPatron\u003e lastShownList \u003d model.getFilteredPersonList();","lastModifiedDate":"2022-03-09"},{"lineNumber":37,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        if (targetIndex.getZeroBased() \u003e\u003d lastShownList.size()) {","lastModifiedDate":"2018-04-19"},{"lineNumber":39,"author":{"gitId":"-"},"content":"            throw new CommandException(Messages.MESSAGE_INVALID_PERSON_DISPLAYED_INDEX);","lastModifiedDate":"2018-04-19"},{"lineNumber":40,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-04-19"},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":42,"author":{"gitId":"aditi2313"},"content":"        Patron personToDelete \u003d lastShownList.get(targetIndex.getZeroBased());","lastModifiedDate":"2022-03-09"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        model.deletePerson(personToDelete);","lastModifiedDate":"2016-09-25"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        return new CommandResult(String.format(MESSAGE_DELETE_PERSON_SUCCESS, personToDelete));","lastModifiedDate":"2016-09-22"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":46,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-28"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2017-06-27"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2017-06-27"},{"lineNumber":49,"author":{"gitId":"-"},"content":"        return other \u003d\u003d this // short circuit if same object","lastModifiedDate":"2017-06-27"},{"lineNumber":50,"author":{"gitId":"aditi2313"},"content":"                || (other instanceof seedu.address.logic.commands.patron.DeletePatronCommand // instanceof handles nulls","lastModifiedDate":"2022-03-11"},{"lineNumber":51,"author":{"gitId":"aditi2313"},"content":"                \u0026\u0026 targetIndex.equals(((seedu.address.logic.commands.patron.DeletePatronCommand) other).targetIndex));","lastModifiedDate":"2022-03-11"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-27"},{"lineNumber":53,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-24"}],"authorContributionMap":{"aditi2313":15,"-":38}},{"path":"src/main/java/seedu/address/logic/commands/patron/EditPatronCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"aditi2313"},"content":"package seedu.address.logic.commands.patron;","lastModifiedDate":"2022-03-11"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2017-05-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_EMAIL;","lastModifiedDate":"2017-05-09"},{"lineNumber":5,"author":{"gitId":"aditi2313"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_ID;","lastModifiedDate":"2022-03-11"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_NAME;","lastModifiedDate":"2017-06-06"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_PHONE;","lastModifiedDate":"2017-05-09"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_TAG;","lastModifiedDate":"2017-05-09"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import static seedu.address.model.Model.PREDICATE_SHOW_ALL_PERSONS;","lastModifiedDate":"2017-08-05"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-09"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import java.util.Collections;","lastModifiedDate":"2018-01-11"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import java.util.HashSet;","lastModifiedDate":"2018-01-11"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import java.util.List;","lastModifiedDate":"2016-12-26"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import java.util.Optional;","lastModifiedDate":"2016-12-26"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import java.util.Set;","lastModifiedDate":"2017-03-07"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":17,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.Messages;","lastModifiedDate":"2016-12-26"},{"lineNumber":18,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.index.Index;","lastModifiedDate":"2017-05-25"},{"lineNumber":19,"author":{"gitId":"-"},"content":"import seedu.address.commons.util.CollectionUtil;","lastModifiedDate":"2016-12-26"},{"lineNumber":20,"author":{"gitId":"aditi2313"},"content":"import seedu.address.logic.commands.Command;","lastModifiedDate":"2022-03-11"},{"lineNumber":21,"author":{"gitId":"aditi2313"},"content":"import seedu.address.logic.commands.CommandResult;","lastModifiedDate":"2022-03-11"},{"lineNumber":22,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.exceptions.CommandException;","lastModifiedDate":"2017-02-05"},{"lineNumber":23,"author":{"gitId":"-"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2018-08-08"},{"lineNumber":24,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Email;","lastModifiedDate":"2016-12-26"},{"lineNumber":25,"author":{"gitId":"aditi2313"},"content":"import seedu.address.model.person.Id;","lastModifiedDate":"2022-03-11"},{"lineNumber":26,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Name;","lastModifiedDate":"2016-12-26"},{"lineNumber":27,"author":{"gitId":"aditi2313"},"content":"import seedu.address.model.person.Patron;","lastModifiedDate":"2022-03-09"},{"lineNumber":28,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Phone;","lastModifiedDate":"2016-12-26"},{"lineNumber":29,"author":{"gitId":"-"},"content":"import seedu.address.model.tag.Tag;","lastModifiedDate":"2017-03-07"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":31,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-12-26"},{"lineNumber":32,"author":{"gitId":"aditi2313"},"content":" * Edits the details of an existing patron in the address book.","lastModifiedDate":"2022-03-11"},{"lineNumber":33,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-12-26"},{"lineNumber":34,"author":{"gitId":"aditi2313"},"content":"public class EditPatronCommand extends Command {","lastModifiedDate":"2022-03-11"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":36,"author":{"gitId":"aditi2313"},"content":"    public static final String MESSAGE_USAGE \u003d EDIT_COMMAND_WORD + \": Edits the details of the patron identified \"","lastModifiedDate":"2022-03-11"},{"lineNumber":37,"author":{"gitId":"aditi2313"},"content":"            + \"by the index number used in the displayed patron list. \"","lastModifiedDate":"2022-03-09"},{"lineNumber":38,"author":{"gitId":"-"},"content":"            + \"Existing values will be overwritten by the input values.\\n\"","lastModifiedDate":"2016-12-26"},{"lineNumber":39,"author":{"gitId":"-"},"content":"            + \"Parameters: INDEX (must be a positive integer) \"","lastModifiedDate":"2017-06-06"},{"lineNumber":40,"author":{"gitId":"-"},"content":"            + \"[\" + PREFIX_NAME + \"NAME] \"","lastModifiedDate":"2017-06-06"},{"lineNumber":41,"author":{"gitId":"-"},"content":"            + \"[\" + PREFIX_PHONE + \"PHONE] \"","lastModifiedDate":"2017-05-09"},{"lineNumber":42,"author":{"gitId":"-"},"content":"            + \"[\" + PREFIX_EMAIL + \"EMAIL] \"","lastModifiedDate":"2017-05-09"},{"lineNumber":43,"author":{"gitId":"aditi2313"},"content":"            + \"[\" + PREFIX_ID + \"ID] \"","lastModifiedDate":"2022-03-09"},{"lineNumber":44,"author":{"gitId":"-"},"content":"            + \"[\" + PREFIX_TAG + \"TAG]...\\n\"","lastModifiedDate":"2017-05-09"},{"lineNumber":45,"author":{"gitId":"aditi2313"},"content":"            + \"Example: \" + EDIT_COMMAND_WORD + \" 1 \"","lastModifiedDate":"2022-03-11"},{"lineNumber":46,"author":{"gitId":"-"},"content":"            + PREFIX_PHONE + \"91234567 \"","lastModifiedDate":"2017-05-09"},{"lineNumber":47,"author":{"gitId":"-"},"content":"            + PREFIX_EMAIL + \"johndoe@example.com\";","lastModifiedDate":"2017-05-09"},{"lineNumber":48,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":49,"author":{"gitId":"aditi2313"},"content":"    public static final String MESSAGE_EDIT_PERSON_SUCCESS \u003d \"Edited Patron: %1$s\";","lastModifiedDate":"2022-03-09"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_NOT_EDITED \u003d \"At least one field to edit must be provided.\";","lastModifiedDate":"2016-12-26"},{"lineNumber":51,"author":{"gitId":"aditi2313"},"content":"    public static final String MESSAGE_DUPLICATE_PERSON \u003d \"This patron already exists in the address book.\";","lastModifiedDate":"2022-03-09"},{"lineNumber":52,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":53,"author":{"gitId":"-"},"content":"    private final Index index;","lastModifiedDate":"2017-05-25"},{"lineNumber":54,"author":{"gitId":"-"},"content":"    private final EditPersonDescriptor editPersonDescriptor;","lastModifiedDate":"2016-12-26"},{"lineNumber":55,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-12-26"},{"lineNumber":57,"author":{"gitId":"aditi2313"},"content":"     * @param index of the patron in the filtered patron list to edit","lastModifiedDate":"2022-03-11"},{"lineNumber":58,"author":{"gitId":"aditi2313"},"content":"     * @param editPersonDescriptor details to edit the patron with","lastModifiedDate":"2022-03-11"},{"lineNumber":59,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-12-26"},{"lineNumber":60,"author":{"gitId":"aditi2313"},"content":"    public EditPatronCommand(Index index, EditPersonDescriptor editPersonDescriptor) {","lastModifiedDate":"2022-03-11"},{"lineNumber":61,"author":{"gitId":"-"},"content":"        requireNonNull(index);","lastModifiedDate":"2017-05-25"},{"lineNumber":62,"author":{"gitId":"-"},"content":"        requireNonNull(editPersonDescriptor);","lastModifiedDate":"2017-05-15"},{"lineNumber":63,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":64,"author":{"gitId":"-"},"content":"        this.index \u003d index;","lastModifiedDate":"2017-05-25"},{"lineNumber":65,"author":{"gitId":"-"},"content":"        this.editPersonDescriptor \u003d new EditPersonDescriptor(editPersonDescriptor);","lastModifiedDate":"2016-12-26"},{"lineNumber":66,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-26"},{"lineNumber":67,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":68,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-12-26"},{"lineNumber":69,"author":{"gitId":"-"},"content":"    public CommandResult execute(Model model) throws CommandException {","lastModifiedDate":"2019-01-25"},{"lineNumber":70,"author":{"gitId":"-"},"content":"        requireNonNull(model);","lastModifiedDate":"2018-08-08"},{"lineNumber":71,"author":{"gitId":"aditi2313"},"content":"        List\u003cPatron\u003e lastShownList \u003d model.getFilteredPersonList();","lastModifiedDate":"2022-03-09"},{"lineNumber":72,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":73,"author":{"gitId":"-"},"content":"        if (index.getZeroBased() \u003e\u003d lastShownList.size()) {","lastModifiedDate":"2018-04-19"},{"lineNumber":74,"author":{"gitId":"-"},"content":"            throw new CommandException(Messages.MESSAGE_INVALID_PERSON_DISPLAYED_INDEX);","lastModifiedDate":"2018-04-19"},{"lineNumber":75,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-04-19"},{"lineNumber":76,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":77,"author":{"gitId":"aditi2313"},"content":"        Patron personToEdit \u003d lastShownList.get(index.getZeroBased());","lastModifiedDate":"2022-03-09"},{"lineNumber":78,"author":{"gitId":"aditi2313"},"content":"        Patron editedPerson \u003d createEditedPerson(personToEdit, editPersonDescriptor);","lastModifiedDate":"2022-03-09"},{"lineNumber":79,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":80,"author":{"gitId":"-"},"content":"        if (!personToEdit.isSamePerson(editedPerson) \u0026\u0026 model.hasPerson(editedPerson)) {","lastModifiedDate":"2018-08-07"},{"lineNumber":81,"author":{"gitId":"-"},"content":"            throw new CommandException(MESSAGE_DUPLICATE_PERSON);","lastModifiedDate":"2018-08-07"},{"lineNumber":82,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-08-07"},{"lineNumber":83,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-07"},{"lineNumber":84,"author":{"gitId":"-"},"content":"        model.setPerson(personToEdit, editedPerson);","lastModifiedDate":"2018-08-17"},{"lineNumber":85,"author":{"gitId":"-"},"content":"        model.updateFilteredPersonList(PREDICATE_SHOW_ALL_PERSONS);","lastModifiedDate":"2017-08-05"},{"lineNumber":86,"author":{"gitId":"-"},"content":"        return new CommandResult(String.format(MESSAGE_EDIT_PERSON_SUCCESS, editedPerson));","lastModifiedDate":"2017-08-05"},{"lineNumber":87,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-26"},{"lineNumber":88,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":89,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-12-26"},{"lineNumber":90,"author":{"gitId":"-"},"content":"     * Creates and returns a {@code Person} with the details of {@code personToEdit}","lastModifiedDate":"2016-12-26"},{"lineNumber":91,"author":{"gitId":"-"},"content":"     * edited with {@code editPersonDescriptor}.","lastModifiedDate":"2016-12-26"},{"lineNumber":92,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-12-26"},{"lineNumber":93,"author":{"gitId":"aditi2313"},"content":"    private static Patron createEditedPerson(Patron personToEdit, EditPersonDescriptor editPersonDescriptor) {","lastModifiedDate":"2022-03-09"},{"lineNumber":94,"author":{"gitId":"-"},"content":"        assert personToEdit !\u003d null;","lastModifiedDate":"2016-12-26"},{"lineNumber":95,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":96,"author":{"gitId":"-"},"content":"        Name updatedName \u003d editPersonDescriptor.getName().orElse(personToEdit.getName());","lastModifiedDate":"2017-06-21"},{"lineNumber":97,"author":{"gitId":"-"},"content":"        Phone updatedPhone \u003d editPersonDescriptor.getPhone().orElse(personToEdit.getPhone());","lastModifiedDate":"2017-06-21"},{"lineNumber":98,"author":{"gitId":"-"},"content":"        Email updatedEmail \u003d editPersonDescriptor.getEmail().orElse(personToEdit.getEmail());","lastModifiedDate":"2017-06-21"},{"lineNumber":99,"author":{"gitId":"aditi2313"},"content":"        Id updatedId \u003d editPersonDescriptor.getId().orElse(personToEdit.getId());","lastModifiedDate":"2022-03-09"},{"lineNumber":100,"author":{"gitId":"-"},"content":"        Set\u003cTag\u003e updatedTags \u003d editPersonDescriptor.getTags().orElse(personToEdit.getTags());","lastModifiedDate":"2017-06-21"},{"lineNumber":101,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":102,"author":{"gitId":"aditi2313"},"content":"        return new Patron(updatedName, updatedPhone, updatedEmail, updatedId, updatedTags);","lastModifiedDate":"2022-03-09"},{"lineNumber":103,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-26"},{"lineNumber":104,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":105,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2017-05-08"},{"lineNumber":106,"author":{"gitId":"-"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2017-05-08"},{"lineNumber":107,"author":{"gitId":"-"},"content":"        // short circuit if same object","lastModifiedDate":"2017-05-08"},{"lineNumber":108,"author":{"gitId":"-"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2017-05-08"},{"lineNumber":109,"author":{"gitId":"-"},"content":"            return true;","lastModifiedDate":"2017-05-08"},{"lineNumber":110,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-08"},{"lineNumber":111,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-08"},{"lineNumber":112,"author":{"gitId":"-"},"content":"        // instanceof handles nulls","lastModifiedDate":"2017-05-08"},{"lineNumber":113,"author":{"gitId":"aditi2313"},"content":"        if (!(other instanceof seedu.address.logic.commands.patron.EditPatronCommand)) {","lastModifiedDate":"2022-03-11"},{"lineNumber":114,"author":{"gitId":"-"},"content":"            return false;","lastModifiedDate":"2017-05-08"},{"lineNumber":115,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-08"},{"lineNumber":116,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-08"},{"lineNumber":117,"author":{"gitId":"-"},"content":"        // state check","lastModifiedDate":"2017-05-08"},{"lineNumber":118,"author":{"gitId":"aditi2313"},"content":"        seedu.address.logic.commands.patron.EditPatronCommand e \u003d (EditPatronCommand) other;","lastModifiedDate":"2022-03-11"},{"lineNumber":119,"author":{"gitId":"-"},"content":"        return index.equals(e.index)","lastModifiedDate":"2017-05-25"},{"lineNumber":120,"author":{"gitId":"-"},"content":"                \u0026\u0026 editPersonDescriptor.equals(e.editPersonDescriptor);","lastModifiedDate":"2018-04-19"},{"lineNumber":121,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-08"},{"lineNumber":122,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-08"},{"lineNumber":123,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-12-26"},{"lineNumber":124,"author":{"gitId":"-"},"content":"     * Stores the details to edit the person with. Each non-empty field value will replace the","lastModifiedDate":"2016-12-26"},{"lineNumber":125,"author":{"gitId":"-"},"content":"     * corresponding field value of the person.","lastModifiedDate":"2016-12-26"},{"lineNumber":126,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-12-26"},{"lineNumber":127,"author":{"gitId":"-"},"content":"    public static class EditPersonDescriptor {","lastModifiedDate":"2016-12-26"},{"lineNumber":128,"author":{"gitId":"-"},"content":"        private Name name;","lastModifiedDate":"2017-06-21"},{"lineNumber":129,"author":{"gitId":"-"},"content":"        private Phone phone;","lastModifiedDate":"2017-06-21"},{"lineNumber":130,"author":{"gitId":"-"},"content":"        private Email email;","lastModifiedDate":"2017-06-21"},{"lineNumber":131,"author":{"gitId":"aditi2313"},"content":"        private Id id;","lastModifiedDate":"2022-03-09"},{"lineNumber":132,"author":{"gitId":"-"},"content":"        private Set\u003cTag\u003e tags;","lastModifiedDate":"2017-06-21"},{"lineNumber":133,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":134,"author":{"gitId":"-"},"content":"        public EditPersonDescriptor() {}","lastModifiedDate":"2016-12-26"},{"lineNumber":135,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":136,"author":{"gitId":"-"},"content":"        /**","lastModifiedDate":"2018-01-11"},{"lineNumber":137,"author":{"gitId":"-"},"content":"         * Copy constructor.","lastModifiedDate":"2018-01-11"},{"lineNumber":138,"author":{"gitId":"-"},"content":"         * A defensive copy of {@code tags} is used internally.","lastModifiedDate":"2018-01-11"},{"lineNumber":139,"author":{"gitId":"-"},"content":"         */","lastModifiedDate":"2018-01-11"},{"lineNumber":140,"author":{"gitId":"-"},"content":"        public EditPersonDescriptor(EditPersonDescriptor toCopy) {","lastModifiedDate":"2016-12-26"},{"lineNumber":141,"author":{"gitId":"-"},"content":"            setName(toCopy.name);","lastModifiedDate":"2018-01-15"},{"lineNumber":142,"author":{"gitId":"-"},"content":"            setPhone(toCopy.phone);","lastModifiedDate":"2018-01-15"},{"lineNumber":143,"author":{"gitId":"-"},"content":"            setEmail(toCopy.email);","lastModifiedDate":"2018-01-15"},{"lineNumber":144,"author":{"gitId":"aditi2313"},"content":"            setId(toCopy.id);","lastModifiedDate":"2022-03-09"},{"lineNumber":145,"author":{"gitId":"-"},"content":"            setTags(toCopy.tags);","lastModifiedDate":"2018-01-11"},{"lineNumber":146,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-12-26"},{"lineNumber":147,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":148,"author":{"gitId":"-"},"content":"        /**","lastModifiedDate":"2016-12-26"},{"lineNumber":149,"author":{"gitId":"-"},"content":"         * Returns true if at least one field is edited.","lastModifiedDate":"2016-12-26"},{"lineNumber":150,"author":{"gitId":"-"},"content":"         */","lastModifiedDate":"2016-12-26"},{"lineNumber":151,"author":{"gitId":"-"},"content":"        public boolean isAnyFieldEdited() {","lastModifiedDate":"2016-12-26"},{"lineNumber":152,"author":{"gitId":"aditi2313"},"content":"            return CollectionUtil.isAnyNonNull(name, phone, email, id, tags);","lastModifiedDate":"2022-03-09"},{"lineNumber":153,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-12-26"},{"lineNumber":154,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":155,"author":{"gitId":"-"},"content":"        public void setName(Name name) {","lastModifiedDate":"2017-06-21"},{"lineNumber":156,"author":{"gitId":"-"},"content":"            this.name \u003d name;","lastModifiedDate":"2017-06-21"},{"lineNumber":157,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-12-26"},{"lineNumber":158,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":159,"author":{"gitId":"-"},"content":"        public Optional\u003cName\u003e getName() {","lastModifiedDate":"2016-12-26"},{"lineNumber":160,"author":{"gitId":"-"},"content":"            return Optional.ofNullable(name);","lastModifiedDate":"2017-06-21"},{"lineNumber":161,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-12-26"},{"lineNumber":162,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":163,"author":{"gitId":"-"},"content":"        public void setPhone(Phone phone) {","lastModifiedDate":"2017-06-21"},{"lineNumber":164,"author":{"gitId":"-"},"content":"            this.phone \u003d phone;","lastModifiedDate":"2017-06-21"},{"lineNumber":165,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-12-26"},{"lineNumber":166,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":167,"author":{"gitId":"-"},"content":"        public Optional\u003cPhone\u003e getPhone() {","lastModifiedDate":"2016-12-26"},{"lineNumber":168,"author":{"gitId":"-"},"content":"            return Optional.ofNullable(phone);","lastModifiedDate":"2017-06-21"},{"lineNumber":169,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-12-26"},{"lineNumber":170,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":171,"author":{"gitId":"-"},"content":"        public void setEmail(Email email) {","lastModifiedDate":"2017-06-21"},{"lineNumber":172,"author":{"gitId":"-"},"content":"            this.email \u003d email;","lastModifiedDate":"2017-06-21"},{"lineNumber":173,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-12-26"},{"lineNumber":174,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":175,"author":{"gitId":"-"},"content":"        public Optional\u003cEmail\u003e getEmail() {","lastModifiedDate":"2016-12-26"},{"lineNumber":176,"author":{"gitId":"-"},"content":"            return Optional.ofNullable(email);","lastModifiedDate":"2017-06-21"},{"lineNumber":177,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-12-26"},{"lineNumber":178,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":179,"author":{"gitId":"aditi2313"},"content":"        public void setId(Id id) {","lastModifiedDate":"2022-03-09"},{"lineNumber":180,"author":{"gitId":"aditi2313"},"content":"            this.id \u003d id;","lastModifiedDate":"2022-03-09"},{"lineNumber":181,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-12-26"},{"lineNumber":182,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":183,"author":{"gitId":"aditi2313"},"content":"        public Optional\u003cId\u003e getId() {","lastModifiedDate":"2022-03-09"},{"lineNumber":184,"author":{"gitId":"aditi2313"},"content":"            return Optional.ofNullable(id);","lastModifiedDate":"2022-03-09"},{"lineNumber":185,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-12-26"},{"lineNumber":186,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":187,"author":{"gitId":"-"},"content":"        /**","lastModifiedDate":"2018-01-11"},{"lineNumber":188,"author":{"gitId":"-"},"content":"         * Sets {@code tags} to this object\u0027s {@code tags}.","lastModifiedDate":"2018-01-11"},{"lineNumber":189,"author":{"gitId":"-"},"content":"         * A defensive copy of {@code tags} is used internally.","lastModifiedDate":"2018-01-11"},{"lineNumber":190,"author":{"gitId":"-"},"content":"         */","lastModifiedDate":"2018-01-11"},{"lineNumber":191,"author":{"gitId":"-"},"content":"        public void setTags(Set\u003cTag\u003e tags) {","lastModifiedDate":"2017-06-21"},{"lineNumber":192,"author":{"gitId":"-"},"content":"            this.tags \u003d (tags !\u003d null) ? new HashSet\u003c\u003e(tags) : null;","lastModifiedDate":"2018-01-11"},{"lineNumber":193,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-12-26"},{"lineNumber":194,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":195,"author":{"gitId":"-"},"content":"        /**","lastModifiedDate":"2018-01-11"},{"lineNumber":196,"author":{"gitId":"-"},"content":"         * Returns an unmodifiable tag set, which throws {@code UnsupportedOperationException}","lastModifiedDate":"2018-01-11"},{"lineNumber":197,"author":{"gitId":"-"},"content":"         * if modification is attempted.","lastModifiedDate":"2018-01-11"},{"lineNumber":198,"author":{"gitId":"-"},"content":"         * Returns {@code Optional#empty()} if {@code tags} is null.","lastModifiedDate":"2018-01-11"},{"lineNumber":199,"author":{"gitId":"-"},"content":"         */","lastModifiedDate":"2018-01-11"},{"lineNumber":200,"author":{"gitId":"-"},"content":"        public Optional\u003cSet\u003cTag\u003e\u003e getTags() {","lastModifiedDate":"2017-03-07"},{"lineNumber":201,"author":{"gitId":"-"},"content":"            return (tags !\u003d null) ? Optional.of(Collections.unmodifiableSet(tags)) : Optional.empty();","lastModifiedDate":"2018-01-11"},{"lineNumber":202,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-12-26"},{"lineNumber":203,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":204,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2017-05-05"},{"lineNumber":205,"author":{"gitId":"-"},"content":"        public boolean equals(Object other) {","lastModifiedDate":"2017-05-05"},{"lineNumber":206,"author":{"gitId":"-"},"content":"            // short circuit if same object","lastModifiedDate":"2017-05-05"},{"lineNumber":207,"author":{"gitId":"-"},"content":"            if (other \u003d\u003d this) {","lastModifiedDate":"2017-05-05"},{"lineNumber":208,"author":{"gitId":"-"},"content":"                return true;","lastModifiedDate":"2017-05-05"},{"lineNumber":209,"author":{"gitId":"-"},"content":"            }","lastModifiedDate":"2017-05-05"},{"lineNumber":210,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":211,"author":{"gitId":"-"},"content":"            // instanceof handles nulls","lastModifiedDate":"2017-05-05"},{"lineNumber":212,"author":{"gitId":"-"},"content":"            if (!(other instanceof EditPersonDescriptor)) {","lastModifiedDate":"2017-05-05"},{"lineNumber":213,"author":{"gitId":"-"},"content":"                return false;","lastModifiedDate":"2017-05-05"},{"lineNumber":214,"author":{"gitId":"-"},"content":"            }","lastModifiedDate":"2017-05-05"},{"lineNumber":215,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":216,"author":{"gitId":"-"},"content":"            // state check","lastModifiedDate":"2017-05-05"},{"lineNumber":217,"author":{"gitId":"aditi2313"},"content":"            seedu.address.logic.commands.patron.EditPatronCommand.EditPersonDescriptor e \u003d (EditPersonDescriptor) other;","lastModifiedDate":"2022-03-11"},{"lineNumber":218,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-21"},{"lineNumber":219,"author":{"gitId":"-"},"content":"            return getName().equals(e.getName())","lastModifiedDate":"2017-06-21"},{"lineNumber":220,"author":{"gitId":"-"},"content":"                    \u0026\u0026 getPhone().equals(e.getPhone())","lastModifiedDate":"2017-06-21"},{"lineNumber":221,"author":{"gitId":"-"},"content":"                    \u0026\u0026 getEmail().equals(e.getEmail())","lastModifiedDate":"2017-06-21"},{"lineNumber":222,"author":{"gitId":"aditi2313"},"content":"                    \u0026\u0026 getId().equals(e.getId())","lastModifiedDate":"2022-03-09"},{"lineNumber":223,"author":{"gitId":"-"},"content":"                    \u0026\u0026 getTags().equals(e.getTags());","lastModifiedDate":"2017-06-21"},{"lineNumber":224,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-05"},{"lineNumber":225,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-26"},{"lineNumber":226,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-12-26"}],"authorContributionMap":{"aditi2313":34,"-":192}},{"path":"src/main/java/seedu/address/logic/commands/patron/FindPatronCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"aditi2313"},"content":"package seedu.address.logic.commands.patron;","lastModifiedDate":"2022-03-11"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2018-08-08"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.Messages;","lastModifiedDate":"2018-04-01"},{"lineNumber":6,"author":{"gitId":"aditi2313"},"content":"import seedu.address.logic.commands.Command;","lastModifiedDate":"2022-03-11"},{"lineNumber":7,"author":{"gitId":"aditi2313"},"content":"import seedu.address.logic.commands.CommandResult;","lastModifiedDate":"2022-03-11"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2018-08-08"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import seedu.address.model.person.NameContainsKeywordsPredicate;","lastModifiedDate":"2017-06-12"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":11,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-09-22"},{"lineNumber":12,"author":{"gitId":"aditi2313"},"content":" * Finds and lists all patrons in address book whose name contains any of the argument keywords.","lastModifiedDate":"2022-03-11"},{"lineNumber":13,"author":{"gitId":"-"},"content":" * Keyword matching is case insensitive.","lastModifiedDate":"2018-04-01"},{"lineNumber":14,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-09-22"},{"lineNumber":15,"author":{"gitId":"aditi2313"},"content":"public class FindPatronCommand extends Command {","lastModifiedDate":"2022-03-11"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":17,"author":{"gitId":"aditi2313"},"content":"    public static final String MESSAGE_USAGE \u003d FIND_COMMAND_WORD + \": Finds all patrons whose names contain any of \"","lastModifiedDate":"2022-03-11"},{"lineNumber":18,"author":{"gitId":"-"},"content":"            + \"the specified keywords (case-insensitive) and displays them as a list with index numbers.\\n\"","lastModifiedDate":"2018-04-01"},{"lineNumber":19,"author":{"gitId":"-"},"content":"            + \"Parameters: KEYWORD [MORE_KEYWORDS]...\\n\"","lastModifiedDate":"2016-09-22"},{"lineNumber":20,"author":{"gitId":"aditi2313"},"content":"            + \"Example: \" + FIND_COMMAND_WORD + \" alice bob charlie\";","lastModifiedDate":"2022-03-11"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    private final NameContainsKeywordsPredicate predicate;","lastModifiedDate":"2017-06-12"},{"lineNumber":23,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":24,"author":{"gitId":"aditi2313"},"content":"    public FindPatronCommand(NameContainsKeywordsPredicate predicate) {","lastModifiedDate":"2022-03-11"},{"lineNumber":25,"author":{"gitId":"-"},"content":"        this.predicate \u003d predicate;","lastModifiedDate":"2017-06-12"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-22"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-22"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    public CommandResult execute(Model model) {","lastModifiedDate":"2019-01-25"},{"lineNumber":30,"author":{"gitId":"-"},"content":"        requireNonNull(model);","lastModifiedDate":"2018-08-08"},{"lineNumber":31,"author":{"gitId":"-"},"content":"        model.updateFilteredPersonList(predicate);","lastModifiedDate":"2017-06-12"},{"lineNumber":32,"author":{"gitId":"-"},"content":"        return new CommandResult(","lastModifiedDate":"2018-04-01"},{"lineNumber":33,"author":{"gitId":"-"},"content":"                String.format(Messages.MESSAGE_PERSONS_LISTED_OVERVIEW, model.getFilteredPersonList().size()));","lastModifiedDate":"2018-04-01"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-22"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2017-06-27"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2017-06-27"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        return other \u003d\u003d this // short circuit if same object","lastModifiedDate":"2017-06-27"},{"lineNumber":39,"author":{"gitId":"aditi2313"},"content":"                || (other instanceof FindPatronCommand // instanceof handles nulls","lastModifiedDate":"2022-03-11"},{"lineNumber":40,"author":{"gitId":"aditi2313"},"content":"                \u0026\u0026 predicate.equals(((FindPatronCommand) other).predicate)); // state check","lastModifiedDate":"2022-03-11"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-27"},{"lineNumber":42,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-09-22"}],"authorContributionMap":{"aditi2313":10,"-":32}},{"path":"src/main/java/seedu/address/logic/commands/patron/ListPatronCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"aditi2313"},"content":"package seedu.address.logic.commands.patron;","lastModifiedDate":"2022-03-11"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2018-08-08"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static seedu.address.model.Model.PREDICATE_SHOW_ALL_PERSONS;","lastModifiedDate":"2017-08-05"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":6,"author":{"gitId":"aditi2313"},"content":"import seedu.address.logic.commands.Command;","lastModifiedDate":"2022-03-11"},{"lineNumber":7,"author":{"gitId":"aditi2313"},"content":"import seedu.address.logic.commands.CommandResult;","lastModifiedDate":"2022-03-11"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2018-08-08"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":10,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-24"},{"lineNumber":11,"author":{"gitId":"aditi2313"},"content":" * Lists all patrons in the address book to the user.","lastModifiedDate":"2022-03-11"},{"lineNumber":12,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-24"},{"lineNumber":13,"author":{"gitId":"aditi2313"},"content":"public class ListPatronCommand extends Command {","lastModifiedDate":"2022-03-11"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":15,"author":{"gitId":"aditi2313"},"content":"    public static final String MESSAGE_SUCCESS \u003d \"Listed all patrons\";","lastModifiedDate":"2022-03-09"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-24"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    public CommandResult execute(Model model) {","lastModifiedDate":"2019-01-25"},{"lineNumber":20,"author":{"gitId":"-"},"content":"        requireNonNull(model);","lastModifiedDate":"2018-08-08"},{"lineNumber":21,"author":{"gitId":"-"},"content":"        model.updateFilteredPersonList(PREDICATE_SHOW_ALL_PERSONS);","lastModifiedDate":"2017-08-05"},{"lineNumber":22,"author":{"gitId":"-"},"content":"        return new CommandResult(MESSAGE_SUCCESS);","lastModifiedDate":"2016-09-22"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":24,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-24"}],"authorContributionMap":{"aditi2313":6,"-":18}},{"path":"src/main/java/seedu/address/logic/parser/AddressBookParser.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2016-09-22"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static seedu.address.commons.core.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2017-01-19"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static seedu.address.commons.core.Messages.MESSAGE_UNKNOWN_COMMAND;","lastModifiedDate":"2017-01-19"},{"lineNumber":5,"author":{"gitId":"bingsen0806"},"content":"import static seedu.address.logic.commands.Command.CLEAR_COMMAND_WORD;","lastModifiedDate":"2022-03-10"},{"lineNumber":6,"author":{"gitId":"bingsen0806"},"content":"import static seedu.address.logic.commands.Command.EXIT_COMMAND_WORD;","lastModifiedDate":"2022-03-10"},{"lineNumber":7,"author":{"gitId":"bingsen0806"},"content":"import static seedu.address.logic.commands.Command.HELP_COMMAND_WORD;","lastModifiedDate":"2022-03-10"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import java.util.regex.Matcher;","lastModifiedDate":"2017-01-19"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import java.util.regex.Pattern;","lastModifiedDate":"2017-01-19"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.ClearCommand;","lastModifiedDate":"2017-01-18"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.Command;","lastModifiedDate":"2017-01-18"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.ExitCommand;","lastModifiedDate":"2017-01-18"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.HelpCommand;","lastModifiedDate":"2017-01-18"},{"lineNumber":16,"author":{"gitId":"bingsen0806"},"content":"import seedu.address.logic.parser.book.BookCommandParser;","lastModifiedDate":"2022-03-10"},{"lineNumber":17,"author":{"gitId":"-"},"content":"import seedu.address.logic.parser.exceptions.ParseException;","lastModifiedDate":"2017-03-11"},{"lineNumber":18,"author":{"gitId":"aditi2313"},"content":"import seedu.address.logic.parser.patron.PatronCommandParser;","lastModifiedDate":"2022-03-11"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":20,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-24"},{"lineNumber":21,"author":{"gitId":"-"},"content":" * Parses user input.","lastModifiedDate":"2016-08-24"},{"lineNumber":22,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-24"},{"lineNumber":23,"author":{"gitId":"-"},"content":"public class AddressBookParser {","lastModifiedDate":"2017-07-07"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-24"},{"lineNumber":26,"author":{"gitId":"-"},"content":"     * Used for initial separation of command word and args.","lastModifiedDate":"2016-08-24"},{"lineNumber":27,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-24"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    private static final Pattern BASIC_COMMAND_FORMAT \u003d Pattern.compile(\"(?\u003ccommandWord\u003e\\\\S+)(?\u003carguments\u003e.*)\");","lastModifiedDate":"2016-09-22"},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-24"},{"lineNumber":31,"author":{"gitId":"-"},"content":"     * Parses user input into command for execution.","lastModifiedDate":"2016-08-24"},{"lineNumber":32,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2016-08-24"},{"lineNumber":33,"author":{"gitId":"-"},"content":"     * @param userInput full user input string","lastModifiedDate":"2016-08-24"},{"lineNumber":34,"author":{"gitId":"-"},"content":"     * @return the command based on the user input","lastModifiedDate":"2016-08-24"},{"lineNumber":35,"author":{"gitId":"-"},"content":"     * @throws ParseException if the user input does not conform the expected format","lastModifiedDate":"2017-03-11"},{"lineNumber":36,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-24"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    public Command parseCommand(String userInput) throws ParseException {","lastModifiedDate":"2017-03-11"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        final Matcher matcher \u003d BASIC_COMMAND_FORMAT.matcher(userInput.trim());","lastModifiedDate":"2016-08-24"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        if (!matcher.matches()) {","lastModifiedDate":"2016-08-24"},{"lineNumber":40,"author":{"gitId":"-"},"content":"            throw new ParseException(String.format(MESSAGE_INVALID_COMMAND_FORMAT, HelpCommand.MESSAGE_USAGE));","lastModifiedDate":"2017-03-11"},{"lineNumber":41,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-08-24"},{"lineNumber":42,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        final String commandWord \u003d matcher.group(\"commandWord\");","lastModifiedDate":"2016-08-24"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        final String arguments \u003d matcher.group(\"arguments\");","lastModifiedDate":"2016-08-24"},{"lineNumber":45,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-03-10"},{"lineNumber":46,"author":{"gitId":"-"},"content":"        switch (commandWord) {","lastModifiedDate":"2016-08-24"},{"lineNumber":47,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":48,"author":{"gitId":"bingsen0806"},"content":"        case Command.PATRON_COMMAND_GROUP:","lastModifiedDate":"2022-03-10"},{"lineNumber":49,"author":{"gitId":"aditi2313"},"content":"            return new PatronCommandParser().parse(arguments);","lastModifiedDate":"2022-03-11"},{"lineNumber":50,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-03-10"},{"lineNumber":51,"author":{"gitId":"bingsen0806"},"content":"        case Command.BOOK_COMMAND_GROUP:","lastModifiedDate":"2022-03-10"},{"lineNumber":52,"author":{"gitId":"bingsen0806"},"content":"            return new BookCommandParser().parse(arguments);","lastModifiedDate":"2022-03-10"},{"lineNumber":53,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-03-10"},{"lineNumber":54,"author":{"gitId":"bingsen0806"},"content":"        case CLEAR_COMMAND_WORD:","lastModifiedDate":"2022-03-10"},{"lineNumber":55,"author":{"gitId":"-"},"content":"            return new ClearCommand();","lastModifiedDate":"2022-03-10"},{"lineNumber":56,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-03-10"},{"lineNumber":57,"author":{"gitId":"bingsen0806"},"content":"        case EXIT_COMMAND_WORD:","lastModifiedDate":"2022-03-10"},{"lineNumber":58,"author":{"gitId":"-"},"content":"            return new ExitCommand();","lastModifiedDate":"2016-08-24"},{"lineNumber":59,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":60,"author":{"gitId":"bingsen0806"},"content":"        case HELP_COMMAND_WORD:","lastModifiedDate":"2022-03-10"},{"lineNumber":61,"author":{"gitId":"-"},"content":"            return new HelpCommand();","lastModifiedDate":"2016-08-24"},{"lineNumber":62,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-14"},{"lineNumber":63,"author":{"gitId":"-"},"content":"        default:","lastModifiedDate":"2016-08-26"},{"lineNumber":64,"author":{"gitId":"-"},"content":"            throw new ParseException(MESSAGE_UNKNOWN_COMMAND);","lastModifiedDate":"2017-03-11"},{"lineNumber":65,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-08-24"},{"lineNumber":66,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":67,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":68,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-24"}],"authorContributionMap":{"-":56,"bingsen0806":10,"aditi2313":2}},{"path":"src/main/java/seedu/address/logic/parser/CliSyntax.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2017-02-11"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-11"},{"lineNumber":3,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-02-11"},{"lineNumber":4,"author":{"gitId":"-"},"content":" * Contains Command Line Interface (CLI) syntax definitions common to multiple commands","lastModifiedDate":"2017-02-11"},{"lineNumber":5,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-02-11"},{"lineNumber":6,"author":{"gitId":"-"},"content":"public class CliSyntax {","lastModifiedDate":"2017-02-11"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-11"},{"lineNumber":8,"author":{"gitId":"-"},"content":"    /* Prefix definitions */","lastModifiedDate":"2017-02-11"},{"lineNumber":9,"author":{"gitId":"-"},"content":"    public static final Prefix PREFIX_NAME \u003d new Prefix(\"n/\");","lastModifiedDate":"2017-06-06"},{"lineNumber":10,"author":{"gitId":"-"},"content":"    public static final Prefix PREFIX_PHONE \u003d new Prefix(\"p/\");","lastModifiedDate":"2017-02-11"},{"lineNumber":11,"author":{"gitId":"-"},"content":"    public static final Prefix PREFIX_EMAIL \u003d new Prefix(\"e/\");","lastModifiedDate":"2017-02-11"},{"lineNumber":12,"author":{"gitId":"aditi2313"},"content":"    public static final Prefix PREFIX_ID \u003d new Prefix(\"s/\");","lastModifiedDate":"2022-03-09"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    public static final Prefix PREFIX_TAG \u003d new Prefix(\"t/\");","lastModifiedDate":"2017-02-11"},{"lineNumber":14,"author":{"gitId":"bingsen0806"},"content":"    public static final Prefix PREFIX_ISBN \u003d new Prefix(\"i/\");","lastModifiedDate":"2022-03-11"},{"lineNumber":15,"author":{"gitId":"bingsen0806"},"content":"    public static final Prefix PREFIX_AUTHOR \u003d new Prefix(\"a/\");","lastModifiedDate":"2022-03-11"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-11"},{"lineNumber":17,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-02-11"}],"authorContributionMap":{"-":14,"aditi2313":1,"bingsen0806":2}},{"path":"src/main/java/seedu/address/logic/parser/ParserUtil.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2017-02-11"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-11"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2017-05-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-15"},{"lineNumber":5,"author":{"gitId":"yuqitanyq"},"content":"import java.util.ArrayList;","lastModifiedDate":"2022-03-10"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.util.Collection;","lastModifiedDate":"2017-02-11"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import java.util.HashSet;","lastModifiedDate":"2017-02-11"},{"lineNumber":8,"author":{"gitId":"yuqitanyq"},"content":"import java.util.List;","lastModifiedDate":"2022-03-10"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import java.util.Set;","lastModifiedDate":"2017-02-11"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-11"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.index.Index;","lastModifiedDate":"2017-05-25"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import seedu.address.commons.util.StringUtil;","lastModifiedDate":"2017-02-11"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import seedu.address.logic.parser.exceptions.ParseException;","lastModifiedDate":"2018-07-10"},{"lineNumber":14,"author":{"gitId":"yuqitanyq"},"content":"import seedu.address.model.book.Author;","lastModifiedDate":"2022-03-10"},{"lineNumber":15,"author":{"gitId":"yuqitanyq"},"content":"import seedu.address.model.book.BookName;","lastModifiedDate":"2022-03-10"},{"lineNumber":16,"author":{"gitId":"yuqitanyq"},"content":"import seedu.address.model.book.Isbn;","lastModifiedDate":"2022-03-10"},{"lineNumber":17,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Email;","lastModifiedDate":"2017-02-11"},{"lineNumber":18,"author":{"gitId":"aditi2313"},"content":"import seedu.address.model.person.Id;","lastModifiedDate":"2022-03-11"},{"lineNumber":19,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Name;","lastModifiedDate":"2017-02-11"},{"lineNumber":20,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Phone;","lastModifiedDate":"2017-02-11"},{"lineNumber":21,"author":{"gitId":"-"},"content":"import seedu.address.model.tag.Tag;","lastModifiedDate":"2017-02-11"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-11"},{"lineNumber":23,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-02-11"},{"lineNumber":24,"author":{"gitId":"-"},"content":" * Contains utility methods used for parsing strings in the various *Parser classes.","lastModifiedDate":"2017-07-18"},{"lineNumber":25,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-02-11"},{"lineNumber":26,"author":{"gitId":"-"},"content":"public class ParserUtil {","lastModifiedDate":"2017-02-11"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-11"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_INVALID_INDEX \u003d \"Index is not a non-zero unsigned integer.\";","lastModifiedDate":"2017-06-02"},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-02"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-02-11"},{"lineNumber":31,"author":{"gitId":"yuqitanyq"},"content":"     * Parses {@code String oneBasedIndex} into an {@code Index} and returns it.","lastModifiedDate":"2022-03-10"},{"lineNumber":32,"author":{"gitId":"yuqitanyq"},"content":"     * Leading and trailing whitespaces will be trimmed.","lastModifiedDate":"2022-03-10"},{"lineNumber":33,"author":{"gitId":"yuqitanyq"},"content":"     *","lastModifiedDate":"2022-03-10"},{"lineNumber":34,"author":{"gitId":"-"},"content":"     * @throws ParseException if the specified index is invalid (not non-zero unsigned integer).","lastModifiedDate":"2018-07-10"},{"lineNumber":35,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-02-11"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    public static Index parseIndex(String oneBasedIndex) throws ParseException {","lastModifiedDate":"2018-07-10"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        String trimmedIndex \u003d oneBasedIndex.trim();","lastModifiedDate":"2017-05-25"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        if (!StringUtil.isNonZeroUnsignedInteger(trimmedIndex)) {","lastModifiedDate":"2017-06-02"},{"lineNumber":39,"author":{"gitId":"-"},"content":"            throw new ParseException(MESSAGE_INVALID_INDEX);","lastModifiedDate":"2018-07-10"},{"lineNumber":40,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-02-11"},{"lineNumber":41,"author":{"gitId":"-"},"content":"        return Index.fromOneBased(Integer.parseInt(trimmedIndex));","lastModifiedDate":"2017-05-25"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-02-11"},{"lineNumber":43,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-11"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-05-29"},{"lineNumber":45,"author":{"gitId":"-"},"content":"     * Parses a {@code String name} into a {@code Name}.","lastModifiedDate":"2017-05-29"},{"lineNumber":46,"author":{"gitId":"-"},"content":"     * Leading and trailing whitespaces will be trimmed.","lastModifiedDate":"2017-05-29"},{"lineNumber":47,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2017-05-29"},{"lineNumber":48,"author":{"gitId":"-"},"content":"     * @throws ParseException if the given {@code name} is invalid.","lastModifiedDate":"2018-07-10"},{"lineNumber":49,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-05-29"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    public static Name parseName(String name) throws ParseException {","lastModifiedDate":"2018-07-10"},{"lineNumber":51,"author":{"gitId":"-"},"content":"        requireNonNull(name);","lastModifiedDate":"2017-05-29"},{"lineNumber":52,"author":{"gitId":"-"},"content":"        String trimmedName \u003d name.trim();","lastModifiedDate":"2017-05-29"},{"lineNumber":53,"author":{"gitId":"-"},"content":"        if (!Name.isValidName(trimmedName)) {","lastModifiedDate":"2017-05-30"},{"lineNumber":54,"author":{"gitId":"-"},"content":"            throw new ParseException(Name.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2018-09-22"},{"lineNumber":55,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-30"},{"lineNumber":56,"author":{"gitId":"-"},"content":"        return new Name(trimmedName);","lastModifiedDate":"2017-05-29"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-29"},{"lineNumber":58,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-29"},{"lineNumber":59,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-05-30"},{"lineNumber":60,"author":{"gitId":"-"},"content":"     * Parses a {@code String phone} into a {@code Phone}.","lastModifiedDate":"2017-05-30"},{"lineNumber":61,"author":{"gitId":"-"},"content":"     * Leading and trailing whitespaces will be trimmed.","lastModifiedDate":"2017-05-30"},{"lineNumber":62,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2017-05-30"},{"lineNumber":63,"author":{"gitId":"-"},"content":"     * @throws ParseException if the given {@code phone} is invalid.","lastModifiedDate":"2018-07-10"},{"lineNumber":64,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-05-30"},{"lineNumber":65,"author":{"gitId":"-"},"content":"    public static Phone parsePhone(String phone) throws ParseException {","lastModifiedDate":"2018-07-10"},{"lineNumber":66,"author":{"gitId":"-"},"content":"        requireNonNull(phone);","lastModifiedDate":"2017-05-30"},{"lineNumber":67,"author":{"gitId":"-"},"content":"        String trimmedPhone \u003d phone.trim();","lastModifiedDate":"2017-05-30"},{"lineNumber":68,"author":{"gitId":"-"},"content":"        if (!Phone.isValidPhone(trimmedPhone)) {","lastModifiedDate":"2017-05-30"},{"lineNumber":69,"author":{"gitId":"-"},"content":"            throw new ParseException(Phone.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2018-09-22"},{"lineNumber":70,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-30"},{"lineNumber":71,"author":{"gitId":"-"},"content":"        return new Phone(trimmedPhone);","lastModifiedDate":"2017-05-30"},{"lineNumber":72,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-30"},{"lineNumber":73,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-30"},{"lineNumber":74,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-05-30"},{"lineNumber":75,"author":{"gitId":"-"},"content":"     * Parses a {@code String address} into an {@code Address}.","lastModifiedDate":"2017-05-30"},{"lineNumber":76,"author":{"gitId":"-"},"content":"     * Leading and trailing whitespaces will be trimmed.","lastModifiedDate":"2017-05-30"},{"lineNumber":77,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2017-05-30"},{"lineNumber":78,"author":{"gitId":"-"},"content":"     * @throws ParseException if the given {@code address} is invalid.","lastModifiedDate":"2018-07-10"},{"lineNumber":79,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-05-30"},{"lineNumber":80,"author":{"gitId":"aditi2313"},"content":"    public static Id parseId(String address) throws ParseException {","lastModifiedDate":"2022-03-09"},{"lineNumber":81,"author":{"gitId":"-"},"content":"        requireNonNull(address);","lastModifiedDate":"2017-05-30"},{"lineNumber":82,"author":{"gitId":"aditi2313"},"content":"        String trimmedId \u003d address.trim();","lastModifiedDate":"2022-03-09"},{"lineNumber":83,"author":{"gitId":"aditi2313"},"content":"        if (!Id.isValidId(trimmedId)) {","lastModifiedDate":"2022-03-09"},{"lineNumber":84,"author":{"gitId":"aditi2313"},"content":"            throw new ParseException(Id.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2022-03-09"},{"lineNumber":85,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-30"},{"lineNumber":86,"author":{"gitId":"aditi2313"},"content":"        return new Id(trimmedId);","lastModifiedDate":"2022-03-09"},{"lineNumber":87,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-30"},{"lineNumber":88,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-30"},{"lineNumber":89,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-05-30"},{"lineNumber":90,"author":{"gitId":"-"},"content":"     * Parses a {@code String email} into an {@code Email}.","lastModifiedDate":"2017-05-30"},{"lineNumber":91,"author":{"gitId":"-"},"content":"     * Leading and trailing whitespaces will be trimmed.","lastModifiedDate":"2017-05-30"},{"lineNumber":92,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2017-05-30"},{"lineNumber":93,"author":{"gitId":"-"},"content":"     * @throws ParseException if the given {@code email} is invalid.","lastModifiedDate":"2018-07-10"},{"lineNumber":94,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-05-30"},{"lineNumber":95,"author":{"gitId":"-"},"content":"    public static Email parseEmail(String email) throws ParseException {","lastModifiedDate":"2018-07-10"},{"lineNumber":96,"author":{"gitId":"-"},"content":"        requireNonNull(email);","lastModifiedDate":"2017-05-30"},{"lineNumber":97,"author":{"gitId":"-"},"content":"        String trimmedEmail \u003d email.trim();","lastModifiedDate":"2017-05-30"},{"lineNumber":98,"author":{"gitId":"-"},"content":"        if (!Email.isValidEmail(trimmedEmail)) {","lastModifiedDate":"2017-05-30"},{"lineNumber":99,"author":{"gitId":"-"},"content":"            throw new ParseException(Email.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2018-09-22"},{"lineNumber":100,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-30"},{"lineNumber":101,"author":{"gitId":"-"},"content":"        return new Email(trimmedEmail);","lastModifiedDate":"2017-05-30"},{"lineNumber":102,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-30"},{"lineNumber":103,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-30"},{"lineNumber":104,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-05-30"},{"lineNumber":105,"author":{"gitId":"-"},"content":"     * Parses a {@code String tag} into a {@code Tag}.","lastModifiedDate":"2017-05-30"},{"lineNumber":106,"author":{"gitId":"-"},"content":"     * Leading and trailing whitespaces will be trimmed.","lastModifiedDate":"2017-05-30"},{"lineNumber":107,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2017-05-30"},{"lineNumber":108,"author":{"gitId":"-"},"content":"     * @throws ParseException if the given {@code tag} is invalid.","lastModifiedDate":"2018-07-10"},{"lineNumber":109,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-05-30"},{"lineNumber":110,"author":{"gitId":"-"},"content":"    public static Tag parseTag(String tag) throws ParseException {","lastModifiedDate":"2018-07-10"},{"lineNumber":111,"author":{"gitId":"-"},"content":"        requireNonNull(tag);","lastModifiedDate":"2017-05-30"},{"lineNumber":112,"author":{"gitId":"-"},"content":"        String trimmedTag \u003d tag.trim();","lastModifiedDate":"2017-05-30"},{"lineNumber":113,"author":{"gitId":"-"},"content":"        if (!Tag.isValidTagName(trimmedTag)) {","lastModifiedDate":"2017-05-30"},{"lineNumber":114,"author":{"gitId":"-"},"content":"            throw new ParseException(Tag.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2018-09-22"},{"lineNumber":115,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-30"},{"lineNumber":116,"author":{"gitId":"-"},"content":"        return new Tag(trimmedTag);","lastModifiedDate":"2017-05-30"},{"lineNumber":117,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-30"},{"lineNumber":118,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-30"},{"lineNumber":119,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-02-11"},{"lineNumber":120,"author":{"gitId":"-"},"content":"     * Parses {@code Collection\u003cString\u003e tags} into a {@code Set\u003cTag\u003e}.","lastModifiedDate":"2017-03-07"},{"lineNumber":121,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-02-11"},{"lineNumber":122,"author":{"gitId":"-"},"content":"    public static Set\u003cTag\u003e parseTags(Collection\u003cString\u003e tags) throws ParseException {","lastModifiedDate":"2018-07-10"},{"lineNumber":123,"author":{"gitId":"-"},"content":"        requireNonNull(tags);","lastModifiedDate":"2017-05-15"},{"lineNumber":124,"author":{"gitId":"-"},"content":"        final Set\u003cTag\u003e tagSet \u003d new HashSet\u003c\u003e();","lastModifiedDate":"2017-02-11"},{"lineNumber":125,"author":{"gitId":"-"},"content":"        for (String tagName : tags) {","lastModifiedDate":"2017-02-11"},{"lineNumber":126,"author":{"gitId":"-"},"content":"            tagSet.add(parseTag(tagName));","lastModifiedDate":"2017-05-30"},{"lineNumber":127,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-02-11"},{"lineNumber":128,"author":{"gitId":"-"},"content":"        return tagSet;","lastModifiedDate":"2017-03-07"},{"lineNumber":129,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-02-11"},{"lineNumber":130,"author":{"gitId":"yuqitanyq"},"content":"","lastModifiedDate":"2022-03-10"},{"lineNumber":131,"author":{"gitId":"yuqitanyq"},"content":"    /**","lastModifiedDate":"2022-03-10"},{"lineNumber":132,"author":{"gitId":"bingsen0806"},"content":"     * Parses a {@code String author} into a {@code Author}.","lastModifiedDate":"2022-03-11"},{"lineNumber":133,"author":{"gitId":"yuqitanyq"},"content":"     * Leading and trailing whitespaces will be trimmed.","lastModifiedDate":"2022-03-10"},{"lineNumber":134,"author":{"gitId":"yuqitanyq"},"content":"     *","lastModifiedDate":"2022-03-10"},{"lineNumber":135,"author":{"gitId":"bingsen0806"},"content":"     * @throws ParseException if the given {@code author} is invalid.","lastModifiedDate":"2022-03-11"},{"lineNumber":136,"author":{"gitId":"yuqitanyq"},"content":"     */","lastModifiedDate":"2022-03-10"},{"lineNumber":137,"author":{"gitId":"bingsen0806"},"content":"    public static Author parseAuthor(String author) throws ParseException {","lastModifiedDate":"2022-03-11"},{"lineNumber":138,"author":{"gitId":"bingsen0806"},"content":"        requireNonNull(author);","lastModifiedDate":"2022-03-11"},{"lineNumber":139,"author":{"gitId":"bingsen0806"},"content":"        String trimmedAuthor \u003d author.trim();","lastModifiedDate":"2022-03-11"},{"lineNumber":140,"author":{"gitId":"bingsen0806"},"content":"        if (!Author.isValidAuthor(trimmedAuthor)) {","lastModifiedDate":"2022-03-11"},{"lineNumber":141,"author":{"gitId":"bingsen0806"},"content":"            throw new ParseException(Author.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2022-03-11"},{"lineNumber":142,"author":{"gitId":"yuqitanyq"},"content":"        }","lastModifiedDate":"2022-03-10"},{"lineNumber":143,"author":{"gitId":"bingsen0806"},"content":"        return new Author(trimmedAuthor);","lastModifiedDate":"2022-03-11"},{"lineNumber":144,"author":{"gitId":"yuqitanyq"},"content":"    }","lastModifiedDate":"2022-03-10"},{"lineNumber":145,"author":{"gitId":"yuqitanyq"},"content":"","lastModifiedDate":"2022-03-10"},{"lineNumber":146,"author":{"gitId":"yuqitanyq"},"content":"    /**","lastModifiedDate":"2022-03-10"},{"lineNumber":147,"author":{"gitId":"yuqitanyq"},"content":"     * Parses {@code Collection\u003cString\u003e authors} into a {@code List\u003cAuthor\u003e}.","lastModifiedDate":"2022-03-10"},{"lineNumber":148,"author":{"gitId":"yuqitanyq"},"content":"     */","lastModifiedDate":"2022-03-10"},{"lineNumber":149,"author":{"gitId":"yuqitanyq"},"content":"    public static List\u003cAuthor\u003e parseAuthors(Collection\u003cString\u003e authors) throws ParseException {","lastModifiedDate":"2022-03-10"},{"lineNumber":150,"author":{"gitId":"yuqitanyq"},"content":"        requireNonNull(authors);","lastModifiedDate":"2022-03-10"},{"lineNumber":151,"author":{"gitId":"yuqitanyq"},"content":"        final List\u003cAuthor\u003e authorList \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2022-03-10"},{"lineNumber":152,"author":{"gitId":"yuqitanyq"},"content":"","lastModifiedDate":"2022-03-12"},{"lineNumber":153,"author":{"gitId":"bingsen0806"},"content":"        for (String authorName : authors) {","lastModifiedDate":"2022-03-11"},{"lineNumber":154,"author":{"gitId":"bingsen0806"},"content":"            authorList.add(parseAuthor(authorName));","lastModifiedDate":"2022-03-11"},{"lineNumber":155,"author":{"gitId":"yuqitanyq"},"content":"        }","lastModifiedDate":"2022-03-10"},{"lineNumber":156,"author":{"gitId":"yuqitanyq"},"content":"        return authorList;","lastModifiedDate":"2022-03-10"},{"lineNumber":157,"author":{"gitId":"yuqitanyq"},"content":"    }","lastModifiedDate":"2022-03-10"},{"lineNumber":158,"author":{"gitId":"yuqitanyq"},"content":"","lastModifiedDate":"2022-03-10"},{"lineNumber":159,"author":{"gitId":"yuqitanyq"},"content":"    /**","lastModifiedDate":"2022-03-10"},{"lineNumber":160,"author":{"gitId":"bingsen0806"},"content":"     * Parses a {@code String bookName} into a {@code BookName}.","lastModifiedDate":"2022-03-11"},{"lineNumber":161,"author":{"gitId":"yuqitanyq"},"content":"     * Leading and trailing whitespaces will be trimmed.","lastModifiedDate":"2022-03-10"},{"lineNumber":162,"author":{"gitId":"yuqitanyq"},"content":"     *","lastModifiedDate":"2022-03-10"},{"lineNumber":163,"author":{"gitId":"bingsen0806"},"content":"     * @throws ParseException if the given {@code bookName} is invalid.","lastModifiedDate":"2022-03-11"},{"lineNumber":164,"author":{"gitId":"yuqitanyq"},"content":"     */","lastModifiedDate":"2022-03-10"},{"lineNumber":165,"author":{"gitId":"bingsen0806"},"content":"    public static BookName parseBookName(String bookName) throws ParseException {","lastModifiedDate":"2022-03-11"},{"lineNumber":166,"author":{"gitId":"bingsen0806"},"content":"        requireNonNull(bookName);","lastModifiedDate":"2022-03-11"},{"lineNumber":167,"author":{"gitId":"bingsen0806"},"content":"        String trimmedBookName \u003d bookName.trim();","lastModifiedDate":"2022-03-11"},{"lineNumber":168,"author":{"gitId":"bingsen0806"},"content":"        if (!BookName.isValidBookName(trimmedBookName)) {","lastModifiedDate":"2022-03-11"},{"lineNumber":169,"author":{"gitId":"bingsen0806"},"content":"            throw new ParseException(BookName.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2022-03-11"},{"lineNumber":170,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-02-11"},{"lineNumber":171,"author":{"gitId":"bingsen0806"},"content":"        return new BookName(trimmedBookName);","lastModifiedDate":"2022-03-11"},{"lineNumber":172,"author":{"gitId":"bingsen0806"},"content":"    }","lastModifiedDate":"2022-03-11"},{"lineNumber":173,"author":{"gitId":"bingsen0806"},"content":"","lastModifiedDate":"2022-03-11"},{"lineNumber":174,"author":{"gitId":"bingsen0806"},"content":"    /**","lastModifiedDate":"2022-03-11"},{"lineNumber":175,"author":{"gitId":"bingsen0806"},"content":"     * Parses a {@code String isbn} into a {@code Isbn}.","lastModifiedDate":"2022-03-11"},{"lineNumber":176,"author":{"gitId":"bingsen0806"},"content":"     * Leading and trailing whitespaces will be trimmed.","lastModifiedDate":"2022-03-11"},{"lineNumber":177,"author":{"gitId":"bingsen0806"},"content":"     *","lastModifiedDate":"2022-03-11"},{"lineNumber":178,"author":{"gitId":"bingsen0806"},"content":"     * @throws ParseException if the given {@code isbn} is invalid.","lastModifiedDate":"2022-03-11"},{"lineNumber":179,"author":{"gitId":"bingsen0806"},"content":"     */","lastModifiedDate":"2022-03-11"},{"lineNumber":180,"author":{"gitId":"bingsen0806"},"content":"    public static Isbn parseIsbn(String isbn) throws ParseException {","lastModifiedDate":"2022-03-11"},{"lineNumber":181,"author":{"gitId":"bingsen0806"},"content":"        requireNonNull(isbn);","lastModifiedDate":"2022-03-11"},{"lineNumber":182,"author":{"gitId":"bingsen0806"},"content":"        String trimmedIsbn \u003d isbn.trim();","lastModifiedDate":"2022-03-11"},{"lineNumber":183,"author":{"gitId":"bingsen0806"},"content":"        if (!Isbn.isValidIsbn(trimmedIsbn)) {","lastModifiedDate":"2022-03-11"},{"lineNumber":184,"author":{"gitId":"bingsen0806"},"content":"            throw new ParseException(Isbn.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2022-03-11"},{"lineNumber":185,"author":{"gitId":"bingsen0806"},"content":"        }","lastModifiedDate":"2022-03-11"},{"lineNumber":186,"author":{"gitId":"bingsen0806"},"content":"        return new Isbn(trimmedIsbn);","lastModifiedDate":"2022-03-11"},{"lineNumber":187,"author":{"gitId":"yuqitanyq"},"content":"    }","lastModifiedDate":"2022-03-10"},{"lineNumber":188,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2022-03-10"},{"lineNumber":189,"author":{"gitId":"yuqitanyq"},"content":"","lastModifiedDate":"2022-03-10"}],"authorContributionMap":{"yuqitanyq":33,"-":117,"aditi2313":6,"bingsen0806":33}},{"path":"src/main/java/seedu/address/logic/parser/book/AddBookCommandParser.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"bingsen0806"},"content":"package seedu.address.logic.parser.book;","lastModifiedDate":"2022-03-10"},{"lineNumber":2,"author":{"gitId":"bingsen0806"},"content":"","lastModifiedDate":"2022-03-10"},{"lineNumber":3,"author":{"gitId":"bingsen0806"},"content":"import static seedu.address.commons.core.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2022-03-11"},{"lineNumber":4,"author":{"gitId":"bingsen0806"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_AUTHOR;","lastModifiedDate":"2022-03-11"},{"lineNumber":5,"author":{"gitId":"bingsen0806"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_ISBN;","lastModifiedDate":"2022-03-11"},{"lineNumber":6,"author":{"gitId":"bingsen0806"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_NAME;","lastModifiedDate":"2022-03-11"},{"lineNumber":7,"author":{"gitId":"bingsen0806"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_TAG;","lastModifiedDate":"2022-03-11"},{"lineNumber":8,"author":{"gitId":"bingsen0806"},"content":"","lastModifiedDate":"2022-03-11"},{"lineNumber":9,"author":{"gitId":"bingsen0806"},"content":"import java.util.Date;","lastModifiedDate":"2022-03-11"},{"lineNumber":10,"author":{"gitId":"bingsen0806"},"content":"import java.util.List;","lastModifiedDate":"2022-03-11"},{"lineNumber":11,"author":{"gitId":"bingsen0806"},"content":"import java.util.Set;","lastModifiedDate":"2022-03-11"},{"lineNumber":12,"author":{"gitId":"bingsen0806"},"content":"import java.util.stream.Stream;","lastModifiedDate":"2022-03-10"},{"lineNumber":13,"author":{"gitId":"bingsen0806"},"content":"","lastModifiedDate":"2022-03-10"},{"lineNumber":14,"author":{"gitId":"bingsen0806"},"content":"import seedu.address.logic.commands.book.AddBookCommand;","lastModifiedDate":"2022-03-10"},{"lineNumber":15,"author":{"gitId":"bingsen0806"},"content":"import seedu.address.logic.parser.ArgumentMultimap;","lastModifiedDate":"2022-03-10"},{"lineNumber":16,"author":{"gitId":"bingsen0806"},"content":"import seedu.address.logic.parser.ArgumentTokenizer;","lastModifiedDate":"2022-03-11"},{"lineNumber":17,"author":{"gitId":"bingsen0806"},"content":"import seedu.address.logic.parser.Parser;","lastModifiedDate":"2022-03-10"},{"lineNumber":18,"author":{"gitId":"bingsen0806"},"content":"import seedu.address.logic.parser.ParserUtil;","lastModifiedDate":"2022-03-11"},{"lineNumber":19,"author":{"gitId":"bingsen0806"},"content":"import seedu.address.logic.parser.Prefix;","lastModifiedDate":"2022-03-10"},{"lineNumber":20,"author":{"gitId":"bingsen0806"},"content":"import seedu.address.logic.parser.exceptions.ParseException;","lastModifiedDate":"2022-03-10"},{"lineNumber":21,"author":{"gitId":"bingsen0806"},"content":"import seedu.address.model.book.Author;","lastModifiedDate":"2022-03-11"},{"lineNumber":22,"author":{"gitId":"bingsen0806"},"content":"import seedu.address.model.book.Book;","lastModifiedDate":"2022-03-11"},{"lineNumber":23,"author":{"gitId":"bingsen0806"},"content":"import seedu.address.model.book.BookName;","lastModifiedDate":"2022-03-11"},{"lineNumber":24,"author":{"gitId":"bingsen0806"},"content":"import seedu.address.model.book.Isbn;","lastModifiedDate":"2022-03-11"},{"lineNumber":25,"author":{"gitId":"bingsen0806"},"content":"import seedu.address.model.tag.Tag;","lastModifiedDate":"2022-03-11"},{"lineNumber":26,"author":{"gitId":"bingsen0806"},"content":"","lastModifiedDate":"2022-03-10"},{"lineNumber":27,"author":{"gitId":"bingsen0806"},"content":"/**","lastModifiedDate":"2022-03-10"},{"lineNumber":28,"author":{"gitId":"bingsen0806"},"content":" * Parses input arguments and creates a new AddBookCommand object","lastModifiedDate":"2022-03-10"},{"lineNumber":29,"author":{"gitId":"bingsen0806"},"content":" */","lastModifiedDate":"2022-03-10"},{"lineNumber":30,"author":{"gitId":"bingsen0806"},"content":"public class AddBookCommandParser implements Parser\u003cAddBookCommand\u003e {","lastModifiedDate":"2022-03-10"},{"lineNumber":31,"author":{"gitId":"bingsen0806"},"content":"","lastModifiedDate":"2022-03-10"},{"lineNumber":32,"author":{"gitId":"bingsen0806"},"content":"    /**","lastModifiedDate":"2022-03-10"},{"lineNumber":33,"author":{"gitId":"bingsen0806"},"content":"     * Parses the given {@code String} of arguments in the context of the AddBookCommand","lastModifiedDate":"2022-03-10"},{"lineNumber":34,"author":{"gitId":"bingsen0806"},"content":"     * and returns an AddBookCommand object for execution.","lastModifiedDate":"2022-03-10"},{"lineNumber":35,"author":{"gitId":"bingsen0806"},"content":"     * @throws ParseException if the user input does not conform the expected format","lastModifiedDate":"2022-03-10"},{"lineNumber":36,"author":{"gitId":"bingsen0806"},"content":"     */","lastModifiedDate":"2022-03-10"},{"lineNumber":37,"author":{"gitId":"bingsen0806"},"content":"    public AddBookCommand parse(String args) throws ParseException {","lastModifiedDate":"2022-03-10"},{"lineNumber":38,"author":{"gitId":"bingsen0806"},"content":"        ArgumentMultimap argMultimap \u003d","lastModifiedDate":"2022-03-11"},{"lineNumber":39,"author":{"gitId":"bingsen0806"},"content":"                ArgumentTokenizer.tokenize(args, PREFIX_NAME, PREFIX_ISBN, PREFIX_AUTHOR, PREFIX_TAG);","lastModifiedDate":"2022-03-11"},{"lineNumber":40,"author":{"gitId":"bingsen0806"},"content":"","lastModifiedDate":"2022-03-11"},{"lineNumber":41,"author":{"gitId":"bingsen0806"},"content":"        if (!arePrefixesPresent(argMultimap, PREFIX_NAME, PREFIX_ISBN)","lastModifiedDate":"2022-03-11"},{"lineNumber":42,"author":{"gitId":"bingsen0806"},"content":"            || !argMultimap.getPreamble().isEmpty()) {","lastModifiedDate":"2022-03-11"},{"lineNumber":43,"author":{"gitId":"bingsen0806"},"content":"            throw new ParseException(String.format(MESSAGE_INVALID_COMMAND_FORMAT, AddBookCommand.MESSAGE_USAGE));","lastModifiedDate":"2022-03-11"},{"lineNumber":44,"author":{"gitId":"bingsen0806"},"content":"        }","lastModifiedDate":"2022-03-11"},{"lineNumber":45,"author":{"gitId":"bingsen0806"},"content":"","lastModifiedDate":"2022-03-11"},{"lineNumber":46,"author":{"gitId":"bingsen0806"},"content":"        BookName bookName \u003d ParserUtil.parseBookName(argMultimap.getValue(PREFIX_NAME).get());","lastModifiedDate":"2022-03-11"},{"lineNumber":47,"author":{"gitId":"bingsen0806"},"content":"        Isbn isbn \u003d ParserUtil.parseIsbn(argMultimap.getValue(PREFIX_ISBN).get());","lastModifiedDate":"2022-03-11"},{"lineNumber":48,"author":{"gitId":"bingsen0806"},"content":"        Set\u003cTag\u003e tagList \u003d ParserUtil.parseTags(argMultimap.getAllValues(PREFIX_TAG));","lastModifiedDate":"2022-03-11"},{"lineNumber":49,"author":{"gitId":"bingsen0806"},"content":"        List\u003cAuthor\u003e authorList \u003d ParserUtil.parseAuthors(argMultimap.getAllValues(PREFIX_AUTHOR));","lastModifiedDate":"2022-03-11"},{"lineNumber":50,"author":{"gitId":"bingsen0806"},"content":"","lastModifiedDate":"2022-03-10"},{"lineNumber":51,"author":{"gitId":"bingsen0806"},"content":"        Book book \u003d new Book(bookName, isbn, authorList, tagList, new Date().getTime());","lastModifiedDate":"2022-03-11"},{"lineNumber":52,"author":{"gitId":"bingsen0806"},"content":"","lastModifiedDate":"2022-03-10"},{"lineNumber":53,"author":{"gitId":"bingsen0806"},"content":"        return new AddBookCommand(book);","lastModifiedDate":"2022-03-11"},{"lineNumber":54,"author":{"gitId":"bingsen0806"},"content":"    }","lastModifiedDate":"2022-03-10"},{"lineNumber":55,"author":{"gitId":"bingsen0806"},"content":"","lastModifiedDate":"2022-03-10"},{"lineNumber":56,"author":{"gitId":"bingsen0806"},"content":"    /**","lastModifiedDate":"2022-03-10"},{"lineNumber":57,"author":{"gitId":"bingsen0806"},"content":"     * Returns true if none of the prefixes contains empty {@code Optional} values in the given","lastModifiedDate":"2022-03-10"},{"lineNumber":58,"author":{"gitId":"bingsen0806"},"content":"     * {@code ArgumentMultimap}.","lastModifiedDate":"2022-03-10"},{"lineNumber":59,"author":{"gitId":"bingsen0806"},"content":"     */","lastModifiedDate":"2022-03-10"},{"lineNumber":60,"author":{"gitId":"bingsen0806"},"content":"    private static boolean arePrefixesPresent(ArgumentMultimap argMultimap, Prefix... prefixes) {","lastModifiedDate":"2022-03-11"},{"lineNumber":61,"author":{"gitId":"bingsen0806"},"content":"        return Stream.of(prefixes).allMatch(prefix -\u003e argMultimap.getValue(prefix).isPresent());","lastModifiedDate":"2022-03-11"},{"lineNumber":62,"author":{"gitId":"bingsen0806"},"content":"    }","lastModifiedDate":"2022-03-10"},{"lineNumber":63,"author":{"gitId":"bingsen0806"},"content":"}","lastModifiedDate":"2022-03-10"}],"authorContributionMap":{"bingsen0806":63}},{"path":"src/main/java/seedu/address/logic/parser/book/BookCommandParser.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"bingsen0806"},"content":"package seedu.address.logic.parser.book;","lastModifiedDate":"2022-03-10"},{"lineNumber":2,"author":{"gitId":"bingsen0806"},"content":"","lastModifiedDate":"2022-03-10"},{"lineNumber":3,"author":{"gitId":"bingsen0806"},"content":"import static seedu.address.commons.core.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2022-03-10"},{"lineNumber":4,"author":{"gitId":"bingsen0806"},"content":"import static seedu.address.commons.core.Messages.MESSAGE_UNKNOWN_COMMAND;","lastModifiedDate":"2022-03-10"},{"lineNumber":5,"author":{"gitId":"bingsen0806"},"content":"","lastModifiedDate":"2022-03-10"},{"lineNumber":6,"author":{"gitId":"bingsen0806"},"content":"import java.util.regex.Matcher;","lastModifiedDate":"2022-03-10"},{"lineNumber":7,"author":{"gitId":"bingsen0806"},"content":"import java.util.regex.Pattern;","lastModifiedDate":"2022-03-10"},{"lineNumber":8,"author":{"gitId":"bingsen0806"},"content":"","lastModifiedDate":"2022-03-10"},{"lineNumber":9,"author":{"gitId":"bingsen0806"},"content":"import seedu.address.logic.commands.Command;","lastModifiedDate":"2022-03-10"},{"lineNumber":10,"author":{"gitId":"bingsen0806"},"content":"import seedu.address.logic.commands.HelpCommand;","lastModifiedDate":"2022-03-10"},{"lineNumber":11,"author":{"gitId":"bingsen0806"},"content":"import seedu.address.logic.parser.Parser;","lastModifiedDate":"2022-03-10"},{"lineNumber":12,"author":{"gitId":"bingsen0806"},"content":"import seedu.address.logic.parser.exceptions.ParseException;","lastModifiedDate":"2022-03-10"},{"lineNumber":13,"author":{"gitId":"bingsen0806"},"content":"","lastModifiedDate":"2022-03-10"},{"lineNumber":14,"author":{"gitId":"bingsen0806"},"content":"/**","lastModifiedDate":"2022-03-10"},{"lineNumber":15,"author":{"gitId":"bingsen0806"},"content":" * Parses user input that is already processed by AddressBookParser into a Command object","lastModifiedDate":"2022-03-10"},{"lineNumber":16,"author":{"gitId":"bingsen0806"},"content":" *","lastModifiedDate":"2022-03-10"},{"lineNumber":17,"author":{"gitId":"bingsen0806"},"content":" * @see seedu.address.logic.parser.AddressBookParser","lastModifiedDate":"2022-03-10"},{"lineNumber":18,"author":{"gitId":"bingsen0806"},"content":" */","lastModifiedDate":"2022-03-10"},{"lineNumber":19,"author":{"gitId":"bingsen0806"},"content":"public class BookCommandParser implements Parser\u003cCommand\u003e {","lastModifiedDate":"2022-03-10"},{"lineNumber":20,"author":{"gitId":"bingsen0806"},"content":"","lastModifiedDate":"2022-03-10"},{"lineNumber":21,"author":{"gitId":"bingsen0806"},"content":"    /**","lastModifiedDate":"2022-03-10"},{"lineNumber":22,"author":{"gitId":"bingsen0806"},"content":"     * Used for initial separation of command word and args.","lastModifiedDate":"2022-03-10"},{"lineNumber":23,"author":{"gitId":"bingsen0806"},"content":"     */","lastModifiedDate":"2022-03-10"},{"lineNumber":24,"author":{"gitId":"bingsen0806"},"content":"    private static final Pattern BASIC_COMMAND_FORMAT \u003d Pattern.compile(\"(?\u003ccommandWord\u003e\\\\S+)(?\u003carguments\u003e.*)\");","lastModifiedDate":"2022-03-10"},{"lineNumber":25,"author":{"gitId":"bingsen0806"},"content":"","lastModifiedDate":"2022-03-10"},{"lineNumber":26,"author":{"gitId":"bingsen0806"},"content":"    /**","lastModifiedDate":"2022-03-10"},{"lineNumber":27,"author":{"gitId":"bingsen0806"},"content":"     * Parses user input into command for execution.","lastModifiedDate":"2022-03-10"},{"lineNumber":28,"author":{"gitId":"bingsen0806"},"content":"     *","lastModifiedDate":"2022-03-10"},{"lineNumber":29,"author":{"gitId":"bingsen0806"},"content":"     * @param userInput user input string that is alaready processed by {@code AddressBookParser}","lastModifiedDate":"2022-03-10"},{"lineNumber":30,"author":{"gitId":"bingsen0806"},"content":"     * @return the command based on the user input","lastModifiedDate":"2022-03-10"},{"lineNumber":31,"author":{"gitId":"bingsen0806"},"content":"     * @throws ParseException if the user input does not conform the expected format","lastModifiedDate":"2022-03-10"},{"lineNumber":32,"author":{"gitId":"bingsen0806"},"content":"     */","lastModifiedDate":"2022-03-10"},{"lineNumber":33,"author":{"gitId":"bingsen0806"},"content":"    public Command parse(String userInput) throws ParseException {","lastModifiedDate":"2022-03-10"},{"lineNumber":34,"author":{"gitId":"bingsen0806"},"content":"        final Matcher matcher \u003d BASIC_COMMAND_FORMAT.matcher(userInput.trim());","lastModifiedDate":"2022-03-10"},{"lineNumber":35,"author":{"gitId":"bingsen0806"},"content":"        if (!matcher.matches()) {","lastModifiedDate":"2022-03-10"},{"lineNumber":36,"author":{"gitId":"bingsen0806"},"content":"            throw new ParseException(String.format(MESSAGE_INVALID_COMMAND_FORMAT, HelpCommand.MESSAGE_USAGE));","lastModifiedDate":"2022-03-10"},{"lineNumber":37,"author":{"gitId":"bingsen0806"},"content":"        }","lastModifiedDate":"2022-03-10"},{"lineNumber":38,"author":{"gitId":"bingsen0806"},"content":"","lastModifiedDate":"2022-03-10"},{"lineNumber":39,"author":{"gitId":"bingsen0806"},"content":"        final String commandWord \u003d matcher.group(\"commandWord\");","lastModifiedDate":"2022-03-10"},{"lineNumber":40,"author":{"gitId":"bingsen0806"},"content":"        final String arguments \u003d matcher.group(\"arguments\");","lastModifiedDate":"2022-03-10"},{"lineNumber":41,"author":{"gitId":"bingsen0806"},"content":"","lastModifiedDate":"2022-03-10"},{"lineNumber":42,"author":{"gitId":"bingsen0806"},"content":"        switch (commandWord) {","lastModifiedDate":"2022-03-10"},{"lineNumber":43,"author":{"gitId":"bingsen0806"},"content":"","lastModifiedDate":"2022-03-10"},{"lineNumber":44,"author":{"gitId":"bingsen0806"},"content":"        case Command.ADD_COMMAND_WORD:","lastModifiedDate":"2022-03-10"},{"lineNumber":45,"author":{"gitId":"bingsen0806"},"content":"            return new AddBookCommandParser().parse(arguments);","lastModifiedDate":"2022-03-10"},{"lineNumber":46,"author":{"gitId":"bingsen0806"},"content":"","lastModifiedDate":"2022-03-10"},{"lineNumber":47,"author":{"gitId":"bingsen0806"},"content":"        case Command.DELETE_COMMAND_WORD:","lastModifiedDate":"2022-03-10"},{"lineNumber":48,"author":{"gitId":"bingsen0806"},"content":"            return new DeleteBookCommandParser().parse(arguments);","lastModifiedDate":"2022-03-10"},{"lineNumber":49,"author":{"gitId":"bingsen0806"},"content":"","lastModifiedDate":"2022-03-10"},{"lineNumber":50,"author":{"gitId":"yuqitanyq"},"content":"        case Command.EDIT_COMMAND_WORD:","lastModifiedDate":"2022-03-12"},{"lineNumber":51,"author":{"gitId":"yuqitanyq"},"content":"            return new EditBookCommandParser().parse(arguments);","lastModifiedDate":"2022-03-12"},{"lineNumber":52,"author":{"gitId":"yuqitanyq"},"content":"","lastModifiedDate":"2022-03-12"},{"lineNumber":53,"author":{"gitId":"yuqitanyq"},"content":"        // TODO : Add cases for List and Find","lastModifiedDate":"2022-03-12"},{"lineNumber":54,"author":{"gitId":"bingsen0806"},"content":"","lastModifiedDate":"2022-03-10"},{"lineNumber":55,"author":{"gitId":"bingsen0806"},"content":"        default:","lastModifiedDate":"2022-03-10"},{"lineNumber":56,"author":{"gitId":"bingsen0806"},"content":"            throw new ParseException(MESSAGE_UNKNOWN_COMMAND);","lastModifiedDate":"2022-03-10"},{"lineNumber":57,"author":{"gitId":"bingsen0806"},"content":"        }","lastModifiedDate":"2022-03-10"},{"lineNumber":58,"author":{"gitId":"bingsen0806"},"content":"    }","lastModifiedDate":"2022-03-10"},{"lineNumber":59,"author":{"gitId":"bingsen0806"},"content":"}","lastModifiedDate":"2022-03-10"}],"authorContributionMap":{"yuqitanyq":4,"bingsen0806":55}},{"path":"src/main/java/seedu/address/logic/parser/book/DeleteBookCommandParser.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"bingsen0806"},"content":"package seedu.address.logic.parser.book;","lastModifiedDate":"2022-03-10"},{"lineNumber":2,"author":{"gitId":"bingsen0806"},"content":"","lastModifiedDate":"2022-03-10"},{"lineNumber":3,"author":{"gitId":"bingsen0806"},"content":"import static seedu.address.commons.core.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2022-03-11"},{"lineNumber":4,"author":{"gitId":"bingsen0806"},"content":"","lastModifiedDate":"2022-03-10"},{"lineNumber":5,"author":{"gitId":"bingsen0806"},"content":"import seedu.address.commons.core.index.Index;","lastModifiedDate":"2022-03-11"},{"lineNumber":6,"author":{"gitId":"bingsen0806"},"content":"import seedu.address.logic.commands.book.DeleteBookCommand;","lastModifiedDate":"2022-03-10"},{"lineNumber":7,"author":{"gitId":"bingsen0806"},"content":"import seedu.address.logic.parser.Parser;","lastModifiedDate":"2022-03-10"},{"lineNumber":8,"author":{"gitId":"bingsen0806"},"content":"import seedu.address.logic.parser.ParserUtil;","lastModifiedDate":"2022-03-11"},{"lineNumber":9,"author":{"gitId":"bingsen0806"},"content":"import seedu.address.logic.parser.exceptions.ParseException;","lastModifiedDate":"2022-03-10"},{"lineNumber":10,"author":{"gitId":"bingsen0806"},"content":"","lastModifiedDate":"2022-03-10"},{"lineNumber":11,"author":{"gitId":"bingsen0806"},"content":"/**","lastModifiedDate":"2022-03-10"},{"lineNumber":12,"author":{"gitId":"bingsen0806"},"content":" * Parses input arguments and creates a new DeleteBookCommand object","lastModifiedDate":"2022-03-10"},{"lineNumber":13,"author":{"gitId":"bingsen0806"},"content":" */","lastModifiedDate":"2022-03-10"},{"lineNumber":14,"author":{"gitId":"bingsen0806"},"content":"public class DeleteBookCommandParser implements Parser\u003cDeleteBookCommand\u003e {","lastModifiedDate":"2022-03-10"},{"lineNumber":15,"author":{"gitId":"bingsen0806"},"content":"","lastModifiedDate":"2022-03-10"},{"lineNumber":16,"author":{"gitId":"bingsen0806"},"content":"    /**","lastModifiedDate":"2022-03-10"},{"lineNumber":17,"author":{"gitId":"bingsen0806"},"content":"     * Parses the given {@code String} of arguments in the context of the DeleteBookCommand","lastModifiedDate":"2022-03-10"},{"lineNumber":18,"author":{"gitId":"bingsen0806"},"content":"     * and returns an DeleteBookCommand object for execution.","lastModifiedDate":"2022-03-10"},{"lineNumber":19,"author":{"gitId":"bingsen0806"},"content":"     * @throws ParseException if the user input does not conform the expected format","lastModifiedDate":"2022-03-10"},{"lineNumber":20,"author":{"gitId":"bingsen0806"},"content":"     */","lastModifiedDate":"2022-03-10"},{"lineNumber":21,"author":{"gitId":"bingsen0806"},"content":"    public DeleteBookCommand parse(String args) throws ParseException {","lastModifiedDate":"2022-03-10"},{"lineNumber":22,"author":{"gitId":"bingsen0806"},"content":"        try {","lastModifiedDate":"2022-03-11"},{"lineNumber":23,"author":{"gitId":"bingsen0806"},"content":"            Index index \u003d ParserUtil.parseIndex(args);","lastModifiedDate":"2022-03-11"},{"lineNumber":24,"author":{"gitId":"bingsen0806"},"content":"            return new DeleteBookCommand(index);","lastModifiedDate":"2022-03-11"},{"lineNumber":25,"author":{"gitId":"bingsen0806"},"content":"        } catch (ParseException pe) {","lastModifiedDate":"2022-03-11"},{"lineNumber":26,"author":{"gitId":"bingsen0806"},"content":"            throw new ParseException(","lastModifiedDate":"2022-03-11"},{"lineNumber":27,"author":{"gitId":"bingsen0806"},"content":"                    String.format(MESSAGE_INVALID_COMMAND_FORMAT, DeleteBookCommand.MESSAGE_USAGE), pe);","lastModifiedDate":"2022-03-11"},{"lineNumber":28,"author":{"gitId":"bingsen0806"},"content":"        }","lastModifiedDate":"2022-03-10"},{"lineNumber":29,"author":{"gitId":"bingsen0806"},"content":"    }","lastModifiedDate":"2022-03-10"},{"lineNumber":30,"author":{"gitId":"bingsen0806"},"content":"}","lastModifiedDate":"2022-03-10"}],"authorContributionMap":{"bingsen0806":30}},{"path":"src/main/java/seedu/address/logic/parser/book/EditBookCommandParser.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"yuqitanyq"},"content":"package seedu.address.logic.parser.book;","lastModifiedDate":"2022-03-10"},{"lineNumber":2,"author":{"gitId":"yuqitanyq"},"content":"","lastModifiedDate":"2022-03-10"},{"lineNumber":3,"author":{"gitId":"yuqitanyq"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2022-03-10"},{"lineNumber":4,"author":{"gitId":"yuqitanyq"},"content":"import static seedu.address.commons.core.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2022-03-10"},{"lineNumber":5,"author":{"gitId":"yuqitanyq"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_AUTHOR;","lastModifiedDate":"2022-03-10"},{"lineNumber":6,"author":{"gitId":"yuqitanyq"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_ISBN;","lastModifiedDate":"2022-03-10"},{"lineNumber":7,"author":{"gitId":"yuqitanyq"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_NAME;","lastModifiedDate":"2022-03-10"},{"lineNumber":8,"author":{"gitId":"yuqitanyq"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_TAG;","lastModifiedDate":"2022-03-10"},{"lineNumber":9,"author":{"gitId":"yuqitanyq"},"content":"","lastModifiedDate":"2022-03-10"},{"lineNumber":10,"author":{"gitId":"yuqitanyq"},"content":"import java.util.Collection;","lastModifiedDate":"2022-03-10"},{"lineNumber":11,"author":{"gitId":"yuqitanyq"},"content":"import java.util.Collections;","lastModifiedDate":"2022-03-10"},{"lineNumber":12,"author":{"gitId":"yuqitanyq"},"content":"import java.util.List;","lastModifiedDate":"2022-03-10"},{"lineNumber":13,"author":{"gitId":"yuqitanyq"},"content":"import java.util.Optional;","lastModifiedDate":"2022-03-10"},{"lineNumber":14,"author":{"gitId":"yuqitanyq"},"content":"import java.util.Set;","lastModifiedDate":"2022-03-10"},{"lineNumber":15,"author":{"gitId":"yuqitanyq"},"content":"","lastModifiedDate":"2022-03-10"},{"lineNumber":16,"author":{"gitId":"yuqitanyq"},"content":"import seedu.address.commons.core.index.Index;","lastModifiedDate":"2022-03-10"},{"lineNumber":17,"author":{"gitId":"yuqitanyq"},"content":"import seedu.address.logic.commands.book.EditBookCommand;","lastModifiedDate":"2022-03-10"},{"lineNumber":18,"author":{"gitId":"yuqitanyq"},"content":"import seedu.address.logic.commands.book.EditBookCommand.EditBookDescriptor;","lastModifiedDate":"2022-03-10"},{"lineNumber":19,"author":{"gitId":"yuqitanyq"},"content":"import seedu.address.logic.parser.ArgumentMultimap;","lastModifiedDate":"2022-03-10"},{"lineNumber":20,"author":{"gitId":"yuqitanyq"},"content":"import seedu.address.logic.parser.ArgumentTokenizer;","lastModifiedDate":"2022-03-10"},{"lineNumber":21,"author":{"gitId":"yuqitanyq"},"content":"import seedu.address.logic.parser.Parser;","lastModifiedDate":"2022-03-10"},{"lineNumber":22,"author":{"gitId":"yuqitanyq"},"content":"import seedu.address.logic.parser.ParserUtil;","lastModifiedDate":"2022-03-10"},{"lineNumber":23,"author":{"gitId":"yuqitanyq"},"content":"import seedu.address.logic.parser.exceptions.ParseException;","lastModifiedDate":"2022-03-10"},{"lineNumber":24,"author":{"gitId":"yuqitanyq"},"content":"import seedu.address.model.book.Author;","lastModifiedDate":"2022-03-10"},{"lineNumber":25,"author":{"gitId":"yuqitanyq"},"content":"import seedu.address.model.tag.Tag;","lastModifiedDate":"2022-03-10"},{"lineNumber":26,"author":{"gitId":"yuqitanyq"},"content":"","lastModifiedDate":"2022-03-10"},{"lineNumber":27,"author":{"gitId":"yuqitanyq"},"content":"/**","lastModifiedDate":"2022-03-10"},{"lineNumber":28,"author":{"gitId":"yuqitanyq"},"content":" * Parses input arguments and create a new EditBookCommand object","lastModifiedDate":"2022-03-10"},{"lineNumber":29,"author":{"gitId":"yuqitanyq"},"content":" */","lastModifiedDate":"2022-03-10"},{"lineNumber":30,"author":{"gitId":"yuqitanyq"},"content":"public class EditBookCommandParser implements Parser\u003cEditBookCommand\u003e {","lastModifiedDate":"2022-03-10"},{"lineNumber":31,"author":{"gitId":"yuqitanyq"},"content":"","lastModifiedDate":"2022-03-10"},{"lineNumber":32,"author":{"gitId":"yuqitanyq"},"content":"    /**","lastModifiedDate":"2022-03-10"},{"lineNumber":33,"author":{"gitId":"yuqitanyq"},"content":"     * Parses the given {@code String} of arguments in the context of the EditBookCommand","lastModifiedDate":"2022-03-10"},{"lineNumber":34,"author":{"gitId":"yuqitanyq"},"content":"     * and returns an EditBookCommand object for execution.","lastModifiedDate":"2022-03-10"},{"lineNumber":35,"author":{"gitId":"yuqitanyq"},"content":"     * @throws ParseException if the user input does not conform the expected format","lastModifiedDate":"2022-03-10"},{"lineNumber":36,"author":{"gitId":"yuqitanyq"},"content":"     */","lastModifiedDate":"2022-03-10"},{"lineNumber":37,"author":{"gitId":"yuqitanyq"},"content":"    public EditBookCommand parse(String args) throws ParseException {","lastModifiedDate":"2022-03-10"},{"lineNumber":38,"author":{"gitId":"yuqitanyq"},"content":"        requireNonNull(args);","lastModifiedDate":"2022-03-10"},{"lineNumber":39,"author":{"gitId":"yuqitanyq"},"content":"        ArgumentMultimap argMultimap \u003d","lastModifiedDate":"2022-03-10"},{"lineNumber":40,"author":{"gitId":"yuqitanyq"},"content":"                ArgumentTokenizer.tokenize(args, PREFIX_NAME, PREFIX_ISBN, PREFIX_AUTHOR, PREFIX_TAG);","lastModifiedDate":"2022-03-10"},{"lineNumber":41,"author":{"gitId":"yuqitanyq"},"content":"","lastModifiedDate":"2022-03-10"},{"lineNumber":42,"author":{"gitId":"yuqitanyq"},"content":"        Index index;","lastModifiedDate":"2022-03-10"},{"lineNumber":43,"author":{"gitId":"yuqitanyq"},"content":"","lastModifiedDate":"2022-03-10"},{"lineNumber":44,"author":{"gitId":"yuqitanyq"},"content":"        try {","lastModifiedDate":"2022-03-10"},{"lineNumber":45,"author":{"gitId":"yuqitanyq"},"content":"            index \u003d ParserUtil.parseIndex(argMultimap.getPreamble());","lastModifiedDate":"2022-03-10"},{"lineNumber":46,"author":{"gitId":"yuqitanyq"},"content":"        } catch (ParseException pe) {","lastModifiedDate":"2022-03-10"},{"lineNumber":47,"author":{"gitId":"yuqitanyq"},"content":"            throw new ParseException(String.format(MESSAGE_INVALID_COMMAND_FORMAT, EditBookCommand.MESSAGE_USAGE), pe);","lastModifiedDate":"2022-03-10"},{"lineNumber":48,"author":{"gitId":"yuqitanyq"},"content":"        }","lastModifiedDate":"2022-03-10"},{"lineNumber":49,"author":{"gitId":"yuqitanyq"},"content":"","lastModifiedDate":"2022-03-10"},{"lineNumber":50,"author":{"gitId":"yuqitanyq"},"content":"        EditBookDescriptor editBookDescriptor \u003d new EditBookDescriptor();","lastModifiedDate":"2022-03-10"},{"lineNumber":51,"author":{"gitId":"yuqitanyq"},"content":"        if (argMultimap.getValue(PREFIX_NAME).isPresent()) {","lastModifiedDate":"2022-03-10"},{"lineNumber":52,"author":{"gitId":"yuqitanyq"},"content":"            editBookDescriptor.setBookName(ParserUtil.parseBookName(argMultimap.getValue(PREFIX_NAME).get()));","lastModifiedDate":"2022-03-10"},{"lineNumber":53,"author":{"gitId":"yuqitanyq"},"content":"        }","lastModifiedDate":"2022-03-10"},{"lineNumber":54,"author":{"gitId":"yuqitanyq"},"content":"        if (argMultimap.getValue(PREFIX_ISBN).isPresent()) {","lastModifiedDate":"2022-03-10"},{"lineNumber":55,"author":{"gitId":"yuqitanyq"},"content":"            editBookDescriptor.setIsbn(ParserUtil.parseIsbn(argMultimap.getValue(PREFIX_ISBN).get()));","lastModifiedDate":"2022-03-10"},{"lineNumber":56,"author":{"gitId":"yuqitanyq"},"content":"        }","lastModifiedDate":"2022-03-10"},{"lineNumber":57,"author":{"gitId":"yuqitanyq"},"content":"","lastModifiedDate":"2022-03-10"},{"lineNumber":58,"author":{"gitId":"yuqitanyq"},"content":"        parseAuthorsForEdit(argMultimap.getAllValues(PREFIX_AUTHOR)).ifPresent(editBookDescriptor::setAuthors);","lastModifiedDate":"2022-03-10"},{"lineNumber":59,"author":{"gitId":"yuqitanyq"},"content":"","lastModifiedDate":"2022-03-10"},{"lineNumber":60,"author":{"gitId":"yuqitanyq"},"content":"        parseTagsForEdit(argMultimap.getAllValues(PREFIX_TAG)).ifPresent(editBookDescriptor::setTags);","lastModifiedDate":"2022-03-10"},{"lineNumber":61,"author":{"gitId":"yuqitanyq"},"content":"","lastModifiedDate":"2022-03-10"},{"lineNumber":62,"author":{"gitId":"yuqitanyq"},"content":"        if (!editBookDescriptor.isAnyFieldEdited()) {","lastModifiedDate":"2022-03-10"},{"lineNumber":63,"author":{"gitId":"yuqitanyq"},"content":"            throw new ParseException(EditBookCommand.MESSAGE_NOT_EDITED);","lastModifiedDate":"2022-03-10"},{"lineNumber":64,"author":{"gitId":"yuqitanyq"},"content":"        }","lastModifiedDate":"2022-03-10"},{"lineNumber":65,"author":{"gitId":"yuqitanyq"},"content":"","lastModifiedDate":"2022-03-10"},{"lineNumber":66,"author":{"gitId":"yuqitanyq"},"content":"        return new EditBookCommand(index, editBookDescriptor);","lastModifiedDate":"2022-03-10"},{"lineNumber":67,"author":{"gitId":"yuqitanyq"},"content":"    }","lastModifiedDate":"2022-03-10"},{"lineNumber":68,"author":{"gitId":"yuqitanyq"},"content":"","lastModifiedDate":"2022-03-10"},{"lineNumber":69,"author":{"gitId":"yuqitanyq"},"content":"    /**","lastModifiedDate":"2022-03-10"},{"lineNumber":70,"author":{"gitId":"yuqitanyq"},"content":"     * Parses {@code Collection\u003cString\u003e tags} into a {@code Set\u003cTag\u003e} if {@code tags} is non-empty.","lastModifiedDate":"2022-03-10"},{"lineNumber":71,"author":{"gitId":"yuqitanyq"},"content":"     * If {@code tags} contain only one element which is an empty string, it will be parsed into a","lastModifiedDate":"2022-03-10"},{"lineNumber":72,"author":{"gitId":"yuqitanyq"},"content":"     * {@code Set\u003cTag\u003e} containing zero tags.","lastModifiedDate":"2022-03-10"},{"lineNumber":73,"author":{"gitId":"yuqitanyq"},"content":"     */","lastModifiedDate":"2022-03-10"},{"lineNumber":74,"author":{"gitId":"yuqitanyq"},"content":"    private Optional\u003cSet\u003cTag\u003e\u003e parseTagsForEdit(Collection\u003cString\u003e tags) throws ParseException {","lastModifiedDate":"2022-03-10"},{"lineNumber":75,"author":{"gitId":"yuqitanyq"},"content":"        assert tags !\u003d null;","lastModifiedDate":"2022-03-10"},{"lineNumber":76,"author":{"gitId":"yuqitanyq"},"content":"","lastModifiedDate":"2022-03-10"},{"lineNumber":77,"author":{"gitId":"yuqitanyq"},"content":"        if (tags.isEmpty()) {","lastModifiedDate":"2022-03-10"},{"lineNumber":78,"author":{"gitId":"yuqitanyq"},"content":"            return Optional.empty();","lastModifiedDate":"2022-03-10"},{"lineNumber":79,"author":{"gitId":"yuqitanyq"},"content":"        }","lastModifiedDate":"2022-03-10"},{"lineNumber":80,"author":{"gitId":"yuqitanyq"},"content":"        Collection\u003cString\u003e tagSet \u003d tags.size() \u003d\u003d 1 \u0026\u0026 tags.contains(\"\") ? Collections.emptySet() : tags;","lastModifiedDate":"2022-03-10"},{"lineNumber":81,"author":{"gitId":"yuqitanyq"},"content":"        return Optional.of(ParserUtil.parseTags(tagSet));","lastModifiedDate":"2022-03-10"},{"lineNumber":82,"author":{"gitId":"yuqitanyq"},"content":"    }","lastModifiedDate":"2022-03-10"},{"lineNumber":83,"author":{"gitId":"yuqitanyq"},"content":"","lastModifiedDate":"2022-03-10"},{"lineNumber":84,"author":{"gitId":"yuqitanyq"},"content":"    /**","lastModifiedDate":"2022-03-10"},{"lineNumber":85,"author":{"gitId":"yuqitanyq"},"content":"     * Parses {@code Collection\u003cString\u003e authors} into a {@code Optional\u003cList\u003cAuthor\u003e\u003e} if {@code authors} is non-empty.","lastModifiedDate":"2022-03-10"},{"lineNumber":86,"author":{"gitId":"yuqitanyq"},"content":"     * If {@code authors} contain only one element which is an empty string, it will be parsed into a","lastModifiedDate":"2022-03-10"},{"lineNumber":87,"author":{"gitId":"yuqitanyq"},"content":"     * {@code List\u003cAuthor\u003e} containing zero authors.","lastModifiedDate":"2022-03-10"},{"lineNumber":88,"author":{"gitId":"yuqitanyq"},"content":"     */","lastModifiedDate":"2022-03-10"},{"lineNumber":89,"author":{"gitId":"yuqitanyq"},"content":"    private Optional\u003cList\u003cAuthor\u003e\u003e parseAuthorsForEdit(Collection\u003cString\u003e authors) throws ParseException {","lastModifiedDate":"2022-03-10"},{"lineNumber":90,"author":{"gitId":"yuqitanyq"},"content":"        assert authors !\u003d null;","lastModifiedDate":"2022-03-10"},{"lineNumber":91,"author":{"gitId":"yuqitanyq"},"content":"","lastModifiedDate":"2022-03-10"},{"lineNumber":92,"author":{"gitId":"yuqitanyq"},"content":"        if (authors.isEmpty()) {","lastModifiedDate":"2022-03-10"},{"lineNumber":93,"author":{"gitId":"yuqitanyq"},"content":"            return Optional.empty();","lastModifiedDate":"2022-03-10"},{"lineNumber":94,"author":{"gitId":"yuqitanyq"},"content":"        }","lastModifiedDate":"2022-03-10"},{"lineNumber":95,"author":{"gitId":"yuqitanyq"},"content":"        Collection\u003cString\u003e authorList \u003d authors.size() \u003d\u003d 1 \u0026\u0026 authors.contains(\"\") ? Collections.emptyList() : authors;","lastModifiedDate":"2022-03-10"},{"lineNumber":96,"author":{"gitId":"yuqitanyq"},"content":"        return Optional.of(ParserUtil.parseAuthors(authorList));","lastModifiedDate":"2022-03-10"},{"lineNumber":97,"author":{"gitId":"yuqitanyq"},"content":"    }","lastModifiedDate":"2022-03-10"},{"lineNumber":98,"author":{"gitId":"yuqitanyq"},"content":"}","lastModifiedDate":"2022-03-10"},{"lineNumber":99,"author":{"gitId":"yuqitanyq"},"content":"","lastModifiedDate":"2022-03-10"}],"authorContributionMap":{"yuqitanyq":99}},{"path":"src/main/java/seedu/address/logic/parser/patron/AddPatronCommandParser.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"aditi2313"},"content":"package seedu.address.logic.parser.patron;","lastModifiedDate":"2022-03-11"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-05"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static seedu.address.commons.core.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2017-02-05"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_EMAIL;","lastModifiedDate":"2017-02-05"},{"lineNumber":5,"author":{"gitId":"aditi2313"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_ID;","lastModifiedDate":"2022-03-11"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_NAME;","lastModifiedDate":"2017-06-06"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_PHONE;","lastModifiedDate":"2017-02-05"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_TAG;","lastModifiedDate":"2017-02-05"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-05"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import java.util.Set;","lastModifiedDate":"2017-03-17"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import java.util.stream.Stream;","lastModifiedDate":"2017-03-17"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-05"},{"lineNumber":13,"author":{"gitId":"aditi2313"},"content":"import seedu.address.logic.commands.patron.AddPatronCommand;","lastModifiedDate":"2022-03-11"},{"lineNumber":14,"author":{"gitId":"aditi2313"},"content":"import seedu.address.logic.parser.ArgumentMultimap;","lastModifiedDate":"2022-03-11"},{"lineNumber":15,"author":{"gitId":"aditi2313"},"content":"import seedu.address.logic.parser.ArgumentTokenizer;","lastModifiedDate":"2022-03-11"},{"lineNumber":16,"author":{"gitId":"aditi2313"},"content":"import seedu.address.logic.parser.Parser;","lastModifiedDate":"2022-03-11"},{"lineNumber":17,"author":{"gitId":"aditi2313"},"content":"import seedu.address.logic.parser.ParserUtil;","lastModifiedDate":"2022-03-11"},{"lineNumber":18,"author":{"gitId":"aditi2313"},"content":"import seedu.address.logic.parser.Prefix;","lastModifiedDate":"2022-03-11"},{"lineNumber":19,"author":{"gitId":"-"},"content":"import seedu.address.logic.parser.exceptions.ParseException;","lastModifiedDate":"2017-03-11"},{"lineNumber":20,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Email;","lastModifiedDate":"2017-03-17"},{"lineNumber":21,"author":{"gitId":"aditi2313"},"content":"import seedu.address.model.person.Id;","lastModifiedDate":"2022-03-11"},{"lineNumber":22,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Name;","lastModifiedDate":"2017-03-17"},{"lineNumber":23,"author":{"gitId":"aditi2313"},"content":"import seedu.address.model.person.Patron;","lastModifiedDate":"2022-03-09"},{"lineNumber":24,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Phone;","lastModifiedDate":"2017-03-17"},{"lineNumber":25,"author":{"gitId":"-"},"content":"import seedu.address.model.tag.Tag;","lastModifiedDate":"2017-03-17"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-05"},{"lineNumber":27,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-02-05"},{"lineNumber":28,"author":{"gitId":"aditi2313"},"content":" * Parses input arguments and creates a new AddPatronCommand object","lastModifiedDate":"2022-03-11"},{"lineNumber":29,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-02-05"},{"lineNumber":30,"author":{"gitId":"aditi2313"},"content":"public class AddPatronCommandParser implements Parser\u003cAddPatronCommand\u003e {","lastModifiedDate":"2022-03-11"},{"lineNumber":31,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-05"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-02-05"},{"lineNumber":33,"author":{"gitId":"-"},"content":"     * Parses the given {@code String} of arguments in the context of the AddCommand","lastModifiedDate":"2017-02-05"},{"lineNumber":34,"author":{"gitId":"-"},"content":"     * and returns an AddCommand object for execution.","lastModifiedDate":"2017-02-05"},{"lineNumber":35,"author":{"gitId":"-"},"content":"     * @throws ParseException if the user input does not conform the expected format","lastModifiedDate":"2017-03-11"},{"lineNumber":36,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-02-05"},{"lineNumber":37,"author":{"gitId":"aditi2313"},"content":"    public AddPatronCommand parse(String args) throws ParseException {","lastModifiedDate":"2022-03-11"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        ArgumentMultimap argMultimap \u003d","lastModifiedDate":"2017-03-20"},{"lineNumber":39,"author":{"gitId":"aditi2313"},"content":"                ArgumentTokenizer.tokenize(args, PREFIX_NAME, PREFIX_PHONE, PREFIX_EMAIL, PREFIX_ID, PREFIX_TAG);","lastModifiedDate":"2022-03-09"},{"lineNumber":40,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-17"},{"lineNumber":41,"author":{"gitId":"aditi2313"},"content":"        if (!arePrefixesPresent(argMultimap, PREFIX_NAME, PREFIX_ID, PREFIX_PHONE, PREFIX_EMAIL)","lastModifiedDate":"2022-03-09"},{"lineNumber":42,"author":{"gitId":"-"},"content":"                || !argMultimap.getPreamble().isEmpty()) {","lastModifiedDate":"2017-12-23"},{"lineNumber":43,"author":{"gitId":"aditi2313"},"content":"            throw new ParseException(String.format(MESSAGE_INVALID_COMMAND_FORMAT, AddPatronCommand.MESSAGE_USAGE));","lastModifiedDate":"2022-03-11"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-03-17"},{"lineNumber":45,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-17"},{"lineNumber":46,"author":{"gitId":"-"},"content":"        Name name \u003d ParserUtil.parseName(argMultimap.getValue(PREFIX_NAME).get());","lastModifiedDate":"2018-07-10"},{"lineNumber":47,"author":{"gitId":"-"},"content":"        Phone phone \u003d ParserUtil.parsePhone(argMultimap.getValue(PREFIX_PHONE).get());","lastModifiedDate":"2018-07-10"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        Email email \u003d ParserUtil.parseEmail(argMultimap.getValue(PREFIX_EMAIL).get());","lastModifiedDate":"2018-07-10"},{"lineNumber":49,"author":{"gitId":"aditi2313"},"content":"        Id id \u003d ParserUtil.parseId(argMultimap.getValue(PREFIX_ID).get());","lastModifiedDate":"2022-03-09"},{"lineNumber":50,"author":{"gitId":"-"},"content":"        Set\u003cTag\u003e tagList \u003d ParserUtil.parseTags(argMultimap.getAllValues(PREFIX_TAG));","lastModifiedDate":"2017-03-17"},{"lineNumber":51,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-17"},{"lineNumber":52,"author":{"gitId":"aditi2313"},"content":"        Patron person \u003d new Patron(name, phone, email, id, tagList);","lastModifiedDate":"2022-03-09"},{"lineNumber":53,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-17"},{"lineNumber":54,"author":{"gitId":"aditi2313"},"content":"        return new AddPatronCommand(person);","lastModifiedDate":"2022-03-11"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-02-05"},{"lineNumber":56,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-05"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-03-17"},{"lineNumber":58,"author":{"gitId":"-"},"content":"     * Returns true if none of the prefixes contains empty {@code Optional} values in the given","lastModifiedDate":"2017-03-17"},{"lineNumber":59,"author":{"gitId":"-"},"content":"     * {@code ArgumentMultimap}.","lastModifiedDate":"2017-03-17"},{"lineNumber":60,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-03-17"},{"lineNumber":61,"author":{"gitId":"-"},"content":"    private static boolean arePrefixesPresent(ArgumentMultimap argumentMultimap, Prefix... prefixes) {","lastModifiedDate":"2017-03-17"},{"lineNumber":62,"author":{"gitId":"-"},"content":"        return Stream.of(prefixes).allMatch(prefix -\u003e argumentMultimap.getValue(prefix).isPresent());","lastModifiedDate":"2017-03-17"},{"lineNumber":63,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-03-17"},{"lineNumber":64,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-17"},{"lineNumber":65,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-02-05"}],"authorContributionMap":{"aditi2313":19,"-":46}},{"path":"src/main/java/seedu/address/logic/parser/patron/DeletePatronCommandParser.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"aditi2313"},"content":"package seedu.address.logic.parser.patron;","lastModifiedDate":"2022-03-11"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static seedu.address.commons.core.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2017-01-26"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.index.Index;","lastModifiedDate":"2017-05-25"},{"lineNumber":6,"author":{"gitId":"aditi2313"},"content":"import seedu.address.logic.commands.patron.DeletePatronCommand;","lastModifiedDate":"2022-03-11"},{"lineNumber":7,"author":{"gitId":"aditi2313"},"content":"import seedu.address.logic.parser.Parser;","lastModifiedDate":"2022-03-11"},{"lineNumber":8,"author":{"gitId":"aditi2313"},"content":"import seedu.address.logic.parser.ParserUtil;","lastModifiedDate":"2022-03-11"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import seedu.address.logic.parser.exceptions.ParseException;","lastModifiedDate":"2017-03-11"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":11,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-01-26"},{"lineNumber":12,"author":{"gitId":"aditi2313"},"content":" * Parses input arguments and creates a new DeletePatronCommand object","lastModifiedDate":"2022-03-11"},{"lineNumber":13,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-01-26"},{"lineNumber":14,"author":{"gitId":"aditi2313"},"content":"public class DeletePatronCommandParser implements Parser\u003cDeletePatronCommand\u003e {","lastModifiedDate":"2022-03-11"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-01-26"},{"lineNumber":17,"author":{"gitId":"-"},"content":"     * Parses the given {@code String} of arguments in the context of the DeleteCommand","lastModifiedDate":"2017-01-26"},{"lineNumber":18,"author":{"gitId":"-"},"content":"     * and returns a DeleteCommand object for execution.","lastModifiedDate":"2019-05-11"},{"lineNumber":19,"author":{"gitId":"-"},"content":"     * @throws ParseException if the user input does not conform the expected format","lastModifiedDate":"2017-03-11"},{"lineNumber":20,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-01-26"},{"lineNumber":21,"author":{"gitId":"aditi2313"},"content":"    public DeletePatronCommand parse(String args) throws ParseException {","lastModifiedDate":"2022-03-11"},{"lineNumber":22,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2017-05-15"},{"lineNumber":23,"author":{"gitId":"-"},"content":"            Index index \u003d ParserUtil.parseIndex(args);","lastModifiedDate":"2017-05-25"},{"lineNumber":24,"author":{"gitId":"aditi2313"},"content":"            return new DeletePatronCommand(index);","lastModifiedDate":"2022-03-11"},{"lineNumber":25,"author":{"gitId":"-"},"content":"        } catch (ParseException pe) {","lastModifiedDate":"2018-07-10"},{"lineNumber":26,"author":{"gitId":"-"},"content":"            throw new ParseException(","lastModifiedDate":"2017-03-11"},{"lineNumber":27,"author":{"gitId":"aditi2313"},"content":"                    String.format(MESSAGE_INVALID_COMMAND_FORMAT, DeletePatronCommand.MESSAGE_USAGE), pe);","lastModifiedDate":"2022-03-11"},{"lineNumber":28,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-01-26"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-01-26"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":31,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-01-26"}],"authorContributionMap":{"aditi2313":9,"-":22}},{"path":"src/main/java/seedu/address/logic/parser/patron/EditPatronCommandParser.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"aditi2313"},"content":"package seedu.address.logic.parser.patron;","lastModifiedDate":"2022-03-11"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2017-05-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static seedu.address.commons.core.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2017-01-26"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_EMAIL;","lastModifiedDate":"2017-01-26"},{"lineNumber":6,"author":{"gitId":"aditi2313"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_ID;","lastModifiedDate":"2022-03-11"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_NAME;","lastModifiedDate":"2017-06-06"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_PHONE;","lastModifiedDate":"2017-01-26"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_TAG;","lastModifiedDate":"2017-01-26"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import java.util.Collection;","lastModifiedDate":"2017-01-26"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import java.util.Collections;","lastModifiedDate":"2017-01-26"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import java.util.Optional;","lastModifiedDate":"2017-01-26"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import java.util.Set;","lastModifiedDate":"2017-03-07"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":16,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.index.Index;","lastModifiedDate":"2017-05-25"},{"lineNumber":17,"author":{"gitId":"aditi2313"},"content":"import seedu.address.logic.commands.patron.EditPatronCommand;","lastModifiedDate":"2022-03-11"},{"lineNumber":18,"author":{"gitId":"aditi2313"},"content":"import seedu.address.logic.commands.patron.EditPatronCommand.EditPersonDescriptor;","lastModifiedDate":"2022-03-11"},{"lineNumber":19,"author":{"gitId":"aditi2313"},"content":"import seedu.address.logic.parser.ArgumentMultimap;","lastModifiedDate":"2022-03-11"},{"lineNumber":20,"author":{"gitId":"aditi2313"},"content":"import seedu.address.logic.parser.ArgumentTokenizer;","lastModifiedDate":"2022-03-11"},{"lineNumber":21,"author":{"gitId":"aditi2313"},"content":"import seedu.address.logic.parser.Parser;","lastModifiedDate":"2022-03-11"},{"lineNumber":22,"author":{"gitId":"aditi2313"},"content":"import seedu.address.logic.parser.ParserUtil;","lastModifiedDate":"2022-03-11"},{"lineNumber":23,"author":{"gitId":"-"},"content":"import seedu.address.logic.parser.exceptions.ParseException;","lastModifiedDate":"2017-03-11"},{"lineNumber":24,"author":{"gitId":"-"},"content":"import seedu.address.model.tag.Tag;","lastModifiedDate":"2017-03-07"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":26,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-01-26"},{"lineNumber":27,"author":{"gitId":"aditi2313"},"content":" * Parses input arguments and creates a new EditPatronCommand object","lastModifiedDate":"2022-03-11"},{"lineNumber":28,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-01-26"},{"lineNumber":29,"author":{"gitId":"aditi2313"},"content":"public class EditPatronCommandParser implements Parser\u003cEditPatronCommand\u003e {","lastModifiedDate":"2022-03-11"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-01-26"},{"lineNumber":32,"author":{"gitId":"-"},"content":"     * Parses the given {@code String} of arguments in the context of the EditCommand","lastModifiedDate":"2017-01-26"},{"lineNumber":33,"author":{"gitId":"-"},"content":"     * and returns an EditCommand object for execution.","lastModifiedDate":"2017-01-26"},{"lineNumber":34,"author":{"gitId":"-"},"content":"     * @throws ParseException if the user input does not conform the expected format","lastModifiedDate":"2017-03-11"},{"lineNumber":35,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-01-26"},{"lineNumber":36,"author":{"gitId":"aditi2313"},"content":"    public EditPatronCommand parse(String args) throws ParseException {","lastModifiedDate":"2022-03-11"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        requireNonNull(args);","lastModifiedDate":"2017-05-15"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        ArgumentMultimap argMultimap \u003d","lastModifiedDate":"2017-03-20"},{"lineNumber":39,"author":{"gitId":"aditi2313"},"content":"                ArgumentTokenizer.tokenize(args, PREFIX_NAME, PREFIX_PHONE, PREFIX_EMAIL, PREFIX_ID, PREFIX_TAG);","lastModifiedDate":"2022-03-09"},{"lineNumber":40,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-15"},{"lineNumber":41,"author":{"gitId":"-"},"content":"        Index index;","lastModifiedDate":"2017-05-25"},{"lineNumber":42,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-15"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2017-05-15"},{"lineNumber":44,"author":{"gitId":"-"},"content":"            index \u003d ParserUtil.parseIndex(argMultimap.getPreamble());","lastModifiedDate":"2017-06-06"},{"lineNumber":45,"author":{"gitId":"-"},"content":"        } catch (ParseException pe) {","lastModifiedDate":"2018-07-10"},{"lineNumber":46,"author":{"gitId":"aditi2313"},"content":"            throw new ParseException(String.format(MESSAGE_INVALID_COMMAND_FORMAT,","lastModifiedDate":"2022-03-11"},{"lineNumber":47,"author":{"gitId":"aditi2313"},"content":"                    EditPatronCommand.MESSAGE_USAGE), pe);","lastModifiedDate":"2022-03-11"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-01-26"},{"lineNumber":49,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":50,"author":{"gitId":"-"},"content":"        EditPersonDescriptor editPersonDescriptor \u003d new EditPersonDescriptor();","lastModifiedDate":"2017-01-26"},{"lineNumber":51,"author":{"gitId":"-"},"content":"        if (argMultimap.getValue(PREFIX_NAME).isPresent()) {","lastModifiedDate":"2018-07-10"},{"lineNumber":52,"author":{"gitId":"-"},"content":"            editPersonDescriptor.setName(ParserUtil.parseName(argMultimap.getValue(PREFIX_NAME).get()));","lastModifiedDate":"2018-07-10"},{"lineNumber":53,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-07-10"},{"lineNumber":54,"author":{"gitId":"-"},"content":"        if (argMultimap.getValue(PREFIX_PHONE).isPresent()) {","lastModifiedDate":"2018-07-10"},{"lineNumber":55,"author":{"gitId":"-"},"content":"            editPersonDescriptor.setPhone(ParserUtil.parsePhone(argMultimap.getValue(PREFIX_PHONE).get()));","lastModifiedDate":"2018-07-10"},{"lineNumber":56,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-07-10"},{"lineNumber":57,"author":{"gitId":"-"},"content":"        if (argMultimap.getValue(PREFIX_EMAIL).isPresent()) {","lastModifiedDate":"2018-07-10"},{"lineNumber":58,"author":{"gitId":"-"},"content":"            editPersonDescriptor.setEmail(ParserUtil.parseEmail(argMultimap.getValue(PREFIX_EMAIL).get()));","lastModifiedDate":"2018-07-10"},{"lineNumber":59,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-07-10"},{"lineNumber":60,"author":{"gitId":"aditi2313"},"content":"        if (argMultimap.getValue(PREFIX_ID).isPresent()) {","lastModifiedDate":"2022-03-09"},{"lineNumber":61,"author":{"gitId":"aditi2313"},"content":"            editPersonDescriptor.setId(ParserUtil.parseId(argMultimap.getValue(PREFIX_ID).get()));","lastModifiedDate":"2022-03-09"},{"lineNumber":62,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-07-10"},{"lineNumber":63,"author":{"gitId":"-"},"content":"        parseTagsForEdit(argMultimap.getAllValues(PREFIX_TAG)).ifPresent(editPersonDescriptor::setTags);","lastModifiedDate":"2017-06-21"},{"lineNumber":64,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":65,"author":{"gitId":"-"},"content":"        if (!editPersonDescriptor.isAnyFieldEdited()) {","lastModifiedDate":"2017-01-26"},{"lineNumber":66,"author":{"gitId":"aditi2313"},"content":"            throw new ParseException(EditPatronCommand.MESSAGE_NOT_EDITED);","lastModifiedDate":"2022-03-11"},{"lineNumber":67,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-01-26"},{"lineNumber":68,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":69,"author":{"gitId":"aditi2313"},"content":"        return new EditPatronCommand(index, editPersonDescriptor);","lastModifiedDate":"2022-03-11"},{"lineNumber":70,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-01-26"},{"lineNumber":71,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":72,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-01-26"},{"lineNumber":73,"author":{"gitId":"-"},"content":"     * Parses {@code Collection\u003cString\u003e tags} into a {@code Set\u003cTag\u003e} if {@code tags} is non-empty.","lastModifiedDate":"2017-03-07"},{"lineNumber":74,"author":{"gitId":"-"},"content":"     * If {@code tags} contain only one element which is an empty string, it will be parsed into a","lastModifiedDate":"2017-01-26"},{"lineNumber":75,"author":{"gitId":"-"},"content":"     * {@code Set\u003cTag\u003e} containing zero tags.","lastModifiedDate":"2017-03-07"},{"lineNumber":76,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-01-26"},{"lineNumber":77,"author":{"gitId":"-"},"content":"    private Optional\u003cSet\u003cTag\u003e\u003e parseTagsForEdit(Collection\u003cString\u003e tags) throws ParseException {","lastModifiedDate":"2018-07-10"},{"lineNumber":78,"author":{"gitId":"-"},"content":"        assert tags !\u003d null;","lastModifiedDate":"2017-01-26"},{"lineNumber":79,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":80,"author":{"gitId":"-"},"content":"        if (tags.isEmpty()) {","lastModifiedDate":"2017-01-26"},{"lineNumber":81,"author":{"gitId":"-"},"content":"            return Optional.empty();","lastModifiedDate":"2017-01-26"},{"lineNumber":82,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-01-26"},{"lineNumber":83,"author":{"gitId":"-"},"content":"        Collection\u003cString\u003e tagSet \u003d tags.size() \u003d\u003d 1 \u0026\u0026 tags.contains(\"\") ? Collections.emptySet() : tags;","lastModifiedDate":"2017-01-26"},{"lineNumber":84,"author":{"gitId":"-"},"content":"        return Optional.of(ParserUtil.parseTags(tagSet));","lastModifiedDate":"2017-01-26"},{"lineNumber":85,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-01-26"},{"lineNumber":86,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":87,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-01-26"}],"authorContributionMap":{"aditi2313":18,"-":69}},{"path":"src/main/java/seedu/address/logic/parser/patron/FindPatronCommandParser.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"aditi2313"},"content":"package seedu.address.logic.parser.patron;","lastModifiedDate":"2022-03-11"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static seedu.address.commons.core.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2017-01-26"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.util.Arrays;","lastModifiedDate":"2017-01-26"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":7,"author":{"gitId":"aditi2313"},"content":"import seedu.address.logic.commands.patron.FindPatronCommand;","lastModifiedDate":"2022-03-11"},{"lineNumber":8,"author":{"gitId":"aditi2313"},"content":"import seedu.address.logic.parser.Parser;","lastModifiedDate":"2022-03-11"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import seedu.address.logic.parser.exceptions.ParseException;","lastModifiedDate":"2017-03-11"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import seedu.address.model.person.NameContainsKeywordsPredicate;","lastModifiedDate":"2017-06-12"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":12,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-01-26"},{"lineNumber":13,"author":{"gitId":"aditi2313"},"content":" * Parses input arguments and creates a new FindPatronCommand object","lastModifiedDate":"2022-03-11"},{"lineNumber":14,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-01-26"},{"lineNumber":15,"author":{"gitId":"aditi2313"},"content":"public class FindPatronCommandParser implements Parser\u003cFindPatronCommand\u003e {","lastModifiedDate":"2022-03-11"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-01-26"},{"lineNumber":18,"author":{"gitId":"-"},"content":"     * Parses the given {@code String} of arguments in the context of the FindCommand","lastModifiedDate":"2017-01-26"},{"lineNumber":19,"author":{"gitId":"-"},"content":"     * and returns a FindCommand object for execution.","lastModifiedDate":"2019-05-11"},{"lineNumber":20,"author":{"gitId":"-"},"content":"     * @throws ParseException if the user input does not conform the expected format","lastModifiedDate":"2017-03-11"},{"lineNumber":21,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-01-26"},{"lineNumber":22,"author":{"gitId":"aditi2313"},"content":"    public FindPatronCommand parse(String args) throws ParseException {","lastModifiedDate":"2022-03-11"},{"lineNumber":23,"author":{"gitId":"-"},"content":"        String trimmedArgs \u003d args.trim();","lastModifiedDate":"2017-02-12"},{"lineNumber":24,"author":{"gitId":"-"},"content":"        if (trimmedArgs.isEmpty()) {","lastModifiedDate":"2017-02-12"},{"lineNumber":25,"author":{"gitId":"-"},"content":"            throw new ParseException(","lastModifiedDate":"2017-03-11"},{"lineNumber":26,"author":{"gitId":"aditi2313"},"content":"                    String.format(MESSAGE_INVALID_COMMAND_FORMAT, FindPatronCommand.MESSAGE_USAGE));","lastModifiedDate":"2022-03-11"},{"lineNumber":27,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-01-26"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":29,"author":{"gitId":"-"},"content":"        String[] nameKeywords \u003d trimmedArgs.split(\"\\\\s+\");","lastModifiedDate":"2017-06-12"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":31,"author":{"gitId":"aditi2313"},"content":"        return new FindPatronCommand(new NameContainsKeywordsPredicate(Arrays.asList(nameKeywords)));","lastModifiedDate":"2022-03-11"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-01-26"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":34,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-01-26"}],"authorContributionMap":{"aditi2313":8,"-":26}},{"path":"src/main/java/seedu/address/logic/parser/patron/PatronCommandParser.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"aditi2313"},"content":"package seedu.address.logic.parser.patron;","lastModifiedDate":"2022-03-11"},{"lineNumber":2,"author":{"gitId":"aditi2313"},"content":"","lastModifiedDate":"2022-03-11"},{"lineNumber":3,"author":{"gitId":"aditi2313"},"content":"import static seedu.address.commons.core.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2022-03-11"},{"lineNumber":4,"author":{"gitId":"aditi2313"},"content":"import static seedu.address.commons.core.Messages.MESSAGE_UNKNOWN_COMMAND;","lastModifiedDate":"2022-03-11"},{"lineNumber":5,"author":{"gitId":"aditi2313"},"content":"","lastModifiedDate":"2022-03-11"},{"lineNumber":6,"author":{"gitId":"aditi2313"},"content":"import java.util.regex.Matcher;","lastModifiedDate":"2022-03-11"},{"lineNumber":7,"author":{"gitId":"aditi2313"},"content":"import java.util.regex.Pattern;","lastModifiedDate":"2022-03-11"},{"lineNumber":8,"author":{"gitId":"aditi2313"},"content":"","lastModifiedDate":"2022-03-11"},{"lineNumber":9,"author":{"gitId":"aditi2313"},"content":"import seedu.address.logic.commands.Command;","lastModifiedDate":"2022-03-11"},{"lineNumber":10,"author":{"gitId":"aditi2313"},"content":"import seedu.address.logic.commands.HelpCommand;","lastModifiedDate":"2022-03-11"},{"lineNumber":11,"author":{"gitId":"aditi2313"},"content":"import seedu.address.logic.commands.patron.ListPatronCommand;","lastModifiedDate":"2022-03-11"},{"lineNumber":12,"author":{"gitId":"aditi2313"},"content":"import seedu.address.logic.parser.Parser;","lastModifiedDate":"2022-03-11"},{"lineNumber":13,"author":{"gitId":"aditi2313"},"content":"import seedu.address.logic.parser.exceptions.ParseException;","lastModifiedDate":"2022-03-11"},{"lineNumber":14,"author":{"gitId":"aditi2313"},"content":"","lastModifiedDate":"2022-03-11"},{"lineNumber":15,"author":{"gitId":"aditi2313"},"content":"/**","lastModifiedDate":"2022-03-11"},{"lineNumber":16,"author":{"gitId":"aditi2313"},"content":" * Parses user input that is already processed by AddressBookParser into a Command object","lastModifiedDate":"2022-03-11"},{"lineNumber":17,"author":{"gitId":"aditi2313"},"content":" *","lastModifiedDate":"2022-03-11"},{"lineNumber":18,"author":{"gitId":"aditi2313"},"content":" * @see seedu.address.logic.parser.AddressBookParser","lastModifiedDate":"2022-03-11"},{"lineNumber":19,"author":{"gitId":"aditi2313"},"content":" */","lastModifiedDate":"2022-03-11"},{"lineNumber":20,"author":{"gitId":"aditi2313"},"content":"public class PatronCommandParser implements Parser\u003cCommand\u003e {","lastModifiedDate":"2022-03-11"},{"lineNumber":21,"author":{"gitId":"aditi2313"},"content":"","lastModifiedDate":"2022-03-11"},{"lineNumber":22,"author":{"gitId":"aditi2313"},"content":"    /**","lastModifiedDate":"2022-03-11"},{"lineNumber":23,"author":{"gitId":"aditi2313"},"content":"     * Used for initial separation of command word and args.","lastModifiedDate":"2022-03-11"},{"lineNumber":24,"author":{"gitId":"aditi2313"},"content":"     */","lastModifiedDate":"2022-03-11"},{"lineNumber":25,"author":{"gitId":"aditi2313"},"content":"    private static final Pattern BASIC_COMMAND_FORMAT \u003d Pattern.compile(\"(?\u003ccommandWord\u003e\\\\S+)(?\u003carguments\u003e.*)\");","lastModifiedDate":"2022-03-11"},{"lineNumber":26,"author":{"gitId":"aditi2313"},"content":"","lastModifiedDate":"2022-03-11"},{"lineNumber":27,"author":{"gitId":"aditi2313"},"content":"    /**","lastModifiedDate":"2022-03-11"},{"lineNumber":28,"author":{"gitId":"aditi2313"},"content":"     * Parses user input into command for execution.","lastModifiedDate":"2022-03-11"},{"lineNumber":29,"author":{"gitId":"aditi2313"},"content":"     *","lastModifiedDate":"2022-03-11"},{"lineNumber":30,"author":{"gitId":"aditi2313"},"content":"     * @param userInput user input string that is alaready processed by {@code AddressBookParser}","lastModifiedDate":"2022-03-11"},{"lineNumber":31,"author":{"gitId":"aditi2313"},"content":"     * @return the command based on the user input","lastModifiedDate":"2022-03-11"},{"lineNumber":32,"author":{"gitId":"aditi2313"},"content":"     * @throws ParseException if the user input does not conform the expected format","lastModifiedDate":"2022-03-11"},{"lineNumber":33,"author":{"gitId":"aditi2313"},"content":"     */","lastModifiedDate":"2022-03-11"},{"lineNumber":34,"author":{"gitId":"aditi2313"},"content":"    public Command parse(String userInput) throws ParseException {","lastModifiedDate":"2022-03-11"},{"lineNumber":35,"author":{"gitId":"aditi2313"},"content":"        final Matcher matcher \u003d BASIC_COMMAND_FORMAT.matcher(userInput.trim());","lastModifiedDate":"2022-03-11"},{"lineNumber":36,"author":{"gitId":"aditi2313"},"content":"        if (!matcher.matches()) {","lastModifiedDate":"2022-03-11"},{"lineNumber":37,"author":{"gitId":"aditi2313"},"content":"            throw new ParseException(String.format(MESSAGE_INVALID_COMMAND_FORMAT, HelpCommand.MESSAGE_USAGE));","lastModifiedDate":"2022-03-11"},{"lineNumber":38,"author":{"gitId":"aditi2313"},"content":"        }","lastModifiedDate":"2022-03-11"},{"lineNumber":39,"author":{"gitId":"aditi2313"},"content":"","lastModifiedDate":"2022-03-11"},{"lineNumber":40,"author":{"gitId":"aditi2313"},"content":"        final String commandWord \u003d matcher.group(\"commandWord\");","lastModifiedDate":"2022-03-11"},{"lineNumber":41,"author":{"gitId":"aditi2313"},"content":"        final String arguments \u003d matcher.group(\"arguments\");","lastModifiedDate":"2022-03-11"},{"lineNumber":42,"author":{"gitId":"aditi2313"},"content":"","lastModifiedDate":"2022-03-11"},{"lineNumber":43,"author":{"gitId":"aditi2313"},"content":"        switch (commandWord) {","lastModifiedDate":"2022-03-11"},{"lineNumber":44,"author":{"gitId":"aditi2313"},"content":"","lastModifiedDate":"2022-03-11"},{"lineNumber":45,"author":{"gitId":"aditi2313"},"content":"        case Command.ADD_COMMAND_WORD:","lastModifiedDate":"2022-03-11"},{"lineNumber":46,"author":{"gitId":"aditi2313"},"content":"            return new AddPatronCommandParser().parse(arguments);","lastModifiedDate":"2022-03-11"},{"lineNumber":47,"author":{"gitId":"aditi2313"},"content":"","lastModifiedDate":"2022-03-11"},{"lineNumber":48,"author":{"gitId":"aditi2313"},"content":"        case Command.EDIT_COMMAND_WORD:","lastModifiedDate":"2022-03-11"},{"lineNumber":49,"author":{"gitId":"aditi2313"},"content":"            return new EditPatronCommandParser().parse(arguments);","lastModifiedDate":"2022-03-11"},{"lineNumber":50,"author":{"gitId":"aditi2313"},"content":"","lastModifiedDate":"2022-03-11"},{"lineNumber":51,"author":{"gitId":"aditi2313"},"content":"        case Command.DELETE_COMMAND_WORD:","lastModifiedDate":"2022-03-11"},{"lineNumber":52,"author":{"gitId":"aditi2313"},"content":"            return new DeletePatronCommandParser().parse(arguments);","lastModifiedDate":"2022-03-11"},{"lineNumber":53,"author":{"gitId":"aditi2313"},"content":"","lastModifiedDate":"2022-03-11"},{"lineNumber":54,"author":{"gitId":"aditi2313"},"content":"        case Command.FIND_COMMAND_WORD:","lastModifiedDate":"2022-03-11"},{"lineNumber":55,"author":{"gitId":"aditi2313"},"content":"            return new FindPatronCommandParser().parse(arguments);","lastModifiedDate":"2022-03-11"},{"lineNumber":56,"author":{"gitId":"aditi2313"},"content":"","lastModifiedDate":"2022-03-11"},{"lineNumber":57,"author":{"gitId":"aditi2313"},"content":"        case Command.LIST_COMMAND_WORD:","lastModifiedDate":"2022-03-11"},{"lineNumber":58,"author":{"gitId":"aditi2313"},"content":"            return new ListPatronCommand();","lastModifiedDate":"2022-03-11"},{"lineNumber":59,"author":{"gitId":"aditi2313"},"content":"","lastModifiedDate":"2022-03-11"},{"lineNumber":60,"author":{"gitId":"aditi2313"},"content":"        default:","lastModifiedDate":"2022-03-11"},{"lineNumber":61,"author":{"gitId":"aditi2313"},"content":"            throw new ParseException(MESSAGE_UNKNOWN_COMMAND);","lastModifiedDate":"2022-03-11"},{"lineNumber":62,"author":{"gitId":"aditi2313"},"content":"        }","lastModifiedDate":"2022-03-11"},{"lineNumber":63,"author":{"gitId":"aditi2313"},"content":"    }","lastModifiedDate":"2022-03-11"},{"lineNumber":64,"author":{"gitId":"aditi2313"},"content":"}","lastModifiedDate":"2022-03-11"}],"authorContributionMap":{"aditi2313":64}},{"path":"src/main/java/seedu/address/model/AddressBook.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.model;","lastModifiedDate":"2016-09-21"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2017-05-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.util.List;","lastModifiedDate":"2017-01-19"},{"lineNumber":6,"author":{"gitId":"bingsen0806"},"content":"import java.util.Objects;","lastModifiedDate":"2022-03-10"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2017-01-19"},{"lineNumber":9,"author":{"gitId":"bingsen0806"},"content":"import seedu.address.model.book.Book;","lastModifiedDate":"2022-03-09"},{"lineNumber":10,"author":{"gitId":"bingsen0806"},"content":"import seedu.address.model.book.BookList;","lastModifiedDate":"2022-03-09"},{"lineNumber":11,"author":{"gitId":"aditi2313"},"content":"import seedu.address.model.person.Patron;","lastModifiedDate":"2022-03-11"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import seedu.address.model.person.UniquePersonList;","lastModifiedDate":"2016-08-24"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":14,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-08"},{"lineNumber":15,"author":{"gitId":"-"},"content":" * Wraps all data at the address-book level","lastModifiedDate":"2016-08-08"},{"lineNumber":16,"author":{"gitId":"-"},"content":" * Duplicates are not allowed (by .isSamePerson comparison)","lastModifiedDate":"2018-04-19"},{"lineNumber":17,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-08"},{"lineNumber":18,"author":{"gitId":"-"},"content":"public class AddressBook implements ReadOnlyAddressBook {","lastModifiedDate":"2016-08-08"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    private final UniquePersonList persons;","lastModifiedDate":"2016-08-26"},{"lineNumber":21,"author":{"gitId":"bingsen0806"},"content":"    private final BookList books;","lastModifiedDate":"2022-03-09"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    /*","lastModifiedDate":"2016-10-19"},{"lineNumber":24,"author":{"gitId":"-"},"content":"     * The \u0027unusual\u0027 code block below is a non-static initialization block, sometimes used to avoid duplication","lastModifiedDate":"2019-05-11"},{"lineNumber":25,"author":{"gitId":"-"},"content":"     * between constructors. See https://docs.oracle.com/javase/tutorial/java/javaOO/initial.html","lastModifiedDate":"2016-10-19"},{"lineNumber":26,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2016-10-19"},{"lineNumber":27,"author":{"gitId":"-"},"content":"     * Note that non-static init blocks are not recommended to use. There are other ways to avoid duplication","lastModifiedDate":"2016-10-19"},{"lineNumber":28,"author":{"gitId":"-"},"content":"     *   among constructors.","lastModifiedDate":"2016-10-19"},{"lineNumber":29,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-10-19"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    {","lastModifiedDate":"2016-08-08"},{"lineNumber":31,"author":{"gitId":"-"},"content":"        persons \u003d new UniquePersonList();","lastModifiedDate":"2016-08-26"},{"lineNumber":32,"author":{"gitId":"bingsen0806"},"content":"        books \u003d new BookList();","lastModifiedDate":"2022-03-09"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    public AddressBook() {}","lastModifiedDate":"2016-08-08"},{"lineNumber":36,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-08"},{"lineNumber":38,"author":{"gitId":"-"},"content":"     * Creates an AddressBook using the Persons in the {@code toBeCopied}","lastModifiedDate":"2018-03-29"},{"lineNumber":39,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-08"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    public AddressBook(ReadOnlyAddressBook toBeCopied) {","lastModifiedDate":"2016-08-08"},{"lineNumber":41,"author":{"gitId":"-"},"content":"        this();","lastModifiedDate":"2016-12-24"},{"lineNumber":42,"author":{"gitId":"-"},"content":"        resetData(toBeCopied);","lastModifiedDate":"2016-12-24"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-22"},{"lineNumber":44,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    //// list overwrite operations","lastModifiedDate":"2016-08-08"},{"lineNumber":46,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-08-07"},{"lineNumber":48,"author":{"gitId":"-"},"content":"     * Replaces the contents of the person list with {@code persons}.","lastModifiedDate":"2018-08-07"},{"lineNumber":49,"author":{"gitId":"-"},"content":"     * {@code persons} must not contain duplicate persons.","lastModifiedDate":"2018-08-07"},{"lineNumber":50,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-08-07"},{"lineNumber":51,"author":{"gitId":"aditi2313"},"content":"    public void setPersons(List\u003cPatron\u003e persons) {","lastModifiedDate":"2022-03-09"},{"lineNumber":52,"author":{"gitId":"-"},"content":"        this.persons.setPersons(persons);","lastModifiedDate":"2016-10-19"},{"lineNumber":53,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":54,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":55,"author":{"gitId":"bingsen0806"},"content":"    /**","lastModifiedDate":"2022-03-10"},{"lineNumber":56,"author":{"gitId":"bingsen0806"},"content":"     * Replaces the contents of the book list with {@code books}.","lastModifiedDate":"2022-03-10"},{"lineNumber":57,"author":{"gitId":"bingsen0806"},"content":"     */","lastModifiedDate":"2022-03-10"},{"lineNumber":58,"author":{"gitId":"bingsen0806"},"content":"    public void setBooks(List\u003cBook\u003e books) {","lastModifiedDate":"2022-03-10"},{"lineNumber":59,"author":{"gitId":"bingsen0806"},"content":"        this.books.setBooks(books);","lastModifiedDate":"2022-03-10"},{"lineNumber":60,"author":{"gitId":"bingsen0806"},"content":"    }","lastModifiedDate":"2022-03-10"},{"lineNumber":61,"author":{"gitId":"bingsen0806"},"content":"","lastModifiedDate":"2022-03-10"},{"lineNumber":62,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-08-16"},{"lineNumber":63,"author":{"gitId":"-"},"content":"     * Resets the existing data of this {@code AddressBook} with {@code newData}.","lastModifiedDate":"2017-08-16"},{"lineNumber":64,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-08-16"},{"lineNumber":65,"author":{"gitId":"-"},"content":"    public void resetData(ReadOnlyAddressBook newData) {","lastModifiedDate":"2016-08-08"},{"lineNumber":66,"author":{"gitId":"-"},"content":"        requireNonNull(newData);","lastModifiedDate":"2017-05-15"},{"lineNumber":67,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-12-20"},{"lineNumber":68,"author":{"gitId":"-"},"content":"        setPersons(newData.getPersonList());","lastModifiedDate":"2018-03-29"},{"lineNumber":69,"author":{"gitId":"bingsen0806"},"content":"        setBooks(newData.getBookList());","lastModifiedDate":"2022-03-10"},{"lineNumber":70,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":71,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":72,"author":{"gitId":"-"},"content":"    //// person-level operations","lastModifiedDate":"2016-08-08"},{"lineNumber":73,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":74,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-08-06"},{"lineNumber":75,"author":{"gitId":"-"},"content":"     * Returns true if a person with the same identity as {@code person} exists in the address book.","lastModifiedDate":"2018-08-06"},{"lineNumber":76,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-08-06"},{"lineNumber":77,"author":{"gitId":"aditi2313"},"content":"    public boolean hasPerson(Patron person) {","lastModifiedDate":"2022-03-09"},{"lineNumber":78,"author":{"gitId":"-"},"content":"        requireNonNull(person);","lastModifiedDate":"2018-08-06"},{"lineNumber":79,"author":{"gitId":"-"},"content":"        return persons.contains(person);","lastModifiedDate":"2018-08-06"},{"lineNumber":80,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-06"},{"lineNumber":81,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-06"},{"lineNumber":82,"author":{"gitId":"bingsen0806"},"content":"    /**","lastModifiedDate":"2022-03-10"},{"lineNumber":83,"author":{"gitId":"bingsen0806"},"content":"     * Returns true if a book with the same identity as {@code book} exists in the address book.","lastModifiedDate":"2022-03-10"},{"lineNumber":84,"author":{"gitId":"bingsen0806"},"content":"     */","lastModifiedDate":"2022-03-10"},{"lineNumber":85,"author":{"gitId":"bingsen0806"},"content":"    public boolean hasBook(Book book) {","lastModifiedDate":"2022-03-10"},{"lineNumber":86,"author":{"gitId":"bingsen0806"},"content":"        requireNonNull(book);","lastModifiedDate":"2022-03-10"},{"lineNumber":87,"author":{"gitId":"bingsen0806"},"content":"        return books.contains(book);","lastModifiedDate":"2022-03-10"},{"lineNumber":88,"author":{"gitId":"bingsen0806"},"content":"    }","lastModifiedDate":"2022-03-10"},{"lineNumber":89,"author":{"gitId":"bingsen0806"},"content":"","lastModifiedDate":"2022-03-10"},{"lineNumber":90,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-09-21"},{"lineNumber":91,"author":{"gitId":"-"},"content":"     * Adds a person to the address book.","lastModifiedDate":"2016-09-21"},{"lineNumber":92,"author":{"gitId":"-"},"content":"     * The person must not already exist in the address book.","lastModifiedDate":"2018-08-07"},{"lineNumber":93,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-09-21"},{"lineNumber":94,"author":{"gitId":"aditi2313"},"content":"    public void addPerson(Patron p) {","lastModifiedDate":"2022-03-09"},{"lineNumber":95,"author":{"gitId":"-"},"content":"        persons.add(p);","lastModifiedDate":"2018-03-29"},{"lineNumber":96,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":97,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":98,"author":{"gitId":"bingsen0806"},"content":"    /**","lastModifiedDate":"2022-03-09"},{"lineNumber":99,"author":{"gitId":"bingsen0806"},"content":"     * Adds a book to the address book.","lastModifiedDate":"2022-03-09"},{"lineNumber":100,"author":{"gitId":"bingsen0806"},"content":"     */","lastModifiedDate":"2022-03-09"},{"lineNumber":101,"author":{"gitId":"bingsen0806"},"content":"    public void addBook(Book book) {","lastModifiedDate":"2022-03-09"},{"lineNumber":102,"author":{"gitId":"bingsen0806"},"content":"        books.add(book);","lastModifiedDate":"2022-03-09"},{"lineNumber":103,"author":{"gitId":"bingsen0806"},"content":"    }","lastModifiedDate":"2022-03-09"},{"lineNumber":104,"author":{"gitId":"bingsen0806"},"content":"","lastModifiedDate":"2022-03-09"},{"lineNumber":105,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-12-13"},{"lineNumber":106,"author":{"gitId":"-"},"content":"     * Replaces the given person {@code target} in the list with {@code editedPerson}.","lastModifiedDate":"2018-01-10"},{"lineNumber":107,"author":{"gitId":"-"},"content":"     * {@code target} must exist in the address book.","lastModifiedDate":"2018-08-07"},{"lineNumber":108,"author":{"gitId":"-"},"content":"     * The person identity of {@code editedPerson} must not be the same as another existing person in the address book.","lastModifiedDate":"2018-08-07"},{"lineNumber":109,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-12-13"},{"lineNumber":110,"author":{"gitId":"aditi2313"},"content":"    public void setPerson(Patron target, Patron editedPerson) {","lastModifiedDate":"2022-03-09"},{"lineNumber":111,"author":{"gitId":"-"},"content":"        requireNonNull(editedPerson);","lastModifiedDate":"2018-01-10"},{"lineNumber":112,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-13"},{"lineNumber":113,"author":{"gitId":"-"},"content":"        persons.setPerson(target, editedPerson);","lastModifiedDate":"2018-03-29"},{"lineNumber":114,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-21"},{"lineNumber":115,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":116,"author":{"gitId":"bingsen0806"},"content":"    /**","lastModifiedDate":"2022-03-10"},{"lineNumber":117,"author":{"gitId":"bingsen0806"},"content":"     * Replaces the given book {@code target} in the list with {@code editedBook}.","lastModifiedDate":"2022-03-10"},{"lineNumber":118,"author":{"gitId":"bingsen0806"},"content":"     * {@code target} must exist in the address book.","lastModifiedDate":"2022-03-10"},{"lineNumber":119,"author":{"gitId":"bingsen0806"},"content":"     */","lastModifiedDate":"2022-03-10"},{"lineNumber":120,"author":{"gitId":"bingsen0806"},"content":"    public void setBook(Book target, Book editedBook) {","lastModifiedDate":"2022-03-10"},{"lineNumber":121,"author":{"gitId":"bingsen0806"},"content":"        requireNonNull(editedBook);","lastModifiedDate":"2022-03-10"},{"lineNumber":122,"author":{"gitId":"bingsen0806"},"content":"","lastModifiedDate":"2022-03-10"},{"lineNumber":123,"author":{"gitId":"bingsen0806"},"content":"        books.setBook(target, editedBook);","lastModifiedDate":"2022-03-10"},{"lineNumber":124,"author":{"gitId":"bingsen0806"},"content":"    }","lastModifiedDate":"2022-03-10"},{"lineNumber":125,"author":{"gitId":"bingsen0806"},"content":"","lastModifiedDate":"2022-03-10"},{"lineNumber":126,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-08-16"},{"lineNumber":127,"author":{"gitId":"-"},"content":"     * Removes {@code key} from this {@code AddressBook}.","lastModifiedDate":"2017-08-16"},{"lineNumber":128,"author":{"gitId":"-"},"content":"     * {@code key} must exist in the address book.","lastModifiedDate":"2018-08-07"},{"lineNumber":129,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-08-16"},{"lineNumber":130,"author":{"gitId":"aditi2313"},"content":"    public void removePerson(Patron key) {","lastModifiedDate":"2022-03-09"},{"lineNumber":131,"author":{"gitId":"-"},"content":"        persons.remove(key);","lastModifiedDate":"2018-02-28"},{"lineNumber":132,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":133,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":134,"author":{"gitId":"bingsen0806"},"content":"    /**","lastModifiedDate":"2022-03-10"},{"lineNumber":135,"author":{"gitId":"bingsen0806"},"content":"     * Removes {@code key} from this {@code AddressBook}.","lastModifiedDate":"2022-03-10"},{"lineNumber":136,"author":{"gitId":"bingsen0806"},"content":"     * {@code key} must exist in the address book.","lastModifiedDate":"2022-03-10"},{"lineNumber":137,"author":{"gitId":"bingsen0806"},"content":"     */","lastModifiedDate":"2022-03-10"},{"lineNumber":138,"author":{"gitId":"bingsen0806"},"content":"    public void removeBook(Book key) {","lastModifiedDate":"2022-03-10"},{"lineNumber":139,"author":{"gitId":"bingsen0806"},"content":"        books.remove(key);","lastModifiedDate":"2022-03-10"},{"lineNumber":140,"author":{"gitId":"bingsen0806"},"content":"    }","lastModifiedDate":"2022-03-10"},{"lineNumber":141,"author":{"gitId":"bingsen0806"},"content":"","lastModifiedDate":"2022-03-10"},{"lineNumber":142,"author":{"gitId":"-"},"content":"    //// util methods","lastModifiedDate":"2016-08-08"},{"lineNumber":143,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":144,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-08"},{"lineNumber":145,"author":{"gitId":"-"},"content":"    public String toString() {","lastModifiedDate":"2016-08-08"},{"lineNumber":146,"author":{"gitId":"-"},"content":"        return persons.asUnmodifiableObservableList().size() + \" persons\";","lastModifiedDate":"2018-04-05"},{"lineNumber":147,"author":{"gitId":"-"},"content":"        // TODO: refine later","lastModifiedDate":"2016-08-08"},{"lineNumber":148,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":149,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":150,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-08"},{"lineNumber":151,"author":{"gitId":"aditi2313"},"content":"    public ObservableList\u003cPatron\u003e getPersonList() {","lastModifiedDate":"2022-03-09"},{"lineNumber":152,"author":{"gitId":"-"},"content":"        return persons.asUnmodifiableObservableList();","lastModifiedDate":"2018-04-05"},{"lineNumber":153,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-01"},{"lineNumber":154,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-01"},{"lineNumber":155,"author":{"gitId":"bingsen0806"},"content":"    @Override","lastModifiedDate":"2022-03-10"},{"lineNumber":156,"author":{"gitId":"bingsen0806"},"content":"    public ObservableList\u003cBook\u003e getBookList() {","lastModifiedDate":"2022-03-10"},{"lineNumber":157,"author":{"gitId":"bingsen0806"},"content":"        return books.asUnmodifiableObservableList();","lastModifiedDate":"2022-03-10"},{"lineNumber":158,"author":{"gitId":"bingsen0806"},"content":"    }","lastModifiedDate":"2022-03-10"},{"lineNumber":159,"author":{"gitId":"bingsen0806"},"content":"","lastModifiedDate":"2022-03-10"},{"lineNumber":160,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-21"},{"lineNumber":161,"author":{"gitId":"-"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2016-09-21"},{"lineNumber":162,"author":{"gitId":"-"},"content":"        return other \u003d\u003d this // short circuit if same object","lastModifiedDate":"2016-09-21"},{"lineNumber":163,"author":{"gitId":"-"},"content":"                || (other instanceof AddressBook // instanceof handles nulls","lastModifiedDate":"2016-09-21"},{"lineNumber":164,"author":{"gitId":"bingsen0806"},"content":"                \u0026\u0026 persons.equals(((AddressBook) other).persons)","lastModifiedDate":"2022-03-10"},{"lineNumber":165,"author":{"gitId":"bingsen0806"},"content":"                \u0026\u0026 books.equals(((AddressBook) other).books));","lastModifiedDate":"2022-03-10"},{"lineNumber":166,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-21"},{"lineNumber":167,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":168,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-21"},{"lineNumber":169,"author":{"gitId":"-"},"content":"    public int hashCode() {","lastModifiedDate":"2016-09-21"},{"lineNumber":170,"author":{"gitId":"bingsen0806"},"content":"        return Objects.hash(persons, books);","lastModifiedDate":"2022-03-10"},{"lineNumber":171,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-21"},{"lineNumber":172,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"}],"authorContributionMap":{"-":111,"bingsen0806":54,"aditi2313":7}},{"path":"src/main/java/seedu/address/model/Model.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.model;","lastModifiedDate":"2016-09-25"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-11-27"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import java.util.function.Predicate;","lastModifiedDate":"2017-06-12"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2017-09-01"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.GuiSettings;","lastModifiedDate":"2018-11-27"},{"lineNumber":8,"author":{"gitId":"bingsen0806"},"content":"import seedu.address.model.book.Book;","lastModifiedDate":"2022-03-10"},{"lineNumber":9,"author":{"gitId":"aditi2313"},"content":"import seedu.address.model.person.Patron;","lastModifiedDate":"2022-03-09"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":11,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-09-25"},{"lineNumber":12,"author":{"gitId":"-"},"content":" * The API of the Model component.","lastModifiedDate":"2016-09-25"},{"lineNumber":13,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-09-25"},{"lineNumber":14,"author":{"gitId":"-"},"content":"public interface Model {","lastModifiedDate":"2016-09-25"},{"lineNumber":15,"author":{"gitId":"-"},"content":"    /** {@code Predicate} that always evaluate to true */","lastModifiedDate":"2017-08-05"},{"lineNumber":16,"author":{"gitId":"aditi2313"},"content":"    Predicate\u003cPatron\u003e PREDICATE_SHOW_ALL_PERSONS \u003d unused -\u003e true;","lastModifiedDate":"2022-03-09"},{"lineNumber":17,"author":{"gitId":"bingsen0806"},"content":"    Predicate\u003cBook\u003e PREDICATE_SHOW_ALL_BOOKS \u003d unused -\u003e true;","lastModifiedDate":"2022-03-10"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-08-05"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-11-27"},{"lineNumber":20,"author":{"gitId":"-"},"content":"     * Replaces user prefs data with the data in {@code userPrefs}.","lastModifiedDate":"2018-12-06"},{"lineNumber":21,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-11-27"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    void setUserPrefs(ReadOnlyUserPrefs userPrefs);","lastModifiedDate":"2018-12-06"},{"lineNumber":23,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-11-27"},{"lineNumber":25,"author":{"gitId":"-"},"content":"     * Returns the user prefs.","lastModifiedDate":"2018-11-27"},{"lineNumber":26,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-11-27"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    ReadOnlyUserPrefs getUserPrefs();","lastModifiedDate":"2018-11-27"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-11-27"},{"lineNumber":30,"author":{"gitId":"-"},"content":"     * Returns the user prefs\u0027 GUI settings.","lastModifiedDate":"2018-11-27"},{"lineNumber":31,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-11-27"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    GuiSettings getGuiSettings();","lastModifiedDate":"2018-11-27"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-11-27"},{"lineNumber":35,"author":{"gitId":"-"},"content":"     * Sets the user prefs\u0027 GUI settings.","lastModifiedDate":"2018-11-27"},{"lineNumber":36,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-11-27"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    void setGuiSettings(GuiSettings guiSettings);","lastModifiedDate":"2018-11-27"},{"lineNumber":38,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-11-27"},{"lineNumber":40,"author":{"gitId":"-"},"content":"     * Returns the user prefs\u0027 address book file path.","lastModifiedDate":"2018-11-27"},{"lineNumber":41,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-11-27"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    Path getAddressBookFilePath();","lastModifiedDate":"2018-11-27"},{"lineNumber":43,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-11-27"},{"lineNumber":45,"author":{"gitId":"-"},"content":"     * Sets the user prefs\u0027 address book file path.","lastModifiedDate":"2018-11-27"},{"lineNumber":46,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-11-27"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    void setAddressBookFilePath(Path addressBookFilePath);","lastModifiedDate":"2018-11-27"},{"lineNumber":48,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-11-27"},{"lineNumber":50,"author":{"gitId":"-"},"content":"     * Replaces address book data with the data in {@code addressBook}.","lastModifiedDate":"2018-11-27"},{"lineNumber":51,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-11-27"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    void setAddressBook(ReadOnlyAddressBook addressBook);","lastModifiedDate":"2018-11-27"},{"lineNumber":53,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":54,"author":{"gitId":"-"},"content":"    /** Returns the AddressBook */","lastModifiedDate":"2016-09-25"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    ReadOnlyAddressBook getAddressBook();","lastModifiedDate":"2016-09-25"},{"lineNumber":56,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-08-06"},{"lineNumber":58,"author":{"gitId":"-"},"content":"     * Returns true if a person with the same identity as {@code person} exists in the address book.","lastModifiedDate":"2018-08-06"},{"lineNumber":59,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-08-06"},{"lineNumber":60,"author":{"gitId":"aditi2313"},"content":"    boolean hasPerson(Patron person);","lastModifiedDate":"2022-03-09"},{"lineNumber":61,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-06"},{"lineNumber":62,"author":{"gitId":"bingsen0806"},"content":"    /**","lastModifiedDate":"2022-03-10"},{"lineNumber":63,"author":{"gitId":"bingsen0806"},"content":"     * Returns true if a book with the same identity as {@code book} exists in the address book.","lastModifiedDate":"2022-03-10"},{"lineNumber":64,"author":{"gitId":"bingsen0806"},"content":"     */","lastModifiedDate":"2022-03-10"},{"lineNumber":65,"author":{"gitId":"bingsen0806"},"content":"    boolean hasBook(Book book);","lastModifiedDate":"2022-03-10"},{"lineNumber":66,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-03-10"},{"lineNumber":67,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-08-07"},{"lineNumber":68,"author":{"gitId":"-"},"content":"     * Deletes the given person.","lastModifiedDate":"2018-08-07"},{"lineNumber":69,"author":{"gitId":"-"},"content":"     * The person must exist in the address book.","lastModifiedDate":"2018-08-07"},{"lineNumber":70,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-08-07"},{"lineNumber":71,"author":{"gitId":"aditi2313"},"content":"    void deletePerson(Patron target);","lastModifiedDate":"2022-03-09"},{"lineNumber":72,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":73,"author":{"gitId":"bingsen0806"},"content":"    /**","lastModifiedDate":"2022-03-10"},{"lineNumber":74,"author":{"gitId":"bingsen0806"},"content":"     * Deletes the given book.","lastModifiedDate":"2022-03-10"},{"lineNumber":75,"author":{"gitId":"bingsen0806"},"content":"     * The book must exist in the address book.","lastModifiedDate":"2022-03-10"},{"lineNumber":76,"author":{"gitId":"bingsen0806"},"content":"     */","lastModifiedDate":"2022-03-10"},{"lineNumber":77,"author":{"gitId":"bingsen0806"},"content":"    void deleteBook(Book target);","lastModifiedDate":"2022-03-10"},{"lineNumber":78,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-03-10"},{"lineNumber":79,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-08-07"},{"lineNumber":80,"author":{"gitId":"-"},"content":"     * Adds the given person.","lastModifiedDate":"2018-08-07"},{"lineNumber":81,"author":{"gitId":"-"},"content":"     * {@code person} must not already exist in the address book.","lastModifiedDate":"2018-08-07"},{"lineNumber":82,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-08-07"},{"lineNumber":83,"author":{"gitId":"aditi2313"},"content":"    void addPerson(Patron person);","lastModifiedDate":"2022-03-09"},{"lineNumber":84,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":85,"author":{"gitId":"bingsen0806"},"content":"    /**","lastModifiedDate":"2022-03-10"},{"lineNumber":86,"author":{"gitId":"bingsen0806"},"content":"     * Adds the given book.","lastModifiedDate":"2022-03-10"},{"lineNumber":87,"author":{"gitId":"bingsen0806"},"content":"     */","lastModifiedDate":"2022-03-10"},{"lineNumber":88,"author":{"gitId":"bingsen0806"},"content":"    void addBook(Book book);","lastModifiedDate":"2022-03-10"},{"lineNumber":89,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-03-10"},{"lineNumber":90,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-12-13"},{"lineNumber":91,"author":{"gitId":"-"},"content":"     * Replaces the given person {@code target} with {@code editedPerson}.","lastModifiedDate":"2017-06-07"},{"lineNumber":92,"author":{"gitId":"-"},"content":"     * {@code target} must exist in the address book.","lastModifiedDate":"2018-08-07"},{"lineNumber":93,"author":{"gitId":"-"},"content":"     * The person identity of {@code editedPerson} must not be the same as another existing person in the address book.","lastModifiedDate":"2018-08-07"},{"lineNumber":94,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-12-13"},{"lineNumber":95,"author":{"gitId":"aditi2313"},"content":"    void setPerson(Patron target, Patron editedPerson);","lastModifiedDate":"2022-03-09"},{"lineNumber":96,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-13"},{"lineNumber":97,"author":{"gitId":"bingsen0806"},"content":"    /**","lastModifiedDate":"2022-03-10"},{"lineNumber":98,"author":{"gitId":"bingsen0806"},"content":"     * Replaces the given book {@code target} with {@code editedBook}.","lastModifiedDate":"2022-03-10"},{"lineNumber":99,"author":{"gitId":"bingsen0806"},"content":"     * {@code target} must exist in the address book.","lastModifiedDate":"2022-03-10"},{"lineNumber":100,"author":{"gitId":"bingsen0806"},"content":"     * The book identity of {@code editedBook} must not be the same as another existing book in the address book.","lastModifiedDate":"2022-03-10"},{"lineNumber":101,"author":{"gitId":"bingsen0806"},"content":"     */","lastModifiedDate":"2022-03-10"},{"lineNumber":102,"author":{"gitId":"bingsen0806"},"content":"    void setBook(Book target, Book editedBook);","lastModifiedDate":"2022-03-10"},{"lineNumber":103,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-03-10"},{"lineNumber":104,"author":{"gitId":"-"},"content":"    /** Returns an unmodifiable view of the filtered person list */","lastModifiedDate":"2017-09-01"},{"lineNumber":105,"author":{"gitId":"aditi2313"},"content":"    ObservableList\u003cPatron\u003e getFilteredPersonList();","lastModifiedDate":"2022-03-09"},{"lineNumber":106,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":107,"author":{"gitId":"bingsen0806"},"content":"    /** Returns an unmodifiable view of the filtered book list */","lastModifiedDate":"2022-03-10"},{"lineNumber":108,"author":{"gitId":"bingsen0806"},"content":"    ObservableList\u003cBook\u003e getFilteredBookList();","lastModifiedDate":"2022-03-10"},{"lineNumber":109,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-03-10"},{"lineNumber":110,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-08-05"},{"lineNumber":111,"author":{"gitId":"-"},"content":"     * Updates the filter of the filtered person list to filter by the given {@code predicate}.","lastModifiedDate":"2017-08-05"},{"lineNumber":112,"author":{"gitId":"-"},"content":"     * @throws NullPointerException if {@code predicate} is null.","lastModifiedDate":"2017-08-05"},{"lineNumber":113,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-08-05"},{"lineNumber":114,"author":{"gitId":"aditi2313"},"content":"    void updateFilteredPersonList(Predicate\u003cPatron\u003e predicate);","lastModifiedDate":"2022-03-09"},{"lineNumber":115,"author":{"gitId":"bingsen0806"},"content":"","lastModifiedDate":"2022-03-10"},{"lineNumber":116,"author":{"gitId":"bingsen0806"},"content":"    /**","lastModifiedDate":"2022-03-10"},{"lineNumber":117,"author":{"gitId":"bingsen0806"},"content":"     * Updates the filter of the filtered book list to filter by the given {@code predicate}.","lastModifiedDate":"2022-03-10"},{"lineNumber":118,"author":{"gitId":"bingsen0806"},"content":"     * @throws NullPointerException if {@code predicate} is null.","lastModifiedDate":"2022-03-10"},{"lineNumber":119,"author":{"gitId":"bingsen0806"},"content":"     */","lastModifiedDate":"2022-03-10"},{"lineNumber":120,"author":{"gitId":"bingsen0806"},"content":"    void updateFilteredBookList(Predicate\u003cBook\u003e predicate);","lastModifiedDate":"2022-03-10"},{"lineNumber":121,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-09-25"}],"authorContributionMap":{"-":84,"bingsen0806":29,"aditi2313":8}},{"path":"src/main/java/seedu/address/model/ModelManager.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.model;","lastModifiedDate":"2016-08-08"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2017-08-05"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static seedu.address.commons.util.CollectionUtil.requireAllNonNull;","lastModifiedDate":"2017-05-19"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-15"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-11-27"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import java.util.function.Predicate;","lastModifiedDate":"2017-06-12"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import java.util.logging.Logger;","lastModifiedDate":"2017-01-19"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2017-09-01"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import javafx.collections.transformation.FilteredList;","lastModifiedDate":"2016-08-26"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.GuiSettings;","lastModifiedDate":"2018-11-27"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.LogsCenter;","lastModifiedDate":"2016-09-23"},{"lineNumber":14,"author":{"gitId":"bingsen0806"},"content":"import seedu.address.model.book.Book;","lastModifiedDate":"2022-03-10"},{"lineNumber":15,"author":{"gitId":"aditi2313"},"content":"import seedu.address.model.person.Patron;","lastModifiedDate":"2022-03-09"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":17,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-08"},{"lineNumber":18,"author":{"gitId":"-"},"content":" * Represents the in-memory model of the address book data.","lastModifiedDate":"2016-08-08"},{"lineNumber":19,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-08"},{"lineNumber":20,"author":{"gitId":"-"},"content":"public class ModelManager implements Model {","lastModifiedDate":"2018-12-09"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    private static final Logger logger \u003d LogsCenter.getLogger(ModelManager.class);","lastModifiedDate":"2016-09-23"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    private final AddressBook addressBook;","lastModifiedDate":"2019-01-25"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    private final UserPrefs userPrefs;","lastModifiedDate":"2018-12-06"},{"lineNumber":25,"author":{"gitId":"aditi2313"},"content":"    private final FilteredList\u003cPatron\u003e filteredPersons;","lastModifiedDate":"2022-03-09"},{"lineNumber":26,"author":{"gitId":"bingsen0806"},"content":"    private final FilteredList\u003cBook\u003e filteredBooks;","lastModifiedDate":"2022-03-10"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-08"},{"lineNumber":29,"author":{"gitId":"-"},"content":"     * Initializes a ModelManager with the given addressBook and userPrefs.","lastModifiedDate":"2016-12-24"},{"lineNumber":30,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-08"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    public ModelManager(ReadOnlyAddressBook addressBook, ReadOnlyUserPrefs userPrefs) {","lastModifiedDate":"2018-12-06"},{"lineNumber":32,"author":{"gitId":"-"},"content":"        requireAllNonNull(addressBook, userPrefs);","lastModifiedDate":"2017-05-19"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":34,"author":{"gitId":"-"},"content":"        logger.fine(\"Initializing with address book: \" + addressBook + \" and user prefs \" + userPrefs);","lastModifiedDate":"2016-12-24"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":36,"author":{"gitId":"-"},"content":"        this.addressBook \u003d new AddressBook(addressBook);","lastModifiedDate":"2019-01-25"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        this.userPrefs \u003d new UserPrefs(userPrefs);","lastModifiedDate":"2018-12-06"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        filteredPersons \u003d new FilteredList\u003c\u003e(this.addressBook.getPersonList());","lastModifiedDate":"2019-01-25"},{"lineNumber":39,"author":{"gitId":"bingsen0806"},"content":"        filteredBooks \u003d new FilteredList\u003c\u003e(this.addressBook.getBookList());","lastModifiedDate":"2022-03-10"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    public ModelManager() {","lastModifiedDate":"2016-09-22"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        this(new AddressBook(), new UserPrefs());","lastModifiedDate":"2016-09-25"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":45,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    //\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d UserPrefs \u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d","lastModifiedDate":"2018-11-27"},{"lineNumber":47,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2018-11-27"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    public void setUserPrefs(ReadOnlyUserPrefs userPrefs) {","lastModifiedDate":"2018-12-06"},{"lineNumber":50,"author":{"gitId":"-"},"content":"        requireNonNull(userPrefs);","lastModifiedDate":"2018-11-27"},{"lineNumber":51,"author":{"gitId":"-"},"content":"        this.userPrefs.resetData(userPrefs);","lastModifiedDate":"2018-12-06"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":53,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":54,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2018-11-27"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    public ReadOnlyUserPrefs getUserPrefs() {","lastModifiedDate":"2018-11-27"},{"lineNumber":56,"author":{"gitId":"-"},"content":"        return userPrefs;","lastModifiedDate":"2018-11-27"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":58,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":59,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2018-11-27"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    public GuiSettings getGuiSettings() {","lastModifiedDate":"2018-11-27"},{"lineNumber":61,"author":{"gitId":"-"},"content":"        return userPrefs.getGuiSettings();","lastModifiedDate":"2018-11-27"},{"lineNumber":62,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":63,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":64,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2018-11-27"},{"lineNumber":65,"author":{"gitId":"-"},"content":"    public void setGuiSettings(GuiSettings guiSettings) {","lastModifiedDate":"2018-11-27"},{"lineNumber":66,"author":{"gitId":"-"},"content":"        requireNonNull(guiSettings);","lastModifiedDate":"2018-11-27"},{"lineNumber":67,"author":{"gitId":"-"},"content":"        userPrefs.setGuiSettings(guiSettings);","lastModifiedDate":"2018-11-27"},{"lineNumber":68,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":69,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":70,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2018-11-27"},{"lineNumber":71,"author":{"gitId":"-"},"content":"    public Path getAddressBookFilePath() {","lastModifiedDate":"2018-11-27"},{"lineNumber":72,"author":{"gitId":"-"},"content":"        return userPrefs.getAddressBookFilePath();","lastModifiedDate":"2018-11-27"},{"lineNumber":73,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":74,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":75,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2018-11-27"},{"lineNumber":76,"author":{"gitId":"-"},"content":"    public void setAddressBookFilePath(Path addressBookFilePath) {","lastModifiedDate":"2018-11-27"},{"lineNumber":77,"author":{"gitId":"-"},"content":"        requireNonNull(addressBookFilePath);","lastModifiedDate":"2018-11-27"},{"lineNumber":78,"author":{"gitId":"-"},"content":"        userPrefs.setAddressBookFilePath(addressBookFilePath);","lastModifiedDate":"2018-11-27"},{"lineNumber":79,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":80,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":81,"author":{"gitId":"-"},"content":"    //\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d AddressBook \u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d","lastModifiedDate":"2018-11-27"},{"lineNumber":82,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":83,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-25"},{"lineNumber":84,"author":{"gitId":"-"},"content":"    public void setAddressBook(ReadOnlyAddressBook addressBook) {","lastModifiedDate":"2018-11-27"},{"lineNumber":85,"author":{"gitId":"-"},"content":"        this.addressBook.resetData(addressBook);","lastModifiedDate":"2019-01-25"},{"lineNumber":86,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":87,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":88,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-25"},{"lineNumber":89,"author":{"gitId":"-"},"content":"    public ReadOnlyAddressBook getAddressBook() {","lastModifiedDate":"2016-09-21"},{"lineNumber":90,"author":{"gitId":"-"},"content":"        return addressBook;","lastModifiedDate":"2019-01-25"},{"lineNumber":91,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-21"},{"lineNumber":92,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":93,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2018-08-06"},{"lineNumber":94,"author":{"gitId":"aditi2313"},"content":"    public boolean hasPerson(Patron person) {","lastModifiedDate":"2022-03-09"},{"lineNumber":95,"author":{"gitId":"-"},"content":"        requireNonNull(person);","lastModifiedDate":"2018-08-06"},{"lineNumber":96,"author":{"gitId":"-"},"content":"        return addressBook.hasPerson(person);","lastModifiedDate":"2019-01-25"},{"lineNumber":97,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-06"},{"lineNumber":98,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-06"},{"lineNumber":99,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2022-03-10"},{"lineNumber":100,"author":{"gitId":"bingsen0806"},"content":"    public boolean hasBook(Book book) {","lastModifiedDate":"2022-03-10"},{"lineNumber":101,"author":{"gitId":"bingsen0806"},"content":"        requireNonNull(book);","lastModifiedDate":"2022-03-10"},{"lineNumber":102,"author":{"gitId":"bingsen0806"},"content":"        return addressBook.hasBook(book);","lastModifiedDate":"2022-03-10"},{"lineNumber":103,"author":{"gitId":"bingsen0806"},"content":"    }","lastModifiedDate":"2022-03-10"},{"lineNumber":104,"author":{"gitId":"bingsen0806"},"content":"","lastModifiedDate":"2022-03-10"},{"lineNumber":105,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-25"},{"lineNumber":106,"author":{"gitId":"aditi2313"},"content":"    public void deletePerson(Patron target) {","lastModifiedDate":"2022-03-09"},{"lineNumber":107,"author":{"gitId":"-"},"content":"        addressBook.removePerson(target);","lastModifiedDate":"2019-01-25"},{"lineNumber":108,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":109,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":110,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2022-03-10"},{"lineNumber":111,"author":{"gitId":"bingsen0806"},"content":"    public void deleteBook(Book target) {","lastModifiedDate":"2022-03-10"},{"lineNumber":112,"author":{"gitId":"bingsen0806"},"content":"        addressBook.removeBook(target);","lastModifiedDate":"2022-03-10"},{"lineNumber":113,"author":{"gitId":"bingsen0806"},"content":"    }","lastModifiedDate":"2022-03-10"},{"lineNumber":114,"author":{"gitId":"bingsen0806"},"content":"","lastModifiedDate":"2022-03-10"},{"lineNumber":115,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-25"},{"lineNumber":116,"author":{"gitId":"aditi2313"},"content":"    public void addPerson(Patron person) {","lastModifiedDate":"2022-03-09"},{"lineNumber":117,"author":{"gitId":"-"},"content":"        addressBook.addPerson(person);","lastModifiedDate":"2019-01-25"},{"lineNumber":118,"author":{"gitId":"-"},"content":"        updateFilteredPersonList(PREDICATE_SHOW_ALL_PERSONS);","lastModifiedDate":"2017-08-05"},{"lineNumber":119,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-26"},{"lineNumber":120,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-26"},{"lineNumber":121,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2022-03-10"},{"lineNumber":122,"author":{"gitId":"bingsen0806"},"content":"    public void addBook(Book book) {","lastModifiedDate":"2022-03-10"},{"lineNumber":123,"author":{"gitId":"bingsen0806"},"content":"        addressBook.addBook(book);","lastModifiedDate":"2022-03-10"},{"lineNumber":124,"author":{"gitId":"bingsen0806"},"content":"        updateFilteredBookList(PREDICATE_SHOW_ALL_BOOKS);","lastModifiedDate":"2022-03-10"},{"lineNumber":125,"author":{"gitId":"bingsen0806"},"content":"    }","lastModifiedDate":"2022-03-10"},{"lineNumber":126,"author":{"gitId":"bingsen0806"},"content":"","lastModifiedDate":"2022-03-10"},{"lineNumber":127,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-12-13"},{"lineNumber":128,"author":{"gitId":"aditi2313"},"content":"    public void setPerson(Patron target, Patron editedPerson) {","lastModifiedDate":"2022-03-09"},{"lineNumber":129,"author":{"gitId":"-"},"content":"        requireAllNonNull(target, editedPerson);","lastModifiedDate":"2017-06-07"},{"lineNumber":130,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-13"},{"lineNumber":131,"author":{"gitId":"-"},"content":"        addressBook.setPerson(target, editedPerson);","lastModifiedDate":"2019-01-25"},{"lineNumber":132,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-13"},{"lineNumber":133,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-13"},{"lineNumber":134,"author":{"gitId":"bingsen0806"},"content":"    @Override","lastModifiedDate":"2022-03-10"},{"lineNumber":135,"author":{"gitId":"bingsen0806"},"content":"    public void setBook(Book target, Book editedBook) {","lastModifiedDate":"2022-03-10"},{"lineNumber":136,"author":{"gitId":"bingsen0806"},"content":"        requireAllNonNull(target, editedBook);","lastModifiedDate":"2022-03-10"},{"lineNumber":137,"author":{"gitId":"bingsen0806"},"content":"","lastModifiedDate":"2022-03-10"},{"lineNumber":138,"author":{"gitId":"bingsen0806"},"content":"        addressBook.setBook(target, editedBook);","lastModifiedDate":"2022-03-10"},{"lineNumber":139,"author":{"gitId":"bingsen0806"},"content":"    }","lastModifiedDate":"2022-03-10"},{"lineNumber":140,"author":{"gitId":"bingsen0806"},"content":"","lastModifiedDate":"2022-03-10"},{"lineNumber":141,"author":{"gitId":"-"},"content":"    //\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d Filtered Person List Accessors \u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d","lastModifiedDate":"2016-10-12"},{"lineNumber":142,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":143,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-05-19"},{"lineNumber":144,"author":{"gitId":"-"},"content":"     * Returns an unmodifiable view of the list of {@code Person} backed by the internal list of","lastModifiedDate":"2018-01-10"},{"lineNumber":145,"author":{"gitId":"-"},"content":"     * {@code versionedAddressBook}","lastModifiedDate":"2018-06-11"},{"lineNumber":146,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-05-19"},{"lineNumber":147,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-25"},{"lineNumber":148,"author":{"gitId":"aditi2313"},"content":"    public ObservableList\u003cPatron\u003e getFilteredPersonList() {","lastModifiedDate":"2022-03-09"},{"lineNumber":149,"author":{"gitId":"-"},"content":"        return filteredPersons;","lastModifiedDate":"2018-12-09"},{"lineNumber":150,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-22"},{"lineNumber":151,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":152,"author":{"gitId":"bingsen0806"},"content":"    /**","lastModifiedDate":"2022-03-10"},{"lineNumber":153,"author":{"gitId":"bingsen0806"},"content":"     * Returns an unmodifiable view of the list of {@code Book} backed by the internal list of","lastModifiedDate":"2022-03-10"},{"lineNumber":154,"author":{"gitId":"bingsen0806"},"content":"     * {@code versionedAddressBook}","lastModifiedDate":"2022-03-10"},{"lineNumber":155,"author":{"gitId":"bingsen0806"},"content":"     */","lastModifiedDate":"2022-03-10"},{"lineNumber":156,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2022-03-10"},{"lineNumber":157,"author":{"gitId":"bingsen0806"},"content":"    public ObservableList\u003cBook\u003e getFilteredBookList() {","lastModifiedDate":"2022-03-10"},{"lineNumber":158,"author":{"gitId":"bingsen0806"},"content":"        return filteredBooks;","lastModifiedDate":"2022-03-10"},{"lineNumber":159,"author":{"gitId":"bingsen0806"},"content":"    }","lastModifiedDate":"2022-03-10"},{"lineNumber":160,"author":{"gitId":"bingsen0806"},"content":"","lastModifiedDate":"2022-03-10"},{"lineNumber":161,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-25"},{"lineNumber":162,"author":{"gitId":"aditi2313"},"content":"    public void updateFilteredPersonList(Predicate\u003cPatron\u003e predicate) {","lastModifiedDate":"2022-03-09"},{"lineNumber":163,"author":{"gitId":"-"},"content":"        requireNonNull(predicate);","lastModifiedDate":"2017-08-05"},{"lineNumber":164,"author":{"gitId":"-"},"content":"        filteredPersons.setPredicate(predicate);","lastModifiedDate":"2017-06-12"},{"lineNumber":165,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-22"},{"lineNumber":166,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":167,"author":{"gitId":"bingsen0806"},"content":"    @Override","lastModifiedDate":"2022-03-10"},{"lineNumber":168,"author":{"gitId":"bingsen0806"},"content":"    public void updateFilteredBookList(Predicate\u003cBook\u003e predicate) {","lastModifiedDate":"2022-03-10"},{"lineNumber":169,"author":{"gitId":"bingsen0806"},"content":"        requireNonNull(predicate);","lastModifiedDate":"2022-03-10"},{"lineNumber":170,"author":{"gitId":"bingsen0806"},"content":"        filteredBooks.setPredicate(predicate);","lastModifiedDate":"2022-03-10"},{"lineNumber":171,"author":{"gitId":"bingsen0806"},"content":"    }","lastModifiedDate":"2022-03-10"},{"lineNumber":172,"author":{"gitId":"bingsen0806"},"content":"","lastModifiedDate":"2022-03-10"},{"lineNumber":173,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2017-05-31"},{"lineNumber":174,"author":{"gitId":"-"},"content":"    public boolean equals(Object obj) {","lastModifiedDate":"2017-05-31"},{"lineNumber":175,"author":{"gitId":"-"},"content":"        // short circuit if same object","lastModifiedDate":"2017-05-31"},{"lineNumber":176,"author":{"gitId":"-"},"content":"        if (obj \u003d\u003d this) {","lastModifiedDate":"2017-05-31"},{"lineNumber":177,"author":{"gitId":"-"},"content":"            return true;","lastModifiedDate":"2017-05-31"},{"lineNumber":178,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-31"},{"lineNumber":179,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-31"},{"lineNumber":180,"author":{"gitId":"-"},"content":"        // instanceof handles nulls","lastModifiedDate":"2017-05-31"},{"lineNumber":181,"author":{"gitId":"-"},"content":"        if (!(obj instanceof ModelManager)) {","lastModifiedDate":"2017-05-31"},{"lineNumber":182,"author":{"gitId":"-"},"content":"            return false;","lastModifiedDate":"2017-05-31"},{"lineNumber":183,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-31"},{"lineNumber":184,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-31"},{"lineNumber":185,"author":{"gitId":"-"},"content":"        // state check","lastModifiedDate":"2017-05-31"},{"lineNumber":186,"author":{"gitId":"-"},"content":"        ModelManager other \u003d (ModelManager) obj;","lastModifiedDate":"2017-05-31"},{"lineNumber":187,"author":{"gitId":"-"},"content":"        return addressBook.equals(other.addressBook)","lastModifiedDate":"2019-01-25"},{"lineNumber":188,"author":{"gitId":"-"},"content":"                \u0026\u0026 userPrefs.equals(other.userPrefs)","lastModifiedDate":"2018-11-27"},{"lineNumber":189,"author":{"gitId":"bingsen0806"},"content":"                \u0026\u0026 filteredPersons.equals(other.filteredPersons)","lastModifiedDate":"2022-03-10"},{"lineNumber":190,"author":{"gitId":"bingsen0806"},"content":"                \u0026\u0026 filteredBooks.equals(other.filteredBooks);","lastModifiedDate":"2022-03-10"},{"lineNumber":191,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-31"},{"lineNumber":192,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-31"},{"lineNumber":193,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"}],"authorContributionMap":{"-":145,"bingsen0806":40,"aditi2313":8}},{"path":"src/main/java/seedu/address/model/ReadOnlyAddressBook.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.model;","lastModifiedDate":"2016-09-21"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2017-01-19"},{"lineNumber":4,"author":{"gitId":"bingsen0806"},"content":"import seedu.address.model.book.Book;","lastModifiedDate":"2022-03-10"},{"lineNumber":5,"author":{"gitId":"aditi2313"},"content":"import seedu.address.model.person.Patron;","lastModifiedDate":"2022-03-09"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":7,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-08"},{"lineNumber":8,"author":{"gitId":"-"},"content":" * Unmodifiable view of an address book","lastModifiedDate":"2016-08-08"},{"lineNumber":9,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-08"},{"lineNumber":10,"author":{"gitId":"-"},"content":"public interface ReadOnlyAddressBook {","lastModifiedDate":"2019-01-25"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-08"},{"lineNumber":13,"author":{"gitId":"-"},"content":"     * Returns an unmodifiable view of the persons list.","lastModifiedDate":"2016-12-24"},{"lineNumber":14,"author":{"gitId":"-"},"content":"     * This list will not contain any duplicate persons.","lastModifiedDate":"2016-12-24"},{"lineNumber":15,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-08"},{"lineNumber":16,"author":{"gitId":"aditi2313"},"content":"    ObservableList\u003cPatron\u003e getPersonList();","lastModifiedDate":"2022-03-09"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":18,"author":{"gitId":"bingsen0806"},"content":"    /**","lastModifiedDate":"2022-03-10"},{"lineNumber":19,"author":{"gitId":"bingsen0806"},"content":"     * Returns an unmodifiable view of the books list.","lastModifiedDate":"2022-03-10"},{"lineNumber":20,"author":{"gitId":"bingsen0806"},"content":"     */","lastModifiedDate":"2022-03-10"},{"lineNumber":21,"author":{"gitId":"bingsen0806"},"content":"    ObservableList\u003cBook\u003e getBookList();","lastModifiedDate":"2022-03-10"},{"lineNumber":22,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"}],"authorContributionMap":{"-":15,"bingsen0806":5,"aditi2313":2}},{"path":"src/main/java/seedu/address/model/book/Author.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"bingsen0806"},"content":"package seedu.address.model.book;","lastModifiedDate":"2022-03-09"},{"lineNumber":2,"author":{"gitId":"bingsen0806"},"content":"","lastModifiedDate":"2022-03-09"},{"lineNumber":3,"author":{"gitId":"bingsen0806"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2022-03-09"},{"lineNumber":4,"author":{"gitId":"bingsen0806"},"content":"import static seedu.address.commons.util.AppUtil.checkArgument;","lastModifiedDate":"2022-03-09"},{"lineNumber":5,"author":{"gitId":"bingsen0806"},"content":"","lastModifiedDate":"2022-03-09"},{"lineNumber":6,"author":{"gitId":"bingsen0806"},"content":"/**","lastModifiedDate":"2022-03-09"},{"lineNumber":7,"author":{"gitId":"bingsen0806"},"content":" * Represents a Author in LibTask.","lastModifiedDate":"2022-03-09"},{"lineNumber":8,"author":{"gitId":"bingsen0806"},"content":" * Guarantees: immutable; is valid as declared in {@link #isValidAuthor(String)}","lastModifiedDate":"2022-03-09"},{"lineNumber":9,"author":{"gitId":"bingsen0806"},"content":" */","lastModifiedDate":"2022-03-09"},{"lineNumber":10,"author":{"gitId":"bingsen0806"},"content":"public class Author {","lastModifiedDate":"2022-03-09"},{"lineNumber":11,"author":{"gitId":"bingsen0806"},"content":"","lastModifiedDate":"2022-03-09"},{"lineNumber":12,"author":{"gitId":"bingsen0806"},"content":"    public static final String MESSAGE_CONSTRAINTS \u003d","lastModifiedDate":"2022-03-09"},{"lineNumber":13,"author":{"gitId":"bingsen0806"},"content":"            \"Author names should only contain alphanumeric characters, spaces and dot, \"","lastModifiedDate":"2022-03-09"},{"lineNumber":14,"author":{"gitId":"bingsen0806"},"content":"            + \"and it should not be blank, and it must start with an alphanumeric character.\";","lastModifiedDate":"2022-03-09"},{"lineNumber":15,"author":{"gitId":"bingsen0806"},"content":"","lastModifiedDate":"2022-03-09"},{"lineNumber":16,"author":{"gitId":"bingsen0806"},"content":"    /*","lastModifiedDate":"2022-03-09"},{"lineNumber":17,"author":{"gitId":"bingsen0806"},"content":"     * The first character of the name must not be a whitespace,","lastModifiedDate":"2022-03-09"},{"lineNumber":18,"author":{"gitId":"bingsen0806"},"content":"     * otherwise \" \" (a blank string) becomes a valid input.","lastModifiedDate":"2022-03-09"},{"lineNumber":19,"author":{"gitId":"bingsen0806"},"content":"     * The name should also contain at least one alphanumeric character,","lastModifiedDate":"2022-03-09"},{"lineNumber":20,"author":{"gitId":"bingsen0806"},"content":"     * and contains no non-alphanumeric characters other than the dot character.","lastModifiedDate":"2022-03-09"},{"lineNumber":21,"author":{"gitId":"bingsen0806"},"content":"     */","lastModifiedDate":"2022-03-09"},{"lineNumber":22,"author":{"gitId":"bingsen0806"},"content":"    public static final String VALIDATION_REGEX \u003d \"[\\\\p{Alnum}][\\\\p{Alnum} .]*\";","lastModifiedDate":"2022-03-09"},{"lineNumber":23,"author":{"gitId":"bingsen0806"},"content":"","lastModifiedDate":"2022-03-09"},{"lineNumber":24,"author":{"gitId":"bingsen0806"},"content":"    public final String fullAuthorName;","lastModifiedDate":"2022-03-09"},{"lineNumber":25,"author":{"gitId":"bingsen0806"},"content":"","lastModifiedDate":"2022-03-09"},{"lineNumber":26,"author":{"gitId":"bingsen0806"},"content":"    /**","lastModifiedDate":"2022-03-09"},{"lineNumber":27,"author":{"gitId":"bingsen0806"},"content":"     * Constructs a {@code AuthorName}.","lastModifiedDate":"2022-03-09"},{"lineNumber":28,"author":{"gitId":"bingsen0806"},"content":"     *","lastModifiedDate":"2022-03-09"},{"lineNumber":29,"author":{"gitId":"bingsen0806"},"content":"     * @param name A valid author name.","lastModifiedDate":"2022-03-09"},{"lineNumber":30,"author":{"gitId":"bingsen0806"},"content":"     */","lastModifiedDate":"2022-03-09"},{"lineNumber":31,"author":{"gitId":"bingsen0806"},"content":"    public Author(String name) {","lastModifiedDate":"2022-03-09"},{"lineNumber":32,"author":{"gitId":"bingsen0806"},"content":"        requireNonNull(name);","lastModifiedDate":"2022-03-09"},{"lineNumber":33,"author":{"gitId":"bingsen0806"},"content":"        checkArgument(isValidAuthor(name), MESSAGE_CONSTRAINTS);","lastModifiedDate":"2022-03-09"},{"lineNumber":34,"author":{"gitId":"bingsen0806"},"content":"        fullAuthorName \u003d name;","lastModifiedDate":"2022-03-09"},{"lineNumber":35,"author":{"gitId":"bingsen0806"},"content":"    }","lastModifiedDate":"2022-03-09"},{"lineNumber":36,"author":{"gitId":"bingsen0806"},"content":"","lastModifiedDate":"2022-03-09"},{"lineNumber":37,"author":{"gitId":"bingsen0806"},"content":"    /**","lastModifiedDate":"2022-03-09"},{"lineNumber":38,"author":{"gitId":"bingsen0806"},"content":"     * Returns true if a given string can be converted to a valid author.","lastModifiedDate":"2022-03-09"},{"lineNumber":39,"author":{"gitId":"bingsen0806"},"content":"     */","lastModifiedDate":"2022-03-09"},{"lineNumber":40,"author":{"gitId":"bingsen0806"},"content":"    public static boolean isValidAuthor(String test) {","lastModifiedDate":"2022-03-09"},{"lineNumber":41,"author":{"gitId":"bingsen0806"},"content":"        return test.matches(VALIDATION_REGEX);","lastModifiedDate":"2022-03-09"},{"lineNumber":42,"author":{"gitId":"bingsen0806"},"content":"    }","lastModifiedDate":"2022-03-09"},{"lineNumber":43,"author":{"gitId":"bingsen0806"},"content":"","lastModifiedDate":"2022-03-09"},{"lineNumber":44,"author":{"gitId":"bingsen0806"},"content":"    @Override","lastModifiedDate":"2022-03-09"},{"lineNumber":45,"author":{"gitId":"bingsen0806"},"content":"    public String toString() {","lastModifiedDate":"2022-03-09"},{"lineNumber":46,"author":{"gitId":"bingsen0806"},"content":"        return fullAuthorName;","lastModifiedDate":"2022-03-09"},{"lineNumber":47,"author":{"gitId":"bingsen0806"},"content":"    }","lastModifiedDate":"2022-03-09"},{"lineNumber":48,"author":{"gitId":"bingsen0806"},"content":"","lastModifiedDate":"2022-03-09"},{"lineNumber":49,"author":{"gitId":"bingsen0806"},"content":"    @Override","lastModifiedDate":"2022-03-09"},{"lineNumber":50,"author":{"gitId":"bingsen0806"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2022-03-09"},{"lineNumber":51,"author":{"gitId":"bingsen0806"},"content":"        return other \u003d\u003d this // short circuit if same object","lastModifiedDate":"2022-03-09"},{"lineNumber":52,"author":{"gitId":"bingsen0806"},"content":"            || (other instanceof Author // instanceof handles nulls","lastModifiedDate":"2022-03-09"},{"lineNumber":53,"author":{"gitId":"bingsen0806"},"content":"            \u0026\u0026 fullAuthorName.equals(((Author) other).fullAuthorName)); // state check","lastModifiedDate":"2022-03-09"},{"lineNumber":54,"author":{"gitId":"bingsen0806"},"content":"    }","lastModifiedDate":"2022-03-09"},{"lineNumber":55,"author":{"gitId":"bingsen0806"},"content":"}","lastModifiedDate":"2022-03-09"}],"authorContributionMap":{"bingsen0806":55}},{"path":"src/main/java/seedu/address/model/book/Book.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"bingsen0806"},"content":"package seedu.address.model.book;","lastModifiedDate":"2022-03-09"},{"lineNumber":2,"author":{"gitId":"bingsen0806"},"content":"","lastModifiedDate":"2022-03-09"},{"lineNumber":3,"author":{"gitId":"bingsen0806"},"content":"import static seedu.address.commons.util.CollectionUtil.requireAllNonNull;","lastModifiedDate":"2022-03-09"},{"lineNumber":4,"author":{"gitId":"bingsen0806"},"content":"","lastModifiedDate":"2022-03-09"},{"lineNumber":5,"author":{"gitId":"bingsen0806"},"content":"import java.util.ArrayList;","lastModifiedDate":"2022-03-09"},{"lineNumber":6,"author":{"gitId":"bingsen0806"},"content":"import java.util.Collections;","lastModifiedDate":"2022-03-09"},{"lineNumber":7,"author":{"gitId":"bingsen0806"},"content":"import java.util.HashSet;","lastModifiedDate":"2022-03-09"},{"lineNumber":8,"author":{"gitId":"bingsen0806"},"content":"import java.util.List;","lastModifiedDate":"2022-03-09"},{"lineNumber":9,"author":{"gitId":"bingsen0806"},"content":"import java.util.Objects;","lastModifiedDate":"2022-03-09"},{"lineNumber":10,"author":{"gitId":"bingsen0806"},"content":"import java.util.Set;","lastModifiedDate":"2022-03-09"},{"lineNumber":11,"author":{"gitId":"bingsen0806"},"content":"","lastModifiedDate":"2022-03-09"},{"lineNumber":12,"author":{"gitId":"bingsen0806"},"content":"import seedu.address.model.tag.Tag;","lastModifiedDate":"2022-03-09"},{"lineNumber":13,"author":{"gitId":"bingsen0806"},"content":"","lastModifiedDate":"2022-03-09"},{"lineNumber":14,"author":{"gitId":"bingsen0806"},"content":"/**","lastModifiedDate":"2022-03-09"},{"lineNumber":15,"author":{"gitId":"bingsen0806"},"content":" * Represents a Book in LibTask.","lastModifiedDate":"2022-03-09"},{"lineNumber":16,"author":{"gitId":"bingsen0806"},"content":" * Guarantees: details are present and not null, field values are validated, immutable.","lastModifiedDate":"2022-03-09"},{"lineNumber":17,"author":{"gitId":"bingsen0806"},"content":" */","lastModifiedDate":"2022-03-09"},{"lineNumber":18,"author":{"gitId":"bingsen0806"},"content":"public class Book {","lastModifiedDate":"2022-03-09"},{"lineNumber":19,"author":{"gitId":"bingsen0806"},"content":"","lastModifiedDate":"2022-03-09"},{"lineNumber":20,"author":{"gitId":"bingsen0806"},"content":"    public static final String TIME_ADDED_MESSAGE_CONSTRAINTS \u003d \"Time added should be able to be parsed to long.\\n\";","lastModifiedDate":"2022-03-11"},{"lineNumber":21,"author":{"gitId":"bingsen0806"},"content":"","lastModifiedDate":"2022-03-11"},{"lineNumber":22,"author":{"gitId":"bingsen0806"},"content":"    // Identity fields","lastModifiedDate":"2022-03-09"},{"lineNumber":23,"author":{"gitId":"bingsen0806"},"content":"    private final BookName bookName;","lastModifiedDate":"2022-03-09"},{"lineNumber":24,"author":{"gitId":"bingsen0806"},"content":"    private final Isbn isbn;","lastModifiedDate":"2022-03-09"},{"lineNumber":25,"author":{"gitId":"bingsen0806"},"content":"    private final long timeAdded;","lastModifiedDate":"2022-03-11"},{"lineNumber":26,"author":{"gitId":"bingsen0806"},"content":"","lastModifiedDate":"2022-03-09"},{"lineNumber":27,"author":{"gitId":"bingsen0806"},"content":"    // Data fields","lastModifiedDate":"2022-03-09"},{"lineNumber":28,"author":{"gitId":"bingsen0806"},"content":"    private final List\u003cAuthor\u003e authors \u003d new ArrayList\u003cAuthor\u003e();","lastModifiedDate":"2022-03-09"},{"lineNumber":29,"author":{"gitId":"bingsen0806"},"content":"    private final Set\u003cTag\u003e tags \u003d new HashSet\u003cTag\u003e();","lastModifiedDate":"2022-03-09"},{"lineNumber":30,"author":{"gitId":"bingsen0806"},"content":"","lastModifiedDate":"2022-03-09"},{"lineNumber":31,"author":{"gitId":"bingsen0806"},"content":"    /**","lastModifiedDate":"2022-03-09"},{"lineNumber":32,"author":{"gitId":"bingsen0806"},"content":"     * Every field must be present and not null.","lastModifiedDate":"2022-03-09"},{"lineNumber":33,"author":{"gitId":"bingsen0806"},"content":"     */","lastModifiedDate":"2022-03-09"},{"lineNumber":34,"author":{"gitId":"bingsen0806"},"content":"    public Book(BookName bookName, Isbn isbn, List\u003cAuthor\u003e authors, Set\u003cTag\u003e tags, long timeAdded) {","lastModifiedDate":"2022-03-11"},{"lineNumber":35,"author":{"gitId":"bingsen0806"},"content":"        requireAllNonNull(bookName, isbn, authors, tags);","lastModifiedDate":"2022-03-09"},{"lineNumber":36,"author":{"gitId":"bingsen0806"},"content":"        this.bookName \u003d bookName;","lastModifiedDate":"2022-03-09"},{"lineNumber":37,"author":{"gitId":"bingsen0806"},"content":"        this.isbn \u003d isbn;","lastModifiedDate":"2022-03-09"},{"lineNumber":38,"author":{"gitId":"bingsen0806"},"content":"        this.authors.addAll(authors);","lastModifiedDate":"2022-03-09"},{"lineNumber":39,"author":{"gitId":"bingsen0806"},"content":"        this.tags.addAll(tags);","lastModifiedDate":"2022-03-09"},{"lineNumber":40,"author":{"gitId":"bingsen0806"},"content":"        this.timeAdded \u003d timeAdded;","lastModifiedDate":"2022-03-11"},{"lineNumber":41,"author":{"gitId":"bingsen0806"},"content":"    }","lastModifiedDate":"2022-03-09"},{"lineNumber":42,"author":{"gitId":"bingsen0806"},"content":"","lastModifiedDate":"2022-03-09"},{"lineNumber":43,"author":{"gitId":"bingsen0806"},"content":"    public BookName getBookName() {","lastModifiedDate":"2022-03-09"},{"lineNumber":44,"author":{"gitId":"bingsen0806"},"content":"        return bookName;","lastModifiedDate":"2022-03-09"},{"lineNumber":45,"author":{"gitId":"bingsen0806"},"content":"    }","lastModifiedDate":"2022-03-09"},{"lineNumber":46,"author":{"gitId":"bingsen0806"},"content":"","lastModifiedDate":"2022-03-09"},{"lineNumber":47,"author":{"gitId":"bingsen0806"},"content":"    public Isbn getIsbn() {","lastModifiedDate":"2022-03-09"},{"lineNumber":48,"author":{"gitId":"bingsen0806"},"content":"        return isbn;","lastModifiedDate":"2022-03-09"},{"lineNumber":49,"author":{"gitId":"bingsen0806"},"content":"    }","lastModifiedDate":"2022-03-09"},{"lineNumber":50,"author":{"gitId":"bingsen0806"},"content":"","lastModifiedDate":"2022-03-09"},{"lineNumber":51,"author":{"gitId":"bingsen0806"},"content":"    public long getTimeAdded() {","lastModifiedDate":"2022-03-11"},{"lineNumber":52,"author":{"gitId":"bingsen0806"},"content":"        return timeAdded;","lastModifiedDate":"2022-03-11"},{"lineNumber":53,"author":{"gitId":"bingsen0806"},"content":"    }","lastModifiedDate":"2022-03-11"},{"lineNumber":54,"author":{"gitId":"bingsen0806"},"content":"","lastModifiedDate":"2022-03-11"},{"lineNumber":55,"author":{"gitId":"bingsen0806"},"content":"    public List\u003cAuthor\u003e getAuthors() {","lastModifiedDate":"2022-03-09"},{"lineNumber":56,"author":{"gitId":"bingsen0806"},"content":"        return Collections.unmodifiableList(authors);","lastModifiedDate":"2022-03-09"},{"lineNumber":57,"author":{"gitId":"bingsen0806"},"content":"    }","lastModifiedDate":"2022-03-09"},{"lineNumber":58,"author":{"gitId":"bingsen0806"},"content":"","lastModifiedDate":"2022-03-09"},{"lineNumber":59,"author":{"gitId":"bingsen0806"},"content":"    /**","lastModifiedDate":"2022-03-09"},{"lineNumber":60,"author":{"gitId":"bingsen0806"},"content":"     * Returns an immutable tag set, which throws {@code UnsupportedOperationException}","lastModifiedDate":"2022-03-09"},{"lineNumber":61,"author":{"gitId":"bingsen0806"},"content":"     * if modification is attempted.","lastModifiedDate":"2022-03-09"},{"lineNumber":62,"author":{"gitId":"bingsen0806"},"content":"     */","lastModifiedDate":"2022-03-09"},{"lineNumber":63,"author":{"gitId":"bingsen0806"},"content":"    public Set\u003cTag\u003e getTags() {","lastModifiedDate":"2022-03-09"},{"lineNumber":64,"author":{"gitId":"bingsen0806"},"content":"        return Collections.unmodifiableSet(tags);","lastModifiedDate":"2022-03-09"},{"lineNumber":65,"author":{"gitId":"bingsen0806"},"content":"    }","lastModifiedDate":"2022-03-09"},{"lineNumber":66,"author":{"gitId":"bingsen0806"},"content":"","lastModifiedDate":"2022-03-09"},{"lineNumber":67,"author":{"gitId":"bingsen0806"},"content":"    /**","lastModifiedDate":"2022-03-09"},{"lineNumber":68,"author":{"gitId":"bingsen0806"},"content":"     * Returns true if both books have the same isbn.","lastModifiedDate":"2022-03-09"},{"lineNumber":69,"author":{"gitId":"bingsen0806"},"content":"     * This defines a weaker notion of equality between two books.","lastModifiedDate":"2022-03-09"},{"lineNumber":70,"author":{"gitId":"bingsen0806"},"content":"     */","lastModifiedDate":"2022-03-09"},{"lineNumber":71,"author":{"gitId":"bingsen0806"},"content":"    public boolean isSameBook(Book otherBook) {","lastModifiedDate":"2022-03-09"},{"lineNumber":72,"author":{"gitId":"bingsen0806"},"content":"        if (otherBook \u003d\u003d this) {","lastModifiedDate":"2022-03-09"},{"lineNumber":73,"author":{"gitId":"bingsen0806"},"content":"            return true;","lastModifiedDate":"2022-03-09"},{"lineNumber":74,"author":{"gitId":"bingsen0806"},"content":"        }","lastModifiedDate":"2022-03-09"},{"lineNumber":75,"author":{"gitId":"bingsen0806"},"content":"        return otherBook !\u003d null","lastModifiedDate":"2022-03-09"},{"lineNumber":76,"author":{"gitId":"bingsen0806"},"content":"                \u0026\u0026 otherBook.getIsbn().equals(getIsbn());","lastModifiedDate":"2022-03-09"},{"lineNumber":77,"author":{"gitId":"bingsen0806"},"content":"    }","lastModifiedDate":"2022-03-09"},{"lineNumber":78,"author":{"gitId":"bingsen0806"},"content":"","lastModifiedDate":"2022-03-09"},{"lineNumber":79,"author":{"gitId":"bingsen0806"},"content":"    /**","lastModifiedDate":"2022-03-09"},{"lineNumber":80,"author":{"gitId":"bingsen0806"},"content":"     * Returns true if both books have the same identity and data fields.","lastModifiedDate":"2022-03-09"},{"lineNumber":81,"author":{"gitId":"bingsen0806"},"content":"     * This defines a stronger notion of equality between two books.","lastModifiedDate":"2022-03-09"},{"lineNumber":82,"author":{"gitId":"bingsen0806"},"content":"     */","lastModifiedDate":"2022-03-09"},{"lineNumber":83,"author":{"gitId":"bingsen0806"},"content":"    @Override","lastModifiedDate":"2022-03-09"},{"lineNumber":84,"author":{"gitId":"bingsen0806"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2022-03-09"},{"lineNumber":85,"author":{"gitId":"bingsen0806"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2022-03-09"},{"lineNumber":86,"author":{"gitId":"bingsen0806"},"content":"            return true;","lastModifiedDate":"2022-03-09"},{"lineNumber":87,"author":{"gitId":"bingsen0806"},"content":"        }","lastModifiedDate":"2022-03-09"},{"lineNumber":88,"author":{"gitId":"bingsen0806"},"content":"","lastModifiedDate":"2022-03-09"},{"lineNumber":89,"author":{"gitId":"bingsen0806"},"content":"        if (!(other instanceof Book)) {","lastModifiedDate":"2022-03-09"},{"lineNumber":90,"author":{"gitId":"bingsen0806"},"content":"            return false;","lastModifiedDate":"2022-03-09"},{"lineNumber":91,"author":{"gitId":"bingsen0806"},"content":"        }","lastModifiedDate":"2022-03-09"},{"lineNumber":92,"author":{"gitId":"bingsen0806"},"content":"","lastModifiedDate":"2022-03-09"},{"lineNumber":93,"author":{"gitId":"bingsen0806"},"content":"        Book otherBook \u003d (Book) other;","lastModifiedDate":"2022-03-09"},{"lineNumber":94,"author":{"gitId":"bingsen0806"},"content":"        return otherBook.getBookName().equals(getBookName())","lastModifiedDate":"2022-03-09"},{"lineNumber":95,"author":{"gitId":"bingsen0806"},"content":"                \u0026\u0026 otherBook.getAuthors().equals(getAuthors())","lastModifiedDate":"2022-03-09"},{"lineNumber":96,"author":{"gitId":"bingsen0806"},"content":"                \u0026\u0026 otherBook.getTags().equals(getTags())","lastModifiedDate":"2022-03-09"},{"lineNumber":97,"author":{"gitId":"bingsen0806"},"content":"                \u0026\u0026 otherBook.getIsbn().equals(getIsbn())","lastModifiedDate":"2022-03-11"},{"lineNumber":98,"author":{"gitId":"bingsen0806"},"content":"                \u0026\u0026 otherBook.timeAdded \u003d\u003d timeAdded;","lastModifiedDate":"2022-03-11"},{"lineNumber":99,"author":{"gitId":"bingsen0806"},"content":"    }","lastModifiedDate":"2022-03-09"},{"lineNumber":100,"author":{"gitId":"bingsen0806"},"content":"","lastModifiedDate":"2022-03-09"},{"lineNumber":101,"author":{"gitId":"bingsen0806"},"content":"    @Override","lastModifiedDate":"2022-03-09"},{"lineNumber":102,"author":{"gitId":"bingsen0806"},"content":"    public int hashCode() {","lastModifiedDate":"2022-03-09"},{"lineNumber":103,"author":{"gitId":"bingsen0806"},"content":"        // use this method for custom fields hashing instead of implementing your own","lastModifiedDate":"2022-03-09"},{"lineNumber":104,"author":{"gitId":"bingsen0806"},"content":"        return Objects.hash(bookName, isbn, authors, tags, timeAdded);","lastModifiedDate":"2022-03-11"},{"lineNumber":105,"author":{"gitId":"bingsen0806"},"content":"    }","lastModifiedDate":"2022-03-09"},{"lineNumber":106,"author":{"gitId":"bingsen0806"},"content":"","lastModifiedDate":"2022-03-09"},{"lineNumber":107,"author":{"gitId":"bingsen0806"},"content":"    @Override","lastModifiedDate":"2022-03-09"},{"lineNumber":108,"author":{"gitId":"bingsen0806"},"content":"    public String toString() {","lastModifiedDate":"2022-03-09"},{"lineNumber":109,"author":{"gitId":"bingsen0806"},"content":"        final StringBuilder builder \u003d new StringBuilder();","lastModifiedDate":"2022-03-09"},{"lineNumber":110,"author":{"gitId":"bingsen0806"},"content":"        builder.append(getBookName())","lastModifiedDate":"2022-03-09"},{"lineNumber":111,"author":{"gitId":"bingsen0806"},"content":"                .append(\"; Isbn: \")","lastModifiedDate":"2022-03-09"},{"lineNumber":112,"author":{"gitId":"bingsen0806"},"content":"                .append(getIsbn());","lastModifiedDate":"2022-03-09"},{"lineNumber":113,"author":{"gitId":"bingsen0806"},"content":"","lastModifiedDate":"2022-03-09"},{"lineNumber":114,"author":{"gitId":"bingsen0806"},"content":"        List\u003cAuthor\u003e authors \u003d getAuthors();","lastModifiedDate":"2022-03-09"},{"lineNumber":115,"author":{"gitId":"bingsen0806"},"content":"        if (!authors.isEmpty()) {","lastModifiedDate":"2022-03-09"},{"lineNumber":116,"author":{"gitId":"bingsen0806"},"content":"            builder.append(\"; Authors: \");","lastModifiedDate":"2022-03-09"},{"lineNumber":117,"author":{"gitId":"bingsen0806"},"content":"            authors.forEach(builder::append);","lastModifiedDate":"2022-03-09"},{"lineNumber":118,"author":{"gitId":"bingsen0806"},"content":"        }","lastModifiedDate":"2022-03-09"},{"lineNumber":119,"author":{"gitId":"bingsen0806"},"content":"","lastModifiedDate":"2022-03-09"},{"lineNumber":120,"author":{"gitId":"bingsen0806"},"content":"        Set\u003cTag\u003e tags \u003d getTags();","lastModifiedDate":"2022-03-09"},{"lineNumber":121,"author":{"gitId":"bingsen0806"},"content":"        if (!tags.isEmpty()) {","lastModifiedDate":"2022-03-09"},{"lineNumber":122,"author":{"gitId":"bingsen0806"},"content":"            builder.append(\"; Tags: \");","lastModifiedDate":"2022-03-09"},{"lineNumber":123,"author":{"gitId":"bingsen0806"},"content":"            tags.forEach(builder::append);","lastModifiedDate":"2022-03-09"},{"lineNumber":124,"author":{"gitId":"bingsen0806"},"content":"        }","lastModifiedDate":"2022-03-09"},{"lineNumber":125,"author":{"gitId":"bingsen0806"},"content":"        return builder.toString();","lastModifiedDate":"2022-03-09"},{"lineNumber":126,"author":{"gitId":"bingsen0806"},"content":"    }","lastModifiedDate":"2022-03-09"},{"lineNumber":127,"author":{"gitId":"bingsen0806"},"content":"}","lastModifiedDate":"2022-03-09"}],"authorContributionMap":{"bingsen0806":127}},{"path":"src/main/java/seedu/address/model/book/BookList.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"bingsen0806"},"content":"package seedu.address.model.book;","lastModifiedDate":"2022-03-09"},{"lineNumber":2,"author":{"gitId":"bingsen0806"},"content":"","lastModifiedDate":"2022-03-09"},{"lineNumber":3,"author":{"gitId":"bingsen0806"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2022-03-09"},{"lineNumber":4,"author":{"gitId":"bingsen0806"},"content":"import static seedu.address.commons.util.CollectionUtil.requireAllNonNull;","lastModifiedDate":"2022-03-10"},{"lineNumber":5,"author":{"gitId":"bingsen0806"},"content":"","lastModifiedDate":"2022-03-10"},{"lineNumber":6,"author":{"gitId":"bingsen0806"},"content":"import java.util.Iterator;","lastModifiedDate":"2022-03-10"},{"lineNumber":7,"author":{"gitId":"bingsen0806"},"content":"import java.util.List;","lastModifiedDate":"2022-03-10"},{"lineNumber":8,"author":{"gitId":"bingsen0806"},"content":"","lastModifiedDate":"2022-03-09"},{"lineNumber":9,"author":{"gitId":"bingsen0806"},"content":"import javafx.collections.FXCollections;","lastModifiedDate":"2022-03-09"},{"lineNumber":10,"author":{"gitId":"bingsen0806"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2022-03-09"},{"lineNumber":11,"author":{"gitId":"bingsen0806"},"content":"import seedu.address.model.book.exceptions.BookNotFoundException;","lastModifiedDate":"2022-03-10"},{"lineNumber":12,"author":{"gitId":"bingsen0806"},"content":"","lastModifiedDate":"2022-03-09"},{"lineNumber":13,"author":{"gitId":"bingsen0806"},"content":"/**","lastModifiedDate":"2022-03-10"},{"lineNumber":14,"author":{"gitId":"bingsen0806"},"content":" * A list of persons that does not allow nulls.","lastModifiedDate":"2022-03-10"},{"lineNumber":15,"author":{"gitId":"bingsen0806"},"content":" *","lastModifiedDate":"2022-03-10"},{"lineNumber":16,"author":{"gitId":"bingsen0806"},"content":" * Supports a minimal set of list operations.","lastModifiedDate":"2022-03-10"},{"lineNumber":17,"author":{"gitId":"bingsen0806"},"content":" */","lastModifiedDate":"2022-03-10"},{"lineNumber":18,"author":{"gitId":"bingsen0806"},"content":"public class BookList implements Iterable\u003cBook\u003e {","lastModifiedDate":"2022-03-10"},{"lineNumber":19,"author":{"gitId":"bingsen0806"},"content":"","lastModifiedDate":"2022-03-09"},{"lineNumber":20,"author":{"gitId":"bingsen0806"},"content":"    private final ObservableList\u003cBook\u003e internalList \u003d FXCollections.observableArrayList();","lastModifiedDate":"2022-03-09"},{"lineNumber":21,"author":{"gitId":"bingsen0806"},"content":"    private final ObservableList\u003cBook\u003e internalUnmodifiableList \u003d","lastModifiedDate":"2022-03-09"},{"lineNumber":22,"author":{"gitId":"bingsen0806"},"content":"            FXCollections.unmodifiableObservableList(internalList);","lastModifiedDate":"2022-03-09"},{"lineNumber":23,"author":{"gitId":"bingsen0806"},"content":"","lastModifiedDate":"2022-03-09"},{"lineNumber":24,"author":{"gitId":"bingsen0806"},"content":"    /**","lastModifiedDate":"2022-03-10"},{"lineNumber":25,"author":{"gitId":"bingsen0806"},"content":"     * Returns true if the list contains an equivalent book as the given argument.","lastModifiedDate":"2022-03-10"},{"lineNumber":26,"author":{"gitId":"bingsen0806"},"content":"     * Equivalence is defined based on {@link Book#isSameBook(Book)}","lastModifiedDate":"2022-03-10"},{"lineNumber":27,"author":{"gitId":"bingsen0806"},"content":"     *","lastModifiedDate":"2022-03-10"},{"lineNumber":28,"author":{"gitId":"bingsen0806"},"content":"     * @param toCheck The book to be checked.","lastModifiedDate":"2022-03-10"},{"lineNumber":29,"author":{"gitId":"bingsen0806"},"content":"     */","lastModifiedDate":"2022-03-10"},{"lineNumber":30,"author":{"gitId":"bingsen0806"},"content":"    public boolean contains(Book toCheck) {","lastModifiedDate":"2022-03-10"},{"lineNumber":31,"author":{"gitId":"bingsen0806"},"content":"        requireNonNull(toCheck);","lastModifiedDate":"2022-03-10"},{"lineNumber":32,"author":{"gitId":"bingsen0806"},"content":"        return internalList.stream().anyMatch(toCheck::isSameBook);","lastModifiedDate":"2022-03-10"},{"lineNumber":33,"author":{"gitId":"bingsen0806"},"content":"    }","lastModifiedDate":"2022-03-10"},{"lineNumber":34,"author":{"gitId":"bingsen0806"},"content":"","lastModifiedDate":"2022-03-10"},{"lineNumber":35,"author":{"gitId":"bingsen0806"},"content":"    /**","lastModifiedDate":"2022-03-09"},{"lineNumber":36,"author":{"gitId":"bingsen0806"},"content":"     * Adds a book to the list.","lastModifiedDate":"2022-03-09"},{"lineNumber":37,"author":{"gitId":"bingsen0806"},"content":"     */","lastModifiedDate":"2022-03-09"},{"lineNumber":38,"author":{"gitId":"bingsen0806"},"content":"    public void add(Book book) {","lastModifiedDate":"2022-03-09"},{"lineNumber":39,"author":{"gitId":"bingsen0806"},"content":"        requireNonNull(book);","lastModifiedDate":"2022-03-09"},{"lineNumber":40,"author":{"gitId":"bingsen0806"},"content":"        internalList.add(book);","lastModifiedDate":"2022-03-09"},{"lineNumber":41,"author":{"gitId":"bingsen0806"},"content":"    }","lastModifiedDate":"2022-03-09"},{"lineNumber":42,"author":{"gitId":"bingsen0806"},"content":"","lastModifiedDate":"2022-03-10"},{"lineNumber":43,"author":{"gitId":"bingsen0806"},"content":"    /**","lastModifiedDate":"2022-03-10"},{"lineNumber":44,"author":{"gitId":"bingsen0806"},"content":"     * Replaces the book {@code target} in the list with {@code editedBook}.","lastModifiedDate":"2022-03-10"},{"lineNumber":45,"author":{"gitId":"bingsen0806"},"content":"     * {@code target} must exist in the list.","lastModifiedDate":"2022-03-10"},{"lineNumber":46,"author":{"gitId":"bingsen0806"},"content":"     */","lastModifiedDate":"2022-03-10"},{"lineNumber":47,"author":{"gitId":"bingsen0806"},"content":"    public void setBook(Book target, Book editedBook) {","lastModifiedDate":"2022-03-10"},{"lineNumber":48,"author":{"gitId":"bingsen0806"},"content":"        requireAllNonNull(target, editedBook);","lastModifiedDate":"2022-03-10"},{"lineNumber":49,"author":{"gitId":"bingsen0806"},"content":"","lastModifiedDate":"2022-03-10"},{"lineNumber":50,"author":{"gitId":"bingsen0806"},"content":"        int index \u003d internalList.indexOf(target);","lastModifiedDate":"2022-03-10"},{"lineNumber":51,"author":{"gitId":"bingsen0806"},"content":"        if (index \u003d\u003d -1) {","lastModifiedDate":"2022-03-10"},{"lineNumber":52,"author":{"gitId":"bingsen0806"},"content":"            throw new BookNotFoundException();","lastModifiedDate":"2022-03-10"},{"lineNumber":53,"author":{"gitId":"bingsen0806"},"content":"        }","lastModifiedDate":"2022-03-10"},{"lineNumber":54,"author":{"gitId":"bingsen0806"},"content":"","lastModifiedDate":"2022-03-10"},{"lineNumber":55,"author":{"gitId":"bingsen0806"},"content":"        internalList.set(index, editedBook);","lastModifiedDate":"2022-03-10"},{"lineNumber":56,"author":{"gitId":"bingsen0806"},"content":"    }","lastModifiedDate":"2022-03-10"},{"lineNumber":57,"author":{"gitId":"bingsen0806"},"content":"","lastModifiedDate":"2022-03-10"},{"lineNumber":58,"author":{"gitId":"bingsen0806"},"content":"    /**","lastModifiedDate":"2022-03-10"},{"lineNumber":59,"author":{"gitId":"bingsen0806"},"content":"     * Removes the equivalent book from the list.","lastModifiedDate":"2022-03-10"},{"lineNumber":60,"author":{"gitId":"bingsen0806"},"content":"     * The book must exist in the list.","lastModifiedDate":"2022-03-10"},{"lineNumber":61,"author":{"gitId":"bingsen0806"},"content":"     */","lastModifiedDate":"2022-03-10"},{"lineNumber":62,"author":{"gitId":"bingsen0806"},"content":"    public void remove(Book toRemove) {","lastModifiedDate":"2022-03-10"},{"lineNumber":63,"author":{"gitId":"bingsen0806"},"content":"        requireNonNull(toRemove);","lastModifiedDate":"2022-03-10"},{"lineNumber":64,"author":{"gitId":"bingsen0806"},"content":"        if (!internalList.remove(toRemove)) {","lastModifiedDate":"2022-03-10"},{"lineNumber":65,"author":{"gitId":"bingsen0806"},"content":"            throw new BookNotFoundException();","lastModifiedDate":"2022-03-10"},{"lineNumber":66,"author":{"gitId":"bingsen0806"},"content":"        }","lastModifiedDate":"2022-03-10"},{"lineNumber":67,"author":{"gitId":"bingsen0806"},"content":"    }","lastModifiedDate":"2022-03-10"},{"lineNumber":68,"author":{"gitId":"bingsen0806"},"content":"","lastModifiedDate":"2022-03-10"},{"lineNumber":69,"author":{"gitId":"bingsen0806"},"content":"    public void setBooks(BookList replacement) {","lastModifiedDate":"2022-03-10"},{"lineNumber":70,"author":{"gitId":"bingsen0806"},"content":"        requireNonNull(replacement);","lastModifiedDate":"2022-03-10"},{"lineNumber":71,"author":{"gitId":"bingsen0806"},"content":"        internalList.setAll(replacement.internalList);","lastModifiedDate":"2022-03-10"},{"lineNumber":72,"author":{"gitId":"bingsen0806"},"content":"    }","lastModifiedDate":"2022-03-10"},{"lineNumber":73,"author":{"gitId":"bingsen0806"},"content":"","lastModifiedDate":"2022-03-10"},{"lineNumber":74,"author":{"gitId":"bingsen0806"},"content":"    /**","lastModifiedDate":"2022-03-10"},{"lineNumber":75,"author":{"gitId":"bingsen0806"},"content":"     * Replaces the contents of this list with {@code books}.","lastModifiedDate":"2022-03-10"},{"lineNumber":76,"author":{"gitId":"bingsen0806"},"content":"     * {@code books} must not contain duplicate books.","lastModifiedDate":"2022-03-10"},{"lineNumber":77,"author":{"gitId":"bingsen0806"},"content":"     */","lastModifiedDate":"2022-03-10"},{"lineNumber":78,"author":{"gitId":"bingsen0806"},"content":"    public void setBooks(List\u003cBook\u003e books) {","lastModifiedDate":"2022-03-10"},{"lineNumber":79,"author":{"gitId":"bingsen0806"},"content":"        requireAllNonNull(books);","lastModifiedDate":"2022-03-10"},{"lineNumber":80,"author":{"gitId":"bingsen0806"},"content":"        internalList.setAll(books);","lastModifiedDate":"2022-03-10"},{"lineNumber":81,"author":{"gitId":"bingsen0806"},"content":"    }","lastModifiedDate":"2022-03-10"},{"lineNumber":82,"author":{"gitId":"bingsen0806"},"content":"","lastModifiedDate":"2022-03-10"},{"lineNumber":83,"author":{"gitId":"bingsen0806"},"content":"    /**","lastModifiedDate":"2022-03-10"},{"lineNumber":84,"author":{"gitId":"bingsen0806"},"content":"     * Returns the backing list as an unmodifiable {@code ObservableList}.","lastModifiedDate":"2022-03-10"},{"lineNumber":85,"author":{"gitId":"bingsen0806"},"content":"     */","lastModifiedDate":"2022-03-10"},{"lineNumber":86,"author":{"gitId":"bingsen0806"},"content":"    public ObservableList\u003cBook\u003e asUnmodifiableObservableList() {","lastModifiedDate":"2022-03-10"},{"lineNumber":87,"author":{"gitId":"bingsen0806"},"content":"        return internalUnmodifiableList;","lastModifiedDate":"2022-03-10"},{"lineNumber":88,"author":{"gitId":"bingsen0806"},"content":"    }","lastModifiedDate":"2022-03-10"},{"lineNumber":89,"author":{"gitId":"bingsen0806"},"content":"","lastModifiedDate":"2022-03-10"},{"lineNumber":90,"author":{"gitId":"bingsen0806"},"content":"    @Override","lastModifiedDate":"2022-03-10"},{"lineNumber":91,"author":{"gitId":"bingsen0806"},"content":"    public Iterator\u003cBook\u003e iterator() {","lastModifiedDate":"2022-03-10"},{"lineNumber":92,"author":{"gitId":"bingsen0806"},"content":"        return internalList.iterator();","lastModifiedDate":"2022-03-10"},{"lineNumber":93,"author":{"gitId":"bingsen0806"},"content":"    }","lastModifiedDate":"2022-03-10"},{"lineNumber":94,"author":{"gitId":"bingsen0806"},"content":"","lastModifiedDate":"2022-03-10"},{"lineNumber":95,"author":{"gitId":"bingsen0806"},"content":"    @Override","lastModifiedDate":"2022-03-10"},{"lineNumber":96,"author":{"gitId":"bingsen0806"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2022-03-10"},{"lineNumber":97,"author":{"gitId":"bingsen0806"},"content":"        return other \u003d\u003d this // short circuit if same object","lastModifiedDate":"2022-03-10"},{"lineNumber":98,"author":{"gitId":"bingsen0806"},"content":"                || (other instanceof BookList // instanceof handles nulls","lastModifiedDate":"2022-03-10"},{"lineNumber":99,"author":{"gitId":"bingsen0806"},"content":"                \u0026\u0026 internalList.equals(((BookList) other).internalList));","lastModifiedDate":"2022-03-10"},{"lineNumber":100,"author":{"gitId":"bingsen0806"},"content":"    }","lastModifiedDate":"2022-03-10"},{"lineNumber":101,"author":{"gitId":"bingsen0806"},"content":"","lastModifiedDate":"2022-03-10"},{"lineNumber":102,"author":{"gitId":"bingsen0806"},"content":"    @Override","lastModifiedDate":"2022-03-10"},{"lineNumber":103,"author":{"gitId":"bingsen0806"},"content":"    public int hashCode() {","lastModifiedDate":"2022-03-10"},{"lineNumber":104,"author":{"gitId":"bingsen0806"},"content":"        return internalList.hashCode();","lastModifiedDate":"2022-03-10"},{"lineNumber":105,"author":{"gitId":"bingsen0806"},"content":"    }","lastModifiedDate":"2022-03-10"},{"lineNumber":106,"author":{"gitId":"bingsen0806"},"content":"}","lastModifiedDate":"2022-03-09"}],"authorContributionMap":{"bingsen0806":106}},{"path":"src/main/java/seedu/address/model/book/BookName.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"bingsen0806"},"content":"package seedu.address.model.book;","lastModifiedDate":"2022-03-09"},{"lineNumber":2,"author":{"gitId":"bingsen0806"},"content":"","lastModifiedDate":"2022-03-09"},{"lineNumber":3,"author":{"gitId":"bingsen0806"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2022-03-09"},{"lineNumber":4,"author":{"gitId":"bingsen0806"},"content":"import static seedu.address.commons.util.AppUtil.checkArgument;","lastModifiedDate":"2022-03-09"},{"lineNumber":5,"author":{"gitId":"bingsen0806"},"content":"","lastModifiedDate":"2022-03-09"},{"lineNumber":6,"author":{"gitId":"bingsen0806"},"content":"/**","lastModifiedDate":"2022-03-09"},{"lineNumber":7,"author":{"gitId":"bingsen0806"},"content":" * Represents a Book\u0027s name in LibTask.","lastModifiedDate":"2022-03-09"},{"lineNumber":8,"author":{"gitId":"bingsen0806"},"content":" * Guarantees: immutable; is valid as declared in {@link #isValidBookName(String)}","lastModifiedDate":"2022-03-09"},{"lineNumber":9,"author":{"gitId":"bingsen0806"},"content":" */","lastModifiedDate":"2022-03-09"},{"lineNumber":10,"author":{"gitId":"bingsen0806"},"content":"public class BookName {","lastModifiedDate":"2022-03-09"},{"lineNumber":11,"author":{"gitId":"bingsen0806"},"content":"    public static final String MESSAGE_CONSTRAINTS \u003d","lastModifiedDate":"2022-03-09"},{"lineNumber":12,"author":{"gitId":"bingsen0806"},"content":"            \"Book names should only contain alphanumeric characters and spaces, \"","lastModifiedDate":"2022-03-09"},{"lineNumber":13,"author":{"gitId":"bingsen0806"},"content":"        + \"and it should not be blank, and it must start with an alphanumeric character.\";","lastModifiedDate":"2022-03-09"},{"lineNumber":14,"author":{"gitId":"bingsen0806"},"content":"","lastModifiedDate":"2022-03-09"},{"lineNumber":15,"author":{"gitId":"bingsen0806"},"content":"    /*","lastModifiedDate":"2022-03-09"},{"lineNumber":16,"author":{"gitId":"bingsen0806"},"content":"     * The first character of the name must not be a whitespace,","lastModifiedDate":"2022-03-09"},{"lineNumber":17,"author":{"gitId":"bingsen0806"},"content":"     * otherwise \" \" (a blank string) becomes a valid input.","lastModifiedDate":"2022-03-09"},{"lineNumber":18,"author":{"gitId":"bingsen0806"},"content":"     * The name should also contain at least one alphanumeric character,","lastModifiedDate":"2022-03-09"},{"lineNumber":19,"author":{"gitId":"bingsen0806"},"content":"     * and contains no non-alphanumeric characters other than \u0027 character and : character.","lastModifiedDate":"2022-03-09"},{"lineNumber":20,"author":{"gitId":"bingsen0806"},"content":"     */","lastModifiedDate":"2022-03-09"},{"lineNumber":21,"author":{"gitId":"bingsen0806"},"content":"    public static final String VALIDATION_REGEX \u003d \"[\\\\p{Alnum}][\\\\p{Alnum} \\\\\u0027\\\\:]*\";","lastModifiedDate":"2022-03-09"},{"lineNumber":22,"author":{"gitId":"bingsen0806"},"content":"","lastModifiedDate":"2022-03-09"},{"lineNumber":23,"author":{"gitId":"bingsen0806"},"content":"    public final String fullBookName;","lastModifiedDate":"2022-03-09"},{"lineNumber":24,"author":{"gitId":"bingsen0806"},"content":"","lastModifiedDate":"2022-03-09"},{"lineNumber":25,"author":{"gitId":"bingsen0806"},"content":"    /**","lastModifiedDate":"2022-03-09"},{"lineNumber":26,"author":{"gitId":"bingsen0806"},"content":"     * Constructs a {@code BookName}.","lastModifiedDate":"2022-03-09"},{"lineNumber":27,"author":{"gitId":"bingsen0806"},"content":"     *","lastModifiedDate":"2022-03-09"},{"lineNumber":28,"author":{"gitId":"bingsen0806"},"content":"     * @param bookname A valid book name.","lastModifiedDate":"2022-03-09"},{"lineNumber":29,"author":{"gitId":"bingsen0806"},"content":"     */","lastModifiedDate":"2022-03-09"},{"lineNumber":30,"author":{"gitId":"bingsen0806"},"content":"    public BookName(String bookname) {","lastModifiedDate":"2022-03-09"},{"lineNumber":31,"author":{"gitId":"bingsen0806"},"content":"        requireNonNull(bookname);","lastModifiedDate":"2022-03-09"},{"lineNumber":32,"author":{"gitId":"bingsen0806"},"content":"        checkArgument(isValidBookName(bookname), MESSAGE_CONSTRAINTS);","lastModifiedDate":"2022-03-09"},{"lineNumber":33,"author":{"gitId":"bingsen0806"},"content":"        fullBookName \u003d bookname;","lastModifiedDate":"2022-03-09"},{"lineNumber":34,"author":{"gitId":"bingsen0806"},"content":"    }","lastModifiedDate":"2022-03-09"},{"lineNumber":35,"author":{"gitId":"bingsen0806"},"content":"","lastModifiedDate":"2022-03-09"},{"lineNumber":36,"author":{"gitId":"bingsen0806"},"content":"    /**","lastModifiedDate":"2022-03-09"},{"lineNumber":37,"author":{"gitId":"bingsen0806"},"content":"     * Returns true if a given string is a valid book name.","lastModifiedDate":"2022-03-09"},{"lineNumber":38,"author":{"gitId":"bingsen0806"},"content":"     */","lastModifiedDate":"2022-03-09"},{"lineNumber":39,"author":{"gitId":"bingsen0806"},"content":"    public static boolean isValidBookName(String test) {","lastModifiedDate":"2022-03-09"},{"lineNumber":40,"author":{"gitId":"bingsen0806"},"content":"        return test.matches(VALIDATION_REGEX);","lastModifiedDate":"2022-03-09"},{"lineNumber":41,"author":{"gitId":"bingsen0806"},"content":"    }","lastModifiedDate":"2022-03-09"},{"lineNumber":42,"author":{"gitId":"bingsen0806"},"content":"","lastModifiedDate":"2022-03-09"},{"lineNumber":43,"author":{"gitId":"bingsen0806"},"content":"    @Override","lastModifiedDate":"2022-03-09"},{"lineNumber":44,"author":{"gitId":"bingsen0806"},"content":"    public String toString() {","lastModifiedDate":"2022-03-09"},{"lineNumber":45,"author":{"gitId":"bingsen0806"},"content":"        return fullBookName;","lastModifiedDate":"2022-03-09"},{"lineNumber":46,"author":{"gitId":"bingsen0806"},"content":"    }","lastModifiedDate":"2022-03-09"},{"lineNumber":47,"author":{"gitId":"bingsen0806"},"content":"","lastModifiedDate":"2022-03-09"},{"lineNumber":48,"author":{"gitId":"bingsen0806"},"content":"    @Override","lastModifiedDate":"2022-03-09"},{"lineNumber":49,"author":{"gitId":"bingsen0806"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2022-03-09"},{"lineNumber":50,"author":{"gitId":"bingsen0806"},"content":"        return other \u003d\u003d this","lastModifiedDate":"2022-03-09"},{"lineNumber":51,"author":{"gitId":"bingsen0806"},"content":"                || (other instanceof BookName) //instanceof handle nulls","lastModifiedDate":"2022-03-09"},{"lineNumber":52,"author":{"gitId":"bingsen0806"},"content":"                \u0026\u0026 fullBookName.equals(((BookName) other).fullBookName);","lastModifiedDate":"2022-03-09"},{"lineNumber":53,"author":{"gitId":"bingsen0806"},"content":"    }","lastModifiedDate":"2022-03-09"},{"lineNumber":54,"author":{"gitId":"bingsen0806"},"content":"","lastModifiedDate":"2022-03-09"},{"lineNumber":55,"author":{"gitId":"bingsen0806"},"content":"    @Override","lastModifiedDate":"2022-03-09"},{"lineNumber":56,"author":{"gitId":"bingsen0806"},"content":"    public int hashCode() {","lastModifiedDate":"2022-03-09"},{"lineNumber":57,"author":{"gitId":"bingsen0806"},"content":"        return fullBookName.hashCode();","lastModifiedDate":"2022-03-09"},{"lineNumber":58,"author":{"gitId":"bingsen0806"},"content":"    }","lastModifiedDate":"2022-03-09"},{"lineNumber":59,"author":{"gitId":"bingsen0806"},"content":"}","lastModifiedDate":"2022-03-09"}],"authorContributionMap":{"bingsen0806":59}},{"path":"src/main/java/seedu/address/model/book/BookNameContainsKeywordsPredicate.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"bingsen0806"},"content":"package seedu.address.model.book;","lastModifiedDate":"2022-03-10"},{"lineNumber":2,"author":{"gitId":"bingsen0806"},"content":"","lastModifiedDate":"2022-03-10"},{"lineNumber":3,"author":{"gitId":"bingsen0806"},"content":"import java.util.List;","lastModifiedDate":"2022-03-10"},{"lineNumber":4,"author":{"gitId":"bingsen0806"},"content":"import java.util.function.Predicate;","lastModifiedDate":"2022-03-10"},{"lineNumber":5,"author":{"gitId":"bingsen0806"},"content":"","lastModifiedDate":"2022-03-10"},{"lineNumber":6,"author":{"gitId":"bingsen0806"},"content":"import seedu.address.commons.util.StringUtil;","lastModifiedDate":"2022-03-10"},{"lineNumber":7,"author":{"gitId":"bingsen0806"},"content":"","lastModifiedDate":"2022-03-10"},{"lineNumber":8,"author":{"gitId":"bingsen0806"},"content":"/**","lastModifiedDate":"2022-03-10"},{"lineNumber":9,"author":{"gitId":"bingsen0806"},"content":" * Tests that a {@code Book}\u0027s {@code BookName} matches any of the keywords given.","lastModifiedDate":"2022-03-10"},{"lineNumber":10,"author":{"gitId":"bingsen0806"},"content":" */","lastModifiedDate":"2022-03-10"},{"lineNumber":11,"author":{"gitId":"bingsen0806"},"content":"public class BookNameContainsKeywordsPredicate implements Predicate\u003cBook\u003e {","lastModifiedDate":"2022-03-10"},{"lineNumber":12,"author":{"gitId":"bingsen0806"},"content":"    private final List\u003cString\u003e keywords;","lastModifiedDate":"2022-03-10"},{"lineNumber":13,"author":{"gitId":"bingsen0806"},"content":"","lastModifiedDate":"2022-03-10"},{"lineNumber":14,"author":{"gitId":"bingsen0806"},"content":"    public BookNameContainsKeywordsPredicate(List\u003cString\u003e keywords) {","lastModifiedDate":"2022-03-10"},{"lineNumber":15,"author":{"gitId":"bingsen0806"},"content":"        this.keywords \u003d keywords;","lastModifiedDate":"2022-03-10"},{"lineNumber":16,"author":{"gitId":"bingsen0806"},"content":"    }","lastModifiedDate":"2022-03-10"},{"lineNumber":17,"author":{"gitId":"bingsen0806"},"content":"","lastModifiedDate":"2022-03-10"},{"lineNumber":18,"author":{"gitId":"bingsen0806"},"content":"    @Override","lastModifiedDate":"2022-03-10"},{"lineNumber":19,"author":{"gitId":"bingsen0806"},"content":"    public boolean test(Book book) {","lastModifiedDate":"2022-03-10"},{"lineNumber":20,"author":{"gitId":"bingsen0806"},"content":"        return keywords.stream()","lastModifiedDate":"2022-03-10"},{"lineNumber":21,"author":{"gitId":"bingsen0806"},"content":"                .anyMatch(keyword -\u003e StringUtil.containsWordIgnoreCase(book.getBookName().fullBookName, keyword));","lastModifiedDate":"2022-03-10"},{"lineNumber":22,"author":{"gitId":"bingsen0806"},"content":"    }","lastModifiedDate":"2022-03-10"},{"lineNumber":23,"author":{"gitId":"bingsen0806"},"content":"","lastModifiedDate":"2022-03-10"},{"lineNumber":24,"author":{"gitId":"bingsen0806"},"content":"    @Override","lastModifiedDate":"2022-03-10"},{"lineNumber":25,"author":{"gitId":"bingsen0806"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2022-03-10"},{"lineNumber":26,"author":{"gitId":"bingsen0806"},"content":"        return other \u003d\u003d this // short circuit if same object","lastModifiedDate":"2022-03-10"},{"lineNumber":27,"author":{"gitId":"bingsen0806"},"content":"                || (other instanceof BookNameContainsKeywordsPredicate // instanceof handles nulls","lastModifiedDate":"2022-03-10"},{"lineNumber":28,"author":{"gitId":"bingsen0806"},"content":"                \u0026\u0026 keywords.equals(((BookNameContainsKeywordsPredicate) other).keywords)); // state check","lastModifiedDate":"2022-03-10"},{"lineNumber":29,"author":{"gitId":"bingsen0806"},"content":"    }","lastModifiedDate":"2022-03-10"},{"lineNumber":30,"author":{"gitId":"bingsen0806"},"content":"}","lastModifiedDate":"2022-03-10"}],"authorContributionMap":{"bingsen0806":30}},{"path":"src/main/java/seedu/address/model/book/Isbn.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"bingsen0806"},"content":"package seedu.address.model.book;","lastModifiedDate":"2022-03-09"},{"lineNumber":2,"author":{"gitId":"bingsen0806"},"content":"","lastModifiedDate":"2022-03-09"},{"lineNumber":3,"author":{"gitId":"bingsen0806"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2022-03-09"},{"lineNumber":4,"author":{"gitId":"bingsen0806"},"content":"import static seedu.address.commons.util.AppUtil.checkArgument;","lastModifiedDate":"2022-03-09"},{"lineNumber":5,"author":{"gitId":"bingsen0806"},"content":"","lastModifiedDate":"2022-03-09"},{"lineNumber":6,"author":{"gitId":"bingsen0806"},"content":"public class Isbn {","lastModifiedDate":"2022-03-09"},{"lineNumber":7,"author":{"gitId":"bingsen0806"},"content":"","lastModifiedDate":"2022-03-09"},{"lineNumber":8,"author":{"gitId":"bingsen0806"},"content":"    public static final String SPECIAL_CHARACTERS \u003d \"-\";","lastModifiedDate":"2022-03-09"},{"lineNumber":9,"author":{"gitId":"bingsen0806"},"content":"    public static final String MESSAGE_CONSTRAINTS \u003d \"Isbn should adhere to the following constraints:\\n\"","lastModifiedDate":"2022-03-09"},{"lineNumber":10,"author":{"gitId":"bingsen0806"},"content":"            + \"1. Contain only digits and at most one \\\"\" + SPECIAL_CHARACTERS + \"\\\" character between digits,\"","lastModifiedDate":"2022-03-09"},{"lineNumber":11,"author":{"gitId":"bingsen0806"},"content":"            + \" and must start and end with digit characters.\\n\"","lastModifiedDate":"2022-03-09"},{"lineNumber":12,"author":{"gitId":"bingsen0806"},"content":"            + \"2. Contain exactly 10 digits or 13 digits\\n\"","lastModifiedDate":"2022-03-09"},{"lineNumber":13,"author":{"gitId":"bingsen0806"},"content":"            + \"3. For 10-digit Isbn, the sum of [position]x[digit at position] must be divisible by 11\\n\"","lastModifiedDate":"2022-03-09"},{"lineNumber":14,"author":{"gitId":"bingsen0806"},"content":"            + \"4. For 13-digit Isbn, the digits must start with 978 or 979, and have correct check sum.\\n\"","lastModifiedDate":"2022-03-09"},{"lineNumber":15,"author":{"gitId":"bingsen0806"},"content":"            + \"The check sum:\\n\"","lastModifiedDate":"2022-03-09"},{"lineNumber":16,"author":{"gitId":"bingsen0806"},"content":"            + \"    - is defined as [weight of position]x[digit at position] and must be divisible by 10\\n\"","lastModifiedDate":"2022-03-09"},{"lineNumber":17,"author":{"gitId":"bingsen0806"},"content":"            + \"    - weight is 1 if position is odd and 3 otherwise\\n\"","lastModifiedDate":"2022-03-09"},{"lineNumber":18,"author":{"gitId":"bingsen0806"},"content":"            + \"5. Position is the 1-based index of the digit in the isbn input after removal of \\\"\"","lastModifiedDate":"2022-03-09"},{"lineNumber":19,"author":{"gitId":"bingsen0806"},"content":"            + SPECIAL_CHARACTERS + \"\\\" character.\\n\";","lastModifiedDate":"2022-03-09"},{"lineNumber":20,"author":{"gitId":"bingsen0806"},"content":"","lastModifiedDate":"2022-03-09"},{"lineNumber":21,"author":{"gitId":"bingsen0806"},"content":"    public static final String VALIDATION_REGEX_ISBN \u003d \"^[0-9]+(-?[0-9]+)+$\";","lastModifiedDate":"2022-03-09"},{"lineNumber":22,"author":{"gitId":"bingsen0806"},"content":"","lastModifiedDate":"2022-03-09"},{"lineNumber":23,"author":{"gitId":"bingsen0806"},"content":"    private static final int ISBN10_CHECKSUM_DIVIDER \u003d 11;","lastModifiedDate":"2022-03-09"},{"lineNumber":24,"author":{"gitId":"bingsen0806"},"content":"    private static final int ISBN13_CHECKSUM_DIVIDER \u003d 10;","lastModifiedDate":"2022-03-09"},{"lineNumber":25,"author":{"gitId":"bingsen0806"},"content":"    private static final int ISBN10_LENGTH \u003d 10;","lastModifiedDate":"2022-03-09"},{"lineNumber":26,"author":{"gitId":"bingsen0806"},"content":"    private static final int ISBN13_LENGTH \u003d 13;","lastModifiedDate":"2022-03-09"},{"lineNumber":27,"author":{"gitId":"bingsen0806"},"content":"    private static final int ISBN13_VALID_PREFIX1 \u003d 978;","lastModifiedDate":"2022-03-09"},{"lineNumber":28,"author":{"gitId":"bingsen0806"},"content":"    private static final int ISBN13_VALID_PREFIX2 \u003d 979;","lastModifiedDate":"2022-03-09"},{"lineNumber":29,"author":{"gitId":"bingsen0806"},"content":"","lastModifiedDate":"2022-03-09"},{"lineNumber":30,"author":{"gitId":"bingsen0806"},"content":"    private final String isbn;","lastModifiedDate":"2022-03-09"},{"lineNumber":31,"author":{"gitId":"bingsen0806"},"content":"","lastModifiedDate":"2022-03-09"},{"lineNumber":32,"author":{"gitId":"bingsen0806"},"content":"    /**","lastModifiedDate":"2022-03-09"},{"lineNumber":33,"author":{"gitId":"bingsen0806"},"content":"     * Constructs a {@code Isbn}","lastModifiedDate":"2022-03-09"},{"lineNumber":34,"author":{"gitId":"bingsen0806"},"content":"     *","lastModifiedDate":"2022-03-09"},{"lineNumber":35,"author":{"gitId":"bingsen0806"},"content":"     * @param isbn A valid isbn.","lastModifiedDate":"2022-03-09"},{"lineNumber":36,"author":{"gitId":"bingsen0806"},"content":"     */","lastModifiedDate":"2022-03-09"},{"lineNumber":37,"author":{"gitId":"bingsen0806"},"content":"    public Isbn(String isbn) {","lastModifiedDate":"2022-03-09"},{"lineNumber":38,"author":{"gitId":"bingsen0806"},"content":"        requireNonNull(isbn);","lastModifiedDate":"2022-03-09"},{"lineNumber":39,"author":{"gitId":"bingsen0806"},"content":"        checkArgument(isValidIsbn(isbn), MESSAGE_CONSTRAINTS);","lastModifiedDate":"2022-03-09"},{"lineNumber":40,"author":{"gitId":"bingsen0806"},"content":"        this.isbn \u003d isbn;","lastModifiedDate":"2022-03-09"},{"lineNumber":41,"author":{"gitId":"bingsen0806"},"content":"    }","lastModifiedDate":"2022-03-09"},{"lineNumber":42,"author":{"gitId":"bingsen0806"},"content":"","lastModifiedDate":"2022-03-09"},{"lineNumber":43,"author":{"gitId":"bingsen0806"},"content":"    /**","lastModifiedDate":"2022-03-09"},{"lineNumber":44,"author":{"gitId":"bingsen0806"},"content":"     * Returns true if a given string is a valid isbn.","lastModifiedDate":"2022-03-09"},{"lineNumber":45,"author":{"gitId":"bingsen0806"},"content":"     */","lastModifiedDate":"2022-03-09"},{"lineNumber":46,"author":{"gitId":"bingsen0806"},"content":"    public static boolean isValidIsbn(String test) {","lastModifiedDate":"2022-03-09"},{"lineNumber":47,"author":{"gitId":"bingsen0806"},"content":"        if (!test.matches(VALIDATION_REGEX_ISBN)) {","lastModifiedDate":"2022-03-09"},{"lineNumber":48,"author":{"gitId":"bingsen0806"},"content":"            return false;","lastModifiedDate":"2022-03-09"},{"lineNumber":49,"author":{"gitId":"bingsen0806"},"content":"        }","lastModifiedDate":"2022-03-09"},{"lineNumber":50,"author":{"gitId":"bingsen0806"},"content":"        String isbnWithoutHyphen \u003d removeHyphen(test);","lastModifiedDate":"2022-03-09"},{"lineNumber":51,"author":{"gitId":"bingsen0806"},"content":"        if (isbnWithoutHyphen.length() \u003d\u003d ISBN10_LENGTH) {","lastModifiedDate":"2022-03-09"},{"lineNumber":52,"author":{"gitId":"bingsen0806"},"content":"            return isValidIsbn10(isbnWithoutHyphen);","lastModifiedDate":"2022-03-09"},{"lineNumber":53,"author":{"gitId":"bingsen0806"},"content":"        }","lastModifiedDate":"2022-03-09"},{"lineNumber":54,"author":{"gitId":"bingsen0806"},"content":"        if (isbnWithoutHyphen.length() \u003d\u003d ISBN13_LENGTH) {","lastModifiedDate":"2022-03-09"},{"lineNumber":55,"author":{"gitId":"bingsen0806"},"content":"            return isValidIsbn13(isbnWithoutHyphen);","lastModifiedDate":"2022-03-09"},{"lineNumber":56,"author":{"gitId":"bingsen0806"},"content":"        }","lastModifiedDate":"2022-03-09"},{"lineNumber":57,"author":{"gitId":"bingsen0806"},"content":"        return false;","lastModifiedDate":"2022-03-09"},{"lineNumber":58,"author":{"gitId":"bingsen0806"},"content":"    }","lastModifiedDate":"2022-03-09"},{"lineNumber":59,"author":{"gitId":"bingsen0806"},"content":"","lastModifiedDate":"2022-03-09"},{"lineNumber":60,"author":{"gitId":"bingsen0806"},"content":"    private static String removeHyphen(String fullIsbn) {","lastModifiedDate":"2022-03-09"},{"lineNumber":61,"author":{"gitId":"bingsen0806"},"content":"        String[] isbnParts \u003d fullIsbn.split(\"-\");","lastModifiedDate":"2022-03-09"},{"lineNumber":62,"author":{"gitId":"bingsen0806"},"content":"        StringBuilder isbnWithoutHyphen \u003d new StringBuilder();","lastModifiedDate":"2022-03-09"},{"lineNumber":63,"author":{"gitId":"bingsen0806"},"content":"        for (String substring: isbnParts) {","lastModifiedDate":"2022-03-09"},{"lineNumber":64,"author":{"gitId":"bingsen0806"},"content":"            isbnWithoutHyphen.append(substring);","lastModifiedDate":"2022-03-09"},{"lineNumber":65,"author":{"gitId":"bingsen0806"},"content":"        }","lastModifiedDate":"2022-03-09"},{"lineNumber":66,"author":{"gitId":"bingsen0806"},"content":"        return isbnWithoutHyphen.toString();","lastModifiedDate":"2022-03-09"},{"lineNumber":67,"author":{"gitId":"bingsen0806"},"content":"    }","lastModifiedDate":"2022-03-09"},{"lineNumber":68,"author":{"gitId":"bingsen0806"},"content":"","lastModifiedDate":"2022-03-09"},{"lineNumber":69,"author":{"gitId":"bingsen0806"},"content":"    private static boolean isValidIsbn10(String isbnWithoutHyphen) {","lastModifiedDate":"2022-03-09"},{"lineNumber":70,"author":{"gitId":"bingsen0806"},"content":"        assert isbnWithoutHyphen.length() \u003d\u003d ISBN10_LENGTH : \"isbn length is not correct.\";","lastModifiedDate":"2022-03-09"},{"lineNumber":71,"author":{"gitId":"bingsen0806"},"content":"        int checkSum \u003d 0;","lastModifiedDate":"2022-03-09"},{"lineNumber":72,"author":{"gitId":"bingsen0806"},"content":"        for (int i \u003d 0; i \u003c ISBN10_LENGTH; i++) {","lastModifiedDate":"2022-03-09"},{"lineNumber":73,"author":{"gitId":"bingsen0806"},"content":"            int weight \u003d ISBN10_LENGTH - i;","lastModifiedDate":"2022-03-09"},{"lineNumber":74,"author":{"gitId":"bingsen0806"},"content":"            int digitAtPosition \u003d Integer.parseInt(isbnWithoutHyphen.substring(i, i + 1));","lastModifiedDate":"2022-03-09"},{"lineNumber":75,"author":{"gitId":"bingsen0806"},"content":"            checkSum +\u003d weight * digitAtPosition;","lastModifiedDate":"2022-03-09"},{"lineNumber":76,"author":{"gitId":"bingsen0806"},"content":"        }","lastModifiedDate":"2022-03-09"},{"lineNumber":77,"author":{"gitId":"bingsen0806"},"content":"        return checkSum % ISBN10_CHECKSUM_DIVIDER \u003d\u003d 0;","lastModifiedDate":"2022-03-09"},{"lineNumber":78,"author":{"gitId":"bingsen0806"},"content":"    }","lastModifiedDate":"2022-03-09"},{"lineNumber":79,"author":{"gitId":"bingsen0806"},"content":"","lastModifiedDate":"2022-03-09"},{"lineNumber":80,"author":{"gitId":"bingsen0806"},"content":"    private static boolean isValidIsbn13(String isbnWithoutHyphen) {","lastModifiedDate":"2022-03-09"},{"lineNumber":81,"author":{"gitId":"bingsen0806"},"content":"        assert isbnWithoutHyphen.length() \u003d\u003d ISBN13_LENGTH : \"isbn length is not correct.\";","lastModifiedDate":"2022-03-09"},{"lineNumber":82,"author":{"gitId":"bingsen0806"},"content":"","lastModifiedDate":"2022-03-09"},{"lineNumber":83,"author":{"gitId":"bingsen0806"},"content":"        // Checks for valid prefix","lastModifiedDate":"2022-03-09"},{"lineNumber":84,"author":{"gitId":"bingsen0806"},"content":"        int prefix \u003d Integer.parseInt(isbnWithoutHyphen.substring(0, 3));","lastModifiedDate":"2022-03-09"},{"lineNumber":85,"author":{"gitId":"bingsen0806"},"content":"        boolean hasValidPrefix \u003d prefix \u003d\u003d ISBN13_VALID_PREFIX1 || prefix \u003d\u003d ISBN13_VALID_PREFIX2;","lastModifiedDate":"2022-03-09"},{"lineNumber":86,"author":{"gitId":"bingsen0806"},"content":"","lastModifiedDate":"2022-03-09"},{"lineNumber":87,"author":{"gitId":"bingsen0806"},"content":"        // Checks for valid check sum","lastModifiedDate":"2022-03-09"},{"lineNumber":88,"author":{"gitId":"bingsen0806"},"content":"        int checkSum \u003d 0;","lastModifiedDate":"2022-03-09"},{"lineNumber":89,"author":{"gitId":"bingsen0806"},"content":"        for (int i \u003d 0; i \u003c ISBN13_LENGTH; i++) {","lastModifiedDate":"2022-03-09"},{"lineNumber":90,"author":{"gitId":"bingsen0806"},"content":"            // weights alternate between 1 and 3 according to Isbn standards","lastModifiedDate":"2022-03-09"},{"lineNumber":91,"author":{"gitId":"bingsen0806"},"content":"            int weight \u003d i % 2 \u003d\u003d 0 ? 1 : 3;","lastModifiedDate":"2022-03-09"},{"lineNumber":92,"author":{"gitId":"bingsen0806"},"content":"            int digitAtPosition \u003d Integer.parseInt(isbnWithoutHyphen.substring(i, i + 1));","lastModifiedDate":"2022-03-09"},{"lineNumber":93,"author":{"gitId":"bingsen0806"},"content":"            checkSum +\u003d weight * digitAtPosition;","lastModifiedDate":"2022-03-09"},{"lineNumber":94,"author":{"gitId":"bingsen0806"},"content":"        }","lastModifiedDate":"2022-03-09"},{"lineNumber":95,"author":{"gitId":"bingsen0806"},"content":"        boolean hasValidCheckSum \u003d checkSum % ISBN13_CHECKSUM_DIVIDER \u003d\u003d 0;","lastModifiedDate":"2022-03-09"},{"lineNumber":96,"author":{"gitId":"bingsen0806"},"content":"","lastModifiedDate":"2022-03-09"},{"lineNumber":97,"author":{"gitId":"bingsen0806"},"content":"        return hasValidPrefix \u0026\u0026 hasValidCheckSum;","lastModifiedDate":"2022-03-09"},{"lineNumber":98,"author":{"gitId":"bingsen0806"},"content":"    }","lastModifiedDate":"2022-03-09"},{"lineNumber":99,"author":{"gitId":"bingsen0806"},"content":"","lastModifiedDate":"2022-03-09"},{"lineNumber":100,"author":{"gitId":"bingsen0806"},"content":"    @Override","lastModifiedDate":"2022-03-09"},{"lineNumber":101,"author":{"gitId":"bingsen0806"},"content":"    public String toString() {","lastModifiedDate":"2022-03-09"},{"lineNumber":102,"author":{"gitId":"bingsen0806"},"content":"        return isbn;","lastModifiedDate":"2022-03-09"},{"lineNumber":103,"author":{"gitId":"bingsen0806"},"content":"    }","lastModifiedDate":"2022-03-09"},{"lineNumber":104,"author":{"gitId":"bingsen0806"},"content":"","lastModifiedDate":"2022-03-09"},{"lineNumber":105,"author":{"gitId":"bingsen0806"},"content":"    @Override","lastModifiedDate":"2022-03-09"},{"lineNumber":106,"author":{"gitId":"bingsen0806"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2022-03-09"},{"lineNumber":107,"author":{"gitId":"bingsen0806"},"content":"        return other \u003d\u003d this // short circuit if same object","lastModifiedDate":"2022-03-09"},{"lineNumber":108,"author":{"gitId":"bingsen0806"},"content":"                || (other instanceof Isbn // instanceof handles nulls","lastModifiedDate":"2022-03-09"},{"lineNumber":109,"author":{"gitId":"bingsen0806"},"content":"                \u0026\u0026 removeHyphen(isbn).equals(removeHyphen(((Isbn) other).isbn))); // state check","lastModifiedDate":"2022-03-09"},{"lineNumber":110,"author":{"gitId":"bingsen0806"},"content":"    }","lastModifiedDate":"2022-03-09"},{"lineNumber":111,"author":{"gitId":"bingsen0806"},"content":"","lastModifiedDate":"2022-03-09"},{"lineNumber":112,"author":{"gitId":"bingsen0806"},"content":"","lastModifiedDate":"2022-03-09"},{"lineNumber":113,"author":{"gitId":"bingsen0806"},"content":"}","lastModifiedDate":"2022-03-09"}],"authorContributionMap":{"bingsen0806":113}},{"path":"src/main/java/seedu/address/model/book/exceptions/BookNotFoundException.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"bingsen0806"},"content":"package seedu.address.model.book.exceptions;","lastModifiedDate":"2022-03-10"},{"lineNumber":2,"author":{"gitId":"bingsen0806"},"content":"","lastModifiedDate":"2022-03-10"},{"lineNumber":3,"author":{"gitId":"bingsen0806"},"content":"/**","lastModifiedDate":"2022-03-10"},{"lineNumber":4,"author":{"gitId":"bingsen0806"},"content":" * Signals that the operation is unable to find the specified book.","lastModifiedDate":"2022-03-10"},{"lineNumber":5,"author":{"gitId":"bingsen0806"},"content":" */","lastModifiedDate":"2022-03-10"},{"lineNumber":6,"author":{"gitId":"bingsen0806"},"content":"public class BookNotFoundException extends RuntimeException {}","lastModifiedDate":"2022-03-10"}],"authorContributionMap":{"bingsen0806":6}},{"path":"src/main/java/seedu/address/model/person/Email.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.model.person;","lastModifiedDate":"2016-08-24"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2017-05-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static seedu.address.commons.util.AppUtil.checkArgument;","lastModifiedDate":"2017-05-30"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":6,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-24"},{"lineNumber":7,"author":{"gitId":"-"},"content":" * Represents a Person\u0027s email in the address book.","lastModifiedDate":"2018-02-09"},{"lineNumber":8,"author":{"gitId":"-"},"content":" * Guarantees: immutable; is valid as declared in {@link #isValidEmail(String)}","lastModifiedDate":"2016-08-24"},{"lineNumber":9,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-24"},{"lineNumber":10,"author":{"gitId":"-"},"content":"public class Email {","lastModifiedDate":"2016-09-21"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    private static final String SPECIAL_CHARACTERS \u003d \"+_.-\";","lastModifiedDate":"2021-07-20"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_CONSTRAINTS \u003d \"Emails should be of the format local-part@domain \"","lastModifiedDate":"2018-09-22"},{"lineNumber":14,"author":{"gitId":"-"},"content":"            + \"and adhere to the following constraints:\\n\"","lastModifiedDate":"2018-02-09"},{"lineNumber":15,"author":{"gitId":"-"},"content":"            + \"1. The local-part should only contain alphanumeric characters and these special characters, excluding \"","lastModifiedDate":"2018-02-09"},{"lineNumber":16,"author":{"gitId":"-"},"content":"            + \"the parentheses, (\" + SPECIAL_CHARACTERS + \"). The local-part may not start or end with any special \"","lastModifiedDate":"2021-07-20"},{"lineNumber":17,"author":{"gitId":"-"},"content":"            + \"characters.\\n\"","lastModifiedDate":"2021-07-20"},{"lineNumber":18,"author":{"gitId":"-"},"content":"            + \"2. This is followed by a \u0027@\u0027 and then a domain name. The domain name is made up of domain labels \"","lastModifiedDate":"2021-07-20"},{"lineNumber":19,"author":{"gitId":"-"},"content":"            + \"separated by periods.\\n\"","lastModifiedDate":"2021-07-20"},{"lineNumber":20,"author":{"gitId":"-"},"content":"            + \"The domain name must:\\n\"","lastModifiedDate":"2018-02-09"},{"lineNumber":21,"author":{"gitId":"-"},"content":"            + \"    - end with a domain label at least 2 characters long\\n\"","lastModifiedDate":"2021-07-20"},{"lineNumber":22,"author":{"gitId":"-"},"content":"            + \"    - have each domain label start and end with alphanumeric characters\\n\"","lastModifiedDate":"2021-07-20"},{"lineNumber":23,"author":{"gitId":"aditi2313"},"content":"            + \"    - have each domain label consist of alphanumeric characters, separated only by hyphens, if any.\"","lastModifiedDate":"2022-03-10"},{"lineNumber":24,"author":{"gitId":"aditi2313"},"content":"            + \"3. Total length of email must be up to 50 characters.\";","lastModifiedDate":"2022-03-10"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    // alphanumeric and special characters","lastModifiedDate":"2018-02-09"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    private static final String ALPHANUMERIC_NO_UNDERSCORE \u003d \"[^\\\\W_]+\"; // alphanumeric characters except underscore","lastModifiedDate":"2021-07-20"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    private static final String LOCAL_PART_REGEX \u003d \"^\" + ALPHANUMERIC_NO_UNDERSCORE + \"([\" + SPECIAL_CHARACTERS + \"]\"","lastModifiedDate":"2021-07-20"},{"lineNumber":28,"author":{"gitId":"-"},"content":"            + ALPHANUMERIC_NO_UNDERSCORE + \")*\";","lastModifiedDate":"2021-07-20"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    private static final String DOMAIN_PART_REGEX \u003d ALPHANUMERIC_NO_UNDERSCORE","lastModifiedDate":"2021-07-20"},{"lineNumber":30,"author":{"gitId":"-"},"content":"            + \"(-\" + ALPHANUMERIC_NO_UNDERSCORE + \")*\";","lastModifiedDate":"2021-07-20"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    private static final String DOMAIN_LAST_PART_REGEX \u003d \"(\" + DOMAIN_PART_REGEX + \"){2,}$\"; // At least two chars","lastModifiedDate":"2021-07-20"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    private static final String DOMAIN_REGEX \u003d \"(\" + DOMAIN_PART_REGEX + \"\\\\.)*\" + DOMAIN_LAST_PART_REGEX;","lastModifiedDate":"2021-07-20"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    public static final String VALIDATION_REGEX \u003d LOCAL_PART_REGEX + \"@\" + DOMAIN_REGEX;","lastModifiedDate":"2021-07-20"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    public final String value;","lastModifiedDate":"2016-08-24"},{"lineNumber":36,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-24"},{"lineNumber":38,"author":{"gitId":"-"},"content":"     * Constructs an {@code Email}.","lastModifiedDate":"2017-05-30"},{"lineNumber":39,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2016-08-24"},{"lineNumber":40,"author":{"gitId":"-"},"content":"     * @param email A valid email address.","lastModifiedDate":"2017-05-30"},{"lineNumber":41,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-24"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    public Email(String email) {","lastModifiedDate":"2017-05-30"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        requireNonNull(email);","lastModifiedDate":"2017-05-15"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        checkArgument(isValidEmail(email), MESSAGE_CONSTRAINTS);","lastModifiedDate":"2018-09-22"},{"lineNumber":45,"author":{"gitId":"-"},"content":"        value \u003d email;","lastModifiedDate":"2018-08-14"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":47,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-24"},{"lineNumber":49,"author":{"gitId":"-"},"content":"     * Returns if a given string is a valid email.","lastModifiedDate":"2018-04-05"},{"lineNumber":50,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-24"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    public static boolean isValidEmail(String test) {","lastModifiedDate":"2016-08-24"},{"lineNumber":52,"author":{"gitId":"aditi2313"},"content":"        String[] emailArray \u003d test.split(\"\");","lastModifiedDate":"2022-03-10"},{"lineNumber":53,"author":{"gitId":"aditi2313"},"content":"        return ((emailArray.length \u003c\u003d 50) \u0026\u0026 test.matches(VALIDATION_REGEX));","lastModifiedDate":"2022-03-10"},{"lineNumber":54,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":55,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-24"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    public String toString() {","lastModifiedDate":"2016-08-24"},{"lineNumber":58,"author":{"gitId":"-"},"content":"        return value;","lastModifiedDate":"2016-08-24"},{"lineNumber":59,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":60,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":61,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-24"},{"lineNumber":62,"author":{"gitId":"-"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2016-08-24"},{"lineNumber":63,"author":{"gitId":"-"},"content":"        return other \u003d\u003d this // short circuit if same object","lastModifiedDate":"2016-08-24"},{"lineNumber":64,"author":{"gitId":"-"},"content":"                || (other instanceof Email // instanceof handles nulls","lastModifiedDate":"2016-08-24"},{"lineNumber":65,"author":{"gitId":"-"},"content":"                \u0026\u0026 value.equals(((Email) other).value)); // state check","lastModifiedDate":"2018-08-14"},{"lineNumber":66,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":67,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":68,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-24"},{"lineNumber":69,"author":{"gitId":"-"},"content":"    public int hashCode() {","lastModifiedDate":"2016-08-24"},{"lineNumber":70,"author":{"gitId":"-"},"content":"        return value.hashCode();","lastModifiedDate":"2016-08-24"},{"lineNumber":71,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":72,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":73,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-24"}],"authorContributionMap":{"-":69,"aditi2313":4}},{"path":"src/main/java/seedu/address/model/person/Id.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.model.person;","lastModifiedDate":"2016-08-24"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2017-05-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static seedu.address.commons.util.AppUtil.checkArgument;","lastModifiedDate":"2017-05-30"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":6,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-24"},{"lineNumber":7,"author":{"gitId":"-"},"content":" * Represents a Person\u0027s address in the address book.","lastModifiedDate":"2016-08-24"},{"lineNumber":8,"author":{"gitId":"aditi2313"},"content":" * Guarantees: immutable; is valid as declared in {@link #isValidId(String)}","lastModifiedDate":"2022-03-09"},{"lineNumber":9,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-24"},{"lineNumber":10,"author":{"gitId":"aditi2313"},"content":"public class Id {","lastModifiedDate":"2022-03-09"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":12,"author":{"gitId":"aditi2313"},"content":"    public static final String MESSAGE_CONSTRAINTS \u003d \"Ids must be of format AXXXXXXXX, and should not be blank\";","lastModifiedDate":"2022-03-10"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-16"},{"lineNumber":14,"author":{"gitId":"-"},"content":"    /*","lastModifiedDate":"2017-01-16"},{"lineNumber":15,"author":{"gitId":"-"},"content":"     * The first character of the address must not be a whitespace,","lastModifiedDate":"2017-01-16"},{"lineNumber":16,"author":{"gitId":"-"},"content":"     * otherwise \" \" (a blank string) becomes a valid input.","lastModifiedDate":"2017-01-16"},{"lineNumber":17,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-01-16"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    public static final String VALIDATION_REGEX \u003d \"[^\\\\s].*\";","lastModifiedDate":"2022-03-10"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    public final String value;","lastModifiedDate":"2016-08-24"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-24"},{"lineNumber":23,"author":{"gitId":"-"},"content":"     * Constructs an {@code Address}.","lastModifiedDate":"2017-05-30"},{"lineNumber":24,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2016-08-24"},{"lineNumber":25,"author":{"gitId":"aditi2313"},"content":"     * @param id A valid address.","lastModifiedDate":"2022-03-09"},{"lineNumber":26,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-24"},{"lineNumber":27,"author":{"gitId":"aditi2313"},"content":"    public Id(String id) {","lastModifiedDate":"2022-03-09"},{"lineNumber":28,"author":{"gitId":"aditi2313"},"content":"        requireNonNull(id);","lastModifiedDate":"2022-03-09"},{"lineNumber":29,"author":{"gitId":"aditi2313"},"content":"        checkArgument(isValidId(id), MESSAGE_CONSTRAINTS);","lastModifiedDate":"2022-03-09"},{"lineNumber":30,"author":{"gitId":"aditi2313"},"content":"        value \u003d id;","lastModifiedDate":"2022-03-09"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":32,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-24"},{"lineNumber":34,"author":{"gitId":"-"},"content":"     * Returns true if a given string is a valid email.","lastModifiedDate":"2018-04-05"},{"lineNumber":35,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-24"},{"lineNumber":36,"author":{"gitId":"aditi2313"},"content":"    public static boolean isValidId(String test) {","lastModifiedDate":"2022-03-09"},{"lineNumber":37,"author":{"gitId":"aditi2313"},"content":"        String[] idArray \u003d test.split(\"\");","lastModifiedDate":"2022-03-10"},{"lineNumber":38,"author":{"gitId":"aditi2313"},"content":"        return ((idArray.length \u003d\u003d 9) \u0026\u0026 idArray[0].equals(\"A\") \u0026\u0026 test.matches(VALIDATION_REGEX));","lastModifiedDate":"2022-03-10"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":40,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-24"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    public String toString() {","lastModifiedDate":"2016-08-24"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        return value;","lastModifiedDate":"2016-08-24"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":45,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-24"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2016-08-24"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        return other \u003d\u003d this // short circuit if same object","lastModifiedDate":"2016-08-24"},{"lineNumber":49,"author":{"gitId":"aditi2313"},"content":"                || (other instanceof Id // instanceof handles nulls","lastModifiedDate":"2022-03-09"},{"lineNumber":50,"author":{"gitId":"aditi2313"},"content":"                \u0026\u0026 value.equals(((Id) other).value)); // state check","lastModifiedDate":"2022-03-09"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":52,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":53,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-24"},{"lineNumber":54,"author":{"gitId":"-"},"content":"    public int hashCode() {","lastModifiedDate":"2016-08-24"},{"lineNumber":55,"author":{"gitId":"-"},"content":"        return value.hashCode();","lastModifiedDate":"2016-08-24"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":57,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":58,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-24"}],"authorContributionMap":{"-":45,"aditi2313":13}},{"path":"src/main/java/seedu/address/model/person/Name.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.model.person;","lastModifiedDate":"2016-08-24"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2017-05-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static seedu.address.commons.util.AppUtil.checkArgument;","lastModifiedDate":"2017-05-30"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":6,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-24"},{"lineNumber":7,"author":{"gitId":"-"},"content":" * Represents a Person\u0027s name in the address book.","lastModifiedDate":"2016-08-24"},{"lineNumber":8,"author":{"gitId":"-"},"content":" * Guarantees: immutable; is valid as declared in {@link #isValidName(String)}","lastModifiedDate":"2016-08-24"},{"lineNumber":9,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-24"},{"lineNumber":10,"author":{"gitId":"-"},"content":"public class Name {","lastModifiedDate":"2016-08-24"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_CONSTRAINTS \u003d","lastModifiedDate":"2018-09-22"},{"lineNumber":13,"author":{"gitId":"aditi2313"},"content":"            \"Names should only contain upto a max of 40 alphanumeric characters and spaces, and should not be blank.\";","lastModifiedDate":"2022-03-10"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-16"},{"lineNumber":15,"author":{"gitId":"-"},"content":"    /*","lastModifiedDate":"2017-01-16"},{"lineNumber":16,"author":{"gitId":"-"},"content":"     * The first character of the address must not be a whitespace,","lastModifiedDate":"2017-01-16"},{"lineNumber":17,"author":{"gitId":"-"},"content":"     * otherwise \" \" (a blank string) becomes a valid input.","lastModifiedDate":"2017-01-16"},{"lineNumber":18,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-01-16"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    public static final String VALIDATION_REGEX \u003d \"[\\\\p{Alnum}][\\\\p{Alnum} ]*\";","lastModifiedDate":"2022-03-10"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    public final String fullName;","lastModifiedDate":"2016-08-24"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-24"},{"lineNumber":24,"author":{"gitId":"-"},"content":"     * Constructs a {@code Name}.","lastModifiedDate":"2017-05-30"},{"lineNumber":25,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2016-08-24"},{"lineNumber":26,"author":{"gitId":"-"},"content":"     * @param name A valid name.","lastModifiedDate":"2017-05-30"},{"lineNumber":27,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-24"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    public Name(String name) {","lastModifiedDate":"2017-05-30"},{"lineNumber":29,"author":{"gitId":"-"},"content":"        requireNonNull(name);","lastModifiedDate":"2017-05-15"},{"lineNumber":30,"author":{"gitId":"-"},"content":"        checkArgument(isValidName(name), MESSAGE_CONSTRAINTS);","lastModifiedDate":"2018-09-22"},{"lineNumber":31,"author":{"gitId":"-"},"content":"        fullName \u003d name;","lastModifiedDate":"2018-08-14"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-24"},{"lineNumber":35,"author":{"gitId":"-"},"content":"     * Returns true if a given string is a valid name.","lastModifiedDate":"2018-04-05"},{"lineNumber":36,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-24"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    public static boolean isValidName(String test) {","lastModifiedDate":"2016-08-24"},{"lineNumber":38,"author":{"gitId":"aditi2313"},"content":"        String[] nameArray \u003d test.split(\"\");","lastModifiedDate":"2022-03-10"},{"lineNumber":39,"author":{"gitId":"aditi2313"},"content":"        return ((nameArray.length \u003c 40) \u0026\u0026 test.matches(VALIDATION_REGEX));","lastModifiedDate":"2022-03-10"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":42,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-24"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    public String toString() {","lastModifiedDate":"2016-08-24"},{"lineNumber":45,"author":{"gitId":"-"},"content":"        return fullName;","lastModifiedDate":"2016-08-24"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":47,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-24"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2016-08-24"},{"lineNumber":50,"author":{"gitId":"-"},"content":"        return other \u003d\u003d this // short circuit if same object","lastModifiedDate":"2016-08-24"},{"lineNumber":51,"author":{"gitId":"-"},"content":"                || (other instanceof Name // instanceof handles nulls","lastModifiedDate":"2016-08-24"},{"lineNumber":52,"author":{"gitId":"-"},"content":"                \u0026\u0026 fullName.equals(((Name) other).fullName)); // state check","lastModifiedDate":"2018-08-14"},{"lineNumber":53,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":54,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-24"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    public int hashCode() {","lastModifiedDate":"2016-08-24"},{"lineNumber":57,"author":{"gitId":"-"},"content":"        return fullName.hashCode();","lastModifiedDate":"2016-08-24"},{"lineNumber":58,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":59,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":60,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-24"}],"authorContributionMap":{"-":57,"aditi2313":3}},{"path":"src/main/java/seedu/address/model/person/NameContainsKeywordsPredicate.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.model.person;","lastModifiedDate":"2017-06-12"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.util.List;","lastModifiedDate":"2017-06-12"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import java.util.function.Predicate;","lastModifiedDate":"2017-06-12"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import seedu.address.commons.util.StringUtil;","lastModifiedDate":"2017-06-12"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":8,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-06-12"},{"lineNumber":9,"author":{"gitId":"-"},"content":" * Tests that a {@code Person}\u0027s {@code Name} matches any of the keywords given.","lastModifiedDate":"2018-01-10"},{"lineNumber":10,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-06-12"},{"lineNumber":11,"author":{"gitId":"aditi2313"},"content":"public class NameContainsKeywordsPredicate implements Predicate\u003cPatron\u003e {","lastModifiedDate":"2022-03-09"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    private final List\u003cString\u003e keywords;","lastModifiedDate":"2017-06-12"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":14,"author":{"gitId":"-"},"content":"    public NameContainsKeywordsPredicate(List\u003cString\u003e keywords) {","lastModifiedDate":"2017-06-12"},{"lineNumber":15,"author":{"gitId":"-"},"content":"        this.keywords \u003d keywords;","lastModifiedDate":"2017-06-12"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-12"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2017-06-12"},{"lineNumber":19,"author":{"gitId":"aditi2313"},"content":"    public boolean test(Patron person) {","lastModifiedDate":"2022-03-09"},{"lineNumber":20,"author":{"gitId":"-"},"content":"        return keywords.stream()","lastModifiedDate":"2017-06-12"},{"lineNumber":21,"author":{"gitId":"-"},"content":"                .anyMatch(keyword -\u003e StringUtil.containsWordIgnoreCase(person.getName().fullName, keyword));","lastModifiedDate":"2017-06-12"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-12"},{"lineNumber":23,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2017-06-12"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2017-06-12"},{"lineNumber":26,"author":{"gitId":"-"},"content":"        return other \u003d\u003d this // short circuit if same object","lastModifiedDate":"2017-06-12"},{"lineNumber":27,"author":{"gitId":"-"},"content":"                || (other instanceof NameContainsKeywordsPredicate // instanceof handles nulls","lastModifiedDate":"2017-06-12"},{"lineNumber":28,"author":{"gitId":"-"},"content":"                \u0026\u0026 keywords.equals(((NameContainsKeywordsPredicate) other).keywords)); // state check","lastModifiedDate":"2018-08-14"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-12"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":31,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-06-12"}],"authorContributionMap":{"-":29,"aditi2313":2}},{"path":"src/main/java/seedu/address/model/person/Patron.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.model.person;","lastModifiedDate":"2016-08-24"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static seedu.address.commons.util.CollectionUtil.requireAllNonNull;","lastModifiedDate":"2017-05-19"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.util.Collections;","lastModifiedDate":"2017-03-07"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.util.HashSet;","lastModifiedDate":"2018-03-26"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import java.util.Objects;","lastModifiedDate":"2017-01-19"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import java.util.Set;","lastModifiedDate":"2017-03-07"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import seedu.address.model.tag.Tag;","lastModifiedDate":"2017-03-07"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":12,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-24"},{"lineNumber":13,"author":{"gitId":"-"},"content":" * Represents a Person in the address book.","lastModifiedDate":"2016-08-24"},{"lineNumber":14,"author":{"gitId":"-"},"content":" * Guarantees: details are present and not null, field values are validated, immutable.","lastModifiedDate":"2017-12-20"},{"lineNumber":15,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-24"},{"lineNumber":16,"author":{"gitId":"aditi2313"},"content":"public class Patron {","lastModifiedDate":"2022-03-09"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    // Identity fields","lastModifiedDate":"2018-04-19"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    private final Name name;","lastModifiedDate":"2017-12-20"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    private final Phone phone;","lastModifiedDate":"2017-12-20"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    private final Email email;","lastModifiedDate":"2017-12-20"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    // Data fields","lastModifiedDate":"2018-04-19"},{"lineNumber":24,"author":{"gitId":"aditi2313"},"content":"    private final Id id;","lastModifiedDate":"2022-03-09"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    private final Set\u003cTag\u003e tags \u003d new HashSet\u003c\u003e();","lastModifiedDate":"2018-03-26"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-24"},{"lineNumber":28,"author":{"gitId":"-"},"content":"     * Every field must be present and not null.","lastModifiedDate":"2016-08-24"},{"lineNumber":29,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-24"},{"lineNumber":30,"author":{"gitId":"aditi2313"},"content":"    public Patron(Name name, Phone phone, Email email, Id id, Set\u003cTag\u003e tags) {","lastModifiedDate":"2022-03-09"},{"lineNumber":31,"author":{"gitId":"aditi2313"},"content":"        requireAllNonNull(name, phone, email, id, tags);","lastModifiedDate":"2022-03-09"},{"lineNumber":32,"author":{"gitId":"-"},"content":"        this.name \u003d name;","lastModifiedDate":"2017-12-20"},{"lineNumber":33,"author":{"gitId":"-"},"content":"        this.phone \u003d phone;","lastModifiedDate":"2017-12-20"},{"lineNumber":34,"author":{"gitId":"-"},"content":"        this.email \u003d email;","lastModifiedDate":"2017-12-20"},{"lineNumber":35,"author":{"gitId":"aditi2313"},"content":"        this.id \u003d id;","lastModifiedDate":"2022-03-09"},{"lineNumber":36,"author":{"gitId":"-"},"content":"        this.tags.addAll(tags);","lastModifiedDate":"2018-03-26"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":38,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    public Name getName() {","lastModifiedDate":"2017-07-12"},{"lineNumber":40,"author":{"gitId":"-"},"content":"        return name;","lastModifiedDate":"2017-12-20"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":42,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    public Phone getPhone() {","lastModifiedDate":"2017-07-12"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        return phone;","lastModifiedDate":"2017-12-20"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":46,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    public Email getEmail() {","lastModifiedDate":"2017-07-12"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        return email;","lastModifiedDate":"2017-12-20"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":50,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":51,"author":{"gitId":"aditi2313"},"content":"    public Id getId() {","lastModifiedDate":"2022-03-09"},{"lineNumber":52,"author":{"gitId":"aditi2313"},"content":"        return id;","lastModifiedDate":"2022-03-09"},{"lineNumber":53,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-07-12"},{"lineNumber":54,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-12"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-03-07"},{"lineNumber":56,"author":{"gitId":"-"},"content":"     * Returns an immutable tag set, which throws {@code UnsupportedOperationException}","lastModifiedDate":"2017-03-07"},{"lineNumber":57,"author":{"gitId":"-"},"content":"     * if modification is attempted.","lastModifiedDate":"2017-03-07"},{"lineNumber":58,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-03-07"},{"lineNumber":59,"author":{"gitId":"-"},"content":"    public Set\u003cTag\u003e getTags() {","lastModifiedDate":"2017-03-07"},{"lineNumber":60,"author":{"gitId":"-"},"content":"        return Collections.unmodifiableSet(tags);","lastModifiedDate":"2018-03-26"},{"lineNumber":61,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-21"},{"lineNumber":62,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":63,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-04-19"},{"lineNumber":64,"author":{"gitId":"-"},"content":"     * Returns true if both persons have the same name.","lastModifiedDate":"2020-12-18"},{"lineNumber":65,"author":{"gitId":"-"},"content":"     * This defines a weaker notion of equality between two persons.","lastModifiedDate":"2018-04-19"},{"lineNumber":66,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-04-19"},{"lineNumber":67,"author":{"gitId":"aditi2313"},"content":"    public boolean isSamePerson(Patron otherPerson) {","lastModifiedDate":"2022-03-09"},{"lineNumber":68,"author":{"gitId":"-"},"content":"        if (otherPerson \u003d\u003d this) {","lastModifiedDate":"2018-04-19"},{"lineNumber":69,"author":{"gitId":"-"},"content":"            return true;","lastModifiedDate":"2018-04-19"},{"lineNumber":70,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-04-19"},{"lineNumber":71,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":72,"author":{"gitId":"-"},"content":"        return otherPerson !\u003d null","lastModifiedDate":"2018-04-19"},{"lineNumber":73,"author":{"gitId":"-"},"content":"                \u0026\u0026 otherPerson.getName().equals(getName());","lastModifiedDate":"2020-12-18"},{"lineNumber":74,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-04-19"},{"lineNumber":75,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":76,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-04-19"},{"lineNumber":77,"author":{"gitId":"-"},"content":"     * Returns true if both persons have the same identity and data fields.","lastModifiedDate":"2018-04-19"},{"lineNumber":78,"author":{"gitId":"-"},"content":"     * This defines a stronger notion of equality between two persons.","lastModifiedDate":"2018-04-19"},{"lineNumber":79,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-04-19"},{"lineNumber":80,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-24"},{"lineNumber":81,"author":{"gitId":"-"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2016-08-24"},{"lineNumber":82,"author":{"gitId":"-"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2018-01-10"},{"lineNumber":83,"author":{"gitId":"-"},"content":"            return true;","lastModifiedDate":"2018-01-10"},{"lineNumber":84,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-01-10"},{"lineNumber":85,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-01-10"},{"lineNumber":86,"author":{"gitId":"aditi2313"},"content":"        if (!(other instanceof Patron)) {","lastModifiedDate":"2022-03-09"},{"lineNumber":87,"author":{"gitId":"-"},"content":"            return false;","lastModifiedDate":"2018-01-10"},{"lineNumber":88,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-01-10"},{"lineNumber":89,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-01-10"},{"lineNumber":90,"author":{"gitId":"aditi2313"},"content":"        Patron otherPerson \u003d (Patron) other;","lastModifiedDate":"2022-03-09"},{"lineNumber":91,"author":{"gitId":"-"},"content":"        return otherPerson.getName().equals(getName())","lastModifiedDate":"2018-08-14"},{"lineNumber":92,"author":{"gitId":"-"},"content":"                \u0026\u0026 otherPerson.getPhone().equals(getPhone())","lastModifiedDate":"2018-08-14"},{"lineNumber":93,"author":{"gitId":"-"},"content":"                \u0026\u0026 otherPerson.getEmail().equals(getEmail())","lastModifiedDate":"2018-08-14"},{"lineNumber":94,"author":{"gitId":"aditi2313"},"content":"                \u0026\u0026 otherPerson.getId().equals(getId())","lastModifiedDate":"2022-03-09"},{"lineNumber":95,"author":{"gitId":"-"},"content":"                \u0026\u0026 otherPerson.getTags().equals(getTags());","lastModifiedDate":"2018-08-14"},{"lineNumber":96,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":97,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":98,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-24"},{"lineNumber":99,"author":{"gitId":"-"},"content":"    public int hashCode() {","lastModifiedDate":"2016-08-24"},{"lineNumber":100,"author":{"gitId":"-"},"content":"        // use this method for custom fields hashing instead of implementing your own","lastModifiedDate":"2016-08-24"},{"lineNumber":101,"author":{"gitId":"aditi2313"},"content":"        return Objects.hash(name, phone, email, id, tags);","lastModifiedDate":"2022-03-09"},{"lineNumber":102,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":103,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":104,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-24"},{"lineNumber":105,"author":{"gitId":"-"},"content":"    public String toString() {","lastModifiedDate":"2016-08-24"},{"lineNumber":106,"author":{"gitId":"-"},"content":"        final StringBuilder builder \u003d new StringBuilder();","lastModifiedDate":"2018-01-10"},{"lineNumber":107,"author":{"gitId":"-"},"content":"        builder.append(getName())","lastModifiedDate":"2018-01-10"},{"lineNumber":108,"author":{"gitId":"-"},"content":"                .append(\"; Phone: \")","lastModifiedDate":"2020-12-11"},{"lineNumber":109,"author":{"gitId":"-"},"content":"                .append(getPhone())","lastModifiedDate":"2018-01-10"},{"lineNumber":110,"author":{"gitId":"-"},"content":"                .append(\"; Email: \")","lastModifiedDate":"2020-12-11"},{"lineNumber":111,"author":{"gitId":"-"},"content":"                .append(getEmail())","lastModifiedDate":"2018-01-10"},{"lineNumber":112,"author":{"gitId":"aditi2313"},"content":"                .append(\"; Id: \")","lastModifiedDate":"2022-03-10"},{"lineNumber":113,"author":{"gitId":"aditi2313"},"content":"                .append(getId());","lastModifiedDate":"2022-03-09"},{"lineNumber":114,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-12-11"},{"lineNumber":115,"author":{"gitId":"-"},"content":"        Set\u003cTag\u003e tags \u003d getTags();","lastModifiedDate":"2020-12-11"},{"lineNumber":116,"author":{"gitId":"-"},"content":"        if (!tags.isEmpty()) {","lastModifiedDate":"2020-12-11"},{"lineNumber":117,"author":{"gitId":"-"},"content":"            builder.append(\"; Tags: \");","lastModifiedDate":"2020-12-11"},{"lineNumber":118,"author":{"gitId":"-"},"content":"            tags.forEach(builder::append);","lastModifiedDate":"2020-12-11"},{"lineNumber":119,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2020-12-11"},{"lineNumber":120,"author":{"gitId":"-"},"content":"        return builder.toString();","lastModifiedDate":"2018-01-10"},{"lineNumber":121,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":122,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":123,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-24"}],"authorContributionMap":{"-":109,"aditi2313":14}},{"path":"src/main/java/seedu/address/model/person/UniquePersonList.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.model.person;","lastModifiedDate":"2016-08-24"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2017-05-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static seedu.address.commons.util.CollectionUtil.requireAllNonNull;","lastModifiedDate":"2018-01-10"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-15"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.util.Iterator;","lastModifiedDate":"2017-01-19"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import java.util.List;","lastModifiedDate":"2017-01-19"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import javafx.collections.FXCollections;","lastModifiedDate":"2016-08-24"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2016-08-24"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import seedu.address.model.person.exceptions.DuplicatePersonException;","lastModifiedDate":"2017-06-09"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import seedu.address.model.person.exceptions.PersonNotFoundException;","lastModifiedDate":"2017-06-09"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":14,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-24"},{"lineNumber":15,"author":{"gitId":"-"},"content":" * A list of persons that enforces uniqueness between its elements and does not allow nulls.","lastModifiedDate":"2016-09-22"},{"lineNumber":16,"author":{"gitId":"-"},"content":" * A person is considered unique by comparing using {@code Person#isSamePerson(Person)}. As such, adding and updating of","lastModifiedDate":"2018-04-19"},{"lineNumber":17,"author":{"gitId":"-"},"content":" * persons uses Person#isSamePerson(Person) for equality so as to ensure that the person being added or updated is","lastModifiedDate":"2018-04-19"},{"lineNumber":18,"author":{"gitId":"-"},"content":" * unique in terms of identity in the UniquePersonList. However, the removal of a person uses Person#equals(Object) so","lastModifiedDate":"2018-04-19"},{"lineNumber":19,"author":{"gitId":"-"},"content":" * as to ensure that the person with exactly the same fields will be removed.","lastModifiedDate":"2018-04-19"},{"lineNumber":20,"author":{"gitId":"-"},"content":" *","lastModifiedDate":"2016-08-24"},{"lineNumber":21,"author":{"gitId":"-"},"content":" * Supports a minimal set of list operations.","lastModifiedDate":"2016-09-22"},{"lineNumber":22,"author":{"gitId":"-"},"content":" *","lastModifiedDate":"2016-08-24"},{"lineNumber":23,"author":{"gitId":"aditi2313"},"content":" * @see Patron#isSamePerson(Patron)","lastModifiedDate":"2022-03-09"},{"lineNumber":24,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-24"},{"lineNumber":25,"author":{"gitId":"aditi2313"},"content":"public class UniquePersonList implements Iterable\u003cPatron\u003e {","lastModifiedDate":"2022-03-09"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":27,"author":{"gitId":"aditi2313"},"content":"    private final ObservableList\u003cPatron\u003e internalList \u003d FXCollections.observableArrayList();","lastModifiedDate":"2022-03-09"},{"lineNumber":28,"author":{"gitId":"aditi2313"},"content":"    private final ObservableList\u003cPatron\u003e internalUnmodifiableList \u003d","lastModifiedDate":"2022-03-09"},{"lineNumber":29,"author":{"gitId":"-"},"content":"            FXCollections.unmodifiableObservableList(internalList);","lastModifiedDate":"2018-12-09"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-19"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-24"},{"lineNumber":32,"author":{"gitId":"-"},"content":"     * Returns true if the list contains an equivalent person as the given argument.","lastModifiedDate":"2016-09-22"},{"lineNumber":33,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-24"},{"lineNumber":34,"author":{"gitId":"aditi2313"},"content":"    public boolean contains(Patron toCheck) {","lastModifiedDate":"2022-03-09"},{"lineNumber":35,"author":{"gitId":"-"},"content":"        requireNonNull(toCheck);","lastModifiedDate":"2017-05-15"},{"lineNumber":36,"author":{"gitId":"-"},"content":"        return internalList.stream().anyMatch(toCheck::isSamePerson);","lastModifiedDate":"2018-04-19"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":38,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-24"},{"lineNumber":40,"author":{"gitId":"-"},"content":"     * Adds a person to the list.","lastModifiedDate":"2016-08-24"},{"lineNumber":41,"author":{"gitId":"-"},"content":"     * The person must not already exist in the list.","lastModifiedDate":"2018-08-07"},{"lineNumber":42,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-24"},{"lineNumber":43,"author":{"gitId":"aditi2313"},"content":"    public void add(Patron toAdd) {","lastModifiedDate":"2022-03-09"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        requireNonNull(toAdd);","lastModifiedDate":"2017-05-15"},{"lineNumber":45,"author":{"gitId":"-"},"content":"        if (contains(toAdd)) {","lastModifiedDate":"2016-08-24"},{"lineNumber":46,"author":{"gitId":"-"},"content":"            throw new DuplicatePersonException();","lastModifiedDate":"2016-08-24"},{"lineNumber":47,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-08-24"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        internalList.add(toAdd);","lastModifiedDate":"2018-01-10"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":50,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-12-13"},{"lineNumber":52,"author":{"gitId":"-"},"content":"     * Replaces the person {@code target} in the list with {@code editedPerson}.","lastModifiedDate":"2017-06-07"},{"lineNumber":53,"author":{"gitId":"-"},"content":"     * {@code target} must exist in the list.","lastModifiedDate":"2018-08-07"},{"lineNumber":54,"author":{"gitId":"-"},"content":"     * The person identity of {@code editedPerson} must not be the same as another existing person in the list.","lastModifiedDate":"2018-08-07"},{"lineNumber":55,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-12-13"},{"lineNumber":56,"author":{"gitId":"aditi2313"},"content":"    public void setPerson(Patron target, Patron editedPerson) {","lastModifiedDate":"2022-03-09"},{"lineNumber":57,"author":{"gitId":"-"},"content":"        requireAllNonNull(target, editedPerson);","lastModifiedDate":"2018-08-08"},{"lineNumber":58,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-13"},{"lineNumber":59,"author":{"gitId":"-"},"content":"        int index \u003d internalList.indexOf(target);","lastModifiedDate":"2017-06-07"},{"lineNumber":60,"author":{"gitId":"-"},"content":"        if (index \u003d\u003d -1) {","lastModifiedDate":"2017-06-07"},{"lineNumber":61,"author":{"gitId":"-"},"content":"            throw new PersonNotFoundException();","lastModifiedDate":"2017-06-07"},{"lineNumber":62,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-06-07"},{"lineNumber":63,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-07"},{"lineNumber":64,"author":{"gitId":"-"},"content":"        if (!target.isSamePerson(editedPerson) \u0026\u0026 contains(editedPerson)) {","lastModifiedDate":"2018-04-19"},{"lineNumber":65,"author":{"gitId":"-"},"content":"            throw new DuplicatePersonException();","lastModifiedDate":"2016-12-13"},{"lineNumber":66,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-12-13"},{"lineNumber":67,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-13"},{"lineNumber":68,"author":{"gitId":"-"},"content":"        internalList.set(index, editedPerson);","lastModifiedDate":"2018-01-10"},{"lineNumber":69,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-13"},{"lineNumber":70,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-13"},{"lineNumber":71,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-24"},{"lineNumber":72,"author":{"gitId":"-"},"content":"     * Removes the equivalent person from the list.","lastModifiedDate":"2016-08-24"},{"lineNumber":73,"author":{"gitId":"-"},"content":"     * The person must exist in the list.","lastModifiedDate":"2018-08-07"},{"lineNumber":74,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-24"},{"lineNumber":75,"author":{"gitId":"aditi2313"},"content":"    public void remove(Patron toRemove) {","lastModifiedDate":"2022-03-09"},{"lineNumber":76,"author":{"gitId":"-"},"content":"        requireNonNull(toRemove);","lastModifiedDate":"2017-05-15"},{"lineNumber":77,"author":{"gitId":"-"},"content":"        if (!internalList.remove(toRemove)) {","lastModifiedDate":"2018-02-28"},{"lineNumber":78,"author":{"gitId":"-"},"content":"            throw new PersonNotFoundException();","lastModifiedDate":"2016-08-24"},{"lineNumber":79,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-08-24"},{"lineNumber":80,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":81,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":82,"author":{"gitId":"-"},"content":"    public void setPersons(UniquePersonList replacement) {","lastModifiedDate":"2016-10-19"},{"lineNumber":83,"author":{"gitId":"-"},"content":"        requireNonNull(replacement);","lastModifiedDate":"2018-08-08"},{"lineNumber":84,"author":{"gitId":"-"},"content":"        internalList.setAll(replacement.internalList);","lastModifiedDate":"2018-08-14"},{"lineNumber":85,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-10-19"},{"lineNumber":86,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-19"},{"lineNumber":87,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-08-07"},{"lineNumber":88,"author":{"gitId":"-"},"content":"     * Replaces the contents of this list with {@code persons}.","lastModifiedDate":"2018-08-07"},{"lineNumber":89,"author":{"gitId":"-"},"content":"     * {@code persons} must not contain duplicate persons.","lastModifiedDate":"2018-08-07"},{"lineNumber":90,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-08-07"},{"lineNumber":91,"author":{"gitId":"aditi2313"},"content":"    public void setPersons(List\u003cPatron\u003e persons) {","lastModifiedDate":"2022-03-09"},{"lineNumber":92,"author":{"gitId":"-"},"content":"        requireAllNonNull(persons);","lastModifiedDate":"2018-01-10"},{"lineNumber":93,"author":{"gitId":"-"},"content":"        if (!personsAreUnique(persons)) {","lastModifiedDate":"2018-04-19"},{"lineNumber":94,"author":{"gitId":"-"},"content":"            throw new DuplicatePersonException();","lastModifiedDate":"2018-01-21"},{"lineNumber":95,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-12-24"},{"lineNumber":96,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-01-21"},{"lineNumber":97,"author":{"gitId":"-"},"content":"        internalList.setAll(persons);","lastModifiedDate":"2018-08-14"},{"lineNumber":98,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-24"},{"lineNumber":99,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-24"},{"lineNumber":100,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-09-01"},{"lineNumber":101,"author":{"gitId":"-"},"content":"     * Returns the backing list as an unmodifiable {@code ObservableList}.","lastModifiedDate":"2017-09-01"},{"lineNumber":102,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-09-01"},{"lineNumber":103,"author":{"gitId":"aditi2313"},"content":"    public ObservableList\u003cPatron\u003e asUnmodifiableObservableList() {","lastModifiedDate":"2022-03-09"},{"lineNumber":104,"author":{"gitId":"-"},"content":"        return internalUnmodifiableList;","lastModifiedDate":"2018-12-09"},{"lineNumber":105,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-22"},{"lineNumber":106,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":107,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-24"},{"lineNumber":108,"author":{"gitId":"aditi2313"},"content":"    public Iterator\u003cPatron\u003e iterator() {","lastModifiedDate":"2022-03-09"},{"lineNumber":109,"author":{"gitId":"-"},"content":"        return internalList.iterator();","lastModifiedDate":"2016-08-24"},{"lineNumber":110,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":111,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":112,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-21"},{"lineNumber":113,"author":{"gitId":"-"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2016-09-21"},{"lineNumber":114,"author":{"gitId":"-"},"content":"        return other \u003d\u003d this // short circuit if same object","lastModifiedDate":"2016-09-21"},{"lineNumber":115,"author":{"gitId":"-"},"content":"                || (other instanceof UniquePersonList // instanceof handles nulls","lastModifiedDate":"2016-09-21"},{"lineNumber":116,"author":{"gitId":"-"},"content":"                        \u0026\u0026 internalList.equals(((UniquePersonList) other).internalList));","lastModifiedDate":"2018-08-14"},{"lineNumber":117,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-21"},{"lineNumber":118,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":119,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-21"},{"lineNumber":120,"author":{"gitId":"-"},"content":"    public int hashCode() {","lastModifiedDate":"2016-09-21"},{"lineNumber":121,"author":{"gitId":"-"},"content":"        return internalList.hashCode();","lastModifiedDate":"2016-09-21"},{"lineNumber":122,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-21"},{"lineNumber":123,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":124,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-04-19"},{"lineNumber":125,"author":{"gitId":"-"},"content":"     * Returns true if {@code persons} contains only unique persons.","lastModifiedDate":"2018-04-19"},{"lineNumber":126,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-04-19"},{"lineNumber":127,"author":{"gitId":"aditi2313"},"content":"    private boolean personsAreUnique(List\u003cPatron\u003e persons) {","lastModifiedDate":"2022-03-09"},{"lineNumber":128,"author":{"gitId":"-"},"content":"        for (int i \u003d 0; i \u003c persons.size() - 1; i++) {","lastModifiedDate":"2018-04-19"},{"lineNumber":129,"author":{"gitId":"-"},"content":"            for (int j \u003d i + 1; j \u003c persons.size(); j++) {","lastModifiedDate":"2018-04-19"},{"lineNumber":130,"author":{"gitId":"-"},"content":"                if (persons.get(i).isSamePerson(persons.get(j))) {","lastModifiedDate":"2018-04-19"},{"lineNumber":131,"author":{"gitId":"-"},"content":"                    return false;","lastModifiedDate":"2018-04-19"},{"lineNumber":132,"author":{"gitId":"-"},"content":"                }","lastModifiedDate":"2018-04-19"},{"lineNumber":133,"author":{"gitId":"-"},"content":"            }","lastModifiedDate":"2018-04-19"},{"lineNumber":134,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-04-19"},{"lineNumber":135,"author":{"gitId":"-"},"content":"        return true;","lastModifiedDate":"2018-04-19"},{"lineNumber":136,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-04-19"},{"lineNumber":137,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-24"}],"authorContributionMap":{"-":125,"aditi2313":12}},{"path":"src/main/java/seedu/address/model/util/SampleDataUtil.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.model.util;","lastModifiedDate":"2016-12-20"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-20"},{"lineNumber":3,"author":{"gitId":"bingsen0806"},"content":"import java.util.ArrayList;","lastModifiedDate":"2022-03-09"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import java.util.Arrays;","lastModifiedDate":"2018-01-21"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.util.Set;","lastModifiedDate":"2017-03-14"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.util.stream.Collectors;","lastModifiedDate":"2018-01-21"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-14"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import seedu.address.model.AddressBook;","lastModifiedDate":"2016-12-20"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import seedu.address.model.ReadOnlyAddressBook;","lastModifiedDate":"2016-12-20"},{"lineNumber":10,"author":{"gitId":"bingsen0806"},"content":"import seedu.address.model.book.Author;","lastModifiedDate":"2022-03-09"},{"lineNumber":11,"author":{"gitId":"bingsen0806"},"content":"import seedu.address.model.book.Book;","lastModifiedDate":"2022-03-09"},{"lineNumber":12,"author":{"gitId":"bingsen0806"},"content":"import seedu.address.model.book.BookName;","lastModifiedDate":"2022-03-09"},{"lineNumber":13,"author":{"gitId":"bingsen0806"},"content":"import seedu.address.model.book.Isbn;","lastModifiedDate":"2022-03-09"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Email;","lastModifiedDate":"2016-12-20"},{"lineNumber":15,"author":{"gitId":"aditi2313"},"content":"import seedu.address.model.person.Id;","lastModifiedDate":"2022-03-11"},{"lineNumber":16,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Name;","lastModifiedDate":"2016-12-20"},{"lineNumber":17,"author":{"gitId":"aditi2313"},"content":"import seedu.address.model.person.Patron;","lastModifiedDate":"2022-03-09"},{"lineNumber":18,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Phone;","lastModifiedDate":"2016-12-20"},{"lineNumber":19,"author":{"gitId":"-"},"content":"import seedu.address.model.tag.Tag;","lastModifiedDate":"2017-03-14"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-20"},{"lineNumber":21,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-08-16"},{"lineNumber":22,"author":{"gitId":"-"},"content":" * Contains utility methods for populating {@code AddressBook} with sample data.","lastModifiedDate":"2017-08-16"},{"lineNumber":23,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-08-16"},{"lineNumber":24,"author":{"gitId":"-"},"content":"public class SampleDataUtil {","lastModifiedDate":"2016-12-20"},{"lineNumber":25,"author":{"gitId":"bingsen0806"},"content":"","lastModifiedDate":"2022-03-11"},{"lineNumber":26,"author":{"gitId":"bingsen0806"},"content":"    public static final long SAMPLE_BOOK_CREATED_TIME \u003d 1646989653388L;","lastModifiedDate":"2022-03-11"},{"lineNumber":27,"author":{"gitId":"bingsen0806"},"content":"","lastModifiedDate":"2022-03-11"},{"lineNumber":28,"author":{"gitId":"aditi2313"},"content":"    public static Patron[] getSamplePersons() {","lastModifiedDate":"2022-03-09"},{"lineNumber":29,"author":{"gitId":"aditi2313"},"content":"        return new Patron[] {","lastModifiedDate":"2022-03-09"},{"lineNumber":30,"author":{"gitId":"aditi2313"},"content":"            new Patron(new Name(\"Alex Yeoh\"), new Phone(\"87438807\"), new Email(\"alexyeoh@example.com\"),","lastModifiedDate":"2022-03-09"},{"lineNumber":31,"author":{"gitId":"aditi2313"},"content":"                new Id(\"A0123456H\"),","lastModifiedDate":"2022-03-10"},{"lineNumber":32,"author":{"gitId":"-"},"content":"                getTagSet(\"friends\")),","lastModifiedDate":"2017-03-14"},{"lineNumber":33,"author":{"gitId":"aditi2313"},"content":"            new Patron(new Name(\"Bernice Yu\"), new Phone(\"99272758\"), new Email(\"berniceyu@example.com\"),","lastModifiedDate":"2022-03-09"},{"lineNumber":34,"author":{"gitId":"aditi2313"},"content":"                new Id(\"A0123456H\"),","lastModifiedDate":"2022-03-10"},{"lineNumber":35,"author":{"gitId":"-"},"content":"                getTagSet(\"colleagues\", \"friends\")),","lastModifiedDate":"2017-03-14"},{"lineNumber":36,"author":{"gitId":"aditi2313"},"content":"            new Patron(new Name(\"Charlotte Oliveiro\"), new Phone(\"93210283\"), new Email(\"charlotte@example.com\"),","lastModifiedDate":"2022-03-09"},{"lineNumber":37,"author":{"gitId":"aditi2313"},"content":"                new Id(\"A0123456H\"),","lastModifiedDate":"2022-03-10"},{"lineNumber":38,"author":{"gitId":"-"},"content":"                getTagSet(\"neighbours\")),","lastModifiedDate":"2017-03-14"},{"lineNumber":39,"author":{"gitId":"aditi2313"},"content":"            new Patron(new Name(\"David Li\"), new Phone(\"91031282\"), new Email(\"lidavid@example.com\"),","lastModifiedDate":"2022-03-09"},{"lineNumber":40,"author":{"gitId":"aditi2313"},"content":"                new Id(\"A0123456H\"),","lastModifiedDate":"2022-03-10"},{"lineNumber":41,"author":{"gitId":"-"},"content":"                getTagSet(\"family\")),","lastModifiedDate":"2017-03-14"},{"lineNumber":42,"author":{"gitId":"aditi2313"},"content":"            new Patron(new Name(\"Irfan Ibrahim\"), new Phone(\"92492021\"), new Email(\"irfan@example.com\"),","lastModifiedDate":"2022-03-09"},{"lineNumber":43,"author":{"gitId":"aditi2313"},"content":"                new Id(\"A0123456H\"),","lastModifiedDate":"2022-03-10"},{"lineNumber":44,"author":{"gitId":"-"},"content":"                getTagSet(\"classmates\")),","lastModifiedDate":"2017-03-14"},{"lineNumber":45,"author":{"gitId":"aditi2313"},"content":"            new Patron(new Name(\"Roy Balakrishnan\"), new Phone(\"92624417\"), new Email(\"royb@example.com\"),","lastModifiedDate":"2022-03-09"},{"lineNumber":46,"author":{"gitId":"aditi2313"},"content":"                new Id(\"A0123456H\"),","lastModifiedDate":"2022-03-10"},{"lineNumber":47,"author":{"gitId":"-"},"content":"                getTagSet(\"colleagues\"))","lastModifiedDate":"2017-03-14"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        };","lastModifiedDate":"2016-12-20"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-20"},{"lineNumber":50,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-20"},{"lineNumber":51,"author":{"gitId":"bingsen0806"},"content":"    public static Book[] getSampleBooks() {","lastModifiedDate":"2022-03-09"},{"lineNumber":52,"author":{"gitId":"bingsen0806"},"content":"        return new Book[] {","lastModifiedDate":"2022-03-09"},{"lineNumber":53,"author":{"gitId":"bingsen0806"},"content":"            new Book(new BookName(\"Harry Potter and The Philosopher\u0027s Stone\"), new Isbn(\"978-71617-018-8-5\"),","lastModifiedDate":"2022-03-09"},{"lineNumber":54,"author":{"gitId":"bingsen0806"},"content":"                getAuthorList(\"J. K. Rowling\"),","lastModifiedDate":"2022-03-09"},{"lineNumber":55,"author":{"gitId":"bingsen0806"},"content":"                getTagSet(\"Adventure\", \"Magic\"), SAMPLE_BOOK_CREATED_TIME),","lastModifiedDate":"2022-03-11"},{"lineNumber":56,"author":{"gitId":"bingsen0806"},"content":"            new Book(new BookName(\"The Hunger Games: MockingJay\"), new Isbn(\"9786029293883\"),","lastModifiedDate":"2022-03-09"},{"lineNumber":57,"author":{"gitId":"bingsen0806"},"content":"                getAuthorList(\"Suzanne Collins\"),","lastModifiedDate":"2022-03-09"},{"lineNumber":58,"author":{"gitId":"bingsen0806"},"content":"                getTagSet(\"Thriller\", \"Scifi\", \"Adventure\"), SAMPLE_BOOK_CREATED_TIME),","lastModifiedDate":"2022-03-11"},{"lineNumber":59,"author":{"gitId":"bingsen0806"},"content":"            new Book(new BookName(\"Introduction to Algorithms\"), new Isbn(\"978-03-71-88850-6\"),","lastModifiedDate":"2022-03-09"},{"lineNumber":60,"author":{"gitId":"bingsen0806"},"content":"                getAuthorList(\"Cormen\", \"Leiserson\", \"Rivest\", \"Stein\"),","lastModifiedDate":"2022-03-09"},{"lineNumber":61,"author":{"gitId":"bingsen0806"},"content":"                getTagSet(\"ComputerScience\", \"Mathematics\"), SAMPLE_BOOK_CREATED_TIME),","lastModifiedDate":"2022-03-11"},{"lineNumber":62,"author":{"gitId":"bingsen0806"},"content":"            new Book(new BookName(\"The Little Book of Semaphores\"), new Isbn(\"4992719864\"),","lastModifiedDate":"2022-03-09"},{"lineNumber":63,"author":{"gitId":"bingsen0806"},"content":"                getAuthorList(),","lastModifiedDate":"2022-03-09"},{"lineNumber":64,"author":{"gitId":"bingsen0806"},"content":"                getTagSet(\"ComputerScience\", \"Technology\"), SAMPLE_BOOK_CREATED_TIME),","lastModifiedDate":"2022-03-11"},{"lineNumber":65,"author":{"gitId":"bingsen0806"},"content":"            new Book(new BookName(\"The Maze Runner\"), new Isbn(\"1-474-59282-1\"),","lastModifiedDate":"2022-03-09"},{"lineNumber":66,"author":{"gitId":"bingsen0806"},"content":"                getAuthorList(\"James Dashner1\", \"James Dashner2\", \"James Dashner3\"),","lastModifiedDate":"2022-03-09"},{"lineNumber":67,"author":{"gitId":"bingsen0806"},"content":"                getTagSet(\"Adventure\", \"Romance\", \"Scifi\"), SAMPLE_BOOK_CREATED_TIME),","lastModifiedDate":"2022-03-11"},{"lineNumber":68,"author":{"gitId":"bingsen0806"},"content":"            new Book(new BookName(\"Artificial Intelligence: A Modern Approach\"), new Isbn(\"9780131038059\"),","lastModifiedDate":"2022-03-09"},{"lineNumber":69,"author":{"gitId":"bingsen0806"},"content":"                getAuthorList(\"Peter Norvig\", \"Stuart J. Russell\"),","lastModifiedDate":"2022-03-09"},{"lineNumber":70,"author":{"gitId":"bingsen0806"},"content":"                getTagSet(\"Technology\"), SAMPLE_BOOK_CREATED_TIME),","lastModifiedDate":"2022-03-11"},{"lineNumber":71,"author":{"gitId":"bingsen0806"},"content":"            new Book(new BookName(\"Cinderella\"), new Isbn(\"9781409580454\"),","lastModifiedDate":"2022-03-09"},{"lineNumber":72,"author":{"gitId":"bingsen0806"},"content":"                getAuthorList(),","lastModifiedDate":"2022-03-09"},{"lineNumber":73,"author":{"gitId":"bingsen0806"},"content":"                getTagSet(), SAMPLE_BOOK_CREATED_TIME)","lastModifiedDate":"2022-03-11"},{"lineNumber":74,"author":{"gitId":"bingsen0806"},"content":"        };","lastModifiedDate":"2022-03-09"},{"lineNumber":75,"author":{"gitId":"bingsen0806"},"content":"    }","lastModifiedDate":"2022-03-09"},{"lineNumber":76,"author":{"gitId":"bingsen0806"},"content":"","lastModifiedDate":"2022-03-09"},{"lineNumber":77,"author":{"gitId":"-"},"content":"    public static ReadOnlyAddressBook getSampleAddressBook() {","lastModifiedDate":"2016-12-20"},{"lineNumber":78,"author":{"gitId":"-"},"content":"        AddressBook sampleAb \u003d new AddressBook();","lastModifiedDate":"2017-04-07"},{"lineNumber":79,"author":{"gitId":"aditi2313"},"content":"        for (Patron samplePerson : getSamplePersons()) {","lastModifiedDate":"2022-03-09"},{"lineNumber":80,"author":{"gitId":"-"},"content":"            sampleAb.addPerson(samplePerson);","lastModifiedDate":"2017-04-07"},{"lineNumber":81,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-12-20"},{"lineNumber":82,"author":{"gitId":"bingsen0806"},"content":"        for (Book sampleBook : getSampleBooks()) {","lastModifiedDate":"2022-03-09"},{"lineNumber":83,"author":{"gitId":"bingsen0806"},"content":"            sampleAb.addBook(sampleBook);","lastModifiedDate":"2022-03-09"},{"lineNumber":84,"author":{"gitId":"bingsen0806"},"content":"        }","lastModifiedDate":"2022-03-09"},{"lineNumber":85,"author":{"gitId":"-"},"content":"        return sampleAb;","lastModifiedDate":"2017-04-07"},{"lineNumber":86,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-20"},{"lineNumber":87,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-14"},{"lineNumber":88,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-03-14"},{"lineNumber":89,"author":{"gitId":"-"},"content":"     * Returns a tag set containing the list of strings given.","lastModifiedDate":"2017-03-14"},{"lineNumber":90,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-03-14"},{"lineNumber":91,"author":{"gitId":"-"},"content":"    public static Set\u003cTag\u003e getTagSet(String... strings) {","lastModifiedDate":"2017-05-30"},{"lineNumber":92,"author":{"gitId":"-"},"content":"        return Arrays.stream(strings)","lastModifiedDate":"2018-01-21"},{"lineNumber":93,"author":{"gitId":"-"},"content":"                .map(Tag::new)","lastModifiedDate":"2018-01-21"},{"lineNumber":94,"author":{"gitId":"-"},"content":"                .collect(Collectors.toSet());","lastModifiedDate":"2018-01-21"},{"lineNumber":95,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-03-14"},{"lineNumber":96,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-14"},{"lineNumber":97,"author":{"gitId":"bingsen0806"},"content":"    /**","lastModifiedDate":"2022-03-09"},{"lineNumber":98,"author":{"gitId":"bingsen0806"},"content":"     * Returns a list of authors containing the list of strings given.","lastModifiedDate":"2022-03-09"},{"lineNumber":99,"author":{"gitId":"bingsen0806"},"content":"     */","lastModifiedDate":"2022-03-09"},{"lineNumber":100,"author":{"gitId":"bingsen0806"},"content":"    public static ArrayList\u003cAuthor\u003e getAuthorList(String... strings) {","lastModifiedDate":"2022-03-09"},{"lineNumber":101,"author":{"gitId":"bingsen0806"},"content":"        return Arrays.stream(strings)","lastModifiedDate":"2022-03-09"},{"lineNumber":102,"author":{"gitId":"bingsen0806"},"content":"                .map(Author::new)","lastModifiedDate":"2022-03-09"},{"lineNumber":103,"author":{"gitId":"bingsen0806"},"content":"                .collect(Collectors.toCollection(ArrayList::new));","lastModifiedDate":"2022-03-09"},{"lineNumber":104,"author":{"gitId":"bingsen0806"},"content":"    }","lastModifiedDate":"2022-03-09"},{"lineNumber":105,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-12-20"}],"authorContributionMap":{"-":43,"bingsen0806":45,"aditi2313":17}},{"path":"src/main/java/seedu/address/storage/JsonAdaptedAuthor.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"bingsen0806"},"content":"package seedu.address.storage;","lastModifiedDate":"2022-03-10"},{"lineNumber":2,"author":{"gitId":"bingsen0806"},"content":"","lastModifiedDate":"2022-03-10"},{"lineNumber":3,"author":{"gitId":"bingsen0806"},"content":"","lastModifiedDate":"2022-03-10"},{"lineNumber":4,"author":{"gitId":"bingsen0806"},"content":"import com.fasterxml.jackson.annotation.JsonCreator;","lastModifiedDate":"2022-03-10"},{"lineNumber":5,"author":{"gitId":"bingsen0806"},"content":"import com.fasterxml.jackson.annotation.JsonValue;","lastModifiedDate":"2022-03-10"},{"lineNumber":6,"author":{"gitId":"bingsen0806"},"content":"","lastModifiedDate":"2022-03-10"},{"lineNumber":7,"author":{"gitId":"bingsen0806"},"content":"import seedu.address.commons.exceptions.IllegalValueException;","lastModifiedDate":"2022-03-10"},{"lineNumber":8,"author":{"gitId":"bingsen0806"},"content":"import seedu.address.model.book.Author;","lastModifiedDate":"2022-03-10"},{"lineNumber":9,"author":{"gitId":"bingsen0806"},"content":"","lastModifiedDate":"2022-03-10"},{"lineNumber":10,"author":{"gitId":"bingsen0806"},"content":"/**","lastModifiedDate":"2022-03-10"},{"lineNumber":11,"author":{"gitId":"bingsen0806"},"content":" * Jackson-friendly version of {@link Author}.","lastModifiedDate":"2022-03-10"},{"lineNumber":12,"author":{"gitId":"bingsen0806"},"content":" */","lastModifiedDate":"2022-03-10"},{"lineNumber":13,"author":{"gitId":"bingsen0806"},"content":"public class JsonAdaptedAuthor {","lastModifiedDate":"2022-03-10"},{"lineNumber":14,"author":{"gitId":"bingsen0806"},"content":"","lastModifiedDate":"2022-03-10"},{"lineNumber":15,"author":{"gitId":"bingsen0806"},"content":"    private final String authorName;","lastModifiedDate":"2022-03-10"},{"lineNumber":16,"author":{"gitId":"bingsen0806"},"content":"","lastModifiedDate":"2022-03-10"},{"lineNumber":17,"author":{"gitId":"bingsen0806"},"content":"    /**","lastModifiedDate":"2022-03-10"},{"lineNumber":18,"author":{"gitId":"bingsen0806"},"content":"     * Constructs a {@code JsonAdaptedAuthor} with the given {@code authorName}.","lastModifiedDate":"2022-03-10"},{"lineNumber":19,"author":{"gitId":"bingsen0806"},"content":"     */","lastModifiedDate":"2022-03-10"},{"lineNumber":20,"author":{"gitId":"bingsen0806"},"content":"    @JsonCreator","lastModifiedDate":"2022-03-10"},{"lineNumber":21,"author":{"gitId":"bingsen0806"},"content":"    public JsonAdaptedAuthor(String authorName) {","lastModifiedDate":"2022-03-10"},{"lineNumber":22,"author":{"gitId":"bingsen0806"},"content":"        this.authorName \u003d authorName;","lastModifiedDate":"2022-03-10"},{"lineNumber":23,"author":{"gitId":"bingsen0806"},"content":"    }","lastModifiedDate":"2022-03-10"},{"lineNumber":24,"author":{"gitId":"bingsen0806"},"content":"","lastModifiedDate":"2022-03-10"},{"lineNumber":25,"author":{"gitId":"bingsen0806"},"content":"    /**","lastModifiedDate":"2022-03-10"},{"lineNumber":26,"author":{"gitId":"bingsen0806"},"content":"     * Converts a given {@code Author} into this class for Jackson use.","lastModifiedDate":"2022-03-10"},{"lineNumber":27,"author":{"gitId":"bingsen0806"},"content":"     */","lastModifiedDate":"2022-03-10"},{"lineNumber":28,"author":{"gitId":"bingsen0806"},"content":"    public JsonAdaptedAuthor(Author source) {","lastModifiedDate":"2022-03-10"},{"lineNumber":29,"author":{"gitId":"bingsen0806"},"content":"        authorName \u003d source.fullAuthorName;","lastModifiedDate":"2022-03-10"},{"lineNumber":30,"author":{"gitId":"bingsen0806"},"content":"    }","lastModifiedDate":"2022-03-10"},{"lineNumber":31,"author":{"gitId":"bingsen0806"},"content":"","lastModifiedDate":"2022-03-10"},{"lineNumber":32,"author":{"gitId":"bingsen0806"},"content":"    @JsonValue","lastModifiedDate":"2022-03-10"},{"lineNumber":33,"author":{"gitId":"bingsen0806"},"content":"    public String getTagName() {","lastModifiedDate":"2022-03-10"},{"lineNumber":34,"author":{"gitId":"bingsen0806"},"content":"        return authorName;","lastModifiedDate":"2022-03-10"},{"lineNumber":35,"author":{"gitId":"bingsen0806"},"content":"    }","lastModifiedDate":"2022-03-10"},{"lineNumber":36,"author":{"gitId":"bingsen0806"},"content":"","lastModifiedDate":"2022-03-10"},{"lineNumber":37,"author":{"gitId":"bingsen0806"},"content":"    /**","lastModifiedDate":"2022-03-10"},{"lineNumber":38,"author":{"gitId":"bingsen0806"},"content":"     * Converts this Jackson-friendly adapted author object into the model\u0027s {@code Author} object.","lastModifiedDate":"2022-03-10"},{"lineNumber":39,"author":{"gitId":"bingsen0806"},"content":"     *","lastModifiedDate":"2022-03-10"},{"lineNumber":40,"author":{"gitId":"bingsen0806"},"content":"     * @throws IllegalValueException if there were any data constraints violated in the adapted author.","lastModifiedDate":"2022-03-10"},{"lineNumber":41,"author":{"gitId":"bingsen0806"},"content":"     */","lastModifiedDate":"2022-03-10"},{"lineNumber":42,"author":{"gitId":"bingsen0806"},"content":"    public Author toModelType() throws IllegalValueException {","lastModifiedDate":"2022-03-10"},{"lineNumber":43,"author":{"gitId":"bingsen0806"},"content":"        if (!Author.isValidAuthor(authorName)) {","lastModifiedDate":"2022-03-10"},{"lineNumber":44,"author":{"gitId":"bingsen0806"},"content":"            throw new IllegalValueException(Author.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2022-03-10"},{"lineNumber":45,"author":{"gitId":"bingsen0806"},"content":"        }","lastModifiedDate":"2022-03-10"},{"lineNumber":46,"author":{"gitId":"bingsen0806"},"content":"        return new Author(authorName);","lastModifiedDate":"2022-03-10"},{"lineNumber":47,"author":{"gitId":"bingsen0806"},"content":"    }","lastModifiedDate":"2022-03-10"},{"lineNumber":48,"author":{"gitId":"bingsen0806"},"content":"","lastModifiedDate":"2022-03-10"},{"lineNumber":49,"author":{"gitId":"bingsen0806"},"content":"}","lastModifiedDate":"2022-03-10"}],"authorContributionMap":{"bingsen0806":49}},{"path":"src/main/java/seedu/address/storage/JsonAdaptedBook.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"bingsen0806"},"content":"package seedu.address.storage;","lastModifiedDate":"2022-03-10"},{"lineNumber":2,"author":{"gitId":"bingsen0806"},"content":"","lastModifiedDate":"2022-03-10"},{"lineNumber":3,"author":{"gitId":"bingsen0806"},"content":"import java.util.ArrayList;","lastModifiedDate":"2022-03-10"},{"lineNumber":4,"author":{"gitId":"bingsen0806"},"content":"import java.util.HashSet;","lastModifiedDate":"2022-03-10"},{"lineNumber":5,"author":{"gitId":"bingsen0806"},"content":"import java.util.List;","lastModifiedDate":"2022-03-10"},{"lineNumber":6,"author":{"gitId":"bingsen0806"},"content":"import java.util.Set;","lastModifiedDate":"2022-03-10"},{"lineNumber":7,"author":{"gitId":"bingsen0806"},"content":"import java.util.stream.Collectors;","lastModifiedDate":"2022-03-10"},{"lineNumber":8,"author":{"gitId":"bingsen0806"},"content":"","lastModifiedDate":"2022-03-10"},{"lineNumber":9,"author":{"gitId":"bingsen0806"},"content":"import com.fasterxml.jackson.annotation.JsonCreator;","lastModifiedDate":"2022-03-10"},{"lineNumber":10,"author":{"gitId":"bingsen0806"},"content":"import com.fasterxml.jackson.annotation.JsonProperty;","lastModifiedDate":"2022-03-10"},{"lineNumber":11,"author":{"gitId":"bingsen0806"},"content":"","lastModifiedDate":"2022-03-10"},{"lineNumber":12,"author":{"gitId":"bingsen0806"},"content":"import seedu.address.commons.exceptions.IllegalValueException;","lastModifiedDate":"2022-03-10"},{"lineNumber":13,"author":{"gitId":"bingsen0806"},"content":"import seedu.address.model.book.Author;","lastModifiedDate":"2022-03-10"},{"lineNumber":14,"author":{"gitId":"bingsen0806"},"content":"import seedu.address.model.book.Book;","lastModifiedDate":"2022-03-10"},{"lineNumber":15,"author":{"gitId":"bingsen0806"},"content":"import seedu.address.model.book.BookName;","lastModifiedDate":"2022-03-10"},{"lineNumber":16,"author":{"gitId":"bingsen0806"},"content":"import seedu.address.model.book.Isbn;","lastModifiedDate":"2022-03-10"},{"lineNumber":17,"author":{"gitId":"bingsen0806"},"content":"import seedu.address.model.tag.Tag;","lastModifiedDate":"2022-03-10"},{"lineNumber":18,"author":{"gitId":"bingsen0806"},"content":"","lastModifiedDate":"2022-03-10"},{"lineNumber":19,"author":{"gitId":"bingsen0806"},"content":"/**","lastModifiedDate":"2022-03-10"},{"lineNumber":20,"author":{"gitId":"bingsen0806"},"content":" * Jackson-friendly version of {@link Book}.","lastModifiedDate":"2022-03-10"},{"lineNumber":21,"author":{"gitId":"bingsen0806"},"content":" */","lastModifiedDate":"2022-03-10"},{"lineNumber":22,"author":{"gitId":"bingsen0806"},"content":"class JsonAdaptedBook {","lastModifiedDate":"2022-03-10"},{"lineNumber":23,"author":{"gitId":"bingsen0806"},"content":"    public static final String MISSING_FIELD_MESSAGE_FORMAT \u003d \"Book\u0027s %s field is missing!\";","lastModifiedDate":"2022-03-10"},{"lineNumber":24,"author":{"gitId":"bingsen0806"},"content":"    private final String isbn;","lastModifiedDate":"2022-03-10"},{"lineNumber":25,"author":{"gitId":"bingsen0806"},"content":"    private final String bookName;","lastModifiedDate":"2022-03-10"},{"lineNumber":26,"author":{"gitId":"bingsen0806"},"content":"    private final List\u003cJsonAdaptedAuthor\u003e authors \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2022-03-10"},{"lineNumber":27,"author":{"gitId":"bingsen0806"},"content":"    private final List\u003cJsonAdaptedTag\u003e tagged \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2022-03-10"},{"lineNumber":28,"author":{"gitId":"bingsen0806"},"content":"    private final String timeAdded;","lastModifiedDate":"2022-03-11"},{"lineNumber":29,"author":{"gitId":"bingsen0806"},"content":"","lastModifiedDate":"2022-03-10"},{"lineNumber":30,"author":{"gitId":"bingsen0806"},"content":"    /**","lastModifiedDate":"2022-03-10"},{"lineNumber":31,"author":{"gitId":"bingsen0806"},"content":"     * Constructs a {@code JsonAdaptedPerson} with the given person details.","lastModifiedDate":"2022-03-10"},{"lineNumber":32,"author":{"gitId":"bingsen0806"},"content":"     */","lastModifiedDate":"2022-03-10"},{"lineNumber":33,"author":{"gitId":"bingsen0806"},"content":"    @JsonCreator","lastModifiedDate":"2022-03-10"},{"lineNumber":34,"author":{"gitId":"bingsen0806"},"content":"    public JsonAdaptedBook(@JsonProperty(\"bookName\") String bookName, @JsonProperty(\"isbn\") String isbn,","lastModifiedDate":"2022-03-10"},{"lineNumber":35,"author":{"gitId":"bingsen0806"},"content":"        @JsonProperty(\"tagged\") List\u003cJsonAdaptedTag\u003e tagged,","lastModifiedDate":"2022-03-10"},{"lineNumber":36,"author":{"gitId":"bingsen0806"},"content":"        @JsonProperty(\"authors\") List\u003cJsonAdaptedAuthor\u003e authors,","lastModifiedDate":"2022-03-11"},{"lineNumber":37,"author":{"gitId":"bingsen0806"},"content":"        @JsonProperty(\"timeAdded\") String timeAdded) {","lastModifiedDate":"2022-03-11"},{"lineNumber":38,"author":{"gitId":"bingsen0806"},"content":"        this.bookName \u003d bookName;","lastModifiedDate":"2022-03-10"},{"lineNumber":39,"author":{"gitId":"bingsen0806"},"content":"        this.isbn \u003d isbn;","lastModifiedDate":"2022-03-10"},{"lineNumber":40,"author":{"gitId":"bingsen0806"},"content":"        if (tagged !\u003d null) {","lastModifiedDate":"2022-03-10"},{"lineNumber":41,"author":{"gitId":"bingsen0806"},"content":"            this.tagged.addAll(tagged);","lastModifiedDate":"2022-03-10"},{"lineNumber":42,"author":{"gitId":"bingsen0806"},"content":"        }","lastModifiedDate":"2022-03-10"},{"lineNumber":43,"author":{"gitId":"bingsen0806"},"content":"        if (authors !\u003d null) {","lastModifiedDate":"2022-03-10"},{"lineNumber":44,"author":{"gitId":"bingsen0806"},"content":"            this.authors.addAll(authors);","lastModifiedDate":"2022-03-10"},{"lineNumber":45,"author":{"gitId":"bingsen0806"},"content":"        }","lastModifiedDate":"2022-03-10"},{"lineNumber":46,"author":{"gitId":"bingsen0806"},"content":"        this.timeAdded \u003d timeAdded;","lastModifiedDate":"2022-03-11"},{"lineNumber":47,"author":{"gitId":"bingsen0806"},"content":"    }","lastModifiedDate":"2022-03-10"},{"lineNumber":48,"author":{"gitId":"bingsen0806"},"content":"","lastModifiedDate":"2022-03-10"},{"lineNumber":49,"author":{"gitId":"bingsen0806"},"content":"    /**","lastModifiedDate":"2022-03-10"},{"lineNumber":50,"author":{"gitId":"bingsen0806"},"content":"     * Converts a given {@code Book} into this class for Jackson use.","lastModifiedDate":"2022-03-10"},{"lineNumber":51,"author":{"gitId":"bingsen0806"},"content":"     */","lastModifiedDate":"2022-03-10"},{"lineNumber":52,"author":{"gitId":"bingsen0806"},"content":"    public JsonAdaptedBook(Book source) {","lastModifiedDate":"2022-03-10"},{"lineNumber":53,"author":{"gitId":"bingsen0806"},"content":"        bookName \u003d source.getBookName().fullBookName;","lastModifiedDate":"2022-03-10"},{"lineNumber":54,"author":{"gitId":"bingsen0806"},"content":"        isbn \u003d source.getIsbn().toString();","lastModifiedDate":"2022-03-10"},{"lineNumber":55,"author":{"gitId":"bingsen0806"},"content":"        tagged.addAll(source.getTags().stream()","lastModifiedDate":"2022-03-10"},{"lineNumber":56,"author":{"gitId":"bingsen0806"},"content":"                .map(JsonAdaptedTag::new)","lastModifiedDate":"2022-03-10"},{"lineNumber":57,"author":{"gitId":"bingsen0806"},"content":"                .collect(Collectors.toList()));","lastModifiedDate":"2022-03-10"},{"lineNumber":58,"author":{"gitId":"bingsen0806"},"content":"        authors.addAll(source.getAuthors().stream()","lastModifiedDate":"2022-03-10"},{"lineNumber":59,"author":{"gitId":"bingsen0806"},"content":"                .map(JsonAdaptedAuthor::new)","lastModifiedDate":"2022-03-10"},{"lineNumber":60,"author":{"gitId":"bingsen0806"},"content":"                .collect(Collectors.toList()));","lastModifiedDate":"2022-03-10"},{"lineNumber":61,"author":{"gitId":"bingsen0806"},"content":"        timeAdded \u003d Long.toString(source.getTimeAdded());","lastModifiedDate":"2022-03-11"},{"lineNumber":62,"author":{"gitId":"bingsen0806"},"content":"    }","lastModifiedDate":"2022-03-10"},{"lineNumber":63,"author":{"gitId":"bingsen0806"},"content":"","lastModifiedDate":"2022-03-10"},{"lineNumber":64,"author":{"gitId":"bingsen0806"},"content":"    /**","lastModifiedDate":"2022-03-10"},{"lineNumber":65,"author":{"gitId":"bingsen0806"},"content":"     * Converts this Jackson-friendly adapted book object into the model\u0027s {@code Book} object.","lastModifiedDate":"2022-03-10"},{"lineNumber":66,"author":{"gitId":"bingsen0806"},"content":"     *","lastModifiedDate":"2022-03-10"},{"lineNumber":67,"author":{"gitId":"bingsen0806"},"content":"     * @throws IllegalValueException if there were any data constraints violated in the adapted book.","lastModifiedDate":"2022-03-10"},{"lineNumber":68,"author":{"gitId":"bingsen0806"},"content":"     */","lastModifiedDate":"2022-03-10"},{"lineNumber":69,"author":{"gitId":"bingsen0806"},"content":"    public Book toModelType() throws IllegalValueException {","lastModifiedDate":"2022-03-10"},{"lineNumber":70,"author":{"gitId":"bingsen0806"},"content":"        final List\u003cTag\u003e bookTags \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2022-03-10"},{"lineNumber":71,"author":{"gitId":"bingsen0806"},"content":"        for (JsonAdaptedTag tag : tagged) {","lastModifiedDate":"2022-03-10"},{"lineNumber":72,"author":{"gitId":"bingsen0806"},"content":"            bookTags.add(tag.toModelType());","lastModifiedDate":"2022-03-10"},{"lineNumber":73,"author":{"gitId":"bingsen0806"},"content":"        }","lastModifiedDate":"2022-03-10"},{"lineNumber":74,"author":{"gitId":"bingsen0806"},"content":"","lastModifiedDate":"2022-03-10"},{"lineNumber":75,"author":{"gitId":"bingsen0806"},"content":"        final List\u003cAuthor\u003e bookAuthors \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2022-03-10"},{"lineNumber":76,"author":{"gitId":"bingsen0806"},"content":"        for (JsonAdaptedAuthor author : authors) {","lastModifiedDate":"2022-03-10"},{"lineNumber":77,"author":{"gitId":"bingsen0806"},"content":"            bookAuthors.add(author.toModelType());","lastModifiedDate":"2022-03-10"},{"lineNumber":78,"author":{"gitId":"bingsen0806"},"content":"        }","lastModifiedDate":"2022-03-10"},{"lineNumber":79,"author":{"gitId":"bingsen0806"},"content":"","lastModifiedDate":"2022-03-10"},{"lineNumber":80,"author":{"gitId":"bingsen0806"},"content":"        if (bookName \u003d\u003d null) {","lastModifiedDate":"2022-03-10"},{"lineNumber":81,"author":{"gitId":"bingsen0806"},"content":"            throw new IllegalValueException(String.format(MISSING_FIELD_MESSAGE_FORMAT,","lastModifiedDate":"2022-03-10"},{"lineNumber":82,"author":{"gitId":"bingsen0806"},"content":"                BookName.class.getSimpleName()));","lastModifiedDate":"2022-03-10"},{"lineNumber":83,"author":{"gitId":"bingsen0806"},"content":"        }","lastModifiedDate":"2022-03-10"},{"lineNumber":84,"author":{"gitId":"bingsen0806"},"content":"        if (!BookName.isValidBookName(bookName)) {","lastModifiedDate":"2022-03-10"},{"lineNumber":85,"author":{"gitId":"bingsen0806"},"content":"            throw new IllegalValueException(BookName.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2022-03-10"},{"lineNumber":86,"author":{"gitId":"bingsen0806"},"content":"        }","lastModifiedDate":"2022-03-10"},{"lineNumber":87,"author":{"gitId":"bingsen0806"},"content":"        final BookName modelName \u003d new BookName(bookName);","lastModifiedDate":"2022-03-10"},{"lineNumber":88,"author":{"gitId":"bingsen0806"},"content":"","lastModifiedDate":"2022-03-10"},{"lineNumber":89,"author":{"gitId":"bingsen0806"},"content":"        if (isbn \u003d\u003d null) {","lastModifiedDate":"2022-03-10"},{"lineNumber":90,"author":{"gitId":"bingsen0806"},"content":"            throw new IllegalValueException(String.format(MISSING_FIELD_MESSAGE_FORMAT, Isbn.class.getSimpleName()));","lastModifiedDate":"2022-03-10"},{"lineNumber":91,"author":{"gitId":"bingsen0806"},"content":"        }","lastModifiedDate":"2022-03-10"},{"lineNumber":92,"author":{"gitId":"bingsen0806"},"content":"        if (!Isbn.isValidIsbn(isbn)) {","lastModifiedDate":"2022-03-10"},{"lineNumber":93,"author":{"gitId":"bingsen0806"},"content":"            throw new IllegalValueException(Isbn.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2022-03-10"},{"lineNumber":94,"author":{"gitId":"bingsen0806"},"content":"        }","lastModifiedDate":"2022-03-10"},{"lineNumber":95,"author":{"gitId":"bingsen0806"},"content":"        final Isbn modelIsbn \u003d new Isbn(isbn);","lastModifiedDate":"2022-03-10"},{"lineNumber":96,"author":{"gitId":"bingsen0806"},"content":"","lastModifiedDate":"2022-03-10"},{"lineNumber":97,"author":{"gitId":"bingsen0806"},"content":"        final Set\u003cTag\u003e modelTags \u003d new HashSet\u003c\u003e(bookTags);","lastModifiedDate":"2022-03-10"},{"lineNumber":98,"author":{"gitId":"bingsen0806"},"content":"","lastModifiedDate":"2022-03-11"},{"lineNumber":99,"author":{"gitId":"bingsen0806"},"content":"        if (timeAdded \u003d\u003d null) {","lastModifiedDate":"2022-03-11"},{"lineNumber":100,"author":{"gitId":"bingsen0806"},"content":"            throw new IllegalValueException(String.format(MISSING_FIELD_MESSAGE_FORMAT, Long.class.getSimpleName()));","lastModifiedDate":"2022-03-11"},{"lineNumber":101,"author":{"gitId":"bingsen0806"},"content":"        }","lastModifiedDate":"2022-03-11"},{"lineNumber":102,"author":{"gitId":"bingsen0806"},"content":"        try {","lastModifiedDate":"2022-03-11"},{"lineNumber":103,"author":{"gitId":"bingsen0806"},"content":"            final long timeBookAdded \u003d Long.parseLong(timeAdded);","lastModifiedDate":"2022-03-11"},{"lineNumber":104,"author":{"gitId":"bingsen0806"},"content":"            return new Book(modelName, modelIsbn, bookAuthors, modelTags, timeBookAdded);","lastModifiedDate":"2022-03-11"},{"lineNumber":105,"author":{"gitId":"bingsen0806"},"content":"        } catch (NumberFormatException e) {","lastModifiedDate":"2022-03-11"},{"lineNumber":106,"author":{"gitId":"bingsen0806"},"content":"            throw new IllegalValueException(Book.TIME_ADDED_MESSAGE_CONSTRAINTS);","lastModifiedDate":"2022-03-11"},{"lineNumber":107,"author":{"gitId":"bingsen0806"},"content":"        }","lastModifiedDate":"2022-03-11"},{"lineNumber":108,"author":{"gitId":"bingsen0806"},"content":"    }","lastModifiedDate":"2022-03-10"},{"lineNumber":109,"author":{"gitId":"bingsen0806"},"content":"}","lastModifiedDate":"2022-03-10"}],"authorContributionMap":{"bingsen0806":109}},{"path":"src/main/java/seedu/address/storage/JsonAdaptedPerson.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.storage;","lastModifiedDate":"2018-08-13"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.util.ArrayList;","lastModifiedDate":"2018-08-13"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import java.util.HashSet;","lastModifiedDate":"2018-08-13"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.util.List;","lastModifiedDate":"2018-08-13"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.util.Set;","lastModifiedDate":"2018-08-13"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import java.util.stream.Collectors;","lastModifiedDate":"2018-08-13"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import com.fasterxml.jackson.annotation.JsonCreator;","lastModifiedDate":"2018-08-13"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import com.fasterxml.jackson.annotation.JsonProperty;","lastModifiedDate":"2018-08-13"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import seedu.address.commons.exceptions.IllegalValueException;","lastModifiedDate":"2018-08-13"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Email;","lastModifiedDate":"2018-08-13"},{"lineNumber":14,"author":{"gitId":"aditi2313"},"content":"import seedu.address.model.person.Id;","lastModifiedDate":"2022-03-11"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Name;","lastModifiedDate":"2018-08-13"},{"lineNumber":16,"author":{"gitId":"aditi2313"},"content":"import seedu.address.model.person.Patron;","lastModifiedDate":"2022-03-09"},{"lineNumber":17,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Phone;","lastModifiedDate":"2018-08-13"},{"lineNumber":18,"author":{"gitId":"-"},"content":"import seedu.address.model.tag.Tag;","lastModifiedDate":"2018-08-13"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":20,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2018-08-13"},{"lineNumber":21,"author":{"gitId":"aditi2313"},"content":" * Jackson-friendly version of {@link Patron}.","lastModifiedDate":"2022-03-09"},{"lineNumber":22,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2018-08-13"},{"lineNumber":23,"author":{"gitId":"-"},"content":"class JsonAdaptedPerson {","lastModifiedDate":"2018-12-03"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    public static final String MISSING_FIELD_MESSAGE_FORMAT \u003d \"Person\u0027s %s field is missing!\";","lastModifiedDate":"2018-08-13"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    private final String name;","lastModifiedDate":"2018-08-13"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    private final String phone;","lastModifiedDate":"2018-08-13"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    private final String email;","lastModifiedDate":"2018-08-13"},{"lineNumber":30,"author":{"gitId":"aditi2313"},"content":"    private final String id;","lastModifiedDate":"2022-03-09"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    private final List\u003cJsonAdaptedTag\u003e tagged \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2018-08-13"},{"lineNumber":32,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-08-13"},{"lineNumber":34,"author":{"gitId":"-"},"content":"     * Constructs a {@code JsonAdaptedPerson} with the given person details.","lastModifiedDate":"2018-08-13"},{"lineNumber":35,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-08-13"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    @JsonCreator","lastModifiedDate":"2018-08-13"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    public JsonAdaptedPerson(@JsonProperty(\"name\") String name, @JsonProperty(\"phone\") String phone,","lastModifiedDate":"2018-08-13"},{"lineNumber":38,"author":{"gitId":"-"},"content":"            @JsonProperty(\"email\") String email, @JsonProperty(\"address\") String address,","lastModifiedDate":"2018-08-13"},{"lineNumber":39,"author":{"gitId":"-"},"content":"            @JsonProperty(\"tagged\") List\u003cJsonAdaptedTag\u003e tagged) {","lastModifiedDate":"2018-08-13"},{"lineNumber":40,"author":{"gitId":"-"},"content":"        this.name \u003d name;","lastModifiedDate":"2018-08-13"},{"lineNumber":41,"author":{"gitId":"-"},"content":"        this.phone \u003d phone;","lastModifiedDate":"2018-08-13"},{"lineNumber":42,"author":{"gitId":"-"},"content":"        this.email \u003d email;","lastModifiedDate":"2018-08-13"},{"lineNumber":43,"author":{"gitId":"aditi2313"},"content":"        this.id \u003d address;","lastModifiedDate":"2022-03-09"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        if (tagged !\u003d null) {","lastModifiedDate":"2018-08-13"},{"lineNumber":45,"author":{"gitId":"-"},"content":"            this.tagged.addAll(tagged);","lastModifiedDate":"2018-08-13"},{"lineNumber":46,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-08-13"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":48,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-08-13"},{"lineNumber":50,"author":{"gitId":"-"},"content":"     * Converts a given {@code Person} into this class for Jackson use.","lastModifiedDate":"2018-08-13"},{"lineNumber":51,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-08-13"},{"lineNumber":52,"author":{"gitId":"aditi2313"},"content":"    public JsonAdaptedPerson(Patron source) {","lastModifiedDate":"2022-03-09"},{"lineNumber":53,"author":{"gitId":"-"},"content":"        name \u003d source.getName().fullName;","lastModifiedDate":"2018-08-13"},{"lineNumber":54,"author":{"gitId":"-"},"content":"        phone \u003d source.getPhone().value;","lastModifiedDate":"2018-08-13"},{"lineNumber":55,"author":{"gitId":"-"},"content":"        email \u003d source.getEmail().value;","lastModifiedDate":"2018-08-13"},{"lineNumber":56,"author":{"gitId":"aditi2313"},"content":"        id \u003d source.getId().value;","lastModifiedDate":"2022-03-09"},{"lineNumber":57,"author":{"gitId":"-"},"content":"        tagged.addAll(source.getTags().stream()","lastModifiedDate":"2018-08-13"},{"lineNumber":58,"author":{"gitId":"-"},"content":"                .map(JsonAdaptedTag::new)","lastModifiedDate":"2018-08-13"},{"lineNumber":59,"author":{"gitId":"-"},"content":"                .collect(Collectors.toList()));","lastModifiedDate":"2018-08-13"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":61,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":62,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-08-13"},{"lineNumber":63,"author":{"gitId":"-"},"content":"     * Converts this Jackson-friendly adapted person object into the model\u0027s {@code Person} object.","lastModifiedDate":"2018-08-13"},{"lineNumber":64,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2018-08-13"},{"lineNumber":65,"author":{"gitId":"-"},"content":"     * @throws IllegalValueException if there were any data constraints violated in the adapted person.","lastModifiedDate":"2018-08-13"},{"lineNumber":66,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-08-13"},{"lineNumber":67,"author":{"gitId":"aditi2313"},"content":"    public Patron toModelType() throws IllegalValueException {","lastModifiedDate":"2022-03-09"},{"lineNumber":68,"author":{"gitId":"-"},"content":"        final List\u003cTag\u003e personTags \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2018-08-13"},{"lineNumber":69,"author":{"gitId":"-"},"content":"        for (JsonAdaptedTag tag : tagged) {","lastModifiedDate":"2018-08-13"},{"lineNumber":70,"author":{"gitId":"-"},"content":"            personTags.add(tag.toModelType());","lastModifiedDate":"2018-08-13"},{"lineNumber":71,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-08-13"},{"lineNumber":72,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":73,"author":{"gitId":"-"},"content":"        if (name \u003d\u003d null) {","lastModifiedDate":"2018-08-13"},{"lineNumber":74,"author":{"gitId":"-"},"content":"            throw new IllegalValueException(String.format(MISSING_FIELD_MESSAGE_FORMAT, Name.class.getSimpleName()));","lastModifiedDate":"2018-08-13"},{"lineNumber":75,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-08-13"},{"lineNumber":76,"author":{"gitId":"-"},"content":"        if (!Name.isValidName(name)) {","lastModifiedDate":"2018-08-13"},{"lineNumber":77,"author":{"gitId":"-"},"content":"            throw new IllegalValueException(Name.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2018-08-13"},{"lineNumber":78,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-08-13"},{"lineNumber":79,"author":{"gitId":"-"},"content":"        final Name modelName \u003d new Name(name);","lastModifiedDate":"2018-08-13"},{"lineNumber":80,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":81,"author":{"gitId":"-"},"content":"        if (phone \u003d\u003d null) {","lastModifiedDate":"2018-08-13"},{"lineNumber":82,"author":{"gitId":"-"},"content":"            throw new IllegalValueException(String.format(MISSING_FIELD_MESSAGE_FORMAT, Phone.class.getSimpleName()));","lastModifiedDate":"2018-08-13"},{"lineNumber":83,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-08-13"},{"lineNumber":84,"author":{"gitId":"-"},"content":"        if (!Phone.isValidPhone(phone)) {","lastModifiedDate":"2018-08-13"},{"lineNumber":85,"author":{"gitId":"-"},"content":"            throw new IllegalValueException(Phone.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2018-08-13"},{"lineNumber":86,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-08-13"},{"lineNumber":87,"author":{"gitId":"-"},"content":"        final Phone modelPhone \u003d new Phone(phone);","lastModifiedDate":"2018-08-13"},{"lineNumber":88,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":89,"author":{"gitId":"-"},"content":"        if (email \u003d\u003d null) {","lastModifiedDate":"2018-08-13"},{"lineNumber":90,"author":{"gitId":"-"},"content":"            throw new IllegalValueException(String.format(MISSING_FIELD_MESSAGE_FORMAT, Email.class.getSimpleName()));","lastModifiedDate":"2018-08-13"},{"lineNumber":91,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-08-13"},{"lineNumber":92,"author":{"gitId":"-"},"content":"        if (!Email.isValidEmail(email)) {","lastModifiedDate":"2018-08-13"},{"lineNumber":93,"author":{"gitId":"-"},"content":"            throw new IllegalValueException(Email.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2018-08-13"},{"lineNumber":94,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-08-13"},{"lineNumber":95,"author":{"gitId":"-"},"content":"        final Email modelEmail \u003d new Email(email);","lastModifiedDate":"2018-08-13"},{"lineNumber":96,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":97,"author":{"gitId":"aditi2313"},"content":"        if (id \u003d\u003d null) {","lastModifiedDate":"2022-03-09"},{"lineNumber":98,"author":{"gitId":"aditi2313"},"content":"            throw new IllegalValueException(String.format(MISSING_FIELD_MESSAGE_FORMAT, Id.class.getSimpleName()));","lastModifiedDate":"2022-03-09"},{"lineNumber":99,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-08-13"},{"lineNumber":100,"author":{"gitId":"aditi2313"},"content":"        if (!Id.isValidId(id)) {","lastModifiedDate":"2022-03-09"},{"lineNumber":101,"author":{"gitId":"aditi2313"},"content":"            throw new IllegalValueException(Id.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2022-03-09"},{"lineNumber":102,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-08-13"},{"lineNumber":103,"author":{"gitId":"aditi2313"},"content":"        final Id modelAddress \u003d new Id(id);","lastModifiedDate":"2022-03-09"},{"lineNumber":104,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":105,"author":{"gitId":"-"},"content":"        final Set\u003cTag\u003e modelTags \u003d new HashSet\u003c\u003e(personTags);","lastModifiedDate":"2018-08-13"},{"lineNumber":106,"author":{"gitId":"aditi2313"},"content":"        return new Patron(modelName, modelPhone, modelEmail, modelAddress, modelTags);","lastModifiedDate":"2022-03-09"},{"lineNumber":107,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":108,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":109,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2018-08-13"}],"authorContributionMap":{"-":95,"aditi2313":14}},{"path":"src/main/java/seedu/address/storage/JsonSerializableAddressBook.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.storage;","lastModifiedDate":"2018-08-13"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.util.ArrayList;","lastModifiedDate":"2018-08-13"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import java.util.List;","lastModifiedDate":"2018-08-13"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.util.stream.Collectors;","lastModifiedDate":"2018-08-13"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import com.fasterxml.jackson.annotation.JsonCreator;","lastModifiedDate":"2018-08-13"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import com.fasterxml.jackson.annotation.JsonProperty;","lastModifiedDate":"2018-08-13"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import com.fasterxml.jackson.annotation.JsonRootName;","lastModifiedDate":"2018-08-13"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import seedu.address.commons.exceptions.IllegalValueException;","lastModifiedDate":"2018-08-13"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import seedu.address.model.AddressBook;","lastModifiedDate":"2018-08-13"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import seedu.address.model.ReadOnlyAddressBook;","lastModifiedDate":"2018-08-13"},{"lineNumber":14,"author":{"gitId":"bingsen0806"},"content":"import seedu.address.model.book.Book;","lastModifiedDate":"2022-03-10"},{"lineNumber":15,"author":{"gitId":"aditi2313"},"content":"import seedu.address.model.person.Patron;","lastModifiedDate":"2022-03-09"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":17,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2018-08-13"},{"lineNumber":18,"author":{"gitId":"-"},"content":" * An Immutable AddressBook that is serializable to JSON format.","lastModifiedDate":"2018-08-13"},{"lineNumber":19,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2018-08-13"},{"lineNumber":20,"author":{"gitId":"-"},"content":"@JsonRootName(value \u003d \"addressbook\")","lastModifiedDate":"2018-08-13"},{"lineNumber":21,"author":{"gitId":"-"},"content":"class JsonSerializableAddressBook {","lastModifiedDate":"2018-12-03"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_DUPLICATE_PERSON \u003d \"Persons list contains duplicate person(s).\";","lastModifiedDate":"2018-08-13"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    private final List\u003cJsonAdaptedPerson\u003e persons \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2018-08-13"},{"lineNumber":26,"author":{"gitId":"bingsen0806"},"content":"    private final List\u003cJsonAdaptedBook\u003e books \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2022-03-10"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-08-13"},{"lineNumber":29,"author":{"gitId":"-"},"content":"     * Constructs a {@code JsonSerializableAddressBook} with the given persons.","lastModifiedDate":"2018-08-13"},{"lineNumber":30,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-08-13"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    @JsonCreator","lastModifiedDate":"2018-08-13"},{"lineNumber":32,"author":{"gitId":"bingsen0806"},"content":"    public JsonSerializableAddressBook(@JsonProperty(\"persons\") List\u003cJsonAdaptedPerson\u003e persons,","lastModifiedDate":"2022-03-10"},{"lineNumber":33,"author":{"gitId":"bingsen0806"},"content":"                                       @JsonProperty(\"books\") List\u003cJsonAdaptedBook\u003e books) {","lastModifiedDate":"2022-03-10"},{"lineNumber":34,"author":{"gitId":"-"},"content":"        this.persons.addAll(persons);","lastModifiedDate":"2018-08-13"},{"lineNumber":35,"author":{"gitId":"bingsen0806"},"content":"        this.books.addAll(books);","lastModifiedDate":"2022-03-10"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":37,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-08-13"},{"lineNumber":39,"author":{"gitId":"-"},"content":"     * Converts a given {@code ReadOnlyAddressBook} into this class for Jackson use.","lastModifiedDate":"2018-08-13"},{"lineNumber":40,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2018-08-13"},{"lineNumber":41,"author":{"gitId":"-"},"content":"     * @param source future changes to this will not affect the created {@code JsonSerializableAddressBook}.","lastModifiedDate":"2018-08-13"},{"lineNumber":42,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-08-13"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    public JsonSerializableAddressBook(ReadOnlyAddressBook source) {","lastModifiedDate":"2018-08-13"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        persons.addAll(source.getPersonList().stream().map(JsonAdaptedPerson::new).collect(Collectors.toList()));","lastModifiedDate":"2018-08-13"},{"lineNumber":45,"author":{"gitId":"bingsen0806"},"content":"        books.addAll(source.getBookList().stream().map(JsonAdaptedBook::new).collect(Collectors.toList()));","lastModifiedDate":"2022-03-10"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":47,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-08-13"},{"lineNumber":49,"author":{"gitId":"-"},"content":"     * Converts this address book into the model\u0027s {@code AddressBook} object.","lastModifiedDate":"2018-08-13"},{"lineNumber":50,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2018-08-13"},{"lineNumber":51,"author":{"gitId":"-"},"content":"     * @throws IllegalValueException if there were any data constraints violated.","lastModifiedDate":"2018-08-13"},{"lineNumber":52,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-08-13"},{"lineNumber":53,"author":{"gitId":"-"},"content":"    public AddressBook toModelType() throws IllegalValueException {","lastModifiedDate":"2018-08-13"},{"lineNumber":54,"author":{"gitId":"-"},"content":"        AddressBook addressBook \u003d new AddressBook();","lastModifiedDate":"2018-08-13"},{"lineNumber":55,"author":{"gitId":"-"},"content":"        for (JsonAdaptedPerson jsonAdaptedPerson : persons) {","lastModifiedDate":"2018-08-13"},{"lineNumber":56,"author":{"gitId":"aditi2313"},"content":"            Patron person \u003d jsonAdaptedPerson.toModelType();","lastModifiedDate":"2022-03-09"},{"lineNumber":57,"author":{"gitId":"-"},"content":"            if (addressBook.hasPerson(person)) {","lastModifiedDate":"2018-08-13"},{"lineNumber":58,"author":{"gitId":"-"},"content":"                throw new IllegalValueException(MESSAGE_DUPLICATE_PERSON);","lastModifiedDate":"2018-08-13"},{"lineNumber":59,"author":{"gitId":"-"},"content":"            }","lastModifiedDate":"2018-08-13"},{"lineNumber":60,"author":{"gitId":"-"},"content":"            addressBook.addPerson(person);","lastModifiedDate":"2018-08-13"},{"lineNumber":61,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-08-13"},{"lineNumber":62,"author":{"gitId":"bingsen0806"},"content":"        for (JsonAdaptedBook jsonAdaptedBook : books) {","lastModifiedDate":"2022-03-10"},{"lineNumber":63,"author":{"gitId":"bingsen0806"},"content":"            Book book \u003d jsonAdaptedBook.toModelType();","lastModifiedDate":"2022-03-10"},{"lineNumber":64,"author":{"gitId":"bingsen0806"},"content":"            addressBook.addBook(book);","lastModifiedDate":"2022-03-10"},{"lineNumber":65,"author":{"gitId":"bingsen0806"},"content":"        }","lastModifiedDate":"2022-03-10"},{"lineNumber":66,"author":{"gitId":"-"},"content":"        return addressBook;","lastModifiedDate":"2018-08-13"},{"lineNumber":67,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":68,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":69,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2018-08-13"}],"authorContributionMap":{"-":57,"bingsen0806":10,"aditi2313":2}},{"path":"src/main/java/seedu/address/ui/BookCard.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"yl-ang"},"content":"package seedu.address.ui;","lastModifiedDate":"2022-03-06"},{"lineNumber":2,"author":{"gitId":"yl-ang"},"content":"","lastModifiedDate":"2022-03-06"},{"lineNumber":3,"author":{"gitId":"yl-ang"},"content":"import java.util.Comparator;","lastModifiedDate":"2022-03-06"},{"lineNumber":4,"author":{"gitId":"yl-ang"},"content":"import java.util.stream.Collectors;","lastModifiedDate":"2022-03-09"},{"lineNumber":5,"author":{"gitId":"yl-ang"},"content":"","lastModifiedDate":"2022-03-06"},{"lineNumber":6,"author":{"gitId":"yl-ang"},"content":"import javafx.fxml.FXML;","lastModifiedDate":"2022-03-06"},{"lineNumber":7,"author":{"gitId":"yl-ang"},"content":"import javafx.scene.control.Label;","lastModifiedDate":"2022-03-06"},{"lineNumber":8,"author":{"gitId":"yl-ang"},"content":"import javafx.scene.layout.FlowPane;","lastModifiedDate":"2022-03-06"},{"lineNumber":9,"author":{"gitId":"yl-ang"},"content":"import javafx.scene.layout.HBox;","lastModifiedDate":"2022-03-06"},{"lineNumber":10,"author":{"gitId":"yl-ang"},"content":"import javafx.scene.layout.Region;","lastModifiedDate":"2022-03-06"},{"lineNumber":11,"author":{"gitId":"yl-ang"},"content":"import seedu.address.model.book.Author;","lastModifiedDate":"2022-03-10"},{"lineNumber":12,"author":{"gitId":"yl-ang"},"content":"import seedu.address.model.book.Book;","lastModifiedDate":"2022-03-10"},{"lineNumber":13,"author":{"gitId":"yl-ang"},"content":"","lastModifiedDate":"2022-03-06"},{"lineNumber":14,"author":{"gitId":"yl-ang"},"content":"/**","lastModifiedDate":"2022-03-06"},{"lineNumber":15,"author":{"gitId":"yl-ang"},"content":" * An UI component that displays information of a {@code Person}.","lastModifiedDate":"2022-03-06"},{"lineNumber":16,"author":{"gitId":"yl-ang"},"content":" */","lastModifiedDate":"2022-03-06"},{"lineNumber":17,"author":{"gitId":"yl-ang"},"content":"public class BookCard extends UiPart\u003cRegion\u003e {","lastModifiedDate":"2022-03-06"},{"lineNumber":18,"author":{"gitId":"yl-ang"},"content":"","lastModifiedDate":"2022-03-06"},{"lineNumber":19,"author":{"gitId":"yl-ang"},"content":"    private static final String FXML \u003d \"BookListCard.fxml\";","lastModifiedDate":"2022-03-06"},{"lineNumber":20,"author":{"gitId":"yl-ang"},"content":"","lastModifiedDate":"2022-03-06"},{"lineNumber":21,"author":{"gitId":"yl-ang"},"content":"    /**","lastModifiedDate":"2022-03-06"},{"lineNumber":22,"author":{"gitId":"yl-ang"},"content":"     * Note: Certain keywords such as \"location\" and \"resources\" are reserved keywords in JavaFX.","lastModifiedDate":"2022-03-06"},{"lineNumber":23,"author":{"gitId":"yl-ang"},"content":"     * As a consequence, UI elements\u0027 variable names cannot be set to such keywords","lastModifiedDate":"2022-03-06"},{"lineNumber":24,"author":{"gitId":"yl-ang"},"content":"     * or an exception will be thrown by JavaFX during runtime.","lastModifiedDate":"2022-03-06"},{"lineNumber":25,"author":{"gitId":"yl-ang"},"content":"     *","lastModifiedDate":"2022-03-06"},{"lineNumber":26,"author":{"gitId":"yl-ang"},"content":"     * @see \u003ca href\u003d\"https://github.com/se-edu/addressbook-level4/issues/336\"\u003eThe issue on AddressBook level 4\u003c/a\u003e","lastModifiedDate":"2022-03-06"},{"lineNumber":27,"author":{"gitId":"yl-ang"},"content":"     */","lastModifiedDate":"2022-03-06"},{"lineNumber":28,"author":{"gitId":"yl-ang"},"content":"","lastModifiedDate":"2022-03-06"},{"lineNumber":29,"author":{"gitId":"yl-ang"},"content":"    public final Book book;","lastModifiedDate":"2022-03-10"},{"lineNumber":30,"author":{"gitId":"yl-ang"},"content":"","lastModifiedDate":"2022-03-06"},{"lineNumber":31,"author":{"gitId":"yl-ang"},"content":"    @FXML","lastModifiedDate":"2022-03-06"},{"lineNumber":32,"author":{"gitId":"yl-ang"},"content":"    private HBox cardPane;","lastModifiedDate":"2022-03-06"},{"lineNumber":33,"author":{"gitId":"yl-ang"},"content":"    @FXML","lastModifiedDate":"2022-03-06"},{"lineNumber":34,"author":{"gitId":"yl-ang"},"content":"    private Label name;","lastModifiedDate":"2022-03-06"},{"lineNumber":35,"author":{"gitId":"yl-ang"},"content":"    @FXML","lastModifiedDate":"2022-03-06"},{"lineNumber":36,"author":{"gitId":"yl-ang"},"content":"    private Label id;","lastModifiedDate":"2022-03-06"},{"lineNumber":37,"author":{"gitId":"yl-ang"},"content":"    @FXML","lastModifiedDate":"2022-03-06"},{"lineNumber":38,"author":{"gitId":"yl-ang"},"content":"    private Label authors;","lastModifiedDate":"2022-03-09"},{"lineNumber":39,"author":{"gitId":"yl-ang"},"content":"    @FXML","lastModifiedDate":"2022-03-06"},{"lineNumber":40,"author":{"gitId":"yl-ang"},"content":"    private Label isbn;","lastModifiedDate":"2022-03-06"},{"lineNumber":41,"author":{"gitId":"yl-ang"},"content":"    @FXML","lastModifiedDate":"2022-03-06"},{"lineNumber":42,"author":{"gitId":"yl-ang"},"content":"    private FlowPane bookCategoryTags;","lastModifiedDate":"2022-03-08"},{"lineNumber":43,"author":{"gitId":"yl-ang"},"content":"    @FXML","lastModifiedDate":"2022-03-08"},{"lineNumber":44,"author":{"gitId":"yl-ang"},"content":"    private FlowPane bookAvailableTag;","lastModifiedDate":"2022-03-09"},{"lineNumber":45,"author":{"gitId":"yl-ang"},"content":"    @FXML","lastModifiedDate":"2022-03-09"},{"lineNumber":46,"author":{"gitId":"yl-ang"},"content":"    private FlowPane bookBorrowTag;","lastModifiedDate":"2022-03-09"},{"lineNumber":47,"author":{"gitId":"yl-ang"},"content":"","lastModifiedDate":"2022-03-06"},{"lineNumber":48,"author":{"gitId":"yl-ang"},"content":"    /**","lastModifiedDate":"2022-03-06"},{"lineNumber":49,"author":{"gitId":"yl-ang"},"content":"     * Creates a {@code Book} with the given {@code Book} and index to display.","lastModifiedDate":"2022-03-06"},{"lineNumber":50,"author":{"gitId":"yl-ang"},"content":"     */","lastModifiedDate":"2022-03-06"},{"lineNumber":51,"author":{"gitId":"yl-ang"},"content":"    public BookCard(Book book, int displayedIndex) {","lastModifiedDate":"2022-03-10"},{"lineNumber":52,"author":{"gitId":"yl-ang"},"content":"        super(FXML);","lastModifiedDate":"2022-03-06"},{"lineNumber":53,"author":{"gitId":"yl-ang"},"content":"        this.book \u003d book;","lastModifiedDate":"2022-03-10"},{"lineNumber":54,"author":{"gitId":"yl-ang"},"content":"        id.setText(displayedIndex + \". \");","lastModifiedDate":"2022-03-06"},{"lineNumber":55,"author":{"gitId":"yl-ang"},"content":"        name.setText(book.getBookName().toString());","lastModifiedDate":"2022-03-10"},{"lineNumber":56,"author":{"gitId":"yl-ang"},"content":"","lastModifiedDate":"2022-03-09"},{"lineNumber":57,"author":{"gitId":"yl-ang"},"content":"        // Author check needed since author is an optional parameter in book command","lastModifiedDate":"2022-03-09"},{"lineNumber":58,"author":{"gitId":"yl-ang"},"content":"        if (!book.getAuthors().isEmpty()) {","lastModifiedDate":"2022-03-10"},{"lineNumber":59,"author":{"gitId":"yl-ang"},"content":"            authors.setVisible(true);","lastModifiedDate":"2022-03-09"},{"lineNumber":60,"author":{"gitId":"yl-ang"},"content":"            authors.setManaged(true);","lastModifiedDate":"2022-03-09"},{"lineNumber":61,"author":{"gitId":"yl-ang"},"content":"            String authorsString \u003d book.getAuthors().stream()","lastModifiedDate":"2022-03-10"},{"lineNumber":62,"author":{"gitId":"yl-ang"},"content":"                    .sorted(Comparator.comparing(author -\u003e author.toString()))","lastModifiedDate":"2022-03-10"},{"lineNumber":63,"author":{"gitId":"yl-ang"},"content":"                    .map(Author::toString)","lastModifiedDate":"2022-03-10"},{"lineNumber":64,"author":{"gitId":"yl-ang"},"content":"                    .collect(Collectors.joining(\", \"));","lastModifiedDate":"2022-03-09"},{"lineNumber":65,"author":{"gitId":"yl-ang"},"content":"            authors.setText(\"Author: \" + authorsString);","lastModifiedDate":"2022-03-09"},{"lineNumber":66,"author":{"gitId":"yl-ang"},"content":"        }","lastModifiedDate":"2022-03-09"},{"lineNumber":67,"author":{"gitId":"yl-ang"},"content":"","lastModifiedDate":"2022-03-09"},{"lineNumber":68,"author":{"gitId":"yl-ang"},"content":"        isbn.setText(\"ISBN: \" + book.getIsbn());","lastModifiedDate":"2022-03-10"},{"lineNumber":69,"author":{"gitId":"yl-ang"},"content":"","lastModifiedDate":"2022-03-09"},{"lineNumber":70,"author":{"gitId":"yl-ang"},"content":"        book.getTags().stream()","lastModifiedDate":"2022-03-10"},{"lineNumber":71,"author":{"gitId":"yl-ang"},"content":"                .sorted(Comparator.comparing(tag -\u003e tag.tagName))","lastModifiedDate":"2022-03-08"},{"lineNumber":72,"author":{"gitId":"yl-ang"},"content":"                .forEach(tag -\u003e bookCategoryTags.getChildren().add(new Label(tag.tagName)));","lastModifiedDate":"2022-03-08"},{"lineNumber":73,"author":{"gitId":"yl-ang"},"content":"","lastModifiedDate":"2022-03-08"},{"lineNumber":74,"author":{"gitId":"yl-ang"},"content":"","lastModifiedDate":"2022-03-10"},{"lineNumber":75,"author":{"gitId":"yl-ang"},"content":"        // Book status check to properly render relevant tags -- Not Implemented yet.","lastModifiedDate":"2022-03-10"},{"lineNumber":76,"author":{"gitId":"yl-ang"},"content":"","lastModifiedDate":"2022-03-10"},{"lineNumber":77,"author":{"gitId":"yl-ang"},"content":"        //        if (book.isAvailable()) {","lastModifiedDate":"2022-03-10"},{"lineNumber":78,"author":{"gitId":"yl-ang"},"content":"        //            bookAvailableTag.getChildren().add(new Label(\"Available\"));","lastModifiedDate":"2022-03-10"},{"lineNumber":79,"author":{"gitId":"yl-ang"},"content":"        //        } else {","lastModifiedDate":"2022-03-10"},{"lineNumber":80,"author":{"gitId":"yl-ang"},"content":"        //            Collections.addAll(bookBorrowTag.getChildren(), new Label(\"Borrowed\"),","lastModifiedDate":"2022-03-10"},{"lineNumber":81,"author":{"gitId":"yl-ang"},"content":"        //                    new Label(book.getDate()));","lastModifiedDate":"2022-03-10"},{"lineNumber":82,"author":{"gitId":"yl-ang"},"content":"        //        }","lastModifiedDate":"2022-03-10"},{"lineNumber":83,"author":{"gitId":"yl-ang"},"content":"","lastModifiedDate":"2022-03-10"},{"lineNumber":84,"author":{"gitId":"yl-ang"},"content":"        // For now, all books will be rendered as available","lastModifiedDate":"2022-03-10"},{"lineNumber":85,"author":{"gitId":"yl-ang"},"content":"        bookAvailableTag.getChildren().add(new Label(\"Available\"));","lastModifiedDate":"2022-03-10"},{"lineNumber":86,"author":{"gitId":"yl-ang"},"content":"    }","lastModifiedDate":"2022-03-06"},{"lineNumber":87,"author":{"gitId":"yl-ang"},"content":"","lastModifiedDate":"2022-03-06"},{"lineNumber":88,"author":{"gitId":"yl-ang"},"content":"    @Override","lastModifiedDate":"2022-03-06"},{"lineNumber":89,"author":{"gitId":"yl-ang"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2022-03-06"},{"lineNumber":90,"author":{"gitId":"yl-ang"},"content":"        // short circuit if same object","lastModifiedDate":"2022-03-06"},{"lineNumber":91,"author":{"gitId":"yl-ang"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2022-03-06"},{"lineNumber":92,"author":{"gitId":"yl-ang"},"content":"            return true;","lastModifiedDate":"2022-03-06"},{"lineNumber":93,"author":{"gitId":"yl-ang"},"content":"        }","lastModifiedDate":"2022-03-06"},{"lineNumber":94,"author":{"gitId":"yl-ang"},"content":"","lastModifiedDate":"2022-03-06"},{"lineNumber":95,"author":{"gitId":"yl-ang"},"content":"        // instanceof handles nulls","lastModifiedDate":"2022-03-06"},{"lineNumber":96,"author":{"gitId":"yl-ang"},"content":"        if (!(other instanceof BookCard)) {","lastModifiedDate":"2022-03-06"},{"lineNumber":97,"author":{"gitId":"yl-ang"},"content":"            return false;","lastModifiedDate":"2022-03-06"},{"lineNumber":98,"author":{"gitId":"yl-ang"},"content":"        }","lastModifiedDate":"2022-03-06"},{"lineNumber":99,"author":{"gitId":"yl-ang"},"content":"","lastModifiedDate":"2022-03-06"},{"lineNumber":100,"author":{"gitId":"yl-ang"},"content":"        // state check","lastModifiedDate":"2022-03-06"},{"lineNumber":101,"author":{"gitId":"yl-ang"},"content":"        BookCard card \u003d (BookCard) other;","lastModifiedDate":"2022-03-06"},{"lineNumber":102,"author":{"gitId":"yl-ang"},"content":"        return id.getText().equals(card.id.getText())","lastModifiedDate":"2022-03-06"},{"lineNumber":103,"author":{"gitId":"yl-ang"},"content":"                \u0026\u0026 book.equals(card.book);","lastModifiedDate":"2022-03-10"},{"lineNumber":104,"author":{"gitId":"yl-ang"},"content":"    }","lastModifiedDate":"2022-03-06"},{"lineNumber":105,"author":{"gitId":"yl-ang"},"content":"}","lastModifiedDate":"2022-03-06"}],"authorContributionMap":{"yl-ang":105}},{"path":"src/main/java/seedu/address/ui/BookListPanel.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"yl-ang"},"content":"package seedu.address.ui;","lastModifiedDate":"2022-03-06"},{"lineNumber":2,"author":{"gitId":"yl-ang"},"content":"","lastModifiedDate":"2022-03-06"},{"lineNumber":3,"author":{"gitId":"yl-ang"},"content":"import java.util.logging.Logger;","lastModifiedDate":"2022-03-06"},{"lineNumber":4,"author":{"gitId":"yl-ang"},"content":"","lastModifiedDate":"2022-03-06"},{"lineNumber":5,"author":{"gitId":"yl-ang"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2022-03-06"},{"lineNumber":6,"author":{"gitId":"yl-ang"},"content":"import javafx.fxml.FXML;","lastModifiedDate":"2022-03-06"},{"lineNumber":7,"author":{"gitId":"yl-ang"},"content":"import javafx.scene.control.ListCell;","lastModifiedDate":"2022-03-06"},{"lineNumber":8,"author":{"gitId":"yl-ang"},"content":"import javafx.scene.control.ListView;","lastModifiedDate":"2022-03-06"},{"lineNumber":9,"author":{"gitId":"yl-ang"},"content":"import javafx.scene.layout.Region;","lastModifiedDate":"2022-03-06"},{"lineNumber":10,"author":{"gitId":"yl-ang"},"content":"import seedu.address.commons.core.LogsCenter;","lastModifiedDate":"2022-03-06"},{"lineNumber":11,"author":{"gitId":"yl-ang"},"content":"import seedu.address.model.book.Book;","lastModifiedDate":"2022-03-10"},{"lineNumber":12,"author":{"gitId":"yl-ang"},"content":"","lastModifiedDate":"2022-03-06"},{"lineNumber":13,"author":{"gitId":"yl-ang"},"content":"/**","lastModifiedDate":"2022-03-06"},{"lineNumber":14,"author":{"gitId":"yl-ang"},"content":" * Panel containing the list of persons.","lastModifiedDate":"2022-03-06"},{"lineNumber":15,"author":{"gitId":"yl-ang"},"content":" */","lastModifiedDate":"2022-03-06"},{"lineNumber":16,"author":{"gitId":"yl-ang"},"content":"public class BookListPanel extends UiPart\u003cRegion\u003e {","lastModifiedDate":"2022-03-06"},{"lineNumber":17,"author":{"gitId":"yl-ang"},"content":"    private static final String FXML \u003d \"BookListPanel.fxml\";","lastModifiedDate":"2022-03-06"},{"lineNumber":18,"author":{"gitId":"yl-ang"},"content":"    private final Logger logger \u003d LogsCenter.getLogger(BookListPanel.class);","lastModifiedDate":"2022-03-06"},{"lineNumber":19,"author":{"gitId":"yl-ang"},"content":"","lastModifiedDate":"2022-03-06"},{"lineNumber":20,"author":{"gitId":"yl-ang"},"content":"    @FXML","lastModifiedDate":"2022-03-06"},{"lineNumber":21,"author":{"gitId":"yl-ang"},"content":"    private ListView\u003cBook\u003e bookListView;","lastModifiedDate":"2022-03-10"},{"lineNumber":22,"author":{"gitId":"yl-ang"},"content":"","lastModifiedDate":"2022-03-06"},{"lineNumber":23,"author":{"gitId":"yl-ang"},"content":"    /**","lastModifiedDate":"2022-03-06"},{"lineNumber":24,"author":{"gitId":"yl-ang"},"content":"     * Creates a {@code BookListPanel} with the given {@code ObservableList}.","lastModifiedDate":"2022-03-06"},{"lineNumber":25,"author":{"gitId":"yl-ang"},"content":"     */","lastModifiedDate":"2022-03-06"},{"lineNumber":26,"author":{"gitId":"yl-ang"},"content":"    public BookListPanel(ObservableList\u003cBook\u003e bookList) {","lastModifiedDate":"2022-03-10"},{"lineNumber":27,"author":{"gitId":"yl-ang"},"content":"        super(FXML);","lastModifiedDate":"2022-03-06"},{"lineNumber":28,"author":{"gitId":"yl-ang"},"content":"        bookListView.setItems(bookList);","lastModifiedDate":"2022-03-07"},{"lineNumber":29,"author":{"gitId":"yl-ang"},"content":"        bookListView.setCellFactory(listView -\u003e new BookListViewCell());","lastModifiedDate":"2022-03-07"},{"lineNumber":30,"author":{"gitId":"yl-ang"},"content":"    }","lastModifiedDate":"2022-03-06"},{"lineNumber":31,"author":{"gitId":"yl-ang"},"content":"","lastModifiedDate":"2022-03-06"},{"lineNumber":32,"author":{"gitId":"yl-ang"},"content":"    /**","lastModifiedDate":"2022-03-06"},{"lineNumber":33,"author":{"gitId":"yl-ang"},"content":"     * Custom {@code ListCell} that displays the graphics of a {@code Book} using a {@code BookCard}.","lastModifiedDate":"2022-03-06"},{"lineNumber":34,"author":{"gitId":"yl-ang"},"content":"     */","lastModifiedDate":"2022-03-06"},{"lineNumber":35,"author":{"gitId":"yl-ang"},"content":"    class BookListViewCell extends ListCell\u003cBook\u003e {","lastModifiedDate":"2022-03-10"},{"lineNumber":36,"author":{"gitId":"yl-ang"},"content":"        @Override","lastModifiedDate":"2022-03-06"},{"lineNumber":37,"author":{"gitId":"yl-ang"},"content":"        protected void updateItem(Book bookStub, boolean empty) {","lastModifiedDate":"2022-03-10"},{"lineNumber":38,"author":{"gitId":"yl-ang"},"content":"            super.updateItem(bookStub, empty);","lastModifiedDate":"2022-03-06"},{"lineNumber":39,"author":{"gitId":"yl-ang"},"content":"","lastModifiedDate":"2022-03-06"},{"lineNumber":40,"author":{"gitId":"yl-ang"},"content":"            if (empty || bookStub \u003d\u003d null) {","lastModifiedDate":"2022-03-06"},{"lineNumber":41,"author":{"gitId":"yl-ang"},"content":"                setGraphic(null);","lastModifiedDate":"2022-03-06"},{"lineNumber":42,"author":{"gitId":"yl-ang"},"content":"                setText(null);","lastModifiedDate":"2022-03-06"},{"lineNumber":43,"author":{"gitId":"yl-ang"},"content":"            } else {","lastModifiedDate":"2022-03-06"},{"lineNumber":44,"author":{"gitId":"yl-ang"},"content":"                setGraphic(new BookCard(bookStub, getIndex() + 1).getRoot());","lastModifiedDate":"2022-03-06"},{"lineNumber":45,"author":{"gitId":"yl-ang"},"content":"            }","lastModifiedDate":"2022-03-06"},{"lineNumber":46,"author":{"gitId":"yl-ang"},"content":"        }","lastModifiedDate":"2022-03-06"},{"lineNumber":47,"author":{"gitId":"yl-ang"},"content":"    }","lastModifiedDate":"2022-03-06"},{"lineNumber":48,"author":{"gitId":"yl-ang"},"content":"","lastModifiedDate":"2022-03-06"},{"lineNumber":49,"author":{"gitId":"yl-ang"},"content":"}","lastModifiedDate":"2022-03-06"}],"authorContributionMap":{"yl-ang":49}},{"path":"src/main/java/seedu/address/ui/HelpWindow.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.ui;","lastModifiedDate":"2016-09-22"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.util.logging.Logger;","lastModifiedDate":"2017-01-19"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import javafx.fxml.FXML;","lastModifiedDate":"2016-12-24"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import javafx.scene.control.Button;","lastModifiedDate":"2019-08-19"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import javafx.scene.control.Label;","lastModifiedDate":"2019-08-19"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import javafx.scene.input.Clipboard;","lastModifiedDate":"2019-08-19"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import javafx.scene.input.ClipboardContent;","lastModifiedDate":"2019-08-19"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import javafx.stage.Stage;","lastModifiedDate":"2016-08-18"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.LogsCenter;","lastModifiedDate":"2016-09-23"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-09"},{"lineNumber":13,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-18"},{"lineNumber":14,"author":{"gitId":"-"},"content":" * Controller for a help page","lastModifiedDate":"2016-08-18"},{"lineNumber":15,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-18"},{"lineNumber":16,"author":{"gitId":"-"},"content":"public class HelpWindow extends UiPart\u003cStage\u003e {","lastModifiedDate":"2017-12-01"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":18,"author":{"gitId":"yl-ang"},"content":"    public static final String USERGUIDE_URL \u003d \"https://ay2122s2-cs2103t-w14-1.github.io/tp/UserGuide.html\";","lastModifiedDate":"2022-03-10"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    public static final String HELP_MESSAGE \u003d \"Refer to the user guide: \" + USERGUIDE_URL;","lastModifiedDate":"2019-08-19"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-03"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    private static final Logger logger \u003d LogsCenter.getLogger(HelpWindow.class);","lastModifiedDate":"2016-09-23"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    private static final String FXML \u003d \"HelpWindow.fxml\";","lastModifiedDate":"2016-09-20"},{"lineNumber":23,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-12-24"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    private Button copyButton;","lastModifiedDate":"2019-08-19"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-08-19"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2019-08-19"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    private Label helpMessage;","lastModifiedDate":"2019-08-19"},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-12-01"},{"lineNumber":31,"author":{"gitId":"-"},"content":"     * Creates a new HelpWindow.","lastModifiedDate":"2017-12-01"},{"lineNumber":32,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2017-12-01"},{"lineNumber":33,"author":{"gitId":"-"},"content":"     * @param root Stage to use as the root of the HelpWindow.","lastModifiedDate":"2017-12-01"},{"lineNumber":34,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-12-01"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    public HelpWindow(Stage root) {","lastModifiedDate":"2017-12-01"},{"lineNumber":36,"author":{"gitId":"-"},"content":"        super(FXML, root);","lastModifiedDate":"2017-12-01"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        helpMessage.setText(HELP_MESSAGE);","lastModifiedDate":"2019-08-19"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-18"},{"lineNumber":39,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-12-01"},{"lineNumber":41,"author":{"gitId":"-"},"content":"     * Creates a new HelpWindow.","lastModifiedDate":"2017-12-01"},{"lineNumber":42,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-12-01"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    public HelpWindow() {","lastModifiedDate":"2017-12-01"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        this(new Stage());","lastModifiedDate":"2017-12-01"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-12-01"},{"lineNumber":46,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-12-01"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-08-16"},{"lineNumber":48,"author":{"gitId":"-"},"content":"     * Shows the help window.","lastModifiedDate":"2017-08-16"},{"lineNumber":49,"author":{"gitId":"-"},"content":"     * @throws IllegalStateException","lastModifiedDate":"2017-08-16"},{"lineNumber":50,"author":{"gitId":"-"},"content":"     * \u003cul\u003e","lastModifiedDate":"2017-08-16"},{"lineNumber":51,"author":{"gitId":"-"},"content":"     *     \u003cli\u003e","lastModifiedDate":"2017-08-16"},{"lineNumber":52,"author":{"gitId":"-"},"content":"     *         if this method is called on a thread other than the JavaFX Application Thread.","lastModifiedDate":"2017-08-16"},{"lineNumber":53,"author":{"gitId":"-"},"content":"     *     \u003c/li\u003e","lastModifiedDate":"2017-08-16"},{"lineNumber":54,"author":{"gitId":"-"},"content":"     *     \u003cli\u003e","lastModifiedDate":"2017-08-16"},{"lineNumber":55,"author":{"gitId":"-"},"content":"     *         if this method is called during animation or layout processing.","lastModifiedDate":"2017-08-16"},{"lineNumber":56,"author":{"gitId":"-"},"content":"     *     \u003c/li\u003e","lastModifiedDate":"2017-08-16"},{"lineNumber":57,"author":{"gitId":"-"},"content":"     *     \u003cli\u003e","lastModifiedDate":"2017-08-16"},{"lineNumber":58,"author":{"gitId":"-"},"content":"     *         if this method is called on the primary stage.","lastModifiedDate":"2017-08-16"},{"lineNumber":59,"author":{"gitId":"-"},"content":"     *     \u003c/li\u003e","lastModifiedDate":"2017-08-16"},{"lineNumber":60,"author":{"gitId":"-"},"content":"     *     \u003cli\u003e","lastModifiedDate":"2017-08-16"},{"lineNumber":61,"author":{"gitId":"-"},"content":"     *         if {@code dialogStage} is already showing.","lastModifiedDate":"2017-08-16"},{"lineNumber":62,"author":{"gitId":"-"},"content":"     *     \u003c/li\u003e","lastModifiedDate":"2017-08-16"},{"lineNumber":63,"author":{"gitId":"-"},"content":"     * \u003c/ul\u003e","lastModifiedDate":"2017-08-16"},{"lineNumber":64,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-08-16"},{"lineNumber":65,"author":{"gitId":"-"},"content":"    public void show() {","lastModifiedDate":"2016-08-18"},{"lineNumber":66,"author":{"gitId":"-"},"content":"        logger.fine(\"Showing help page about the application.\");","lastModifiedDate":"2016-12-24"},{"lineNumber":67,"author":{"gitId":"-"},"content":"        getRoot().show();","lastModifiedDate":"2018-02-13"},{"lineNumber":68,"author":{"gitId":"-"},"content":"        getRoot().centerOnScreen();","lastModifiedDate":"2019-08-19"},{"lineNumber":69,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-18"},{"lineNumber":70,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-03-15"},{"lineNumber":71,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-03-15"},{"lineNumber":72,"author":{"gitId":"-"},"content":"     * Returns true if the help window is currently being shown.","lastModifiedDate":"2018-03-15"},{"lineNumber":73,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-03-15"},{"lineNumber":74,"author":{"gitId":"-"},"content":"    public boolean isShowing() {","lastModifiedDate":"2018-03-15"},{"lineNumber":75,"author":{"gitId":"-"},"content":"        return getRoot().isShowing();","lastModifiedDate":"2018-03-15"},{"lineNumber":76,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-03-15"},{"lineNumber":77,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-03-15"},{"lineNumber":78,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-12-08"},{"lineNumber":79,"author":{"gitId":"-"},"content":"     * Hides the help window.","lastModifiedDate":"2018-12-08"},{"lineNumber":80,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-12-08"},{"lineNumber":81,"author":{"gitId":"-"},"content":"    public void hide() {","lastModifiedDate":"2018-12-08"},{"lineNumber":82,"author":{"gitId":"-"},"content":"        getRoot().hide();","lastModifiedDate":"2018-12-08"},{"lineNumber":83,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-12-08"},{"lineNumber":84,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-08"},{"lineNumber":85,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-03-15"},{"lineNumber":86,"author":{"gitId":"-"},"content":"     * Focuses on the help window.","lastModifiedDate":"2018-03-15"},{"lineNumber":87,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-03-15"},{"lineNumber":88,"author":{"gitId":"-"},"content":"    public void focus() {","lastModifiedDate":"2018-03-15"},{"lineNumber":89,"author":{"gitId":"-"},"content":"        getRoot().requestFocus();","lastModifiedDate":"2018-03-15"},{"lineNumber":90,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-03-15"},{"lineNumber":91,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-08-19"},{"lineNumber":92,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2019-08-19"},{"lineNumber":93,"author":{"gitId":"-"},"content":"     * Copies the URL to the user guide to the clipboard.","lastModifiedDate":"2019-08-19"},{"lineNumber":94,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2019-08-19"},{"lineNumber":95,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2019-08-19"},{"lineNumber":96,"author":{"gitId":"-"},"content":"    private void copyUrl() {","lastModifiedDate":"2019-08-19"},{"lineNumber":97,"author":{"gitId":"-"},"content":"        final Clipboard clipboard \u003d Clipboard.getSystemClipboard();","lastModifiedDate":"2019-08-19"},{"lineNumber":98,"author":{"gitId":"-"},"content":"        final ClipboardContent url \u003d new ClipboardContent();","lastModifiedDate":"2019-08-19"},{"lineNumber":99,"author":{"gitId":"-"},"content":"        url.putString(USERGUIDE_URL);","lastModifiedDate":"2019-08-19"},{"lineNumber":100,"author":{"gitId":"-"},"content":"        clipboard.setContent(url);","lastModifiedDate":"2019-08-19"},{"lineNumber":101,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2019-08-19"},{"lineNumber":102,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-18"}],"authorContributionMap":{"yl-ang":1,"-":101}},{"path":"src/main/java/seedu/address/ui/MainWindow.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.ui;","lastModifiedDate":"2016-09-22"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.util.logging.Logger;","lastModifiedDate":"2017-06-16"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-16"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import javafx.event.ActionEvent;","lastModifiedDate":"2016-12-18"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import javafx.fxml.FXML;","lastModifiedDate":"2016-08-26"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import javafx.scene.control.MenuItem;","lastModifiedDate":"2016-08-26"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import javafx.scene.control.TextInputControl;","lastModifiedDate":"2016-12-18"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import javafx.scene.input.KeyCombination;","lastModifiedDate":"2016-08-26"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import javafx.scene.input.KeyEvent;","lastModifiedDate":"2016-12-18"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import javafx.scene.layout.StackPane;","lastModifiedDate":"2017-05-09"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import javafx.stage.Stage;","lastModifiedDate":"2016-08-18"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.GuiSettings;","lastModifiedDate":"2016-09-28"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.LogsCenter;","lastModifiedDate":"2017-06-16"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import seedu.address.logic.Logic;","lastModifiedDate":"2016-09-25"},{"lineNumber":16,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.CommandResult;","lastModifiedDate":"2018-12-09"},{"lineNumber":17,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.exceptions.CommandException;","lastModifiedDate":"2018-12-09"},{"lineNumber":18,"author":{"gitId":"-"},"content":"import seedu.address.logic.parser.exceptions.ParseException;","lastModifiedDate":"2018-12-09"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-09"},{"lineNumber":20,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-18"},{"lineNumber":21,"author":{"gitId":"-"},"content":" * The Main Window. Provides the basic application layout containing","lastModifiedDate":"2016-08-18"},{"lineNumber":22,"author":{"gitId":"-"},"content":" * a menu bar and space where other JavaFX elements can be placed.","lastModifiedDate":"2016-08-18"},{"lineNumber":23,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-18"},{"lineNumber":24,"author":{"gitId":"-"},"content":"public class MainWindow extends UiPart\u003cStage\u003e {","lastModifiedDate":"2017-11-29"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-28"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    private static final String FXML \u003d \"MainWindow.fxml\";","lastModifiedDate":"2016-08-18"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    private final Logger logger \u003d LogsCenter.getLogger(getClass());","lastModifiedDate":"2018-08-14"},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-16"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    private Stage primaryStage;","lastModifiedDate":"2016-12-02"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    private Logic logic;","lastModifiedDate":"2016-09-25"},{"lineNumber":32,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    // Independent Ui parts residing in this Ui container","lastModifiedDate":"2016-08-18"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    private PersonListPanel personListPanel;","lastModifiedDate":"2016-08-18"},{"lineNumber":35,"author":{"gitId":"yl-ang"},"content":"    private BookListPanel bookListPanel;","lastModifiedDate":"2022-03-06"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    private ResultDisplay resultDisplay;","lastModifiedDate":"2018-12-09"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    private HelpWindow helpWindow;","lastModifiedDate":"2018-03-15"},{"lineNumber":38,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-09-21"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    private StackPane commandBoxPlaceholder;","lastModifiedDate":"2017-05-09"},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-08-18"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    private MenuItem helpMenuItem;","lastModifiedDate":"2016-08-18"},{"lineNumber":44,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-09-21"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    private StackPane personListPanelPlaceholder;","lastModifiedDate":"2017-05-09"},{"lineNumber":47,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":48,"author":{"gitId":"yl-ang"},"content":"    @FXML","lastModifiedDate":"2022-03-06"},{"lineNumber":49,"author":{"gitId":"yl-ang"},"content":"    private StackPane bookListPanelPlaceholder;","lastModifiedDate":"2022-03-06"},{"lineNumber":50,"author":{"gitId":"yl-ang"},"content":"","lastModifiedDate":"2022-03-06"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-09-21"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    private StackPane resultDisplayPlaceholder;","lastModifiedDate":"2017-05-09"},{"lineNumber":53,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":54,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-09-21"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    private StackPane statusbarPlaceholder;","lastModifiedDate":"2017-05-09"},{"lineNumber":56,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2020-05-27"},{"lineNumber":58,"author":{"gitId":"-"},"content":"     * Creates a {@code MainWindow} with the given {@code Stage} and {@code Logic}.","lastModifiedDate":"2020-05-27"},{"lineNumber":59,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2020-05-27"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    public MainWindow(Stage primaryStage, Logic logic) {","lastModifiedDate":"2018-12-08"},{"lineNumber":61,"author":{"gitId":"-"},"content":"        super(FXML, primaryStage);","lastModifiedDate":"2017-11-29"},{"lineNumber":62,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":63,"author":{"gitId":"-"},"content":"        // Set dependencies","lastModifiedDate":"2016-09-21"},{"lineNumber":64,"author":{"gitId":"-"},"content":"        this.primaryStage \u003d primaryStage;","lastModifiedDate":"2016-12-02"},{"lineNumber":65,"author":{"gitId":"-"},"content":"        this.logic \u003d logic;","lastModifiedDate":"2016-09-25"},{"lineNumber":66,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":67,"author":{"gitId":"-"},"content":"        // Configure the UI","lastModifiedDate":"2016-09-21"},{"lineNumber":68,"author":{"gitId":"-"},"content":"        setWindowDefaultSize(logic.getGuiSettings());","lastModifiedDate":"2018-11-27"},{"lineNumber":69,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":70,"author":{"gitId":"-"},"content":"        setAccelerators();","lastModifiedDate":"2016-09-21"},{"lineNumber":71,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-03-15"},{"lineNumber":72,"author":{"gitId":"-"},"content":"        helpWindow \u003d new HelpWindow();","lastModifiedDate":"2018-03-15"},{"lineNumber":73,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-18"},{"lineNumber":74,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":75,"author":{"gitId":"-"},"content":"    public Stage getPrimaryStage() {","lastModifiedDate":"2016-12-24"},{"lineNumber":76,"author":{"gitId":"-"},"content":"        return primaryStage;","lastModifiedDate":"2016-12-24"},{"lineNumber":77,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-24"},{"lineNumber":78,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-24"},{"lineNumber":79,"author":{"gitId":"-"},"content":"    private void setAccelerators() {","lastModifiedDate":"2016-09-21"},{"lineNumber":80,"author":{"gitId":"-"},"content":"        setAccelerator(helpMenuItem, KeyCombination.valueOf(\"F1\"));","lastModifiedDate":"2016-12-18"},{"lineNumber":81,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-18"},{"lineNumber":82,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-18"},{"lineNumber":83,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-12-18"},{"lineNumber":84,"author":{"gitId":"-"},"content":"     * Sets the accelerator of a MenuItem.","lastModifiedDate":"2016-12-18"},{"lineNumber":85,"author":{"gitId":"-"},"content":"     * @param keyCombination the KeyCombination value of the accelerator","lastModifiedDate":"2016-12-18"},{"lineNumber":86,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-12-18"},{"lineNumber":87,"author":{"gitId":"-"},"content":"    private void setAccelerator(MenuItem menuItem, KeyCombination keyCombination) {","lastModifiedDate":"2016-12-18"},{"lineNumber":88,"author":{"gitId":"-"},"content":"        menuItem.setAccelerator(keyCombination);","lastModifiedDate":"2016-12-18"},{"lineNumber":89,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-18"},{"lineNumber":90,"author":{"gitId":"-"},"content":"        /*","lastModifiedDate":"2016-12-18"},{"lineNumber":91,"author":{"gitId":"-"},"content":"         * TODO: the code below can be removed once the bug reported here","lastModifiedDate":"2016-12-18"},{"lineNumber":92,"author":{"gitId":"-"},"content":"         * https://bugs.openjdk.java.net/browse/JDK-8131666","lastModifiedDate":"2016-12-18"},{"lineNumber":93,"author":{"gitId":"-"},"content":"         * is fixed in later version of SDK.","lastModifiedDate":"2016-12-18"},{"lineNumber":94,"author":{"gitId":"-"},"content":"         *","lastModifiedDate":"2016-12-18"},{"lineNumber":95,"author":{"gitId":"-"},"content":"         * According to the bug report, TextInputControl (TextField, TextArea) will","lastModifiedDate":"2016-12-18"},{"lineNumber":96,"author":{"gitId":"-"},"content":"         * consume function-key events. Because CommandBox contains a TextField, and","lastModifiedDate":"2016-12-18"},{"lineNumber":97,"author":{"gitId":"-"},"content":"         * ResultDisplay contains a TextArea, thus some accelerators (e.g F1) will","lastModifiedDate":"2016-12-18"},{"lineNumber":98,"author":{"gitId":"-"},"content":"         * not work when the focus is in them because the key event is consumed by","lastModifiedDate":"2016-12-18"},{"lineNumber":99,"author":{"gitId":"-"},"content":"         * the TextInputControl(s).","lastModifiedDate":"2016-12-18"},{"lineNumber":100,"author":{"gitId":"-"},"content":"         *","lastModifiedDate":"2016-12-18"},{"lineNumber":101,"author":{"gitId":"-"},"content":"         * For now, we add following event filter to capture such key events and open","lastModifiedDate":"2016-12-18"},{"lineNumber":102,"author":{"gitId":"-"},"content":"         * help window purposely so to support accelerators even when focus is","lastModifiedDate":"2016-12-18"},{"lineNumber":103,"author":{"gitId":"-"},"content":"         * in CommandBox or ResultDisplay.","lastModifiedDate":"2016-12-18"},{"lineNumber":104,"author":{"gitId":"-"},"content":"         */","lastModifiedDate":"2016-12-18"},{"lineNumber":105,"author":{"gitId":"-"},"content":"        getRoot().addEventFilter(KeyEvent.KEY_PRESSED, event -\u003e {","lastModifiedDate":"2016-12-24"},{"lineNumber":106,"author":{"gitId":"-"},"content":"            if (event.getTarget() instanceof TextInputControl \u0026\u0026 keyCombination.match(event)) {","lastModifiedDate":"2016-12-18"},{"lineNumber":107,"author":{"gitId":"-"},"content":"                menuItem.getOnAction().handle(new ActionEvent());","lastModifiedDate":"2016-12-18"},{"lineNumber":108,"author":{"gitId":"-"},"content":"                event.consume();","lastModifiedDate":"2016-12-18"},{"lineNumber":109,"author":{"gitId":"-"},"content":"            }","lastModifiedDate":"2016-12-18"},{"lineNumber":110,"author":{"gitId":"-"},"content":"        });","lastModifiedDate":"2016-12-18"},{"lineNumber":111,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-21"},{"lineNumber":112,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":113,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-08-16"},{"lineNumber":114,"author":{"gitId":"-"},"content":"     * Fills up all the placeholders of this window.","lastModifiedDate":"2017-08-16"},{"lineNumber":115,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-08-16"},{"lineNumber":116,"author":{"gitId":"-"},"content":"    void fillInnerParts() {","lastModifiedDate":"2016-09-21"},{"lineNumber":117,"author":{"gitId":"-"},"content":"        personListPanel \u003d new PersonListPanel(logic.getFilteredPersonList());","lastModifiedDate":"2019-01-25"},{"lineNumber":118,"author":{"gitId":"-"},"content":"        personListPanelPlaceholder.getChildren().add(personListPanel.getRoot());","lastModifiedDate":"2017-06-14"},{"lineNumber":119,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-14"},{"lineNumber":120,"author":{"gitId":"yl-ang"},"content":"        bookListPanel \u003d new BookListPanel(logic.getFilteredBookList());","lastModifiedDate":"2022-03-10"},{"lineNumber":121,"author":{"gitId":"yl-ang"},"content":"        bookListPanelPlaceholder.getChildren().add(bookListPanel.getRoot());","lastModifiedDate":"2022-03-06"},{"lineNumber":122,"author":{"gitId":"yl-ang"},"content":"","lastModifiedDate":"2022-03-06"},{"lineNumber":123,"author":{"gitId":"-"},"content":"        resultDisplay \u003d new ResultDisplay();","lastModifiedDate":"2018-12-09"},{"lineNumber":124,"author":{"gitId":"-"},"content":"        resultDisplayPlaceholder.getChildren().add(resultDisplay.getRoot());","lastModifiedDate":"2017-06-14"},{"lineNumber":125,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-14"},{"lineNumber":126,"author":{"gitId":"-"},"content":"        StatusBarFooter statusBarFooter \u003d new StatusBarFooter(logic.getAddressBookFilePath());","lastModifiedDate":"2019-01-25"},{"lineNumber":127,"author":{"gitId":"-"},"content":"        statusbarPlaceholder.getChildren().add(statusBarFooter.getRoot());","lastModifiedDate":"2017-06-14"},{"lineNumber":128,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-14"},{"lineNumber":129,"author":{"gitId":"-"},"content":"        CommandBox commandBox \u003d new CommandBox(this::executeCommand);","lastModifiedDate":"2019-01-25"},{"lineNumber":130,"author":{"gitId":"-"},"content":"        commandBoxPlaceholder.getChildren().add(commandBox.getRoot());","lastModifiedDate":"2017-06-14"},{"lineNumber":131,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-18"},{"lineNumber":132,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":133,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-18"},{"lineNumber":134,"author":{"gitId":"-"},"content":"     * Sets the default size based on {@code guiSettings}.","lastModifiedDate":"2018-11-27"},{"lineNumber":135,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-18"},{"lineNumber":136,"author":{"gitId":"-"},"content":"    private void setWindowDefaultSize(GuiSettings guiSettings) {","lastModifiedDate":"2018-11-27"},{"lineNumber":137,"author":{"gitId":"-"},"content":"        primaryStage.setHeight(guiSettings.getWindowHeight());","lastModifiedDate":"2018-11-27"},{"lineNumber":138,"author":{"gitId":"-"},"content":"        primaryStage.setWidth(guiSettings.getWindowWidth());","lastModifiedDate":"2018-11-27"},{"lineNumber":139,"author":{"gitId":"-"},"content":"        if (guiSettings.getWindowCoordinates() !\u003d null) {","lastModifiedDate":"2018-11-27"},{"lineNumber":140,"author":{"gitId":"-"},"content":"            primaryStage.setX(guiSettings.getWindowCoordinates().getX());","lastModifiedDate":"2018-11-27"},{"lineNumber":141,"author":{"gitId":"-"},"content":"            primaryStage.setY(guiSettings.getWindowCoordinates().getY());","lastModifiedDate":"2018-11-27"},{"lineNumber":142,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-08-18"},{"lineNumber":143,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-18"},{"lineNumber":144,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":145,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-08-16"},{"lineNumber":146,"author":{"gitId":"-"},"content":"     * Opens the help window or focuses on it if it\u0027s already opened.","lastModifiedDate":"2018-03-15"},{"lineNumber":147,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-08-16"},{"lineNumber":148,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-08-18"},{"lineNumber":149,"author":{"gitId":"-"},"content":"    public void handleHelp() {","lastModifiedDate":"2016-08-31"},{"lineNumber":150,"author":{"gitId":"-"},"content":"        if (!helpWindow.isShowing()) {","lastModifiedDate":"2018-03-15"},{"lineNumber":151,"author":{"gitId":"-"},"content":"            helpWindow.show();","lastModifiedDate":"2016-08-18"},{"lineNumber":152,"author":{"gitId":"-"},"content":"        } else {","lastModifiedDate":"2018-03-15"},{"lineNumber":153,"author":{"gitId":"-"},"content":"            helpWindow.focus();","lastModifiedDate":"2018-03-15"},{"lineNumber":154,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-03-15"},{"lineNumber":155,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-18"},{"lineNumber":156,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":157,"author":{"gitId":"-"},"content":"    void show() {","lastModifiedDate":"2016-10-15"},{"lineNumber":158,"author":{"gitId":"-"},"content":"        primaryStage.show();","lastModifiedDate":"2016-08-18"},{"lineNumber":159,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-18"},{"lineNumber":160,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":161,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-18"},{"lineNumber":162,"author":{"gitId":"-"},"content":"     * Closes the application.","lastModifiedDate":"2016-08-18"},{"lineNumber":163,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-18"},{"lineNumber":164,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-08-18"},{"lineNumber":165,"author":{"gitId":"-"},"content":"    private void handleExit() {","lastModifiedDate":"2016-08-18"},{"lineNumber":166,"author":{"gitId":"-"},"content":"        GuiSettings guiSettings \u003d new GuiSettings(primaryStage.getWidth(), primaryStage.getHeight(),","lastModifiedDate":"2018-12-08"},{"lineNumber":167,"author":{"gitId":"-"},"content":"                (int) primaryStage.getX(), (int) primaryStage.getY());","lastModifiedDate":"2018-12-08"},{"lineNumber":168,"author":{"gitId":"-"},"content":"        logic.setGuiSettings(guiSettings);","lastModifiedDate":"2018-12-08"},{"lineNumber":169,"author":{"gitId":"-"},"content":"        helpWindow.hide();","lastModifiedDate":"2018-12-08"},{"lineNumber":170,"author":{"gitId":"-"},"content":"        primaryStage.hide();","lastModifiedDate":"2018-12-08"},{"lineNumber":171,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-18"},{"lineNumber":172,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-25"},{"lineNumber":173,"author":{"gitId":"-"},"content":"    public PersonListPanel getPersonListPanel() {","lastModifiedDate":"2016-08-25"},{"lineNumber":174,"author":{"gitId":"-"},"content":"        return personListPanel;","lastModifiedDate":"2018-08-14"},{"lineNumber":175,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-25"},{"lineNumber":176,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":177,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-12-09"},{"lineNumber":178,"author":{"gitId":"-"},"content":"     * Executes the command and returns the result.","lastModifiedDate":"2018-12-09"},{"lineNumber":179,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2018-12-09"},{"lineNumber":180,"author":{"gitId":"-"},"content":"     * @see seedu.address.logic.Logic#execute(String)","lastModifiedDate":"2018-12-09"},{"lineNumber":181,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-12-09"},{"lineNumber":182,"author":{"gitId":"-"},"content":"    private CommandResult executeCommand(String commandText) throws CommandException, ParseException {","lastModifiedDate":"2018-12-09"},{"lineNumber":183,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2018-12-09"},{"lineNumber":184,"author":{"gitId":"-"},"content":"            CommandResult commandResult \u003d logic.execute(commandText);","lastModifiedDate":"2018-12-09"},{"lineNumber":185,"author":{"gitId":"-"},"content":"            logger.info(\"Result: \" + commandResult.getFeedbackToUser());","lastModifiedDate":"2018-12-09"},{"lineNumber":186,"author":{"gitId":"-"},"content":"            resultDisplay.setFeedbackToUser(commandResult.getFeedbackToUser());","lastModifiedDate":"2018-12-09"},{"lineNumber":187,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":188,"author":{"gitId":"-"},"content":"            if (commandResult.isShowHelp()) {","lastModifiedDate":"2018-12-09"},{"lineNumber":189,"author":{"gitId":"-"},"content":"                handleHelp();","lastModifiedDate":"2018-12-09"},{"lineNumber":190,"author":{"gitId":"-"},"content":"            }","lastModifiedDate":"2018-12-09"},{"lineNumber":191,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":192,"author":{"gitId":"-"},"content":"            if (commandResult.isExit()) {","lastModifiedDate":"2018-12-09"},{"lineNumber":193,"author":{"gitId":"-"},"content":"                handleExit();","lastModifiedDate":"2018-12-09"},{"lineNumber":194,"author":{"gitId":"-"},"content":"            }","lastModifiedDate":"2018-12-09"},{"lineNumber":195,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":196,"author":{"gitId":"-"},"content":"            return commandResult;","lastModifiedDate":"2018-12-09"},{"lineNumber":197,"author":{"gitId":"-"},"content":"        } catch (CommandException | ParseException e) {","lastModifiedDate":"2018-12-09"},{"lineNumber":198,"author":{"gitId":"-"},"content":"            logger.info(\"Invalid command: \" + commandText);","lastModifiedDate":"2018-12-09"},{"lineNumber":199,"author":{"gitId":"-"},"content":"            resultDisplay.setFeedbackToUser(e.getMessage());","lastModifiedDate":"2018-12-09"},{"lineNumber":200,"author":{"gitId":"-"},"content":"            throw e;","lastModifiedDate":"2018-12-09"},{"lineNumber":201,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-12-09"},{"lineNumber":202,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-12-09"},{"lineNumber":203,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-18"}],"authorContributionMap":{"yl-ang":7,"-":196}},{"path":"src/main/java/seedu/address/ui/PersonCard.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.ui;","lastModifiedDate":"2016-09-22"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.util.Comparator;","lastModifiedDate":"2019-01-02"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-01-02"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import javafx.fxml.FXML;","lastModifiedDate":"2016-09-21"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import javafx.scene.control.Label;","lastModifiedDate":"2016-09-21"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import javafx.scene.layout.FlowPane;","lastModifiedDate":"2016-12-18"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import javafx.scene.layout.HBox;","lastModifiedDate":"2016-09-21"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import javafx.scene.layout.Region;","lastModifiedDate":"2016-12-24"},{"lineNumber":10,"author":{"gitId":"aditi2313"},"content":"import seedu.address.model.person.Patron;","lastModifiedDate":"2022-03-09"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":12,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-08-16"},{"lineNumber":13,"author":{"gitId":"aditi2313"},"content":" * A UI component that displays information of a {@code Person}.","lastModifiedDate":"2022-03-11"},{"lineNumber":14,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-08-16"},{"lineNumber":15,"author":{"gitId":"-"},"content":"public class PersonCard extends UiPart\u003cRegion\u003e {","lastModifiedDate":"2016-12-24"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    private static final String FXML \u003d \"PersonListCard.fxml\";","lastModifiedDate":"2016-09-21"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-03-25"},{"lineNumber":20,"author":{"gitId":"-"},"content":"     * Note: Certain keywords such as \"location\" and \"resources\" are reserved keywords in JavaFX.","lastModifiedDate":"2017-03-25"},{"lineNumber":21,"author":{"gitId":"-"},"content":"     * As a consequence, UI elements\u0027 variable names cannot be set to such keywords","lastModifiedDate":"2017-03-25"},{"lineNumber":22,"author":{"gitId":"-"},"content":"     * or an exception will be thrown by JavaFX during runtime.","lastModifiedDate":"2017-03-25"},{"lineNumber":23,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2017-03-25"},{"lineNumber":24,"author":{"gitId":"-"},"content":"     * @see \u003ca href\u003d\"https://github.com/se-edu/addressbook-level4/issues/336\"\u003eThe issue on AddressBook level 4\u003c/a\u003e","lastModifiedDate":"2017-03-25"},{"lineNumber":25,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-03-25"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-25"},{"lineNumber":27,"author":{"gitId":"aditi2313"},"content":"    public final Patron person;","lastModifiedDate":"2022-03-09"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-12"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-09-21"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    private HBox cardPane;","lastModifiedDate":"2016-09-21"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-09-21"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    private Label name;","lastModifiedDate":"2016-09-21"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-09-21"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    private Label id;","lastModifiedDate":"2016-09-21"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-09-21"},{"lineNumber":36,"author":{"gitId":"yl-ang"},"content":"    private Label studentId;","lastModifiedDate":"2022-03-06"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-09-21"},{"lineNumber":38,"author":{"gitId":"yl-ang"},"content":"    private Label phone;","lastModifiedDate":"2022-03-06"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-09-21"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    private Label email;","lastModifiedDate":"2016-09-21"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-09-21"},{"lineNumber":42,"author":{"gitId":"yl-ang"},"content":"    private FlowPane patronRoleTags;","lastModifiedDate":"2022-03-08"},{"lineNumber":43,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2020-05-27"},{"lineNumber":45,"author":{"gitId":"-"},"content":"     * Creates a {@code PersonCode} with the given {@code Person} and index to display.","lastModifiedDate":"2020-05-27"},{"lineNumber":46,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2020-05-27"},{"lineNumber":47,"author":{"gitId":"aditi2313"},"content":"    public PersonCard(Patron person, int displayedIndex) {","lastModifiedDate":"2022-03-09"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        super(FXML);","lastModifiedDate":"2016-12-24"},{"lineNumber":49,"author":{"gitId":"-"},"content":"        this.person \u003d person;","lastModifiedDate":"2017-07-12"},{"lineNumber":50,"author":{"gitId":"-"},"content":"        id.setText(displayedIndex + \". \");","lastModifiedDate":"2016-09-21"},{"lineNumber":51,"author":{"gitId":"-"},"content":"        name.setText(person.getName().fullName);","lastModifiedDate":"2017-12-20"},{"lineNumber":52,"author":{"gitId":"-"},"content":"        phone.setText(person.getPhone().value);","lastModifiedDate":"2017-12-20"},{"lineNumber":53,"author":{"gitId":"-"},"content":"        email.setText(person.getEmail().value);","lastModifiedDate":"2017-12-20"},{"lineNumber":54,"author":{"gitId":"yl-ang"},"content":"","lastModifiedDate":"2022-03-07"},{"lineNumber":55,"author":{"gitId":"yl-ang"},"content":"        // Remove the hardcoded student ID during integration -- NOT SAFE for deployment","lastModifiedDate":"2022-03-07"},{"lineNumber":56,"author":{"gitId":"yl-ang"},"content":"        studentId.setText(\"Student ID: \" + \"A1234567X\");","lastModifiedDate":"2022-03-06"},{"lineNumber":57,"author":{"gitId":"yl-ang"},"content":"        phone.setText(\"Phone: \" + person.getPhone().value);","lastModifiedDate":"2022-03-06"},{"lineNumber":58,"author":{"gitId":"yl-ang"},"content":"        email.setText(\"Email: \" + person.getEmail().value);","lastModifiedDate":"2022-03-06"},{"lineNumber":59,"author":{"gitId":"-"},"content":"        person.getTags().stream()","lastModifiedDate":"2019-01-02"},{"lineNumber":60,"author":{"gitId":"-"},"content":"                .sorted(Comparator.comparing(tag -\u003e tag.tagName))","lastModifiedDate":"2019-01-02"},{"lineNumber":61,"author":{"gitId":"yl-ang"},"content":"                .forEach(tag -\u003e patronRoleTags.getChildren().add(new Label(tag.tagName)));","lastModifiedDate":"2022-03-08"},{"lineNumber":62,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-18"},{"lineNumber":63,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-14"},{"lineNumber":64,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2017-07-14"},{"lineNumber":65,"author":{"gitId":"-"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2017-07-14"},{"lineNumber":66,"author":{"gitId":"-"},"content":"        // short circuit if same object","lastModifiedDate":"2017-07-14"},{"lineNumber":67,"author":{"gitId":"-"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2017-07-14"},{"lineNumber":68,"author":{"gitId":"-"},"content":"            return true;","lastModifiedDate":"2017-07-14"},{"lineNumber":69,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-07-14"},{"lineNumber":70,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-14"},{"lineNumber":71,"author":{"gitId":"-"},"content":"        // instanceof handles nulls","lastModifiedDate":"2017-07-14"},{"lineNumber":72,"author":{"gitId":"-"},"content":"        if (!(other instanceof PersonCard)) {","lastModifiedDate":"2017-07-14"},{"lineNumber":73,"author":{"gitId":"-"},"content":"            return false;","lastModifiedDate":"2017-07-14"},{"lineNumber":74,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-07-14"},{"lineNumber":75,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-14"},{"lineNumber":76,"author":{"gitId":"-"},"content":"        // state check","lastModifiedDate":"2017-07-14"},{"lineNumber":77,"author":{"gitId":"-"},"content":"        PersonCard card \u003d (PersonCard) other;","lastModifiedDate":"2017-07-14"},{"lineNumber":78,"author":{"gitId":"-"},"content":"        return id.getText().equals(card.id.getText())","lastModifiedDate":"2017-07-14"},{"lineNumber":79,"author":{"gitId":"-"},"content":"                \u0026\u0026 person.equals(card.person);","lastModifiedDate":"2017-07-14"},{"lineNumber":80,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-07-14"},{"lineNumber":81,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-09-21"}],"authorContributionMap":{"yl-ang":9,"-":68,"aditi2313":4}},{"path":"src/main/java/seedu/address/ui/PersonListPanel.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.ui;","lastModifiedDate":"2016-09-22"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.util.logging.Logger;","lastModifiedDate":"2017-01-19"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2016-08-25"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import javafx.fxml.FXML;","lastModifiedDate":"2016-08-25"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import javafx.scene.control.ListCell;","lastModifiedDate":"2016-09-21"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import javafx.scene.control.ListView;","lastModifiedDate":"2016-08-25"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import javafx.scene.layout.Region;","lastModifiedDate":"2016-12-24"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.LogsCenter;","lastModifiedDate":"2017-01-19"},{"lineNumber":11,"author":{"gitId":"aditi2313"},"content":"import seedu.address.model.person.Patron;","lastModifiedDate":"2022-03-09"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":13,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-18"},{"lineNumber":14,"author":{"gitId":"-"},"content":" * Panel containing the list of persons.","lastModifiedDate":"2016-09-21"},{"lineNumber":15,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-18"},{"lineNumber":16,"author":{"gitId":"-"},"content":"public class PersonListPanel extends UiPart\u003cRegion\u003e {","lastModifiedDate":"2016-12-24"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    private static final String FXML \u003d \"PersonListPanel.fxml\";","lastModifiedDate":"2016-09-14"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    private final Logger logger \u003d LogsCenter.getLogger(PersonListPanel.class);","lastModifiedDate":"2017-04-01"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-08-18"},{"lineNumber":21,"author":{"gitId":"aditi2313"},"content":"    private ListView\u003cPatron\u003e personListView;","lastModifiedDate":"2022-03-09"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2020-05-27"},{"lineNumber":24,"author":{"gitId":"-"},"content":"     * Creates a {@code PersonListPanel} with the given {@code ObservableList}.","lastModifiedDate":"2020-05-27"},{"lineNumber":25,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2020-05-27"},{"lineNumber":26,"author":{"gitId":"aditi2313"},"content":"    public PersonListPanel(ObservableList\u003cPatron\u003e personList) {","lastModifiedDate":"2022-03-09"},{"lineNumber":27,"author":{"gitId":"-"},"content":"        super(FXML);","lastModifiedDate":"2016-12-24"},{"lineNumber":28,"author":{"gitId":"-"},"content":"        personListView.setItems(personList);","lastModifiedDate":"2018-02-08"},{"lineNumber":29,"author":{"gitId":"-"},"content":"        personListView.setCellFactory(listView -\u003e new PersonListViewCell());","lastModifiedDate":"2016-08-18"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-16"},{"lineNumber":31,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-16"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-08-16"},{"lineNumber":33,"author":{"gitId":"-"},"content":"     * Custom {@code ListCell} that displays the graphics of a {@code Person} using a {@code PersonCard}.","lastModifiedDate":"2018-02-08"},{"lineNumber":34,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-08-16"},{"lineNumber":35,"author":{"gitId":"aditi2313"},"content":"    class PersonListViewCell extends ListCell\u003cPatron\u003e {","lastModifiedDate":"2022-03-09"},{"lineNumber":36,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2016-09-21"},{"lineNumber":37,"author":{"gitId":"aditi2313"},"content":"        protected void updateItem(Patron person, boolean empty) {","lastModifiedDate":"2022-03-09"},{"lineNumber":38,"author":{"gitId":"-"},"content":"            super.updateItem(person, empty);","lastModifiedDate":"2016-09-21"},{"lineNumber":39,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":40,"author":{"gitId":"-"},"content":"            if (empty || person \u003d\u003d null) {","lastModifiedDate":"2016-09-21"},{"lineNumber":41,"author":{"gitId":"-"},"content":"                setGraphic(null);","lastModifiedDate":"2016-09-21"},{"lineNumber":42,"author":{"gitId":"-"},"content":"                setText(null);","lastModifiedDate":"2016-09-21"},{"lineNumber":43,"author":{"gitId":"-"},"content":"            } else {","lastModifiedDate":"2016-09-21"},{"lineNumber":44,"author":{"gitId":"-"},"content":"                setGraphic(new PersonCard(person, getIndex() + 1).getRoot());","lastModifiedDate":"2018-02-08"},{"lineNumber":45,"author":{"gitId":"-"},"content":"            }","lastModifiedDate":"2016-09-21"},{"lineNumber":46,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-09-21"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-21"},{"lineNumber":48,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":49,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-18"}],"authorContributionMap":{"-":44,"aditi2313":5}},{"path":"src/main/java/seedu/address/ui/UiManager.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.ui;","lastModifiedDate":"2016-09-22"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.util.logging.Logger;","lastModifiedDate":"2017-01-19"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import javafx.application.Platform;","lastModifiedDate":"2016-08-18"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import javafx.scene.control.Alert;","lastModifiedDate":"2016-08-18"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import javafx.scene.control.Alert.AlertType;","lastModifiedDate":"2016-08-18"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import javafx.scene.image.Image;","lastModifiedDate":"2016-08-18"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import javafx.stage.Stage;","lastModifiedDate":"2016-08-18"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import seedu.address.MainApp;","lastModifiedDate":"2016-08-25"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.LogsCenter;","lastModifiedDate":"2016-09-23"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import seedu.address.commons.util.StringUtil;","lastModifiedDate":"2016-09-25"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import seedu.address.logic.Logic;","lastModifiedDate":"2016-09-25"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":15,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-18"},{"lineNumber":16,"author":{"gitId":"-"},"content":" * The manager of the UI component.","lastModifiedDate":"2016-09-25"},{"lineNumber":17,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-18"},{"lineNumber":18,"author":{"gitId":"-"},"content":"public class UiManager implements Ui {","lastModifiedDate":"2018-12-09"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-04-01"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    public static final String ALERT_DIALOG_PANE_FIELD_ID \u003d \"alertDialogPane\";","lastModifiedDate":"2017-04-01"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-04-01"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    private static final Logger logger \u003d LogsCenter.getLogger(UiManager.class);","lastModifiedDate":"2016-09-23"},{"lineNumber":23,"author":{"gitId":"yl-ang"},"content":"    private static final String ICON_APPLICATION \u003d \"/images/libtask_icon.png\";","lastModifiedDate":"2022-03-07"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    private Logic logic;","lastModifiedDate":"2016-09-25"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    private MainWindow mainWindow;","lastModifiedDate":"2016-08-18"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2020-05-27"},{"lineNumber":29,"author":{"gitId":"-"},"content":"     * Creates a {@code UiManager} with the given {@code Logic}.","lastModifiedDate":"2020-05-27"},{"lineNumber":30,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2020-05-27"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    public UiManager(Logic logic) {","lastModifiedDate":"2018-12-08"},{"lineNumber":32,"author":{"gitId":"-"},"content":"        this.logic \u003d logic;","lastModifiedDate":"2016-09-25"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-18"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-25"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    public void start(Stage primaryStage) {","lastModifiedDate":"2016-09-25"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        logger.info(\"Starting UI...\");","lastModifiedDate":"2016-09-21"},{"lineNumber":38,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        //Set the application icon.","lastModifiedDate":"2016-08-18"},{"lineNumber":40,"author":{"gitId":"-"},"content":"        primaryStage.getIcons().add(getImage(ICON_APPLICATION));","lastModifiedDate":"2016-08-18"},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":42,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2016-08-18"},{"lineNumber":43,"author":{"gitId":"-"},"content":"            mainWindow \u003d new MainWindow(primaryStage, logic);","lastModifiedDate":"2018-12-08"},{"lineNumber":44,"author":{"gitId":"-"},"content":"            mainWindow.show(); //This should be called before creating other UI parts","lastModifiedDate":"2016-08-18"},{"lineNumber":45,"author":{"gitId":"-"},"content":"            mainWindow.fillInnerParts();","lastModifiedDate":"2016-08-18"},{"lineNumber":46,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":47,"author":{"gitId":"-"},"content":"        } catch (Throwable e) {","lastModifiedDate":"2016-08-18"},{"lineNumber":48,"author":{"gitId":"-"},"content":"            logger.severe(StringUtil.getDetails(e));","lastModifiedDate":"2016-09-21"},{"lineNumber":49,"author":{"gitId":"-"},"content":"            showFatalErrorDialogAndShutdown(\"Fatal error during initializing\", e);","lastModifiedDate":"2016-08-18"},{"lineNumber":50,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-08-18"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-18"},{"lineNumber":52,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":53,"author":{"gitId":"-"},"content":"    private Image getImage(String imagePath) {","lastModifiedDate":"2016-08-18"},{"lineNumber":54,"author":{"gitId":"-"},"content":"        return new Image(MainApp.class.getResourceAsStream(imagePath));","lastModifiedDate":"2016-08-18"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-18"},{"lineNumber":56,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    void showAlertDialogAndWait(Alert.AlertType type, String title, String headerText, String contentText) {","lastModifiedDate":"2016-09-21"},{"lineNumber":58,"author":{"gitId":"-"},"content":"        showAlertDialogAndWait(mainWindow.getPrimaryStage(), type, title, headerText, contentText);","lastModifiedDate":"2016-08-18"},{"lineNumber":59,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-18"},{"lineNumber":60,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":61,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-08-16"},{"lineNumber":62,"author":{"gitId":"-"},"content":"     * Shows an alert dialog on {@code owner} with the given parameters.","lastModifiedDate":"2017-08-16"},{"lineNumber":63,"author":{"gitId":"-"},"content":"     * This method only returns after the user has closed the alert dialog.","lastModifiedDate":"2017-08-16"},{"lineNumber":64,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-08-16"},{"lineNumber":65,"author":{"gitId":"-"},"content":"    private static void showAlertDialogAndWait(Stage owner, AlertType type, String title, String headerText,","lastModifiedDate":"2016-09-21"},{"lineNumber":66,"author":{"gitId":"-"},"content":"                                               String contentText) {","lastModifiedDate":"2016-08-18"},{"lineNumber":67,"author":{"gitId":"-"},"content":"        final Alert alert \u003d new Alert(type);","lastModifiedDate":"2016-08-18"},{"lineNumber":68,"author":{"gitId":"-"},"content":"        alert.getDialogPane().getStylesheets().add(\"view/DarkTheme.css\");","lastModifiedDate":"2016-08-20"},{"lineNumber":69,"author":{"gitId":"-"},"content":"        alert.initOwner(owner);","lastModifiedDate":"2016-08-18"},{"lineNumber":70,"author":{"gitId":"-"},"content":"        alert.setTitle(title);","lastModifiedDate":"2016-08-18"},{"lineNumber":71,"author":{"gitId":"-"},"content":"        alert.setHeaderText(headerText);","lastModifiedDate":"2016-08-18"},{"lineNumber":72,"author":{"gitId":"-"},"content":"        alert.setContentText(contentText);","lastModifiedDate":"2016-08-18"},{"lineNumber":73,"author":{"gitId":"-"},"content":"        alert.getDialogPane().setId(ALERT_DIALOG_PANE_FIELD_ID);","lastModifiedDate":"2016-10-12"},{"lineNumber":74,"author":{"gitId":"-"},"content":"        alert.showAndWait();","lastModifiedDate":"2016-08-18"},{"lineNumber":75,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-18"},{"lineNumber":76,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":77,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-08-16"},{"lineNumber":78,"author":{"gitId":"-"},"content":"     * Shows an error alert dialog with {@code title} and error message, {@code e},","lastModifiedDate":"2017-08-16"},{"lineNumber":79,"author":{"gitId":"-"},"content":"     * and exits the application after the user has closed the alert dialog.","lastModifiedDate":"2017-08-16"},{"lineNumber":80,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-08-16"},{"lineNumber":81,"author":{"gitId":"-"},"content":"    private void showFatalErrorDialogAndShutdown(String title, Throwable e) {","lastModifiedDate":"2016-09-21"},{"lineNumber":82,"author":{"gitId":"-"},"content":"        logger.severe(title + \" \" + e.getMessage() + StringUtil.getDetails(e));","lastModifiedDate":"2016-09-21"},{"lineNumber":83,"author":{"gitId":"-"},"content":"        showAlertDialogAndWait(Alert.AlertType.ERROR, title, e.getMessage(), e.toString());","lastModifiedDate":"2016-08-18"},{"lineNumber":84,"author":{"gitId":"-"},"content":"        Platform.exit();","lastModifiedDate":"2016-08-18"},{"lineNumber":85,"author":{"gitId":"-"},"content":"        System.exit(1);","lastModifiedDate":"2016-08-18"},{"lineNumber":86,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-18"},{"lineNumber":87,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-25"},{"lineNumber":88,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-18"}],"authorContributionMap":{"yl-ang":1,"-":87}},{"path":"src/main/resources/view/BookListCard.fxml","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"yl-ang"},"content":"\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e","lastModifiedDate":"2022-03-06"},{"lineNumber":2,"author":{"gitId":"yl-ang"},"content":"","lastModifiedDate":"2022-03-06"},{"lineNumber":3,"author":{"gitId":"yl-ang"},"content":"\u003c?import javafx.geometry.Insets?\u003e","lastModifiedDate":"2022-03-06"},{"lineNumber":4,"author":{"gitId":"yl-ang"},"content":"\u003c?import javafx.scene.control.Label?\u003e","lastModifiedDate":"2022-03-06"},{"lineNumber":5,"author":{"gitId":"yl-ang"},"content":"\u003c?import javafx.scene.layout.ColumnConstraints?\u003e","lastModifiedDate":"2022-03-06"},{"lineNumber":6,"author":{"gitId":"yl-ang"},"content":"\u003c?import javafx.scene.layout.FlowPane?\u003e","lastModifiedDate":"2022-03-06"},{"lineNumber":7,"author":{"gitId":"yl-ang"},"content":"\u003c?import javafx.scene.layout.GridPane?\u003e","lastModifiedDate":"2022-03-06"},{"lineNumber":8,"author":{"gitId":"yl-ang"},"content":"\u003c?import javafx.scene.layout.HBox?\u003e","lastModifiedDate":"2022-03-06"},{"lineNumber":9,"author":{"gitId":"yl-ang"},"content":"\u003c?import javafx.scene.layout.Region?\u003e","lastModifiedDate":"2022-03-06"},{"lineNumber":10,"author":{"gitId":"yl-ang"},"content":"\u003c?import javafx.scene.layout.VBox?\u003e","lastModifiedDate":"2022-03-06"},{"lineNumber":11,"author":{"gitId":"yl-ang"},"content":"","lastModifiedDate":"2022-03-06"},{"lineNumber":12,"author":{"gitId":"yl-ang"},"content":"\u003cHBox id\u003d\"cardPane\" fx:id\u003d\"cardPane\" xmlns\u003d\"http://javafx.com/javafx/8\" xmlns:fx\u003d\"http://javafx.com/fxml/1\"\u003e","lastModifiedDate":"2022-03-06"},{"lineNumber":13,"author":{"gitId":"yl-ang"},"content":"  \u003cGridPane HBox.hgrow\u003d\"ALWAYS\"\u003e","lastModifiedDate":"2022-03-06"},{"lineNumber":14,"author":{"gitId":"yl-ang"},"content":"    \u003ccolumnConstraints\u003e","lastModifiedDate":"2022-03-06"},{"lineNumber":15,"author":{"gitId":"yl-ang"},"content":"      \u003cColumnConstraints hgrow\u003d\"SOMETIMES\" minWidth\u003d\"10\" prefWidth\u003d\"150\" /\u003e","lastModifiedDate":"2022-03-06"},{"lineNumber":16,"author":{"gitId":"yl-ang"},"content":"    \u003c/columnConstraints\u003e","lastModifiedDate":"2022-03-06"},{"lineNumber":17,"author":{"gitId":"yl-ang"},"content":"    \u003cVBox alignment\u003d\"CENTER_LEFT\" minHeight\u003d\"105\" GridPane.columnIndex\u003d\"0\"\u003e","lastModifiedDate":"2022-03-06"},{"lineNumber":18,"author":{"gitId":"yl-ang"},"content":"      \u003cpadding\u003e","lastModifiedDate":"2022-03-06"},{"lineNumber":19,"author":{"gitId":"yl-ang"},"content":"        \u003cInsets top\u003d\"5\" right\u003d\"5\" bottom\u003d\"5\" left\u003d\"15\" /\u003e","lastModifiedDate":"2022-03-06"},{"lineNumber":20,"author":{"gitId":"yl-ang"},"content":"      \u003c/padding\u003e","lastModifiedDate":"2022-03-06"},{"lineNumber":21,"author":{"gitId":"yl-ang"},"content":"      \u003cHBox spacing\u003d\"5\" alignment\u003d\"CENTER_LEFT\"\u003e","lastModifiedDate":"2022-03-06"},{"lineNumber":22,"author":{"gitId":"yl-ang"},"content":"        \u003cLabel fx:id\u003d\"id\" styleClass\u003d\"cell_big_label\"\u003e","lastModifiedDate":"2022-03-06"},{"lineNumber":23,"author":{"gitId":"yl-ang"},"content":"          \u003cminWidth\u003e","lastModifiedDate":"2022-03-06"},{"lineNumber":24,"author":{"gitId":"yl-ang"},"content":"            \u003c!-- Ensures that the label text is never truncated --\u003e","lastModifiedDate":"2022-03-06"},{"lineNumber":25,"author":{"gitId":"yl-ang"},"content":"            \u003cRegion fx:constant\u003d\"USE_PREF_SIZE\" /\u003e","lastModifiedDate":"2022-03-06"},{"lineNumber":26,"author":{"gitId":"yl-ang"},"content":"          \u003c/minWidth\u003e","lastModifiedDate":"2022-03-06"},{"lineNumber":27,"author":{"gitId":"yl-ang"},"content":"        \u003c/Label\u003e","lastModifiedDate":"2022-03-06"},{"lineNumber":28,"author":{"gitId":"yl-ang"},"content":"        \u003cLabel fx:id\u003d\"name\" text\u003d\"\\$first\" styleClass\u003d\"cell_big_label\" wrapText\u003d\"true\" /\u003e","lastModifiedDate":"2022-03-09"},{"lineNumber":29,"author":{"gitId":"yl-ang"},"content":"      \u003c/HBox\u003e","lastModifiedDate":"2022-03-06"},{"lineNumber":30,"author":{"gitId":"yl-ang"},"content":"      \u003cFlowPane fx:id\u003d\"bookCategoryTags\" /\u003e","lastModifiedDate":"2022-03-08"},{"lineNumber":31,"author":{"gitId":"yl-ang"},"content":"      \u003cLabel fx:id\u003d\"authors\" styleClass\u003d\"cell_small_label\" visible\u003d\"false\" managed\u003d\"false\" wrapText\u003d\"true\" /\u003e","lastModifiedDate":"2022-03-09"},{"lineNumber":32,"author":{"gitId":"yl-ang"},"content":"      \u003cLabel fx:id\u003d\"isbn\" styleClass\u003d\"cell_small_label\" text\u003d\"\\$isbn\" /\u003e","lastModifiedDate":"2022-03-06"},{"lineNumber":33,"author":{"gitId":"yl-ang"},"content":"      \u003cFlowPane fx:id\u003d\"bookAvailableTag\" /\u003e","lastModifiedDate":"2022-03-09"},{"lineNumber":34,"author":{"gitId":"yl-ang"},"content":"      \u003cFlowPane fx:id\u003d\"bookBorrowTag\" /\u003e","lastModifiedDate":"2022-03-09"},{"lineNumber":35,"author":{"gitId":"yl-ang"},"content":"    \u003c/VBox\u003e","lastModifiedDate":"2022-03-06"},{"lineNumber":36,"author":{"gitId":"yl-ang"},"content":"  \u003c/GridPane\u003e","lastModifiedDate":"2022-03-06"},{"lineNumber":37,"author":{"gitId":"yl-ang"},"content":"\u003c/HBox\u003e","lastModifiedDate":"2022-03-06"}],"authorContributionMap":{"yl-ang":37}},{"path":"src/main/resources/view/BookListPanel.fxml","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"yl-ang"},"content":"\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e","lastModifiedDate":"2022-03-06"},{"lineNumber":2,"author":{"gitId":"yl-ang"},"content":"","lastModifiedDate":"2022-03-06"},{"lineNumber":3,"author":{"gitId":"yl-ang"},"content":"\u003c?import javafx.scene.control.ListView?\u003e","lastModifiedDate":"2022-03-06"},{"lineNumber":4,"author":{"gitId":"yl-ang"},"content":"\u003c?import javafx.scene.layout.VBox?\u003e","lastModifiedDate":"2022-03-06"},{"lineNumber":5,"author":{"gitId":"yl-ang"},"content":"","lastModifiedDate":"2022-03-06"},{"lineNumber":6,"author":{"gitId":"yl-ang"},"content":"\u003cVBox xmlns\u003d\"http://javafx.com/javafx/8\" xmlns:fx\u003d\"http://javafx.com/fxml/1\"\u003e","lastModifiedDate":"2022-03-06"},{"lineNumber":7,"author":{"gitId":"yl-ang"},"content":"  \u003cListView fx:id\u003d\"bookListView\" VBox.vgrow\u003d\"ALWAYS\" /\u003e","lastModifiedDate":"2022-03-07"},{"lineNumber":8,"author":{"gitId":"yl-ang"},"content":"\u003c/VBox\u003e","lastModifiedDate":"2022-03-06"}],"authorContributionMap":{"yl-ang":8}},{"path":"src/main/resources/view/DarkTheme.css","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":".background {","lastModifiedDate":"2016-08-08"},{"lineNumber":2,"author":{"gitId":"-"},"content":"    -fx-background-color: derive(#1d1d1d, 20%);","lastModifiedDate":"2016-08-15"},{"lineNumber":3,"author":{"gitId":"-"},"content":"    background-color: #383838; /* Used in the default.html file */","lastModifiedDate":"2017-03-02"},{"lineNumber":4,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":6,"author":{"gitId":"-"},"content":".label {","lastModifiedDate":"2016-08-08"},{"lineNumber":7,"author":{"gitId":"-"},"content":"    -fx-font-size: 11pt;","lastModifiedDate":"2016-08-08"},{"lineNumber":8,"author":{"gitId":"-"},"content":"    -fx-font-family: \"Segoe UI Semibold\";","lastModifiedDate":"2022-01-13"},{"lineNumber":9,"author":{"gitId":"-"},"content":"    -fx-text-fill: #555555;","lastModifiedDate":"2016-08-15"},{"lineNumber":10,"author":{"gitId":"-"},"content":"    -fx-opacity: 0.9;","lastModifiedDate":"2016-08-08"},{"lineNumber":11,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":13,"author":{"gitId":"-"},"content":".label-bright {","lastModifiedDate":"2016-08-08"},{"lineNumber":14,"author":{"gitId":"-"},"content":"    -fx-font-size: 11pt;","lastModifiedDate":"2016-08-08"},{"lineNumber":15,"author":{"gitId":"-"},"content":"    -fx-font-family: \"Segoe UI Semibold\";","lastModifiedDate":"2022-01-13"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    -fx-text-fill: white;","lastModifiedDate":"2016-08-08"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    -fx-opacity: 1;","lastModifiedDate":"2016-08-08"},{"lineNumber":18,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":20,"author":{"gitId":"-"},"content":".label-header {","lastModifiedDate":"2016-08-08"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    -fx-font-size: 32pt;","lastModifiedDate":"2016-08-08"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    -fx-font-family: \"Segoe UI Light\";","lastModifiedDate":"2022-01-13"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    -fx-text-fill: white;","lastModifiedDate":"2016-08-08"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    -fx-opacity: 1;","lastModifiedDate":"2016-08-08"},{"lineNumber":25,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":27,"author":{"gitId":"-"},"content":".text-field {","lastModifiedDate":"2016-08-08"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    -fx-font-size: 12pt;","lastModifiedDate":"2016-08-08"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    -fx-font-family: \"Segoe UI Semibold\";","lastModifiedDate":"2022-01-13"},{"lineNumber":30,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":31,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":32,"author":{"gitId":"-"},"content":".tab-pane {","lastModifiedDate":"2016-08-08"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    -fx-padding: 0 0 0 1;","lastModifiedDate":"2016-08-08"},{"lineNumber":34,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":36,"author":{"gitId":"-"},"content":".tab-pane .tab-header-area {","lastModifiedDate":"2016-08-08"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    -fx-padding: 0 0 0 0;","lastModifiedDate":"2016-08-08"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    -fx-min-height: 0;","lastModifiedDate":"2016-08-08"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    -fx-max-height: 0;","lastModifiedDate":"2016-08-08"},{"lineNumber":40,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":42,"author":{"gitId":"-"},"content":".table-view {","lastModifiedDate":"2016-08-08"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    -fx-base: #1d1d1d;","lastModifiedDate":"2016-08-15"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    -fx-control-inner-background: #1d1d1d;","lastModifiedDate":"2016-08-15"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    -fx-background-color: #1d1d1d;","lastModifiedDate":"2016-08-15"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    -fx-table-cell-border-color: transparent;","lastModifiedDate":"2016-08-08"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    -fx-table-header-border-color: transparent;","lastModifiedDate":"2016-08-08"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    -fx-padding: 5;","lastModifiedDate":"2016-08-08"},{"lineNumber":49,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":50,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":51,"author":{"gitId":"-"},"content":".table-view .column-header-background {","lastModifiedDate":"2016-08-08"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    -fx-background-color: transparent;","lastModifiedDate":"2016-08-08"},{"lineNumber":53,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":54,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":55,"author":{"gitId":"-"},"content":".table-view .column-header, .table-view .filler {","lastModifiedDate":"2016-08-08"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    -fx-size: 35;","lastModifiedDate":"2016-08-08"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    -fx-border-width: 0 0 1 0;","lastModifiedDate":"2016-08-08"},{"lineNumber":58,"author":{"gitId":"-"},"content":"    -fx-background-color: transparent;","lastModifiedDate":"2016-08-08"},{"lineNumber":59,"author":{"gitId":"-"},"content":"    -fx-border-color:","lastModifiedDate":"2016-08-08"},{"lineNumber":60,"author":{"gitId":"-"},"content":"        transparent","lastModifiedDate":"2016-08-08"},{"lineNumber":61,"author":{"gitId":"-"},"content":"        transparent","lastModifiedDate":"2016-08-08"},{"lineNumber":62,"author":{"gitId":"-"},"content":"        derive(-fx-base, 80%)","lastModifiedDate":"2016-08-08"},{"lineNumber":63,"author":{"gitId":"-"},"content":"        transparent;","lastModifiedDate":"2016-08-08"},{"lineNumber":64,"author":{"gitId":"-"},"content":"    -fx-border-insets: 0 10 1 0;","lastModifiedDate":"2016-08-08"},{"lineNumber":65,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":66,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":67,"author":{"gitId":"-"},"content":".table-view .column-header .label {","lastModifiedDate":"2016-08-08"},{"lineNumber":68,"author":{"gitId":"-"},"content":"    -fx-font-size: 20pt;","lastModifiedDate":"2016-08-08"},{"lineNumber":69,"author":{"gitId":"-"},"content":"    -fx-font-family: \"Segoe UI Light\";","lastModifiedDate":"2022-01-13"},{"lineNumber":70,"author":{"gitId":"-"},"content":"    -fx-text-fill: white;","lastModifiedDate":"2016-08-08"},{"lineNumber":71,"author":{"gitId":"-"},"content":"    -fx-alignment: center-left;","lastModifiedDate":"2016-08-08"},{"lineNumber":72,"author":{"gitId":"-"},"content":"    -fx-opacity: 1;","lastModifiedDate":"2016-08-08"},{"lineNumber":73,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":74,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":75,"author":{"gitId":"-"},"content":".table-view:focused .table-row-cell:filled:focused:selected {","lastModifiedDate":"2016-08-08"},{"lineNumber":76,"author":{"gitId":"-"},"content":"    -fx-background-color: -fx-focus-color;","lastModifiedDate":"2016-08-08"},{"lineNumber":77,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":78,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":79,"author":{"gitId":"-"},"content":".split-pane:horizontal .split-pane-divider {","lastModifiedDate":"2016-08-08"},{"lineNumber":80,"author":{"gitId":"-"},"content":"    -fx-background-color: derive(#1d1d1d, 20%);","lastModifiedDate":"2017-03-02"},{"lineNumber":81,"author":{"gitId":"-"},"content":"    -fx-border-color: transparent transparent transparent #4d4d4d;","lastModifiedDate":"2017-03-02"},{"lineNumber":82,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-15"},{"lineNumber":83,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-15"},{"lineNumber":84,"author":{"gitId":"-"},"content":".split-pane {","lastModifiedDate":"2016-08-15"},{"lineNumber":85,"author":{"gitId":"-"},"content":"    -fx-border-radius: 1;","lastModifiedDate":"2016-08-15"},{"lineNumber":86,"author":{"gitId":"-"},"content":"    -fx-border-width: 1;","lastModifiedDate":"2016-08-15"},{"lineNumber":87,"author":{"gitId":"-"},"content":"    -fx-background-color: derive(#1d1d1d, 20%);","lastModifiedDate":"2016-08-15"},{"lineNumber":88,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":89,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":90,"author":{"gitId":"-"},"content":".list-view {","lastModifiedDate":"2017-03-02"},{"lineNumber":91,"author":{"gitId":"-"},"content":"    -fx-background-insets: 0;","lastModifiedDate":"2017-03-02"},{"lineNumber":92,"author":{"gitId":"-"},"content":"    -fx-padding: 0;","lastModifiedDate":"2017-03-02"},{"lineNumber":93,"author":{"gitId":"-"},"content":"    -fx-background-color: derive(#1d1d1d, 20%);","lastModifiedDate":"2018-01-10"},{"lineNumber":94,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-03-02"},{"lineNumber":95,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-02"},{"lineNumber":96,"author":{"gitId":"-"},"content":".list-cell {","lastModifiedDate":"2016-08-08"},{"lineNumber":97,"author":{"gitId":"-"},"content":"    -fx-label-padding: 0 0 0 0;","lastModifiedDate":"2016-08-08"},{"lineNumber":98,"author":{"gitId":"-"},"content":"    -fx-graphic-text-gap : 0;","lastModifiedDate":"2016-08-08"},{"lineNumber":99,"author":{"gitId":"-"},"content":"    -fx-padding: 0 0 0 0;","lastModifiedDate":"2016-08-08"},{"lineNumber":100,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":101,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":102,"author":{"gitId":"-"},"content":".list-cell:filled:even {","lastModifiedDate":"2017-03-02"},{"lineNumber":103,"author":{"gitId":"-"},"content":"    -fx-background-color: #3c3e3f;","lastModifiedDate":"2017-03-02"},{"lineNumber":104,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-03-02"},{"lineNumber":105,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-02"},{"lineNumber":106,"author":{"gitId":"-"},"content":".list-cell:filled:odd {","lastModifiedDate":"2017-03-02"},{"lineNumber":107,"author":{"gitId":"-"},"content":"    -fx-background-color: #515658;","lastModifiedDate":"2017-03-02"},{"lineNumber":108,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-03-02"},{"lineNumber":109,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-02"},{"lineNumber":110,"author":{"gitId":"-"},"content":".list-cell:filled:selected {","lastModifiedDate":"2017-03-02"},{"lineNumber":111,"author":{"gitId":"-"},"content":"    -fx-background-color: #424d5f;","lastModifiedDate":"2017-03-02"},{"lineNumber":112,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-03-02"},{"lineNumber":113,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-02"},{"lineNumber":114,"author":{"gitId":"-"},"content":".list-cell:filled:selected #cardPane {","lastModifiedDate":"2017-03-02"},{"lineNumber":115,"author":{"gitId":"-"},"content":"    -fx-border-color: #3e7b91;","lastModifiedDate":"2017-03-02"},{"lineNumber":116,"author":{"gitId":"-"},"content":"    -fx-border-width: 1;","lastModifiedDate":"2017-03-02"},{"lineNumber":117,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-03-02"},{"lineNumber":118,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-02"},{"lineNumber":119,"author":{"gitId":"-"},"content":".list-cell .label {","lastModifiedDate":"2016-08-08"},{"lineNumber":120,"author":{"gitId":"-"},"content":"    -fx-text-fill: white;","lastModifiedDate":"2017-03-02"},{"lineNumber":121,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":122,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":123,"author":{"gitId":"-"},"content":".cell_big_label {","lastModifiedDate":"2016-08-08"},{"lineNumber":124,"author":{"gitId":"-"},"content":"    -fx-font-family: \"Segoe UI Semibold\";","lastModifiedDate":"2022-01-13"},{"lineNumber":125,"author":{"gitId":"-"},"content":"    -fx-font-size: 16px;","lastModifiedDate":"2016-08-08"},{"lineNumber":126,"author":{"gitId":"-"},"content":"    -fx-text-fill: #010504;","lastModifiedDate":"2016-08-08"},{"lineNumber":127,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":128,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":129,"author":{"gitId":"-"},"content":".cell_small_label {","lastModifiedDate":"2016-08-08"},{"lineNumber":130,"author":{"gitId":"-"},"content":"    -fx-font-family: \"Segoe UI\";","lastModifiedDate":"2022-01-13"},{"lineNumber":131,"author":{"gitId":"-"},"content":"    -fx-font-size: 13px;","lastModifiedDate":"2017-03-02"},{"lineNumber":132,"author":{"gitId":"-"},"content":"    -fx-text-fill: #010504;","lastModifiedDate":"2016-08-08"},{"lineNumber":133,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":134,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":135,"author":{"gitId":"yl-ang"},"content":".cell_panel_title_panel {","lastModifiedDate":"2022-03-07"},{"lineNumber":136,"author":{"gitId":"yl-ang"},"content":"    -fx-font-family: \"Segoe UI Semibold\";","lastModifiedDate":"2022-03-07"},{"lineNumber":137,"author":{"gitId":"yl-ang"},"content":"    -fx-font-size: 20px;","lastModifiedDate":"2022-03-07"},{"lineNumber":138,"author":{"gitId":"yl-ang"},"content":"    -fx-text-fill: #F2F3F5;","lastModifiedDate":"2022-03-07"},{"lineNumber":139,"author":{"gitId":"yl-ang"},"content":"}","lastModifiedDate":"2022-03-07"},{"lineNumber":140,"author":{"gitId":"yl-ang"},"content":"","lastModifiedDate":"2022-03-07"},{"lineNumber":141,"author":{"gitId":"yl-ang"},"content":".cell_panel {","lastModifiedDate":"2022-03-07"},{"lineNumber":142,"author":{"gitId":"yl-ang"},"content":"     -fx-background-color: derive(#808080, 20%);","lastModifiedDate":"2022-03-07"},{"lineNumber":143,"author":{"gitId":"yl-ang"},"content":"     -fx-border-color: derive(#1d1d1d, 10%);","lastModifiedDate":"2022-03-07"},{"lineNumber":144,"author":{"gitId":"yl-ang"},"content":"     -fx-border-top-width: 1px;","lastModifiedDate":"2022-03-07"},{"lineNumber":145,"author":{"gitId":"yl-ang"},"content":"}","lastModifiedDate":"2022-03-07"},{"lineNumber":146,"author":{"gitId":"yl-ang"},"content":"","lastModifiedDate":"2022-03-07"},{"lineNumber":147,"author":{"gitId":"-"},"content":".stack-pane {","lastModifiedDate":"2018-04-01"},{"lineNumber":148,"author":{"gitId":"-"},"content":"     -fx-background-color: derive(#1d1d1d, 20%);","lastModifiedDate":"2016-08-15"},{"lineNumber":149,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":150,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":151,"author":{"gitId":"-"},"content":".pane-with-border {","lastModifiedDate":"2017-05-15"},{"lineNumber":152,"author":{"gitId":"-"},"content":"     -fx-background-color: derive(#1d1d1d, 20%);","lastModifiedDate":"2017-05-09"},{"lineNumber":153,"author":{"gitId":"-"},"content":"     -fx-border-color: derive(#1d1d1d, 10%);","lastModifiedDate":"2017-05-09"},{"lineNumber":154,"author":{"gitId":"-"},"content":"     -fx-border-top-width: 1px;","lastModifiedDate":"2017-05-09"},{"lineNumber":155,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-05-09"},{"lineNumber":156,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-09"},{"lineNumber":157,"author":{"gitId":"-"},"content":".status-bar {","lastModifiedDate":"2016-08-08"},{"lineNumber":158,"author":{"gitId":"-"},"content":"    -fx-background-color: derive(#1d1d1d, 30%);","lastModifiedDate":"2018-12-08"},{"lineNumber":159,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-09-14"},{"lineNumber":160,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-14"},{"lineNumber":161,"author":{"gitId":"-"},"content":".result-display {","lastModifiedDate":"2016-09-14"},{"lineNumber":162,"author":{"gitId":"-"},"content":"    -fx-background-color: transparent;","lastModifiedDate":"2017-03-02"},{"lineNumber":163,"author":{"gitId":"-"},"content":"    -fx-font-family: \"Segoe UI Light\";","lastModifiedDate":"2022-01-13"},{"lineNumber":164,"author":{"gitId":"-"},"content":"    -fx-font-size: 13pt;","lastModifiedDate":"2017-03-02"},{"lineNumber":165,"author":{"gitId":"-"},"content":"    -fx-text-fill: white;","lastModifiedDate":"2017-03-02"},{"lineNumber":166,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-09-14"},{"lineNumber":167,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-14"},{"lineNumber":168,"author":{"gitId":"-"},"content":".result-display .label {","lastModifiedDate":"2016-09-14"},{"lineNumber":169,"author":{"gitId":"-"},"content":"    -fx-text-fill: black !important;","lastModifiedDate":"2016-09-14"},{"lineNumber":170,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":171,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":172,"author":{"gitId":"-"},"content":".status-bar .label {","lastModifiedDate":"2016-08-08"},{"lineNumber":173,"author":{"gitId":"-"},"content":"    -fx-font-family: \"Segoe UI Light\";","lastModifiedDate":"2022-01-13"},{"lineNumber":174,"author":{"gitId":"-"},"content":"    -fx-text-fill: white;","lastModifiedDate":"2016-08-08"},{"lineNumber":175,"author":{"gitId":"-"},"content":"    -fx-padding: 4px;","lastModifiedDate":"2018-12-08"},{"lineNumber":176,"author":{"gitId":"-"},"content":"    -fx-pref-height: 30px;","lastModifiedDate":"2018-12-08"},{"lineNumber":177,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":178,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":179,"author":{"gitId":"-"},"content":".status-bar-with-border {","lastModifiedDate":"2016-08-08"},{"lineNumber":180,"author":{"gitId":"-"},"content":"    -fx-background-color: derive(#1d1d1d, 30%);","lastModifiedDate":"2016-08-15"},{"lineNumber":181,"author":{"gitId":"-"},"content":"    -fx-border-color: derive(#1d1d1d, 25%);","lastModifiedDate":"2016-08-15"},{"lineNumber":182,"author":{"gitId":"-"},"content":"    -fx-border-width: 1px;","lastModifiedDate":"2016-08-08"},{"lineNumber":183,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":184,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":185,"author":{"gitId":"-"},"content":".status-bar-with-border .label {","lastModifiedDate":"2016-08-08"},{"lineNumber":186,"author":{"gitId":"-"},"content":"    -fx-text-fill: white;","lastModifiedDate":"2016-08-08"},{"lineNumber":187,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":188,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":189,"author":{"gitId":"-"},"content":".grid-pane {","lastModifiedDate":"2016-08-08"},{"lineNumber":190,"author":{"gitId":"-"},"content":"    -fx-background-color: derive(#1d1d1d, 30%);","lastModifiedDate":"2016-08-15"},{"lineNumber":191,"author":{"gitId":"-"},"content":"    -fx-border-color: derive(#1d1d1d, 30%);","lastModifiedDate":"2016-08-15"},{"lineNumber":192,"author":{"gitId":"-"},"content":"    -fx-border-width: 1px;","lastModifiedDate":"2016-08-08"},{"lineNumber":193,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":194,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":195,"author":{"gitId":"-"},"content":".grid-pane .stack-pane {","lastModifiedDate":"2018-04-01"},{"lineNumber":196,"author":{"gitId":"-"},"content":"    -fx-background-color: derive(#1d1d1d, 30%);","lastModifiedDate":"2016-08-15"},{"lineNumber":197,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":198,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":199,"author":{"gitId":"-"},"content":".context-menu {","lastModifiedDate":"2016-08-08"},{"lineNumber":200,"author":{"gitId":"-"},"content":"    -fx-background-color: derive(#1d1d1d, 50%);","lastModifiedDate":"2016-08-15"},{"lineNumber":201,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":202,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":203,"author":{"gitId":"-"},"content":".context-menu .label {","lastModifiedDate":"2016-08-08"},{"lineNumber":204,"author":{"gitId":"-"},"content":"    -fx-text-fill: white;","lastModifiedDate":"2016-08-08"},{"lineNumber":205,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":206,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":207,"author":{"gitId":"-"},"content":".menu-bar {","lastModifiedDate":"2016-08-08"},{"lineNumber":208,"author":{"gitId":"-"},"content":"    -fx-background-color: derive(#1d1d1d, 20%);","lastModifiedDate":"2016-08-15"},{"lineNumber":209,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":210,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":211,"author":{"gitId":"-"},"content":".menu-bar .label {","lastModifiedDate":"2016-08-08"},{"lineNumber":212,"author":{"gitId":"-"},"content":"    -fx-font-size: 14pt;","lastModifiedDate":"2016-08-08"},{"lineNumber":213,"author":{"gitId":"-"},"content":"    -fx-font-family: \"Segoe UI Light\";","lastModifiedDate":"2022-01-13"},{"lineNumber":214,"author":{"gitId":"-"},"content":"    -fx-text-fill: white;","lastModifiedDate":"2016-08-08"},{"lineNumber":215,"author":{"gitId":"-"},"content":"    -fx-opacity: 0.9;","lastModifiedDate":"2016-08-08"},{"lineNumber":216,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":217,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":218,"author":{"gitId":"-"},"content":".menu .left-container {","lastModifiedDate":"2016-08-08"},{"lineNumber":219,"author":{"gitId":"-"},"content":"    -fx-background-color: black;","lastModifiedDate":"2016-08-08"},{"lineNumber":220,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":221,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":222,"author":{"gitId":"-"},"content":"/*","lastModifiedDate":"2016-08-08"},{"lineNumber":223,"author":{"gitId":"-"},"content":" * Metro style Push Button","lastModifiedDate":"2016-08-08"},{"lineNumber":224,"author":{"gitId":"-"},"content":" * Author: Pedro Duque Vieira","lastModifiedDate":"2016-08-08"},{"lineNumber":225,"author":{"gitId":"-"},"content":" * http://pixelduke.wordpress.com/2012/10/23/jmetro-windows-8-controls-on-java/","lastModifiedDate":"2016-08-08"},{"lineNumber":226,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-08"},{"lineNumber":227,"author":{"gitId":"-"},"content":".button {","lastModifiedDate":"2016-08-08"},{"lineNumber":228,"author":{"gitId":"-"},"content":"    -fx-padding: 5 22 5 22;","lastModifiedDate":"2016-08-08"},{"lineNumber":229,"author":{"gitId":"-"},"content":"    -fx-border-color: #e2e2e2;","lastModifiedDate":"2016-08-08"},{"lineNumber":230,"author":{"gitId":"-"},"content":"    -fx-border-width: 2;","lastModifiedDate":"2016-08-08"},{"lineNumber":231,"author":{"gitId":"-"},"content":"    -fx-background-radius: 0;","lastModifiedDate":"2016-08-08"},{"lineNumber":232,"author":{"gitId":"-"},"content":"    -fx-background-color: #1d1d1d;","lastModifiedDate":"2016-08-15"},{"lineNumber":233,"author":{"gitId":"-"},"content":"    -fx-font-family: \"Segoe UI\", Helvetica, Arial, sans-serif;","lastModifiedDate":"2022-01-13"},{"lineNumber":234,"author":{"gitId":"-"},"content":"    -fx-font-size: 11pt;","lastModifiedDate":"2016-08-08"},{"lineNumber":235,"author":{"gitId":"-"},"content":"    -fx-text-fill: #d8d8d8;","lastModifiedDate":"2016-08-08"},{"lineNumber":236,"author":{"gitId":"-"},"content":"    -fx-background-insets: 0 0 0 0, 0, 1, 2;","lastModifiedDate":"2016-08-08"},{"lineNumber":237,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":238,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":239,"author":{"gitId":"-"},"content":".button:hover {","lastModifiedDate":"2016-08-08"},{"lineNumber":240,"author":{"gitId":"-"},"content":"    -fx-background-color: #3a3a3a;","lastModifiedDate":"2016-08-08"},{"lineNumber":241,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":242,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":243,"author":{"gitId":"-"},"content":".button:pressed, .button:default:hover:pressed {","lastModifiedDate":"2016-08-08"},{"lineNumber":244,"author":{"gitId":"-"},"content":"  -fx-background-color: white;","lastModifiedDate":"2016-08-08"},{"lineNumber":245,"author":{"gitId":"-"},"content":"  -fx-text-fill: #1d1d1d;","lastModifiedDate":"2016-08-15"},{"lineNumber":246,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":247,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":248,"author":{"gitId":"-"},"content":".button:focused {","lastModifiedDate":"2016-08-08"},{"lineNumber":249,"author":{"gitId":"-"},"content":"    -fx-border-color: white, white;","lastModifiedDate":"2016-08-08"},{"lineNumber":250,"author":{"gitId":"-"},"content":"    -fx-border-width: 1, 1;","lastModifiedDate":"2016-08-08"},{"lineNumber":251,"author":{"gitId":"-"},"content":"    -fx-border-style: solid, segments(1, 1);","lastModifiedDate":"2016-08-08"},{"lineNumber":252,"author":{"gitId":"-"},"content":"    -fx-border-radius: 0, 0;","lastModifiedDate":"2016-08-08"},{"lineNumber":253,"author":{"gitId":"-"},"content":"    -fx-border-insets: 1 1 1 1, 0;","lastModifiedDate":"2016-08-08"},{"lineNumber":254,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":255,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":256,"author":{"gitId":"-"},"content":".button:disabled, .button:default:disabled {","lastModifiedDate":"2016-08-08"},{"lineNumber":257,"author":{"gitId":"-"},"content":"    -fx-opacity: 0.4;","lastModifiedDate":"2016-08-08"},{"lineNumber":258,"author":{"gitId":"-"},"content":"    -fx-background-color: #1d1d1d;","lastModifiedDate":"2016-08-15"},{"lineNumber":259,"author":{"gitId":"-"},"content":"    -fx-text-fill: white;","lastModifiedDate":"2016-08-08"},{"lineNumber":260,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":261,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":262,"author":{"gitId":"-"},"content":".button:default {","lastModifiedDate":"2016-08-08"},{"lineNumber":263,"author":{"gitId":"-"},"content":"    -fx-background-color: -fx-focus-color;","lastModifiedDate":"2016-08-08"},{"lineNumber":264,"author":{"gitId":"-"},"content":"    -fx-text-fill: #ffffff;","lastModifiedDate":"2016-08-08"},{"lineNumber":265,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":266,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":267,"author":{"gitId":"-"},"content":".button:default:hover {","lastModifiedDate":"2016-08-08"},{"lineNumber":268,"author":{"gitId":"-"},"content":"    -fx-background-color: derive(-fx-focus-color, 30%);","lastModifiedDate":"2016-08-08"},{"lineNumber":269,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":270,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":271,"author":{"gitId":"-"},"content":".dialog-pane {","lastModifiedDate":"2016-08-08"},{"lineNumber":272,"author":{"gitId":"-"},"content":"    -fx-background-color: #1d1d1d;","lastModifiedDate":"2016-08-15"},{"lineNumber":273,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":274,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":275,"author":{"gitId":"-"},"content":".dialog-pane \u003e *.button-bar \u003e *.container {","lastModifiedDate":"2016-08-08"},{"lineNumber":276,"author":{"gitId":"-"},"content":"    -fx-background-color: #1d1d1d;","lastModifiedDate":"2016-08-15"},{"lineNumber":277,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":278,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":279,"author":{"gitId":"-"},"content":".dialog-pane \u003e *.label.content {","lastModifiedDate":"2016-08-08"},{"lineNumber":280,"author":{"gitId":"-"},"content":"    -fx-font-size: 14px;","lastModifiedDate":"2016-08-08"},{"lineNumber":281,"author":{"gitId":"-"},"content":"    -fx-font-weight: bold;","lastModifiedDate":"2016-08-08"},{"lineNumber":282,"author":{"gitId":"-"},"content":"    -fx-text-fill: white;","lastModifiedDate":"2016-08-08"},{"lineNumber":283,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":284,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":285,"author":{"gitId":"-"},"content":".dialog-pane:header *.header-panel {","lastModifiedDate":"2016-08-08"},{"lineNumber":286,"author":{"gitId":"-"},"content":"    -fx-background-color: derive(#1d1d1d, 25%);","lastModifiedDate":"2016-08-15"},{"lineNumber":287,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":288,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":289,"author":{"gitId":"-"},"content":".dialog-pane:header *.header-panel *.label {","lastModifiedDate":"2016-08-08"},{"lineNumber":290,"author":{"gitId":"-"},"content":"    -fx-font-size: 18px;","lastModifiedDate":"2016-08-08"},{"lineNumber":291,"author":{"gitId":"-"},"content":"    -fx-font-style: italic;","lastModifiedDate":"2016-08-08"},{"lineNumber":292,"author":{"gitId":"-"},"content":"    -fx-fill: white;","lastModifiedDate":"2016-08-08"},{"lineNumber":293,"author":{"gitId":"-"},"content":"    -fx-text-fill: white;","lastModifiedDate":"2016-08-08"},{"lineNumber":294,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":295,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":296,"author":{"gitId":"-"},"content":".scroll-bar {","lastModifiedDate":"2017-03-02"},{"lineNumber":297,"author":{"gitId":"-"},"content":"    -fx-background-color: derive(#1d1d1d, 20%);","lastModifiedDate":"2017-03-02"},{"lineNumber":298,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-03-02"},{"lineNumber":299,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-02"},{"lineNumber":300,"author":{"gitId":"-"},"content":".scroll-bar .thumb {","lastModifiedDate":"2016-08-15"},{"lineNumber":301,"author":{"gitId":"-"},"content":"    -fx-background-color: derive(#1d1d1d, 50%);","lastModifiedDate":"2016-08-15"},{"lineNumber":302,"author":{"gitId":"-"},"content":"    -fx-background-insets: 3;","lastModifiedDate":"2016-08-15"},{"lineNumber":303,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-15"},{"lineNumber":304,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-15"},{"lineNumber":305,"author":{"gitId":"-"},"content":".scroll-bar .increment-button, .scroll-bar .decrement-button {","lastModifiedDate":"2016-08-15"},{"lineNumber":306,"author":{"gitId":"-"},"content":"    -fx-background-color: transparent;","lastModifiedDate":"2016-08-15"},{"lineNumber":307,"author":{"gitId":"-"},"content":"    -fx-padding: 0 0 0 0;","lastModifiedDate":"2016-08-15"},{"lineNumber":308,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-15"},{"lineNumber":309,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-15"},{"lineNumber":310,"author":{"gitId":"-"},"content":".scroll-bar .increment-arrow, .scroll-bar .decrement-arrow {","lastModifiedDate":"2016-08-15"},{"lineNumber":311,"author":{"gitId":"-"},"content":"    -fx-shape: \" \";","lastModifiedDate":"2016-08-15"},{"lineNumber":312,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-18"},{"lineNumber":313,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":314,"author":{"gitId":"-"},"content":".scroll-bar:vertical .increment-arrow, .scroll-bar:vertical .decrement-arrow {","lastModifiedDate":"2016-08-18"},{"lineNumber":315,"author":{"gitId":"-"},"content":"    -fx-padding: 1 8 1 8;","lastModifiedDate":"2016-08-15"},{"lineNumber":316,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-15"},{"lineNumber":317,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-15"},{"lineNumber":318,"author":{"gitId":"-"},"content":".scroll-bar:horizontal .increment-arrow, .scroll-bar:horizontal .decrement-arrow {","lastModifiedDate":"2016-08-18"},{"lineNumber":319,"author":{"gitId":"-"},"content":"    -fx-padding: 8 1 8 1;","lastModifiedDate":"2016-08-18"},{"lineNumber":320,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-18"},{"lineNumber":321,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":322,"author":{"gitId":"-"},"content":"#cardPane {","lastModifiedDate":"2016-08-08"},{"lineNumber":323,"author":{"gitId":"-"},"content":"    -fx-background-color: transparent;","lastModifiedDate":"2016-08-08"},{"lineNumber":324,"author":{"gitId":"-"},"content":"    -fx-border-width: 0;","lastModifiedDate":"2017-03-02"},{"lineNumber":325,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":326,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":327,"author":{"gitId":"-"},"content":"#commandTypeLabel {","lastModifiedDate":"2016-08-08"},{"lineNumber":328,"author":{"gitId":"-"},"content":"    -fx-font-size: 11px;","lastModifiedDate":"2016-08-08"},{"lineNumber":329,"author":{"gitId":"-"},"content":"    -fx-text-fill: #F70D1A;","lastModifiedDate":"2016-08-08"},{"lineNumber":330,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":331,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":332,"author":{"gitId":"-"},"content":"#commandTextField {","lastModifiedDate":"2017-03-02"},{"lineNumber":333,"author":{"gitId":"-"},"content":"    -fx-background-color: transparent #383838 transparent #383838;","lastModifiedDate":"2017-03-02"},{"lineNumber":334,"author":{"gitId":"-"},"content":"    -fx-background-insets: 0;","lastModifiedDate":"2017-03-02"},{"lineNumber":335,"author":{"gitId":"-"},"content":"    -fx-border-color: #383838 #383838 #ffffff #383838;","lastModifiedDate":"2017-03-02"},{"lineNumber":336,"author":{"gitId":"-"},"content":"    -fx-border-insets: 0;","lastModifiedDate":"2017-03-02"},{"lineNumber":337,"author":{"gitId":"-"},"content":"    -fx-border-width: 1;","lastModifiedDate":"2017-03-02"},{"lineNumber":338,"author":{"gitId":"-"},"content":"    -fx-font-family: \"Segoe UI Light\";","lastModifiedDate":"2022-01-13"},{"lineNumber":339,"author":{"gitId":"-"},"content":"    -fx-font-size: 13pt;","lastModifiedDate":"2017-03-02"},{"lineNumber":340,"author":{"gitId":"-"},"content":"    -fx-text-fill: white;","lastModifiedDate":"2017-03-02"},{"lineNumber":341,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-03-02"},{"lineNumber":342,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-02"},{"lineNumber":343,"author":{"gitId":"-"},"content":"#filterField, #personListPanel, #personWebpage {","lastModifiedDate":"2016-08-15"},{"lineNumber":344,"author":{"gitId":"-"},"content":"    -fx-effect: innershadow(gaussian, black, 10, 0, 0, 0);","lastModifiedDate":"2016-08-15"},{"lineNumber":345,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":346,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-18"},{"lineNumber":347,"author":{"gitId":"-"},"content":"#resultDisplay .content {","lastModifiedDate":"2017-03-02"},{"lineNumber":348,"author":{"gitId":"-"},"content":"    -fx-background-color: transparent, #383838, transparent, #383838;","lastModifiedDate":"2017-03-02"},{"lineNumber":349,"author":{"gitId":"-"},"content":"    -fx-background-radius: 0;","lastModifiedDate":"2017-03-02"},{"lineNumber":350,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-03-02"},{"lineNumber":351,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-02"},{"lineNumber":352,"author":{"gitId":"yl-ang"},"content":"/** Different style classes for different types of tags **/","lastModifiedDate":"2022-03-08"},{"lineNumber":353,"author":{"gitId":"yl-ang"},"content":"#patronRoleTags {","lastModifiedDate":"2022-03-08"},{"lineNumber":354,"author":{"gitId":"-"},"content":"    -fx-hgap: 7;","lastModifiedDate":"2016-12-18"},{"lineNumber":355,"author":{"gitId":"-"},"content":"    -fx-vgap: 3;","lastModifiedDate":"2016-12-18"},{"lineNumber":356,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-12-18"},{"lineNumber":357,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-18"},{"lineNumber":358,"author":{"gitId":"yl-ang"},"content":"#patronRoleTags .label {","lastModifiedDate":"2022-03-08"},{"lineNumber":359,"author":{"gitId":"-"},"content":"    -fx-text-fill: white;","lastModifiedDate":"2016-12-18"},{"lineNumber":360,"author":{"gitId":"-"},"content":"    -fx-background-color: #3e7b91;","lastModifiedDate":"2017-03-02"},{"lineNumber":361,"author":{"gitId":"-"},"content":"    -fx-padding: 1 3 1 3;","lastModifiedDate":"2016-12-18"},{"lineNumber":362,"author":{"gitId":"-"},"content":"    -fx-border-radius: 2;","lastModifiedDate":"2016-12-18"},{"lineNumber":363,"author":{"gitId":"-"},"content":"    -fx-background-radius: 2;","lastModifiedDate":"2016-12-18"},{"lineNumber":364,"author":{"gitId":"-"},"content":"    -fx-font-size: 11;","lastModifiedDate":"2016-12-18"},{"lineNumber":365,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-12-18"},{"lineNumber":366,"author":{"gitId":"yl-ang"},"content":"","lastModifiedDate":"2022-03-08"},{"lineNumber":367,"author":{"gitId":"yl-ang"},"content":"#bookCategoryTags {","lastModifiedDate":"2022-03-08"},{"lineNumber":368,"author":{"gitId":"yl-ang"},"content":"    -fx-hgap: 7;","lastModifiedDate":"2022-03-08"},{"lineNumber":369,"author":{"gitId":"yl-ang"},"content":"    -fx-vgap: 3;","lastModifiedDate":"2022-03-08"},{"lineNumber":370,"author":{"gitId":"yl-ang"},"content":"}","lastModifiedDate":"2022-03-08"},{"lineNumber":371,"author":{"gitId":"yl-ang"},"content":"","lastModifiedDate":"2022-03-08"},{"lineNumber":372,"author":{"gitId":"yl-ang"},"content":"#bookCategoryTags .label {","lastModifiedDate":"2022-03-08"},{"lineNumber":373,"author":{"gitId":"yl-ang"},"content":"    -fx-text-fill: white;","lastModifiedDate":"2022-03-08"},{"lineNumber":374,"author":{"gitId":"yl-ang"},"content":"    -fx-background-color: #3e7b91;","lastModifiedDate":"2022-03-08"},{"lineNumber":375,"author":{"gitId":"yl-ang"},"content":"    -fx-padding: 1 3 1 3;","lastModifiedDate":"2022-03-08"},{"lineNumber":376,"author":{"gitId":"yl-ang"},"content":"    -fx-border-radius: 2;","lastModifiedDate":"2022-03-08"},{"lineNumber":377,"author":{"gitId":"yl-ang"},"content":"    -fx-background-radius: 2;","lastModifiedDate":"2022-03-08"},{"lineNumber":378,"author":{"gitId":"yl-ang"},"content":"    -fx-font-size: 11;","lastModifiedDate":"2022-03-08"},{"lineNumber":379,"author":{"gitId":"yl-ang"},"content":"}","lastModifiedDate":"2022-03-08"},{"lineNumber":380,"author":{"gitId":"yl-ang"},"content":"","lastModifiedDate":"2022-03-08"},{"lineNumber":381,"author":{"gitId":"yl-ang"},"content":"#bookAvailableTag {","lastModifiedDate":"2022-03-09"},{"lineNumber":382,"author":{"gitId":"yl-ang"},"content":"    -fx-hgap: 7;","lastModifiedDate":"2022-03-08"},{"lineNumber":383,"author":{"gitId":"yl-ang"},"content":"    -fx-vgap: 3;","lastModifiedDate":"2022-03-08"},{"lineNumber":384,"author":{"gitId":"yl-ang"},"content":"}","lastModifiedDate":"2022-03-08"},{"lineNumber":385,"author":{"gitId":"yl-ang"},"content":"","lastModifiedDate":"2022-03-08"},{"lineNumber":386,"author":{"gitId":"yl-ang"},"content":"#bookAvailableTag .label {","lastModifiedDate":"2022-03-09"},{"lineNumber":387,"author":{"gitId":"yl-ang"},"content":"    -fx-text-fill: white;","lastModifiedDate":"2022-03-08"},{"lineNumber":388,"author":{"gitId":"yl-ang"},"content":"    -fx-background-color: #00D100;","lastModifiedDate":"2022-03-09"},{"lineNumber":389,"author":{"gitId":"yl-ang"},"content":"    -fx-padding: 1 3 1 3;","lastModifiedDate":"2022-03-09"},{"lineNumber":390,"author":{"gitId":"yl-ang"},"content":"    -fx-border-radius: 2;","lastModifiedDate":"2022-03-09"},{"lineNumber":391,"author":{"gitId":"yl-ang"},"content":"    -fx-background-radius: 2;","lastModifiedDate":"2022-03-09"},{"lineNumber":392,"author":{"gitId":"yl-ang"},"content":"    -fx-font-size: 11;","lastModifiedDate":"2022-03-09"},{"lineNumber":393,"author":{"gitId":"yl-ang"},"content":"}","lastModifiedDate":"2022-03-09"},{"lineNumber":394,"author":{"gitId":"yl-ang"},"content":"","lastModifiedDate":"2022-03-09"},{"lineNumber":395,"author":{"gitId":"yl-ang"},"content":"#bookBorrowTag {","lastModifiedDate":"2022-03-09"},{"lineNumber":396,"author":{"gitId":"yl-ang"},"content":"    -fx-hgap: 7;","lastModifiedDate":"2022-03-09"},{"lineNumber":397,"author":{"gitId":"yl-ang"},"content":"    -fx-vgap: 3;","lastModifiedDate":"2022-03-09"},{"lineNumber":398,"author":{"gitId":"yl-ang"},"content":"}","lastModifiedDate":"2022-03-09"},{"lineNumber":399,"author":{"gitId":"yl-ang"},"content":"","lastModifiedDate":"2022-03-09"},{"lineNumber":400,"author":{"gitId":"yl-ang"},"content":"#bookBorrowTag .label {","lastModifiedDate":"2022-03-09"},{"lineNumber":401,"author":{"gitId":"yl-ang"},"content":"    -fx-text-fill: white;","lastModifiedDate":"2022-03-09"},{"lineNumber":402,"author":{"gitId":"yl-ang"},"content":"    -fx-background-color: #880808;","lastModifiedDate":"2022-03-09"},{"lineNumber":403,"author":{"gitId":"yl-ang"},"content":"    -fx-padding: 1 3 1 3;","lastModifiedDate":"2022-03-08"},{"lineNumber":404,"author":{"gitId":"yl-ang"},"content":"    -fx-border-radius: 2;","lastModifiedDate":"2022-03-08"},{"lineNumber":405,"author":{"gitId":"yl-ang"},"content":"    -fx-background-radius: 2;","lastModifiedDate":"2022-03-08"},{"lineNumber":406,"author":{"gitId":"yl-ang"},"content":"    -fx-font-size: 11;","lastModifiedDate":"2022-03-08"},{"lineNumber":407,"author":{"gitId":"yl-ang"},"content":"}","lastModifiedDate":"2022-03-08"}],"authorContributionMap":{"yl-ang":57,"-":350}},{"path":"src/main/resources/view/MainWindow.fxml","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":3,"author":{"gitId":"-"},"content":"\u003c?import java.net.URL?\u003e","lastModifiedDate":"2016-08-26"},{"lineNumber":4,"author":{"gitId":"-"},"content":"\u003c?import javafx.geometry.Insets?\u003e","lastModifiedDate":"2017-03-25"},{"lineNumber":5,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.Scene?\u003e","lastModifiedDate":"2017-11-29"},{"lineNumber":6,"author":{"gitId":"yl-ang"},"content":"\u003c?import javafx.scene.control.Label?\u003e","lastModifiedDate":"2022-03-07"},{"lineNumber":7,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.control.Menu?\u003e","lastModifiedDate":"2017-03-25"},{"lineNumber":8,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.control.MenuBar?\u003e","lastModifiedDate":"2017-03-25"},{"lineNumber":9,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.control.MenuItem?\u003e","lastModifiedDate":"2017-03-25"},{"lineNumber":10,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.image.Image?\u003e","lastModifiedDate":"2017-11-29"},{"lineNumber":11,"author":{"gitId":"yl-ang"},"content":"\u003c?import javafx.scene.layout.ColumnConstraints?\u003e","lastModifiedDate":"2022-03-06"},{"lineNumber":12,"author":{"gitId":"yl-ang"},"content":"\u003c?import javafx.scene.layout.GridPane?\u003e","lastModifiedDate":"2022-03-06"},{"lineNumber":13,"author":{"gitId":"yl-ang"},"content":"\u003c?import javafx.scene.layout.RowConstraints?\u003e","lastModifiedDate":"2022-03-06"},{"lineNumber":14,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.layout.StackPane?\u003e","lastModifiedDate":"2017-05-09"},{"lineNumber":15,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.layout.VBox?\u003e","lastModifiedDate":"2017-03-25"},{"lineNumber":16,"author":{"gitId":"yl-ang"},"content":"\u003c?import javafx.stage.Stage?\u003e","lastModifiedDate":"2022-03-06"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-25"},{"lineNumber":18,"author":{"gitId":"yl-ang"},"content":"\u003cfx:root minHeight\u003d\"650\" minWidth\u003d\"950\" onCloseRequest\u003d\"#handleExit\" title\u003d\"LibTask\" type\u003d\"javafx.stage.Stage\" xmlns\u003d\"http://javafx.com/javafx/17\" xmlns:fx\u003d\"http://javafx.com/fxml/1\"\u003e","lastModifiedDate":"2022-03-07"},{"lineNumber":19,"author":{"gitId":"-"},"content":"  \u003cicons\u003e","lastModifiedDate":"2017-11-29"},{"lineNumber":20,"author":{"gitId":"yl-ang"},"content":"    \u003c!-- LibTask icon from https://www.flaticon.com/free-icon/book_1164651 --\u003e","lastModifiedDate":"2022-03-07"},{"lineNumber":21,"author":{"gitId":"yl-ang"},"content":"    \u003cImage url\u003d\"@/images/libtask_icon.png\" /\u003e","lastModifiedDate":"2022-03-07"},{"lineNumber":22,"author":{"gitId":"-"},"content":"  \u003c/icons\u003e","lastModifiedDate":"2017-11-29"},{"lineNumber":23,"author":{"gitId":"-"},"content":"  \u003cscene\u003e","lastModifiedDate":"2017-11-29"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    \u003cScene\u003e","lastModifiedDate":"2017-11-29"},{"lineNumber":25,"author":{"gitId":"-"},"content":"      \u003cstylesheets\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":26,"author":{"gitId":"-"},"content":"        \u003cURL value\u003d\"@DarkTheme.css\" /\u003e","lastModifiedDate":"2016-08-20"},{"lineNumber":27,"author":{"gitId":"-"},"content":"        \u003cURL value\u003d\"@Extensions.css\" /\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":28,"author":{"gitId":"-"},"content":"      \u003c/stylesheets\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-25"},{"lineNumber":30,"author":{"gitId":"-"},"content":"      \u003cVBox\u003e","lastModifiedDate":"2017-11-29"},{"lineNumber":31,"author":{"gitId":"-"},"content":"        \u003cMenuBar fx:id\u003d\"menuBar\" VBox.vgrow\u003d\"NEVER\"\u003e","lastModifiedDate":"2017-06-13"},{"lineNumber":32,"author":{"gitId":"-"},"content":"          \u003cMenu mnemonicParsing\u003d\"false\" text\u003d\"File\"\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":33,"author":{"gitId":"-"},"content":"            \u003cMenuItem mnemonicParsing\u003d\"false\" onAction\u003d\"#handleExit\" text\u003d\"Exit\" /\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":34,"author":{"gitId":"-"},"content":"          \u003c/Menu\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":35,"author":{"gitId":"-"},"content":"          \u003cMenu mnemonicParsing\u003d\"false\" text\u003d\"Help\"\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":36,"author":{"gitId":"-"},"content":"            \u003cMenuItem fx:id\u003d\"helpMenuItem\" mnemonicParsing\u003d\"false\" onAction\u003d\"#handleHelp\" text\u003d\"Help\" /\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":37,"author":{"gitId":"-"},"content":"          \u003c/Menu\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        \u003c/MenuBar\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":39,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-25"},{"lineNumber":40,"author":{"gitId":"yl-ang"},"content":"        \u003cStackPane fx:id\u003d\"commandBoxPlaceholder\" styleClass\u003d\"pane-with-border\" VBox.vgrow\u003d\"NEVER\"\u003e","lastModifiedDate":"2022-03-06"},{"lineNumber":41,"author":{"gitId":"-"},"content":"          \u003cpadding\u003e","lastModifiedDate":"2016-09-14"},{"lineNumber":42,"author":{"gitId":"yl-ang"},"content":"            \u003cInsets bottom\u003d\"5\" left\u003d\"10\" right\u003d\"10\" top\u003d\"5\" /\u003e","lastModifiedDate":"2022-03-06"},{"lineNumber":43,"author":{"gitId":"-"},"content":"          \u003c/padding\u003e","lastModifiedDate":"2016-09-14"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        \u003c/StackPane\u003e","lastModifiedDate":"2017-05-09"},{"lineNumber":45,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-25"},{"lineNumber":46,"author":{"gitId":"yl-ang"},"content":"        \u003cStackPane fx:id\u003d\"resultDisplayPlaceholder\" maxHeight\u003d\"100\" minHeight\u003d\"100\" prefHeight\u003d\"100\" styleClass\u003d\"pane-with-border\" VBox.vgrow\u003d\"NEVER\"\u003e","lastModifiedDate":"2022-03-06"},{"lineNumber":47,"author":{"gitId":"-"},"content":"          \u003cpadding\u003e","lastModifiedDate":"2016-09-14"},{"lineNumber":48,"author":{"gitId":"yl-ang"},"content":"            \u003cInsets bottom\u003d\"5\" left\u003d\"10\" right\u003d\"10\" top\u003d\"5\" /\u003e","lastModifiedDate":"2022-03-06"},{"lineNumber":49,"author":{"gitId":"-"},"content":"          \u003c/padding\u003e","lastModifiedDate":"2016-09-14"},{"lineNumber":50,"author":{"gitId":"-"},"content":"        \u003c/StackPane\u003e","lastModifiedDate":"2017-05-09"},{"lineNumber":51,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-25"},{"lineNumber":52,"author":{"gitId":"yl-ang"},"content":"        \u003cVBox VBox.vgrow\u003d\"ALWAYS\"\u003e","lastModifiedDate":"2022-03-06"},{"lineNumber":53,"author":{"gitId":"yl-ang"},"content":"          \u003c!-- Solution below adapted from https://docs.oracle.com/javafx/2/get_started/fxml_example.fxml.html --\u003e","lastModifiedDate":"2022-03-07"},{"lineNumber":54,"author":{"gitId":"yl-ang"},"content":"          \u003cGridPane alignment\u003d\"CENTER\" VBox.vgrow\u003d\"ALWAYS\" xmlns:fx\u003d\"http://javafx.com/fxml\"\u003e","lastModifiedDate":"2022-03-06"},{"lineNumber":55,"author":{"gitId":"yl-ang"},"content":"","lastModifiedDate":"2022-03-07"},{"lineNumber":56,"author":{"gitId":"yl-ang"},"content":"            \u003cVBox minWidth\u003d\"450.0\" styleClass\u003d\"cell_panel\" GridPane.columnIndex\u003d\"0\" GridPane.rowIndex\u003d\"0\" GridPane.vgrow\u003d\"NEVER\" VBox.vgrow\u003d\"NEVER\"\u003e","lastModifiedDate":"2022-03-07"},{"lineNumber":57,"author":{"gitId":"yl-ang"},"content":"              \u003cLabel alignment\u003d\"CENTER\" maxWidth\u003d\"Infinity\" prefWidth\u003d\"449.0\" styleClass\u003d\"cell_panel_title_panel\" text\u003d\"Patron List\" textAlignment\u003d\"CENTER\" /\u003e","lastModifiedDate":"2022-03-07"},{"lineNumber":58,"author":{"gitId":"yl-ang"},"content":"            \u003c/VBox\u003e","lastModifiedDate":"2022-03-07"},{"lineNumber":59,"author":{"gitId":"yl-ang"},"content":"","lastModifiedDate":"2022-03-07"},{"lineNumber":60,"author":{"gitId":"yl-ang"},"content":"            \u003cVBox minWidth\u003d\"450.0\" styleClass\u003d\"cell_panel\" GridPane.columnIndex\u003d\"1\" GridPane.rowIndex\u003d\"0\" GridPane.vgrow\u003d\"NEVER\" VBox.vgrow\u003d\"NEVER\"\u003e","lastModifiedDate":"2022-03-07"},{"lineNumber":61,"author":{"gitId":"yl-ang"},"content":"              \u003cLabel alignment\u003d\"CENTER\" maxWidth\u003d\"Infinity\" prefWidth\u003d\"450.0\" styleClass\u003d\"cell_panel_title_panel\" text\u003d\"Book List\" textAlignment\u003d\"CENTER\" VBox.vgrow\u003d\"NEVER\" /\u003e","lastModifiedDate":"2022-03-07"},{"lineNumber":62,"author":{"gitId":"yl-ang"},"content":"            \u003c/VBox\u003e","lastModifiedDate":"2022-03-07"},{"lineNumber":63,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-03-07"},{"lineNumber":64,"author":{"gitId":"yl-ang"},"content":"            \u003cVBox fx:id\u003d\"personList\" minWidth\u003d\"450.0\" styleClass\u003d\"pane-with-border\" GridPane.columnIndex\u003d\"0\" GridPane.rowIndex\u003d\"1\" VBox.vgrow\u003d\"ALWAYS\"\u003e","lastModifiedDate":"2022-03-07"},{"lineNumber":65,"author":{"gitId":"-"},"content":"              \u003cpadding\u003e","lastModifiedDate":"2016-08-15"},{"lineNumber":66,"author":{"gitId":"yl-ang"},"content":"                \u003cInsets bottom\u003d\"10\" left\u003d\"10\" right\u003d\"10\" top\u003d\"10\" /\u003e","lastModifiedDate":"2022-03-06"},{"lineNumber":67,"author":{"gitId":"-"},"content":"              \u003c/padding\u003e","lastModifiedDate":"2016-08-15"},{"lineNumber":68,"author":{"gitId":"yl-ang"},"content":"              \u003cStackPane fx:id\u003d\"personListPanelPlaceholder\" maxHeight\u003d\"1.7976931348623157E308\" maxWidth\u003d\"1.7976931348623157E308\" minWidth\u003d\"-Infinity\" VBox.vgrow\u003d\"ALWAYS\" /\u003e","lastModifiedDate":"2022-03-07"},{"lineNumber":69,"author":{"gitId":"-"},"content":"            \u003c/VBox\u003e","lastModifiedDate":"2016-08-15"},{"lineNumber":70,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-25"},{"lineNumber":71,"author":{"gitId":"yl-ang"},"content":"            \u003cVBox fx:id\u003d\"bookList\" minWidth\u003d\"450.0\" styleClass\u003d\"pane-with-border\" GridPane.columnIndex\u003d\"1\" GridPane.rowIndex\u003d\"1\" VBox.vgrow\u003d\"ALWAYS\"\u003e","lastModifiedDate":"2022-03-07"},{"lineNumber":72,"author":{"gitId":"yl-ang"},"content":"              \u003cpadding\u003e","lastModifiedDate":"2022-03-06"},{"lineNumber":73,"author":{"gitId":"yl-ang"},"content":"                \u003cInsets bottom\u003d\"10\" left\u003d\"10\" right\u003d\"10\" top\u003d\"10\" /\u003e","lastModifiedDate":"2022-03-06"},{"lineNumber":74,"author":{"gitId":"yl-ang"},"content":"              \u003c/padding\u003e","lastModifiedDate":"2022-03-06"},{"lineNumber":75,"author":{"gitId":"yl-ang"},"content":"              \u003cStackPane fx:id\u003d\"bookListPanelPlaceholder\" maxHeight\u003d\"1.7976931348623157E308\" maxWidth\u003d\"1.7976931348623157E308\" minWidth\u003d\"-Infinity\" VBox.vgrow\u003d\"ALWAYS\" /\u003e","lastModifiedDate":"2022-03-07"},{"lineNumber":76,"author":{"gitId":"yl-ang"},"content":"            \u003c/VBox\u003e","lastModifiedDate":"2022-03-06"},{"lineNumber":77,"author":{"gitId":"yl-ang"},"content":"","lastModifiedDate":"2022-03-06"},{"lineNumber":78,"author":{"gitId":"yl-ang"},"content":"            \u003crowConstraints\u003e","lastModifiedDate":"2022-03-07"},{"lineNumber":79,"author":{"gitId":"yl-ang"},"content":"              \u003cRowConstraints maxHeight\u003d\"25\" /\u003e","lastModifiedDate":"2022-03-07"},{"lineNumber":80,"author":{"gitId":"yl-ang"},"content":"              \u003cRowConstraints maxHeight\u003d\"100\" percentHeight\u003d\"100\" /\u003e","lastModifiedDate":"2022-03-07"},{"lineNumber":81,"author":{"gitId":"yl-ang"},"content":"            \u003c/rowConstraints\u003e","lastModifiedDate":"2022-03-07"},{"lineNumber":82,"author":{"gitId":"yl-ang"},"content":"            \u003ccolumnConstraints\u003e","lastModifiedDate":"2022-03-06"},{"lineNumber":83,"author":{"gitId":"yl-ang"},"content":"              \u003cColumnConstraints percentWidth\u003d\"50\" /\u003e","lastModifiedDate":"2022-03-06"},{"lineNumber":84,"author":{"gitId":"yl-ang"},"content":"              \u003cColumnConstraints percentWidth\u003d\"50\" /\u003e","lastModifiedDate":"2022-03-06"},{"lineNumber":85,"author":{"gitId":"yl-ang"},"content":"            \u003c/columnConstraints\u003e","lastModifiedDate":"2022-03-06"},{"lineNumber":86,"author":{"gitId":"yl-ang"},"content":"","lastModifiedDate":"2022-03-06"},{"lineNumber":87,"author":{"gitId":"yl-ang"},"content":"          \u003c/GridPane\u003e","lastModifiedDate":"2022-03-06"},{"lineNumber":88,"author":{"gitId":"yl-ang"},"content":"        \u003c/VBox\u003e","lastModifiedDate":"2022-03-06"},{"lineNumber":89,"author":{"gitId":"-"},"content":"        \u003cStackPane fx:id\u003d\"statusbarPlaceholder\" VBox.vgrow\u003d\"NEVER\" /\u003e","lastModifiedDate":"2017-05-09"},{"lineNumber":90,"author":{"gitId":"-"},"content":"      \u003c/VBox\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":91,"author":{"gitId":"-"},"content":"    \u003c/Scene\u003e","lastModifiedDate":"2017-11-29"},{"lineNumber":92,"author":{"gitId":"-"},"content":"  \u003c/scene\u003e","lastModifiedDate":"2017-11-29"},{"lineNumber":93,"author":{"gitId":"-"},"content":"\u003c/fx:root\u003e","lastModifiedDate":"2017-11-29"}],"authorContributionMap":{"yl-ang":44,"-":49}},{"path":"src/main/resources/view/PersonListCard.fxml","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":3,"author":{"gitId":"-"},"content":"\u003c?import javafx.geometry.Insets?\u003e","lastModifiedDate":"2016-12-18"},{"lineNumber":4,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.control.Label?\u003e","lastModifiedDate":"2016-12-18"},{"lineNumber":5,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.layout.ColumnConstraints?\u003e","lastModifiedDate":"2016-12-18"},{"lineNumber":6,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.layout.FlowPane?\u003e","lastModifiedDate":"2016-12-18"},{"lineNumber":7,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.layout.GridPane?\u003e","lastModifiedDate":"2016-12-18"},{"lineNumber":8,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.layout.HBox?\u003e","lastModifiedDate":"2016-12-18"},{"lineNumber":9,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.layout.Region?\u003e","lastModifiedDate":"2017-03-20"},{"lineNumber":10,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.layout.VBox?\u003e","lastModifiedDate":"2016-12-18"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-18"},{"lineNumber":12,"author":{"gitId":"-"},"content":"\u003cHBox id\u003d\"cardPane\" fx:id\u003d\"cardPane\" xmlns\u003d\"http://javafx.com/javafx/8\" xmlns:fx\u003d\"http://javafx.com/fxml/1\"\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":13,"author":{"gitId":"-"},"content":"  \u003cGridPane HBox.hgrow\u003d\"ALWAYS\"\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":14,"author":{"gitId":"-"},"content":"    \u003ccolumnConstraints\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":15,"author":{"gitId":"-"},"content":"      \u003cColumnConstraints hgrow\u003d\"SOMETIMES\" minWidth\u003d\"10\" prefWidth\u003d\"150\" /\u003e","lastModifiedDate":"2017-03-28"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    \u003c/columnConstraints\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    \u003cVBox alignment\u003d\"CENTER_LEFT\" minHeight\u003d\"105\" GridPane.columnIndex\u003d\"0\"\u003e","lastModifiedDate":"2017-03-28"},{"lineNumber":18,"author":{"gitId":"-"},"content":"      \u003cpadding\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":19,"author":{"gitId":"-"},"content":"        \u003cInsets top\u003d\"5\" right\u003d\"5\" bottom\u003d\"5\" left\u003d\"15\" /\u003e","lastModifiedDate":"2017-03-27"},{"lineNumber":20,"author":{"gitId":"-"},"content":"      \u003c/padding\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":21,"author":{"gitId":"-"},"content":"      \u003cHBox spacing\u003d\"5\" alignment\u003d\"CENTER_LEFT\"\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":22,"author":{"gitId":"-"},"content":"        \u003cLabel fx:id\u003d\"id\" styleClass\u003d\"cell_big_label\"\u003e","lastModifiedDate":"2017-03-20"},{"lineNumber":23,"author":{"gitId":"-"},"content":"          \u003cminWidth\u003e","lastModifiedDate":"2017-03-20"},{"lineNumber":24,"author":{"gitId":"-"},"content":"            \u003c!-- Ensures that the label text is never truncated --\u003e","lastModifiedDate":"2017-03-20"},{"lineNumber":25,"author":{"gitId":"-"},"content":"            \u003cRegion fx:constant\u003d\"USE_PREF_SIZE\" /\u003e","lastModifiedDate":"2017-03-20"},{"lineNumber":26,"author":{"gitId":"-"},"content":"          \u003c/minWidth\u003e","lastModifiedDate":"2017-03-20"},{"lineNumber":27,"author":{"gitId":"-"},"content":"        \u003c/Label\u003e","lastModifiedDate":"2017-03-20"},{"lineNumber":28,"author":{"gitId":"yl-ang"},"content":"        \u003cLabel fx:id\u003d\"name\" text\u003d\"\\$first\" styleClass\u003d\"cell_big_label\" wrapText\u003d\"true\" /\u003e","lastModifiedDate":"2022-03-09"},{"lineNumber":29,"author":{"gitId":"-"},"content":"      \u003c/HBox\u003e","lastModifiedDate":"2016-09-03"},{"lineNumber":30,"author":{"gitId":"yl-ang"},"content":"      \u003cFlowPane fx:id\u003d\"patronRoleTags\" /\u003e","lastModifiedDate":"2022-03-08"},{"lineNumber":31,"author":{"gitId":"yl-ang"},"content":"      \u003cLabel fx:id\u003d\"studentId\" styleClass\u003d\"cell_small_label\" text\u003d\"\\$studentId\" /\u003e","lastModifiedDate":"2022-03-06"},{"lineNumber":32,"author":{"gitId":"-"},"content":"      \u003cLabel fx:id\u003d\"phone\" styleClass\u003d\"cell_small_label\" text\u003d\"\\$phone\" /\u003e","lastModifiedDate":"2016-08-24"},{"lineNumber":33,"author":{"gitId":"yl-ang"},"content":"      \u003cLabel fx:id\u003d\"email\" styleClass\u003d\"cell_small_label\" text\u003d\"\\$email\" wrapText\u003d\"true\" /\u003e","lastModifiedDate":"2022-03-09"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    \u003c/VBox\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":35,"author":{"gitId":"-"},"content":"  \u003c/GridPane\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":36,"author":{"gitId":"-"},"content":"\u003c/HBox\u003e","lastModifiedDate":"2016-08-08"}],"authorContributionMap":{"yl-ang":4,"-":32}},{"path":"src/test/java/seedu/address/logic/LogicManagerTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic;","lastModifiedDate":"2016-09-21"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static seedu.address.commons.core.Messages.MESSAGE_INVALID_PERSON_DISPLAYED_INDEX;","lastModifiedDate":"2017-01-19"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static seedu.address.commons.core.Messages.MESSAGE_UNKNOWN_COMMAND;","lastModifiedDate":"2017-01-19"},{"lineNumber":6,"author":{"gitId":"aditi2313"},"content":"import static seedu.address.logic.commands.Command.PATRON_COMMAND_GROUP;","lastModifiedDate":"2022-03-11"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.EMAIL_DESC_AMY;","lastModifiedDate":"2018-12-09"},{"lineNumber":8,"author":{"gitId":"aditi2313"},"content":"import static seedu.address.logic.commands.CommandTestUtil.ID_DESC_AMY;","lastModifiedDate":"2022-03-11"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.NAME_DESC_AMY;","lastModifiedDate":"2018-12-09"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.PHONE_DESC_AMY;","lastModifiedDate":"2018-12-09"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.Assert.assertThrows;","lastModifiedDate":"2019-03-14"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.TypicalPersons.AMY;","lastModifiedDate":"2018-12-09"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import java.io.IOException;","lastModifiedDate":"2018-12-09"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-12-09"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":17,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.BeforeEach;","lastModifiedDate":"2019-04-25"},{"lineNumber":18,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-25"},{"lineNumber":19,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.io.TempDir;","lastModifiedDate":"2019-04-25"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":21,"author":{"gitId":"aditi2313"},"content":"import seedu.address.logic.commands.Command;","lastModifiedDate":"2022-03-11"},{"lineNumber":22,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.CommandResult;","lastModifiedDate":"2017-01-18"},{"lineNumber":23,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.exceptions.CommandException;","lastModifiedDate":"2017-02-05"},{"lineNumber":24,"author":{"gitId":"aditi2313"},"content":"import seedu.address.logic.commands.patron.ListPatronCommand;","lastModifiedDate":"2022-03-11"},{"lineNumber":25,"author":{"gitId":"-"},"content":"import seedu.address.logic.parser.exceptions.ParseException;","lastModifiedDate":"2017-03-11"},{"lineNumber":26,"author":{"gitId":"-"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2016-09-25"},{"lineNumber":27,"author":{"gitId":"-"},"content":"import seedu.address.model.ModelManager;","lastModifiedDate":"2016-09-21"},{"lineNumber":28,"author":{"gitId":"-"},"content":"import seedu.address.model.ReadOnlyAddressBook;","lastModifiedDate":"2018-12-09"},{"lineNumber":29,"author":{"gitId":"-"},"content":"import seedu.address.model.UserPrefs;","lastModifiedDate":"2017-05-31"},{"lineNumber":30,"author":{"gitId":"aditi2313"},"content":"import seedu.address.model.person.Patron;","lastModifiedDate":"2022-03-09"},{"lineNumber":31,"author":{"gitId":"-"},"content":"import seedu.address.storage.JsonAddressBookStorage;","lastModifiedDate":"2018-12-09"},{"lineNumber":32,"author":{"gitId":"-"},"content":"import seedu.address.storage.JsonUserPrefsStorage;","lastModifiedDate":"2018-12-09"},{"lineNumber":33,"author":{"gitId":"-"},"content":"import seedu.address.storage.StorageManager;","lastModifiedDate":"2018-12-09"},{"lineNumber":34,"author":{"gitId":"-"},"content":"import seedu.address.testutil.PersonBuilder;","lastModifiedDate":"2018-12-09"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":36,"author":{"gitId":"-"},"content":"public class LogicManagerTest {","lastModifiedDate":"2016-09-22"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    private static final IOException DUMMY_IO_EXCEPTION \u003d new IOException(\"dummy exception\");","lastModifiedDate":"2018-12-09"},{"lineNumber":38,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    @TempDir","lastModifiedDate":"2019-04-25"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    public Path temporaryFolder;","lastModifiedDate":"2019-04-25"},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    private Model model \u003d new ModelManager();","lastModifiedDate":"2017-06-20"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    private Logic logic;","lastModifiedDate":"2018-12-09"},{"lineNumber":44,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    @BeforeEach","lastModifiedDate":"2019-04-25"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    public void setUp() {","lastModifiedDate":"2019-04-25"},{"lineNumber":47,"author":{"gitId":"-"},"content":"        JsonAddressBookStorage addressBookStorage \u003d","lastModifiedDate":"2019-04-25"},{"lineNumber":48,"author":{"gitId":"-"},"content":"                new JsonAddressBookStorage(temporaryFolder.resolve(\"addressBook.json\"));","lastModifiedDate":"2019-04-25"},{"lineNumber":49,"author":{"gitId":"-"},"content":"        JsonUserPrefsStorage userPrefsStorage \u003d new JsonUserPrefsStorage(temporaryFolder.resolve(\"userPrefs.json\"));","lastModifiedDate":"2019-04-25"},{"lineNumber":50,"author":{"gitId":"-"},"content":"        StorageManager storage \u003d new StorageManager(addressBookStorage, userPrefsStorage);","lastModifiedDate":"2018-12-09"},{"lineNumber":51,"author":{"gitId":"-"},"content":"        logic \u003d new LogicManager(model, storage);","lastModifiedDate":"2018-12-09"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-12-09"},{"lineNumber":53,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":54,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-20"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    public void execute_invalidCommandFormat_throwsParseException() {","lastModifiedDate":"2017-08-15"},{"lineNumber":56,"author":{"gitId":"-"},"content":"        String invalidCommand \u003d \"uicfhmowqewca\";","lastModifiedDate":"2017-06-20"},{"lineNumber":57,"author":{"gitId":"-"},"content":"        assertParseException(invalidCommand, MESSAGE_UNKNOWN_COMMAND);","lastModifiedDate":"2017-06-20"},{"lineNumber":58,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-20"},{"lineNumber":59,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-20"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-14"},{"lineNumber":61,"author":{"gitId":"-"},"content":"    public void execute_commandExecutionError_throwsCommandException() {","lastModifiedDate":"2017-08-15"},{"lineNumber":62,"author":{"gitId":"aditi2313"},"content":"        String deleteCommand \u003d \"patron delete 9\";","lastModifiedDate":"2022-03-10"},{"lineNumber":63,"author":{"gitId":"-"},"content":"        assertCommandException(deleteCommand, MESSAGE_INVALID_PERSON_DISPLAYED_INDEX);","lastModifiedDate":"2017-06-14"},{"lineNumber":64,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-14"},{"lineNumber":65,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-14"},{"lineNumber":66,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-19"},{"lineNumber":67,"author":{"gitId":"-"},"content":"    public void execute_validCommand_success() throws Exception {","lastModifiedDate":"2019-03-14"},{"lineNumber":68,"author":{"gitId":"aditi2313"},"content":"        String listCommand \u003d PATRON_COMMAND_GROUP + \" \" + Command.LIST_COMMAND_WORD;","lastModifiedDate":"2022-03-11"},{"lineNumber":69,"author":{"gitId":"aditi2313"},"content":"        assertCommandSuccess(listCommand, ListPatronCommand.MESSAGE_SUCCESS, model);","lastModifiedDate":"2022-03-11"},{"lineNumber":70,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-20"},{"lineNumber":71,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-20"},{"lineNumber":72,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-12-09"},{"lineNumber":73,"author":{"gitId":"-"},"content":"    public void execute_storageThrowsIoException_throwsCommandException() {","lastModifiedDate":"2019-04-25"},{"lineNumber":74,"author":{"gitId":"-"},"content":"        // Setup LogicManager with JsonAddressBookIoExceptionThrowingStub","lastModifiedDate":"2018-12-09"},{"lineNumber":75,"author":{"gitId":"-"},"content":"        JsonAddressBookStorage addressBookStorage \u003d","lastModifiedDate":"2018-12-09"},{"lineNumber":76,"author":{"gitId":"-"},"content":"                new JsonAddressBookIoExceptionThrowingStub(temporaryFolder.resolve(\"ioExceptionAddressBook.json\"));","lastModifiedDate":"2019-04-25"},{"lineNumber":77,"author":{"gitId":"-"},"content":"        JsonUserPrefsStorage userPrefsStorage \u003d","lastModifiedDate":"2019-04-25"},{"lineNumber":78,"author":{"gitId":"-"},"content":"                new JsonUserPrefsStorage(temporaryFolder.resolve(\"ioExceptionUserPrefs.json\"));","lastModifiedDate":"2019-04-25"},{"lineNumber":79,"author":{"gitId":"-"},"content":"        StorageManager storage \u003d new StorageManager(addressBookStorage, userPrefsStorage);","lastModifiedDate":"2018-12-09"},{"lineNumber":80,"author":{"gitId":"-"},"content":"        logic \u003d new LogicManager(model, storage);","lastModifiedDate":"2018-12-09"},{"lineNumber":81,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":82,"author":{"gitId":"-"},"content":"        // Execute add command","lastModifiedDate":"2018-12-09"},{"lineNumber":83,"author":{"gitId":"aditi2313"},"content":"        String addCommand \u003d PATRON_COMMAND_GROUP + \" \" + Command.ADD_COMMAND_WORD + NAME_DESC_AMY + PHONE_DESC_AMY","lastModifiedDate":"2022-03-11"},{"lineNumber":84,"author":{"gitId":"aditi2313"},"content":"                + EMAIL_DESC_AMY + ID_DESC_AMY;","lastModifiedDate":"2022-03-11"},{"lineNumber":85,"author":{"gitId":"aditi2313"},"content":"        Patron expectedPerson \u003d new PersonBuilder(AMY).withTags().build();","lastModifiedDate":"2022-03-09"},{"lineNumber":86,"author":{"gitId":"-"},"content":"        ModelManager expectedModel \u003d new ModelManager();","lastModifiedDate":"2018-12-09"},{"lineNumber":87,"author":{"gitId":"-"},"content":"        expectedModel.addPerson(expectedPerson);","lastModifiedDate":"2018-12-09"},{"lineNumber":88,"author":{"gitId":"-"},"content":"        String expectedMessage \u003d LogicManager.FILE_OPS_ERROR_MESSAGE + DUMMY_IO_EXCEPTION;","lastModifiedDate":"2018-12-09"},{"lineNumber":89,"author":{"gitId":"-"},"content":"        assertCommandFailure(addCommand, CommandException.class, expectedMessage, expectedModel);","lastModifiedDate":"2019-03-14"},{"lineNumber":90,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-12-09"},{"lineNumber":91,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":92,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-09-01"},{"lineNumber":93,"author":{"gitId":"-"},"content":"    public void getFilteredPersonList_modifyList_throwsUnsupportedOperationException() {","lastModifiedDate":"2017-09-01"},{"lineNumber":94,"author":{"gitId":"-"},"content":"        assertThrows(UnsupportedOperationException.class, () -\u003e logic.getFilteredPersonList().remove(0));","lastModifiedDate":"2019-03-23"},{"lineNumber":95,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-09-01"},{"lineNumber":96,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-09-01"},{"lineNumber":97,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-09-21"},{"lineNumber":98,"author":{"gitId":"-"},"content":"     * Executes the command and confirms that","lastModifiedDate":"2019-03-14"},{"lineNumber":99,"author":{"gitId":"-"},"content":"     * - no exceptions are thrown \u003cbr\u003e","lastModifiedDate":"2019-03-14"},{"lineNumber":100,"author":{"gitId":"-"},"content":"     * - the feedback message is equal to {@code expectedMessage} \u003cbr\u003e","lastModifiedDate":"2019-03-14"},{"lineNumber":101,"author":{"gitId":"-"},"content":"     * - the internal model manager state is the same as that in {@code expectedModel} \u003cbr\u003e","lastModifiedDate":"2019-03-14"},{"lineNumber":102,"author":{"gitId":"-"},"content":"     * @see #assertCommandFailure(String, Class, String, Model)","lastModifiedDate":"2019-03-14"},{"lineNumber":103,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-09-21"},{"lineNumber":104,"author":{"gitId":"-"},"content":"    private void assertCommandSuccess(String inputCommand, String expectedMessage,","lastModifiedDate":"2019-03-14"},{"lineNumber":105,"author":{"gitId":"-"},"content":"            Model expectedModel) throws CommandException, ParseException {","lastModifiedDate":"2019-03-14"},{"lineNumber":106,"author":{"gitId":"-"},"content":"        CommandResult result \u003d logic.execute(inputCommand);","lastModifiedDate":"2019-03-14"},{"lineNumber":107,"author":{"gitId":"-"},"content":"        assertEquals(expectedMessage, result.getFeedbackToUser());","lastModifiedDate":"2019-03-14"},{"lineNumber":108,"author":{"gitId":"-"},"content":"        assertEquals(expectedModel, model);","lastModifiedDate":"2019-03-14"},{"lineNumber":109,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-21"},{"lineNumber":110,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":111,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-03-11"},{"lineNumber":112,"author":{"gitId":"-"},"content":"     * Executes the command, confirms that a ParseException is thrown and that the result message is correct.","lastModifiedDate":"2017-03-11"},{"lineNumber":113,"author":{"gitId":"-"},"content":"     * @see #assertCommandFailure(String, Class, String, Model)","lastModifiedDate":"2019-03-14"},{"lineNumber":114,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-03-11"},{"lineNumber":115,"author":{"gitId":"-"},"content":"    private void assertParseException(String inputCommand, String expectedMessage) {","lastModifiedDate":"2017-03-11"},{"lineNumber":116,"author":{"gitId":"-"},"content":"        assertCommandFailure(inputCommand, ParseException.class, expectedMessage);","lastModifiedDate":"2017-03-11"},{"lineNumber":117,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-03-11"},{"lineNumber":118,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-11"},{"lineNumber":119,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-06-14"},{"lineNumber":120,"author":{"gitId":"-"},"content":"     * Executes the command, confirms that a CommandException is thrown and that the result message is correct.","lastModifiedDate":"2017-06-14"},{"lineNumber":121,"author":{"gitId":"-"},"content":"     * @see #assertCommandFailure(String, Class, String, Model)","lastModifiedDate":"2019-03-14"},{"lineNumber":122,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-06-14"},{"lineNumber":123,"author":{"gitId":"-"},"content":"    private void assertCommandException(String inputCommand, String expectedMessage) {","lastModifiedDate":"2017-06-14"},{"lineNumber":124,"author":{"gitId":"-"},"content":"        assertCommandFailure(inputCommand, CommandException.class, expectedMessage);","lastModifiedDate":"2017-06-14"},{"lineNumber":125,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-14"},{"lineNumber":126,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-14"},{"lineNumber":127,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-03-11"},{"lineNumber":128,"author":{"gitId":"-"},"content":"     * Executes the command, confirms that the exception is thrown and that the result message is correct.","lastModifiedDate":"2017-03-11"},{"lineNumber":129,"author":{"gitId":"-"},"content":"     * @see #assertCommandFailure(String, Class, String, Model)","lastModifiedDate":"2019-03-14"},{"lineNumber":130,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-03-11"},{"lineNumber":131,"author":{"gitId":"-"},"content":"    private void assertCommandFailure(String inputCommand, Class\u003c? extends Throwable\u003e expectedException,","lastModifiedDate":"2019-03-14"},{"lineNumber":132,"author":{"gitId":"-"},"content":"            String expectedMessage) {","lastModifiedDate":"2019-03-14"},{"lineNumber":133,"author":{"gitId":"-"},"content":"        Model expectedModel \u003d new ModelManager(model.getAddressBook(), new UserPrefs());","lastModifiedDate":"2017-05-31"},{"lineNumber":134,"author":{"gitId":"-"},"content":"        assertCommandFailure(inputCommand, expectedException, expectedMessage, expectedModel);","lastModifiedDate":"2019-03-14"},{"lineNumber":135,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-02-05"},{"lineNumber":136,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-05"},{"lineNumber":137,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-02-05"},{"lineNumber":138,"author":{"gitId":"-"},"content":"     * Executes the command and confirms that","lastModifiedDate":"2019-03-14"},{"lineNumber":139,"author":{"gitId":"-"},"content":"     * - the {@code expectedException} is thrown \u003cbr\u003e","lastModifiedDate":"2019-03-14"},{"lineNumber":140,"author":{"gitId":"-"},"content":"     * - the resulting error message is equal to {@code expectedMessage} \u003cbr\u003e","lastModifiedDate":"2019-03-14"},{"lineNumber":141,"author":{"gitId":"-"},"content":"     * - the internal model manager state is the same as that in {@code expectedModel} \u003cbr\u003e","lastModifiedDate":"2019-03-14"},{"lineNumber":142,"author":{"gitId":"-"},"content":"     * @see #assertCommandSuccess(String, String, Model)","lastModifiedDate":"2019-03-14"},{"lineNumber":143,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-09-21"},{"lineNumber":144,"author":{"gitId":"-"},"content":"    private void assertCommandFailure(String inputCommand, Class\u003c? extends Throwable\u003e expectedException,","lastModifiedDate":"2019-03-14"},{"lineNumber":145,"author":{"gitId":"-"},"content":"            String expectedMessage, Model expectedModel) {","lastModifiedDate":"2017-05-31"},{"lineNumber":146,"author":{"gitId":"-"},"content":"        assertThrows(expectedException, expectedMessage, () -\u003e logic.execute(inputCommand));","lastModifiedDate":"2019-03-14"},{"lineNumber":147,"author":{"gitId":"-"},"content":"        assertEquals(expectedModel, model);","lastModifiedDate":"2017-05-31"},{"lineNumber":148,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-21"},{"lineNumber":149,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-19"},{"lineNumber":150,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-12-09"},{"lineNumber":151,"author":{"gitId":"-"},"content":"     * A stub class to throw an {@code IOException} when the save method is called.","lastModifiedDate":"2018-12-09"},{"lineNumber":152,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-12-09"},{"lineNumber":153,"author":{"gitId":"-"},"content":"    private static class JsonAddressBookIoExceptionThrowingStub extends JsonAddressBookStorage {","lastModifiedDate":"2018-12-09"},{"lineNumber":154,"author":{"gitId":"-"},"content":"        private JsonAddressBookIoExceptionThrowingStub(Path filePath) {","lastModifiedDate":"2018-12-09"},{"lineNumber":155,"author":{"gitId":"-"},"content":"            super(filePath);","lastModifiedDate":"2018-12-09"},{"lineNumber":156,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-12-09"},{"lineNumber":157,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":158,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2018-12-09"},{"lineNumber":159,"author":{"gitId":"-"},"content":"        public void saveAddressBook(ReadOnlyAddressBook addressBook, Path filePath) throws IOException {","lastModifiedDate":"2018-12-09"},{"lineNumber":160,"author":{"gitId":"-"},"content":"            throw DUMMY_IO_EXCEPTION;","lastModifiedDate":"2018-12-09"},{"lineNumber":161,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-12-09"},{"lineNumber":162,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-12-09"},{"lineNumber":163,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-09-21"}],"authorContributionMap":{"-":152,"aditi2313":11}},{"path":"src/test/java/seedu/address/logic/commands/AddCommandIntegrationTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2017-06-15"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.assertCommandFailure;","lastModifiedDate":"2017-07-05"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.assertCommandSuccess;","lastModifiedDate":"2017-07-05"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.BeforeEach;","lastModifiedDate":"2019-04-27"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":9,"author":{"gitId":"aditi2313"},"content":"import seedu.address.logic.commands.patron.AddPatronCommand;","lastModifiedDate":"2022-03-11"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2017-06-15"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import seedu.address.model.ModelManager;","lastModifiedDate":"2017-06-15"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import seedu.address.model.UserPrefs;","lastModifiedDate":"2017-06-15"},{"lineNumber":13,"author":{"gitId":"aditi2313"},"content":"import seedu.address.model.person.Patron;","lastModifiedDate":"2022-03-09"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import seedu.address.testutil.PersonBuilder;","lastModifiedDate":"2017-06-15"},{"lineNumber":15,"author":{"gitId":"bingsen0806"},"content":"import seedu.address.testutil.TypicalAddressBook;","lastModifiedDate":"2022-03-10"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":17,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-06-15"},{"lineNumber":18,"author":{"gitId":"-"},"content":" * Contains integration tests (interaction with the Model) for {@code AddCommand}.","lastModifiedDate":"2017-06-15"},{"lineNumber":19,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-06-15"},{"lineNumber":20,"author":{"gitId":"-"},"content":"public class AddCommandIntegrationTest {","lastModifiedDate":"2017-06-15"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    private Model model;","lastModifiedDate":"2017-06-15"},{"lineNumber":23,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    @BeforeEach","lastModifiedDate":"2019-04-27"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    public void setUp() {","lastModifiedDate":"2017-06-15"},{"lineNumber":26,"author":{"gitId":"bingsen0806"},"content":"        model \u003d new ModelManager(TypicalAddressBook.getTypicalAddressBook(), new UserPrefs());","lastModifiedDate":"2022-03-10"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-15"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-15"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    public void execute_newPerson_success() {","lastModifiedDate":"2018-08-07"},{"lineNumber":31,"author":{"gitId":"aditi2313"},"content":"        Patron validPerson \u003d new PersonBuilder().build();","lastModifiedDate":"2022-03-09"},{"lineNumber":32,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":33,"author":{"gitId":"-"},"content":"        Model expectedModel \u003d new ModelManager(model.getAddressBook(), new UserPrefs());","lastModifiedDate":"2017-06-15"},{"lineNumber":34,"author":{"gitId":"-"},"content":"        expectedModel.addPerson(validPerson);","lastModifiedDate":"2017-06-15"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":36,"author":{"gitId":"aditi2313"},"content":"        assertCommandSuccess(new AddPatronCommand(validPerson), model,","lastModifiedDate":"2022-03-11"},{"lineNumber":37,"author":{"gitId":"aditi2313"},"content":"                String.format(AddPatronCommand.MESSAGE_SUCCESS, validPerson), expectedModel);","lastModifiedDate":"2022-03-11"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-15"},{"lineNumber":39,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-15"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    public void execute_duplicatePerson_throwsCommandException() {","lastModifiedDate":"2017-08-15"},{"lineNumber":42,"author":{"gitId":"aditi2313"},"content":"        Patron personInList \u003d model.getAddressBook().getPersonList().get(0);","lastModifiedDate":"2022-03-09"},{"lineNumber":43,"author":{"gitId":"aditi2313"},"content":"        assertCommandFailure(new AddPatronCommand(personInList), model, AddPatronCommand.MESSAGE_DUPLICATE_PERSON);","lastModifiedDate":"2022-03-11"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-15"},{"lineNumber":45,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":46,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-06-15"}],"authorContributionMap":{"-":37,"aditi2313":7,"bingsen0806":2}},{"path":"src/test/java/seedu/address/logic/commands/AddCommandTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2017-05-12"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2018-01-10"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2019-03-15"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2019-03-15"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.Assert.assertThrows;","lastModifiedDate":"2019-03-23"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-11-27"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import java.util.ArrayList;","lastModifiedDate":"2017-05-12"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import java.util.Arrays;","lastModifiedDate":"2017-05-12"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import java.util.function.Predicate;","lastModifiedDate":"2017-06-12"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":16,"author":{"gitId":"-"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2017-09-01"},{"lineNumber":17,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.GuiSettings;","lastModifiedDate":"2018-11-27"},{"lineNumber":18,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.exceptions.CommandException;","lastModifiedDate":"2017-05-12"},{"lineNumber":19,"author":{"gitId":"aditi2313"},"content":"import seedu.address.logic.commands.patron.AddPatronCommand;","lastModifiedDate":"2022-03-11"},{"lineNumber":20,"author":{"gitId":"-"},"content":"import seedu.address.model.AddressBook;","lastModifiedDate":"2017-05-04"},{"lineNumber":21,"author":{"gitId":"-"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2017-05-12"},{"lineNumber":22,"author":{"gitId":"-"},"content":"import seedu.address.model.ReadOnlyAddressBook;","lastModifiedDate":"2017-05-12"},{"lineNumber":23,"author":{"gitId":"-"},"content":"import seedu.address.model.ReadOnlyUserPrefs;","lastModifiedDate":"2018-11-27"},{"lineNumber":24,"author":{"gitId":"bingsen0806"},"content":"import seedu.address.model.book.Book;","lastModifiedDate":"2022-03-10"},{"lineNumber":25,"author":{"gitId":"aditi2313"},"content":"import seedu.address.model.person.Patron;","lastModifiedDate":"2022-03-09"},{"lineNumber":26,"author":{"gitId":"-"},"content":"import seedu.address.testutil.PersonBuilder;","lastModifiedDate":"2017-05-12"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":28,"author":{"gitId":"-"},"content":"public class AddCommandTest {","lastModifiedDate":"2017-05-12"},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-12"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    public void constructor_nullPerson_throwsNullPointerException() {","lastModifiedDate":"2017-08-15"},{"lineNumber":32,"author":{"gitId":"aditi2313"},"content":"        assertThrows(NullPointerException.class, () -\u003e new AddPatronCommand(null));","lastModifiedDate":"2022-03-11"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-12"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-12"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    public void execute_personAcceptedByModel_addSuccessful() throws Exception {","lastModifiedDate":"2017-05-12"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        ModelStubAcceptingPersonAdded modelStub \u003d new ModelStubAcceptingPersonAdded();","lastModifiedDate":"2017-05-12"},{"lineNumber":38,"author":{"gitId":"aditi2313"},"content":"        Patron validPerson \u003d new PersonBuilder().build();","lastModifiedDate":"2022-03-09"},{"lineNumber":39,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":40,"author":{"gitId":"aditi2313"},"content":"        CommandResult commandResult \u003d new AddPatronCommand(validPerson).execute(modelStub);","lastModifiedDate":"2022-03-11"},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":42,"author":{"gitId":"aditi2313"},"content":"        assertEquals(String.format(AddPatronCommand.MESSAGE_SUCCESS, validPerson), commandResult.getFeedbackToUser());","lastModifiedDate":"2022-03-11"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        assertEquals(Arrays.asList(validPerson), modelStub.personsAdded);","lastModifiedDate":"2017-05-12"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-12"},{"lineNumber":45,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-12"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    public void execute_duplicatePerson_throwsCommandException() {","lastModifiedDate":"2019-03-23"},{"lineNumber":48,"author":{"gitId":"aditi2313"},"content":"        Patron validPerson \u003d new PersonBuilder().build();","lastModifiedDate":"2022-03-09"},{"lineNumber":49,"author":{"gitId":"aditi2313"},"content":"        AddPatronCommand addCommand \u003d new AddPatronCommand(validPerson);","lastModifiedDate":"2022-03-11"},{"lineNumber":50,"author":{"gitId":"-"},"content":"        ModelStub modelStub \u003d new ModelStubWithPerson(validPerson);","lastModifiedDate":"2018-08-07"},{"lineNumber":51,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":52,"author":{"gitId":"aditi2313"},"content":"        assertThrows(CommandException.class, AddPatronCommand.MESSAGE_DUPLICATE_PERSON, () -\u003e","lastModifiedDate":"2022-03-11"},{"lineNumber":53,"author":{"gitId":"aditi2313"},"content":"            addCommand.execute(modelStub));","lastModifiedDate":"2022-03-11"},{"lineNumber":54,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-12"},{"lineNumber":55,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-22"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    public void equals() {","lastModifiedDate":"2017-08-15"},{"lineNumber":58,"author":{"gitId":"aditi2313"},"content":"        Patron alice \u003d new PersonBuilder().withName(\"Alice\").build();","lastModifiedDate":"2022-03-09"},{"lineNumber":59,"author":{"gitId":"aditi2313"},"content":"        Patron bob \u003d new PersonBuilder().withName(\"Bob\").build();","lastModifiedDate":"2022-03-09"},{"lineNumber":60,"author":{"gitId":"aditi2313"},"content":"        AddPatronCommand addAliceCommand \u003d new AddPatronCommand(alice);","lastModifiedDate":"2022-03-11"},{"lineNumber":61,"author":{"gitId":"aditi2313"},"content":"        AddPatronCommand addBobCommand \u003d new AddPatronCommand(bob);","lastModifiedDate":"2022-03-11"},{"lineNumber":62,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-22"},{"lineNumber":63,"author":{"gitId":"-"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2017-06-22"},{"lineNumber":64,"author":{"gitId":"-"},"content":"        assertTrue(addAliceCommand.equals(addAliceCommand));","lastModifiedDate":"2017-06-22"},{"lineNumber":65,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-22"},{"lineNumber":66,"author":{"gitId":"-"},"content":"        // same values -\u003e returns true","lastModifiedDate":"2017-06-22"},{"lineNumber":67,"author":{"gitId":"aditi2313"},"content":"        AddPatronCommand addAliceCommandCopy \u003d new AddPatronCommand(alice);","lastModifiedDate":"2022-03-11"},{"lineNumber":68,"author":{"gitId":"-"},"content":"        assertTrue(addAliceCommand.equals(addAliceCommandCopy));","lastModifiedDate":"2017-06-22"},{"lineNumber":69,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-22"},{"lineNumber":70,"author":{"gitId":"-"},"content":"        // different types -\u003e returns false","lastModifiedDate":"2017-06-22"},{"lineNumber":71,"author":{"gitId":"-"},"content":"        assertFalse(addAliceCommand.equals(1));","lastModifiedDate":"2017-06-22"},{"lineNumber":72,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-22"},{"lineNumber":73,"author":{"gitId":"-"},"content":"        // null -\u003e returns false","lastModifiedDate":"2017-06-22"},{"lineNumber":74,"author":{"gitId":"-"},"content":"        assertFalse(addAliceCommand.equals(null));","lastModifiedDate":"2017-06-22"},{"lineNumber":75,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-22"},{"lineNumber":76,"author":{"gitId":"-"},"content":"        // different person -\u003e returns false","lastModifiedDate":"2017-06-22"},{"lineNumber":77,"author":{"gitId":"-"},"content":"        assertFalse(addAliceCommand.equals(addBobCommand));","lastModifiedDate":"2017-06-22"},{"lineNumber":78,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-22"},{"lineNumber":79,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-22"},{"lineNumber":80,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-05-12"},{"lineNumber":81,"author":{"gitId":"-"},"content":"     * A default model stub that have all of the methods failing.","lastModifiedDate":"2017-05-12"},{"lineNumber":82,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-05-12"},{"lineNumber":83,"author":{"gitId":"-"},"content":"    private class ModelStub implements Model {","lastModifiedDate":"2017-05-12"},{"lineNumber":84,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2018-11-27"},{"lineNumber":85,"author":{"gitId":"-"},"content":"        public void setUserPrefs(ReadOnlyUserPrefs userPrefs) {","lastModifiedDate":"2018-12-06"},{"lineNumber":86,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2018-11-27"},{"lineNumber":87,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-11-27"},{"lineNumber":88,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":89,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2018-11-27"},{"lineNumber":90,"author":{"gitId":"-"},"content":"        public ReadOnlyUserPrefs getUserPrefs() {","lastModifiedDate":"2018-11-27"},{"lineNumber":91,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2018-11-27"},{"lineNumber":92,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-11-27"},{"lineNumber":93,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":94,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2018-11-27"},{"lineNumber":95,"author":{"gitId":"-"},"content":"        public GuiSettings getGuiSettings() {","lastModifiedDate":"2018-11-27"},{"lineNumber":96,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2018-11-27"},{"lineNumber":97,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-11-27"},{"lineNumber":98,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":99,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2018-11-27"},{"lineNumber":100,"author":{"gitId":"-"},"content":"        public void setGuiSettings(GuiSettings guiSettings) {","lastModifiedDate":"2018-11-27"},{"lineNumber":101,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2018-11-27"},{"lineNumber":102,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-11-27"},{"lineNumber":103,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":104,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2018-11-27"},{"lineNumber":105,"author":{"gitId":"-"},"content":"        public Path getAddressBookFilePath() {","lastModifiedDate":"2018-11-27"},{"lineNumber":106,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2018-11-27"},{"lineNumber":107,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-11-27"},{"lineNumber":108,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":109,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2018-11-27"},{"lineNumber":110,"author":{"gitId":"-"},"content":"        public void setAddressBookFilePath(Path addressBookFilePath) {","lastModifiedDate":"2018-11-27"},{"lineNumber":111,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2018-11-27"},{"lineNumber":112,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-11-27"},{"lineNumber":113,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":114,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2017-05-12"},{"lineNumber":115,"author":{"gitId":"aditi2313"},"content":"        public void addPerson(Patron person) {","lastModifiedDate":"2022-03-09"},{"lineNumber":116,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2018-08-06"},{"lineNumber":117,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-12"},{"lineNumber":118,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":119,"author":{"gitId":"bingsen0806"},"content":"        @Override","lastModifiedDate":"2022-03-10"},{"lineNumber":120,"author":{"gitId":"bingsen0806"},"content":"        public void addBook(Book book) {","lastModifiedDate":"2022-03-10"},{"lineNumber":121,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2022-03-10"},{"lineNumber":122,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2022-03-10"},{"lineNumber":123,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-03-10"},{"lineNumber":124,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2017-05-12"},{"lineNumber":125,"author":{"gitId":"-"},"content":"        public void setAddressBook(ReadOnlyAddressBook newData) {","lastModifiedDate":"2018-11-27"},{"lineNumber":126,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2018-08-06"},{"lineNumber":127,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-12"},{"lineNumber":128,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":129,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2017-05-12"},{"lineNumber":130,"author":{"gitId":"-"},"content":"        public ReadOnlyAddressBook getAddressBook() {","lastModifiedDate":"2017-05-12"},{"lineNumber":131,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2018-08-06"},{"lineNumber":132,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-12"},{"lineNumber":133,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":134,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2018-08-06"},{"lineNumber":135,"author":{"gitId":"aditi2313"},"content":"        public boolean hasPerson(Patron person) {","lastModifiedDate":"2022-03-09"},{"lineNumber":136,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2018-08-06"},{"lineNumber":137,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-08-06"},{"lineNumber":138,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-06"},{"lineNumber":139,"author":{"gitId":"bingsen0806"},"content":"        @Override","lastModifiedDate":"2022-03-10"},{"lineNumber":140,"author":{"gitId":"bingsen0806"},"content":"        public boolean hasBook(Book book) {","lastModifiedDate":"2022-03-10"},{"lineNumber":141,"author":{"gitId":"bingsen0806"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2022-03-10"},{"lineNumber":142,"author":{"gitId":"bingsen0806"},"content":"        }","lastModifiedDate":"2022-03-10"},{"lineNumber":143,"author":{"gitId":"bingsen0806"},"content":"","lastModifiedDate":"2022-03-10"},{"lineNumber":144,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2017-05-12"},{"lineNumber":145,"author":{"gitId":"aditi2313"},"content":"        public void deletePerson(Patron target) {","lastModifiedDate":"2022-03-09"},{"lineNumber":146,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2018-08-06"},{"lineNumber":147,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-12"},{"lineNumber":148,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":149,"author":{"gitId":"bingsen0806"},"content":"        @Override","lastModifiedDate":"2022-03-10"},{"lineNumber":150,"author":{"gitId":"bingsen0806"},"content":"        public void deleteBook(Book target) {","lastModifiedDate":"2022-03-10"},{"lineNumber":151,"author":{"gitId":"bingsen0806"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2022-03-10"},{"lineNumber":152,"author":{"gitId":"bingsen0806"},"content":"        }","lastModifiedDate":"2022-03-10"},{"lineNumber":153,"author":{"gitId":"bingsen0806"},"content":"","lastModifiedDate":"2022-03-10"},{"lineNumber":154,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2017-05-12"},{"lineNumber":155,"author":{"gitId":"aditi2313"},"content":"        public void setPerson(Patron target, Patron editedPerson) {","lastModifiedDate":"2022-03-09"},{"lineNumber":156,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2018-08-06"},{"lineNumber":157,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-12"},{"lineNumber":158,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":159,"author":{"gitId":"bingsen0806"},"content":"        @Override","lastModifiedDate":"2022-03-10"},{"lineNumber":160,"author":{"gitId":"bingsen0806"},"content":"        public void setBook(Book target, Book editedBook) {","lastModifiedDate":"2022-03-10"},{"lineNumber":161,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2022-03-10"},{"lineNumber":162,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2022-03-10"},{"lineNumber":163,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-03-10"},{"lineNumber":164,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2017-05-12"},{"lineNumber":165,"author":{"gitId":"aditi2313"},"content":"        public ObservableList\u003cPatron\u003e getFilteredPersonList() {","lastModifiedDate":"2022-03-09"},{"lineNumber":166,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2018-08-06"},{"lineNumber":167,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-12"},{"lineNumber":168,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":169,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2017-05-12"},{"lineNumber":170,"author":{"gitId":"aditi2313"},"content":"        public void updateFilteredPersonList(Predicate\u003cPatron\u003e predicate) {","lastModifiedDate":"2022-03-09"},{"lineNumber":171,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2018-08-06"},{"lineNumber":172,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-12"},{"lineNumber":173,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-03-10"},{"lineNumber":174,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2022-03-10"},{"lineNumber":175,"author":{"gitId":"bingsen0806"},"content":"        public ObservableList\u003cBook\u003e getFilteredBookList() {","lastModifiedDate":"2022-03-10"},{"lineNumber":176,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2022-03-10"},{"lineNumber":177,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2022-03-10"},{"lineNumber":178,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-03-10"},{"lineNumber":179,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2022-03-10"},{"lineNumber":180,"author":{"gitId":"bingsen0806"},"content":"        public void updateFilteredBookList(Predicate\u003cBook\u003e predicate) {","lastModifiedDate":"2022-03-10"},{"lineNumber":181,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2022-03-10"},{"lineNumber":182,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2022-03-10"},{"lineNumber":183,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-12"},{"lineNumber":184,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":185,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-05-12"},{"lineNumber":186,"author":{"gitId":"-"},"content":"     * A Model stub that contains a single person.","lastModifiedDate":"2018-08-07"},{"lineNumber":187,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-05-12"},{"lineNumber":188,"author":{"gitId":"-"},"content":"    private class ModelStubWithPerson extends ModelStub {","lastModifiedDate":"2018-08-07"},{"lineNumber":189,"author":{"gitId":"aditi2313"},"content":"        private final Patron person;","lastModifiedDate":"2022-03-09"},{"lineNumber":190,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-07"},{"lineNumber":191,"author":{"gitId":"aditi2313"},"content":"        ModelStubWithPerson(Patron person) {","lastModifiedDate":"2022-03-09"},{"lineNumber":192,"author":{"gitId":"-"},"content":"            requireNonNull(person);","lastModifiedDate":"2018-08-07"},{"lineNumber":193,"author":{"gitId":"-"},"content":"            this.person \u003d person;","lastModifiedDate":"2018-08-07"},{"lineNumber":194,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-12"},{"lineNumber":195,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":196,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2017-05-04"},{"lineNumber":197,"author":{"gitId":"aditi2313"},"content":"        public boolean hasPerson(Patron person) {","lastModifiedDate":"2022-03-09"},{"lineNumber":198,"author":{"gitId":"-"},"content":"            requireNonNull(person);","lastModifiedDate":"2018-08-07"},{"lineNumber":199,"author":{"gitId":"-"},"content":"            return this.person.isSamePerson(person);","lastModifiedDate":"2018-08-07"},{"lineNumber":200,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-04"},{"lineNumber":201,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-12"},{"lineNumber":202,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":203,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-05-12"},{"lineNumber":204,"author":{"gitId":"-"},"content":"     * A Model stub that always accept the person being added.","lastModifiedDate":"2017-05-12"},{"lineNumber":205,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-05-12"},{"lineNumber":206,"author":{"gitId":"-"},"content":"    private class ModelStubAcceptingPersonAdded extends ModelStub {","lastModifiedDate":"2017-05-12"},{"lineNumber":207,"author":{"gitId":"aditi2313"},"content":"        final ArrayList\u003cPatron\u003e personsAdded \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2022-03-09"},{"lineNumber":208,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":209,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2018-08-07"},{"lineNumber":210,"author":{"gitId":"aditi2313"},"content":"        public boolean hasPerson(Patron person) {","lastModifiedDate":"2022-03-09"},{"lineNumber":211,"author":{"gitId":"-"},"content":"            requireNonNull(person);","lastModifiedDate":"2018-08-07"},{"lineNumber":212,"author":{"gitId":"-"},"content":"            return personsAdded.stream().anyMatch(person::isSamePerson);","lastModifiedDate":"2018-08-07"},{"lineNumber":213,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-08-07"},{"lineNumber":214,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-07"},{"lineNumber":215,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2017-05-12"},{"lineNumber":216,"author":{"gitId":"aditi2313"},"content":"        public void addPerson(Patron person) {","lastModifiedDate":"2022-03-09"},{"lineNumber":217,"author":{"gitId":"-"},"content":"            requireNonNull(person);","lastModifiedDate":"2018-01-10"},{"lineNumber":218,"author":{"gitId":"-"},"content":"            personsAdded.add(person);","lastModifiedDate":"2018-01-10"},{"lineNumber":219,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-12"},{"lineNumber":220,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":221,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2017-05-04"},{"lineNumber":222,"author":{"gitId":"-"},"content":"        public ReadOnlyAddressBook getAddressBook() {","lastModifiedDate":"2017-05-04"},{"lineNumber":223,"author":{"gitId":"-"},"content":"            return new AddressBook();","lastModifiedDate":"2017-05-04"},{"lineNumber":224,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-04"},{"lineNumber":225,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-12"},{"lineNumber":226,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":227,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-05-12"}],"authorContributionMap":{"-":183,"aditi2313":27,"bingsen0806":17}},{"path":"src/test/java/seedu/address/logic/commands/ClearCommandTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2017-06-08"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-08"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.assertCommandSuccess;","lastModifiedDate":"2017-07-05"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-08"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-08"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import seedu.address.model.AddressBook;","lastModifiedDate":"2018-08-08"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2017-06-08"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import seedu.address.model.ModelManager;","lastModifiedDate":"2017-06-08"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import seedu.address.model.UserPrefs;","lastModifiedDate":"2017-06-08"},{"lineNumber":11,"author":{"gitId":"bingsen0806"},"content":"import seedu.address.testutil.TypicalAddressBook;","lastModifiedDate":"2022-03-10"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-08"},{"lineNumber":13,"author":{"gitId":"-"},"content":"public class ClearCommandTest {","lastModifiedDate":"2017-06-08"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-08"},{"lineNumber":15,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-08"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    public void execute_emptyAddressBook_success() {","lastModifiedDate":"2017-08-15"},{"lineNumber":17,"author":{"gitId":"-"},"content":"        Model model \u003d new ModelManager();","lastModifiedDate":"2017-06-08"},{"lineNumber":18,"author":{"gitId":"-"},"content":"        Model expectedModel \u003d new ModelManager();","lastModifiedDate":"2018-08-08"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":20,"author":{"gitId":"-"},"content":"        assertCommandSuccess(new ClearCommand(), model, ClearCommand.MESSAGE_SUCCESS, expectedModel);","lastModifiedDate":"2019-01-25"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-08"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-08"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-08"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    public void execute_nonEmptyAddressBook_success() {","lastModifiedDate":"2017-08-15"},{"lineNumber":25,"author":{"gitId":"bingsen0806"},"content":"        Model model \u003d new ModelManager(TypicalAddressBook.getTypicalAddressBook(), new UserPrefs());","lastModifiedDate":"2022-03-10"},{"lineNumber":26,"author":{"gitId":"bingsen0806"},"content":"        Model expectedModel \u003d new ModelManager(TypicalAddressBook.getTypicalAddressBook(), new UserPrefs());","lastModifiedDate":"2022-03-10"},{"lineNumber":27,"author":{"gitId":"-"},"content":"        expectedModel.setAddressBook(new AddressBook());","lastModifiedDate":"2018-11-27"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":29,"author":{"gitId":"-"},"content":"        assertCommandSuccess(new ClearCommand(), model, ClearCommand.MESSAGE_SUCCESS, expectedModel);","lastModifiedDate":"2019-01-25"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-08"},{"lineNumber":31,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-08"},{"lineNumber":32,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-06-08"}],"authorContributionMap":{"-":29,"bingsen0806":3}},{"path":"src/test/java/seedu/address/logic/commands/CommandTestUtil.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2017-06-05"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"bingsen0806"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_AUTHOR;","lastModifiedDate":"2022-03-11"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_EMAIL;","lastModifiedDate":"2017-07-05"},{"lineNumber":7,"author":{"gitId":"aditi2313"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_ID;","lastModifiedDate":"2022-03-11"},{"lineNumber":8,"author":{"gitId":"bingsen0806"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_ISBN;","lastModifiedDate":"2022-03-11"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_NAME;","lastModifiedDate":"2017-07-05"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_PHONE;","lastModifiedDate":"2017-07-05"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_TAG;","lastModifiedDate":"2017-07-05"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.Assert.assertThrows;","lastModifiedDate":"2019-03-23"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import java.util.ArrayList;","lastModifiedDate":"2017-06-05"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import java.util.Arrays;","lastModifiedDate":"2017-07-20"},{"lineNumber":16,"author":{"gitId":"-"},"content":"import java.util.List;","lastModifiedDate":"2017-06-05"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":18,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.index.Index;","lastModifiedDate":"2018-01-31"},{"lineNumber":19,"author":{"gitId":"yuqitanyq"},"content":"import seedu.address.logic.commands.book.EditBookCommand;","lastModifiedDate":"2022-03-12"},{"lineNumber":20,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.exceptions.CommandException;","lastModifiedDate":"2017-06-05"},{"lineNumber":21,"author":{"gitId":"aditi2313"},"content":"import seedu.address.logic.commands.patron.EditPatronCommand;","lastModifiedDate":"2022-03-11"},{"lineNumber":22,"author":{"gitId":"-"},"content":"import seedu.address.model.AddressBook;","lastModifiedDate":"2017-06-05"},{"lineNumber":23,"author":{"gitId":"-"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2017-06-05"},{"lineNumber":24,"author":{"gitId":"yuqitanyq"},"content":"import seedu.address.model.book.Book;","lastModifiedDate":"2022-03-12"},{"lineNumber":25,"author":{"gitId":"-"},"content":"import seedu.address.model.person.NameContainsKeywordsPredicate;","lastModifiedDate":"2017-07-20"},{"lineNumber":26,"author":{"gitId":"aditi2313"},"content":"import seedu.address.model.person.Patron;","lastModifiedDate":"2022-03-09"},{"lineNumber":27,"author":{"gitId":"yuqitanyq"},"content":"import seedu.address.testutil.EditBookDescriptorBuilder;","lastModifiedDate":"2022-03-12"},{"lineNumber":28,"author":{"gitId":"-"},"content":"import seedu.address.testutil.EditPersonDescriptorBuilder;","lastModifiedDate":"2017-07-05"},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":30,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-06-05"},{"lineNumber":31,"author":{"gitId":"-"},"content":" * Contains helper methods for testing commands.","lastModifiedDate":"2017-06-05"},{"lineNumber":32,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-06-05"},{"lineNumber":33,"author":{"gitId":"-"},"content":"public class CommandTestUtil {","lastModifiedDate":"2017-06-05"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    public static final String VALID_NAME_AMY \u003d \"Amy Bee\";","lastModifiedDate":"2017-07-05"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    public static final String VALID_NAME_BOB \u003d \"Bob Choo\";","lastModifiedDate":"2017-07-05"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    public static final String VALID_PHONE_AMY \u003d \"11111111\";","lastModifiedDate":"2017-07-05"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    public static final String VALID_PHONE_BOB \u003d \"22222222\";","lastModifiedDate":"2017-07-05"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    public static final String VALID_EMAIL_AMY \u003d \"amy@example.com\";","lastModifiedDate":"2017-07-05"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    public static final String VALID_EMAIL_BOB \u003d \"bob@example.com\";","lastModifiedDate":"2017-07-05"},{"lineNumber":41,"author":{"gitId":"aditi2313"},"content":"    public static final String VALID_ID_AMY \u003d \"A0123456H\";","lastModifiedDate":"2022-03-10"},{"lineNumber":42,"author":{"gitId":"aditi2313"},"content":"    public static final String VALID_ID_BOB \u003d \"A0123457H\";","lastModifiedDate":"2022-03-10"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    public static final String VALID_TAG_HUSBAND \u003d \"husband\";","lastModifiedDate":"2017-07-05"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    public static final String VALID_TAG_FRIEND \u003d \"friend\";","lastModifiedDate":"2017-07-05"},{"lineNumber":45,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-05"},{"lineNumber":46,"author":{"gitId":"bingsen0806"},"content":"    public static final String VALID_BOOK_NAME_HARRY_POTTER \u003d \"Harry Potter and The Philosopher\u0027s Stone\";","lastModifiedDate":"2022-03-09"},{"lineNumber":47,"author":{"gitId":"bingsen0806"},"content":"    public static final String VALID_BOOK_NAME_HUNGER_GAMES \u003d \"The Hunger Games: MockingJay\";","lastModifiedDate":"2022-03-09"},{"lineNumber":48,"author":{"gitId":"bingsen0806"},"content":"    public static final String VALID_ISBN_HARRY_POTTER \u003d \"978-71617-018-8-5\";","lastModifiedDate":"2022-03-09"},{"lineNumber":49,"author":{"gitId":"bingsen0806"},"content":"    public static final String VALID_ISBN_HARRY_POTTER_2 \u003d \"9787161701885\";","lastModifiedDate":"2022-03-09"},{"lineNumber":50,"author":{"gitId":"bingsen0806"},"content":"    public static final String VALID_ISBN_HUNGER_GAMES \u003d \"9786029293883\";","lastModifiedDate":"2022-03-09"},{"lineNumber":51,"author":{"gitId":"bingsen0806"},"content":"    public static final String VALID_AUTHOR_JK_ROWLING \u003d \"J. K. Rowling\";","lastModifiedDate":"2022-03-09"},{"lineNumber":52,"author":{"gitId":"bingsen0806"},"content":"    public static final String VALID_AUTHOR_SUZANNE_COLLINS \u003d \"Suzanne Collins\";","lastModifiedDate":"2022-03-09"},{"lineNumber":53,"author":{"gitId":"bingsen0806"},"content":"    public static final String VALID_TAG_ADVENTURE \u003d \"Adventure\";","lastModifiedDate":"2022-03-09"},{"lineNumber":54,"author":{"gitId":"bingsen0806"},"content":"    public static final String VALID_TAG_MAGIC \u003d \"Magic\";","lastModifiedDate":"2022-03-09"},{"lineNumber":55,"author":{"gitId":"bingsen0806"},"content":"    public static final String VALID_TAG_THRILLER \u003d \"Thriller\";","lastModifiedDate":"2022-03-09"},{"lineNumber":56,"author":{"gitId":"bingsen0806"},"content":"    public static final String VALID_TAG_SCIFI \u003d \"Scifi\";","lastModifiedDate":"2022-03-09"},{"lineNumber":57,"author":{"gitId":"bingsen0806"},"content":"","lastModifiedDate":"2022-03-09"},{"lineNumber":58,"author":{"gitId":"-"},"content":"    public static final String NAME_DESC_AMY \u003d \" \" + PREFIX_NAME + VALID_NAME_AMY;","lastModifiedDate":"2017-07-05"},{"lineNumber":59,"author":{"gitId":"-"},"content":"    public static final String NAME_DESC_BOB \u003d \" \" + PREFIX_NAME + VALID_NAME_BOB;","lastModifiedDate":"2017-07-05"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    public static final String PHONE_DESC_AMY \u003d \" \" + PREFIX_PHONE + VALID_PHONE_AMY;","lastModifiedDate":"2017-07-05"},{"lineNumber":61,"author":{"gitId":"-"},"content":"    public static final String PHONE_DESC_BOB \u003d \" \" + PREFIX_PHONE + VALID_PHONE_BOB;","lastModifiedDate":"2017-07-05"},{"lineNumber":62,"author":{"gitId":"-"},"content":"    public static final String EMAIL_DESC_AMY \u003d \" \" + PREFIX_EMAIL + VALID_EMAIL_AMY;","lastModifiedDate":"2017-07-05"},{"lineNumber":63,"author":{"gitId":"-"},"content":"    public static final String EMAIL_DESC_BOB \u003d \" \" + PREFIX_EMAIL + VALID_EMAIL_BOB;","lastModifiedDate":"2017-07-05"},{"lineNumber":64,"author":{"gitId":"aditi2313"},"content":"    public static final String ID_DESC_AMY \u003d \" \" + PREFIX_ID + VALID_ID_AMY;","lastModifiedDate":"2022-03-09"},{"lineNumber":65,"author":{"gitId":"aditi2313"},"content":"    public static final String ID_DESC_BOB \u003d \" \" + PREFIX_ID + VALID_ID_BOB;","lastModifiedDate":"2022-03-09"},{"lineNumber":66,"author":{"gitId":"-"},"content":"    public static final String TAG_DESC_FRIEND \u003d \" \" + PREFIX_TAG + VALID_TAG_FRIEND;","lastModifiedDate":"2017-07-05"},{"lineNumber":67,"author":{"gitId":"-"},"content":"    public static final String TAG_DESC_HUSBAND \u003d \" \" + PREFIX_TAG + VALID_TAG_HUSBAND;","lastModifiedDate":"2017-07-05"},{"lineNumber":68,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-05"},{"lineNumber":69,"author":{"gitId":"bingsen0806"},"content":"    public static final String BOOK_NAME_DESC_HARRY_POTTER \u003d \" \" + PREFIX_NAME + VALID_BOOK_NAME_HARRY_POTTER;","lastModifiedDate":"2022-03-11"},{"lineNumber":70,"author":{"gitId":"bingsen0806"},"content":"    public static final String BOOK_NAME_DESC_HUNGER_GAMES \u003d \" \" + PREFIX_NAME + VALID_BOOK_NAME_HUNGER_GAMES;","lastModifiedDate":"2022-03-11"},{"lineNumber":71,"author":{"gitId":"bingsen0806"},"content":"    public static final String ISBN_DESC_HARRY_POTTER \u003d \" \" + PREFIX_ISBN + VALID_ISBN_HARRY_POTTER;","lastModifiedDate":"2022-03-11"},{"lineNumber":72,"author":{"gitId":"bingsen0806"},"content":"    public static final String ISBN_DESC_HUNGER_GAMES \u003d \" \" + PREFIX_ISBN + VALID_ISBN_HUNGER_GAMES;","lastModifiedDate":"2022-03-11"},{"lineNumber":73,"author":{"gitId":"bingsen0806"},"content":"    public static final String ISBN_DESC_HARRY_POTTER_2 \u003d \" \" + PREFIX_ISBN + VALID_ISBN_HARRY_POTTER_2;","lastModifiedDate":"2022-03-11"},{"lineNumber":74,"author":{"gitId":"bingsen0806"},"content":"    public static final String AUTHOR_DESC_JK_ROWLING \u003d \" \" + PREFIX_AUTHOR + VALID_AUTHOR_JK_ROWLING;","lastModifiedDate":"2022-03-11"},{"lineNumber":75,"author":{"gitId":"bingsen0806"},"content":"    public static final String AUTHOR_DESC_SUZANNE_COLLINS \u003d \" \" + PREFIX_AUTHOR + VALID_AUTHOR_SUZANNE_COLLINS;","lastModifiedDate":"2022-03-11"},{"lineNumber":76,"author":{"gitId":"bingsen0806"},"content":"    public static final String TAG_DESC_ADVENTURE \u003d \" \" + PREFIX_TAG + VALID_TAG_ADVENTURE;","lastModifiedDate":"2022-03-11"},{"lineNumber":77,"author":{"gitId":"bingsen0806"},"content":"    public static final String TAG_DESC_MAGIC \u003d \" \" + PREFIX_TAG + VALID_TAG_MAGIC;","lastModifiedDate":"2022-03-11"},{"lineNumber":78,"author":{"gitId":"bingsen0806"},"content":"    public static final String TAG_DESC_THRILLER \u003d \" \" + PREFIX_TAG + VALID_TAG_THRILLER;","lastModifiedDate":"2022-03-11"},{"lineNumber":79,"author":{"gitId":"bingsen0806"},"content":"    public static final String TAG_DESC_SCIFI \u003d \" \" + PREFIX_TAG + VALID_TAG_SCIFI;","lastModifiedDate":"2022-03-11"},{"lineNumber":80,"author":{"gitId":"bingsen0806"},"content":"","lastModifiedDate":"2022-03-11"},{"lineNumber":81,"author":{"gitId":"-"},"content":"    public static final String INVALID_NAME_DESC \u003d \" \" + PREFIX_NAME + \"James\u0026\"; // \u0027\u0026\u0027 not allowed in names","lastModifiedDate":"2017-07-05"},{"lineNumber":82,"author":{"gitId":"-"},"content":"    public static final String INVALID_PHONE_DESC \u003d \" \" + PREFIX_PHONE + \"911a\"; // \u0027a\u0027 not allowed in phones","lastModifiedDate":"2017-07-05"},{"lineNumber":83,"author":{"gitId":"-"},"content":"    public static final String INVALID_EMAIL_DESC \u003d \" \" + PREFIX_EMAIL + \"bob!yahoo\"; // missing \u0027@\u0027 symbol","lastModifiedDate":"2017-07-05"},{"lineNumber":84,"author":{"gitId":"aditi2313"},"content":"    public static final String INVALID_ID_DESC \u003d \" \" + PREFIX_ID; // empty string not allowed for addresses","lastModifiedDate":"2022-03-09"},{"lineNumber":85,"author":{"gitId":"-"},"content":"    public static final String INVALID_TAG_DESC \u003d \" \" + PREFIX_TAG + \"hubby*\"; // \u0027*\u0027 not allowed in tags","lastModifiedDate":"2017-07-05"},{"lineNumber":86,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-05"},{"lineNumber":87,"author":{"gitId":"bingsen0806"},"content":"    public static final String INVALID_BOOK_NAME_DESC \u003d \" \" + PREFIX_NAME + \"@HarryPotter\"; // \u0027@\u0027 not allowed in names","lastModifiedDate":"2022-03-11"},{"lineNumber":88,"author":{"gitId":"bingsen0806"},"content":"    public static final String INVALID_ISBN_DESC \u003d \" \" + PREFIX_ISBN + \"911a\";","lastModifiedDate":"2022-03-11"},{"lineNumber":89,"author":{"gitId":"bingsen0806"},"content":"    public static final String INVALID_AUTHOR_DESC \u003d \" \" + PREFIX_AUTHOR + \"@@@\"; // \u0027@\u0027 not allowed for author","lastModifiedDate":"2022-03-11"},{"lineNumber":90,"author":{"gitId":"bingsen0806"},"content":"","lastModifiedDate":"2022-03-11"},{"lineNumber":91,"author":{"gitId":"-"},"content":"    public static final String PREAMBLE_WHITESPACE \u003d \"\\t  \\r  \\n\";","lastModifiedDate":"2017-12-23"},{"lineNumber":92,"author":{"gitId":"-"},"content":"    public static final String PREAMBLE_NON_EMPTY \u003d \"NonEmptyPreamble\";","lastModifiedDate":"2017-12-23"},{"lineNumber":93,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-12-23"},{"lineNumber":94,"author":{"gitId":"aditi2313"},"content":"    public static final EditPatronCommand.EditPersonDescriptor DESC_AMY;","lastModifiedDate":"2022-03-11"},{"lineNumber":95,"author":{"gitId":"aditi2313"},"content":"    public static final EditPatronCommand.EditPersonDescriptor DESC_BOB;","lastModifiedDate":"2022-03-11"},{"lineNumber":96,"author":{"gitId":"yuqitanyq"},"content":"    public static final EditBookCommand.EditBookDescriptor DESC_HARRY_POTTER;","lastModifiedDate":"2022-03-12"},{"lineNumber":97,"author":{"gitId":"yuqitanyq"},"content":"    public static final EditBookCommand.EditBookDescriptor DESC_HUNGER_GAMES;","lastModifiedDate":"2022-03-12"},{"lineNumber":98,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-05"},{"lineNumber":99,"author":{"gitId":"-"},"content":"    static {","lastModifiedDate":"2017-07-05"},{"lineNumber":100,"author":{"gitId":"-"},"content":"        DESC_AMY \u003d new EditPersonDescriptorBuilder().withName(VALID_NAME_AMY)","lastModifiedDate":"2017-07-05"},{"lineNumber":101,"author":{"gitId":"aditi2313"},"content":"                .withPhone(VALID_PHONE_AMY).withEmail(VALID_EMAIL_AMY).withId(VALID_ID_AMY)","lastModifiedDate":"2022-03-10"},{"lineNumber":102,"author":{"gitId":"-"},"content":"                .withTags(VALID_TAG_FRIEND).build();","lastModifiedDate":"2017-07-05"},{"lineNumber":103,"author":{"gitId":"-"},"content":"        DESC_BOB \u003d new EditPersonDescriptorBuilder().withName(VALID_NAME_BOB)","lastModifiedDate":"2017-07-05"},{"lineNumber":104,"author":{"gitId":"aditi2313"},"content":"                .withPhone(VALID_PHONE_BOB).withEmail(VALID_EMAIL_BOB).withId(VALID_ID_BOB)","lastModifiedDate":"2022-03-10"},{"lineNumber":105,"author":{"gitId":"-"},"content":"                .withTags(VALID_TAG_HUSBAND, VALID_TAG_FRIEND).build();","lastModifiedDate":"2017-07-05"},{"lineNumber":106,"author":{"gitId":"yuqitanyq"},"content":"        DESC_HARRY_POTTER \u003d new EditBookDescriptorBuilder().withBookName(VALID_BOOK_NAME_HARRY_POTTER)","lastModifiedDate":"2022-03-12"},{"lineNumber":107,"author":{"gitId":"yuqitanyq"},"content":"                .withIsbn(VALID_ISBN_HARRY_POTTER).withAuthors(VALID_AUTHOR_JK_ROWLING)","lastModifiedDate":"2022-03-12"},{"lineNumber":108,"author":{"gitId":"yuqitanyq"},"content":"                .withTags(VALID_TAG_THRILLER, VALID_TAG_MAGIC).build();","lastModifiedDate":"2022-03-12"},{"lineNumber":109,"author":{"gitId":"yuqitanyq"},"content":"        DESC_HUNGER_GAMES \u003d new EditBookDescriptorBuilder().withBookName(VALID_BOOK_NAME_HUNGER_GAMES)","lastModifiedDate":"2022-03-12"},{"lineNumber":110,"author":{"gitId":"yuqitanyq"},"content":"                .withIsbn(VALID_ISBN_HUNGER_GAMES).withAuthors(VALID_AUTHOR_SUZANNE_COLLINS)","lastModifiedDate":"2022-03-12"},{"lineNumber":111,"author":{"gitId":"yuqitanyq"},"content":"                .withTags(VALID_TAG_THRILLER).build();","lastModifiedDate":"2022-03-12"},{"lineNumber":112,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-07-05"},{"lineNumber":113,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-05"},{"lineNumber":114,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-06-05"},{"lineNumber":115,"author":{"gitId":"-"},"content":"     * Executes the given {@code command}, confirms that \u003cbr\u003e","lastModifiedDate":"2017-06-05"},{"lineNumber":116,"author":{"gitId":"-"},"content":"     * - the returned {@link CommandResult} matches {@code expectedCommandResult} \u003cbr\u003e","lastModifiedDate":"2018-12-09"},{"lineNumber":117,"author":{"gitId":"-"},"content":"     * - the {@code actualModel} matches {@code expectedModel}","lastModifiedDate":"2019-01-25"},{"lineNumber":118,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-06-05"},{"lineNumber":119,"author":{"gitId":"-"},"content":"    public static void assertCommandSuccess(Command command, Model actualModel, CommandResult expectedCommandResult,","lastModifiedDate":"2019-01-25"},{"lineNumber":120,"author":{"gitId":"-"},"content":"            Model expectedModel) {","lastModifiedDate":"2019-01-25"},{"lineNumber":121,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2017-08-15"},{"lineNumber":122,"author":{"gitId":"-"},"content":"            CommandResult result \u003d command.execute(actualModel);","lastModifiedDate":"2019-01-25"},{"lineNumber":123,"author":{"gitId":"-"},"content":"            assertEquals(expectedCommandResult, result);","lastModifiedDate":"2018-12-09"},{"lineNumber":124,"author":{"gitId":"-"},"content":"            assertEquals(expectedModel, actualModel);","lastModifiedDate":"2017-06-05"},{"lineNumber":125,"author":{"gitId":"-"},"content":"        } catch (CommandException ce) {","lastModifiedDate":"2017-08-15"},{"lineNumber":126,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"Execution of command should not fail.\", ce);","lastModifiedDate":"2017-08-15"},{"lineNumber":127,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-08-15"},{"lineNumber":128,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-05"},{"lineNumber":129,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":130,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-12-09"},{"lineNumber":131,"author":{"gitId":"-"},"content":"     * Convenience wrapper to {@link #assertCommandSuccess(Command, Model, CommandResult, Model)}","lastModifiedDate":"2019-01-25"},{"lineNumber":132,"author":{"gitId":"-"},"content":"     * that takes a string {@code expectedMessage}.","lastModifiedDate":"2018-12-09"},{"lineNumber":133,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-12-09"},{"lineNumber":134,"author":{"gitId":"-"},"content":"    public static void assertCommandSuccess(Command command, Model actualModel, String expectedMessage,","lastModifiedDate":"2019-01-25"},{"lineNumber":135,"author":{"gitId":"-"},"content":"            Model expectedModel) {","lastModifiedDate":"2019-01-25"},{"lineNumber":136,"author":{"gitId":"-"},"content":"        CommandResult expectedCommandResult \u003d new CommandResult(expectedMessage);","lastModifiedDate":"2018-12-09"},{"lineNumber":137,"author":{"gitId":"-"},"content":"        assertCommandSuccess(command, actualModel, expectedCommandResult, expectedModel);","lastModifiedDate":"2019-01-25"},{"lineNumber":138,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-12-09"},{"lineNumber":139,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":140,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-06-05"},{"lineNumber":141,"author":{"gitId":"-"},"content":"     * Executes the given {@code command}, confirms that \u003cbr\u003e","lastModifiedDate":"2017-06-05"},{"lineNumber":142,"author":{"gitId":"-"},"content":"     * - a {@code CommandException} is thrown \u003cbr\u003e","lastModifiedDate":"2017-06-05"},{"lineNumber":143,"author":{"gitId":"-"},"content":"     * - the CommandException message matches {@code expectedMessage} \u003cbr\u003e","lastModifiedDate":"2017-06-05"},{"lineNumber":144,"author":{"gitId":"-"},"content":"     * - the address book, filtered person list and selected person in {@code actualModel} remain unchanged","lastModifiedDate":"2019-01-25"},{"lineNumber":145,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-06-05"},{"lineNumber":146,"author":{"gitId":"-"},"content":"    public static void assertCommandFailure(Command command, Model actualModel, String expectedMessage) {","lastModifiedDate":"2019-01-25"},{"lineNumber":147,"author":{"gitId":"-"},"content":"        // we are unable to defensively copy the model for comparison later, so we can","lastModifiedDate":"2017-06-05"},{"lineNumber":148,"author":{"gitId":"-"},"content":"        // only do so by copying its components.","lastModifiedDate":"2017-06-05"},{"lineNumber":149,"author":{"gitId":"-"},"content":"        AddressBook expectedAddressBook \u003d new AddressBook(actualModel.getAddressBook());","lastModifiedDate":"2017-06-05"},{"lineNumber":150,"author":{"gitId":"aditi2313"},"content":"        List\u003cPatron\u003e expectedFilteredList \u003d new ArrayList\u003c\u003e(actualModel.getFilteredPersonList());","lastModifiedDate":"2022-03-09"},{"lineNumber":151,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":152,"author":{"gitId":"-"},"content":"        assertThrows(CommandException.class, expectedMessage, () -\u003e command.execute(actualModel));","lastModifiedDate":"2019-05-03"},{"lineNumber":153,"author":{"gitId":"-"},"content":"        assertEquals(expectedAddressBook, actualModel.getAddressBook());","lastModifiedDate":"2017-06-05"},{"lineNumber":154,"author":{"gitId":"-"},"content":"        assertEquals(expectedFilteredList, actualModel.getFilteredPersonList());","lastModifiedDate":"2017-06-05"},{"lineNumber":155,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-05"},{"lineNumber":156,"author":{"gitId":"yuqitanyq"},"content":"","lastModifiedDate":"2022-03-12"},{"lineNumber":157,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-07-20"},{"lineNumber":158,"author":{"gitId":"-"},"content":"     * Updates {@code model}\u0027s filtered list to show only the person at the given {@code targetIndex} in the","lastModifiedDate":"2018-01-31"},{"lineNumber":159,"author":{"gitId":"-"},"content":"     * {@code model}\u0027s address book.","lastModifiedDate":"2018-01-31"},{"lineNumber":160,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-07-20"},{"lineNumber":161,"author":{"gitId":"-"},"content":"    public static void showPersonAtIndex(Model model, Index targetIndex) {","lastModifiedDate":"2018-01-31"},{"lineNumber":162,"author":{"gitId":"-"},"content":"        assertTrue(targetIndex.getZeroBased() \u003c model.getFilteredPersonList().size());","lastModifiedDate":"2018-01-31"},{"lineNumber":163,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-01-31"},{"lineNumber":164,"author":{"gitId":"aditi2313"},"content":"        Patron person \u003d model.getFilteredPersonList().get(targetIndex.getZeroBased());","lastModifiedDate":"2022-03-09"},{"lineNumber":165,"author":{"gitId":"-"},"content":"        final String[] splitName \u003d person.getName().fullName.split(\"\\\\s+\");","lastModifiedDate":"2017-07-20"},{"lineNumber":166,"author":{"gitId":"-"},"content":"        model.updateFilteredPersonList(new NameContainsKeywordsPredicate(Arrays.asList(splitName[0])));","lastModifiedDate":"2017-07-20"},{"lineNumber":167,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-20"},{"lineNumber":168,"author":{"gitId":"-"},"content":"        assertEquals(1, model.getFilteredPersonList().size());","lastModifiedDate":"2018-02-08"},{"lineNumber":169,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-07-20"},{"lineNumber":170,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":171,"author":{"gitId":"yuqitanyq"},"content":"    /**","lastModifiedDate":"2022-03-12"},{"lineNumber":172,"author":{"gitId":"yuqitanyq"},"content":"     * Updates {@code model}\u0027s filtered list to show only the book at the given {@code targetIndex} in the","lastModifiedDate":"2022-03-12"},{"lineNumber":173,"author":{"gitId":"yuqitanyq"},"content":"     * {@code model}\u0027s address book.","lastModifiedDate":"2022-03-12"},{"lineNumber":174,"author":{"gitId":"yuqitanyq"},"content":"     */","lastModifiedDate":"2022-03-12"},{"lineNumber":175,"author":{"gitId":"yuqitanyq"},"content":"    public static void showBookAtIndex(Model model, Index targetIndex) {","lastModifiedDate":"2022-03-12"},{"lineNumber":176,"author":{"gitId":"yuqitanyq"},"content":"        assertTrue(targetIndex.getZeroBased() \u003c model.getFilteredBookList().size());","lastModifiedDate":"2022-03-12"},{"lineNumber":177,"author":{"gitId":"yuqitanyq"},"content":"","lastModifiedDate":"2022-03-12"},{"lineNumber":178,"author":{"gitId":"yuqitanyq"},"content":"        Book book \u003d model.getFilteredBookList().get(targetIndex.getZeroBased());","lastModifiedDate":"2022-03-12"},{"lineNumber":179,"author":{"gitId":"bingsen0806"},"content":"        model.updateFilteredBookList(x -\u003e x.equals(book));","lastModifiedDate":"2022-03-11"},{"lineNumber":180,"author":{"gitId":"yuqitanyq"},"content":"","lastModifiedDate":"2022-03-12"},{"lineNumber":181,"author":{"gitId":"yuqitanyq"},"content":"        assertEquals(1, model.getFilteredBookList().size());","lastModifiedDate":"2022-03-12"},{"lineNumber":182,"author":{"gitId":"yuqitanyq"},"content":"    }","lastModifiedDate":"2022-03-12"},{"lineNumber":183,"author":{"gitId":"yuqitanyq"},"content":"","lastModifiedDate":"2022-03-12"},{"lineNumber":184,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-06-05"}],"authorContributionMap":{"yuqitanyq":24,"-":115,"bingsen0806":31,"aditi2313":14}},{"path":"src/test/java/seedu/address/logic/commands/DeleteCommandTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2017-06-05"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.assertCommandFailure;","lastModifiedDate":"2017-07-05"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.assertCommandSuccess;","lastModifiedDate":"2017-07-05"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.showPersonAtIndex;","lastModifiedDate":"2018-01-31"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.TypicalIndexes.INDEX_FIRST_PERSON;","lastModifiedDate":"2017-08-05"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.TypicalIndexes.INDEX_SECOND_PERSON;","lastModifiedDate":"2017-08-05"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.Messages;","lastModifiedDate":"2017-06-05"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.index.Index;","lastModifiedDate":"2017-06-05"},{"lineNumber":15,"author":{"gitId":"aditi2313"},"content":"import seedu.address.logic.commands.patron.DeletePatronCommand;","lastModifiedDate":"2022-03-11"},{"lineNumber":16,"author":{"gitId":"-"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2017-06-05"},{"lineNumber":17,"author":{"gitId":"-"},"content":"import seedu.address.model.ModelManager;","lastModifiedDate":"2017-06-05"},{"lineNumber":18,"author":{"gitId":"-"},"content":"import seedu.address.model.UserPrefs;","lastModifiedDate":"2017-06-05"},{"lineNumber":19,"author":{"gitId":"aditi2313"},"content":"import seedu.address.model.person.Patron;","lastModifiedDate":"2022-03-09"},{"lineNumber":20,"author":{"gitId":"aditi2313"},"content":"import seedu.address.testutil.TypicalAddressBook;","lastModifiedDate":"2022-03-11"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":22,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-06-05"},{"lineNumber":23,"author":{"gitId":"-"},"content":" * Contains integration tests (interaction with the Model) and unit tests for","lastModifiedDate":"2020-12-16"},{"lineNumber":24,"author":{"gitId":"-"},"content":" * {@code DeleteCommand}.","lastModifiedDate":"2018-01-23"},{"lineNumber":25,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-06-05"},{"lineNumber":26,"author":{"gitId":"-"},"content":"public class DeleteCommandTest {","lastModifiedDate":"2017-06-05"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":28,"author":{"gitId":"bingsen0806"},"content":"    private Model model \u003d new ModelManager(TypicalAddressBook.getTypicalAddressBook(), new UserPrefs());","lastModifiedDate":"2022-03-10"},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-05"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    public void execute_validIndexUnfilteredList_success() {","lastModifiedDate":"2018-08-07"},{"lineNumber":32,"author":{"gitId":"aditi2313"},"content":"        Patron personToDelete \u003d model.getFilteredPersonList().get(INDEX_FIRST_PERSON.getZeroBased());","lastModifiedDate":"2022-03-09"},{"lineNumber":33,"author":{"gitId":"aditi2313"},"content":"        DeletePatronCommand deleteCommand \u003d new DeletePatronCommand(INDEX_FIRST_PERSON);","lastModifiedDate":"2022-03-11"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":35,"author":{"gitId":"aditi2313"},"content":"        String expectedMessage \u003d String.format(DeletePatronCommand.MESSAGE_DELETE_PERSON_SUCCESS, personToDelete);","lastModifiedDate":"2022-03-11"},{"lineNumber":36,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        ModelManager expectedModel \u003d new ModelManager(model.getAddressBook(), new UserPrefs());","lastModifiedDate":"2017-06-05"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        expectedModel.deletePerson(personToDelete);","lastModifiedDate":"2017-06-05"},{"lineNumber":39,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":40,"author":{"gitId":"-"},"content":"        assertCommandSuccess(deleteCommand, model, expectedMessage, expectedModel);","lastModifiedDate":"2019-01-25"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-05"},{"lineNumber":42,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-05"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    public void execute_invalidIndexUnfilteredList_throwsCommandException() {","lastModifiedDate":"2018-08-08"},{"lineNumber":45,"author":{"gitId":"-"},"content":"        Index outOfBoundIndex \u003d Index.fromOneBased(model.getFilteredPersonList().size() + 1);","lastModifiedDate":"2017-06-05"},{"lineNumber":46,"author":{"gitId":"aditi2313"},"content":"        DeletePatronCommand deleteCommand \u003d new DeletePatronCommand(outOfBoundIndex);","lastModifiedDate":"2022-03-11"},{"lineNumber":47,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        assertCommandFailure(deleteCommand, model, Messages.MESSAGE_INVALID_PERSON_DISPLAYED_INDEX);","lastModifiedDate":"2019-01-25"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-05"},{"lineNumber":50,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-05"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    public void execute_validIndexFilteredList_success() {","lastModifiedDate":"2018-08-07"},{"lineNumber":53,"author":{"gitId":"-"},"content":"        showPersonAtIndex(model, INDEX_FIRST_PERSON);","lastModifiedDate":"2018-01-31"},{"lineNumber":54,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":55,"author":{"gitId":"aditi2313"},"content":"        Patron personToDelete \u003d model.getFilteredPersonList().get(INDEX_FIRST_PERSON.getZeroBased());","lastModifiedDate":"2022-03-09"},{"lineNumber":56,"author":{"gitId":"aditi2313"},"content":"        DeletePatronCommand deleteCommand \u003d new DeletePatronCommand(INDEX_FIRST_PERSON);","lastModifiedDate":"2022-03-11"},{"lineNumber":57,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":58,"author":{"gitId":"aditi2313"},"content":"        String expectedMessage \u003d String.format(DeletePatronCommand.MESSAGE_DELETE_PERSON_SUCCESS, personToDelete);","lastModifiedDate":"2022-03-11"},{"lineNumber":59,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":60,"author":{"gitId":"-"},"content":"        Model expectedModel \u003d new ModelManager(model.getAddressBook(), new UserPrefs());","lastModifiedDate":"2017-06-05"},{"lineNumber":61,"author":{"gitId":"-"},"content":"        expectedModel.deletePerson(personToDelete);","lastModifiedDate":"2017-06-05"},{"lineNumber":62,"author":{"gitId":"-"},"content":"        showNoPerson(expectedModel);","lastModifiedDate":"2017-06-05"},{"lineNumber":63,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":64,"author":{"gitId":"-"},"content":"        assertCommandSuccess(deleteCommand, model, expectedMessage, expectedModel);","lastModifiedDate":"2019-01-25"},{"lineNumber":65,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-05"},{"lineNumber":66,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":67,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-05"},{"lineNumber":68,"author":{"gitId":"-"},"content":"    public void execute_invalidIndexFilteredList_throwsCommandException() {","lastModifiedDate":"2017-08-15"},{"lineNumber":69,"author":{"gitId":"-"},"content":"        showPersonAtIndex(model, INDEX_FIRST_PERSON);","lastModifiedDate":"2018-01-31"},{"lineNumber":70,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":71,"author":{"gitId":"-"},"content":"        Index outOfBoundIndex \u003d INDEX_SECOND_PERSON;","lastModifiedDate":"2017-06-05"},{"lineNumber":72,"author":{"gitId":"-"},"content":"        // ensures that outOfBoundIndex is still in bounds of address book list","lastModifiedDate":"2017-06-05"},{"lineNumber":73,"author":{"gitId":"-"},"content":"        assertTrue(outOfBoundIndex.getZeroBased() \u003c model.getAddressBook().getPersonList().size());","lastModifiedDate":"2017-06-05"},{"lineNumber":74,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":75,"author":{"gitId":"aditi2313"},"content":"        DeletePatronCommand deleteCommand \u003d new DeletePatronCommand(outOfBoundIndex);","lastModifiedDate":"2022-03-11"},{"lineNumber":76,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":77,"author":{"gitId":"-"},"content":"        assertCommandFailure(deleteCommand, model, Messages.MESSAGE_INVALID_PERSON_DISPLAYED_INDEX);","lastModifiedDate":"2019-01-25"},{"lineNumber":78,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-05"},{"lineNumber":79,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":80,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-01-23"},{"lineNumber":81,"author":{"gitId":"-"},"content":"    public void equals() {","lastModifiedDate":"2018-08-08"},{"lineNumber":82,"author":{"gitId":"aditi2313"},"content":"        DeletePatronCommand deleteFirstCommand \u003d new DeletePatronCommand(INDEX_FIRST_PERSON);","lastModifiedDate":"2022-03-11"},{"lineNumber":83,"author":{"gitId":"aditi2313"},"content":"        DeletePatronCommand deleteSecondCommand \u003d new DeletePatronCommand(INDEX_SECOND_PERSON);","lastModifiedDate":"2022-03-11"},{"lineNumber":84,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":85,"author":{"gitId":"-"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2017-06-27"},{"lineNumber":86,"author":{"gitId":"-"},"content":"        assertTrue(deleteFirstCommand.equals(deleteFirstCommand));","lastModifiedDate":"2017-06-27"},{"lineNumber":87,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":88,"author":{"gitId":"-"},"content":"        // same values -\u003e returns true","lastModifiedDate":"2017-06-27"},{"lineNumber":89,"author":{"gitId":"aditi2313"},"content":"        DeletePatronCommand deleteFirstCommandCopy \u003d new DeletePatronCommand(INDEX_FIRST_PERSON);","lastModifiedDate":"2022-03-11"},{"lineNumber":90,"author":{"gitId":"-"},"content":"        assertTrue(deleteFirstCommand.equals(deleteFirstCommandCopy));","lastModifiedDate":"2017-06-27"},{"lineNumber":91,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":92,"author":{"gitId":"-"},"content":"        // different types -\u003e returns false","lastModifiedDate":"2017-06-27"},{"lineNumber":93,"author":{"gitId":"-"},"content":"        assertFalse(deleteFirstCommand.equals(1));","lastModifiedDate":"2017-06-27"},{"lineNumber":94,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":95,"author":{"gitId":"-"},"content":"        // null -\u003e returns false","lastModifiedDate":"2017-06-27"},{"lineNumber":96,"author":{"gitId":"-"},"content":"        assertFalse(deleteFirstCommand.equals(null));","lastModifiedDate":"2017-06-27"},{"lineNumber":97,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":98,"author":{"gitId":"-"},"content":"        // different person -\u003e returns false","lastModifiedDate":"2017-06-27"},{"lineNumber":99,"author":{"gitId":"-"},"content":"        assertFalse(deleteFirstCommand.equals(deleteSecondCommand));","lastModifiedDate":"2017-06-27"},{"lineNumber":100,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-27"},{"lineNumber":101,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":102,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-06-05"},{"lineNumber":103,"author":{"gitId":"-"},"content":"     * Updates {@code model}\u0027s filtered list to show no one.","lastModifiedDate":"2017-06-05"},{"lineNumber":104,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-06-05"},{"lineNumber":105,"author":{"gitId":"-"},"content":"    private void showNoPerson(Model model) {","lastModifiedDate":"2017-06-05"},{"lineNumber":106,"author":{"gitId":"-"},"content":"        model.updateFilteredPersonList(p -\u003e false);","lastModifiedDate":"2017-06-12"},{"lineNumber":107,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":108,"author":{"gitId":"-"},"content":"        assertTrue(model.getFilteredPersonList().isEmpty());","lastModifiedDate":"2018-02-08"},{"lineNumber":109,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-05"},{"lineNumber":110,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-06-05"}],"authorContributionMap":{"-":95,"aditi2313":14,"bingsen0806":1}},{"path":"src/test/java/seedu/address/logic/commands/EditCommandTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2017-05-08"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-08"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.DESC_AMY;","lastModifiedDate":"2017-07-05"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.DESC_BOB;","lastModifiedDate":"2017-07-05"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_NAME_BOB;","lastModifiedDate":"2017-07-05"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_PHONE_BOB;","lastModifiedDate":"2017-07-05"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_TAG_HUSBAND;","lastModifiedDate":"2017-07-05"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.assertCommandFailure;","lastModifiedDate":"2017-07-05"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.assertCommandSuccess;","lastModifiedDate":"2017-07-05"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.showPersonAtIndex;","lastModifiedDate":"2018-01-31"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.TypicalIndexes.INDEX_FIRST_PERSON;","lastModifiedDate":"2017-08-05"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.TypicalIndexes.INDEX_SECOND_PERSON;","lastModifiedDate":"2017-08-05"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-08"},{"lineNumber":16,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-08"},{"lineNumber":18,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.Messages;","lastModifiedDate":"2017-05-04"},{"lineNumber":19,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.index.Index;","lastModifiedDate":"2017-05-25"},{"lineNumber":20,"author":{"gitId":"aditi2313"},"content":"import seedu.address.logic.commands.patron.EditPatronCommand;","lastModifiedDate":"2022-03-11"},{"lineNumber":21,"author":{"gitId":"aditi2313"},"content":"import seedu.address.logic.commands.patron.EditPatronCommand.EditPersonDescriptor;","lastModifiedDate":"2022-03-11"},{"lineNumber":22,"author":{"gitId":"-"},"content":"import seedu.address.model.AddressBook;","lastModifiedDate":"2017-05-04"},{"lineNumber":23,"author":{"gitId":"-"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2017-05-04"},{"lineNumber":24,"author":{"gitId":"-"},"content":"import seedu.address.model.ModelManager;","lastModifiedDate":"2017-05-04"},{"lineNumber":25,"author":{"gitId":"-"},"content":"import seedu.address.model.UserPrefs;","lastModifiedDate":"2017-05-04"},{"lineNumber":26,"author":{"gitId":"aditi2313"},"content":"import seedu.address.model.person.Patron;","lastModifiedDate":"2022-03-09"},{"lineNumber":27,"author":{"gitId":"-"},"content":"import seedu.address.testutil.EditPersonDescriptorBuilder;","lastModifiedDate":"2017-05-22"},{"lineNumber":28,"author":{"gitId":"-"},"content":"import seedu.address.testutil.PersonBuilder;","lastModifiedDate":"2017-05-04"},{"lineNumber":29,"author":{"gitId":"bingsen0806"},"content":"import seedu.address.testutil.TypicalAddressBook;","lastModifiedDate":"2022-03-10"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-08"},{"lineNumber":31,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-05-04"},{"lineNumber":32,"author":{"gitId":"-"},"content":" * Contains integration tests (interaction with the Model) and unit tests for EditCommand.","lastModifiedDate":"2020-12-16"},{"lineNumber":33,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-05-04"},{"lineNumber":34,"author":{"gitId":"-"},"content":"public class EditCommandTest {","lastModifiedDate":"2017-05-08"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-08"},{"lineNumber":36,"author":{"gitId":"bingsen0806"},"content":"    private Model model \u003d new ModelManager(TypicalAddressBook.getTypicalAddressBook(), new UserPrefs());","lastModifiedDate":"2022-03-10"},{"lineNumber":37,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-04"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    public void execute_allFieldsSpecifiedUnfilteredList_success() {","lastModifiedDate":"2018-08-07"},{"lineNumber":40,"author":{"gitId":"aditi2313"},"content":"        Patron editedPerson \u003d new PersonBuilder().build();","lastModifiedDate":"2022-03-09"},{"lineNumber":41,"author":{"gitId":"-"},"content":"        EditPersonDescriptor descriptor \u003d new EditPersonDescriptorBuilder(editedPerson).build();","lastModifiedDate":"2017-06-05"},{"lineNumber":42,"author":{"gitId":"aditi2313"},"content":"        EditPatronCommand editCommand \u003d new EditPatronCommand(INDEX_FIRST_PERSON, descriptor);","lastModifiedDate":"2022-03-11"},{"lineNumber":43,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":44,"author":{"gitId":"aditi2313"},"content":"        String expectedMessage \u003d String.format(EditPatronCommand.MESSAGE_EDIT_PERSON_SUCCESS, editedPerson);","lastModifiedDate":"2022-03-11"},{"lineNumber":45,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":46,"author":{"gitId":"-"},"content":"        Model expectedModel \u003d new ModelManager(new AddressBook(model.getAddressBook()), new UserPrefs());","lastModifiedDate":"2017-06-05"},{"lineNumber":47,"author":{"gitId":"-"},"content":"        expectedModel.setPerson(model.getFilteredPersonList().get(0), editedPerson);","lastModifiedDate":"2018-08-17"},{"lineNumber":48,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":49,"author":{"gitId":"-"},"content":"        assertCommandSuccess(editCommand, model, expectedMessage, expectedModel);","lastModifiedDate":"2019-01-25"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-04"},{"lineNumber":51,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-04"},{"lineNumber":53,"author":{"gitId":"-"},"content":"    public void execute_someFieldsSpecifiedUnfilteredList_success() {","lastModifiedDate":"2018-08-07"},{"lineNumber":54,"author":{"gitId":"-"},"content":"        Index indexLastPerson \u003d Index.fromOneBased(model.getFilteredPersonList().size());","lastModifiedDate":"2017-05-18"},{"lineNumber":55,"author":{"gitId":"aditi2313"},"content":"        Patron lastPerson \u003d model.getFilteredPersonList().get(indexLastPerson.getZeroBased());","lastModifiedDate":"2022-03-09"},{"lineNumber":56,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-18"},{"lineNumber":57,"author":{"gitId":"-"},"content":"        PersonBuilder personInList \u003d new PersonBuilder(lastPerson);","lastModifiedDate":"2017-05-18"},{"lineNumber":58,"author":{"gitId":"aditi2313"},"content":"        Patron editedPerson \u003d personInList.withName(VALID_NAME_BOB).withPhone(VALID_PHONE_BOB)","lastModifiedDate":"2022-03-09"},{"lineNumber":59,"author":{"gitId":"-"},"content":"                .withTags(VALID_TAG_HUSBAND).build();","lastModifiedDate":"2017-05-18"},{"lineNumber":60,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-18"},{"lineNumber":61,"author":{"gitId":"-"},"content":"        EditPersonDescriptor descriptor \u003d new EditPersonDescriptorBuilder().withName(VALID_NAME_BOB)","lastModifiedDate":"2017-05-18"},{"lineNumber":62,"author":{"gitId":"-"},"content":"                .withPhone(VALID_PHONE_BOB).withTags(VALID_TAG_HUSBAND).build();","lastModifiedDate":"2017-05-18"},{"lineNumber":63,"author":{"gitId":"aditi2313"},"content":"        EditPatronCommand editCommand \u003d new EditPatronCommand(indexLastPerson, descriptor);","lastModifiedDate":"2022-03-11"},{"lineNumber":64,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-18"},{"lineNumber":65,"author":{"gitId":"aditi2313"},"content":"        String expectedMessage \u003d String.format(EditPatronCommand.MESSAGE_EDIT_PERSON_SUCCESS, editedPerson);","lastModifiedDate":"2022-03-11"},{"lineNumber":66,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-18"},{"lineNumber":67,"author":{"gitId":"-"},"content":"        Model expectedModel \u003d new ModelManager(new AddressBook(model.getAddressBook()), new UserPrefs());","lastModifiedDate":"2017-05-18"},{"lineNumber":68,"author":{"gitId":"-"},"content":"        expectedModel.setPerson(lastPerson, editedPerson);","lastModifiedDate":"2018-08-17"},{"lineNumber":69,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-18"},{"lineNumber":70,"author":{"gitId":"-"},"content":"        assertCommandSuccess(editCommand, model, expectedMessage, expectedModel);","lastModifiedDate":"2019-01-25"},{"lineNumber":71,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-18"},{"lineNumber":72,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-18"},{"lineNumber":73,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-18"},{"lineNumber":74,"author":{"gitId":"-"},"content":"    public void execute_noFieldSpecifiedUnfilteredList_success() {","lastModifiedDate":"2017-08-15"},{"lineNumber":75,"author":{"gitId":"aditi2313"},"content":"        EditPatronCommand editCommand \u003d new EditPatronCommand(INDEX_FIRST_PERSON, new EditPersonDescriptor());","lastModifiedDate":"2022-03-11"},{"lineNumber":76,"author":{"gitId":"aditi2313"},"content":"        Patron editedPerson \u003d model.getFilteredPersonList().get(INDEX_FIRST_PERSON.getZeroBased());","lastModifiedDate":"2022-03-09"},{"lineNumber":77,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-18"},{"lineNumber":78,"author":{"gitId":"aditi2313"},"content":"        String expectedMessage \u003d String.format(EditPatronCommand.MESSAGE_EDIT_PERSON_SUCCESS, editedPerson);","lastModifiedDate":"2022-03-11"},{"lineNumber":79,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-18"},{"lineNumber":80,"author":{"gitId":"-"},"content":"        Model expectedModel \u003d new ModelManager(new AddressBook(model.getAddressBook()), new UserPrefs());","lastModifiedDate":"2017-05-18"},{"lineNumber":81,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-18"},{"lineNumber":82,"author":{"gitId":"-"},"content":"        assertCommandSuccess(editCommand, model, expectedMessage, expectedModel);","lastModifiedDate":"2019-01-25"},{"lineNumber":83,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-18"},{"lineNumber":84,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-18"},{"lineNumber":85,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-18"},{"lineNumber":86,"author":{"gitId":"-"},"content":"    public void execute_filteredList_success() {","lastModifiedDate":"2018-08-07"},{"lineNumber":87,"author":{"gitId":"-"},"content":"        showPersonAtIndex(model, INDEX_FIRST_PERSON);","lastModifiedDate":"2018-01-31"},{"lineNumber":88,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-18"},{"lineNumber":89,"author":{"gitId":"aditi2313"},"content":"        Patron personInFilteredList \u003d model.getFilteredPersonList().get(INDEX_FIRST_PERSON.getZeroBased());","lastModifiedDate":"2022-03-09"},{"lineNumber":90,"author":{"gitId":"aditi2313"},"content":"        Patron editedPerson \u003d new PersonBuilder(personInFilteredList).withName(VALID_NAME_BOB).build();","lastModifiedDate":"2022-03-09"},{"lineNumber":91,"author":{"gitId":"aditi2313"},"content":"        EditPatronCommand editCommand \u003d new EditPatronCommand(INDEX_FIRST_PERSON,","lastModifiedDate":"2022-03-11"},{"lineNumber":92,"author":{"gitId":"-"},"content":"                new EditPersonDescriptorBuilder().withName(VALID_NAME_BOB).build());","lastModifiedDate":"2017-05-18"},{"lineNumber":93,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-18"},{"lineNumber":94,"author":{"gitId":"aditi2313"},"content":"        String expectedMessage \u003d String.format(EditPatronCommand.MESSAGE_EDIT_PERSON_SUCCESS, editedPerson);","lastModifiedDate":"2022-03-11"},{"lineNumber":95,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-18"},{"lineNumber":96,"author":{"gitId":"-"},"content":"        Model expectedModel \u003d new ModelManager(new AddressBook(model.getAddressBook()), new UserPrefs());","lastModifiedDate":"2017-05-18"},{"lineNumber":97,"author":{"gitId":"-"},"content":"        expectedModel.setPerson(model.getFilteredPersonList().get(0), editedPerson);","lastModifiedDate":"2018-08-17"},{"lineNumber":98,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-18"},{"lineNumber":99,"author":{"gitId":"-"},"content":"        assertCommandSuccess(editCommand, model, expectedMessage, expectedModel);","lastModifiedDate":"2019-01-25"},{"lineNumber":100,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-18"},{"lineNumber":101,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-18"},{"lineNumber":102,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-18"},{"lineNumber":103,"author":{"gitId":"-"},"content":"    public void execute_duplicatePersonUnfilteredList_failure() {","lastModifiedDate":"2017-08-15"},{"lineNumber":104,"author":{"gitId":"aditi2313"},"content":"        Patron firstPerson \u003d model.getFilteredPersonList().get(INDEX_FIRST_PERSON.getZeroBased());","lastModifiedDate":"2022-03-09"},{"lineNumber":105,"author":{"gitId":"-"},"content":"        EditPersonDescriptor descriptor \u003d new EditPersonDescriptorBuilder(firstPerson).build();","lastModifiedDate":"2017-06-05"},{"lineNumber":106,"author":{"gitId":"aditi2313"},"content":"        EditPatronCommand editCommand \u003d new EditPatronCommand(INDEX_SECOND_PERSON, descriptor);","lastModifiedDate":"2022-03-11"},{"lineNumber":107,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":108,"author":{"gitId":"aditi2313"},"content":"        assertCommandFailure(editCommand, model, EditPatronCommand.MESSAGE_DUPLICATE_PERSON);","lastModifiedDate":"2022-03-11"},{"lineNumber":109,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-04"},{"lineNumber":110,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":111,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-04"},{"lineNumber":112,"author":{"gitId":"-"},"content":"    public void execute_duplicatePersonFilteredList_failure() {","lastModifiedDate":"2017-08-15"},{"lineNumber":113,"author":{"gitId":"-"},"content":"        showPersonAtIndex(model, INDEX_FIRST_PERSON);","lastModifiedDate":"2018-01-31"},{"lineNumber":114,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-18"},{"lineNumber":115,"author":{"gitId":"-"},"content":"        // edit person in filtered list into a duplicate in address book","lastModifiedDate":"2017-05-18"},{"lineNumber":116,"author":{"gitId":"aditi2313"},"content":"        Patron personInList \u003d model.getAddressBook().getPersonList().get(INDEX_SECOND_PERSON.getZeroBased());","lastModifiedDate":"2022-03-09"},{"lineNumber":117,"author":{"gitId":"aditi2313"},"content":"        EditPatronCommand editCommand \u003d new EditPatronCommand(INDEX_FIRST_PERSON,","lastModifiedDate":"2022-03-11"},{"lineNumber":118,"author":{"gitId":"-"},"content":"                new EditPersonDescriptorBuilder(personInList).build());","lastModifiedDate":"2017-05-18"},{"lineNumber":119,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":120,"author":{"gitId":"aditi2313"},"content":"        assertCommandFailure(editCommand, model, EditPatronCommand.MESSAGE_DUPLICATE_PERSON);","lastModifiedDate":"2022-03-11"},{"lineNumber":121,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-18"},{"lineNumber":122,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-18"},{"lineNumber":123,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-18"},{"lineNumber":124,"author":{"gitId":"-"},"content":"    public void execute_invalidPersonIndexUnfilteredList_failure() {","lastModifiedDate":"2017-08-15"},{"lineNumber":125,"author":{"gitId":"-"},"content":"        Index outOfBoundIndex \u003d Index.fromOneBased(model.getFilteredPersonList().size() + 1);","lastModifiedDate":"2017-05-18"},{"lineNumber":126,"author":{"gitId":"-"},"content":"        EditPersonDescriptor descriptor \u003d new EditPersonDescriptorBuilder().withName(VALID_NAME_BOB).build();","lastModifiedDate":"2017-05-22"},{"lineNumber":127,"author":{"gitId":"aditi2313"},"content":"        EditPatronCommand editCommand \u003d new EditPatronCommand(outOfBoundIndex, descriptor);","lastModifiedDate":"2022-03-11"},{"lineNumber":128,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":129,"author":{"gitId":"-"},"content":"        assertCommandFailure(editCommand, model, Messages.MESSAGE_INVALID_PERSON_DISPLAYED_INDEX);","lastModifiedDate":"2019-01-25"},{"lineNumber":130,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-04"},{"lineNumber":131,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":132,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-05-18"},{"lineNumber":133,"author":{"gitId":"-"},"content":"     * Edit filtered list where index is larger than size of filtered list,","lastModifiedDate":"2017-05-18"},{"lineNumber":134,"author":{"gitId":"-"},"content":"     * but smaller than size of address book","lastModifiedDate":"2017-05-18"},{"lineNumber":135,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-05-18"},{"lineNumber":136,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-18"},{"lineNumber":137,"author":{"gitId":"-"},"content":"    public void execute_invalidPersonIndexFilteredList_failure() {","lastModifiedDate":"2017-08-15"},{"lineNumber":138,"author":{"gitId":"-"},"content":"        showPersonAtIndex(model, INDEX_FIRST_PERSON);","lastModifiedDate":"2018-01-31"},{"lineNumber":139,"author":{"gitId":"-"},"content":"        Index outOfBoundIndex \u003d INDEX_SECOND_PERSON;","lastModifiedDate":"2017-05-18"},{"lineNumber":140,"author":{"gitId":"-"},"content":"        // ensures that outOfBoundIndex is still in bounds of address book list","lastModifiedDate":"2017-05-18"},{"lineNumber":141,"author":{"gitId":"-"},"content":"        assertTrue(outOfBoundIndex.getZeroBased() \u003c model.getAddressBook().getPersonList().size());","lastModifiedDate":"2017-05-18"},{"lineNumber":142,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-18"},{"lineNumber":143,"author":{"gitId":"aditi2313"},"content":"        EditPatronCommand editCommand \u003d new EditPatronCommand(outOfBoundIndex,","lastModifiedDate":"2022-03-11"},{"lineNumber":144,"author":{"gitId":"-"},"content":"                new EditPersonDescriptorBuilder().withName(VALID_NAME_BOB).build());","lastModifiedDate":"2017-05-18"},{"lineNumber":145,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":146,"author":{"gitId":"-"},"content":"        assertCommandFailure(editCommand, model, Messages.MESSAGE_INVALID_PERSON_DISPLAYED_INDEX);","lastModifiedDate":"2019-01-25"},{"lineNumber":147,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-18"},{"lineNumber":148,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-18"},{"lineNumber":149,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-01-23"},{"lineNumber":150,"author":{"gitId":"-"},"content":"    public void equals() {","lastModifiedDate":"2018-08-08"},{"lineNumber":151,"author":{"gitId":"aditi2313"},"content":"        final EditPatronCommand standardCommand \u003d new EditPatronCommand(INDEX_FIRST_PERSON, DESC_AMY);","lastModifiedDate":"2022-03-11"},{"lineNumber":152,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-08"},{"lineNumber":153,"author":{"gitId":"-"},"content":"        // same values -\u003e returns true","lastModifiedDate":"2017-05-08"},{"lineNumber":154,"author":{"gitId":"-"},"content":"        EditPersonDescriptor copyDescriptor \u003d new EditPersonDescriptor(DESC_AMY);","lastModifiedDate":"2017-05-08"},{"lineNumber":155,"author":{"gitId":"aditi2313"},"content":"        EditPatronCommand commandWithSameValues \u003d new EditPatronCommand(INDEX_FIRST_PERSON, copyDescriptor);","lastModifiedDate":"2022-03-11"},{"lineNumber":156,"author":{"gitId":"-"},"content":"        assertTrue(standardCommand.equals(commandWithSameValues));","lastModifiedDate":"2017-05-08"},{"lineNumber":157,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-08"},{"lineNumber":158,"author":{"gitId":"-"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2017-05-08"},{"lineNumber":159,"author":{"gitId":"-"},"content":"        assertTrue(standardCommand.equals(standardCommand));","lastModifiedDate":"2017-05-08"},{"lineNumber":160,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-08"},{"lineNumber":161,"author":{"gitId":"-"},"content":"        // null -\u003e returns false","lastModifiedDate":"2017-05-08"},{"lineNumber":162,"author":{"gitId":"-"},"content":"        assertFalse(standardCommand.equals(null));","lastModifiedDate":"2017-05-08"},{"lineNumber":163,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-08"},{"lineNumber":164,"author":{"gitId":"-"},"content":"        // different types -\u003e returns false","lastModifiedDate":"2017-05-08"},{"lineNumber":165,"author":{"gitId":"-"},"content":"        assertFalse(standardCommand.equals(new ClearCommand()));","lastModifiedDate":"2017-05-08"},{"lineNumber":166,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-08"},{"lineNumber":167,"author":{"gitId":"-"},"content":"        // different index -\u003e returns false","lastModifiedDate":"2017-05-08"},{"lineNumber":168,"author":{"gitId":"aditi2313"},"content":"        assertFalse(standardCommand.equals(new EditPatronCommand(INDEX_SECOND_PERSON, DESC_AMY)));","lastModifiedDate":"2022-03-11"},{"lineNumber":169,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-08"},{"lineNumber":170,"author":{"gitId":"-"},"content":"        // different descriptor -\u003e returns false","lastModifiedDate":"2017-05-08"},{"lineNumber":171,"author":{"gitId":"aditi2313"},"content":"        assertFalse(standardCommand.equals(new EditPatronCommand(INDEX_FIRST_PERSON, DESC_BOB)));","lastModifiedDate":"2022-03-11"},{"lineNumber":172,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-08"},{"lineNumber":173,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":174,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-05-08"}],"authorContributionMap":{"-":143,"aditi2313":29,"bingsen0806":2}},{"path":"src/test/java/seedu/address/logic/commands/EditPersonDescriptorTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2017-05-05"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.DESC_AMY;","lastModifiedDate":"2017-07-05"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.DESC_BOB;","lastModifiedDate":"2017-07-05"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_EMAIL_BOB;","lastModifiedDate":"2017-07-05"},{"lineNumber":8,"author":{"gitId":"aditi2313"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_ID_BOB;","lastModifiedDate":"2022-03-11"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_NAME_BOB;","lastModifiedDate":"2017-07-05"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_PHONE_BOB;","lastModifiedDate":"2017-07-05"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_TAG_HUSBAND;","lastModifiedDate":"2017-07-05"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":15,"author":{"gitId":"aditi2313"},"content":"import seedu.address.logic.commands.patron.EditPatronCommand.EditPersonDescriptor;","lastModifiedDate":"2022-03-11"},{"lineNumber":16,"author":{"gitId":"-"},"content":"import seedu.address.testutil.EditPersonDescriptorBuilder;","lastModifiedDate":"2017-05-05"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":18,"author":{"gitId":"-"},"content":"public class EditPersonDescriptorTest {","lastModifiedDate":"2017-05-05"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-05"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    public void equals() {","lastModifiedDate":"2017-08-15"},{"lineNumber":22,"author":{"gitId":"-"},"content":"        // same values -\u003e returns true","lastModifiedDate":"2017-05-05"},{"lineNumber":23,"author":{"gitId":"-"},"content":"        EditPersonDescriptor descriptorWithSameValues \u003d new EditPersonDescriptor(DESC_AMY);","lastModifiedDate":"2017-05-05"},{"lineNumber":24,"author":{"gitId":"-"},"content":"        assertTrue(DESC_AMY.equals(descriptorWithSameValues));","lastModifiedDate":"2017-05-05"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":26,"author":{"gitId":"-"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2017-05-05"},{"lineNumber":27,"author":{"gitId":"-"},"content":"        assertTrue(DESC_AMY.equals(DESC_AMY));","lastModifiedDate":"2017-05-05"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":29,"author":{"gitId":"-"},"content":"        // null -\u003e returns false","lastModifiedDate":"2017-05-05"},{"lineNumber":30,"author":{"gitId":"-"},"content":"        assertFalse(DESC_AMY.equals(null));","lastModifiedDate":"2017-05-05"},{"lineNumber":31,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":32,"author":{"gitId":"-"},"content":"        // different types -\u003e returns false","lastModifiedDate":"2017-05-05"},{"lineNumber":33,"author":{"gitId":"-"},"content":"        assertFalse(DESC_AMY.equals(5));","lastModifiedDate":"2017-05-05"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":35,"author":{"gitId":"-"},"content":"        // different values -\u003e returns false","lastModifiedDate":"2017-05-05"},{"lineNumber":36,"author":{"gitId":"-"},"content":"        assertFalse(DESC_AMY.equals(DESC_BOB));","lastModifiedDate":"2017-05-05"},{"lineNumber":37,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        // different name -\u003e returns false","lastModifiedDate":"2017-05-05"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        EditPersonDescriptor editedAmy \u003d new EditPersonDescriptorBuilder(DESC_AMY).withName(VALID_NAME_BOB).build();","lastModifiedDate":"2017-05-05"},{"lineNumber":40,"author":{"gitId":"-"},"content":"        assertFalse(DESC_AMY.equals(editedAmy));","lastModifiedDate":"2017-05-05"},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":42,"author":{"gitId":"-"},"content":"        // different phone -\u003e returns false","lastModifiedDate":"2017-05-05"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        editedAmy \u003d new EditPersonDescriptorBuilder(DESC_AMY).withPhone(VALID_PHONE_BOB).build();","lastModifiedDate":"2017-05-05"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        assertFalse(DESC_AMY.equals(editedAmy));","lastModifiedDate":"2017-05-05"},{"lineNumber":45,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":46,"author":{"gitId":"-"},"content":"        // different email -\u003e returns false","lastModifiedDate":"2017-05-05"},{"lineNumber":47,"author":{"gitId":"-"},"content":"        editedAmy \u003d new EditPersonDescriptorBuilder(DESC_AMY).withEmail(VALID_EMAIL_BOB).build();","lastModifiedDate":"2017-05-05"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        assertFalse(DESC_AMY.equals(editedAmy));","lastModifiedDate":"2017-05-05"},{"lineNumber":49,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":50,"author":{"gitId":"-"},"content":"        // different address -\u003e returns false","lastModifiedDate":"2017-05-05"},{"lineNumber":51,"author":{"gitId":"aditi2313"},"content":"        editedAmy \u003d new EditPersonDescriptorBuilder(DESC_AMY).withId(VALID_ID_BOB).build();","lastModifiedDate":"2022-03-10"},{"lineNumber":52,"author":{"gitId":"-"},"content":"        assertFalse(DESC_AMY.equals(editedAmy));","lastModifiedDate":"2017-05-05"},{"lineNumber":53,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":54,"author":{"gitId":"-"},"content":"        // different tags -\u003e returns false","lastModifiedDate":"2017-05-05"},{"lineNumber":55,"author":{"gitId":"-"},"content":"        editedAmy \u003d new EditPersonDescriptorBuilder(DESC_AMY).withTags(VALID_TAG_HUSBAND).build();","lastModifiedDate":"2017-05-05"},{"lineNumber":56,"author":{"gitId":"-"},"content":"        assertFalse(DESC_AMY.equals(editedAmy));","lastModifiedDate":"2017-05-05"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-05"},{"lineNumber":58,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-05-05"}],"authorContributionMap":{"-":55,"aditi2313":3}},{"path":"src/test/java/seedu/address/logic/commands/FindCommandTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2017-06-12"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2019-03-15"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import static seedu.address.commons.core.Messages.MESSAGE_PERSONS_LISTED_OVERVIEW;","lastModifiedDate":"2017-06-12"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.assertCommandSuccess;","lastModifiedDate":"2018-08-08"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.TypicalPersons.CARL;","lastModifiedDate":"2017-07-19"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.TypicalPersons.ELLE;","lastModifiedDate":"2017-07-19"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.TypicalPersons.FIONA;","lastModifiedDate":"2017-07-19"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import java.util.Arrays;","lastModifiedDate":"2017-06-12"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import java.util.Collections;","lastModifiedDate":"2017-06-12"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":17,"author":{"gitId":"aditi2313"},"content":"import seedu.address.logic.commands.patron.FindPatronCommand;","lastModifiedDate":"2022-03-11"},{"lineNumber":18,"author":{"gitId":"-"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2017-06-12"},{"lineNumber":19,"author":{"gitId":"-"},"content":"import seedu.address.model.ModelManager;","lastModifiedDate":"2017-06-12"},{"lineNumber":20,"author":{"gitId":"-"},"content":"import seedu.address.model.UserPrefs;","lastModifiedDate":"2017-06-12"},{"lineNumber":21,"author":{"gitId":"-"},"content":"import seedu.address.model.person.NameContainsKeywordsPredicate;","lastModifiedDate":"2017-06-12"},{"lineNumber":22,"author":{"gitId":"bingsen0806"},"content":"import seedu.address.testutil.TypicalAddressBook;","lastModifiedDate":"2022-03-10"},{"lineNumber":23,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":24,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-06-12"},{"lineNumber":25,"author":{"gitId":"-"},"content":" * Contains integration tests (interaction with the Model) for {@code FindCommand}.","lastModifiedDate":"2017-06-12"},{"lineNumber":26,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-06-12"},{"lineNumber":27,"author":{"gitId":"-"},"content":"public class FindCommandTest {","lastModifiedDate":"2017-06-12"},{"lineNumber":28,"author":{"gitId":"bingsen0806"},"content":"    private Model model \u003d new ModelManager(TypicalAddressBook.getTypicalAddressBook(), new UserPrefs());","lastModifiedDate":"2022-03-10"},{"lineNumber":29,"author":{"gitId":"bingsen0806"},"content":"    private Model expectedModel \u003d new ModelManager(TypicalAddressBook.getTypicalAddressBook(), new UserPrefs());","lastModifiedDate":"2022-03-10"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-27"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    public void equals() {","lastModifiedDate":"2017-06-27"},{"lineNumber":33,"author":{"gitId":"-"},"content":"        NameContainsKeywordsPredicate firstPredicate \u003d","lastModifiedDate":"2017-06-12"},{"lineNumber":34,"author":{"gitId":"-"},"content":"                new NameContainsKeywordsPredicate(Collections.singletonList(\"first\"));","lastModifiedDate":"2017-06-12"},{"lineNumber":35,"author":{"gitId":"-"},"content":"        NameContainsKeywordsPredicate secondPredicate \u003d","lastModifiedDate":"2017-06-12"},{"lineNumber":36,"author":{"gitId":"-"},"content":"                new NameContainsKeywordsPredicate(Collections.singletonList(\"second\"));","lastModifiedDate":"2017-06-12"},{"lineNumber":37,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":38,"author":{"gitId":"aditi2313"},"content":"        FindPatronCommand findFirstCommand \u003d new FindPatronCommand(firstPredicate);","lastModifiedDate":"2022-03-11"},{"lineNumber":39,"author":{"gitId":"aditi2313"},"content":"        FindPatronCommand findSecondCommand \u003d new FindPatronCommand(secondPredicate);","lastModifiedDate":"2022-03-11"},{"lineNumber":40,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":41,"author":{"gitId":"-"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2017-06-27"},{"lineNumber":42,"author":{"gitId":"-"},"content":"        assertTrue(findFirstCommand.equals(findFirstCommand));","lastModifiedDate":"2017-06-27"},{"lineNumber":43,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        // same values -\u003e returns true","lastModifiedDate":"2017-06-27"},{"lineNumber":45,"author":{"gitId":"aditi2313"},"content":"        FindPatronCommand findFirstCommandCopy \u003d new FindPatronCommand(firstPredicate);","lastModifiedDate":"2022-03-11"},{"lineNumber":46,"author":{"gitId":"-"},"content":"        assertTrue(findFirstCommand.equals(findFirstCommandCopy));","lastModifiedDate":"2017-06-27"},{"lineNumber":47,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        // different types -\u003e returns false","lastModifiedDate":"2017-06-27"},{"lineNumber":49,"author":{"gitId":"-"},"content":"        assertFalse(findFirstCommand.equals(1));","lastModifiedDate":"2017-06-27"},{"lineNumber":50,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":51,"author":{"gitId":"-"},"content":"        // null -\u003e returns false","lastModifiedDate":"2017-06-27"},{"lineNumber":52,"author":{"gitId":"-"},"content":"        assertFalse(findFirstCommand.equals(null));","lastModifiedDate":"2017-06-27"},{"lineNumber":53,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":54,"author":{"gitId":"-"},"content":"        // different person -\u003e returns false","lastModifiedDate":"2017-06-27"},{"lineNumber":55,"author":{"gitId":"-"},"content":"        assertFalse(findFirstCommand.equals(findSecondCommand));","lastModifiedDate":"2017-06-27"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-27"},{"lineNumber":57,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":58,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-12"},{"lineNumber":59,"author":{"gitId":"-"},"content":"    public void execute_zeroKeywords_noPersonFound() {","lastModifiedDate":"2017-08-15"},{"lineNumber":60,"author":{"gitId":"-"},"content":"        String expectedMessage \u003d String.format(MESSAGE_PERSONS_LISTED_OVERVIEW, 0);","lastModifiedDate":"2017-06-12"},{"lineNumber":61,"author":{"gitId":"-"},"content":"        NameContainsKeywordsPredicate predicate \u003d preparePredicate(\" \");","lastModifiedDate":"2018-08-08"},{"lineNumber":62,"author":{"gitId":"aditi2313"},"content":"        FindPatronCommand command \u003d new FindPatronCommand(predicate);","lastModifiedDate":"2022-03-11"},{"lineNumber":63,"author":{"gitId":"-"},"content":"        expectedModel.updateFilteredPersonList(predicate);","lastModifiedDate":"2018-08-08"},{"lineNumber":64,"author":{"gitId":"-"},"content":"        assertCommandSuccess(command, model, expectedMessage, expectedModel);","lastModifiedDate":"2019-01-25"},{"lineNumber":65,"author":{"gitId":"-"},"content":"        assertEquals(Collections.emptyList(), model.getFilteredPersonList());","lastModifiedDate":"2018-08-08"},{"lineNumber":66,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-12"},{"lineNumber":67,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":68,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-12"},{"lineNumber":69,"author":{"gitId":"-"},"content":"    public void execute_multipleKeywords_multiplePersonsFound() {","lastModifiedDate":"2017-08-15"},{"lineNumber":70,"author":{"gitId":"-"},"content":"        String expectedMessage \u003d String.format(MESSAGE_PERSONS_LISTED_OVERVIEW, 3);","lastModifiedDate":"2017-06-12"},{"lineNumber":71,"author":{"gitId":"-"},"content":"        NameContainsKeywordsPredicate predicate \u003d preparePredicate(\"Kurz Elle Kunz\");","lastModifiedDate":"2018-08-08"},{"lineNumber":72,"author":{"gitId":"aditi2313"},"content":"        FindPatronCommand command \u003d new FindPatronCommand(predicate);","lastModifiedDate":"2022-03-11"},{"lineNumber":73,"author":{"gitId":"-"},"content":"        expectedModel.updateFilteredPersonList(predicate);","lastModifiedDate":"2018-08-08"},{"lineNumber":74,"author":{"gitId":"-"},"content":"        assertCommandSuccess(command, model, expectedMessage, expectedModel);","lastModifiedDate":"2019-01-25"},{"lineNumber":75,"author":{"gitId":"-"},"content":"        assertEquals(Arrays.asList(CARL, ELLE, FIONA), model.getFilteredPersonList());","lastModifiedDate":"2018-08-08"},{"lineNumber":76,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-12"},{"lineNumber":77,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":78,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-06-12"},{"lineNumber":79,"author":{"gitId":"-"},"content":"     * Parses {@code userInput} into a {@code NameContainsKeywordsPredicate}.","lastModifiedDate":"2018-08-08"},{"lineNumber":80,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-06-12"},{"lineNumber":81,"author":{"gitId":"-"},"content":"    private NameContainsKeywordsPredicate preparePredicate(String userInput) {","lastModifiedDate":"2018-08-08"},{"lineNumber":82,"author":{"gitId":"-"},"content":"        return new NameContainsKeywordsPredicate(Arrays.asList(userInput.split(\"\\\\s+\")));","lastModifiedDate":"2018-08-08"},{"lineNumber":83,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-12"},{"lineNumber":84,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-06-12"}],"authorContributionMap":{"-":75,"aditi2313":6,"bingsen0806":3}},{"path":"src/test/java/seedu/address/logic/commands/ListCommandTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2017-06-12"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.assertCommandSuccess;","lastModifiedDate":"2017-07-05"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.showPersonAtIndex;","lastModifiedDate":"2018-01-31"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.TypicalIndexes.INDEX_FIRST_PERSON;","lastModifiedDate":"2018-01-31"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.BeforeEach;","lastModifiedDate":"2019-04-27"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":10,"author":{"gitId":"aditi2313"},"content":"import seedu.address.logic.commands.patron.ListPatronCommand;","lastModifiedDate":"2022-03-11"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2017-06-12"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import seedu.address.model.ModelManager;","lastModifiedDate":"2017-06-12"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import seedu.address.model.UserPrefs;","lastModifiedDate":"2017-06-12"},{"lineNumber":14,"author":{"gitId":"bingsen0806"},"content":"import seedu.address.testutil.TypicalAddressBook;","lastModifiedDate":"2022-03-10"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":16,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-06-12"},{"lineNumber":17,"author":{"gitId":"-"},"content":" * Contains integration tests (interaction with the Model) and unit tests for ListCommand.","lastModifiedDate":"2017-06-12"},{"lineNumber":18,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-06-12"},{"lineNumber":19,"author":{"gitId":"-"},"content":"public class ListCommandTest {","lastModifiedDate":"2017-06-12"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    private Model model;","lastModifiedDate":"2017-06-12"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    private Model expectedModel;","lastModifiedDate":"2017-06-12"},{"lineNumber":23,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    @BeforeEach","lastModifiedDate":"2019-04-27"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    public void setUp() {","lastModifiedDate":"2017-06-12"},{"lineNumber":26,"author":{"gitId":"bingsen0806"},"content":"        model \u003d new ModelManager(TypicalAddressBook.getTypicalAddressBook(), new UserPrefs());","lastModifiedDate":"2022-03-10"},{"lineNumber":27,"author":{"gitId":"-"},"content":"        expectedModel \u003d new ModelManager(model.getAddressBook(), new UserPrefs());","lastModifiedDate":"2017-06-12"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-12"},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-12"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    public void execute_listIsNotFiltered_showsSameList() {","lastModifiedDate":"2017-08-15"},{"lineNumber":32,"author":{"gitId":"aditi2313"},"content":"        assertCommandSuccess(new ListPatronCommand(), model, ListPatronCommand.MESSAGE_SUCCESS, expectedModel);","lastModifiedDate":"2022-03-11"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-12"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-12"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    public void execute_listIsFiltered_showsEverything() {","lastModifiedDate":"2017-08-15"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        showPersonAtIndex(model, INDEX_FIRST_PERSON);","lastModifiedDate":"2018-01-31"},{"lineNumber":38,"author":{"gitId":"aditi2313"},"content":"        assertCommandSuccess(new ListPatronCommand(), model, ListPatronCommand.MESSAGE_SUCCESS, expectedModel);","lastModifiedDate":"2022-03-11"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-12"},{"lineNumber":40,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-06-12"}],"authorContributionMap":{"-":35,"aditi2313":3,"bingsen0806":2}},{"path":"src/test/java/seedu/address/logic/commands/book/AddBookCommandIntegrationTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"bingsen0806"},"content":"package seedu.address.logic.commands.book;","lastModifiedDate":"2022-03-11"},{"lineNumber":2,"author":{"gitId":"bingsen0806"},"content":"","lastModifiedDate":"2022-03-11"},{"lineNumber":3,"author":{"gitId":"bingsen0806"},"content":"import static seedu.address.logic.commands.CommandTestUtil.assertCommandSuccess;","lastModifiedDate":"2022-03-11"},{"lineNumber":4,"author":{"gitId":"bingsen0806"},"content":"","lastModifiedDate":"2022-03-11"},{"lineNumber":5,"author":{"gitId":"bingsen0806"},"content":"import org.junit.jupiter.api.BeforeEach;","lastModifiedDate":"2022-03-11"},{"lineNumber":6,"author":{"gitId":"bingsen0806"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2022-03-11"},{"lineNumber":7,"author":{"gitId":"bingsen0806"},"content":"","lastModifiedDate":"2022-03-11"},{"lineNumber":8,"author":{"gitId":"bingsen0806"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2022-03-11"},{"lineNumber":9,"author":{"gitId":"bingsen0806"},"content":"import seedu.address.model.ModelManager;","lastModifiedDate":"2022-03-11"},{"lineNumber":10,"author":{"gitId":"bingsen0806"},"content":"import seedu.address.model.UserPrefs;","lastModifiedDate":"2022-03-11"},{"lineNumber":11,"author":{"gitId":"bingsen0806"},"content":"import seedu.address.model.book.Book;","lastModifiedDate":"2022-03-11"},{"lineNumber":12,"author":{"gitId":"bingsen0806"},"content":"import seedu.address.testutil.BookBuilder;","lastModifiedDate":"2022-03-11"},{"lineNumber":13,"author":{"gitId":"bingsen0806"},"content":"import seedu.address.testutil.TypicalAddressBook;","lastModifiedDate":"2022-03-11"},{"lineNumber":14,"author":{"gitId":"bingsen0806"},"content":"","lastModifiedDate":"2022-03-11"},{"lineNumber":15,"author":{"gitId":"bingsen0806"},"content":"/**","lastModifiedDate":"2022-03-11"},{"lineNumber":16,"author":{"gitId":"bingsen0806"},"content":" * Contains integration tests (interaction with the Model) for {@code AddBookCommand}.","lastModifiedDate":"2022-03-11"},{"lineNumber":17,"author":{"gitId":"bingsen0806"},"content":" */","lastModifiedDate":"2022-03-11"},{"lineNumber":18,"author":{"gitId":"bingsen0806"},"content":"public class AddBookCommandIntegrationTest {","lastModifiedDate":"2022-03-11"},{"lineNumber":19,"author":{"gitId":"bingsen0806"},"content":"","lastModifiedDate":"2022-03-11"},{"lineNumber":20,"author":{"gitId":"bingsen0806"},"content":"    private Model model;","lastModifiedDate":"2022-03-11"},{"lineNumber":21,"author":{"gitId":"bingsen0806"},"content":"","lastModifiedDate":"2022-03-11"},{"lineNumber":22,"author":{"gitId":"bingsen0806"},"content":"    @BeforeEach","lastModifiedDate":"2022-03-11"},{"lineNumber":23,"author":{"gitId":"bingsen0806"},"content":"    public void setUp() {","lastModifiedDate":"2022-03-11"},{"lineNumber":24,"author":{"gitId":"bingsen0806"},"content":"        model \u003d new ModelManager(TypicalAddressBook.getTypicalAddressBook(), new UserPrefs());","lastModifiedDate":"2022-03-11"},{"lineNumber":25,"author":{"gitId":"bingsen0806"},"content":"    }","lastModifiedDate":"2022-03-11"},{"lineNumber":26,"author":{"gitId":"bingsen0806"},"content":"","lastModifiedDate":"2022-03-11"},{"lineNumber":27,"author":{"gitId":"bingsen0806"},"content":"    @Test","lastModifiedDate":"2022-03-11"},{"lineNumber":28,"author":{"gitId":"bingsen0806"},"content":"    public void execute_newBook_success() {","lastModifiedDate":"2022-03-11"},{"lineNumber":29,"author":{"gitId":"bingsen0806"},"content":"        Book validBook \u003d new BookBuilder().build();","lastModifiedDate":"2022-03-11"},{"lineNumber":30,"author":{"gitId":"bingsen0806"},"content":"","lastModifiedDate":"2022-03-11"},{"lineNumber":31,"author":{"gitId":"bingsen0806"},"content":"        Model expectedModel \u003d new ModelManager(model.getAddressBook(), new UserPrefs());","lastModifiedDate":"2022-03-11"},{"lineNumber":32,"author":{"gitId":"bingsen0806"},"content":"        expectedModel.addBook(validBook);","lastModifiedDate":"2022-03-11"},{"lineNumber":33,"author":{"gitId":"bingsen0806"},"content":"","lastModifiedDate":"2022-03-11"},{"lineNumber":34,"author":{"gitId":"bingsen0806"},"content":"        assertCommandSuccess(new AddBookCommand(validBook), model,","lastModifiedDate":"2022-03-11"},{"lineNumber":35,"author":{"gitId":"bingsen0806"},"content":"                String.format(AddBookCommand.MESSAGE_SUCCESS, validBook), expectedModel);","lastModifiedDate":"2022-03-11"},{"lineNumber":36,"author":{"gitId":"bingsen0806"},"content":"    }","lastModifiedDate":"2022-03-11"},{"lineNumber":37,"author":{"gitId":"bingsen0806"},"content":"","lastModifiedDate":"2022-03-11"},{"lineNumber":38,"author":{"gitId":"bingsen0806"},"content":"}","lastModifiedDate":"2022-03-11"}],"authorContributionMap":{"bingsen0806":38}},{"path":"src/test/java/seedu/address/logic/commands/book/AddBookCommandTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"bingsen0806"},"content":"package seedu.address.logic.commands.book;","lastModifiedDate":"2022-03-11"},{"lineNumber":2,"author":{"gitId":"bingsen0806"},"content":"","lastModifiedDate":"2022-03-11"},{"lineNumber":3,"author":{"gitId":"bingsen0806"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2022-03-11"},{"lineNumber":4,"author":{"gitId":"bingsen0806"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2022-03-11"},{"lineNumber":5,"author":{"gitId":"bingsen0806"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2022-03-11"},{"lineNumber":6,"author":{"gitId":"bingsen0806"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2022-03-11"},{"lineNumber":7,"author":{"gitId":"bingsen0806"},"content":"import static seedu.address.testutil.Assert.assertThrows;","lastModifiedDate":"2022-03-11"},{"lineNumber":8,"author":{"gitId":"bingsen0806"},"content":"","lastModifiedDate":"2022-03-11"},{"lineNumber":9,"author":{"gitId":"bingsen0806"},"content":"import java.nio.file.Path;","lastModifiedDate":"2022-03-11"},{"lineNumber":10,"author":{"gitId":"bingsen0806"},"content":"import java.util.ArrayList;","lastModifiedDate":"2022-03-11"},{"lineNumber":11,"author":{"gitId":"bingsen0806"},"content":"import java.util.Arrays;","lastModifiedDate":"2022-03-11"},{"lineNumber":12,"author":{"gitId":"bingsen0806"},"content":"import java.util.function.Predicate;","lastModifiedDate":"2022-03-11"},{"lineNumber":13,"author":{"gitId":"bingsen0806"},"content":"","lastModifiedDate":"2022-03-11"},{"lineNumber":14,"author":{"gitId":"bingsen0806"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2022-03-11"},{"lineNumber":15,"author":{"gitId":"bingsen0806"},"content":"","lastModifiedDate":"2022-03-11"},{"lineNumber":16,"author":{"gitId":"bingsen0806"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2022-03-11"},{"lineNumber":17,"author":{"gitId":"bingsen0806"},"content":"import seedu.address.commons.core.GuiSettings;","lastModifiedDate":"2022-03-11"},{"lineNumber":18,"author":{"gitId":"bingsen0806"},"content":"import seedu.address.logic.commands.CommandResult;","lastModifiedDate":"2022-03-11"},{"lineNumber":19,"author":{"gitId":"bingsen0806"},"content":"import seedu.address.model.AddressBook;","lastModifiedDate":"2022-03-11"},{"lineNumber":20,"author":{"gitId":"bingsen0806"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2022-03-11"},{"lineNumber":21,"author":{"gitId":"bingsen0806"},"content":"import seedu.address.model.ReadOnlyAddressBook;","lastModifiedDate":"2022-03-11"},{"lineNumber":22,"author":{"gitId":"bingsen0806"},"content":"import seedu.address.model.ReadOnlyUserPrefs;","lastModifiedDate":"2022-03-11"},{"lineNumber":23,"author":{"gitId":"bingsen0806"},"content":"import seedu.address.model.book.Book;","lastModifiedDate":"2022-03-11"},{"lineNumber":24,"author":{"gitId":"bingsen0806"},"content":"import seedu.address.model.person.Patron;","lastModifiedDate":"2022-03-11"},{"lineNumber":25,"author":{"gitId":"bingsen0806"},"content":"import seedu.address.testutil.BookBuilder;","lastModifiedDate":"2022-03-11"},{"lineNumber":26,"author":{"gitId":"bingsen0806"},"content":"","lastModifiedDate":"2022-03-11"},{"lineNumber":27,"author":{"gitId":"bingsen0806"},"content":"public class AddBookCommandTest {","lastModifiedDate":"2022-03-11"},{"lineNumber":28,"author":{"gitId":"bingsen0806"},"content":"","lastModifiedDate":"2022-03-11"},{"lineNumber":29,"author":{"gitId":"bingsen0806"},"content":"    @Test","lastModifiedDate":"2022-03-11"},{"lineNumber":30,"author":{"gitId":"bingsen0806"},"content":"    public void constructor_nullBook_throwsNullPointerException() {","lastModifiedDate":"2022-03-11"},{"lineNumber":31,"author":{"gitId":"bingsen0806"},"content":"        assertThrows(NullPointerException.class, () -\u003e new AddBookCommand(null));","lastModifiedDate":"2022-03-11"},{"lineNumber":32,"author":{"gitId":"bingsen0806"},"content":"    }","lastModifiedDate":"2022-03-11"},{"lineNumber":33,"author":{"gitId":"bingsen0806"},"content":"","lastModifiedDate":"2022-03-11"},{"lineNumber":34,"author":{"gitId":"bingsen0806"},"content":"    @Test","lastModifiedDate":"2022-03-11"},{"lineNumber":35,"author":{"gitId":"bingsen0806"},"content":"    public void execute_bookAcceptedByModel_addSuccessful() throws Exception {","lastModifiedDate":"2022-03-11"},{"lineNumber":36,"author":{"gitId":"bingsen0806"},"content":"        ModelStubAcceptingBookAdded modelStub \u003d new ModelStubAcceptingBookAdded();","lastModifiedDate":"2022-03-11"},{"lineNumber":37,"author":{"gitId":"bingsen0806"},"content":"        Book validBook \u003d new BookBuilder().build();","lastModifiedDate":"2022-03-11"},{"lineNumber":38,"author":{"gitId":"bingsen0806"},"content":"","lastModifiedDate":"2022-03-11"},{"lineNumber":39,"author":{"gitId":"bingsen0806"},"content":"        CommandResult commandResult \u003d new AddBookCommand(validBook).execute(modelStub);","lastModifiedDate":"2022-03-11"},{"lineNumber":40,"author":{"gitId":"bingsen0806"},"content":"","lastModifiedDate":"2022-03-11"},{"lineNumber":41,"author":{"gitId":"bingsen0806"},"content":"        assertEquals(String.format(AddBookCommand.MESSAGE_SUCCESS, validBook), commandResult.getFeedbackToUser());","lastModifiedDate":"2022-03-11"},{"lineNumber":42,"author":{"gitId":"bingsen0806"},"content":"        assertEquals(Arrays.asList(validBook), modelStub.booksAdded);","lastModifiedDate":"2022-03-11"},{"lineNumber":43,"author":{"gitId":"bingsen0806"},"content":"    }","lastModifiedDate":"2022-03-11"},{"lineNumber":44,"author":{"gitId":"bingsen0806"},"content":"","lastModifiedDate":"2022-03-11"},{"lineNumber":45,"author":{"gitId":"bingsen0806"},"content":"    @Test","lastModifiedDate":"2022-03-11"},{"lineNumber":46,"author":{"gitId":"bingsen0806"},"content":"    public void equals() {","lastModifiedDate":"2022-03-11"},{"lineNumber":47,"author":{"gitId":"bingsen0806"},"content":"        Book harryPotter \u003d new BookBuilder().withName(\"Harry Potter\").build();","lastModifiedDate":"2022-03-11"},{"lineNumber":48,"author":{"gitId":"bingsen0806"},"content":"        Book hungerGames \u003d new BookBuilder().withName(\"Hunger Games\").build();","lastModifiedDate":"2022-03-11"},{"lineNumber":49,"author":{"gitId":"bingsen0806"},"content":"        AddBookCommand addHarryPotterCommand \u003d new AddBookCommand(harryPotter);","lastModifiedDate":"2022-03-11"},{"lineNumber":50,"author":{"gitId":"bingsen0806"},"content":"        AddBookCommand addHungerGamesCommand \u003d new AddBookCommand(hungerGames);","lastModifiedDate":"2022-03-11"},{"lineNumber":51,"author":{"gitId":"bingsen0806"},"content":"","lastModifiedDate":"2022-03-11"},{"lineNumber":52,"author":{"gitId":"bingsen0806"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2022-03-11"},{"lineNumber":53,"author":{"gitId":"bingsen0806"},"content":"        assertTrue(addHarryPotterCommand.equals(addHarryPotterCommand));","lastModifiedDate":"2022-03-11"},{"lineNumber":54,"author":{"gitId":"bingsen0806"},"content":"","lastModifiedDate":"2022-03-11"},{"lineNumber":55,"author":{"gitId":"bingsen0806"},"content":"        // same values -\u003e returns true","lastModifiedDate":"2022-03-11"},{"lineNumber":56,"author":{"gitId":"bingsen0806"},"content":"        AddBookCommand addHarryPotterCommandCopy \u003d new AddBookCommand(harryPotter);","lastModifiedDate":"2022-03-11"},{"lineNumber":57,"author":{"gitId":"bingsen0806"},"content":"        assertTrue(addHarryPotterCommand.equals(addHarryPotterCommandCopy));","lastModifiedDate":"2022-03-11"},{"lineNumber":58,"author":{"gitId":"bingsen0806"},"content":"","lastModifiedDate":"2022-03-11"},{"lineNumber":59,"author":{"gitId":"bingsen0806"},"content":"        // different types -\u003e returns false","lastModifiedDate":"2022-03-11"},{"lineNumber":60,"author":{"gitId":"bingsen0806"},"content":"        assertFalse(addHarryPotterCommand.equals(1));","lastModifiedDate":"2022-03-11"},{"lineNumber":61,"author":{"gitId":"bingsen0806"},"content":"","lastModifiedDate":"2022-03-11"},{"lineNumber":62,"author":{"gitId":"bingsen0806"},"content":"        // null -\u003e returns false","lastModifiedDate":"2022-03-11"},{"lineNumber":63,"author":{"gitId":"bingsen0806"},"content":"        assertFalse(addHarryPotterCommand.equals(null));","lastModifiedDate":"2022-03-11"},{"lineNumber":64,"author":{"gitId":"bingsen0806"},"content":"","lastModifiedDate":"2022-03-11"},{"lineNumber":65,"author":{"gitId":"bingsen0806"},"content":"        // different book -\u003e returns false","lastModifiedDate":"2022-03-11"},{"lineNumber":66,"author":{"gitId":"bingsen0806"},"content":"        assertFalse(addHarryPotterCommand.equals(addHungerGamesCommand));","lastModifiedDate":"2022-03-11"},{"lineNumber":67,"author":{"gitId":"bingsen0806"},"content":"","lastModifiedDate":"2022-03-11"},{"lineNumber":68,"author":{"gitId":"bingsen0806"},"content":"        // different timeAdded for book -\u003e returns true","lastModifiedDate":"2022-03-11"},{"lineNumber":69,"author":{"gitId":"bingsen0806"},"content":"        Book harryPotter2 \u003d new BookBuilder(harryPotter).withTimeAdded(0).build();","lastModifiedDate":"2022-03-11"},{"lineNumber":70,"author":{"gitId":"bingsen0806"},"content":"        AddBookCommand addHarryPotterCommand2 \u003d new AddBookCommand(harryPotter2);","lastModifiedDate":"2022-03-11"},{"lineNumber":71,"author":{"gitId":"bingsen0806"},"content":"        assertTrue(addHarryPotterCommand.equals(addHarryPotterCommand2));","lastModifiedDate":"2022-03-11"},{"lineNumber":72,"author":{"gitId":"bingsen0806"},"content":"    }","lastModifiedDate":"2022-03-11"},{"lineNumber":73,"author":{"gitId":"bingsen0806"},"content":"","lastModifiedDate":"2022-03-11"},{"lineNumber":74,"author":{"gitId":"bingsen0806"},"content":"    /**","lastModifiedDate":"2022-03-11"},{"lineNumber":75,"author":{"gitId":"bingsen0806"},"content":"     * A default model stub that have all of the methods failing.","lastModifiedDate":"2022-03-11"},{"lineNumber":76,"author":{"gitId":"bingsen0806"},"content":"     */","lastModifiedDate":"2022-03-11"},{"lineNumber":77,"author":{"gitId":"bingsen0806"},"content":"    private class ModelStub implements Model {","lastModifiedDate":"2022-03-11"},{"lineNumber":78,"author":{"gitId":"bingsen0806"},"content":"        @Override","lastModifiedDate":"2022-03-11"},{"lineNumber":79,"author":{"gitId":"bingsen0806"},"content":"        public void setUserPrefs(ReadOnlyUserPrefs userPrefs) {","lastModifiedDate":"2022-03-11"},{"lineNumber":80,"author":{"gitId":"bingsen0806"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2022-03-11"},{"lineNumber":81,"author":{"gitId":"bingsen0806"},"content":"        }","lastModifiedDate":"2022-03-11"},{"lineNumber":82,"author":{"gitId":"bingsen0806"},"content":"","lastModifiedDate":"2022-03-11"},{"lineNumber":83,"author":{"gitId":"bingsen0806"},"content":"        @Override","lastModifiedDate":"2022-03-11"},{"lineNumber":84,"author":{"gitId":"bingsen0806"},"content":"        public ReadOnlyUserPrefs getUserPrefs() {","lastModifiedDate":"2022-03-11"},{"lineNumber":85,"author":{"gitId":"bingsen0806"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2022-03-11"},{"lineNumber":86,"author":{"gitId":"bingsen0806"},"content":"        }","lastModifiedDate":"2022-03-11"},{"lineNumber":87,"author":{"gitId":"bingsen0806"},"content":"","lastModifiedDate":"2022-03-11"},{"lineNumber":88,"author":{"gitId":"bingsen0806"},"content":"        @Override","lastModifiedDate":"2022-03-11"},{"lineNumber":89,"author":{"gitId":"bingsen0806"},"content":"        public GuiSettings getGuiSettings() {","lastModifiedDate":"2022-03-11"},{"lineNumber":90,"author":{"gitId":"bingsen0806"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2022-03-11"},{"lineNumber":91,"author":{"gitId":"bingsen0806"},"content":"        }","lastModifiedDate":"2022-03-11"},{"lineNumber":92,"author":{"gitId":"bingsen0806"},"content":"","lastModifiedDate":"2022-03-11"},{"lineNumber":93,"author":{"gitId":"bingsen0806"},"content":"        @Override","lastModifiedDate":"2022-03-11"},{"lineNumber":94,"author":{"gitId":"bingsen0806"},"content":"        public void setGuiSettings(GuiSettings guiSettings) {","lastModifiedDate":"2022-03-11"},{"lineNumber":95,"author":{"gitId":"bingsen0806"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2022-03-11"},{"lineNumber":96,"author":{"gitId":"bingsen0806"},"content":"        }","lastModifiedDate":"2022-03-11"},{"lineNumber":97,"author":{"gitId":"bingsen0806"},"content":"","lastModifiedDate":"2022-03-11"},{"lineNumber":98,"author":{"gitId":"bingsen0806"},"content":"        @Override","lastModifiedDate":"2022-03-11"},{"lineNumber":99,"author":{"gitId":"bingsen0806"},"content":"        public Path getAddressBookFilePath() {","lastModifiedDate":"2022-03-11"},{"lineNumber":100,"author":{"gitId":"bingsen0806"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2022-03-11"},{"lineNumber":101,"author":{"gitId":"bingsen0806"},"content":"        }","lastModifiedDate":"2022-03-11"},{"lineNumber":102,"author":{"gitId":"bingsen0806"},"content":"","lastModifiedDate":"2022-03-11"},{"lineNumber":103,"author":{"gitId":"bingsen0806"},"content":"        @Override","lastModifiedDate":"2022-03-11"},{"lineNumber":104,"author":{"gitId":"bingsen0806"},"content":"        public void setAddressBookFilePath(Path addressBookFilePath) {","lastModifiedDate":"2022-03-11"},{"lineNumber":105,"author":{"gitId":"bingsen0806"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2022-03-11"},{"lineNumber":106,"author":{"gitId":"bingsen0806"},"content":"        }","lastModifiedDate":"2022-03-11"},{"lineNumber":107,"author":{"gitId":"bingsen0806"},"content":"","lastModifiedDate":"2022-03-11"},{"lineNumber":108,"author":{"gitId":"bingsen0806"},"content":"        @Override","lastModifiedDate":"2022-03-11"},{"lineNumber":109,"author":{"gitId":"bingsen0806"},"content":"        public void addPerson(Patron patron) {","lastModifiedDate":"2022-03-11"},{"lineNumber":110,"author":{"gitId":"bingsen0806"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2022-03-11"},{"lineNumber":111,"author":{"gitId":"bingsen0806"},"content":"        }","lastModifiedDate":"2022-03-11"},{"lineNumber":112,"author":{"gitId":"bingsen0806"},"content":"","lastModifiedDate":"2022-03-11"},{"lineNumber":113,"author":{"gitId":"bingsen0806"},"content":"        @Override","lastModifiedDate":"2022-03-11"},{"lineNumber":114,"author":{"gitId":"bingsen0806"},"content":"        public void addBook(Book book) {","lastModifiedDate":"2022-03-11"},{"lineNumber":115,"author":{"gitId":"bingsen0806"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2022-03-11"},{"lineNumber":116,"author":{"gitId":"bingsen0806"},"content":"        }","lastModifiedDate":"2022-03-11"},{"lineNumber":117,"author":{"gitId":"bingsen0806"},"content":"","lastModifiedDate":"2022-03-11"},{"lineNumber":118,"author":{"gitId":"bingsen0806"},"content":"        @Override","lastModifiedDate":"2022-03-11"},{"lineNumber":119,"author":{"gitId":"bingsen0806"},"content":"        public void setAddressBook(ReadOnlyAddressBook newData) {","lastModifiedDate":"2022-03-11"},{"lineNumber":120,"author":{"gitId":"bingsen0806"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2022-03-11"},{"lineNumber":121,"author":{"gitId":"bingsen0806"},"content":"        }","lastModifiedDate":"2022-03-11"},{"lineNumber":122,"author":{"gitId":"bingsen0806"},"content":"","lastModifiedDate":"2022-03-11"},{"lineNumber":123,"author":{"gitId":"bingsen0806"},"content":"        @Override","lastModifiedDate":"2022-03-11"},{"lineNumber":124,"author":{"gitId":"bingsen0806"},"content":"        public ReadOnlyAddressBook getAddressBook() {","lastModifiedDate":"2022-03-11"},{"lineNumber":125,"author":{"gitId":"bingsen0806"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2022-03-11"},{"lineNumber":126,"author":{"gitId":"bingsen0806"},"content":"        }","lastModifiedDate":"2022-03-11"},{"lineNumber":127,"author":{"gitId":"bingsen0806"},"content":"","lastModifiedDate":"2022-03-11"},{"lineNumber":128,"author":{"gitId":"bingsen0806"},"content":"        @Override","lastModifiedDate":"2022-03-11"},{"lineNumber":129,"author":{"gitId":"bingsen0806"},"content":"        public boolean hasPerson(Patron patron) {","lastModifiedDate":"2022-03-11"},{"lineNumber":130,"author":{"gitId":"bingsen0806"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2022-03-11"},{"lineNumber":131,"author":{"gitId":"bingsen0806"},"content":"        }","lastModifiedDate":"2022-03-11"},{"lineNumber":132,"author":{"gitId":"bingsen0806"},"content":"","lastModifiedDate":"2022-03-11"},{"lineNumber":133,"author":{"gitId":"bingsen0806"},"content":"        @Override","lastModifiedDate":"2022-03-11"},{"lineNumber":134,"author":{"gitId":"bingsen0806"},"content":"        public boolean hasBook(Book book) {","lastModifiedDate":"2022-03-11"},{"lineNumber":135,"author":{"gitId":"bingsen0806"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2022-03-11"},{"lineNumber":136,"author":{"gitId":"bingsen0806"},"content":"        }","lastModifiedDate":"2022-03-11"},{"lineNumber":137,"author":{"gitId":"bingsen0806"},"content":"","lastModifiedDate":"2022-03-11"},{"lineNumber":138,"author":{"gitId":"bingsen0806"},"content":"        @Override","lastModifiedDate":"2022-03-11"},{"lineNumber":139,"author":{"gitId":"bingsen0806"},"content":"        public void deletePerson(Patron target) {","lastModifiedDate":"2022-03-11"},{"lineNumber":140,"author":{"gitId":"bingsen0806"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2022-03-11"},{"lineNumber":141,"author":{"gitId":"bingsen0806"},"content":"        }","lastModifiedDate":"2022-03-11"},{"lineNumber":142,"author":{"gitId":"bingsen0806"},"content":"","lastModifiedDate":"2022-03-11"},{"lineNumber":143,"author":{"gitId":"bingsen0806"},"content":"        @Override","lastModifiedDate":"2022-03-11"},{"lineNumber":144,"author":{"gitId":"bingsen0806"},"content":"        public void deleteBook(Book target) {","lastModifiedDate":"2022-03-11"},{"lineNumber":145,"author":{"gitId":"bingsen0806"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2022-03-11"},{"lineNumber":146,"author":{"gitId":"bingsen0806"},"content":"        }","lastModifiedDate":"2022-03-11"},{"lineNumber":147,"author":{"gitId":"bingsen0806"},"content":"","lastModifiedDate":"2022-03-11"},{"lineNumber":148,"author":{"gitId":"bingsen0806"},"content":"        @Override","lastModifiedDate":"2022-03-11"},{"lineNumber":149,"author":{"gitId":"bingsen0806"},"content":"        public void setPerson(Patron target, Patron editedPatron) {","lastModifiedDate":"2022-03-11"},{"lineNumber":150,"author":{"gitId":"bingsen0806"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2022-03-11"},{"lineNumber":151,"author":{"gitId":"bingsen0806"},"content":"        }","lastModifiedDate":"2022-03-11"},{"lineNumber":152,"author":{"gitId":"bingsen0806"},"content":"","lastModifiedDate":"2022-03-11"},{"lineNumber":153,"author":{"gitId":"bingsen0806"},"content":"        @Override","lastModifiedDate":"2022-03-11"},{"lineNumber":154,"author":{"gitId":"bingsen0806"},"content":"        public void setBook(Book target, Book editedBook) {","lastModifiedDate":"2022-03-11"},{"lineNumber":155,"author":{"gitId":"bingsen0806"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2022-03-11"},{"lineNumber":156,"author":{"gitId":"bingsen0806"},"content":"        }","lastModifiedDate":"2022-03-11"},{"lineNumber":157,"author":{"gitId":"bingsen0806"},"content":"","lastModifiedDate":"2022-03-11"},{"lineNumber":158,"author":{"gitId":"bingsen0806"},"content":"        @Override","lastModifiedDate":"2022-03-11"},{"lineNumber":159,"author":{"gitId":"bingsen0806"},"content":"        public ObservableList\u003cPatron\u003e getFilteredPersonList() {","lastModifiedDate":"2022-03-11"},{"lineNumber":160,"author":{"gitId":"bingsen0806"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2022-03-11"},{"lineNumber":161,"author":{"gitId":"bingsen0806"},"content":"        }","lastModifiedDate":"2022-03-11"},{"lineNumber":162,"author":{"gitId":"bingsen0806"},"content":"","lastModifiedDate":"2022-03-11"},{"lineNumber":163,"author":{"gitId":"bingsen0806"},"content":"        @Override","lastModifiedDate":"2022-03-11"},{"lineNumber":164,"author":{"gitId":"bingsen0806"},"content":"        public void updateFilteredPersonList(Predicate\u003cPatron\u003e predicate) {","lastModifiedDate":"2022-03-11"},{"lineNumber":165,"author":{"gitId":"bingsen0806"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2022-03-11"},{"lineNumber":166,"author":{"gitId":"bingsen0806"},"content":"        }","lastModifiedDate":"2022-03-11"},{"lineNumber":167,"author":{"gitId":"bingsen0806"},"content":"","lastModifiedDate":"2022-03-11"},{"lineNumber":168,"author":{"gitId":"bingsen0806"},"content":"        @Override","lastModifiedDate":"2022-03-11"},{"lineNumber":169,"author":{"gitId":"bingsen0806"},"content":"        public ObservableList\u003cBook\u003e getFilteredBookList() {","lastModifiedDate":"2022-03-11"},{"lineNumber":170,"author":{"gitId":"bingsen0806"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2022-03-11"},{"lineNumber":171,"author":{"gitId":"bingsen0806"},"content":"        }","lastModifiedDate":"2022-03-11"},{"lineNumber":172,"author":{"gitId":"bingsen0806"},"content":"","lastModifiedDate":"2022-03-11"},{"lineNumber":173,"author":{"gitId":"bingsen0806"},"content":"        @Override","lastModifiedDate":"2022-03-11"},{"lineNumber":174,"author":{"gitId":"bingsen0806"},"content":"        public void updateFilteredBookList(Predicate\u003cBook\u003e predicate) {","lastModifiedDate":"2022-03-11"},{"lineNumber":175,"author":{"gitId":"bingsen0806"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2022-03-11"},{"lineNumber":176,"author":{"gitId":"bingsen0806"},"content":"        }","lastModifiedDate":"2022-03-11"},{"lineNumber":177,"author":{"gitId":"bingsen0806"},"content":"    }","lastModifiedDate":"2022-03-11"},{"lineNumber":178,"author":{"gitId":"bingsen0806"},"content":"","lastModifiedDate":"2022-03-11"},{"lineNumber":179,"author":{"gitId":"bingsen0806"},"content":"    /**","lastModifiedDate":"2022-03-11"},{"lineNumber":180,"author":{"gitId":"bingsen0806"},"content":"     * A Model stub that contains a single book.","lastModifiedDate":"2022-03-11"},{"lineNumber":181,"author":{"gitId":"bingsen0806"},"content":"     */","lastModifiedDate":"2022-03-11"},{"lineNumber":182,"author":{"gitId":"bingsen0806"},"content":"    private class ModelStubWithBook extends ModelStub {","lastModifiedDate":"2022-03-11"},{"lineNumber":183,"author":{"gitId":"bingsen0806"},"content":"        private final Book book;","lastModifiedDate":"2022-03-11"},{"lineNumber":184,"author":{"gitId":"bingsen0806"},"content":"","lastModifiedDate":"2022-03-11"},{"lineNumber":185,"author":{"gitId":"bingsen0806"},"content":"        ModelStubWithBook(Book book) {","lastModifiedDate":"2022-03-11"},{"lineNumber":186,"author":{"gitId":"bingsen0806"},"content":"            requireNonNull(book);","lastModifiedDate":"2022-03-11"},{"lineNumber":187,"author":{"gitId":"bingsen0806"},"content":"            this.book \u003d book;","lastModifiedDate":"2022-03-11"},{"lineNumber":188,"author":{"gitId":"bingsen0806"},"content":"        }","lastModifiedDate":"2022-03-11"},{"lineNumber":189,"author":{"gitId":"bingsen0806"},"content":"","lastModifiedDate":"2022-03-11"},{"lineNumber":190,"author":{"gitId":"bingsen0806"},"content":"        @Override","lastModifiedDate":"2022-03-11"},{"lineNumber":191,"author":{"gitId":"bingsen0806"},"content":"        public boolean hasBook(Book book) {","lastModifiedDate":"2022-03-11"},{"lineNumber":192,"author":{"gitId":"bingsen0806"},"content":"            requireNonNull(book);","lastModifiedDate":"2022-03-11"},{"lineNumber":193,"author":{"gitId":"bingsen0806"},"content":"            return this.book.isSameBook(book);","lastModifiedDate":"2022-03-11"},{"lineNumber":194,"author":{"gitId":"bingsen0806"},"content":"        }","lastModifiedDate":"2022-03-11"},{"lineNumber":195,"author":{"gitId":"bingsen0806"},"content":"    }","lastModifiedDate":"2022-03-11"},{"lineNumber":196,"author":{"gitId":"bingsen0806"},"content":"","lastModifiedDate":"2022-03-11"},{"lineNumber":197,"author":{"gitId":"bingsen0806"},"content":"    /**","lastModifiedDate":"2022-03-11"},{"lineNumber":198,"author":{"gitId":"bingsen0806"},"content":"     * A Model stub that always accept the book being added.","lastModifiedDate":"2022-03-11"},{"lineNumber":199,"author":{"gitId":"bingsen0806"},"content":"     */","lastModifiedDate":"2022-03-11"},{"lineNumber":200,"author":{"gitId":"bingsen0806"},"content":"    private class ModelStubAcceptingBookAdded extends ModelStub {","lastModifiedDate":"2022-03-11"},{"lineNumber":201,"author":{"gitId":"bingsen0806"},"content":"        final ArrayList\u003cBook\u003e booksAdded \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2022-03-11"},{"lineNumber":202,"author":{"gitId":"bingsen0806"},"content":"","lastModifiedDate":"2022-03-11"},{"lineNumber":203,"author":{"gitId":"bingsen0806"},"content":"        @Override","lastModifiedDate":"2022-03-11"},{"lineNumber":204,"author":{"gitId":"bingsen0806"},"content":"        public boolean hasBook(Book book) {","lastModifiedDate":"2022-03-11"},{"lineNumber":205,"author":{"gitId":"bingsen0806"},"content":"            requireNonNull(book);","lastModifiedDate":"2022-03-11"},{"lineNumber":206,"author":{"gitId":"bingsen0806"},"content":"            return booksAdded.stream().anyMatch(book::isSameBook);","lastModifiedDate":"2022-03-11"},{"lineNumber":207,"author":{"gitId":"bingsen0806"},"content":"        }","lastModifiedDate":"2022-03-11"},{"lineNumber":208,"author":{"gitId":"bingsen0806"},"content":"","lastModifiedDate":"2022-03-11"},{"lineNumber":209,"author":{"gitId":"bingsen0806"},"content":"        @Override","lastModifiedDate":"2022-03-11"},{"lineNumber":210,"author":{"gitId":"bingsen0806"},"content":"        public void addBook(Book book) {","lastModifiedDate":"2022-03-11"},{"lineNumber":211,"author":{"gitId":"bingsen0806"},"content":"            requireNonNull(book);","lastModifiedDate":"2022-03-11"},{"lineNumber":212,"author":{"gitId":"bingsen0806"},"content":"            booksAdded.add(book);","lastModifiedDate":"2022-03-11"},{"lineNumber":213,"author":{"gitId":"bingsen0806"},"content":"        }","lastModifiedDate":"2022-03-11"},{"lineNumber":214,"author":{"gitId":"bingsen0806"},"content":"","lastModifiedDate":"2022-03-11"},{"lineNumber":215,"author":{"gitId":"bingsen0806"},"content":"        @Override","lastModifiedDate":"2022-03-11"},{"lineNumber":216,"author":{"gitId":"bingsen0806"},"content":"        public ReadOnlyAddressBook getAddressBook() {","lastModifiedDate":"2022-03-11"},{"lineNumber":217,"author":{"gitId":"bingsen0806"},"content":"            return new AddressBook();","lastModifiedDate":"2022-03-11"},{"lineNumber":218,"author":{"gitId":"bingsen0806"},"content":"        }","lastModifiedDate":"2022-03-11"},{"lineNumber":219,"author":{"gitId":"bingsen0806"},"content":"    }","lastModifiedDate":"2022-03-11"},{"lineNumber":220,"author":{"gitId":"bingsen0806"},"content":"}","lastModifiedDate":"2022-03-11"}],"authorContributionMap":{"bingsen0806":220}},{"path":"src/test/java/seedu/address/logic/commands/book/DeleteBookCommandTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"bingsen0806"},"content":"package seedu.address.logic.commands.book;","lastModifiedDate":"2022-03-11"},{"lineNumber":2,"author":{"gitId":"bingsen0806"},"content":"","lastModifiedDate":"2022-03-11"},{"lineNumber":3,"author":{"gitId":"bingsen0806"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2022-03-11"},{"lineNumber":4,"author":{"gitId":"bingsen0806"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2022-03-11"},{"lineNumber":5,"author":{"gitId":"bingsen0806"},"content":"import static seedu.address.logic.commands.CommandTestUtil.assertCommandFailure;","lastModifiedDate":"2022-03-11"},{"lineNumber":6,"author":{"gitId":"bingsen0806"},"content":"import static seedu.address.logic.commands.CommandTestUtil.assertCommandSuccess;","lastModifiedDate":"2022-03-11"},{"lineNumber":7,"author":{"gitId":"bingsen0806"},"content":"import static seedu.address.logic.commands.CommandTestUtil.showBookAtIndex;","lastModifiedDate":"2022-03-11"},{"lineNumber":8,"author":{"gitId":"bingsen0806"},"content":"import static seedu.address.testutil.TypicalIndexes.INDEX_FIRST_BOOK;","lastModifiedDate":"2022-03-11"},{"lineNumber":9,"author":{"gitId":"bingsen0806"},"content":"import static seedu.address.testutil.TypicalIndexes.INDEX_SECOND_BOOK;","lastModifiedDate":"2022-03-11"},{"lineNumber":10,"author":{"gitId":"bingsen0806"},"content":"","lastModifiedDate":"2022-03-11"},{"lineNumber":11,"author":{"gitId":"bingsen0806"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2022-03-11"},{"lineNumber":12,"author":{"gitId":"bingsen0806"},"content":"","lastModifiedDate":"2022-03-11"},{"lineNumber":13,"author":{"gitId":"bingsen0806"},"content":"import seedu.address.commons.core.Messages;","lastModifiedDate":"2022-03-11"},{"lineNumber":14,"author":{"gitId":"bingsen0806"},"content":"import seedu.address.commons.core.index.Index;","lastModifiedDate":"2022-03-11"},{"lineNumber":15,"author":{"gitId":"bingsen0806"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2022-03-11"},{"lineNumber":16,"author":{"gitId":"bingsen0806"},"content":"import seedu.address.model.ModelManager;","lastModifiedDate":"2022-03-11"},{"lineNumber":17,"author":{"gitId":"bingsen0806"},"content":"import seedu.address.model.UserPrefs;","lastModifiedDate":"2022-03-11"},{"lineNumber":18,"author":{"gitId":"bingsen0806"},"content":"import seedu.address.model.book.Book;","lastModifiedDate":"2022-03-11"},{"lineNumber":19,"author":{"gitId":"bingsen0806"},"content":"import seedu.address.testutil.TypicalAddressBook;","lastModifiedDate":"2022-03-11"},{"lineNumber":20,"author":{"gitId":"bingsen0806"},"content":"","lastModifiedDate":"2022-03-11"},{"lineNumber":21,"author":{"gitId":"bingsen0806"},"content":"/**","lastModifiedDate":"2022-03-11"},{"lineNumber":22,"author":{"gitId":"bingsen0806"},"content":" * Contains integration tests (interaction with the Model) and unit tests for","lastModifiedDate":"2022-03-11"},{"lineNumber":23,"author":{"gitId":"bingsen0806"},"content":" * {@code DeleteBookCommand}.","lastModifiedDate":"2022-03-11"},{"lineNumber":24,"author":{"gitId":"bingsen0806"},"content":" */","lastModifiedDate":"2022-03-11"},{"lineNumber":25,"author":{"gitId":"bingsen0806"},"content":"public class DeleteBookCommandTest {","lastModifiedDate":"2022-03-11"},{"lineNumber":26,"author":{"gitId":"bingsen0806"},"content":"","lastModifiedDate":"2022-03-11"},{"lineNumber":27,"author":{"gitId":"bingsen0806"},"content":"    private Model model \u003d new ModelManager(TypicalAddressBook.getTypicalAddressBook(), new UserPrefs());","lastModifiedDate":"2022-03-11"},{"lineNumber":28,"author":{"gitId":"bingsen0806"},"content":"","lastModifiedDate":"2022-03-11"},{"lineNumber":29,"author":{"gitId":"bingsen0806"},"content":"    @Test","lastModifiedDate":"2022-03-11"},{"lineNumber":30,"author":{"gitId":"bingsen0806"},"content":"    public void execute_validIndexUnfilteredList_success() {","lastModifiedDate":"2022-03-11"},{"lineNumber":31,"author":{"gitId":"bingsen0806"},"content":"        Book bookToDelete \u003d model.getFilteredBookList().get(INDEX_FIRST_BOOK.getZeroBased());","lastModifiedDate":"2022-03-11"},{"lineNumber":32,"author":{"gitId":"bingsen0806"},"content":"        DeleteBookCommand deleteCommand \u003d new DeleteBookCommand(INDEX_FIRST_BOOK);","lastModifiedDate":"2022-03-11"},{"lineNumber":33,"author":{"gitId":"bingsen0806"},"content":"","lastModifiedDate":"2022-03-11"},{"lineNumber":34,"author":{"gitId":"bingsen0806"},"content":"        String expectedMessage \u003d String.format(DeleteBookCommand.MESSAGE_DELETE_BOOK_SUCCESS, bookToDelete);","lastModifiedDate":"2022-03-11"},{"lineNumber":35,"author":{"gitId":"bingsen0806"},"content":"","lastModifiedDate":"2022-03-11"},{"lineNumber":36,"author":{"gitId":"bingsen0806"},"content":"        ModelManager expectedModel \u003d new ModelManager(model.getAddressBook(), new UserPrefs());","lastModifiedDate":"2022-03-11"},{"lineNumber":37,"author":{"gitId":"bingsen0806"},"content":"        expectedModel.deleteBook(bookToDelete);","lastModifiedDate":"2022-03-11"},{"lineNumber":38,"author":{"gitId":"bingsen0806"},"content":"","lastModifiedDate":"2022-03-11"},{"lineNumber":39,"author":{"gitId":"bingsen0806"},"content":"        assertCommandSuccess(deleteCommand, model, expectedMessage, expectedModel);","lastModifiedDate":"2022-03-11"},{"lineNumber":40,"author":{"gitId":"bingsen0806"},"content":"    }","lastModifiedDate":"2022-03-11"},{"lineNumber":41,"author":{"gitId":"bingsen0806"},"content":"","lastModifiedDate":"2022-03-11"},{"lineNumber":42,"author":{"gitId":"bingsen0806"},"content":"    @Test","lastModifiedDate":"2022-03-11"},{"lineNumber":43,"author":{"gitId":"bingsen0806"},"content":"    public void execute_invalidIndexUnfilteredList_throwsCommandException() {","lastModifiedDate":"2022-03-11"},{"lineNumber":44,"author":{"gitId":"bingsen0806"},"content":"        Index outOfBoundIndex \u003d Index.fromOneBased(model.getFilteredBookList().size() + 1);","lastModifiedDate":"2022-03-11"},{"lineNumber":45,"author":{"gitId":"bingsen0806"},"content":"        DeleteBookCommand deleteCommand \u003d new DeleteBookCommand(outOfBoundIndex);","lastModifiedDate":"2022-03-11"},{"lineNumber":46,"author":{"gitId":"bingsen0806"},"content":"","lastModifiedDate":"2022-03-11"},{"lineNumber":47,"author":{"gitId":"bingsen0806"},"content":"        assertCommandFailure(deleteCommand, model, Messages.MESSAGE_INVALID_BOOK_DISPLAYED_INDEX);","lastModifiedDate":"2022-03-11"},{"lineNumber":48,"author":{"gitId":"bingsen0806"},"content":"    }","lastModifiedDate":"2022-03-11"},{"lineNumber":49,"author":{"gitId":"bingsen0806"},"content":"","lastModifiedDate":"2022-03-11"},{"lineNumber":50,"author":{"gitId":"bingsen0806"},"content":"    @Test","lastModifiedDate":"2022-03-11"},{"lineNumber":51,"author":{"gitId":"bingsen0806"},"content":"    public void execute_validIndexFilteredList_success() {","lastModifiedDate":"2022-03-11"},{"lineNumber":52,"author":{"gitId":"bingsen0806"},"content":"        showBookAtIndex(model, INDEX_FIRST_BOOK);","lastModifiedDate":"2022-03-11"},{"lineNumber":53,"author":{"gitId":"bingsen0806"},"content":"","lastModifiedDate":"2022-03-11"},{"lineNumber":54,"author":{"gitId":"bingsen0806"},"content":"        Book bookToDelete \u003d model.getFilteredBookList().get(INDEX_FIRST_BOOK.getZeroBased());","lastModifiedDate":"2022-03-11"},{"lineNumber":55,"author":{"gitId":"bingsen0806"},"content":"        DeleteBookCommand deleteCommand \u003d new DeleteBookCommand(INDEX_FIRST_BOOK);","lastModifiedDate":"2022-03-11"},{"lineNumber":56,"author":{"gitId":"bingsen0806"},"content":"","lastModifiedDate":"2022-03-11"},{"lineNumber":57,"author":{"gitId":"bingsen0806"},"content":"        String expectedMessage \u003d String.format(DeleteBookCommand.MESSAGE_DELETE_BOOK_SUCCESS, bookToDelete);","lastModifiedDate":"2022-03-11"},{"lineNumber":58,"author":{"gitId":"bingsen0806"},"content":"","lastModifiedDate":"2022-03-11"},{"lineNumber":59,"author":{"gitId":"bingsen0806"},"content":"        Model expectedModel \u003d new ModelManager(model.getAddressBook(), new UserPrefs());","lastModifiedDate":"2022-03-11"},{"lineNumber":60,"author":{"gitId":"bingsen0806"},"content":"        expectedModel.deleteBook(bookToDelete);","lastModifiedDate":"2022-03-11"},{"lineNumber":61,"author":{"gitId":"bingsen0806"},"content":"        showNoBook(expectedModel);","lastModifiedDate":"2022-03-11"},{"lineNumber":62,"author":{"gitId":"bingsen0806"},"content":"","lastModifiedDate":"2022-03-11"},{"lineNumber":63,"author":{"gitId":"bingsen0806"},"content":"        assertCommandSuccess(deleteCommand, model, expectedMessage, expectedModel);","lastModifiedDate":"2022-03-11"},{"lineNumber":64,"author":{"gitId":"bingsen0806"},"content":"    }","lastModifiedDate":"2022-03-11"},{"lineNumber":65,"author":{"gitId":"bingsen0806"},"content":"","lastModifiedDate":"2022-03-11"},{"lineNumber":66,"author":{"gitId":"bingsen0806"},"content":"    @Test","lastModifiedDate":"2022-03-11"},{"lineNumber":67,"author":{"gitId":"bingsen0806"},"content":"    public void execute_invalidIndexFilteredList_throwsCommandException() {","lastModifiedDate":"2022-03-11"},{"lineNumber":68,"author":{"gitId":"bingsen0806"},"content":"        showBookAtIndex(model, INDEX_FIRST_BOOK);","lastModifiedDate":"2022-03-11"},{"lineNumber":69,"author":{"gitId":"bingsen0806"},"content":"","lastModifiedDate":"2022-03-11"},{"lineNumber":70,"author":{"gitId":"bingsen0806"},"content":"        Index outOfBoundIndex \u003d INDEX_SECOND_BOOK;","lastModifiedDate":"2022-03-11"},{"lineNumber":71,"author":{"gitId":"bingsen0806"},"content":"        // ensures that outOfBoundIndex is still in bounds of address book list","lastModifiedDate":"2022-03-11"},{"lineNumber":72,"author":{"gitId":"bingsen0806"},"content":"        assertTrue(outOfBoundIndex.getZeroBased() \u003c model.getAddressBook().getBookList().size());","lastModifiedDate":"2022-03-11"},{"lineNumber":73,"author":{"gitId":"bingsen0806"},"content":"","lastModifiedDate":"2022-03-11"},{"lineNumber":74,"author":{"gitId":"bingsen0806"},"content":"        DeleteBookCommand deleteCommand \u003d new DeleteBookCommand(outOfBoundIndex);","lastModifiedDate":"2022-03-11"},{"lineNumber":75,"author":{"gitId":"bingsen0806"},"content":"","lastModifiedDate":"2022-03-11"},{"lineNumber":76,"author":{"gitId":"bingsen0806"},"content":"        assertCommandFailure(deleteCommand, model, Messages.MESSAGE_INVALID_BOOK_DISPLAYED_INDEX);","lastModifiedDate":"2022-03-11"},{"lineNumber":77,"author":{"gitId":"bingsen0806"},"content":"    }","lastModifiedDate":"2022-03-11"},{"lineNumber":78,"author":{"gitId":"bingsen0806"},"content":"","lastModifiedDate":"2022-03-11"},{"lineNumber":79,"author":{"gitId":"bingsen0806"},"content":"    @Test","lastModifiedDate":"2022-03-11"},{"lineNumber":80,"author":{"gitId":"bingsen0806"},"content":"    public void equals() {","lastModifiedDate":"2022-03-11"},{"lineNumber":81,"author":{"gitId":"bingsen0806"},"content":"        DeleteBookCommand deleteFirstCommand \u003d new DeleteBookCommand(INDEX_FIRST_BOOK);","lastModifiedDate":"2022-03-11"},{"lineNumber":82,"author":{"gitId":"bingsen0806"},"content":"        DeleteBookCommand deleteSecondCommand \u003d new DeleteBookCommand(INDEX_SECOND_BOOK);","lastModifiedDate":"2022-03-11"},{"lineNumber":83,"author":{"gitId":"bingsen0806"},"content":"","lastModifiedDate":"2022-03-11"},{"lineNumber":84,"author":{"gitId":"bingsen0806"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2022-03-11"},{"lineNumber":85,"author":{"gitId":"bingsen0806"},"content":"        assertTrue(deleteFirstCommand.equals(deleteFirstCommand));","lastModifiedDate":"2022-03-11"},{"lineNumber":86,"author":{"gitId":"bingsen0806"},"content":"","lastModifiedDate":"2022-03-11"},{"lineNumber":87,"author":{"gitId":"bingsen0806"},"content":"        // same values -\u003e returns true","lastModifiedDate":"2022-03-11"},{"lineNumber":88,"author":{"gitId":"bingsen0806"},"content":"        DeleteBookCommand deleteFirstCommandCopy \u003d new DeleteBookCommand(INDEX_FIRST_BOOK);","lastModifiedDate":"2022-03-11"},{"lineNumber":89,"author":{"gitId":"bingsen0806"},"content":"        assertTrue(deleteFirstCommand.equals(deleteFirstCommandCopy));","lastModifiedDate":"2022-03-11"},{"lineNumber":90,"author":{"gitId":"bingsen0806"},"content":"","lastModifiedDate":"2022-03-11"},{"lineNumber":91,"author":{"gitId":"bingsen0806"},"content":"        // different types -\u003e returns false","lastModifiedDate":"2022-03-11"},{"lineNumber":92,"author":{"gitId":"bingsen0806"},"content":"        assertFalse(deleteFirstCommand.equals(1));","lastModifiedDate":"2022-03-11"},{"lineNumber":93,"author":{"gitId":"bingsen0806"},"content":"","lastModifiedDate":"2022-03-11"},{"lineNumber":94,"author":{"gitId":"bingsen0806"},"content":"        // null -\u003e returns false","lastModifiedDate":"2022-03-11"},{"lineNumber":95,"author":{"gitId":"bingsen0806"},"content":"        assertFalse(deleteFirstCommand.equals(null));","lastModifiedDate":"2022-03-11"},{"lineNumber":96,"author":{"gitId":"bingsen0806"},"content":"","lastModifiedDate":"2022-03-11"},{"lineNumber":97,"author":{"gitId":"bingsen0806"},"content":"        // different book -\u003e returns false","lastModifiedDate":"2022-03-11"},{"lineNumber":98,"author":{"gitId":"bingsen0806"},"content":"        assertFalse(deleteFirstCommand.equals(deleteSecondCommand));","lastModifiedDate":"2022-03-11"},{"lineNumber":99,"author":{"gitId":"bingsen0806"},"content":"    }","lastModifiedDate":"2022-03-11"},{"lineNumber":100,"author":{"gitId":"bingsen0806"},"content":"","lastModifiedDate":"2022-03-11"},{"lineNumber":101,"author":{"gitId":"bingsen0806"},"content":"    /**","lastModifiedDate":"2022-03-11"},{"lineNumber":102,"author":{"gitId":"bingsen0806"},"content":"     * Updates {@code model}\u0027s filtered list to show no one.","lastModifiedDate":"2022-03-11"},{"lineNumber":103,"author":{"gitId":"bingsen0806"},"content":"     */","lastModifiedDate":"2022-03-11"},{"lineNumber":104,"author":{"gitId":"bingsen0806"},"content":"    private void showNoBook(Model model) {","lastModifiedDate":"2022-03-11"},{"lineNumber":105,"author":{"gitId":"bingsen0806"},"content":"        model.updateFilteredBookList(p -\u003e false);","lastModifiedDate":"2022-03-11"},{"lineNumber":106,"author":{"gitId":"bingsen0806"},"content":"","lastModifiedDate":"2022-03-11"},{"lineNumber":107,"author":{"gitId":"bingsen0806"},"content":"        assertTrue(model.getFilteredBookList().isEmpty());","lastModifiedDate":"2022-03-11"},{"lineNumber":108,"author":{"gitId":"bingsen0806"},"content":"    }","lastModifiedDate":"2022-03-11"},{"lineNumber":109,"author":{"gitId":"bingsen0806"},"content":"}","lastModifiedDate":"2022-03-11"}],"authorContributionMap":{"bingsen0806":109}},{"path":"src/test/java/seedu/address/logic/parser/AddCommandParserTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2017-06-15"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static seedu.address.commons.core.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2017-06-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.EMAIL_DESC_AMY;","lastModifiedDate":"2017-07-05"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.EMAIL_DESC_BOB;","lastModifiedDate":"2017-07-05"},{"lineNumber":6,"author":{"gitId":"aditi2313"},"content":"import static seedu.address.logic.commands.CommandTestUtil.ID_DESC_AMY;","lastModifiedDate":"2022-03-11"},{"lineNumber":7,"author":{"gitId":"aditi2313"},"content":"import static seedu.address.logic.commands.CommandTestUtil.ID_DESC_BOB;","lastModifiedDate":"2022-03-11"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.INVALID_EMAIL_DESC;","lastModifiedDate":"2017-07-05"},{"lineNumber":9,"author":{"gitId":"aditi2313"},"content":"import static seedu.address.logic.commands.CommandTestUtil.INVALID_ID_DESC;","lastModifiedDate":"2022-03-11"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.INVALID_NAME_DESC;","lastModifiedDate":"2017-07-05"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.INVALID_PHONE_DESC;","lastModifiedDate":"2017-07-05"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.INVALID_TAG_DESC;","lastModifiedDate":"2017-07-05"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.NAME_DESC_AMY;","lastModifiedDate":"2017-07-05"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.NAME_DESC_BOB;","lastModifiedDate":"2017-07-05"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.PHONE_DESC_AMY;","lastModifiedDate":"2017-07-05"},{"lineNumber":16,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.PHONE_DESC_BOB;","lastModifiedDate":"2017-07-05"},{"lineNumber":17,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.PREAMBLE_NON_EMPTY;","lastModifiedDate":"2017-12-23"},{"lineNumber":18,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.PREAMBLE_WHITESPACE;","lastModifiedDate":"2017-12-23"},{"lineNumber":19,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.TAG_DESC_FRIEND;","lastModifiedDate":"2017-07-05"},{"lineNumber":20,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.TAG_DESC_HUSBAND;","lastModifiedDate":"2017-07-05"},{"lineNumber":21,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_EMAIL_BOB;","lastModifiedDate":"2017-07-05"},{"lineNumber":22,"author":{"gitId":"aditi2313"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_ID_BOB;","lastModifiedDate":"2022-03-11"},{"lineNumber":23,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_NAME_BOB;","lastModifiedDate":"2017-07-05"},{"lineNumber":24,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_PHONE_BOB;","lastModifiedDate":"2017-07-05"},{"lineNumber":25,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_TAG_FRIEND;","lastModifiedDate":"2017-07-05"},{"lineNumber":26,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_TAG_HUSBAND;","lastModifiedDate":"2017-07-05"},{"lineNumber":27,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CommandParserTestUtil.assertParseFailure;","lastModifiedDate":"2017-07-06"},{"lineNumber":28,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CommandParserTestUtil.assertParseSuccess;","lastModifiedDate":"2017-07-06"},{"lineNumber":29,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.TypicalPersons.AMY;","lastModifiedDate":"2018-07-25"},{"lineNumber":30,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.TypicalPersons.BOB;","lastModifiedDate":"2018-07-25"},{"lineNumber":31,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":32,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":34,"author":{"gitId":"aditi2313"},"content":"import seedu.address.logic.commands.patron.AddPatronCommand;","lastModifiedDate":"2022-03-11"},{"lineNumber":35,"author":{"gitId":"aditi2313"},"content":"import seedu.address.logic.parser.patron.AddPatronCommandParser;","lastModifiedDate":"2022-03-11"},{"lineNumber":36,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Email;","lastModifiedDate":"2017-06-15"},{"lineNumber":37,"author":{"gitId":"aditi2313"},"content":"import seedu.address.model.person.Id;","lastModifiedDate":"2022-03-11"},{"lineNumber":38,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Name;","lastModifiedDate":"2017-06-15"},{"lineNumber":39,"author":{"gitId":"aditi2313"},"content":"import seedu.address.model.person.Patron;","lastModifiedDate":"2022-03-09"},{"lineNumber":40,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Phone;","lastModifiedDate":"2017-06-15"},{"lineNumber":41,"author":{"gitId":"-"},"content":"import seedu.address.model.tag.Tag;","lastModifiedDate":"2017-06-15"},{"lineNumber":42,"author":{"gitId":"-"},"content":"import seedu.address.testutil.PersonBuilder;","lastModifiedDate":"2017-06-15"},{"lineNumber":43,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":44,"author":{"gitId":"-"},"content":"public class AddCommandParserTest {","lastModifiedDate":"2017-06-15"},{"lineNumber":45,"author":{"gitId":"aditi2313"},"content":"    private AddPatronCommandParser parser \u003d new AddPatronCommandParser();","lastModifiedDate":"2022-03-11"},{"lineNumber":46,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-15"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    public void parse_allFieldsPresent_success() {","lastModifiedDate":"2017-08-15"},{"lineNumber":49,"author":{"gitId":"aditi2313"},"content":"        Patron expectedPerson \u003d new PersonBuilder(BOB).withTags(VALID_TAG_FRIEND).build();","lastModifiedDate":"2022-03-09"},{"lineNumber":50,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":51,"author":{"gitId":"-"},"content":"        // whitespace only preamble","lastModifiedDate":"2017-12-23"},{"lineNumber":52,"author":{"gitId":"-"},"content":"        assertParseSuccess(parser, PREAMBLE_WHITESPACE + NAME_DESC_BOB + PHONE_DESC_BOB + EMAIL_DESC_BOB","lastModifiedDate":"2017-12-23"},{"lineNumber":53,"author":{"gitId":"aditi2313"},"content":"                + ID_DESC_BOB + TAG_DESC_FRIEND, new AddPatronCommand(expectedPerson));","lastModifiedDate":"2022-03-11"},{"lineNumber":54,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-12-23"},{"lineNumber":55,"author":{"gitId":"-"},"content":"        // multiple names - last name accepted","lastModifiedDate":"2017-06-15"},{"lineNumber":56,"author":{"gitId":"-"},"content":"        assertParseSuccess(parser, NAME_DESC_AMY + NAME_DESC_BOB + PHONE_DESC_BOB + EMAIL_DESC_BOB","lastModifiedDate":"2017-12-23"},{"lineNumber":57,"author":{"gitId":"aditi2313"},"content":"                + ID_DESC_BOB + TAG_DESC_FRIEND, new AddPatronCommand(expectedPerson));","lastModifiedDate":"2022-03-11"},{"lineNumber":58,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":59,"author":{"gitId":"-"},"content":"        // multiple phones - last phone accepted","lastModifiedDate":"2017-06-15"},{"lineNumber":60,"author":{"gitId":"-"},"content":"        assertParseSuccess(parser, NAME_DESC_BOB + PHONE_DESC_AMY + PHONE_DESC_BOB + EMAIL_DESC_BOB","lastModifiedDate":"2017-12-23"},{"lineNumber":61,"author":{"gitId":"aditi2313"},"content":"                + ID_DESC_BOB + TAG_DESC_FRIEND, new AddPatronCommand(expectedPerson));","lastModifiedDate":"2022-03-11"},{"lineNumber":62,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":63,"author":{"gitId":"-"},"content":"        // multiple emails - last email accepted","lastModifiedDate":"2017-06-15"},{"lineNumber":64,"author":{"gitId":"-"},"content":"        assertParseSuccess(parser, NAME_DESC_BOB + PHONE_DESC_BOB + EMAIL_DESC_AMY + EMAIL_DESC_BOB","lastModifiedDate":"2017-12-23"},{"lineNumber":65,"author":{"gitId":"aditi2313"},"content":"                + ID_DESC_BOB + TAG_DESC_FRIEND, new AddPatronCommand(expectedPerson));","lastModifiedDate":"2022-03-11"},{"lineNumber":66,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":67,"author":{"gitId":"-"},"content":"        // multiple addresses - last address accepted","lastModifiedDate":"2017-06-15"},{"lineNumber":68,"author":{"gitId":"aditi2313"},"content":"        assertParseSuccess(parser, NAME_DESC_BOB + PHONE_DESC_BOB + EMAIL_DESC_BOB + ID_DESC_AMY","lastModifiedDate":"2022-03-09"},{"lineNumber":69,"author":{"gitId":"aditi2313"},"content":"                + ID_DESC_BOB + TAG_DESC_FRIEND, new AddPatronCommand(expectedPerson));","lastModifiedDate":"2022-03-11"},{"lineNumber":70,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":71,"author":{"gitId":"-"},"content":"        // multiple tags - all accepted","lastModifiedDate":"2017-06-15"},{"lineNumber":72,"author":{"gitId":"aditi2313"},"content":"        Patron expectedPersonMultipleTags \u003d new PersonBuilder(BOB).withTags(VALID_TAG_FRIEND, VALID_TAG_HUSBAND)","lastModifiedDate":"2022-03-09"},{"lineNumber":73,"author":{"gitId":"-"},"content":"                .build();","lastModifiedDate":"2018-07-25"},{"lineNumber":74,"author":{"gitId":"aditi2313"},"content":"        assertParseSuccess(parser, NAME_DESC_BOB + PHONE_DESC_BOB + EMAIL_DESC_BOB + ID_DESC_BOB","lastModifiedDate":"2022-03-09"},{"lineNumber":75,"author":{"gitId":"aditi2313"},"content":"                + TAG_DESC_HUSBAND + TAG_DESC_FRIEND, new AddPatronCommand(expectedPersonMultipleTags));","lastModifiedDate":"2022-03-11"},{"lineNumber":76,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-15"},{"lineNumber":77,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":78,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-15"},{"lineNumber":79,"author":{"gitId":"-"},"content":"    public void parse_optionalFieldsMissing_success() {","lastModifiedDate":"2017-08-15"},{"lineNumber":80,"author":{"gitId":"-"},"content":"        // zero tags","lastModifiedDate":"2017-06-15"},{"lineNumber":81,"author":{"gitId":"aditi2313"},"content":"        Patron expectedPerson \u003d new PersonBuilder(AMY).withTags().build();","lastModifiedDate":"2022-03-09"},{"lineNumber":82,"author":{"gitId":"aditi2313"},"content":"        assertParseSuccess(parser, NAME_DESC_AMY + PHONE_DESC_AMY + EMAIL_DESC_AMY + ID_DESC_AMY,","lastModifiedDate":"2022-03-09"},{"lineNumber":83,"author":{"gitId":"aditi2313"},"content":"                new AddPatronCommand(expectedPerson));","lastModifiedDate":"2022-03-11"},{"lineNumber":84,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-15"},{"lineNumber":85,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":86,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-15"},{"lineNumber":87,"author":{"gitId":"-"},"content":"    public void parse_compulsoryFieldMissing_failure() {","lastModifiedDate":"2017-06-15"},{"lineNumber":88,"author":{"gitId":"aditi2313"},"content":"        String expectedMessage \u003d String.format(MESSAGE_INVALID_COMMAND_FORMAT, AddPatronCommand.MESSAGE_USAGE);","lastModifiedDate":"2022-03-11"},{"lineNumber":89,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":90,"author":{"gitId":"-"},"content":"        // missing name prefix","lastModifiedDate":"2017-06-15"},{"lineNumber":91,"author":{"gitId":"aditi2313"},"content":"        assertParseFailure(parser, VALID_NAME_BOB + PHONE_DESC_BOB + EMAIL_DESC_BOB + ID_DESC_BOB,","lastModifiedDate":"2022-03-09"},{"lineNumber":92,"author":{"gitId":"-"},"content":"                expectedMessage);","lastModifiedDate":"2017-12-23"},{"lineNumber":93,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":94,"author":{"gitId":"-"},"content":"        // missing phone prefix","lastModifiedDate":"2017-06-15"},{"lineNumber":95,"author":{"gitId":"aditi2313"},"content":"        assertParseFailure(parser, NAME_DESC_BOB + VALID_PHONE_BOB + EMAIL_DESC_BOB + ID_DESC_BOB,","lastModifiedDate":"2022-03-09"},{"lineNumber":96,"author":{"gitId":"-"},"content":"                expectedMessage);","lastModifiedDate":"2017-12-23"},{"lineNumber":97,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":98,"author":{"gitId":"-"},"content":"        // missing email prefix","lastModifiedDate":"2017-06-15"},{"lineNumber":99,"author":{"gitId":"aditi2313"},"content":"        assertParseFailure(parser, NAME_DESC_BOB + PHONE_DESC_BOB + VALID_EMAIL_BOB + ID_DESC_BOB,","lastModifiedDate":"2022-03-09"},{"lineNumber":100,"author":{"gitId":"-"},"content":"                expectedMessage);","lastModifiedDate":"2017-12-23"},{"lineNumber":101,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":102,"author":{"gitId":"-"},"content":"        // missing address prefix","lastModifiedDate":"2017-06-15"},{"lineNumber":103,"author":{"gitId":"aditi2313"},"content":"        assertParseFailure(parser, NAME_DESC_BOB + PHONE_DESC_BOB + EMAIL_DESC_BOB + VALID_ID_BOB,","lastModifiedDate":"2022-03-09"},{"lineNumber":104,"author":{"gitId":"-"},"content":"                expectedMessage);","lastModifiedDate":"2017-12-23"},{"lineNumber":105,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":106,"author":{"gitId":"-"},"content":"        // all prefixes missing","lastModifiedDate":"2017-06-15"},{"lineNumber":107,"author":{"gitId":"aditi2313"},"content":"        assertParseFailure(parser, VALID_NAME_BOB + VALID_PHONE_BOB + VALID_EMAIL_BOB + VALID_ID_BOB,","lastModifiedDate":"2022-03-09"},{"lineNumber":108,"author":{"gitId":"-"},"content":"                expectedMessage);","lastModifiedDate":"2017-12-23"},{"lineNumber":109,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-15"},{"lineNumber":110,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":111,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-15"},{"lineNumber":112,"author":{"gitId":"-"},"content":"    public void parse_invalidValue_failure() {","lastModifiedDate":"2017-06-15"},{"lineNumber":113,"author":{"gitId":"-"},"content":"        // invalid name","lastModifiedDate":"2017-06-15"},{"lineNumber":114,"author":{"gitId":"aditi2313"},"content":"        assertParseFailure(parser, INVALID_NAME_DESC + PHONE_DESC_BOB + EMAIL_DESC_BOB + ID_DESC_BOB","lastModifiedDate":"2022-03-09"},{"lineNumber":115,"author":{"gitId":"-"},"content":"                + TAG_DESC_HUSBAND + TAG_DESC_FRIEND, Name.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2018-09-22"},{"lineNumber":116,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":117,"author":{"gitId":"-"},"content":"        // invalid phone","lastModifiedDate":"2017-06-15"},{"lineNumber":118,"author":{"gitId":"aditi2313"},"content":"        assertParseFailure(parser, NAME_DESC_BOB + INVALID_PHONE_DESC + EMAIL_DESC_BOB + ID_DESC_BOB","lastModifiedDate":"2022-03-09"},{"lineNumber":119,"author":{"gitId":"-"},"content":"                + TAG_DESC_HUSBAND + TAG_DESC_FRIEND, Phone.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2018-09-22"},{"lineNumber":120,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":121,"author":{"gitId":"-"},"content":"        // invalid email","lastModifiedDate":"2017-06-15"},{"lineNumber":122,"author":{"gitId":"aditi2313"},"content":"        assertParseFailure(parser, NAME_DESC_BOB + PHONE_DESC_BOB + INVALID_EMAIL_DESC + ID_DESC_BOB","lastModifiedDate":"2022-03-09"},{"lineNumber":123,"author":{"gitId":"-"},"content":"                + TAG_DESC_HUSBAND + TAG_DESC_FRIEND, Email.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2018-09-22"},{"lineNumber":124,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":125,"author":{"gitId":"-"},"content":"        // invalid address","lastModifiedDate":"2017-06-15"},{"lineNumber":126,"author":{"gitId":"aditi2313"},"content":"        assertParseFailure(parser, NAME_DESC_BOB + PHONE_DESC_BOB + EMAIL_DESC_BOB + INVALID_ID_DESC","lastModifiedDate":"2022-03-09"},{"lineNumber":127,"author":{"gitId":"aditi2313"},"content":"                + TAG_DESC_HUSBAND + TAG_DESC_FRIEND, Id.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2022-03-09"},{"lineNumber":128,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":129,"author":{"gitId":"-"},"content":"        // invalid tag","lastModifiedDate":"2017-06-15"},{"lineNumber":130,"author":{"gitId":"aditi2313"},"content":"        assertParseFailure(parser, NAME_DESC_BOB + PHONE_DESC_BOB + EMAIL_DESC_BOB + ID_DESC_BOB","lastModifiedDate":"2022-03-09"},{"lineNumber":131,"author":{"gitId":"-"},"content":"                + INVALID_TAG_DESC + VALID_TAG_FRIEND, Tag.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2018-09-22"},{"lineNumber":132,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":133,"author":{"gitId":"-"},"content":"        // two invalid values, only first invalid value reported","lastModifiedDate":"2017-06-15"},{"lineNumber":134,"author":{"gitId":"aditi2313"},"content":"        assertParseFailure(parser, INVALID_NAME_DESC + PHONE_DESC_BOB + EMAIL_DESC_BOB + INVALID_ID_DESC,","lastModifiedDate":"2022-03-09"},{"lineNumber":135,"author":{"gitId":"-"},"content":"                Name.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2018-09-22"},{"lineNumber":136,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-12-23"},{"lineNumber":137,"author":{"gitId":"-"},"content":"        // non-empty preamble","lastModifiedDate":"2017-12-23"},{"lineNumber":138,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, PREAMBLE_NON_EMPTY + NAME_DESC_BOB + PHONE_DESC_BOB + EMAIL_DESC_BOB","lastModifiedDate":"2017-12-23"},{"lineNumber":139,"author":{"gitId":"aditi2313"},"content":"                + ID_DESC_BOB + TAG_DESC_HUSBAND + TAG_DESC_FRIEND,","lastModifiedDate":"2022-03-09"},{"lineNumber":140,"author":{"gitId":"aditi2313"},"content":"                String.format(MESSAGE_INVALID_COMMAND_FORMAT, AddPatronCommand.MESSAGE_USAGE));","lastModifiedDate":"2022-03-11"},{"lineNumber":141,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-15"},{"lineNumber":142,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-06-15"}],"authorContributionMap":{"-":105,"aditi2313":37}},{"path":"src/test/java/seedu/address/logic/parser/AddressBookParserTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2017-05-24"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-24"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static seedu.address.commons.core.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2017-06-27"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import static seedu.address.commons.core.Messages.MESSAGE_UNKNOWN_COMMAND;","lastModifiedDate":"2017-05-24"},{"lineNumber":7,"author":{"gitId":"aditi2313"},"content":"import static seedu.address.logic.commands.Command.PATRON_COMMAND_GROUP;","lastModifiedDate":"2022-03-11"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.Assert.assertThrows;","lastModifiedDate":"2019-03-23"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.TypicalIndexes.INDEX_FIRST_PERSON;","lastModifiedDate":"2017-08-05"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-24"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import java.util.Arrays;","lastModifiedDate":"2017-06-27"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import java.util.List;","lastModifiedDate":"2017-06-12"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import java.util.stream.Collectors;","lastModifiedDate":"2017-06-27"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-24"},{"lineNumber":17,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.ClearCommand;","lastModifiedDate":"2017-06-27"},{"lineNumber":18,"author":{"gitId":"aditi2313"},"content":"import seedu.address.logic.commands.Command;","lastModifiedDate":"2022-03-11"},{"lineNumber":19,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.ExitCommand;","lastModifiedDate":"2017-06-27"},{"lineNumber":20,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.HelpCommand;","lastModifiedDate":"2017-06-27"},{"lineNumber":21,"author":{"gitId":"aditi2313"},"content":"import seedu.address.logic.commands.patron.AddPatronCommand;","lastModifiedDate":"2022-03-11"},{"lineNumber":22,"author":{"gitId":"aditi2313"},"content":"import seedu.address.logic.commands.patron.DeletePatronCommand;","lastModifiedDate":"2022-03-11"},{"lineNumber":23,"author":{"gitId":"aditi2313"},"content":"import seedu.address.logic.commands.patron.EditPatronCommand;","lastModifiedDate":"2022-03-11"},{"lineNumber":24,"author":{"gitId":"aditi2313"},"content":"import seedu.address.logic.commands.patron.EditPatronCommand.EditPersonDescriptor;","lastModifiedDate":"2022-03-11"},{"lineNumber":25,"author":{"gitId":"aditi2313"},"content":"import seedu.address.logic.commands.patron.FindPatronCommand;","lastModifiedDate":"2022-03-11"},{"lineNumber":26,"author":{"gitId":"aditi2313"},"content":"import seedu.address.logic.commands.patron.ListPatronCommand;","lastModifiedDate":"2022-03-11"},{"lineNumber":27,"author":{"gitId":"-"},"content":"import seedu.address.logic.parser.exceptions.ParseException;","lastModifiedDate":"2017-05-24"},{"lineNumber":28,"author":{"gitId":"-"},"content":"import seedu.address.model.person.NameContainsKeywordsPredicate;","lastModifiedDate":"2017-06-12"},{"lineNumber":29,"author":{"gitId":"aditi2313"},"content":"import seedu.address.model.person.Patron;","lastModifiedDate":"2022-03-09"},{"lineNumber":30,"author":{"gitId":"-"},"content":"import seedu.address.testutil.EditPersonDescriptorBuilder;","lastModifiedDate":"2017-06-27"},{"lineNumber":31,"author":{"gitId":"-"},"content":"import seedu.address.testutil.PersonBuilder;","lastModifiedDate":"2017-06-27"},{"lineNumber":32,"author":{"gitId":"-"},"content":"import seedu.address.testutil.PersonUtil;","lastModifiedDate":"2017-06-27"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-24"},{"lineNumber":34,"author":{"gitId":"-"},"content":"public class AddressBookParserTest {","lastModifiedDate":"2017-07-07"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    private final AddressBookParser parser \u003d new AddressBookParser();","lastModifiedDate":"2017-07-07"},{"lineNumber":37,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-24"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-27"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    public void parseCommand_add() throws Exception {","lastModifiedDate":"2017-06-27"},{"lineNumber":40,"author":{"gitId":"aditi2313"},"content":"        Patron person \u003d new PersonBuilder().build();","lastModifiedDate":"2022-03-09"},{"lineNumber":41,"author":{"gitId":"aditi2313"},"content":"        AddPatronCommand command \u003d (AddPatronCommand) parser.parseCommand(PersonUtil.getAddCommand(person));","lastModifiedDate":"2022-03-11"},{"lineNumber":42,"author":{"gitId":"aditi2313"},"content":"        assertEquals(new AddPatronCommand(person), command);","lastModifiedDate":"2022-03-11"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-27"},{"lineNumber":44,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-27"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    public void parseCommand_clear() throws Exception {","lastModifiedDate":"2017-06-27"},{"lineNumber":47,"author":{"gitId":"-"},"content":"        assertTrue(parser.parseCommand(ClearCommand.COMMAND_WORD) instanceof ClearCommand);","lastModifiedDate":"2022-03-11"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        assertTrue(parser.parseCommand(ClearCommand.COMMAND_WORD + \" 3\") instanceof ClearCommand);","lastModifiedDate":"2022-03-11"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-27"},{"lineNumber":50,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-27"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    public void parseCommand_delete() throws Exception {","lastModifiedDate":"2017-06-27"},{"lineNumber":53,"author":{"gitId":"aditi2313"},"content":"        DeletePatronCommand command \u003d (DeletePatronCommand) parser.parseCommand(","lastModifiedDate":"2022-03-11"},{"lineNumber":54,"author":{"gitId":"aditi2313"},"content":"                PATRON_COMMAND_GROUP + \" \" + Command.DELETE_COMMAND_WORD + \" \"","lastModifiedDate":"2022-03-11"},{"lineNumber":55,"author":{"gitId":"aditi2313"},"content":"                        + INDEX_FIRST_PERSON.getOneBased());","lastModifiedDate":"2022-03-11"},{"lineNumber":56,"author":{"gitId":"aditi2313"},"content":"        assertEquals(new DeletePatronCommand(INDEX_FIRST_PERSON), command);","lastModifiedDate":"2022-03-11"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-27"},{"lineNumber":58,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":59,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-27"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    public void parseCommand_edit() throws Exception {","lastModifiedDate":"2017-06-27"},{"lineNumber":61,"author":{"gitId":"aditi2313"},"content":"        Patron person \u003d new PersonBuilder().build();","lastModifiedDate":"2022-03-09"},{"lineNumber":62,"author":{"gitId":"-"},"content":"        EditPersonDescriptor descriptor \u003d new EditPersonDescriptorBuilder(person).build();","lastModifiedDate":"2017-06-27"},{"lineNumber":63,"author":{"gitId":"aditi2313"},"content":"        EditPatronCommand command \u003d (EditPatronCommand) parser.parseCommand(PATRON_COMMAND_GROUP + \" \"","lastModifiedDate":"2022-03-11"},{"lineNumber":64,"author":{"gitId":"aditi2313"},"content":"                + Command.EDIT_COMMAND_WORD + \" \"","lastModifiedDate":"2022-03-11"},{"lineNumber":65,"author":{"gitId":"-"},"content":"                + INDEX_FIRST_PERSON.getOneBased() + \" \" + PersonUtil.getEditPersonDescriptorDetails(descriptor));","lastModifiedDate":"2018-03-26"},{"lineNumber":66,"author":{"gitId":"aditi2313"},"content":"        assertEquals(new EditPatronCommand(INDEX_FIRST_PERSON, descriptor), command);","lastModifiedDate":"2022-03-11"},{"lineNumber":67,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-27"},{"lineNumber":68,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":69,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-27"},{"lineNumber":70,"author":{"gitId":"-"},"content":"    public void parseCommand_exit() throws Exception {","lastModifiedDate":"2017-06-27"},{"lineNumber":71,"author":{"gitId":"-"},"content":"        assertTrue(parser.parseCommand(ExitCommand.COMMAND_WORD) instanceof ExitCommand);","lastModifiedDate":"2022-03-11"},{"lineNumber":72,"author":{"gitId":"-"},"content":"        assertTrue(parser.parseCommand(ExitCommand.COMMAND_WORD + \" 3\") instanceof ExitCommand);","lastModifiedDate":"2022-03-11"},{"lineNumber":73,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-27"},{"lineNumber":74,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":75,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-27"},{"lineNumber":76,"author":{"gitId":"-"},"content":"    public void parseCommand_find() throws Exception {","lastModifiedDate":"2017-06-27"},{"lineNumber":77,"author":{"gitId":"-"},"content":"        List\u003cString\u003e keywords \u003d Arrays.asList(\"foo\", \"bar\", \"baz\");","lastModifiedDate":"2017-06-12"},{"lineNumber":78,"author":{"gitId":"aditi2313"},"content":"        FindPatronCommand command \u003d (FindPatronCommand) parser.parseCommand(","lastModifiedDate":"2022-03-11"},{"lineNumber":79,"author":{"gitId":"aditi2313"},"content":"                PATRON_COMMAND_GROUP + \" \" + Command.FIND_COMMAND_WORD + \" \"","lastModifiedDate":"2022-03-11"},{"lineNumber":80,"author":{"gitId":"aditi2313"},"content":"                        + keywords.stream().collect(Collectors.joining(\" \")));","lastModifiedDate":"2022-03-11"},{"lineNumber":81,"author":{"gitId":"aditi2313"},"content":"        assertEquals(new FindPatronCommand(new NameContainsKeywordsPredicate(keywords)), command);","lastModifiedDate":"2022-03-11"},{"lineNumber":82,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-27"},{"lineNumber":83,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":84,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-27"},{"lineNumber":85,"author":{"gitId":"-"},"content":"    public void parseCommand_help() throws Exception {","lastModifiedDate":"2017-06-27"},{"lineNumber":86,"author":{"gitId":"-"},"content":"        assertTrue(parser.parseCommand(HelpCommand.COMMAND_WORD) instanceof HelpCommand);","lastModifiedDate":"2022-03-11"},{"lineNumber":87,"author":{"gitId":"-"},"content":"        assertTrue(parser.parseCommand(HelpCommand.COMMAND_WORD + \" 3\") instanceof HelpCommand);","lastModifiedDate":"2022-03-11"},{"lineNumber":88,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-27"},{"lineNumber":89,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":90,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-27"},{"lineNumber":91,"author":{"gitId":"-"},"content":"    public void parseCommand_list() throws Exception {","lastModifiedDate":"2017-06-27"},{"lineNumber":92,"author":{"gitId":"aditi2313"},"content":"        assertTrue(parser.parseCommand(PATRON_COMMAND_GROUP + \" \"","lastModifiedDate":"2022-03-11"},{"lineNumber":93,"author":{"gitId":"aditi2313"},"content":"                + Command.LIST_COMMAND_WORD) instanceof ListPatronCommand);","lastModifiedDate":"2022-03-11"},{"lineNumber":94,"author":{"gitId":"aditi2313"},"content":"        assertTrue(parser.parseCommand(PATRON_COMMAND_GROUP + \" \"","lastModifiedDate":"2022-03-11"},{"lineNumber":95,"author":{"gitId":"aditi2313"},"content":"                + Command.LIST_COMMAND_WORD + \" 3\") instanceof ListPatronCommand);","lastModifiedDate":"2022-03-11"},{"lineNumber":96,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-27"},{"lineNumber":97,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":98,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-27"},{"lineNumber":99,"author":{"gitId":"-"},"content":"    public void parseCommand_unrecognisedInput_throwsParseException() {","lastModifiedDate":"2019-03-23"},{"lineNumber":100,"author":{"gitId":"-"},"content":"        assertThrows(ParseException.class, String.format(MESSAGE_INVALID_COMMAND_FORMAT, HelpCommand.MESSAGE_USAGE), ()","lastModifiedDate":"2019-03-23"},{"lineNumber":101,"author":{"gitId":"-"},"content":"            -\u003e parser.parseCommand(\"\"));","lastModifiedDate":"2022-03-11"},{"lineNumber":102,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-27"},{"lineNumber":103,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":104,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-27"},{"lineNumber":105,"author":{"gitId":"-"},"content":"    public void parseCommand_unknownCommand_throwsParseException() {","lastModifiedDate":"2019-03-23"},{"lineNumber":106,"author":{"gitId":"aditi2313"},"content":"        assertThrows(ParseException.class, MESSAGE_UNKNOWN_COMMAND, () -\u003e","lastModifiedDate":"2022-03-11"},{"lineNumber":107,"author":{"gitId":"aditi2313"},"content":"            parser.parseCommand(\"unknownCommand\"));","lastModifiedDate":"2022-03-11"},{"lineNumber":108,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-27"},{"lineNumber":109,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-05-24"}],"authorContributionMap":{"-":79,"aditi2313":30}},{"path":"src/test/java/seedu/address/logic/parser/DeleteCommandParserTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2017-06-09"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-09"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static seedu.address.commons.core.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2017-06-09"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CommandParserTestUtil.assertParseFailure;","lastModifiedDate":"2017-07-06"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CommandParserTestUtil.assertParseSuccess;","lastModifiedDate":"2017-07-06"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.TypicalIndexes.INDEX_FIRST_PERSON;","lastModifiedDate":"2017-08-05"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-09"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-09"},{"lineNumber":10,"author":{"gitId":"aditi2313"},"content":"import seedu.address.logic.commands.patron.DeletePatronCommand;","lastModifiedDate":"2022-03-11"},{"lineNumber":11,"author":{"gitId":"aditi2313"},"content":"import seedu.address.logic.parser.patron.DeletePatronCommandParser;","lastModifiedDate":"2022-03-11"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-09"},{"lineNumber":13,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-06-09"},{"lineNumber":14,"author":{"gitId":"-"},"content":" * As we are only doing white-box testing, our test cases do not cover path variations","lastModifiedDate":"2017-06-09"},{"lineNumber":15,"author":{"gitId":"-"},"content":" * outside of the DeleteCommand code. For example, inputs \"1\" and \"1 abc\" take the","lastModifiedDate":"2017-06-09"},{"lineNumber":16,"author":{"gitId":"-"},"content":" * same path through the DeleteCommand, and therefore we test only one of them.","lastModifiedDate":"2017-06-09"},{"lineNumber":17,"author":{"gitId":"-"},"content":" * The path variation for those two cases occur inside the ParserUtil, and","lastModifiedDate":"2017-06-09"},{"lineNumber":18,"author":{"gitId":"-"},"content":" * therefore should be covered by the ParserUtilTest.","lastModifiedDate":"2017-06-09"},{"lineNumber":19,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-06-09"},{"lineNumber":20,"author":{"gitId":"-"},"content":"public class DeleteCommandParserTest {","lastModifiedDate":"2017-06-09"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-09"},{"lineNumber":22,"author":{"gitId":"aditi2313"},"content":"    private DeletePatronCommandParser parser \u003d new DeletePatronCommandParser();","lastModifiedDate":"2022-03-11"},{"lineNumber":23,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-09"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-09"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    public void parse_validArgs_returnsDeleteCommand() {","lastModifiedDate":"2017-08-15"},{"lineNumber":26,"author":{"gitId":"aditi2313"},"content":"        assertParseSuccess(parser, \"1\", new DeletePatronCommand(INDEX_FIRST_PERSON));","lastModifiedDate":"2022-03-11"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-09"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-09"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-09"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    public void parse_invalidArgs_throwsParseException() {","lastModifiedDate":"2017-08-15"},{"lineNumber":31,"author":{"gitId":"aditi2313"},"content":"        assertParseFailure(parser, \"a\", String.format(MESSAGE_INVALID_COMMAND_FORMAT,","lastModifiedDate":"2022-03-11"},{"lineNumber":32,"author":{"gitId":"aditi2313"},"content":"                DeletePatronCommand.MESSAGE_USAGE));","lastModifiedDate":"2022-03-11"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-09"},{"lineNumber":34,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-06-09"}],"authorContributionMap":{"-":28,"aditi2313":6}},{"path":"src/test/java/seedu/address/logic/parser/EditCommandParserTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2017-05-04"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static seedu.address.commons.core.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2017-05-04"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.EMAIL_DESC_AMY;","lastModifiedDate":"2017-07-05"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.EMAIL_DESC_BOB;","lastModifiedDate":"2017-07-05"},{"lineNumber":6,"author":{"gitId":"aditi2313"},"content":"import static seedu.address.logic.commands.CommandTestUtil.ID_DESC_AMY;","lastModifiedDate":"2022-03-11"},{"lineNumber":7,"author":{"gitId":"aditi2313"},"content":"import static seedu.address.logic.commands.CommandTestUtil.ID_DESC_BOB;","lastModifiedDate":"2022-03-11"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.INVALID_EMAIL_DESC;","lastModifiedDate":"2017-07-05"},{"lineNumber":9,"author":{"gitId":"aditi2313"},"content":"import static seedu.address.logic.commands.CommandTestUtil.INVALID_ID_DESC;","lastModifiedDate":"2022-03-11"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.INVALID_NAME_DESC;","lastModifiedDate":"2017-07-05"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.INVALID_PHONE_DESC;","lastModifiedDate":"2017-07-05"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.INVALID_TAG_DESC;","lastModifiedDate":"2017-07-05"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.NAME_DESC_AMY;","lastModifiedDate":"2017-07-05"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.PHONE_DESC_AMY;","lastModifiedDate":"2017-07-05"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.PHONE_DESC_BOB;","lastModifiedDate":"2017-07-05"},{"lineNumber":16,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.TAG_DESC_FRIEND;","lastModifiedDate":"2017-07-05"},{"lineNumber":17,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.TAG_DESC_HUSBAND;","lastModifiedDate":"2017-07-05"},{"lineNumber":18,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_EMAIL_AMY;","lastModifiedDate":"2017-07-05"},{"lineNumber":19,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_EMAIL_BOB;","lastModifiedDate":"2017-07-05"},{"lineNumber":20,"author":{"gitId":"aditi2313"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_ID_AMY;","lastModifiedDate":"2022-03-11"},{"lineNumber":21,"author":{"gitId":"aditi2313"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_ID_BOB;","lastModifiedDate":"2022-03-11"},{"lineNumber":22,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_NAME_AMY;","lastModifiedDate":"2017-07-05"},{"lineNumber":23,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_PHONE_AMY;","lastModifiedDate":"2017-07-05"},{"lineNumber":24,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_PHONE_BOB;","lastModifiedDate":"2017-07-05"},{"lineNumber":25,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_TAG_FRIEND;","lastModifiedDate":"2017-07-05"},{"lineNumber":26,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_TAG_HUSBAND;","lastModifiedDate":"2017-07-05"},{"lineNumber":27,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_TAG;","lastModifiedDate":"2017-05-04"},{"lineNumber":28,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CommandParserTestUtil.assertParseFailure;","lastModifiedDate":"2017-07-06"},{"lineNumber":29,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CommandParserTestUtil.assertParseSuccess;","lastModifiedDate":"2017-07-06"},{"lineNumber":30,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.TypicalIndexes.INDEX_FIRST_PERSON;","lastModifiedDate":"2017-08-05"},{"lineNumber":31,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.TypicalIndexes.INDEX_SECOND_PERSON;","lastModifiedDate":"2017-08-05"},{"lineNumber":32,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.TypicalIndexes.INDEX_THIRD_PERSON;","lastModifiedDate":"2017-08-05"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":34,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":36,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.index.Index;","lastModifiedDate":"2017-05-25"},{"lineNumber":37,"author":{"gitId":"aditi2313"},"content":"import seedu.address.logic.commands.patron.EditPatronCommand;","lastModifiedDate":"2022-03-11"},{"lineNumber":38,"author":{"gitId":"aditi2313"},"content":"import seedu.address.logic.commands.patron.EditPatronCommand.EditPersonDescriptor;","lastModifiedDate":"2022-03-11"},{"lineNumber":39,"author":{"gitId":"aditi2313"},"content":"import seedu.address.logic.parser.patron.EditPatronCommandParser;","lastModifiedDate":"2022-03-11"},{"lineNumber":40,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Email;","lastModifiedDate":"2017-05-04"},{"lineNumber":41,"author":{"gitId":"aditi2313"},"content":"import seedu.address.model.person.Id;","lastModifiedDate":"2022-03-11"},{"lineNumber":42,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Name;","lastModifiedDate":"2017-05-04"},{"lineNumber":43,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Phone;","lastModifiedDate":"2017-05-04"},{"lineNumber":44,"author":{"gitId":"-"},"content":"import seedu.address.model.tag.Tag;","lastModifiedDate":"2017-05-04"},{"lineNumber":45,"author":{"gitId":"-"},"content":"import seedu.address.testutil.EditPersonDescriptorBuilder;","lastModifiedDate":"2017-05-04"},{"lineNumber":46,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":47,"author":{"gitId":"-"},"content":"public class EditCommandParserTest {","lastModifiedDate":"2017-05-04"},{"lineNumber":48,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    private static final String TAG_EMPTY \u003d \" \" + PREFIX_TAG;","lastModifiedDate":"2017-05-04"},{"lineNumber":50,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    private static final String MESSAGE_INVALID_FORMAT \u003d","lastModifiedDate":"2017-05-04"},{"lineNumber":52,"author":{"gitId":"aditi2313"},"content":"            String.format(MESSAGE_INVALID_COMMAND_FORMAT, EditPatronCommand.MESSAGE_USAGE);","lastModifiedDate":"2022-03-11"},{"lineNumber":53,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":54,"author":{"gitId":"aditi2313"},"content":"    private EditPatronCommandParser parser \u003d new EditPatronCommandParser();","lastModifiedDate":"2022-03-11"},{"lineNumber":55,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-04"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    public void parse_missingParts_failure() {","lastModifiedDate":"2017-05-04"},{"lineNumber":58,"author":{"gitId":"-"},"content":"        // no index specified","lastModifiedDate":"2017-05-04"},{"lineNumber":59,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, VALID_NAME_AMY, MESSAGE_INVALID_FORMAT);","lastModifiedDate":"2017-07-06"},{"lineNumber":60,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":61,"author":{"gitId":"-"},"content":"        // no field specified","lastModifiedDate":"2017-05-04"},{"lineNumber":62,"author":{"gitId":"aditi2313"},"content":"        assertParseFailure(parser, \"1\", EditPatronCommand.MESSAGE_NOT_EDITED);","lastModifiedDate":"2022-03-11"},{"lineNumber":63,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":64,"author":{"gitId":"-"},"content":"        // no index and no field specified","lastModifiedDate":"2017-05-04"},{"lineNumber":65,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, \"\", MESSAGE_INVALID_FORMAT);","lastModifiedDate":"2017-07-06"},{"lineNumber":66,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-04"},{"lineNumber":67,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":68,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-04"},{"lineNumber":69,"author":{"gitId":"-"},"content":"    public void parse_invalidPreamble_failure() {","lastModifiedDate":"2017-06-06"},{"lineNumber":70,"author":{"gitId":"-"},"content":"        // negative index","lastModifiedDate":"2017-05-04"},{"lineNumber":71,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, \"-5\" + NAME_DESC_AMY, MESSAGE_INVALID_FORMAT);","lastModifiedDate":"2017-07-06"},{"lineNumber":72,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":73,"author":{"gitId":"-"},"content":"        // zero index","lastModifiedDate":"2017-06-06"},{"lineNumber":74,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, \"0\" + NAME_DESC_AMY, MESSAGE_INVALID_FORMAT);","lastModifiedDate":"2017-07-06"},{"lineNumber":75,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-06"},{"lineNumber":76,"author":{"gitId":"-"},"content":"        // invalid arguments being parsed as preamble","lastModifiedDate":"2017-06-06"},{"lineNumber":77,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, \"1 some random string\", MESSAGE_INVALID_FORMAT);","lastModifiedDate":"2017-07-06"},{"lineNumber":78,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-06"},{"lineNumber":79,"author":{"gitId":"-"},"content":"        // invalid prefix being parsed as preamble","lastModifiedDate":"2017-06-06"},{"lineNumber":80,"author":{"gitId":"aditi2313"},"content":"        assertParseFailure(parser, \"1 z/ string\", MESSAGE_INVALID_FORMAT);","lastModifiedDate":"2022-03-09"},{"lineNumber":81,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-04"},{"lineNumber":82,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":83,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-04"},{"lineNumber":84,"author":{"gitId":"-"},"content":"    public void parse_invalidValue_failure() {","lastModifiedDate":"2017-05-04"},{"lineNumber":85,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, \"1\" + INVALID_NAME_DESC, Name.MESSAGE_CONSTRAINTS); // invalid name","lastModifiedDate":"2018-09-22"},{"lineNumber":86,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, \"1\" + INVALID_PHONE_DESC, Phone.MESSAGE_CONSTRAINTS); // invalid phone","lastModifiedDate":"2018-09-22"},{"lineNumber":87,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, \"1\" + INVALID_EMAIL_DESC, Email.MESSAGE_CONSTRAINTS); // invalid email","lastModifiedDate":"2018-09-22"},{"lineNumber":88,"author":{"gitId":"aditi2313"},"content":"        assertParseFailure(parser, \"1\" + INVALID_ID_DESC, Id.MESSAGE_CONSTRAINTS); // invalid address","lastModifiedDate":"2022-03-09"},{"lineNumber":89,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, \"1\" + INVALID_TAG_DESC, Tag.MESSAGE_CONSTRAINTS); // invalid tag","lastModifiedDate":"2018-09-22"},{"lineNumber":90,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":91,"author":{"gitId":"-"},"content":"        // invalid phone followed by valid email","lastModifiedDate":"2017-05-04"},{"lineNumber":92,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, \"1\" + INVALID_PHONE_DESC + EMAIL_DESC_AMY, Phone.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2018-09-22"},{"lineNumber":93,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":94,"author":{"gitId":"-"},"content":"        // valid phone followed by invalid phone. The test case for invalid phone followed by valid phone","lastModifiedDate":"2017-05-04"},{"lineNumber":95,"author":{"gitId":"-"},"content":"        // is tested at {@code parse_invalidValueFollowedByValidValue_success()}","lastModifiedDate":"2017-05-04"},{"lineNumber":96,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, \"1\" + PHONE_DESC_BOB + INVALID_PHONE_DESC, Phone.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2018-09-22"},{"lineNumber":97,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":98,"author":{"gitId":"-"},"content":"        // while parsing {@code PREFIX_TAG} alone will reset the tags of the {@code Person} being edited,","lastModifiedDate":"2017-05-04"},{"lineNumber":99,"author":{"gitId":"-"},"content":"        // parsing it together with a valid tag results in error","lastModifiedDate":"2017-05-04"},{"lineNumber":100,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, \"1\" + TAG_DESC_FRIEND + TAG_DESC_HUSBAND + TAG_EMPTY, Tag.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2018-09-22"},{"lineNumber":101,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, \"1\" + TAG_DESC_FRIEND + TAG_EMPTY + TAG_DESC_HUSBAND, Tag.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2018-09-22"},{"lineNumber":102,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, \"1\" + TAG_EMPTY + TAG_DESC_FRIEND + TAG_DESC_HUSBAND, Tag.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2018-09-22"},{"lineNumber":103,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":104,"author":{"gitId":"-"},"content":"        // multiple invalid values, but only the first invalid value is captured","lastModifiedDate":"2017-05-04"},{"lineNumber":105,"author":{"gitId":"aditi2313"},"content":"        assertParseFailure(parser, \"1\" + INVALID_NAME_DESC + INVALID_EMAIL_DESC + VALID_ID_AMY + VALID_PHONE_AMY,","lastModifiedDate":"2022-03-09"},{"lineNumber":106,"author":{"gitId":"-"},"content":"                Name.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2018-09-22"},{"lineNumber":107,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-04"},{"lineNumber":108,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":109,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-04"},{"lineNumber":110,"author":{"gitId":"-"},"content":"    public void parse_allFieldsSpecified_success() {","lastModifiedDate":"2017-08-15"},{"lineNumber":111,"author":{"gitId":"-"},"content":"        Index targetIndex \u003d INDEX_SECOND_PERSON;","lastModifiedDate":"2017-05-25"},{"lineNumber":112,"author":{"gitId":"-"},"content":"        String userInput \u003d targetIndex.getOneBased() + PHONE_DESC_BOB + TAG_DESC_HUSBAND","lastModifiedDate":"2017-06-06"},{"lineNumber":113,"author":{"gitId":"aditi2313"},"content":"                + EMAIL_DESC_AMY + ID_DESC_AMY + NAME_DESC_AMY + TAG_DESC_FRIEND;","lastModifiedDate":"2022-03-09"},{"lineNumber":114,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":115,"author":{"gitId":"-"},"content":"        EditPersonDescriptor descriptor \u003d new EditPersonDescriptorBuilder().withName(VALID_NAME_AMY)","lastModifiedDate":"2017-05-04"},{"lineNumber":116,"author":{"gitId":"aditi2313"},"content":"                .withPhone(VALID_PHONE_BOB).withEmail(VALID_EMAIL_AMY).withId(VALID_ID_AMY)","lastModifiedDate":"2022-03-10"},{"lineNumber":117,"author":{"gitId":"-"},"content":"                .withTags(VALID_TAG_HUSBAND, VALID_TAG_FRIEND).build();","lastModifiedDate":"2017-05-04"},{"lineNumber":118,"author":{"gitId":"aditi2313"},"content":"        EditPatronCommand expectedCommand \u003d new EditPatronCommand(targetIndex, descriptor);","lastModifiedDate":"2022-03-11"},{"lineNumber":119,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":120,"author":{"gitId":"-"},"content":"        assertParseSuccess(parser, userInput, expectedCommand);","lastModifiedDate":"2017-07-06"},{"lineNumber":121,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-04"},{"lineNumber":122,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":123,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-04"},{"lineNumber":124,"author":{"gitId":"-"},"content":"    public void parse_someFieldsSpecified_success() {","lastModifiedDate":"2017-08-15"},{"lineNumber":125,"author":{"gitId":"-"},"content":"        Index targetIndex \u003d INDEX_FIRST_PERSON;","lastModifiedDate":"2017-05-25"},{"lineNumber":126,"author":{"gitId":"-"},"content":"        String userInput \u003d targetIndex.getOneBased() + PHONE_DESC_BOB + EMAIL_DESC_AMY;","lastModifiedDate":"2017-05-25"},{"lineNumber":127,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":128,"author":{"gitId":"-"},"content":"        EditPersonDescriptor descriptor \u003d new EditPersonDescriptorBuilder().withPhone(VALID_PHONE_BOB)","lastModifiedDate":"2017-05-04"},{"lineNumber":129,"author":{"gitId":"-"},"content":"                .withEmail(VALID_EMAIL_AMY).build();","lastModifiedDate":"2017-05-04"},{"lineNumber":130,"author":{"gitId":"aditi2313"},"content":"        EditPatronCommand expectedCommand \u003d new EditPatronCommand(targetIndex, descriptor);","lastModifiedDate":"2022-03-11"},{"lineNumber":131,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":132,"author":{"gitId":"-"},"content":"        assertParseSuccess(parser, userInput, expectedCommand);","lastModifiedDate":"2017-07-06"},{"lineNumber":133,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-04"},{"lineNumber":134,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":135,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-04"},{"lineNumber":136,"author":{"gitId":"-"},"content":"    public void parse_oneFieldSpecified_success() {","lastModifiedDate":"2017-08-15"},{"lineNumber":137,"author":{"gitId":"-"},"content":"        // name","lastModifiedDate":"2017-05-04"},{"lineNumber":138,"author":{"gitId":"-"},"content":"        Index targetIndex \u003d INDEX_THIRD_PERSON;","lastModifiedDate":"2017-05-25"},{"lineNumber":139,"author":{"gitId":"-"},"content":"        String userInput \u003d targetIndex.getOneBased() + NAME_DESC_AMY;","lastModifiedDate":"2017-05-25"},{"lineNumber":140,"author":{"gitId":"-"},"content":"        EditPersonDescriptor descriptor \u003d new EditPersonDescriptorBuilder().withName(VALID_NAME_AMY).build();","lastModifiedDate":"2017-05-04"},{"lineNumber":141,"author":{"gitId":"aditi2313"},"content":"        EditPatronCommand expectedCommand \u003d new EditPatronCommand(targetIndex, descriptor);","lastModifiedDate":"2022-03-11"},{"lineNumber":142,"author":{"gitId":"-"},"content":"        assertParseSuccess(parser, userInput, expectedCommand);","lastModifiedDate":"2017-07-06"},{"lineNumber":143,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":144,"author":{"gitId":"-"},"content":"        // phone","lastModifiedDate":"2017-05-04"},{"lineNumber":145,"author":{"gitId":"-"},"content":"        userInput \u003d targetIndex.getOneBased() + PHONE_DESC_AMY;","lastModifiedDate":"2017-05-25"},{"lineNumber":146,"author":{"gitId":"-"},"content":"        descriptor \u003d new EditPersonDescriptorBuilder().withPhone(VALID_PHONE_AMY).build();","lastModifiedDate":"2017-05-04"},{"lineNumber":147,"author":{"gitId":"aditi2313"},"content":"        expectedCommand \u003d new EditPatronCommand(targetIndex, descriptor);","lastModifiedDate":"2022-03-11"},{"lineNumber":148,"author":{"gitId":"-"},"content":"        assertParseSuccess(parser, userInput, expectedCommand);","lastModifiedDate":"2017-07-06"},{"lineNumber":149,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":150,"author":{"gitId":"-"},"content":"        // email","lastModifiedDate":"2017-05-04"},{"lineNumber":151,"author":{"gitId":"-"},"content":"        userInput \u003d targetIndex.getOneBased() + EMAIL_DESC_AMY;","lastModifiedDate":"2017-05-25"},{"lineNumber":152,"author":{"gitId":"-"},"content":"        descriptor \u003d new EditPersonDescriptorBuilder().withEmail(VALID_EMAIL_AMY).build();","lastModifiedDate":"2017-05-04"},{"lineNumber":153,"author":{"gitId":"aditi2313"},"content":"        expectedCommand \u003d new EditPatronCommand(targetIndex, descriptor);","lastModifiedDate":"2022-03-11"},{"lineNumber":154,"author":{"gitId":"-"},"content":"        assertParseSuccess(parser, userInput, expectedCommand);","lastModifiedDate":"2017-07-06"},{"lineNumber":155,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":156,"author":{"gitId":"-"},"content":"        // address","lastModifiedDate":"2017-05-04"},{"lineNumber":157,"author":{"gitId":"aditi2313"},"content":"        userInput \u003d targetIndex.getOneBased() + ID_DESC_AMY;","lastModifiedDate":"2022-03-09"},{"lineNumber":158,"author":{"gitId":"aditi2313"},"content":"        descriptor \u003d new EditPersonDescriptorBuilder().withId(VALID_ID_AMY).build();","lastModifiedDate":"2022-03-10"},{"lineNumber":159,"author":{"gitId":"aditi2313"},"content":"        expectedCommand \u003d new EditPatronCommand(targetIndex, descriptor);","lastModifiedDate":"2022-03-11"},{"lineNumber":160,"author":{"gitId":"-"},"content":"        assertParseSuccess(parser, userInput, expectedCommand);","lastModifiedDate":"2017-07-06"},{"lineNumber":161,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":162,"author":{"gitId":"-"},"content":"        // tags","lastModifiedDate":"2017-05-04"},{"lineNumber":163,"author":{"gitId":"-"},"content":"        userInput \u003d targetIndex.getOneBased() + TAG_DESC_FRIEND;","lastModifiedDate":"2017-05-25"},{"lineNumber":164,"author":{"gitId":"-"},"content":"        descriptor \u003d new EditPersonDescriptorBuilder().withTags(VALID_TAG_FRIEND).build();","lastModifiedDate":"2017-05-04"},{"lineNumber":165,"author":{"gitId":"aditi2313"},"content":"        expectedCommand \u003d new EditPatronCommand(targetIndex, descriptor);","lastModifiedDate":"2022-03-11"},{"lineNumber":166,"author":{"gitId":"-"},"content":"        assertParseSuccess(parser, userInput, expectedCommand);","lastModifiedDate":"2017-07-06"},{"lineNumber":167,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-04"},{"lineNumber":168,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":169,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-04"},{"lineNumber":170,"author":{"gitId":"-"},"content":"    public void parse_multipleRepeatedFields_acceptsLast() {","lastModifiedDate":"2017-08-15"},{"lineNumber":171,"author":{"gitId":"-"},"content":"        Index targetIndex \u003d INDEX_FIRST_PERSON;","lastModifiedDate":"2017-05-25"},{"lineNumber":172,"author":{"gitId":"aditi2313"},"content":"        String userInput \u003d targetIndex.getOneBased() + PHONE_DESC_AMY + ID_DESC_AMY + EMAIL_DESC_AMY","lastModifiedDate":"2022-03-09"},{"lineNumber":173,"author":{"gitId":"aditi2313"},"content":"                + TAG_DESC_FRIEND + PHONE_DESC_AMY + ID_DESC_AMY + EMAIL_DESC_AMY + TAG_DESC_FRIEND","lastModifiedDate":"2022-03-09"},{"lineNumber":174,"author":{"gitId":"aditi2313"},"content":"                + PHONE_DESC_BOB + ID_DESC_BOB + EMAIL_DESC_BOB + TAG_DESC_HUSBAND;","lastModifiedDate":"2022-03-09"},{"lineNumber":175,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":176,"author":{"gitId":"-"},"content":"        EditPersonDescriptor descriptor \u003d new EditPersonDescriptorBuilder().withPhone(VALID_PHONE_BOB)","lastModifiedDate":"2017-05-04"},{"lineNumber":177,"author":{"gitId":"aditi2313"},"content":"                .withEmail(VALID_EMAIL_BOB).withId(VALID_ID_BOB).withTags(VALID_TAG_FRIEND, VALID_TAG_HUSBAND)","lastModifiedDate":"2022-03-10"},{"lineNumber":178,"author":{"gitId":"-"},"content":"                .build();","lastModifiedDate":"2017-05-04"},{"lineNumber":179,"author":{"gitId":"aditi2313"},"content":"        EditPatronCommand expectedCommand \u003d new EditPatronCommand(targetIndex, descriptor);","lastModifiedDate":"2022-03-11"},{"lineNumber":180,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":181,"author":{"gitId":"-"},"content":"        assertParseSuccess(parser, userInput, expectedCommand);","lastModifiedDate":"2017-07-06"},{"lineNumber":182,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-04"},{"lineNumber":183,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":184,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-04"},{"lineNumber":185,"author":{"gitId":"-"},"content":"    public void parse_invalidValueFollowedByValidValue_success() {","lastModifiedDate":"2017-08-15"},{"lineNumber":186,"author":{"gitId":"-"},"content":"        // no other valid values specified","lastModifiedDate":"2017-05-04"},{"lineNumber":187,"author":{"gitId":"-"},"content":"        Index targetIndex \u003d INDEX_FIRST_PERSON;","lastModifiedDate":"2017-05-25"},{"lineNumber":188,"author":{"gitId":"-"},"content":"        String userInput \u003d targetIndex.getOneBased() + INVALID_PHONE_DESC + PHONE_DESC_BOB;","lastModifiedDate":"2017-05-25"},{"lineNumber":189,"author":{"gitId":"-"},"content":"        EditPersonDescriptor descriptor \u003d new EditPersonDescriptorBuilder().withPhone(VALID_PHONE_BOB).build();","lastModifiedDate":"2017-05-04"},{"lineNumber":190,"author":{"gitId":"aditi2313"},"content":"        EditPatronCommand expectedCommand \u003d new EditPatronCommand(targetIndex, descriptor);","lastModifiedDate":"2022-03-11"},{"lineNumber":191,"author":{"gitId":"-"},"content":"        assertParseSuccess(parser, userInput, expectedCommand);","lastModifiedDate":"2017-07-06"},{"lineNumber":192,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":193,"author":{"gitId":"-"},"content":"        // other valid values specified","lastModifiedDate":"2017-05-04"},{"lineNumber":194,"author":{"gitId":"aditi2313"},"content":"        userInput \u003d targetIndex.getOneBased() + EMAIL_DESC_BOB + INVALID_PHONE_DESC + ID_DESC_BOB","lastModifiedDate":"2022-03-09"},{"lineNumber":195,"author":{"gitId":"-"},"content":"                + PHONE_DESC_BOB;","lastModifiedDate":"2017-05-25"},{"lineNumber":196,"author":{"gitId":"-"},"content":"        descriptor \u003d new EditPersonDescriptorBuilder().withPhone(VALID_PHONE_BOB).withEmail(VALID_EMAIL_BOB)","lastModifiedDate":"2017-05-04"},{"lineNumber":197,"author":{"gitId":"aditi2313"},"content":"                .withId(VALID_ID_BOB).build();","lastModifiedDate":"2022-03-10"},{"lineNumber":198,"author":{"gitId":"aditi2313"},"content":"        expectedCommand \u003d new EditPatronCommand(targetIndex, descriptor);","lastModifiedDate":"2022-03-11"},{"lineNumber":199,"author":{"gitId":"-"},"content":"        assertParseSuccess(parser, userInput, expectedCommand);","lastModifiedDate":"2017-07-06"},{"lineNumber":200,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-04"},{"lineNumber":201,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":202,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-04"},{"lineNumber":203,"author":{"gitId":"-"},"content":"    public void parse_resetTags_success() {","lastModifiedDate":"2017-08-15"},{"lineNumber":204,"author":{"gitId":"-"},"content":"        Index targetIndex \u003d INDEX_THIRD_PERSON;","lastModifiedDate":"2017-05-25"},{"lineNumber":205,"author":{"gitId":"-"},"content":"        String userInput \u003d targetIndex.getOneBased() + TAG_EMPTY;","lastModifiedDate":"2017-05-25"},{"lineNumber":206,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":207,"author":{"gitId":"-"},"content":"        EditPersonDescriptor descriptor \u003d new EditPersonDescriptorBuilder().withTags().build();","lastModifiedDate":"2017-05-04"},{"lineNumber":208,"author":{"gitId":"aditi2313"},"content":"        EditPatronCommand expectedCommand \u003d new EditPatronCommand(targetIndex, descriptor);","lastModifiedDate":"2022-03-11"},{"lineNumber":209,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":210,"author":{"gitId":"-"},"content":"        assertParseSuccess(parser, userInput, expectedCommand);","lastModifiedDate":"2017-07-06"},{"lineNumber":211,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-04"},{"lineNumber":212,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-05-04"}],"authorContributionMap":{"-":176,"aditi2313":36}},{"path":"src/test/java/seedu/address/logic/parser/FindCommandParserTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2017-06-27"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static seedu.address.commons.core.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2017-06-27"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CommandParserTestUtil.assertParseFailure;","lastModifiedDate":"2017-07-06"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CommandParserTestUtil.assertParseSuccess;","lastModifiedDate":"2017-07-06"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import java.util.Arrays;","lastModifiedDate":"2017-06-27"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":11,"author":{"gitId":"aditi2313"},"content":"import seedu.address.logic.commands.patron.FindPatronCommand;","lastModifiedDate":"2022-03-11"},{"lineNumber":12,"author":{"gitId":"aditi2313"},"content":"import seedu.address.logic.parser.patron.FindPatronCommandParser;","lastModifiedDate":"2022-03-11"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import seedu.address.model.person.NameContainsKeywordsPredicate;","lastModifiedDate":"2017-06-12"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":15,"author":{"gitId":"-"},"content":"public class FindCommandParserTest {","lastModifiedDate":"2017-06-27"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":17,"author":{"gitId":"aditi2313"},"content":"    private FindPatronCommandParser parser \u003d new FindPatronCommandParser();","lastModifiedDate":"2022-03-11"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-27"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    public void parse_emptyArg_throwsParseException() {","lastModifiedDate":"2017-06-27"},{"lineNumber":21,"author":{"gitId":"aditi2313"},"content":"        assertParseFailure(parser, \"     \", String.format(MESSAGE_INVALID_COMMAND_FORMAT,","lastModifiedDate":"2022-03-11"},{"lineNumber":22,"author":{"gitId":"aditi2313"},"content":"                FindPatronCommand.MESSAGE_USAGE));","lastModifiedDate":"2022-03-11"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-27"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-27"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    public void parse_validArgs_returnsFindCommand() {","lastModifiedDate":"2017-08-15"},{"lineNumber":27,"author":{"gitId":"-"},"content":"        // no leading and trailing whitespaces","lastModifiedDate":"2017-06-27"},{"lineNumber":28,"author":{"gitId":"aditi2313"},"content":"        FindPatronCommand expectedFindCommand \u003d","lastModifiedDate":"2022-03-11"},{"lineNumber":29,"author":{"gitId":"aditi2313"},"content":"                new FindPatronCommand(new NameContainsKeywordsPredicate(Arrays.asList(\"Alice\", \"Bob\")));","lastModifiedDate":"2022-03-11"},{"lineNumber":30,"author":{"gitId":"-"},"content":"        assertParseSuccess(parser, \"Alice Bob\", expectedFindCommand);","lastModifiedDate":"2017-07-06"},{"lineNumber":31,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":32,"author":{"gitId":"-"},"content":"        // multiple whitespaces between keywords","lastModifiedDate":"2017-06-27"},{"lineNumber":33,"author":{"gitId":"-"},"content":"        assertParseSuccess(parser, \" \\n Alice \\n \\t Bob  \\t\", expectedFindCommand);","lastModifiedDate":"2017-07-06"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-27"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":36,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-06-27"}],"authorContributionMap":{"-":29,"aditi2313":7}},{"path":"src/test/java/seedu/address/logic/parser/ParserUtilTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2017-05-22"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.ParserUtil.MESSAGE_INVALID_INDEX;","lastModifiedDate":"2017-06-02"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.Assert.assertThrows;","lastModifiedDate":"2019-03-14"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.TypicalIndexes.INDEX_FIRST_PERSON;","lastModifiedDate":"2017-08-05"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import java.util.Arrays;","lastModifiedDate":"2017-05-22"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import java.util.Collections;","lastModifiedDate":"2017-05-22"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import java.util.HashSet;","lastModifiedDate":"2017-05-22"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import java.util.Set;","lastModifiedDate":"2017-05-22"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":16,"author":{"gitId":"-"},"content":"import seedu.address.logic.parser.exceptions.ParseException;","lastModifiedDate":"2018-07-10"},{"lineNumber":17,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Email;","lastModifiedDate":"2017-05-22"},{"lineNumber":18,"author":{"gitId":"aditi2313"},"content":"import seedu.address.model.person.Id;","lastModifiedDate":"2022-03-09"},{"lineNumber":19,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Name;","lastModifiedDate":"2017-05-22"},{"lineNumber":20,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Phone;","lastModifiedDate":"2017-05-22"},{"lineNumber":21,"author":{"gitId":"-"},"content":"import seedu.address.model.tag.Tag;","lastModifiedDate":"2017-05-22"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":23,"author":{"gitId":"-"},"content":"public class ParserUtilTest {","lastModifiedDate":"2017-05-22"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    private static final String INVALID_NAME \u003d \"R@chel\";","lastModifiedDate":"2017-05-22"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    private static final String INVALID_PHONE \u003d \"+651234\";","lastModifiedDate":"2017-05-22"},{"lineNumber":26,"author":{"gitId":"aditi2313"},"content":"    private static final String INVALID_ID \u003d \" \";","lastModifiedDate":"2022-03-09"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    private static final String INVALID_EMAIL \u003d \"example.com\";","lastModifiedDate":"2017-05-22"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    private static final String INVALID_TAG \u003d \"#friend\";","lastModifiedDate":"2017-05-22"},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    private static final String VALID_NAME \u003d \"Rachel Walker\";","lastModifiedDate":"2017-05-22"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    private static final String VALID_PHONE \u003d \"123456\";","lastModifiedDate":"2017-05-22"},{"lineNumber":32,"author":{"gitId":"aditi2313"},"content":"    private static final String VALID_ID \u003d \"A0123456H\";","lastModifiedDate":"2022-03-10"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    private static final String VALID_EMAIL \u003d \"rachel@example.com\";","lastModifiedDate":"2017-05-22"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    private static final String VALID_TAG_1 \u003d \"friend\";","lastModifiedDate":"2017-05-22"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    private static final String VALID_TAG_2 \u003d \"neighbour\";","lastModifiedDate":"2017-05-22"},{"lineNumber":36,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    private static final String WHITESPACE \u003d \" \\t\\r\\n\";","lastModifiedDate":"2017-05-29"},{"lineNumber":38,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-29"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-26"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    public void parseIndex_invalidInput_throwsParseException() {","lastModifiedDate":"2019-03-23"},{"lineNumber":41,"author":{"gitId":"-"},"content":"        assertThrows(ParseException.class, () -\u003e ParserUtil.parseIndex(\"10 a\"));","lastModifiedDate":"2019-03-23"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-26"},{"lineNumber":43,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-26"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-26"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    public void parseIndex_outOfRangeInput_throwsParseException() {","lastModifiedDate":"2019-03-23"},{"lineNumber":46,"author":{"gitId":"-"},"content":"        assertThrows(ParseException.class, MESSAGE_INVALID_INDEX, ()","lastModifiedDate":"2019-03-23"},{"lineNumber":47,"author":{"gitId":"-"},"content":"            -\u003e ParserUtil.parseIndex(Long.toString(Integer.MAX_VALUE + 1)));","lastModifiedDate":"2019-03-23"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-26"},{"lineNumber":49,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-26"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-26"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    public void parseIndex_validInput_success() throws Exception {","lastModifiedDate":"2017-05-26"},{"lineNumber":52,"author":{"gitId":"-"},"content":"        // No whitespaces","lastModifiedDate":"2017-05-26"},{"lineNumber":53,"author":{"gitId":"-"},"content":"        assertEquals(INDEX_FIRST_PERSON, ParserUtil.parseIndex(\"1\"));","lastModifiedDate":"2017-05-25"},{"lineNumber":54,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-26"},{"lineNumber":55,"author":{"gitId":"-"},"content":"        // Leading and trailing whitespaces","lastModifiedDate":"2017-05-26"},{"lineNumber":56,"author":{"gitId":"-"},"content":"        assertEquals(INDEX_FIRST_PERSON, ParserUtil.parseIndex(\"  1  \"));","lastModifiedDate":"2017-05-25"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-26"},{"lineNumber":58,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-26"},{"lineNumber":59,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-22"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    public void parseName_null_throwsNullPointerException() {","lastModifiedDate":"2017-05-29"},{"lineNumber":61,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e ParserUtil.parseName((String) null));","lastModifiedDate":"2019-03-14"},{"lineNumber":62,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-22"},{"lineNumber":63,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":64,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-22"},{"lineNumber":65,"author":{"gitId":"-"},"content":"    public void parseName_invalidValue_throwsParseException() {","lastModifiedDate":"2018-07-10"},{"lineNumber":66,"author":{"gitId":"-"},"content":"        assertThrows(ParseException.class, () -\u003e ParserUtil.parseName(INVALID_NAME));","lastModifiedDate":"2019-03-14"},{"lineNumber":67,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-22"},{"lineNumber":68,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":69,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-22"},{"lineNumber":70,"author":{"gitId":"-"},"content":"    public void parseName_validValueWithoutWhitespace_returnsName() throws Exception {","lastModifiedDate":"2017-05-29"},{"lineNumber":71,"author":{"gitId":"-"},"content":"        Name expectedName \u003d new Name(VALID_NAME);","lastModifiedDate":"2017-05-22"},{"lineNumber":72,"author":{"gitId":"-"},"content":"        assertEquals(expectedName, ParserUtil.parseName(VALID_NAME));","lastModifiedDate":"2017-05-29"},{"lineNumber":73,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-29"},{"lineNumber":74,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":75,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-29"},{"lineNumber":76,"author":{"gitId":"-"},"content":"    public void parseName_validValueWithWhitespace_returnsTrimmedName() throws Exception {","lastModifiedDate":"2017-05-29"},{"lineNumber":77,"author":{"gitId":"-"},"content":"        String nameWithWhitespace \u003d WHITESPACE + VALID_NAME + WHITESPACE;","lastModifiedDate":"2017-05-29"},{"lineNumber":78,"author":{"gitId":"-"},"content":"        Name expectedName \u003d new Name(VALID_NAME);","lastModifiedDate":"2017-05-29"},{"lineNumber":79,"author":{"gitId":"-"},"content":"        assertEquals(expectedName, ParserUtil.parseName(nameWithWhitespace));","lastModifiedDate":"2017-05-29"},{"lineNumber":80,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-22"},{"lineNumber":81,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":82,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-22"},{"lineNumber":83,"author":{"gitId":"-"},"content":"    public void parsePhone_null_throwsNullPointerException() {","lastModifiedDate":"2017-05-30"},{"lineNumber":84,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e ParserUtil.parsePhone((String) null));","lastModifiedDate":"2019-03-14"},{"lineNumber":85,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-22"},{"lineNumber":86,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":87,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-22"},{"lineNumber":88,"author":{"gitId":"-"},"content":"    public void parsePhone_invalidValue_throwsParseException() {","lastModifiedDate":"2018-07-10"},{"lineNumber":89,"author":{"gitId":"-"},"content":"        assertThrows(ParseException.class, () -\u003e ParserUtil.parsePhone(INVALID_PHONE));","lastModifiedDate":"2019-03-14"},{"lineNumber":90,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-22"},{"lineNumber":91,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":92,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-22"},{"lineNumber":93,"author":{"gitId":"-"},"content":"    public void parsePhone_validValueWithoutWhitespace_returnsPhone() throws Exception {","lastModifiedDate":"2017-05-30"},{"lineNumber":94,"author":{"gitId":"-"},"content":"        Phone expectedPhone \u003d new Phone(VALID_PHONE);","lastModifiedDate":"2017-05-22"},{"lineNumber":95,"author":{"gitId":"-"},"content":"        assertEquals(expectedPhone, ParserUtil.parsePhone(VALID_PHONE));","lastModifiedDate":"2017-05-30"},{"lineNumber":96,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-30"},{"lineNumber":97,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":98,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-30"},{"lineNumber":99,"author":{"gitId":"-"},"content":"    public void parsePhone_validValueWithWhitespace_returnsTrimmedPhone() throws Exception {","lastModifiedDate":"2017-05-30"},{"lineNumber":100,"author":{"gitId":"-"},"content":"        String phoneWithWhitespace \u003d WHITESPACE + VALID_PHONE + WHITESPACE;","lastModifiedDate":"2017-05-30"},{"lineNumber":101,"author":{"gitId":"-"},"content":"        Phone expectedPhone \u003d new Phone(VALID_PHONE);","lastModifiedDate":"2017-05-30"},{"lineNumber":102,"author":{"gitId":"-"},"content":"        assertEquals(expectedPhone, ParserUtil.parsePhone(phoneWithWhitespace));","lastModifiedDate":"2017-05-30"},{"lineNumber":103,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-22"},{"lineNumber":104,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":105,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-22"},{"lineNumber":106,"author":{"gitId":"-"},"content":"    public void parseAddress_null_throwsNullPointerException() {","lastModifiedDate":"2017-05-30"},{"lineNumber":107,"author":{"gitId":"aditi2313"},"content":"        assertThrows(NullPointerException.class, () -\u003e ParserUtil.parseId((String) null));","lastModifiedDate":"2022-03-09"},{"lineNumber":108,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-22"},{"lineNumber":109,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":110,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-22"},{"lineNumber":111,"author":{"gitId":"-"},"content":"    public void parseAddress_invalidValue_throwsParseException() {","lastModifiedDate":"2018-07-10"},{"lineNumber":112,"author":{"gitId":"aditi2313"},"content":"        assertThrows(ParseException.class, () -\u003e ParserUtil.parseId(INVALID_ID));","lastModifiedDate":"2022-03-09"},{"lineNumber":113,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-22"},{"lineNumber":114,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":115,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-22"},{"lineNumber":116,"author":{"gitId":"-"},"content":"    public void parseAddress_validValueWithoutWhitespace_returnsAddress() throws Exception {","lastModifiedDate":"2017-05-30"},{"lineNumber":117,"author":{"gitId":"aditi2313"},"content":"        Id expectedAddress \u003d new Id(VALID_ID);","lastModifiedDate":"2022-03-10"},{"lineNumber":118,"author":{"gitId":"aditi2313"},"content":"        assertEquals(expectedAddress, ParserUtil.parseId(VALID_ID));","lastModifiedDate":"2022-03-10"},{"lineNumber":119,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-30"},{"lineNumber":120,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":121,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-30"},{"lineNumber":122,"author":{"gitId":"-"},"content":"    public void parseAddress_validValueWithWhitespace_returnsTrimmedAddress() throws Exception {","lastModifiedDate":"2017-05-30"},{"lineNumber":123,"author":{"gitId":"aditi2313"},"content":"        String addressWithWhitespace \u003d WHITESPACE + VALID_ID + WHITESPACE;","lastModifiedDate":"2022-03-10"},{"lineNumber":124,"author":{"gitId":"aditi2313"},"content":"        Id expectedAddress \u003d new Id(VALID_ID);","lastModifiedDate":"2022-03-10"},{"lineNumber":125,"author":{"gitId":"aditi2313"},"content":"        assertEquals(expectedAddress, ParserUtil.parseId(addressWithWhitespace));","lastModifiedDate":"2022-03-09"},{"lineNumber":126,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-22"},{"lineNumber":127,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":128,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-22"},{"lineNumber":129,"author":{"gitId":"-"},"content":"    public void parseEmail_null_throwsNullPointerException() {","lastModifiedDate":"2017-05-30"},{"lineNumber":130,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e ParserUtil.parseEmail((String) null));","lastModifiedDate":"2019-03-14"},{"lineNumber":131,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-22"},{"lineNumber":132,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":133,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-22"},{"lineNumber":134,"author":{"gitId":"-"},"content":"    public void parseEmail_invalidValue_throwsParseException() {","lastModifiedDate":"2018-07-10"},{"lineNumber":135,"author":{"gitId":"-"},"content":"        assertThrows(ParseException.class, () -\u003e ParserUtil.parseEmail(INVALID_EMAIL));","lastModifiedDate":"2019-03-14"},{"lineNumber":136,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-22"},{"lineNumber":137,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":138,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-22"},{"lineNumber":139,"author":{"gitId":"-"},"content":"    public void parseEmail_validValueWithoutWhitespace_returnsEmail() throws Exception {","lastModifiedDate":"2017-05-30"},{"lineNumber":140,"author":{"gitId":"-"},"content":"        Email expectedEmail \u003d new Email(VALID_EMAIL);","lastModifiedDate":"2017-05-22"},{"lineNumber":141,"author":{"gitId":"-"},"content":"        assertEquals(expectedEmail, ParserUtil.parseEmail(VALID_EMAIL));","lastModifiedDate":"2017-05-30"},{"lineNumber":142,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-30"},{"lineNumber":143,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":144,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-30"},{"lineNumber":145,"author":{"gitId":"-"},"content":"    public void parseEmail_validValueWithWhitespace_returnsTrimmedEmail() throws Exception {","lastModifiedDate":"2017-05-30"},{"lineNumber":146,"author":{"gitId":"-"},"content":"        String emailWithWhitespace \u003d WHITESPACE + VALID_EMAIL + WHITESPACE;","lastModifiedDate":"2017-05-30"},{"lineNumber":147,"author":{"gitId":"-"},"content":"        Email expectedEmail \u003d new Email(VALID_EMAIL);","lastModifiedDate":"2017-05-30"},{"lineNumber":148,"author":{"gitId":"-"},"content":"        assertEquals(expectedEmail, ParserUtil.parseEmail(emailWithWhitespace));","lastModifiedDate":"2017-05-30"},{"lineNumber":149,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-22"},{"lineNumber":150,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":151,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-30"},{"lineNumber":152,"author":{"gitId":"-"},"content":"    public void parseTag_null_throwsNullPointerException() {","lastModifiedDate":"2019-03-23"},{"lineNumber":153,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e ParserUtil.parseTag(null));","lastModifiedDate":"2019-03-23"},{"lineNumber":154,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-30"},{"lineNumber":155,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-30"},{"lineNumber":156,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-30"},{"lineNumber":157,"author":{"gitId":"-"},"content":"    public void parseTag_invalidValue_throwsParseException() {","lastModifiedDate":"2019-03-23"},{"lineNumber":158,"author":{"gitId":"-"},"content":"        assertThrows(ParseException.class, () -\u003e ParserUtil.parseTag(INVALID_TAG));","lastModifiedDate":"2019-03-23"},{"lineNumber":159,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-30"},{"lineNumber":160,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-30"},{"lineNumber":161,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-30"},{"lineNumber":162,"author":{"gitId":"-"},"content":"    public void parseTag_validValueWithoutWhitespace_returnsTag() throws Exception {","lastModifiedDate":"2017-05-30"},{"lineNumber":163,"author":{"gitId":"-"},"content":"        Tag expectedTag \u003d new Tag(VALID_TAG_1);","lastModifiedDate":"2017-05-30"},{"lineNumber":164,"author":{"gitId":"-"},"content":"        assertEquals(expectedTag, ParserUtil.parseTag(VALID_TAG_1));","lastModifiedDate":"2017-05-30"},{"lineNumber":165,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-30"},{"lineNumber":166,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-30"},{"lineNumber":167,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-30"},{"lineNumber":168,"author":{"gitId":"-"},"content":"    public void parseTag_validValueWithWhitespace_returnsTrimmedTag() throws Exception {","lastModifiedDate":"2017-05-30"},{"lineNumber":169,"author":{"gitId":"-"},"content":"        String tagWithWhitespace \u003d WHITESPACE + VALID_TAG_1 + WHITESPACE;","lastModifiedDate":"2017-05-30"},{"lineNumber":170,"author":{"gitId":"-"},"content":"        Tag expectedTag \u003d new Tag(VALID_TAG_1);","lastModifiedDate":"2017-05-30"},{"lineNumber":171,"author":{"gitId":"-"},"content":"        assertEquals(expectedTag, ParserUtil.parseTag(tagWithWhitespace));","lastModifiedDate":"2017-05-30"},{"lineNumber":172,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-30"},{"lineNumber":173,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-30"},{"lineNumber":174,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-22"},{"lineNumber":175,"author":{"gitId":"-"},"content":"    public void parseTags_null_throwsNullPointerException() {","lastModifiedDate":"2019-03-23"},{"lineNumber":176,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e ParserUtil.parseTags(null));","lastModifiedDate":"2019-03-23"},{"lineNumber":177,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-22"},{"lineNumber":178,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":179,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-22"},{"lineNumber":180,"author":{"gitId":"-"},"content":"    public void parseTags_collectionWithInvalidTags_throwsParseException() {","lastModifiedDate":"2019-03-23"},{"lineNumber":181,"author":{"gitId":"-"},"content":"        assertThrows(ParseException.class, () -\u003e ParserUtil.parseTags(Arrays.asList(VALID_TAG_1, INVALID_TAG)));","lastModifiedDate":"2019-03-23"},{"lineNumber":182,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-22"},{"lineNumber":183,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":184,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-22"},{"lineNumber":185,"author":{"gitId":"-"},"content":"    public void parseTags_emptyCollection_returnsEmptySet() throws Exception {","lastModifiedDate":"2017-05-22"},{"lineNumber":186,"author":{"gitId":"-"},"content":"        assertTrue(ParserUtil.parseTags(Collections.emptyList()).isEmpty());","lastModifiedDate":"2017-05-22"},{"lineNumber":187,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-22"},{"lineNumber":188,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":189,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-22"},{"lineNumber":190,"author":{"gitId":"-"},"content":"    public void parseTags_collectionWithValidTags_returnsTagSet() throws Exception {","lastModifiedDate":"2017-05-22"},{"lineNumber":191,"author":{"gitId":"-"},"content":"        Set\u003cTag\u003e actualTagSet \u003d ParserUtil.parseTags(Arrays.asList(VALID_TAG_1, VALID_TAG_2));","lastModifiedDate":"2017-05-22"},{"lineNumber":192,"author":{"gitId":"-"},"content":"        Set\u003cTag\u003e expectedTagSet \u003d new HashSet\u003cTag\u003e(Arrays.asList(new Tag(VALID_TAG_1), new Tag(VALID_TAG_2)));","lastModifiedDate":"2017-05-22"},{"lineNumber":193,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":194,"author":{"gitId":"-"},"content":"        assertEquals(expectedTagSet, actualTagSet);","lastModifiedDate":"2017-05-22"},{"lineNumber":195,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-22"},{"lineNumber":196,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-05-22"}],"authorContributionMap":{"-":186,"aditi2313":10}},{"path":"src/test/java/seedu/address/logic/parser/book/AddBookCommandParserTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"bingsen0806"},"content":"package seedu.address.logic.parser.book;","lastModifiedDate":"2022-03-11"},{"lineNumber":2,"author":{"gitId":"bingsen0806"},"content":"","lastModifiedDate":"2022-03-11"},{"lineNumber":3,"author":{"gitId":"bingsen0806"},"content":"import static seedu.address.commons.core.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2022-03-11"},{"lineNumber":4,"author":{"gitId":"bingsen0806"},"content":"import static seedu.address.logic.commands.CommandTestUtil.AUTHOR_DESC_JK_ROWLING;","lastModifiedDate":"2022-03-11"},{"lineNumber":5,"author":{"gitId":"bingsen0806"},"content":"import static seedu.address.logic.commands.CommandTestUtil.AUTHOR_DESC_SUZANNE_COLLINS;","lastModifiedDate":"2022-03-11"},{"lineNumber":6,"author":{"gitId":"bingsen0806"},"content":"import static seedu.address.logic.commands.CommandTestUtil.BOOK_NAME_DESC_HARRY_POTTER;","lastModifiedDate":"2022-03-11"},{"lineNumber":7,"author":{"gitId":"bingsen0806"},"content":"import static seedu.address.logic.commands.CommandTestUtil.BOOK_NAME_DESC_HUNGER_GAMES;","lastModifiedDate":"2022-03-11"},{"lineNumber":8,"author":{"gitId":"bingsen0806"},"content":"import static seedu.address.logic.commands.CommandTestUtil.INVALID_AUTHOR_DESC;","lastModifiedDate":"2022-03-11"},{"lineNumber":9,"author":{"gitId":"bingsen0806"},"content":"import static seedu.address.logic.commands.CommandTestUtil.INVALID_BOOK_NAME_DESC;","lastModifiedDate":"2022-03-11"},{"lineNumber":10,"author":{"gitId":"bingsen0806"},"content":"import static seedu.address.logic.commands.CommandTestUtil.INVALID_ISBN_DESC;","lastModifiedDate":"2022-03-11"},{"lineNumber":11,"author":{"gitId":"bingsen0806"},"content":"import static seedu.address.logic.commands.CommandTestUtil.INVALID_TAG_DESC;","lastModifiedDate":"2022-03-11"},{"lineNumber":12,"author":{"gitId":"bingsen0806"},"content":"import static seedu.address.logic.commands.CommandTestUtil.ISBN_DESC_HARRY_POTTER;","lastModifiedDate":"2022-03-11"},{"lineNumber":13,"author":{"gitId":"bingsen0806"},"content":"import static seedu.address.logic.commands.CommandTestUtil.ISBN_DESC_HUNGER_GAMES;","lastModifiedDate":"2022-03-11"},{"lineNumber":14,"author":{"gitId":"bingsen0806"},"content":"import static seedu.address.logic.commands.CommandTestUtil.PREAMBLE_NON_EMPTY;","lastModifiedDate":"2022-03-11"},{"lineNumber":15,"author":{"gitId":"bingsen0806"},"content":"import static seedu.address.logic.commands.CommandTestUtil.PREAMBLE_WHITESPACE;","lastModifiedDate":"2022-03-11"},{"lineNumber":16,"author":{"gitId":"bingsen0806"},"content":"import static seedu.address.logic.commands.CommandTestUtil.TAG_DESC_ADVENTURE;","lastModifiedDate":"2022-03-11"},{"lineNumber":17,"author":{"gitId":"bingsen0806"},"content":"import static seedu.address.logic.commands.CommandTestUtil.TAG_DESC_MAGIC;","lastModifiedDate":"2022-03-11"},{"lineNumber":18,"author":{"gitId":"bingsen0806"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_AUTHOR_JK_ROWLING;","lastModifiedDate":"2022-03-11"},{"lineNumber":19,"author":{"gitId":"bingsen0806"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_AUTHOR_SUZANNE_COLLINS;","lastModifiedDate":"2022-03-11"},{"lineNumber":20,"author":{"gitId":"bingsen0806"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_BOOK_NAME_HARRY_POTTER;","lastModifiedDate":"2022-03-11"},{"lineNumber":21,"author":{"gitId":"bingsen0806"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_ISBN_HARRY_POTTER;","lastModifiedDate":"2022-03-11"},{"lineNumber":22,"author":{"gitId":"bingsen0806"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_TAG_ADVENTURE;","lastModifiedDate":"2022-03-11"},{"lineNumber":23,"author":{"gitId":"bingsen0806"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_TAG_MAGIC;","lastModifiedDate":"2022-03-11"},{"lineNumber":24,"author":{"gitId":"bingsen0806"},"content":"import static seedu.address.logic.parser.CommandParserTestUtil.assertParseFailure;","lastModifiedDate":"2022-03-11"},{"lineNumber":25,"author":{"gitId":"bingsen0806"},"content":"import static seedu.address.logic.parser.CommandParserTestUtil.assertParseSuccess;","lastModifiedDate":"2022-03-11"},{"lineNumber":26,"author":{"gitId":"bingsen0806"},"content":"import static seedu.address.testutil.TypicalBooks.HARRY_POTTER;","lastModifiedDate":"2022-03-11"},{"lineNumber":27,"author":{"gitId":"bingsen0806"},"content":"","lastModifiedDate":"2022-03-11"},{"lineNumber":28,"author":{"gitId":"bingsen0806"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2022-03-11"},{"lineNumber":29,"author":{"gitId":"bingsen0806"},"content":"","lastModifiedDate":"2022-03-11"},{"lineNumber":30,"author":{"gitId":"bingsen0806"},"content":"import seedu.address.logic.commands.book.AddBookCommand;","lastModifiedDate":"2022-03-11"},{"lineNumber":31,"author":{"gitId":"bingsen0806"},"content":"import seedu.address.model.book.Book;","lastModifiedDate":"2022-03-11"},{"lineNumber":32,"author":{"gitId":"bingsen0806"},"content":"import seedu.address.model.book.BookName;","lastModifiedDate":"2022-03-11"},{"lineNumber":33,"author":{"gitId":"bingsen0806"},"content":"import seedu.address.model.book.Isbn;","lastModifiedDate":"2022-03-11"},{"lineNumber":34,"author":{"gitId":"bingsen0806"},"content":"import seedu.address.model.tag.Tag;","lastModifiedDate":"2022-03-11"},{"lineNumber":35,"author":{"gitId":"bingsen0806"},"content":"import seedu.address.testutil.BookBuilder;","lastModifiedDate":"2022-03-11"},{"lineNumber":36,"author":{"gitId":"bingsen0806"},"content":"","lastModifiedDate":"2022-03-11"},{"lineNumber":37,"author":{"gitId":"bingsen0806"},"content":"public class AddBookCommandParserTest {","lastModifiedDate":"2022-03-11"},{"lineNumber":38,"author":{"gitId":"bingsen0806"},"content":"    private AddBookCommandParser parser \u003d new AddBookCommandParser();","lastModifiedDate":"2022-03-11"},{"lineNumber":39,"author":{"gitId":"bingsen0806"},"content":"","lastModifiedDate":"2022-03-11"},{"lineNumber":40,"author":{"gitId":"bingsen0806"},"content":"    @Test","lastModifiedDate":"2022-03-11"},{"lineNumber":41,"author":{"gitId":"bingsen0806"},"content":"    public void parse_allFieldsPresent_success() {","lastModifiedDate":"2022-03-11"},{"lineNumber":42,"author":{"gitId":"bingsen0806"},"content":"        Book expectedBook \u003d new BookBuilder(HARRY_POTTER).withTags(VALID_TAG_MAGIC).build();","lastModifiedDate":"2022-03-11"},{"lineNumber":43,"author":{"gitId":"bingsen0806"},"content":"","lastModifiedDate":"2022-03-11"},{"lineNumber":44,"author":{"gitId":"bingsen0806"},"content":"        // whitespace only preamble","lastModifiedDate":"2022-03-11"},{"lineNumber":45,"author":{"gitId":"bingsen0806"},"content":"        assertParseSuccess(parser, PREAMBLE_WHITESPACE + BOOK_NAME_DESC_HARRY_POTTER + ISBN_DESC_HARRY_POTTER","lastModifiedDate":"2022-03-11"},{"lineNumber":46,"author":{"gitId":"bingsen0806"},"content":"                + AUTHOR_DESC_JK_ROWLING + TAG_DESC_MAGIC, new AddBookCommand(expectedBook));","lastModifiedDate":"2022-03-11"},{"lineNumber":47,"author":{"gitId":"bingsen0806"},"content":"","lastModifiedDate":"2022-03-11"},{"lineNumber":48,"author":{"gitId":"bingsen0806"},"content":"        // multiple names - last name accepted","lastModifiedDate":"2022-03-11"},{"lineNumber":49,"author":{"gitId":"bingsen0806"},"content":"        assertParseSuccess(parser, BOOK_NAME_DESC_HUNGER_GAMES + BOOK_NAME_DESC_HARRY_POTTER","lastModifiedDate":"2022-03-11"},{"lineNumber":50,"author":{"gitId":"bingsen0806"},"content":"                + ISBN_DESC_HARRY_POTTER + AUTHOR_DESC_JK_ROWLING","lastModifiedDate":"2022-03-11"},{"lineNumber":51,"author":{"gitId":"bingsen0806"},"content":"                + TAG_DESC_MAGIC, new AddBookCommand(expectedBook));","lastModifiedDate":"2022-03-11"},{"lineNumber":52,"author":{"gitId":"bingsen0806"},"content":"","lastModifiedDate":"2022-03-11"},{"lineNumber":53,"author":{"gitId":"bingsen0806"},"content":"        // multiple isbn - last isbn accepted","lastModifiedDate":"2022-03-11"},{"lineNumber":54,"author":{"gitId":"bingsen0806"},"content":"        assertParseSuccess(parser, BOOK_NAME_DESC_HARRY_POTTER + ISBN_DESC_HUNGER_GAMES + ISBN_DESC_HARRY_POTTER","lastModifiedDate":"2022-03-11"},{"lineNumber":55,"author":{"gitId":"bingsen0806"},"content":"                + AUTHOR_DESC_JK_ROWLING + TAG_DESC_MAGIC, new AddBookCommand(expectedBook));","lastModifiedDate":"2022-03-11"},{"lineNumber":56,"author":{"gitId":"bingsen0806"},"content":"","lastModifiedDate":"2022-03-11"},{"lineNumber":57,"author":{"gitId":"bingsen0806"},"content":"        // multiple tags - all accepted","lastModifiedDate":"2022-03-11"},{"lineNumber":58,"author":{"gitId":"bingsen0806"},"content":"        Book expectedBookMultipleTags \u003d new BookBuilder(HARRY_POTTER).withTags(VALID_TAG_ADVENTURE, VALID_TAG_MAGIC)","lastModifiedDate":"2022-03-11"},{"lineNumber":59,"author":{"gitId":"bingsen0806"},"content":"                .build();","lastModifiedDate":"2022-03-11"},{"lineNumber":60,"author":{"gitId":"bingsen0806"},"content":"        assertParseSuccess(parser, BOOK_NAME_DESC_HARRY_POTTER + ISBN_DESC_HARRY_POTTER","lastModifiedDate":"2022-03-11"},{"lineNumber":61,"author":{"gitId":"bingsen0806"},"content":"                + AUTHOR_DESC_JK_ROWLING","lastModifiedDate":"2022-03-11"},{"lineNumber":62,"author":{"gitId":"bingsen0806"},"content":"                + TAG_DESC_ADVENTURE + TAG_DESC_MAGIC, new AddBookCommand(expectedBookMultipleTags));","lastModifiedDate":"2022-03-11"},{"lineNumber":63,"author":{"gitId":"bingsen0806"},"content":"","lastModifiedDate":"2022-03-11"},{"lineNumber":64,"author":{"gitId":"bingsen0806"},"content":"        // multiple authors - all accepted","lastModifiedDate":"2022-03-11"},{"lineNumber":65,"author":{"gitId":"bingsen0806"},"content":"        Book expectedBookMultipleAuthors \u003d new BookBuilder(HARRY_POTTER)","lastModifiedDate":"2022-03-11"},{"lineNumber":66,"author":{"gitId":"bingsen0806"},"content":"                .withAuthors(VALID_AUTHOR_JK_ROWLING, VALID_AUTHOR_SUZANNE_COLLINS)","lastModifiedDate":"2022-03-11"},{"lineNumber":67,"author":{"gitId":"bingsen0806"},"content":"                .withTags()","lastModifiedDate":"2022-03-11"},{"lineNumber":68,"author":{"gitId":"bingsen0806"},"content":"                .build();","lastModifiedDate":"2022-03-11"},{"lineNumber":69,"author":{"gitId":"bingsen0806"},"content":"        assertParseSuccess(parser, BOOK_NAME_DESC_HARRY_POTTER + ISBN_DESC_HARRY_POTTER","lastModifiedDate":"2022-03-11"},{"lineNumber":70,"author":{"gitId":"bingsen0806"},"content":"                + AUTHOR_DESC_JK_ROWLING + AUTHOR_DESC_SUZANNE_COLLINS,","lastModifiedDate":"2022-03-11"},{"lineNumber":71,"author":{"gitId":"bingsen0806"},"content":"                new AddBookCommand(expectedBookMultipleAuthors));","lastModifiedDate":"2022-03-11"},{"lineNumber":72,"author":{"gitId":"bingsen0806"},"content":"    }","lastModifiedDate":"2022-03-11"},{"lineNumber":73,"author":{"gitId":"bingsen0806"},"content":"","lastModifiedDate":"2022-03-11"},{"lineNumber":74,"author":{"gitId":"bingsen0806"},"content":"    @Test","lastModifiedDate":"2022-03-11"},{"lineNumber":75,"author":{"gitId":"bingsen0806"},"content":"    public void parse_optionalFieldsMissing_success() {","lastModifiedDate":"2022-03-11"},{"lineNumber":76,"author":{"gitId":"bingsen0806"},"content":"        // zero tags","lastModifiedDate":"2022-03-11"},{"lineNumber":77,"author":{"gitId":"bingsen0806"},"content":"        Book expectedBook \u003d new BookBuilder(HARRY_POTTER).withTags().build();","lastModifiedDate":"2022-03-11"},{"lineNumber":78,"author":{"gitId":"bingsen0806"},"content":"        assertParseSuccess(parser, BOOK_NAME_DESC_HARRY_POTTER + ISBN_DESC_HARRY_POTTER","lastModifiedDate":"2022-03-11"},{"lineNumber":79,"author":{"gitId":"bingsen0806"},"content":"                + AUTHOR_DESC_JK_ROWLING,","lastModifiedDate":"2022-03-11"},{"lineNumber":80,"author":{"gitId":"bingsen0806"},"content":"                new AddBookCommand(expectedBook));","lastModifiedDate":"2022-03-11"},{"lineNumber":81,"author":{"gitId":"bingsen0806"},"content":"","lastModifiedDate":"2022-03-11"},{"lineNumber":82,"author":{"gitId":"bingsen0806"},"content":"        // zero authors","lastModifiedDate":"2022-03-11"},{"lineNumber":83,"author":{"gitId":"bingsen0806"},"content":"        expectedBook \u003d new BookBuilder(HARRY_POTTER).withAuthors().build();","lastModifiedDate":"2022-03-11"},{"lineNumber":84,"author":{"gitId":"bingsen0806"},"content":"        assertParseSuccess(parser, BOOK_NAME_DESC_HARRY_POTTER + ISBN_DESC_HARRY_POTTER","lastModifiedDate":"2022-03-11"},{"lineNumber":85,"author":{"gitId":"bingsen0806"},"content":"                        + TAG_DESC_ADVENTURE + TAG_DESC_MAGIC,","lastModifiedDate":"2022-03-11"},{"lineNumber":86,"author":{"gitId":"bingsen0806"},"content":"                new AddBookCommand(expectedBook));","lastModifiedDate":"2022-03-11"},{"lineNumber":87,"author":{"gitId":"bingsen0806"},"content":"    }","lastModifiedDate":"2022-03-11"},{"lineNumber":88,"author":{"gitId":"bingsen0806"},"content":"","lastModifiedDate":"2022-03-11"},{"lineNumber":89,"author":{"gitId":"bingsen0806"},"content":"    @Test","lastModifiedDate":"2022-03-11"},{"lineNumber":90,"author":{"gitId":"bingsen0806"},"content":"    public void parse_compulsoryFieldMissing_failure() {","lastModifiedDate":"2022-03-11"},{"lineNumber":91,"author":{"gitId":"bingsen0806"},"content":"        String expectedMessage \u003d String.format(MESSAGE_INVALID_COMMAND_FORMAT, AddBookCommand.MESSAGE_USAGE);","lastModifiedDate":"2022-03-11"},{"lineNumber":92,"author":{"gitId":"bingsen0806"},"content":"","lastModifiedDate":"2022-03-11"},{"lineNumber":93,"author":{"gitId":"bingsen0806"},"content":"        // missing name prefix","lastModifiedDate":"2022-03-11"},{"lineNumber":94,"author":{"gitId":"bingsen0806"},"content":"        assertParseFailure(parser, VALID_BOOK_NAME_HARRY_POTTER + ISBN_DESC_HARRY_POTTER, expectedMessage);","lastModifiedDate":"2022-03-11"},{"lineNumber":95,"author":{"gitId":"bingsen0806"},"content":"","lastModifiedDate":"2022-03-11"},{"lineNumber":96,"author":{"gitId":"bingsen0806"},"content":"        // missing isbn prefix","lastModifiedDate":"2022-03-11"},{"lineNumber":97,"author":{"gitId":"bingsen0806"},"content":"        assertParseFailure(parser, BOOK_NAME_DESC_HARRY_POTTER + VALID_ISBN_HARRY_POTTER, expectedMessage);","lastModifiedDate":"2022-03-11"},{"lineNumber":98,"author":{"gitId":"bingsen0806"},"content":"","lastModifiedDate":"2022-03-11"},{"lineNumber":99,"author":{"gitId":"bingsen0806"},"content":"        // all prefixes missing","lastModifiedDate":"2022-03-11"},{"lineNumber":100,"author":{"gitId":"bingsen0806"},"content":"        assertParseFailure(parser, VALID_BOOK_NAME_HARRY_POTTER + VALID_ISBN_HARRY_POTTER, expectedMessage);","lastModifiedDate":"2022-03-11"},{"lineNumber":101,"author":{"gitId":"bingsen0806"},"content":"    }","lastModifiedDate":"2022-03-11"},{"lineNumber":102,"author":{"gitId":"bingsen0806"},"content":"","lastModifiedDate":"2022-03-11"},{"lineNumber":103,"author":{"gitId":"bingsen0806"},"content":"    @Test","lastModifiedDate":"2022-03-11"},{"lineNumber":104,"author":{"gitId":"bingsen0806"},"content":"    public void parse_invalidValue_failure() {","lastModifiedDate":"2022-03-11"},{"lineNumber":105,"author":{"gitId":"bingsen0806"},"content":"        // invalid name","lastModifiedDate":"2022-03-11"},{"lineNumber":106,"author":{"gitId":"bingsen0806"},"content":"        assertParseFailure(parser, INVALID_BOOK_NAME_DESC + ISBN_DESC_HARRY_POTTER + AUTHOR_DESC_JK_ROWLING","lastModifiedDate":"2022-03-11"},{"lineNumber":107,"author":{"gitId":"bingsen0806"},"content":"                + TAG_DESC_ADVENTURE + TAG_DESC_MAGIC, BookName.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2022-03-11"},{"lineNumber":108,"author":{"gitId":"bingsen0806"},"content":"","lastModifiedDate":"2022-03-11"},{"lineNumber":109,"author":{"gitId":"bingsen0806"},"content":"        // invalid phone","lastModifiedDate":"2022-03-11"},{"lineNumber":110,"author":{"gitId":"bingsen0806"},"content":"        assertParseFailure(parser, BOOK_NAME_DESC_HARRY_POTTER + INVALID_ISBN_DESC + AUTHOR_DESC_JK_ROWLING","lastModifiedDate":"2022-03-11"},{"lineNumber":111,"author":{"gitId":"bingsen0806"},"content":"                + TAG_DESC_ADVENTURE + TAG_DESC_MAGIC, Isbn.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2022-03-11"},{"lineNumber":112,"author":{"gitId":"bingsen0806"},"content":"","lastModifiedDate":"2022-03-11"},{"lineNumber":113,"author":{"gitId":"bingsen0806"},"content":"        // invalid tag","lastModifiedDate":"2022-03-11"},{"lineNumber":114,"author":{"gitId":"bingsen0806"},"content":"        assertParseFailure(parser, BOOK_NAME_DESC_HARRY_POTTER + ISBN_DESC_HARRY_POTTER + AUTHOR_DESC_JK_ROWLING","lastModifiedDate":"2022-03-11"},{"lineNumber":115,"author":{"gitId":"bingsen0806"},"content":"                + INVALID_TAG_DESC + TAG_DESC_MAGIC, Tag.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2022-03-11"},{"lineNumber":116,"author":{"gitId":"bingsen0806"},"content":"","lastModifiedDate":"2022-03-11"},{"lineNumber":117,"author":{"gitId":"bingsen0806"},"content":"        // two invalid values, only first invalid value reported","lastModifiedDate":"2022-03-11"},{"lineNumber":118,"author":{"gitId":"bingsen0806"},"content":"        assertParseFailure(parser, INVALID_BOOK_NAME_DESC + ISBN_DESC_HARRY_POTTER + INVALID_AUTHOR_DESC,","lastModifiedDate":"2022-03-11"},{"lineNumber":119,"author":{"gitId":"bingsen0806"},"content":"                BookName.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2022-03-11"},{"lineNumber":120,"author":{"gitId":"bingsen0806"},"content":"","lastModifiedDate":"2022-03-11"},{"lineNumber":121,"author":{"gitId":"bingsen0806"},"content":"        // non-empty preamble","lastModifiedDate":"2022-03-11"},{"lineNumber":122,"author":{"gitId":"bingsen0806"},"content":"        assertParseFailure(parser, PREAMBLE_NON_EMPTY + BOOK_NAME_DESC_HARRY_POTTER + ISBN_DESC_HARRY_POTTER","lastModifiedDate":"2022-03-11"},{"lineNumber":123,"author":{"gitId":"bingsen0806"},"content":"                        + AUTHOR_DESC_JK_ROWLING + TAG_DESC_ADVENTURE + TAG_DESC_MAGIC,","lastModifiedDate":"2022-03-11"},{"lineNumber":124,"author":{"gitId":"bingsen0806"},"content":"                String.format(MESSAGE_INVALID_COMMAND_FORMAT, AddBookCommand.MESSAGE_USAGE));","lastModifiedDate":"2022-03-11"},{"lineNumber":125,"author":{"gitId":"bingsen0806"},"content":"    }","lastModifiedDate":"2022-03-11"},{"lineNumber":126,"author":{"gitId":"bingsen0806"},"content":"}","lastModifiedDate":"2022-03-11"}],"authorContributionMap":{"bingsen0806":126}},{"path":"src/test/java/seedu/address/logic/parser/book/DeleteBookCommandParserTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"bingsen0806"},"content":"package seedu.address.logic.parser.book;","lastModifiedDate":"2022-03-11"},{"lineNumber":2,"author":{"gitId":"bingsen0806"},"content":"","lastModifiedDate":"2022-03-11"},{"lineNumber":3,"author":{"gitId":"bingsen0806"},"content":"import static seedu.address.commons.core.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2022-03-11"},{"lineNumber":4,"author":{"gitId":"bingsen0806"},"content":"import static seedu.address.logic.parser.CommandParserTestUtil.assertParseFailure;","lastModifiedDate":"2022-03-11"},{"lineNumber":5,"author":{"gitId":"bingsen0806"},"content":"import static seedu.address.logic.parser.CommandParserTestUtil.assertParseSuccess;","lastModifiedDate":"2022-03-11"},{"lineNumber":6,"author":{"gitId":"bingsen0806"},"content":"import static seedu.address.testutil.TypicalIndexes.INDEX_FIRST_BOOK;","lastModifiedDate":"2022-03-11"},{"lineNumber":7,"author":{"gitId":"bingsen0806"},"content":"","lastModifiedDate":"2022-03-11"},{"lineNumber":8,"author":{"gitId":"bingsen0806"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2022-03-11"},{"lineNumber":9,"author":{"gitId":"bingsen0806"},"content":"","lastModifiedDate":"2022-03-11"},{"lineNumber":10,"author":{"gitId":"bingsen0806"},"content":"import seedu.address.logic.commands.book.DeleteBookCommand;","lastModifiedDate":"2022-03-11"},{"lineNumber":11,"author":{"gitId":"bingsen0806"},"content":"","lastModifiedDate":"2022-03-11"},{"lineNumber":12,"author":{"gitId":"bingsen0806"},"content":"public class DeleteBookCommandParserTest {","lastModifiedDate":"2022-03-11"},{"lineNumber":13,"author":{"gitId":"bingsen0806"},"content":"    private DeleteBookCommandParser parser \u003d new DeleteBookCommandParser();","lastModifiedDate":"2022-03-11"},{"lineNumber":14,"author":{"gitId":"bingsen0806"},"content":"","lastModifiedDate":"2022-03-11"},{"lineNumber":15,"author":{"gitId":"bingsen0806"},"content":"    @Test","lastModifiedDate":"2022-03-11"},{"lineNumber":16,"author":{"gitId":"bingsen0806"},"content":"    public void parse_validArgs_returnsDeleteCommand() {","lastModifiedDate":"2022-03-11"},{"lineNumber":17,"author":{"gitId":"bingsen0806"},"content":"        assertParseSuccess(parser, \"1\", new DeleteBookCommand(INDEX_FIRST_BOOK));","lastModifiedDate":"2022-03-11"},{"lineNumber":18,"author":{"gitId":"bingsen0806"},"content":"    }","lastModifiedDate":"2022-03-11"},{"lineNumber":19,"author":{"gitId":"bingsen0806"},"content":"","lastModifiedDate":"2022-03-11"},{"lineNumber":20,"author":{"gitId":"bingsen0806"},"content":"    @Test","lastModifiedDate":"2022-03-11"},{"lineNumber":21,"author":{"gitId":"bingsen0806"},"content":"    public void parse_invalidArgs_throwsParseException() {","lastModifiedDate":"2022-03-11"},{"lineNumber":22,"author":{"gitId":"bingsen0806"},"content":"        assertParseFailure(parser, \"a\", String.format(MESSAGE_INVALID_COMMAND_FORMAT,","lastModifiedDate":"2022-03-11"},{"lineNumber":23,"author":{"gitId":"bingsen0806"},"content":"                DeleteBookCommand.MESSAGE_USAGE));","lastModifiedDate":"2022-03-11"},{"lineNumber":24,"author":{"gitId":"bingsen0806"},"content":"    }","lastModifiedDate":"2022-03-11"},{"lineNumber":25,"author":{"gitId":"bingsen0806"},"content":"}","lastModifiedDate":"2022-03-11"}],"authorContributionMap":{"bingsen0806":25}},{"path":"src/test/java/seedu/address/model/AddressBookTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.model;","lastModifiedDate":"2016-12-24"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-24"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2019-03-15"},{"lineNumber":6,"author":{"gitId":"bingsen0806"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_AUTHOR_SUZANNE_COLLINS;","lastModifiedDate":"2022-03-10"},{"lineNumber":7,"author":{"gitId":"bingsen0806"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_BOOK_NAME_HUNGER_GAMES;","lastModifiedDate":"2022-03-10"},{"lineNumber":8,"author":{"gitId":"aditi2313"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_ID_BOB;","lastModifiedDate":"2022-03-11"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_TAG_HUSBAND;","lastModifiedDate":"2018-04-19"},{"lineNumber":10,"author":{"gitId":"bingsen0806"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_TAG_SCIFI;","lastModifiedDate":"2022-03-10"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.Assert.assertThrows;","lastModifiedDate":"2019-03-23"},{"lineNumber":12,"author":{"gitId":"bingsen0806"},"content":"import static seedu.address.testutil.TypicalBooks.HARRY_POTTER;","lastModifiedDate":"2022-03-10"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.TypicalPersons.ALICE;","lastModifiedDate":"2017-07-19"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-24"},{"lineNumber":15,"author":{"gitId":"bingsen0806"},"content":"import java.util.ArrayList;","lastModifiedDate":"2022-03-10"},{"lineNumber":16,"author":{"gitId":"-"},"content":"import java.util.Arrays;","lastModifiedDate":"2016-12-24"},{"lineNumber":17,"author":{"gitId":"-"},"content":"import java.util.Collection;","lastModifiedDate":"2016-12-24"},{"lineNumber":18,"author":{"gitId":"-"},"content":"import java.util.Collections;","lastModifiedDate":"2016-12-24"},{"lineNumber":19,"author":{"gitId":"-"},"content":"import java.util.List;","lastModifiedDate":"2016-12-24"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-24"},{"lineNumber":21,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-24"},{"lineNumber":23,"author":{"gitId":"-"},"content":"import javafx.collections.FXCollections;","lastModifiedDate":"2016-12-24"},{"lineNumber":24,"author":{"gitId":"-"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2016-12-24"},{"lineNumber":25,"author":{"gitId":"bingsen0806"},"content":"import seedu.address.model.book.Book;","lastModifiedDate":"2022-03-10"},{"lineNumber":26,"author":{"gitId":"aditi2313"},"content":"import seedu.address.model.person.Patron;","lastModifiedDate":"2022-03-09"},{"lineNumber":27,"author":{"gitId":"-"},"content":"import seedu.address.model.person.exceptions.DuplicatePersonException;","lastModifiedDate":"2018-08-07"},{"lineNumber":28,"author":{"gitId":"bingsen0806"},"content":"import seedu.address.testutil.BookBuilder;","lastModifiedDate":"2022-03-10"},{"lineNumber":29,"author":{"gitId":"-"},"content":"import seedu.address.testutil.PersonBuilder;","lastModifiedDate":"2018-04-19"},{"lineNumber":30,"author":{"gitId":"bingsen0806"},"content":"import seedu.address.testutil.TypicalAddressBook;","lastModifiedDate":"2022-03-10"},{"lineNumber":31,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-24"},{"lineNumber":32,"author":{"gitId":"-"},"content":"public class AddressBookTest {","lastModifiedDate":"2016-12-24"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-24"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    private final AddressBook addressBook \u003d new AddressBook();","lastModifiedDate":"2016-12-24"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-24"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-12-24"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    public void constructor() {","lastModifiedDate":"2016-12-24"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        assertEquals(Collections.emptyList(), addressBook.getPersonList());","lastModifiedDate":"2016-12-24"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-24"},{"lineNumber":40,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-24"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-12-24"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    public void resetData_null_throwsNullPointerException() {","lastModifiedDate":"2017-05-15"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e addressBook.resetData(null));","lastModifiedDate":"2019-03-23"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-24"},{"lineNumber":45,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-24"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-12-24"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    public void resetData_withValidReadOnlyAddressBook_replacesData() {","lastModifiedDate":"2016-12-24"},{"lineNumber":48,"author":{"gitId":"bingsen0806"},"content":"        AddressBook newData \u003d TypicalAddressBook.getTypicalAddressBook();","lastModifiedDate":"2022-03-10"},{"lineNumber":49,"author":{"gitId":"-"},"content":"        addressBook.resetData(newData);","lastModifiedDate":"2016-12-24"},{"lineNumber":50,"author":{"gitId":"-"},"content":"        assertEquals(newData, addressBook);","lastModifiedDate":"2016-12-24"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-24"},{"lineNumber":52,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-24"},{"lineNumber":53,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-12-24"},{"lineNumber":54,"author":{"gitId":"-"},"content":"    public void resetData_withDuplicatePersons_throwsDuplicatePersonException() {","lastModifiedDate":"2018-08-07"},{"lineNumber":55,"author":{"gitId":"-"},"content":"        // Two persons with the same identity fields","lastModifiedDate":"2018-04-19"},{"lineNumber":56,"author":{"gitId":"aditi2313"},"content":"        Patron editedAlice \u003d new PersonBuilder(ALICE).withId(VALID_ID_BOB).withTags(VALID_TAG_HUSBAND)","lastModifiedDate":"2022-03-09"},{"lineNumber":57,"author":{"gitId":"-"},"content":"                .build();","lastModifiedDate":"2018-04-19"},{"lineNumber":58,"author":{"gitId":"aditi2313"},"content":"        List\u003cPatron\u003e newPersons \u003d Arrays.asList(ALICE, editedAlice);","lastModifiedDate":"2022-03-09"},{"lineNumber":59,"author":{"gitId":"bingsen0806"},"content":"        AddressBookStub newData \u003d new AddressBookStub(newPersons, new ArrayList\u003c\u003e());","lastModifiedDate":"2022-03-10"},{"lineNumber":60,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-24"},{"lineNumber":61,"author":{"gitId":"-"},"content":"        assertThrows(DuplicatePersonException.class, () -\u003e addressBook.resetData(newData));","lastModifiedDate":"2019-03-23"},{"lineNumber":62,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-24"},{"lineNumber":63,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-24"},{"lineNumber":64,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-06"},{"lineNumber":65,"author":{"gitId":"-"},"content":"    public void hasPerson_nullPerson_throwsNullPointerException() {","lastModifiedDate":"2018-08-06"},{"lineNumber":66,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e addressBook.hasPerson(null));","lastModifiedDate":"2019-03-23"},{"lineNumber":67,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-06"},{"lineNumber":68,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-06"},{"lineNumber":69,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-06"},{"lineNumber":70,"author":{"gitId":"-"},"content":"    public void hasPerson_personNotInAddressBook_returnsFalse() {","lastModifiedDate":"2018-08-06"},{"lineNumber":71,"author":{"gitId":"-"},"content":"        assertFalse(addressBook.hasPerson(ALICE));","lastModifiedDate":"2018-08-06"},{"lineNumber":72,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-06"},{"lineNumber":73,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-06"},{"lineNumber":74,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-06"},{"lineNumber":75,"author":{"gitId":"-"},"content":"    public void hasPerson_personInAddressBook_returnsTrue() {","lastModifiedDate":"2018-08-07"},{"lineNumber":76,"author":{"gitId":"-"},"content":"        addressBook.addPerson(ALICE);","lastModifiedDate":"2018-08-06"},{"lineNumber":77,"author":{"gitId":"-"},"content":"        assertTrue(addressBook.hasPerson(ALICE));","lastModifiedDate":"2018-08-06"},{"lineNumber":78,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-06"},{"lineNumber":79,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-06"},{"lineNumber":80,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-06"},{"lineNumber":81,"author":{"gitId":"-"},"content":"    public void hasPerson_personWithSameIdentityFieldsInAddressBook_returnsTrue() {","lastModifiedDate":"2018-08-07"},{"lineNumber":82,"author":{"gitId":"-"},"content":"        addressBook.addPerson(ALICE);","lastModifiedDate":"2018-08-06"},{"lineNumber":83,"author":{"gitId":"aditi2313"},"content":"        Patron editedAlice \u003d new PersonBuilder(ALICE).withId(VALID_ID_BOB).withTags(VALID_TAG_HUSBAND)","lastModifiedDate":"2022-03-09"},{"lineNumber":84,"author":{"gitId":"-"},"content":"                .build();","lastModifiedDate":"2018-08-06"},{"lineNumber":85,"author":{"gitId":"-"},"content":"        assertTrue(addressBook.hasPerson(editedAlice));","lastModifiedDate":"2018-08-06"},{"lineNumber":86,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-06"},{"lineNumber":87,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-06"},{"lineNumber":88,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-09-01"},{"lineNumber":89,"author":{"gitId":"-"},"content":"    public void getPersonList_modifyList_throwsUnsupportedOperationException() {","lastModifiedDate":"2017-09-01"},{"lineNumber":90,"author":{"gitId":"-"},"content":"        assertThrows(UnsupportedOperationException.class, () -\u003e addressBook.getPersonList().remove(0));","lastModifiedDate":"2019-03-23"},{"lineNumber":91,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-09-01"},{"lineNumber":92,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-09-01"},{"lineNumber":93,"author":{"gitId":"bingsen0806"},"content":"    @Test","lastModifiedDate":"2022-03-10"},{"lineNumber":94,"author":{"gitId":"bingsen0806"},"content":"    public void hasBook_nullBook_throwsNullPointerException() {","lastModifiedDate":"2022-03-10"},{"lineNumber":95,"author":{"gitId":"bingsen0806"},"content":"        assertThrows(NullPointerException.class, () -\u003e addressBook.hasBook(null));","lastModifiedDate":"2022-03-10"},{"lineNumber":96,"author":{"gitId":"bingsen0806"},"content":"    }","lastModifiedDate":"2022-03-10"},{"lineNumber":97,"author":{"gitId":"bingsen0806"},"content":"","lastModifiedDate":"2022-03-10"},{"lineNumber":98,"author":{"gitId":"bingsen0806"},"content":"    @Test","lastModifiedDate":"2022-03-10"},{"lineNumber":99,"author":{"gitId":"bingsen0806"},"content":"    public void hasBook_bookNotInAddressBook_returnsFalse() {","lastModifiedDate":"2022-03-10"},{"lineNumber":100,"author":{"gitId":"bingsen0806"},"content":"        assertFalse(addressBook.hasBook(HARRY_POTTER));","lastModifiedDate":"2022-03-10"},{"lineNumber":101,"author":{"gitId":"bingsen0806"},"content":"    }","lastModifiedDate":"2022-03-10"},{"lineNumber":102,"author":{"gitId":"bingsen0806"},"content":"","lastModifiedDate":"2022-03-10"},{"lineNumber":103,"author":{"gitId":"bingsen0806"},"content":"    @Test","lastModifiedDate":"2022-03-10"},{"lineNumber":104,"author":{"gitId":"bingsen0806"},"content":"    public void hasBook_bookInAddressBook_returnsTrue() {","lastModifiedDate":"2022-03-10"},{"lineNumber":105,"author":{"gitId":"bingsen0806"},"content":"        addressBook.addBook(HARRY_POTTER);","lastModifiedDate":"2022-03-10"},{"lineNumber":106,"author":{"gitId":"bingsen0806"},"content":"        assertTrue(addressBook.hasBook(HARRY_POTTER));","lastModifiedDate":"2022-03-10"},{"lineNumber":107,"author":{"gitId":"bingsen0806"},"content":"    }","lastModifiedDate":"2022-03-10"},{"lineNumber":108,"author":{"gitId":"bingsen0806"},"content":"","lastModifiedDate":"2022-03-10"},{"lineNumber":109,"author":{"gitId":"bingsen0806"},"content":"    @Test","lastModifiedDate":"2022-03-10"},{"lineNumber":110,"author":{"gitId":"bingsen0806"},"content":"    public void hasBook_bookWithSameIdentityFieldsInAddressBook_returnsTrue() {","lastModifiedDate":"2022-03-10"},{"lineNumber":111,"author":{"gitId":"bingsen0806"},"content":"        addressBook.addBook(HARRY_POTTER);","lastModifiedDate":"2022-03-10"},{"lineNumber":112,"author":{"gitId":"bingsen0806"},"content":"        Book editedHarryPotter \u003d new BookBuilder(HARRY_POTTER)","lastModifiedDate":"2022-03-10"},{"lineNumber":113,"author":{"gitId":"bingsen0806"},"content":"                .withName(VALID_BOOK_NAME_HUNGER_GAMES)","lastModifiedDate":"2022-03-10"},{"lineNumber":114,"author":{"gitId":"bingsen0806"},"content":"                .withAuthors(VALID_AUTHOR_SUZANNE_COLLINS)","lastModifiedDate":"2022-03-10"},{"lineNumber":115,"author":{"gitId":"bingsen0806"},"content":"                .withTags(VALID_TAG_SCIFI)","lastModifiedDate":"2022-03-10"},{"lineNumber":116,"author":{"gitId":"bingsen0806"},"content":"                .build();","lastModifiedDate":"2022-03-10"},{"lineNumber":117,"author":{"gitId":"bingsen0806"},"content":"        assertTrue(addressBook.hasBook(editedHarryPotter));","lastModifiedDate":"2022-03-10"},{"lineNumber":118,"author":{"gitId":"bingsen0806"},"content":"    }","lastModifiedDate":"2022-03-10"},{"lineNumber":119,"author":{"gitId":"bingsen0806"},"content":"","lastModifiedDate":"2022-03-10"},{"lineNumber":120,"author":{"gitId":"bingsen0806"},"content":"    @Test","lastModifiedDate":"2022-03-10"},{"lineNumber":121,"author":{"gitId":"bingsen0806"},"content":"    public void getBookList_modifyList_throwsUnsupportedOperationException() {","lastModifiedDate":"2022-03-10"},{"lineNumber":122,"author":{"gitId":"bingsen0806"},"content":"        assertThrows(UnsupportedOperationException.class, () -\u003e addressBook.getBookList().remove(0));","lastModifiedDate":"2022-03-10"},{"lineNumber":123,"author":{"gitId":"bingsen0806"},"content":"    }","lastModifiedDate":"2022-03-10"},{"lineNumber":124,"author":{"gitId":"bingsen0806"},"content":"","lastModifiedDate":"2022-03-10"},{"lineNumber":125,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-12-24"},{"lineNumber":126,"author":{"gitId":"-"},"content":"     * A stub ReadOnlyAddressBook whose persons list can violate interface constraints.","lastModifiedDate":"2018-03-29"},{"lineNumber":127,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-12-24"},{"lineNumber":128,"author":{"gitId":"-"},"content":"    private static class AddressBookStub implements ReadOnlyAddressBook {","lastModifiedDate":"2016-12-24"},{"lineNumber":129,"author":{"gitId":"aditi2313"},"content":"        private final ObservableList\u003cPatron\u003e persons \u003d FXCollections.observableArrayList();","lastModifiedDate":"2022-03-09"},{"lineNumber":130,"author":{"gitId":"bingsen0806"},"content":"        private final ObservableList\u003cBook\u003e books \u003d FXCollections.observableArrayList();","lastModifiedDate":"2022-03-10"},{"lineNumber":131,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-24"},{"lineNumber":132,"author":{"gitId":"aditi2313"},"content":"        AddressBookStub(Collection\u003cPatron\u003e persons, Collection\u003cBook\u003e books) {","lastModifiedDate":"2022-03-10"},{"lineNumber":133,"author":{"gitId":"-"},"content":"            this.persons.setAll(persons);","lastModifiedDate":"2016-12-24"},{"lineNumber":134,"author":{"gitId":"bingsen0806"},"content":"            this.books.setAll(books);","lastModifiedDate":"2022-03-10"},{"lineNumber":135,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-12-24"},{"lineNumber":136,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-24"},{"lineNumber":137,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2016-12-24"},{"lineNumber":138,"author":{"gitId":"aditi2313"},"content":"        public ObservableList\u003cPatron\u003e getPersonList() {","lastModifiedDate":"2022-03-09"},{"lineNumber":139,"author":{"gitId":"-"},"content":"            return persons;","lastModifiedDate":"2016-12-24"},{"lineNumber":140,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-12-24"},{"lineNumber":141,"author":{"gitId":"bingsen0806"},"content":"","lastModifiedDate":"2022-03-10"},{"lineNumber":142,"author":{"gitId":"bingsen0806"},"content":"        @Override","lastModifiedDate":"2022-03-10"},{"lineNumber":143,"author":{"gitId":"bingsen0806"},"content":"        public ObservableList\u003cBook\u003e getBookList() {","lastModifiedDate":"2022-03-10"},{"lineNumber":144,"author":{"gitId":"bingsen0806"},"content":"            return books;","lastModifiedDate":"2022-03-10"},{"lineNumber":145,"author":{"gitId":"bingsen0806"},"content":"        }","lastModifiedDate":"2022-03-10"},{"lineNumber":146,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-24"},{"lineNumber":147,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-24"},{"lineNumber":148,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-12-24"}],"authorContributionMap":{"-":91,"bingsen0806":49,"aditi2313":8}},{"path":"src/test/java/seedu/address/model/ModelManagerTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.model;","lastModifiedDate":"2017-05-31"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-31"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2019-03-15"},{"lineNumber":6,"author":{"gitId":"bingsen0806"},"content":"import static seedu.address.model.Model.PREDICATE_SHOW_ALL_BOOKS;","lastModifiedDate":"2022-03-10"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import static seedu.address.model.Model.PREDICATE_SHOW_ALL_PERSONS;","lastModifiedDate":"2017-08-05"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.Assert.assertThrows;","lastModifiedDate":"2019-03-23"},{"lineNumber":9,"author":{"gitId":"bingsen0806"},"content":"import static seedu.address.testutil.TypicalBooks.HARRY_POTTER;","lastModifiedDate":"2022-03-10"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.TypicalPersons.ALICE;","lastModifiedDate":"2017-07-19"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.TypicalPersons.BENSON;","lastModifiedDate":"2017-07-19"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-31"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-11-27"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import java.nio.file.Paths;","lastModifiedDate":"2018-08-09"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import java.util.Arrays;","lastModifiedDate":"2017-05-31"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-31"},{"lineNumber":17,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-31"},{"lineNumber":19,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.GuiSettings;","lastModifiedDate":"2018-11-27"},{"lineNumber":20,"author":{"gitId":"bingsen0806"},"content":"import seedu.address.model.book.BookNameContainsKeywordsPredicate;","lastModifiedDate":"2022-03-10"},{"lineNumber":21,"author":{"gitId":"-"},"content":"import seedu.address.model.person.NameContainsKeywordsPredicate;","lastModifiedDate":"2017-06-12"},{"lineNumber":22,"author":{"gitId":"-"},"content":"import seedu.address.testutil.AddressBookBuilder;","lastModifiedDate":"2017-05-31"},{"lineNumber":23,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-31"},{"lineNumber":24,"author":{"gitId":"-"},"content":"public class ModelManagerTest {","lastModifiedDate":"2017-05-31"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-09-01"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    private ModelManager modelManager \u003d new ModelManager();","lastModifiedDate":"2018-08-06"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-06"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-11-27"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    public void constructor() {","lastModifiedDate":"2018-11-27"},{"lineNumber":30,"author":{"gitId":"-"},"content":"        assertEquals(new UserPrefs(), modelManager.getUserPrefs());","lastModifiedDate":"2018-11-27"},{"lineNumber":31,"author":{"gitId":"-"},"content":"        assertEquals(new GuiSettings(), modelManager.getGuiSettings());","lastModifiedDate":"2018-11-27"},{"lineNumber":32,"author":{"gitId":"-"},"content":"        assertEquals(new AddressBook(), new AddressBook(modelManager.getAddressBook()));","lastModifiedDate":"2018-11-27"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-11-27"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    public void setUserPrefs_nullUserPrefs_throwsNullPointerException() {","lastModifiedDate":"2018-11-27"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e modelManager.setUserPrefs(null));","lastModifiedDate":"2019-03-23"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":39,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-11-27"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    public void setUserPrefs_validUserPrefs_copiesUserPrefs() {","lastModifiedDate":"2018-12-06"},{"lineNumber":42,"author":{"gitId":"-"},"content":"        UserPrefs userPrefs \u003d new UserPrefs();","lastModifiedDate":"2018-11-27"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        userPrefs.setAddressBookFilePath(Paths.get(\"address/book/file/path\"));","lastModifiedDate":"2018-11-27"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        userPrefs.setGuiSettings(new GuiSettings(1, 2, 3, 4));","lastModifiedDate":"2018-11-27"},{"lineNumber":45,"author":{"gitId":"-"},"content":"        modelManager.setUserPrefs(userPrefs);","lastModifiedDate":"2018-11-27"},{"lineNumber":46,"author":{"gitId":"-"},"content":"        assertEquals(userPrefs, modelManager.getUserPrefs());","lastModifiedDate":"2018-11-27"},{"lineNumber":47,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-06"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        // Modifying userPrefs should not modify modelManager\u0027s userPrefs","lastModifiedDate":"2018-12-06"},{"lineNumber":49,"author":{"gitId":"-"},"content":"        UserPrefs oldUserPrefs \u003d new UserPrefs(userPrefs);","lastModifiedDate":"2018-12-06"},{"lineNumber":50,"author":{"gitId":"-"},"content":"        userPrefs.setAddressBookFilePath(Paths.get(\"new/address/book/file/path\"));","lastModifiedDate":"2018-12-06"},{"lineNumber":51,"author":{"gitId":"-"},"content":"        assertEquals(oldUserPrefs, modelManager.getUserPrefs());","lastModifiedDate":"2018-12-06"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":53,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":54,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-11-27"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    public void setGuiSettings_nullGuiSettings_throwsNullPointerException() {","lastModifiedDate":"2018-11-27"},{"lineNumber":56,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e modelManager.setGuiSettings(null));","lastModifiedDate":"2019-03-23"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":58,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":59,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-11-27"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    public void setGuiSettings_validGuiSettings_setsGuiSettings() {","lastModifiedDate":"2018-11-27"},{"lineNumber":61,"author":{"gitId":"-"},"content":"        GuiSettings guiSettings \u003d new GuiSettings(1, 2, 3, 4);","lastModifiedDate":"2018-11-27"},{"lineNumber":62,"author":{"gitId":"-"},"content":"        modelManager.setGuiSettings(guiSettings);","lastModifiedDate":"2018-11-27"},{"lineNumber":63,"author":{"gitId":"-"},"content":"        assertEquals(guiSettings, modelManager.getGuiSettings());","lastModifiedDate":"2018-11-27"},{"lineNumber":64,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":65,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":66,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-11-27"},{"lineNumber":67,"author":{"gitId":"-"},"content":"    public void setAddressBookFilePath_nullPath_throwsNullPointerException() {","lastModifiedDate":"2018-11-27"},{"lineNumber":68,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e modelManager.setAddressBookFilePath(null));","lastModifiedDate":"2019-03-23"},{"lineNumber":69,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":70,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":71,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-11-27"},{"lineNumber":72,"author":{"gitId":"-"},"content":"    public void setAddressBookFilePath_validPath_setsAddressBookFilePath() {","lastModifiedDate":"2018-11-27"},{"lineNumber":73,"author":{"gitId":"-"},"content":"        Path path \u003d Paths.get(\"address/book/file/path\");","lastModifiedDate":"2018-11-27"},{"lineNumber":74,"author":{"gitId":"-"},"content":"        modelManager.setAddressBookFilePath(path);","lastModifiedDate":"2018-11-27"},{"lineNumber":75,"author":{"gitId":"-"},"content":"        assertEquals(path, modelManager.getAddressBookFilePath());","lastModifiedDate":"2018-11-27"},{"lineNumber":76,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":77,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":78,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-06"},{"lineNumber":79,"author":{"gitId":"-"},"content":"    public void hasPerson_nullPerson_throwsNullPointerException() {","lastModifiedDate":"2018-08-06"},{"lineNumber":80,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e modelManager.hasPerson(null));","lastModifiedDate":"2019-03-23"},{"lineNumber":81,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-06"},{"lineNumber":82,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-06"},{"lineNumber":83,"author":{"gitId":"bingsen0806"},"content":"    @Test","lastModifiedDate":"2022-03-10"},{"lineNumber":84,"author":{"gitId":"bingsen0806"},"content":"    public void hasBook_nullBook_throwsNullPointerException() {","lastModifiedDate":"2022-03-10"},{"lineNumber":85,"author":{"gitId":"bingsen0806"},"content":"        assertThrows(NullPointerException.class, () -\u003e modelManager.hasBook(null));","lastModifiedDate":"2022-03-10"},{"lineNumber":86,"author":{"gitId":"bingsen0806"},"content":"    }","lastModifiedDate":"2022-03-10"},{"lineNumber":87,"author":{"gitId":"bingsen0806"},"content":"","lastModifiedDate":"2022-03-10"},{"lineNumber":88,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-06"},{"lineNumber":89,"author":{"gitId":"-"},"content":"    public void hasPerson_personNotInAddressBook_returnsFalse() {","lastModifiedDate":"2018-08-06"},{"lineNumber":90,"author":{"gitId":"-"},"content":"        assertFalse(modelManager.hasPerson(ALICE));","lastModifiedDate":"2018-08-06"},{"lineNumber":91,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-06"},{"lineNumber":92,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-06"},{"lineNumber":93,"author":{"gitId":"bingsen0806"},"content":"    @Test","lastModifiedDate":"2022-03-10"},{"lineNumber":94,"author":{"gitId":"bingsen0806"},"content":"    public void hasBook_bookNotInAddressBook_returnsFalse() {","lastModifiedDate":"2022-03-10"},{"lineNumber":95,"author":{"gitId":"bingsen0806"},"content":"        assertFalse(modelManager.hasBook(HARRY_POTTER));","lastModifiedDate":"2022-03-10"},{"lineNumber":96,"author":{"gitId":"bingsen0806"},"content":"    }","lastModifiedDate":"2022-03-10"},{"lineNumber":97,"author":{"gitId":"bingsen0806"},"content":"","lastModifiedDate":"2022-03-10"},{"lineNumber":98,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-06"},{"lineNumber":99,"author":{"gitId":"-"},"content":"    public void hasPerson_personInAddressBook_returnsTrue() {","lastModifiedDate":"2018-08-07"},{"lineNumber":100,"author":{"gitId":"-"},"content":"        modelManager.addPerson(ALICE);","lastModifiedDate":"2018-08-06"},{"lineNumber":101,"author":{"gitId":"-"},"content":"        assertTrue(modelManager.hasPerson(ALICE));","lastModifiedDate":"2018-08-06"},{"lineNumber":102,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-06"},{"lineNumber":103,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-06"},{"lineNumber":104,"author":{"gitId":"bingsen0806"},"content":"    @Test","lastModifiedDate":"2022-03-10"},{"lineNumber":105,"author":{"gitId":"bingsen0806"},"content":"    public void hasBook_bookInAddressBook_returnsTrue() {","lastModifiedDate":"2022-03-10"},{"lineNumber":106,"author":{"gitId":"bingsen0806"},"content":"        modelManager.addBook(HARRY_POTTER);","lastModifiedDate":"2022-03-10"},{"lineNumber":107,"author":{"gitId":"bingsen0806"},"content":"        assertTrue(modelManager.hasBook(HARRY_POTTER));","lastModifiedDate":"2022-03-10"},{"lineNumber":108,"author":{"gitId":"bingsen0806"},"content":"    }","lastModifiedDate":"2022-03-10"},{"lineNumber":109,"author":{"gitId":"bingsen0806"},"content":"","lastModifiedDate":"2022-03-10"},{"lineNumber":110,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-09-01"},{"lineNumber":111,"author":{"gitId":"-"},"content":"    public void getFilteredPersonList_modifyList_throwsUnsupportedOperationException() {","lastModifiedDate":"2017-09-01"},{"lineNumber":112,"author":{"gitId":"-"},"content":"        assertThrows(UnsupportedOperationException.class, () -\u003e modelManager.getFilteredPersonList().remove(0));","lastModifiedDate":"2019-03-23"},{"lineNumber":113,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-09-01"},{"lineNumber":114,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-31"},{"lineNumber":115,"author":{"gitId":"bingsen0806"},"content":"    @Test","lastModifiedDate":"2022-03-10"},{"lineNumber":116,"author":{"gitId":"bingsen0806"},"content":"    public void getFilteredBookList_modifyList_throwsUnsupportedOperationException() {","lastModifiedDate":"2022-03-10"},{"lineNumber":117,"author":{"gitId":"bingsen0806"},"content":"        assertThrows(UnsupportedOperationException.class, () -\u003e modelManager.getFilteredBookList().remove(0));","lastModifiedDate":"2022-03-10"},{"lineNumber":118,"author":{"gitId":"bingsen0806"},"content":"    }","lastModifiedDate":"2022-03-10"},{"lineNumber":119,"author":{"gitId":"bingsen0806"},"content":"","lastModifiedDate":"2022-03-10"},{"lineNumber":120,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-31"},{"lineNumber":121,"author":{"gitId":"-"},"content":"    public void equals() {","lastModifiedDate":"2017-08-15"},{"lineNumber":122,"author":{"gitId":"-"},"content":"        AddressBook addressBook \u003d new AddressBookBuilder().withPerson(ALICE).withPerson(BENSON).build();","lastModifiedDate":"2017-07-19"},{"lineNumber":123,"author":{"gitId":"-"},"content":"        AddressBook differentAddressBook \u003d new AddressBook();","lastModifiedDate":"2017-05-31"},{"lineNumber":124,"author":{"gitId":"-"},"content":"        UserPrefs userPrefs \u003d new UserPrefs();","lastModifiedDate":"2017-05-31"},{"lineNumber":125,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-31"},{"lineNumber":126,"author":{"gitId":"-"},"content":"        // same values -\u003e returns true","lastModifiedDate":"2017-05-31"},{"lineNumber":127,"author":{"gitId":"-"},"content":"        modelManager \u003d new ModelManager(addressBook, userPrefs);","lastModifiedDate":"2018-08-06"},{"lineNumber":128,"author":{"gitId":"-"},"content":"        ModelManager modelManagerCopy \u003d new ModelManager(addressBook, userPrefs);","lastModifiedDate":"2017-05-31"},{"lineNumber":129,"author":{"gitId":"-"},"content":"        assertTrue(modelManager.equals(modelManagerCopy));","lastModifiedDate":"2017-05-31"},{"lineNumber":130,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-31"},{"lineNumber":131,"author":{"gitId":"-"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2017-05-31"},{"lineNumber":132,"author":{"gitId":"-"},"content":"        assertTrue(modelManager.equals(modelManager));","lastModifiedDate":"2017-05-31"},{"lineNumber":133,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-31"},{"lineNumber":134,"author":{"gitId":"-"},"content":"        // null -\u003e returns false","lastModifiedDate":"2017-05-31"},{"lineNumber":135,"author":{"gitId":"-"},"content":"        assertFalse(modelManager.equals(null));","lastModifiedDate":"2017-05-31"},{"lineNumber":136,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-31"},{"lineNumber":137,"author":{"gitId":"-"},"content":"        // different types -\u003e returns false","lastModifiedDate":"2017-05-31"},{"lineNumber":138,"author":{"gitId":"-"},"content":"        assertFalse(modelManager.equals(5));","lastModifiedDate":"2017-05-31"},{"lineNumber":139,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-31"},{"lineNumber":140,"author":{"gitId":"-"},"content":"        // different addressBook -\u003e returns false","lastModifiedDate":"2017-05-31"},{"lineNumber":141,"author":{"gitId":"-"},"content":"        assertFalse(modelManager.equals(new ModelManager(differentAddressBook, userPrefs)));","lastModifiedDate":"2017-05-31"},{"lineNumber":142,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-31"},{"lineNumber":143,"author":{"gitId":"bingsen0806"},"content":"        // different filteredPersonList -\u003e returns false","lastModifiedDate":"2022-03-10"},{"lineNumber":144,"author":{"gitId":"-"},"content":"        String[] keywords \u003d ALICE.getName().fullName.split(\"\\\\s+\");","lastModifiedDate":"2017-07-19"},{"lineNumber":145,"author":{"gitId":"-"},"content":"        modelManager.updateFilteredPersonList(new NameContainsKeywordsPredicate(Arrays.asList(keywords)));","lastModifiedDate":"2017-06-12"},{"lineNumber":146,"author":{"gitId":"-"},"content":"        assertFalse(modelManager.equals(new ModelManager(addressBook, userPrefs)));","lastModifiedDate":"2017-05-31"},{"lineNumber":147,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-08-05"},{"lineNumber":148,"author":{"gitId":"bingsen0806"},"content":"        // different filteredBookList -\u003e returns false","lastModifiedDate":"2022-03-10"},{"lineNumber":149,"author":{"gitId":"bingsen0806"},"content":"        String[] bookKeywords \u003d HARRY_POTTER.getBookName().fullBookName.split(\"\\\\s+\");","lastModifiedDate":"2022-03-10"},{"lineNumber":150,"author":{"gitId":"bingsen0806"},"content":"        modelManager.updateFilteredBookList(new BookNameContainsKeywordsPredicate(Arrays.asList(bookKeywords)));","lastModifiedDate":"2022-03-10"},{"lineNumber":151,"author":{"gitId":"bingsen0806"},"content":"        assertFalse(modelManager.equals(new ModelManager(addressBook, userPrefs)));","lastModifiedDate":"2022-03-10"},{"lineNumber":152,"author":{"gitId":"bingsen0806"},"content":"","lastModifiedDate":"2022-03-10"},{"lineNumber":153,"author":{"gitId":"-"},"content":"        // resets modelManager to initial state for upcoming tests","lastModifiedDate":"2017-08-05"},{"lineNumber":154,"author":{"gitId":"-"},"content":"        modelManager.updateFilteredPersonList(PREDICATE_SHOW_ALL_PERSONS);","lastModifiedDate":"2017-08-05"},{"lineNumber":155,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-31"},{"lineNumber":156,"author":{"gitId":"bingsen0806"},"content":"        // resets modelManager to initial state for upcoming tests","lastModifiedDate":"2022-03-10"},{"lineNumber":157,"author":{"gitId":"bingsen0806"},"content":"        modelManager.updateFilteredBookList(PREDICATE_SHOW_ALL_BOOKS);","lastModifiedDate":"2022-03-10"},{"lineNumber":158,"author":{"gitId":"bingsen0806"},"content":"","lastModifiedDate":"2022-03-10"},{"lineNumber":159,"author":{"gitId":"-"},"content":"        // different userPrefs -\u003e returns false","lastModifiedDate":"2018-11-27"},{"lineNumber":160,"author":{"gitId":"-"},"content":"        UserPrefs differentUserPrefs \u003d new UserPrefs();","lastModifiedDate":"2017-05-31"},{"lineNumber":161,"author":{"gitId":"-"},"content":"        differentUserPrefs.setAddressBookFilePath(Paths.get(\"differentFilePath\"));","lastModifiedDate":"2018-08-09"},{"lineNumber":162,"author":{"gitId":"-"},"content":"        assertFalse(modelManager.equals(new ModelManager(addressBook, differentUserPrefs)));","lastModifiedDate":"2018-11-27"},{"lineNumber":163,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-31"},{"lineNumber":164,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-05-31"}],"authorContributionMap":{"-":131,"bingsen0806":33}},{"path":"src/test/java/seedu/address/model/book/AuthorTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"bingsen0806"},"content":"package seedu.address.model.book;","lastModifiedDate":"2022-03-09"},{"lineNumber":2,"author":{"gitId":"bingsen0806"},"content":"","lastModifiedDate":"2022-03-09"},{"lineNumber":3,"author":{"gitId":"bingsen0806"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2022-03-09"},{"lineNumber":4,"author":{"gitId":"bingsen0806"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2022-03-09"},{"lineNumber":5,"author":{"gitId":"bingsen0806"},"content":"import static seedu.address.testutil.Assert.assertThrows;","lastModifiedDate":"2022-03-09"},{"lineNumber":6,"author":{"gitId":"bingsen0806"},"content":"","lastModifiedDate":"2022-03-09"},{"lineNumber":7,"author":{"gitId":"bingsen0806"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2022-03-09"},{"lineNumber":8,"author":{"gitId":"bingsen0806"},"content":"","lastModifiedDate":"2022-03-09"},{"lineNumber":9,"author":{"gitId":"bingsen0806"},"content":"public class AuthorTest {","lastModifiedDate":"2022-03-09"},{"lineNumber":10,"author":{"gitId":"bingsen0806"},"content":"","lastModifiedDate":"2022-03-09"},{"lineNumber":11,"author":{"gitId":"bingsen0806"},"content":"    @Test","lastModifiedDate":"2022-03-09"},{"lineNumber":12,"author":{"gitId":"bingsen0806"},"content":"    public void constructor_null_throwsNullPointerException() {","lastModifiedDate":"2022-03-09"},{"lineNumber":13,"author":{"gitId":"bingsen0806"},"content":"        assertThrows(NullPointerException.class, () -\u003e new Author(null));","lastModifiedDate":"2022-03-09"},{"lineNumber":14,"author":{"gitId":"bingsen0806"},"content":"    }","lastModifiedDate":"2022-03-09"},{"lineNumber":15,"author":{"gitId":"bingsen0806"},"content":"","lastModifiedDate":"2022-03-09"},{"lineNumber":16,"author":{"gitId":"bingsen0806"},"content":"    @Test","lastModifiedDate":"2022-03-09"},{"lineNumber":17,"author":{"gitId":"bingsen0806"},"content":"    public void constructor_invalidName_throwsIllegalArgumentException() {","lastModifiedDate":"2022-03-09"},{"lineNumber":18,"author":{"gitId":"bingsen0806"},"content":"        String invalidName \u003d \"\";","lastModifiedDate":"2022-03-09"},{"lineNumber":19,"author":{"gitId":"bingsen0806"},"content":"        assertThrows(IllegalArgumentException.class, () -\u003e new Author(invalidName));","lastModifiedDate":"2022-03-09"},{"lineNumber":20,"author":{"gitId":"bingsen0806"},"content":"    }","lastModifiedDate":"2022-03-09"},{"lineNumber":21,"author":{"gitId":"bingsen0806"},"content":"","lastModifiedDate":"2022-03-09"},{"lineNumber":22,"author":{"gitId":"bingsen0806"},"content":"    @Test","lastModifiedDate":"2022-03-09"},{"lineNumber":23,"author":{"gitId":"bingsen0806"},"content":"    public void isValidAuthor() {","lastModifiedDate":"2022-03-09"},{"lineNumber":24,"author":{"gitId":"bingsen0806"},"content":"        // null author","lastModifiedDate":"2022-03-09"},{"lineNumber":25,"author":{"gitId":"bingsen0806"},"content":"        assertThrows(NullPointerException.class, () -\u003e Author.isValidAuthor(null));","lastModifiedDate":"2022-03-09"},{"lineNumber":26,"author":{"gitId":"bingsen0806"},"content":"","lastModifiedDate":"2022-03-09"},{"lineNumber":27,"author":{"gitId":"bingsen0806"},"content":"        // invalid author","lastModifiedDate":"2022-03-09"},{"lineNumber":28,"author":{"gitId":"bingsen0806"},"content":"        assertFalse(Author.isValidAuthor(\"\")); // empty string","lastModifiedDate":"2022-03-09"},{"lineNumber":29,"author":{"gitId":"bingsen0806"},"content":"        assertFalse(Author.isValidAuthor(\" \")); // spaces only","lastModifiedDate":"2022-03-09"},{"lineNumber":30,"author":{"gitId":"bingsen0806"},"content":"        assertFalse(Author.isValidAuthor(\"^\")); // only non-alphanumeric characters","lastModifiedDate":"2022-03-09"},{"lineNumber":31,"author":{"gitId":"bingsen0806"},"content":"        assertFalse(Author.isValidAuthor(\"J\u0026KRowling\")); // contains non-alphanumeric character that is not dot","lastModifiedDate":"2022-03-09"},{"lineNumber":32,"author":{"gitId":"bingsen0806"},"content":"        assertFalse(Author.isValidAuthor(\" JKRowling\")); // starts with non-alphanumeric character","lastModifiedDate":"2022-03-09"},{"lineNumber":33,"author":{"gitId":"bingsen0806"},"content":"","lastModifiedDate":"2022-03-09"},{"lineNumber":34,"author":{"gitId":"bingsen0806"},"content":"        // valid author","lastModifiedDate":"2022-03-09"},{"lineNumber":35,"author":{"gitId":"bingsen0806"},"content":"        assertTrue(Author.isValidAuthor(\"jkrowling\")); //alphabets only","lastModifiedDate":"2022-03-09"},{"lineNumber":36,"author":{"gitId":"bingsen0806"},"content":"        assertTrue(Author.isValidAuthor(\"123\")); // numbers only","lastModifiedDate":"2022-03-09"},{"lineNumber":37,"author":{"gitId":"bingsen0806"},"content":"        assertTrue(Author.isValidAuthor(\"Queen Elizabeth 1\")); // alphanumeric characters","lastModifiedDate":"2022-03-09"},{"lineNumber":38,"author":{"gitId":"bingsen0806"},"content":"        assertTrue(Author.isValidAuthor(\"J.K.Rowling\")); // with dot character","lastModifiedDate":"2022-03-09"},{"lineNumber":39,"author":{"gitId":"bingsen0806"},"content":"    }","lastModifiedDate":"2022-03-09"},{"lineNumber":40,"author":{"gitId":"bingsen0806"},"content":"}","lastModifiedDate":"2022-03-09"}],"authorContributionMap":{"bingsen0806":40}},{"path":"src/test/java/seedu/address/model/book/BookListTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"bingsen0806"},"content":"package seedu.address.model.book;","lastModifiedDate":"2022-03-10"},{"lineNumber":2,"author":{"gitId":"bingsen0806"},"content":"","lastModifiedDate":"2022-03-10"},{"lineNumber":3,"author":{"gitId":"bingsen0806"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2022-03-10"},{"lineNumber":4,"author":{"gitId":"bingsen0806"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2022-03-10"},{"lineNumber":5,"author":{"gitId":"bingsen0806"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2022-03-10"},{"lineNumber":6,"author":{"gitId":"bingsen0806"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_AUTHOR_SUZANNE_COLLINS;","lastModifiedDate":"2022-03-10"},{"lineNumber":7,"author":{"gitId":"bingsen0806"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_BOOK_NAME_HUNGER_GAMES;","lastModifiedDate":"2022-03-10"},{"lineNumber":8,"author":{"gitId":"bingsen0806"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_TAG_SCIFI;","lastModifiedDate":"2022-03-10"},{"lineNumber":9,"author":{"gitId":"bingsen0806"},"content":"import static seedu.address.testutil.Assert.assertThrows;","lastModifiedDate":"2022-03-10"},{"lineNumber":10,"author":{"gitId":"bingsen0806"},"content":"import static seedu.address.testutil.TypicalBooks.HARRY_POTTER;","lastModifiedDate":"2022-03-10"},{"lineNumber":11,"author":{"gitId":"bingsen0806"},"content":"import static seedu.address.testutil.TypicalBooks.HUNGER_GAMES;","lastModifiedDate":"2022-03-10"},{"lineNumber":12,"author":{"gitId":"bingsen0806"},"content":"","lastModifiedDate":"2022-03-10"},{"lineNumber":13,"author":{"gitId":"bingsen0806"},"content":"import java.util.Collections;","lastModifiedDate":"2022-03-10"},{"lineNumber":14,"author":{"gitId":"bingsen0806"},"content":"import java.util.List;","lastModifiedDate":"2022-03-10"},{"lineNumber":15,"author":{"gitId":"bingsen0806"},"content":"","lastModifiedDate":"2022-03-10"},{"lineNumber":16,"author":{"gitId":"bingsen0806"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2022-03-10"},{"lineNumber":17,"author":{"gitId":"bingsen0806"},"content":"","lastModifiedDate":"2022-03-10"},{"lineNumber":18,"author":{"gitId":"bingsen0806"},"content":"import seedu.address.model.book.exceptions.BookNotFoundException;","lastModifiedDate":"2022-03-10"},{"lineNumber":19,"author":{"gitId":"bingsen0806"},"content":"import seedu.address.testutil.BookBuilder;","lastModifiedDate":"2022-03-10"},{"lineNumber":20,"author":{"gitId":"bingsen0806"},"content":"","lastModifiedDate":"2022-03-10"},{"lineNumber":21,"author":{"gitId":"bingsen0806"},"content":"public class BookListTest {","lastModifiedDate":"2022-03-10"},{"lineNumber":22,"author":{"gitId":"bingsen0806"},"content":"","lastModifiedDate":"2022-03-10"},{"lineNumber":23,"author":{"gitId":"bingsen0806"},"content":"    private final BookList bookList \u003d new BookList();","lastModifiedDate":"2022-03-10"},{"lineNumber":24,"author":{"gitId":"bingsen0806"},"content":"","lastModifiedDate":"2022-03-10"},{"lineNumber":25,"author":{"gitId":"bingsen0806"},"content":"    @Test","lastModifiedDate":"2022-03-10"},{"lineNumber":26,"author":{"gitId":"bingsen0806"},"content":"    public void contains_nullBook_throwsNullPointerException() {","lastModifiedDate":"2022-03-10"},{"lineNumber":27,"author":{"gitId":"bingsen0806"},"content":"        assertThrows(NullPointerException.class, () -\u003e bookList.contains(null));","lastModifiedDate":"2022-03-10"},{"lineNumber":28,"author":{"gitId":"bingsen0806"},"content":"    }","lastModifiedDate":"2022-03-10"},{"lineNumber":29,"author":{"gitId":"bingsen0806"},"content":"","lastModifiedDate":"2022-03-10"},{"lineNumber":30,"author":{"gitId":"bingsen0806"},"content":"    @Test","lastModifiedDate":"2022-03-10"},{"lineNumber":31,"author":{"gitId":"bingsen0806"},"content":"    public void contains_bookNotInList_returnsFalse() {","lastModifiedDate":"2022-03-10"},{"lineNumber":32,"author":{"gitId":"bingsen0806"},"content":"        assertFalse(bookList.contains(HARRY_POTTER));","lastModifiedDate":"2022-03-10"},{"lineNumber":33,"author":{"gitId":"bingsen0806"},"content":"    }","lastModifiedDate":"2022-03-10"},{"lineNumber":34,"author":{"gitId":"bingsen0806"},"content":"","lastModifiedDate":"2022-03-10"},{"lineNumber":35,"author":{"gitId":"bingsen0806"},"content":"    @Test","lastModifiedDate":"2022-03-10"},{"lineNumber":36,"author":{"gitId":"bingsen0806"},"content":"    public void contains_bookInList_returnsTrue() {","lastModifiedDate":"2022-03-10"},{"lineNumber":37,"author":{"gitId":"bingsen0806"},"content":"        bookList.add(HARRY_POTTER);","lastModifiedDate":"2022-03-10"},{"lineNumber":38,"author":{"gitId":"bingsen0806"},"content":"        assertTrue(bookList.contains(HARRY_POTTER));","lastModifiedDate":"2022-03-10"},{"lineNumber":39,"author":{"gitId":"bingsen0806"},"content":"    }","lastModifiedDate":"2022-03-10"},{"lineNumber":40,"author":{"gitId":"bingsen0806"},"content":"","lastModifiedDate":"2022-03-10"},{"lineNumber":41,"author":{"gitId":"bingsen0806"},"content":"    @Test","lastModifiedDate":"2022-03-10"},{"lineNumber":42,"author":{"gitId":"bingsen0806"},"content":"    public void contains_personWithSameIdentityFieldsInList_returnsTrue() {","lastModifiedDate":"2022-03-10"},{"lineNumber":43,"author":{"gitId":"bingsen0806"},"content":"        bookList.add(HARRY_POTTER);","lastModifiedDate":"2022-03-10"},{"lineNumber":44,"author":{"gitId":"bingsen0806"},"content":"        Book editedHarryPotter \u003d new BookBuilder(HARRY_POTTER).withName(VALID_BOOK_NAME_HUNGER_GAMES)","lastModifiedDate":"2022-03-10"},{"lineNumber":45,"author":{"gitId":"bingsen0806"},"content":"                .withAuthors(VALID_AUTHOR_SUZANNE_COLLINS)","lastModifiedDate":"2022-03-10"},{"lineNumber":46,"author":{"gitId":"bingsen0806"},"content":"                .withTags(VALID_TAG_SCIFI)","lastModifiedDate":"2022-03-10"},{"lineNumber":47,"author":{"gitId":"bingsen0806"},"content":"                .build();","lastModifiedDate":"2022-03-10"},{"lineNumber":48,"author":{"gitId":"bingsen0806"},"content":"        assertTrue(bookList.contains(editedHarryPotter));","lastModifiedDate":"2022-03-10"},{"lineNumber":49,"author":{"gitId":"bingsen0806"},"content":"    }","lastModifiedDate":"2022-03-10"},{"lineNumber":50,"author":{"gitId":"bingsen0806"},"content":"","lastModifiedDate":"2022-03-10"},{"lineNumber":51,"author":{"gitId":"bingsen0806"},"content":"    @Test","lastModifiedDate":"2022-03-10"},{"lineNumber":52,"author":{"gitId":"bingsen0806"},"content":"    public void add_nullBook_throwsNullPointerException() {","lastModifiedDate":"2022-03-10"},{"lineNumber":53,"author":{"gitId":"bingsen0806"},"content":"        assertThrows(NullPointerException.class, () -\u003e bookList.add(null));","lastModifiedDate":"2022-03-10"},{"lineNumber":54,"author":{"gitId":"bingsen0806"},"content":"    }","lastModifiedDate":"2022-03-10"},{"lineNumber":55,"author":{"gitId":"bingsen0806"},"content":"","lastModifiedDate":"2022-03-10"},{"lineNumber":56,"author":{"gitId":"bingsen0806"},"content":"    @Test","lastModifiedDate":"2022-03-10"},{"lineNumber":57,"author":{"gitId":"bingsen0806"},"content":"    public void setBook_nullTargetBook_throwsNullPointerException() {","lastModifiedDate":"2022-03-10"},{"lineNumber":58,"author":{"gitId":"bingsen0806"},"content":"        assertThrows(NullPointerException.class, () -\u003e bookList.setBook(null, HARRY_POTTER));","lastModifiedDate":"2022-03-10"},{"lineNumber":59,"author":{"gitId":"bingsen0806"},"content":"    }","lastModifiedDate":"2022-03-10"},{"lineNumber":60,"author":{"gitId":"bingsen0806"},"content":"","lastModifiedDate":"2022-03-10"},{"lineNumber":61,"author":{"gitId":"bingsen0806"},"content":"    @Test","lastModifiedDate":"2022-03-10"},{"lineNumber":62,"author":{"gitId":"bingsen0806"},"content":"    public void setBook_nullEditedBook_throwsNullPointerException() {","lastModifiedDate":"2022-03-10"},{"lineNumber":63,"author":{"gitId":"bingsen0806"},"content":"        assertThrows(NullPointerException.class, () -\u003e bookList.setBook(HARRY_POTTER, null));","lastModifiedDate":"2022-03-10"},{"lineNumber":64,"author":{"gitId":"bingsen0806"},"content":"    }","lastModifiedDate":"2022-03-10"},{"lineNumber":65,"author":{"gitId":"bingsen0806"},"content":"","lastModifiedDate":"2022-03-10"},{"lineNumber":66,"author":{"gitId":"bingsen0806"},"content":"    @Test","lastModifiedDate":"2022-03-10"},{"lineNumber":67,"author":{"gitId":"bingsen0806"},"content":"    public void setBook_targetBookNotInList_throwsBookNotFoundException() {","lastModifiedDate":"2022-03-10"},{"lineNumber":68,"author":{"gitId":"bingsen0806"},"content":"        assertThrows(BookNotFoundException.class, () -\u003e bookList.setBook(HARRY_POTTER, HARRY_POTTER));","lastModifiedDate":"2022-03-10"},{"lineNumber":69,"author":{"gitId":"bingsen0806"},"content":"    }","lastModifiedDate":"2022-03-10"},{"lineNumber":70,"author":{"gitId":"bingsen0806"},"content":"","lastModifiedDate":"2022-03-10"},{"lineNumber":71,"author":{"gitId":"bingsen0806"},"content":"    @Test","lastModifiedDate":"2022-03-10"},{"lineNumber":72,"author":{"gitId":"bingsen0806"},"content":"    public void setBook_editedBookIsSameBook_success() {","lastModifiedDate":"2022-03-10"},{"lineNumber":73,"author":{"gitId":"bingsen0806"},"content":"        bookList.add(HARRY_POTTER);","lastModifiedDate":"2022-03-10"},{"lineNumber":74,"author":{"gitId":"bingsen0806"},"content":"        bookList.setBook(HARRY_POTTER, HARRY_POTTER);","lastModifiedDate":"2022-03-10"},{"lineNumber":75,"author":{"gitId":"bingsen0806"},"content":"        BookList expectedBookList \u003d new BookList();","lastModifiedDate":"2022-03-10"},{"lineNumber":76,"author":{"gitId":"bingsen0806"},"content":"        expectedBookList.add(HARRY_POTTER);","lastModifiedDate":"2022-03-10"},{"lineNumber":77,"author":{"gitId":"bingsen0806"},"content":"        assertEquals(expectedBookList, bookList);","lastModifiedDate":"2022-03-10"},{"lineNumber":78,"author":{"gitId":"bingsen0806"},"content":"    }","lastModifiedDate":"2022-03-10"},{"lineNumber":79,"author":{"gitId":"bingsen0806"},"content":"","lastModifiedDate":"2022-03-10"},{"lineNumber":80,"author":{"gitId":"bingsen0806"},"content":"    @Test","lastModifiedDate":"2022-03-10"},{"lineNumber":81,"author":{"gitId":"bingsen0806"},"content":"    public void setBook_editedBookHasSameIdentity_success() {","lastModifiedDate":"2022-03-10"},{"lineNumber":82,"author":{"gitId":"bingsen0806"},"content":"        bookList.add(HARRY_POTTER);","lastModifiedDate":"2022-03-10"},{"lineNumber":83,"author":{"gitId":"bingsen0806"},"content":"        Book editedHarryPotter \u003d new BookBuilder(HARRY_POTTER).withAuthors(VALID_AUTHOR_SUZANNE_COLLINS)","lastModifiedDate":"2022-03-10"},{"lineNumber":84,"author":{"gitId":"bingsen0806"},"content":"                .withTags(VALID_TAG_SCIFI)","lastModifiedDate":"2022-03-10"},{"lineNumber":85,"author":{"gitId":"bingsen0806"},"content":"                .build();","lastModifiedDate":"2022-03-10"},{"lineNumber":86,"author":{"gitId":"bingsen0806"},"content":"        bookList.setBook(HARRY_POTTER, editedHarryPotter);","lastModifiedDate":"2022-03-10"},{"lineNumber":87,"author":{"gitId":"bingsen0806"},"content":"        BookList expectedBookList \u003d new BookList();","lastModifiedDate":"2022-03-10"},{"lineNumber":88,"author":{"gitId":"bingsen0806"},"content":"        expectedBookList.add(editedHarryPotter);","lastModifiedDate":"2022-03-10"},{"lineNumber":89,"author":{"gitId":"bingsen0806"},"content":"        assertEquals(expectedBookList, bookList);","lastModifiedDate":"2022-03-10"},{"lineNumber":90,"author":{"gitId":"bingsen0806"},"content":"    }","lastModifiedDate":"2022-03-10"},{"lineNumber":91,"author":{"gitId":"bingsen0806"},"content":"","lastModifiedDate":"2022-03-10"},{"lineNumber":92,"author":{"gitId":"bingsen0806"},"content":"    @Test","lastModifiedDate":"2022-03-10"},{"lineNumber":93,"author":{"gitId":"bingsen0806"},"content":"    public void setBook_editedBookHasDifferentIdentity_success() {","lastModifiedDate":"2022-03-10"},{"lineNumber":94,"author":{"gitId":"bingsen0806"},"content":"        bookList.add(HARRY_POTTER);","lastModifiedDate":"2022-03-10"},{"lineNumber":95,"author":{"gitId":"bingsen0806"},"content":"        bookList.setBook(HARRY_POTTER, HUNGER_GAMES);","lastModifiedDate":"2022-03-10"},{"lineNumber":96,"author":{"gitId":"bingsen0806"},"content":"        BookList expectedBookList \u003d new BookList();","lastModifiedDate":"2022-03-10"},{"lineNumber":97,"author":{"gitId":"bingsen0806"},"content":"        expectedBookList.add(HUNGER_GAMES);","lastModifiedDate":"2022-03-10"},{"lineNumber":98,"author":{"gitId":"bingsen0806"},"content":"        assertEquals(expectedBookList, bookList);","lastModifiedDate":"2022-03-10"},{"lineNumber":99,"author":{"gitId":"bingsen0806"},"content":"    }","lastModifiedDate":"2022-03-10"},{"lineNumber":100,"author":{"gitId":"bingsen0806"},"content":"","lastModifiedDate":"2022-03-10"},{"lineNumber":101,"author":{"gitId":"bingsen0806"},"content":"    @Test","lastModifiedDate":"2022-03-10"},{"lineNumber":102,"author":{"gitId":"bingsen0806"},"content":"    public void remove_nullBook_throwsNullPointerException() {","lastModifiedDate":"2022-03-10"},{"lineNumber":103,"author":{"gitId":"bingsen0806"},"content":"        assertThrows(NullPointerException.class, () -\u003e bookList.remove(null));","lastModifiedDate":"2022-03-10"},{"lineNumber":104,"author":{"gitId":"bingsen0806"},"content":"    }","lastModifiedDate":"2022-03-10"},{"lineNumber":105,"author":{"gitId":"bingsen0806"},"content":"","lastModifiedDate":"2022-03-10"},{"lineNumber":106,"author":{"gitId":"bingsen0806"},"content":"    @Test","lastModifiedDate":"2022-03-10"},{"lineNumber":107,"author":{"gitId":"bingsen0806"},"content":"    public void remove_bookDoesNotExist_throwsBookNotFoundException() {","lastModifiedDate":"2022-03-10"},{"lineNumber":108,"author":{"gitId":"bingsen0806"},"content":"        assertThrows(BookNotFoundException.class, () -\u003e bookList.remove(HARRY_POTTER));","lastModifiedDate":"2022-03-10"},{"lineNumber":109,"author":{"gitId":"bingsen0806"},"content":"    }","lastModifiedDate":"2022-03-10"},{"lineNumber":110,"author":{"gitId":"bingsen0806"},"content":"","lastModifiedDate":"2022-03-10"},{"lineNumber":111,"author":{"gitId":"bingsen0806"},"content":"    @Test","lastModifiedDate":"2022-03-10"},{"lineNumber":112,"author":{"gitId":"bingsen0806"},"content":"    public void remove_existingBook_removesBook() {","lastModifiedDate":"2022-03-10"},{"lineNumber":113,"author":{"gitId":"bingsen0806"},"content":"        bookList.add(HARRY_POTTER);","lastModifiedDate":"2022-03-10"},{"lineNumber":114,"author":{"gitId":"bingsen0806"},"content":"        bookList.remove(HARRY_POTTER);","lastModifiedDate":"2022-03-10"},{"lineNumber":115,"author":{"gitId":"bingsen0806"},"content":"        BookList expectedBookList \u003d new BookList();","lastModifiedDate":"2022-03-10"},{"lineNumber":116,"author":{"gitId":"bingsen0806"},"content":"        assertEquals(expectedBookList, bookList);","lastModifiedDate":"2022-03-10"},{"lineNumber":117,"author":{"gitId":"bingsen0806"},"content":"    }","lastModifiedDate":"2022-03-10"},{"lineNumber":118,"author":{"gitId":"bingsen0806"},"content":"","lastModifiedDate":"2022-03-10"},{"lineNumber":119,"author":{"gitId":"bingsen0806"},"content":"    @Test","lastModifiedDate":"2022-03-10"},{"lineNumber":120,"author":{"gitId":"bingsen0806"},"content":"    public void setBooks_nullBookList_throwsNullPointerException() {","lastModifiedDate":"2022-03-10"},{"lineNumber":121,"author":{"gitId":"bingsen0806"},"content":"        assertThrows(NullPointerException.class, () -\u003e bookList.setBooks((BookList) null));","lastModifiedDate":"2022-03-10"},{"lineNumber":122,"author":{"gitId":"bingsen0806"},"content":"    }","lastModifiedDate":"2022-03-10"},{"lineNumber":123,"author":{"gitId":"bingsen0806"},"content":"","lastModifiedDate":"2022-03-10"},{"lineNumber":124,"author":{"gitId":"bingsen0806"},"content":"    @Test","lastModifiedDate":"2022-03-10"},{"lineNumber":125,"author":{"gitId":"bingsen0806"},"content":"    public void setBooks_bookList_replacesOwnListWithProvidedBookList() {","lastModifiedDate":"2022-03-10"},{"lineNumber":126,"author":{"gitId":"bingsen0806"},"content":"        bookList.add(HARRY_POTTER);","lastModifiedDate":"2022-03-10"},{"lineNumber":127,"author":{"gitId":"bingsen0806"},"content":"        BookList expectedBookList \u003d new BookList();","lastModifiedDate":"2022-03-10"},{"lineNumber":128,"author":{"gitId":"bingsen0806"},"content":"        expectedBookList.add(HUNGER_GAMES);","lastModifiedDate":"2022-03-10"},{"lineNumber":129,"author":{"gitId":"bingsen0806"},"content":"        bookList.setBooks(expectedBookList);","lastModifiedDate":"2022-03-10"},{"lineNumber":130,"author":{"gitId":"bingsen0806"},"content":"        assertEquals(expectedBookList, bookList);","lastModifiedDate":"2022-03-10"},{"lineNumber":131,"author":{"gitId":"bingsen0806"},"content":"    }","lastModifiedDate":"2022-03-10"},{"lineNumber":132,"author":{"gitId":"bingsen0806"},"content":"","lastModifiedDate":"2022-03-10"},{"lineNumber":133,"author":{"gitId":"bingsen0806"},"content":"    @Test","lastModifiedDate":"2022-03-10"},{"lineNumber":134,"author":{"gitId":"bingsen0806"},"content":"    public void setBooks_nullList_throwsNullPointerException() {","lastModifiedDate":"2022-03-10"},{"lineNumber":135,"author":{"gitId":"bingsen0806"},"content":"        assertThrows(NullPointerException.class, () -\u003e bookList.setBooks((List\u003cBook\u003e) null));","lastModifiedDate":"2022-03-10"},{"lineNumber":136,"author":{"gitId":"bingsen0806"},"content":"    }","lastModifiedDate":"2022-03-10"},{"lineNumber":137,"author":{"gitId":"bingsen0806"},"content":"","lastModifiedDate":"2022-03-10"},{"lineNumber":138,"author":{"gitId":"bingsen0806"},"content":"    @Test","lastModifiedDate":"2022-03-10"},{"lineNumber":139,"author":{"gitId":"bingsen0806"},"content":"    public void setBooks_list_replacesOwnListWithProvidedList() {","lastModifiedDate":"2022-03-10"},{"lineNumber":140,"author":{"gitId":"bingsen0806"},"content":"        bookList.add(HARRY_POTTER);","lastModifiedDate":"2022-03-10"},{"lineNumber":141,"author":{"gitId":"bingsen0806"},"content":"        List\u003cBook\u003e listOfBooks \u003d Collections.singletonList(HUNGER_GAMES);","lastModifiedDate":"2022-03-10"},{"lineNumber":142,"author":{"gitId":"bingsen0806"},"content":"        bookList.setBooks(listOfBooks);","lastModifiedDate":"2022-03-10"},{"lineNumber":143,"author":{"gitId":"bingsen0806"},"content":"        BookList expectedBookList \u003d new BookList();","lastModifiedDate":"2022-03-10"},{"lineNumber":144,"author":{"gitId":"bingsen0806"},"content":"        expectedBookList.add(HUNGER_GAMES);","lastModifiedDate":"2022-03-10"},{"lineNumber":145,"author":{"gitId":"bingsen0806"},"content":"        assertEquals(expectedBookList, bookList);","lastModifiedDate":"2022-03-10"},{"lineNumber":146,"author":{"gitId":"bingsen0806"},"content":"    }","lastModifiedDate":"2022-03-10"},{"lineNumber":147,"author":{"gitId":"bingsen0806"},"content":"","lastModifiedDate":"2022-03-10"},{"lineNumber":148,"author":{"gitId":"bingsen0806"},"content":"    @Test","lastModifiedDate":"2022-03-10"},{"lineNumber":149,"author":{"gitId":"bingsen0806"},"content":"    public void asUnmodifiableObservableList_modifyList_throwsUnsupportedOperationException() {","lastModifiedDate":"2022-03-10"},{"lineNumber":150,"author":{"gitId":"bingsen0806"},"content":"        assertThrows(UnsupportedOperationException.class, ()","lastModifiedDate":"2022-03-10"},{"lineNumber":151,"author":{"gitId":"bingsen0806"},"content":"            -\u003e bookList.asUnmodifiableObservableList().remove(0));","lastModifiedDate":"2022-03-10"},{"lineNumber":152,"author":{"gitId":"bingsen0806"},"content":"    }","lastModifiedDate":"2022-03-10"},{"lineNumber":153,"author":{"gitId":"bingsen0806"},"content":"}","lastModifiedDate":"2022-03-10"}],"authorContributionMap":{"bingsen0806":153}},{"path":"src/test/java/seedu/address/model/book/BookNameContainsKeywordsPredicateTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"bingsen0806"},"content":"package seedu.address.model.book;","lastModifiedDate":"2022-03-10"},{"lineNumber":2,"author":{"gitId":"bingsen0806"},"content":"","lastModifiedDate":"2022-03-10"},{"lineNumber":3,"author":{"gitId":"bingsen0806"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2022-03-10"},{"lineNumber":4,"author":{"gitId":"bingsen0806"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2022-03-10"},{"lineNumber":5,"author":{"gitId":"bingsen0806"},"content":"","lastModifiedDate":"2022-03-10"},{"lineNumber":6,"author":{"gitId":"bingsen0806"},"content":"import java.util.Arrays;","lastModifiedDate":"2022-03-10"},{"lineNumber":7,"author":{"gitId":"bingsen0806"},"content":"import java.util.Collections;","lastModifiedDate":"2022-03-10"},{"lineNumber":8,"author":{"gitId":"bingsen0806"},"content":"import java.util.List;","lastModifiedDate":"2022-03-10"},{"lineNumber":9,"author":{"gitId":"bingsen0806"},"content":"","lastModifiedDate":"2022-03-10"},{"lineNumber":10,"author":{"gitId":"bingsen0806"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2022-03-10"},{"lineNumber":11,"author":{"gitId":"bingsen0806"},"content":"","lastModifiedDate":"2022-03-10"},{"lineNumber":12,"author":{"gitId":"bingsen0806"},"content":"import seedu.address.testutil.BookBuilder;","lastModifiedDate":"2022-03-10"},{"lineNumber":13,"author":{"gitId":"bingsen0806"},"content":"","lastModifiedDate":"2022-03-10"},{"lineNumber":14,"author":{"gitId":"bingsen0806"},"content":"public class BookNameContainsKeywordsPredicateTest {","lastModifiedDate":"2022-03-10"},{"lineNumber":15,"author":{"gitId":"bingsen0806"},"content":"","lastModifiedDate":"2022-03-10"},{"lineNumber":16,"author":{"gitId":"bingsen0806"},"content":"    @Test","lastModifiedDate":"2022-03-10"},{"lineNumber":17,"author":{"gitId":"bingsen0806"},"content":"    public void equals() {","lastModifiedDate":"2022-03-10"},{"lineNumber":18,"author":{"gitId":"bingsen0806"},"content":"        List\u003cString\u003e firstPredicateKeywordList \u003d Collections.singletonList(\"first\");","lastModifiedDate":"2022-03-10"},{"lineNumber":19,"author":{"gitId":"bingsen0806"},"content":"        List\u003cString\u003e secondPredicateKeywordList \u003d Arrays.asList(\"first\", \"second\");","lastModifiedDate":"2022-03-10"},{"lineNumber":20,"author":{"gitId":"bingsen0806"},"content":"","lastModifiedDate":"2022-03-10"},{"lineNumber":21,"author":{"gitId":"bingsen0806"},"content":"        BookNameContainsKeywordsPredicate firstPredicate \u003d","lastModifiedDate":"2022-03-10"},{"lineNumber":22,"author":{"gitId":"bingsen0806"},"content":"                new BookNameContainsKeywordsPredicate(firstPredicateKeywordList);","lastModifiedDate":"2022-03-10"},{"lineNumber":23,"author":{"gitId":"bingsen0806"},"content":"        BookNameContainsKeywordsPredicate secondPredicate \u003d","lastModifiedDate":"2022-03-10"},{"lineNumber":24,"author":{"gitId":"bingsen0806"},"content":"                new BookNameContainsKeywordsPredicate(secondPredicateKeywordList);","lastModifiedDate":"2022-03-10"},{"lineNumber":25,"author":{"gitId":"bingsen0806"},"content":"","lastModifiedDate":"2022-03-10"},{"lineNumber":26,"author":{"gitId":"bingsen0806"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2022-03-10"},{"lineNumber":27,"author":{"gitId":"bingsen0806"},"content":"        assertTrue(firstPredicate.equals(firstPredicate));","lastModifiedDate":"2022-03-10"},{"lineNumber":28,"author":{"gitId":"bingsen0806"},"content":"","lastModifiedDate":"2022-03-10"},{"lineNumber":29,"author":{"gitId":"bingsen0806"},"content":"        // same values -\u003e returns true","lastModifiedDate":"2022-03-10"},{"lineNumber":30,"author":{"gitId":"bingsen0806"},"content":"        BookNameContainsKeywordsPredicate firstPredicateCopy \u003d","lastModifiedDate":"2022-03-10"},{"lineNumber":31,"author":{"gitId":"bingsen0806"},"content":"                new BookNameContainsKeywordsPredicate(firstPredicateKeywordList);","lastModifiedDate":"2022-03-10"},{"lineNumber":32,"author":{"gitId":"bingsen0806"},"content":"        assertTrue(firstPredicate.equals(firstPredicateCopy));","lastModifiedDate":"2022-03-10"},{"lineNumber":33,"author":{"gitId":"bingsen0806"},"content":"","lastModifiedDate":"2022-03-10"},{"lineNumber":34,"author":{"gitId":"bingsen0806"},"content":"        // different types -\u003e returns false","lastModifiedDate":"2022-03-10"},{"lineNumber":35,"author":{"gitId":"bingsen0806"},"content":"        assertFalse(firstPredicate.equals(1));","lastModifiedDate":"2022-03-10"},{"lineNumber":36,"author":{"gitId":"bingsen0806"},"content":"","lastModifiedDate":"2022-03-10"},{"lineNumber":37,"author":{"gitId":"bingsen0806"},"content":"        // null -\u003e returns false","lastModifiedDate":"2022-03-10"},{"lineNumber":38,"author":{"gitId":"bingsen0806"},"content":"        assertFalse(firstPredicate.equals(null));","lastModifiedDate":"2022-03-10"},{"lineNumber":39,"author":{"gitId":"bingsen0806"},"content":"","lastModifiedDate":"2022-03-10"},{"lineNumber":40,"author":{"gitId":"bingsen0806"},"content":"        // different person -\u003e returns false","lastModifiedDate":"2022-03-10"},{"lineNumber":41,"author":{"gitId":"bingsen0806"},"content":"        assertFalse(firstPredicate.equals(secondPredicate));","lastModifiedDate":"2022-03-10"},{"lineNumber":42,"author":{"gitId":"bingsen0806"},"content":"    }","lastModifiedDate":"2022-03-10"},{"lineNumber":43,"author":{"gitId":"bingsen0806"},"content":"","lastModifiedDate":"2022-03-10"},{"lineNumber":44,"author":{"gitId":"bingsen0806"},"content":"    @Test","lastModifiedDate":"2022-03-10"},{"lineNumber":45,"author":{"gitId":"bingsen0806"},"content":"    public void test_nameContainsKeywords_returnsTrue() {","lastModifiedDate":"2022-03-10"},{"lineNumber":46,"author":{"gitId":"bingsen0806"},"content":"        // One keyword","lastModifiedDate":"2022-03-10"},{"lineNumber":47,"author":{"gitId":"bingsen0806"},"content":"        BookNameContainsKeywordsPredicate predicate \u003d","lastModifiedDate":"2022-03-10"},{"lineNumber":48,"author":{"gitId":"bingsen0806"},"content":"                new BookNameContainsKeywordsPredicate(Collections.singletonList(\"Alice\"));","lastModifiedDate":"2022-03-10"},{"lineNumber":49,"author":{"gitId":"bingsen0806"},"content":"        assertTrue(predicate.test(new BookBuilder().withName(\"Alice Bob\").build()));","lastModifiedDate":"2022-03-10"},{"lineNumber":50,"author":{"gitId":"bingsen0806"},"content":"","lastModifiedDate":"2022-03-10"},{"lineNumber":51,"author":{"gitId":"bingsen0806"},"content":"        // Multiple keywords","lastModifiedDate":"2022-03-10"},{"lineNumber":52,"author":{"gitId":"bingsen0806"},"content":"        predicate \u003d new BookNameContainsKeywordsPredicate(Arrays.asList(\"Alice\", \"Bob\"));","lastModifiedDate":"2022-03-10"},{"lineNumber":53,"author":{"gitId":"bingsen0806"},"content":"        assertTrue(predicate.test(new BookBuilder().withName(\"Alice Bob\").build()));","lastModifiedDate":"2022-03-10"},{"lineNumber":54,"author":{"gitId":"bingsen0806"},"content":"","lastModifiedDate":"2022-03-10"},{"lineNumber":55,"author":{"gitId":"bingsen0806"},"content":"        // Only one matching keyword","lastModifiedDate":"2022-03-10"},{"lineNumber":56,"author":{"gitId":"bingsen0806"},"content":"        predicate \u003d new BookNameContainsKeywordsPredicate(Arrays.asList(\"Bob\", \"Carol\"));","lastModifiedDate":"2022-03-10"},{"lineNumber":57,"author":{"gitId":"bingsen0806"},"content":"        assertTrue(predicate.test(new BookBuilder().withName(\"Alice Carol\").build()));","lastModifiedDate":"2022-03-10"},{"lineNumber":58,"author":{"gitId":"bingsen0806"},"content":"","lastModifiedDate":"2022-03-10"},{"lineNumber":59,"author":{"gitId":"bingsen0806"},"content":"        // Mixed-case keywords","lastModifiedDate":"2022-03-10"},{"lineNumber":60,"author":{"gitId":"bingsen0806"},"content":"        predicate \u003d new BookNameContainsKeywordsPredicate(Arrays.asList(\"aLIce\", \"bOB\"));","lastModifiedDate":"2022-03-10"},{"lineNumber":61,"author":{"gitId":"bingsen0806"},"content":"        assertTrue(predicate.test(new BookBuilder().withName(\"Alice Bob\").build()));","lastModifiedDate":"2022-03-10"},{"lineNumber":62,"author":{"gitId":"bingsen0806"},"content":"    }","lastModifiedDate":"2022-03-10"},{"lineNumber":63,"author":{"gitId":"bingsen0806"},"content":"","lastModifiedDate":"2022-03-10"},{"lineNumber":64,"author":{"gitId":"bingsen0806"},"content":"    @Test","lastModifiedDate":"2022-03-10"},{"lineNumber":65,"author":{"gitId":"bingsen0806"},"content":"    public void test_nameDoesNotContainKeywords_returnsFalse() {","lastModifiedDate":"2022-03-10"},{"lineNumber":66,"author":{"gitId":"bingsen0806"},"content":"        // Zero keywords","lastModifiedDate":"2022-03-10"},{"lineNumber":67,"author":{"gitId":"bingsen0806"},"content":"        BookNameContainsKeywordsPredicate predicate \u003d new BookNameContainsKeywordsPredicate(Collections.emptyList());","lastModifiedDate":"2022-03-10"},{"lineNumber":68,"author":{"gitId":"bingsen0806"},"content":"        assertFalse(predicate.test(new BookBuilder().withName(\"Harry Potter\").build()));","lastModifiedDate":"2022-03-10"},{"lineNumber":69,"author":{"gitId":"bingsen0806"},"content":"","lastModifiedDate":"2022-03-10"},{"lineNumber":70,"author":{"gitId":"bingsen0806"},"content":"        // Non-matching keyword","lastModifiedDate":"2022-03-10"},{"lineNumber":71,"author":{"gitId":"bingsen0806"},"content":"        predicate \u003d new BookNameContainsKeywordsPredicate(Arrays.asList(\"Harry\", \"Potter\"));","lastModifiedDate":"2022-03-10"},{"lineNumber":72,"author":{"gitId":"bingsen0806"},"content":"        assertFalse(predicate.test(new BookBuilder().withName(\"Hunger Games\").build()));","lastModifiedDate":"2022-03-10"},{"lineNumber":73,"author":{"gitId":"bingsen0806"},"content":"","lastModifiedDate":"2022-03-10"},{"lineNumber":74,"author":{"gitId":"bingsen0806"},"content":"        // Keywords match isbn, but does not match name","lastModifiedDate":"2022-03-10"},{"lineNumber":75,"author":{"gitId":"bingsen0806"},"content":"        predicate \u003d new BookNameContainsKeywordsPredicate(Arrays.asList(\"978-71617-018-8-5\"));","lastModifiedDate":"2022-03-10"},{"lineNumber":76,"author":{"gitId":"bingsen0806"},"content":"        assertFalse(predicate.test(new BookBuilder().withName(\"Harry Potter\")","lastModifiedDate":"2022-03-10"},{"lineNumber":77,"author":{"gitId":"bingsen0806"},"content":"            .withIsbn(\"978-71617-018-8-5\").build()));","lastModifiedDate":"2022-03-10"},{"lineNumber":78,"author":{"gitId":"bingsen0806"},"content":"    }","lastModifiedDate":"2022-03-10"},{"lineNumber":79,"author":{"gitId":"bingsen0806"},"content":"}","lastModifiedDate":"2022-03-10"}],"authorContributionMap":{"bingsen0806":79}},{"path":"src/test/java/seedu/address/model/book/BookNameTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"bingsen0806"},"content":"package seedu.address.model.book;","lastModifiedDate":"2022-03-09"},{"lineNumber":2,"author":{"gitId":"bingsen0806"},"content":"","lastModifiedDate":"2022-03-09"},{"lineNumber":3,"author":{"gitId":"bingsen0806"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2022-03-09"},{"lineNumber":4,"author":{"gitId":"bingsen0806"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2022-03-09"},{"lineNumber":5,"author":{"gitId":"bingsen0806"},"content":"import static seedu.address.testutil.Assert.assertThrows;","lastModifiedDate":"2022-03-09"},{"lineNumber":6,"author":{"gitId":"bingsen0806"},"content":"","lastModifiedDate":"2022-03-09"},{"lineNumber":7,"author":{"gitId":"bingsen0806"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2022-03-09"},{"lineNumber":8,"author":{"gitId":"bingsen0806"},"content":"","lastModifiedDate":"2022-03-09"},{"lineNumber":9,"author":{"gitId":"bingsen0806"},"content":"public class BookNameTest {","lastModifiedDate":"2022-03-09"},{"lineNumber":10,"author":{"gitId":"bingsen0806"},"content":"","lastModifiedDate":"2022-03-09"},{"lineNumber":11,"author":{"gitId":"bingsen0806"},"content":"    @Test","lastModifiedDate":"2022-03-09"},{"lineNumber":12,"author":{"gitId":"bingsen0806"},"content":"    public void constructor_null_throwsNullPointerException() {","lastModifiedDate":"2022-03-09"},{"lineNumber":13,"author":{"gitId":"bingsen0806"},"content":"        assertThrows(NullPointerException.class, () -\u003e new BookName(null));","lastModifiedDate":"2022-03-09"},{"lineNumber":14,"author":{"gitId":"bingsen0806"},"content":"    }","lastModifiedDate":"2022-03-09"},{"lineNumber":15,"author":{"gitId":"bingsen0806"},"content":"","lastModifiedDate":"2022-03-09"},{"lineNumber":16,"author":{"gitId":"bingsen0806"},"content":"    @Test","lastModifiedDate":"2022-03-09"},{"lineNumber":17,"author":{"gitId":"bingsen0806"},"content":"    public void constructor_invalidName_throwsIllegalArgumentException() {","lastModifiedDate":"2022-03-09"},{"lineNumber":18,"author":{"gitId":"bingsen0806"},"content":"        String invalidName \u003d \"\";","lastModifiedDate":"2022-03-09"},{"lineNumber":19,"author":{"gitId":"bingsen0806"},"content":"        assertThrows(IllegalArgumentException.class, () -\u003e new BookName(invalidName));","lastModifiedDate":"2022-03-09"},{"lineNumber":20,"author":{"gitId":"bingsen0806"},"content":"    }","lastModifiedDate":"2022-03-09"},{"lineNumber":21,"author":{"gitId":"bingsen0806"},"content":"","lastModifiedDate":"2022-03-09"},{"lineNumber":22,"author":{"gitId":"bingsen0806"},"content":"    @Test","lastModifiedDate":"2022-03-09"},{"lineNumber":23,"author":{"gitId":"bingsen0806"},"content":"    public void isValidBookName() {","lastModifiedDate":"2022-03-09"},{"lineNumber":24,"author":{"gitId":"bingsen0806"},"content":"        // null book name","lastModifiedDate":"2022-03-09"},{"lineNumber":25,"author":{"gitId":"bingsen0806"},"content":"        assertThrows(NullPointerException.class, () -\u003e BookName.isValidBookName(null));","lastModifiedDate":"2022-03-09"},{"lineNumber":26,"author":{"gitId":"bingsen0806"},"content":"","lastModifiedDate":"2022-03-09"},{"lineNumber":27,"author":{"gitId":"bingsen0806"},"content":"        // invalid book name","lastModifiedDate":"2022-03-09"},{"lineNumber":28,"author":{"gitId":"bingsen0806"},"content":"        assertFalse(BookName.isValidBookName(\"\")); // empty string","lastModifiedDate":"2022-03-09"},{"lineNumber":29,"author":{"gitId":"bingsen0806"},"content":"        assertFalse(BookName.isValidBookName(\" \")); // spaces only","lastModifiedDate":"2022-03-09"},{"lineNumber":30,"author":{"gitId":"bingsen0806"},"content":"        assertFalse(BookName.isValidBookName(\"^\")); // only non-alphanumeric characters","lastModifiedDate":"2022-03-09"},{"lineNumber":31,"author":{"gitId":"bingsen0806"},"content":"        assertFalse(BookName.isValidBookName(\"Harry\u0026Potter\")); // contains non-alphanumeric characters not : or \u0027","lastModifiedDate":"2022-03-09"},{"lineNumber":32,"author":{"gitId":"bingsen0806"},"content":"        assertFalse(BookName.isValidBookName(\" HarryPotter\")); // starts with non-alphanumeric character","lastModifiedDate":"2022-03-09"},{"lineNumber":33,"author":{"gitId":"bingsen0806"},"content":"","lastModifiedDate":"2022-03-09"},{"lineNumber":34,"author":{"gitId":"bingsen0806"},"content":"        // valid name","lastModifiedDate":"2022-03-09"},{"lineNumber":35,"author":{"gitId":"bingsen0806"},"content":"        assertTrue(BookName.isValidBookName(\"Harry Potter\")); //alphabets only","lastModifiedDate":"2022-03-09"},{"lineNumber":36,"author":{"gitId":"bingsen0806"},"content":"        assertTrue(BookName.isValidBookName(\"123\")); // numbers only","lastModifiedDate":"2022-03-09"},{"lineNumber":37,"author":{"gitId":"bingsen0806"},"content":"        assertTrue(BookName.isValidBookName(\"Harry Potter 2\")); // alphanumeric characters","lastModifiedDate":"2022-03-09"},{"lineNumber":38,"author":{"gitId":"bingsen0806"},"content":"        assertTrue(BookName.isValidBookName(\"Harry Potter 1 The Philosopher\u0027s Stone\")); // with \u0027 character","lastModifiedDate":"2022-03-09"},{"lineNumber":39,"author":{"gitId":"bingsen0806"},"content":"        assertTrue(BookName.isValidBookName(\"Algorithms: 1st Edition\")); // with : character","lastModifiedDate":"2022-03-09"},{"lineNumber":40,"author":{"gitId":"bingsen0806"},"content":"    }","lastModifiedDate":"2022-03-09"},{"lineNumber":41,"author":{"gitId":"bingsen0806"},"content":"}","lastModifiedDate":"2022-03-09"},{"lineNumber":42,"author":{"gitId":"bingsen0806"},"content":"","lastModifiedDate":"2022-03-09"}],"authorContributionMap":{"bingsen0806":42}},{"path":"src/test/java/seedu/address/model/book/BookTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"bingsen0806"},"content":"package seedu.address.model.book;","lastModifiedDate":"2022-03-09"},{"lineNumber":2,"author":{"gitId":"bingsen0806"},"content":"","lastModifiedDate":"2022-03-09"},{"lineNumber":3,"author":{"gitId":"bingsen0806"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2022-03-09"},{"lineNumber":4,"author":{"gitId":"bingsen0806"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2022-03-09"},{"lineNumber":5,"author":{"gitId":"bingsen0806"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_AUTHOR_SUZANNE_COLLINS;","lastModifiedDate":"2022-03-09"},{"lineNumber":6,"author":{"gitId":"bingsen0806"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_BOOK_NAME_HUNGER_GAMES;","lastModifiedDate":"2022-03-09"},{"lineNumber":7,"author":{"gitId":"bingsen0806"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_ISBN_HARRY_POTTER_2;","lastModifiedDate":"2022-03-09"},{"lineNumber":8,"author":{"gitId":"bingsen0806"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_ISBN_HUNGER_GAMES;","lastModifiedDate":"2022-03-09"},{"lineNumber":9,"author":{"gitId":"bingsen0806"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_TAG_SCIFI;","lastModifiedDate":"2022-03-09"},{"lineNumber":10,"author":{"gitId":"bingsen0806"},"content":"import static seedu.address.testutil.Assert.assertThrows;","lastModifiedDate":"2022-03-09"},{"lineNumber":11,"author":{"gitId":"bingsen0806"},"content":"import static seedu.address.testutil.TypicalBooks.HARRY_POTTER;","lastModifiedDate":"2022-03-09"},{"lineNumber":12,"author":{"gitId":"bingsen0806"},"content":"import static seedu.address.testutil.TypicalBooks.SEMAPHORE;","lastModifiedDate":"2022-03-09"},{"lineNumber":13,"author":{"gitId":"bingsen0806"},"content":"","lastModifiedDate":"2022-03-09"},{"lineNumber":14,"author":{"gitId":"bingsen0806"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2022-03-09"},{"lineNumber":15,"author":{"gitId":"bingsen0806"},"content":"","lastModifiedDate":"2022-03-09"},{"lineNumber":16,"author":{"gitId":"bingsen0806"},"content":"import seedu.address.testutil.BookBuilder;","lastModifiedDate":"2022-03-09"},{"lineNumber":17,"author":{"gitId":"bingsen0806"},"content":"","lastModifiedDate":"2022-03-09"},{"lineNumber":18,"author":{"gitId":"bingsen0806"},"content":"public class BookTest {","lastModifiedDate":"2022-03-09"},{"lineNumber":19,"author":{"gitId":"bingsen0806"},"content":"","lastModifiedDate":"2022-03-09"},{"lineNumber":20,"author":{"gitId":"bingsen0806"},"content":"    @Test","lastModifiedDate":"2022-03-09"},{"lineNumber":21,"author":{"gitId":"bingsen0806"},"content":"    public void asObservableList_modifyList_throwsUnsupportedOperationException() {","lastModifiedDate":"2022-03-09"},{"lineNumber":22,"author":{"gitId":"bingsen0806"},"content":"        Book book \u003d new BookBuilder().build();","lastModifiedDate":"2022-03-09"},{"lineNumber":23,"author":{"gitId":"bingsen0806"},"content":"        assertThrows(UnsupportedOperationException.class, () -\u003e book.getTags().remove(0));","lastModifiedDate":"2022-03-09"},{"lineNumber":24,"author":{"gitId":"bingsen0806"},"content":"    }","lastModifiedDate":"2022-03-09"},{"lineNumber":25,"author":{"gitId":"bingsen0806"},"content":"","lastModifiedDate":"2022-03-09"},{"lineNumber":26,"author":{"gitId":"bingsen0806"},"content":"    @Test","lastModifiedDate":"2022-03-09"},{"lineNumber":27,"author":{"gitId":"bingsen0806"},"content":"    public void isSameBook() {","lastModifiedDate":"2022-03-09"},{"lineNumber":28,"author":{"gitId":"bingsen0806"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2022-03-09"},{"lineNumber":29,"author":{"gitId":"bingsen0806"},"content":"        assertTrue(HARRY_POTTER.isSameBook(HARRY_POTTER));","lastModifiedDate":"2022-03-09"},{"lineNumber":30,"author":{"gitId":"bingsen0806"},"content":"","lastModifiedDate":"2022-03-09"},{"lineNumber":31,"author":{"gitId":"bingsen0806"},"content":"        // null -\u003e returns false","lastModifiedDate":"2022-03-09"},{"lineNumber":32,"author":{"gitId":"bingsen0806"},"content":"        assertFalse(HARRY_POTTER.isSameBook(null));","lastModifiedDate":"2022-03-09"},{"lineNumber":33,"author":{"gitId":"bingsen0806"},"content":"","lastModifiedDate":"2022-03-09"},{"lineNumber":34,"author":{"gitId":"bingsen0806"},"content":"        // same isbn, all other attributes different -\u003e returns true","lastModifiedDate":"2022-03-09"},{"lineNumber":35,"author":{"gitId":"bingsen0806"},"content":"        Book editedAlice \u003d new BookBuilder(HARRY_POTTER).withName(VALID_BOOK_NAME_HUNGER_GAMES)","lastModifiedDate":"2022-03-09"},{"lineNumber":36,"author":{"gitId":"bingsen0806"},"content":"                .withAuthors(VALID_AUTHOR_SUZANNE_COLLINS)","lastModifiedDate":"2022-03-09"},{"lineNumber":37,"author":{"gitId":"bingsen0806"},"content":"                .withTags(VALID_TAG_SCIFI).build();","lastModifiedDate":"2022-03-09"},{"lineNumber":38,"author":{"gitId":"bingsen0806"},"content":"        assertTrue(HARRY_POTTER.isSameBook(editedAlice));","lastModifiedDate":"2022-03-09"},{"lineNumber":39,"author":{"gitId":"bingsen0806"},"content":"","lastModifiedDate":"2022-03-09"},{"lineNumber":40,"author":{"gitId":"bingsen0806"},"content":"        // different isbn, all other attributes same -\u003e returns false","lastModifiedDate":"2022-03-09"},{"lineNumber":41,"author":{"gitId":"bingsen0806"},"content":"        editedAlice \u003d new BookBuilder(HARRY_POTTER).withIsbn(VALID_ISBN_HUNGER_GAMES).build();","lastModifiedDate":"2022-03-09"},{"lineNumber":42,"author":{"gitId":"bingsen0806"},"content":"        assertFalse(HARRY_POTTER.isSameBook(editedAlice));","lastModifiedDate":"2022-03-09"},{"lineNumber":43,"author":{"gitId":"bingsen0806"},"content":"    }","lastModifiedDate":"2022-03-09"},{"lineNumber":44,"author":{"gitId":"bingsen0806"},"content":"","lastModifiedDate":"2022-03-09"},{"lineNumber":45,"author":{"gitId":"bingsen0806"},"content":"    @Test","lastModifiedDate":"2022-03-09"},{"lineNumber":46,"author":{"gitId":"bingsen0806"},"content":"    public void equals() {","lastModifiedDate":"2022-03-09"},{"lineNumber":47,"author":{"gitId":"bingsen0806"},"content":"        // same values -\u003e returns true","lastModifiedDate":"2022-03-09"},{"lineNumber":48,"author":{"gitId":"bingsen0806"},"content":"        Book harryPotterCopy \u003d new BookBuilder(HARRY_POTTER).build();","lastModifiedDate":"2022-03-09"},{"lineNumber":49,"author":{"gitId":"bingsen0806"},"content":"        assertTrue(HARRY_POTTER.equals(harryPotterCopy));","lastModifiedDate":"2022-03-09"},{"lineNumber":50,"author":{"gitId":"bingsen0806"},"content":"","lastModifiedDate":"2022-03-09"},{"lineNumber":51,"author":{"gitId":"bingsen0806"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2022-03-09"},{"lineNumber":52,"author":{"gitId":"bingsen0806"},"content":"        assertTrue(HARRY_POTTER.equals(HARRY_POTTER));","lastModifiedDate":"2022-03-09"},{"lineNumber":53,"author":{"gitId":"bingsen0806"},"content":"","lastModifiedDate":"2022-03-09"},{"lineNumber":54,"author":{"gitId":"bingsen0806"},"content":"        // null -\u003e returns false","lastModifiedDate":"2022-03-09"},{"lineNumber":55,"author":{"gitId":"bingsen0806"},"content":"        assertFalse(HARRY_POTTER.equals(null));","lastModifiedDate":"2022-03-09"},{"lineNumber":56,"author":{"gitId":"bingsen0806"},"content":"","lastModifiedDate":"2022-03-09"},{"lineNumber":57,"author":{"gitId":"bingsen0806"},"content":"        // different type -\u003e returns false","lastModifiedDate":"2022-03-09"},{"lineNumber":58,"author":{"gitId":"bingsen0806"},"content":"        assertFalse(HARRY_POTTER.equals(5));","lastModifiedDate":"2022-03-09"},{"lineNumber":59,"author":{"gitId":"bingsen0806"},"content":"","lastModifiedDate":"2022-03-09"},{"lineNumber":60,"author":{"gitId":"bingsen0806"},"content":"        // different book -\u003e returns false","lastModifiedDate":"2022-03-09"},{"lineNumber":61,"author":{"gitId":"bingsen0806"},"content":"        assertFalse(HARRY_POTTER.equals(SEMAPHORE));","lastModifiedDate":"2022-03-09"},{"lineNumber":62,"author":{"gitId":"bingsen0806"},"content":"","lastModifiedDate":"2022-03-09"},{"lineNumber":63,"author":{"gitId":"bingsen0806"},"content":"        // different name -\u003e returns false","lastModifiedDate":"2022-03-09"},{"lineNumber":64,"author":{"gitId":"bingsen0806"},"content":"        Book editedHarryPotter \u003d new BookBuilder(HARRY_POTTER).withName(VALID_BOOK_NAME_HUNGER_GAMES).build();","lastModifiedDate":"2022-03-09"},{"lineNumber":65,"author":{"gitId":"bingsen0806"},"content":"        assertFalse(HARRY_POTTER.equals(editedHarryPotter));","lastModifiedDate":"2022-03-09"},{"lineNumber":66,"author":{"gitId":"bingsen0806"},"content":"","lastModifiedDate":"2022-03-09"},{"lineNumber":67,"author":{"gitId":"bingsen0806"},"content":"        // different isbn -\u003e returns false","lastModifiedDate":"2022-03-09"},{"lineNumber":68,"author":{"gitId":"bingsen0806"},"content":"        editedHarryPotter \u003d new BookBuilder(HARRY_POTTER).withIsbn(VALID_ISBN_HUNGER_GAMES).build();","lastModifiedDate":"2022-03-09"},{"lineNumber":69,"author":{"gitId":"bingsen0806"},"content":"        assertFalse(HARRY_POTTER.equals(editedHarryPotter));","lastModifiedDate":"2022-03-09"},{"lineNumber":70,"author":{"gitId":"bingsen0806"},"content":"","lastModifiedDate":"2022-03-09"},{"lineNumber":71,"author":{"gitId":"bingsen0806"},"content":"        // same isbn but different hyphen positions -\u003e returns true","lastModifiedDate":"2022-03-09"},{"lineNumber":72,"author":{"gitId":"bingsen0806"},"content":"        editedHarryPotter \u003d new BookBuilder(HARRY_POTTER).withIsbn(VALID_ISBN_HARRY_POTTER_2).build();","lastModifiedDate":"2022-03-09"},{"lineNumber":73,"author":{"gitId":"bingsen0806"},"content":"        assertTrue(HARRY_POTTER.equals(editedHarryPotter));","lastModifiedDate":"2022-03-09"},{"lineNumber":74,"author":{"gitId":"bingsen0806"},"content":"","lastModifiedDate":"2022-03-09"},{"lineNumber":75,"author":{"gitId":"bingsen0806"},"content":"        // different tags -\u003e returns false","lastModifiedDate":"2022-03-09"},{"lineNumber":76,"author":{"gitId":"bingsen0806"},"content":"        editedHarryPotter \u003d new BookBuilder(HARRY_POTTER).withTags(VALID_TAG_SCIFI).build();","lastModifiedDate":"2022-03-09"},{"lineNumber":77,"author":{"gitId":"bingsen0806"},"content":"        assertFalse(HARRY_POTTER.equals(editedHarryPotter));","lastModifiedDate":"2022-03-09"},{"lineNumber":78,"author":{"gitId":"bingsen0806"},"content":"    }","lastModifiedDate":"2022-03-09"},{"lineNumber":79,"author":{"gitId":"bingsen0806"},"content":"}","lastModifiedDate":"2022-03-09"}],"authorContributionMap":{"bingsen0806":79}},{"path":"src/test/java/seedu/address/model/book/EditBookCommandTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"yuqitanyq"},"content":"package seedu.address.model.book;","lastModifiedDate":"2022-03-11"},{"lineNumber":2,"author":{"gitId":"yuqitanyq"},"content":"","lastModifiedDate":"2022-03-11"},{"lineNumber":3,"author":{"gitId":"yuqitanyq"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2022-03-12"},{"lineNumber":4,"author":{"gitId":"yuqitanyq"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2022-03-12"},{"lineNumber":5,"author":{"gitId":"yuqitanyq"},"content":"import static seedu.address.logic.commands.CommandTestUtil.DESC_HARRY_POTTER;","lastModifiedDate":"2022-03-12"},{"lineNumber":6,"author":{"gitId":"yuqitanyq"},"content":"import static seedu.address.logic.commands.CommandTestUtil.DESC_HUNGER_GAMES;","lastModifiedDate":"2022-03-12"},{"lineNumber":7,"author":{"gitId":"yuqitanyq"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_AUTHOR_JK_ROWLING;","lastModifiedDate":"2022-03-12"},{"lineNumber":8,"author":{"gitId":"yuqitanyq"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_BOOK_NAME_HARRY_POTTER;","lastModifiedDate":"2022-03-12"},{"lineNumber":9,"author":{"gitId":"yuqitanyq"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_BOOK_NAME_HUNGER_GAMES;","lastModifiedDate":"2022-03-12"},{"lineNumber":10,"author":{"gitId":"yuqitanyq"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_ISBN_HARRY_POTTER;","lastModifiedDate":"2022-03-12"},{"lineNumber":11,"author":{"gitId":"yuqitanyq"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_TAG_MAGIC;","lastModifiedDate":"2022-03-12"},{"lineNumber":12,"author":{"gitId":"yuqitanyq"},"content":"import static seedu.address.logic.commands.CommandTestUtil.assertCommandFailure;","lastModifiedDate":"2022-03-12"},{"lineNumber":13,"author":{"gitId":"yuqitanyq"},"content":"import static seedu.address.logic.commands.CommandTestUtil.assertCommandSuccess;","lastModifiedDate":"2022-03-12"},{"lineNumber":14,"author":{"gitId":"yuqitanyq"},"content":"import static seedu.address.logic.commands.CommandTestUtil.showBookAtIndex;","lastModifiedDate":"2022-03-12"},{"lineNumber":15,"author":{"gitId":"yuqitanyq"},"content":"import static seedu.address.testutil.TypicalIndexes.INDEX_FIRST_BOOK;","lastModifiedDate":"2022-03-12"},{"lineNumber":16,"author":{"gitId":"yuqitanyq"},"content":"import static seedu.address.testutil.TypicalIndexes.INDEX_SECOND_BOOK;","lastModifiedDate":"2022-03-12"},{"lineNumber":17,"author":{"gitId":"yuqitanyq"},"content":"","lastModifiedDate":"2022-03-12"},{"lineNumber":18,"author":{"gitId":"yuqitanyq"},"content":"import org.junit.jupiter.api.BeforeEach;","lastModifiedDate":"2022-03-12"},{"lineNumber":19,"author":{"gitId":"yuqitanyq"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2022-03-12"},{"lineNumber":20,"author":{"gitId":"yuqitanyq"},"content":"","lastModifiedDate":"2022-03-12"},{"lineNumber":21,"author":{"gitId":"yuqitanyq"},"content":"import seedu.address.commons.core.Messages;","lastModifiedDate":"2022-03-12"},{"lineNumber":22,"author":{"gitId":"yuqitanyq"},"content":"import seedu.address.commons.core.index.Index;","lastModifiedDate":"2022-03-12"},{"lineNumber":23,"author":{"gitId":"yuqitanyq"},"content":"import seedu.address.logic.commands.ExitCommand;","lastModifiedDate":"2022-03-12"},{"lineNumber":24,"author":{"gitId":"yuqitanyq"},"content":"import seedu.address.logic.commands.book.EditBookCommand;","lastModifiedDate":"2022-03-12"},{"lineNumber":25,"author":{"gitId":"yuqitanyq"},"content":"import seedu.address.logic.commands.book.EditBookCommand.EditBookDescriptor;","lastModifiedDate":"2022-03-12"},{"lineNumber":26,"author":{"gitId":"yuqitanyq"},"content":"import seedu.address.model.AddressBook;","lastModifiedDate":"2022-03-12"},{"lineNumber":27,"author":{"gitId":"yuqitanyq"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2022-03-12"},{"lineNumber":28,"author":{"gitId":"yuqitanyq"},"content":"import seedu.address.model.ModelManager;","lastModifiedDate":"2022-03-12"},{"lineNumber":29,"author":{"gitId":"yuqitanyq"},"content":"import seedu.address.model.UserPrefs;","lastModifiedDate":"2022-03-12"},{"lineNumber":30,"author":{"gitId":"yuqitanyq"},"content":"import seedu.address.testutil.BookBuilder;","lastModifiedDate":"2022-03-12"},{"lineNumber":31,"author":{"gitId":"yuqitanyq"},"content":"import seedu.address.testutil.EditBookDescriptorBuilder;","lastModifiedDate":"2022-03-12"},{"lineNumber":32,"author":{"gitId":"yuqitanyq"},"content":"import seedu.address.testutil.TypicalAddressBook;","lastModifiedDate":"2022-03-12"},{"lineNumber":33,"author":{"gitId":"yuqitanyq"},"content":"","lastModifiedDate":"2022-03-12"},{"lineNumber":34,"author":{"gitId":"yuqitanyq"},"content":"/**","lastModifiedDate":"2022-03-12"},{"lineNumber":35,"author":{"gitId":"yuqitanyq"},"content":" * Contains integration tests (interaction with the Model) and unit tests for EditBookCommand.","lastModifiedDate":"2022-03-12"},{"lineNumber":36,"author":{"gitId":"yuqitanyq"},"content":" */","lastModifiedDate":"2022-03-12"},{"lineNumber":37,"author":{"gitId":"yuqitanyq"},"content":"public class EditBookCommandTest {","lastModifiedDate":"2022-03-11"},{"lineNumber":38,"author":{"gitId":"yuqitanyq"},"content":"","lastModifiedDate":"2022-03-11"},{"lineNumber":39,"author":{"gitId":"yuqitanyq"},"content":"    private Model model;","lastModifiedDate":"2022-03-12"},{"lineNumber":40,"author":{"gitId":"yuqitanyq"},"content":"","lastModifiedDate":"2022-03-12"},{"lineNumber":41,"author":{"gitId":"yuqitanyq"},"content":"    @BeforeEach","lastModifiedDate":"2022-03-12"},{"lineNumber":42,"author":{"gitId":"yuqitanyq"},"content":"    public void setUp() {","lastModifiedDate":"2022-03-12"},{"lineNumber":43,"author":{"gitId":"yuqitanyq"},"content":"        model \u003d new ModelManager(TypicalAddressBook.getTypicalAddressBook(), new UserPrefs());","lastModifiedDate":"2022-03-12"},{"lineNumber":44,"author":{"gitId":"yuqitanyq"},"content":"    }","lastModifiedDate":"2022-03-12"},{"lineNumber":45,"author":{"gitId":"yuqitanyq"},"content":"","lastModifiedDate":"2022-03-12"},{"lineNumber":46,"author":{"gitId":"yuqitanyq"},"content":"    @Test","lastModifiedDate":"2022-03-12"},{"lineNumber":47,"author":{"gitId":"yuqitanyq"},"content":"    public void execute_allBookFieldsSpecifiedUnfilteredList_success() {","lastModifiedDate":"2022-03-12"},{"lineNumber":48,"author":{"gitId":"yuqitanyq"},"content":"        Book editedBook \u003d new BookBuilder().build();","lastModifiedDate":"2022-03-12"},{"lineNumber":49,"author":{"gitId":"yuqitanyq"},"content":"        EditBookDescriptor bookDescriptor \u003d new EditBookDescriptorBuilder(editedBook).build();","lastModifiedDate":"2022-03-12"},{"lineNumber":50,"author":{"gitId":"yuqitanyq"},"content":"        EditBookCommand editBookCommand \u003d new EditBookCommand(INDEX_FIRST_BOOK, bookDescriptor);","lastModifiedDate":"2022-03-12"},{"lineNumber":51,"author":{"gitId":"yuqitanyq"},"content":"","lastModifiedDate":"2022-03-12"},{"lineNumber":52,"author":{"gitId":"yuqitanyq"},"content":"        String expectedMessage \u003d String.format(EditBookCommand.MESSAGE_EDIT_BOOK_SUCCESS, editedBook);","lastModifiedDate":"2022-03-12"},{"lineNumber":53,"author":{"gitId":"yuqitanyq"},"content":"","lastModifiedDate":"2022-03-12"},{"lineNumber":54,"author":{"gitId":"yuqitanyq"},"content":"        Model expectedModel \u003d new ModelManager(new AddressBook(model.getAddressBook()), new UserPrefs());","lastModifiedDate":"2022-03-12"},{"lineNumber":55,"author":{"gitId":"yuqitanyq"},"content":"        expectedModel.setBook(model.getFilteredBookList().get(0), editedBook);","lastModifiedDate":"2022-03-12"},{"lineNumber":56,"author":{"gitId":"yuqitanyq"},"content":"","lastModifiedDate":"2022-03-12"},{"lineNumber":57,"author":{"gitId":"yuqitanyq"},"content":"        assertCommandSuccess(editBookCommand, model, expectedMessage, expectedModel);","lastModifiedDate":"2022-03-12"},{"lineNumber":58,"author":{"gitId":"yuqitanyq"},"content":"    }","lastModifiedDate":"2022-03-12"},{"lineNumber":59,"author":{"gitId":"yuqitanyq"},"content":"","lastModifiedDate":"2022-03-12"},{"lineNumber":60,"author":{"gitId":"yuqitanyq"},"content":"    @Test","lastModifiedDate":"2022-03-12"},{"lineNumber":61,"author":{"gitId":"yuqitanyq"},"content":"    public void execute_bookNameFieldSpecifiedUnfilteredList_success() {","lastModifiedDate":"2022-03-12"},{"lineNumber":62,"author":{"gitId":"yuqitanyq"},"content":"        Index indexLastBook \u003d Index.fromOneBased(model.getFilteredBookList().size());","lastModifiedDate":"2022-03-12"},{"lineNumber":63,"author":{"gitId":"yuqitanyq"},"content":"        Book lastBook \u003d model.getFilteredBookList().get(indexLastBook.getZeroBased());","lastModifiedDate":"2022-03-12"},{"lineNumber":64,"author":{"gitId":"yuqitanyq"},"content":"","lastModifiedDate":"2022-03-12"},{"lineNumber":65,"author":{"gitId":"yuqitanyq"},"content":"        BookBuilder bookInList \u003d new BookBuilder(lastBook);","lastModifiedDate":"2022-03-12"},{"lineNumber":66,"author":{"gitId":"yuqitanyq"},"content":"        Book editedBook \u003d bookInList.withName(VALID_BOOK_NAME_HARRY_POTTER).build();","lastModifiedDate":"2022-03-12"},{"lineNumber":67,"author":{"gitId":"yuqitanyq"},"content":"","lastModifiedDate":"2022-03-12"},{"lineNumber":68,"author":{"gitId":"yuqitanyq"},"content":"        EditBookDescriptor bookDescriptor \u003d new EditBookDescriptorBuilder()","lastModifiedDate":"2022-03-12"},{"lineNumber":69,"author":{"gitId":"yuqitanyq"},"content":"                .withBookName(VALID_BOOK_NAME_HARRY_POTTER).build();","lastModifiedDate":"2022-03-12"},{"lineNumber":70,"author":{"gitId":"yuqitanyq"},"content":"        EditBookCommand editBookCommand \u003d new EditBookCommand(indexLastBook, bookDescriptor);","lastModifiedDate":"2022-03-12"},{"lineNumber":71,"author":{"gitId":"yuqitanyq"},"content":"","lastModifiedDate":"2022-03-12"},{"lineNumber":72,"author":{"gitId":"yuqitanyq"},"content":"        String expectedMessage \u003d String.format(EditBookCommand.MESSAGE_EDIT_BOOK_SUCCESS, editedBook);","lastModifiedDate":"2022-03-12"},{"lineNumber":73,"author":{"gitId":"yuqitanyq"},"content":"","lastModifiedDate":"2022-03-12"},{"lineNumber":74,"author":{"gitId":"yuqitanyq"},"content":"        Model expectedModel \u003d new ModelManager(new AddressBook(model.getAddressBook()), new UserPrefs());","lastModifiedDate":"2022-03-12"},{"lineNumber":75,"author":{"gitId":"yuqitanyq"},"content":"        expectedModel.setBook(lastBook, editedBook);","lastModifiedDate":"2022-03-12"},{"lineNumber":76,"author":{"gitId":"yuqitanyq"},"content":"","lastModifiedDate":"2022-03-12"},{"lineNumber":77,"author":{"gitId":"yuqitanyq"},"content":"        assertCommandSuccess(editBookCommand, model, expectedMessage, expectedModel);","lastModifiedDate":"2022-03-12"},{"lineNumber":78,"author":{"gitId":"yuqitanyq"},"content":"    }","lastModifiedDate":"2022-03-12"},{"lineNumber":79,"author":{"gitId":"yuqitanyq"},"content":"","lastModifiedDate":"2022-03-12"},{"lineNumber":80,"author":{"gitId":"yuqitanyq"},"content":"    @Test","lastModifiedDate":"2022-03-12"},{"lineNumber":81,"author":{"gitId":"yuqitanyq"},"content":"    public void execute_isbnFieldSpecifiedUnfilteredList_success() {","lastModifiedDate":"2022-03-12"},{"lineNumber":82,"author":{"gitId":"yuqitanyq"},"content":"        Index indexLastBook \u003d Index.fromOneBased(model.getFilteredBookList().size());","lastModifiedDate":"2022-03-12"},{"lineNumber":83,"author":{"gitId":"yuqitanyq"},"content":"        Book lastBook \u003d model.getFilteredBookList().get(indexLastBook.getZeroBased());","lastModifiedDate":"2022-03-12"},{"lineNumber":84,"author":{"gitId":"yuqitanyq"},"content":"","lastModifiedDate":"2022-03-12"},{"lineNumber":85,"author":{"gitId":"yuqitanyq"},"content":"        BookBuilder bookInList \u003d new BookBuilder(lastBook);","lastModifiedDate":"2022-03-12"},{"lineNumber":86,"author":{"gitId":"yuqitanyq"},"content":"        Book editedBook \u003d bookInList.withIsbn(VALID_ISBN_HARRY_POTTER).build();","lastModifiedDate":"2022-03-12"},{"lineNumber":87,"author":{"gitId":"yuqitanyq"},"content":"","lastModifiedDate":"2022-03-12"},{"lineNumber":88,"author":{"gitId":"yuqitanyq"},"content":"        EditBookDescriptor bookDescriptor \u003d new EditBookDescriptorBuilder()","lastModifiedDate":"2022-03-12"},{"lineNumber":89,"author":{"gitId":"yuqitanyq"},"content":"                .withIsbn(VALID_ISBN_HARRY_POTTER).build();","lastModifiedDate":"2022-03-12"},{"lineNumber":90,"author":{"gitId":"yuqitanyq"},"content":"        EditBookCommand editBookCommand \u003d new EditBookCommand(indexLastBook, bookDescriptor);","lastModifiedDate":"2022-03-12"},{"lineNumber":91,"author":{"gitId":"yuqitanyq"},"content":"","lastModifiedDate":"2022-03-12"},{"lineNumber":92,"author":{"gitId":"yuqitanyq"},"content":"        String expectedMessage \u003d String.format(EditBookCommand.MESSAGE_EDIT_BOOK_SUCCESS, editedBook);","lastModifiedDate":"2022-03-12"},{"lineNumber":93,"author":{"gitId":"yuqitanyq"},"content":"","lastModifiedDate":"2022-03-12"},{"lineNumber":94,"author":{"gitId":"yuqitanyq"},"content":"        Model expectedModel \u003d new ModelManager(new AddressBook(model.getAddressBook()), new UserPrefs());","lastModifiedDate":"2022-03-12"},{"lineNumber":95,"author":{"gitId":"yuqitanyq"},"content":"        expectedModel.setBook(lastBook, editedBook);","lastModifiedDate":"2022-03-12"},{"lineNumber":96,"author":{"gitId":"yuqitanyq"},"content":"","lastModifiedDate":"2022-03-12"},{"lineNumber":97,"author":{"gitId":"yuqitanyq"},"content":"        assertCommandSuccess(editBookCommand, model, expectedMessage, expectedModel);","lastModifiedDate":"2022-03-12"},{"lineNumber":98,"author":{"gitId":"yuqitanyq"},"content":"    }","lastModifiedDate":"2022-03-12"},{"lineNumber":99,"author":{"gitId":"yuqitanyq"},"content":"","lastModifiedDate":"2022-03-12"},{"lineNumber":100,"author":{"gitId":"yuqitanyq"},"content":"    @Test","lastModifiedDate":"2022-03-12"},{"lineNumber":101,"author":{"gitId":"yuqitanyq"},"content":"    public void execute_authorFieldSpecifiedUnfilteredList_success() {","lastModifiedDate":"2022-03-12"},{"lineNumber":102,"author":{"gitId":"yuqitanyq"},"content":"        Index indexLastBook \u003d Index.fromOneBased(model.getFilteredBookList().size());","lastModifiedDate":"2022-03-12"},{"lineNumber":103,"author":{"gitId":"yuqitanyq"},"content":"        Book lastBook \u003d model.getFilteredBookList().get(indexLastBook.getZeroBased());","lastModifiedDate":"2022-03-12"},{"lineNumber":104,"author":{"gitId":"yuqitanyq"},"content":"","lastModifiedDate":"2022-03-12"},{"lineNumber":105,"author":{"gitId":"yuqitanyq"},"content":"        BookBuilder bookInList \u003d new BookBuilder(lastBook);","lastModifiedDate":"2022-03-12"},{"lineNumber":106,"author":{"gitId":"yuqitanyq"},"content":"        Book editedBook \u003d bookInList.withAuthors(VALID_AUTHOR_JK_ROWLING).build();","lastModifiedDate":"2022-03-12"},{"lineNumber":107,"author":{"gitId":"yuqitanyq"},"content":"","lastModifiedDate":"2022-03-12"},{"lineNumber":108,"author":{"gitId":"yuqitanyq"},"content":"        EditBookDescriptor bookDescriptor \u003d new EditBookDescriptorBuilder()","lastModifiedDate":"2022-03-12"},{"lineNumber":109,"author":{"gitId":"yuqitanyq"},"content":"                .withAuthors(VALID_AUTHOR_JK_ROWLING).build();","lastModifiedDate":"2022-03-12"},{"lineNumber":110,"author":{"gitId":"yuqitanyq"},"content":"        EditBookCommand editBookCommand \u003d new EditBookCommand(indexLastBook, bookDescriptor);","lastModifiedDate":"2022-03-12"},{"lineNumber":111,"author":{"gitId":"yuqitanyq"},"content":"","lastModifiedDate":"2022-03-12"},{"lineNumber":112,"author":{"gitId":"yuqitanyq"},"content":"        String expectedMessage \u003d String.format(EditBookCommand.MESSAGE_EDIT_BOOK_SUCCESS, editedBook);","lastModifiedDate":"2022-03-12"},{"lineNumber":113,"author":{"gitId":"yuqitanyq"},"content":"","lastModifiedDate":"2022-03-12"},{"lineNumber":114,"author":{"gitId":"yuqitanyq"},"content":"        Model expectedModel \u003d new ModelManager(new AddressBook(model.getAddressBook()), new UserPrefs());","lastModifiedDate":"2022-03-12"},{"lineNumber":115,"author":{"gitId":"yuqitanyq"},"content":"        expectedModel.setBook(lastBook, editedBook);","lastModifiedDate":"2022-03-12"},{"lineNumber":116,"author":{"gitId":"yuqitanyq"},"content":"","lastModifiedDate":"2022-03-12"},{"lineNumber":117,"author":{"gitId":"yuqitanyq"},"content":"        assertCommandSuccess(editBookCommand, model, expectedMessage, expectedModel);","lastModifiedDate":"2022-03-12"},{"lineNumber":118,"author":{"gitId":"yuqitanyq"},"content":"    }","lastModifiedDate":"2022-03-12"},{"lineNumber":119,"author":{"gitId":"yuqitanyq"},"content":"","lastModifiedDate":"2022-03-12"},{"lineNumber":120,"author":{"gitId":"yuqitanyq"},"content":"    @Test","lastModifiedDate":"2022-03-12"},{"lineNumber":121,"author":{"gitId":"yuqitanyq"},"content":"    public void execute_tagFieldSpecifiedUnfilteredList_success() {","lastModifiedDate":"2022-03-12"},{"lineNumber":122,"author":{"gitId":"yuqitanyq"},"content":"        Index indexLastBook \u003d Index.fromOneBased(model.getFilteredBookList().size());","lastModifiedDate":"2022-03-12"},{"lineNumber":123,"author":{"gitId":"yuqitanyq"},"content":"        Book lastBook \u003d model.getFilteredBookList().get(indexLastBook.getZeroBased());","lastModifiedDate":"2022-03-12"},{"lineNumber":124,"author":{"gitId":"yuqitanyq"},"content":"","lastModifiedDate":"2022-03-12"},{"lineNumber":125,"author":{"gitId":"yuqitanyq"},"content":"        BookBuilder bookInList \u003d new BookBuilder(lastBook);","lastModifiedDate":"2022-03-12"},{"lineNumber":126,"author":{"gitId":"yuqitanyq"},"content":"        Book editedBook \u003d bookInList.withTags(VALID_TAG_MAGIC).build();","lastModifiedDate":"2022-03-12"},{"lineNumber":127,"author":{"gitId":"yuqitanyq"},"content":"","lastModifiedDate":"2022-03-12"},{"lineNumber":128,"author":{"gitId":"yuqitanyq"},"content":"        EditBookDescriptor bookDescriptor \u003d new EditBookDescriptorBuilder()","lastModifiedDate":"2022-03-12"},{"lineNumber":129,"author":{"gitId":"yuqitanyq"},"content":"                .withTags(VALID_TAG_MAGIC).build();","lastModifiedDate":"2022-03-12"},{"lineNumber":130,"author":{"gitId":"yuqitanyq"},"content":"        EditBookCommand editBookCommand \u003d new EditBookCommand(indexLastBook, bookDescriptor);","lastModifiedDate":"2022-03-12"},{"lineNumber":131,"author":{"gitId":"yuqitanyq"},"content":"","lastModifiedDate":"2022-03-12"},{"lineNumber":132,"author":{"gitId":"yuqitanyq"},"content":"        String expectedMessage \u003d String.format(EditBookCommand.MESSAGE_EDIT_BOOK_SUCCESS, editedBook);","lastModifiedDate":"2022-03-12"},{"lineNumber":133,"author":{"gitId":"yuqitanyq"},"content":"","lastModifiedDate":"2022-03-12"},{"lineNumber":134,"author":{"gitId":"yuqitanyq"},"content":"        Model expectedModel \u003d new ModelManager(new AddressBook(model.getAddressBook()), new UserPrefs());","lastModifiedDate":"2022-03-12"},{"lineNumber":135,"author":{"gitId":"yuqitanyq"},"content":"        expectedModel.setBook(lastBook, editedBook);","lastModifiedDate":"2022-03-12"},{"lineNumber":136,"author":{"gitId":"yuqitanyq"},"content":"","lastModifiedDate":"2022-03-12"},{"lineNumber":137,"author":{"gitId":"yuqitanyq"},"content":"        assertCommandSuccess(editBookCommand, model, expectedMessage, expectedModel);","lastModifiedDate":"2022-03-12"},{"lineNumber":138,"author":{"gitId":"yuqitanyq"},"content":"    }","lastModifiedDate":"2022-03-12"},{"lineNumber":139,"author":{"gitId":"yuqitanyq"},"content":"","lastModifiedDate":"2022-03-12"},{"lineNumber":140,"author":{"gitId":"yuqitanyq"},"content":"    @Test","lastModifiedDate":"2022-03-12"},{"lineNumber":141,"author":{"gitId":"yuqitanyq"},"content":"    public void execute_noBookFieldSpecifiedUnfilteredList_success() {","lastModifiedDate":"2022-03-12"},{"lineNumber":142,"author":{"gitId":"yuqitanyq"},"content":"        EditBookCommand editBookCommand \u003d new EditBookCommand(INDEX_FIRST_BOOK, new EditBookDescriptor());","lastModifiedDate":"2022-03-12"},{"lineNumber":143,"author":{"gitId":"yuqitanyq"},"content":"        Book editedBook \u003d model.getFilteredBookList().get(INDEX_FIRST_BOOK.getZeroBased());","lastModifiedDate":"2022-03-12"},{"lineNumber":144,"author":{"gitId":"yuqitanyq"},"content":"","lastModifiedDate":"2022-03-12"},{"lineNumber":145,"author":{"gitId":"yuqitanyq"},"content":"        String expectedMessage \u003d String.format(EditBookCommand.MESSAGE_EDIT_BOOK_SUCCESS, editedBook);","lastModifiedDate":"2022-03-12"},{"lineNumber":146,"author":{"gitId":"yuqitanyq"},"content":"","lastModifiedDate":"2022-03-12"},{"lineNumber":147,"author":{"gitId":"yuqitanyq"},"content":"        Model expectedModel \u003d new ModelManager(new AddressBook(model.getAddressBook()), new UserPrefs());","lastModifiedDate":"2022-03-12"},{"lineNumber":148,"author":{"gitId":"yuqitanyq"},"content":"","lastModifiedDate":"2022-03-12"},{"lineNumber":149,"author":{"gitId":"yuqitanyq"},"content":"        assertCommandSuccess(editBookCommand, model, expectedMessage, expectedModel);","lastModifiedDate":"2022-03-12"},{"lineNumber":150,"author":{"gitId":"yuqitanyq"},"content":"    }","lastModifiedDate":"2022-03-12"},{"lineNumber":151,"author":{"gitId":"yuqitanyq"},"content":"","lastModifiedDate":"2022-03-12"},{"lineNumber":152,"author":{"gitId":"yuqitanyq"},"content":"    @Test","lastModifiedDate":"2022-03-12"},{"lineNumber":153,"author":{"gitId":"yuqitanyq"},"content":"    public void execute_filteredList_success() {","lastModifiedDate":"2022-03-12"},{"lineNumber":154,"author":{"gitId":"yuqitanyq"},"content":"        showBookAtIndex(model, INDEX_FIRST_BOOK);","lastModifiedDate":"2022-03-12"},{"lineNumber":155,"author":{"gitId":"yuqitanyq"},"content":"","lastModifiedDate":"2022-03-12"},{"lineNumber":156,"author":{"gitId":"yuqitanyq"},"content":"        Book bookInFilteredList \u003d model.getFilteredBookList().get(INDEX_FIRST_BOOK.getZeroBased());","lastModifiedDate":"2022-03-12"},{"lineNumber":157,"author":{"gitId":"yuqitanyq"},"content":"        Book editedBook \u003d new BookBuilder(bookInFilteredList).withName(VALID_BOOK_NAME_HARRY_POTTER).build();","lastModifiedDate":"2022-03-12"},{"lineNumber":158,"author":{"gitId":"yuqitanyq"},"content":"        EditBookCommand editBookCommand \u003d new EditBookCommand(INDEX_FIRST_BOOK,","lastModifiedDate":"2022-03-12"},{"lineNumber":159,"author":{"gitId":"yuqitanyq"},"content":"                new EditBookDescriptorBuilder().withBookName(VALID_BOOK_NAME_HARRY_POTTER).build());","lastModifiedDate":"2022-03-12"},{"lineNumber":160,"author":{"gitId":"yuqitanyq"},"content":"","lastModifiedDate":"2022-03-12"},{"lineNumber":161,"author":{"gitId":"yuqitanyq"},"content":"        String expectedMessage \u003d String.format(EditBookCommand.MESSAGE_EDIT_BOOK_SUCCESS, editedBook);","lastModifiedDate":"2022-03-12"},{"lineNumber":162,"author":{"gitId":"yuqitanyq"},"content":"","lastModifiedDate":"2022-03-12"},{"lineNumber":163,"author":{"gitId":"yuqitanyq"},"content":"        Model expectedModel \u003d new ModelManager(new AddressBook(model.getAddressBook()), new UserPrefs());","lastModifiedDate":"2022-03-12"},{"lineNumber":164,"author":{"gitId":"yuqitanyq"},"content":"        expectedModel.setBook(model.getFilteredBookList().get(0), editedBook);","lastModifiedDate":"2022-03-12"},{"lineNumber":165,"author":{"gitId":"yuqitanyq"},"content":"","lastModifiedDate":"2022-03-12"},{"lineNumber":166,"author":{"gitId":"yuqitanyq"},"content":"        assertCommandSuccess(editBookCommand, model, expectedMessage, expectedModel);","lastModifiedDate":"2022-03-12"},{"lineNumber":167,"author":{"gitId":"yuqitanyq"},"content":"    }","lastModifiedDate":"2022-03-12"},{"lineNumber":168,"author":{"gitId":"yuqitanyq"},"content":"","lastModifiedDate":"2022-03-12"},{"lineNumber":169,"author":{"gitId":"yuqitanyq"},"content":"    @Test","lastModifiedDate":"2022-03-12"},{"lineNumber":170,"author":{"gitId":"yuqitanyq"},"content":"    public void execute_duplicateBookUnfilteredList_success() {","lastModifiedDate":"2022-03-12"},{"lineNumber":171,"author":{"gitId":"yuqitanyq"},"content":"        Book firstBook \u003d model.getFilteredBookList().get(INDEX_FIRST_BOOK.getZeroBased());","lastModifiedDate":"2022-03-12"},{"lineNumber":172,"author":{"gitId":"yuqitanyq"},"content":"        Book editedBook \u003d new BookBuilder(firstBook).build();","lastModifiedDate":"2022-03-12"},{"lineNumber":173,"author":{"gitId":"yuqitanyq"},"content":"        EditBookDescriptor bookDescriptor \u003d new EditBookDescriptorBuilder(firstBook).build();","lastModifiedDate":"2022-03-12"},{"lineNumber":174,"author":{"gitId":"yuqitanyq"},"content":"        EditBookCommand editBookCommand \u003d new EditBookCommand(INDEX_SECOND_BOOK, bookDescriptor);","lastModifiedDate":"2022-03-12"},{"lineNumber":175,"author":{"gitId":"yuqitanyq"},"content":"","lastModifiedDate":"2022-03-12"},{"lineNumber":176,"author":{"gitId":"yuqitanyq"},"content":"        String expectedMessage \u003d String.format(EditBookCommand.MESSAGE_EDIT_BOOK_SUCCESS, editedBook);","lastModifiedDate":"2022-03-12"},{"lineNumber":177,"author":{"gitId":"yuqitanyq"},"content":"","lastModifiedDate":"2022-03-12"},{"lineNumber":178,"author":{"gitId":"yuqitanyq"},"content":"        Model expectedModel \u003d new ModelManager(new AddressBook(model.getAddressBook()), new UserPrefs());","lastModifiedDate":"2022-03-12"},{"lineNumber":179,"author":{"gitId":"yuqitanyq"},"content":"        expectedModel.setBook(model.getFilteredBookList().get(1), editedBook);","lastModifiedDate":"2022-03-12"},{"lineNumber":180,"author":{"gitId":"yuqitanyq"},"content":"","lastModifiedDate":"2022-03-12"},{"lineNumber":181,"author":{"gitId":"yuqitanyq"},"content":"        assertCommandSuccess(editBookCommand, model, expectedMessage, expectedModel);","lastModifiedDate":"2022-03-12"},{"lineNumber":182,"author":{"gitId":"yuqitanyq"},"content":"    }","lastModifiedDate":"2022-03-12"},{"lineNumber":183,"author":{"gitId":"yuqitanyq"},"content":"","lastModifiedDate":"2022-03-12"},{"lineNumber":184,"author":{"gitId":"yuqitanyq"},"content":"    @Test","lastModifiedDate":"2022-03-12"},{"lineNumber":185,"author":{"gitId":"yuqitanyq"},"content":"    public void execute_duplicateBookFilteredList_success() {","lastModifiedDate":"2022-03-12"},{"lineNumber":186,"author":{"gitId":"yuqitanyq"},"content":"        showBookAtIndex(model, INDEX_FIRST_BOOK);","lastModifiedDate":"2022-03-12"},{"lineNumber":187,"author":{"gitId":"yuqitanyq"},"content":"","lastModifiedDate":"2022-03-12"},{"lineNumber":188,"author":{"gitId":"yuqitanyq"},"content":"        Book bookInList \u003d model.getAddressBook().getBookList().get(INDEX_SECOND_BOOK.getZeroBased());","lastModifiedDate":"2022-03-12"},{"lineNumber":189,"author":{"gitId":"yuqitanyq"},"content":"        EditBookCommand editBookCommand \u003d new EditBookCommand(INDEX_FIRST_BOOK,","lastModifiedDate":"2022-03-12"},{"lineNumber":190,"author":{"gitId":"yuqitanyq"},"content":"                new EditBookDescriptorBuilder(bookInList).build());","lastModifiedDate":"2022-03-12"},{"lineNumber":191,"author":{"gitId":"yuqitanyq"},"content":"        Book editedBook \u003d new BookBuilder(bookInList).build();","lastModifiedDate":"2022-03-12"},{"lineNumber":192,"author":{"gitId":"yuqitanyq"},"content":"","lastModifiedDate":"2022-03-12"},{"lineNumber":193,"author":{"gitId":"yuqitanyq"},"content":"        String expectedMessage \u003d String.format(EditBookCommand.MESSAGE_EDIT_BOOK_SUCCESS, editedBook);","lastModifiedDate":"2022-03-12"},{"lineNumber":194,"author":{"gitId":"yuqitanyq"},"content":"","lastModifiedDate":"2022-03-12"},{"lineNumber":195,"author":{"gitId":"yuqitanyq"},"content":"        Model expectedModel \u003d new ModelManager(new AddressBook(model.getAddressBook()), new UserPrefs());","lastModifiedDate":"2022-03-12"},{"lineNumber":196,"author":{"gitId":"yuqitanyq"},"content":"        expectedModel.setBook(model.getFilteredBookList().get(0), editedBook);","lastModifiedDate":"2022-03-12"},{"lineNumber":197,"author":{"gitId":"yuqitanyq"},"content":"","lastModifiedDate":"2022-03-12"},{"lineNumber":198,"author":{"gitId":"yuqitanyq"},"content":"        assertCommandSuccess(editBookCommand, model, expectedMessage, expectedModel);","lastModifiedDate":"2022-03-12"},{"lineNumber":199,"author":{"gitId":"yuqitanyq"},"content":"    }","lastModifiedDate":"2022-03-12"},{"lineNumber":200,"author":{"gitId":"yuqitanyq"},"content":"","lastModifiedDate":"2022-03-12"},{"lineNumber":201,"author":{"gitId":"yuqitanyq"},"content":"    @Test","lastModifiedDate":"2022-03-12"},{"lineNumber":202,"author":{"gitId":"yuqitanyq"},"content":"    public void execute_invalidBookIndexUnfilteredList_failure() {","lastModifiedDate":"2022-03-12"},{"lineNumber":203,"author":{"gitId":"yuqitanyq"},"content":"        Index outOfBoundIndex \u003d Index.fromOneBased(model.getFilteredBookList().size() + 1);","lastModifiedDate":"2022-03-12"},{"lineNumber":204,"author":{"gitId":"yuqitanyq"},"content":"        EditBookDescriptor bookDescriptor \u003d new EditBookDescriptorBuilder()","lastModifiedDate":"2022-03-12"},{"lineNumber":205,"author":{"gitId":"yuqitanyq"},"content":"                .withBookName(VALID_BOOK_NAME_HARRY_POTTER).build();","lastModifiedDate":"2022-03-12"},{"lineNumber":206,"author":{"gitId":"yuqitanyq"},"content":"        EditBookCommand editBookCommand \u003d new EditBookCommand(outOfBoundIndex, bookDescriptor);","lastModifiedDate":"2022-03-12"},{"lineNumber":207,"author":{"gitId":"yuqitanyq"},"content":"","lastModifiedDate":"2022-03-12"},{"lineNumber":208,"author":{"gitId":"yuqitanyq"},"content":"        assertCommandFailure(editBookCommand, model, Messages.MESSAGE_INVALID_BOOK_DISPLAYED_INDEX);","lastModifiedDate":"2022-03-12"},{"lineNumber":209,"author":{"gitId":"yuqitanyq"},"content":"    }","lastModifiedDate":"2022-03-12"},{"lineNumber":210,"author":{"gitId":"yuqitanyq"},"content":"","lastModifiedDate":"2022-03-12"},{"lineNumber":211,"author":{"gitId":"yuqitanyq"},"content":"    @Test","lastModifiedDate":"2022-03-12"},{"lineNumber":212,"author":{"gitId":"yuqitanyq"},"content":"    public void execute_invalidBookIndexFilteredList_failure() {","lastModifiedDate":"2022-03-12"},{"lineNumber":213,"author":{"gitId":"yuqitanyq"},"content":"        showBookAtIndex(model, INDEX_FIRST_BOOK);","lastModifiedDate":"2022-03-12"},{"lineNumber":214,"author":{"gitId":"yuqitanyq"},"content":"","lastModifiedDate":"2022-03-12"},{"lineNumber":215,"author":{"gitId":"yuqitanyq"},"content":"        Index outOfBoundIndex \u003d INDEX_SECOND_BOOK;","lastModifiedDate":"2022-03-12"},{"lineNumber":216,"author":{"gitId":"yuqitanyq"},"content":"        //ensures that outOfBoundIndex is still in bounds of address book list","lastModifiedDate":"2022-03-12"},{"lineNumber":217,"author":{"gitId":"yuqitanyq"},"content":"        assertTrue(outOfBoundIndex.getZeroBased() \u003c model.getAddressBook().getBookList().size());","lastModifiedDate":"2022-03-12"},{"lineNumber":218,"author":{"gitId":"yuqitanyq"},"content":"","lastModifiedDate":"2022-03-12"},{"lineNumber":219,"author":{"gitId":"yuqitanyq"},"content":"        EditBookCommand editBookCommand \u003d new EditBookCommand(outOfBoundIndex,","lastModifiedDate":"2022-03-12"},{"lineNumber":220,"author":{"gitId":"yuqitanyq"},"content":"                new EditBookDescriptorBuilder().withBookName(VALID_BOOK_NAME_HUNGER_GAMES).build());","lastModifiedDate":"2022-03-12"},{"lineNumber":221,"author":{"gitId":"yuqitanyq"},"content":"","lastModifiedDate":"2022-03-12"},{"lineNumber":222,"author":{"gitId":"yuqitanyq"},"content":"        assertCommandFailure(editBookCommand, model, Messages.MESSAGE_INVALID_BOOK_DISPLAYED_INDEX);","lastModifiedDate":"2022-03-12"},{"lineNumber":223,"author":{"gitId":"yuqitanyq"},"content":"    }","lastModifiedDate":"2022-03-12"},{"lineNumber":224,"author":{"gitId":"yuqitanyq"},"content":"","lastModifiedDate":"2022-03-12"},{"lineNumber":225,"author":{"gitId":"yuqitanyq"},"content":"    @Test","lastModifiedDate":"2022-03-12"},{"lineNumber":226,"author":{"gitId":"yuqitanyq"},"content":"    public void equals() {","lastModifiedDate":"2022-03-12"},{"lineNumber":227,"author":{"gitId":"yuqitanyq"},"content":"        final EditBookCommand standardBookCommand \u003d new EditBookCommand(INDEX_FIRST_BOOK, DESC_HARRY_POTTER);","lastModifiedDate":"2022-03-12"},{"lineNumber":228,"author":{"gitId":"yuqitanyq"},"content":"","lastModifiedDate":"2022-03-12"},{"lineNumber":229,"author":{"gitId":"yuqitanyq"},"content":"        // same values -\u003e returns true","lastModifiedDate":"2022-03-12"},{"lineNumber":230,"author":{"gitId":"yuqitanyq"},"content":"        EditBookDescriptor copyBookDescriptor \u003d new EditBookDescriptor(DESC_HARRY_POTTER);","lastModifiedDate":"2022-03-12"},{"lineNumber":231,"author":{"gitId":"yuqitanyq"},"content":"","lastModifiedDate":"2022-03-12"},{"lineNumber":232,"author":{"gitId":"yuqitanyq"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2022-03-12"},{"lineNumber":233,"author":{"gitId":"yuqitanyq"},"content":"        assertTrue(standardBookCommand.equals(standardBookCommand));","lastModifiedDate":"2022-03-12"},{"lineNumber":234,"author":{"gitId":"yuqitanyq"},"content":"","lastModifiedDate":"2022-03-12"},{"lineNumber":235,"author":{"gitId":"yuqitanyq"},"content":"        // null -\u003e returns false","lastModifiedDate":"2022-03-12"},{"lineNumber":236,"author":{"gitId":"yuqitanyq"},"content":"        assertFalse(standardBookCommand.equals(null));","lastModifiedDate":"2022-03-12"},{"lineNumber":237,"author":{"gitId":"yuqitanyq"},"content":"","lastModifiedDate":"2022-03-12"},{"lineNumber":238,"author":{"gitId":"yuqitanyq"},"content":"        //different types -\u003e returns false","lastModifiedDate":"2022-03-12"},{"lineNumber":239,"author":{"gitId":"yuqitanyq"},"content":"        assertFalse(standardBookCommand.equals(new ExitCommand()));","lastModifiedDate":"2022-03-12"},{"lineNumber":240,"author":{"gitId":"yuqitanyq"},"content":"","lastModifiedDate":"2022-03-12"},{"lineNumber":241,"author":{"gitId":"yuqitanyq"},"content":"        //different index -\u003e returns false","lastModifiedDate":"2022-03-12"},{"lineNumber":242,"author":{"gitId":"yuqitanyq"},"content":"        assertFalse(standardBookCommand.equals(new EditBookCommand(INDEX_SECOND_BOOK, DESC_HARRY_POTTER)));","lastModifiedDate":"2022-03-12"},{"lineNumber":243,"author":{"gitId":"yuqitanyq"},"content":"","lastModifiedDate":"2022-03-12"},{"lineNumber":244,"author":{"gitId":"yuqitanyq"},"content":"        //different descriptor -\u003e returns false","lastModifiedDate":"2022-03-12"},{"lineNumber":245,"author":{"gitId":"yuqitanyq"},"content":"        assertFalse(standardBookCommand.equals(new EditBookCommand(INDEX_FIRST_BOOK, DESC_HUNGER_GAMES)));","lastModifiedDate":"2022-03-12"},{"lineNumber":246,"author":{"gitId":"yuqitanyq"},"content":"    }","lastModifiedDate":"2022-03-12"},{"lineNumber":247,"author":{"gitId":"yuqitanyq"},"content":"","lastModifiedDate":"2022-03-12"},{"lineNumber":248,"author":{"gitId":"yuqitanyq"},"content":"}","lastModifiedDate":"2022-03-11"}],"authorContributionMap":{"yuqitanyq":248}},{"path":"src/test/java/seedu/address/model/book/EditBookDescriptorTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"yuqitanyq"},"content":"package seedu.address.model.book;","lastModifiedDate":"2022-03-12"},{"lineNumber":2,"author":{"gitId":"yuqitanyq"},"content":"","lastModifiedDate":"2022-03-12"},{"lineNumber":3,"author":{"gitId":"yuqitanyq"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2022-03-12"},{"lineNumber":4,"author":{"gitId":"yuqitanyq"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2022-03-12"},{"lineNumber":5,"author":{"gitId":"yuqitanyq"},"content":"import static seedu.address.logic.commands.CommandTestUtil.DESC_HARRY_POTTER;","lastModifiedDate":"2022-03-12"},{"lineNumber":6,"author":{"gitId":"yuqitanyq"},"content":"import static seedu.address.logic.commands.CommandTestUtil.DESC_HUNGER_GAMES;","lastModifiedDate":"2022-03-12"},{"lineNumber":7,"author":{"gitId":"yuqitanyq"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_AUTHOR_SUZANNE_COLLINS;","lastModifiedDate":"2022-03-12"},{"lineNumber":8,"author":{"gitId":"yuqitanyq"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_BOOK_NAME_HUNGER_GAMES;","lastModifiedDate":"2022-03-12"},{"lineNumber":9,"author":{"gitId":"yuqitanyq"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_ISBN_HUNGER_GAMES;","lastModifiedDate":"2022-03-12"},{"lineNumber":10,"author":{"gitId":"yuqitanyq"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_TAG_SCIFI;","lastModifiedDate":"2022-03-12"},{"lineNumber":11,"author":{"gitId":"yuqitanyq"},"content":"","lastModifiedDate":"2022-03-12"},{"lineNumber":12,"author":{"gitId":"yuqitanyq"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2022-03-12"},{"lineNumber":13,"author":{"gitId":"yuqitanyq"},"content":"","lastModifiedDate":"2022-03-12"},{"lineNumber":14,"author":{"gitId":"yuqitanyq"},"content":"import seedu.address.logic.commands.book.EditBookCommand.EditBookDescriptor;","lastModifiedDate":"2022-03-12"},{"lineNumber":15,"author":{"gitId":"yuqitanyq"},"content":"import seedu.address.testutil.EditBookDescriptorBuilder;","lastModifiedDate":"2022-03-12"},{"lineNumber":16,"author":{"gitId":"yuqitanyq"},"content":"","lastModifiedDate":"2022-03-12"},{"lineNumber":17,"author":{"gitId":"yuqitanyq"},"content":"public class EditBookDescriptorTest {","lastModifiedDate":"2022-03-12"},{"lineNumber":18,"author":{"gitId":"yuqitanyq"},"content":"    @Test","lastModifiedDate":"2022-03-12"},{"lineNumber":19,"author":{"gitId":"yuqitanyq"},"content":"    public void equals() {","lastModifiedDate":"2022-03-12"},{"lineNumber":20,"author":{"gitId":"yuqitanyq"},"content":"        // same values -\u003e return true","lastModifiedDate":"2022-03-12"},{"lineNumber":21,"author":{"gitId":"yuqitanyq"},"content":"        EditBookDescriptor bookDescriptorWithSameValues \u003d new EditBookDescriptor(DESC_HARRY_POTTER);","lastModifiedDate":"2022-03-12"},{"lineNumber":22,"author":{"gitId":"yuqitanyq"},"content":"        assertTrue(DESC_HARRY_POTTER.equals(bookDescriptorWithSameValues));","lastModifiedDate":"2022-03-12"},{"lineNumber":23,"author":{"gitId":"yuqitanyq"},"content":"","lastModifiedDate":"2022-03-12"},{"lineNumber":24,"author":{"gitId":"yuqitanyq"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2022-03-12"},{"lineNumber":25,"author":{"gitId":"yuqitanyq"},"content":"        assertTrue(DESC_HARRY_POTTER.equals(DESC_HARRY_POTTER));","lastModifiedDate":"2022-03-12"},{"lineNumber":26,"author":{"gitId":"yuqitanyq"},"content":"","lastModifiedDate":"2022-03-12"},{"lineNumber":27,"author":{"gitId":"yuqitanyq"},"content":"        // null -\u003e returns false","lastModifiedDate":"2022-03-12"},{"lineNumber":28,"author":{"gitId":"yuqitanyq"},"content":"        assertFalse(DESC_HARRY_POTTER.equals(null));","lastModifiedDate":"2022-03-12"},{"lineNumber":29,"author":{"gitId":"yuqitanyq"},"content":"","lastModifiedDate":"2022-03-12"},{"lineNumber":30,"author":{"gitId":"yuqitanyq"},"content":"        // different types -\u003e returns false","lastModifiedDate":"2022-03-12"},{"lineNumber":31,"author":{"gitId":"yuqitanyq"},"content":"        assertFalse(DESC_HARRY_POTTER.equals(10));","lastModifiedDate":"2022-03-12"},{"lineNumber":32,"author":{"gitId":"yuqitanyq"},"content":"","lastModifiedDate":"2022-03-12"},{"lineNumber":33,"author":{"gitId":"yuqitanyq"},"content":"        // different values -\u003e returns false","lastModifiedDate":"2022-03-12"},{"lineNumber":34,"author":{"gitId":"yuqitanyq"},"content":"        assertFalse(DESC_HARRY_POTTER.equals(DESC_HUNGER_GAMES));","lastModifiedDate":"2022-03-12"},{"lineNumber":35,"author":{"gitId":"yuqitanyq"},"content":"","lastModifiedDate":"2022-03-12"},{"lineNumber":36,"author":{"gitId":"yuqitanyq"},"content":"        //different name -\u003e return false","lastModifiedDate":"2022-03-12"},{"lineNumber":37,"author":{"gitId":"yuqitanyq"},"content":"        EditBookDescriptor editedHarryPotter \u003d new EditBookDescriptorBuilder(DESC_HARRY_POTTER)","lastModifiedDate":"2022-03-12"},{"lineNumber":38,"author":{"gitId":"yuqitanyq"},"content":"                .withBookName(VALID_BOOK_NAME_HUNGER_GAMES).build();","lastModifiedDate":"2022-03-12"},{"lineNumber":39,"author":{"gitId":"yuqitanyq"},"content":"        assertFalse(DESC_HARRY_POTTER.equals(editedHarryPotter));","lastModifiedDate":"2022-03-12"},{"lineNumber":40,"author":{"gitId":"yuqitanyq"},"content":"","lastModifiedDate":"2022-03-12"},{"lineNumber":41,"author":{"gitId":"yuqitanyq"},"content":"        //different isbn -\u003e return false","lastModifiedDate":"2022-03-12"},{"lineNumber":42,"author":{"gitId":"yuqitanyq"},"content":"        editedHarryPotter \u003d new EditBookDescriptorBuilder(DESC_HARRY_POTTER)","lastModifiedDate":"2022-03-12"},{"lineNumber":43,"author":{"gitId":"yuqitanyq"},"content":"                .withIsbn(VALID_ISBN_HUNGER_GAMES).build();","lastModifiedDate":"2022-03-12"},{"lineNumber":44,"author":{"gitId":"yuqitanyq"},"content":"        assertFalse(DESC_HARRY_POTTER.equals(editedHarryPotter));","lastModifiedDate":"2022-03-12"},{"lineNumber":45,"author":{"gitId":"yuqitanyq"},"content":"","lastModifiedDate":"2022-03-12"},{"lineNumber":46,"author":{"gitId":"yuqitanyq"},"content":"        //different authors -\u003e return false","lastModifiedDate":"2022-03-12"},{"lineNumber":47,"author":{"gitId":"yuqitanyq"},"content":"        editedHarryPotter \u003d new EditBookDescriptorBuilder(DESC_HARRY_POTTER)","lastModifiedDate":"2022-03-12"},{"lineNumber":48,"author":{"gitId":"yuqitanyq"},"content":"                .withAuthors(VALID_AUTHOR_SUZANNE_COLLINS).build();","lastModifiedDate":"2022-03-12"},{"lineNumber":49,"author":{"gitId":"yuqitanyq"},"content":"        assertFalse(DESC_HARRY_POTTER.equals(editedHarryPotter));","lastModifiedDate":"2022-03-12"},{"lineNumber":50,"author":{"gitId":"yuqitanyq"},"content":"","lastModifiedDate":"2022-03-12"},{"lineNumber":51,"author":{"gitId":"yuqitanyq"},"content":"        //different tags -\u003e return false","lastModifiedDate":"2022-03-12"},{"lineNumber":52,"author":{"gitId":"yuqitanyq"},"content":"        editedHarryPotter \u003d new EditBookDescriptorBuilder(DESC_HARRY_POTTER)","lastModifiedDate":"2022-03-12"},{"lineNumber":53,"author":{"gitId":"yuqitanyq"},"content":"                .withTags(VALID_TAG_SCIFI).build();","lastModifiedDate":"2022-03-12"},{"lineNumber":54,"author":{"gitId":"yuqitanyq"},"content":"        assertFalse(DESC_HARRY_POTTER.equals(editedHarryPotter));","lastModifiedDate":"2022-03-12"},{"lineNumber":55,"author":{"gitId":"yuqitanyq"},"content":"    }","lastModifiedDate":"2022-03-12"},{"lineNumber":56,"author":{"gitId":"yuqitanyq"},"content":"}","lastModifiedDate":"2022-03-12"}],"authorContributionMap":{"yuqitanyq":56}},{"path":"src/test/java/seedu/address/model/book/IsbnTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"bingsen0806"},"content":"package seedu.address.model.book;","lastModifiedDate":"2022-03-09"},{"lineNumber":2,"author":{"gitId":"bingsen0806"},"content":"","lastModifiedDate":"2022-03-09"},{"lineNumber":3,"author":{"gitId":"bingsen0806"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2022-03-09"},{"lineNumber":4,"author":{"gitId":"bingsen0806"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2022-03-09"},{"lineNumber":5,"author":{"gitId":"bingsen0806"},"content":"import static seedu.address.testutil.Assert.assertThrows;","lastModifiedDate":"2022-03-09"},{"lineNumber":6,"author":{"gitId":"bingsen0806"},"content":"","lastModifiedDate":"2022-03-09"},{"lineNumber":7,"author":{"gitId":"bingsen0806"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2022-03-09"},{"lineNumber":8,"author":{"gitId":"bingsen0806"},"content":"","lastModifiedDate":"2022-03-09"},{"lineNumber":9,"author":{"gitId":"bingsen0806"},"content":"public class IsbnTest {","lastModifiedDate":"2022-03-09"},{"lineNumber":10,"author":{"gitId":"bingsen0806"},"content":"","lastModifiedDate":"2022-03-09"},{"lineNumber":11,"author":{"gitId":"bingsen0806"},"content":"    @Test","lastModifiedDate":"2022-03-09"},{"lineNumber":12,"author":{"gitId":"bingsen0806"},"content":"    public void constructor_null_throwsNullPointerException() {","lastModifiedDate":"2022-03-09"},{"lineNumber":13,"author":{"gitId":"bingsen0806"},"content":"        assertThrows(NullPointerException.class, () -\u003e new Isbn(null));","lastModifiedDate":"2022-03-09"},{"lineNumber":14,"author":{"gitId":"bingsen0806"},"content":"    }","lastModifiedDate":"2022-03-09"},{"lineNumber":15,"author":{"gitId":"bingsen0806"},"content":"","lastModifiedDate":"2022-03-09"},{"lineNumber":16,"author":{"gitId":"bingsen0806"},"content":"    @Test","lastModifiedDate":"2022-03-09"},{"lineNumber":17,"author":{"gitId":"bingsen0806"},"content":"    public void constructor_invalidName_throwsIllegalArgumentException() {","lastModifiedDate":"2022-03-09"},{"lineNumber":18,"author":{"gitId":"bingsen0806"},"content":"        String invalidName \u003d \"\";","lastModifiedDate":"2022-03-09"},{"lineNumber":19,"author":{"gitId":"bingsen0806"},"content":"        assertThrows(IllegalArgumentException.class, () -\u003e new Isbn(invalidName));","lastModifiedDate":"2022-03-09"},{"lineNumber":20,"author":{"gitId":"bingsen0806"},"content":"    }","lastModifiedDate":"2022-03-09"},{"lineNumber":21,"author":{"gitId":"bingsen0806"},"content":"","lastModifiedDate":"2022-03-09"},{"lineNumber":22,"author":{"gitId":"bingsen0806"},"content":"    @Test","lastModifiedDate":"2022-03-09"},{"lineNumber":23,"author":{"gitId":"bingsen0806"},"content":"    public void isValidIsbn_invalidFormat_returnsFalse() {","lastModifiedDate":"2022-03-09"},{"lineNumber":24,"author":{"gitId":"bingsen0806"},"content":"        // null isbn","lastModifiedDate":"2022-03-09"},{"lineNumber":25,"author":{"gitId":"bingsen0806"},"content":"        assertThrows(NullPointerException.class, () -\u003e Isbn.isValidIsbn(null));","lastModifiedDate":"2022-03-09"},{"lineNumber":26,"author":{"gitId":"bingsen0806"},"content":"","lastModifiedDate":"2022-03-09"},{"lineNumber":27,"author":{"gitId":"bingsen0806"},"content":"        // isbn with invalid string pattern","lastModifiedDate":"2022-03-09"},{"lineNumber":28,"author":{"gitId":"bingsen0806"},"content":"        assertFalse(Isbn.isValidIsbn(\"\")); // empty string","lastModifiedDate":"2022-03-09"},{"lineNumber":29,"author":{"gitId":"bingsen0806"},"content":"        assertFalse(Isbn.isValidIsbn(\" \")); // spaces only","lastModifiedDate":"2022-03-09"},{"lineNumber":30,"author":{"gitId":"bingsen0806"},"content":"        assertFalse(Isbn.isValidIsbn(\"false\")); // contains non-numeric characters that are not hyphen","lastModifiedDate":"2022-03-09"},{"lineNumber":31,"author":{"gitId":"bingsen0806"},"content":"        assertFalse(Isbn.isValidIsbn(\"978--71617-018-8-5\")); // contains consecutive hyphen characters","lastModifiedDate":"2022-03-09"},{"lineNumber":32,"author":{"gitId":"bingsen0806"},"content":"        assertFalse(Isbn.isValidIsbn(\"-978-71617-018-8-5\")); // starts with non-numeric character","lastModifiedDate":"2022-03-09"},{"lineNumber":33,"author":{"gitId":"bingsen0806"},"content":"        assertFalse(Isbn.isValidIsbn(\"978-71617-018-8-5-\")); // ends with non-numeric character","lastModifiedDate":"2022-03-09"},{"lineNumber":34,"author":{"gitId":"bingsen0806"},"content":"        assertFalse(Isbn.isValidIsbn(\"978-71617-018-8-4\")); // wrong check sum for ISBN13 format","lastModifiedDate":"2022-03-09"},{"lineNumber":35,"author":{"gitId":"bingsen0806"},"content":"        assertFalse(Isbn.isValidIsbn(\"17-18-13730-4\")); // wrong check sum for ISBN10 format","lastModifiedDate":"2022-03-09"},{"lineNumber":36,"author":{"gitId":"bingsen0806"},"content":"        assertFalse(Isbn.isValidIsbn(\"980-71617-018-8-4\")); // does not start with 978 or 979 for ISBN13 format","lastModifiedDate":"2022-03-09"},{"lineNumber":37,"author":{"gitId":"bingsen0806"},"content":"        assertFalse(Isbn.isValidIsbn(\"978-71617-0184\")); // wrong number of digits","lastModifiedDate":"2022-03-09"},{"lineNumber":38,"author":{"gitId":"bingsen0806"},"content":"    }","lastModifiedDate":"2022-03-09"},{"lineNumber":39,"author":{"gitId":"bingsen0806"},"content":"","lastModifiedDate":"2022-03-09"},{"lineNumber":40,"author":{"gitId":"bingsen0806"},"content":"    @Test","lastModifiedDate":"2022-03-09"},{"lineNumber":41,"author":{"gitId":"bingsen0806"},"content":"    public void isValidIsbn_validFormat_returnsTrue() {","lastModifiedDate":"2022-03-09"},{"lineNumber":42,"author":{"gitId":"bingsen0806"},"content":"        assertTrue(Isbn.isValidIsbn(\"978-71617-018-8-5\")); // ISBN13 with hyphen","lastModifiedDate":"2022-03-09"},{"lineNumber":43,"author":{"gitId":"bingsen0806"},"content":"        assertTrue(Isbn.isValidIsbn(\"9787161701885\")); // ISBN13 without hyphen","lastModifiedDate":"2022-03-09"},{"lineNumber":44,"author":{"gitId":"bingsen0806"},"content":"        assertTrue(Isbn.isValidIsbn(\"17-18-13730-3\")); // ISBN10 with hyphen","lastModifiedDate":"2022-03-09"},{"lineNumber":45,"author":{"gitId":"bingsen0806"},"content":"        assertTrue(Isbn.isValidIsbn(\"1718137303\")); // ISBN10 without hyphen","lastModifiedDate":"2022-03-09"},{"lineNumber":46,"author":{"gitId":"bingsen0806"},"content":"        assertTrue(Isbn.isValidIsbn(\"97-971617-018-8-4\")); // ISBN13 starting with 979","lastModifiedDate":"2022-03-09"},{"lineNumber":47,"author":{"gitId":"bingsen0806"},"content":"    }","lastModifiedDate":"2022-03-09"},{"lineNumber":48,"author":{"gitId":"bingsen0806"},"content":"}","lastModifiedDate":"2022-03-09"}],"authorContributionMap":{"bingsen0806":48}},{"path":"src/test/java/seedu/address/model/person/AddressTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.model.person;","lastModifiedDate":"2017-01-16"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-16"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.Assert.assertThrows;","lastModifiedDate":"2019-03-14"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-16"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-16"},{"lineNumber":9,"author":{"gitId":"-"},"content":"public class AddressTest {","lastModifiedDate":"2017-01-16"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-16"},{"lineNumber":11,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-12-04"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    public void constructor_null_throwsNullPointerException() {","lastModifiedDate":"2017-12-04"},{"lineNumber":13,"author":{"gitId":"aditi2313"},"content":"        assertThrows(NullPointerException.class, () -\u003e new Id(null));","lastModifiedDate":"2022-03-09"},{"lineNumber":14,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-12-04"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-12-04"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-30"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    public void constructor_invalidAddress_throwsIllegalArgumentException() {","lastModifiedDate":"2017-05-30"},{"lineNumber":18,"author":{"gitId":"-"},"content":"        String invalidAddress \u003d \"\";","lastModifiedDate":"2017-05-30"},{"lineNumber":19,"author":{"gitId":"aditi2313"},"content":"        assertThrows(IllegalArgumentException.class, () -\u003e new Id(invalidAddress));","lastModifiedDate":"2022-03-09"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-30"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-30"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-01-16"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    public void isValidAddress() {","lastModifiedDate":"2017-01-16"},{"lineNumber":24,"author":{"gitId":"-"},"content":"        // null address","lastModifiedDate":"2017-12-04"},{"lineNumber":25,"author":{"gitId":"aditi2313"},"content":"        assertThrows(NullPointerException.class, () -\u003e Id.isValidId(null));","lastModifiedDate":"2022-03-09"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-12-04"},{"lineNumber":27,"author":{"gitId":"-"},"content":"        // invalid addresses","lastModifiedDate":"2017-01-16"},{"lineNumber":28,"author":{"gitId":"aditi2313"},"content":"        assertFalse(Id.isValidId(\"\")); // empty string","lastModifiedDate":"2022-03-09"},{"lineNumber":29,"author":{"gitId":"aditi2313"},"content":"        assertFalse(Id.isValidId(\" \")); // spaces only","lastModifiedDate":"2022-03-09"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-16"},{"lineNumber":31,"author":{"gitId":"-"},"content":"        // valid addresses","lastModifiedDate":"2017-01-16"},{"lineNumber":32,"author":{"gitId":"aditi2313"},"content":"        assertTrue(Id.isValidId(\"A0123456H\"));","lastModifiedDate":"2022-03-10"},{"lineNumber":33,"author":{"gitId":"aditi2313"},"content":"        assertTrue(Id.isValidId(\"A0123457H\"));","lastModifiedDate":"2022-03-10"},{"lineNumber":34,"author":{"gitId":"aditi2313"},"content":"        assertTrue(Id.isValidId(\"A0123458H\"));","lastModifiedDate":"2022-03-10"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-01-16"},{"lineNumber":36,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-01-16"}],"authorContributionMap":{"-":28,"aditi2313":8}},{"path":"src/test/java/seedu/address/model/person/NameContainsKeywordsPredicateTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.model.person;","lastModifiedDate":"2017-06-12"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.util.Arrays;","lastModifiedDate":"2017-06-12"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import java.util.Collections;","lastModifiedDate":"2017-06-12"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import java.util.List;","lastModifiedDate":"2017-06-12"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import seedu.address.testutil.PersonBuilder;","lastModifiedDate":"2017-06-12"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":14,"author":{"gitId":"-"},"content":"public class NameContainsKeywordsPredicateTest {","lastModifiedDate":"2017-06-12"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-12"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    public void equals() {","lastModifiedDate":"2017-06-12"},{"lineNumber":18,"author":{"gitId":"-"},"content":"        List\u003cString\u003e firstPredicateKeywordList \u003d Collections.singletonList(\"first\");","lastModifiedDate":"2017-06-12"},{"lineNumber":19,"author":{"gitId":"-"},"content":"        List\u003cString\u003e secondPredicateKeywordList \u003d Arrays.asList(\"first\", \"second\");","lastModifiedDate":"2017-06-12"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":21,"author":{"gitId":"-"},"content":"        NameContainsKeywordsPredicate firstPredicate \u003d new NameContainsKeywordsPredicate(firstPredicateKeywordList);","lastModifiedDate":"2017-06-12"},{"lineNumber":22,"author":{"gitId":"-"},"content":"        NameContainsKeywordsPredicate secondPredicate \u003d new NameContainsKeywordsPredicate(secondPredicateKeywordList);","lastModifiedDate":"2017-06-12"},{"lineNumber":23,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":24,"author":{"gitId":"-"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2017-06-12"},{"lineNumber":25,"author":{"gitId":"-"},"content":"        assertTrue(firstPredicate.equals(firstPredicate));","lastModifiedDate":"2017-06-12"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":27,"author":{"gitId":"-"},"content":"        // same values -\u003e returns true","lastModifiedDate":"2017-06-12"},{"lineNumber":28,"author":{"gitId":"-"},"content":"        NameContainsKeywordsPredicate firstPredicateCopy \u003d new NameContainsKeywordsPredicate(firstPredicateKeywordList);","lastModifiedDate":"2017-06-12"},{"lineNumber":29,"author":{"gitId":"-"},"content":"        assertTrue(firstPredicate.equals(firstPredicateCopy));","lastModifiedDate":"2017-06-12"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":31,"author":{"gitId":"-"},"content":"        // different types -\u003e returns false","lastModifiedDate":"2017-06-12"},{"lineNumber":32,"author":{"gitId":"-"},"content":"        assertFalse(firstPredicate.equals(1));","lastModifiedDate":"2017-06-12"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":34,"author":{"gitId":"-"},"content":"        // null -\u003e returns false","lastModifiedDate":"2017-06-12"},{"lineNumber":35,"author":{"gitId":"-"},"content":"        assertFalse(firstPredicate.equals(null));","lastModifiedDate":"2017-06-12"},{"lineNumber":36,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        // different person -\u003e returns false","lastModifiedDate":"2017-06-12"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        assertFalse(firstPredicate.equals(secondPredicate));","lastModifiedDate":"2017-06-12"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-12"},{"lineNumber":40,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-12"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    public void test_nameContainsKeywords_returnsTrue() {","lastModifiedDate":"2017-08-15"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        // One keyword","lastModifiedDate":"2017-06-12"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        NameContainsKeywordsPredicate predicate \u003d new NameContainsKeywordsPredicate(Collections.singletonList(\"Alice\"));","lastModifiedDate":"2017-06-12"},{"lineNumber":45,"author":{"gitId":"-"},"content":"        assertTrue(predicate.test(new PersonBuilder().withName(\"Alice Bob\").build()));","lastModifiedDate":"2017-06-12"},{"lineNumber":46,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":47,"author":{"gitId":"-"},"content":"        // Multiple keywords","lastModifiedDate":"2017-06-12"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        predicate \u003d new NameContainsKeywordsPredicate(Arrays.asList(\"Alice\", \"Bob\"));","lastModifiedDate":"2017-06-12"},{"lineNumber":49,"author":{"gitId":"-"},"content":"        assertTrue(predicate.test(new PersonBuilder().withName(\"Alice Bob\").build()));","lastModifiedDate":"2017-06-12"},{"lineNumber":50,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":51,"author":{"gitId":"-"},"content":"        // Only one matching keyword","lastModifiedDate":"2017-06-12"},{"lineNumber":52,"author":{"gitId":"-"},"content":"        predicate \u003d new NameContainsKeywordsPredicate(Arrays.asList(\"Bob\", \"Carol\"));","lastModifiedDate":"2017-06-12"},{"lineNumber":53,"author":{"gitId":"-"},"content":"        assertTrue(predicate.test(new PersonBuilder().withName(\"Alice Carol\").build()));","lastModifiedDate":"2017-06-12"},{"lineNumber":54,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":55,"author":{"gitId":"-"},"content":"        // Mixed-case keywords","lastModifiedDate":"2017-06-12"},{"lineNumber":56,"author":{"gitId":"-"},"content":"        predicate \u003d new NameContainsKeywordsPredicate(Arrays.asList(\"aLIce\", \"bOB\"));","lastModifiedDate":"2017-06-12"},{"lineNumber":57,"author":{"gitId":"-"},"content":"        assertTrue(predicate.test(new PersonBuilder().withName(\"Alice Bob\").build()));","lastModifiedDate":"2017-06-12"},{"lineNumber":58,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-12"},{"lineNumber":59,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-12"},{"lineNumber":61,"author":{"gitId":"-"},"content":"    public void test_nameDoesNotContainKeywords_returnsFalse() {","lastModifiedDate":"2017-08-15"},{"lineNumber":62,"author":{"gitId":"-"},"content":"        // Zero keywords","lastModifiedDate":"2017-06-12"},{"lineNumber":63,"author":{"gitId":"-"},"content":"        NameContainsKeywordsPredicate predicate \u003d new NameContainsKeywordsPredicate(Collections.emptyList());","lastModifiedDate":"2017-06-12"},{"lineNumber":64,"author":{"gitId":"-"},"content":"        assertFalse(predicate.test(new PersonBuilder().withName(\"Alice\").build()));","lastModifiedDate":"2017-06-12"},{"lineNumber":65,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":66,"author":{"gitId":"-"},"content":"        // Non-matching keyword","lastModifiedDate":"2017-06-12"},{"lineNumber":67,"author":{"gitId":"-"},"content":"        predicate \u003d new NameContainsKeywordsPredicate(Arrays.asList(\"Carol\"));","lastModifiedDate":"2017-06-12"},{"lineNumber":68,"author":{"gitId":"-"},"content":"        assertFalse(predicate.test(new PersonBuilder().withName(\"Alice Bob\").build()));","lastModifiedDate":"2017-06-12"},{"lineNumber":69,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":70,"author":{"gitId":"-"},"content":"        // Keywords match phone, email and address, but does not match name","lastModifiedDate":"2017-06-12"},{"lineNumber":71,"author":{"gitId":"-"},"content":"        predicate \u003d new NameContainsKeywordsPredicate(Arrays.asList(\"12345\", \"alice@email.com\", \"Main\", \"Street\"));","lastModifiedDate":"2017-06-12"},{"lineNumber":72,"author":{"gitId":"-"},"content":"        assertFalse(predicate.test(new PersonBuilder().withName(\"Alice\").withPhone(\"12345\")","lastModifiedDate":"2017-06-12"},{"lineNumber":73,"author":{"gitId":"aditi2313"},"content":"                .withEmail(\"alice@email.com\").withId(\"A0123456H\").build()));","lastModifiedDate":"2022-03-10"},{"lineNumber":74,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-12"},{"lineNumber":75,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-06-12"}],"authorContributionMap":{"-":74,"aditi2313":1}},{"path":"src/test/java/seedu/address/model/person/PersonTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.model.person;","lastModifiedDate":"2018-03-26"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-09-01"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_EMAIL_BOB;","lastModifiedDate":"2018-04-19"},{"lineNumber":6,"author":{"gitId":"aditi2313"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_ID_BOB;","lastModifiedDate":"2022-03-11"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_NAME_BOB;","lastModifiedDate":"2018-04-19"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_PHONE_BOB;","lastModifiedDate":"2018-04-19"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_TAG_HUSBAND;","lastModifiedDate":"2018-04-19"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.Assert.assertThrows;","lastModifiedDate":"2019-03-23"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.TypicalPersons.ALICE;","lastModifiedDate":"2018-04-19"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.TypicalPersons.BOB;","lastModifiedDate":"2018-04-19"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-09-01"},{"lineNumber":16,"author":{"gitId":"-"},"content":"import seedu.address.testutil.PersonBuilder;","lastModifiedDate":"2018-03-26"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-09-01"},{"lineNumber":18,"author":{"gitId":"-"},"content":"public class PersonTest {","lastModifiedDate":"2018-03-26"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-09-01"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-09-01"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    public void asObservableList_modifyList_throwsUnsupportedOperationException() {","lastModifiedDate":"2017-09-01"},{"lineNumber":22,"author":{"gitId":"aditi2313"},"content":"        Patron person \u003d new PersonBuilder().build();","lastModifiedDate":"2022-03-09"},{"lineNumber":23,"author":{"gitId":"-"},"content":"        assertThrows(UnsupportedOperationException.class, () -\u003e person.getTags().remove(0));","lastModifiedDate":"2019-03-23"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-09-01"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-04-19"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    public void isSamePerson() {","lastModifiedDate":"2018-04-19"},{"lineNumber":28,"author":{"gitId":"-"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2018-04-19"},{"lineNumber":29,"author":{"gitId":"-"},"content":"        assertTrue(ALICE.isSamePerson(ALICE));","lastModifiedDate":"2018-04-19"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":31,"author":{"gitId":"-"},"content":"        // null -\u003e returns false","lastModifiedDate":"2018-04-19"},{"lineNumber":32,"author":{"gitId":"-"},"content":"        assertFalse(ALICE.isSamePerson(null));","lastModifiedDate":"2018-04-19"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":34,"author":{"gitId":"-"},"content":"        // same name, all other attributes different -\u003e returns true","lastModifiedDate":"2020-12-18"},{"lineNumber":35,"author":{"gitId":"aditi2313"},"content":"        Patron editedAlice \u003d new PersonBuilder(ALICE).withPhone(VALID_PHONE_BOB).withEmail(VALID_EMAIL_BOB)","lastModifiedDate":"2022-03-09"},{"lineNumber":36,"author":{"gitId":"aditi2313"},"content":"                .withId(VALID_ID_BOB).withTags(VALID_TAG_HUSBAND).build();","lastModifiedDate":"2022-03-09"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        assertTrue(ALICE.isSamePerson(editedAlice));","lastModifiedDate":"2020-12-18"},{"lineNumber":38,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        // different name, all other attributes same -\u003e returns false","lastModifiedDate":"2020-12-18"},{"lineNumber":40,"author":{"gitId":"-"},"content":"        editedAlice \u003d new PersonBuilder(ALICE).withName(VALID_NAME_BOB).build();","lastModifiedDate":"2018-04-19"},{"lineNumber":41,"author":{"gitId":"-"},"content":"        assertFalse(ALICE.isSamePerson(editedAlice));","lastModifiedDate":"2018-04-19"},{"lineNumber":42,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        // name differs in case, all other attributes same -\u003e returns false","lastModifiedDate":"2020-12-18"},{"lineNumber":44,"author":{"gitId":"aditi2313"},"content":"        Patron editedBob \u003d new PersonBuilder(BOB).withName(VALID_NAME_BOB.toLowerCase()).build();","lastModifiedDate":"2022-03-09"},{"lineNumber":45,"author":{"gitId":"-"},"content":"        assertFalse(BOB.isSamePerson(editedBob));","lastModifiedDate":"2020-12-18"},{"lineNumber":46,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":47,"author":{"gitId":"-"},"content":"        // name has trailing spaces, all other attributes same -\u003e returns false","lastModifiedDate":"2020-12-18"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        String nameWithTrailingSpaces \u003d VALID_NAME_BOB + \" \";","lastModifiedDate":"2020-12-18"},{"lineNumber":49,"author":{"gitId":"-"},"content":"        editedBob \u003d new PersonBuilder(BOB).withName(nameWithTrailingSpaces).build();","lastModifiedDate":"2020-12-18"},{"lineNumber":50,"author":{"gitId":"-"},"content":"        assertFalse(BOB.isSamePerson(editedBob));","lastModifiedDate":"2020-12-18"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-04-19"},{"lineNumber":52,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":53,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-04-19"},{"lineNumber":54,"author":{"gitId":"-"},"content":"    public void equals() {","lastModifiedDate":"2018-04-19"},{"lineNumber":55,"author":{"gitId":"-"},"content":"        // same values -\u003e returns true","lastModifiedDate":"2018-04-19"},{"lineNumber":56,"author":{"gitId":"aditi2313"},"content":"        Patron aliceCopy \u003d new PersonBuilder(ALICE).build();","lastModifiedDate":"2022-03-09"},{"lineNumber":57,"author":{"gitId":"-"},"content":"        assertTrue(ALICE.equals(aliceCopy));","lastModifiedDate":"2018-04-19"},{"lineNumber":58,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":59,"author":{"gitId":"-"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2018-04-19"},{"lineNumber":60,"author":{"gitId":"-"},"content":"        assertTrue(ALICE.equals(ALICE));","lastModifiedDate":"2018-04-19"},{"lineNumber":61,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":62,"author":{"gitId":"-"},"content":"        // null -\u003e returns false","lastModifiedDate":"2018-04-19"},{"lineNumber":63,"author":{"gitId":"-"},"content":"        assertFalse(ALICE.equals(null));","lastModifiedDate":"2018-04-19"},{"lineNumber":64,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":65,"author":{"gitId":"-"},"content":"        // different type -\u003e returns false","lastModifiedDate":"2018-04-19"},{"lineNumber":66,"author":{"gitId":"-"},"content":"        assertFalse(ALICE.equals(5));","lastModifiedDate":"2018-04-19"},{"lineNumber":67,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":68,"author":{"gitId":"-"},"content":"        // different person -\u003e returns false","lastModifiedDate":"2018-04-19"},{"lineNumber":69,"author":{"gitId":"-"},"content":"        assertFalse(ALICE.equals(BOB));","lastModifiedDate":"2018-04-19"},{"lineNumber":70,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":71,"author":{"gitId":"-"},"content":"        // different name -\u003e returns false","lastModifiedDate":"2018-04-19"},{"lineNumber":72,"author":{"gitId":"aditi2313"},"content":"        Patron editedAlice \u003d new PersonBuilder(ALICE).withName(VALID_NAME_BOB).build();","lastModifiedDate":"2022-03-09"},{"lineNumber":73,"author":{"gitId":"-"},"content":"        assertFalse(ALICE.equals(editedAlice));","lastModifiedDate":"2018-04-19"},{"lineNumber":74,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":75,"author":{"gitId":"-"},"content":"        // different phone -\u003e returns false","lastModifiedDate":"2018-04-19"},{"lineNumber":76,"author":{"gitId":"-"},"content":"        editedAlice \u003d new PersonBuilder(ALICE).withPhone(VALID_PHONE_BOB).build();","lastModifiedDate":"2018-04-19"},{"lineNumber":77,"author":{"gitId":"-"},"content":"        assertFalse(ALICE.equals(editedAlice));","lastModifiedDate":"2018-04-19"},{"lineNumber":78,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":79,"author":{"gitId":"-"},"content":"        // different email -\u003e returns false","lastModifiedDate":"2018-04-19"},{"lineNumber":80,"author":{"gitId":"-"},"content":"        editedAlice \u003d new PersonBuilder(ALICE).withEmail(VALID_EMAIL_BOB).build();","lastModifiedDate":"2018-04-19"},{"lineNumber":81,"author":{"gitId":"-"},"content":"        assertFalse(ALICE.equals(editedAlice));","lastModifiedDate":"2018-04-19"},{"lineNumber":82,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":83,"author":{"gitId":"-"},"content":"        // different address -\u003e returns false","lastModifiedDate":"2018-04-19"},{"lineNumber":84,"author":{"gitId":"aditi2313"},"content":"        editedAlice \u003d new PersonBuilder(ALICE).withId(VALID_ID_BOB).build();","lastModifiedDate":"2022-03-09"},{"lineNumber":85,"author":{"gitId":"-"},"content":"        assertFalse(ALICE.equals(editedAlice));","lastModifiedDate":"2018-04-19"},{"lineNumber":86,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-18"},{"lineNumber":87,"author":{"gitId":"-"},"content":"        // different tags -\u003e returns false","lastModifiedDate":"2018-04-18"},{"lineNumber":88,"author":{"gitId":"-"},"content":"        editedAlice \u003d new PersonBuilder(ALICE).withTags(VALID_TAG_HUSBAND).build();","lastModifiedDate":"2018-04-18"},{"lineNumber":89,"author":{"gitId":"-"},"content":"        assertFalse(ALICE.equals(editedAlice));","lastModifiedDate":"2018-04-18"},{"lineNumber":90,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-04-19"},{"lineNumber":91,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-09-01"}],"authorContributionMap":{"-":83,"aditi2313":8}},{"path":"src/test/java/seedu/address/model/person/UniquePersonListTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.model.person;","lastModifiedDate":"2018-08-09"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-09-01"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2019-03-15"},{"lineNumber":6,"author":{"gitId":"aditi2313"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_ID_BOB;","lastModifiedDate":"2022-03-09"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_TAG_HUSBAND;","lastModifiedDate":"2018-08-08"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.Assert.assertThrows;","lastModifiedDate":"2019-03-23"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.TypicalPersons.ALICE;","lastModifiedDate":"2018-08-08"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.TypicalPersons.BOB;","lastModifiedDate":"2018-08-08"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import java.util.Arrays;","lastModifiedDate":"2018-08-08"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import java.util.Collections;","lastModifiedDate":"2018-08-08"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import java.util.List;","lastModifiedDate":"2018-08-08"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":16,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-09-01"},{"lineNumber":18,"author":{"gitId":"-"},"content":"import seedu.address.model.person.exceptions.DuplicatePersonException;","lastModifiedDate":"2018-08-08"},{"lineNumber":19,"author":{"gitId":"-"},"content":"import seedu.address.model.person.exceptions.PersonNotFoundException;","lastModifiedDate":"2018-08-08"},{"lineNumber":20,"author":{"gitId":"-"},"content":"import seedu.address.testutil.PersonBuilder;","lastModifiedDate":"2018-08-08"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":22,"author":{"gitId":"-"},"content":"public class UniquePersonListTest {","lastModifiedDate":"2017-09-01"},{"lineNumber":23,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-09-01"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    private final UniquePersonList uniquePersonList \u003d new UniquePersonList();","lastModifiedDate":"2018-08-08"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-08"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    public void contains_nullPerson_throwsNullPointerException() {","lastModifiedDate":"2018-08-08"},{"lineNumber":28,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e uniquePersonList.contains(null));","lastModifiedDate":"2019-03-23"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-08"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-08"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    public void contains_personNotInList_returnsFalse() {","lastModifiedDate":"2018-08-08"},{"lineNumber":33,"author":{"gitId":"-"},"content":"        assertFalse(uniquePersonList.contains(ALICE));","lastModifiedDate":"2018-08-08"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-08"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-08"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    public void contains_personInList_returnsTrue() {","lastModifiedDate":"2018-08-08"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        uniquePersonList.add(ALICE);","lastModifiedDate":"2018-08-08"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        assertTrue(uniquePersonList.contains(ALICE));","lastModifiedDate":"2018-08-08"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-08"},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-08"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    public void contains_personWithSameIdentityFieldsInList_returnsTrue() {","lastModifiedDate":"2018-08-08"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        uniquePersonList.add(ALICE);","lastModifiedDate":"2018-08-08"},{"lineNumber":45,"author":{"gitId":"aditi2313"},"content":"        Patron editedAlice \u003d new PersonBuilder(ALICE).withId(VALID_ID_BOB).withTags(VALID_TAG_HUSBAND)","lastModifiedDate":"2022-03-09"},{"lineNumber":46,"author":{"gitId":"-"},"content":"                .build();","lastModifiedDate":"2018-08-08"},{"lineNumber":47,"author":{"gitId":"-"},"content":"        assertTrue(uniquePersonList.contains(editedAlice));","lastModifiedDate":"2018-08-08"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-08"},{"lineNumber":49,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-08"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    public void add_nullPerson_throwsNullPointerException() {","lastModifiedDate":"2018-08-08"},{"lineNumber":52,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e uniquePersonList.add(null));","lastModifiedDate":"2019-03-23"},{"lineNumber":53,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-08"},{"lineNumber":54,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-08"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    public void add_duplicatePerson_throwsDuplicatePersonException() {","lastModifiedDate":"2018-08-08"},{"lineNumber":57,"author":{"gitId":"-"},"content":"        uniquePersonList.add(ALICE);","lastModifiedDate":"2018-08-08"},{"lineNumber":58,"author":{"gitId":"-"},"content":"        assertThrows(DuplicatePersonException.class, () -\u003e uniquePersonList.add(ALICE));","lastModifiedDate":"2019-03-23"},{"lineNumber":59,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-08"},{"lineNumber":60,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":61,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-08"},{"lineNumber":62,"author":{"gitId":"-"},"content":"    public void setPerson_nullTargetPerson_throwsNullPointerException() {","lastModifiedDate":"2018-08-08"},{"lineNumber":63,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e uniquePersonList.setPerson(null, ALICE));","lastModifiedDate":"2019-03-23"},{"lineNumber":64,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-08"},{"lineNumber":65,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":66,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-08"},{"lineNumber":67,"author":{"gitId":"-"},"content":"    public void setPerson_nullEditedPerson_throwsNullPointerException() {","lastModifiedDate":"2018-08-08"},{"lineNumber":68,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e uniquePersonList.setPerson(ALICE, null));","lastModifiedDate":"2019-03-23"},{"lineNumber":69,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-08"},{"lineNumber":70,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":71,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-08"},{"lineNumber":72,"author":{"gitId":"-"},"content":"    public void setPerson_targetPersonNotInList_throwsPersonNotFoundException() {","lastModifiedDate":"2018-08-08"},{"lineNumber":73,"author":{"gitId":"-"},"content":"        assertThrows(PersonNotFoundException.class, () -\u003e uniquePersonList.setPerson(ALICE, ALICE));","lastModifiedDate":"2019-03-23"},{"lineNumber":74,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-08"},{"lineNumber":75,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":76,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-08"},{"lineNumber":77,"author":{"gitId":"-"},"content":"    public void setPerson_editedPersonIsSamePerson_success() {","lastModifiedDate":"2018-08-08"},{"lineNumber":78,"author":{"gitId":"-"},"content":"        uniquePersonList.add(ALICE);","lastModifiedDate":"2018-08-08"},{"lineNumber":79,"author":{"gitId":"-"},"content":"        uniquePersonList.setPerson(ALICE, ALICE);","lastModifiedDate":"2018-08-08"},{"lineNumber":80,"author":{"gitId":"-"},"content":"        UniquePersonList expectedUniquePersonList \u003d new UniquePersonList();","lastModifiedDate":"2018-08-08"},{"lineNumber":81,"author":{"gitId":"-"},"content":"        expectedUniquePersonList.add(ALICE);","lastModifiedDate":"2018-08-08"},{"lineNumber":82,"author":{"gitId":"-"},"content":"        assertEquals(expectedUniquePersonList, uniquePersonList);","lastModifiedDate":"2018-08-08"},{"lineNumber":83,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-08"},{"lineNumber":84,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":85,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-08"},{"lineNumber":86,"author":{"gitId":"-"},"content":"    public void setPerson_editedPersonHasSameIdentity_success() {","lastModifiedDate":"2018-08-08"},{"lineNumber":87,"author":{"gitId":"-"},"content":"        uniquePersonList.add(ALICE);","lastModifiedDate":"2018-08-08"},{"lineNumber":88,"author":{"gitId":"aditi2313"},"content":"        Patron editedAlice \u003d new PersonBuilder(ALICE).withId(VALID_ID_BOB).withTags(VALID_TAG_HUSBAND)","lastModifiedDate":"2022-03-09"},{"lineNumber":89,"author":{"gitId":"-"},"content":"                .build();","lastModifiedDate":"2018-08-08"},{"lineNumber":90,"author":{"gitId":"-"},"content":"        uniquePersonList.setPerson(ALICE, editedAlice);","lastModifiedDate":"2018-08-08"},{"lineNumber":91,"author":{"gitId":"-"},"content":"        UniquePersonList expectedUniquePersonList \u003d new UniquePersonList();","lastModifiedDate":"2018-08-08"},{"lineNumber":92,"author":{"gitId":"-"},"content":"        expectedUniquePersonList.add(editedAlice);","lastModifiedDate":"2018-08-08"},{"lineNumber":93,"author":{"gitId":"-"},"content":"        assertEquals(expectedUniquePersonList, uniquePersonList);","lastModifiedDate":"2018-08-08"},{"lineNumber":94,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-08"},{"lineNumber":95,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":96,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-08"},{"lineNumber":97,"author":{"gitId":"-"},"content":"    public void setPerson_editedPersonHasDifferentIdentity_success() {","lastModifiedDate":"2018-08-08"},{"lineNumber":98,"author":{"gitId":"-"},"content":"        uniquePersonList.add(ALICE);","lastModifiedDate":"2018-08-08"},{"lineNumber":99,"author":{"gitId":"-"},"content":"        uniquePersonList.setPerson(ALICE, BOB);","lastModifiedDate":"2018-08-08"},{"lineNumber":100,"author":{"gitId":"-"},"content":"        UniquePersonList expectedUniquePersonList \u003d new UniquePersonList();","lastModifiedDate":"2018-08-08"},{"lineNumber":101,"author":{"gitId":"-"},"content":"        expectedUniquePersonList.add(BOB);","lastModifiedDate":"2018-08-08"},{"lineNumber":102,"author":{"gitId":"-"},"content":"        assertEquals(expectedUniquePersonList, uniquePersonList);","lastModifiedDate":"2018-08-08"},{"lineNumber":103,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-08"},{"lineNumber":104,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":105,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-08"},{"lineNumber":106,"author":{"gitId":"-"},"content":"    public void setPerson_editedPersonHasNonUniqueIdentity_throwsDuplicatePersonException() {","lastModifiedDate":"2018-08-08"},{"lineNumber":107,"author":{"gitId":"-"},"content":"        uniquePersonList.add(ALICE);","lastModifiedDate":"2018-08-08"},{"lineNumber":108,"author":{"gitId":"-"},"content":"        uniquePersonList.add(BOB);","lastModifiedDate":"2018-08-08"},{"lineNumber":109,"author":{"gitId":"-"},"content":"        assertThrows(DuplicatePersonException.class, () -\u003e uniquePersonList.setPerson(ALICE, BOB));","lastModifiedDate":"2019-03-23"},{"lineNumber":110,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-08"},{"lineNumber":111,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":112,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-08"},{"lineNumber":113,"author":{"gitId":"-"},"content":"    public void remove_nullPerson_throwsNullPointerException() {","lastModifiedDate":"2018-08-08"},{"lineNumber":114,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e uniquePersonList.remove(null));","lastModifiedDate":"2019-03-23"},{"lineNumber":115,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-08"},{"lineNumber":116,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":117,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-08"},{"lineNumber":118,"author":{"gitId":"-"},"content":"    public void remove_personDoesNotExist_throwsPersonNotFoundException() {","lastModifiedDate":"2018-08-08"},{"lineNumber":119,"author":{"gitId":"-"},"content":"        assertThrows(PersonNotFoundException.class, () -\u003e uniquePersonList.remove(ALICE));","lastModifiedDate":"2019-03-23"},{"lineNumber":120,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-08"},{"lineNumber":121,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":122,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-08"},{"lineNumber":123,"author":{"gitId":"-"},"content":"    public void remove_existingPerson_removesPerson() {","lastModifiedDate":"2018-08-08"},{"lineNumber":124,"author":{"gitId":"-"},"content":"        uniquePersonList.add(ALICE);","lastModifiedDate":"2018-08-08"},{"lineNumber":125,"author":{"gitId":"-"},"content":"        uniquePersonList.remove(ALICE);","lastModifiedDate":"2018-08-08"},{"lineNumber":126,"author":{"gitId":"-"},"content":"        UniquePersonList expectedUniquePersonList \u003d new UniquePersonList();","lastModifiedDate":"2018-08-08"},{"lineNumber":127,"author":{"gitId":"-"},"content":"        assertEquals(expectedUniquePersonList, uniquePersonList);","lastModifiedDate":"2018-08-08"},{"lineNumber":128,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-08"},{"lineNumber":129,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":130,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-08"},{"lineNumber":131,"author":{"gitId":"-"},"content":"    public void setPersons_nullUniquePersonList_throwsNullPointerException() {","lastModifiedDate":"2018-08-08"},{"lineNumber":132,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e uniquePersonList.setPersons((UniquePersonList) null));","lastModifiedDate":"2019-03-23"},{"lineNumber":133,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-08"},{"lineNumber":134,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":135,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-08"},{"lineNumber":136,"author":{"gitId":"-"},"content":"    public void setPersons_uniquePersonList_replacesOwnListWithProvidedUniquePersonList() {","lastModifiedDate":"2018-08-08"},{"lineNumber":137,"author":{"gitId":"-"},"content":"        uniquePersonList.add(ALICE);","lastModifiedDate":"2018-08-08"},{"lineNumber":138,"author":{"gitId":"-"},"content":"        UniquePersonList expectedUniquePersonList \u003d new UniquePersonList();","lastModifiedDate":"2018-08-08"},{"lineNumber":139,"author":{"gitId":"-"},"content":"        expectedUniquePersonList.add(BOB);","lastModifiedDate":"2018-08-08"},{"lineNumber":140,"author":{"gitId":"-"},"content":"        uniquePersonList.setPersons(expectedUniquePersonList);","lastModifiedDate":"2018-08-08"},{"lineNumber":141,"author":{"gitId":"-"},"content":"        assertEquals(expectedUniquePersonList, uniquePersonList);","lastModifiedDate":"2018-08-08"},{"lineNumber":142,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-08"},{"lineNumber":143,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":144,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-08"},{"lineNumber":145,"author":{"gitId":"-"},"content":"    public void setPersons_nullList_throwsNullPointerException() {","lastModifiedDate":"2018-08-08"},{"lineNumber":146,"author":{"gitId":"aditi2313"},"content":"        assertThrows(NullPointerException.class, () -\u003e uniquePersonList.setPersons((List\u003cPatron\u003e) null));","lastModifiedDate":"2022-03-09"},{"lineNumber":147,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-08"},{"lineNumber":148,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":149,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-08"},{"lineNumber":150,"author":{"gitId":"-"},"content":"    public void setPersons_list_replacesOwnListWithProvidedList() {","lastModifiedDate":"2018-08-08"},{"lineNumber":151,"author":{"gitId":"-"},"content":"        uniquePersonList.add(ALICE);","lastModifiedDate":"2018-08-08"},{"lineNumber":152,"author":{"gitId":"aditi2313"},"content":"        List\u003cPatron\u003e personList \u003d Collections.singletonList(BOB);","lastModifiedDate":"2022-03-09"},{"lineNumber":153,"author":{"gitId":"-"},"content":"        uniquePersonList.setPersons(personList);","lastModifiedDate":"2018-08-08"},{"lineNumber":154,"author":{"gitId":"-"},"content":"        UniquePersonList expectedUniquePersonList \u003d new UniquePersonList();","lastModifiedDate":"2018-08-08"},{"lineNumber":155,"author":{"gitId":"-"},"content":"        expectedUniquePersonList.add(BOB);","lastModifiedDate":"2018-08-08"},{"lineNumber":156,"author":{"gitId":"-"},"content":"        assertEquals(expectedUniquePersonList, uniquePersonList);","lastModifiedDate":"2018-08-08"},{"lineNumber":157,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-08"},{"lineNumber":158,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":159,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-08"},{"lineNumber":160,"author":{"gitId":"-"},"content":"    public void setPersons_listWithDuplicatePersons_throwsDuplicatePersonException() {","lastModifiedDate":"2018-08-08"},{"lineNumber":161,"author":{"gitId":"aditi2313"},"content":"        List\u003cPatron\u003e listWithDuplicatePersons \u003d Arrays.asList(ALICE, ALICE);","lastModifiedDate":"2022-03-09"},{"lineNumber":162,"author":{"gitId":"-"},"content":"        assertThrows(DuplicatePersonException.class, () -\u003e uniquePersonList.setPersons(listWithDuplicatePersons));","lastModifiedDate":"2019-03-23"},{"lineNumber":163,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-08"},{"lineNumber":164,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":165,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-09-01"},{"lineNumber":166,"author":{"gitId":"-"},"content":"    public void asUnmodifiableObservableList_modifyList_throwsUnsupportedOperationException() {","lastModifiedDate":"2018-04-05"},{"lineNumber":167,"author":{"gitId":"-"},"content":"        assertThrows(UnsupportedOperationException.class, ()","lastModifiedDate":"2019-03-23"},{"lineNumber":168,"author":{"gitId":"-"},"content":"            -\u003e uniquePersonList.asUnmodifiableObservableList().remove(0));","lastModifiedDate":"2019-03-23"},{"lineNumber":169,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-09-01"},{"lineNumber":170,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-09-01"}],"authorContributionMap":{"-":164,"aditi2313":6}},{"path":"src/test/java/seedu/address/storage/JsonAdaptedBookTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"bingsen0806"},"content":"package seedu.address.storage;","lastModifiedDate":"2022-03-10"},{"lineNumber":2,"author":{"gitId":"bingsen0806"},"content":"","lastModifiedDate":"2022-03-10"},{"lineNumber":3,"author":{"gitId":"bingsen0806"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2022-03-10"},{"lineNumber":4,"author":{"gitId":"bingsen0806"},"content":"import static seedu.address.model.util.SampleDataUtil.SAMPLE_BOOK_CREATED_TIME;","lastModifiedDate":"2022-03-11"},{"lineNumber":5,"author":{"gitId":"bingsen0806"},"content":"import static seedu.address.storage.JsonAdaptedBook.MISSING_FIELD_MESSAGE_FORMAT;","lastModifiedDate":"2022-03-10"},{"lineNumber":6,"author":{"gitId":"bingsen0806"},"content":"import static seedu.address.testutil.Assert.assertThrows;","lastModifiedDate":"2022-03-10"},{"lineNumber":7,"author":{"gitId":"bingsen0806"},"content":"import static seedu.address.testutil.TypicalBooks.ALGORITHM;","lastModifiedDate":"2022-03-10"},{"lineNumber":8,"author":{"gitId":"bingsen0806"},"content":"","lastModifiedDate":"2022-03-10"},{"lineNumber":9,"author":{"gitId":"bingsen0806"},"content":"import java.util.ArrayList;","lastModifiedDate":"2022-03-10"},{"lineNumber":10,"author":{"gitId":"bingsen0806"},"content":"import java.util.List;","lastModifiedDate":"2022-03-10"},{"lineNumber":11,"author":{"gitId":"bingsen0806"},"content":"import java.util.stream.Collectors;","lastModifiedDate":"2022-03-10"},{"lineNumber":12,"author":{"gitId":"bingsen0806"},"content":"","lastModifiedDate":"2022-03-10"},{"lineNumber":13,"author":{"gitId":"bingsen0806"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2022-03-10"},{"lineNumber":14,"author":{"gitId":"bingsen0806"},"content":"","lastModifiedDate":"2022-03-10"},{"lineNumber":15,"author":{"gitId":"bingsen0806"},"content":"import seedu.address.commons.exceptions.IllegalValueException;","lastModifiedDate":"2022-03-10"},{"lineNumber":16,"author":{"gitId":"bingsen0806"},"content":"import seedu.address.model.book.Book;","lastModifiedDate":"2022-03-11"},{"lineNumber":17,"author":{"gitId":"bingsen0806"},"content":"import seedu.address.model.book.BookName;","lastModifiedDate":"2022-03-10"},{"lineNumber":18,"author":{"gitId":"bingsen0806"},"content":"import seedu.address.model.book.Isbn;","lastModifiedDate":"2022-03-10"},{"lineNumber":19,"author":{"gitId":"bingsen0806"},"content":"","lastModifiedDate":"2022-03-10"},{"lineNumber":20,"author":{"gitId":"bingsen0806"},"content":"public class JsonAdaptedBookTest {","lastModifiedDate":"2022-03-10"},{"lineNumber":21,"author":{"gitId":"bingsen0806"},"content":"    private static final String INVALID_BOOK_NAME \u003d \"H@rryPotter\";","lastModifiedDate":"2022-03-10"},{"lineNumber":22,"author":{"gitId":"bingsen0806"},"content":"    private static final String INVALID_ISBN \u003d \"+97829812\";","lastModifiedDate":"2022-03-10"},{"lineNumber":23,"author":{"gitId":"bingsen0806"},"content":"    private static final String INVALID_TAG \u003d \"#Adventure\";","lastModifiedDate":"2022-03-10"},{"lineNumber":24,"author":{"gitId":"bingsen0806"},"content":"    private static final String INVALID_AUTHOR \u003d \"J!KRowling\";","lastModifiedDate":"2022-03-10"},{"lineNumber":25,"author":{"gitId":"bingsen0806"},"content":"    private static final String INVALID_TIME_ADDED \u003d \"askdj\";","lastModifiedDate":"2022-03-11"},{"lineNumber":26,"author":{"gitId":"bingsen0806"},"content":"","lastModifiedDate":"2022-03-10"},{"lineNumber":27,"author":{"gitId":"bingsen0806"},"content":"    private static final String VALID_BOOK_NAME \u003d ALGORITHM.getBookName().fullBookName;","lastModifiedDate":"2022-03-10"},{"lineNumber":28,"author":{"gitId":"bingsen0806"},"content":"    private static final String VALID_ISBN \u003d ALGORITHM.getIsbn().toString();","lastModifiedDate":"2022-03-10"},{"lineNumber":29,"author":{"gitId":"bingsen0806"},"content":"    private static final List\u003cJsonAdaptedTag\u003e VALID_TAGS \u003d ALGORITHM.getTags().stream()","lastModifiedDate":"2022-03-10"},{"lineNumber":30,"author":{"gitId":"bingsen0806"},"content":"            .map(JsonAdaptedTag::new)","lastModifiedDate":"2022-03-10"},{"lineNumber":31,"author":{"gitId":"bingsen0806"},"content":"            .collect(Collectors.toList());","lastModifiedDate":"2022-03-10"},{"lineNumber":32,"author":{"gitId":"bingsen0806"},"content":"    private static final List\u003cJsonAdaptedAuthor\u003e VALID_AUTHORS \u003d ALGORITHM.getAuthors().stream()","lastModifiedDate":"2022-03-10"},{"lineNumber":33,"author":{"gitId":"bingsen0806"},"content":"            .map(JsonAdaptedAuthor::new)","lastModifiedDate":"2022-03-10"},{"lineNumber":34,"author":{"gitId":"bingsen0806"},"content":"            .collect(Collectors.toList());","lastModifiedDate":"2022-03-10"},{"lineNumber":35,"author":{"gitId":"bingsen0806"},"content":"    private static final String SAMPLE_CREATED_TIME \u003d Long.toString(SAMPLE_BOOK_CREATED_TIME);","lastModifiedDate":"2022-03-11"},{"lineNumber":36,"author":{"gitId":"bingsen0806"},"content":"","lastModifiedDate":"2022-03-10"},{"lineNumber":37,"author":{"gitId":"bingsen0806"},"content":"    @Test","lastModifiedDate":"2022-03-10"},{"lineNumber":38,"author":{"gitId":"bingsen0806"},"content":"    public void toModelType_validBookDetails_returnsBook() throws Exception {","lastModifiedDate":"2022-03-10"},{"lineNumber":39,"author":{"gitId":"bingsen0806"},"content":"        JsonAdaptedBook book \u003d new JsonAdaptedBook(ALGORITHM);","lastModifiedDate":"2022-03-10"},{"lineNumber":40,"author":{"gitId":"bingsen0806"},"content":"        assertEquals(ALGORITHM, book.toModelType());","lastModifiedDate":"2022-03-10"},{"lineNumber":41,"author":{"gitId":"bingsen0806"},"content":"    }","lastModifiedDate":"2022-03-10"},{"lineNumber":42,"author":{"gitId":"bingsen0806"},"content":"","lastModifiedDate":"2022-03-10"},{"lineNumber":43,"author":{"gitId":"bingsen0806"},"content":"    @Test","lastModifiedDate":"2022-03-10"},{"lineNumber":44,"author":{"gitId":"bingsen0806"},"content":"    public void toModelType_invalidBookName_throwsIllegalValueException() {","lastModifiedDate":"2022-03-10"},{"lineNumber":45,"author":{"gitId":"bingsen0806"},"content":"        JsonAdaptedBook book \u003d","lastModifiedDate":"2022-03-10"},{"lineNumber":46,"author":{"gitId":"bingsen0806"},"content":"                new JsonAdaptedBook(INVALID_BOOK_NAME, VALID_ISBN, VALID_TAGS, VALID_AUTHORS, SAMPLE_CREATED_TIME);","lastModifiedDate":"2022-03-11"},{"lineNumber":47,"author":{"gitId":"bingsen0806"},"content":"        String expectedMessage \u003d BookName.MESSAGE_CONSTRAINTS;","lastModifiedDate":"2022-03-10"},{"lineNumber":48,"author":{"gitId":"bingsen0806"},"content":"        assertThrows(IllegalValueException.class, expectedMessage, book::toModelType);","lastModifiedDate":"2022-03-10"},{"lineNumber":49,"author":{"gitId":"bingsen0806"},"content":"    }","lastModifiedDate":"2022-03-10"},{"lineNumber":50,"author":{"gitId":"bingsen0806"},"content":"","lastModifiedDate":"2022-03-10"},{"lineNumber":51,"author":{"gitId":"bingsen0806"},"content":"    @Test","lastModifiedDate":"2022-03-10"},{"lineNumber":52,"author":{"gitId":"bingsen0806"},"content":"    public void toModelType_nullBookName_throwsIllegalValueException() {","lastModifiedDate":"2022-03-10"},{"lineNumber":53,"author":{"gitId":"bingsen0806"},"content":"        JsonAdaptedBook book \u003d new JsonAdaptedBook(null, VALID_ISBN, VALID_TAGS, VALID_AUTHORS,","lastModifiedDate":"2022-03-11"},{"lineNumber":54,"author":{"gitId":"bingsen0806"},"content":"                SAMPLE_CREATED_TIME);","lastModifiedDate":"2022-03-11"},{"lineNumber":55,"author":{"gitId":"bingsen0806"},"content":"        String expectedMessage \u003d String.format(MISSING_FIELD_MESSAGE_FORMAT, BookName.class.getSimpleName());","lastModifiedDate":"2022-03-10"},{"lineNumber":56,"author":{"gitId":"bingsen0806"},"content":"        assertThrows(IllegalValueException.class, expectedMessage, book::toModelType);","lastModifiedDate":"2022-03-10"},{"lineNumber":57,"author":{"gitId":"bingsen0806"},"content":"    }","lastModifiedDate":"2022-03-10"},{"lineNumber":58,"author":{"gitId":"bingsen0806"},"content":"","lastModifiedDate":"2022-03-10"},{"lineNumber":59,"author":{"gitId":"bingsen0806"},"content":"    @Test","lastModifiedDate":"2022-03-10"},{"lineNumber":60,"author":{"gitId":"bingsen0806"},"content":"    public void toModelType_invalidIsbn_throwsIllegalValueException() {","lastModifiedDate":"2022-03-10"},{"lineNumber":61,"author":{"gitId":"bingsen0806"},"content":"        JsonAdaptedBook book \u003d","lastModifiedDate":"2022-03-10"},{"lineNumber":62,"author":{"gitId":"bingsen0806"},"content":"                new JsonAdaptedBook(VALID_BOOK_NAME, INVALID_ISBN, VALID_TAGS, VALID_AUTHORS, SAMPLE_CREATED_TIME);","lastModifiedDate":"2022-03-11"},{"lineNumber":63,"author":{"gitId":"bingsen0806"},"content":"        String expectedMessage \u003d Isbn.MESSAGE_CONSTRAINTS;","lastModifiedDate":"2022-03-10"},{"lineNumber":64,"author":{"gitId":"bingsen0806"},"content":"        assertThrows(IllegalValueException.class, expectedMessage, book::toModelType);","lastModifiedDate":"2022-03-10"},{"lineNumber":65,"author":{"gitId":"bingsen0806"},"content":"    }","lastModifiedDate":"2022-03-10"},{"lineNumber":66,"author":{"gitId":"bingsen0806"},"content":"","lastModifiedDate":"2022-03-10"},{"lineNumber":67,"author":{"gitId":"bingsen0806"},"content":"    @Test","lastModifiedDate":"2022-03-10"},{"lineNumber":68,"author":{"gitId":"bingsen0806"},"content":"    public void toModelType_nullIsbn_throwsIllegalValueException() {","lastModifiedDate":"2022-03-10"},{"lineNumber":69,"author":{"gitId":"bingsen0806"},"content":"        JsonAdaptedBook book \u003d new JsonAdaptedBook(VALID_BOOK_NAME, null, VALID_TAGS, VALID_AUTHORS,","lastModifiedDate":"2022-03-11"},{"lineNumber":70,"author":{"gitId":"bingsen0806"},"content":"                SAMPLE_CREATED_TIME);","lastModifiedDate":"2022-03-11"},{"lineNumber":71,"author":{"gitId":"bingsen0806"},"content":"        String expectedMessage \u003d String.format(MISSING_FIELD_MESSAGE_FORMAT, Isbn.class.getSimpleName());","lastModifiedDate":"2022-03-10"},{"lineNumber":72,"author":{"gitId":"bingsen0806"},"content":"        assertThrows(IllegalValueException.class, expectedMessage, book::toModelType);","lastModifiedDate":"2022-03-10"},{"lineNumber":73,"author":{"gitId":"bingsen0806"},"content":"    }","lastModifiedDate":"2022-03-10"},{"lineNumber":74,"author":{"gitId":"bingsen0806"},"content":"","lastModifiedDate":"2022-03-10"},{"lineNumber":75,"author":{"gitId":"bingsen0806"},"content":"    @Test","lastModifiedDate":"2022-03-10"},{"lineNumber":76,"author":{"gitId":"bingsen0806"},"content":"    public void toModelType_invalidTags_throwsIllegalValueException() {","lastModifiedDate":"2022-03-10"},{"lineNumber":77,"author":{"gitId":"bingsen0806"},"content":"        List\u003cJsonAdaptedTag\u003e invalidTags \u003d new ArrayList\u003c\u003e(VALID_TAGS);","lastModifiedDate":"2022-03-10"},{"lineNumber":78,"author":{"gitId":"bingsen0806"},"content":"        invalidTags.add(new JsonAdaptedTag(INVALID_TAG));","lastModifiedDate":"2022-03-10"},{"lineNumber":79,"author":{"gitId":"bingsen0806"},"content":"        JsonAdaptedBook book \u003d","lastModifiedDate":"2022-03-10"},{"lineNumber":80,"author":{"gitId":"bingsen0806"},"content":"                new JsonAdaptedBook(VALID_BOOK_NAME, VALID_ISBN, invalidTags, VALID_AUTHORS, SAMPLE_CREATED_TIME);","lastModifiedDate":"2022-03-11"},{"lineNumber":81,"author":{"gitId":"bingsen0806"},"content":"        assertThrows(IllegalValueException.class, book::toModelType);","lastModifiedDate":"2022-03-10"},{"lineNumber":82,"author":{"gitId":"bingsen0806"},"content":"    }","lastModifiedDate":"2022-03-10"},{"lineNumber":83,"author":{"gitId":"bingsen0806"},"content":"","lastModifiedDate":"2022-03-10"},{"lineNumber":84,"author":{"gitId":"bingsen0806"},"content":"    @Test","lastModifiedDate":"2022-03-10"},{"lineNumber":85,"author":{"gitId":"bingsen0806"},"content":"    public void toModelType_validTags_throwsIllegalValueException() {","lastModifiedDate":"2022-03-10"},{"lineNumber":86,"author":{"gitId":"bingsen0806"},"content":"        List\u003cJsonAdaptedAuthor\u003e invalidAuthors \u003d new ArrayList\u003c\u003e(VALID_AUTHORS);","lastModifiedDate":"2022-03-10"},{"lineNumber":87,"author":{"gitId":"bingsen0806"},"content":"        invalidAuthors.add(new JsonAdaptedAuthor(INVALID_AUTHOR));","lastModifiedDate":"2022-03-10"},{"lineNumber":88,"author":{"gitId":"bingsen0806"},"content":"        JsonAdaptedBook book \u003d","lastModifiedDate":"2022-03-10"},{"lineNumber":89,"author":{"gitId":"bingsen0806"},"content":"                new JsonAdaptedBook(VALID_BOOK_NAME, VALID_ISBN, VALID_TAGS, invalidAuthors, SAMPLE_CREATED_TIME);","lastModifiedDate":"2022-03-11"},{"lineNumber":90,"author":{"gitId":"bingsen0806"},"content":"        assertThrows(IllegalValueException.class, book::toModelType);","lastModifiedDate":"2022-03-10"},{"lineNumber":91,"author":{"gitId":"bingsen0806"},"content":"    }","lastModifiedDate":"2022-03-10"},{"lineNumber":92,"author":{"gitId":"bingsen0806"},"content":"","lastModifiedDate":"2022-03-11"},{"lineNumber":93,"author":{"gitId":"bingsen0806"},"content":"    @Test","lastModifiedDate":"2022-03-11"},{"lineNumber":94,"author":{"gitId":"bingsen0806"},"content":"    public void toModelType_invalidTimeAdded_throwsIllegalValueException() {","lastModifiedDate":"2022-03-11"},{"lineNumber":95,"author":{"gitId":"bingsen0806"},"content":"        JsonAdaptedBook book \u003d","lastModifiedDate":"2022-03-11"},{"lineNumber":96,"author":{"gitId":"bingsen0806"},"content":"                new JsonAdaptedBook(VALID_BOOK_NAME, VALID_ISBN, VALID_TAGS, VALID_AUTHORS, INVALID_TIME_ADDED);","lastModifiedDate":"2022-03-11"},{"lineNumber":97,"author":{"gitId":"bingsen0806"},"content":"        String expectedMessage \u003d Book.TIME_ADDED_MESSAGE_CONSTRAINTS;","lastModifiedDate":"2022-03-11"},{"lineNumber":98,"author":{"gitId":"bingsen0806"},"content":"        assertThrows(IllegalValueException.class, expectedMessage, book::toModelType);","lastModifiedDate":"2022-03-11"},{"lineNumber":99,"author":{"gitId":"bingsen0806"},"content":"    }","lastModifiedDate":"2022-03-11"},{"lineNumber":100,"author":{"gitId":"bingsen0806"},"content":"}","lastModifiedDate":"2022-03-10"}],"authorContributionMap":{"bingsen0806":100}},{"path":"src/test/java/seedu/address/storage/JsonAdaptedPersonTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.storage;","lastModifiedDate":"2018-08-13"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static seedu.address.storage.JsonAdaptedPerson.MISSING_FIELD_MESSAGE_FORMAT;","lastModifiedDate":"2018-08-13"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.Assert.assertThrows;","lastModifiedDate":"2019-03-14"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.TypicalPersons.BENSON;","lastModifiedDate":"2018-08-13"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import java.util.ArrayList;","lastModifiedDate":"2018-08-13"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import java.util.List;","lastModifiedDate":"2018-08-13"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import java.util.stream.Collectors;","lastModifiedDate":"2018-08-13"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import seedu.address.commons.exceptions.IllegalValueException;","lastModifiedDate":"2018-08-13"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Email;","lastModifiedDate":"2018-08-13"},{"lineNumber":16,"author":{"gitId":"aditi2313"},"content":"import seedu.address.model.person.Id;","lastModifiedDate":"2022-03-11"},{"lineNumber":17,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Name;","lastModifiedDate":"2018-08-13"},{"lineNumber":18,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Phone;","lastModifiedDate":"2018-08-13"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":20,"author":{"gitId":"-"},"content":"public class JsonAdaptedPersonTest {","lastModifiedDate":"2018-08-13"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    private static final String INVALID_NAME \u003d \"R@chel\";","lastModifiedDate":"2018-08-13"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    private static final String INVALID_PHONE \u003d \"+651234\";","lastModifiedDate":"2018-08-13"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    private static final String INVALID_ADDRESS \u003d \" \";","lastModifiedDate":"2018-08-13"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    private static final String INVALID_EMAIL \u003d \"example.com\";","lastModifiedDate":"2018-08-13"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    private static final String INVALID_TAG \u003d \"#friend\";","lastModifiedDate":"2018-08-13"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    private static final String VALID_NAME \u003d BENSON.getName().toString();","lastModifiedDate":"2018-08-13"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    private static final String VALID_PHONE \u003d BENSON.getPhone().toString();","lastModifiedDate":"2018-08-13"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    private static final String VALID_EMAIL \u003d BENSON.getEmail().toString();","lastModifiedDate":"2018-08-13"},{"lineNumber":30,"author":{"gitId":"aditi2313"},"content":"    private static final String VALID_ADDRESS \u003d BENSON.getId().toString();","lastModifiedDate":"2022-03-09"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    private static final List\u003cJsonAdaptedTag\u003e VALID_TAGS \u003d BENSON.getTags().stream()","lastModifiedDate":"2018-08-13"},{"lineNumber":32,"author":{"gitId":"-"},"content":"            .map(JsonAdaptedTag::new)","lastModifiedDate":"2018-08-13"},{"lineNumber":33,"author":{"gitId":"-"},"content":"            .collect(Collectors.toList());","lastModifiedDate":"2018-08-13"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-13"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    public void toModelType_validPersonDetails_returnsPerson() throws Exception {","lastModifiedDate":"2018-08-13"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        JsonAdaptedPerson person \u003d new JsonAdaptedPerson(BENSON);","lastModifiedDate":"2018-08-13"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        assertEquals(BENSON, person.toModelType());","lastModifiedDate":"2018-08-13"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":40,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-13"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    public void toModelType_invalidName_throwsIllegalValueException() {","lastModifiedDate":"2018-08-13"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        JsonAdaptedPerson person \u003d","lastModifiedDate":"2018-08-13"},{"lineNumber":44,"author":{"gitId":"-"},"content":"                new JsonAdaptedPerson(INVALID_NAME, VALID_PHONE, VALID_EMAIL, VALID_ADDRESS, VALID_TAGS);","lastModifiedDate":"2018-08-13"},{"lineNumber":45,"author":{"gitId":"-"},"content":"        String expectedMessage \u003d Name.MESSAGE_CONSTRAINTS;","lastModifiedDate":"2018-08-13"},{"lineNumber":46,"author":{"gitId":"-"},"content":"        assertThrows(IllegalValueException.class, expectedMessage, person::toModelType);","lastModifiedDate":"2019-03-14"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":48,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-13"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    public void toModelType_nullName_throwsIllegalValueException() {","lastModifiedDate":"2018-08-13"},{"lineNumber":51,"author":{"gitId":"-"},"content":"        JsonAdaptedPerson person \u003d new JsonAdaptedPerson(null, VALID_PHONE, VALID_EMAIL, VALID_ADDRESS, VALID_TAGS);","lastModifiedDate":"2018-08-13"},{"lineNumber":52,"author":{"gitId":"-"},"content":"        String expectedMessage \u003d String.format(MISSING_FIELD_MESSAGE_FORMAT, Name.class.getSimpleName());","lastModifiedDate":"2018-08-13"},{"lineNumber":53,"author":{"gitId":"-"},"content":"        assertThrows(IllegalValueException.class, expectedMessage, person::toModelType);","lastModifiedDate":"2019-03-14"},{"lineNumber":54,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":55,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-13"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    public void toModelType_invalidPhone_throwsIllegalValueException() {","lastModifiedDate":"2018-08-13"},{"lineNumber":58,"author":{"gitId":"-"},"content":"        JsonAdaptedPerson person \u003d","lastModifiedDate":"2018-08-13"},{"lineNumber":59,"author":{"gitId":"-"},"content":"                new JsonAdaptedPerson(VALID_NAME, INVALID_PHONE, VALID_EMAIL, VALID_ADDRESS, VALID_TAGS);","lastModifiedDate":"2018-08-13"},{"lineNumber":60,"author":{"gitId":"-"},"content":"        String expectedMessage \u003d Phone.MESSAGE_CONSTRAINTS;","lastModifiedDate":"2018-08-13"},{"lineNumber":61,"author":{"gitId":"-"},"content":"        assertThrows(IllegalValueException.class, expectedMessage, person::toModelType);","lastModifiedDate":"2019-03-14"},{"lineNumber":62,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":63,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":64,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-13"},{"lineNumber":65,"author":{"gitId":"-"},"content":"    public void toModelType_nullPhone_throwsIllegalValueException() {","lastModifiedDate":"2018-08-13"},{"lineNumber":66,"author":{"gitId":"-"},"content":"        JsonAdaptedPerson person \u003d new JsonAdaptedPerson(VALID_NAME, null, VALID_EMAIL, VALID_ADDRESS, VALID_TAGS);","lastModifiedDate":"2018-08-13"},{"lineNumber":67,"author":{"gitId":"-"},"content":"        String expectedMessage \u003d String.format(MISSING_FIELD_MESSAGE_FORMAT, Phone.class.getSimpleName());","lastModifiedDate":"2018-08-13"},{"lineNumber":68,"author":{"gitId":"-"},"content":"        assertThrows(IllegalValueException.class, expectedMessage, person::toModelType);","lastModifiedDate":"2019-03-14"},{"lineNumber":69,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":70,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":71,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-13"},{"lineNumber":72,"author":{"gitId":"-"},"content":"    public void toModelType_invalidEmail_throwsIllegalValueException() {","lastModifiedDate":"2018-08-13"},{"lineNumber":73,"author":{"gitId":"-"},"content":"        JsonAdaptedPerson person \u003d","lastModifiedDate":"2018-08-13"},{"lineNumber":74,"author":{"gitId":"-"},"content":"                new JsonAdaptedPerson(VALID_NAME, VALID_PHONE, INVALID_EMAIL, VALID_ADDRESS, VALID_TAGS);","lastModifiedDate":"2018-08-13"},{"lineNumber":75,"author":{"gitId":"-"},"content":"        String expectedMessage \u003d Email.MESSAGE_CONSTRAINTS;","lastModifiedDate":"2018-08-13"},{"lineNumber":76,"author":{"gitId":"-"},"content":"        assertThrows(IllegalValueException.class, expectedMessage, person::toModelType);","lastModifiedDate":"2019-03-14"},{"lineNumber":77,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":78,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":79,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-13"},{"lineNumber":80,"author":{"gitId":"-"},"content":"    public void toModelType_nullEmail_throwsIllegalValueException() {","lastModifiedDate":"2018-08-13"},{"lineNumber":81,"author":{"gitId":"-"},"content":"        JsonAdaptedPerson person \u003d new JsonAdaptedPerson(VALID_NAME, VALID_PHONE, null, VALID_ADDRESS, VALID_TAGS);","lastModifiedDate":"2018-08-13"},{"lineNumber":82,"author":{"gitId":"-"},"content":"        String expectedMessage \u003d String.format(MISSING_FIELD_MESSAGE_FORMAT, Email.class.getSimpleName());","lastModifiedDate":"2018-08-13"},{"lineNumber":83,"author":{"gitId":"-"},"content":"        assertThrows(IllegalValueException.class, expectedMessage, person::toModelType);","lastModifiedDate":"2019-03-14"},{"lineNumber":84,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":85,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":86,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-13"},{"lineNumber":87,"author":{"gitId":"-"},"content":"    public void toModelType_invalidAddress_throwsIllegalValueException() {","lastModifiedDate":"2018-08-13"},{"lineNumber":88,"author":{"gitId":"-"},"content":"        JsonAdaptedPerson person \u003d","lastModifiedDate":"2018-08-13"},{"lineNumber":89,"author":{"gitId":"-"},"content":"                new JsonAdaptedPerson(VALID_NAME, VALID_PHONE, VALID_EMAIL, INVALID_ADDRESS, VALID_TAGS);","lastModifiedDate":"2018-08-13"},{"lineNumber":90,"author":{"gitId":"aditi2313"},"content":"        String expectedMessage \u003d Id.MESSAGE_CONSTRAINTS;","lastModifiedDate":"2022-03-09"},{"lineNumber":91,"author":{"gitId":"-"},"content":"        assertThrows(IllegalValueException.class, expectedMessage, person::toModelType);","lastModifiedDate":"2019-03-14"},{"lineNumber":92,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":93,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":94,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-13"},{"lineNumber":95,"author":{"gitId":"-"},"content":"    public void toModelType_nullAddress_throwsIllegalValueException() {","lastModifiedDate":"2018-08-13"},{"lineNumber":96,"author":{"gitId":"-"},"content":"        JsonAdaptedPerson person \u003d new JsonAdaptedPerson(VALID_NAME, VALID_PHONE, VALID_EMAIL, null, VALID_TAGS);","lastModifiedDate":"2018-08-13"},{"lineNumber":97,"author":{"gitId":"aditi2313"},"content":"        String expectedMessage \u003d String.format(MISSING_FIELD_MESSAGE_FORMAT, Id.class.getSimpleName());","lastModifiedDate":"2022-03-09"},{"lineNumber":98,"author":{"gitId":"-"},"content":"        assertThrows(IllegalValueException.class, expectedMessage, person::toModelType);","lastModifiedDate":"2019-03-14"},{"lineNumber":99,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":100,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":101,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-13"},{"lineNumber":102,"author":{"gitId":"-"},"content":"    public void toModelType_invalidTags_throwsIllegalValueException() {","lastModifiedDate":"2018-08-13"},{"lineNumber":103,"author":{"gitId":"-"},"content":"        List\u003cJsonAdaptedTag\u003e invalidTags \u003d new ArrayList\u003c\u003e(VALID_TAGS);","lastModifiedDate":"2018-08-13"},{"lineNumber":104,"author":{"gitId":"-"},"content":"        invalidTags.add(new JsonAdaptedTag(INVALID_TAG));","lastModifiedDate":"2018-08-13"},{"lineNumber":105,"author":{"gitId":"-"},"content":"        JsonAdaptedPerson person \u003d","lastModifiedDate":"2018-08-13"},{"lineNumber":106,"author":{"gitId":"-"},"content":"                new JsonAdaptedPerson(VALID_NAME, VALID_PHONE, VALID_EMAIL, VALID_ADDRESS, invalidTags);","lastModifiedDate":"2018-08-13"},{"lineNumber":107,"author":{"gitId":"-"},"content":"        assertThrows(IllegalValueException.class, person::toModelType);","lastModifiedDate":"2019-03-14"},{"lineNumber":108,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":109,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":110,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2018-08-13"}],"authorContributionMap":{"-":106,"aditi2313":4}},{"path":"src/test/java/seedu/address/storage/JsonAddressBookStorageTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.storage;","lastModifiedDate":"2018-08-13"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.Assert.assertThrows;","lastModifiedDate":"2019-03-23"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.TypicalPersons.ALICE;","lastModifiedDate":"2018-08-13"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.TypicalPersons.HOON;","lastModifiedDate":"2018-08-13"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.TypicalPersons.IDA;","lastModifiedDate":"2018-08-13"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import java.io.IOException;","lastModifiedDate":"2018-08-13"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-08-13"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import java.nio.file.Paths;","lastModifiedDate":"2018-08-13"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-25"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.io.TempDir;","lastModifiedDate":"2019-04-25"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":17,"author":{"gitId":"-"},"content":"import seedu.address.commons.exceptions.DataConversionException;","lastModifiedDate":"2018-08-13"},{"lineNumber":18,"author":{"gitId":"-"},"content":"import seedu.address.model.AddressBook;","lastModifiedDate":"2018-08-13"},{"lineNumber":19,"author":{"gitId":"-"},"content":"import seedu.address.model.ReadOnlyAddressBook;","lastModifiedDate":"2018-08-13"},{"lineNumber":20,"author":{"gitId":"bingsen0806"},"content":"import seedu.address.testutil.TypicalAddressBook;","lastModifiedDate":"2022-03-10"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":22,"author":{"gitId":"-"},"content":"public class JsonAddressBookStorageTest {","lastModifiedDate":"2018-08-13"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    private static final Path TEST_DATA_FOLDER \u003d Paths.get(\"src\", \"test\", \"data\", \"JsonAddressBookStorageTest\");","lastModifiedDate":"2018-08-13"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    @TempDir","lastModifiedDate":"2019-04-25"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    public Path testFolder;","lastModifiedDate":"2019-04-25"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-13"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    public void readAddressBook_nullFilePath_throwsNullPointerException() {","lastModifiedDate":"2019-03-23"},{"lineNumber":30,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e readAddressBook(null));","lastModifiedDate":"2019-03-23"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":32,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    private java.util.Optional\u003cReadOnlyAddressBook\u003e readAddressBook(String filePath) throws Exception {","lastModifiedDate":"2018-08-13"},{"lineNumber":34,"author":{"gitId":"-"},"content":"        return new JsonAddressBookStorage(Paths.get(filePath)).readAddressBook(addToTestDataPathIfNotNull(filePath));","lastModifiedDate":"2018-08-13"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":36,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    private Path addToTestDataPathIfNotNull(String prefsFileInTestDataFolder) {","lastModifiedDate":"2018-08-13"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        return prefsFileInTestDataFolder !\u003d null","lastModifiedDate":"2018-08-13"},{"lineNumber":39,"author":{"gitId":"-"},"content":"                ? TEST_DATA_FOLDER.resolve(prefsFileInTestDataFolder)","lastModifiedDate":"2018-08-13"},{"lineNumber":40,"author":{"gitId":"-"},"content":"                : null;","lastModifiedDate":"2018-08-13"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":42,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-13"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    public void read_missingFile_emptyResult() throws Exception {","lastModifiedDate":"2018-08-13"},{"lineNumber":45,"author":{"gitId":"-"},"content":"        assertFalse(readAddressBook(\"NonExistentFile.json\").isPresent());","lastModifiedDate":"2018-08-13"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":47,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-13"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    public void read_notJsonFormat_exceptionThrown() {","lastModifiedDate":"2019-03-23"},{"lineNumber":50,"author":{"gitId":"-"},"content":"        assertThrows(DataConversionException.class, () -\u003e readAddressBook(\"notJsonFormatAddressBook.json\"));","lastModifiedDate":"2019-03-23"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":52,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":53,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-13"},{"lineNumber":54,"author":{"gitId":"-"},"content":"    public void readAddressBook_invalidPersonAddressBook_throwDataConversionException() {","lastModifiedDate":"2019-03-23"},{"lineNumber":55,"author":{"gitId":"-"},"content":"        assertThrows(DataConversionException.class, () -\u003e readAddressBook(\"invalidPersonAddressBook.json\"));","lastModifiedDate":"2019-03-23"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":57,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":58,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-13"},{"lineNumber":59,"author":{"gitId":"-"},"content":"    public void readAddressBook_invalidAndValidPersonAddressBook_throwDataConversionException() {","lastModifiedDate":"2019-03-23"},{"lineNumber":60,"author":{"gitId":"-"},"content":"        assertThrows(DataConversionException.class, () -\u003e readAddressBook(\"invalidAndValidPersonAddressBook.json\"));","lastModifiedDate":"2019-03-23"},{"lineNumber":61,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":62,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":63,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-13"},{"lineNumber":64,"author":{"gitId":"-"},"content":"    public void readAndSaveAddressBook_allInOrder_success() throws Exception {","lastModifiedDate":"2018-08-13"},{"lineNumber":65,"author":{"gitId":"-"},"content":"        Path filePath \u003d testFolder.resolve(\"TempAddressBook.json\");","lastModifiedDate":"2019-04-25"},{"lineNumber":66,"author":{"gitId":"bingsen0806"},"content":"        AddressBook original \u003d TypicalAddressBook.getTypicalAddressBook();","lastModifiedDate":"2022-03-10"},{"lineNumber":67,"author":{"gitId":"-"},"content":"        JsonAddressBookStorage jsonAddressBookStorage \u003d new JsonAddressBookStorage(filePath);","lastModifiedDate":"2018-08-13"},{"lineNumber":68,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":69,"author":{"gitId":"-"},"content":"        // Save in new file and read back","lastModifiedDate":"2018-08-13"},{"lineNumber":70,"author":{"gitId":"-"},"content":"        jsonAddressBookStorage.saveAddressBook(original, filePath);","lastModifiedDate":"2018-08-13"},{"lineNumber":71,"author":{"gitId":"-"},"content":"        ReadOnlyAddressBook readBack \u003d jsonAddressBookStorage.readAddressBook(filePath).get();","lastModifiedDate":"2018-08-13"},{"lineNumber":72,"author":{"gitId":"-"},"content":"        assertEquals(original, new AddressBook(readBack));","lastModifiedDate":"2018-08-13"},{"lineNumber":73,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":74,"author":{"gitId":"-"},"content":"        // Modify data, overwrite exiting file, and read back","lastModifiedDate":"2018-08-13"},{"lineNumber":75,"author":{"gitId":"-"},"content":"        original.addPerson(HOON);","lastModifiedDate":"2018-08-13"},{"lineNumber":76,"author":{"gitId":"-"},"content":"        original.removePerson(ALICE);","lastModifiedDate":"2018-08-13"},{"lineNumber":77,"author":{"gitId":"-"},"content":"        jsonAddressBookStorage.saveAddressBook(original, filePath);","lastModifiedDate":"2018-08-13"},{"lineNumber":78,"author":{"gitId":"-"},"content":"        readBack \u003d jsonAddressBookStorage.readAddressBook(filePath).get();","lastModifiedDate":"2018-08-13"},{"lineNumber":79,"author":{"gitId":"-"},"content":"        assertEquals(original, new AddressBook(readBack));","lastModifiedDate":"2018-08-13"},{"lineNumber":80,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":81,"author":{"gitId":"-"},"content":"        // Save and read without specifying file path","lastModifiedDate":"2018-08-13"},{"lineNumber":82,"author":{"gitId":"-"},"content":"        original.addPerson(IDA);","lastModifiedDate":"2018-08-13"},{"lineNumber":83,"author":{"gitId":"-"},"content":"        jsonAddressBookStorage.saveAddressBook(original); // file path not specified","lastModifiedDate":"2018-08-13"},{"lineNumber":84,"author":{"gitId":"-"},"content":"        readBack \u003d jsonAddressBookStorage.readAddressBook().get(); // file path not specified","lastModifiedDate":"2018-08-13"},{"lineNumber":85,"author":{"gitId":"-"},"content":"        assertEquals(original, new AddressBook(readBack));","lastModifiedDate":"2018-08-13"},{"lineNumber":86,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":87,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":88,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":89,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-13"},{"lineNumber":90,"author":{"gitId":"-"},"content":"    public void saveAddressBook_nullAddressBook_throwsNullPointerException() {","lastModifiedDate":"2018-08-13"},{"lineNumber":91,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e saveAddressBook(null, \"SomeFile.json\"));","lastModifiedDate":"2019-03-23"},{"lineNumber":92,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":93,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":94,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-08-13"},{"lineNumber":95,"author":{"gitId":"-"},"content":"     * Saves {@code addressBook} at the specified {@code filePath}.","lastModifiedDate":"2018-08-13"},{"lineNumber":96,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-08-13"},{"lineNumber":97,"author":{"gitId":"-"},"content":"    private void saveAddressBook(ReadOnlyAddressBook addressBook, String filePath) {","lastModifiedDate":"2018-08-13"},{"lineNumber":98,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2018-08-13"},{"lineNumber":99,"author":{"gitId":"-"},"content":"            new JsonAddressBookStorage(Paths.get(filePath))","lastModifiedDate":"2018-08-13"},{"lineNumber":100,"author":{"gitId":"-"},"content":"                    .saveAddressBook(addressBook, addToTestDataPathIfNotNull(filePath));","lastModifiedDate":"2018-08-13"},{"lineNumber":101,"author":{"gitId":"-"},"content":"        } catch (IOException ioe) {","lastModifiedDate":"2018-08-13"},{"lineNumber":102,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"There should not be an error writing to the file.\", ioe);","lastModifiedDate":"2018-08-13"},{"lineNumber":103,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-08-13"},{"lineNumber":104,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":105,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":106,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-13"},{"lineNumber":107,"author":{"gitId":"-"},"content":"    public void saveAddressBook_nullFilePath_throwsNullPointerException() {","lastModifiedDate":"2018-08-13"},{"lineNumber":108,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e saveAddressBook(new AddressBook(), null));","lastModifiedDate":"2019-03-23"},{"lineNumber":109,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":110,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2018-08-13"}],"authorContributionMap":{"-":108,"bingsen0806":2}},{"path":"src/test/java/seedu/address/storage/JsonSerializableAddressBookTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.storage;","lastModifiedDate":"2018-08-13"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.Assert.assertThrows;","lastModifiedDate":"2019-03-23"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-08-13"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import java.nio.file.Paths;","lastModifiedDate":"2018-08-13"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import seedu.address.commons.exceptions.IllegalValueException;","lastModifiedDate":"2018-08-13"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import seedu.address.commons.util.JsonUtil;","lastModifiedDate":"2018-08-13"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import seedu.address.model.AddressBook;","lastModifiedDate":"2018-08-13"},{"lineNumber":14,"author":{"gitId":"yl-ang"},"content":"import seedu.address.testutil.LengthyBooks;","lastModifiedDate":"2022-03-10"},{"lineNumber":15,"author":{"gitId":"bingsen0806"},"content":"import seedu.address.testutil.TypicalAddressBook;","lastModifiedDate":"2022-03-10"},{"lineNumber":16,"author":{"gitId":"bingsen0806"},"content":"import seedu.address.testutil.TypicalBooks;","lastModifiedDate":"2022-03-10"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":18,"author":{"gitId":"-"},"content":"public class JsonSerializableAddressBookTest {","lastModifiedDate":"2018-08-13"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    private static final Path TEST_DATA_FOLDER \u003d Paths.get(\"src\", \"test\", \"data\", \"JsonSerializableAddressBookTest\");","lastModifiedDate":"2018-08-13"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    private static final Path TYPICAL_PERSONS_FILE \u003d TEST_DATA_FOLDER.resolve(\"typicalPersonsAddressBook.json\");","lastModifiedDate":"2018-08-13"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    private static final Path INVALID_PERSON_FILE \u003d TEST_DATA_FOLDER.resolve(\"invalidPersonAddressBook.json\");","lastModifiedDate":"2018-08-13"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    private static final Path DUPLICATE_PERSON_FILE \u003d TEST_DATA_FOLDER.resolve(\"duplicatePersonAddressBook.json\");","lastModifiedDate":"2018-08-13"},{"lineNumber":24,"author":{"gitId":"bingsen0806"},"content":"    private static final Path TYPICAL_BOOKS_FILE \u003d TEST_DATA_FOLDER.resolve(\"typicalBooksAddressBook.json\");","lastModifiedDate":"2022-03-10"},{"lineNumber":25,"author":{"gitId":"bingsen0806"},"content":"    private static final Path INVALID_BOOK_FILE \u003d TEST_DATA_FOLDER.resolve(\"invalidBookAddressBook.json\");","lastModifiedDate":"2022-03-10"},{"lineNumber":26,"author":{"gitId":"yl-ang"},"content":"    private static final Path LENGTHY_BOOK_FILE \u003d TEST_DATA_FOLDER.resolve(\"lengthyBooksAddressBook.json\");","lastModifiedDate":"2022-03-10"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-13"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    public void toModelType_typicalPersonsFile_success() throws Exception {","lastModifiedDate":"2018-08-13"},{"lineNumber":30,"author":{"gitId":"-"},"content":"        JsonSerializableAddressBook dataFromFile \u003d JsonUtil.readJsonFile(TYPICAL_PERSONS_FILE,","lastModifiedDate":"2018-08-13"},{"lineNumber":31,"author":{"gitId":"-"},"content":"                JsonSerializableAddressBook.class).get();","lastModifiedDate":"2018-08-13"},{"lineNumber":32,"author":{"gitId":"-"},"content":"        AddressBook addressBookFromFile \u003d dataFromFile.toModelType();","lastModifiedDate":"2018-08-13"},{"lineNumber":33,"author":{"gitId":"bingsen0806"},"content":"        AddressBook typicalPersonsAddressBook \u003d TypicalAddressBook.getTypicalAddressBook();","lastModifiedDate":"2022-03-10"},{"lineNumber":34,"author":{"gitId":"-"},"content":"        assertEquals(addressBookFromFile, typicalPersonsAddressBook);","lastModifiedDate":"2018-08-13"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":36,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-13"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    public void toModelType_invalidPersonFile_throwsIllegalValueException() throws Exception {","lastModifiedDate":"2018-08-13"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        JsonSerializableAddressBook dataFromFile \u003d JsonUtil.readJsonFile(INVALID_PERSON_FILE,","lastModifiedDate":"2018-08-13"},{"lineNumber":40,"author":{"gitId":"-"},"content":"                JsonSerializableAddressBook.class).get();","lastModifiedDate":"2018-08-13"},{"lineNumber":41,"author":{"gitId":"-"},"content":"        assertThrows(IllegalValueException.class, dataFromFile::toModelType);","lastModifiedDate":"2019-03-23"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":43,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-13"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    public void toModelType_duplicatePersons_throwsIllegalValueException() throws Exception {","lastModifiedDate":"2018-08-13"},{"lineNumber":46,"author":{"gitId":"-"},"content":"        JsonSerializableAddressBook dataFromFile \u003d JsonUtil.readJsonFile(DUPLICATE_PERSON_FILE,","lastModifiedDate":"2018-08-13"},{"lineNumber":47,"author":{"gitId":"-"},"content":"                JsonSerializableAddressBook.class).get();","lastModifiedDate":"2018-08-13"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        assertThrows(IllegalValueException.class, JsonSerializableAddressBook.MESSAGE_DUPLICATE_PERSON,","lastModifiedDate":"2019-03-23"},{"lineNumber":49,"author":{"gitId":"-"},"content":"                dataFromFile::toModelType);","lastModifiedDate":"2019-03-23"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":51,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":52,"author":{"gitId":"bingsen0806"},"content":"    @Test","lastModifiedDate":"2022-03-10"},{"lineNumber":53,"author":{"gitId":"bingsen0806"},"content":"    public void toModelType_typicalBooksFile_success() throws Exception {","lastModifiedDate":"2022-03-10"},{"lineNumber":54,"author":{"gitId":"bingsen0806"},"content":"        JsonSerializableAddressBook dataFromFile \u003d JsonUtil.readJsonFile(TYPICAL_BOOKS_FILE,","lastModifiedDate":"2022-03-10"},{"lineNumber":55,"author":{"gitId":"bingsen0806"},"content":"                JsonSerializableAddressBook.class).get();","lastModifiedDate":"2022-03-10"},{"lineNumber":56,"author":{"gitId":"bingsen0806"},"content":"        AddressBook addressBookFromFile \u003d dataFromFile.toModelType();","lastModifiedDate":"2022-03-10"},{"lineNumber":57,"author":{"gitId":"bingsen0806"},"content":"        AddressBook typicalBooksAddressBook \u003d TypicalBooks.getTypicalAddressBook();","lastModifiedDate":"2022-03-10"},{"lineNumber":58,"author":{"gitId":"bingsen0806"},"content":"        assertEquals(addressBookFromFile, typicalBooksAddressBook);","lastModifiedDate":"2022-03-10"},{"lineNumber":59,"author":{"gitId":"bingsen0806"},"content":"    }","lastModifiedDate":"2022-03-10"},{"lineNumber":60,"author":{"gitId":"bingsen0806"},"content":"","lastModifiedDate":"2022-03-10"},{"lineNumber":61,"author":{"gitId":"bingsen0806"},"content":"    @Test","lastModifiedDate":"2022-03-10"},{"lineNumber":62,"author":{"gitId":"bingsen0806"},"content":"    public void toModelType_invalidBookFile_throwsIllegalValueException() throws Exception {","lastModifiedDate":"2022-03-10"},{"lineNumber":63,"author":{"gitId":"bingsen0806"},"content":"        JsonSerializableAddressBook dataFromFile \u003d JsonUtil.readJsonFile(INVALID_BOOK_FILE,","lastModifiedDate":"2022-03-10"},{"lineNumber":64,"author":{"gitId":"bingsen0806"},"content":"                JsonSerializableAddressBook.class).get();","lastModifiedDate":"2022-03-10"},{"lineNumber":65,"author":{"gitId":"bingsen0806"},"content":"        assertThrows(IllegalValueException.class, dataFromFile::toModelType);","lastModifiedDate":"2022-03-10"},{"lineNumber":66,"author":{"gitId":"bingsen0806"},"content":"    }","lastModifiedDate":"2022-03-10"},{"lineNumber":67,"author":{"gitId":"bingsen0806"},"content":"","lastModifiedDate":"2022-03-10"},{"lineNumber":68,"author":{"gitId":"yl-ang"},"content":"    @Test","lastModifiedDate":"2022-03-10"},{"lineNumber":69,"author":{"gitId":"yl-ang"},"content":"    public void toModelType_lengthyBooksFile_success() throws Exception {","lastModifiedDate":"2022-03-10"},{"lineNumber":70,"author":{"gitId":"yl-ang"},"content":"        JsonSerializableAddressBook dataFromFile \u003d JsonUtil.readJsonFile(LENGTHY_BOOK_FILE,","lastModifiedDate":"2022-03-10"},{"lineNumber":71,"author":{"gitId":"yl-ang"},"content":"                JsonSerializableAddressBook.class).get();","lastModifiedDate":"2022-03-10"},{"lineNumber":72,"author":{"gitId":"yl-ang"},"content":"        AddressBook addressBookFromFile \u003d dataFromFile.toModelType();","lastModifiedDate":"2022-03-10"},{"lineNumber":73,"author":{"gitId":"yl-ang"},"content":"        AddressBook lengthyBooksAddressBook \u003d LengthyBooks.getLengthyAddressBook();","lastModifiedDate":"2022-03-10"},{"lineNumber":74,"author":{"gitId":"yl-ang"},"content":"        assertEquals(addressBookFromFile, lengthyBooksAddressBook);","lastModifiedDate":"2022-03-10"},{"lineNumber":75,"author":{"gitId":"yl-ang"},"content":"    }","lastModifiedDate":"2022-03-10"},{"lineNumber":76,"author":{"gitId":"yl-ang"},"content":"","lastModifiedDate":"2022-03-10"},{"lineNumber":77,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2018-08-13"}],"authorContributionMap":{"yl-ang":11,"-":45,"bingsen0806":21}},{"path":"src/test/java/seedu/address/storage/StorageManagerTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.storage;","lastModifiedDate":"2016-08-08"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertNotNull;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-04-21"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.BeforeEach;","lastModifiedDate":"2019-04-25"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-25"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.io.TempDir;","lastModifiedDate":"2019-04-25"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.GuiSettings;","lastModifiedDate":"2018-11-27"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import seedu.address.model.AddressBook;","lastModifiedDate":"2016-09-21"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import seedu.address.model.ReadOnlyAddressBook;","lastModifiedDate":"2016-09-21"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import seedu.address.model.UserPrefs;","lastModifiedDate":"2016-09-24"},{"lineNumber":16,"author":{"gitId":"bingsen0806"},"content":"import seedu.address.testutil.TypicalAddressBook;","lastModifiedDate":"2022-03-10"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":18,"author":{"gitId":"-"},"content":"public class StorageManagerTest {","lastModifiedDate":"2016-08-08"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-28"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    @TempDir","lastModifiedDate":"2019-04-25"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    public Path testFolder;","lastModifiedDate":"2019-04-25"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    private StorageManager storageManager;","lastModifiedDate":"2017-04-01"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    @BeforeEach","lastModifiedDate":"2019-04-25"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    public void setUp() {","lastModifiedDate":"2016-10-19"},{"lineNumber":27,"author":{"gitId":"-"},"content":"        JsonAddressBookStorage addressBookStorage \u003d new JsonAddressBookStorage(getTempFilePath(\"ab\"));","lastModifiedDate":"2018-11-27"},{"lineNumber":28,"author":{"gitId":"-"},"content":"        JsonUserPrefsStorage userPrefsStorage \u003d new JsonUserPrefsStorage(getTempFilePath(\"prefs\"));","lastModifiedDate":"2017-02-25"},{"lineNumber":29,"author":{"gitId":"-"},"content":"        storageManager \u003d new StorageManager(addressBookStorage, userPrefsStorage);","lastModifiedDate":"2017-02-25"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":31,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    private Path getTempFilePath(String fileName) {","lastModifiedDate":"2018-04-21"},{"lineNumber":33,"author":{"gitId":"-"},"content":"        return testFolder.resolve(fileName);","lastModifiedDate":"2019-04-25"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-10-16"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    public void prefsReadSave() throws Exception {","lastModifiedDate":"2016-10-16"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        /*","lastModifiedDate":"2016-09-28"},{"lineNumber":39,"author":{"gitId":"-"},"content":"         * Note: This is an integration test that verifies the StorageManager is properly wired to the","lastModifiedDate":"2016-09-28"},{"lineNumber":40,"author":{"gitId":"-"},"content":"         * {@link JsonUserPrefsStorage} class.","lastModifiedDate":"2016-10-01"},{"lineNumber":41,"author":{"gitId":"-"},"content":"         * More extensive testing of UserPref saving/reading is done in {@link JsonUserPrefsStorageTest} class.","lastModifiedDate":"2016-10-01"},{"lineNumber":42,"author":{"gitId":"-"},"content":"         */","lastModifiedDate":"2016-09-28"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        UserPrefs original \u003d new UserPrefs();","lastModifiedDate":"2016-09-24"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        original.setGuiSettings(new GuiSettings(300, 600, 4, 6));","lastModifiedDate":"2018-11-27"},{"lineNumber":45,"author":{"gitId":"-"},"content":"        storageManager.saveUserPrefs(original);","lastModifiedDate":"2016-09-28"},{"lineNumber":46,"author":{"gitId":"-"},"content":"        UserPrefs retrieved \u003d storageManager.readUserPrefs().get();","lastModifiedDate":"2016-09-28"},{"lineNumber":47,"author":{"gitId":"-"},"content":"        assertEquals(original, retrieved);","lastModifiedDate":"2016-09-24"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":49,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-08-08"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    public void addressBookReadSave() throws Exception {","lastModifiedDate":"2016-09-24"},{"lineNumber":52,"author":{"gitId":"-"},"content":"        /*","lastModifiedDate":"2016-10-16"},{"lineNumber":53,"author":{"gitId":"-"},"content":"         * Note: This is an integration test that verifies the StorageManager is properly wired to the","lastModifiedDate":"2016-10-16"},{"lineNumber":54,"author":{"gitId":"-"},"content":"         * {@link JsonAddressBookStorage} class.","lastModifiedDate":"2018-11-27"},{"lineNumber":55,"author":{"gitId":"-"},"content":"         * More extensive testing of UserPref saving/reading is done in {@link JsonAddressBookStorageTest} class.","lastModifiedDate":"2018-11-27"},{"lineNumber":56,"author":{"gitId":"-"},"content":"         */","lastModifiedDate":"2016-10-16"},{"lineNumber":57,"author":{"gitId":"bingsen0806"},"content":"        AddressBook original \u003d TypicalAddressBook.getTypicalAddressBook();","lastModifiedDate":"2022-03-10"},{"lineNumber":58,"author":{"gitId":"-"},"content":"        storageManager.saveAddressBook(original);","lastModifiedDate":"2016-09-28"},{"lineNumber":59,"author":{"gitId":"-"},"content":"        ReadOnlyAddressBook retrieved \u003d storageManager.readAddressBook().get();","lastModifiedDate":"2016-09-28"},{"lineNumber":60,"author":{"gitId":"-"},"content":"        assertEquals(original, new AddressBook(retrieved));","lastModifiedDate":"2016-09-24"},{"lineNumber":61,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":62,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":63,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-10-01"},{"lineNumber":64,"author":{"gitId":"-"},"content":"    public void getAddressBookFilePath() {","lastModifiedDate":"2016-10-01"},{"lineNumber":65,"author":{"gitId":"-"},"content":"        assertNotNull(storageManager.getAddressBookFilePath());","lastModifiedDate":"2016-10-01"},{"lineNumber":66,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-10-01"},{"lineNumber":67,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-01"},{"lineNumber":68,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"}],"authorContributionMap":{"-":66,"bingsen0806":2}},{"path":"src/test/java/seedu/address/testutil/AddressBookBuilder.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.testutil;","lastModifiedDate":"2016-08-08"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import seedu.address.model.AddressBook;","lastModifiedDate":"2016-09-21"},{"lineNumber":4,"author":{"gitId":"aditi2313"},"content":"import seedu.address.model.person.Patron;","lastModifiedDate":"2022-03-09"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":6,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-08"},{"lineNumber":7,"author":{"gitId":"-"},"content":" * A utility class to help with building Addressbook objects.","lastModifiedDate":"2016-08-08"},{"lineNumber":8,"author":{"gitId":"-"},"content":" * Example usage: \u003cbr\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":9,"author":{"gitId":"-"},"content":" *     {@code AddressBook ab \u003d new AddressBookBuilder().withPerson(\"John\", \"Doe\").build();}","lastModifiedDate":"2018-03-29"},{"lineNumber":10,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-08"},{"lineNumber":11,"author":{"gitId":"-"},"content":"public class AddressBookBuilder {","lastModifiedDate":"2016-08-08"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    private AddressBook addressBook;","lastModifiedDate":"2016-08-08"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":15,"author":{"gitId":"-"},"content":"    public AddressBookBuilder() {","lastModifiedDate":"2017-05-31"},{"lineNumber":16,"author":{"gitId":"-"},"content":"        addressBook \u003d new AddressBook();","lastModifiedDate":"2017-05-31"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-31"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-31"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    public AddressBookBuilder(AddressBook addressBook) {","lastModifiedDate":"2016-08-08"},{"lineNumber":20,"author":{"gitId":"-"},"content":"        this.addressBook \u003d addressBook;","lastModifiedDate":"2016-08-08"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-07-26"},{"lineNumber":24,"author":{"gitId":"-"},"content":"     * Adds a new {@code Person} to the {@code AddressBook} that we are building.","lastModifiedDate":"2017-07-26"},{"lineNumber":25,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-07-26"},{"lineNumber":26,"author":{"gitId":"aditi2313"},"content":"    public AddressBookBuilder withPerson(Patron person) {","lastModifiedDate":"2022-03-09"},{"lineNumber":27,"author":{"gitId":"-"},"content":"        addressBook.addPerson(person);","lastModifiedDate":"2016-09-01"},{"lineNumber":28,"author":{"gitId":"-"},"content":"        return this;","lastModifiedDate":"2016-08-08"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    public AddressBook build() {","lastModifiedDate":"2016-08-08"},{"lineNumber":32,"author":{"gitId":"-"},"content":"        return addressBook;","lastModifiedDate":"2016-08-08"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":34,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"}],"authorContributionMap":{"-":32,"aditi2313":2}},{"path":"src/test/java/seedu/address/testutil/BookBuilder.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"bingsen0806"},"content":"package seedu.address.testutil;","lastModifiedDate":"2022-03-09"},{"lineNumber":2,"author":{"gitId":"bingsen0806"},"content":"","lastModifiedDate":"2022-03-09"},{"lineNumber":3,"author":{"gitId":"bingsen0806"},"content":"import static seedu.address.model.util.SampleDataUtil.SAMPLE_BOOK_CREATED_TIME;","lastModifiedDate":"2022-03-11"},{"lineNumber":4,"author":{"gitId":"bingsen0806"},"content":"","lastModifiedDate":"2022-03-11"},{"lineNumber":5,"author":{"gitId":"bingsen0806"},"content":"import java.util.ArrayList;","lastModifiedDate":"2022-03-09"},{"lineNumber":6,"author":{"gitId":"bingsen0806"},"content":"import java.util.HashSet;","lastModifiedDate":"2022-03-09"},{"lineNumber":7,"author":{"gitId":"bingsen0806"},"content":"import java.util.List;","lastModifiedDate":"2022-03-09"},{"lineNumber":8,"author":{"gitId":"bingsen0806"},"content":"import java.util.Set;","lastModifiedDate":"2022-03-09"},{"lineNumber":9,"author":{"gitId":"bingsen0806"},"content":"","lastModifiedDate":"2022-03-09"},{"lineNumber":10,"author":{"gitId":"bingsen0806"},"content":"import seedu.address.model.book.Author;","lastModifiedDate":"2022-03-09"},{"lineNumber":11,"author":{"gitId":"bingsen0806"},"content":"import seedu.address.model.book.Book;","lastModifiedDate":"2022-03-09"},{"lineNumber":12,"author":{"gitId":"bingsen0806"},"content":"import seedu.address.model.book.BookName;","lastModifiedDate":"2022-03-09"},{"lineNumber":13,"author":{"gitId":"bingsen0806"},"content":"import seedu.address.model.book.Isbn;","lastModifiedDate":"2022-03-09"},{"lineNumber":14,"author":{"gitId":"bingsen0806"},"content":"import seedu.address.model.tag.Tag;","lastModifiedDate":"2022-03-09"},{"lineNumber":15,"author":{"gitId":"bingsen0806"},"content":"import seedu.address.model.util.SampleDataUtil;","lastModifiedDate":"2022-03-09"},{"lineNumber":16,"author":{"gitId":"bingsen0806"},"content":"","lastModifiedDate":"2022-03-09"},{"lineNumber":17,"author":{"gitId":"bingsen0806"},"content":"/**","lastModifiedDate":"2022-03-09"},{"lineNumber":18,"author":{"gitId":"bingsen0806"},"content":" * A utility class to help with building Book objects.","lastModifiedDate":"2022-03-09"},{"lineNumber":19,"author":{"gitId":"bingsen0806"},"content":" */","lastModifiedDate":"2022-03-09"},{"lineNumber":20,"author":{"gitId":"bingsen0806"},"content":"public class BookBuilder {","lastModifiedDate":"2022-03-09"},{"lineNumber":21,"author":{"gitId":"bingsen0806"},"content":"","lastModifiedDate":"2022-03-09"},{"lineNumber":22,"author":{"gitId":"bingsen0806"},"content":"    public static final String DEFAULT_NAME \u003d \"Harry Potter\";","lastModifiedDate":"2022-03-09"},{"lineNumber":23,"author":{"gitId":"bingsen0806"},"content":"    public static final String DEFAULT_ISBN \u003d \"9780747532743\";","lastModifiedDate":"2022-03-09"},{"lineNumber":24,"author":{"gitId":"bingsen0806"},"content":"    public static final long DEFAULT_TIME_ADDED \u003d SAMPLE_BOOK_CREATED_TIME;","lastModifiedDate":"2022-03-11"},{"lineNumber":25,"author":{"gitId":"bingsen0806"},"content":"","lastModifiedDate":"2022-03-09"},{"lineNumber":26,"author":{"gitId":"bingsen0806"},"content":"    private BookName bookName;","lastModifiedDate":"2022-03-09"},{"lineNumber":27,"author":{"gitId":"bingsen0806"},"content":"    private Isbn isbn;","lastModifiedDate":"2022-03-09"},{"lineNumber":28,"author":{"gitId":"bingsen0806"},"content":"    private List\u003cAuthor\u003e authors;","lastModifiedDate":"2022-03-09"},{"lineNumber":29,"author":{"gitId":"bingsen0806"},"content":"    private Set\u003cTag\u003e tags;","lastModifiedDate":"2022-03-09"},{"lineNumber":30,"author":{"gitId":"bingsen0806"},"content":"    private long timeAdded;","lastModifiedDate":"2022-03-11"},{"lineNumber":31,"author":{"gitId":"bingsen0806"},"content":"","lastModifiedDate":"2022-03-09"},{"lineNumber":32,"author":{"gitId":"bingsen0806"},"content":"    /**","lastModifiedDate":"2022-03-09"},{"lineNumber":33,"author":{"gitId":"bingsen0806"},"content":"     * Creates a {@code BookBuilder} with the default details.","lastModifiedDate":"2022-03-09"},{"lineNumber":34,"author":{"gitId":"bingsen0806"},"content":"     */","lastModifiedDate":"2022-03-09"},{"lineNumber":35,"author":{"gitId":"bingsen0806"},"content":"    public BookBuilder() {","lastModifiedDate":"2022-03-09"},{"lineNumber":36,"author":{"gitId":"bingsen0806"},"content":"        bookName \u003d new BookName(DEFAULT_NAME);","lastModifiedDate":"2022-03-09"},{"lineNumber":37,"author":{"gitId":"bingsen0806"},"content":"        isbn \u003d new Isbn(DEFAULT_ISBN);","lastModifiedDate":"2022-03-09"},{"lineNumber":38,"author":{"gitId":"bingsen0806"},"content":"        authors \u003d new ArrayList\u003cAuthor\u003e();","lastModifiedDate":"2022-03-09"},{"lineNumber":39,"author":{"gitId":"bingsen0806"},"content":"        tags \u003d new HashSet\u003cTag\u003e();","lastModifiedDate":"2022-03-09"},{"lineNumber":40,"author":{"gitId":"bingsen0806"},"content":"        timeAdded \u003d DEFAULT_TIME_ADDED;","lastModifiedDate":"2022-03-11"},{"lineNumber":41,"author":{"gitId":"bingsen0806"},"content":"    }","lastModifiedDate":"2022-03-09"},{"lineNumber":42,"author":{"gitId":"bingsen0806"},"content":"","lastModifiedDate":"2022-03-09"},{"lineNumber":43,"author":{"gitId":"bingsen0806"},"content":"    /**","lastModifiedDate":"2022-03-09"},{"lineNumber":44,"author":{"gitId":"bingsen0806"},"content":"     * Initializes the BookBuilder with the data of {@code bookToCopy}.","lastModifiedDate":"2022-03-09"},{"lineNumber":45,"author":{"gitId":"bingsen0806"},"content":"     */","lastModifiedDate":"2022-03-09"},{"lineNumber":46,"author":{"gitId":"bingsen0806"},"content":"    public BookBuilder(Book bookToCopy) {","lastModifiedDate":"2022-03-09"},{"lineNumber":47,"author":{"gitId":"bingsen0806"},"content":"        bookName \u003d bookToCopy.getBookName();","lastModifiedDate":"2022-03-09"},{"lineNumber":48,"author":{"gitId":"bingsen0806"},"content":"        isbn \u003d bookToCopy.getIsbn();","lastModifiedDate":"2022-03-09"},{"lineNumber":49,"author":{"gitId":"bingsen0806"},"content":"        authors \u003d new ArrayList\u003cAuthor\u003e(bookToCopy.getAuthors());","lastModifiedDate":"2022-03-09"},{"lineNumber":50,"author":{"gitId":"bingsen0806"},"content":"        tags \u003d new HashSet\u003cTag\u003e(bookToCopy.getTags());","lastModifiedDate":"2022-03-09"},{"lineNumber":51,"author":{"gitId":"bingsen0806"},"content":"        timeAdded \u003d bookToCopy.getTimeAdded();","lastModifiedDate":"2022-03-11"},{"lineNumber":52,"author":{"gitId":"bingsen0806"},"content":"    }","lastModifiedDate":"2022-03-09"},{"lineNumber":53,"author":{"gitId":"bingsen0806"},"content":"","lastModifiedDate":"2022-03-09"},{"lineNumber":54,"author":{"gitId":"bingsen0806"},"content":"    /**","lastModifiedDate":"2022-03-09"},{"lineNumber":55,"author":{"gitId":"bingsen0806"},"content":"     * Sets the {@code BookName} of the {@code Book} that we are building.","lastModifiedDate":"2022-03-09"},{"lineNumber":56,"author":{"gitId":"bingsen0806"},"content":"     */","lastModifiedDate":"2022-03-09"},{"lineNumber":57,"author":{"gitId":"bingsen0806"},"content":"    public BookBuilder withName(String bookName) {","lastModifiedDate":"2022-03-09"},{"lineNumber":58,"author":{"gitId":"bingsen0806"},"content":"        this.bookName \u003d new BookName(bookName);","lastModifiedDate":"2022-03-09"},{"lineNumber":59,"author":{"gitId":"bingsen0806"},"content":"        return this;","lastModifiedDate":"2022-03-09"},{"lineNumber":60,"author":{"gitId":"bingsen0806"},"content":"    }","lastModifiedDate":"2022-03-09"},{"lineNumber":61,"author":{"gitId":"bingsen0806"},"content":"","lastModifiedDate":"2022-03-09"},{"lineNumber":62,"author":{"gitId":"bingsen0806"},"content":"    /**","lastModifiedDate":"2022-03-09"},{"lineNumber":63,"author":{"gitId":"bingsen0806"},"content":"     * Parses the {@code authors} into a {@code List\u003cAuthor\u003e} and set it to the {@code Book} that we are building.","lastModifiedDate":"2022-03-09"},{"lineNumber":64,"author":{"gitId":"bingsen0806"},"content":"     */","lastModifiedDate":"2022-03-09"},{"lineNumber":65,"author":{"gitId":"bingsen0806"},"content":"    public BookBuilder withAuthors(String ... authors) {","lastModifiedDate":"2022-03-09"},{"lineNumber":66,"author":{"gitId":"bingsen0806"},"content":"        this.authors \u003d SampleDataUtil.getAuthorList(authors);","lastModifiedDate":"2022-03-09"},{"lineNumber":67,"author":{"gitId":"bingsen0806"},"content":"        return this;","lastModifiedDate":"2022-03-09"},{"lineNumber":68,"author":{"gitId":"bingsen0806"},"content":"    }","lastModifiedDate":"2022-03-09"},{"lineNumber":69,"author":{"gitId":"bingsen0806"},"content":"","lastModifiedDate":"2022-03-09"},{"lineNumber":70,"author":{"gitId":"bingsen0806"},"content":"    /**","lastModifiedDate":"2022-03-09"},{"lineNumber":71,"author":{"gitId":"bingsen0806"},"content":"     * Parses the {@code tags} into a {@code Set\u003cTag\u003e} and set it to the {@code Book} that we are building.","lastModifiedDate":"2022-03-09"},{"lineNumber":72,"author":{"gitId":"bingsen0806"},"content":"     */","lastModifiedDate":"2022-03-09"},{"lineNumber":73,"author":{"gitId":"bingsen0806"},"content":"    public BookBuilder withTags(String ... tags) {","lastModifiedDate":"2022-03-09"},{"lineNumber":74,"author":{"gitId":"bingsen0806"},"content":"        this.tags \u003d SampleDataUtil.getTagSet(tags);","lastModifiedDate":"2022-03-09"},{"lineNumber":75,"author":{"gitId":"bingsen0806"},"content":"        return this;","lastModifiedDate":"2022-03-09"},{"lineNumber":76,"author":{"gitId":"bingsen0806"},"content":"    }","lastModifiedDate":"2022-03-09"},{"lineNumber":77,"author":{"gitId":"bingsen0806"},"content":"","lastModifiedDate":"2022-03-09"},{"lineNumber":78,"author":{"gitId":"bingsen0806"},"content":"    /**","lastModifiedDate":"2022-03-09"},{"lineNumber":79,"author":{"gitId":"bingsen0806"},"content":"     * Sets the {@code Isbn} of the {@code Book} that we are building.","lastModifiedDate":"2022-03-09"},{"lineNumber":80,"author":{"gitId":"bingsen0806"},"content":"     */","lastModifiedDate":"2022-03-09"},{"lineNumber":81,"author":{"gitId":"bingsen0806"},"content":"    public BookBuilder withIsbn(String isbn) {","lastModifiedDate":"2022-03-09"},{"lineNumber":82,"author":{"gitId":"bingsen0806"},"content":"        this.isbn \u003d new Isbn(isbn);","lastModifiedDate":"2022-03-09"},{"lineNumber":83,"author":{"gitId":"bingsen0806"},"content":"        return this;","lastModifiedDate":"2022-03-09"},{"lineNumber":84,"author":{"gitId":"bingsen0806"},"content":"    }","lastModifiedDate":"2022-03-09"},{"lineNumber":85,"author":{"gitId":"bingsen0806"},"content":"","lastModifiedDate":"2022-03-09"},{"lineNumber":86,"author":{"gitId":"bingsen0806"},"content":"    /**","lastModifiedDate":"2022-03-11"},{"lineNumber":87,"author":{"gitId":"bingsen0806"},"content":"     * Sets the {@code timeAdded} of the {@code Book} that we are building.","lastModifiedDate":"2022-03-11"},{"lineNumber":88,"author":{"gitId":"bingsen0806"},"content":"     */","lastModifiedDate":"2022-03-11"},{"lineNumber":89,"author":{"gitId":"bingsen0806"},"content":"    public BookBuilder withTimeAdded(long timeAdded) {","lastModifiedDate":"2022-03-11"},{"lineNumber":90,"author":{"gitId":"bingsen0806"},"content":"        this.timeAdded \u003d timeAdded;","lastModifiedDate":"2022-03-11"},{"lineNumber":91,"author":{"gitId":"bingsen0806"},"content":"        return this;","lastModifiedDate":"2022-03-11"},{"lineNumber":92,"author":{"gitId":"bingsen0806"},"content":"    }","lastModifiedDate":"2022-03-11"},{"lineNumber":93,"author":{"gitId":"bingsen0806"},"content":"","lastModifiedDate":"2022-03-11"},{"lineNumber":94,"author":{"gitId":"bingsen0806"},"content":"    public Book build() {","lastModifiedDate":"2022-03-09"},{"lineNumber":95,"author":{"gitId":"bingsen0806"},"content":"        return new Book(bookName, isbn, authors, tags, timeAdded);","lastModifiedDate":"2022-03-11"},{"lineNumber":96,"author":{"gitId":"bingsen0806"},"content":"    }","lastModifiedDate":"2022-03-09"},{"lineNumber":97,"author":{"gitId":"bingsen0806"},"content":"}","lastModifiedDate":"2022-03-09"}],"authorContributionMap":{"bingsen0806":97}},{"path":"src/test/java/seedu/address/testutil/EditBookDescriptorBuilder.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"yuqitanyq"},"content":"package seedu.address.testutil;","lastModifiedDate":"2022-03-11"},{"lineNumber":2,"author":{"gitId":"yuqitanyq"},"content":"","lastModifiedDate":"2022-03-11"},{"lineNumber":3,"author":{"gitId":"yuqitanyq"},"content":"import java.util.Set;","lastModifiedDate":"2022-03-11"},{"lineNumber":4,"author":{"gitId":"yuqitanyq"},"content":"import java.util.stream.Collectors;","lastModifiedDate":"2022-03-11"},{"lineNumber":5,"author":{"gitId":"yuqitanyq"},"content":"import java.util.stream.Stream;","lastModifiedDate":"2022-03-11"},{"lineNumber":6,"author":{"gitId":"yuqitanyq"},"content":"","lastModifiedDate":"2022-03-11"},{"lineNumber":7,"author":{"gitId":"yuqitanyq"},"content":"import seedu.address.logic.commands.book.EditBookCommand.EditBookDescriptor;","lastModifiedDate":"2022-03-11"},{"lineNumber":8,"author":{"gitId":"yuqitanyq"},"content":"import seedu.address.model.book.Book;","lastModifiedDate":"2022-03-11"},{"lineNumber":9,"author":{"gitId":"yuqitanyq"},"content":"import seedu.address.model.book.BookName;","lastModifiedDate":"2022-03-11"},{"lineNumber":10,"author":{"gitId":"yuqitanyq"},"content":"import seedu.address.model.book.Isbn;","lastModifiedDate":"2022-03-11"},{"lineNumber":11,"author":{"gitId":"yuqitanyq"},"content":"import seedu.address.model.tag.Tag;","lastModifiedDate":"2022-03-11"},{"lineNumber":12,"author":{"gitId":"yuqitanyq"},"content":"import seedu.address.model.util.SampleDataUtil;","lastModifiedDate":"2022-03-11"},{"lineNumber":13,"author":{"gitId":"yuqitanyq"},"content":"","lastModifiedDate":"2022-03-11"},{"lineNumber":14,"author":{"gitId":"yuqitanyq"},"content":"/**","lastModifiedDate":"2022-03-11"},{"lineNumber":15,"author":{"gitId":"yuqitanyq"},"content":" * A utility class to help with building EditBookDescriptor objects.","lastModifiedDate":"2022-03-11"},{"lineNumber":16,"author":{"gitId":"yuqitanyq"},"content":" */","lastModifiedDate":"2022-03-11"},{"lineNumber":17,"author":{"gitId":"yuqitanyq"},"content":"public class EditBookDescriptorBuilder {","lastModifiedDate":"2022-03-11"},{"lineNumber":18,"author":{"gitId":"yuqitanyq"},"content":"    private EditBookDescriptor bookDescriptor;","lastModifiedDate":"2022-03-11"},{"lineNumber":19,"author":{"gitId":"yuqitanyq"},"content":"","lastModifiedDate":"2022-03-11"},{"lineNumber":20,"author":{"gitId":"yuqitanyq"},"content":"    public EditBookDescriptorBuilder() {","lastModifiedDate":"2022-03-11"},{"lineNumber":21,"author":{"gitId":"yuqitanyq"},"content":"        bookDescriptor \u003d new EditBookDescriptor();","lastModifiedDate":"2022-03-11"},{"lineNumber":22,"author":{"gitId":"yuqitanyq"},"content":"    }","lastModifiedDate":"2022-03-11"},{"lineNumber":23,"author":{"gitId":"yuqitanyq"},"content":"","lastModifiedDate":"2022-03-11"},{"lineNumber":24,"author":{"gitId":"yuqitanyq"},"content":"    public EditBookDescriptorBuilder(EditBookDescriptor bookDescriptor) {","lastModifiedDate":"2022-03-11"},{"lineNumber":25,"author":{"gitId":"yuqitanyq"},"content":"        this.bookDescriptor \u003d new EditBookDescriptor(bookDescriptor);","lastModifiedDate":"2022-03-11"},{"lineNumber":26,"author":{"gitId":"yuqitanyq"},"content":"    }","lastModifiedDate":"2022-03-11"},{"lineNumber":27,"author":{"gitId":"yuqitanyq"},"content":"","lastModifiedDate":"2022-03-11"},{"lineNumber":28,"author":{"gitId":"yuqitanyq"},"content":"    /**","lastModifiedDate":"2022-03-11"},{"lineNumber":29,"author":{"gitId":"yuqitanyq"},"content":"     * Returns an {@code EditBookDescriptor} with fields containing {@code book}\u0027s details","lastModifiedDate":"2022-03-11"},{"lineNumber":30,"author":{"gitId":"yuqitanyq"},"content":"     */","lastModifiedDate":"2022-03-11"},{"lineNumber":31,"author":{"gitId":"yuqitanyq"},"content":"    public EditBookDescriptorBuilder(Book book) {","lastModifiedDate":"2022-03-11"},{"lineNumber":32,"author":{"gitId":"yuqitanyq"},"content":"        bookDescriptor \u003d new EditBookDescriptor();","lastModifiedDate":"2022-03-11"},{"lineNumber":33,"author":{"gitId":"yuqitanyq"},"content":"        bookDescriptor.setBookName(book.getBookName());","lastModifiedDate":"2022-03-11"},{"lineNumber":34,"author":{"gitId":"yuqitanyq"},"content":"        bookDescriptor.setIsbn(book.getIsbn());","lastModifiedDate":"2022-03-11"},{"lineNumber":35,"author":{"gitId":"yuqitanyq"},"content":"        bookDescriptor.setAuthors(book.getAuthors());","lastModifiedDate":"2022-03-11"},{"lineNumber":36,"author":{"gitId":"yuqitanyq"},"content":"        bookDescriptor.setTags(book.getTags());","lastModifiedDate":"2022-03-11"},{"lineNumber":37,"author":{"gitId":"yuqitanyq"},"content":"    }","lastModifiedDate":"2022-03-11"},{"lineNumber":38,"author":{"gitId":"yuqitanyq"},"content":"","lastModifiedDate":"2022-03-11"},{"lineNumber":39,"author":{"gitId":"yuqitanyq"},"content":"    /**","lastModifiedDate":"2022-03-11"},{"lineNumber":40,"author":{"gitId":"yuqitanyq"},"content":"     * Sets the {@code BookName} of the {@code EditBookDescriptor} that we are building.","lastModifiedDate":"2022-03-11"},{"lineNumber":41,"author":{"gitId":"yuqitanyq"},"content":"     */","lastModifiedDate":"2022-03-11"},{"lineNumber":42,"author":{"gitId":"yuqitanyq"},"content":"    public EditBookDescriptorBuilder withBookName(String name) {","lastModifiedDate":"2022-03-11"},{"lineNumber":43,"author":{"gitId":"yuqitanyq"},"content":"        bookDescriptor.setBookName(new BookName(name));","lastModifiedDate":"2022-03-11"},{"lineNumber":44,"author":{"gitId":"yuqitanyq"},"content":"        return this;","lastModifiedDate":"2022-03-11"},{"lineNumber":45,"author":{"gitId":"yuqitanyq"},"content":"    }","lastModifiedDate":"2022-03-11"},{"lineNumber":46,"author":{"gitId":"yuqitanyq"},"content":"","lastModifiedDate":"2022-03-11"},{"lineNumber":47,"author":{"gitId":"yuqitanyq"},"content":"    /**","lastModifiedDate":"2022-03-11"},{"lineNumber":48,"author":{"gitId":"yuqitanyq"},"content":"     * Sets the {@code Isbn} of the {@code EditBookDescriptor} that we are building.","lastModifiedDate":"2022-03-11"},{"lineNumber":49,"author":{"gitId":"yuqitanyq"},"content":"     */","lastModifiedDate":"2022-03-11"},{"lineNumber":50,"author":{"gitId":"yuqitanyq"},"content":"    public EditBookDescriptorBuilder withIsbn(String isbn) {","lastModifiedDate":"2022-03-11"},{"lineNumber":51,"author":{"gitId":"yuqitanyq"},"content":"        bookDescriptor.setIsbn(new Isbn(isbn));","lastModifiedDate":"2022-03-11"},{"lineNumber":52,"author":{"gitId":"yuqitanyq"},"content":"        return this;","lastModifiedDate":"2022-03-11"},{"lineNumber":53,"author":{"gitId":"yuqitanyq"},"content":"    }","lastModifiedDate":"2022-03-11"},{"lineNumber":54,"author":{"gitId":"yuqitanyq"},"content":"","lastModifiedDate":"2022-03-11"},{"lineNumber":55,"author":{"gitId":"yuqitanyq"},"content":"    /**","lastModifiedDate":"2022-03-11"},{"lineNumber":56,"author":{"gitId":"yuqitanyq"},"content":"     * Sets the {@code authors} of the {@code EditBookDescriptor} that we are building.","lastModifiedDate":"2022-03-11"},{"lineNumber":57,"author":{"gitId":"yuqitanyq"},"content":"     */","lastModifiedDate":"2022-03-11"},{"lineNumber":58,"author":{"gitId":"yuqitanyq"},"content":"    public EditBookDescriptorBuilder withAuthors(String ... authors) {","lastModifiedDate":"2022-03-11"},{"lineNumber":59,"author":{"gitId":"yuqitanyq"},"content":"        bookDescriptor.setAuthors(SampleDataUtil.getAuthorList(authors));","lastModifiedDate":"2022-03-11"},{"lineNumber":60,"author":{"gitId":"yuqitanyq"},"content":"        return this;","lastModifiedDate":"2022-03-11"},{"lineNumber":61,"author":{"gitId":"yuqitanyq"},"content":"    }","lastModifiedDate":"2022-03-11"},{"lineNumber":62,"author":{"gitId":"yuqitanyq"},"content":"","lastModifiedDate":"2022-03-11"},{"lineNumber":63,"author":{"gitId":"yuqitanyq"},"content":"    /**","lastModifiedDate":"2022-03-11"},{"lineNumber":64,"author":{"gitId":"yuqitanyq"},"content":"     * Parses the {@code tags} into a {@code Set\u003cTag\u003e} and set it to the {@code EditBookDescriptor}","lastModifiedDate":"2022-03-11"},{"lineNumber":65,"author":{"gitId":"yuqitanyq"},"content":"     * that we are building.","lastModifiedDate":"2022-03-11"},{"lineNumber":66,"author":{"gitId":"yuqitanyq"},"content":"     */","lastModifiedDate":"2022-03-11"},{"lineNumber":67,"author":{"gitId":"yuqitanyq"},"content":"    public EditBookDescriptorBuilder withTags(String... tags) {","lastModifiedDate":"2022-03-11"},{"lineNumber":68,"author":{"gitId":"yuqitanyq"},"content":"        Set\u003cTag\u003e tagSet \u003d Stream.of(tags).map(Tag::new).collect(Collectors.toSet());","lastModifiedDate":"2022-03-11"},{"lineNumber":69,"author":{"gitId":"yuqitanyq"},"content":"        bookDescriptor.setTags(tagSet);","lastModifiedDate":"2022-03-11"},{"lineNumber":70,"author":{"gitId":"yuqitanyq"},"content":"        return this;","lastModifiedDate":"2022-03-11"},{"lineNumber":71,"author":{"gitId":"yuqitanyq"},"content":"    }","lastModifiedDate":"2022-03-11"},{"lineNumber":72,"author":{"gitId":"yuqitanyq"},"content":"","lastModifiedDate":"2022-03-11"},{"lineNumber":73,"author":{"gitId":"yuqitanyq"},"content":"    public EditBookDescriptor build() {","lastModifiedDate":"2022-03-11"},{"lineNumber":74,"author":{"gitId":"yuqitanyq"},"content":"        return bookDescriptor;","lastModifiedDate":"2022-03-11"},{"lineNumber":75,"author":{"gitId":"yuqitanyq"},"content":"    }","lastModifiedDate":"2022-03-11"},{"lineNumber":76,"author":{"gitId":"yuqitanyq"},"content":"}","lastModifiedDate":"2022-03-11"},{"lineNumber":77,"author":{"gitId":"yuqitanyq"},"content":"","lastModifiedDate":"2022-03-11"},{"lineNumber":78,"author":{"gitId":"yuqitanyq"},"content":"","lastModifiedDate":"2022-03-11"},{"lineNumber":79,"author":{"gitId":"yuqitanyq"},"content":"","lastModifiedDate":"2022-03-11"},{"lineNumber":80,"author":{"gitId":"yuqitanyq"},"content":"","lastModifiedDate":"2022-03-11"}],"authorContributionMap":{"yuqitanyq":80}},{"path":"src/test/java/seedu/address/testutil/EditPersonDescriptorBuilder.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.testutil;","lastModifiedDate":"2017-05-05"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.util.Set;","lastModifiedDate":"2017-12-23"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import java.util.stream.Collectors;","lastModifiedDate":"2017-12-23"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.util.stream.Stream;","lastModifiedDate":"2017-12-23"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":7,"author":{"gitId":"aditi2313"},"content":"import seedu.address.logic.commands.patron.EditPatronCommand.EditPersonDescriptor;","lastModifiedDate":"2022-03-11"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Email;","lastModifiedDate":"2017-12-23"},{"lineNumber":9,"author":{"gitId":"aditi2313"},"content":"import seedu.address.model.person.Id;","lastModifiedDate":"2022-03-11"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Name;","lastModifiedDate":"2017-12-23"},{"lineNumber":11,"author":{"gitId":"aditi2313"},"content":"import seedu.address.model.person.Patron;","lastModifiedDate":"2022-03-09"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Phone;","lastModifiedDate":"2017-12-23"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import seedu.address.model.tag.Tag;","lastModifiedDate":"2017-12-23"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":15,"author":{"gitId":"aditi2313"},"content":"","lastModifiedDate":"2022-03-11"},{"lineNumber":16,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-05-05"},{"lineNumber":17,"author":{"gitId":"-"},"content":" * A utility class to help with building EditPersonDescriptor objects.","lastModifiedDate":"2017-05-05"},{"lineNumber":18,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-05-05"},{"lineNumber":19,"author":{"gitId":"-"},"content":"public class EditPersonDescriptorBuilder {","lastModifiedDate":"2017-05-05"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    private EditPersonDescriptor descriptor;","lastModifiedDate":"2017-05-05"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    public EditPersonDescriptorBuilder() {","lastModifiedDate":"2017-05-05"},{"lineNumber":24,"author":{"gitId":"-"},"content":"        descriptor \u003d new EditPersonDescriptor();","lastModifiedDate":"2017-05-05"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-05"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    public EditPersonDescriptorBuilder(EditPersonDescriptor descriptor) {","lastModifiedDate":"2017-05-05"},{"lineNumber":28,"author":{"gitId":"-"},"content":"        this.descriptor \u003d new EditPersonDescriptor(descriptor);","lastModifiedDate":"2017-05-05"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-05"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-06-05"},{"lineNumber":32,"author":{"gitId":"-"},"content":"     * Returns an {@code EditPersonDescriptor} with fields containing {@code person}\u0027s details","lastModifiedDate":"2017-06-05"},{"lineNumber":33,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-06-05"},{"lineNumber":34,"author":{"gitId":"aditi2313"},"content":"    public EditPersonDescriptorBuilder(Patron person) {","lastModifiedDate":"2022-03-09"},{"lineNumber":35,"author":{"gitId":"-"},"content":"        descriptor \u003d new EditPersonDescriptor();","lastModifiedDate":"2017-06-05"},{"lineNumber":36,"author":{"gitId":"-"},"content":"        descriptor.setName(person.getName());","lastModifiedDate":"2017-06-21"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        descriptor.setPhone(person.getPhone());","lastModifiedDate":"2017-06-21"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        descriptor.setEmail(person.getEmail());","lastModifiedDate":"2017-06-21"},{"lineNumber":39,"author":{"gitId":"aditi2313"},"content":"        descriptor.setId(person.getId());","lastModifiedDate":"2022-03-09"},{"lineNumber":40,"author":{"gitId":"-"},"content":"        descriptor.setTags(person.getTags());","lastModifiedDate":"2017-06-21"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-05"},{"lineNumber":42,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-07-26"},{"lineNumber":44,"author":{"gitId":"-"},"content":"     * Sets the {@code Name} of the {@code EditPersonDescriptor} that we are building.","lastModifiedDate":"2017-07-26"},{"lineNumber":45,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-07-26"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    public EditPersonDescriptorBuilder withName(String name) {","lastModifiedDate":"2017-08-15"},{"lineNumber":47,"author":{"gitId":"-"},"content":"        descriptor.setName(new Name(name));","lastModifiedDate":"2017-12-23"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        return this;","lastModifiedDate":"2017-05-05"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-05"},{"lineNumber":50,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-07-26"},{"lineNumber":52,"author":{"gitId":"-"},"content":"     * Sets the {@code Phone} of the {@code EditPersonDescriptor} that we are building.","lastModifiedDate":"2017-07-26"},{"lineNumber":53,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-07-26"},{"lineNumber":54,"author":{"gitId":"-"},"content":"    public EditPersonDescriptorBuilder withPhone(String phone) {","lastModifiedDate":"2017-08-15"},{"lineNumber":55,"author":{"gitId":"-"},"content":"        descriptor.setPhone(new Phone(phone));","lastModifiedDate":"2017-12-23"},{"lineNumber":56,"author":{"gitId":"-"},"content":"        return this;","lastModifiedDate":"2017-05-05"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-05"},{"lineNumber":58,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":59,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-07-26"},{"lineNumber":60,"author":{"gitId":"-"},"content":"     * Sets the {@code Email} of the {@code EditPersonDescriptor} that we are building.","lastModifiedDate":"2017-07-26"},{"lineNumber":61,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-07-26"},{"lineNumber":62,"author":{"gitId":"-"},"content":"    public EditPersonDescriptorBuilder withEmail(String email) {","lastModifiedDate":"2017-08-15"},{"lineNumber":63,"author":{"gitId":"-"},"content":"        descriptor.setEmail(new Email(email));","lastModifiedDate":"2017-12-23"},{"lineNumber":64,"author":{"gitId":"-"},"content":"        return this;","lastModifiedDate":"2017-05-05"},{"lineNumber":65,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-05"},{"lineNumber":66,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":67,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-07-26"},{"lineNumber":68,"author":{"gitId":"-"},"content":"     * Sets the {@code Address} of the {@code EditPersonDescriptor} that we are building.","lastModifiedDate":"2017-07-26"},{"lineNumber":69,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-07-26"},{"lineNumber":70,"author":{"gitId":"aditi2313"},"content":"    public EditPersonDescriptorBuilder withId(String id) {","lastModifiedDate":"2022-03-10"},{"lineNumber":71,"author":{"gitId":"aditi2313"},"content":"        descriptor.setId(new Id(id));","lastModifiedDate":"2022-03-10"},{"lineNumber":72,"author":{"gitId":"-"},"content":"        return this;","lastModifiedDate":"2017-05-05"},{"lineNumber":73,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-05"},{"lineNumber":74,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":75,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-07-26"},{"lineNumber":76,"author":{"gitId":"-"},"content":"     * Parses the {@code tags} into a {@code Set\u003cTag\u003e} and set it to the {@code EditPersonDescriptor}","lastModifiedDate":"2017-07-26"},{"lineNumber":77,"author":{"gitId":"-"},"content":"     * that we are building.","lastModifiedDate":"2017-07-26"},{"lineNumber":78,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-07-26"},{"lineNumber":79,"author":{"gitId":"-"},"content":"    public EditPersonDescriptorBuilder withTags(String... tags) {","lastModifiedDate":"2017-08-15"},{"lineNumber":80,"author":{"gitId":"-"},"content":"        Set\u003cTag\u003e tagSet \u003d Stream.of(tags).map(Tag::new).collect(Collectors.toSet());","lastModifiedDate":"2017-12-23"},{"lineNumber":81,"author":{"gitId":"-"},"content":"        descriptor.setTags(tagSet);","lastModifiedDate":"2017-12-23"},{"lineNumber":82,"author":{"gitId":"-"},"content":"        return this;","lastModifiedDate":"2017-05-05"},{"lineNumber":83,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-05"},{"lineNumber":84,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":85,"author":{"gitId":"-"},"content":"    public EditPersonDescriptor build() {","lastModifiedDate":"2017-05-05"},{"lineNumber":86,"author":{"gitId":"-"},"content":"        return descriptor;","lastModifiedDate":"2017-05-05"},{"lineNumber":87,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-05"},{"lineNumber":88,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-05-05"}],"authorContributionMap":{"-":80,"aditi2313":8}},{"path":"src/test/java/seedu/address/testutil/LengthyBooks.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"yl-ang"},"content":"package seedu.address.testutil;","lastModifiedDate":"2022-03-10"},{"lineNumber":2,"author":{"gitId":"yl-ang"},"content":"","lastModifiedDate":"2022-03-10"},{"lineNumber":3,"author":{"gitId":"yl-ang"},"content":"import java.util.ArrayList;","lastModifiedDate":"2022-03-10"},{"lineNumber":4,"author":{"gitId":"yl-ang"},"content":"import java.util.Arrays;","lastModifiedDate":"2022-03-10"},{"lineNumber":5,"author":{"gitId":"yl-ang"},"content":"import java.util.List;","lastModifiedDate":"2022-03-10"},{"lineNumber":6,"author":{"gitId":"yl-ang"},"content":"","lastModifiedDate":"2022-03-10"},{"lineNumber":7,"author":{"gitId":"yl-ang"},"content":"import seedu.address.model.AddressBook;","lastModifiedDate":"2022-03-10"},{"lineNumber":8,"author":{"gitId":"yl-ang"},"content":"import seedu.address.model.book.Book;","lastModifiedDate":"2022-03-10"},{"lineNumber":9,"author":{"gitId":"yl-ang"},"content":"","lastModifiedDate":"2022-03-10"},{"lineNumber":10,"author":{"gitId":"yl-ang"},"content":"/**","lastModifiedDate":"2022-03-10"},{"lineNumber":11,"author":{"gitId":"yl-ang"},"content":" * A utility class containing a list of {@code Book} objects to be used in tests.","lastModifiedDate":"2022-03-10"},{"lineNumber":12,"author":{"gitId":"yl-ang"},"content":" */","lastModifiedDate":"2022-03-10"},{"lineNumber":13,"author":{"gitId":"yl-ang"},"content":"public class LengthyBooks {","lastModifiedDate":"2022-03-10"},{"lineNumber":14,"author":{"gitId":"yl-ang"},"content":"","lastModifiedDate":"2022-03-10"},{"lineNumber":15,"author":{"gitId":"yl-ang"},"content":"    // Book with 800 characters in name, 800 characters in author name, 800 characters in tag label.","lastModifiedDate":"2022-03-10"},{"lineNumber":16,"author":{"gitId":"yl-ang"},"content":"    public static final Book EIGHT_HUNDRED_LARGE_BOOK \u003d new BookBuilder().withName(\"aaaaaaaaaaaaaaaaaaaaaaaaaaaaaa\"","lastModifiedDate":"2022-03-10"},{"lineNumber":17,"author":{"gitId":"yl-ang"},"content":"            + \"aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa\"","lastModifiedDate":"2022-03-10"},{"lineNumber":18,"author":{"gitId":"yl-ang"},"content":"            + \"aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa\"","lastModifiedDate":"2022-03-10"},{"lineNumber":19,"author":{"gitId":"yl-ang"},"content":"            + \"aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa\"","lastModifiedDate":"2022-03-10"},{"lineNumber":20,"author":{"gitId":"yl-ang"},"content":"            + \"aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa\"","lastModifiedDate":"2022-03-10"},{"lineNumber":21,"author":{"gitId":"yl-ang"},"content":"            + \"aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa\"","lastModifiedDate":"2022-03-10"},{"lineNumber":22,"author":{"gitId":"yl-ang"},"content":"            + \"aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa\"","lastModifiedDate":"2022-03-10"},{"lineNumber":23,"author":{"gitId":"yl-ang"},"content":"            + \"aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa\"","lastModifiedDate":"2022-03-10"},{"lineNumber":24,"author":{"gitId":"yl-ang"},"content":"            + \"aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa\")","lastModifiedDate":"2022-03-10"},{"lineNumber":25,"author":{"gitId":"yl-ang"},"content":"            .withIsbn(\"0-545-01022-5\")","lastModifiedDate":"2022-03-10"},{"lineNumber":26,"author":{"gitId":"yl-ang"},"content":"            .withAuthors(\"aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa\"","lastModifiedDate":"2022-03-10"},{"lineNumber":27,"author":{"gitId":"yl-ang"},"content":"            + \"aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa\"","lastModifiedDate":"2022-03-10"},{"lineNumber":28,"author":{"gitId":"yl-ang"},"content":"            + \"aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa\"","lastModifiedDate":"2022-03-10"},{"lineNumber":29,"author":{"gitId":"yl-ang"},"content":"            + \"aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa\"","lastModifiedDate":"2022-03-10"},{"lineNumber":30,"author":{"gitId":"yl-ang"},"content":"            + \"aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa\"","lastModifiedDate":"2022-03-10"},{"lineNumber":31,"author":{"gitId":"yl-ang"},"content":"            + \"aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa\"","lastModifiedDate":"2022-03-10"},{"lineNumber":32,"author":{"gitId":"yl-ang"},"content":"            + \"aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa\"","lastModifiedDate":"2022-03-10"},{"lineNumber":33,"author":{"gitId":"yl-ang"},"content":"            + \"aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa\"","lastModifiedDate":"2022-03-10"},{"lineNumber":34,"author":{"gitId":"yl-ang"},"content":"            + \"aaaaa\")","lastModifiedDate":"2022-03-10"},{"lineNumber":35,"author":{"gitId":"yl-ang"},"content":"            .withTags(\"aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa\"","lastModifiedDate":"2022-03-10"},{"lineNumber":36,"author":{"gitId":"yl-ang"},"content":"            + \"aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa\"","lastModifiedDate":"2022-03-10"},{"lineNumber":37,"author":{"gitId":"yl-ang"},"content":"            + \"aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa\"","lastModifiedDate":"2022-03-10"},{"lineNumber":38,"author":{"gitId":"yl-ang"},"content":"            + \"aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa\"","lastModifiedDate":"2022-03-10"},{"lineNumber":39,"author":{"gitId":"yl-ang"},"content":"            + \"aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa\"","lastModifiedDate":"2022-03-10"},{"lineNumber":40,"author":{"gitId":"yl-ang"},"content":"            + \"aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa\"","lastModifiedDate":"2022-03-10"},{"lineNumber":41,"author":{"gitId":"yl-ang"},"content":"            + \"aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa\"","lastModifiedDate":"2022-03-10"},{"lineNumber":42,"author":{"gitId":"yl-ang"},"content":"            + \"aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa\"","lastModifiedDate":"2022-03-10"},{"lineNumber":43,"author":{"gitId":"yl-ang"},"content":"            + \"aaaaa\")","lastModifiedDate":"2022-03-10"},{"lineNumber":44,"author":{"gitId":"yl-ang"},"content":"            .build();","lastModifiedDate":"2022-03-10"},{"lineNumber":45,"author":{"gitId":"yl-ang"},"content":"","lastModifiedDate":"2022-03-10"},{"lineNumber":46,"author":{"gitId":"yl-ang"},"content":"    // LARGE_BOOK contains lengthy book titles, lengthy author names, multiple tags","lastModifiedDate":"2022-03-10"},{"lineNumber":47,"author":{"gitId":"yl-ang"},"content":"    public static final Book LARGE_BOOK \u003d new BookBuilder().withName(\"Lorem Ipsum comes from a latin text written\"","lastModifiedDate":"2022-03-10"},{"lineNumber":48,"author":{"gitId":"yl-ang"},"content":"            + \" in 45BC by Roman statesman Lorem Ipsum comes from a latin text written in 45BC by Roman statesman\"","lastModifiedDate":"2022-03-10"},{"lineNumber":49,"author":{"gitId":"yl-ang"},"content":"            + \" Lorem Ipsum comes from a latin text written in 45BC by Roman statesman Lorem Ipsum comes from a \"","lastModifiedDate":"2022-03-10"},{"lineNumber":50,"author":{"gitId":"yl-ang"},"content":"            + \"latin text written in 45BC by Roman statesman Lorem Ipsum comes from a latin text written in 45BC by\"","lastModifiedDate":"2022-03-10"},{"lineNumber":51,"author":{"gitId":"yl-ang"},"content":"            + \" Roman statesman Lorem Ipsum comes from a latin text written in 45BC by Roman statesman\")","lastModifiedDate":"2022-03-10"},{"lineNumber":52,"author":{"gitId":"yl-ang"},"content":"            .withIsbn(\"0-545-01022-5\")","lastModifiedDate":"2022-03-10"},{"lineNumber":53,"author":{"gitId":"yl-ang"},"content":"            .withAuthors(\"accusamus acutum aegritudine alios aliquip allevatio antiqua\"","lastModifiedDate":"2022-03-10"},{"lineNumber":54,"author":{"gitId":"yl-ang"},"content":"                    + \" arbitramur arbitrium arcu augeri captet censes cetero cogitavisse comparare conscientiam\"","lastModifiedDate":"2022-03-10"},{"lineNumber":55,"author":{"gitId":"yl-ang"},"content":"                    + \" contentus cupiditatum deditum democritus depravata deserunt desiderant desistunt detracta\"","lastModifiedDate":"2022-03-10"},{"lineNumber":56,"author":{"gitId":"yl-ang"},"content":"                    + \" didicerimus dirigentur displicet dissensio disseretur distinguique eget elit eo epicurei equos\"","lastModifiedDate":"2022-03-10"},{"lineNumber":57,"author":{"gitId":"yl-ang"},"content":"                    + \" exercitus exorsus fastidium faucibus felis foedus fuissent generis geometrica gravida illam\"","lastModifiedDate":"2022-03-10"},{"lineNumber":58,"author":{"gitId":"yl-ang"},"content":"                    + \" impetus incursione indignae inhaererent initia inquam inter ipsas ipsi iriure lacinia licet\"","lastModifiedDate":"2022-03-10"},{"lineNumber":59,"author":{"gitId":"yl-ang"},"content":"                    + \" mel mi minim mors muniti netus noster nostro occultarum odioque omnino oratoribus oriantur\"","lastModifiedDate":"2022-03-10"},{"lineNumber":60,"author":{"gitId":"yl-ang"},"content":"                    + \" ornateque percipit plura pluribus possint praetulerit privamur probamus procedat propemodum\"","lastModifiedDate":"2022-03-10"},{"lineNumber":61,"author":{"gitId":"yl-ang"},"content":"                    + \" pulchraeque quaerendi quanti quisque rudem sensum sole stultorum successerit successionem\"","lastModifiedDate":"2022-03-10"},{"lineNumber":62,"author":{"gitId":"yl-ang"},"content":"                    + \" suspicor tranquilli unde varias videre voce vulgo \")","lastModifiedDate":"2022-03-10"},{"lineNumber":63,"author":{"gitId":"yl-ang"},"content":"            .withTags(\"Detective\", \"Mystery\", \"Fantasy\", \"Classics\", \"Historical\",","lastModifiedDate":"2022-03-10"},{"lineNumber":64,"author":{"gitId":"yl-ang"},"content":"                    \"Horror\", \"Literary\", \"Romance\", \"Crime\", \"SciFi\", \"Thrillers\", \"Drama\", \"Poetry\", \"Media\",","lastModifiedDate":"2022-03-10"},{"lineNumber":65,"author":{"gitId":"yl-ang"},"content":"                    \"Nonfiction\", \"Horror1\", \"Literary1\", \"Romance1\", \"Crime1\", \"SciFi1\", \"Thrillers1\", \"Drama1\",","lastModifiedDate":"2022-03-10"},{"lineNumber":66,"author":{"gitId":"yl-ang"},"content":"                    \"Poetry1\", \"Media1\" , \"Media2\", \"Media3\", \"Media4\", \"Media5\", \"Media6\", \"Media7\", \"Media8\",","lastModifiedDate":"2022-03-10"},{"lineNumber":67,"author":{"gitId":"yl-ang"},"content":"                    \"Media9\", \"Media10\")","lastModifiedDate":"2022-03-10"},{"lineNumber":68,"author":{"gitId":"yl-ang"},"content":"            .build();","lastModifiedDate":"2022-03-10"},{"lineNumber":69,"author":{"gitId":"yl-ang"},"content":"","lastModifiedDate":"2022-03-10"},{"lineNumber":70,"author":{"gitId":"yl-ang"},"content":"    private LengthyBooks() {} // prevents instantiation","lastModifiedDate":"2022-03-10"},{"lineNumber":71,"author":{"gitId":"yl-ang"},"content":"","lastModifiedDate":"2022-03-10"},{"lineNumber":72,"author":{"gitId":"yl-ang"},"content":"    /**","lastModifiedDate":"2022-03-10"},{"lineNumber":73,"author":{"gitId":"yl-ang"},"content":"     * Returns an {@code AddressBook} with all the lengthy books.","lastModifiedDate":"2022-03-10"},{"lineNumber":74,"author":{"gitId":"yl-ang"},"content":"     */","lastModifiedDate":"2022-03-10"},{"lineNumber":75,"author":{"gitId":"yl-ang"},"content":"    public static AddressBook getLengthyAddressBook() {","lastModifiedDate":"2022-03-10"},{"lineNumber":76,"author":{"gitId":"yl-ang"},"content":"        AddressBook ab \u003d new AddressBook();","lastModifiedDate":"2022-03-10"},{"lineNumber":77,"author":{"gitId":"yl-ang"},"content":"        for (Book book : getLengthyBooks()) {","lastModifiedDate":"2022-03-10"},{"lineNumber":78,"author":{"gitId":"yl-ang"},"content":"            ab.addBook(book);","lastModifiedDate":"2022-03-10"},{"lineNumber":79,"author":{"gitId":"yl-ang"},"content":"        }","lastModifiedDate":"2022-03-10"},{"lineNumber":80,"author":{"gitId":"yl-ang"},"content":"        return ab;","lastModifiedDate":"2022-03-10"},{"lineNumber":81,"author":{"gitId":"yl-ang"},"content":"    }","lastModifiedDate":"2022-03-10"},{"lineNumber":82,"author":{"gitId":"yl-ang"},"content":"","lastModifiedDate":"2022-03-10"},{"lineNumber":83,"author":{"gitId":"yl-ang"},"content":"    public static List\u003cBook\u003e getLengthyBooks() {","lastModifiedDate":"2022-03-10"},{"lineNumber":84,"author":{"gitId":"yl-ang"},"content":"        return new ArrayList\u003c\u003e(Arrays.asList(EIGHT_HUNDRED_LARGE_BOOK, LARGE_BOOK));","lastModifiedDate":"2022-03-10"},{"lineNumber":85,"author":{"gitId":"yl-ang"},"content":"    }","lastModifiedDate":"2022-03-10"},{"lineNumber":86,"author":{"gitId":"yl-ang"},"content":"}","lastModifiedDate":"2022-03-10"}],"authorContributionMap":{"yl-ang":86}},{"path":"src/test/java/seedu/address/testutil/PersonBuilder.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.testutil;","lastModifiedDate":"2016-09-03"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-03"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.util.HashSet;","lastModifiedDate":"2017-12-20"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import java.util.Set;","lastModifiedDate":"2017-04-05"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-04-05"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Email;","lastModifiedDate":"2017-01-18"},{"lineNumber":7,"author":{"gitId":"aditi2313"},"content":"import seedu.address.model.person.Id;","lastModifiedDate":"2022-03-11"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Name;","lastModifiedDate":"2017-01-18"},{"lineNumber":9,"author":{"gitId":"aditi2313"},"content":"import seedu.address.model.person.Patron;","lastModifiedDate":"2022-03-09"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Phone;","lastModifiedDate":"2017-01-18"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import seedu.address.model.tag.Tag;","lastModifiedDate":"2017-04-05"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import seedu.address.model.util.SampleDataUtil;","lastModifiedDate":"2017-04-05"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-03"},{"lineNumber":14,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-09-03"},{"lineNumber":15,"author":{"gitId":"-"},"content":" * A utility class to help with building Person objects.","lastModifiedDate":"2017-04-05"},{"lineNumber":16,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-09-03"},{"lineNumber":17,"author":{"gitId":"-"},"content":"public class PersonBuilder {","lastModifiedDate":"2016-09-03"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-03"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    public static final String DEFAULT_NAME \u003d \"Amy Bee\";","lastModifiedDate":"2020-12-18"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    public static final String DEFAULT_PHONE \u003d \"85355255\";","lastModifiedDate":"2017-04-05"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    public static final String DEFAULT_EMAIL \u003d \"amy@gmail.com\";","lastModifiedDate":"2020-12-18"},{"lineNumber":22,"author":{"gitId":"aditi2313"},"content":"    public static final String DEFAULT_ID \u003d \"A0123456H\";","lastModifiedDate":"2022-03-10"},{"lineNumber":23,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-04-05"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    private Name name;","lastModifiedDate":"2017-12-20"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    private Phone phone;","lastModifiedDate":"2017-12-20"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    private Email email;","lastModifiedDate":"2017-12-20"},{"lineNumber":27,"author":{"gitId":"aditi2313"},"content":"    private Id id;","lastModifiedDate":"2022-03-09"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    private Set\u003cTag\u003e tags;","lastModifiedDate":"2017-12-20"},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-03"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2020-05-27"},{"lineNumber":31,"author":{"gitId":"-"},"content":"     * Creates a {@code PersonBuilder} with the default details.","lastModifiedDate":"2020-05-27"},{"lineNumber":32,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2020-05-27"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    public PersonBuilder() {","lastModifiedDate":"2017-08-15"},{"lineNumber":34,"author":{"gitId":"-"},"content":"        name \u003d new Name(DEFAULT_NAME);","lastModifiedDate":"2017-12-20"},{"lineNumber":35,"author":{"gitId":"-"},"content":"        phone \u003d new Phone(DEFAULT_PHONE);","lastModifiedDate":"2017-12-20"},{"lineNumber":36,"author":{"gitId":"-"},"content":"        email \u003d new Email(DEFAULT_EMAIL);","lastModifiedDate":"2017-12-20"},{"lineNumber":37,"author":{"gitId":"aditi2313"},"content":"        id \u003d new Id(DEFAULT_ID);","lastModifiedDate":"2022-03-09"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        tags \u003d new HashSet\u003c\u003e();","lastModifiedDate":"2018-03-26"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-03"},{"lineNumber":40,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-03"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-12-11"},{"lineNumber":42,"author":{"gitId":"-"},"content":"     * Initializes the PersonBuilder with the data of {@code personToCopy}.","lastModifiedDate":"2016-12-11"},{"lineNumber":43,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-12-11"},{"lineNumber":44,"author":{"gitId":"aditi2313"},"content":"    public PersonBuilder(Patron personToCopy) {","lastModifiedDate":"2022-03-09"},{"lineNumber":45,"author":{"gitId":"-"},"content":"        name \u003d personToCopy.getName();","lastModifiedDate":"2017-12-20"},{"lineNumber":46,"author":{"gitId":"-"},"content":"        phone \u003d personToCopy.getPhone();","lastModifiedDate":"2017-12-20"},{"lineNumber":47,"author":{"gitId":"-"},"content":"        email \u003d personToCopy.getEmail();","lastModifiedDate":"2017-12-20"},{"lineNumber":48,"author":{"gitId":"aditi2313"},"content":"        id \u003d personToCopy.getId();","lastModifiedDate":"2022-03-09"},{"lineNumber":49,"author":{"gitId":"-"},"content":"        tags \u003d new HashSet\u003c\u003e(personToCopy.getTags());","lastModifiedDate":"2017-12-20"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-11"},{"lineNumber":51,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-11"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-07-26"},{"lineNumber":53,"author":{"gitId":"-"},"content":"     * Sets the {@code Name} of the {@code Person} that we are building.","lastModifiedDate":"2017-07-26"},{"lineNumber":54,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-07-26"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    public PersonBuilder withName(String name) {","lastModifiedDate":"2017-08-15"},{"lineNumber":56,"author":{"gitId":"-"},"content":"        this.name \u003d new Name(name);","lastModifiedDate":"2017-12-20"},{"lineNumber":57,"author":{"gitId":"-"},"content":"        return this;","lastModifiedDate":"2016-09-03"},{"lineNumber":58,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-03"},{"lineNumber":59,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-03"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-07-26"},{"lineNumber":61,"author":{"gitId":"-"},"content":"     * Parses the {@code tags} into a {@code Set\u003cTag\u003e} and set it to the {@code Person} that we are building.","lastModifiedDate":"2017-07-26"},{"lineNumber":62,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-07-26"},{"lineNumber":63,"author":{"gitId":"-"},"content":"    public PersonBuilder withTags(String ... tags) {","lastModifiedDate":"2017-08-15"},{"lineNumber":64,"author":{"gitId":"-"},"content":"        this.tags \u003d SampleDataUtil.getTagSet(tags);","lastModifiedDate":"2017-12-20"},{"lineNumber":65,"author":{"gitId":"-"},"content":"        return this;","lastModifiedDate":"2016-09-03"},{"lineNumber":66,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-03"},{"lineNumber":67,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-03"},{"lineNumber":68,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-07-26"},{"lineNumber":69,"author":{"gitId":"-"},"content":"     * Sets the {@code Address} of the {@code Person} that we are building.","lastModifiedDate":"2017-07-26"},{"lineNumber":70,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-07-26"},{"lineNumber":71,"author":{"gitId":"aditi2313"},"content":"    public PersonBuilder withId(String id) {","lastModifiedDate":"2022-03-10"},{"lineNumber":72,"author":{"gitId":"aditi2313"},"content":"        this.id \u003d new Id(id);","lastModifiedDate":"2022-03-10"},{"lineNumber":73,"author":{"gitId":"-"},"content":"        return this;","lastModifiedDate":"2016-09-03"},{"lineNumber":74,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-03"},{"lineNumber":75,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-03"},{"lineNumber":76,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-07-26"},{"lineNumber":77,"author":{"gitId":"-"},"content":"     * Sets the {@code Phone} of the {@code Person} that we are building.","lastModifiedDate":"2017-07-26"},{"lineNumber":78,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-07-26"},{"lineNumber":79,"author":{"gitId":"-"},"content":"    public PersonBuilder withPhone(String phone) {","lastModifiedDate":"2017-08-15"},{"lineNumber":80,"author":{"gitId":"-"},"content":"        this.phone \u003d new Phone(phone);","lastModifiedDate":"2017-12-20"},{"lineNumber":81,"author":{"gitId":"-"},"content":"        return this;","lastModifiedDate":"2016-09-03"},{"lineNumber":82,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-03"},{"lineNumber":83,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-03"},{"lineNumber":84,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-07-26"},{"lineNumber":85,"author":{"gitId":"-"},"content":"     * Sets the {@code Email} of the {@code Person} that we are building.","lastModifiedDate":"2017-07-26"},{"lineNumber":86,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-07-26"},{"lineNumber":87,"author":{"gitId":"-"},"content":"    public PersonBuilder withEmail(String email) {","lastModifiedDate":"2017-08-15"},{"lineNumber":88,"author":{"gitId":"-"},"content":"        this.email \u003d new Email(email);","lastModifiedDate":"2017-12-20"},{"lineNumber":89,"author":{"gitId":"-"},"content":"        return this;","lastModifiedDate":"2016-09-03"},{"lineNumber":90,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-03"},{"lineNumber":91,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-03"},{"lineNumber":92,"author":{"gitId":"aditi2313"},"content":"    public Patron build() {","lastModifiedDate":"2022-03-09"},{"lineNumber":93,"author":{"gitId":"aditi2313"},"content":"        return new Patron(name, phone, email, id, tags);","lastModifiedDate":"2022-03-09"},{"lineNumber":94,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-03"},{"lineNumber":95,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-03"},{"lineNumber":96,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-09-03"}],"authorContributionMap":{"-":85,"aditi2313":11}},{"path":"src/test/java/seedu/address/testutil/PersonUtil.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.testutil;","lastModifiedDate":"2017-04-05"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-04-05"},{"lineNumber":3,"author":{"gitId":"aditi2313"},"content":"import static seedu.address.logic.commands.Command.PATRON_COMMAND_GROUP;","lastModifiedDate":"2022-03-11"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_EMAIL;","lastModifiedDate":"2017-05-09"},{"lineNumber":5,"author":{"gitId":"aditi2313"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_ID;","lastModifiedDate":"2022-03-11"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_NAME;","lastModifiedDate":"2017-06-06"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_PHONE;","lastModifiedDate":"2017-05-09"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_TAG;","lastModifiedDate":"2017-05-09"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-09"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import java.util.Set;","lastModifiedDate":"2018-03-26"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-03-26"},{"lineNumber":12,"author":{"gitId":"aditi2313"},"content":"import seedu.address.logic.commands.Command;","lastModifiedDate":"2022-03-11"},{"lineNumber":13,"author":{"gitId":"aditi2313"},"content":"import seedu.address.logic.commands.patron.EditPatronCommand;","lastModifiedDate":"2022-03-11"},{"lineNumber":14,"author":{"gitId":"aditi2313"},"content":"import seedu.address.model.person.Patron;","lastModifiedDate":"2022-03-09"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import seedu.address.model.tag.Tag;","lastModifiedDate":"2018-03-26"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-04-05"},{"lineNumber":17,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-04-05"},{"lineNumber":18,"author":{"gitId":"-"},"content":" * A utility class for Person.","lastModifiedDate":"2017-04-05"},{"lineNumber":19,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-04-05"},{"lineNumber":20,"author":{"gitId":"-"},"content":"public class PersonUtil {","lastModifiedDate":"2017-04-05"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-04-05"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-04-05"},{"lineNumber":23,"author":{"gitId":"-"},"content":"     * Returns an add command string for adding the {@code person}.","lastModifiedDate":"2017-04-05"},{"lineNumber":24,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-04-05"},{"lineNumber":25,"author":{"gitId":"aditi2313"},"content":"    public static String getAddCommand(Patron person) {","lastModifiedDate":"2022-03-09"},{"lineNumber":26,"author":{"gitId":"aditi2313"},"content":"        return PATRON_COMMAND_GROUP + \" \" + Command.ADD_COMMAND_WORD + \" \" + getPersonDetails(person);","lastModifiedDate":"2022-03-11"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-04-06"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-04-06"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-04-06"},{"lineNumber":30,"author":{"gitId":"-"},"content":"     * Returns the part of command string for the given {@code person}\u0027s details.","lastModifiedDate":"2017-04-06"},{"lineNumber":31,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-04-06"},{"lineNumber":32,"author":{"gitId":"aditi2313"},"content":"    public static String getPersonDetails(Patron person) {","lastModifiedDate":"2022-03-09"},{"lineNumber":33,"author":{"gitId":"-"},"content":"        StringBuilder sb \u003d new StringBuilder();","lastModifiedDate":"2017-04-05"},{"lineNumber":34,"author":{"gitId":"-"},"content":"        sb.append(PREFIX_NAME + person.getName().fullName + \" \");","lastModifiedDate":"2017-06-06"},{"lineNumber":35,"author":{"gitId":"-"},"content":"        sb.append(PREFIX_PHONE + person.getPhone().value + \" \");","lastModifiedDate":"2017-05-09"},{"lineNumber":36,"author":{"gitId":"-"},"content":"        sb.append(PREFIX_EMAIL + person.getEmail().value + \" \");","lastModifiedDate":"2017-05-09"},{"lineNumber":37,"author":{"gitId":"aditi2313"},"content":"        sb.append(PREFIX_ID + person.getId().value + \" \");","lastModifiedDate":"2022-03-09"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        person.getTags().stream().forEach(","lastModifiedDate":"2017-05-09"},{"lineNumber":39,"author":{"gitId":"-"},"content":"            s -\u003e sb.append(PREFIX_TAG + s.tagName + \" \")","lastModifiedDate":"2017-05-09"},{"lineNumber":40,"author":{"gitId":"-"},"content":"        );","lastModifiedDate":"2017-05-09"},{"lineNumber":41,"author":{"gitId":"-"},"content":"        return sb.toString();","lastModifiedDate":"2017-04-05"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-04-05"},{"lineNumber":43,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-03-26"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-03-26"},{"lineNumber":45,"author":{"gitId":"-"},"content":"     * Returns the part of command string for the given {@code EditPersonDescriptor}\u0027s details.","lastModifiedDate":"2018-03-26"},{"lineNumber":46,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-03-26"},{"lineNumber":47,"author":{"gitId":"aditi2313"},"content":"    public static String getEditPersonDescriptorDetails(EditPatronCommand.EditPersonDescriptor descriptor) {","lastModifiedDate":"2022-03-11"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        StringBuilder sb \u003d new StringBuilder();","lastModifiedDate":"2018-03-26"},{"lineNumber":49,"author":{"gitId":"-"},"content":"        descriptor.getName().ifPresent(name -\u003e sb.append(PREFIX_NAME).append(name.fullName).append(\" \"));","lastModifiedDate":"2018-03-26"},{"lineNumber":50,"author":{"gitId":"-"},"content":"        descriptor.getPhone().ifPresent(phone -\u003e sb.append(PREFIX_PHONE).append(phone.value).append(\" \"));","lastModifiedDate":"2018-03-26"},{"lineNumber":51,"author":{"gitId":"-"},"content":"        descriptor.getEmail().ifPresent(email -\u003e sb.append(PREFIX_EMAIL).append(email.value).append(\" \"));","lastModifiedDate":"2018-03-26"},{"lineNumber":52,"author":{"gitId":"aditi2313"},"content":"        descriptor.getId().ifPresent(address -\u003e sb.append(PREFIX_ID).append(address.value).append(\" \"));","lastModifiedDate":"2022-03-09"},{"lineNumber":53,"author":{"gitId":"-"},"content":"        if (descriptor.getTags().isPresent()) {","lastModifiedDate":"2018-03-26"},{"lineNumber":54,"author":{"gitId":"-"},"content":"            Set\u003cTag\u003e tags \u003d descriptor.getTags().get();","lastModifiedDate":"2018-03-26"},{"lineNumber":55,"author":{"gitId":"-"},"content":"            if (tags.isEmpty()) {","lastModifiedDate":"2018-03-26"},{"lineNumber":56,"author":{"gitId":"-"},"content":"                sb.append(PREFIX_TAG);","lastModifiedDate":"2018-03-26"},{"lineNumber":57,"author":{"gitId":"-"},"content":"            } else {","lastModifiedDate":"2018-03-26"},{"lineNumber":58,"author":{"gitId":"-"},"content":"                tags.forEach(s -\u003e sb.append(PREFIX_TAG).append(s.tagName).append(\" \"));","lastModifiedDate":"2018-03-26"},{"lineNumber":59,"author":{"gitId":"-"},"content":"            }","lastModifiedDate":"2018-03-26"},{"lineNumber":60,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-03-26"},{"lineNumber":61,"author":{"gitId":"-"},"content":"        return sb.toString();","lastModifiedDate":"2018-03-26"},{"lineNumber":62,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-03-26"},{"lineNumber":63,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-04-05"}],"authorContributionMap":{"-":52,"aditi2313":11}},{"path":"src/test/java/seedu/address/testutil/TestUtil.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.testutil;","lastModifiedDate":"2016-08-08"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.io.IOException;","lastModifiedDate":"2017-01-19"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import java.nio.file.Files;","lastModifiedDate":"2018-04-21"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-04-21"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.nio.file.Paths;","lastModifiedDate":"2018-04-21"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.index.Index;","lastModifiedDate":"2017-07-30"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2017-07-30"},{"lineNumber":10,"author":{"gitId":"aditi2313"},"content":"import seedu.address.model.person.Patron;","lastModifiedDate":"2022-03-09"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":12,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-08"},{"lineNumber":13,"author":{"gitId":"-"},"content":" * A utility class for test cases.","lastModifiedDate":"2016-08-08"},{"lineNumber":14,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-08"},{"lineNumber":15,"author":{"gitId":"-"},"content":"public class TestUtil {","lastModifiedDate":"2016-08-08"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-10-16"},{"lineNumber":18,"author":{"gitId":"-"},"content":"     * Folder used for temp files created during testing. Ignored by Git.","lastModifiedDate":"2016-10-16"},{"lineNumber":19,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-10-16"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    private static final Path SANDBOX_FOLDER \u003d Paths.get(\"src\", \"test\", \"data\", \"sandbox\");","lastModifiedDate":"2018-04-21"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-08"},{"lineNumber":23,"author":{"gitId":"-"},"content":"     * Appends {@code fileName} to the sandbox folder path and returns the resulting path.","lastModifiedDate":"2018-04-21"},{"lineNumber":24,"author":{"gitId":"-"},"content":"     * Creates the sandbox folder if it doesn\u0027t exist.","lastModifiedDate":"2016-09-28"},{"lineNumber":25,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-08"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    public static Path getFilePathInSandboxFolder(String fileName) {","lastModifiedDate":"2018-04-21"},{"lineNumber":27,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2016-09-28"},{"lineNumber":28,"author":{"gitId":"-"},"content":"            Files.createDirectories(SANDBOX_FOLDER);","lastModifiedDate":"2018-04-21"},{"lineNumber":29,"author":{"gitId":"-"},"content":"        } catch (IOException e) {","lastModifiedDate":"2016-09-28"},{"lineNumber":30,"author":{"gitId":"-"},"content":"            throw new RuntimeException(e);","lastModifiedDate":"2016-09-28"},{"lineNumber":31,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-09-28"},{"lineNumber":32,"author":{"gitId":"-"},"content":"        return SANDBOX_FOLDER.resolve(fileName);","lastModifiedDate":"2018-04-21"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-07-30"},{"lineNumber":36,"author":{"gitId":"-"},"content":"     * Returns the middle index of the person in the {@code model}\u0027s person list.","lastModifiedDate":"2017-07-30"},{"lineNumber":37,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-07-30"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    public static Index getMidIndex(Model model) {","lastModifiedDate":"2017-07-30"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        return Index.fromOneBased(model.getFilteredPersonList().size() / 2);","lastModifiedDate":"2018-08-13"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-07-30"},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-30"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-07-30"},{"lineNumber":43,"author":{"gitId":"-"},"content":"     * Returns the last index of the person in the {@code model}\u0027s person list.","lastModifiedDate":"2017-07-30"},{"lineNumber":44,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-07-30"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    public static Index getLastIndex(Model model) {","lastModifiedDate":"2017-07-30"},{"lineNumber":46,"author":{"gitId":"-"},"content":"        return Index.fromOneBased(model.getFilteredPersonList().size());","lastModifiedDate":"2018-08-13"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-07-30"},{"lineNumber":48,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-30"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-07-30"},{"lineNumber":50,"author":{"gitId":"-"},"content":"     * Returns the person in the {@code model}\u0027s person list at {@code index}.","lastModifiedDate":"2017-07-30"},{"lineNumber":51,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-07-30"},{"lineNumber":52,"author":{"gitId":"aditi2313"},"content":"    public static Patron getPerson(Model model, Index index) {","lastModifiedDate":"2022-03-09"},{"lineNumber":53,"author":{"gitId":"-"},"content":"        return model.getFilteredPersonList().get(index.getZeroBased());","lastModifiedDate":"2018-08-13"},{"lineNumber":54,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-07-30"},{"lineNumber":55,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"}],"authorContributionMap":{"-":53,"aditi2313":2}},{"path":"src/test/java/seedu/address/testutil/TypicalAddressBook.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"bingsen0806"},"content":"package seedu.address.testutil;","lastModifiedDate":"2022-03-10"},{"lineNumber":2,"author":{"gitId":"bingsen0806"},"content":"","lastModifiedDate":"2022-03-10"},{"lineNumber":3,"author":{"gitId":"bingsen0806"},"content":"import static seedu.address.testutil.TypicalBooks.getTypicalBooks;","lastModifiedDate":"2022-03-10"},{"lineNumber":4,"author":{"gitId":"bingsen0806"},"content":"import static seedu.address.testutil.TypicalPersons.getTypicalPersons;","lastModifiedDate":"2022-03-10"},{"lineNumber":5,"author":{"gitId":"bingsen0806"},"content":"","lastModifiedDate":"2022-03-10"},{"lineNumber":6,"author":{"gitId":"bingsen0806"},"content":"import seedu.address.model.AddressBook;","lastModifiedDate":"2022-03-10"},{"lineNumber":7,"author":{"gitId":"bingsen0806"},"content":"import seedu.address.model.book.Book;","lastModifiedDate":"2022-03-10"},{"lineNumber":8,"author":{"gitId":"aditi2313"},"content":"import seedu.address.model.person.Patron;","lastModifiedDate":"2022-03-11"},{"lineNumber":9,"author":{"gitId":"bingsen0806"},"content":"","lastModifiedDate":"2022-03-10"},{"lineNumber":10,"author":{"gitId":"bingsen0806"},"content":"public class TypicalAddressBook {","lastModifiedDate":"2022-03-10"},{"lineNumber":11,"author":{"gitId":"bingsen0806"},"content":"    /**","lastModifiedDate":"2022-03-10"},{"lineNumber":12,"author":{"gitId":"bingsen0806"},"content":"     * Returns an {@code AddressBook} with all the typical persons and books.","lastModifiedDate":"2022-03-10"},{"lineNumber":13,"author":{"gitId":"bingsen0806"},"content":"     *","lastModifiedDate":"2022-03-10"},{"lineNumber":14,"author":{"gitId":"bingsen0806"},"content":"     * @return An {@code AddressBook} with all the typical persons and books.","lastModifiedDate":"2022-03-10"},{"lineNumber":15,"author":{"gitId":"bingsen0806"},"content":"     */","lastModifiedDate":"2022-03-10"},{"lineNumber":16,"author":{"gitId":"bingsen0806"},"content":"    public static AddressBook getTypicalAddressBook() {","lastModifiedDate":"2022-03-10"},{"lineNumber":17,"author":{"gitId":"bingsen0806"},"content":"        AddressBook ab \u003d new AddressBook();","lastModifiedDate":"2022-03-10"},{"lineNumber":18,"author":{"gitId":"aditi2313"},"content":"        for (Patron person : getTypicalPersons()) {","lastModifiedDate":"2022-03-11"},{"lineNumber":19,"author":{"gitId":"bingsen0806"},"content":"            ab.addPerson(person);","lastModifiedDate":"2022-03-10"},{"lineNumber":20,"author":{"gitId":"bingsen0806"},"content":"        }","lastModifiedDate":"2022-03-10"},{"lineNumber":21,"author":{"gitId":"bingsen0806"},"content":"        for (Book book : getTypicalBooks()) {","lastModifiedDate":"2022-03-10"},{"lineNumber":22,"author":{"gitId":"bingsen0806"},"content":"            ab.addBook(book);","lastModifiedDate":"2022-03-10"},{"lineNumber":23,"author":{"gitId":"bingsen0806"},"content":"        }","lastModifiedDate":"2022-03-10"},{"lineNumber":24,"author":{"gitId":"bingsen0806"},"content":"        return ab;","lastModifiedDate":"2022-03-10"},{"lineNumber":25,"author":{"gitId":"bingsen0806"},"content":"    }","lastModifiedDate":"2022-03-10"},{"lineNumber":26,"author":{"gitId":"bingsen0806"},"content":"}","lastModifiedDate":"2022-03-10"}],"authorContributionMap":{"bingsen0806":24,"aditi2313":2}},{"path":"src/test/java/seedu/address/testutil/TypicalBooks.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"bingsen0806"},"content":"package seedu.address.testutil;","lastModifiedDate":"2022-03-09"},{"lineNumber":2,"author":{"gitId":"bingsen0806"},"content":"","lastModifiedDate":"2022-03-09"},{"lineNumber":3,"author":{"gitId":"bingsen0806"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_AUTHOR_JK_ROWLING;","lastModifiedDate":"2022-03-09"},{"lineNumber":4,"author":{"gitId":"bingsen0806"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_AUTHOR_SUZANNE_COLLINS;","lastModifiedDate":"2022-03-09"},{"lineNumber":5,"author":{"gitId":"bingsen0806"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_BOOK_NAME_HARRY_POTTER;","lastModifiedDate":"2022-03-09"},{"lineNumber":6,"author":{"gitId":"bingsen0806"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_BOOK_NAME_HUNGER_GAMES;","lastModifiedDate":"2022-03-09"},{"lineNumber":7,"author":{"gitId":"bingsen0806"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_ISBN_HARRY_POTTER;","lastModifiedDate":"2022-03-09"},{"lineNumber":8,"author":{"gitId":"bingsen0806"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_ISBN_HUNGER_GAMES;","lastModifiedDate":"2022-03-09"},{"lineNumber":9,"author":{"gitId":"bingsen0806"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_TAG_ADVENTURE;","lastModifiedDate":"2022-03-09"},{"lineNumber":10,"author":{"gitId":"bingsen0806"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_TAG_MAGIC;","lastModifiedDate":"2022-03-09"},{"lineNumber":11,"author":{"gitId":"bingsen0806"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_TAG_SCIFI;","lastModifiedDate":"2022-03-09"},{"lineNumber":12,"author":{"gitId":"bingsen0806"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_TAG_THRILLER;","lastModifiedDate":"2022-03-09"},{"lineNumber":13,"author":{"gitId":"bingsen0806"},"content":"","lastModifiedDate":"2022-03-09"},{"lineNumber":14,"author":{"gitId":"bingsen0806"},"content":"import java.util.ArrayList;","lastModifiedDate":"2022-03-09"},{"lineNumber":15,"author":{"gitId":"bingsen0806"},"content":"import java.util.Arrays;","lastModifiedDate":"2022-03-09"},{"lineNumber":16,"author":{"gitId":"bingsen0806"},"content":"import java.util.List;","lastModifiedDate":"2022-03-09"},{"lineNumber":17,"author":{"gitId":"bingsen0806"},"content":"","lastModifiedDate":"2022-03-09"},{"lineNumber":18,"author":{"gitId":"bingsen0806"},"content":"import seedu.address.model.AddressBook;","lastModifiedDate":"2022-03-09"},{"lineNumber":19,"author":{"gitId":"bingsen0806"},"content":"import seedu.address.model.book.Book;","lastModifiedDate":"2022-03-09"},{"lineNumber":20,"author":{"gitId":"bingsen0806"},"content":"","lastModifiedDate":"2022-03-09"},{"lineNumber":21,"author":{"gitId":"bingsen0806"},"content":"/**","lastModifiedDate":"2022-03-09"},{"lineNumber":22,"author":{"gitId":"bingsen0806"},"content":" * A utility class containing a list of {@code Person} objects to be used in tests.","lastModifiedDate":"2022-03-09"},{"lineNumber":23,"author":{"gitId":"bingsen0806"},"content":" */","lastModifiedDate":"2022-03-09"},{"lineNumber":24,"author":{"gitId":"bingsen0806"},"content":"public class TypicalBooks {","lastModifiedDate":"2022-03-09"},{"lineNumber":25,"author":{"gitId":"bingsen0806"},"content":"","lastModifiedDate":"2022-03-09"},{"lineNumber":26,"author":{"gitId":"bingsen0806"},"content":"    public static final Book ALGORITHM \u003d new BookBuilder().withName(\"Introduction to Algorithms\")","lastModifiedDate":"2022-03-09"},{"lineNumber":27,"author":{"gitId":"bingsen0806"},"content":"            .withIsbn(\"978-03-71-88850-6\").withAuthors(\"Cormen\", \"Leiserson\", \"Rivest\", \"Stein\")","lastModifiedDate":"2022-03-09"},{"lineNumber":28,"author":{"gitId":"bingsen0806"},"content":"            .withTags(\"ComputerScience\", \"Mathematics\").build();","lastModifiedDate":"2022-03-09"},{"lineNumber":29,"author":{"gitId":"bingsen0806"},"content":"    public static final Book SEMAPHORE \u003d new BookBuilder().withName(\"The Little Book of Semaphores\")","lastModifiedDate":"2022-03-09"},{"lineNumber":30,"author":{"gitId":"bingsen0806"},"content":"            .withIsbn(\"4992719864\")","lastModifiedDate":"2022-03-09"},{"lineNumber":31,"author":{"gitId":"bingsen0806"},"content":"            .withTags(\"ComputerScience\", \"Technology\").build();","lastModifiedDate":"2022-03-09"},{"lineNumber":32,"author":{"gitId":"bingsen0806"},"content":"    public static final Book MAZE_RUNNER \u003d new BookBuilder().withName(\"The Maze Runner\")","lastModifiedDate":"2022-03-09"},{"lineNumber":33,"author":{"gitId":"bingsen0806"},"content":"            .withIsbn(\"1-474-59282-1\")","lastModifiedDate":"2022-03-09"},{"lineNumber":34,"author":{"gitId":"bingsen0806"},"content":"            .withAuthors(\"James Dashner1\", \"James Dashner2\", \"James Dashner3\").build();","lastModifiedDate":"2022-03-09"},{"lineNumber":35,"author":{"gitId":"bingsen0806"},"content":"    public static final Book AI \u003d new BookBuilder().withName(\"Artificial Intelligence: A Modern Approach\")","lastModifiedDate":"2022-03-09"},{"lineNumber":36,"author":{"gitId":"bingsen0806"},"content":"            .withIsbn(\"9780131038059\")","lastModifiedDate":"2022-03-09"},{"lineNumber":37,"author":{"gitId":"bingsen0806"},"content":"            .withAuthors(\"Peter Norvig\", \"Stuart J. Russell\")","lastModifiedDate":"2022-03-09"},{"lineNumber":38,"author":{"gitId":"bingsen0806"},"content":"            .withTags(\"Technology\")","lastModifiedDate":"2022-03-09"},{"lineNumber":39,"author":{"gitId":"bingsen0806"},"content":"            .build();","lastModifiedDate":"2022-03-09"},{"lineNumber":40,"author":{"gitId":"bingsen0806"},"content":"    public static final Book CINDERELLA \u003d new BookBuilder().withName(\"Cinderella\")","lastModifiedDate":"2022-03-09"},{"lineNumber":41,"author":{"gitId":"bingsen0806"},"content":"            .withIsbn(\"9781409580454\")","lastModifiedDate":"2022-03-09"},{"lineNumber":42,"author":{"gitId":"bingsen0806"},"content":"            .build();","lastModifiedDate":"2022-03-09"},{"lineNumber":43,"author":{"gitId":"bingsen0806"},"content":"","lastModifiedDate":"2022-03-09"},{"lineNumber":44,"author":{"gitId":"bingsen0806"},"content":"    // Manually added - Book\u0027s details found in {@code CommandTestUtil}","lastModifiedDate":"2022-03-09"},{"lineNumber":45,"author":{"gitId":"bingsen0806"},"content":"    public static final Book HARRY_POTTER \u003d new BookBuilder().withName(VALID_BOOK_NAME_HARRY_POTTER)","lastModifiedDate":"2022-03-09"},{"lineNumber":46,"author":{"gitId":"bingsen0806"},"content":"            .withIsbn(VALID_ISBN_HARRY_POTTER)","lastModifiedDate":"2022-03-09"},{"lineNumber":47,"author":{"gitId":"bingsen0806"},"content":"            .withAuthors(VALID_AUTHOR_JK_ROWLING)","lastModifiedDate":"2022-03-09"},{"lineNumber":48,"author":{"gitId":"bingsen0806"},"content":"            .withTags(VALID_TAG_ADVENTURE, VALID_TAG_MAGIC).build();","lastModifiedDate":"2022-03-09"},{"lineNumber":49,"author":{"gitId":"bingsen0806"},"content":"    public static final Book HUNGER_GAMES \u003d new BookBuilder().withName(VALID_BOOK_NAME_HUNGER_GAMES)","lastModifiedDate":"2022-03-09"},{"lineNumber":50,"author":{"gitId":"bingsen0806"},"content":"            .withIsbn(VALID_ISBN_HUNGER_GAMES)","lastModifiedDate":"2022-03-09"},{"lineNumber":51,"author":{"gitId":"bingsen0806"},"content":"            .withAuthors(VALID_AUTHOR_SUZANNE_COLLINS)","lastModifiedDate":"2022-03-09"},{"lineNumber":52,"author":{"gitId":"bingsen0806"},"content":"            .withTags(VALID_TAG_THRILLER, VALID_TAG_SCIFI, VALID_TAG_ADVENTURE).build();","lastModifiedDate":"2022-03-09"},{"lineNumber":53,"author":{"gitId":"bingsen0806"},"content":"","lastModifiedDate":"2022-03-09"},{"lineNumber":54,"author":{"gitId":"bingsen0806"},"content":"    private TypicalBooks() {} // prevents instantiation","lastModifiedDate":"2022-03-09"},{"lineNumber":55,"author":{"gitId":"bingsen0806"},"content":"","lastModifiedDate":"2022-03-09"},{"lineNumber":56,"author":{"gitId":"bingsen0806"},"content":"    /**","lastModifiedDate":"2022-03-09"},{"lineNumber":57,"author":{"gitId":"yl-ang"},"content":"     * Returns an {@code AddressBook} with all the typical books.","lastModifiedDate":"2022-03-10"},{"lineNumber":58,"author":{"gitId":"bingsen0806"},"content":"     */","lastModifiedDate":"2022-03-09"},{"lineNumber":59,"author":{"gitId":"bingsen0806"},"content":"    public static AddressBook getTypicalAddressBook() {","lastModifiedDate":"2022-03-09"},{"lineNumber":60,"author":{"gitId":"bingsen0806"},"content":"        AddressBook ab \u003d new AddressBook();","lastModifiedDate":"2022-03-09"},{"lineNumber":61,"author":{"gitId":"bingsen0806"},"content":"        for (Book book : getTypicalBooks()) {","lastModifiedDate":"2022-03-09"},{"lineNumber":62,"author":{"gitId":"bingsen0806"},"content":"            ab.addBook(book);","lastModifiedDate":"2022-03-09"},{"lineNumber":63,"author":{"gitId":"bingsen0806"},"content":"        }","lastModifiedDate":"2022-03-09"},{"lineNumber":64,"author":{"gitId":"bingsen0806"},"content":"        return ab;","lastModifiedDate":"2022-03-09"},{"lineNumber":65,"author":{"gitId":"bingsen0806"},"content":"    }","lastModifiedDate":"2022-03-09"},{"lineNumber":66,"author":{"gitId":"bingsen0806"},"content":"","lastModifiedDate":"2022-03-09"},{"lineNumber":67,"author":{"gitId":"bingsen0806"},"content":"    public static List\u003cBook\u003e getTypicalBooks() {","lastModifiedDate":"2022-03-09"},{"lineNumber":68,"author":{"gitId":"bingsen0806"},"content":"        return new ArrayList\u003c\u003e(Arrays.asList(ALGORITHM, SEMAPHORE, MAZE_RUNNER, AI, CINDERELLA));","lastModifiedDate":"2022-03-09"},{"lineNumber":69,"author":{"gitId":"bingsen0806"},"content":"    }","lastModifiedDate":"2022-03-09"},{"lineNumber":70,"author":{"gitId":"bingsen0806"},"content":"}","lastModifiedDate":"2022-03-09"}],"authorContributionMap":{"yl-ang":1,"bingsen0806":69}},{"path":"src/test/java/seedu/address/testutil/TypicalIndexes.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.testutil;","lastModifiedDate":"2017-08-05"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-08-05"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.index.Index;","lastModifiedDate":"2017-08-05"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-08-05"},{"lineNumber":5,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-08-05"},{"lineNumber":6,"author":{"gitId":"-"},"content":" * A utility class containing a list of {@code Index} objects to be used in tests.","lastModifiedDate":"2017-08-05"},{"lineNumber":7,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-08-05"},{"lineNumber":8,"author":{"gitId":"-"},"content":"public class TypicalIndexes {","lastModifiedDate":"2017-08-05"},{"lineNumber":9,"author":{"gitId":"-"},"content":"    public static final Index INDEX_FIRST_PERSON \u003d Index.fromOneBased(1);","lastModifiedDate":"2017-08-05"},{"lineNumber":10,"author":{"gitId":"-"},"content":"    public static final Index INDEX_SECOND_PERSON \u003d Index.fromOneBased(2);","lastModifiedDate":"2017-08-05"},{"lineNumber":11,"author":{"gitId":"-"},"content":"    public static final Index INDEX_THIRD_PERSON \u003d Index.fromOneBased(3);","lastModifiedDate":"2017-08-05"},{"lineNumber":12,"author":{"gitId":"yuqitanyq"},"content":"","lastModifiedDate":"2022-03-12"},{"lineNumber":13,"author":{"gitId":"yuqitanyq"},"content":"    public static final Index INDEX_FIRST_BOOK \u003d Index.fromOneBased(1);","lastModifiedDate":"2022-03-12"},{"lineNumber":14,"author":{"gitId":"yuqitanyq"},"content":"    public static final Index INDEX_SECOND_BOOK \u003d Index.fromOneBased(2);","lastModifiedDate":"2022-03-12"},{"lineNumber":15,"author":{"gitId":"yuqitanyq"},"content":"    public static final Index INDEX_THIRD_BOOK \u003d Index.fromOneBased(3);","lastModifiedDate":"2022-03-12"},{"lineNumber":16,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-08-05"}],"authorContributionMap":{"yuqitanyq":4,"-":12}},{"path":"src/test/java/seedu/address/testutil/TypicalPersons.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.testutil;","lastModifiedDate":"2016-09-13"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-13"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_EMAIL_AMY;","lastModifiedDate":"2017-08-22"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_EMAIL_BOB;","lastModifiedDate":"2017-08-22"},{"lineNumber":5,"author":{"gitId":"aditi2313"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_ID_AMY;","lastModifiedDate":"2022-03-11"},{"lineNumber":6,"author":{"gitId":"aditi2313"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_ID_BOB;","lastModifiedDate":"2022-03-11"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_NAME_AMY;","lastModifiedDate":"2017-08-22"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_NAME_BOB;","lastModifiedDate":"2017-08-22"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_PHONE_AMY;","lastModifiedDate":"2017-08-22"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_PHONE_BOB;","lastModifiedDate":"2017-08-22"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_TAG_FRIEND;","lastModifiedDate":"2017-08-22"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_TAG_HUSBAND;","lastModifiedDate":"2017-08-22"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-08-22"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import java.util.ArrayList;","lastModifiedDate":"2017-08-07"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import java.util.Arrays;","lastModifiedDate":"2017-08-07"},{"lineNumber":16,"author":{"gitId":"-"},"content":"import java.util.List;","lastModifiedDate":"2017-08-07"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-08-07"},{"lineNumber":18,"author":{"gitId":"aditi2313"},"content":"import seedu.address.model.person.Patron;","lastModifiedDate":"2022-03-09"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-13"},{"lineNumber":20,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-09-13"},{"lineNumber":21,"author":{"gitId":"-"},"content":" * A utility class containing a list of {@code Person} objects to be used in tests.","lastModifiedDate":"2017-08-05"},{"lineNumber":22,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-09-13"},{"lineNumber":23,"author":{"gitId":"-"},"content":"public class TypicalPersons {","lastModifiedDate":"2017-04-05"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-13"},{"lineNumber":25,"author":{"gitId":"aditi2313"},"content":"    public static final Patron ALICE \u003d new PersonBuilder().withName(\"Alice Pauline\")","lastModifiedDate":"2022-03-09"},{"lineNumber":26,"author":{"gitId":"aditi2313"},"content":"            .withId(\"A0123456H\").withEmail(\"alice@example.com\")","lastModifiedDate":"2022-03-10"},{"lineNumber":27,"author":{"gitId":"-"},"content":"            .withPhone(\"94351253\")","lastModifiedDate":"2018-04-19"},{"lineNumber":28,"author":{"gitId":"-"},"content":"            .withTags(\"friends\").build();","lastModifiedDate":"2016-09-13"},{"lineNumber":29,"author":{"gitId":"aditi2313"},"content":"    public static final Patron BENSON \u003d new PersonBuilder().withName(\"Benson Meier\")","lastModifiedDate":"2022-03-09"},{"lineNumber":30,"author":{"gitId":"aditi2313"},"content":"            .withId(\"A0123456H\")","lastModifiedDate":"2022-03-10"},{"lineNumber":31,"author":{"gitId":"-"},"content":"            .withEmail(\"johnd@example.com\").withPhone(\"98765432\")","lastModifiedDate":"2017-04-05"},{"lineNumber":32,"author":{"gitId":"-"},"content":"            .withTags(\"owesMoney\", \"friends\").build();","lastModifiedDate":"2016-09-13"},{"lineNumber":33,"author":{"gitId":"aditi2313"},"content":"    public static final Patron CARL \u003d new PersonBuilder().withName(\"Carl Kurz\").withPhone(\"95352563\")","lastModifiedDate":"2022-03-09"},{"lineNumber":34,"author":{"gitId":"aditi2313"},"content":"            .withEmail(\"heinz@example.com\").withId(\"A0123456H\").build();","lastModifiedDate":"2022-03-10"},{"lineNumber":35,"author":{"gitId":"aditi2313"},"content":"    public static final Patron DANIEL \u003d new PersonBuilder().withName(\"Daniel Meier\").withPhone(\"87652533\")","lastModifiedDate":"2022-03-09"},{"lineNumber":36,"author":{"gitId":"aditi2313"},"content":"            .withEmail(\"cornelia@example.com\").withId(\"A0123456H\").withTags(\"friends\").build();","lastModifiedDate":"2022-03-10"},{"lineNumber":37,"author":{"gitId":"aditi2313"},"content":"    public static final Patron ELLE \u003d new PersonBuilder().withName(\"Elle Meyer\").withPhone(\"9482224\")","lastModifiedDate":"2022-03-09"},{"lineNumber":38,"author":{"gitId":"aditi2313"},"content":"            .withEmail(\"werner@example.com\").withId(\"A0123456H\").build();","lastModifiedDate":"2022-03-10"},{"lineNumber":39,"author":{"gitId":"aditi2313"},"content":"    public static final Patron FIONA \u003d new PersonBuilder().withName(\"Fiona Kunz\").withPhone(\"9482427\")","lastModifiedDate":"2022-03-09"},{"lineNumber":40,"author":{"gitId":"aditi2313"},"content":"            .withEmail(\"lydia@example.com\").withId(\"A0123456H\").build();","lastModifiedDate":"2022-03-10"},{"lineNumber":41,"author":{"gitId":"aditi2313"},"content":"    public static final Patron GEORGE \u003d new PersonBuilder().withName(\"George Best\").withPhone(\"9482442\")","lastModifiedDate":"2022-03-09"},{"lineNumber":42,"author":{"gitId":"aditi2313"},"content":"            .withEmail(\"anna@example.com\").withId(\"A0123456H\").build();","lastModifiedDate":"2022-03-10"},{"lineNumber":43,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-13"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    // Manually added","lastModifiedDate":"2016-09-13"},{"lineNumber":45,"author":{"gitId":"aditi2313"},"content":"    public static final Patron HOON \u003d new PersonBuilder().withName(\"Hoon Meier\").withPhone(\"8482424\")","lastModifiedDate":"2022-03-09"},{"lineNumber":46,"author":{"gitId":"aditi2313"},"content":"            .withEmail(\"stefan@example.com\").withId(\"A0123456H\").build();","lastModifiedDate":"2022-03-10"},{"lineNumber":47,"author":{"gitId":"aditi2313"},"content":"    public static final Patron IDA \u003d new PersonBuilder().withName(\"Ida Mueller\").withPhone(\"8482131\")","lastModifiedDate":"2022-03-09"},{"lineNumber":48,"author":{"gitId":"aditi2313"},"content":"            .withEmail(\"hans@example.com\").withId(\"A0123456H\").build();","lastModifiedDate":"2022-03-10"},{"lineNumber":49,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-08-22"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    // Manually added - Person\u0027s details found in {@code CommandTestUtil}","lastModifiedDate":"2017-08-22"},{"lineNumber":51,"author":{"gitId":"aditi2313"},"content":"    public static final Patron AMY \u003d new PersonBuilder().withName(VALID_NAME_AMY).withPhone(VALID_PHONE_AMY)","lastModifiedDate":"2022-03-09"},{"lineNumber":52,"author":{"gitId":"aditi2313"},"content":"            .withEmail(VALID_EMAIL_AMY).withId(VALID_ID_AMY).withTags(VALID_TAG_FRIEND).build();","lastModifiedDate":"2022-03-09"},{"lineNumber":53,"author":{"gitId":"aditi2313"},"content":"    public static final Patron BOB \u003d new PersonBuilder().withName(VALID_NAME_BOB).withPhone(VALID_PHONE_BOB)","lastModifiedDate":"2022-03-09"},{"lineNumber":54,"author":{"gitId":"aditi2313"},"content":"            .withEmail(VALID_EMAIL_BOB).withId(VALID_ID_BOB).withTags(VALID_TAG_HUSBAND, VALID_TAG_FRIEND)","lastModifiedDate":"2022-03-09"},{"lineNumber":55,"author":{"gitId":"-"},"content":"            .build();","lastModifiedDate":"2017-09-21"},{"lineNumber":56,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-09-21"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    public static final String KEYWORD_MATCHING_MEIER \u003d \"Meier\"; // A keyword that matches MEIER","lastModifiedDate":"2017-09-21"},{"lineNumber":58,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-13"},{"lineNumber":59,"author":{"gitId":"-"},"content":"    private TypicalPersons() {} // prevents instantiation","lastModifiedDate":"2017-07-20"},{"lineNumber":60,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-20"},{"lineNumber":61,"author":{"gitId":"aditi2313"},"content":"    public static List\u003cPatron\u003e getTypicalPersons() {","lastModifiedDate":"2022-03-09"},{"lineNumber":62,"author":{"gitId":"-"},"content":"        return new ArrayList\u003c\u003e(Arrays.asList(ALICE, BENSON, CARL, DANIEL, ELLE, FIONA, GEORGE));","lastModifiedDate":"2017-08-07"},{"lineNumber":63,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-08-04"},{"lineNumber":64,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-09-13"}],"authorContributionMap":{"-":38,"aditi2313":26}}]
